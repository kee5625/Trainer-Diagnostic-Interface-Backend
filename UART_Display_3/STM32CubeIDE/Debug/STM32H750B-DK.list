
STM32H750B-DK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bootloader   0000227c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .isr_vector   00000298  90000000  90000000  00004000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         0002e28c  900002a0  900002a0  000042a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000041d0  9002e530  9002e530  00032530  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000170  90032700  90032700  00036700  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  90032870  90032870  000f4368  2**0
                  CONTENTS
  6 .ARM          00000008  90032870  90032870  00036870  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .preinit_array 00000000  90032878  90032878  000f4368  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   00000018  90032878  90032878  00036878  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   00000008  90032890  90032890  00036890  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         00000168  24000000  90032898  00037000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 TouchGFX_MCU_Data_OutBuffer1 00002d00  24000180  90032a00  00037180  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 12 TouchGFX_MCU_Data_OutBuffer0 00002d00  24002e80  90035700  00039e80  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferA 00000100  24005b80  90038400  0003cb80  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 TouchGFX_ScratchbufferB 00000100  24005c80  90038500  0003cc80  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 15 .bss          0001cbcc  24005d80  90038600  0003cd80  2**3
                  ALLOC
 16 ._user_heap_stack 00002004  2402294c  90038600  0003d94c  2**0
                  ALLOC
 17 .ARM.attributes 0000002e  00000000  00000000  000f4368  2**0
                  CONTENTS, READONLY
 18 FontFlashSection 000054e0  90200000  90200000  0003d000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 19 TextFlashSection 00000130  902054e0  902054e0  000424e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 20 ExtFlashSection 000b1d58  90205610  90205610  00042610  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 21 TouchGFX_Framebuffer 000bf400  d0000000  d0000000  000f5000  2**2
                  ALLOC
 22 .debug_line   00081c33  00000000  00000000  000f4396  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line_str 0000006b  00000000  00000000  00175fc9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_info   000f8ef7  00000000  00000000  00176034  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_abbrev 00019d6a  00000000  00000000  0026ef2b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_aranges 00003b60  00000000  00000000  00288c98  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_str    001ac013  00000000  00000000  0028c7f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_rnglists 00007ae8  00000000  00000000  0043880b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_macro  0004c023  00000000  00000000  004402f3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 30 .comment      000000c2  00000000  00000000  0048c316  2**0
                  CONTENTS, READONLY
 31 .debug_frame  0000b5bc  00000000  00000000  0048c3d8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 32 .debug_loclists 0003e0e5  00000000  00000000  00497994  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

900002a0 <__do_global_dtors_aux>:
900002a0:	b510      	push	{r4, lr}
900002a2:	4c05      	ldr	r4, [pc, #20]	@ (900002b8 <__do_global_dtors_aux+0x18>)
900002a4:	7823      	ldrb	r3, [r4, #0]
900002a6:	b933      	cbnz	r3, 900002b6 <__do_global_dtors_aux+0x16>
900002a8:	4b04      	ldr	r3, [pc, #16]	@ (900002bc <__do_global_dtors_aux+0x1c>)
900002aa:	b113      	cbz	r3, 900002b2 <__do_global_dtors_aux+0x12>
900002ac:	4804      	ldr	r0, [pc, #16]	@ (900002c0 <__do_global_dtors_aux+0x20>)
900002ae:	f3af 8000 	nop.w
900002b2:	2301      	movs	r3, #1
900002b4:	7023      	strb	r3, [r4, #0]
900002b6:	bd10      	pop	{r4, pc}
900002b8:	24005d80 	.word	0x24005d80
900002bc:	00000000 	.word	0x00000000
900002c0:	9002e514 	.word	0x9002e514

900002c4 <frame_dummy>:
900002c4:	b508      	push	{r3, lr}
900002c6:	4b03      	ldr	r3, [pc, #12]	@ (900002d4 <frame_dummy+0x10>)
900002c8:	b11b      	cbz	r3, 900002d2 <frame_dummy+0xe>
900002ca:	4903      	ldr	r1, [pc, #12]	@ (900002d8 <frame_dummy+0x14>)
900002cc:	4803      	ldr	r0, [pc, #12]	@ (900002dc <frame_dummy+0x18>)
900002ce:	f3af 8000 	nop.w
900002d2:	bd08      	pop	{r3, pc}
900002d4:	00000000 	.word	0x00000000
900002d8:	24005d84 	.word	0x24005d84
900002dc:	9002e514 	.word	0x9002e514

900002e0 <strlen>:
900002e0:	4603      	mov	r3, r0
900002e2:	f813 2b01 	ldrb.w	r2, [r3], #1
900002e6:	2a00      	cmp	r2, #0
900002e8:	d1fb      	bne.n	900002e2 <strlen+0x2>
900002ea:	1a18      	subs	r0, r3, r0
900002ec:	3801      	subs	r0, #1
900002ee:	4770      	bx	lr

900002f0 <memchr>:
900002f0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
900002f4:	2a10      	cmp	r2, #16
900002f6:	db2b      	blt.n	90000350 <memchr+0x60>
900002f8:	f010 0f07 	tst.w	r0, #7
900002fc:	d008      	beq.n	90000310 <memchr+0x20>
900002fe:	f810 3b01 	ldrb.w	r3, [r0], #1
90000302:	3a01      	subs	r2, #1
90000304:	428b      	cmp	r3, r1
90000306:	d02d      	beq.n	90000364 <memchr+0x74>
90000308:	f010 0f07 	tst.w	r0, #7
9000030c:	b342      	cbz	r2, 90000360 <memchr+0x70>
9000030e:	d1f6      	bne.n	900002fe <memchr+0xe>
90000310:	b4f0      	push	{r4, r5, r6, r7}
90000312:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
90000316:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
9000031a:	f022 0407 	bic.w	r4, r2, #7
9000031e:	f07f 0700 	mvns.w	r7, #0
90000322:	2300      	movs	r3, #0
90000324:	e8f0 5602 	ldrd	r5, r6, [r0], #8
90000328:	3c08      	subs	r4, #8
9000032a:	ea85 0501 	eor.w	r5, r5, r1
9000032e:	ea86 0601 	eor.w	r6, r6, r1
90000332:	fa85 f547 	uadd8	r5, r5, r7
90000336:	faa3 f587 	sel	r5, r3, r7
9000033a:	fa86 f647 	uadd8	r6, r6, r7
9000033e:	faa5 f687 	sel	r6, r5, r7
90000342:	b98e      	cbnz	r6, 90000368 <memchr+0x78>
90000344:	d1ee      	bne.n	90000324 <memchr+0x34>
90000346:	bcf0      	pop	{r4, r5, r6, r7}
90000348:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
9000034c:	f002 0207 	and.w	r2, r2, #7
90000350:	b132      	cbz	r2, 90000360 <memchr+0x70>
90000352:	f810 3b01 	ldrb.w	r3, [r0], #1
90000356:	3a01      	subs	r2, #1
90000358:	ea83 0301 	eor.w	r3, r3, r1
9000035c:	b113      	cbz	r3, 90000364 <memchr+0x74>
9000035e:	d1f8      	bne.n	90000352 <memchr+0x62>
90000360:	2000      	movs	r0, #0
90000362:	4770      	bx	lr
90000364:	3801      	subs	r0, #1
90000366:	4770      	bx	lr
90000368:	2d00      	cmp	r5, #0
9000036a:	bf06      	itte	eq
9000036c:	4635      	moveq	r5, r6
9000036e:	3803      	subeq	r0, #3
90000370:	3807      	subne	r0, #7
90000372:	f015 0f01 	tst.w	r5, #1
90000376:	d107      	bne.n	90000388 <memchr+0x98>
90000378:	3001      	adds	r0, #1
9000037a:	f415 7f80 	tst.w	r5, #256	@ 0x100
9000037e:	bf02      	ittt	eq
90000380:	3001      	addeq	r0, #1
90000382:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
90000386:	3001      	addeq	r0, #1
90000388:	bcf0      	pop	{r4, r5, r6, r7}
9000038a:	3801      	subs	r0, #1
9000038c:	4770      	bx	lr
9000038e:	bf00      	nop

90000390 <__aeabi_drsub>:
90000390:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
90000394:	e002      	b.n	9000039c <__adddf3>
90000396:	bf00      	nop

90000398 <__aeabi_dsub>:
90000398:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

9000039c <__adddf3>:
9000039c:	b530      	push	{r4, r5, lr}
9000039e:	ea4f 0441 	mov.w	r4, r1, lsl #1
900003a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
900003a6:	ea94 0f05 	teq	r4, r5
900003aa:	bf08      	it	eq
900003ac:	ea90 0f02 	teqeq	r0, r2
900003b0:	bf1f      	itttt	ne
900003b2:	ea54 0c00 	orrsne.w	ip, r4, r0
900003b6:	ea55 0c02 	orrsne.w	ip, r5, r2
900003ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
900003be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
900003c2:	f000 80e2 	beq.w	9000058a <__adddf3+0x1ee>
900003c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
900003ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
900003ce:	bfb8      	it	lt
900003d0:	426d      	neglt	r5, r5
900003d2:	dd0c      	ble.n	900003ee <__adddf3+0x52>
900003d4:	442c      	add	r4, r5
900003d6:	ea80 0202 	eor.w	r2, r0, r2
900003da:	ea81 0303 	eor.w	r3, r1, r3
900003de:	ea82 0000 	eor.w	r0, r2, r0
900003e2:	ea83 0101 	eor.w	r1, r3, r1
900003e6:	ea80 0202 	eor.w	r2, r0, r2
900003ea:	ea81 0303 	eor.w	r3, r1, r3
900003ee:	2d36      	cmp	r5, #54	@ 0x36
900003f0:	bf88      	it	hi
900003f2:	bd30      	pophi	{r4, r5, pc}
900003f4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
900003f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
900003fc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
90000400:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
90000404:	d002      	beq.n	9000040c <__adddf3+0x70>
90000406:	4240      	negs	r0, r0
90000408:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
9000040c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
90000410:	ea4f 3303 	mov.w	r3, r3, lsl #12
90000414:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
90000418:	d002      	beq.n	90000420 <__adddf3+0x84>
9000041a:	4252      	negs	r2, r2
9000041c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000420:	ea94 0f05 	teq	r4, r5
90000424:	f000 80a7 	beq.w	90000576 <__adddf3+0x1da>
90000428:	f1a4 0401 	sub.w	r4, r4, #1
9000042c:	f1d5 0e20 	rsbs	lr, r5, #32
90000430:	db0d      	blt.n	9000044e <__adddf3+0xb2>
90000432:	fa02 fc0e 	lsl.w	ip, r2, lr
90000436:	fa22 f205 	lsr.w	r2, r2, r5
9000043a:	1880      	adds	r0, r0, r2
9000043c:	f141 0100 	adc.w	r1, r1, #0
90000440:	fa03 f20e 	lsl.w	r2, r3, lr
90000444:	1880      	adds	r0, r0, r2
90000446:	fa43 f305 	asr.w	r3, r3, r5
9000044a:	4159      	adcs	r1, r3
9000044c:	e00e      	b.n	9000046c <__adddf3+0xd0>
9000044e:	f1a5 0520 	sub.w	r5, r5, #32
90000452:	f10e 0e20 	add.w	lr, lr, #32
90000456:	2a01      	cmp	r2, #1
90000458:	fa03 fc0e 	lsl.w	ip, r3, lr
9000045c:	bf28      	it	cs
9000045e:	f04c 0c02 	orrcs.w	ip, ip, #2
90000462:	fa43 f305 	asr.w	r3, r3, r5
90000466:	18c0      	adds	r0, r0, r3
90000468:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
9000046c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
90000470:	d507      	bpl.n	90000482 <__adddf3+0xe6>
90000472:	f04f 0e00 	mov.w	lr, #0
90000476:	f1dc 0c00 	rsbs	ip, ip, #0
9000047a:	eb7e 0000 	sbcs.w	r0, lr, r0
9000047e:	eb6e 0101 	sbc.w	r1, lr, r1
90000482:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
90000486:	d31b      	bcc.n	900004c0 <__adddf3+0x124>
90000488:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000048c:	d30c      	bcc.n	900004a8 <__adddf3+0x10c>
9000048e:	0849      	lsrs	r1, r1, #1
90000490:	ea5f 0030 	movs.w	r0, r0, rrx
90000494:	ea4f 0c3c 	mov.w	ip, ip, rrx
90000498:	f104 0401 	add.w	r4, r4, #1
9000049c:	ea4f 5244 	mov.w	r2, r4, lsl #21
900004a0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
900004a4:	f080 809a 	bcs.w	900005dc <__adddf3+0x240>
900004a8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
900004ac:	bf08      	it	eq
900004ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
900004b2:	f150 0000 	adcs.w	r0, r0, #0
900004b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
900004ba:	ea41 0105 	orr.w	r1, r1, r5
900004be:	bd30      	pop	{r4, r5, pc}
900004c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
900004c4:	4140      	adcs	r0, r0
900004c6:	eb41 0101 	adc.w	r1, r1, r1
900004ca:	3c01      	subs	r4, #1
900004cc:	bf28      	it	cs
900004ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
900004d2:	d2e9      	bcs.n	900004a8 <__adddf3+0x10c>
900004d4:	f091 0f00 	teq	r1, #0
900004d8:	bf04      	itt	eq
900004da:	4601      	moveq	r1, r0
900004dc:	2000      	moveq	r0, #0
900004de:	fab1 f381 	clz	r3, r1
900004e2:	bf08      	it	eq
900004e4:	3320      	addeq	r3, #32
900004e6:	f1a3 030b 	sub.w	r3, r3, #11
900004ea:	f1b3 0220 	subs.w	r2, r3, #32
900004ee:	da0c      	bge.n	9000050a <__adddf3+0x16e>
900004f0:	320c      	adds	r2, #12
900004f2:	dd08      	ble.n	90000506 <__adddf3+0x16a>
900004f4:	f102 0c14 	add.w	ip, r2, #20
900004f8:	f1c2 020c 	rsb	r2, r2, #12
900004fc:	fa01 f00c 	lsl.w	r0, r1, ip
90000500:	fa21 f102 	lsr.w	r1, r1, r2
90000504:	e00c      	b.n	90000520 <__adddf3+0x184>
90000506:	f102 0214 	add.w	r2, r2, #20
9000050a:	bfd8      	it	le
9000050c:	f1c2 0c20 	rsble	ip, r2, #32
90000510:	fa01 f102 	lsl.w	r1, r1, r2
90000514:	fa20 fc0c 	lsr.w	ip, r0, ip
90000518:	bfdc      	itt	le
9000051a:	ea41 010c 	orrle.w	r1, r1, ip
9000051e:	4090      	lslle	r0, r2
90000520:	1ae4      	subs	r4, r4, r3
90000522:	bfa2      	ittt	ge
90000524:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
90000528:	4329      	orrge	r1, r5
9000052a:	bd30      	popge	{r4, r5, pc}
9000052c:	ea6f 0404 	mvn.w	r4, r4
90000530:	3c1f      	subs	r4, #31
90000532:	da1c      	bge.n	9000056e <__adddf3+0x1d2>
90000534:	340c      	adds	r4, #12
90000536:	dc0e      	bgt.n	90000556 <__adddf3+0x1ba>
90000538:	f104 0414 	add.w	r4, r4, #20
9000053c:	f1c4 0220 	rsb	r2, r4, #32
90000540:	fa20 f004 	lsr.w	r0, r0, r4
90000544:	fa01 f302 	lsl.w	r3, r1, r2
90000548:	ea40 0003 	orr.w	r0, r0, r3
9000054c:	fa21 f304 	lsr.w	r3, r1, r4
90000550:	ea45 0103 	orr.w	r1, r5, r3
90000554:	bd30      	pop	{r4, r5, pc}
90000556:	f1c4 040c 	rsb	r4, r4, #12
9000055a:	f1c4 0220 	rsb	r2, r4, #32
9000055e:	fa20 f002 	lsr.w	r0, r0, r2
90000562:	fa01 f304 	lsl.w	r3, r1, r4
90000566:	ea40 0003 	orr.w	r0, r0, r3
9000056a:	4629      	mov	r1, r5
9000056c:	bd30      	pop	{r4, r5, pc}
9000056e:	fa21 f004 	lsr.w	r0, r1, r4
90000572:	4629      	mov	r1, r5
90000574:	bd30      	pop	{r4, r5, pc}
90000576:	f094 0f00 	teq	r4, #0
9000057a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
9000057e:	bf06      	itte	eq
90000580:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
90000584:	3401      	addeq	r4, #1
90000586:	3d01      	subne	r5, #1
90000588:	e74e      	b.n	90000428 <__adddf3+0x8c>
9000058a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
9000058e:	bf18      	it	ne
90000590:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
90000594:	d029      	beq.n	900005ea <__adddf3+0x24e>
90000596:	ea94 0f05 	teq	r4, r5
9000059a:	bf08      	it	eq
9000059c:	ea90 0f02 	teqeq	r0, r2
900005a0:	d005      	beq.n	900005ae <__adddf3+0x212>
900005a2:	ea54 0c00 	orrs.w	ip, r4, r0
900005a6:	bf04      	itt	eq
900005a8:	4619      	moveq	r1, r3
900005aa:	4610      	moveq	r0, r2
900005ac:	bd30      	pop	{r4, r5, pc}
900005ae:	ea91 0f03 	teq	r1, r3
900005b2:	bf1e      	ittt	ne
900005b4:	2100      	movne	r1, #0
900005b6:	2000      	movne	r0, #0
900005b8:	bd30      	popne	{r4, r5, pc}
900005ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
900005be:	d105      	bne.n	900005cc <__adddf3+0x230>
900005c0:	0040      	lsls	r0, r0, #1
900005c2:	4149      	adcs	r1, r1
900005c4:	bf28      	it	cs
900005c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
900005ca:	bd30      	pop	{r4, r5, pc}
900005cc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
900005d0:	bf3c      	itt	cc
900005d2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
900005d6:	bd30      	popcc	{r4, r5, pc}
900005d8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
900005dc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
900005e0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
900005e4:	f04f 0000 	mov.w	r0, #0
900005e8:	bd30      	pop	{r4, r5, pc}
900005ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
900005ee:	bf1a      	itte	ne
900005f0:	4619      	movne	r1, r3
900005f2:	4610      	movne	r0, r2
900005f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
900005f8:	bf1c      	itt	ne
900005fa:	460b      	movne	r3, r1
900005fc:	4602      	movne	r2, r0
900005fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
90000602:	bf06      	itte	eq
90000604:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
90000608:	ea91 0f03 	teqeq	r1, r3
9000060c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
90000610:	bd30      	pop	{r4, r5, pc}
90000612:	bf00      	nop

90000614 <__aeabi_ui2d>:
90000614:	f090 0f00 	teq	r0, #0
90000618:	bf04      	itt	eq
9000061a:	2100      	moveq	r1, #0
9000061c:	4770      	bxeq	lr
9000061e:	b530      	push	{r4, r5, lr}
90000620:	f44f 6480 	mov.w	r4, #1024	@ 0x400
90000624:	f104 0432 	add.w	r4, r4, #50	@ 0x32
90000628:	f04f 0500 	mov.w	r5, #0
9000062c:	f04f 0100 	mov.w	r1, #0
90000630:	e750      	b.n	900004d4 <__adddf3+0x138>
90000632:	bf00      	nop

90000634 <__aeabi_i2d>:
90000634:	f090 0f00 	teq	r0, #0
90000638:	bf04      	itt	eq
9000063a:	2100      	moveq	r1, #0
9000063c:	4770      	bxeq	lr
9000063e:	b530      	push	{r4, r5, lr}
90000640:	f44f 6480 	mov.w	r4, #1024	@ 0x400
90000644:	f104 0432 	add.w	r4, r4, #50	@ 0x32
90000648:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
9000064c:	bf48      	it	mi
9000064e:	4240      	negmi	r0, r0
90000650:	f04f 0100 	mov.w	r1, #0
90000654:	e73e      	b.n	900004d4 <__adddf3+0x138>
90000656:	bf00      	nop

90000658 <__aeabi_f2d>:
90000658:	0042      	lsls	r2, r0, #1
9000065a:	ea4f 01e2 	mov.w	r1, r2, asr #3
9000065e:	ea4f 0131 	mov.w	r1, r1, rrx
90000662:	ea4f 7002 	mov.w	r0, r2, lsl #28
90000666:	bf1f      	itttt	ne
90000668:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
9000066c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
90000670:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
90000674:	4770      	bxne	lr
90000676:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
9000067a:	bf08      	it	eq
9000067c:	4770      	bxeq	lr
9000067e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
90000682:	bf04      	itt	eq
90000684:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
90000688:	4770      	bxeq	lr
9000068a:	b530      	push	{r4, r5, lr}
9000068c:	f44f 7460 	mov.w	r4, #896	@ 0x380
90000690:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
90000694:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
90000698:	e71c      	b.n	900004d4 <__adddf3+0x138>
9000069a:	bf00      	nop

9000069c <__aeabi_ul2d>:
9000069c:	ea50 0201 	orrs.w	r2, r0, r1
900006a0:	bf08      	it	eq
900006a2:	4770      	bxeq	lr
900006a4:	b530      	push	{r4, r5, lr}
900006a6:	f04f 0500 	mov.w	r5, #0
900006aa:	e00a      	b.n	900006c2 <__aeabi_l2d+0x16>

900006ac <__aeabi_l2d>:
900006ac:	ea50 0201 	orrs.w	r2, r0, r1
900006b0:	bf08      	it	eq
900006b2:	4770      	bxeq	lr
900006b4:	b530      	push	{r4, r5, lr}
900006b6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
900006ba:	d502      	bpl.n	900006c2 <__aeabi_l2d+0x16>
900006bc:	4240      	negs	r0, r0
900006be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
900006c2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
900006c6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
900006ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
900006ce:	f43f aed8 	beq.w	90000482 <__adddf3+0xe6>
900006d2:	f04f 0203 	mov.w	r2, #3
900006d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006da:	bf18      	it	ne
900006dc:	3203      	addne	r2, #3
900006de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006e2:	bf18      	it	ne
900006e4:	3203      	addne	r2, #3
900006e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
900006ea:	f1c2 0320 	rsb	r3, r2, #32
900006ee:	fa00 fc03 	lsl.w	ip, r0, r3
900006f2:	fa20 f002 	lsr.w	r0, r0, r2
900006f6:	fa01 fe03 	lsl.w	lr, r1, r3
900006fa:	ea40 000e 	orr.w	r0, r0, lr
900006fe:	fa21 f102 	lsr.w	r1, r1, r2
90000702:	4414      	add	r4, r2
90000704:	e6bd      	b.n	90000482 <__adddf3+0xe6>
90000706:	bf00      	nop

90000708 <__aeabi_ldivmod>:
90000708:	b97b      	cbnz	r3, 9000072a <__aeabi_ldivmod+0x22>
9000070a:	b972      	cbnz	r2, 9000072a <__aeabi_ldivmod+0x22>
9000070c:	2900      	cmp	r1, #0
9000070e:	bfbe      	ittt	lt
90000710:	2000      	movlt	r0, #0
90000712:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
90000716:	e006      	blt.n	90000726 <__aeabi_ldivmod+0x1e>
90000718:	bf08      	it	eq
9000071a:	2800      	cmpeq	r0, #0
9000071c:	bf1c      	itt	ne
9000071e:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
90000722:	f04f 30ff 	movne.w	r0, #4294967295
90000726:	f000 b9d3 	b.w	90000ad0 <__aeabi_idiv0>
9000072a:	f1ad 0c08 	sub.w	ip, sp, #8
9000072e:	e96d ce04 	strd	ip, lr, [sp, #-16]!
90000732:	2900      	cmp	r1, #0
90000734:	db09      	blt.n	9000074a <__aeabi_ldivmod+0x42>
90000736:	2b00      	cmp	r3, #0
90000738:	db1a      	blt.n	90000770 <__aeabi_ldivmod+0x68>
9000073a:	f000 f84d 	bl	900007d8 <__udivmoddi4>
9000073e:	f8dd e004 	ldr.w	lr, [sp, #4]
90000742:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000746:	b004      	add	sp, #16
90000748:	4770      	bx	lr
9000074a:	4240      	negs	r0, r0
9000074c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90000750:	2b00      	cmp	r3, #0
90000752:	db1b      	blt.n	9000078c <__aeabi_ldivmod+0x84>
90000754:	f000 f840 	bl	900007d8 <__udivmoddi4>
90000758:	f8dd e004 	ldr.w	lr, [sp, #4]
9000075c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000760:	b004      	add	sp, #16
90000762:	4240      	negs	r0, r0
90000764:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90000768:	4252      	negs	r2, r2
9000076a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
9000076e:	4770      	bx	lr
90000770:	4252      	negs	r2, r2
90000772:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000776:	f000 f82f 	bl	900007d8 <__udivmoddi4>
9000077a:	f8dd e004 	ldr.w	lr, [sp, #4]
9000077e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000782:	b004      	add	sp, #16
90000784:	4240      	negs	r0, r0
90000786:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
9000078a:	4770      	bx	lr
9000078c:	4252      	negs	r2, r2
9000078e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000792:	f000 f821 	bl	900007d8 <__udivmoddi4>
90000796:	f8dd e004 	ldr.w	lr, [sp, #4]
9000079a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
9000079e:	b004      	add	sp, #16
900007a0:	4252      	negs	r2, r2
900007a2:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
900007a6:	4770      	bx	lr

900007a8 <__aeabi_uldivmod>:
900007a8:	b953      	cbnz	r3, 900007c0 <__aeabi_uldivmod+0x18>
900007aa:	b94a      	cbnz	r2, 900007c0 <__aeabi_uldivmod+0x18>
900007ac:	2900      	cmp	r1, #0
900007ae:	bf08      	it	eq
900007b0:	2800      	cmpeq	r0, #0
900007b2:	bf1c      	itt	ne
900007b4:	f04f 31ff 	movne.w	r1, #4294967295
900007b8:	f04f 30ff 	movne.w	r0, #4294967295
900007bc:	f000 b988 	b.w	90000ad0 <__aeabi_idiv0>
900007c0:	f1ad 0c08 	sub.w	ip, sp, #8
900007c4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
900007c8:	f000 f806 	bl	900007d8 <__udivmoddi4>
900007cc:	f8dd e004 	ldr.w	lr, [sp, #4]
900007d0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
900007d4:	b004      	add	sp, #16
900007d6:	4770      	bx	lr

900007d8 <__udivmoddi4>:
900007d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900007dc:	9d08      	ldr	r5, [sp, #32]
900007de:	468e      	mov	lr, r1
900007e0:	4604      	mov	r4, r0
900007e2:	4688      	mov	r8, r1
900007e4:	2b00      	cmp	r3, #0
900007e6:	d14a      	bne.n	9000087e <__udivmoddi4+0xa6>
900007e8:	428a      	cmp	r2, r1
900007ea:	4617      	mov	r7, r2
900007ec:	d962      	bls.n	900008b4 <__udivmoddi4+0xdc>
900007ee:	fab2 f682 	clz	r6, r2
900007f2:	b14e      	cbz	r6, 90000808 <__udivmoddi4+0x30>
900007f4:	f1c6 0320 	rsb	r3, r6, #32
900007f8:	fa01 f806 	lsl.w	r8, r1, r6
900007fc:	fa20 f303 	lsr.w	r3, r0, r3
90000800:	40b7      	lsls	r7, r6
90000802:	ea43 0808 	orr.w	r8, r3, r8
90000806:	40b4      	lsls	r4, r6
90000808:	ea4f 4e17 	mov.w	lr, r7, lsr #16
9000080c:	fa1f fc87 	uxth.w	ip, r7
90000810:	fbb8 f1fe 	udiv	r1, r8, lr
90000814:	0c23      	lsrs	r3, r4, #16
90000816:	fb0e 8811 	mls	r8, lr, r1, r8
9000081a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
9000081e:	fb01 f20c 	mul.w	r2, r1, ip
90000822:	429a      	cmp	r2, r3
90000824:	d909      	bls.n	9000083a <__udivmoddi4+0x62>
90000826:	18fb      	adds	r3, r7, r3
90000828:	f101 30ff 	add.w	r0, r1, #4294967295
9000082c:	f080 80ea 	bcs.w	90000a04 <__udivmoddi4+0x22c>
90000830:	429a      	cmp	r2, r3
90000832:	f240 80e7 	bls.w	90000a04 <__udivmoddi4+0x22c>
90000836:	3902      	subs	r1, #2
90000838:	443b      	add	r3, r7
9000083a:	1a9a      	subs	r2, r3, r2
9000083c:	b2a3      	uxth	r3, r4
9000083e:	fbb2 f0fe 	udiv	r0, r2, lr
90000842:	fb0e 2210 	mls	r2, lr, r0, r2
90000846:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000084a:	fb00 fc0c 	mul.w	ip, r0, ip
9000084e:	459c      	cmp	ip, r3
90000850:	d909      	bls.n	90000866 <__udivmoddi4+0x8e>
90000852:	18fb      	adds	r3, r7, r3
90000854:	f100 32ff 	add.w	r2, r0, #4294967295
90000858:	f080 80d6 	bcs.w	90000a08 <__udivmoddi4+0x230>
9000085c:	459c      	cmp	ip, r3
9000085e:	f240 80d3 	bls.w	90000a08 <__udivmoddi4+0x230>
90000862:	443b      	add	r3, r7
90000864:	3802      	subs	r0, #2
90000866:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
9000086a:	eba3 030c 	sub.w	r3, r3, ip
9000086e:	2100      	movs	r1, #0
90000870:	b11d      	cbz	r5, 9000087a <__udivmoddi4+0xa2>
90000872:	40f3      	lsrs	r3, r6
90000874:	2200      	movs	r2, #0
90000876:	e9c5 3200 	strd	r3, r2, [r5]
9000087a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9000087e:	428b      	cmp	r3, r1
90000880:	d905      	bls.n	9000088e <__udivmoddi4+0xb6>
90000882:	b10d      	cbz	r5, 90000888 <__udivmoddi4+0xb0>
90000884:	e9c5 0100 	strd	r0, r1, [r5]
90000888:	2100      	movs	r1, #0
9000088a:	4608      	mov	r0, r1
9000088c:	e7f5      	b.n	9000087a <__udivmoddi4+0xa2>
9000088e:	fab3 f183 	clz	r1, r3
90000892:	2900      	cmp	r1, #0
90000894:	d146      	bne.n	90000924 <__udivmoddi4+0x14c>
90000896:	4573      	cmp	r3, lr
90000898:	d302      	bcc.n	900008a0 <__udivmoddi4+0xc8>
9000089a:	4282      	cmp	r2, r0
9000089c:	f200 8105 	bhi.w	90000aaa <__udivmoddi4+0x2d2>
900008a0:	1a84      	subs	r4, r0, r2
900008a2:	eb6e 0203 	sbc.w	r2, lr, r3
900008a6:	2001      	movs	r0, #1
900008a8:	4690      	mov	r8, r2
900008aa:	2d00      	cmp	r5, #0
900008ac:	d0e5      	beq.n	9000087a <__udivmoddi4+0xa2>
900008ae:	e9c5 4800 	strd	r4, r8, [r5]
900008b2:	e7e2      	b.n	9000087a <__udivmoddi4+0xa2>
900008b4:	2a00      	cmp	r2, #0
900008b6:	f000 8090 	beq.w	900009da <__udivmoddi4+0x202>
900008ba:	fab2 f682 	clz	r6, r2
900008be:	2e00      	cmp	r6, #0
900008c0:	f040 80a4 	bne.w	90000a0c <__udivmoddi4+0x234>
900008c4:	1a8a      	subs	r2, r1, r2
900008c6:	0c03      	lsrs	r3, r0, #16
900008c8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
900008cc:	b280      	uxth	r0, r0
900008ce:	b2bc      	uxth	r4, r7
900008d0:	2101      	movs	r1, #1
900008d2:	fbb2 fcfe 	udiv	ip, r2, lr
900008d6:	fb0e 221c 	mls	r2, lr, ip, r2
900008da:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
900008de:	fb04 f20c 	mul.w	r2, r4, ip
900008e2:	429a      	cmp	r2, r3
900008e4:	d907      	bls.n	900008f6 <__udivmoddi4+0x11e>
900008e6:	18fb      	adds	r3, r7, r3
900008e8:	f10c 38ff 	add.w	r8, ip, #4294967295
900008ec:	d202      	bcs.n	900008f4 <__udivmoddi4+0x11c>
900008ee:	429a      	cmp	r2, r3
900008f0:	f200 80e0 	bhi.w	90000ab4 <__udivmoddi4+0x2dc>
900008f4:	46c4      	mov	ip, r8
900008f6:	1a9b      	subs	r3, r3, r2
900008f8:	fbb3 f2fe 	udiv	r2, r3, lr
900008fc:	fb0e 3312 	mls	r3, lr, r2, r3
90000900:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
90000904:	fb02 f404 	mul.w	r4, r2, r4
90000908:	429c      	cmp	r4, r3
9000090a:	d907      	bls.n	9000091c <__udivmoddi4+0x144>
9000090c:	18fb      	adds	r3, r7, r3
9000090e:	f102 30ff 	add.w	r0, r2, #4294967295
90000912:	d202      	bcs.n	9000091a <__udivmoddi4+0x142>
90000914:	429c      	cmp	r4, r3
90000916:	f200 80ca 	bhi.w	90000aae <__udivmoddi4+0x2d6>
9000091a:	4602      	mov	r2, r0
9000091c:	1b1b      	subs	r3, r3, r4
9000091e:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
90000922:	e7a5      	b.n	90000870 <__udivmoddi4+0x98>
90000924:	f1c1 0620 	rsb	r6, r1, #32
90000928:	408b      	lsls	r3, r1
9000092a:	fa22 f706 	lsr.w	r7, r2, r6
9000092e:	431f      	orrs	r7, r3
90000930:	fa0e f401 	lsl.w	r4, lr, r1
90000934:	fa20 f306 	lsr.w	r3, r0, r6
90000938:	fa2e fe06 	lsr.w	lr, lr, r6
9000093c:	ea4f 4917 	mov.w	r9, r7, lsr #16
90000940:	4323      	orrs	r3, r4
90000942:	fa00 f801 	lsl.w	r8, r0, r1
90000946:	fa1f fc87 	uxth.w	ip, r7
9000094a:	fbbe f0f9 	udiv	r0, lr, r9
9000094e:	0c1c      	lsrs	r4, r3, #16
90000950:	fb09 ee10 	mls	lr, r9, r0, lr
90000954:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
90000958:	fb00 fe0c 	mul.w	lr, r0, ip
9000095c:	45a6      	cmp	lr, r4
9000095e:	fa02 f201 	lsl.w	r2, r2, r1
90000962:	d909      	bls.n	90000978 <__udivmoddi4+0x1a0>
90000964:	193c      	adds	r4, r7, r4
90000966:	f100 3aff 	add.w	sl, r0, #4294967295
9000096a:	f080 809c 	bcs.w	90000aa6 <__udivmoddi4+0x2ce>
9000096e:	45a6      	cmp	lr, r4
90000970:	f240 8099 	bls.w	90000aa6 <__udivmoddi4+0x2ce>
90000974:	3802      	subs	r0, #2
90000976:	443c      	add	r4, r7
90000978:	eba4 040e 	sub.w	r4, r4, lr
9000097c:	fa1f fe83 	uxth.w	lr, r3
90000980:	fbb4 f3f9 	udiv	r3, r4, r9
90000984:	fb09 4413 	mls	r4, r9, r3, r4
90000988:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
9000098c:	fb03 fc0c 	mul.w	ip, r3, ip
90000990:	45a4      	cmp	ip, r4
90000992:	d908      	bls.n	900009a6 <__udivmoddi4+0x1ce>
90000994:	193c      	adds	r4, r7, r4
90000996:	f103 3eff 	add.w	lr, r3, #4294967295
9000099a:	f080 8082 	bcs.w	90000aa2 <__udivmoddi4+0x2ca>
9000099e:	45a4      	cmp	ip, r4
900009a0:	d97f      	bls.n	90000aa2 <__udivmoddi4+0x2ca>
900009a2:	3b02      	subs	r3, #2
900009a4:	443c      	add	r4, r7
900009a6:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
900009aa:	eba4 040c 	sub.w	r4, r4, ip
900009ae:	fba0 ec02 	umull	lr, ip, r0, r2
900009b2:	4564      	cmp	r4, ip
900009b4:	4673      	mov	r3, lr
900009b6:	46e1      	mov	r9, ip
900009b8:	d362      	bcc.n	90000a80 <__udivmoddi4+0x2a8>
900009ba:	d05f      	beq.n	90000a7c <__udivmoddi4+0x2a4>
900009bc:	b15d      	cbz	r5, 900009d6 <__udivmoddi4+0x1fe>
900009be:	ebb8 0203 	subs.w	r2, r8, r3
900009c2:	eb64 0409 	sbc.w	r4, r4, r9
900009c6:	fa04 f606 	lsl.w	r6, r4, r6
900009ca:	fa22 f301 	lsr.w	r3, r2, r1
900009ce:	431e      	orrs	r6, r3
900009d0:	40cc      	lsrs	r4, r1
900009d2:	e9c5 6400 	strd	r6, r4, [r5]
900009d6:	2100      	movs	r1, #0
900009d8:	e74f      	b.n	9000087a <__udivmoddi4+0xa2>
900009da:	fbb1 fcf2 	udiv	ip, r1, r2
900009de:	0c01      	lsrs	r1, r0, #16
900009e0:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
900009e4:	b280      	uxth	r0, r0
900009e6:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
900009ea:	463b      	mov	r3, r7
900009ec:	4638      	mov	r0, r7
900009ee:	463c      	mov	r4, r7
900009f0:	46b8      	mov	r8, r7
900009f2:	46be      	mov	lr, r7
900009f4:	2620      	movs	r6, #32
900009f6:	fbb1 f1f7 	udiv	r1, r1, r7
900009fa:	eba2 0208 	sub.w	r2, r2, r8
900009fe:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
90000a02:	e766      	b.n	900008d2 <__udivmoddi4+0xfa>
90000a04:	4601      	mov	r1, r0
90000a06:	e718      	b.n	9000083a <__udivmoddi4+0x62>
90000a08:	4610      	mov	r0, r2
90000a0a:	e72c      	b.n	90000866 <__udivmoddi4+0x8e>
90000a0c:	f1c6 0220 	rsb	r2, r6, #32
90000a10:	fa2e f302 	lsr.w	r3, lr, r2
90000a14:	40b7      	lsls	r7, r6
90000a16:	40b1      	lsls	r1, r6
90000a18:	fa20 f202 	lsr.w	r2, r0, r2
90000a1c:	ea4f 4e17 	mov.w	lr, r7, lsr #16
90000a20:	430a      	orrs	r2, r1
90000a22:	fbb3 f8fe 	udiv	r8, r3, lr
90000a26:	b2bc      	uxth	r4, r7
90000a28:	fb0e 3318 	mls	r3, lr, r8, r3
90000a2c:	0c11      	lsrs	r1, r2, #16
90000a2e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
90000a32:	fb08 f904 	mul.w	r9, r8, r4
90000a36:	40b0      	lsls	r0, r6
90000a38:	4589      	cmp	r9, r1
90000a3a:	ea4f 4310 	mov.w	r3, r0, lsr #16
90000a3e:	b280      	uxth	r0, r0
90000a40:	d93e      	bls.n	90000ac0 <__udivmoddi4+0x2e8>
90000a42:	1879      	adds	r1, r7, r1
90000a44:	f108 3cff 	add.w	ip, r8, #4294967295
90000a48:	d201      	bcs.n	90000a4e <__udivmoddi4+0x276>
90000a4a:	4589      	cmp	r9, r1
90000a4c:	d81f      	bhi.n	90000a8e <__udivmoddi4+0x2b6>
90000a4e:	eba1 0109 	sub.w	r1, r1, r9
90000a52:	fbb1 f9fe 	udiv	r9, r1, lr
90000a56:	fb09 f804 	mul.w	r8, r9, r4
90000a5a:	fb0e 1119 	mls	r1, lr, r9, r1
90000a5e:	b292      	uxth	r2, r2
90000a60:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
90000a64:	4542      	cmp	r2, r8
90000a66:	d229      	bcs.n	90000abc <__udivmoddi4+0x2e4>
90000a68:	18ba      	adds	r2, r7, r2
90000a6a:	f109 31ff 	add.w	r1, r9, #4294967295
90000a6e:	d2c4      	bcs.n	900009fa <__udivmoddi4+0x222>
90000a70:	4542      	cmp	r2, r8
90000a72:	d2c2      	bcs.n	900009fa <__udivmoddi4+0x222>
90000a74:	f1a9 0102 	sub.w	r1, r9, #2
90000a78:	443a      	add	r2, r7
90000a7a:	e7be      	b.n	900009fa <__udivmoddi4+0x222>
90000a7c:	45f0      	cmp	r8, lr
90000a7e:	d29d      	bcs.n	900009bc <__udivmoddi4+0x1e4>
90000a80:	ebbe 0302 	subs.w	r3, lr, r2
90000a84:	eb6c 0c07 	sbc.w	ip, ip, r7
90000a88:	3801      	subs	r0, #1
90000a8a:	46e1      	mov	r9, ip
90000a8c:	e796      	b.n	900009bc <__udivmoddi4+0x1e4>
90000a8e:	eba7 0909 	sub.w	r9, r7, r9
90000a92:	4449      	add	r1, r9
90000a94:	f1a8 0c02 	sub.w	ip, r8, #2
90000a98:	fbb1 f9fe 	udiv	r9, r1, lr
90000a9c:	fb09 f804 	mul.w	r8, r9, r4
90000aa0:	e7db      	b.n	90000a5a <__udivmoddi4+0x282>
90000aa2:	4673      	mov	r3, lr
90000aa4:	e77f      	b.n	900009a6 <__udivmoddi4+0x1ce>
90000aa6:	4650      	mov	r0, sl
90000aa8:	e766      	b.n	90000978 <__udivmoddi4+0x1a0>
90000aaa:	4608      	mov	r0, r1
90000aac:	e6fd      	b.n	900008aa <__udivmoddi4+0xd2>
90000aae:	443b      	add	r3, r7
90000ab0:	3a02      	subs	r2, #2
90000ab2:	e733      	b.n	9000091c <__udivmoddi4+0x144>
90000ab4:	f1ac 0c02 	sub.w	ip, ip, #2
90000ab8:	443b      	add	r3, r7
90000aba:	e71c      	b.n	900008f6 <__udivmoddi4+0x11e>
90000abc:	4649      	mov	r1, r9
90000abe:	e79c      	b.n	900009fa <__udivmoddi4+0x222>
90000ac0:	eba1 0109 	sub.w	r1, r1, r9
90000ac4:	46c4      	mov	ip, r8
90000ac6:	fbb1 f9fe 	udiv	r9, r1, lr
90000aca:	fb09 f804 	mul.w	r8, r9, r4
90000ace:	e7c4      	b.n	90000a5a <__udivmoddi4+0x282>

90000ad0 <__aeabi_idiv0>:
90000ad0:	4770      	bx	lr
90000ad2:	bf00      	nop

90000ad4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
90000ad4:	f8df d034 	ldr.w	sp, [pc, #52]	@ 90000b0c <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
90000ad8:	2100      	movs	r1, #0
  b  LoopCopyDataInit
90000ada:	e003      	b.n	90000ae4 <LoopCopyDataInit>

90000adc <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
90000adc:	4b0c      	ldr	r3, [pc, #48]	@ (90000b10 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
90000ade:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
90000ae0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
90000ae2:	3104      	adds	r1, #4

90000ae4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
90000ae4:	480b      	ldr	r0, [pc, #44]	@ (90000b14 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
90000ae6:	4b0c      	ldr	r3, [pc, #48]	@ (90000b18 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
90000ae8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
90000aea:	429a      	cmp	r2, r3
  bcc  CopyDataInit
90000aec:	d3f6      	bcc.n	90000adc <CopyDataInit>
  ldr  r2, =_sbss
90000aee:	4a0b      	ldr	r2, [pc, #44]	@ (90000b1c <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
90000af0:	e002      	b.n	90000af8 <LoopFillZerobss>

90000af2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
90000af2:	2300      	movs	r3, #0
  str  r3, [r2], #4
90000af4:	f842 3b04 	str.w	r3, [r2], #4

90000af8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
90000af8:	4b09      	ldr	r3, [pc, #36]	@ (90000b20 <LoopFillZerobss+0x28>)
  cmp  r2, r3
90000afa:	429a      	cmp	r2, r3
  bcc  FillZerobss
90000afc:	d3f9      	bcc.n	90000af2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
90000afe:	f007 fac5 	bl	9000808c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
90000b02:	f02d f82d 	bl	9002db60 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
90000b06:	f003 f877 	bl	90003bf8 <main>
  bx  lr    
90000b0a:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
90000b0c:	24080000 	.word	0x24080000
  ldr  r3, =_sidata
90000b10:	90032898 	.word	0x90032898
  ldr  r0, =_sdata
90000b14:	24000000 	.word	0x24000000
  ldr  r3, =_edata
90000b18:	24000168 	.word	0x24000168
  ldr  r2, =_sbss
90000b1c:	24005d80 	.word	0x24005d80
  ldr  r3, = _ebss
90000b20:	2402294c 	.word	0x2402294c

90000b24 <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
90000b24:	e7fe      	b.n	90000b24 <ADC3_IRQHandler>
	...

90000b28 <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
90000b28:	4770      	bx	lr
90000b2a:	bf00      	nop

90000b2c <_Z16setModelInstanceP5Model>:

static Model* modelInstance = nullptr;

void setModelInstance(Model* model)
{
    modelInstance = model;
90000b2c:	4b01      	ldr	r3, [pc, #4]	@ (90000b34 <_Z16setModelInstanceP5Model+0x8>)
90000b2e:	6018      	str	r0, [r3, #0]
}
90000b30:	4770      	bx	lr
90000b32:	bf00      	nop
90000b34:	24005d9c 	.word	0x24005d9c

90000b38 <TC_GUI_Pass>:

void TC_GUI_Pass(const char* data)
{
    if (modelInstance)
90000b38:	4b03      	ldr	r3, [pc, #12]	@ (90000b48 <TC_GUI_Pass+0x10>)
{
90000b3a:	4601      	mov	r1, r0
    if (modelInstance)
90000b3c:	681b      	ldr	r3, [r3, #0]
90000b3e:	b113      	cbz	r3, 90000b46 <TC_GUI_Pass+0xe>
    {
    	modelInstance->TC_Set(data);  // call into the GUI logic
90000b40:	4618      	mov	r0, r3
90000b42:	f006 b8bf 	b.w	90006cc4 <_ZN5Model6TC_SetEPKc>
    }
}
90000b46:	4770      	bx	lr
90000b48:	24005d9c 	.word	0x24005d9c

90000b4c <Logic_Reset_TC>:

void Logic_Reset_TC(){
	UART_REST_TC();
90000b4c:	f002 bf14 	b.w	90003978 <UART_REST_TC>

90000b50 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
90000b50:	4770      	bx	lr
90000b52:	bf00      	nop

90000b54 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
90000b54:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
90000b56:	f002 f8c7 	bl	90002ce8 <touchgfx_components_init>
    touchgfx_init();
}
90000b5a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
90000b5e:	f002 b845 	b.w	90002bec <touchgfx_init>
90000b62:	bf00      	nop

90000b64 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
90000b64:	f002 b8c2 	b.w	90002cec <touchgfx_taskEntry>

90000b68 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
90000b68:	6840      	ldr	r0, [r0, #4]
    }
90000b6a:	4770      	bx	lr

90000b6c <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
90000b6c:	6041      	str	r1, [r0, #4]
    }
90000b6e:	4770      	bx	lr

90000b70 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000b70:	f04f 20e0 	mov.w	r0, #3758153728	@ 0xe000e000
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90000b74:	4b08      	ldr	r3, [pc, #32]	@ (90000b98 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
90000b76:	4a09      	ldr	r2, [pc, #36]	@ (90000b9c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000b78:	f8d0 1dfc 	ldr.w	r1, [r0, #3580]	@ 0xdfc
90000b7c:	f041 7180 	orr.w	r1, r1, #16777216	@ 0x1000000
90000b80:	f8c0 1dfc 	str.w	r1, [r0, #3580]	@ 0xdfc
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90000b84:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	@ 0xfb0
90000b88:	430a      	orrs	r2, r1
90000b8a:	f8c3 2fb0 	str.w	r2, [r3, #4016]	@ 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
90000b8e:	681a      	ldr	r2, [r3, #0]
90000b90:	f042 0201 	orr.w	r2, r2, #1
90000b94:	601a      	str	r2, [r3, #0]
}
90000b96:	4770      	bx	lr
90000b98:	e0001000 	.word	0xe0001000
90000b9c:	c5acce55 	.word	0xc5acce55

90000ba0 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
90000ba0:	1a52      	subs	r2, r2, r1
90000ba2:	eb02 0253 	add.w	r2, r2, r3, lsr #1
}
90000ba6:	fbb2 f0f3 	udiv	r0, r2, r3
90000baa:	4770      	bx	lr

90000bac <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
90000bac:	4b01      	ldr	r3, [pc, #4]	@ (90000bb4 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
90000bae:	6858      	ldr	r0, [r3, #4]
}
90000bb0:	4770      	bx	lr
90000bb2:	bf00      	nop
90000bb4:	e0001000 	.word	0xe0001000

90000bb8 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
90000bb8:	4770      	bx	lr
90000bba:	bf00      	nop

90000bbc <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
90000bbc:	b510      	push	{r4, lr}
90000bbe:	4604      	mov	r4, r0
90000bc0:	210c      	movs	r1, #12
90000bc2:	f02c f87b 	bl	9002ccbc <_ZdlPvj>
90000bc6:	4620      	mov	r0, r4
90000bc8:	bd10      	pop	{r4, pc}
90000bca:	bf00      	nop

90000bcc <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000bcc:	6803      	ldr	r3, [r0, #0]
90000bce:	4a0c      	ldr	r2, [pc, #48]	@ (90000c00 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x34>)
90000bd0:	691b      	ldr	r3, [r3, #16]
{
90000bd2:	b510      	push	{r4, lr}
90000bd4:	4604      	mov	r4, r0
    if (active) //idle task sched out
90000bd6:	b149      	cbz	r1, 90000bec <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x20>
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000bd8:	4293      	cmp	r3, r2
90000bda:	d10d      	bne.n	90000bf8 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x2c>
    return *((volatile unsigned int*)0xE0001004);
90000bdc:	4b09      	ldr	r3, [pc, #36]	@ (90000c04 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000bde:	6858      	ldr	r0, [r3, #4]
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000be0:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
90000be2:	6863      	ldr	r3, [r4, #4]
90000be4:	1a9b      	subs	r3, r3, r2
90000be6:	4403      	add	r3, r0
90000be8:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
90000bea:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
90000bec:	4293      	cmp	r3, r2
90000bee:	d105      	bne.n	90000bfc <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x30>
    return *((volatile unsigned int*)0xE0001004);
90000bf0:	4b04      	ldr	r3, [pc, #16]	@ (90000c04 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000bf2:	6858      	ldr	r0, [r3, #4]
        cc_in = getCPUCycles();
90000bf4:	60a0      	str	r0, [r4, #8]
}
90000bf6:	bd10      	pop	{r4, pc}
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000bf8:	4798      	blx	r3
90000bfa:	e7f1      	b.n	90000be0 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x14>
        cc_in = getCPUCycles();
90000bfc:	4798      	blx	r3
90000bfe:	e7f9      	b.n	90000bf4 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x28>
90000c00:	90000bad 	.word	0x90000bad
90000c04:	e0001000 	.word	0xe0001000

90000c08 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
90000c08:	4770      	bx	lr
90000c0a:	bf00      	nop
90000c0c:	0000      	movs	r0, r0
	...

90000c10 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "stm32h750b_discovery_ts.h"

void STM32TouchController::init()
{
90000c10:	b500      	push	{lr}
90000c12:	b085      	sub	sp, #20
     *
     */
    TS_Init_t hTS;
    hTS.Orientation = TS_SWAP_XY;
    hTS.Accuracy = 0;
    hTS.Width = 480;
90000c14:	2208      	movs	r2, #8
90000c16:	2300      	movs	r3, #0
    hTS.Height = 272;
    BSP_TS_Init(0, &hTS);
90000c18:	2000      	movs	r0, #0
90000c1a:	4669      	mov	r1, sp
    hTS.Width = 480;
90000c1c:	ed9f 7b06 	vldr	d7, [pc, #24]	@ 90000c38 <_ZN20STM32TouchController4initEv+0x28>
90000c20:	e9cd 2302 	strd	r2, r3, [sp, #8]
90000c24:	ed8d 7b00 	vstr	d7, [sp]
    BSP_TS_Init(0, &hTS);
90000c28:	f007 f942 	bl	90007eb0 <BSP_TS_Init>
}
90000c2c:	b005      	add	sp, #20
90000c2e:	f85d fb04 	ldr.w	pc, [sp], #4
90000c32:	bf00      	nop
90000c34:	f3af 8000 	nop.w
90000c38:	000001e0 	.word	0x000001e0
90000c3c:	00000110 	.word	0x00000110

90000c40 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
90000c40:	b530      	push	{r4, r5, lr}
90000c42:	b085      	sub	sp, #20
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    TS_State_t  TS_State = { 0 };
90000c44:	2000      	movs	r0, #0
{
90000c46:	460d      	mov	r5, r1
90000c48:	4614      	mov	r4, r2
    BSP_TS_GetState(0, &TS_State);
90000c4a:	a901      	add	r1, sp, #4
    TS_State_t  TS_State = { 0 };
90000c4c:	9001      	str	r0, [sp, #4]
90000c4e:	e9cd 0002 	strd	r0, r0, [sp, #8]
    BSP_TS_GetState(0, &TS_State);
90000c52:	f007 f9bb 	bl	90007fcc <BSP_TS_GetState>
    if (TS_State.TouchDetected)
90000c56:	9801      	ldr	r0, [sp, #4]
90000c58:	b120      	cbz	r0, 90000c64 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        x = TS_State.TouchX;
        y = TS_State.TouchY;
        return true;
90000c5a:	2001      	movs	r0, #1
        y = TS_State.TouchY;
90000c5c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        x = TS_State.TouchX;
90000c60:	602a      	str	r2, [r5, #0]
        y = TS_State.TouchY;
90000c62:	6023      	str	r3, [r4, #0]
    }

    return false;
}
90000c64:	b005      	add	sp, #20
90000c66:	bd30      	pop	{r4, r5, pc}

90000c68 <_ZN20STM32TouchControllerD0Ev>:
90000c68:	b510      	push	{r4, lr}
90000c6a:	4604      	mov	r4, r0
90000c6c:	2104      	movs	r1, #4
90000c6e:	f02c f825 	bl	9002ccbc <_ZdlPvj>
90000c72:	4620      	mov	r0, r4
90000c74:	bd10      	pop	{r4, pc}
90000c76:	bf00      	nop

90000c78 <_ZN8touchgfx4GPIO4initEv>:
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000c78:	2108      	movs	r1, #8
90000c7a:	4808      	ldr	r0, [pc, #32]	@ (90000c9c <_ZN8touchgfx4GPIO4initEv+0x24>)
{
90000c7c:	b508      	push	{r3, lr}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000c7e:	f008 fac7 	bl	90009210 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c82:	2801      	cmp	r0, #1
90000c84:	d101      	bne.n	90000c8a <_ZN8touchgfx4GPIO4initEv+0x12>
            GPIO_InvertedLevels[id] = 1;
90000c86:	4b06      	ldr	r3, [pc, #24]	@ (90000ca0 <_ZN8touchgfx4GPIO4initEv+0x28>)
90000c88:	6018      	str	r0, [r3, #0]
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000c8a:	2140      	movs	r1, #64	@ 0x40
90000c8c:	4805      	ldr	r0, [pc, #20]	@ (90000ca4 <_ZN8touchgfx4GPIO4initEv+0x2c>)
90000c8e:	f008 fabf 	bl	90009210 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c92:	2801      	cmp	r0, #1
90000c94:	d101      	bne.n	90000c9a <_ZN8touchgfx4GPIO4initEv+0x22>
            GPIO_InvertedLevels[id] = 1;
90000c96:	4b02      	ldr	r3, [pc, #8]	@ (90000ca0 <_ZN8touchgfx4GPIO4initEv+0x28>)
90000c98:	60d8      	str	r0, [r3, #12]
}
90000c9a:	bd08      	pop	{r3, pc}
90000c9c:	58021800 	.word	0x58021800
90000ca0:	24005da0 	.word	0x24005da0
90000ca4:	58020000 	.word	0x58020000

90000ca8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
    switch (id)
90000ca8:	b158      	cbz	r0, 90000cc2 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
90000caa:	2803      	cmp	r0, #3
90000cac:	d000      	beq.n	90000cb0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
90000cae:	4770      	bx	lr
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
90000cb0:	4b08      	ldr	r3, [pc, #32]	@ (90000cd4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
90000cb2:	2140      	movs	r1, #64	@ 0x40
90000cb4:	4808      	ldr	r0, [pc, #32]	@ (90000cd8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x30>)
90000cb6:	68da      	ldr	r2, [r3, #12]
90000cb8:	fab2 f282 	clz	r2, r2
90000cbc:	0952      	lsrs	r2, r2, #5
90000cbe:	f008 baad 	b.w	9000921c <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
90000cc2:	4b04      	ldr	r3, [pc, #16]	@ (90000cd4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
90000cc4:	2108      	movs	r1, #8
90000cc6:	4805      	ldr	r0, [pc, #20]	@ (90000cdc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x34>)
90000cc8:	681a      	ldr	r2, [r3, #0]
90000cca:	fab2 f282 	clz	r2, r2
90000cce:	0952      	lsrs	r2, r2, #5
90000cd0:	f008 baa4 	b.w	9000921c <HAL_GPIO_WritePin>
90000cd4:	24005da0 	.word	0x24005da0
90000cd8:	58020000 	.word	0x58020000
90000cdc:	58021800 	.word	0x58021800

90000ce0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
    switch (id)
90000ce0:	b158      	cbz	r0, 90000cfa <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
90000ce2:	2803      	cmp	r0, #3
90000ce4:	d000      	beq.n	90000ce8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
90000ce6:	4770      	bx	lr
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
90000ce8:	4b08      	ldr	r3, [pc, #32]	@ (90000d0c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
90000cea:	2140      	movs	r1, #64	@ 0x40
90000cec:	4808      	ldr	r0, [pc, #32]	@ (90000d10 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x30>)
90000cee:	68da      	ldr	r2, [r3, #12]
90000cf0:	3a00      	subs	r2, #0
90000cf2:	bf18      	it	ne
90000cf4:	2201      	movne	r2, #1
90000cf6:	f008 ba91 	b.w	9000921c <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
90000cfa:	4b04      	ldr	r3, [pc, #16]	@ (90000d0c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
90000cfc:	2108      	movs	r1, #8
90000cfe:	4805      	ldr	r0, [pc, #20]	@ (90000d14 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x34>)
90000d00:	681a      	ldr	r2, [r3, #0]
90000d02:	3a00      	subs	r2, #0
90000d04:	bf18      	it	ne
90000d06:	2201      	movne	r2, #1
90000d08:	f008 ba88 	b.w	9000921c <HAL_GPIO_WritePin>
90000d0c:	24005da0 	.word	0x24005da0
90000d10:	58020000 	.word	0x58020000
90000d14:	58021800 	.word	0x58021800

90000d18 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
    switch (id)
90000d18:	b130      	cbz	r0, 90000d28 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
90000d1a:	2803      	cmp	r0, #3
90000d1c:	d000      	beq.n	90000d20 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
90000d1e:	4770      	bx	lr
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000d20:	2140      	movs	r1, #64	@ 0x40
90000d22:	4803      	ldr	r0, [pc, #12]	@ (90000d30 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
90000d24:	f008 ba7e 	b.w	90009224 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000d28:	2108      	movs	r1, #8
90000d2a:	4802      	ldr	r0, [pc, #8]	@ (90000d34 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x1c>)
90000d2c:	f008 ba7a 	b.w	90009224 <HAL_GPIO_TogglePin>
90000d30:	58020000 	.word	0x58020000
90000d34:	58021800 	.word	0x58021800

90000d38 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
90000d38:	2000      	movs	r0, #0
90000d3a:	4770      	bx	lr

90000d3c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
90000d3c:	2301      	movs	r3, #1
        requestedOrientation = orientation;
90000d3e:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
90000d42:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
90000d46:	4770      	bx	lr

90000d48 <_ZN8touchgfx3HAL11submitGPU2DEv>:
     *
     * Only implemented on systems with the GPU2D IP.
     */
    virtual void submitGPU2D()
    {
    }
90000d48:	4770      	bx	lr
90000d4a:	bf00      	nop

90000d4c <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
90000d4c:	2000      	movs	r0, #0
90000d4e:	4770      	bx	lr

90000d50 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000d50:	1e0a      	subs	r2, r1, #0
90000d52:	4b03      	ldr	r3, [pc, #12]	@ (90000d60 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000d54:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000d56:	bf18      	it	ne
90000d58:	2201      	movne	r2, #1
90000d5a:	701a      	strb	r2, [r3, #0]
    }
90000d5c:	4770      	bx	lr
90000d5e:	bf00      	nop
90000d60:	24021c0b 	.word	0x24021c0b

90000d64 <_ZN8touchgfx3HAL16waitForLTDCLinesEt>:
     *
     * @param numberOfLines Number of lines to wait.
     */
    virtual void waitForLTDCLines(uint16_t numberOfLines)
    {
    }
90000d64:	4770      	bx	lr
90000d66:	bf00      	nop

90000d68 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
90000d68:	2000      	movs	r0, #0
90000d6a:	4770      	bx	lr

90000d6c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
90000d6c:	6b83      	ldr	r3, [r0, #56]	@ 0x38
    virtual void taskDelay(uint16_t ms)
90000d6e:	4608      	mov	r0, r1
        if (taskDelayFunc)
90000d70:	b103      	cbz	r3, 90000d74 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
90000d72:	4718      	bx	r3
        }
    }
90000d74:	4770      	bx	lr
90000d76:	bf00      	nop

90000d78 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
90000d78:	f64f 70ff 	movw	r0, #65535	@ 0xffff
90000d7c:	4770      	bx	lr
90000d7e:	bf00      	nop

90000d80 <_ZN8touchgfx3HAL25partialLTDCDeadlineMissedEv>:
     * This empty function can be overridden to e.g. output this error condition
     * on a pin.
     */
    virtual void partialLTDCDeadlineMissed()
    {
    }
90000d80:	4770      	bx	lr
90000d82:	bf00      	nop

90000d84 <_ZN8touchgfx3HAL22InvalidateTextureCacheEv>:
     * Called on every tick before drawing into the framebuffer to enable
     * invalidation of any caches that may be incoherent with main memory.
     */
    virtual void InvalidateTextureCache()
    {
    }
90000d84:	4770      	bx	lr
90000d86:	bf00      	nop

90000d88 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
90000d88:	4770      	bx	lr
90000d8a:	bf00      	nop

90000d8c <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
90000d8c:	b510      	push	{r4, lr}
90000d8e:	4604      	mov	r4, r0
        swapFrameBuffers();
90000d90:	f012 fbf8 	bl	90013584 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90000d94:	6823      	ldr	r3, [r4, #0]
90000d96:	4620      	mov	r0, r4
90000d98:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
    }
90000d9c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
90000da0:	4718      	bx	r3
90000da2:	bf00      	nop

90000da4 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
90000da4:	f002 b8c6 	b.w	90002f34 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

90000da8 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
90000da8:	f002 b8ca 	b.w	90002f40 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

90000dac <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
90000dac:	b510      	push	{r4, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
90000dae:	f002 f961 	bl	90003074 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90000db2:	4812      	ldr	r0, [pc, #72]	@ (90000dfc <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x50>)
90000db4:	2300      	movs	r3, #0
90000db6:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
90000dba:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
90000dbe:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000dc2:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90000dc6:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000dca:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
90000dce:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000dd2:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000dd6:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000dd8:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
90000ddc:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000dde:	f8c0 2274 	str.w	r2, [r0, #628]	@ 0x274
      } while (ways-- != 0U);
90000de2:	1c5a      	adds	r2, r3, #1
90000de4:	d1f8      	bne.n	90000dd8 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2c>
    } while(sets-- != 0U);
90000de6:	f1ac 0c20 	sub.w	ip, ip, #32
90000dea:	f11c 0f20 	cmn.w	ip, #32
90000dee:	d1f0      	bne.n	90000dd2 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x26>
90000df0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90000df4:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
90000df8:	bd10      	pop	{r4, pc}
90000dfa:	bf00      	nop
90000dfc:	e000ed00 	.word	0xe000ed00

90000e00 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
90000e00:	f002 b874 	b.w	90002eec <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

90000e04 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
90000e04:	f002 b9ba 	b.w	9000317c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

90000e08 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
90000e08:	f002 b9a4 	b.w	90003154 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

90000e0c <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
90000e0c:	f002 b878 	b.w	90002f00 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

90000e10 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
90000e10:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90000e12:	4b09      	ldr	r3, [pc, #36]	@ (90000e38 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
90000e14:	881b      	ldrh	r3, [r3, #0]
90000e16:	428b      	cmp	r3, r1
90000e18:	d808      	bhi.n	90000e2c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
90000e1a:	4b08      	ldr	r3, [pc, #32]	@ (90000e3c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
90000e1c:	881b      	ldrh	r3, [r3, #0]
90000e1e:	4293      	cmp	r3, r2
90000e20:	d804      	bhi.n	90000e2c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
        FRAME_BUFFER_WIDTH = width;
90000e22:	4807      	ldr	r0, [pc, #28]	@ (90000e40 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
        FRAME_BUFFER_HEIGHT = height;
90000e24:	4b07      	ldr	r3, [pc, #28]	@ (90000e44 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
        FRAME_BUFFER_WIDTH = width;
90000e26:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = height;
90000e28:	801a      	strh	r2, [r3, #0]
    }
90000e2a:	bd08      	pop	{r3, pc}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90000e2c:	4b06      	ldr	r3, [pc, #24]	@ (90000e48 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
90000e2e:	21a3      	movs	r1, #163	@ 0xa3
90000e30:	4a06      	ldr	r2, [pc, #24]	@ (90000e4c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
90000e32:	4807      	ldr	r0, [pc, #28]	@ (90000e50 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
90000e34:	f02c fab8 	bl	9002d3a8 <__assert_func>
90000e38:	24021c00 	.word	0x24021c00
90000e3c:	24021c02 	.word	0x24021c02
90000e40:	24021c06 	.word	0x24021c06
90000e44:	24021c08 	.word	0x24021c08
90000e48:	9002e5b8 	.word	0x9002e5b8
90000e4c:	9002e61c 	.word	0x9002e61c
90000e50:	9002e660 	.word	0x9002e660

90000e54 <_ZN20TouchGFXGeneratedHAL17unlockFrameBufferEv>:
     * This specialization is marks DMA2D as un-reserved by the framwork.
     * @see HAL::unlockFrameBuffer
     */
    virtual void unlockFrameBuffer()
    {
        HAL::unlockFrameBuffer();
90000e54:	f011 bee2 	b.w	90012c1c <_ZN8touchgfx3HAL17unlockFrameBufferEv>

90000e58 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
        HAL::flushFrameBuffer();
90000e58:	f011 bda8 	b.w	900129ac <_ZN8touchgfx3HAL16flushFrameBufferEv>

90000e5c <_ZN11TouchGFXHALD0Ev>:
90000e5c:	b510      	push	{r4, lr}
90000e5e:	4604      	mov	r4, r0
90000e60:	2190      	movs	r1, #144	@ 0x90
90000e62:	f02b ff2b 	bl	9002ccbc <_ZdlPvj>
90000e66:	4620      	mov	r0, r4
90000e68:	bd10      	pop	{r4, pc}
90000e6a:	bf00      	nop

90000e6c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
        if (requestedOrientation != nativeDisplayOrientation)
90000e6c:	f890 c078 	ldrb.w	ip, [r0, #120]	@ 0x78
90000e70:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
            if (DISPLAY_ROTATION == rotate0)
90000e74:	4b0b      	ldr	r3, [pc, #44]	@ (90000ea4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x38>)
        if (requestedOrientation != nativeDisplayOrientation)
90000e76:	458c      	cmp	ip, r1
            if (DISPLAY_ROTATION == rotate0)
90000e78:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
90000e7a:	d00b      	beq.n	90000e94 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x28>
            if (DISPLAY_ROTATION == rotate0)
90000e7c:	b94a      	cbnz	r2, 90000e92 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
                const uint16_t tmp = DISPLAY_HEIGHT;
90000e7e:	4a0a      	ldr	r2, [pc, #40]	@ (90000ea8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
                DISPLAY_ROTATION = rotate90;
90000e80:	f04f 0c01 	mov.w	ip, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000e84:	4909      	ldr	r1, [pc, #36]	@ (90000eac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
90000e86:	8810      	ldrh	r0, [r2, #0]
            DISPLAY_ROTATION = rotate0;
90000e88:	f883 c000 	strb.w	ip, [r3]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000e8c:	880b      	ldrh	r3, [r1, #0]
            DISPLAY_WIDTH = tmp;
90000e8e:	8008      	strh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000e90:	8013      	strh	r3, [r2, #0]
    }
90000e92:	4770      	bx	lr
        else if (DISPLAY_ROTATION != rotate0)
90000e94:	2a00      	cmp	r2, #0
90000e96:	d0fc      	beq.n	90000e92 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            const uint16_t tmp = DISPLAY_HEIGHT;
90000e98:	4a03      	ldr	r2, [pc, #12]	@ (90000ea8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
            DISPLAY_ROTATION = rotate0;
90000e9a:	f04f 0c00 	mov.w	ip, #0
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000e9e:	4903      	ldr	r1, [pc, #12]	@ (90000eac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
90000ea0:	e7f1      	b.n	90000e86 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x1a>
90000ea2:	bf00      	nop
90000ea4:	24021c04 	.word	0x24021c04
90000ea8:	24021c02 	.word	0x24021c02
90000eac:	24021c00 	.word	0x24021c00

90000eb0 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
90000eb0:	4603      	mov	r3, r0
        if (useDMAAcceleration)
90000eb2:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
90000eb6:	b118      	cbz	r0, 90000ec0 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
90000eb8:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
90000eba:	6803      	ldr	r3, [r0, #0]
90000ebc:	681b      	ldr	r3, [r3, #0]
90000ebe:	4718      	bx	r3
    }
90000ec0:	4770      	bx	lr
90000ec2:	bf00      	nop

90000ec4 <_ZN8touchgfx3HAL10getDMATypeEv>:
        return dma.getDMAType();
90000ec4:	6840      	ldr	r0, [r0, #4]
90000ec6:	4a04      	ldr	r2, [pc, #16]	@ (90000ed8 <_ZN8touchgfx3HAL10getDMATypeEv+0x14>)
90000ec8:	6803      	ldr	r3, [r0, #0]
90000eca:	699b      	ldr	r3, [r3, #24]
90000ecc:	4293      	cmp	r3, r2
90000ece:	d101      	bne.n	90000ed4 <_ZN8touchgfx3HAL10getDMATypeEv+0x10>
    }
90000ed0:	2000      	movs	r0, #0
90000ed2:	4770      	bx	lr
        return dma.getDMAType();
90000ed4:	4718      	bx	r3
90000ed6:	bf00      	nop
90000ed8:	90000d39 	.word	0x90000d39

90000edc <_ZN11TouchGFXHAL10initializeEv>:
{
90000edc:	b538      	push	{r3, r4, r5, lr}
90000ede:	4604      	mov	r4, r0
    TouchGFXGeneratedHAL::initialize();
90000ee0:	f002 face 	bl	90003480 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setAnimationStorage((void*)animationBuffer);    // Add animation storage
90000ee4:	4a0b      	ldr	r2, [pc, #44]	@ (90000f14 <_ZN11TouchGFXHAL10initializeEv+0x38>)
90000ee6:	6823      	ldr	r3, [r4, #0]
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000ee8:	490b      	ldr	r1, [pc, #44]	@ (90000f18 <_ZN11TouchGFXHAL10initializeEv+0x3c>)
90000eea:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
90000eee:	4293      	cmp	r3, r2
90000ef0:	d10d      	bne.n	90000f0e <_ZN11TouchGFXHAL10initializeEv+0x32>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000ef2:	4b0a      	ldr	r3, [pc, #40]	@ (90000f1c <_ZN11TouchGFXHAL10initializeEv+0x40>)
90000ef4:	2201      	movs	r2, #1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000ef6:	6461      	str	r1, [r4, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000ef8:	701a      	strb	r2, [r3, #0]
    instrumentation.init();
90000efa:	f104 0584 	add.w	r5, r4, #132	@ 0x84
90000efe:	4628      	mov	r0, r5
90000f00:	f7ff fe36 	bl	90000b70 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
90000f04:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
90000f06:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
90000f08:	f884 3070 	strb.w	r3, [r4, #112]	@ 0x70
}
90000f0c:	bd38      	pop	{r3, r4, r5, pc}
    setAnimationStorage((void*)animationBuffer);    // Add animation storage
90000f0e:	4620      	mov	r0, r4
90000f10:	4798      	blx	r3
90000f12:	e7f2      	b.n	90000efa <_ZN11TouchGFXHAL10initializeEv+0x1e>
90000f14:	90000d51 	.word	0x90000d51
90000f18:	d0000000 	.word	0xd0000000
90000f1c:	24021c0b 	.word	0x24021c0b

90000f20 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f20:	b1a9      	cbz	r1, 90000f4e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2e>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90000f22:	6402      	str	r2, [r0, #64]	@ 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000f24:	3a00      	subs	r2, #0
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90000f26:	63c1      	str	r1, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000f28:	bf18      	it	ne
90000f2a:	2201      	movne	r2, #1
90000f2c:	490c      	ldr	r1, [pc, #48]	@ (90000f60 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
90000f2e:	700a      	strb	r2, [r1, #0]
        setAnimationStorage(animationStorage);
90000f30:	6802      	ldr	r2, [r0, #0]
90000f32:	490c      	ldr	r1, [pc, #48]	@ (90000f64 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x44>)
90000f34:	f8d2 2090 	ldr.w	r2, [r2, #144]	@ 0x90
90000f38:	428a      	cmp	r2, r1
90000f3a:	d106      	bne.n	90000f4a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2a>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f3c:	1e19      	subs	r1, r3, #0
90000f3e:	4a0a      	ldr	r2, [pc, #40]	@ (90000f68 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x48>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f40:	6443      	str	r3, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f42:	bf18      	it	ne
90000f44:	2101      	movne	r1, #1
90000f46:	7011      	strb	r1, [r2, #0]
90000f48:	4770      	bx	lr
        setAnimationStorage(animationStorage);
90000f4a:	4619      	mov	r1, r3
90000f4c:	4710      	bx	r2
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f4e:	4b07      	ldr	r3, [pc, #28]	@ (90000f6c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x4c>)
90000f50:	f240 21ff 	movw	r1, #767	@ 0x2ff
90000f54:	4a06      	ldr	r2, [pc, #24]	@ (90000f70 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x50>)
90000f56:	4807      	ldr	r0, [pc, #28]	@ (90000f74 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
90000f58:	b510      	push	{r4, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f5a:	f02c fa25 	bl	9002d3a8 <__assert_func>
90000f5e:	bf00      	nop
90000f60:	24021c0a 	.word	0x24021c0a
90000f64:	90000d51 	.word	0x90000d51
90000f68:	24021c0b 	.word	0x24021c0b
90000f6c:	9002e6a8 	.word	0x9002e6a8
90000f70:	9002e6e0 	.word	0x9002e6e0
90000f74:	9002e660 	.word	0x9002e660

90000f78 <_ZN11TouchGFXHAL9taskEntryEv>:
{
90000f78:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
90000f7a:	6803      	ldr	r3, [r0, #0]
{
90000f7c:	4604      	mov	r4, r0
90000f7e:	4d14      	ldr	r5, [pc, #80]	@ (90000fd0 <_ZN11TouchGFXHAL9taskEntryEv+0x58>)
    enableLCDControllerInterrupt();
90000f80:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90000f84:	4798      	blx	r3
    enableInterrupts();
90000f86:	6823      	ldr	r3, [r4, #0]
90000f88:	4620      	mov	r0, r4
90000f8a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90000f8c:	4798      	blx	r3
    OSWrappers::waitForVSync();
90000f8e:	f001 f9f1 	bl	90002374 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
90000f92:	6823      	ldr	r3, [r4, #0]
90000f94:	4620      	mov	r0, r4
90000f96:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
90000f98:	4798      	blx	r3
    HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_SET);
90000f9a:	2201      	movs	r2, #1
90000f9c:	2180      	movs	r1, #128	@ 0x80
90000f9e:	480d      	ldr	r0, [pc, #52]	@ (90000fd4 <_ZN11TouchGFXHAL9taskEntryEv+0x5c>)
90000fa0:	f008 f93c 	bl	9000921c <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90000fa4:	2201      	movs	r2, #1
90000fa6:	480c      	ldr	r0, [pc, #48]	@ (90000fd8 <_ZN11TouchGFXHAL9taskEntryEv+0x60>)
90000fa8:	4611      	mov	r1, r2
90000faa:	f008 f937 	bl	9000921c <HAL_GPIO_WritePin>
        OSWrappers::waitForVSync();
90000fae:	f001 f9e1 	bl	90002374 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
90000fb2:	6823      	ldr	r3, [r4, #0]
        swapFrameBuffers();
90000fb4:	4620      	mov	r0, r4
90000fb6:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
90000fb8:	42ab      	cmp	r3, r5
90000fba:	d107      	bne.n	90000fcc <_ZN11TouchGFXHAL9taskEntryEv+0x54>
90000fbc:	f012 fae2 	bl	90013584 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90000fc0:	6823      	ldr	r3, [r4, #0]
90000fc2:	4620      	mov	r0, r4
90000fc4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
90000fc8:	4798      	blx	r3
    }
90000fca:	e7f0      	b.n	90000fae <_ZN11TouchGFXHAL9taskEntryEv+0x36>
90000fcc:	4798      	blx	r3
90000fce:	e7ee      	b.n	90000fae <_ZN11TouchGFXHAL9taskEntryEv+0x36>
90000fd0:	90000d8d 	.word	0x90000d8d
90000fd4:	58020c00 	.word	0x58020c00
90000fd8:	58022800 	.word	0x58022800

90000fdc <IdleTaskHook>:

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
        if ((int)p) //idle task sched out
90000fdc:	4601      	mov	r1, r0
    {
90000fde:	b508      	push	{r3, lr}
        return instance;
90000fe0:	4b05      	ldr	r3, [pc, #20]	@ (90000ff8 <IdleTaskHook+0x1c>)
90000fe2:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
90000fe4:	b121      	cbz	r1, 90000ff0 <IdleTaskHook+0x14>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
90000fe6:	2101      	movs	r1, #1
90000fe8:	f012 fae6 	bl	900135b8 <_ZN8touchgfx3HAL12setMCUActiveEb>
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
        }
        return pdTRUE;
    }
90000fec:	2001      	movs	r0, #1
90000fee:	bd08      	pop	{r3, pc}
            touchgfx::HAL::getInstance()->setMCUActive(false);
90000ff0:	f012 fae2 	bl	900135b8 <_ZN8touchgfx3HAL12setMCUActiveEb>
    }
90000ff4:	2001      	movs	r0, #1
90000ff6:	bd08      	pop	{r3, pc}
90000ff8:	24021c0c 	.word	0x24021c0c

90000ffc <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const
    {
        return frameNumber;
    }
90000ffc:	6940      	ldr	r0, [r0, #20]
90000ffe:	4770      	bx	lr

90001000 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    }

    virtual AVIErrors getLastError()
    {
        return lastError;
    }
90001000:	f890 0040 	ldrb.w	r0, [r0, #64]	@ 0x40
90001004:	4770      	bx	lr
90001006:	bf00      	nop

90001008 <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
90001008:	6b03      	ldr	r3, [r0, #48]	@ 0x30
9000100a:	b10b      	cbz	r3, 90001010 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0x8>
9000100c:	2001      	movs	r0, #1
}
9000100e:	4770      	bx	lr
    return (reader != 0) || (movieData != 0);
90001010:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
90001012:	3800      	subs	r0, #0
90001014:	bf18      	it	ne
90001016:	2001      	movne	r0, #1
90001018:	4770      	bx	lr
9000101a:	bf00      	nop

9000101c <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
9000101c:	6880      	ldr	r0, [r0, #8]
9000101e:	4770      	bx	lr

90001020 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
90001020:	4770      	bx	lr
90001022:	bf00      	nop

90001024 <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
    *data = videoInfo;
90001024:	3004      	adds	r0, #4
{
90001026:	468c      	mov	ip, r1
    *data = videoInfo;
90001028:	c80f      	ldmia	r0, {r0, r1, r2, r3}
9000102a:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
}
9000102e:	4770      	bx	lr

90001030 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
90001030:	4770      	bx	lr
90001032:	bf00      	nop

90001034 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
90001034:	b508      	push	{r3, lr}
    assert(0);
90001036:	4a03      	ldr	r2, [pc, #12]	@ (90001044 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
90001038:	f44f 71fc 	mov.w	r1, #504	@ 0x1f8
9000103c:	4b02      	ldr	r3, [pc, #8]	@ (90001048 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
9000103e:	4803      	ldr	r0, [pc, #12]	@ (9000104c <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
90001040:	f02c f9b2 	bl	9002d3a8 <__assert_func>
90001044:	9002e734 	.word	0x9002e734
90001048:	9002e730 	.word	0x9002e730
9000104c:	9002e790 	.word	0x9002e790

90001050 <_ZN20HardwareMJPEGDecoderD0Ev>:
90001050:	b510      	push	{r4, lr}
90001052:	4604      	mov	r4, r0
90001054:	2148      	movs	r1, #72	@ 0x48
90001056:	f02b fe31 	bl	9002ccbc <_ZdlPvj>
9000105a:	4620      	mov	r0, r4
9000105c:	bd10      	pop	{r4, pc}
9000105e:	bf00      	nop

90001060 <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
{
90001060:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (frameNumber > getNumberOfFrames())
90001062:	6803      	ldr	r3, [r0, #0]
90001064:	2901      	cmp	r1, #1
90001066:	4d30      	ldr	r5, [pc, #192]	@ (90001128 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc8>)
{
90001068:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
9000106a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000106c:	bf38      	it	cc
9000106e:	2101      	movcc	r1, #1
90001070:	42ab      	cmp	r3, r5
90001072:	460e      	mov	r6, r1
90001074:	d13f      	bne.n	900010f6 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x96>
    return videoInfo.number_of_frames;
90001076:	6885      	ldr	r5, [r0, #8]
    if (frameNumber > getNumberOfFrames())
90001078:	42a9      	cmp	r1, r5
9000107a:	d947      	bls.n	9000110c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xac>
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
9000107c:	1e6b      	subs	r3, r5, #1
9000107e:	69e2      	ldr	r2, [r4, #28]
    if (reader != 0)
90001080:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90001082:	eb02 1703 	add.w	r7, r2, r3, lsl #4
    if (reader != 0)
90001086:	b338      	cbz	r0, 900010d8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x78>
        if (length > aviBufferLength)
90001088:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000108a:	2b0f      	cmp	r3, #15
9000108c:	d940      	bls.n	90001110 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb0>
        reader->seek(offset);
9000108e:	6803      	ldr	r3, [r0, #0]
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90001090:	f107 0608 	add.w	r6, r7, #8
        reader->seek(offset);
90001094:	68db      	ldr	r3, [r3, #12]
90001096:	4631      	mov	r1, r6
90001098:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000109a:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000109c:	2210      	movs	r2, #16
9000109e:	6b61      	ldr	r1, [r4, #52]	@ 0x34
900010a0:	6803      	ldr	r3, [r0, #0]
900010a2:	691b      	ldr	r3, [r3, #16]
900010a4:	4798      	blx	r3
900010a6:	b198      	cbz	r0, 900010d0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x70>
    if (reader != 0)
900010a8:	6b23      	ldr	r3, [r4, #48]	@ 0x30
        aviBufferStartOffset = offset;
900010aa:	63e6      	str	r6, [r4, #60]	@ 0x3c
    if (reader != 0)
900010ac:	b1a3      	cbz	r3, 900010d8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x78>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900010ae:	6b62      	ldr	r2, [r4, #52]	@ 0x34
900010b0:	7a93      	ldrb	r3, [r2, #10]
900010b2:	7a51      	ldrb	r1, [r2, #9]
900010b4:	041b      	lsls	r3, r3, #16
900010b6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
900010ba:	7a11      	ldrb	r1, [r2, #8]
900010bc:	7ad2      	ldrb	r2, [r2, #11]
900010be:	430b      	orrs	r3, r1
900010c0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
900010c4:	6a22      	ldr	r2, [r4, #32]
    this->frameNumber = frameNumber;
900010c6:	6165      	str	r5, [r4, #20]
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
900010c8:	3a04      	subs	r2, #4
900010ca:	441a      	add	r2, r3
900010cc:	61a2      	str	r2, [r4, #24]
}
900010ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            lastError = AVI_ERROR_EOF_REACHED;
900010d0:	230d      	movs	r3, #13
900010d2:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
900010d6:	e7e7      	b.n	900010a8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x48>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
900010d8:	f107 0310 	add.w	r3, r7, #16
        volatile const uint8_t* const d = movieData + offset;
900010dc:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
900010de:	18ca      	adds	r2, r1, r3
        val |= d[0];
900010e0:	5cc9      	ldrb	r1, [r1, r3]
        val |= d[1] << 8;
900010e2:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
900010e4:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
900010e6:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
900010e8:	041b      	lsls	r3, r3, #16
900010ea:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
900010ee:	430b      	orrs	r3, r1
        val |= d[3] << 24;
900010f0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        return val;
900010f4:	e7e6      	b.n	900010c4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x64>
    if (frameNumber > getNumberOfFrames())
900010f6:	4798      	blx	r3
900010f8:	4286      	cmp	r6, r0
900010fa:	d907      	bls.n	9000110c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xac>
        frameNumber = getNumberOfFrames();
900010fc:	6823      	ldr	r3, [r4, #0]
900010fe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90001100:	42ab      	cmp	r3, r5
90001102:	d00e      	beq.n	90001122 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc2>
90001104:	4620      	mov	r0, r4
90001106:	4798      	blx	r3
90001108:	4605      	mov	r5, r0
9000110a:	e7b7      	b.n	9000107c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
{
9000110c:	4635      	mov	r5, r6
9000110e:	e7b5      	b.n	9000107c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001110:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001112:	4b06      	ldr	r3, [pc, #24]	@ (9000112c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xcc>)
90001114:	4a06      	ldr	r2, [pc, #24]	@ (90001130 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd0>)
90001116:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001118:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
9000111c:	4805      	ldr	r0, [pc, #20]	@ (90001134 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd4>)
9000111e:	f02c f943 	bl	9002d3a8 <__assert_func>
    return videoInfo.number_of_frames;
90001122:	68a5      	ldr	r5, [r4, #8]
90001124:	e7aa      	b.n	9000107c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
90001126:	bf00      	nop
90001128:	9000101d 	.word	0x9000101d
9000112c:	9002e7ec 	.word	0x9002e7ec
90001130:	9002e800 	.word	0x9002e800
90001134:	9002e790 	.word	0x9002e790

90001138 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001138:	6943      	ldr	r3, [r0, #20]
{
9000113a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
9000113e:	2b00      	cmp	r3, #0
90001140:	f000 80c1 	beq.w	900012c6 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18e>
    readData(currentMovieOffset, 8);
90001144:	4605      	mov	r5, r0
    if (reader != 0)
90001146:	6b00      	ldr	r0, [r0, #48]	@ 0x30
    readData(currentMovieOffset, 8);
90001148:	69ac      	ldr	r4, [r5, #24]
    if (reader != 0)
9000114a:	2800      	cmp	r0, #0
9000114c:	f000 80a1 	beq.w	90001292 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15a>
        if (length > aviBufferLength)
90001150:	6bab      	ldr	r3, [r5, #56]	@ 0x38
90001152:	2b07      	cmp	r3, #7
90001154:	f240 80ac 	bls.w	900012b0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x178>
        reader->seek(offset);
90001158:	6803      	ldr	r3, [r0, #0]
9000115a:	4621      	mov	r1, r4
9000115c:	68db      	ldr	r3, [r3, #12]
9000115e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001160:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90001162:	2208      	movs	r2, #8
90001164:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001166:	6803      	ldr	r3, [r0, #0]
90001168:	691b      	ldr	r3, [r3, #16]
9000116a:	4798      	blx	r3
9000116c:	2800      	cmp	r0, #0
9000116e:	f000 808c 	beq.w	9000128a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x152>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001172:	69ab      	ldr	r3, [r5, #24]
    if (reader != 0)
90001174:	6b28      	ldr	r0, [r5, #48]	@ 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001176:	1d1a      	adds	r2, r3, #4
        aviBufferStartOffset = offset;
90001178:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
9000117a:	2800      	cmp	r0, #0
9000117c:	f000 808b 	beq.w	90001296 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15e>
        const uint32_t index = offset - aviBufferStartOffset;
90001180:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001182:	6b6c      	ldr	r4, [r5, #52]	@ 0x34
90001184:	18a1      	adds	r1, r4, r2
90001186:	5ca2      	ldrb	r2, [r4, r2]
90001188:	788c      	ldrb	r4, [r1, #2]
9000118a:	784e      	ldrb	r6, [r1, #1]
9000118c:	0424      	lsls	r4, r4, #16
9000118e:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
90001192:	4314      	orrs	r4, r2
90001194:	78ca      	ldrb	r2, [r1, #3]
90001196:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
            lastError = AVI_ERROR_EOF_REACHED;
9000119a:	270d      	movs	r7, #13
        if (streamNo == STREAM0 && chunkType == TYPEDC)
9000119c:	f243 0630 	movw	r6, #12336	@ 0x3030
900011a0:	e03a      	b.n	90001218 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xe0>
        if (length > aviBufferLength)
900011a2:	6bab      	ldr	r3, [r5, #56]	@ 0x38
900011a4:	2b07      	cmp	r3, #7
900011a6:	f240 8083 	bls.w	900012b0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x178>
        reader->seek(offset);
900011aa:	6803      	ldr	r3, [r0, #0]
900011ac:	4621      	mov	r1, r4
900011ae:	68db      	ldr	r3, [r3, #12]
900011b0:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900011b2:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900011b4:	2208      	movs	r2, #8
900011b6:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900011b8:	6803      	ldr	r3, [r0, #0]
900011ba:	691b      	ldr	r3, [r3, #16]
900011bc:	4798      	blx	r3
900011be:	b908      	cbnz	r0, 900011c4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x8c>
            lastError = AVI_ERROR_EOF_REACHED;
900011c0:	f885 7040 	strb.w	r7, [r5, #64]	@ 0x40
    if (reader != 0)
900011c4:	6b28      	ldr	r0, [r5, #48]	@ 0x30
        uint32_t streamNo  = getU16(currentMovieOffset);
900011c6:	69ab      	ldr	r3, [r5, #24]
        aviBufferStartOffset = offset;
900011c8:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
900011ca:	2800      	cmp	r0, #0
900011cc:	d079      	beq.n	900012c2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18a>
        const uint32_t index = offset - aviBufferStartOffset;
900011ce:	1b1b      	subs	r3, r3, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
900011d0:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900011d2:	18ca      	adds	r2, r1, r3
900011d4:	5ccb      	ldrb	r3, [r1, r3]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011d6:	7994      	ldrb	r4, [r2, #6]
900011d8:	f892 a005 	ldrb.w	sl, [r2, #5]
900011dc:	0424      	lsls	r4, r4, #16
900011de:	f892 c004 	ldrb.w	ip, [r2, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
900011e2:	f892 9001 	ldrb.w	r9, [r2, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011e6:	ea44 240a 	orr.w	r4, r4, sl, lsl #8
900011ea:	79d1      	ldrb	r1, [r2, #7]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
900011ec:	f892 8003 	ldrb.w	r8, [r2, #3]
900011f0:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
900011f4:	f892 e002 	ldrb.w	lr, [r2, #2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011f8:	ea44 040c 	orr.w	r4, r4, ip
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
900011fc:	ea4e 2208 	orr.w	r2, lr, r8, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001200:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90001204:	f246 3164 	movw	r1, #25444	@ 0x6364
90001208:	42b3      	cmp	r3, r6
9000120a:	bf08      	it	eq
9000120c:	428a      	cmpeq	r2, r1
9000120e:	bf0c      	ite	eq
90001210:	2301      	moveq	r3, #1
90001212:	2300      	movne	r3, #0
90001214:	d036      	beq.n	90001284 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x14c>
    while (currentMovieOffset + 8 + chunkSize < movieLength)
90001216:	69ab      	ldr	r3, [r5, #24]
90001218:	441c      	add	r4, r3
9000121a:	6aab      	ldr	r3, [r5, #40]	@ 0x28
9000121c:	f104 0208 	add.w	r2, r4, #8
90001220:	429a      	cmp	r2, r3
90001222:	d22a      	bcs.n	9000127a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x142>
        frameNumber++;
90001224:	696b      	ldr	r3, [r5, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001226:	3409      	adds	r4, #9
        frameNumber++;
90001228:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
9000122a:	f024 0401 	bic.w	r4, r4, #1
9000122e:	e9c5 3405 	strd	r3, r4, [r5, #20]
    if (reader != 0)
90001232:	2800      	cmp	r0, #0
90001234:	d1b5      	bne.n	900011a2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x6a>
        volatile const uint8_t* const d = movieData + offset;
90001236:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
        uint32_t chunkType = getU16(currentMovieOffset + 2);
90001238:	1ca2      	adds	r2, r4, #2
        chunkSize = getU32(currentMovieOffset + 4);
9000123a:	f104 0e04 	add.w	lr, r4, #4
        volatile const uint8_t* const d = movieData + offset;
9000123e:	eb01 0c04 	add.w	ip, r1, r4
        val |= d[0];
90001242:	5d0b      	ldrb	r3, [r1, r4]
        val |= d[1] << 8;
90001244:	f89c 4001 	ldrb.w	r4, [ip, #1]
        volatile const uint8_t* const d = movieData + offset;
90001248:	eb01 0c0e 	add.w	ip, r1, lr
        val |= d[1] << 8;
9000124c:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
        volatile const uint8_t* const d = movieData + offset;
90001250:	188c      	adds	r4, r1, r2
        val |= d[0];
90001252:	5c8a      	ldrb	r2, [r1, r2]
        val |= d[1] << 8;
90001254:	7864      	ldrb	r4, [r4, #1]
        val |= d[0];
90001256:	f811 e00e 	ldrb.w	lr, [r1, lr]
        val |= d[1] << 8;
9000125a:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
        val |= d[1] << 8;
9000125e:	f89c 8001 	ldrb.w	r8, [ip, #1]
        val |= d[2] << 16;
90001262:	f89c 4002 	ldrb.w	r4, [ip, #2]
        val |= d[3] << 24;
90001266:	f89c 1003 	ldrb.w	r1, [ip, #3]
        val |= d[2] << 16;
9000126a:	0424      	lsls	r4, r4, #16
9000126c:	ea44 2408 	orr.w	r4, r4, r8, lsl #8
90001270:	ea44 040e 	orr.w	r4, r4, lr
        val |= d[3] << 24;
90001274:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        return val;
90001278:	e7c4      	b.n	90001204 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xcc>
    frameNumber = 1;
9000127a:	2101      	movs	r1, #1
    currentMovieOffset = firstFrameOffset; /* start over */
9000127c:	6a2a      	ldr	r2, [r5, #32]
    return false;
9000127e:	2300      	movs	r3, #0
    currentMovieOffset = firstFrameOffset; /* start over */
90001280:	e9c5 1205 	strd	r1, r2, [r5, #20]
}
90001284:	4618      	mov	r0, r3
90001286:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            lastError = AVI_ERROR_EOF_REACHED;
9000128a:	230d      	movs	r3, #13
9000128c:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
90001290:	e76f      	b.n	90001172 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x3a>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001292:	1d22      	adds	r2, r4, #4
90001294:	4623      	mov	r3, r4
        volatile const uint8_t* const d = movieData + offset;
90001296:	6aec      	ldr	r4, [r5, #44]	@ 0x2c
90001298:	18a1      	adds	r1, r4, r2
        val |= d[0];
9000129a:	5ca6      	ldrb	r6, [r4, r2]
        val |= d[1] << 8;
9000129c:	784f      	ldrb	r7, [r1, #1]
        val |= d[2] << 16;
9000129e:	788c      	ldrb	r4, [r1, #2]
        val |= d[3] << 24;
900012a0:	78ca      	ldrb	r2, [r1, #3]
        val |= d[2] << 16;
900012a2:	0424      	lsls	r4, r4, #16
900012a4:	ea44 2407 	orr.w	r4, r4, r7, lsl #8
900012a8:	4334      	orrs	r4, r6
        val |= d[3] << 24;
900012aa:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        return val;
900012ae:	e774      	b.n	9000119a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x62>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900012b0:	2009      	movs	r0, #9
            assert(!"Buffer to small");
900012b2:	4b08      	ldr	r3, [pc, #32]	@ (900012d4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x19c>)
900012b4:	4a08      	ldr	r2, [pc, #32]	@ (900012d8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a0>)
900012b6:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900012b8:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
            assert(!"Buffer to small");
900012bc:	4807      	ldr	r0, [pc, #28]	@ (900012dc <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
900012be:	f02c f873 	bl	9002d3a8 <__assert_func>
900012c2:	461c      	mov	r4, r3
900012c4:	e7b7      	b.n	90001236 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xfe>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
900012c6:	4b06      	ldr	r3, [pc, #24]	@ (900012e0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a8>)
900012c8:	21f7      	movs	r1, #247	@ 0xf7
900012ca:	4a06      	ldr	r2, [pc, #24]	@ (900012e4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1ac>)
900012cc:	4803      	ldr	r0, [pc, #12]	@ (900012dc <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
900012ce:	f02c f86b 	bl	9002d3a8 <__assert_func>
900012d2:	bf00      	nop
900012d4:	9002e7ec 	.word	0x9002e7ec
900012d8:	9002e800 	.word	0x9002e800
900012dc:	9002e790 	.word	0x9002e790
900012e0:	9002e844 	.word	0x9002e844
900012e4:	9002e890 	.word	0x9002e890

900012e8 <_ZN20HardwareMJPEGDecoderC1Ev>:
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
900012e8:	b510      	push	{r4, lr}
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
900012ea:	2200      	movs	r2, #0
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
900012ec:	4604      	mov	r4, r0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
900012ee:	4b0e      	ldr	r3, [pc, #56]	@ (90001328 <_ZN20HardwareMJPEGDecoderC1Ev+0x40>)
    semDecodingDone = SEM_CREATE();
900012f0:	2001      	movs	r0, #1
900012f2:	4611      	mov	r1, r2
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
900012f4:	63e2      	str	r2, [r4, #60]	@ 0x3c
900012f6:	6023      	str	r3, [r4, #0]
900012f8:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
900012fc:	e9c4 2205 	strd	r2, r2, [r4, #20]
90001300:	e9c4 2207 	strd	r2, r2, [r4, #28]
90001304:	e9c4 2209 	strd	r2, r2, [r4, #36]	@ 0x24
90001308:	e9c4 220b 	strd	r2, r2, [r4, #44]	@ 0x2c
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
9000130c:	e9c4 220d 	strd	r2, r2, [r4, #52]	@ 0x34
    videoInfo.frame_width = 0;
90001310:	e9c4 2203 	strd	r2, r2, [r4, #12]
    videoInfo.number_of_frames = 0;
90001314:	e9c4 2201 	strd	r2, r2, [r4, #4]
    semDecodingDone = SEM_CREATE();
90001318:	f00e fa92 	bl	9000f840 <osSemaphoreNew>
9000131c:	4b03      	ldr	r3, [pc, #12]	@ (9000132c <_ZN20HardwareMJPEGDecoderC1Ev+0x44>)
9000131e:	4602      	mov	r2, r0
}
90001320:	4620      	mov	r0, r4
    semDecodingDone = SEM_CREATE();
90001322:	601a      	str	r2, [r3, #0]
}
90001324:	bd10      	pop	{r4, pc}
90001326:	bf00      	nop
90001328:	90030410 	.word	0x90030410
9000132c:	24005df8 	.word	0x24005df8

90001330 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
{
90001330:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    currentMovieOffset = 0;
90001334:	2100      	movs	r1, #0
    if (reader != 0)
90001336:	6b06      	ldr	r6, [r0, #48]	@ 0x30
{
90001338:	4605      	mov	r5, r0
    currentMovieOffset = 0;
9000133a:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
9000133c:	f880 1040 	strb.w	r1, [r0, #64]	@ 0x40
    if (reader != 0)
90001340:	2e00      	cmp	r6, #0
90001342:	f000 81b3 	beq.w	900016ac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37c>
        if (length > aviBufferLength)
90001346:	6b83      	ldr	r3, [r0, #56]	@ 0x38
90001348:	2b47      	cmp	r3, #71	@ 0x47
9000134a:	f240 8270 	bls.w	9000182e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
9000134e:	6833      	ldr	r3, [r6, #0]
90001350:	4630      	mov	r0, r6
90001352:	68db      	ldr	r3, [r3, #12]
90001354:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001356:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90001358:	2248      	movs	r2, #72	@ 0x48
9000135a:	6b69      	ldr	r1, [r5, #52]	@ 0x34
9000135c:	6803      	ldr	r3, [r0, #0]
9000135e:	691b      	ldr	r3, [r3, #16]
90001360:	4798      	blx	r3
90001362:	2800      	cmp	r0, #0
90001364:	f000 80b7 	beq.w	900014d6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a6>
        aviBufferStartOffset = offset;
90001368:	2300      	movs	r3, #0
    if (reader != 0)
9000136a:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
    if (compare(currentMovieOffset, "RIFF", 4))
9000136c:	69af      	ldr	r7, [r5, #24]
    if (reader != 0)
9000136e:	46b2      	mov	sl, r6
        aviBufferStartOffset = offset;
90001370:	63eb      	str	r3, [r5, #60]	@ 0x3c
    if (reader != 0)
90001372:	2e00      	cmp	r6, #0
90001374:	f000 819b 	beq.w	900016ae <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37e>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001378:	f8d5 9034 	ldr.w	r9, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
9000137c:	2204      	movs	r2, #4
9000137e:	49c3      	ldr	r1, [pc, #780]	@ (9000168c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x35c>)
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001380:	eb09 0407 	add.w	r4, r9, r7
    return strncmp(src, str, num);
90001384:	4620      	mov	r0, r4
90001386:	f02c fada 	bl	9002d93e <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
9000138a:	2800      	cmp	r0, #0
9000138c:	f040 825f 	bne.w	9000184e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    currentMovieOffset += 8;
90001390:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
90001394:	2204      	movs	r2, #4
90001396:	49be      	ldr	r1, [pc, #760]	@ (90001690 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x360>)
    currentMovieOffset += 8;
90001398:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
9000139a:	4448      	add	r0, r9
9000139c:	f02c facf 	bl	9002d93e <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
900013a0:	2800      	cmp	r0, #0
900013a2:	f040 8268 	bne.w	90001876 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
    currentMovieOffset += 4;
900013a6:	f107 0b0c 	add.w	fp, r7, #12
    return strncmp(src, str, num);
900013aa:	2204      	movs	r2, #4
900013ac:	49b9      	ldr	r1, [pc, #740]	@ (90001694 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x364>)
900013ae:	eb09 000b 	add.w	r0, r9, fp
    currentMovieOffset += 4;
900013b2:	f8c5 b018 	str.w	fp, [r5, #24]
    return strncmp(src, str, num);
900013b6:	f02c fac2 	bl	9002d93e <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
900013ba:	4680      	mov	r8, r0
900013bc:	2800      	cmp	r0, #0
900013be:	f040 8250 	bne.w	90001862 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013c2:	7ca3      	ldrb	r3, [r4, #18]
900013c4:	7c62      	ldrb	r2, [r4, #17]
900013c6:	041b      	lsls	r3, r3, #16
900013c8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
900013cc:	7c22      	ldrb	r2, [r4, #16]
900013ce:	4313      	orrs	r3, r2
900013d0:	7ce2      	ldrb	r2, [r4, #19]
    assert(aviListSize);
900013d2:	ea53 6402 	orrs.w	r4, r3, r2, lsl #24
900013d6:	f000 8233 	beq.w	90001840 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
900013da:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
900013de:	2204      	movs	r2, #4
900013e0:	49ad      	ldr	r1, [pc, #692]	@ (90001698 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x368>)
900013e2:	4448      	add	r0, r9
900013e4:	f02c faab 	bl	9002d93e <strncmp>
    if (compare(offset, "hdrl", 4))
900013e8:	2800      	cmp	r0, #0
900013ea:	d078      	beq.n	900014de <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ae>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900013ec:	2306      	movs	r3, #6
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900013ee:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900013f2:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900013f6:	4448      	add	r0, r9
    uint32_t listOffset = aviListOffset + aviListSize + 8;
900013f8:	445c      	add	r4, fp
    return strncmp(src, str, num);
900013fa:	2204      	movs	r2, #4
900013fc:	49a7      	ldr	r1, [pc, #668]	@ (9000169c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36c>)
    uint32_t listOffset = aviListOffset + aviListSize + 8;
900013fe:	3408      	adds	r4, #8
    return strncmp(src, str, num);
90001400:	f02c fa9d 	bl	9002d93e <strncmp>
    if (compare(offset, "avih", 4))
90001404:	2800      	cmp	r0, #0
90001406:	f000 80e6 	beq.w	900015d6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2a6>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
9000140a:	2307      	movs	r3, #7
9000140c:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
    if (reader != 0)
90001410:	f1ba 0f00 	cmp.w	sl, #0
90001414:	f000 8190 	beq.w	90001738 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x408>
        if (length > aviBufferLength)
90001418:	6bab      	ldr	r3, [r5, #56]	@ 0x38
9000141a:	2b0b      	cmp	r3, #11
9000141c:	f240 8207 	bls.w	9000182e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
90001420:	f8da 3000 	ldr.w	r3, [sl]
90001424:	4621      	mov	r1, r4
90001426:	4650      	mov	r0, sl
90001428:	68db      	ldr	r3, [r3, #12]
9000142a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000142c:	6b28      	ldr	r0, [r5, #48]	@ 0x30
9000142e:	220c      	movs	r2, #12
90001430:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001432:	6803      	ldr	r3, [r0, #0]
90001434:	691b      	ldr	r3, [r3, #16]
90001436:	4798      	blx	r3
90001438:	2800      	cmp	r0, #0
9000143a:	f000 8121 	beq.w	90001680 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x350>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
9000143e:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
        aviBufferStartOffset = offset;
90001442:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
90001444:	63ec      	str	r4, [r5, #60]	@ 0x3c
    return strncmp(src, str, num);
90001446:	f8df 825c 	ldr.w	r8, [pc, #604]	@ 900016a4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x374>
            lastError = AVI_ERROR_EOF_REACHED;
9000144a:	f04f 090d 	mov.w	r9, #13
9000144e:	e003      	b.n	90001458 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x128>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001450:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
    if (reader != 0)
90001454:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
        aviBufferStartOffset = offset;
90001456:	63ec      	str	r4, [r5, #60]	@ 0x3c
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001458:	f104 0708 	add.w	r7, r4, #8
    if (reader != 0)
9000145c:	2e00      	cmp	r6, #0
9000145e:	d052      	beq.n	90001506 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d6>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001460:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
    return strncmp(src, str, num);
90001462:	2204      	movs	r2, #4
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001464:	6b68      	ldr	r0, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
90001466:	4641      	mov	r1, r8
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001468:	1afb      	subs	r3, r7, r3
9000146a:	4418      	add	r0, r3
    return strncmp(src, str, num);
9000146c:	f02c fa67 	bl	9002d93e <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001470:	2800      	cmp	r0, #0
90001472:	d051      	beq.n	90001518 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1e8>
90001474:	f1ba 0f00 	cmp.w	sl, #0
90001478:	f040 80a8 	bne.w	900015cc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29c>
9000147c:	6aab      	ldr	r3, [r5, #40]	@ 0x28
9000147e:	42a3      	cmp	r3, r4
90001480:	d94d      	bls.n	9000151e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ee>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
90001482:	3404      	adds	r4, #4
    if (reader != 0)
90001484:	b386      	cbz	r6, 900014e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b8>
        const uint32_t index = offset - aviBufferStartOffset;
90001486:	6bea      	ldr	r2, [r5, #60]	@ 0x3c
        if (length > aviBufferLength)
90001488:	e9d5 130d 	ldrd	r1, r3, [r5, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
9000148c:	1aa4      	subs	r4, r4, r2
        if (length > aviBufferLength)
9000148e:	2b0b      	cmp	r3, #11
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001490:	eb01 0204 	add.w	r2, r1, r4
90001494:	5d09      	ldrb	r1, [r1, r4]
90001496:	7894      	ldrb	r4, [r2, #2]
90001498:	7850      	ldrb	r0, [r2, #1]
9000149a:	ea4f 4404 	mov.w	r4, r4, lsl #16
9000149e:	78d2      	ldrb	r2, [r2, #3]
900014a0:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
900014a4:	ea44 0401 	orr.w	r4, r4, r1
900014a8:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        listOffset += listSize;
900014ac:	443c      	add	r4, r7
        if (length > aviBufferLength)
900014ae:	f240 81be 	bls.w	9000182e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
900014b2:	6833      	ldr	r3, [r6, #0]
900014b4:	4621      	mov	r1, r4
900014b6:	4630      	mov	r0, r6
900014b8:	68db      	ldr	r3, [r3, #12]
900014ba:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900014bc:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900014be:	220c      	movs	r2, #12
900014c0:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900014c2:	6803      	ldr	r3, [r0, #0]
900014c4:	691b      	ldr	r3, [r3, #16]
900014c6:	4798      	blx	r3
900014c8:	2800      	cmp	r0, #0
900014ca:	d1c1      	bne.n	90001450 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x120>
            lastError = AVI_ERROR_EOF_REACHED;
900014cc:	f04f 0a0d 	mov.w	sl, #13
900014d0:	f885 9040 	strb.w	r9, [r5, #64]	@ 0x40
900014d4:	e7be      	b.n	90001454 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x124>
900014d6:	230d      	movs	r3, #13
900014d8:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900014dc:	e744      	b.n	90001368 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x38>
    offset += 4;
900014de:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
900014e2:	f04f 0801 	mov.w	r8, #1
900014e6:	e786      	b.n	900013f6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc6>
        volatile const uint8_t* const d = movieData + offset;
900014e8:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
900014ea:	1913      	adds	r3, r2, r4
        val |= d[0];
900014ec:	5d12      	ldrb	r2, [r2, r4]
        val |= d[1] << 8;
900014ee:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
900014f0:	789c      	ldrb	r4, [r3, #2]
        val |= d[3] << 24;
900014f2:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
900014f4:	0424      	lsls	r4, r4, #16
900014f6:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
900014fa:	4314      	orrs	r4, r2
        val |= d[3] << 24;
900014fc:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
        listOffset += listSize;
90001500:	443c      	add	r4, r7
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001502:	f104 0708 	add.w	r7, r4, #8
        src = (const char*)movieData + offset;
90001506:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
    return strncmp(src, str, num);
90001508:	2204      	movs	r2, #4
9000150a:	4641      	mov	r1, r8
        src = (const char*)movieData + offset;
9000150c:	2600      	movs	r6, #0
9000150e:	4438      	add	r0, r7
    return strncmp(src, str, num);
90001510:	f02c fa15 	bl	9002d93e <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001514:	2800      	cmp	r0, #0
90001516:	d1ad      	bne.n	90001474 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x144>
    if (lastError != AVI_NO_ERROR)
90001518:	f1ba 0f00 	cmp.w	sl, #0
9000151c:	d156      	bne.n	900015cc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29c>
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
9000151e:	f104 030c 	add.w	r3, r4, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001522:	3404      	adds	r4, #4
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
90001524:	61ab      	str	r3, [r5, #24]
    if (reader != 0)
90001526:	2e00      	cmp	r6, #0
90001528:	f000 8118 	beq.w	9000175c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x42c>
        const uint32_t index = offset - aviBufferStartOffset;
9000152c:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
9000152e:	1ae4      	subs	r4, r4, r3
        if (length > aviBufferLength)
90001530:	e9d5 120d 	ldrd	r1, r2, [r5, #52]	@ 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001534:	f104 0e02 	add.w	lr, r4, #2
90001538:	f104 0c01 	add.w	ip, r4, #1
9000153c:	f811 8004 	ldrb.w	r8, [r1, r4]
90001540:	1ce0      	adds	r0, r4, #3
90001542:	f811 300e 	ldrb.w	r3, [r1, lr]
        if (length > aviBufferLength)
90001546:	2a03      	cmp	r2, #3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001548:	f811 900c 	ldrb.w	r9, [r1, ip]
9000154c:	ea4f 4303 	mov.w	r3, r3, lsl #16
90001550:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
90001554:	ea43 0308 	orr.w	r3, r3, r8
90001558:	f811 8000 	ldrb.w	r8, [r1, r0]
9000155c:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001560:	443b      	add	r3, r7
90001562:	626b      	str	r3, [r5, #36]	@ 0x24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001564:	f811 300e 	ldrb.w	r3, [r1, lr]
90001568:	f811 e00c 	ldrb.w	lr, [r1, ip]
9000156c:	f811 c004 	ldrb.w	ip, [r1, r4]
90001570:	ea4f 4403 	mov.w	r4, r3, lsl #16
90001574:	5c09      	ldrb	r1, [r1, r0]
90001576:	ea44 240e 	orr.w	r4, r4, lr, lsl #8
9000157a:	ea44 040c 	orr.w	r4, r4, ip
9000157e:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
    listOffset += listSize;
90001582:	443c      	add	r4, r7
        if (length > aviBufferLength)
90001584:	f240 8153 	bls.w	9000182e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
90001588:	6833      	ldr	r3, [r6, #0]
9000158a:	4621      	mov	r1, r4
9000158c:	4630      	mov	r0, r6
9000158e:	68db      	ldr	r3, [r3, #12]
90001590:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001592:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90001594:	2204      	movs	r2, #4
90001596:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001598:	6803      	ldr	r3, [r0, #0]
9000159a:	691b      	ldr	r3, [r3, #16]
9000159c:	4798      	blx	r3
9000159e:	2800      	cmp	r0, #0
900015a0:	f000 80cd 	beq.w	9000173e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x40e>
    if (reader != 0)
900015a4:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
        aviBufferStartOffset = offset;
900015a6:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
900015a8:	2b00      	cmp	r3, #0
900015aa:	f000 816e 	beq.w	9000188a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x55a>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900015ae:	6b68      	ldr	r0, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
900015b0:	2204      	movs	r2, #4
900015b2:	493b      	ldr	r1, [pc, #236]	@ (900016a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x370>)
900015b4:	f02c f9c3 	bl	9002d93e <strncmp>
    if (!compare(listOffset, "idx1", 4))
900015b8:	2800      	cmp	r0, #0
900015ba:	f040 80ca 	bne.w	90001752 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x422>
    frameNumber = 1; /* next frame number is 1 */
900015be:	2201      	movs	r2, #1
    firstFrameOffset = currentMovieOffset;
900015c0:	69ab      	ldr	r3, [r5, #24]
        indexOffset = listOffset;
900015c2:	61ec      	str	r4, [r5, #28]
    frameNumber = 1; /* next frame number is 1 */
900015c4:	616a      	str	r2, [r5, #20]
    firstFrameOffset = currentMovieOffset;
900015c6:	622b      	str	r3, [r5, #32]
}
900015c8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
900015cc:	230a      	movs	r3, #10
900015ce:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
900015d2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (foundFrame)
900015d6:	f1b8 0f00 	cmp.w	r8, #0
900015da:	f43f af19 	beq.w	90001410 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xe0>
        offset += 8; /* skip fourcc and cb in AVIMAINHEADER */
900015de:	f107 0220 	add.w	r2, r7, #32
    if (reader != 0)
900015e2:	f1ba 0f00 	cmp.w	sl, #0
900015e6:	f000 80d4 	beq.w	90001792 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x462>
        const uint32_t index = offset - aviBufferStartOffset;
900015ea:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900015ec:	f8df c0b8 	ldr.w	ip, [pc, #184]	@ 900016a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x378>
        const uint32_t index = offset - aviBufferStartOffset;
900015f0:	1ad1      	subs	r1, r2, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900015f2:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
900015f4:	f1c3 0030 	rsb	r0, r3, #48	@ 0x30
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900015f8:	f812 8001 	ldrb.w	r8, [r2, r1]
900015fc:	eb02 0e01 	add.w	lr, r2, r1
        const uint32_t index = offset - aviBufferStartOffset;
90001600:	f1c3 0140 	rsb	r1, r3, #64	@ 0x40
90001604:	f1c3 0344 	rsb	r3, r3, #68	@ 0x44
90001608:	4438      	add	r0, r7
9000160a:	19de      	adds	r6, r3, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000160c:	f89e 3002 	ldrb.w	r3, [lr, #2]
        const uint32_t index = offset - aviBufferStartOffset;
90001610:	4439      	add	r1, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001612:	f89e 7001 	ldrb.w	r7, [lr, #1]
90001616:	041b      	lsls	r3, r3, #16
90001618:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
9000161c:	f89e 7003 	ldrb.w	r7, [lr, #3]
90001620:	ea43 0308 	orr.w	r3, r3, r8
90001624:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
90001628:	1817      	adds	r7, r2, r0
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000162a:	fbac c303 	umull	ip, r3, ip, r3
9000162e:	099b      	lsrs	r3, r3, #6
90001630:	606b      	str	r3, [r5, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001632:	78bb      	ldrb	r3, [r7, #2]
90001634:	f897 e001 	ldrb.w	lr, [r7, #1]
90001638:	041b      	lsls	r3, r3, #16
9000163a:	f812 c000 	ldrb.w	ip, [r2, r0]
9000163e:	78ff      	ldrb	r7, [r7, #3]
90001640:	1850      	adds	r0, r2, r1
90001642:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
90001646:	ea43 030c 	orr.w	r3, r3, ip
9000164a:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
        videoInfo.number_of_frames = getU32(offset + 16);
9000164e:	60ab      	str	r3, [r5, #8]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001650:	7883      	ldrb	r3, [r0, #2]
90001652:	7847      	ldrb	r7, [r0, #1]
90001654:	041b      	lsls	r3, r3, #16
90001656:	5c51      	ldrb	r1, [r2, r1]
90001658:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
9000165c:	430b      	orrs	r3, r1
9000165e:	78c1      	ldrb	r1, [r0, #3]
90001660:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
90001664:	1991      	adds	r1, r2, r6
        videoInfo.frame_width = getU32(offset + 32);
90001666:	60eb      	str	r3, [r5, #12]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001668:	788b      	ldrb	r3, [r1, #2]
9000166a:	7848      	ldrb	r0, [r1, #1]
9000166c:	041b      	lsls	r3, r3, #16
9000166e:	5d92      	ldrb	r2, [r2, r6]
90001670:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001674:	4313      	orrs	r3, r2
90001676:	78ca      	ldrb	r2, [r1, #3]
90001678:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
9000167c:	612b      	str	r3, [r5, #16]
    if (reader != 0)
9000167e:	e6cb      	b.n	90001418 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xe8>
            lastError = AVI_ERROR_EOF_REACHED;
90001680:	230d      	movs	r3, #13
90001682:	469a      	mov	sl, r3
90001684:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
90001688:	e6db      	b.n	90001442 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x112>
9000168a:	bf00      	nop
9000168c:	9002e8c4 	.word	0x9002e8c4
90001690:	9002e97c 	.word	0x9002e97c
90001694:	9002e974 	.word	0x9002e974
90001698:	9002e948 	.word	0x9002e948
9000169c:	9002e95c 	.word	0x9002e95c
900016a0:	9002e96c 	.word	0x9002e96c
900016a4:	9002e964 	.word	0x9002e964
900016a8:	10624dd3 	.word	0x10624dd3
    if (compare(currentMovieOffset, "RIFF", 4))
900016ac:	4637      	mov	r7, r6
        src = (const char*)movieData + offset;
900016ae:	f8d5 902c 	ldr.w	r9, [r5, #44]	@ 0x2c
    return strncmp(src, str, num);
900016b2:	2204      	movs	r2, #4
900016b4:	4976      	ldr	r1, [pc, #472]	@ (90001890 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x560>)
900016b6:	eb09 0007 	add.w	r0, r9, r7
900016ba:	f02c f940 	bl	9002d93e <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
900016be:	2800      	cmp	r0, #0
900016c0:	f040 80c5 	bne.w	9000184e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    currentMovieOffset += 8;
900016c4:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
900016c8:	2204      	movs	r2, #4
900016ca:	4972      	ldr	r1, [pc, #456]	@ (90001894 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x564>)
    currentMovieOffset += 8;
900016cc:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
900016ce:	4448      	add	r0, r9
900016d0:	f02c f935 	bl	9002d93e <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
900016d4:	2800      	cmp	r0, #0
900016d6:	f040 80ce 	bne.w	90001876 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
    currentMovieOffset += 4;
900016da:	f107 0b0c 	add.w	fp, r7, #12
    return strncmp(src, str, num);
900016de:	2204      	movs	r2, #4
900016e0:	496d      	ldr	r1, [pc, #436]	@ (90001898 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
900016e2:	eb09 000b 	add.w	r0, r9, fp
    currentMovieOffset += 4;
900016e6:	f8c5 b018 	str.w	fp, [r5, #24]
    return strncmp(src, str, num);
900016ea:	f02c f928 	bl	9002d93e <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
900016ee:	4680      	mov	r8, r0
900016f0:	2800      	cmp	r0, #0
900016f2:	f040 80b6 	bne.w	90001862 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
    const uint32_t aviListSize = getU32(currentMovieOffset + 4);
900016f6:	f107 0210 	add.w	r2, r7, #16
        volatile const uint8_t* const d = movieData + offset;
900016fa:	eb09 0302 	add.w	r3, r9, r2
        val |= d[0];
900016fe:	f819 2002 	ldrb.w	r2, [r9, r2]
        val |= d[1] << 8;
90001702:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
90001704:	789c      	ldrb	r4, [r3, #2]
        val |= d[3] << 24;
90001706:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
90001708:	0424      	lsls	r4, r4, #16
9000170a:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
9000170e:	4314      	orrs	r4, r2
    assert(aviListSize);
90001710:	ea54 6403 	orrs.w	r4, r4, r3, lsl #24
90001714:	f000 8094 	beq.w	90001840 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
90001718:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
9000171c:	2204      	movs	r2, #4
9000171e:	495f      	ldr	r1, [pc, #380]	@ (9000189c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x56c>)
90001720:	4448      	add	r0, r9
90001722:	f02c f90c 	bl	9002d93e <strncmp>
    if (compare(offset, "hdrl", 4))
90001726:	b970      	cbnz	r0, 90001746 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x416>
    offset += 4;
90001728:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
9000172c:	f04f 0801 	mov.w	r8, #1
        src = (const char*)movieData + offset;
90001730:	4448      	add	r0, r9
90001732:	f04f 0a00 	mov.w	sl, #0
90001736:	e65f      	b.n	900013f8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc8>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001738:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
9000173c:	e683      	b.n	90001446 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x116>
            lastError = AVI_ERROR_EOF_REACHED;
9000173e:	230d      	movs	r3, #13
90001740:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
90001744:	e72e      	b.n	900015a4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x274>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001746:	2306      	movs	r3, #6
    offset += 4;
90001748:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
9000174c:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
    if (reader != 0)
90001750:	e7ee      	b.n	90001730 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x400>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
90001752:	230b      	movs	r3, #11
90001754:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
90001758:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000175c:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
        volatile const uint8_t* const d = movieData + offset;
9000175e:	1902      	adds	r2, r0, r4
        val |= d[0];
90001760:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
90001762:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
90001764:	7893      	ldrb	r3, [r2, #2]
90001766:	041b      	lsls	r3, r3, #16
90001768:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
9000176c:	430b      	orrs	r3, r1
        val |= d[3] << 24;
9000176e:	78d1      	ldrb	r1, [r2, #3]
90001770:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001774:	443b      	add	r3, r7
90001776:	626b      	str	r3, [r5, #36]	@ 0x24
        val |= d[0];
90001778:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
9000177a:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
9000177c:	7894      	ldrb	r4, [r2, #2]
        val |= d[3] << 24;
9000177e:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001780:	0424      	lsls	r4, r4, #16
90001782:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
90001786:	430c      	orrs	r4, r1
        val |= d[3] << 24;
90001788:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
    listOffset += listSize;
9000178c:	443c      	add	r4, r7
        src = (const char*)movieData + offset;
9000178e:	4420      	add	r0, r4
90001790:	e70e      	b.n	900015b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x280>
90001792:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
        videoInfo.number_of_frames = getU32(offset + 16);
90001794:	f107 0c30 	add.w	ip, r7, #48	@ 0x30
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90001798:	f8df e124 	ldr.w	lr, [pc, #292]	@ 900018c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x590>
        videoInfo.frame_width = getU32(offset + 32);
9000179c:	f107 0040 	add.w	r0, r7, #64	@ 0x40
        volatile const uint8_t* const d = movieData + offset;
900017a0:	eb01 0802 	add.w	r8, r1, r2
        val |= d[0];
900017a4:	f811 9002 	ldrb.w	r9, [r1, r2]
        volatile const uint8_t* const d = movieData + offset;
900017a8:	eb01 020c 	add.w	r2, r1, ip
        videoInfo.frame_height = getU32(offset + 36);
900017ac:	3744      	adds	r7, #68	@ 0x44
        val |= d[1] << 8;
900017ae:	f898 a001 	ldrb.w	sl, [r8, #1]
        val |= d[2] << 16;
900017b2:	f898 3002 	ldrb.w	r3, [r8, #2]
        val |= d[3] << 24;
900017b6:	f898 8003 	ldrb.w	r8, [r8, #3]
        val |= d[2] << 16;
900017ba:	041b      	lsls	r3, r3, #16
900017bc:	ea43 230a 	orr.w	r3, r3, sl, lsl #8
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900017c0:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
        val |= d[2] << 16;
900017c4:	ea43 0309 	orr.w	r3, r3, r9
        val |= d[3] << 24;
900017c8:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900017cc:	fbae e303 	umull	lr, r3, lr, r3
900017d0:	099b      	lsrs	r3, r3, #6
900017d2:	606b      	str	r3, [r5, #4]
        val |= d[0];
900017d4:	f811 c00c 	ldrb.w	ip, [r1, ip]
        val |= d[1] << 8;
900017d8:	f892 e001 	ldrb.w	lr, [r2, #1]
        val |= d[2] << 16;
900017dc:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
900017de:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
900017e0:	041b      	lsls	r3, r3, #16
900017e2:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
900017e6:	ea43 030c 	orr.w	r3, r3, ip
        volatile const uint8_t* const d = movieData + offset;
900017ea:	eb01 0c00 	add.w	ip, r1, r0
        val |= d[3] << 24;
900017ee:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        volatile const uint8_t* const d = movieData + offset;
900017f2:	19ca      	adds	r2, r1, r7
        videoInfo.number_of_frames = getU32(offset + 16);
900017f4:	60ab      	str	r3, [r5, #8]
        val |= d[0];
900017f6:	f811 e000 	ldrb.w	lr, [r1, r0]
        val |= d[1] << 8;
900017fa:	f89c 8001 	ldrb.w	r8, [ip, #1]
        val |= d[2] << 16;
900017fe:	f89c 3002 	ldrb.w	r3, [ip, #2]
        val |= d[3] << 24;
90001802:	f89c 0003 	ldrb.w	r0, [ip, #3]
        val |= d[2] << 16;
90001806:	041b      	lsls	r3, r3, #16
90001808:	ea43 2308 	orr.w	r3, r3, r8, lsl #8
9000180c:	ea43 030e 	orr.w	r3, r3, lr
        val |= d[3] << 24;
90001810:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
        videoInfo.frame_width = getU32(offset + 32);
90001814:	60eb      	str	r3, [r5, #12]
        val |= d[0];
90001816:	5dc9      	ldrb	r1, [r1, r7]
        val |= d[1] << 8;
90001818:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
9000181a:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
9000181c:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
9000181e:	041b      	lsls	r3, r3, #16
90001820:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001824:	430b      	orrs	r3, r1
        val |= d[3] << 24;
90001826:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
9000182a:	612b      	str	r3, [r5, #16]
    if (reader != 0)
9000182c:	e60b      	b.n	90001446 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x116>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000182e:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001830:	4b1b      	ldr	r3, [pc, #108]	@ (900018a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
90001832:	4a1c      	ldr	r2, [pc, #112]	@ (900018a4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x574>)
90001834:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001836:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
            assert(!"Buffer to small");
9000183a:	481b      	ldr	r0, [pc, #108]	@ (900018a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
9000183c:	f02b fdb4 	bl	9002d3a8 <__assert_func>
    assert(aviListSize);
90001840:	4b1a      	ldr	r3, [pc, #104]	@ (900018ac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x57c>)
90001842:	f44f 71aa 	mov.w	r1, #340	@ 0x154
90001846:	4a1a      	ldr	r2, [pc, #104]	@ (900018b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
90001848:	4817      	ldr	r0, [pc, #92]	@ (900018a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
9000184a:	f02b fdad 	bl	9002d3a8 <__assert_func>
        lastError = AVI_ERROR_NOT_RIFF;
9000184e:	2003      	movs	r0, #3
        assert(!"RIFF header not found");
90001850:	4b18      	ldr	r3, [pc, #96]	@ (900018b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x584>)
90001852:	4a17      	ldr	r2, [pc, #92]	@ (900018b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
90001854:	f240 113f 	movw	r1, #319	@ 0x13f
        lastError = AVI_ERROR_NOT_RIFF;
90001858:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"RIFF header not found");
9000185c:	4812      	ldr	r0, [pc, #72]	@ (900018a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
9000185e:	f02b fda3 	bl	9002d3a8 <__assert_func>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
90001862:	2005      	movs	r0, #5
        assert(!"AVI LIST not found");
90001864:	4b14      	ldr	r3, [pc, #80]	@ (900018b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x588>)
90001866:	4a12      	ldr	r2, [pc, #72]	@ (900018b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
90001868:	f44f 71a7 	mov.w	r1, #334	@ 0x14e
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
9000186c:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"AVI LIST not found");
90001870:	480d      	ldr	r0, [pc, #52]	@ (900018a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
90001872:	f02b fd99 	bl	9002d3a8 <__assert_func>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
90001876:	2004      	movs	r0, #4
        assert(!"AVI header not found");
90001878:	4b10      	ldr	r3, [pc, #64]	@ (900018bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x58c>)
9000187a:	4a0d      	ldr	r2, [pc, #52]	@ (900018b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
9000187c:	f240 1147 	movw	r1, #327	@ 0x147
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
90001880:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"AVI header not found");
90001884:	4808      	ldr	r0, [pc, #32]	@ (900018a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
90001886:	f02b fd8f 	bl	9002d3a8 <__assert_func>
        src = (const char*)movieData + offset;
9000188a:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
9000188c:	4420      	add	r0, r4
9000188e:	e68f      	b.n	900015b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x280>
90001890:	9002e8c4 	.word	0x9002e8c4
90001894:	9002e97c 	.word	0x9002e97c
90001898:	9002e974 	.word	0x9002e974
9000189c:	9002e948 	.word	0x9002e948
900018a0:	9002e7ec 	.word	0x9002e7ec
900018a4:	9002e800 	.word	0x9002e800
900018a8:	9002e790 	.word	0x9002e790
900018ac:	9002e950 	.word	0x9002e950
900018b0:	9002e8e8 	.word	0x9002e8e8
900018b4:	9002e8cc 	.word	0x9002e8cc
900018b8:	9002e930 	.word	0x9002e930
900018bc:	9002e918 	.word	0x9002e918
900018c0:	10624dd3 	.word	0x10624dd3

900018c4 <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
{
900018c4:	b410      	push	{r4}
    reader = 0; /* not using reader */
900018c6:	2400      	movs	r4, #0
    movieLength = length;
900018c8:	e9c0 210a 	strd	r2, r1, [r0, #40]	@ 0x28
    reader = 0; /* not using reader */
900018cc:	6304      	str	r4, [r0, #48]	@ 0x30
}
900018ce:	f85d 4b04 	ldr.w	r4, [sp], #4
    readVideoHeader();
900018d2:	f7ff bd2d 	b.w	90001330 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
900018d6:	bf00      	nop

900018d8 <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
900018d8:	b510      	push	{r4, lr}
    movieLength = reader.getDataLength();
900018da:	680b      	ldr	r3, [r1, #0]
{
900018dc:	4604      	mov	r4, r0
    movieData = 0;
900018de:	2200      	movs	r2, #0
    movieLength = reader.getDataLength();
900018e0:	4608      	mov	r0, r1
900018e2:	689b      	ldr	r3, [r3, #8]
    movieData = 0;
900018e4:	e9c4 210b 	strd	r2, r1, [r4, #44]	@ 0x2c
    movieLength = reader.getDataLength();
900018e8:	4798      	blx	r3
900018ea:	4603      	mov	r3, r0
    readVideoHeader();
900018ec:	4620      	mov	r0, r4
    movieLength = reader.getDataLength();
900018ee:	62a3      	str	r3, [r4, #40]	@ 0x28
}
900018f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
900018f4:	f7ff bd1c 	b.w	90001330 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

900018f8 <JPEG_Decode_DMA>:
     * @param  JPEGImageSize_Bytes    : jpg image size in bytes.
     * @param  DestAddress : ARGB8888 destination Frame Buffer Address.
     * @retval None
     */
    uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef* hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
    {
900018f8:	b570      	push	{r4, r5, r6, lr}
        JPEG_output_is_paused = 0;
900018fa:	4b1f      	ldr	r3, [pc, #124]	@ (90001978 <JPEG_Decode_DMA+0x80>)
900018fc:	2400      	movs	r4, #0
        JPEG_OUT_Read_BufferIndex = 0;
900018fe:	4d1f      	ldr	r5, [pc, #124]	@ (9000197c <JPEG_Decode_DMA+0x84>)
    {
90001900:	b082      	sub	sp, #8
        JPEG_output_is_paused = 0;
90001902:	601c      	str	r4, [r3, #0]
        JPEG_OUT_Read_BufferIndex = 0;
90001904:	602c      	str	r4, [r5, #0]
        JPEG_OUT_Write_BufferIndex = 0;
90001906:	4b1e      	ldr	r3, [pc, #120]	@ (90001980 <JPEG_Decode_DMA+0x88>)
        JPEG_InputImageIndex = 0;
        JPEG_InputImageAddress = (uint32_t)input;
        JPEG_InputImageSize_Bytes = chunkSizeIn;
        MCU_BlockIndex = 0;
90001908:	4d1e      	ldr	r5, [pc, #120]	@ (90001984 <JPEG_Decode_DMA+0x8c>)
        JPEG_OUT_Write_BufferIndex = 0;
9000190a:	601c      	str	r4, [r3, #0]
            Jpeg_OUT_BufferTab[i].DoCropping = false;
            Jpeg_OUT_BufferTab[i].FirstJob = false;
            Jpeg_OUT_BufferTab[i].LastJob = false;
        }
        Jpeg_OUT_BufferTab[0].FirstJob = true;
        if (JPEG_ConvertorParams.firstRowOffset != 0)
9000190c:	4e1e      	ldr	r6, [pc, #120]	@ (90001988 <JPEG_Decode_DMA+0x90>)
        MCU_BlockIndex = 0;
9000190e:	602c      	str	r4, [r5, #0]
        line_count = 0;
90001910:	4d1e      	ldr	r5, [pc, #120]	@ (9000198c <JPEG_Decode_DMA+0x94>)
90001912:	602c      	str	r4, [r5, #0]
        {
            Jpeg_OUT_BufferTab[0].DoCropping = true;
        }

        /* Do not return from this function until done with decoding all chunks. */
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001914:	68f5      	ldr	r5, [r6, #12]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001916:	6b76      	ldr	r6, [r6, #52]	@ 0x34
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001918:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9000191c:	681b      	ldr	r3, [r3, #0]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
9000191e:	ebb6 0c04 	subs.w	ip, r6, r4
        JPEG_InputImageIndex = 0;
90001922:	4e1b      	ldr	r6, [pc, #108]	@ (90001990 <JPEG_Decode_DMA+0x98>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001924:	ea4f 15c5 	mov.w	r5, r5, lsl #7
90001928:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        if (JPEG_ConvertorParams.firstRowOffset != 0)
9000192c:	bf18      	it	ne
9000192e:	f04f 0c01 	movne.w	ip, #1
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001932:	9500      	str	r5, [sp, #0]
        JPEG_InputImageIndex = 0;
90001934:	6034      	str	r4, [r6, #0]
        JPEG_InputImageAddress = (uint32_t)input;
90001936:	4e17      	ldr	r6, [pc, #92]	@ (90001994 <JPEG_Decode_DMA+0x9c>)
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90001938:	4d17      	ldr	r5, [pc, #92]	@ (90001998 <JPEG_Decode_DMA+0xa0>)
        JPEG_InputImageAddress = (uint32_t)input;
9000193a:	6031      	str	r1, [r6, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
9000193c:	4e17      	ldr	r6, [pc, #92]	@ (9000199c <JPEG_Decode_DMA+0xa4>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000193e:	eb05 0383 	add.w	r3, r5, r3, lsl #2
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001942:	f885 c018 	strb.w	ip, [r5, #24]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90001946:	6032      	str	r2, [r6, #0]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
90001948:	2201      	movs	r2, #1
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000194a:	685b      	ldr	r3, [r3, #4]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
9000194c:	766a      	strb	r2, [r5, #25]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000194e:	f44f 4250 	mov.w	r2, #53248	@ 0xd000
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90001952:	702c      	strb	r4, [r5, #0]
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
90001954:	60ac      	str	r4, [r5, #8]
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
90001956:	616c      	str	r4, [r5, #20]
            Jpeg_OUT_BufferTab[i].LastJob = false;
90001958:	76ac      	strb	r4, [r5, #26]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
9000195a:	772c      	strb	r4, [r5, #28]
            Jpeg_OUT_BufferTab[i].DoCropping = false;
9000195c:	86ac      	strh	r4, [r5, #52]	@ 0x34
            Jpeg_OUT_BufferTab[i].LastJob = false;
9000195e:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
            Jpeg_OUT_BufferTab[i].MCU_drawn = 0;
90001962:	e9c5 4403 	strd	r4, r4, [r5, #12]
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
90001966:	e9c5 4409 	strd	r4, r4, [r5, #36]	@ 0x24
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
9000196a:	e9c5 440b 	strd	r4, r4, [r5, #44]	@ 0x2c
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000196e:	f008 fe4f 	bl	9000a610 <HAL_JPEG_Decode_DMA>

        return 0;
    }
90001972:	4620      	mov	r0, r4
90001974:	b002      	add	sp, #8
90001976:	bd70      	pop	{r4, r5, r6, pc}
90001978:	24006014 	.word	0x24006014
9000197c:	24005df4 	.word	0x24005df4
90001980:	24006008 	.word	0x24006008
90001984:	24005dfc 	.word	0x24005dfc
90001988:	24005db0 	.word	0x24005db0
9000198c:	24006004 	.word	0x24006004
90001990:	24006024 	.word	0x24006024
90001994:	2400601c 	.word	0x2400601c
90001998:	24000004 	.word	0x24000004
9000199c:	24006020 	.word	0x24006020

900019a0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>:
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900019a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900019a4:	4606      	mov	r6, r0
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900019a6:	2402      	movs	r4, #2
900019a8:	483e      	ldr	r0, [pc, #248]	@ (90001aa4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x104>)
900019aa:	6104      	str	r4, [r0, #16]
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
900019ac:	68f4      	ldr	r4, [r6, #12]
        if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
900019ae:	0725      	lsls	r5, r4, #28
900019b0:	d002      	beq.n	900019b8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x18>
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
900019b2:	f024 040f 	bic.w	r4, r4, #15
900019b6:	3410      	adds	r4, #16
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
900019b8:	6004      	str	r4, [r0, #0]
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
900019ba:	0924      	lsrs	r4, r4, #4
        DMA2D_reference = dma;
900019bc:	4d3a      	ldr	r5, [pc, #232]	@ (90001aa8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x108>)
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
900019be:	60c4      	str	r4, [r0, #12]
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
900019c0:	f44f 7470 	mov.w	r4, #960	@ 0x3c0
900019c4:	f8df a100 	ldr.w	sl, [pc, #256]	@ 90001ac8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x128>
900019c8:	6044      	str	r4, [r0, #4]
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
900019ca:	6934      	ldr	r4, [r6, #16]
    {
        DMA2D_reference->start();
    }

    /* Start JPEG IP if paused and next buffer is empty */
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
900019cc:	4f37      	ldr	r7, [pc, #220]	@ (90001aac <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
900019ce:	f014 040f 	ands.w	r4, r4, #15
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
900019d2:	f8df 90f8 	ldr.w	r9, [pc, #248]	@ 90001acc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x12c>
900019d6:	f8df 80f8 	ldr.w	r8, [pc, #248]	@ 90001ad0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x130>
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
900019da:	bf18      	it	ne
900019dc:	f1c4 0410 	rsbne	r4, r4, #16
900019e0:	6084      	str	r4, [r0, #8]
        FrameBufferAddress = outputBuffer;
900019e2:	4833      	ldr	r0, [pc, #204]	@ (90001ab0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x110>)
900019e4:	4c33      	ldr	r4, [pc, #204]	@ (90001ab4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x114>)
900019e6:	6003      	str	r3, [r0, #0]
        JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, outputBuffer);
900019e8:	4833      	ldr	r0, [pc, #204]	@ (90001ab8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
900019ea:	f7ff ff85 	bl	900018f8 <JPEG_Decode_DMA>
        DMA2D_reference = dma;
900019ee:	6c73      	ldr	r3, [r6, #68]	@ 0x44
900019f0:	4e32      	ldr	r6, [pc, #200]	@ (90001abc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x11c>)
900019f2:	602b      	str	r3, [r5, #0]
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
900019f4:	f8da 3000 	ldr.w	r3, [sl]
900019f8:	b10b      	cbz	r3, 900019fe <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x5e>
900019fa:	6833      	ldr	r3, [r6, #0]
900019fc:	bb6b      	cbnz	r3, 90001a5a <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xba>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
900019fe:	6828      	ldr	r0, [r5, #0]
90001a00:	7a03      	ldrb	r3, [r0, #8]
90001a02:	b93b      	cbnz	r3, 90001a14 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x74>
90001a04:	4b2e      	ldr	r3, [pc, #184]	@ (90001ac0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x120>)
90001a06:	681b      	ldr	r3, [r3, #0]
90001a08:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001a0c:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001a10:	2b01      	cmp	r3, #1
90001a12:	d03b      	beq.n	90001a8c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xec>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a14:	683b      	ldr	r3, [r7, #0]
90001a16:	2b01      	cmp	r3, #1
90001a18:	d00d      	beq.n	90001a36 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x96>
    {
        JPEG_output_is_paused = 0;
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
    }

    return 2;
90001a1a:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001a1c:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90001a1e:	6823      	ldr	r3, [r4, #0]
90001a20:	2b02      	cmp	r3, #2
90001a22:	d024      	beq.n	90001a6e <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xce>
        } while (JpegProcessing_End != 1);
90001a24:	6823      	ldr	r3, [r4, #0]
90001a26:	2b01      	cmp	r3, #1
90001a28:	d1e4      	bne.n	900019f4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x54>
        Jpeg_HWDecodingEnd = 0;
90001a2a:	2300      	movs	r3, #0
90001a2c:	f8ca 3000 	str.w	r3, [sl]
        DMA2D_CopyBufferEnd = 0;
90001a30:	6033      	str	r3, [r6, #0]
}
90001a32:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a36:	f8d9 3000 	ldr.w	r3, [r9]
90001a3a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001a3e:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001a42:	2b00      	cmp	r3, #0
90001a44:	d1e9      	bne.n	90001a1a <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x7a>
90001a46:	f8da 3000 	ldr.w	r3, [sl]
90001a4a:	2b00      	cmp	r3, #0
90001a4c:	d1e5      	bne.n	90001a1a <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x7a>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001a4e:	2102      	movs	r1, #2
90001a50:	4819      	ldr	r0, [pc, #100]	@ (90001ab8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
        JPEG_output_is_paused = 0;
90001a52:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001a54:	f008 ff8c 	bl	9000a970 <HAL_JPEG_Resume>
90001a58:	e7df      	b.n	90001a1a <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x7a>
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
90001a5a:	4817      	ldr	r0, [pc, #92]	@ (90001ab8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
90001a5c:	f009 fd52 	bl	9000b504 <HAL_JPEG_GetState>
90001a60:	2804      	cmp	r0, #4
90001a62:	d01a      	beq.n	90001a9a <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xfa>
        return 1;
90001a64:	2301      	movs	r3, #1
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001a66:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90001a68:	6823      	ldr	r3, [r4, #0]
90001a6a:	2b02      	cmp	r3, #2
90001a6c:	d1da      	bne.n	90001a24 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x84>
                SEM_WAIT(semDecodingDone);
90001a6e:	4b15      	ldr	r3, [pc, #84]	@ (90001ac4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x124>)
90001a70:	f04f 31ff 	mov.w	r1, #4294967295
90001a74:	6818      	ldr	r0, [r3, #0]
90001a76:	f00d ff39 	bl	9000f8ec <osSemaphoreAcquire>
        } while (JpegProcessing_End != 1);
90001a7a:	6823      	ldr	r3, [r4, #0]
90001a7c:	2b01      	cmp	r3, #1
90001a7e:	d1b9      	bne.n	900019f4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x54>
        Jpeg_HWDecodingEnd = 0;
90001a80:	2300      	movs	r3, #0
90001a82:	f8ca 3000 	str.w	r3, [sl]
        DMA2D_CopyBufferEnd = 0;
90001a86:	6033      	str	r3, [r6, #0]
}
90001a88:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001a8c:	6833      	ldr	r3, [r6, #0]
90001a8e:	2b00      	cmp	r3, #0
90001a90:	d1c0      	bne.n	90001a14 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x74>
        DMA2D_reference->start();
90001a92:	6803      	ldr	r3, [r0, #0]
90001a94:	691b      	ldr	r3, [r3, #16]
90001a96:	4798      	blx	r3
90001a98:	e7bc      	b.n	90001a14 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x74>
            HAL_JPEG_Abort(hjpeg);
90001a9a:	4807      	ldr	r0, [pc, #28]	@ (90001ab8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
90001a9c:	f008 fe36 	bl	9000a70c <HAL_JPEG_Abort>
90001aa0:	e7e0      	b.n	90001a64 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc4>
90001aa2:	bf00      	nop
90001aa4:	24005db0 	.word	0x24005db0
90001aa8:	2400600c 	.word	0x2400600c
90001aac:	24006014 	.word	0x24006014
90001ab0:	24006028 	.word	0x24006028
90001ab4:	24006010 	.word	0x24006010
90001ab8:	24007918 	.word	0x24007918
90001abc:	24005df0 	.word	0x24005df0
90001ac0:	24005df4 	.word	0x24005df4
90001ac4:	24005df8 	.word	0x24005df8
90001ac8:	24006018 	.word	0x24006018
90001acc:	24006008 	.word	0x24006008
90001ad0:	24000004 	.word	0x24000004

90001ad4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001ad4:	6943      	ldr	r3, [r0, #20]
{
90001ad6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001ada:	2b00      	cmp	r3, #0
90001adc:	f000 80ad 	beq.w	90001c3a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x166>
    readData(currentMovieOffset, 8);
90001ae0:	4604      	mov	r4, r0
    if (reader != 0)
90001ae2:	6b00      	ldr	r0, [r0, #48]	@ 0x30
90001ae4:	460e      	mov	r6, r1
    readData(currentMovieOffset, 8);
90001ae6:	69a5      	ldr	r5, [r4, #24]
    if (reader != 0)
90001ae8:	2800      	cmp	r0, #0
90001aea:	d05f      	beq.n	90001bac <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd8>
        if (length > aviBufferLength)
90001aec:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001aee:	2b07      	cmp	r3, #7
90001af0:	f240 80a9 	bls.w	90001c46 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90001af4:	6803      	ldr	r3, [r0, #0]
90001af6:	4629      	mov	r1, r5
90001af8:	68db      	ldr	r3, [r3, #12]
90001afa:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001afc:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001afe:	2208      	movs	r2, #8
90001b00:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001b02:	6803      	ldr	r3, [r0, #0]
90001b04:	691b      	ldr	r3, [r3, #16]
90001b06:	4798      	blx	r3
90001b08:	2800      	cmp	r0, #0
90001b0a:	d04a      	beq.n	90001ba2 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xce>
    uint32_t streamNo  = getU16(currentMovieOffset);
90001b0c:	69a1      	ldr	r1, [r4, #24]
    if (reader != 0)
90001b0e:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001b10:	f101 0c04 	add.w	ip, r1, #4
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001b14:	1c8a      	adds	r2, r1, #2
        aviBufferStartOffset = offset;
90001b16:	63e5      	str	r5, [r4, #60]	@ 0x3c
    if (reader != 0)
90001b18:	2800      	cmp	r0, #0
90001b1a:	d046      	beq.n	90001baa <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd6>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b1c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001b1e:	ebac 0c05 	sub.w	ip, ip, r5
        const uint32_t index = offset - aviBufferStartOffset;
90001b22:	1b52      	subs	r2, r2, r5
90001b24:	1b4d      	subs	r5, r1, r5
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b26:	eb03 070c 	add.w	r7, r3, ip
90001b2a:	f813 e00c 	ldrb.w	lr, [r3, ip]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b2e:	eb03 0805 	add.w	r8, r3, r5
90001b32:	f813 c005 	ldrb.w	ip, [r3, r5]
90001b36:	f898 5001 	ldrb.w	r5, [r8, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b3a:	f897 8001 	ldrb.w	r8, [r7, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b3e:	ea4c 2c05 	orr.w	ip, ip, r5, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b42:	78bd      	ldrb	r5, [r7, #2]
90001b44:	78ff      	ldrb	r7, [r7, #3]
90001b46:	042d      	lsls	r5, r5, #16
90001b48:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
90001b4c:	ea45 050e 	orr.w	r5, r5, lr
90001b50:	ea45 6507 	orr.w	r5, r5, r7, lsl #24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b54:	189f      	adds	r7, r3, r2
90001b56:	5c9b      	ldrb	r3, [r3, r2]
90001b58:	787a      	ldrb	r2, [r7, #1]
90001b5a:	ea43 2702 	orr.w	r7, r3, r2, lsl #8
    if (currentMovieOffset + 8 + chunkSize < movieLength)
90001b5e:	eb01 0e05 	add.w	lr, r1, r5
90001b62:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90001b64:	f10e 0208 	add.w	r2, lr, #8
90001b68:	429a      	cmp	r2, r3
90001b6a:	d213      	bcs.n	90001b94 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
90001b6c:	f243 0330 	movw	r3, #12336	@ 0x3030
90001b70:	459c      	cmp	ip, r3
90001b72:	d138      	bne.n	90001be6 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001b74:	f246 3364 	movw	r3, #25444	@ 0x6364
90001b78:	429f      	cmp	r7, r3
90001b7a:	d134      	bne.n	90001be6 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001b7c:	2d00      	cmp	r5, #0
90001b7e:	d136      	bne.n	90001bee <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x11a>
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001b80:	3201      	adds	r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001b82:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001b84:	f022 0201 	bic.w	r2, r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001b88:	429a      	cmp	r2, r3
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001b8a:	61a2      	str	r2, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
90001b8c:	d002      	beq.n	90001b94 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
90001b8e:	2001      	movs	r0, #1
}
90001b90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        frameNumber = 1;
90001b94:	2201      	movs	r2, #1
        currentMovieOffset = firstFrameOffset; /* start over */
90001b96:	6a23      	ldr	r3, [r4, #32]
        if (chunkSize == 0) /* Empty frame - Skip */
90001b98:	2000      	movs	r0, #0
        currentMovieOffset = firstFrameOffset; /* start over */
90001b9a:	e9c4 2305 	strd	r2, r3, [r4, #20]
}
90001b9e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90001ba2:	230d      	movs	r3, #13
90001ba4:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001ba8:	e7b0      	b.n	90001b0c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x38>
90001baa:	460d      	mov	r5, r1
        volatile const uint8_t* const d = movieData + offset;
90001bac:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001bae:	1caf      	adds	r7, r5, #2
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001bb0:	1d28      	adds	r0, r5, #4
        val |= d[3] << 24;
90001bb2:	4629      	mov	r1, r5
        volatile const uint8_t* const d = movieData + offset;
90001bb4:	195a      	adds	r2, r3, r5
        val |= d[0];
90001bb6:	f813 c005 	ldrb.w	ip, [r3, r5]
        volatile const uint8_t* const d = movieData + offset;
90001bba:	19dd      	adds	r5, r3, r7
        val |= d[1] << 8;
90001bbc:	7852      	ldrb	r2, [r2, #1]
        val |= d[0];
90001bbe:	5ddf      	ldrb	r7, [r3, r7]
        val |= d[1] << 8;
90001bc0:	ea4c 2c02 	orr.w	ip, ip, r2, lsl #8
90001bc4:	786d      	ldrb	r5, [r5, #1]
        volatile const uint8_t* const d = movieData + offset;
90001bc6:	181a      	adds	r2, r3, r0
        val |= d[0];
90001bc8:	5c18      	ldrb	r0, [r3, r0]
        val |= d[1] << 8;
90001bca:	ea47 2705 	orr.w	r7, r7, r5, lsl #8
        val |= d[1] << 8;
90001bce:	f892 e001 	ldrb.w	lr, [r2, #1]
        val |= d[2] << 16;
90001bd2:	7895      	ldrb	r5, [r2, #2]
        val |= d[3] << 24;
90001bd4:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001bd6:	042d      	lsls	r5, r5, #16
90001bd8:	ea45 250e 	orr.w	r5, r5, lr, lsl #8
90001bdc:	4305      	orrs	r5, r0
        val |= d[3] << 24;
90001bde:	2000      	movs	r0, #0
90001be0:	ea45 6503 	orr.w	r5, r5, r3, lsl #24
        return val;
90001be4:	e7bb      	b.n	90001b5e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
        if (chunkSize == 0) /* Empty frame - Skip */
90001be6:	2d00      	cmp	r5, #0
90001be8:	bf18      	it	ne
90001bea:	4672      	movne	r2, lr
90001bec:	e7c8      	b.n	90001b80 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
            currentMovieOffset += 8;
90001bee:	f101 0708 	add.w	r7, r1, #8
90001bf2:	61a7      	str	r7, [r4, #24]
    if (reader != 0)
90001bf4:	b1f0      	cbz	r0, 90001c34 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x160>
        if (length > aviBufferLength)
90001bf6:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001bf8:	429d      	cmp	r5, r3
90001bfa:	d824      	bhi.n	90001c46 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90001bfc:	6803      	ldr	r3, [r0, #0]
90001bfe:	4639      	mov	r1, r7
90001c00:	68db      	ldr	r3, [r3, #12]
90001c02:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001c04:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001c06:	462a      	mov	r2, r5
90001c08:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001c0a:	6803      	ldr	r3, [r0, #0]
90001c0c:	691b      	ldr	r3, [r3, #16]
90001c0e:	4798      	blx	r3
90001c10:	b910      	cbnz	r0, 90001c18 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x144>
            lastError = AVI_ERROR_EOF_REACHED;
90001c12:	230d      	movs	r3, #13
90001c14:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        return aviBuffer;
90001c18:	6b61      	ldr	r1, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
90001c1a:	63e7      	str	r7, [r4, #60]	@ 0x3c
    if (outputBuffer) /* only decode if buffers are assigned. */
90001c1c:	b126      	cbz	r6, 90001c28 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x154>
90001c1e:	4633      	mov	r3, r6
90001c20:	462a      	mov	r2, r5
90001c22:	4620      	mov	r0, r4
90001c24:	f7ff febc 	bl	900019a0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>
        currentMovieOffset += chunkSize;
90001c28:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
            frameNumber++;
90001c2c:	3301      	adds	r3, #1
        currentMovieOffset += chunkSize;
90001c2e:	442a      	add	r2, r5
            frameNumber++;
90001c30:	6163      	str	r3, [r4, #20]
        if (chunkSize == 0) /* Empty frame - Skip */
90001c32:	e7a5      	b.n	90001b80 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
    return movieData + offset;
90001c34:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90001c36:	4439      	add	r1, r7
90001c38:	e7f0      	b.n	90001c1c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x148>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001c3a:	4b07      	ldr	r3, [pc, #28]	@ (90001c58 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x184>)
90001c3c:	21c3      	movs	r1, #195	@ 0xc3
90001c3e:	4a07      	ldr	r2, [pc, #28]	@ (90001c5c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x188>)
90001c40:	4807      	ldr	r0, [pc, #28]	@ (90001c60 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
90001c42:	f02b fbb1 	bl	9002d3a8 <__assert_func>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001c46:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001c48:	4b06      	ldr	r3, [pc, #24]	@ (90001c64 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x190>)
90001c4a:	4a07      	ldr	r2, [pc, #28]	@ (90001c68 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x194>)
90001c4c:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001c4e:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001c52:	4803      	ldr	r0, [pc, #12]	@ (90001c60 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
90001c54:	f02b fba8 	bl	9002d3a8 <__assert_func>
90001c58:	9002e844 	.word	0x9002e844
90001c5c:	9002e984 	.word	0x9002e984
90001c60:	9002e790 	.word	0x9002e790
90001c64:	9002e7ec 	.word	0x9002e7ec
90001c68:	9002e800 	.word	0x9002e800

90001c6c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
90001c6c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90001c70:	4604      	mov	r4, r0
    readData(currentMovieOffset, 8);
90001c72:	f8d0 9018 	ldr.w	r9, [r0, #24]
    if (reader != 0)
90001c76:	6b00      	ldr	r0, [r0, #48]	@ 0x30
{
90001c78:	460e      	mov	r6, r1
90001c7a:	4690      	mov	r8, r2
90001c7c:	461f      	mov	r7, r3
    if (reader != 0)
90001c7e:	2800      	cmp	r0, #0
90001c80:	f000 80f9 	beq.w	90001e76 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x20a>
        if (length > aviBufferLength)
90001c84:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001c86:	2b07      	cmp	r3, #7
90001c88:	f240 810a 	bls.w	90001ea0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x234>
        reader->seek(offset);
90001c8c:	6803      	ldr	r3, [r0, #0]
90001c8e:	4649      	mov	r1, r9
90001c90:	68db      	ldr	r3, [r3, #12]
90001c92:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001c94:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001c96:	2208      	movs	r2, #8
90001c98:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001c9a:	6803      	ldr	r3, [r0, #0]
90001c9c:	691b      	ldr	r3, [r3, #16]
90001c9e:	4798      	blx	r3
90001ca0:	2800      	cmp	r0, #0
90001ca2:	f000 80b3 	beq.w	90001e0c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a0>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001ca6:	69a2      	ldr	r2, [r4, #24]
    if (reader != 0)
90001ca8:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    const uint32_t length = getU32(currentMovieOffset + 4);
90001caa:	1d13      	adds	r3, r2, #4
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90001cac:	f102 0508 	add.w	r5, r2, #8
        aviBufferStartOffset = offset;
90001cb0:	f8c4 903c 	str.w	r9, [r4, #60]	@ 0x3c
    if (reader != 0)
90001cb4:	2800      	cmp	r0, #0
90001cb6:	f000 80fc 	beq.w	90001eb2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x246>
        const uint32_t index = offset - aviBufferStartOffset;
90001cba:	eba3 0209 	sub.w	r2, r3, r9
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001cbe:	6b63      	ldr	r3, [r4, #52]	@ 0x34
90001cc0:	1899      	adds	r1, r3, r2
90001cc2:	5c9a      	ldrb	r2, [r3, r2]
        if (length > aviBufferLength)
90001cc4:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001cc6:	f891 9002 	ldrb.w	r9, [r1, #2]
90001cca:	f891 c001 	ldrb.w	ip, [r1, #1]
90001cce:	ea4f 4909 	mov.w	r9, r9, lsl #16
90001cd2:	ea49 290c 	orr.w	r9, r9, ip, lsl #8
90001cd6:	ea49 0902 	orr.w	r9, r9, r2
90001cda:	78ca      	ldrb	r2, [r1, #3]
90001cdc:	ea49 6902 	orr.w	r9, r9, r2, lsl #24
        if (length > aviBufferLength)
90001ce0:	454b      	cmp	r3, r9
90001ce2:	f0c0 80dd 	bcc.w	90001ea0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x234>
        reader->seek(offset);
90001ce6:	6803      	ldr	r3, [r0, #0]
90001ce8:	4629      	mov	r1, r5
90001cea:	68db      	ldr	r3, [r3, #12]
90001cec:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001cee:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001cf0:	464a      	mov	r2, r9
90001cf2:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001cf4:	6803      	ldr	r3, [r0, #0]
90001cf6:	691b      	ldr	r3, [r3, #16]
90001cf8:	4798      	blx	r3
90001cfa:	2800      	cmp	r0, #0
90001cfc:	f000 8082 	beq.w	90001e04 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x198>
        return aviBuffer;
90001d00:	6b61      	ldr	r1, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
90001d02:	63e5      	str	r5, [r4, #60]	@ 0x3c
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001d04:	f8d4 c00c 	ldr.w	ip, [r4, #12]
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001d08:	2302      	movs	r3, #2
90001d0a:	486b      	ldr	r0, [pc, #428]	@ (90001eb8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001d0c:	f01c 0f0f 	tst.w	ip, #15
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001d10:	6103      	str	r3, [r0, #16]
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001d12:	d172      	bne.n	90001dfa <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x18e>
90001d14:	4662      	mov	r2, ip
90001d16:	4663      	mov	r3, ip
     *
     * @return x coordinate of the right edge (calculated as "x + width").
     */
    FORCE_INLINE_FUNCTION int16_t right() const
    {
        return x + width;
90001d18:	88b5      	ldrh	r5, [r6, #4]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001d1a:	091b      	lsrs	r3, r3, #4
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001d1c:	6002      	str	r2, [r0, #0]
    JPEG_ConvertorParams.startX = area.x;
90001d1e:	f9b6 2000 	ldrsh.w	r2, [r6]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001d22:	60c3      	str	r3, [r0, #12]
90001d24:	4415      	add	r5, r2
    JPEG_ConvertorParams.startY = area.y;
90001d26:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
     *
     * @return y coordinate of the bottom edge (calculated as "y + height").
     */
    FORCE_INLINE_FUNCTION int16_t bottom() const
    {
        return y + height;
90001d2a:	88f6      	ldrh	r6, [r6, #6]
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d2c:	b22d      	sxth	r5, r5
    JPEG_ConvertorParams.startY = area.y;
90001d2e:	6143      	str	r3, [r0, #20]
90001d30:	441e      	add	r6, r3
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
90001d32:	f003 030f 	and.w	r3, r3, #15
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d36:	4565      	cmp	r5, ip
    JPEG_ConvertorParams.startX = area.x;
90001d38:	61c2      	str	r2, [r0, #28]
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
90001d3a:	6343      	str	r3, [r0, #52]	@ 0x34
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001d3c:	b236      	sxth	r6, r6
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d3e:	bf28      	it	cs
90001d40:	4665      	movcs	r5, ip
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
90001d42:	ea4f 1c12 	mov.w	ip, r2, lsr #4
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
90001d46:	f002 020f 	and.w	r2, r2, #15
90001d4a:	f8df a1a0 	ldr.w	sl, [pc, #416]	@ 90001eec <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x280>
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d4e:	f105 030f 	add.w	r3, r5, #15
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d52:	6205      	str	r5, [r0, #32]
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
90001d54:	6302      	str	r2, [r0, #48]	@ 0x30
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001d56:	464a      	mov	r2, r9
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d58:	091b      	lsrs	r3, r3, #4
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
90001d5a:	f8c0 c024 	str.w	ip, [r0, #36]	@ 0x24
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001d5e:	f8df 9190 	ldr.w	r9, [pc, #400]	@ 90001ef0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x284>
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d62:	6283      	str	r3, [r0, #40]	@ 0x28
    JPEG_ConvertorParams.MCU_pr_job = JPEG_ConvertorParams.MCUEnd - JPEG_ConvertorParams.MCUStart;
90001d64:	eba3 030c 	sub.w	r3, r3, ip
90001d68:	62c3      	str	r3, [r0, #44]	@ 0x2c
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001d6a:	6923      	ldr	r3, [r4, #16]
90001d6c:	429e      	cmp	r6, r3
90001d6e:	bf28      	it	cs
90001d70:	461e      	movcs	r6, r3
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001d72:	f015 050f 	ands.w	r5, r5, #15
    JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001d76:	f44f 7370 	mov.w	r3, #960	@ 0x3c0
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001d7a:	bf18      	it	ne
90001d7c:	f1c5 0510 	rsbne	r5, r5, #16
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001d80:	6186      	str	r6, [r0, #24]
    JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001d82:	6043      	str	r3, [r0, #4]
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001d84:	f016 060f 	ands.w	r6, r6, #15
    FrameBufferWidth = framebuffer_width;
90001d88:	4b4c      	ldr	r3, [pc, #304]	@ (90001ebc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x250>)
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001d8a:	bf18      	it	ne
90001d8c:	f1c6 0610 	rsbne	r6, r6, #16
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001d90:	6385      	str	r5, [r0, #56]	@ 0x38
    FrameBufferWidth = framebuffer_width;
90001d92:	601f      	str	r7, [r3, #0]
    FrameBufferAddress = frameBuffer;
90001d94:	4b4a      	ldr	r3, [pc, #296]	@ (90001ec0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x254>)
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001d96:	63c6      	str	r6, [r0, #60]	@ 0x3c
    FrameBufferAddress = frameBuffer;
90001d98:	f8c3 8000 	str.w	r8, [r3]
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001d9c:	4643      	mov	r3, r8
90001d9e:	4849      	ldr	r0, [pc, #292]	@ (90001ec4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
90001da0:	f7ff fdaa 	bl	900018f8 <JPEG_Decode_DMA>
    DMA2D_reference = dma;
90001da4:	4d48      	ldr	r5, [pc, #288]	@ (90001ec8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x25c>)
90001da6:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90001da8:	4e48      	ldr	r6, [pc, #288]	@ (90001ecc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x260>)
90001daa:	4c49      	ldr	r4, [pc, #292]	@ (90001ed0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x264>)
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001dac:	4f49      	ldr	r7, [pc, #292]	@ (90001ed4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x268>)
90001dae:	f8df 8144 	ldr.w	r8, [pc, #324]	@ 90001ef4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x288>
    DMA2D_reference = dma;
90001db2:	602b      	str	r3, [r5, #0]
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90001db4:	f8da 3000 	ldr.w	r3, [sl]
90001db8:	b113      	cbz	r3, 90001dc0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x154>
90001dba:	6833      	ldr	r3, [r6, #0]
90001dbc:	2b00      	cmp	r3, #0
90001dbe:	d13b      	bne.n	90001e38 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1cc>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001dc0:	6828      	ldr	r0, [r5, #0]
90001dc2:	7a03      	ldrb	r3, [r0, #8]
90001dc4:	b93b      	cbnz	r3, 90001dd6 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16a>
90001dc6:	4b44      	ldr	r3, [pc, #272]	@ (90001ed8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x26c>)
90001dc8:	681b      	ldr	r3, [r3, #0]
90001dca:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001dce:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001dd2:	2b01      	cmp	r3, #1
90001dd4:	d044      	beq.n	90001e60 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1f4>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001dd6:	683b      	ldr	r3, [r7, #0]
90001dd8:	2b01      	cmp	r3, #1
90001dda:	d01b      	beq.n	90001e14 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a8>
    return 2;
90001ddc:	2302      	movs	r3, #2
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001dde:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
90001de0:	6823      	ldr	r3, [r4, #0]
90001de2:	2b02      	cmp	r3, #2
90001de4:	d032      	beq.n	90001e4c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e0>
    } while (JpegProcessing_End != 1);
90001de6:	6823      	ldr	r3, [r4, #0]
90001de8:	2b01      	cmp	r3, #1
90001dea:	d1e3      	bne.n	90001db4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x148>
    Jpeg_HWDecodingEnd = 0;
90001dec:	2300      	movs	r3, #0
}
90001dee:	2001      	movs	r0, #1
    Jpeg_HWDecodingEnd = 0;
90001df0:	f8ca 3000 	str.w	r3, [sl]
    DMA2D_CopyBufferEnd = 0;
90001df4:	6033      	str	r3, [r6, #0]
}
90001df6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90001dfa:	f02c 030f 	bic.w	r3, ip, #15
90001dfe:	3310      	adds	r3, #16
90001e00:	461a      	mov	r2, r3
90001e02:	e789      	b.n	90001d18 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xac>
            lastError = AVI_ERROR_EOF_REACHED;
90001e04:	230d      	movs	r3, #13
90001e06:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001e0a:	e779      	b.n	90001d00 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x94>
90001e0c:	230d      	movs	r3, #13
90001e0e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001e12:	e748      	b.n	90001ca6 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x3a>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001e14:	f8d9 3000 	ldr.w	r3, [r9]
90001e18:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001e1c:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001e20:	2b00      	cmp	r3, #0
90001e22:	d1db      	bne.n	90001ddc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x170>
90001e24:	f8da 3000 	ldr.w	r3, [sl]
90001e28:	2b00      	cmp	r3, #0
90001e2a:	d1d7      	bne.n	90001ddc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x170>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001e2c:	2102      	movs	r1, #2
90001e2e:	4825      	ldr	r0, [pc, #148]	@ (90001ec4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
        JPEG_output_is_paused = 0;
90001e30:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001e32:	f008 fd9d 	bl	9000a970 <HAL_JPEG_Resume>
90001e36:	e7d1      	b.n	90001ddc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x170>
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
90001e38:	4822      	ldr	r0, [pc, #136]	@ (90001ec4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
90001e3a:	f009 fb63 	bl	9000b504 <HAL_JPEG_GetState>
90001e3e:	2804      	cmp	r0, #4
90001e40:	d015      	beq.n	90001e6e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x202>
        return 1;
90001e42:	2301      	movs	r3, #1
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001e44:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
90001e46:	6823      	ldr	r3, [r4, #0]
90001e48:	2b02      	cmp	r3, #2
90001e4a:	d1cc      	bne.n	90001de6 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x17a>
            SEM_WAIT(semDecodingDone);
90001e4c:	4b23      	ldr	r3, [pc, #140]	@ (90001edc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x270>)
90001e4e:	f04f 31ff 	mov.w	r1, #4294967295
90001e52:	6818      	ldr	r0, [r3, #0]
90001e54:	f00d fd4a 	bl	9000f8ec <osSemaphoreAcquire>
    } while (JpegProcessing_End != 1);
90001e58:	6823      	ldr	r3, [r4, #0]
90001e5a:	2b01      	cmp	r3, #1
90001e5c:	d1aa      	bne.n	90001db4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x148>
90001e5e:	e7c5      	b.n	90001dec <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x180>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001e60:	6833      	ldr	r3, [r6, #0]
90001e62:	2b00      	cmp	r3, #0
90001e64:	d1b7      	bne.n	90001dd6 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16a>
        DMA2D_reference->start();
90001e66:	6803      	ldr	r3, [r0, #0]
90001e68:	691b      	ldr	r3, [r3, #16]
90001e6a:	4798      	blx	r3
90001e6c:	e7b3      	b.n	90001dd6 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16a>
            HAL_JPEG_Abort(hjpeg);
90001e6e:	4815      	ldr	r0, [pc, #84]	@ (90001ec4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
90001e70:	f008 fc4c 	bl	9000a70c <HAL_JPEG_Abort>
90001e74:	e7e5      	b.n	90001e42 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d6>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001e76:	f109 0304 	add.w	r3, r9, #4
    if (reader != 0)
90001e7a:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90001e7c:	f109 0108 	add.w	r1, r9, #8
        volatile const uint8_t* const d = movieData + offset;
90001e80:	18c2      	adds	r2, r0, r3
    return movieData + offset;
90001e82:	4401      	add	r1, r0
        val |= d[0];
90001e84:	5cc0      	ldrb	r0, [r0, r3]
        val |= d[1] << 8;
90001e86:	7855      	ldrb	r5, [r2, #1]
        val |= d[2] << 16;
90001e88:	f892 9002 	ldrb.w	r9, [r2, #2]
        val |= d[3] << 24;
90001e8c:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001e8e:	ea4f 4909 	mov.w	r9, r9, lsl #16
90001e92:	ea49 2905 	orr.w	r9, r9, r5, lsl #8
90001e96:	ea49 0900 	orr.w	r9, r9, r0
        val |= d[3] << 24;
90001e9a:	ea49 6903 	orr.w	r9, r9, r3, lsl #24
    return movieData + offset;
90001e9e:	e731      	b.n	90001d04 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x98>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001ea0:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001ea2:	4b0f      	ldr	r3, [pc, #60]	@ (90001ee0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x274>)
90001ea4:	4a0f      	ldr	r2, [pc, #60]	@ (90001ee4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x278>)
90001ea6:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001ea8:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001eac:	480e      	ldr	r0, [pc, #56]	@ (90001ee8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x27c>)
90001eae:	f02b fa7b 	bl	9002d3a8 <__assert_func>
90001eb2:	4691      	mov	r9, r2
90001eb4:	e7e1      	b.n	90001e7a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x20e>
90001eb6:	bf00      	nop
90001eb8:	24005db0 	.word	0x24005db0
90001ebc:	24006000 	.word	0x24006000
90001ec0:	24006028 	.word	0x24006028
90001ec4:	24007918 	.word	0x24007918
90001ec8:	2400600c 	.word	0x2400600c
90001ecc:	24005df0 	.word	0x24005df0
90001ed0:	24006010 	.word	0x24006010
90001ed4:	24006014 	.word	0x24006014
90001ed8:	24005df4 	.word	0x24005df4
90001edc:	24005df8 	.word	0x24005df8
90001ee0:	9002e7ec 	.word	0x9002e7ec
90001ee4:	9002e800 	.word	0x9002e800
90001ee8:	9002e790 	.word	0x9002e790
90001eec:	24006018 	.word	0x24006018
90001ef0:	24006008 	.word	0x24006008
90001ef4:	24000004 	.word	0x24000004

90001ef8 <HAL_JPEG_InfoReadyCallback>:
        if (pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
90001ef8:	684b      	ldr	r3, [r1, #4]
90001efa:	2b01      	cmp	r3, #1
90001efc:	d015      	beq.n	90001f2a <HAL_JPEG_InfoReadyCallback+0x32>
            if (pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
90001efe:	2b02      	cmp	r3, #2
90001f00:	d00b      	beq.n	90001f1a <HAL_JPEG_InfoReadyCallback+0x22>
            if (pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
90001f02:	b94b      	cbnz	r3, 90001f18 <HAL_JPEG_InfoReadyCallback+0x20>
                if ((pInfo->ImageWidth % 8) != 0)
90001f04:	68cb      	ldr	r3, [r1, #12]
90001f06:	0758      	lsls	r0, r3, #29
90001f08:	d11e      	bne.n	90001f48 <HAL_JPEG_InfoReadyCallback+0x50>
                if ((pInfo->ImageHeight % 8) != 0)
90001f0a:	688b      	ldr	r3, [r1, #8]
90001f0c:	075a      	lsls	r2, r3, #29
90001f0e:	d003      	beq.n	90001f18 <HAL_JPEG_InfoReadyCallback+0x20>
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
90001f10:	f023 0307 	bic.w	r3, r3, #7
90001f14:	3308      	adds	r3, #8
90001f16:	608b      	str	r3, [r1, #8]
    }
90001f18:	4770      	bx	lr
                if ((pInfo->ImageWidth % 16) != 0)
90001f1a:	68cb      	ldr	r3, [r1, #12]
90001f1c:	071a      	lsls	r2, r3, #28
90001f1e:	d0f4      	beq.n	90001f0a <HAL_JPEG_InfoReadyCallback+0x12>
                    pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001f20:	f023 030f 	bic.w	r3, r3, #15
90001f24:	3310      	adds	r3, #16
90001f26:	60cb      	str	r3, [r1, #12]
90001f28:	e7ef      	b.n	90001f0a <HAL_JPEG_InfoReadyCallback+0x12>
            if ((pInfo->ImageWidth % 16) != 0)
90001f2a:	68cb      	ldr	r3, [r1, #12]
90001f2c:	071a      	lsls	r2, r3, #28
90001f2e:	d003      	beq.n	90001f38 <HAL_JPEG_InfoReadyCallback+0x40>
                pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001f30:	f023 030f 	bic.w	r3, r3, #15
90001f34:	3310      	adds	r3, #16
90001f36:	60cb      	str	r3, [r1, #12]
            if ((pInfo->ImageHeight % 16) != 0)
90001f38:	688b      	ldr	r3, [r1, #8]
90001f3a:	0718      	lsls	r0, r3, #28
90001f3c:	d0ec      	beq.n	90001f18 <HAL_JPEG_InfoReadyCallback+0x20>
                pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
90001f3e:	f023 030f 	bic.w	r3, r3, #15
90001f42:	3310      	adds	r3, #16
90001f44:	608b      	str	r3, [r1, #8]
90001f46:	4770      	bx	lr
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
90001f48:	f023 0307 	bic.w	r3, r3, #7
90001f4c:	3308      	adds	r3, #8
90001f4e:	60cb      	str	r3, [r1, #12]
90001f50:	e7db      	b.n	90001f0a <HAL_JPEG_InfoReadyCallback+0x12>
90001f52:	bf00      	nop

90001f54 <HAL_JPEG_GetDataCallback>:
    {
90001f54:	b410      	push	{r4}
        JPEG_InputImageIndex += NbDecodedData;
90001f56:	4c0c      	ldr	r4, [pc, #48]	@ (90001f88 <HAL_JPEG_GetDataCallback+0x34>)
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f58:	4a0c      	ldr	r2, [pc, #48]	@ (90001f8c <HAL_JPEG_GetDataCallback+0x38>)
        JPEG_InputImageIndex += NbDecodedData;
90001f5a:	6823      	ldr	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f5c:	6812      	ldr	r2, [r2, #0]
        JPEG_InputImageIndex += NbDecodedData;
90001f5e:	440b      	add	r3, r1
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f60:	4293      	cmp	r3, r2
        JPEG_InputImageIndex += NbDecodedData;
90001f62:	6023      	str	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f64:	d302      	bcc.n	90001f6c <HAL_JPEG_GetDataCallback+0x18>
    }
90001f66:	f85d 4b04 	ldr.w	r4, [sp], #4
90001f6a:	4770      	bx	lr
            uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
90001f6c:	1ad2      	subs	r2, r2, r3
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001f6e:	4b08      	ldr	r3, [pc, #32]	@ (90001f90 <HAL_JPEG_GetDataCallback+0x3c>)
90001f70:	681c      	ldr	r4, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001f72:	f5b2 4f50 	cmp.w	r2, #53248	@ 0xd000
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001f76:	4421      	add	r1, r4
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001f78:	bf28      	it	cs
90001f7a:	f44f 4250 	movcs.w	r2, #53248	@ 0xd000
    }
90001f7e:	f85d 4b04 	ldr.w	r4, [sp], #4
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001f82:	6019      	str	r1, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001f84:	f008 bbba 	b.w	9000a6fc <HAL_JPEG_ConfigInputBuffer>
90001f88:	24006024 	.word	0x24006024
90001f8c:	24006020 	.word	0x24006020
90001f90:	2400601c 	.word	0x2400601c

90001f94 <HAL_JPEG_DataReadyCallback>:
    {
90001f94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        line_count += MCU_HEIGHT_PIXELS;
90001f98:	4e4a      	ldr	r6, [pc, #296]	@ (900020c4 <HAL_JPEG_DataReadyCallback+0x130>)
    {
90001f9a:	4696      	mov	lr, r2
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001f9c:	4f4a      	ldr	r7, [pc, #296]	@ (900020c8 <HAL_JPEG_DataReadyCallback+0x134>)
        line_count += MCU_HEIGHT_PIXELS;
90001f9e:	6833      	ldr	r3, [r6, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fa0:	4d4a      	ldr	r5, [pc, #296]	@ (900020cc <HAL_JPEG_DataReadyCallback+0x138>)
        line_count += MCU_HEIGHT_PIXELS;
90001fa2:	3310      	adds	r3, #16
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fa4:	693a      	ldr	r2, [r7, #16]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fa6:	f8d5 c000 	ldr.w	ip, [r5]
        line_count += MCU_HEIGHT_PIXELS;
90001faa:	6033      	str	r3, [r6, #0]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fac:	4b48      	ldr	r3, [pc, #288]	@ (900020d0 <HAL_JPEG_DataReadyCallback+0x13c>)
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fae:	4c49      	ldr	r4, [pc, #292]	@ (900020d4 <HAL_JPEG_DataReadyCallback+0x140>)
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fb0:	6819      	ldr	r1, [r3, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fb2:	6823      	ldr	r3, [r4, #0]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fb4:	fb02 f101 	mul.w	r1, r2, r1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fb8:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fbc:	eb0c 1101 	add.w	r1, ip, r1, lsl #4
90001fc0:	6029      	str	r1, [r5, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fc2:	4d45      	ldr	r5, [pc, #276]	@ (900020d8 <HAL_JPEG_DataReadyCallback+0x144>)
        if (line_count <= JPEG_ConvertorParams.startY)
90001fc4:	6831      	ldr	r1, [r6, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fc6:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90001fca:	f8c3 c014 	str.w	ip, [r3, #20]
        if (line_count <= JPEG_ConvertorParams.startY)
90001fce:	697b      	ldr	r3, [r7, #20]
90001fd0:	428b      	cmp	r3, r1
90001fd2:	d260      	bcs.n	90002096 <HAL_JPEG_DataReadyCallback+0x102>
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001fd4:	6821      	ldr	r1, [r4, #0]
90001fd6:	2201      	movs	r2, #1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90001fd8:	6823      	ldr	r3, [r4, #0]
90001fda:	4680      	mov	r8, r0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001fdc:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90001fe0:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001fe4:	f805 2021 	strb.w	r2, [r5, r1, lsl #2]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
90001fe8:	2100      	movs	r1, #0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90001fea:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90001fee:	f8c3 e008 	str.w	lr, [r3, #8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
90001ff2:	6823      	ldr	r3, [r4, #0]
90001ff4:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001ff8:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90001ffc:	6119      	str	r1, [r3, #16]
        if (JPEG_ConvertorParams.firstColOffset != 0)
90001ffe:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
90002000:	b12b      	cbz	r3, 9000200e <HAL_JPEG_DataReadyCallback+0x7a>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DoCropping = true;
90002002:	6823      	ldr	r3, [r4, #0]
90002004:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002008:	eb05 0383 	add.w	r3, r5, r3, lsl #2
9000200c:	761a      	strb	r2, [r3, #24]
        if (line_count < JPEG_ConvertorParams.endY)
9000200e:	6832      	ldr	r2, [r6, #0]
90002010:	69bb      	ldr	r3, [r7, #24]
90002012:	4293      	cmp	r3, r2
90002014:	d922      	bls.n	9000205c <HAL_JPEG_DataReadyCallback+0xc8>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
90002016:	6823      	ldr	r3, [r4, #0]
            JPEG_OUT_Write_BufferIndex++;
90002018:	6822      	ldr	r2, [r4, #0]
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
9000201a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
            JPEG_OUT_Write_BufferIndex++;
9000201e:	3201      	adds	r2, #1
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
90002020:	eb05 0383 	add.w	r3, r5, r3, lsl #2
            JPEG_OUT_Write_BufferIndex++;
90002024:	6022      	str	r2, [r4, #0]
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
90002026:	2200      	movs	r2, #0
90002028:	769a      	strb	r2, [r3, #26]
            if (JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
9000202a:	6823      	ldr	r3, [r4, #0]
9000202c:	2b01      	cmp	r3, #1
9000202e:	d900      	bls.n	90002032 <HAL_JPEG_DataReadyCallback+0x9e>
                JPEG_OUT_Write_BufferIndex = 0;
90002030:	6022      	str	r2, [r4, #0]
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
90002032:	6823      	ldr	r3, [r4, #0]
90002034:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002038:	f815 3023 	ldrb.w	r3, [r5, r3, lsl #2]
9000203c:	2b00      	cmp	r3, #0
9000203e:	d138      	bne.n	900020b2 <HAL_JPEG_DataReadyCallback+0x11e>
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002040:	6823      	ldr	r3, [r4, #0]
90002042:	4640      	mov	r0, r8
90002044:	68fa      	ldr	r2, [r7, #12]
90002046:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000204a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9000204e:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002052:	01d2      	lsls	r2, r2, #7
90002054:	6859      	ldr	r1, [r3, #4]
90002056:	f008 fb55 	bl	9000a704 <HAL_JPEG_ConfigOutputBuffer>
        if (line_count >= JPEG_ConvertorParams.endY)
9000205a:	69bb      	ldr	r3, [r7, #24]
9000205c:	6832      	ldr	r2, [r6, #0]
9000205e:	429a      	cmp	r2, r3
90002060:	d20b      	bcs.n	9000207a <HAL_JPEG_DataReadyCallback+0xe6>
        return isRunning;
90002062:	4b1e      	ldr	r3, [pc, #120]	@ (900020dc <HAL_JPEG_DataReadyCallback+0x148>)
90002064:	681b      	ldr	r3, [r3, #0]
        if (!DMA2D_reference->isDMARunning())
90002066:	7a1b      	ldrb	r3, [r3, #8]
90002068:	b10b      	cbz	r3, 9000206e <HAL_JPEG_DataReadyCallback+0xda>
    }
9000206a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            SEM_POST(semDecodingDone);
9000206e:	4b1c      	ldr	r3, [pc, #112]	@ (900020e0 <HAL_JPEG_DataReadyCallback+0x14c>)
    }
90002070:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            SEM_POST(semDecodingDone);
90002074:	6818      	ldr	r0, [r3, #0]
90002076:	f00d bc6b 	b.w	9000f950 <osSemaphoreRelease>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
9000207a:	6823      	ldr	r3, [r4, #0]
9000207c:	2201      	movs	r2, #1
            Jpeg_HWDecodingEnd = 1;
9000207e:	4919      	ldr	r1, [pc, #100]	@ (900020e4 <HAL_JPEG_DataReadyCallback+0x150>)
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90002080:	4640      	mov	r0, r8
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
90002082:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
            Jpeg_HWDecodingEnd = 1;
90002086:	600a      	str	r2, [r1, #0]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90002088:	2102      	movs	r1, #2
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
9000208a:	eb05 0583 	add.w	r5, r5, r3, lsl #2
9000208e:	76aa      	strb	r2, [r5, #26]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90002090:	f008 fafc 	bl	9000a68c <HAL_JPEG_Pause>
90002094:	e7e5      	b.n	90002062 <HAL_JPEG_DataReadyCallback+0xce>
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002096:	6823      	ldr	r3, [r4, #0]
90002098:	68fa      	ldr	r2, [r7, #12]
9000209a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000209e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900020a2:	eb05 0383 	add.w	r3, r5, r3, lsl #2
900020a6:	01d2      	lsls	r2, r2, #7
900020a8:	6859      	ldr	r1, [r3, #4]
    }
900020aa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900020ae:	f008 bb29 	b.w	9000a704 <HAL_JPEG_ConfigOutputBuffer>
                HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020b2:	2102      	movs	r1, #2
900020b4:	4640      	mov	r0, r8
900020b6:	f008 fae9 	bl	9000a68c <HAL_JPEG_Pause>
                JPEG_output_is_paused = 1;
900020ba:	4b0b      	ldr	r3, [pc, #44]	@ (900020e8 <HAL_JPEG_DataReadyCallback+0x154>)
900020bc:	2201      	movs	r2, #1
900020be:	601a      	str	r2, [r3, #0]
900020c0:	e7be      	b.n	90002040 <HAL_JPEG_DataReadyCallback+0xac>
900020c2:	bf00      	nop
900020c4:	24006004 	.word	0x24006004
900020c8:	24005db0 	.word	0x24005db0
900020cc:	24006028 	.word	0x24006028
900020d0:	24006000 	.word	0x24006000
900020d4:	24006008 	.word	0x24006008
900020d8:	24000004 	.word	0x24000004
900020dc:	2400600c 	.word	0x2400600c
900020e0:	24005df8 	.word	0x24005df8
900020e4:	24006018 	.word	0x24006018
900020e8:	24006014 	.word	0x24006014

900020ec <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
900020ec:	b672      	cpsid	i
        while (1)
900020ee:	e7fe      	b.n	900020ee <HAL_JPEG_ErrorCallback+0x2>

900020f0 <HAL_JPEG_DecodeCpltCallback>:
        Jpeg_HWDecodingEnd = 1;
900020f0:	4b01      	ldr	r3, [pc, #4]	@ (900020f8 <HAL_JPEG_DecodeCpltCallback+0x8>)
900020f2:	2201      	movs	r2, #1
900020f4:	601a      	str	r2, [r3, #0]
    }
900020f6:	4770      	bx	lr
900020f8:	24006018 	.word	0x24006018

900020fc <DMA2D_CopyBuffer>:
 * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CopyBuffer(JPEG_Data_BufferTypeDef& job)
{
900020fc:	b5f0      	push	{r4, r5, r6, r7, lr}
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
900020fe:	4f1e      	ldr	r7, [pc, #120]	@ (90002178 <DMA2D_CopyBuffer+0x7c>)
90002100:	6903      	ldr	r3, [r0, #16]
90002102:	6afc      	ldr	r4, [r7, #44]	@ 0x2c
90002104:	6bba      	ldr	r2, [r7, #56]	@ 0x38
90002106:	eba4 0c03 	sub.w	ip, r4, r3
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
                               + job.MCU_drawn * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;

    /* Mark job as fully drawn */
    job.MCU_drawn = JPEG_ConvertorParams.MCU_pr_job;
9000210a:	6104      	str	r4, [r0, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000210c:	4e1b      	ldr	r6, [pc, #108]	@ (9000217c <DMA2D_CopyBuffer+0x80>)
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
9000210e:	ebc2 110c 	rsb	r1, r2, ip, lsl #4
90002112:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
90002116:	f011 050f 	ands.w	r5, r1, #15

    /* Configure DMA2D data size */
    if (job.LastJob)  /* Last line of frame */
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
9000211a:	ea4f 4401 	mov.w	r4, r1, lsl #16
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000211e:	6a79      	ldr	r1, [r7, #36]	@ 0x24
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
90002120:	bf18      	it	ne
90002122:	f1c5 0510 	rsbne	r5, r5, #16
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002126:	440b      	add	r3, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
90002128:	6939      	ldr	r1, [r7, #16]
9000212a:	fb03 f101 	mul.w	r1, r3, r1
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000212e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
90002132:	ea4f 1e01 	mov.w	lr, r1, lsl #4
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002136:	2102      	movs	r1, #2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002138:	01db      	lsls	r3, r3, #7
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000213a:	6371      	str	r1, [r6, #52]	@ 0x34
    if (job.LastJob)  /* Last line of frame */
9000213c:	7e81      	ldrb	r1, [r0, #26]
9000213e:	b1b9      	cbz	r1, 90002170 <DMA2D_CopyBuffer+0x74>
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
90002140:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
90002142:	f1c1 0110 	rsb	r1, r1, #16
90002146:	4321      	orrs	r1, r4
90002148:	6471      	str	r1, [r6, #68]	@ 0x44
    {
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
    }

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
9000214a:	6941      	ldr	r1, [r0, #20]

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, 480 - width);
9000214c:	f502 72f0 	add.w	r2, r2, #480	@ 0x1e0
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
90002150:	eb01 040e 	add.w	r4, r1, lr

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002154:	6841      	ldr	r1, [r0, #4]
    WRITE_REG(DMA2D->OOR, 480 - width);
90002156:	eba2 020c 	sub.w	r2, r2, ip

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000215a:	4809      	ldr	r0, [pc, #36]	@ (90002180 <DMA2D_CopyBuffer+0x84>)
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
9000215c:	4419      	add	r1, r3
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
9000215e:	4b07      	ldr	r3, [pc, #28]	@ (9000217c <DMA2D_CopyBuffer+0x80>)
90002160:	63dc      	str	r4, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 480 - width);
90002162:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002164:	4a07      	ldr	r2, [pc, #28]	@ (90002184 <DMA2D_CopyBuffer+0x88>)
    WRITE_REG(DMA2D->FGOR, scaledWidth);
90002166:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002168:	61da      	str	r2, [r3, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
9000216a:	60d9      	str	r1, [r3, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000216c:	6018      	str	r0, [r3, #0]
}
9000216e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
90002170:	f044 0410 	orr.w	r4, r4, #16
90002174:	6474      	str	r4, [r6, #68]	@ 0x44
90002176:	e7e8      	b.n	9000214a <DMA2D_CopyBuffer+0x4e>
90002178:	24005db0 	.word	0x24005db0
9000217c:	52001000 	.word	0x52001000
90002180:	00012301 	.word	0x00012301
90002184:	ff09000b 	.word	0xff09000b

90002188 <DMA2D_CropBuffer>:
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CropBuffer(JPEG_Data_BufferTypeDef& job)
{
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
90002188:	6902      	ldr	r2, [r0, #16]
{
9000218a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000218e:	4605      	mov	r5, r0
90002190:	b08a      	sub	sp, #40	@ 0x28
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
90002192:	2a00      	cmp	r2, #0
90002194:	d165      	bne.n	90002262 <DMA2D_CropBuffer+0xda>
90002196:	4b35      	ldr	r3, [pc, #212]	@ (9000226c <DMA2D_CropBuffer+0xe4>)
90002198:	f8d3 c030 	ldr.w	ip, [r3, #48]	@ 0x30
9000219c:	f1cc 0010 	rsb	r0, ip, #16
900021a0:	b280      	uxth	r0, r0
    const uint32_t colRightOffset = job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job - 1 ? JPEG_ConvertorParams.lastColOffset : 0;
900021a2:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
900021a4:	3901      	subs	r1, #1
900021a6:	428a      	cmp	r2, r1
900021a8:	d102      	bne.n	900021b0 <DMA2D_CropBuffer+0x28>

    /* Configure BlitOp */
    touchgfx::BlitOp blitOp;
    blitOp.operation = touchgfx::BLIT_OP_COPY;
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
900021aa:	6b99      	ldr	r1, [r3, #56]	@ 0x38
900021ac:	1a41      	subs	r1, r0, r1
900021ae:	b288      	uxth	r0, r1
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
900021b0:	7e6e      	ldrb	r6, [r5, #25]
900021b2:	6b5f      	ldr	r7, [r3, #52]	@ 0x34
900021b4:	2e00      	cmp	r6, #0
900021b6:	d051      	beq.n	9000225c <DMA2D_CropBuffer+0xd4>
900021b8:	f1c7 0110 	rsb	r1, r7, #16
900021bc:	46b8      	mov	r8, r7
900021be:	b289      	uxth	r1, r1
    const uint32_t rowBottomOffset = job.LastJob ? JPEG_ConvertorParams.lastRowOffset : 0;
900021c0:	f895 e01a 	ldrb.w	lr, [r5, #26]
900021c4:	f1be 0f00 	cmp.w	lr, #0
900021c8:	d002      	beq.n	900021d0 <DMA2D_CropBuffer+0x48>
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
900021ca:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
900021cc:	1b09      	subs	r1, r1, r4
900021ce:	b289      	uxth	r1, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
900021d0:	f8d3 e010 	ldr.w	lr, [r3, #16]
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
900021d4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
900021d6:	fb08 f40e 	mul.w	r4, r8, lr
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
900021da:	4413      	add	r3, r2
    job.MCU_drawn++;
900021dc:	3201      	adds	r2, #1
                               + colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel;
900021de:	fb0c fc0e 	mul.w	ip, ip, lr
    job.MCU_drawn++;
900021e2:	612a      	str	r2, [r5, #16]
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
900021e4:	ebc4 1204 	rsb	r2, r4, r4, lsl #4
    const uint32_t cropSrcOffset = colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel
900021e8:	eb0c 1804 	add.w	r8, ip, r4, lsl #4
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
900021ec:	0052      	lsls	r2, r2, #1
900021ee:	fb0e 2203 	mla	r2, lr, r3, r2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
900021f2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
900021f6:	eb0c 1c02 	add.w	ip, ip, r2, lsl #4
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
900021fa:	01dc      	lsls	r4, r3, #7
    if ((JPEG_ConvertorParams.firstRowOffset == 0) || !job.FirstJob)
900021fc:	b107      	cbz	r7, 90002200 <DMA2D_CropBuffer+0x78>
900021fe:	b90e      	cbnz	r6, 90002204 <DMA2D_CropBuffer+0x7c>
        job.DoCropping = false;
90002200:	2300      	movs	r3, #0
90002202:	762b      	strb	r3, [r5, #24]
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
90002204:	4b1a      	ldr	r3, [pc, #104]	@ (90002270 <DMA2D_CropBuffer+0xe8>)
        : color(0)
90002206:	2600      	movs	r6, #0
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
90002208:	4f1a      	ldr	r7, [pc, #104]	@ (90002274 <DMA2D_CropBuffer+0xec>)
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
9000220a:	9307      	str	r3, [sp, #28]
    blitOp.dstLoopStride = 480;
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
9000220c:	696b      	ldr	r3, [r5, #20]
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
    blitOp.dstFormat = touchgfx::Bitmap::RGB565;
    DMA2D_reference->addToQueue(blitOp);
9000220e:	4a1a      	ldr	r2, [pc, #104]	@ (90002278 <DMA2D_CropBuffer+0xf0>)
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002210:	4463      	add	r3, ip
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
90002212:	f8ad 0018 	strh.w	r0, [sp, #24]
    DMA2D_reference->addToQueue(blitOp);
90002216:	6810      	ldr	r0, [r2, #0]
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002218:	9305      	str	r3, [sp, #20]
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
9000221a:	eb08 0307 	add.w	r3, r8, r7
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
9000221e:	f8ad 6021 	strh.w	r6, [sp, #33]	@ 0x21
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
90002222:	9302      	str	r3, [sp, #8]
    blitOp.operation = touchgfx::BLIT_OP_COPY;
90002224:	2301      	movs	r3, #1
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
90002226:	f8ad 101a 	strh.w	r1, [sp, #26]
    DMA2D_reference->addToQueue(blitOp);
9000222a:	a901      	add	r1, sp, #4
    blitOp.operation = touchgfx::BLIT_OP_COPY;
9000222c:	9301      	str	r3, [sp, #4]
    DMA2D_reference->addToQueue(blitOp);
9000222e:	6803      	ldr	r3, [r0, #0]
90002230:	9604      	str	r6, [sp, #16]
90002232:	685b      	ldr	r3, [r3, #4]
90002234:	4798      	blx	r3

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002236:	4b11      	ldr	r3, [pc, #68]	@ (9000227c <DMA2D_CropBuffer+0xf4>)
90002238:	2102      	movs	r1, #2

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
9000223a:	686a      	ldr	r2, [r5, #4]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
9000223c:	4810      	ldr	r0, [pc, #64]	@ (90002280 <DMA2D_CropBuffer+0xf8>)
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000223e:	6359      	str	r1, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
90002240:	f04f 1110 	mov.w	r1, #1048592	@ 0x100010
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002244:	4422      	add	r2, r4
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
90002246:	6459      	str	r1, [r3, #68]	@ 0x44

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002248:	490e      	ldr	r1, [pc, #56]	@ (90002284 <DMA2D_CropBuffer+0xfc>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(MCU_Cropping_Buffer));
9000224a:	63df      	str	r7, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 0);
9000224c:	641e      	str	r6, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGOR, 0);
9000224e:	611e      	str	r6, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002250:	61d8      	str	r0, [r3, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002252:	60da      	str	r2, [r3, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002254:	6019      	str	r1, [r3, #0]
}
90002256:	b00a      	add	sp, #40	@ 0x28
90002258:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000225c:	2110      	movs	r1, #16
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
9000225e:	46b0      	mov	r8, r6
90002260:	e7ae      	b.n	900021c0 <DMA2D_CropBuffer+0x38>
90002262:	2010      	movs	r0, #16
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
90002264:	f04f 0c00 	mov.w	ip, #0
90002268:	4b00      	ldr	r3, [pc, #0]	@ (9000226c <DMA2D_CropBuffer+0xe4>)
9000226a:	e79a      	b.n	900021a2 <DMA2D_CropBuffer+0x1a>
9000226c:	24005db0 	.word	0x24005db0
90002270:	01e00010 	.word	0x01e00010
90002274:	24005e00 	.word	0x24005e00
90002278:	2400600c 	.word	0x2400600c
9000227c:	52001000 	.word	0x52001000
90002280:	ff09000b 	.word	0xff09000b
90002284:	00012301 	.word	0x00012301

90002288 <DMA2D_ExternalJobCompleted>:
 * @retval None
 */
void DMA2D_ExternalJobCompleted(JPEG_Data_BufferTypeDef& job)
{
    /* Mark job done if all MCUs are drawn */
    if (job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job)
90002288:	4b0d      	ldr	r3, [pc, #52]	@ (900022c0 <DMA2D_ExternalJobCompleted+0x38>)
9000228a:	6902      	ldr	r2, [r0, #16]
9000228c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000228e:	429a      	cmp	r2, r3
90002290:	d000      	beq.n	90002294 <DMA2D_ExternalJobCompleted+0xc>
        }

        /* Signal decoder thread to wake up and continue decoding */
        SEM_POST(semDecodingDone);
    }
}
90002292:	4770      	bx	lr
        job.State = JPEG_BUFFER_EMPTY;
90002294:	2200      	movs	r2, #0
        JPEG_OUT_Read_BufferIndex++;
90002296:	4b0b      	ldr	r3, [pc, #44]	@ (900022c4 <DMA2D_ExternalJobCompleted+0x3c>)
        job.State = JPEG_BUFFER_EMPTY;
90002298:	7002      	strb	r2, [r0, #0]
        JPEG_OUT_Read_BufferIndex++;
9000229a:	6819      	ldr	r1, [r3, #0]
        job.DataBufferSize = 0;
9000229c:	6082      	str	r2, [r0, #8]
        JPEG_OUT_Read_BufferIndex++;
9000229e:	3101      	adds	r1, #1
        job.DoCropping = false;
900022a0:	8302      	strh	r2, [r0, #24]
        JPEG_OUT_Read_BufferIndex++;
900022a2:	6019      	str	r1, [r3, #0]
        if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
900022a4:	6819      	ldr	r1, [r3, #0]
900022a6:	2901      	cmp	r1, #1
900022a8:	d900      	bls.n	900022ac <DMA2D_ExternalJobCompleted+0x24>
            JPEG_OUT_Read_BufferIndex = 0;
900022aa:	601a      	str	r2, [r3, #0]
        if (job.LastJob)
900022ac:	7e83      	ldrb	r3, [r0, #26]
900022ae:	b113      	cbz	r3, 900022b6 <DMA2D_ExternalJobCompleted+0x2e>
            DMA2D_CopyBufferEnd = 1;
900022b0:	4b05      	ldr	r3, [pc, #20]	@ (900022c8 <DMA2D_ExternalJobCompleted+0x40>)
900022b2:	2201      	movs	r2, #1
900022b4:	601a      	str	r2, [r3, #0]
        SEM_POST(semDecodingDone);
900022b6:	4b05      	ldr	r3, [pc, #20]	@ (900022cc <DMA2D_ExternalJobCompleted+0x44>)
900022b8:	6818      	ldr	r0, [r3, #0]
900022ba:	f00d bb49 	b.w	9000f950 <osSemaphoreRelease>
900022be:	bf00      	nop
900022c0:	24005db0 	.word	0x24005db0
900022c4:	24005df4 	.word	0x24005df4
900022c8:	24005df0 	.word	0x24005df0
900022cc:	24005df8 	.word	0x24005df8

900022d0 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
900022d0:	2101      	movs	r1, #1
900022d2:	2200      	movs	r2, #0
{
900022d4:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
900022d6:	4608      	mov	r0, r1
900022d8:	f00d fab2 	bl	9000f840 <osSemaphoreNew>
900022dc:	4b0b      	ldr	r3, [pc, #44]	@ (9000230c <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
900022de:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
900022e0:	b140      	cbz	r0, 900022f4 <_ZN8touchgfx10OSWrappers10initializeEv+0x24>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
900022e2:	2200      	movs	r2, #0
900022e4:	2104      	movs	r1, #4
900022e6:	2001      	movs	r0, #1
900022e8:	f00d fb5c 	bl	9000f9a4 <osMessageQueueNew>
900022ec:	4b08      	ldr	r3, [pc, #32]	@ (90002310 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
900022ee:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
900022f0:	b130      	cbz	r0, 90002300 <_ZN8touchgfx10OSWrappers10initializeEv+0x30>
}
900022f2:	bd08      	pop	{r3, pc}
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
900022f4:	4b07      	ldr	r3, [pc, #28]	@ (90002314 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
900022f6:	2128      	movs	r1, #40	@ 0x28
900022f8:	4a07      	ldr	r2, [pc, #28]	@ (90002318 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
900022fa:	4808      	ldr	r0, [pc, #32]	@ (9000231c <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
900022fc:	f02b f854 	bl	9002d3a8 <__assert_func>
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90002300:	4b07      	ldr	r3, [pc, #28]	@ (90002320 <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
90002302:	212c      	movs	r1, #44	@ 0x2c
90002304:	4a04      	ldr	r2, [pc, #16]	@ (90002318 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
90002306:	4805      	ldr	r0, [pc, #20]	@ (9000231c <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90002308:	f02b f84e 	bl	9002d3a8 <__assert_func>
9000230c:	24006030 	.word	0x24006030
90002310:	2400602c 	.word	0x2400602c
90002314:	9002e9e0 	.word	0x9002e9e0
90002318:	9002ea2c 	.word	0x9002ea2c
9000231c:	9002ea5c 	.word	0x9002ea5c
90002320:	9002eab0 	.word	0x9002eab0

90002324 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
90002324:	4b02      	ldr	r3, [pc, #8]	@ (90002330 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
90002326:	f04f 31ff 	mov.w	r1, #4294967295
9000232a:	6818      	ldr	r0, [r3, #0]
9000232c:	f00d bade 	b.w	9000f8ec <osSemaphoreAcquire>
90002330:	24006030 	.word	0x24006030

90002334 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
90002334:	4b01      	ldr	r3, [pc, #4]	@ (9000233c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
90002336:	6818      	ldr	r0, [r3, #0]
90002338:	f00d bb0a 	b.w	9000f950 <osSemaphoreRelease>
9000233c:	24006030 	.word	0x24006030

90002340 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
90002340:	4b02      	ldr	r3, [pc, #8]	@ (9000234c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
90002342:	2100      	movs	r1, #0
90002344:	6818      	ldr	r0, [r3, #0]
90002346:	f00d bad1 	b.w	9000f8ec <osSemaphoreAcquire>
9000234a:	bf00      	nop
9000234c:	24006030 	.word	0x24006030

90002350 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
90002350:	4b01      	ldr	r3, [pc, #4]	@ (90002358 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x8>)
90002352:	6818      	ldr	r0, [r3, #0]
90002354:	f00d bafc 	b.w	9000f950 <osSemaphoreRelease>
90002358:	24006030 	.word	0x24006030

9000235c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
9000235c:	4803      	ldr	r0, [pc, #12]	@ (9000236c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
9000235e:	2300      	movs	r3, #0
90002360:	4903      	ldr	r1, [pc, #12]	@ (90002370 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
90002362:	461a      	mov	r2, r3
90002364:	6800      	ldr	r0, [r0, #0]
90002366:	f00d bb59 	b.w	9000fa1c <osMessageQueuePut>
9000236a:	bf00      	nop
9000236c:	2400602c 	.word	0x2400602c
90002370:	2400003c 	.word	0x2400003c

90002374 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
90002374:	b510      	push	{r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
90002376:	2300      	movs	r3, #0
{
90002378:	b082      	sub	sp, #8
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
9000237a:	4c07      	ldr	r4, [pc, #28]	@ (90002398 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
9000237c:	a901      	add	r1, sp, #4
9000237e:	461a      	mov	r2, r3
90002380:	6820      	ldr	r0, [r4, #0]
90002382:	f00d fb87 	bl	9000fa94 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
90002386:	f04f 33ff 	mov.w	r3, #4294967295
9000238a:	2200      	movs	r2, #0
9000238c:	a901      	add	r1, sp, #4
9000238e:	6820      	ldr	r0, [r4, #0]
90002390:	f00d fb80 	bl	9000fa94 <osMessageQueueGet>
}
90002394:	b002      	add	sp, #8
90002396:	bd10      	pop	{r4, pc}
90002398:	2400602c 	.word	0x2400602c

9000239c <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
9000239c:	6803      	ldr	r3, [r0, #0]
9000239e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900023a0:	4718      	bx	r3
900023a2:	bf00      	nop

900023a4 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
900023a4:	2001      	movs	r0, #1
900023a6:	4770      	bx	lr

900023a8 <DMA2D_XferErrorCallback>:
    }

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
900023a8:	e7fe      	b.n	900023a8 <DMA2D_XferErrorCallback>
900023aa:	bf00      	nop

900023ac <_ZN8STM32DMAD1Ev>:
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
{

}

STM32DMA::~STM32DMA()
900023ac:	4905      	ldr	r1, [pc, #20]	@ (900023c4 <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900023ae:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
900023b2:	4b05      	ldr	r3, [pc, #20]	@ (900023c8 <_ZN8STM32DMAD1Ev+0x1c>)
900023b4:	6001      	str	r1, [r0, #0]
900023b6:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900023ba:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900023be:	f3bf 8f6f 	isb	sy
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}
900023c2:	4770      	bx	lr
900023c4:	90030454 	.word	0x90030454
900023c8:	e000e100 	.word	0xe000e100

900023cc <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023cc:	4b11      	ldr	r3, [pc, #68]	@ (90002414 <_ZN8STM32DMA10initializeEv+0x48>)
    __HAL_RCC_DMA2D_FORCE_RESET();
    __HAL_RCC_DMA2D_RELEASE_RESET();

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
900023ce:	4912      	ldr	r1, [pc, #72]	@ (90002418 <_ZN8STM32DMA10initializeEv+0x4c>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023d0:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4

    /* Add transfer error callback function */
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
900023d4:	4811      	ldr	r0, [pc, #68]	@ (9000241c <_ZN8STM32DMA10initializeEv+0x50>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023d6:	f042 0210 	orr.w	r2, r2, #16
{
900023da:	b410      	push	{r4}
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
900023dc:	4c10      	ldr	r4, [pc, #64]	@ (90002420 <_ZN8STM32DMA10initializeEv+0x54>)
{
900023de:	b083      	sub	sp, #12
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
900023e0:	e9c1 4008 	strd	r4, r0, [r1, #32]
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023e4:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
900023e8:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
900023ec:	f002 0210 	and.w	r2, r2, #16
900023f0:	9201      	str	r2, [sp, #4]
900023f2:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
900023f4:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
900023f6:	f042 0210 	orr.w	r2, r2, #16
900023fa:	67da      	str	r2, [r3, #124]	@ 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
900023fc:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
900023fe:	f022 0210 	bic.w	r2, r2, #16
90002402:	67da      	str	r2, [r3, #124]	@ 0x7c
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90002404:	4b07      	ldr	r3, [pc, #28]	@ (90002424 <_ZN8STM32DMA10initializeEv+0x58>)
90002406:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
9000240a:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
9000240c:	b003      	add	sp, #12
9000240e:	f85d 4b04 	ldr.w	r4, [sp], #4
90002412:	4770      	bx	lr
90002414:	58024400 	.word	0x58024400
90002418:	24007970 	.word	0x24007970
9000241c:	900023a9 	.word	0x900023a9
90002420:	900027f1 	.word	0x900027f1
90002424:	e000e100 	.word	0xe000e100

90002428 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
90002428:	f240 30ef 	movw	r0, #1007	@ 0x3ef
9000242c:	4770      	bx	lr
9000242e:	bf00      	nop

90002430 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
90002430:	4909      	ldr	r1, [pc, #36]	@ (90002458 <_ZN8STM32DMAD0Ev+0x28>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90002432:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
90002436:	4b09      	ldr	r3, [pc, #36]	@ (9000245c <_ZN8STM32DMAD0Ev+0x2c>)
90002438:	b510      	push	{r4, lr}
9000243a:	6001      	str	r1, [r0, #0]
9000243c:	4604      	mov	r4, r0
9000243e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90002442:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002446:	f3bf 8f6f 	isb	sy
}
9000244a:	f640 51a4 	movw	r1, #3492	@ 0xda4
9000244e:	f02a fc35 	bl	9002ccbc <_ZdlPvj>
90002452:	4620      	mov	r0, r4
90002454:	bd10      	pop	{r4, pc}
90002456:	bf00      	nop
90002458:	90030454 	.word	0x90030454
9000245c:	e000e100 	.word	0xe000e100

90002460 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        if (!started_by_external_job)
90002460:	f890 3da0 	ldrb.w	r3, [r0, #3488]	@ 0xda0
    virtual void signalDMAInterrupt()
90002464:	b510      	push	{r4, lr}
90002466:	4604      	mov	r4, r0
        if (!started_by_external_job)
90002468:	b963      	cbnz	r3, 90002484 <_ZN8STM32DMA18signalDMAInterruptEv+0x24>
        {
            executeCompleted();
9000246a:	6803      	ldr	r3, [r0, #0]
9000246c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000246e:	4798      	blx	r3

            /* Start new external job if next buffer is full */
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
90002470:	4924      	ldr	r1, [pc, #144]	@ (90002504 <_ZN8STM32DMA18signalDMAInterruptEv+0xa4>)
90002472:	4a25      	ldr	r2, [pc, #148]	@ (90002508 <_ZN8STM32DMA18signalDMAInterruptEv+0xa8>)
90002474:	680b      	ldr	r3, [r1, #0]
90002476:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000247a:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
9000247e:	2b01      	cmp	r3, #1
90002480:	d015      	beq.n	900024ae <_ZN8STM32DMA18signalDMAInterruptEv+0x4e>
            {
                started_by_external_job = false;
                execute();
            }
        }
    }
90002482:	bd10      	pop	{r4, pc}
     *
     * @param None
     */
    void externalJobCompleted()
    {
        if (isRunning)
90002484:	7a03      	ldrb	r3, [r0, #8]
90002486:	2b00      	cmp	r3, #0
90002488:	d12b      	bne.n	900024e2 <_ZN8STM32DMA18signalDMAInterruptEv+0x82>
            if (!queue.isEmpty() && isAllowed)
9000248a:	6860      	ldr	r0, [r4, #4]
9000248c:	6803      	ldr	r3, [r0, #0]
9000248e:	681b      	ldr	r3, [r3, #0]
90002490:	4798      	blx	r3
90002492:	4603      	mov	r3, r0
90002494:	2800      	cmp	r0, #0
90002496:	d1f4      	bne.n	90002482 <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
90002498:	7a62      	ldrb	r2, [r4, #9]
9000249a:	2a00      	cmp	r2, #0
9000249c:	d0f1      	beq.n	90002482 <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
                execute();
9000249e:	6822      	ldr	r2, [r4, #0]
900024a0:	4620      	mov	r0, r4
                started_by_external_job = false;
900024a2:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
900024a6:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
900024a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
900024ac:	4718      	bx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
900024ae:	4817      	ldr	r0, [pc, #92]	@ (9000250c <_ZN8STM32DMA18signalDMAInterruptEv+0xac>)
900024b0:	6800      	ldr	r0, [r0, #0]
900024b2:	2800      	cmp	r0, #0
900024b4:	d1e5      	bne.n	90002482 <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
900024b6:	7a20      	ldrb	r0, [r4, #8]
900024b8:	2800      	cmp	r0, #0
900024ba:	d1e2      	bne.n	90002482 <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024bc:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
900024be:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024c2:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
900024c6:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024c8:	eb02 0080 	add.w	r0, r2, r0, lsl #2
900024cc:	7e03      	ldrb	r3, [r0, #24]
        {
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024ce:	6808      	ldr	r0, [r1, #0]
900024d0:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
900024d4:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024d8:	b17b      	cbz	r3, 900024fa <_ZN8STM32DMA18signalDMAInterruptEv+0x9a>
    }
900024da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024de:	f7ff be53 	b.w	90002188 <DMA2D_CropBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024e2:	4b08      	ldr	r3, [pc, #32]	@ (90002504 <_ZN8STM32DMA18signalDMAInterruptEv+0xa4>)
            isRunning = false;
900024e4:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024e6:	4808      	ldr	r0, [pc, #32]	@ (90002508 <_ZN8STM32DMA18signalDMAInterruptEv+0xa8>)
900024e8:	681b      	ldr	r3, [r3, #0]
            isRunning = false;
900024ea:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024ec:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900024f0:	eb00 0083 	add.w	r0, r0, r3, lsl #2
900024f4:	f7ff fec8 	bl	90002288 <DMA2D_ExternalJobCompleted>
900024f8:	e7c7      	b.n	9000248a <_ZN8STM32DMA18signalDMAInterruptEv+0x2a>
    }
900024fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        }
        else
        {
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024fe:	f7ff bdfd 	b.w	900020fc <DMA2D_CopyBuffer>
90002502:	bf00      	nop
90002504:	24005df4 	.word	0x24005df4
90002508:	24000004 	.word	0x24000004
9000250c:	24005df0 	.word	0x24005df0

90002510 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
90002510:	b570      	push	{r4, r5, r6, lr}
    switch (format)
90002512:	7f8b      	ldrb	r3, [r1, #30]
90002514:	2b0a      	cmp	r3, #10
90002516:	d83d      	bhi.n	90002594 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x84>
90002518:	e8df f003 	tbb	[pc, r3]
9000251c:	3c2a063a 	.word	0x3c2a063a
90002520:	063c3c3c 	.word	0x063c3c3c
90002524:	0606      	.short	0x0606
90002526:	06          	.byte	0x06
90002527:	00          	.byte	0x00
90002528:	2401      	movs	r4, #1

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000252a:	f8b1 c014 	ldrh.w	ip, [r1, #20]
9000252e:	8ac8      	ldrh	r0, [r1, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002530:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90002532:	4b1b      	ldr	r3, [pc, #108]	@ (900025a0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x90>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002534:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002538:	690d      	ldr	r5, [r1, #16]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000253a:	eba2 020c 	sub.w	r2, r2, ip
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
9000253e:	635c      	str	r4, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002540:	6458      	str	r0, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002542:	63dd      	str	r5, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002544:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
90002546:	680e      	ldr	r6, [r1, #0]
        return color;
90002548:	68c8      	ldr	r0, [r1, #12]
9000254a:	2e08      	cmp	r6, #8
9000254c:	d012      	beq.n	90002574 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x64>

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, 0);

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
9000254e:	0a02      	lsrs	r2, r0, #8
        WRITE_REG(DMA2D->FGOR, 0);
90002550:	2500      	movs	r5, #0
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002552:	0941      	lsrs	r1, r0, #5
90002554:	f3c0 00c4 	ubfx	r0, r0, #3, #5
90002558:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
9000255c:	61dc      	str	r4, [r3, #28]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
9000255e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
        WRITE_REG(DMA2D->FGOR, 0);
90002562:	611d      	str	r5, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002564:	430a      	orrs	r2, r1

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
90002566:	490f      	ldr	r1, [pc, #60]	@ (900025a4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002568:	4302      	orrs	r2, r0
9000256a:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
9000256c:	6019      	str	r1, [r3, #0]
    }
}
9000256e:	bd70      	pop	{r4, r5, r6, pc}
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90002570:	2400      	movs	r4, #0
90002572:	e7da      	b.n	9000252a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90002574:	619a      	str	r2, [r3, #24]
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
90002576:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002578:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
9000257a:	4a0b      	ldr	r2, [pc, #44]	@ (900025a8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
9000257c:	7f09      	ldrb	r1, [r1, #28]
9000257e:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
90002582:	490a      	ldr	r1, [pc, #40]	@ (900025ac <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x9c>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90002584:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90002586:	6218      	str	r0, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002588:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000258a:	60dd      	str	r5, [r3, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
9000258c:	6019      	str	r1, [r3, #0]
}
9000258e:	bd70      	pop	{r4, r5, r6, pc}
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90002590:	2402      	movs	r4, #2
90002592:	e7ca      	b.n	9000252a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        assert(0 && "Unsupported Format!");
90002594:	4b06      	ldr	r3, [pc, #24]	@ (900025b0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa0>)
90002596:	2191      	movs	r1, #145	@ 0x91
90002598:	4a06      	ldr	r2, [pc, #24]	@ (900025b4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa4>)
9000259a:	4807      	ldr	r0, [pc, #28]	@ (900025b8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>)
9000259c:	f02a ff04 	bl	9002d3a8 <__assert_func>
900025a0:	52001000 	.word	0x52001000
900025a4:	00032301 	.word	0x00032301
900025a8:	00010009 	.word	0x00010009
900025ac:	00022301 	.word	0x00022301
900025b0:	9002eaf4 	.word	0x9002eaf4
900025b4:	9002eb10 	.word	0x9002eb10
900025b8:	9002eb5c 	.word	0x9002eb5c

900025bc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
900025bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
900025be:	f891 e01d 	ldrb.w	lr, [r1, #29]
    switch (format)
900025c2:	f1be 0f0b 	cmp.w	lr, #11
900025c6:	f200 80aa 	bhi.w	9000271e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x162>
900025ca:	e8df f00e 	tbb	[pc, lr]
900025ce:	585d      	.short	0x585d
900025d0:	a8a8a846 	.word	0xa8a8a846
900025d4:	060606a8 	.word	0x060606a8
900025d8:	0606      	.short	0x0606
        dma2dColorMode = DMA2D_INPUT_L8;
900025da:	2605      	movs	r6, #5
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
900025dc:	f891 c01e 	ldrb.w	ip, [r1, #30]
    switch (format)
900025e0:	f1bc 0f0b 	cmp.w	ip, #11
900025e4:	f200 809b 	bhi.w	9000271e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x162>
900025e8:	e8df f00c 	tbb	[pc, ip]
900025ec:	990d4b50 	.word	0x990d4b50
900025f0:	06999999 	.word	0x06999999
900025f4:	06060606 	.word	0x06060606
    switch (format)
900025f8:	f1bc 0f0b 	cmp.w	ip, #11
900025fc:	f000 8095 	beq.w	9000272a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16e>
90002600:	2405      	movs	r4, #5
        dma2dColorMode = DMA2D_OUTPUT_RGB888;
90002602:	2701      	movs	r7, #1
90002604:	e001      	b.n	9000260a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90002606:	2400      	movs	r4, #0
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90002608:	4627      	mov	r7, r4
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000260a:	8a8b      	ldrh	r3, [r1, #20]
9000260c:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
9000260e:	8b0d      	ldrh	r5, [r1, #24]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002610:	8ac8      	ldrh	r0, [r1, #22]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002612:	1ad2      	subs	r2, r2, r3
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90002614:	1aed      	subs	r5, r5, r3
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002616:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000261a:	4b4a      	ldr	r3, [pc, #296]	@ (90002744 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
9000261c:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
9000261e:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90002620:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90002622:	684a      	ldr	r2, [r1, #4]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90002624:	635f      	str	r7, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002626:	6458      	str	r0, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002628:	6908      	ldr	r0, [r1, #16]
9000262a:	63d8      	str	r0, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
9000262c:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
9000262e:	680d      	ldr	r5, [r1, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002630:	7f0f      	ldrb	r7, [r1, #28]
    switch (blitOp.operation)
90002632:	2d80      	cmp	r5, #128	@ 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002634:	ea4f 6207 	mov.w	r2, r7, lsl #24
    switch (blitOp.operation)
90002638:	d03c      	beq.n	900026b4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
9000263a:	d810      	bhi.n	9000265e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
9000263c:	2d20      	cmp	r5, #32
9000263e:	d036      	beq.n	900026ae <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf2>
90002640:	2d40      	cmp	r5, #64	@ 0x40
90002642:	d034      	beq.n	900026ae <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf2>
90002644:	2d04      	cmp	r5, #4
90002646:	d124      	bne.n	90002692 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002648:	4332      	orrs	r2, r6
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000264a:	493f      	ldr	r1, [pc, #252]	@ (90002748 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000264c:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
90002650:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002652:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002654:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002656:	6019      	str	r1, [r3, #0]
}
90002658:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
9000265a:	2600      	movs	r6, #0
9000265c:	e7be      	b.n	900025dc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
    switch (blitOp.operation)
9000265e:	f5b5 7f80 	cmp.w	r5, #256	@ 0x100
90002662:	d022      	beq.n	900026aa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xee>
90002664:	f5b5 7f00 	cmp.w	r5, #512	@ 0x200
90002668:	d113      	bne.n	90002692 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd6>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000266a:	4d38      	ldr	r5, [pc, #224]	@ (9000274c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
9000266c:	4315      	orrs	r5, r2
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000266e:	4a36      	ldr	r2, [pc, #216]	@ (90002748 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002670:	61dd      	str	r5, [r3, #28]
90002672:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90002674:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002676:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002678:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000267a:	601a      	str	r2, [r3, #0]
}
9000267c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (format)
9000267e:	2601      	movs	r6, #1
90002680:	e7ac      	b.n	900025dc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
90002682:	2401      	movs	r4, #1
90002684:	4627      	mov	r7, r4
90002686:	e7c0      	b.n	9000260a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        dma2dColorMode = DMA2D_INPUT_RGB565;
90002688:	2602      	movs	r6, #2
9000268a:	e7a7      	b.n	900025dc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
    switch (format)
9000268c:	2402      	movs	r4, #2
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
9000268e:	4627      	mov	r7, r4
90002690:	e7bb      	b.n	9000260a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002692:	4316      	orrs	r6, r2
        if (blitOp.srcFormat != blitOp.dstFormat)
90002694:	45e6      	cmp	lr, ip
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002696:	4b2b      	ldr	r3, [pc, #172]	@ (90002744 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
90002698:	f446 3600 	orr.w	r6, r6, #131072	@ 0x20000
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000269c:	bf14      	ite	ne
9000269e:	4a2c      	ldrne	r2, [pc, #176]	@ (90002750 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x194>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900026a0:	f242 3201 	movweq	r2, #8961	@ 0x2301
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026a4:	61de      	str	r6, [r3, #28]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900026a6:	601a      	str	r2, [r3, #0]
}
900026a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026aa:	4d2a      	ldr	r5, [pc, #168]	@ (90002754 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x198>)
900026ac:	e7de      	b.n	9000266c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026ae:	4332      	orrs	r2, r6
900026b0:	4b24      	ldr	r3, [pc, #144]	@ (90002744 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
900026b2:	e7ca      	b.n	9000264a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8e>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
900026b4:	6889      	ldr	r1, [r1, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026b6:	4332      	orrs	r2, r6
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
900026b8:	1d0d      	adds	r5, r1, #4
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026ba:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
900026be:	62dd      	str	r5, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026c0:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
900026c2:	780a      	ldrb	r2, [r1, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900026c4:	625c      	str	r4, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900026c6:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
900026c8:	b1e2      	cbz	r2, 90002704 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>
900026ca:	2a01      	cmp	r2, #1
900026cc:	d133      	bne.n	90002736 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17a>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
900026ce:	69d8      	ldr	r0, [r3, #28]
                if (blitOp.alpha == 255)
900026d0:	3fff      	subs	r7, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
900026d2:	8849      	ldrh	r1, [r1, #2]
900026d4:	4a20      	ldr	r2, [pc, #128]	@ (90002758 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>)
                if (blitOp.alpha == 255)
900026d6:	bf18      	it	ne
900026d8:	2701      	movne	r7, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
900026da:	3901      	subs	r1, #1
900026dc:	4002      	ands	r2, r0
900026de:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
900026e2:	f042 0210 	orr.w	r2, r2, #16
900026e6:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
900026e8:	4a16      	ldr	r2, [pc, #88]	@ (90002744 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
900026ea:	69d3      	ldr	r3, [r2, #28]
900026ec:	f043 0320 	orr.w	r3, r3, #32
900026f0:	61d3      	str	r3, [r2, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
900026f2:	69d3      	ldr	r3, [r2, #28]
900026f4:	069b      	lsls	r3, r3, #26
900026f6:	d4fc      	bmi.n	900026f2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x136>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
900026f8:	2310      	movs	r3, #16
900026fa:	6093      	str	r3, [r2, #8]
            if (blend)
900026fc:	b167      	cbz	r7, 90002718 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15c>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900026fe:	4b12      	ldr	r3, [pc, #72]	@ (90002748 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
90002700:	6013      	str	r3, [r2, #0]
}
90002702:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
90002704:	69d8      	ldr	r0, [r3, #28]
            bool blend = true;
90002706:	2701      	movs	r7, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
90002708:	8849      	ldrh	r1, [r1, #2]
9000270a:	4a13      	ldr	r2, [pc, #76]	@ (90002758 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>)
9000270c:	3901      	subs	r1, #1
9000270e:	4002      	ands	r2, r0
90002710:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90002714:	61da      	str	r2, [r3, #28]
                break;
90002716:	e7e7      	b.n	900026e8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12c>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002718:	4b0d      	ldr	r3, [pc, #52]	@ (90002750 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x194>)
9000271a:	6013      	str	r3, [r2, #0]
}
9000271c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        assert(0 && "Unsupported Format!");
9000271e:	4b0f      	ldr	r3, [pc, #60]	@ (9000275c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a0>)
90002720:	2170      	movs	r1, #112	@ 0x70
90002722:	4a0f      	ldr	r2, [pc, #60]	@ (90002760 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a4>)
90002724:	480f      	ldr	r0, [pc, #60]	@ (90002764 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>)
90002726:	f02a fe3f 	bl	9002d3a8 <__assert_func>
        assert(0 && "Unsupported Format!");
9000272a:	4b0c      	ldr	r3, [pc, #48]	@ (9000275c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a0>)
9000272c:	2191      	movs	r1, #145	@ 0x91
9000272e:	4a0e      	ldr	r2, [pc, #56]	@ (90002768 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
90002730:	480c      	ldr	r0, [pc, #48]	@ (90002764 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>)
90002732:	f02a fe39 	bl	9002d3a8 <__assert_func>
                assert(0 && "Unsupported format");
90002736:	4b0d      	ldr	r3, [pc, #52]	@ (9000276c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b0>)
90002738:	f240 111b 	movw	r1, #283	@ 0x11b
9000273c:	4a0c      	ldr	r2, [pc, #48]	@ (90002770 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b4>)
9000273e:	4809      	ldr	r0, [pc, #36]	@ (90002764 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>)
90002740:	f02a fe32 	bl	9002d3a8 <__assert_func>
90002744:	52001000 	.word	0x52001000
90002748:	00022301 	.word	0x00022301
9000274c:	00020009 	.word	0x00020009
90002750:	00012301 	.word	0x00012301
90002754:	0002000a 	.word	0x0002000a
90002758:	ffff00ef 	.word	0xffff00ef
9000275c:	9002eaf4 	.word	0x9002eaf4
90002760:	9002ebac 	.word	0x9002ebac
90002764:	9002eb5c 	.word	0x9002eb5c
90002768:	9002eb10 	.word	0x9002eb10
9000276c:	9002ebf8 	.word	0x9002ebf8
90002770:	9002ec14 	.word	0x9002ec14

90002774 <_ZN8STM32DMA5startEv>:
    virtual void start()
90002774:	b510      	push	{r4, lr}
90002776:	4604      	mov	r4, r0
        if (!queue.isEmpty() && isAllowed && !isRunning)
90002778:	6840      	ldr	r0, [r0, #4]
9000277a:	6803      	ldr	r3, [r0, #0]
9000277c:	681b      	ldr	r3, [r3, #0]
9000277e:	4798      	blx	r3
90002780:	b958      	cbnz	r0, 9000279a <_ZN8STM32DMA5startEv+0x26>
90002782:	7a63      	ldrb	r3, [r4, #9]
90002784:	b14b      	cbz	r3, 9000279a <_ZN8STM32DMA5startEv+0x26>
90002786:	7a23      	ldrb	r3, [r4, #8]
90002788:	bb3b      	cbnz	r3, 900027da <_ZN8STM32DMA5startEv+0x66>
            execute();
9000278a:	6822      	ldr	r2, [r4, #0]
9000278c:	4620      	mov	r0, r4
            started_by_external_job = false;
9000278e:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
            execute();
90002792:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
90002794:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            execute();
90002798:	4718      	bx	r3
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
9000279a:	4913      	ldr	r1, [pc, #76]	@ (900027e8 <_ZN8STM32DMA5startEv+0x74>)
9000279c:	4a13      	ldr	r2, [pc, #76]	@ (900027ec <_ZN8STM32DMA5startEv+0x78>)
9000279e:	680b      	ldr	r3, [r1, #0]
900027a0:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900027a4:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
900027a8:	2b01      	cmp	r3, #1
900027aa:	d000      	beq.n	900027ae <_ZN8STM32DMA5startEv+0x3a>
    }
900027ac:	bd10      	pop	{r4, pc}
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
900027ae:	7a20      	ldrb	r0, [r4, #8]
900027b0:	2800      	cmp	r0, #0
900027b2:	d1fb      	bne.n	900027ac <_ZN8STM32DMA5startEv+0x38>
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027b4:	6808      	ldr	r0, [r1, #0]
            started_by_external_job = true;
900027b6:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027ba:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
900027be:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027c0:	eb02 0080 	add.w	r0, r2, r0, lsl #2
900027c4:	7e03      	ldrb	r3, [r0, #24]
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900027c6:	6808      	ldr	r0, [r1, #0]
900027c8:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
900027cc:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027d0:	b133      	cbz	r3, 900027e0 <_ZN8STM32DMA5startEv+0x6c>
    }
900027d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900027d6:	f7ff bcd7 	b.w	90002188 <DMA2D_CropBuffer>
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
900027da:	4b03      	ldr	r3, [pc, #12]	@ (900027e8 <_ZN8STM32DMA5startEv+0x74>)
900027dc:	681b      	ldr	r3, [r3, #0]
    }
900027de:	bd10      	pop	{r4, pc}
900027e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900027e4:	f7ff bc8a 	b.w	900020fc <DMA2D_CopyBuffer>
900027e8:	24005df4 	.word	0x24005df4
900027ec:	24000004 	.word	0x24000004

900027f0 <DMA2D_XferCpltCallback>:
        dma.signalDMAInterrupt();
900027f0:	4b2c      	ldr	r3, [pc, #176]	@ (900028a4 <DMA2D_XferCpltCallback+0xb4>)
900027f2:	492d      	ldr	r1, [pc, #180]	@ (900028a8 <DMA2D_XferCpltCallback+0xb8>)
900027f4:	681b      	ldr	r3, [r3, #0]
    {
900027f6:	b510      	push	{r4, lr}
900027f8:	685c      	ldr	r4, [r3, #4]
900027fa:	6823      	ldr	r3, [r4, #0]
900027fc:	695a      	ldr	r2, [r3, #20]
900027fe:	428a      	cmp	r2, r1
90002800:	d122      	bne.n	90002848 <DMA2D_XferCpltCallback+0x58>
        if (!started_by_external_job)
90002802:	f894 2da0 	ldrb.w	r2, [r4, #3488]	@ 0xda0
90002806:	b192      	cbz	r2, 9000282e <DMA2D_XferCpltCallback+0x3e>
        if (isRunning)
90002808:	7a23      	ldrb	r3, [r4, #8]
9000280a:	2b00      	cmp	r3, #0
9000280c:	d13a      	bne.n	90002884 <DMA2D_XferCpltCallback+0x94>
            if (!queue.isEmpty() && isAllowed)
9000280e:	6860      	ldr	r0, [r4, #4]
90002810:	6803      	ldr	r3, [r0, #0]
90002812:	681b      	ldr	r3, [r3, #0]
90002814:	4798      	blx	r3
90002816:	4603      	mov	r3, r0
90002818:	b9a8      	cbnz	r0, 90002846 <DMA2D_XferCpltCallback+0x56>
9000281a:	7a62      	ldrb	r2, [r4, #9]
9000281c:	b19a      	cbz	r2, 90002846 <DMA2D_XferCpltCallback+0x56>
                execute();
9000281e:	6822      	ldr	r2, [r4, #0]
90002820:	4620      	mov	r0, r4
                started_by_external_job = false;
90002822:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
90002826:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
90002828:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9000282c:	4718      	bx	r3
            executeCompleted();
9000282e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90002830:	4620      	mov	r0, r4
90002832:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
90002834:	491d      	ldr	r1, [pc, #116]	@ (900028ac <DMA2D_XferCpltCallback+0xbc>)
90002836:	4a1e      	ldr	r2, [pc, #120]	@ (900028b0 <DMA2D_XferCpltCallback+0xc0>)
90002838:	680b      	ldr	r3, [r1, #0]
9000283a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000283e:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
90002842:	2b01      	cmp	r3, #1
90002844:	d004      	beq.n	90002850 <DMA2D_XferCpltCallback+0x60>
90002846:	bd10      	pop	{r4, pc}
90002848:	4620      	mov	r0, r4
9000284a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9000284e:	4710      	bx	r2
90002850:	4818      	ldr	r0, [pc, #96]	@ (900028b4 <DMA2D_XferCpltCallback+0xc4>)
90002852:	6800      	ldr	r0, [r0, #0]
90002854:	2800      	cmp	r0, #0
90002856:	d1f6      	bne.n	90002846 <DMA2D_XferCpltCallback+0x56>
90002858:	7a20      	ldrb	r0, [r4, #8]
9000285a:	2800      	cmp	r0, #0
9000285c:	d1f3      	bne.n	90002846 <DMA2D_XferCpltCallback+0x56>
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
9000285e:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
90002860:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002864:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
90002868:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
9000286a:	eb02 0080 	add.w	r0, r2, r0, lsl #2
9000286e:	7e03      	ldrb	r3, [r0, #24]
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002870:	6808      	ldr	r0, [r1, #0]
90002872:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
90002876:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
9000287a:	b17b      	cbz	r3, 9000289c <DMA2D_XferCpltCallback+0xac>
9000287c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002880:	f7ff bc82 	b.w	90002188 <DMA2D_CropBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002884:	4b09      	ldr	r3, [pc, #36]	@ (900028ac <DMA2D_XferCpltCallback+0xbc>)
            isRunning = false;
90002886:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002888:	4809      	ldr	r0, [pc, #36]	@ (900028b0 <DMA2D_XferCpltCallback+0xc0>)
9000288a:	681b      	ldr	r3, [r3, #0]
            isRunning = false;
9000288c:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000288e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002892:	eb00 0083 	add.w	r0, r0, r3, lsl #2
90002896:	f7ff fcf7 	bl	90002288 <DMA2D_ExternalJobCompleted>
9000289a:	e7b8      	b.n	9000280e <DMA2D_XferCpltCallback+0x1e>
9000289c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028a0:	f7ff bc2c 	b.w	900020fc <DMA2D_CopyBuffer>
900028a4:	24021c0c 	.word	0x24021c0c
900028a8:	90002461 	.word	0x90002461
900028ac:	24005df4 	.word	0x24005df4
900028b0:	24000004 	.word	0x24000004
900028b4:	24005df0 	.word	0x24005df0

900028b8 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
900028b8:	b570      	push	{r4, r5, r6, lr}
900028ba:	4606      	mov	r6, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
900028bc:	4b0b      	ldr	r3, [pc, #44]	@ (900028ec <_ZN8STM32DMAC1Ev+0x34>)
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
900028be:	2500      	movs	r5, #0
900028c0:	300c      	adds	r0, #12
900028c2:	4634      	mov	r4, r6
900028c4:	2260      	movs	r2, #96	@ 0x60
900028c6:	7235      	strb	r5, [r6, #8]
900028c8:	7275      	strb	r5, [r6, #9]
900028ca:	6070      	str	r0, [r6, #4]
900028cc:	f844 3b20 	str.w	r3, [r4], #32
900028d0:	4621      	mov	r1, r4
900028d2:	f010 ffb3 	bl	9001383c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
900028d6:	4621      	mov	r1, r4
900028d8:	f506 635a 	add.w	r3, r6, #3488	@ 0xda0
        : color(0)
900028dc:	60cd      	str	r5, [r1, #12]
900028de:	3124      	adds	r1, #36	@ 0x24
900028e0:	4299      	cmp	r1, r3
900028e2:	d1fb      	bne.n	900028dc <_ZN8STM32DMAC1Ev+0x24>
}
900028e4:	4630      	mov	r0, r6
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
900028e6:	f886 5da0 	strb.w	r5, [r6, #3488]	@ 0xda0
}
900028ea:	bd70      	pop	{r4, r5, r6, pc}
900028ec:	90030454 	.word	0x90030454

900028f0 <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
900028f0:	4a03      	ldr	r2, [pc, #12]	@ (90002900 <_ZN8touchgfx5paint8tearDownEv+0x10>)
900028f2:	6813      	ldr	r3, [r2, #0]
900028f4:	07db      	lsls	r3, r3, #31
900028f6:	d4fc      	bmi.n	900028f2 <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900028f8:	2323      	movs	r3, #35	@ 0x23
900028fa:	6093      	str	r3, [r2, #8]
}
900028fc:	4770      	bx	lr
900028fe:	bf00      	nop
90002900:	52001000 	.word	0x52001000

90002904 <_ZN8touchgfx5paint9flushLineEPmi>:
void flushLine(uint32_t* addr, int sizebytes)
{
    // This function is used when decompressing data to flush
    // the currently decoded data in the cache to allow the DMA2D
    // to blend the pixels correctly.
    if (SCB->CCR & SCB_CCR_DC_Msk)
90002904:	4a0b      	ldr	r2, [pc, #44]	@ (90002934 <_ZN8touchgfx5paint9flushLineEPmi+0x30>)
90002906:	6953      	ldr	r3, [r2, #20]
  \param[in]   dsize   size of memory block (in number of bytes)
*/
__STATIC_FORCEINLINE void SCB_CleanDCache_by_Addr (uint32_t *addr, int32_t dsize)
{
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    if ( dsize > 0 ) { 
90002908:	03db      	lsls	r3, r3, #15
9000290a:	d501      	bpl.n	90002910 <_ZN8touchgfx5paint9flushLineEPmi+0xc>
9000290c:	2900      	cmp	r1, #0
9000290e:	dc00      	bgt.n	90002912 <_ZN8touchgfx5paint9flushLineEPmi+0xe>
    {
        SCB_CleanDCache_by_Addr(addr, sizebytes);
    }
}
90002910:	4770      	bx	lr
       int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
90002912:	f000 031f 	and.w	r3, r0, #31
90002916:	4419      	add	r1, r3
  __ASM volatile ("dsb 0xF":::"memory");
90002918:	f3bf 8f4f 	dsb	sy
9000291c:	4401      	add	r1, r0
      uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
    
      __DSB();

      do {
        SCB->DCCMVAC = op_addr;             /* register accepts only 32byte aligned values, only bits 31..5 are valid */
9000291e:	f8c2 0268 	str.w	r0, [r2, #616]	@ 0x268
        op_addr += __SCB_DCACHE_LINE_SIZE;
90002922:	3020      	adds	r0, #32
        op_size -= __SCB_DCACHE_LINE_SIZE;
      } while ( op_size > 0 );
90002924:	1a0b      	subs	r3, r1, r0
90002926:	2b00      	cmp	r3, #0
90002928:	dcf9      	bgt.n	9000291e <_ZN8touchgfx5paint9flushLineEPmi+0x1a>
9000292a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000292e:	f3bf 8f6f 	isb	sy
90002932:	4770      	bx	lr
90002934:	e000ed00 	.word	0xe000ed00

90002938 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
90002938:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
9000293a:	4c11      	ldr	r4, [pc, #68]	@ (90002980 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
9000293c:	6825      	ldr	r5, [r4, #0]
9000293e:	07ed      	lsls	r5, r5, #31
90002940:	d4fc      	bmi.n	9000293c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002942:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002944:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
90002946:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002948:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
9000294a:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000294e:	f04f 0502 	mov.w	r5, #2
90002952:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002954:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90002956:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
90002958:	d00b      	beq.n	90002972 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x3a>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
9000295a:	490a      	ldr	r1, [pc, #40]	@ (90002984 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
9000295c:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
9000295e:	ea41 6303 	orr.w	r3, r1, r3, lsl #24

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90002962:	4909      	ldr	r1, [pc, #36]	@ (90002988 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002964:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->FGCOLR, color);
90002966:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
90002968:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
9000296a:	60e0      	str	r0, [r4, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
9000296c:	6021      	str	r1, [r4, #0]
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}
9000296e:	bc30      	pop	{r4, r5}
90002970:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90002972:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
90002974:	9a02      	ldr	r2, [sp, #8]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90002976:	4b05      	ldr	r3, [pc, #20]	@ (9000298c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x54>)
        WRITE_REG(DMA2D->OCOLR, color565);
90002978:	63a2      	str	r2, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
9000297a:	6023      	str	r3, [r4, #0]
}
9000297c:	bc30      	pop	{r4, r5}
9000297e:	4770      	bx	lr
90002980:	52001000 	.word	0x52001000
90002984:	00010009 	.word	0x00010009
90002988:	00020001 	.word	0x00020001
9000298c:	00030001 	.word	0x00030001

90002990 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
90002990:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90002992:	4c10      	ldr	r4, [pc, #64]	@ (900029d4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
90002994:	6825      	ldr	r5, [r4, #0]
90002996:	07ed      	lsls	r5, r5, #31
90002998:	d4fc      	bmi.n	90002994 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
9000299a:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
9000299c:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
9000299e:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900029a0:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029a2:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900029a6:	f04f 0502 	mov.w	r5, #2
900029aa:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029ac:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
900029ae:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
900029b0:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
900029b2:	d009      	beq.n	900029c8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x38>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029b4:	061b      	lsls	r3, r3, #24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
900029b6:	4a08      	ldr	r2, [pc, #32]	@ (900029d8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x48>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029b8:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
900029bc:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900029be:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
900029c0:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
900029c2:	6022      	str	r2, [r4, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
    }
}
900029c4:	bc30      	pop	{r4, r5}
900029c6:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029c8:	4a04      	ldr	r2, [pc, #16]	@ (900029dc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>)
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
900029ca:	2301      	movs	r3, #1
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029cc:	61e2      	str	r2, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
900029ce:	6023      	str	r3, [r4, #0]
}
900029d0:	bc30      	pop	{r4, r5}
900029d2:	4770      	bx	lr
900029d4:	52001000 	.word	0x52001000
900029d8:	00020001 	.word	0x00020001
900029dc:	ff020002 	.word	0xff020002

900029e0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
900029e0:	b470      	push	{r4, r5, r6}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
900029e2:	4c0c      	ldr	r4, [pc, #48]	@ (90002a14 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
900029e4:	6825      	ldr	r5, [r4, #0]
900029e6:	07ed      	lsls	r5, r5, #31
900029e8:	d4fc      	bmi.n	900029e4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029ea:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900029ec:	2502      	movs	r5, #2

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029ee:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900029f0:	2623      	movs	r6, #35	@ 0x23
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029f2:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029f6:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900029fa:	60a6      	str	r6, [r4, #8]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900029fc:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029fe:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90002a00:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
90002a02:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a04:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90002a06:	4b04      	ldr	r3, [pc, #16]	@ (90002a18 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x38>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002a08:	6265      	str	r5, [r4, #36]	@ 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
90002a0a:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90002a0c:	6023      	str	r3, [r4, #0]
}
90002a0e:	bc70      	pop	{r4, r5, r6}
90002a10:	4770      	bx	lr
90002a12:	bf00      	nop
90002a14:	52001000 	.word	0x52001000
90002a18:	00020001 	.word	0x00020001

90002a1c <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
90002a1c:	2001      	movs	r0, #1
90002a1e:	4770      	bx	lr

90002a20 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
90002a20:	2014      	movs	r0, #20
90002a22:	4770      	bx	lr

90002a24 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
90002a24:	eb01 0181 	add.w	r1, r1, r1, lsl #2
90002a28:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    }
90002a2c:	3008      	adds	r0, #8
90002a2e:	4770      	bx	lr

90002a30 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
90002a30:	eb01 0181 	add.w	r1, r1, r1, lsl #2
90002a34:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    }
90002a38:	3008      	adds	r0, #8
90002a3a:	4770      	bx	lr

90002a3c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15Home_ScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002a3c:	2001      	movs	r0, #1
90002a3e:	4770      	bx	lr

90002a40 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15Home_ScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90002a40:	f44f 6092 	mov.w	r0, #1168	@ 0x490
90002a44:	4770      	bx	lr
90002a46:	bf00      	nop

90002a48 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15Home_ScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a48:	f44f 6392 	mov.w	r3, #1168	@ 0x490
90002a4c:	fb03 0001 	mla	r0, r3, r1, r0
    }
90002a50:	3008      	adds	r0, #8
90002a52:	4770      	bx	lr

90002a54 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15Home_ScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a54:	f44f 6392 	mov.w	r3, #1168	@ 0x490
90002a58:	fb03 0001 	mla	r0, r3, r1, r0
    }
90002a5c:	3008      	adds	r0, #8
90002a5e:	4770      	bx	lr

90002a60 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI18TC_ScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002a60:	2001      	movs	r0, #1
90002a62:	4770      	bx	lr

90002a64 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18TC_ScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90002a64:	2010      	movs	r0, #16
90002a66:	4770      	bx	lr

90002a68 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18TC_ScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a68:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90002a6c:	3008      	adds	r0, #8
90002a6e:	4770      	bx	lr

90002a70 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI18TC_ScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a70:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90002a74:	3008      	adds	r0, #8
90002a76:	4770      	bx	lr

90002a78 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoHome_ScreenScreenNoTransition();
90002a78:	4608      	mov	r0, r1
90002a7a:	f002 bb43 	b.w	90005104 <_ZN23FrontendApplicationBase33gotoHome_ScreenScreenNoTransitionEv>
90002a7e:	bf00      	nop

90002a80 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
90002a80:	4b03      	ldr	r3, [pc, #12]	@ (90002a90 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
90002a82:	b510      	push	{r4, lr}
90002a84:	4604      	mov	r4, r0
90002a86:	6003      	str	r3, [r0, #0]
90002a88:	f00f fce9 	bl	9001245e <_ZN8touchgfx17AbstractPartitionD1Ev>
90002a8c:	4620      	mov	r0, r4
90002a8e:	bd10      	pop	{r4, pc}
90002a90:	9003050c 	.word	0x9003050c

90002a94 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
90002a94:	4b05      	ldr	r3, [pc, #20]	@ (90002aac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev+0x18>)
90002a96:	b510      	push	{r4, lr}
90002a98:	4604      	mov	r4, r0
90002a9a:	6003      	str	r3, [r0, #0]
90002a9c:	f00f fcdf 	bl	9001245e <_ZN8touchgfx17AbstractPartitionD1Ev>
90002aa0:	211c      	movs	r1, #28
90002aa2:	4620      	mov	r0, r4
90002aa4:	f02a f90a 	bl	9002ccbc <_ZdlPvj>
90002aa8:	4620      	mov	r0, r4
90002aaa:	bd10      	pop	{r4, pc}
90002aac:	9003050c 	.word	0x9003050c

90002ab0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15Home_ScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90002ab0:	4b03      	ldr	r3, [pc, #12]	@ (90002ac0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15Home_ScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002ab2:	b510      	push	{r4, lr}
90002ab4:	4604      	mov	r4, r0
90002ab6:	6003      	str	r3, [r0, #0]
90002ab8:	f00f fcd1 	bl	9001245e <_ZN8touchgfx17AbstractPartitionD1Ev>
90002abc:	4620      	mov	r0, r4
90002abe:	bd10      	pop	{r4, pc}
90002ac0:	900304d8 	.word	0x900304d8

90002ac4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15Home_ScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002ac4:	4b06      	ldr	r3, [pc, #24]	@ (90002ae0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15Home_ScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x1c>)
90002ac6:	b510      	push	{r4, lr}
90002ac8:	4604      	mov	r4, r0
90002aca:	6003      	str	r3, [r0, #0]
90002acc:	f00f fcc7 	bl	9001245e <_ZN8touchgfx17AbstractPartitionD1Ev>
90002ad0:	f44f 6193 	mov.w	r1, #1176	@ 0x498
90002ad4:	4620      	mov	r0, r4
90002ad6:	f02a f8f1 	bl	9002ccbc <_ZdlPvj>
90002ada:	4620      	mov	r0, r4
90002adc:	bd10      	pop	{r4, pc}
90002ade:	bf00      	nop
90002ae0:	900304d8 	.word	0x900304d8

90002ae4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18TC_ScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90002ae4:	4b03      	ldr	r3, [pc, #12]	@ (90002af4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18TC_ScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002ae6:	b510      	push	{r4, lr}
90002ae8:	4604      	mov	r4, r0
90002aea:	6003      	str	r3, [r0, #0]
90002aec:	f00f fcb7 	bl	9001245e <_ZN8touchgfx17AbstractPartitionD1Ev>
90002af0:	4620      	mov	r0, r4
90002af2:	bd10      	pop	{r4, pc}
90002af4:	900304a4 	.word	0x900304a4

90002af8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18TC_ScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002af8:	4b05      	ldr	r3, [pc, #20]	@ (90002b10 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18TC_ScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
90002afa:	b510      	push	{r4, lr}
90002afc:	4604      	mov	r4, r0
90002afe:	6003      	str	r3, [r0, #0]
90002b00:	f00f fcad 	bl	9001245e <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b04:	2118      	movs	r1, #24
90002b06:	4620      	mov	r0, r4
90002b08:	f02a f8d8 	bl	9002ccbc <_ZdlPvj>
90002b0c:	4620      	mov	r0, r4
90002b0e:	bd10      	pop	{r4, pc}
90002b10:	900304a4 	.word	0x900304a4

90002b14 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
90002b14:	b510      	push	{r4, lr}
90002b16:	4a0c      	ldr	r2, [pc, #48]	@ (90002b48 <_ZN12FrontendHeapD1Ev+0x34>)
90002b18:	4604      	mov	r4, r0
90002b1a:	4b0c      	ldr	r3, [pc, #48]	@ (90002b4c <_ZN12FrontendHeapD1Ev+0x38>)
90002b1c:	f200 40c4 	addw	r0, r0, #1220	@ 0x4c4
90002b20:	6022      	str	r2, [r4, #0]
90002b22:	f8c4 34c4 	str.w	r3, [r4, #1220]	@ 0x4c4
90002b26:	f00f fc9a 	bl	9001245e <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b2a:	4b09      	ldr	r3, [pc, #36]	@ (90002b50 <_ZN12FrontendHeapD1Ev+0x3c>)
90002b2c:	4620      	mov	r0, r4
90002b2e:	f840 3f2c 	str.w	r3, [r0, #44]!
90002b32:	f00f fc94 	bl	9001245e <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b36:	4b07      	ldr	r3, [pc, #28]	@ (90002b54 <_ZN12FrontendHeapD1Ev+0x40>)
90002b38:	4620      	mov	r0, r4
90002b3a:	f840 3f14 	str.w	r3, [r0, #20]!
90002b3e:	f00f fc8e 	bl	9001245e <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b42:	4620      	mov	r0, r4
90002b44:	bd10      	pop	{r4, pc}
90002b46:	bf00      	nop
90002b48:	90030540 	.word	0x90030540
90002b4c:	9003050c 	.word	0x9003050c
90002b50:	900304d8 	.word	0x900304d8
90002b54:	900304a4 	.word	0x900304a4

90002b58 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
90002b58:	b510      	push	{r4, lr}
class FrontendHeap : public FrontendHeapBase
90002b5a:	4c0c      	ldr	r4, [pc, #48]	@ (90002b8c <__tcf_0+0x34>)
90002b5c:	4a0c      	ldr	r2, [pc, #48]	@ (90002b90 <__tcf_0+0x38>)
90002b5e:	4b0d      	ldr	r3, [pc, #52]	@ (90002b94 <__tcf_0+0x3c>)
90002b60:	f204 40c4 	addw	r0, r4, #1220	@ 0x4c4
90002b64:	6022      	str	r2, [r4, #0]
90002b66:	f8c4 34c4 	str.w	r3, [r4, #1220]	@ 0x4c4
90002b6a:	f00f fc78 	bl	9001245e <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b6e:	4b0a      	ldr	r3, [pc, #40]	@ (90002b98 <__tcf_0+0x40>)
90002b70:	4620      	mov	r0, r4
90002b72:	f840 3f2c 	str.w	r3, [r0, #44]!
90002b76:	f00f fc72 	bl	9001245e <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b7a:	4620      	mov	r0, r4
90002b7c:	4b07      	ldr	r3, [pc, #28]	@ (90002b9c <__tcf_0+0x44>)
        static FrontendHeap instance;
90002b7e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002b82:	f840 3f14 	str.w	r3, [r0, #20]!
90002b86:	f00f bc6a 	b.w	9001245e <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b8a:	bf00      	nop
90002b8c:	24006f1c 	.word	0x24006f1c
90002b90:	90030540 	.word	0x90030540
90002b94:	9003050c 	.word	0x9003050c
90002b98:	900304d8 	.word	0x900304d8
90002b9c:	900304a4 	.word	0x900304a4

90002ba0 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
90002ba0:	b510      	push	{r4, lr}
90002ba2:	4a0e      	ldr	r2, [pc, #56]	@ (90002bdc <_ZN12FrontendHeapD0Ev+0x3c>)
90002ba4:	4604      	mov	r4, r0
90002ba6:	4b0e      	ldr	r3, [pc, #56]	@ (90002be0 <_ZN12FrontendHeapD0Ev+0x40>)
90002ba8:	f200 40c4 	addw	r0, r0, #1220	@ 0x4c4
90002bac:	6022      	str	r2, [r4, #0]
90002bae:	f8c4 34c4 	str.w	r3, [r4, #1220]	@ 0x4c4
90002bb2:	f00f fc54 	bl	9001245e <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bb6:	4b0b      	ldr	r3, [pc, #44]	@ (90002be4 <_ZN12FrontendHeapD0Ev+0x44>)
90002bb8:	4620      	mov	r0, r4
90002bba:	f840 3f2c 	str.w	r3, [r0, #44]!
90002bbe:	f00f fc4e 	bl	9001245e <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bc2:	4b09      	ldr	r3, [pc, #36]	@ (90002be8 <_ZN12FrontendHeapD0Ev+0x48>)
90002bc4:	4620      	mov	r0, r4
90002bc6:	f840 3f14 	str.w	r3, [r0, #20]!
90002bca:	f00f fc48 	bl	9001245e <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bce:	4620      	mov	r0, r4
90002bd0:	f44f 61c9 	mov.w	r1, #1608	@ 0x648
90002bd4:	f02a f872 	bl	9002ccbc <_ZdlPvj>
90002bd8:	4620      	mov	r0, r4
90002bda:	bd10      	pop	{r4, pc}
90002bdc:	90030540 	.word	0x90030540
90002be0:	9003050c 	.word	0x9003050c
90002be4:	900304d8 	.word	0x900304d8
90002be8:	900304a4 	.word	0x900304a4

90002bec <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
90002bec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90002bf0:	b082      	sub	sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
90002bf2:	2400      	movs	r4, #0
90002bf4:	f001 fe62 	bl	900048bc <_ZN14BitmapDatabase11getInstanceEv>
90002bf8:	4605      	mov	r5, r0
90002bfa:	f001 fe63 	bl	900048c4 <_ZN14BitmapDatabase15getInstanceSizeEv>
90002bfe:	4623      	mov	r3, r4
90002c00:	4601      	mov	r1, r0
90002c02:	4622      	mov	r2, r4
90002c04:	4628      	mov	r0, r5
90002c06:	9400      	str	r4, [sp, #0]
90002c08:	f01a f84c 	bl	9001cca4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
90002c0c:	4b29      	ldr	r3, [pc, #164]	@ (90002cb4 <touchgfx_init+0xc8>)
90002c0e:	4a2a      	ldr	r2, [pc, #168]	@ (90002cb8 <touchgfx_init+0xcc>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
90002c10:	4620      	mov	r0, r4
        static FrontendHeap instance;
90002c12:	4c2a      	ldr	r4, [pc, #168]	@ (90002cbc <touchgfx_init+0xd0>)
90002c14:	601a      	str	r2, [r3, #0]
90002c16:	f003 fee5 	bl	900069e4 <_ZN8touchgfx5Texts11setLanguageEt>
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
90002c1a:	4b29      	ldr	r3, [pc, #164]	@ (90002cc0 <touchgfx_init+0xd4>)
90002c1c:	4a29      	ldr	r2, [pc, #164]	@ (90002cc4 <touchgfx_init+0xd8>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
90002c1e:	482a      	ldr	r0, [pc, #168]	@ (90002cc8 <touchgfx_init+0xdc>)
90002c20:	609a      	str	r2, [r3, #8]
90002c22:	f019 ffa7 	bl	9001cb74 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
90002c26:	6823      	ldr	r3, [r4, #0]
90002c28:	f3bf 8f5b 	dmb	ish
90002c2c:	07db      	lsls	r3, r3, #31
90002c2e:	d505      	bpl.n	90002c3c <touchgfx_init+0x50>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
90002c30:	4826      	ldr	r0, [pc, #152]	@ (90002ccc <touchgfx_init+0xe0>)
}
90002c32:	b002      	add	sp, #8
90002c34:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002c38:	f7fe b950 	b.w	90000edc <_ZN11TouchGFXHAL10initializeEv>
90002c3c:	4620      	mov	r0, r4
90002c3e:	f02a f83f 	bl	9002ccc0 <__cxa_guard_acquire>
90002c42:	2800      	cmp	r0, #0
90002c44:	d0f4      	beq.n	90002c30 <touchgfx_init+0x44>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
90002c46:	4d22      	ldr	r5, [pc, #136]	@ (90002cd0 <touchgfx_init+0xe4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
90002c48:	4b22      	ldr	r3, [pc, #136]	@ (90002cd4 <touchgfx_init+0xe8>)
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
90002c4a:	f205 46ec 	addw	r6, r5, #1260	@ 0x4ec
        : presenterStorage(pres),
90002c4e:	f105 0014 	add.w	r0, r5, #20
          screenStorage(scr),
90002c52:	f105 082c 	add.w	r8, r5, #44	@ 0x2c
          transitionStorage(tra),
90002c56:	f205 47c4 	addw	r7, r5, #1220	@ 0x4c4
90002c5a:	602b      	str	r3, [r5, #0]
90002c5c:	60ef      	str	r7, [r5, #12]
          frontendApplication(app)
90002c5e:	612e      	str	r6, [r5, #16]
          screenStorage(scr),
90002c60:	e9c5 0801 	strd	r0, r8, [r5, #4]
90002c64:	f00f fbfc 	bl	90012460 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002c68:	4b1b      	ldr	r3, [pc, #108]	@ (90002cd8 <touchgfx_init+0xec>)
90002c6a:	4640      	mov	r0, r8
90002c6c:	616b      	str	r3, [r5, #20]
90002c6e:	f00f fbf7 	bl	90012460 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002c72:	4b1a      	ldr	r3, [pc, #104]	@ (90002cdc <touchgfx_init+0xf0>)
90002c74:	4638      	mov	r0, r7
90002c76:	62eb      	str	r3, [r5, #44]	@ 0x2c
90002c78:	f00f fbf2 	bl	90012460 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002c7c:	4b18      	ldr	r3, [pc, #96]	@ (90002ce0 <touchgfx_init+0xf4>)
90002c7e:	f505 609c 	add.w	r0, r5, #1248	@ 0x4e0
90002c82:	f8c5 34c4 	str.w	r3, [r5, #1220]	@ 0x4c4
90002c86:	f004 f811 	bl	90006cac <_ZN5ModelC1Ev>
90002c8a:	462a      	mov	r2, r5
90002c8c:	f505 619c 	add.w	r1, r5, #1248	@ 0x4e0
90002c90:	4630      	mov	r0, r6
90002c92:	f003 ff2d 	bl	90006af0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
90002c96:	4630      	mov	r0, r6
90002c98:	f002 fa34 	bl	90005104 <_ZN23FrontendApplicationBase33gotoHome_ScreenScreenNoTransitionEv>
        static FrontendHeap instance;
90002c9c:	4811      	ldr	r0, [pc, #68]	@ (90002ce4 <touchgfx_init+0xf8>)
90002c9e:	f02a fba1 	bl	9002d3e4 <atexit>
90002ca2:	4620      	mov	r0, r4
90002ca4:	f02a f818 	bl	9002ccd8 <__cxa_guard_release>
90002ca8:	4808      	ldr	r0, [pc, #32]	@ (90002ccc <touchgfx_init+0xe0>)
}
90002caa:	b002      	add	sp, #8
90002cac:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002cb0:	f7fe b914 	b.w	90000edc <_ZN11TouchGFXHAL10initializeEv>
90002cb4:	24021c70 	.word	0x24021c70
90002cb8:	240060c4 	.word	0x240060c4
90002cbc:	24006f18 	.word	0x24006f18
90002cc0:	240060e4 	.word	0x240060e4
90002cc4:	240060c8 	.word	0x240060c8
90002cc8:	24000040 	.word	0x24000040
90002ccc:	24006034 	.word	0x24006034
90002cd0:	24006f1c 	.word	0x24006f1c
90002cd4:	90030540 	.word	0x90030540
90002cd8:	900304a4 	.word	0x900304a4
90002cdc:	900304d8 	.word	0x900304d8
90002ce0:	9003050c 	.word	0x9003050c
90002ce4:	90002b59 	.word	0x90002b59

90002ce8 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
90002ce8:	4770      	bx	lr
90002cea:	bf00      	nop

90002cec <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
90002cec:	4801      	ldr	r0, [pc, #4]	@ (90002cf4 <touchgfx_taskEntry+0x8>)
90002cee:	f7fe b943 	b.w	90000f78 <_ZN11TouchGFXHAL9taskEntryEv>
90002cf2:	bf00      	nop
90002cf4:	24006034 	.word	0x24006034

90002cf8 <_GLOBAL__sub_I_touchgfx_init>:
}
90002cf8:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
90002cfa:	4e2a      	ldr	r6, [pc, #168]	@ (90002da4 <_GLOBAL__sub_I_touchgfx_init+0xac>)
{
public:

    STM32TouchController() {}
90002cfc:	4b2a      	ldr	r3, [pc, #168]	@ (90002da8 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
90002cfe:	4c2b      	ldr	r4, [pc, #172]	@ (90002dac <_GLOBAL__sub_I_touchgfx_init+0xb4>)
90002d00:	4630      	mov	r0, r6
static LCD16bpp display;
90002d02:	4d2b      	ldr	r5, [pc, #172]	@ (90002db0 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
90002d04:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
90002d06:	f7ff fdd7 	bl	900028b8 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
90002d0a:	4628      	mov	r0, r5
90002d0c:	f01f f8da 	bl	90021ec4 <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
90002d10:	4828      	ldr	r0, [pc, #160]	@ (90002db4 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
90002d12:	f017 fc7b 	bl	9001a60c <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
90002d16:	4b28      	ldr	r3, [pc, #160]	@ (90002db8 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
          mcuInstrumentation(0),
90002d18:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002d1a:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002d1e:	f44f 7188 	mov.w	r1, #272	@ 0x110
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
90002d22:	62da      	str	r2, [r3, #44]	@ 0x2c
90002d24:	861a      	strh	r2, [r3, #48]	@ 0x30
        : x(0), y(0), width(0), height(0)
90002d26:	655a      	str	r2, [r3, #84]	@ 0x54
          useAuxiliaryLCD(false),
90002d28:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          lastY(0),
90002d2c:	665a      	str	r2, [r3, #100]	@ 0x64
          vSyncCompensationEnabled(false),
90002d2e:	66da      	str	r2, [r3, #108]	@ 0x6c
          updateMCULoad(0),
90002d30:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          mcuInstrumentation(0),
90002d34:	e9c3 4203 	strd	r4, r2, [r3, #12]
          touchSampleRate(1),
90002d38:	4c20      	ldr	r4, [pc, #128]	@ (90002dbc <_GLOBAL__sub_I_touchgfx_init+0xc4>)
90002d3a:	669c      	str	r4, [r3, #104]	@ 0x68
        instance = this;
90002d3c:	4c20      	ldr	r4, [pc, #128]	@ (90002dc0 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
90002d3e:	6023      	str	r3, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002d40:	4c20      	ldr	r4, [pc, #128]	@ (90002dc4 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
90002d42:	8020      	strh	r0, [r4, #0]
90002d44:	4c20      	ldr	r4, [pc, #128]	@ (90002dc8 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
90002d46:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002d48:	4c20      	ldr	r4, [pc, #128]	@ (90002dcc <_GLOBAL__sub_I_touchgfx_init+0xd4>)
90002d4a:	4821      	ldr	r0, [pc, #132]	@ (90002dd0 <_GLOBAL__sub_I_touchgfx_init+0xd8>)
90002d4c:	8021      	strh	r1, [r4, #0]
90002d4e:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
90002d50:	4820      	ldr	r0, [pc, #128]	@ (90002dd4 <_GLOBAL__sub_I_touchgfx_init+0xdc>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
90002d52:	4921      	ldr	r1, [pc, #132]	@ (90002dd8 <_GLOBAL__sub_I_touchgfx_init+0xe0>)
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002d54:	4c21      	ldr	r4, [pc, #132]	@ (90002ddc <_GLOBAL__sub_I_touchgfx_init+0xe4>)
          lcdRef(display),
90002d56:	e9c3 6501 	strd	r6, r5, [r3, #4]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002d5a:	f44f 7580 	mov.w	r5, #256	@ 0x100
          frameBufferAllocator(0),
90002d5e:	e9c3 2205 	strd	r2, r2, [r3, #20]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002d62:	649d      	str	r5, [r3, #72]	@ 0x48
            : startX(0),
90002d64:	e9c3 2207 	strd	r2, r2, [r3, #28]
        : drag(), listener(0), dragThresholdValue(0)
90002d68:	e9c3 2209 	strd	r2, r2, [r3, #36]	@ 0x24
          frameBuffer0(0),
90002d6c:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
90002d70:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
90002d74:	e9c3 2213 	strd	r2, r2, [r3, #76]	@ 0x4c
          lastX(0),
90002d78:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
        DISPLAY_ROTATION = rotate0;
90002d7c:	7002      	strb	r2, [r0, #0]
90002d7e:	6019      	str	r1, [r3, #0]
          isFrontPorchEntered(false),
90002d80:	4917      	ldr	r1, [pc, #92]	@ (90002de0 <_GLOBAL__sub_I_touchgfx_init+0xe8>)
          maxDrawingHeight(height / numberOfBlocks), // Best guess based on testing (but not ideal in all cases)
90002d82:	4818      	ldr	r0, [pc, #96]	@ (90002de4 <_GLOBAL__sub_I_touchgfx_init+0xec>)
          isFrontPorchEntered(false),
90002d84:	67d9      	str	r1, [r3, #124]	@ 0x7c
90002d86:	4918      	ldr	r1, [pc, #96]	@ (90002de8 <_GLOBAL__sub_I_touchgfx_init+0xf0>)
        : cc_consumed(0),
90002d88:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
90002d8c:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
          maxDrawingHeight(height / numberOfBlocks), // Best guess based on testing (but not ideal in all cases)
90002d90:	f8c3 0080 	str.w	r0, [r3, #128]	@ 0x80
          cc_in(0)
90002d94:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
90002d98:	f8c3 1084 	str.w	r1, [r3, #132]	@ 0x84
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002d9c:	e9c3 241d 	strd	r2, r4, [r3, #116]	@ 0x74
}
90002da0:	bd70      	pop	{r4, r5, r6, pc}
90002da2:	bf00      	nop
90002da4:	24006170 	.word	0x24006170
90002da8:	9002e5a8 	.word	0x9002e5a8
90002dac:	24006f14 	.word	0x24006f14
90002db0:	240060e4 	.word	0x240060e4
90002db4:	240060c8 	.word	0x240060c8
90002db8:	24006034 	.word	0x24006034
90002dbc:	01000001 	.word	0x01000001
90002dc0:	24021c0c 	.word	0x24021c0c
90002dc4:	24021c00 	.word	0x24021c00
90002dc8:	24021c06 	.word	0x24021c06
90002dcc:	24021c02 	.word	0x24021c02
90002dd0:	24021c08 	.word	0x24021c08
90002dd4:	24021c04 	.word	0x24021c04
90002dd8:	90030324 	.word	0x90030324
90002ddc:	01010000 	.word	0x01010000
90002de0:	00440400 	.word	0x00440400
90002de4:	00140016 	.word	0x00140016
90002de8:	9002e580 	.word	0x9002e580

90002dec <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
90002dec:	4801      	ldr	r0, [pc, #4]	@ (90002df4 <_GLOBAL__sub_D_touchgfx_init+0x8>)
90002dee:	f7ff badd 	b.w	900023ac <_ZN8STM32DMAD1Ev>
90002df2:	bf00      	nop
90002df4:	24006170 	.word	0x24006170

90002df8 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * drawn by the widget.
     */
    virtual void invalidateContent() const
    {
        // Consider checking if *this is in the draw chain
        if (visible)
90002df8:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90002dfc:	b112      	cbz	r2, 90002e04 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
        {
            invalidate();
90002dfe:	6803      	ldr	r3, [r0, #0]
90002e00:	695b      	ldr	r3, [r3, #20]
90002e02:	4718      	bx	r3
        }
    }
90002e04:	4770      	bx	lr
90002e06:	bf00      	nop

90002e08 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
90002e08:	2000      	movs	r0, #0
90002e0a:	4770      	bx	lr

90002e0c <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
90002e0c:	8081      	strh	r1, [r0, #4]
    }
90002e0e:	4770      	bx	lr

90002e10 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
90002e10:	80c1      	strh	r1, [r0, #6]
    }
90002e12:	4770      	bx	lr

90002e14 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
90002e14:	8101      	strh	r1, [r0, #8]
    }
90002e16:	4770      	bx	lr

90002e18 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
90002e18:	8141      	strh	r1, [r0, #10]
    }
90002e1a:	4770      	bx	lr

90002e1c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
90002e1c:	4770      	bx	lr
90002e1e:	bf00      	nop

90002e20 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
90002e20:	4770      	bx	lr
90002e22:	bf00      	nop

90002e24 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
90002e24:	4770      	bx	lr
90002e26:	bf00      	nop

90002e28 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
90002e28:	4770      	bx	lr
90002e2a:	bf00      	nop

90002e2c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
90002e2c:	4770      	bx	lr
90002e2e:	bf00      	nop

90002e30 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
90002e30:	f8b0 c006 	ldrh.w	ip, [r0, #6]
90002e34:	6803      	ldr	r3, [r0, #0]
90002e36:	eba2 020c 	sub.w	r2, r2, ip
90002e3a:	f8b0 c004 	ldrh.w	ip, [r0, #4]
90002e3e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90002e40:	eba1 010c 	sub.w	r1, r1, ip
90002e44:	b212      	sxth	r2, r2
90002e46:	b209      	sxth	r1, r1
90002e48:	4718      	bx	r3
90002e4a:	bf00      	nop

90002e4c <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
90002e4c:	6813      	ldr	r3, [r2, #0]
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002e4e:	f64f 7cff 	movw	ip, #65535	@ 0xffff
        cachedAbsX = UNCACHED_INDICATOR;
90002e52:	f04f 31ff 	mov.w	r1, #4294967295
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002e56:	f8a0 c00c 	strh.w	ip, [r0, #12]
        nextDrawChainElement = *nextPreviousElement;
90002e5a:	e9c0 3107 	strd	r3, r1, [r0, #28]
        *nextPreviousElement = this;
90002e5e:	6010      	str	r0, [r2, #0]
    }
90002e60:	4770      	bx	lr
90002e62:	bf00      	nop

90002e64 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
90002e64:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90002e68:	b11a      	cbz	r2, 90002e72 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
90002e6a:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
90002e6e:	b102      	cbz	r2, 90002e72 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
90002e70:	6018      	str	r0, [r3, #0]
        }
    }
90002e72:	4770      	bx	lr

90002e74 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
90002e74:	2000      	movs	r0, #0
90002e76:	4770      	bx	lr

90002e78 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @return True if the painter is ready to paint, false otherwise.
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
90002e78:	4603      	mov	r3, r0
    {
        widgetWidth = widgetRect.width;
90002e7a:	888a      	ldrh	r2, [r1, #4]
        return true;
    }
90002e7c:	2001      	movs	r0, #1
        widgetWidth = widgetRect.width;
90002e7e:	809a      	strh	r2, [r3, #4]
    }
90002e80:	4770      	bx	lr
90002e82:	bf00      	nop

90002e84 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
90002e84:	4770      	bx	lr
90002e86:	bf00      	nop

90002e88 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90002e88:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
90002e8c:	4770      	bx	lr
90002e8e:	bf00      	nop

90002e90 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
90002e90:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
90002e94:	4770      	bx	lr
90002e96:	bf00      	nop

90002e98 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90002e98:	f04f 0c00 	mov.w	ip, #0
        return rect.width;
90002e9c:	688a      	ldr	r2, [r1, #8]
90002e9e:	f8c0 c000 	str.w	ip, [r0]
90002ea2:	6042      	str	r2, [r0, #4]
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
90002ea4:	4770      	bx	lr
90002ea6:	bf00      	nop

90002ea8 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
90002ea8:	2200      	movs	r2, #0
90002eaa:	6002      	str	r2, [r0, #0]
90002eac:	6042      	str	r2, [r0, #4]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
90002eae:	4770      	bx	lr

90002eb0 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
    }

    virtual Bitmap::BitmapFormat framebufferFormat() const
    {
        return Bitmap::RGB565;
    }
90002eb0:	2000      	movs	r0, #0
90002eb2:	4770      	bx	lr

90002eb4 <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
90002eb4:	7701      	strb	r1, [r0, #28]
    }
90002eb6:	4770      	bx	lr

90002eb8 <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
90002eb8:	ed80 0a08 	vstr	s0, [r0, #32]
    }
90002ebc:	4770      	bx	lr
90002ebe:	bf00      	nop

90002ec0 <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
90002ec0:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
90002ec4:	4770      	bx	lr
90002ec6:	bf00      	nop

90002ec8 <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
90002ec8:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
90002ecc:	4770      	bx	lr
90002ece:	bf00      	nop

90002ed0 <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
90002ed0:	2001      	movs	r0, #1
90002ed2:	4770      	bx	lr

90002ed4 <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
90002ed4:	3098      	adds	r0, #152	@ 0x98
90002ed6:	4770      	bx	lr

90002ed8 <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
90002ed8:	308c      	adds	r0, #140	@ 0x8c
90002eda:	4770      	bx	lr

90002edc <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
90002edc:	3084      	adds	r0, #132	@ 0x84
90002ede:	4770      	bx	lr

90002ee0 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
90002ee0:	4770      	bx	lr
90002ee2:	bf00      	nop

90002ee4 <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90002ee4:	4770      	bx	lr
90002ee6:	bf00      	nop

90002ee8 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
90002ee8:	4770      	bx	lr
90002eea:	bf00      	nop

90002eec <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90002eec:	4b03      	ldr	r3, [pc, #12]	@ (90002efc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
90002eee:	2290      	movs	r2, #144	@ 0x90
90002ef0:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
90002ef4:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
90002ef8:	4770      	bx	lr
90002efa:	bf00      	nop
90002efc:	e000e100 	.word	0xe000e100

90002f00 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
90002f00:	4a09      	ldr	r2, [pc, #36]	@ (90002f28 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
90002f02:	490a      	ldr	r1, [pc, #40]	@ (90002f2c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
90002f04:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
90002f06:	480a      	ldr	r0, [pc, #40]	@ (90002f30 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
90002f08:	f3c3 030a 	ubfx	r3, r3, #0, #11
90002f0c:	3b01      	subs	r3, #1
90002f0e:	b29b      	uxth	r3, r3
90002f10:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
90002f12:	6911      	ldr	r1, [r2, #16]
90002f14:	f3c1 010a 	ubfx	r1, r1, #0, #11
90002f18:	3901      	subs	r1, #1
90002f1a:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
90002f1c:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
90002f1e:	6b53      	ldr	r3, [r2, #52]	@ 0x34
90002f20:	f043 0301 	orr.w	r3, r3, #1
90002f24:	6353      	str	r3, [r2, #52]	@ 0x34
}
90002f26:	4770      	bx	lr
90002f28:	50001000 	.word	0x50001000
90002f2c:	24007566 	.word	0x24007566
90002f30:	24007564 	.word	0x24007564

90002f34 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
90002f34:	4b01      	ldr	r3, [pc, #4]	@ (90002f3c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
90002f36:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
90002f3a:	4770      	bx	lr
90002f3c:	50001000 	.word	0x50001000

90002f40 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002f40:	4b02      	ldr	r3, [pc, #8]	@ (90002f4c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002f42:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002f44:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002f48:	625a      	str	r2, [r3, #36]	@ 0x24
}
90002f4a:	4770      	bx	lr
90002f4c:	50001000 	.word	0x50001000

90002f50 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
 * Strategy:
 * Decode directly into the framebuffer in draw.
 * Tick will decide if we are going to a new frame.
 */
template <uint32_t no_streams, touchgfx::Bitmap::BitmapFormat output_format>
class DirectFrameBufferVideoController : public touchgfx::VideoController
90002f50:	4770      	bx	lr
90002f52:	bf00      	nop

90002f54 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
        return handle;
    }

    virtual void unregisterVideoWidget(const Handle handle)
    {
        streams[handle].isActive = false;
90002f54:	eb01 01c1 	add.w	r1, r1, r1, lsl #3
90002f58:	2300      	movs	r3, #0
90002f5a:	eb00 0081 	add.w	r0, r0, r1, lsl #2
90002f5e:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
    }
90002f62:	4770      	bx	lr

90002f64 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE29setVideoFrameRateCompensationEb>:
        return stream.isPlaying;
    }

    virtual void setVideoFrameRateCompensation(const bool allow)
    {
        allowSkipFrames = allow;
90002f64:	f880 102c 	strb.w	r1, [r0, #44]	@ 0x2c
    }
90002f68:	4770      	bx	lr
90002f6a:	bf00      	nop

90002f6c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DirectFrameBufferVideoController : public touchgfx::VideoController
90002f6c:	b510      	push	{r4, lr}
90002f6e:	4604      	mov	r4, r0
90002f70:	2130      	movs	r1, #48	@ 0x30
90002f72:	f029 fea3 	bl	9002ccbc <_ZdlPvj>
90002f76:	4620      	mov	r0, r4
90002f78:	bd10      	pop	{r4, pc}
90002f7a:	bf00      	nop

90002f7c <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
    class CanvasWidgetProxy : public CanvasWidget
90002f7c:	b510      	push	{r4, lr}
90002f7e:	4604      	mov	r4, r0
90002f80:	212c      	movs	r1, #44	@ 0x2c
90002f82:	f029 fe9b 	bl	9002ccbc <_ZdlPvj>
90002f86:	4620      	mov	r0, r4
90002f88:	bd10      	pop	{r4, pc}
90002f8a:	bf00      	nop

90002f8c <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90002f8c:	b510      	push	{r4, lr}
90002f8e:	4604      	mov	r4, r0
90002f90:	21bc      	movs	r1, #188	@ 0xbc
90002f92:	f029 fe93 	bl	9002ccbc <_ZdlPvj>
90002f96:	4620      	mov	r0, r4
90002f98:	bd10      	pop	{r4, pc}
90002f9a:	bf00      	nop

90002f9c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
        assert(handle < no_streams);
90002f9c:	b911      	cbnz	r1, 90002fa4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x8>
    }
90002f9e:	f890 0025 	ldrb.w	r0, [r0, #37]	@ 0x25
90002fa2:	4770      	bx	lr
    virtual bool getIsPlaying(const Handle handle)
90002fa4:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002fa6:	4a03      	ldr	r2, [pc, #12]	@ (90002fb4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
90002fa8:	f44f 7192 	mov.w	r1, #292	@ 0x124
90002fac:	4b02      	ldr	r3, [pc, #8]	@ (90002fb8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
90002fae:	4803      	ldr	r0, [pc, #12]	@ (90002fbc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
90002fb0:	f02a f9fa 	bl	9002d3a8 <__assert_func>
90002fb4:	9002ec68 	.word	0x9002ec68
90002fb8:	9002ec54 	.word	0x9002ec54
90002fbc:	9002ed84 	.word	0x9002ed84

90002fc0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
        assert(handle < no_streams);
90002fc0:	b921      	cbnz	r1, 90002fcc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0xc>
        mjpegDecoders[handle]->getVideoInfo(data);
90002fc2:	6840      	ldr	r0, [r0, #4]
90002fc4:	4611      	mov	r1, r2
90002fc6:	6803      	ldr	r3, [r0, #0]
90002fc8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90002fca:	4718      	bx	r3
        assert(handle < no_streams);
90002fcc:	4b03      	ldr	r3, [pc, #12]	@ (90002fdc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x1c>)
90002fce:	f44f 718f 	mov.w	r1, #286	@ 0x11e
90002fd2:	4a03      	ldr	r2, [pc, #12]	@ (90002fe0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
90002fd4:	4803      	ldr	r0, [pc, #12]	@ (90002fe4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
90002fd6:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002fd8:	f02a f9e6 	bl	9002d3a8 <__assert_func>
90002fdc:	9002ec54 	.word	0x9002ec54
90002fe0:	9002edcc 	.word	0x9002edcc
90002fe4:	9002ed84 	.word	0x9002ed84

90002fe8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
        assert(handle < no_streams);
90002fe8:	b909      	cbnz	r1, 90002fee <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x6>
    }
90002fea:	68c0      	ldr	r0, [r0, #12]
90002fec:	4770      	bx	lr
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
90002fee:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002ff0:	4a03      	ldr	r2, [pc, #12]	@ (90003000 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
90002ff2:	f44f 718b 	mov.w	r1, #278	@ 0x116
90002ff6:	4b03      	ldr	r3, [pc, #12]	@ (90003004 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
90002ff8:	4803      	ldr	r0, [pc, #12]	@ (90003008 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x20>)
90002ffa:	f02a f9d5 	bl	9002d3a8 <__assert_func>
90002ffe:	bf00      	nop
90003000:	9002ef0c 	.word	0x9002ef0c
90003004:	9002ec54 	.word	0x9002ec54
90003008:	9002ed84 	.word	0x9002ed84

9000300c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
        assert(handle < no_streams);
9000300c:	b921      	cbnz	r1, 90003018 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0xc>
        stream.frameCount = 0;
9000300e:	6081      	str	r1, [r0, #8]
        stream.tickCount = 0;
90003010:	6101      	str	r1, [r0, #16]
        stream.frame_rate_video = video_frames;
90003012:	e9c0 3205 	strd	r3, r2, [r0, #20]
90003016:	4770      	bx	lr
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
90003018:	b508      	push	{r3, lr}
        assert(handle < no_streams);
9000301a:	4a03      	ldr	r2, [pc, #12]	@ (90003028 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
9000301c:	2141      	movs	r1, #65	@ 0x41
9000301e:	4b03      	ldr	r3, [pc, #12]	@ (9000302c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
90003020:	4803      	ldr	r0, [pc, #12]	@ (90003030 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
90003022:	f02a f9c1 	bl	9002d3a8 <__assert_func>
90003026:	bf00      	nop
90003028:	9002f054 	.word	0x9002f054
9000302c:	9002ec54 	.word	0x9002ec54
90003030:	9002ed84 	.word	0x9002ed84

90003034 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
90003034:	b508      	push	{r3, lr}
90003036:	4603      	mov	r3, r0

    Handle getFreeHandle()
    {
        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
90003038:	f890 0024 	ldrb.w	r0, [r0, #36]	@ 0x24
9000303c:	b940      	cbnz	r0, 90003050 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x1c>
        streams[handle].isActive = true;
9000303e:	2201      	movs	r2, #1
90003040:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
     * @param width  Width of the videoBuffer in pixels
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
90003044:	f881 0034 	strb.w	r0, [r1, #52]	@ 0x34
        bufferWidth = width;
90003048:	f8c1 0036 	str.w	r0, [r1, #54]	@ 0x36
        buffer = videoBuffer;
9000304c:	6308      	str	r0, [r1, #48]	@ 0x30
    }
9000304e:	bd08      	pop	{r3, pc}
            {
                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
90003050:	4b03      	ldr	r3, [pc, #12]	@ (90003060 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x2c>)
90003052:	f240 116d 	movw	r1, #365	@ 0x16d
90003056:	4a03      	ldr	r2, [pc, #12]	@ (90003064 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x30>)
90003058:	4803      	ldr	r0, [pc, #12]	@ (90003068 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x34>)
9000305a:	f02a f9a5 	bl	9002d3a8 <__assert_func>
9000305e:	bf00      	nop
90003060:	9002f1a0 	.word	0x9002f1a0
90003064:	9002f1d0 	.word	0x9002f1d0
90003068:	9002ed84 	.word	0x9002ed84

9000306c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
9000306c:	f00f bcda 	b.w	90012a24 <_ZN8touchgfx3HAL10beginFrameEv>

90003070 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
90003070:	f00f bce4 	b.w	90012a3c <_ZN8touchgfx3HAL8endFrameEv>

90003074 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
90003074:	f00f bca0 	b.w	900129b8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

90003078 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
90003078:	f00f be0f 	b.w	90012c9a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

9000307c <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
    // Because DMA2D access main memory directly, the DCache must be invalidated
    // becuase it could hold a wrong image of the framebuffer. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable
    // "CPU Cache" in the "System Core" settings for "Cortex M7" in CubeMX
    // in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
9000307c:	4814      	ldr	r0, [pc, #80]	@ (900030d0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x54>)
9000307e:	6943      	ldr	r3, [r0, #20]
90003080:	03d9      	lsls	r1, r3, #15
90003082:	d523      	bpl.n	900030cc <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x50>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90003084:	2300      	movs	r3, #0
{
90003086:	b510      	push	{r4, lr}
90003088:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
9000308c:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90003090:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90003094:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90003098:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
9000309c:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
900030a0:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030a4:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
900030a8:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030aa:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
900030ae:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030b0:	f8c0 2274 	str.w	r2, [r0, #628]	@ 0x274
      } while (ways-- != 0U);
900030b4:	1c5a      	adds	r2, r3, #1
900030b6:	d1f8      	bne.n	900030aa <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2e>
    } while(sets-- != 0U);
900030b8:	f1ac 0c20 	sub.w	ip, ip, #32
900030bc:	f11c 0f20 	cmn.w	ip, #32
900030c0:	d1f0      	bne.n	900030a4 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x28>
900030c2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900030c6:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
900030ca:	bd10      	pop	{r4, pc}
900030cc:	4770      	bx	lr
900030ce:	bf00      	nop
900030d0:	e000ed00 	.word	0xe000ed00

900030d4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
900030d4:	b5f0      	push	{r4, r5, r6, r7, lr}
900030d6:	b083      	sub	sp, #12
        assert(handle < no_streams);
900030d8:	bb59      	cbnz	r1, 90003132 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x5e>
900030da:	4604      	mov	r4, r0
        if (mjpegDecoders[handle]->hasVideo())
900030dc:	6840      	ldr	r0, [r0, #4]
900030de:	461d      	mov	r5, r3
900030e0:	4616      	mov	r6, r2
900030e2:	6803      	ldr	r3, [r0, #0]
900030e4:	691b      	ldr	r3, [r3, #16]
900030e6:	4798      	blx	r3
900030e8:	b908      	cbnz	r0, 900030ee <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x1a>
    }
900030ea:	b003      	add	sp, #12
900030ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
        return instance;
900030ee:	4f14      	ldr	r7, [pc, #80]	@ (90003140 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x6c>)
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
900030f0:	2101      	movs	r1, #1
900030f2:	6838      	ldr	r0, [r7, #0]
900030f4:	f010 faa6 	bl	90013644 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
            touchgfx::Rect absolute = widget.getAbsoluteRect();
900030f8:	4629      	mov	r1, r5
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
900030fa:	4605      	mov	r5, r0
            touchgfx::Rect absolute = widget.getAbsoluteRect();
900030fc:	4668      	mov	r0, sp
900030fe:	f017 fa6b 	bl	9001a5d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
            DisplayTransformation::transformDisplayToFrameBuffer(absolute);
90003102:	4668      	mov	r0, sp
90003104:	f015 fe36 	bl	90018d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
90003108:	4b0e      	ldr	r3, [pc, #56]	@ (90003144 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x70>)
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
9000310a:	6860      	ldr	r0, [r4, #4]
9000310c:	4631      	mov	r1, r6
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
9000310e:	f9bd 4002 	ldrsh.w	r4, [sp, #2]
90003112:	881b      	ldrh	r3, [r3, #0]
90003114:	f9bd 2000 	ldrsh.w	r2, [sp]
90003118:	fb03 2204 	mla	r2, r3, r4, r2
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
9000311c:	6804      	ldr	r4, [r0, #0]
9000311e:	eb05 0242 	add.w	r2, r5, r2, lsl #1
90003122:	69e4      	ldr	r4, [r4, #28]
90003124:	47a0      	blx	r4
90003126:	6838      	ldr	r0, [r7, #0]
            touchgfx::HAL::getInstance()->unlockFrameBuffer();
90003128:	6803      	ldr	r3, [r0, #0]
9000312a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000312c:	4798      	blx	r3
    }
9000312e:	b003      	add	sp, #12
90003130:	bdf0      	pop	{r4, r5, r6, r7, pc}
        assert(handle < no_streams);
90003132:	4b05      	ldr	r3, [pc, #20]	@ (90003148 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x74>)
90003134:	21ea      	movs	r1, #234	@ 0xea
90003136:	4a05      	ldr	r2, [pc, #20]	@ (9000314c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x78>)
90003138:	4805      	ldr	r0, [pc, #20]	@ (90003150 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x7c>)
9000313a:	f02a f935 	bl	9002d3a8 <__assert_func>
9000313e:	bf00      	nop
90003140:	24021c0c 	.word	0x24021c0c
90003144:	24021c06 	.word	0x24021c06
90003148:	9002ec54 	.word	0x9002ec54
9000314c:	9002f2e8 	.word	0x9002f2e8
90003150:	9002ed84 	.word	0x9002ed84

90003154 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90003154:	4b08      	ldr	r3, [pc, #32]	@ (90003178 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
90003156:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
9000315a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000315e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003162:	f3bf 8f6f 	isb	sy
90003166:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
9000316a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000316e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003172:	f3bf 8f6f 	isb	sy
}
90003176:	4770      	bx	lr
90003178:	e000e100 	.word	0xe000e100

9000317c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000317c:	4b03      	ldr	r3, [pc, #12]	@ (9000318c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
9000317e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
90003182:	609a      	str	r2, [r3, #8]
90003184:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
90003188:	609a      	str	r2, [r3, #8]
}
9000318a:	4770      	bx	lr
9000318c:	e000e100 	.word	0xe000e100

90003190 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
90003190:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        assert(handle < no_streams);
90003194:	2900      	cmp	r1, #0
90003196:	f040 8096 	bne.w	900032c6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x136>
        if (stream.isPlaying || stream.isShowingOneFrame)
9000319a:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
9000319e:	4604      	mov	r4, r0
900031a0:	b933      	cbnz	r3, 900031b0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x20>
900031a2:	f890 3026 	ldrb.w	r3, [r0, #38]	@ 0x26
900031a6:	b91b      	cbnz	r3, 900031b0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x20>
        bool hasMoreFrames = true;
900031a8:	2501      	movs	r5, #1
    }
900031aa:	4628      	mov	r0, r5
900031ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        return vSyncForFrame;
900031b0:	4b48      	ldr	r3, [pc, #288]	@ (900032d4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x144>)
            stream.isShowingOneFrame = false;
900031b2:	2700      	movs	r7, #0
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900031b4:	6921      	ldr	r1, [r4, #16]
900031b6:	681b      	ldr	r3, [r3, #0]
900031b8:	f893 306b 	ldrb.w	r3, [r3, #107]	@ 0x6b
            stream.isShowingOneFrame = false;
900031bc:	f884 7026 	strb.w	r7, [r4, #38]	@ 0x26
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900031c0:	440b      	add	r3, r1
            if (stream.doDecodeNextFrame)
900031c2:	f894 1028 	ldrb.w	r1, [r4, #40]	@ 0x28
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900031c6:	6123      	str	r3, [r4, #16]
            if (stream.doDecodeNextFrame)
900031c8:	b979      	cbnz	r1, 900031ea <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x5a>
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
900031ca:	68a2      	ldr	r2, [r4, #8]
        bool hasMoreFrames = true;
900031cc:	2501      	movs	r5, #1
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
900031ce:	6961      	ldr	r1, [r4, #20]
900031d0:	fb01 f303 	mul.w	r3, r1, r3
900031d4:	69a1      	ldr	r1, [r4, #24]
900031d6:	fb01 f202 	mul.w	r2, r1, r2
900031da:	4293      	cmp	r3, r2
900031dc:	d824      	bhi.n	90003228 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x98>
        return false;
900031de:	2300      	movs	r3, #0
    }
900031e0:	4628      	mov	r0, r5
            stream.doDecodeNextFrame = decodeForNextTick(stream);
900031e2:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
    }
900031e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                widget.invalidate();
900031ea:	6813      	ldr	r3, [r2, #0]
900031ec:	4610      	mov	r0, r2
                MJPEGDecoder* const decoder = mjpegDecoders[handle];
900031ee:	6866      	ldr	r6, [r4, #4]
                widget.invalidate();
900031f0:	695b      	ldr	r3, [r3, #20]
900031f2:	4798      	blx	r3
                if (stream.seek_to_frame > 0)
900031f4:	69e1      	ldr	r1, [r4, #28]
900031f6:	bb21      	cbnz	r1, 90003242 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xb2>
                    if (stream.skip_frames > 0)
900031f8:	6a23      	ldr	r3, [r4, #32]
900031fa:	2b00      	cmp	r3, #0
900031fc:	d142      	bne.n	90003284 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xf4>
900031fe:	4f36      	ldr	r7, [pc, #216]	@ (900032d8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
                    if (stream.repeat)
90003200:	f894 5027 	ldrb.w	r5, [r4, #39]	@ 0x27
                        hasMoreFrames = decoder->gotoNextFrame();
90003204:	6833      	ldr	r3, [r6, #0]
                    if (stream.repeat)
90003206:	2d00      	cmp	r5, #0
90003208:	d02c      	beq.n	90003264 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xd4>
                        hasMoreFrames = decoder->gotoNextFrame();
9000320a:	699b      	ldr	r3, [r3, #24]
9000320c:	4630      	mov	r0, r6
9000320e:	4798      	blx	r3
90003210:	4605      	mov	r5, r0
                stream.frameNumber = decoder->getCurrentFrameNumber();
90003212:	6833      	ldr	r3, [r6, #0]
90003214:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90003216:	42bb      	cmp	r3, r7
90003218:	d145      	bne.n	900032a6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x116>
        return frameNumber;
9000321a:	6970      	ldr	r0, [r6, #20]
                stream.frameCount++;
9000321c:	68a2      	ldr	r2, [r4, #8]
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
9000321e:	6923      	ldr	r3, [r4, #16]
                stream.frameCount++;
90003220:	3201      	adds	r2, #1
                stream.frameNumber = decoder->getCurrentFrameNumber();
90003222:	60e0      	str	r0, [r4, #12]
                stream.frameCount++;
90003224:	60a2      	str	r2, [r4, #8]
90003226:	e7d2      	b.n	900031ce <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x3e>
            if (allowSkipFrames)
90003228:	f894 002c 	ldrb.w	r0, [r4, #44]	@ 0x2c
9000322c:	b138      	cbz	r0, 9000323e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xae>
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
9000322e:	1a9b      	subs	r3, r3, r2
90003230:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
90003234:	4299      	cmp	r1, r3
                    stream.skip_frames--;
90003236:	bf98      	it	ls
90003238:	f102 32ff 	addls.w	r2, r2, #4294967295
9000323c:	6222      	str	r2, [r4, #32]
            return true;
9000323e:	2301      	movs	r3, #1
90003240:	e7ce      	b.n	900031e0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x50>
                    decoder->gotoFrame(stream.seek_to_frame);
90003242:	6833      	ldr	r3, [r6, #0]
90003244:	4630      	mov	r0, r6
90003246:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90003248:	4798      	blx	r3
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
9000324a:	6833      	ldr	r3, [r6, #0]
9000324c:	69e5      	ldr	r5, [r4, #28]
9000324e:	4630      	mov	r0, r6
90003250:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003252:	4798      	blx	r3
90003254:	4285      	cmp	r5, r0
                    stream.seek_to_frame = 0;
90003256:	61e7      	str	r7, [r4, #28]
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
90003258:	bf28      	it	cs
9000325a:	2500      	movcs	r5, #0
9000325c:	4f1e      	ldr	r7, [pc, #120]	@ (900032d8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
9000325e:	bf38      	it	cc
90003260:	2501      	movcc	r5, #1
90003262:	e7d6      	b.n	90003212 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
90003264:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
90003266:	42ba      	cmp	r2, r7
90003268:	d124      	bne.n	900032b4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x124>
9000326a:	f8d6 8014 	ldr.w	r8, [r6, #20]
9000326e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003270:	4630      	mov	r0, r6
90003272:	4798      	blx	r3
90003274:	4580      	cmp	r8, r0
90003276:	d219      	bcs.n	900032ac <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x11c>
                            hasMoreFrames = decoder->gotoNextFrame();
90003278:	6833      	ldr	r3, [r6, #0]
9000327a:	4630      	mov	r0, r6
9000327c:	699b      	ldr	r3, [r3, #24]
9000327e:	4798      	blx	r3
90003280:	4605      	mov	r5, r0
90003282:	e7c6      	b.n	90003212 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                    decoder->gotoFrame(stream.seek_to_frame);
90003284:	6832      	ldr	r2, [r6, #0]
90003286:	4f14      	ldr	r7, [pc, #80]	@ (900032d8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
90003288:	e9d2 5209 	ldrd	r5, r2, [r2, #36]	@ 0x24
9000328c:	42ba      	cmp	r2, r7
9000328e:	d116      	bne.n	900032be <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12e>
90003290:	6970      	ldr	r0, [r6, #20]
90003292:	18c1      	adds	r1, r0, r3
90003294:	4630      	mov	r0, r6
90003296:	47a8      	blx	r5
                        stream.frameCount += stream.skip_frames;
90003298:	6a22      	ldr	r2, [r4, #32]
9000329a:	68a3      	ldr	r3, [r4, #8]
9000329c:	4413      	add	r3, r2
                        stream.skip_frames = 0;
9000329e:	2200      	movs	r2, #0
                        stream.frameCount += stream.skip_frames;
900032a0:	60a3      	str	r3, [r4, #8]
                        stream.skip_frames = 0;
900032a2:	6222      	str	r2, [r4, #32]
900032a4:	e7ac      	b.n	90003200 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x70>
                stream.frameNumber = decoder->getCurrentFrameNumber();
900032a6:	4630      	mov	r0, r6
900032a8:	4798      	blx	r3
900032aa:	e7b7      	b.n	9000321c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x8c>
                            stream.isPlaying = false;
900032ac:	2300      	movs	r3, #0
900032ae:	f884 3025 	strb.w	r3, [r4, #37]	@ 0x25
900032b2:	e7ae      	b.n	90003212 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
900032b4:	4630      	mov	r0, r6
900032b6:	4790      	blx	r2
900032b8:	6833      	ldr	r3, [r6, #0]
900032ba:	4680      	mov	r8, r0
900032bc:	e7d7      	b.n	9000326e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xde>
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
900032be:	4630      	mov	r0, r6
900032c0:	4790      	blx	r2
900032c2:	6a23      	ldr	r3, [r4, #32]
900032c4:	e7e5      	b.n	90003292 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x102>
        assert(handle < no_streams);
900032c6:	4b05      	ldr	r3, [pc, #20]	@ (900032dc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14c>)
900032c8:	21aa      	movs	r1, #170	@ 0xaa
900032ca:	4a05      	ldr	r2, [pc, #20]	@ (900032e0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x150>)
900032cc:	4805      	ldr	r0, [pc, #20]	@ (900032e4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x154>)
900032ce:	f02a f86b 	bl	9002d3a8 <__assert_func>
900032d2:	bf00      	nop
900032d4:	24021c0c 	.word	0x24021c0c
900032d8:	90000ffd 	.word	0x90000ffd
900032dc:	9002ec54 	.word	0x9002ec54
900032e0:	9002f430 	.word	0x9002f430
900032e4:	9002ed84 	.word	0x9002ed84

900032e8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
900032e8:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
900032ea:	bb11      	cbnz	r1, 90003332 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x4a>
900032ec:	4604      	mov	r4, r0
        mjpegDecoders[handle]->setVideoData(movie, length);
900032ee:	6840      	ldr	r0, [r0, #4]
900032f0:	4611      	mov	r1, r2
900032f2:	461a      	mov	r2, r3
900032f4:	6803      	ldr	r3, [r0, #0]
900032f6:	689b      	ldr	r3, [r3, #8]
900032f8:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
900032fa:	6860      	ldr	r0, [r4, #4]
900032fc:	4a10      	ldr	r2, [pc, #64]	@ (90003340 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x58>)
900032fe:	6803      	ldr	r3, [r0, #0]
90003300:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90003302:	4293      	cmp	r3, r2
90003304:	d10c      	bne.n	90003320 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x38>
90003306:	6940      	ldr	r0, [r0, #20]
        setCommand(handle, PAUSE, 0);
90003308:	6821      	ldr	r1, [r4, #0]
        stream.doDecodeNextFrame = false;
9000330a:	2300      	movs	r3, #0
9000330c:	4a0d      	ldr	r2, [pc, #52]	@ (90003344 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x5c>)
        setCommand(handle, PAUSE, 0);
9000330e:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003310:	60e0      	str	r0, [r4, #12]
90003312:	4295      	cmp	r5, r2
        stream.doDecodeNextFrame = false;
90003314:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
90003318:	d104      	bne.n	90003324 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x3c>
            stream.isPlaying = false;
9000331a:	f8a4 3025 	strh.w	r3, [r4, #37]	@ 0x25
    }
9000331e:	bd70      	pop	{r4, r5, r6, pc}
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003320:	4798      	blx	r3
90003322:	e7f1      	b.n	90003308 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x20>
        setCommand(handle, PAUSE, 0);
90003324:	4620      	mov	r0, r4
90003326:	46ac      	mov	ip, r5
90003328:	2201      	movs	r2, #1
9000332a:	4619      	mov	r1, r3
    }
9000332c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
90003330:	4760      	bx	ip
        assert(handle < no_streams);
90003332:	4b05      	ldr	r3, [pc, #20]	@ (90003348 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x60>)
90003334:	214f      	movs	r1, #79	@ 0x4f
90003336:	4a05      	ldr	r2, [pc, #20]	@ (9000334c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x64>)
90003338:	4805      	ldr	r0, [pc, #20]	@ (90003350 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x68>)
9000333a:	f02a f835 	bl	9002d3a8 <__assert_func>
9000333e:	bf00      	nop
90003340:	90000ffd 	.word	0x90000ffd
90003344:	900033bd 	.word	0x900033bd
90003348:	9002ec54 	.word	0x9002ec54
9000334c:	9002f564 	.word	0x9002f564
90003350:	9002ed84 	.word	0x9002ed84

90003354 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
    virtual void setVideoData(const Handle handle, touchgfx::VideoDataReader& reader)
90003354:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
90003356:	bb09      	cbnz	r1, 9000339c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x48>
90003358:	4604      	mov	r4, r0
        mjpegDecoders[handle]->setVideoData(reader);
9000335a:	6840      	ldr	r0, [r0, #4]
9000335c:	4611      	mov	r1, r2
9000335e:	6803      	ldr	r3, [r0, #0]
90003360:	68db      	ldr	r3, [r3, #12]
90003362:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003364:	6860      	ldr	r0, [r4, #4]
90003366:	4a10      	ldr	r2, [pc, #64]	@ (900033a8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x54>)
90003368:	6803      	ldr	r3, [r0, #0]
9000336a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000336c:	4293      	cmp	r3, r2
9000336e:	d10c      	bne.n	9000338a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x36>
90003370:	6940      	ldr	r0, [r0, #20]
        setCommand(handle, PAUSE, 0);
90003372:	6821      	ldr	r1, [r4, #0]
        stream.doDecodeNextFrame = false;
90003374:	2300      	movs	r3, #0
90003376:	4a0d      	ldr	r2, [pc, #52]	@ (900033ac <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x58>)
        setCommand(handle, PAUSE, 0);
90003378:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
9000337a:	60e0      	str	r0, [r4, #12]
9000337c:	4295      	cmp	r5, r2
        stream.doDecodeNextFrame = false;
9000337e:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
90003382:	d104      	bne.n	9000338e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x3a>
            stream.isPlaying = false;
90003384:	f8a4 3025 	strh.w	r3, [r4, #37]	@ 0x25
    }
90003388:	bd70      	pop	{r4, r5, r6, pc}
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
9000338a:	4798      	blx	r3
9000338c:	e7f1      	b.n	90003372 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x1e>
        setCommand(handle, PAUSE, 0);
9000338e:	4620      	mov	r0, r4
90003390:	46ac      	mov	ip, r5
90003392:	2201      	movs	r2, #1
90003394:	4619      	mov	r1, r3
    }
90003396:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
9000339a:	4760      	bx	ip
        assert(handle < no_streams);
9000339c:	4b04      	ldr	r3, [pc, #16]	@ (900033b0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x5c>)
9000339e:	215f      	movs	r1, #95	@ 0x5f
900033a0:	4a04      	ldr	r2, [pc, #16]	@ (900033b4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x60>)
900033a2:	4805      	ldr	r0, [pc, #20]	@ (900033b8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x64>)
900033a4:	f02a f800 	bl	9002d3a8 <__assert_func>
900033a8:	90000ffd 	.word	0x90000ffd
900033ac:	900033bd 	.word	0x900033bd
900033b0:	9002ec54 	.word	0x9002ec54
900033b4:	9002f6d0 	.word	0x9002f6d0
900033b8:	9002ed84 	.word	0x9002ed84

900033bc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
900033bc:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
900033be:	2900      	cmp	r1, #0
900033c0:	d14f      	bne.n	90003462 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xa6>
900033c2:	4604      	mov	r4, r0
        switch (cmd)
900033c4:	2a05      	cmp	r2, #5
900033c6:	d80b      	bhi.n	900033e0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
900033c8:	e8df f002 	tbb	[pc, r2]
900033cc:	3c373311 	.word	0x3c373311
900033d0:	0b03      	.short	0x0b03
            stream.isPlaying = false;
900033d2:	2300      	movs	r3, #0
            stream.seek_to_frame = 1;
900033d4:	2201      	movs	r2, #1
            stream.isPlaying = false;
900033d6:	f8a0 3025 	strh.w	r3, [r0, #37]	@ 0x25
            stream.seek_to_frame = 1;
900033da:	61c2      	str	r2, [r0, #28]
            stream.frameCount = 0;
900033dc:	6083      	str	r3, [r0, #8]
            stream.tickCount = 0;
900033de:	6103      	str	r3, [r0, #16]
    }
900033e0:	bd70      	pop	{r4, r5, r6, pc}
            stream.repeat = (param > 0);
900033e2:	3b00      	subs	r3, #0
900033e4:	bf18      	it	ne
900033e6:	2301      	movne	r3, #1
900033e8:	f880 3027 	strb.w	r3, [r0, #39]	@ 0x27
    }
900033ec:	bd70      	pop	{r4, r5, r6, pc}
            if (mjpegDecoders[handle]->hasVideo())
900033ee:	6840      	ldr	r0, [r0, #4]
900033f0:	6803      	ldr	r3, [r0, #0]
900033f2:	691b      	ldr	r3, [r3, #16]
900033f4:	4798      	blx	r3
900033f6:	2800      	cmp	r0, #0
900033f8:	d0f2      	beq.n	900033e0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
                stream.frameCount = 0;
900033fa:	2300      	movs	r3, #0
                stream.isPlaying = true;
900033fc:	2101      	movs	r1, #1
                if (!stream.repeat)
900033fe:	f894 2027 	ldrb.w	r2, [r4, #39]	@ 0x27
                stream.isPlaying = true;
90003402:	f8a4 1025 	strh.w	r1, [r4, #37]	@ 0x25
                stream.frameCount = 0;
90003406:	60a3      	str	r3, [r4, #8]
                stream.tickCount = 0;
90003408:	6123      	str	r3, [r4, #16]
                if (!stream.repeat)
9000340a:	2a00      	cmp	r2, #0
9000340c:	d1e8      	bne.n	900033e0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
9000340e:	6864      	ldr	r4, [r4, #4]
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
90003410:	4917      	ldr	r1, [pc, #92]	@ (90003470 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xb4>)
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
90003412:	6823      	ldr	r3, [r4, #0]
90003414:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
90003416:	428a      	cmp	r2, r1
90003418:	d11e      	bne.n	90003458 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x9c>
9000341a:	6965      	ldr	r5, [r4, #20]
9000341c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000341e:	4620      	mov	r0, r4
90003420:	4798      	blx	r3
90003422:	4285      	cmp	r5, r0
90003424:	d1dc      	bne.n	900033e0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
                        decoder->gotoNextFrame();
90003426:	6823      	ldr	r3, [r4, #0]
90003428:	4620      	mov	r0, r4
9000342a:	699b      	ldr	r3, [r3, #24]
    }
9000342c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                        decoder->gotoNextFrame();
90003430:	4718      	bx	r3
            stream.isPlaying = false;
90003432:	2300      	movs	r3, #0
90003434:	f8a0 3025 	strh.w	r3, [r0, #37]	@ 0x25
    }
90003438:	bd70      	pop	{r4, r5, r6, pc}
            stream.frameCount = 0;
9000343a:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
9000343c:	61c3      	str	r3, [r0, #28]
            stream.frameCount = 0;
9000343e:	6082      	str	r2, [r0, #8]
            stream.tickCount = 0;
90003440:	6102      	str	r2, [r0, #16]
    }
90003442:	bd70      	pop	{r4, r5, r6, pc}
            stream.isShowingOneFrame = true;
90003444:	2101      	movs	r1, #1
            stream.frameCount = 0;
90003446:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
90003448:	61c3      	str	r3, [r0, #28]
            stream.isShowingOneFrame = true;
9000344a:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
            stream.doDecodeNextFrame = true;
9000344e:	f880 1028 	strb.w	r1, [r0, #40]	@ 0x28
            stream.frameCount = 0;
90003452:	6082      	str	r2, [r0, #8]
            stream.tickCount = 0;
90003454:	6102      	str	r2, [r0, #16]
    }
90003456:	bd70      	pop	{r4, r5, r6, pc}
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
90003458:	4620      	mov	r0, r4
9000345a:	4790      	blx	r2
9000345c:	6823      	ldr	r3, [r4, #0]
9000345e:	4605      	mov	r5, r0
90003460:	e7dc      	b.n	9000341c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x60>
        assert(handle < no_streams);
90003462:	4b04      	ldr	r3, [pc, #16]	@ (90003474 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xb8>)
90003464:	216f      	movs	r1, #111	@ 0x6f
90003466:	4a04      	ldr	r2, [pc, #16]	@ (90003478 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xbc>)
90003468:	4804      	ldr	r0, [pc, #16]	@ (9000347c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xc0>)
9000346a:	f029 ff9d 	bl	9002d3a8 <__assert_func>
9000346e:	bf00      	nop
90003470:	90000ffd 	.word	0x90000ffd
90003474:	9002ec54 	.word	0x9002ec54
90003478:	9002f808 	.word	0x9002f808
9000347c:	9002ed84 	.word	0x9002ed84

90003480 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
90003480:	b538      	push	{r3, r4, r5, lr}
90003482:	4604      	mov	r4, r0
    HAL::initialize();
90003484:	f00f fae7 	bl	90012a56 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
90003488:	6823      	ldr	r3, [r4, #0]
9000348a:	6e9d      	ldr	r5, [r3, #104]	@ 0x68
9000348c:	f015 fe28 	bl	900190e0 <_ZN8touchgfx11Application11getInstanceEv>
90003490:	4601      	mov	r1, r0
90003492:	4620      	mov	r0, r4
90003494:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
90003496:	6823      	ldr	r3, [r4, #0]
90003498:	4a13      	ldr	r2, [pc, #76]	@ (900034e8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x68>)
9000349a:	f8d3 508c 	ldr.w	r5, [r3, #140]	@ 0x8c
9000349e:	4295      	cmp	r5, r2
900034a0:	d116      	bne.n	900034d0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x50>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
900034a2:	4a12      	ldr	r2, [pc, #72]	@ (900034ec <_ZN20TouchGFXGeneratedHAL10initializeEv+0x6c>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900034a4:	2501      	movs	r5, #1
        setAnimationStorage(animationStorage);
900034a6:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
900034aa:	f502 317f 	add.w	r1, r2, #261120	@ 0x3fc00
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900034ae:	4810      	ldr	r0, [pc, #64]	@ (900034f0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x70>)
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
900034b0:	e9c4 210f 	strd	r2, r1, [r4, #60]	@ 0x3c
        setAnimationStorage(animationStorage);
900034b4:	4a0f      	ldr	r2, [pc, #60]	@ (900034f4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x74>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900034b6:	7005      	strb	r5, [r0, #0]
900034b8:	4293      	cmp	r3, r2
900034ba:	d110      	bne.n	900034de <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5e>
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900034bc:	2300      	movs	r3, #0
        USE_ANIMATION_STORAGE = animationStorage != 0;
900034be:	4a0e      	ldr	r2, [pc, #56]	@ (900034f8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x78>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900034c0:	6463      	str	r3, [r4, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
900034c2:	7013      	strb	r3, [r2, #0]
    void addDMA(touchgfx::DMA_Interface& dma)
    {
        this->dma = &dma;
900034c4:	4b0d      	ldr	r3, [pc, #52]	@ (900034fc <_ZN20TouchGFXGeneratedHAL10initializeEv+0x7c>)
900034c6:	6861      	ldr	r1, [r4, #4]
        mjpegDecoders[index] = &decoder;
900034c8:	4a0d      	ldr	r2, [pc, #52]	@ (90003500 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x80>)
900034ca:	6459      	str	r1, [r3, #68]	@ 0x44
900034cc:	6053      	str	r3, [r2, #4]
}
900034ce:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
900034d0:	4a0c      	ldr	r2, [pc, #48]	@ (90003504 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x84>)
900034d2:	2300      	movs	r3, #0
900034d4:	4620      	mov	r0, r4
900034d6:	f5a2 317f 	sub.w	r1, r2, #261120	@ 0x3fc00
900034da:	47a8      	blx	r5
900034dc:	e7f2      	b.n	900034c4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
        setAnimationStorage(animationStorage);
900034de:	2100      	movs	r1, #0
900034e0:	4620      	mov	r0, r4
900034e2:	4798      	blx	r3
900034e4:	e7ee      	b.n	900034c4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
900034e6:	bf00      	nop
900034e8:	90000f21 	.word	0x90000f21
900034ec:	d003fc00 	.word	0xd003fc00
900034f0:	24021c0a 	.word	0x24021c0a
900034f4:	90000d51 	.word	0x90000d51
900034f8:	24021c0b 	.word	0x24021c0b
900034fc:	24007658 	.word	0x24007658
90003500:	24007628 	.word	0x24007628
90003504:	d007f800 	.word	0xd007f800

90003508 <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
    static CWRVectorRendererRGB565 renderer;
90003508:	4843      	ldr	r0, [pc, #268]	@ (90003618 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
{
9000350a:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
9000350c:	6804      	ldr	r4, [r0, #0]
9000350e:	f3bf 8f5b 	dmb	ish
90003512:	f014 0401 	ands.w	r4, r4, #1
90003516:	d001      	beq.n	9000351c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x14>
}
90003518:	4840      	ldr	r0, [pc, #256]	@ (9000361c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x114>)
9000351a:	bd70      	pop	{r4, r5, r6, pc}
    static CWRVectorRendererRGB565 renderer;
9000351c:	f029 fbd0 	bl	9002ccc0 <__cxa_guard_acquire>
90003520:	2800      	cmp	r0, #0
90003522:	d0f9      	beq.n	90003518 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x10>
class CWRVectorRenderer : public VectorRenderer
90003524:	4d3d      	ldr	r5, [pc, #244]	@ (9000361c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x114>)
90003526:	4b3e      	ldr	r3, [pc, #248]	@ (90003620 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x118>)
90003528:	f105 0034 	add.w	r0, r5, #52	@ 0x34
9000352c:	612c      	str	r4, [r5, #16]
9000352e:	f8c5 4026 	str.w	r4, [r5, #38]	@ 0x26
90003532:	f8c5 402a 	str.w	r4, [r5, #42]	@ 0x2a
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90003536:	4e3b      	ldr	r6, [pc, #236]	@ (90003624 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x11c>)
90003538:	e9c5 3400 	strd	r3, r4, [r5]
9000353c:	e9c5 4402 	strd	r4, r4, [r5, #8]
90003540:	f017 fb49 	bl	9001abd6 <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
90003544:	f105 0058 	add.w	r0, r5, #88	@ 0x58
90003548:	f011 fe32 	bl	900151b0 <_ZN8touchgfx12CanvasWidgetC1Ev>
class CWRVectorRendererRGB565 : public CWRVectorRenderer
9000354c:	4b36      	ldr	r3, [pc, #216]	@ (90003628 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x120>)
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
        : AbstractPainter()
9000354e:	4a37      	ldr	r2, [pc, #220]	@ (9000362c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x124>)
90003550:	602b      	str	r3, [r5, #0]
90003552:	6833      	ldr	r3, [r6, #0]
    class CanvasWidgetProxy : public CanvasWidget
90003554:	4936      	ldr	r1, [pc, #216]	@ (90003630 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x128>)
90003556:	f8c5 2084 	str.w	r2, [r5, #132]	@ 0x84
9000355a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
        : widgetWidth(0)
9000355e:	f8a5 4088 	strh.w	r4, [r5, #136]	@ 0x88
90003562:	65a9      	str	r1, [r5, #88]	@ 0x58
90003564:	b192      	cbz	r2, 9000358c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x84>
90003566:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90003568:	2800      	cmp	r0, #0
9000356a:	d040      	beq.n	900035ee <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xe6>
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
9000356c:	6803      	ldr	r3, [r0, #0]
9000356e:	4c31      	ldr	r4, [pc, #196]	@ (90003634 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x12c>)
90003570:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
90003572:	42a2      	cmp	r2, r4
90003574:	d017      	beq.n	900035a6 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
90003576:	4790      	blx	r2
        return auxiliaryLCD;
90003578:	6833      	ldr	r3, [r6, #0]
9000357a:	fab0 f680 	clz	r6, r0
9000357e:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90003580:	0976      	lsrs	r6, r6, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
90003582:	2800      	cmp	r0, #0
90003584:	d03f      	beq.n	90003606 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xfe>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90003586:	6803      	ldr	r3, [r0, #0]
90003588:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000358a:	e00a      	b.n	900035a2 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9a>
        return instance->lcdRef;
9000358c:	6898      	ldr	r0, [r3, #8]
9000358e:	4c29      	ldr	r4, [pc, #164]	@ (90003634 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x12c>)
        bool compat = HAL::lcd().framebufferFormat() == format;
90003590:	6802      	ldr	r2, [r0, #0]
90003592:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
90003594:	42a2      	cmp	r2, r4
90003596:	d1ee      	bne.n	90003576 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x6e>
        return auxiliaryLCD;
90003598:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
9000359a:	b120      	cbz	r0, 900035a6 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
        bool compat = HAL::lcd().framebufferFormat() == format;
9000359c:	6803      	ldr	r3, [r0, #0]
9000359e:	2601      	movs	r6, #1
900035a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900035a2:	42a3      	cmp	r3, r4
900035a4:	d12a      	bne.n	900035fc <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xf4>
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
900035a6:	4924      	ldr	r1, [pc, #144]	@ (90003638 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x130>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
900035a8:	2200      	movs	r2, #0
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
900035aa:	2300      	movs	r3, #0
900035ac:	f44f 04c8 	mov.w	r4, #6553600	@ 0x640000
900035b0:	f101 0024 	add.w	r0, r1, #36	@ 0x24
        : AbstractPainter(),
900035b4:	f8c5 209c 	str.w	r2, [r5, #156]	@ 0x9c
900035b8:	f8c5 1084 	str.w	r1, [r5, #132]	@ 0x84
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
900035bc:	f8c5 30ac 	str.w	r3, [r5, #172]	@ 0xac
900035c0:	f8c5 30b0 	str.w	r3, [r5, #176]	@ 0xb0
900035c4:	f8c5 30b4 	str.w	r3, [r5, #180]	@ 0xb4
900035c8:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
900035cc:	f8c5 40a0 	str.w	r4, [r5, #160]	@ 0xa0
900035d0:	e9c5 0223 	strd	r0, r2, [r5, #140]	@ 0x8c
        : AbstractPainter(),
900035d4:	e9c5 2229 	strd	r2, r2, [r5, #164]	@ 0xa4
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
900035d8:	4a18      	ldr	r2, [pc, #96]	@ (9000363c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x134>)
900035da:	4819      	ldr	r0, [pc, #100]	@ (90003640 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x138>)
900035dc:	f8c5 2098 	str.w	r2, [r5, #152]	@ 0x98
900035e0:	f029 ff00 	bl	9002d3e4 <atexit>
900035e4:	480c      	ldr	r0, [pc, #48]	@ (90003618 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
900035e6:	f029 fb77 	bl	9002ccd8 <__cxa_guard_release>
}
900035ea:	480c      	ldr	r0, [pc, #48]	@ (9000361c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x114>)
900035ec:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
900035ee:	6898      	ldr	r0, [r3, #8]
900035f0:	4c10      	ldr	r4, [pc, #64]	@ (90003634 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x12c>)
        bool compat = HAL::lcd().framebufferFormat() == format;
900035f2:	6803      	ldr	r3, [r0, #0]
900035f4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
900035f6:	42a2      	cmp	r2, r4
900035f8:	d0d5      	beq.n	900035a6 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
900035fa:	e7bc      	b.n	90003576 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x6e>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900035fc:	4798      	blx	r3
900035fe:	2800      	cmp	r0, #0
90003600:	bf08      	it	eq
90003602:	f046 0601 	orreq.w	r6, r6, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
90003606:	2e00      	cmp	r6, #0
90003608:	d1cd      	bne.n	900035a6 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
9000360a:	4b0e      	ldr	r3, [pc, #56]	@ (90003644 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x13c>)
9000360c:	212c      	movs	r1, #44	@ 0x2c
9000360e:	4a0e      	ldr	r2, [pc, #56]	@ (90003648 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x140>)
90003610:	480e      	ldr	r0, [pc, #56]	@ (9000364c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x144>)
90003612:	f029 fec9 	bl	9002d3a8 <__assert_func>
90003616:	bf00      	nop
90003618:	24007568 	.word	0x24007568
9000361c:	2400756c 	.word	0x2400756c
90003620:	90031a24 	.word	0x90031a24
90003624:	24021c0c 	.word	0x24021c0c
90003628:	900305ec 	.word	0x900305ec
9000362c:	90030554 	.word	0x90030554
90003630:	90030574 	.word	0x90030574
90003634:	90002eb1 	.word	0x90002eb1
90003638:	900319d8 	.word	0x900319d8
9000363c:	900319b8 	.word	0x900319b8
90003640:	90002ee9 	.word	0x90002ee9
90003644:	9002f96c 	.word	0x9002f96c
90003648:	9002f9cc 	.word	0x9002f9cc
9000364c:	9002fa08 	.word	0x9002fa08

90003650 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
90003650:	b538      	push	{r3, r4, r5, lr}
        return instance;
90003652:	4c18      	ldr	r4, [pc, #96]	@ (900036b4 <HAL_LTDC_LineEventCallback+0x64>)
        if (!HAL::getInstance())
90003654:	6823      	ldr	r3, [r4, #0]
90003656:	b35b      	cbz	r3, 900036b0 <HAL_LTDC_LineEventCallback+0x60>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
90003658:	4b17      	ldr	r3, [pc, #92]	@ (900036b8 <HAL_LTDC_LineEventCallback+0x68>)
9000365a:	4a18      	ldr	r2, [pc, #96]	@ (900036bc <HAL_LTDC_LineEventCallback+0x6c>)
9000365c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
9000365e:	8811      	ldrh	r1, [r2, #0]
90003660:	428b      	cmp	r3, r1
90003662:	d00e      	beq.n	90003682 <HAL_LTDC_LineEventCallback+0x32>
            GPIO::set(GPIO::VSYNC_FREQ);
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
90003664:	f008 f8d2 	bl	9000b80c <HAL_LTDC_ProgramLineEvent>
90003668:	6824      	ldr	r4, [r4, #0]
        allowDMATransfers();
9000366a:	6823      	ldr	r3, [r4, #0]
9000366c:	4620      	mov	r0, r4
9000366e:	6a1b      	ldr	r3, [r3, #32]
90003670:	4798      	blx	r3
        isFrontPorchEntered = true;
90003672:	2301      	movs	r3, #1

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
90003674:	2000      	movs	r0, #0
90003676:	f884 307c 	strb.w	r3, [r4, #124]	@ 0x7c
        }
    }
9000367a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
9000367e:	f7fd bb2f 	b.w	90000ce0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
90003682:	4b0f      	ldr	r3, [pc, #60]	@ (900036c0 <HAL_LTDC_LineEventCallback+0x70>)
        isFrontPorchEntered = false;
90003684:	2500      	movs	r5, #0
90003686:	8819      	ldrh	r1, [r3, #0]
90003688:	f008 f8c0 	bl	9000b80c <HAL_LTDC_ProgramLineEvent>
        return instance;
9000368c:	6823      	ldr	r3, [r4, #0]
        vSyncCnt++;
9000368e:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
90003692:	f883 507c 	strb.w	r5, [r3, #124]	@ 0x7c
        vSyncCnt++;
90003696:	3201      	adds	r2, #1
90003698:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
            OSWrappers::signalVSync();
9000369c:	f7fe fe5e 	bl	9000235c <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            HAL::getInstance()->swapFrameBuffers();
900036a0:	6820      	ldr	r0, [r4, #0]
900036a2:	f00f ff6f 	bl	90013584 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
900036a6:	4628      	mov	r0, r5
    }
900036a8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
900036ac:	f7fd bafc 	b.w	90000ca8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
    }
900036b0:	bd38      	pop	{r3, r4, r5, pc}
900036b2:	bf00      	nop
900036b4:	24021c0c 	.word	0x24021c0c
900036b8:	50001000 	.word	0x50001000
900036bc:	24007566 	.word	0x24007566
900036c0:	24007564 	.word	0x24007564

900036c4 <_GLOBAL__sub_I_mjpegdecoder1>:
}
900036c4:	b510      	push	{r4, lr}
HardwareMJPEGDecoder mjpegdecoder1;
900036c6:	480b      	ldr	r0, [pc, #44]	@ (900036f4 <_GLOBAL__sub_I_mjpegdecoder1+0x30>)
900036c8:	f7fd fe0e 	bl	900012e8 <_ZN20HardwareMJPEGDecoderC1Ev>
        : VideoController(), allowSkipFrames(true)
900036cc:	4c0a      	ldr	r4, [pc, #40]	@ (900036f8 <_GLOBAL__sub_I_mjpegdecoder1+0x34>)
900036ce:	4b0b      	ldr	r3, [pc, #44]	@ (900036fc <_GLOBAL__sub_I_mjpegdecoder1+0x38>)
            : frameCount(0), frameNumber(0), tickCount(0),
900036d0:	2200      	movs	r2, #0
              isActive(false), isPlaying(false), isShowingOneFrame(false), repeat(true),
900036d2:	f04f 7080 	mov.w	r0, #16777216	@ 0x1000000
        : VideoController(), allowSkipFrames(true)
900036d6:	2101      	movs	r1, #1
900036d8:	601c      	str	r4, [r3, #0]
              isActive(false), isPlaying(false), isShowingOneFrame(false), repeat(true),
900036da:	6258      	str	r0, [r3, #36]	@ 0x24
              doDecodeNextFrame(false)
900036dc:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
        : VideoController(), allowSkipFrames(true)
900036e0:	f883 102c 	strb.w	r1, [r3, #44]	@ 0x2c
        memset(mjpegDecoders, 0, sizeof(mjpegDecoders));
900036e4:	605a      	str	r2, [r3, #4]
            : frameCount(0), frameNumber(0), tickCount(0),
900036e6:	e9c3 2202 	strd	r2, r2, [r3, #8]
              frame_rate_video(0), frame_rate_ticks(0),
900036ea:	e9c3 2204 	strd	r2, r2, [r3, #16]
              seek_to_frame(0),
900036ee:	e9c3 2206 	strd	r2, r2, [r3, #24]
}
900036f2:	bd10      	pop	{r4, pc}
900036f4:	24007658 	.word	0x24007658
900036f8:	90030638 	.word	0x90030638
900036fc:	24007628 	.word	0x24007628

90003700 <UART_TX>:
/*
 * Function Description: Sends action passed to send_task_queue
 * Note: see UART_RX() for expected command order.
 *
 */
static void UART_TX(){
90003700:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90003704:	4c1a      	ldr	r4, [pc, #104]	@ (90003770 <UART_TX+0x70>)
90003706:	b083      	sub	sp, #12
90003708:	4f1a      	ldr	r7, [pc, #104]	@ (90003774 <UART_TX+0x74>)
	uart_comms_t tx_action;
	int wait_time = 1000;
	uint8_t byte;
	while(1){
		if(retry_last || osMessageQueueGet(send_task_queue, &tx_action, NULL, osKernelGetTickFreq()) == osOK){
9000370a:	2600      	movs	r6, #0
				retry_last = false;
				///////////////////////////////////////////////////////////////////////////////////////////
				byte = uart_byte_setup(tx_action);
				HAL_UART_Transmit_IT(&huart1, &byte,1);
9000370c:	4d1a      	ldr	r5, [pc, #104]	@ (90003778 <UART_TX+0x78>)
9000370e:	e01b      	b.n	90003748 <UART_TX+0x48>
				   ((command & 0x0F) << 3) |
90003710:	f89d 3006 	ldrb.w	r3, [sp, #6]
				HAL_UART_Transmit_IT(&huart1, &byte,1);
90003714:	2201      	movs	r2, #1
90003716:	f10d 0107 	add.w	r1, sp, #7
9000371a:	4628      	mov	r0, r5
				   ((command & 0x0F) << 3) |
9000371c:	00db      	lsls	r3, r3, #3
				retry_last = false;
9000371e:	7026      	strb	r6, [r4, #0]
				   ((command & 0x0F) << 3) |
90003720:	f003 0378 	and.w	r3, r3, #120	@ 0x78
90003724:	f063 0379 	orn	r3, r3, #121	@ 0x79
				byte = uart_byte_setup(tx_action);
90003728:	f88d 3007 	strb.w	r3, [sp, #7]
				HAL_UART_Transmit_IT(&huart1, &byte,1);
9000372c:	f00a fd6e 	bl	9000e20c <HAL_UART_Transmit_IT>
				///////////////////////////////////////////////////////////////////////////////////////////
				if (tx_action == TC_Reset_cmd ){
90003730:	f89d 3006 	ldrb.w	r3, [sp, #6]
					osDelay(pdMS_TO_TICKS(5000));
90003734:	f241 3088 	movw	r0, #5000	@ 0x1388
				if (tx_action == TC_Reset_cmd ){
90003738:	2b07      	cmp	r3, #7
9000373a:	d101      	bne.n	90003740 <UART_TX+0x40>
					osDelay(pdMS_TO_TICKS(5000));
9000373c:	f00c f872 	bl	9000f824 <osDelay>
				}
				osDelay(pdMS_TO_TICKS(wait_time));
90003740:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
90003744:	f00c f86e 	bl	9000f824 <osDelay>
		if(retry_last || osMessageQueueGet(send_task_queue, &tx_action, NULL, osKernelGetTickFreq()) == osOK){
90003748:	f894 8000 	ldrb.w	r8, [r4]
9000374c:	f1b8 0f00 	cmp.w	r8, #0
90003750:	d1de      	bne.n	90003710 <UART_TX+0x10>
90003752:	f8d7 9000 	ldr.w	r9, [r7]
90003756:	f00c f817 	bl	9000f788 <osKernelGetTickFreq>
9000375a:	4642      	mov	r2, r8
9000375c:	4603      	mov	r3, r0
9000375e:	f10d 0106 	add.w	r1, sp, #6
90003762:	4648      	mov	r0, r9
90003764:	f00c f996 	bl	9000fa94 <osMessageQueueGet>
90003768:	2800      	cmp	r0, #0
9000376a:	d0d1      	beq.n	90003710 <UART_TX+0x10>
9000376c:	e7ec      	b.n	90003748 <UART_TX+0x48>
9000376e:	bf00      	nop
90003770:	240076b5 	.word	0x240076b5
90003774:	240076b0 	.word	0x240076b0
90003778:	24007704 	.word	0x24007704

9000377c <UART_RX>:
 *
 * Below is the expected command order for the display(master) from the gateway(slave).
 * CMD order send  : start     , TC request, TC received, TC reset, start....
 * CMD oder receive: received, TC        ,            , received, received...
 */
static void UART_RX(){
9000377c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003780:	b083      	sub	sp, #12
90003782:	4d4e      	ldr	r5, [pc, #312]	@ (900038bc <UART_RX+0x140>)
	uint8_t byte;
	uart_comms_t rx_action;
	osStatus_t rx_Queue_Get;
	uint32_t ticks = osKernelGetTickFreq() * 4;
90003784:	f00c f800 	bl	9000f788 <osKernelGetTickFreq>
90003788:	4e4d      	ldr	r6, [pc, #308]	@ (900038c0 <UART_RX+0x144>)
9000378a:	0084      	lsls	r4, r0, #2
9000378c:	f8df 8150 	ldr.w	r8, [pc, #336]	@ 900038e0 <UART_RX+0x164>
90003790:	4f4c      	ldr	r7, [pc, #304]	@ (900038c4 <UART_RX+0x148>)
				break;
			}
		}else if (rx_Queue_Get == osErrorTimeout ){
			byte = start_cmd;
			if (osMessageQueuePut(send_task_queue, &byte, 0, osKernelGetTickFreq() / 5) == osOK) {
				HAL_UART_Receive_IT(&huart1,&rx_data, 1);
90003792:	f8df a150 	ldr.w	sl, [pc, #336]	@ 900038e4 <UART_RX+0x168>
		rx_Queue_Get = osMessageQueueGet(receive_task_queue, &rx_action, NULL,ticks);
90003796:	4623      	mov	r3, r4
90003798:	2200      	movs	r2, #0
9000379a:	f10d 0107 	add.w	r1, sp, #7
9000379e:	6828      	ldr	r0, [r5, #0]
900037a0:	f00c f978 	bl	9000fa94 <osMessageQueueGet>
		if(rx_Queue_Get == osOK){
900037a4:	b978      	cbnz	r0, 900037c6 <UART_RX+0x4a>
			if (!TC_code_rx){
900037a6:	7832      	ldrb	r2, [r6, #0]
900037a8:	bb52      	cbnz	r2, 90003800 <UART_RX+0x84>
				if (is_valid_frame(rx_data)){
900037aa:	f898 3000 	ldrb.w	r3, [r8]
	return ((byte >> 7) & uart_start_pad) && ((byte & 0x07) & uart_end_pad);
900037ae:	09d9      	lsrs	r1, r3, #7
900037b0:	d002      	beq.n	900037b8 <UART_RX+0x3c>
900037b2:	f013 0f06 	tst.w	r3, #6
900037b6:	d148      	bne.n	9000384a <UART_RX+0xce>
					rx_action = retry_cmd;
900037b8:	2303      	movs	r3, #3
900037ba:	f88d 3007 	strb.w	r3, [sp, #7]
				retry_last = true;
900037be:	2301      	movs	r3, #1
900037c0:	4a41      	ldr	r2, [pc, #260]	@ (900038c8 <UART_RX+0x14c>)
900037c2:	7013      	strb	r3, [r2, #0]
				break;
900037c4:	e7e7      	b.n	90003796 <UART_RX+0x1a>
		}else if (rx_Queue_Get == osErrorTimeout ){
900037c6:	3002      	adds	r0, #2
900037c8:	d1e5      	bne.n	90003796 <UART_RX+0x1a>
			byte = start_cmd;
900037ca:	f04f 0901 	mov.w	r9, #1
			if (osMessageQueuePut(send_task_queue, &byte, 0, osKernelGetTickFreq() / 5) == osOK) {
900037ce:	f8d7 b000 	ldr.w	fp, [r7]
			byte = start_cmd;
900037d2:	f88d 9006 	strb.w	r9, [sp, #6]
			if (osMessageQueuePut(send_task_queue, &byte, 0, osKernelGetTickFreq() / 5) == osOK) {
900037d6:	f00b ffd7 	bl	9000f788 <osKernelGetTickFreq>
900037da:	4a3c      	ldr	r2, [pc, #240]	@ (900038cc <UART_RX+0x150>)
900037dc:	4603      	mov	r3, r0
900037de:	f10d 0106 	add.w	r1, sp, #6
900037e2:	4658      	mov	r0, fp
900037e4:	fba2 2303 	umull	r2, r3, r2, r3
900037e8:	2200      	movs	r2, #0
900037ea:	089b      	lsrs	r3, r3, #2
900037ec:	f00c f916 	bl	9000fa1c <osMessageQueuePut>
900037f0:	2800      	cmp	r0, #0
900037f2:	d1d0      	bne.n	90003796 <UART_RX+0x1a>
				HAL_UART_Receive_IT(&huart1,&rx_data, 1);
900037f4:	464a      	mov	r2, r9
900037f6:	4641      	mov	r1, r8
900037f8:	4650      	mov	r0, sl
900037fa:	f00a fd63 	bl	9000e2c4 <HAL_UART_Receive_IT>
900037fe:	e7ca      	b.n	90003796 <UART_RX+0x1a>
				rx_action =TC_Receiving; // default condition of switch
90003800:	2306      	movs	r3, #6
90003802:	f88d 3007 	strb.w	r3, [sp, #7]
				if (isalpha(trouble_code[0]) && (trouble_code[0] == 'P' || trouble_code[0] == 'C' || trouble_code[0] == 'B' || trouble_code[0] == 'U')){
90003806:	4b32      	ldr	r3, [pc, #200]	@ (900038d0 <UART_RX+0x154>)
90003808:	4a32      	ldr	r2, [pc, #200]	@ (900038d4 <UART_RX+0x158>)
9000380a:	781b      	ldrb	r3, [r3, #0]
9000380c:	5cd2      	ldrb	r2, [r2, r3]
9000380e:	0792      	lsls	r2, r2, #30
90003810:	d03f      	beq.n	90003892 <UART_RX+0x116>
90003812:	3b42      	subs	r3, #66	@ 0x42
90003814:	b2db      	uxtb	r3, r3
90003816:	2b13      	cmp	r3, #19
90003818:	d83b      	bhi.n	90003892 <UART_RX+0x116>
9000381a:	4a2f      	ldr	r2, [pc, #188]	@ (900038d8 <UART_RX+0x15c>)
9000381c:	fa22 f303 	lsr.w	r3, r2, r3
90003820:	07db      	lsls	r3, r3, #31
90003822:	d536      	bpl.n	90003892 <UART_RX+0x116>
					osSemaphoreRelease(blink_sem);
90003824:	4b2d      	ldr	r3, [pc, #180]	@ (900038dc <UART_RX+0x160>)
90003826:	6818      	ldr	r0, [r3, #0]
90003828:	f00c f892 	bl	9000f950 <osSemaphoreRelease>
					TC_code_rx = false;
9000382c:	2300      	movs	r3, #0
					byte = TC_Received_cmd;
9000382e:	2205      	movs	r2, #5
					osMessageQueuePut(send_task_queue, &byte, 0, 0);
90003830:	f10d 0106 	add.w	r1, sp, #6
90003834:	6838      	ldr	r0, [r7, #0]
					byte = TC_Received_cmd;
90003836:	f88d 2006 	strb.w	r2, [sp, #6]
					osMessageQueuePut(send_task_queue, &byte, 0, 0);
9000383a:	461a      	mov	r2, r3
					TC_code_rx = false;
9000383c:	7033      	strb	r3, [r6, #0]
					osMessageQueuePut(send_task_queue, &byte, 0, 0);
9000383e:	f00c f8ed 	bl	9000fa1c <osMessageQueuePut>
					TC_GUI_Pass(trouble_code);
90003842:	4823      	ldr	r0, [pc, #140]	@ (900038d0 <UART_RX+0x154>)
90003844:	f7fd f978 	bl	90000b38 <TC_GUI_Pass>
90003848:	e7a5      	b.n	90003796 <UART_RX+0x1a>
					rx_action = ((rx_data>>3) & 0x0F); // Call back only to prevent overlapping receives or writes
9000384a:	f3c3 01c3 	ubfx	r1, r3, #3, #4
			switch (rx_action){
9000384e:	2902      	cmp	r1, #2
					rx_action = ((rx_data>>3) & 0x0F); // Call back only to prevent overlapping receives or writes
90003850:	f88d 1007 	strb.w	r1, [sp, #7]
			switch (rx_action){
90003854:	d007      	beq.n	90003866 <UART_RX+0xea>
90003856:	f013 0f70 	tst.w	r3, #112	@ 0x70
9000385a:	d09c      	beq.n	90003796 <UART_RX+0x1a>
9000385c:	2903      	cmp	r1, #3
9000385e:	d0ae      	beq.n	900037be <UART_RX+0x42>
90003860:	2906      	cmp	r1, #6
90003862:	d198      	bne.n	90003796 <UART_RX+0x1a>
90003864:	e7cf      	b.n	90003806 <UART_RX+0x8a>
				if (ticks == osWaitForever){
90003866:	3401      	adds	r4, #1
90003868:	d023      	beq.n	900038b2 <UART_RX+0x136>
					TC_code_rx = true;
9000386a:	2301      	movs	r3, #1
					osMessageQueuePut(send_task_queue, &byte, 0, osWaitForever);
9000386c:	f10d 0106 	add.w	r1, sp, #6
90003870:	6838      	ldr	r0, [r7, #0]
					ticks = osWaitForever;
90003872:	f04f 34ff 	mov.w	r4, #4294967295
					TC_code_rx = true;
90003876:	7033      	strb	r3, [r6, #0]
					byte = TC_Req_cmd;
90003878:	2304      	movs	r3, #4
9000387a:	f88d 3006 	strb.w	r3, [sp, #6]
					osMessageQueuePut(send_task_queue, &byte, 0, osWaitForever);
9000387e:	f04f 33ff 	mov.w	r3, #4294967295
90003882:	f00c f8cb 	bl	9000fa1c <osMessageQueuePut>
					HAL_UART_Receive_IT(&huart1,(uint8_t *)trouble_code,tc_size + 1);
90003886:	2206      	movs	r2, #6
90003888:	4911      	ldr	r1, [pc, #68]	@ (900038d0 <UART_RX+0x154>)
9000388a:	4650      	mov	r0, sl
9000388c:	f00a fd1a 	bl	9000e2c4 <HAL_UART_Receive_IT>
90003890:	e781      	b.n	90003796 <UART_RX+0x1a>
					osMessageQueuePut(send_task_queue, &byte, 0, 0);
90003892:	2300      	movs	r3, #0
					byte = TC_Req_cmd;
90003894:	2204      	movs	r2, #4
					osMessageQueuePut(send_task_queue, &byte, 0, 0);
90003896:	f10d 0106 	add.w	r1, sp, #6
9000389a:	6838      	ldr	r0, [r7, #0]
					byte = TC_Req_cmd;
9000389c:	f88d 2006 	strb.w	r2, [sp, #6]
					osMessageQueuePut(send_task_queue, &byte, 0, 0);
900038a0:	461a      	mov	r2, r3
900038a2:	f00c f8bb 	bl	9000fa1c <osMessageQueuePut>
					HAL_UART_Receive_IT(&huart1,(uint8_t *)trouble_code,tc_size + 1);
900038a6:	2206      	movs	r2, #6
900038a8:	4909      	ldr	r1, [pc, #36]	@ (900038d0 <UART_RX+0x154>)
900038aa:	4650      	mov	r0, sl
900038ac:	f00a fd0a 	bl	9000e2c4 <HAL_UART_Receive_IT>
900038b0:	e771      	b.n	90003796 <UART_RX+0x1a>
					ticks = osKernelGetTickFreq() * 4;
900038b2:	f00b ff69 	bl	9000f788 <osKernelGetTickFreq>
900038b6:	0084      	lsls	r4, r0, #2
900038b8:	e76d      	b.n	90003796 <UART_RX+0x1a>
900038ba:	bf00      	nop
900038bc:	240076ac 	.word	0x240076ac
900038c0:	240076b4 	.word	0x240076b4
900038c4:	240076b0 	.word	0x240076b0
900038c8:	240076b5 	.word	0x240076b5
900038cc:	cccccccd 	.word	0xcccccccd
900038d0:	240076b8 	.word	0x240076b8
900038d4:	900325f9 	.word	0x900325f9
900038d8:	00084003 	.word	0x00084003
900038dc:	240076c0 	.word	0x240076c0
900038e0:	240076b6 	.word	0x240076b6
900038e4:	24007704 	.word	0x24007704

900038e8 <init_error_check>:
	if (ptr == NULL){
900038e8:	b100      	cbz	r0, 900038ec <init_error_check+0x4>
}
900038ea:	4770      	bx	lr
		Error_Handler();
900038ec:	f000 b90e 	b.w	90003b0c <Error_Handler>

900038f0 <HAL_UART_TxCpltCallback>:
}
900038f0:	4770      	bx	lr
900038f2:	bf00      	nop

900038f4 <HAL_UART_RxCpltCallback>:
	if(huart->Instance == USART1){
900038f4:	4b05      	ldr	r3, [pc, #20]	@ (9000390c <HAL_UART_RxCpltCallback+0x18>)
900038f6:	6802      	ldr	r2, [r0, #0]
900038f8:	429a      	cmp	r2, r3
900038fa:	d000      	beq.n	900038fe <HAL_UART_RxCpltCallback+0xa>
}
900038fc:	4770      	bx	lr
		osMessageQueuePut(receive_task_queue,&rx_data, 0,0);
900038fe:	4804      	ldr	r0, [pc, #16]	@ (90003910 <HAL_UART_RxCpltCallback+0x1c>)
90003900:	2300      	movs	r3, #0
90003902:	4904      	ldr	r1, [pc, #16]	@ (90003914 <HAL_UART_RxCpltCallback+0x20>)
90003904:	461a      	mov	r2, r3
90003906:	6800      	ldr	r0, [r0, #0]
90003908:	f00c b888 	b.w	9000fa1c <osMessageQueuePut>
9000390c:	40011000 	.word	0x40011000
90003910:	240076ac 	.word	0x240076ac
90003914:	240076b6 	.word	0x240076b6

90003918 <HAL_UART_ErrorCallback>:
    if (huart->Instance == USART1) {
90003918:	4b11      	ldr	r3, [pc, #68]	@ (90003960 <HAL_UART_ErrorCallback+0x48>)
9000391a:	6802      	ldr	r2, [r0, #0]
9000391c:	429a      	cmp	r2, r3
9000391e:	d000      	beq.n	90003922 <HAL_UART_ErrorCallback+0xa>
90003920:	4770      	bx	lr
    	__HAL_UART_CLEAR_FLAG(&huart1, UART_CLEAR_PEF | UART_CLEAR_FEF | UART_CLEAR_OREF);
90003922:	4b10      	ldr	r3, [pc, #64]	@ (90003964 <HAL_UART_ErrorCallback+0x4c>)
90003924:	210b      	movs	r1, #11
void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart){
90003926:	b082      	sub	sp, #8
    	__HAL_UART_CLEAR_FLAG(&huart1, UART_CLEAR_PEF | UART_CLEAR_FEF | UART_CLEAR_OREF);
90003928:	681b      	ldr	r3, [r3, #0]
9000392a:	6219      	str	r1, [r3, #32]
		while (__HAL_UART_GET_FLAG(huart, UART_FLAG_RXNE)) {
9000392c:	69d3      	ldr	r3, [r2, #28]
9000392e:	0699      	lsls	r1, r3, #26
90003930:	d506      	bpl.n	90003940 <HAL_UART_ErrorCallback+0x28>
			dummy = huart->Instance->RDR;
90003932:	6a53      	ldr	r3, [r2, #36]	@ 0x24
90003934:	b2db      	uxtb	r3, r3
90003936:	f88d 3007 	strb.w	r3, [sp, #7]
		while (__HAL_UART_GET_FLAG(huart, UART_FLAG_RXNE)) {
9000393a:	69d3      	ldr	r3, [r2, #28]
9000393c:	069b      	lsls	r3, r3, #26
9000393e:	d4f8      	bmi.n	90003932 <HAL_UART_ErrorCallback+0x1a>
		if (TC_code_rx){
90003940:	4b09      	ldr	r3, [pc, #36]	@ (90003968 <HAL_UART_ErrorCallback+0x50>)
		retry_last = true;
90003942:	2201      	movs	r2, #1
90003944:	4909      	ldr	r1, [pc, #36]	@ (9000396c <HAL_UART_ErrorCallback+0x54>)
		if (TC_code_rx){
90003946:	781b      	ldrb	r3, [r3, #0]
		retry_last = true;
90003948:	700a      	strb	r2, [r1, #0]
		if (TC_code_rx){
9000394a:	b123      	cbz	r3, 90003956 <HAL_UART_ErrorCallback+0x3e>
			HAL_UART_Receive_IT(huart,(uint8_t *)trouble_code,tc_size + 1);
9000394c:	2206      	movs	r2, #6
9000394e:	4908      	ldr	r1, [pc, #32]	@ (90003970 <HAL_UART_ErrorCallback+0x58>)
}
90003950:	b002      	add	sp, #8
			HAL_UART_Receive_IT(huart,(uint8_t *)trouble_code,tc_size + 1);
90003952:	f00a bcb7 	b.w	9000e2c4 <HAL_UART_Receive_IT>
			HAL_UART_Receive_IT(huart, &rx_data, 1);
90003956:	4907      	ldr	r1, [pc, #28]	@ (90003974 <HAL_UART_ErrorCallback+0x5c>)
}
90003958:	b002      	add	sp, #8
			HAL_UART_Receive_IT(huart, &rx_data, 1);
9000395a:	f00a bcb3 	b.w	9000e2c4 <HAL_UART_Receive_IT>
9000395e:	bf00      	nop
90003960:	40011000 	.word	0x40011000
90003964:	24007704 	.word	0x24007704
90003968:	240076b4 	.word	0x240076b4
9000396c:	240076b5 	.word	0x240076b5
90003970:	240076b8 	.word	0x240076b8
90003974:	240076b6 	.word	0x240076b6

90003978 <UART_REST_TC>:
 * Function Description: Called by GUI to start reset TC procedure.
 *
 */
void UART_REST_TC(){
	uint8_t byte;
	memcpy(trouble_code,"XXXXX\0", sizeof(trouble_code));
90003978:	4a0f      	ldr	r2, [pc, #60]	@ (900039b8 <UART_REST_TC+0x40>)
9000397a:	4b10      	ldr	r3, [pc, #64]	@ (900039bc <UART_REST_TC+0x44>)
9000397c:	e892 0003 	ldmia.w	r2, {r0, r1}
void UART_REST_TC(){
90003980:	b500      	push	{lr}
90003982:	b083      	sub	sp, #12
	memcpy(trouble_code,"XXXXX\0", sizeof(trouble_code));
90003984:	6018      	str	r0, [r3, #0]
	TC_GUI_Pass(trouble_code); //not needed because the screen can't switch without new code**********************************************************************************************************
90003986:	4618      	mov	r0, r3
	memcpy(trouble_code,"XXXXX\0", sizeof(trouble_code));
90003988:	8099      	strh	r1, [r3, #4]
	TC_GUI_Pass(trouble_code); //not needed because the screen can't switch without new code**********************************************************************************************************
9000398a:	f7fd f8d5 	bl	90000b38 <TC_GUI_Pass>
	byte = TC_Reset_cmd;
9000398e:	f04f 0c07 	mov.w	ip, #7
	osMessageQueuePut(send_task_queue, &byte, 0, 0);
90003992:	2300      	movs	r3, #0
90003994:	480a      	ldr	r0, [pc, #40]	@ (900039c0 <UART_REST_TC+0x48>)
90003996:	eb0d 010c 	add.w	r1, sp, ip
	byte = TC_Reset_cmd;
9000399a:	f88d c007 	strb.w	ip, [sp, #7]
	osMessageQueuePut(send_task_queue, &byte, 0, 0);
9000399e:	461a      	mov	r2, r3
900039a0:	6800      	ldr	r0, [r0, #0]
900039a2:	f00c f83b 	bl	9000fa1c <osMessageQueuePut>
	HAL_UART_Receive_IT(&huart1,&rx_data, 1);
900039a6:	2201      	movs	r2, #1
900039a8:	4906      	ldr	r1, [pc, #24]	@ (900039c4 <UART_REST_TC+0x4c>)
900039aa:	4807      	ldr	r0, [pc, #28]	@ (900039c8 <UART_REST_TC+0x50>)
900039ac:	f00a fc8a 	bl	9000e2c4 <HAL_UART_Receive_IT>
}
900039b0:	b003      	add	sp, #12
900039b2:	f85d fb04 	ldr.w	pc, [sp], #4
900039b6:	bf00      	nop
900039b8:	9002e530 	.word	0x9002e530
900039bc:	240076b8 	.word	0x240076b8
900039c0:	240076b0 	.word	0x240076b0
900039c4:	240076b6 	.word	0x240076b6
900039c8:	24007704 	.word	0x24007704

900039cc <Get_TC_USART>:
 *
 */
void Get_TC_USART(){

  //setting up FreeRTOS*********************************************************************************
  send_task_queue = osMessageQueueNew(3, sizeof(uart_comms_t),NULL);
900039cc:	4c25      	ldr	r4, [pc, #148]	@ (90003a64 <Get_TC_USART+0x98>)
900039ce:	2200      	movs	r2, #0
900039d0:	2101      	movs	r1, #1
900039d2:	2003      	movs	r0, #3
void Get_TC_USART(){
900039d4:	b500      	push	{lr}
900039d6:	b083      	sub	sp, #12
  send_task_queue = osMessageQueueNew(3, sizeof(uart_comms_t),NULL);
900039d8:	f00b ffe4 	bl	9000f9a4 <osMessageQueueNew>
900039dc:	6020      	str	r0, [r4, #0]
	if (ptr == NULL){
900039de:	2800      	cmp	r0, #0
900039e0:	d030      	beq.n	90003a44 <Get_TC_USART+0x78>
  init_error_check(send_task_queue);
  receive_task_queue = osMessageQueueNew(1, sizeof(uart_comms_t),NULL);
900039e2:	2101      	movs	r1, #1
900039e4:	2200      	movs	r2, #0
900039e6:	4608      	mov	r0, r1
900039e8:	f00b ffdc 	bl	9000f9a4 <osMessageQueueNew>
900039ec:	4b1e      	ldr	r3, [pc, #120]	@ (90003a68 <Get_TC_USART+0x9c>)
900039ee:	6018      	str	r0, [r3, #0]
	if (ptr == NULL){
900039f0:	b358      	cbz	r0, 90003a4a <Get_TC_USART+0x7e>
  init_error_check(receive_task_queue);
  receive_handle = osThreadNew(UART_RX, NULL, &receiveTask_attributes);
900039f2:	4a1e      	ldr	r2, [pc, #120]	@ (90003a6c <Get_TC_USART+0xa0>)
900039f4:	2100      	movs	r1, #0
900039f6:	481e      	ldr	r0, [pc, #120]	@ (90003a70 <Get_TC_USART+0xa4>)
900039f8:	f00b feca 	bl	9000f790 <osThreadNew>
900039fc:	4b1d      	ldr	r3, [pc, #116]	@ (90003a74 <Get_TC_USART+0xa8>)
900039fe:	6018      	str	r0, [r3, #0]
	if (ptr == NULL){
90003a00:	b330      	cbz	r0, 90003a50 <Get_TC_USART+0x84>
  init_error_check(receive_handle);
  send_handle = osThreadNew(UART_TX, NULL, &sendTask_attributes);
90003a02:	4a1d      	ldr	r2, [pc, #116]	@ (90003a78 <Get_TC_USART+0xac>)
90003a04:	2100      	movs	r1, #0
90003a06:	481d      	ldr	r0, [pc, #116]	@ (90003a7c <Get_TC_USART+0xb0>)
90003a08:	f00b fec2 	bl	9000f790 <osThreadNew>
90003a0c:	4b1c      	ldr	r3, [pc, #112]	@ (90003a80 <Get_TC_USART+0xb4>)
90003a0e:	6018      	str	r0, [r3, #0]
	if (ptr == NULL){
90003a10:	b308      	cbz	r0, 90003a56 <Get_TC_USART+0x8a>
  init_error_check(send_handle);
  blink_handle = osThreadNew(blk_toggle_led,NULL,&blinkTask_attributes);
90003a12:	4a1c      	ldr	r2, [pc, #112]	@ (90003a84 <Get_TC_USART+0xb8>)
90003a14:	2100      	movs	r1, #0
90003a16:	481c      	ldr	r0, [pc, #112]	@ (90003a88 <Get_TC_USART+0xbc>)
90003a18:	f00b feba 	bl	9000f790 <osThreadNew>
90003a1c:	4b1b      	ldr	r3, [pc, #108]	@ (90003a8c <Get_TC_USART+0xc0>)
90003a1e:	6018      	str	r0, [r3, #0]
	if (ptr == NULL){
90003a20:	b1e0      	cbz	r0, 90003a5c <Get_TC_USART+0x90>
  init_error_check(blink_handle);

  //setting interrupts**********************************************************************************
  uint8_t byte;
  byte = start_cmd;
  osMessageQueuePut(send_task_queue, &byte, 0, 0);
90003a22:	2300      	movs	r3, #0
  byte = start_cmd;
90003a24:	2501      	movs	r5, #1
  osMessageQueuePut(send_task_queue, &byte, 0, 0);
90003a26:	f10d 0107 	add.w	r1, sp, #7
90003a2a:	6820      	ldr	r0, [r4, #0]
90003a2c:	461a      	mov	r2, r3
  byte = start_cmd;
90003a2e:	f88d 5007 	strb.w	r5, [sp, #7]
  osMessageQueuePut(send_task_queue, &byte, 0, 0);
90003a32:	f00b fff3 	bl	9000fa1c <osMessageQueuePut>
  HAL_UART_Receive_IT(&huart1,&rx_data, 1);
90003a36:	462a      	mov	r2, r5
90003a38:	4915      	ldr	r1, [pc, #84]	@ (90003a90 <Get_TC_USART+0xc4>)
90003a3a:	4816      	ldr	r0, [pc, #88]	@ (90003a94 <Get_TC_USART+0xc8>)
90003a3c:	f00a fc42 	bl	9000e2c4 <HAL_UART_Receive_IT>

  osThreadExit();
90003a40:	f00b feea 	bl	9000f818 <osThreadExit>
		Error_Handler();
90003a44:	f000 f862 	bl	90003b0c <Error_Handler>
90003a48:	e7cb      	b.n	900039e2 <Get_TC_USART+0x16>
90003a4a:	f000 f85f 	bl	90003b0c <Error_Handler>
90003a4e:	e7d0      	b.n	900039f2 <Get_TC_USART+0x26>
90003a50:	f000 f85c 	bl	90003b0c <Error_Handler>
90003a54:	e7d5      	b.n	90003a02 <Get_TC_USART+0x36>
90003a56:	f000 f859 	bl	90003b0c <Error_Handler>
90003a5a:	e7da      	b.n	90003a12 <Get_TC_USART+0x46>
90003a5c:	f000 f856 	bl	90003b0c <Error_Handler>
90003a60:	e7df      	b.n	90003a22 <Get_TC_USART+0x56>
90003a62:	bf00      	nop
90003a64:	240076b0 	.word	0x240076b0
90003a68:	240076ac 	.word	0x240076ac
90003a6c:	90030694 	.word	0x90030694
90003a70:	9000377d 	.word	0x9000377d
90003a74:	240076a4 	.word	0x240076a4
90003a78:	900306b8 	.word	0x900306b8
90003a7c:	90003701 	.word	0x90003701
90003a80:	240076a8 	.word	0x240076a8
90003a84:	90030670 	.word	0x90030670
90003a88:	90003a99 	.word	0x90003a99
90003a8c:	240076a0 	.word	0x240076a0
90003a90:	240076b6 	.word	0x240076b6
90003a94:	24007704 	.word	0x24007704

90003a98 <blk_toggle_led>:
#include "stm32h7xx_hal.h"

osSemaphoreId_t blink_sem;

void blk_toggle_led(){
	blink_sem = osSemaphoreNew(1,0,NULL);
90003a98:	2200      	movs	r2, #0
90003a9a:	2001      	movs	r0, #1
90003a9c:	4c0e      	ldr	r4, [pc, #56]	@ (90003ad8 <blk_toggle_led+0x40>)
90003a9e:	4611      	mov	r1, r2
	init_error_check(blink_sem);
	while(1){
		if (osSemaphoreAcquire(blink_sem,osWaitForever) == osOK){
			HAL_GPIO_TogglePin(GPIOI,GPIO_PIN_13);
90003aa0:	4d0e      	ldr	r5, [pc, #56]	@ (90003adc <blk_toggle_led+0x44>)
void blk_toggle_led(){
90003aa2:	b508      	push	{r3, lr}
	blink_sem = osSemaphoreNew(1,0,NULL);
90003aa4:	f00b fecc 	bl	9000f840 <osSemaphoreNew>
90003aa8:	6020      	str	r0, [r4, #0]
	init_error_check(blink_sem);
90003aaa:	f7ff ff1d 	bl	900038e8 <init_error_check>
		if (osSemaphoreAcquire(blink_sem,osWaitForever) == osOK){
90003aae:	f04f 31ff 	mov.w	r1, #4294967295
90003ab2:	6820      	ldr	r0, [r4, #0]
90003ab4:	f00b ff1a 	bl	9000f8ec <osSemaphoreAcquire>
90003ab8:	2800      	cmp	r0, #0
90003aba:	d1f8      	bne.n	90003aae <blk_toggle_led+0x16>
			HAL_GPIO_TogglePin(GPIOI,GPIO_PIN_13);
90003abc:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
90003ac0:	4628      	mov	r0, r5
90003ac2:	f005 fbaf 	bl	90009224 <HAL_GPIO_TogglePin>
			osDelay(pdMS_TO_TICKS(250));
90003ac6:	20fa      	movs	r0, #250	@ 0xfa
90003ac8:	f00b feac 	bl	9000f824 <osDelay>
			HAL_GPIO_TogglePin(GPIOI,GPIO_PIN_13);
90003acc:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
90003ad0:	4628      	mov	r0, r5
90003ad2:	f005 fba7 	bl	90009224 <HAL_GPIO_TogglePin>
90003ad6:	e7ea      	b.n	90003aae <blk_toggle_led+0x16>
90003ad8:	240076c0 	.word	0x240076c0
90003adc:	58022000 	.word	0x58022000

90003ae0 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
  
  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
90003ae0:	4901      	ldr	r1, [pc, #4]	@ (90003ae8 <vApplicationIdleHook+0x8>)
90003ae2:	2000      	movs	r0, #0
90003ae4:	f00e b818 	b.w	90011b18 <vTaskSetApplicationTaskTag>
90003ae8:	90000fdd 	.word	0x90000fdd

90003aec <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
90003aec:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
90003aee:	2064      	movs	r0, #100	@ 0x64
90003af0:	f00b fe98 	bl	9000f824 <osDelay>
  for(;;)
90003af4:	e7fb      	b.n	90003aee <StartDefaultTask+0x2>
90003af6:	bf00      	nop

90003af8 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6)
90003af8:	4b03      	ldr	r3, [pc, #12]	@ (90003b08 <HAL_TIM_PeriodElapsedCallback+0x10>)
90003afa:	6802      	ldr	r2, [r0, #0]
90003afc:	429a      	cmp	r2, r3
90003afe:	d000      	beq.n	90003b02 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
90003b00:	4770      	bx	lr
    HAL_IncTick();
90003b02:	f004 bb33 	b.w	9000816c <HAL_IncTick>
90003b06:	bf00      	nop
90003b08:	40001000 	.word	0x40001000

90003b0c <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  HAL_GPIO_WritePin(GPIOJ, GPIO_PIN_2, GPIO_PIN_SET);
  /* User can add his own implementation to report the HAL error return state */
  while(1){
	  HAL_GPIO_TogglePin(GPIOI, GPIO_PIN_13);  // Toggle PA5
90003b0c:	4d0a      	ldr	r5, [pc, #40]	@ (90003b38 <Error_Handler+0x2c>)
  HAL_GPIO_WritePin(GPIOJ, GPIO_PIN_2, GPIO_PIN_SET);
90003b0e:	2201      	movs	r2, #1
	  HAL_Delay(500); // 500 ms delay
	  HAL_GPIO_TogglePin(GPIOJ,GPIO_PIN_2);
90003b10:	4c0a      	ldr	r4, [pc, #40]	@ (90003b3c <Error_Handler+0x30>)
  HAL_GPIO_WritePin(GPIOJ, GPIO_PIN_2, GPIO_PIN_SET);
90003b12:	2104      	movs	r1, #4
90003b14:	4809      	ldr	r0, [pc, #36]	@ (90003b3c <Error_Handler+0x30>)
{
90003b16:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOJ, GPIO_PIN_2, GPIO_PIN_SET);
90003b18:	f005 fb80 	bl	9000921c <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOI, GPIO_PIN_13);  // Toggle PA5
90003b1c:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
90003b20:	4628      	mov	r0, r5
90003b22:	f005 fb7f 	bl	90009224 <HAL_GPIO_TogglePin>
	  HAL_Delay(500); // 500 ms delay
90003b26:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
90003b2a:	f004 fb31 	bl	90008190 <HAL_Delay>
	  HAL_GPIO_TogglePin(GPIOJ,GPIO_PIN_2);
90003b2e:	2104      	movs	r1, #4
90003b30:	4620      	mov	r0, r4
90003b32:	f005 fb77 	bl	90009224 <HAL_GPIO_TogglePin>
  while(1){
90003b36:	e7f1      	b.n	90003b1c <Error_Handler+0x10>
90003b38:	58022000 	.word	0x58022000
90003b3c:	58022400 	.word	0x58022400

90003b40 <SystemClock_Config>:
{
90003b40:	b530      	push	{r4, r5, lr}
90003b42:	b09f      	sub	sp, #124	@ 0x7c
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
90003b44:	224c      	movs	r2, #76	@ 0x4c
90003b46:	2100      	movs	r1, #0
90003b48:	a80a      	add	r0, sp, #40	@ 0x28
90003b4a:	f029 fee3 	bl	9002d914 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
90003b4e:	2220      	movs	r2, #32
90003b50:	2100      	movs	r1, #0
90003b52:	a802      	add	r0, sp, #8
90003b54:	f029 fede 	bl	9002d914 <memset>
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
90003b58:	2002      	movs	r0, #2
90003b5a:	f008 f8bb 	bl	9000bcd4 <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
90003b5e:	4a24      	ldr	r2, [pc, #144]	@ (90003bf0 <SystemClock_Config+0xb0>)
90003b60:	2100      	movs	r1, #0
90003b62:	4b24      	ldr	r3, [pc, #144]	@ (90003bf4 <SystemClock_Config+0xb4>)
90003b64:	9101      	str	r1, [sp, #4]
90003b66:	6991      	ldr	r1, [r2, #24]
90003b68:	f441 4140 	orr.w	r1, r1, #49152	@ 0xc000
90003b6c:	6191      	str	r1, [r2, #24]
90003b6e:	6991      	ldr	r1, [r2, #24]
90003b70:	f401 4140 	and.w	r1, r1, #49152	@ 0xc000
90003b74:	9101      	str	r1, [sp, #4]
90003b76:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
90003b78:	f041 0101 	orr.w	r1, r1, #1
90003b7c:	62d9      	str	r1, [r3, #44]	@ 0x2c
90003b7e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003b80:	f003 0301 	and.w	r3, r3, #1
90003b84:	9301      	str	r3, [sp, #4]
90003b86:	9b01      	ldr	r3, [sp, #4]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
90003b88:	6993      	ldr	r3, [r2, #24]
90003b8a:	049b      	lsls	r3, r3, #18
90003b8c:	d5fc      	bpl.n	90003b88 <SystemClock_Config+0x48>
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90003b8e:	2401      	movs	r4, #1
90003b90:	f44f 3580 	mov.w	r5, #65536	@ 0x10000
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
90003b94:	2302      	movs	r3, #2
  RCC_OscInitStruct.PLL.PLLM = 5;
90003b96:	2105      	movs	r1, #5
  RCC_OscInitStruct.PLL.PLLN = 192;
90003b98:	22c0      	movs	r2, #192	@ 0xc0
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90003b9a:	a80a      	add	r0, sp, #40	@ 0x28
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90003b9c:	e9cd 450a 	strd	r4, r5, [sp, #40]	@ 0x28
  RCC_OscInitStruct.PLL.PLLQ = 4;
90003ba0:	2504      	movs	r5, #4
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90003ba2:	2408      	movs	r4, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
90003ba4:	e9cd 3313 	strd	r3, r3, [sp, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLQ = 4;
90003ba8:	e9cd 3517 	strd	r3, r5, [sp, #92]	@ 0x5c
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90003bac:	e9cd 3419 	strd	r3, r4, [sp, #100]	@ 0x64
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90003bb0:	2300      	movs	r3, #0
  RCC_OscInitStruct.PLL.PLLN = 192;
90003bb2:	e9cd 1215 	strd	r1, r2, [sp, #84]	@ 0x54
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90003bb6:	e9cd 331b 	strd	r3, r3, [sp, #108]	@ 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90003bba:	f008 f921 	bl	9000be00 <HAL_RCC_OscConfig>
90003bbe:	4603      	mov	r3, r0
90003bc0:	b998      	cbnz	r0, 90003bea <SystemClock_Config+0xaa>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90003bc2:	223f      	movs	r2, #63	@ 0x3f
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
90003bc4:	9304      	str	r3, [sp, #16]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90003bc6:	2340      	movs	r3, #64	@ 0x40
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
90003bc8:	4629      	mov	r1, r5
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90003bca:	9202      	str	r2, [sp, #8]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90003bcc:	2203      	movs	r2, #3
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
90003bce:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
90003bd0:	a802      	add	r0, sp, #8
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
90003bd2:	9309      	str	r3, [sp, #36]	@ 0x24
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90003bd4:	9203      	str	r2, [sp, #12]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90003bd6:	e9cd 4305 	strd	r4, r3, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
90003bda:	f44f 6380 	mov.w	r3, #1024	@ 0x400
90003bde:	9308      	str	r3, [sp, #32]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
90003be0:	f008 fc8a 	bl	9000c4f8 <HAL_RCC_ClockConfig>
90003be4:	b908      	cbnz	r0, 90003bea <SystemClock_Config+0xaa>
}
90003be6:	b01f      	add	sp, #124	@ 0x7c
90003be8:	bd30      	pop	{r4, r5, pc}
    Error_Handler();
90003bea:	f7ff ff8f 	bl	90003b0c <Error_Handler>
90003bee:	bf00      	nop
90003bf0:	58024800 	.word	0x58024800
90003bf4:	58000400 	.word	0x58000400

90003bf8 <main>:
{
90003bf8:	b580      	push	{r7, lr}
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90003bfa:	2400      	movs	r4, #0
{
90003bfc:	b0a0      	sub	sp, #128	@ 0x80
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90003bfe:	2501      	movs	r5, #1
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90003c00:	271b      	movs	r7, #27
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90003c02:	2603      	movs	r6, #3
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90003c04:	e9cd 4413 	strd	r4, r4, [sp, #76]	@ 0x4c
90003c08:	e9cd 4415 	strd	r4, r4, [sp, #84]	@ 0x54
  HAL_MPU_Disable();
90003c0c:	f004 fb46 	bl	9000829c <HAL_MPU_Disable>
  MPU_InitStruct.BaseAddress = 0x24000000;
90003c10:	f04f 5210 	mov.w	r2, #603979776	@ 0x24000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90003c14:	4bd0      	ldr	r3, [pc, #832]	@ (90003f58 <main+0x360>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003c16:	a813      	add	r0, sp, #76	@ 0x4c
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90003c18:	f8ad 504c 	strh.w	r5, [sp, #76]	@ 0x4c
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90003c1c:	e9cd 2314 	strd	r2, r3, [sp, #80]	@ 0x50
90003c20:	4bce      	ldr	r3, [pc, #824]	@ (90003f5c <main+0x364>)
90003c22:	9316      	str	r3, [sp, #88]	@ 0x58
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003c24:	f004 fb58 	bl	900082d8 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x90000000;
90003c28:	f04f 4310 	mov.w	r3, #2415919104	@ 0x90000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003c2c:	a813      	add	r0, sp, #76	@ 0x4c
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90003c2e:	f88d 4057 	strb.w	r4, [sp, #87]	@ 0x57
  MPU_InitStruct.BaseAddress = 0x90000000;
90003c32:	9314      	str	r3, [sp, #80]	@ 0x50
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90003c34:	f8ad 405a 	strh.w	r4, [sp, #90]	@ 0x5a
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
90003c38:	f88d 504d 	strb.w	r5, [sp, #77]	@ 0x4d
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90003c3c:	f88d 7054 	strb.w	r7, [sp, #84]	@ 0x54
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003c40:	f004 fb4a 	bl	900082d8 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90003c44:	2302      	movs	r3, #2
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003c46:	a813      	add	r0, sp, #76	@ 0x4c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90003c48:	f8ad 6057 	strh.w	r6, [sp, #87]	@ 0x57
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90003c4c:	f88d 304d 	strb.w	r3, [sp, #77]	@ 0x4d
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
90003c50:	231a      	movs	r3, #26
90003c52:	f88d 3054 	strb.w	r3, [sp, #84]	@ 0x54
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90003c56:	f240 1301 	movw	r3, #257	@ 0x101
90003c5a:	f8ad 305a 	strh.w	r3, [sp, #90]	@ 0x5a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003c5e:	f004 fb3b 	bl	900082d8 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90003c62:	f44f 7380 	mov.w	r3, #256	@ 0x100
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003c66:	a813      	add	r0, sp, #76	@ 0x4c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90003c68:	f8ad 405a 	strh.w	r4, [sp, #90]	@ 0x5a
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90003c6c:	2404      	movs	r4, #4
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90003c6e:	f8ad 3057 	strh.w	r3, [sp, #87]	@ 0x57
  MPU_InitStruct.BaseAddress = 0xD0000000;
90003c72:	f04f 4350 	mov.w	r3, #3489660928	@ 0xd0000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90003c76:	f88d 7054 	strb.w	r7, [sp, #84]	@ 0x54
  MPU_InitStruct.BaseAddress = 0xD0000000;
90003c7a:	9314      	str	r3, [sp, #80]	@ 0x50
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
90003c7c:	f88d 604d 	strb.w	r6, [sp, #77]	@ 0x4d
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003c80:	f004 fb2a 	bl	900082d8 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90003c84:	2318      	movs	r3, #24
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003c86:	a813      	add	r0, sp, #76	@ 0x4c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90003c88:	f88d 6057 	strb.w	r6, [sp, #87]	@ 0x57
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90003c8c:	f88d 3054 	strb.w	r3, [sp, #84]	@ 0x54
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90003c90:	f88d 404d 	strb.w	r4, [sp, #77]	@ 0x4d
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90003c94:	f88d 505a 	strb.w	r5, [sp, #90]	@ 0x5a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003c98:	f004 fb1e 	bl	900082d8 <HAL_MPU_ConfigRegion>
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
90003c9c:	4620      	mov	r0, r4
90003c9e:	f004 fb0b 	bl	900082b8 <HAL_MPU_Enable>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
90003ca2:	4aaf      	ldr	r2, [pc, #700]	@ (90003f60 <main+0x368>)
90003ca4:	6953      	ldr	r3, [r2, #20]
90003ca6:	f413 3300 	ands.w	r3, r3, #131072	@ 0x20000
90003caa:	d111      	bne.n	90003cd0 <main+0xd8>
  __ASM volatile ("dsb 0xF":::"memory");
90003cac:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003cb0:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
90003cb4:	f8c2 3250 	str.w	r3, [r2, #592]	@ 0x250
  __ASM volatile ("dsb 0xF":::"memory");
90003cb8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003cbc:	f3bf 8f6f 	isb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
90003cc0:	6953      	ldr	r3, [r2, #20]
90003cc2:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
90003cc6:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
90003cc8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003ccc:	f3bf 8f6f 	isb	sy
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
90003cd0:	48a3      	ldr	r0, [pc, #652]	@ (90003f60 <main+0x368>)
90003cd2:	6943      	ldr	r3, [r0, #20]
90003cd4:	f413 3380 	ands.w	r3, r3, #65536	@ 0x10000
90003cd8:	d124      	bne.n	90003d24 <main+0x12c>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90003cda:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90003cde:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90003ce2:	f8d0 5080 	ldr.w	r5, [r0, #128]	@ 0x80
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003ce6:	f643 76e0 	movw	r6, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90003cea:	f3c5 344e 	ubfx	r4, r5, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90003cee:	f3c5 05c9 	ubfx	r5, r5, #3, #10
90003cf2:	0164      	lsls	r4, r4, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003cf4:	ea04 0106 	and.w	r1, r4, r6
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90003cf8:	462b      	mov	r3, r5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003cfa:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90003cfe:	3b01      	subs	r3, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003d00:	f8c0 2260 	str.w	r2, [r0, #608]	@ 0x260
      } while (ways-- != 0U);
90003d04:	1c5a      	adds	r2, r3, #1
90003d06:	d1f8      	bne.n	90003cfa <main+0x102>
    } while(sets-- != 0U);
90003d08:	3c20      	subs	r4, #32
90003d0a:	f114 0f20 	cmn.w	r4, #32
90003d0e:	d1f1      	bne.n	90003cf4 <main+0xfc>
90003d10:	f3bf 8f4f 	dsb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
90003d14:	6943      	ldr	r3, [r0, #20]
90003d16:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
90003d1a:	6143      	str	r3, [r0, #20]
90003d1c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003d20:	f3bf 8f6f 	isb	sy
  HAL_Init();
90003d24:	f004 f9f2 	bl	9000810c <HAL_Init>
  SystemClock_Config();
90003d28:	f7ff ff0a 	bl	90003b40 <SystemClock_Config>
  __ASM volatile ("cpsie i" : : : "memory");
90003d2c:	b662      	cpsie	i
  __HAL_RCC_GPIOK_CLK_ENABLE();
90003d2e:	4c8d      	ldr	r4, [pc, #564]	@ (90003f64 <main+0x36c>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003d30:	2500      	movs	r5, #0
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90003d32:	2180      	movs	r1, #128	@ 0x80
90003d34:	488c      	ldr	r0, [pc, #560]	@ (90003f68 <main+0x370>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003d36:	9517      	str	r5, [sp, #92]	@ 0x5c
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90003d38:	462a      	mov	r2, r5
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003d3a:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003d3c:	2703      	movs	r7, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90003d3e:	f04f 0908 	mov.w	r9, #8
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90003d42:	f04f 0840 	mov.w	r8, #64	@ 0x40
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003d46:	e9cd 5513 	strd	r5, r5, [sp, #76]	@ 0x4c
90003d4a:	e9cd 5515 	strd	r5, r5, [sp, #84]	@ 0x54
  __HAL_RCC_GPIOK_CLK_ENABLE();
90003d4e:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90003d52:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
90003d56:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
90003d5a:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90003d5e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
90003d62:	9302      	str	r3, [sp, #8]
90003d64:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90003d66:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90003d6a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
90003d6e:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
90003d72:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90003d76:	f003 0340 	and.w	r3, r3, #64	@ 0x40
90003d7a:	9303      	str	r3, [sp, #12]
90003d7c:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOI_CLK_ENABLE();
90003d7e:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90003d82:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
90003d86:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
90003d8a:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90003d8e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90003d92:	9304      	str	r3, [sp, #16]
90003d94:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90003d96:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90003d9a:	f043 0310 	orr.w	r3, r3, #16
90003d9e:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
90003da2:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90003da6:	f003 0310 	and.w	r3, r3, #16
90003daa:	9305      	str	r3, [sp, #20]
90003dac:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOB_CLK_ENABLE();
90003dae:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90003db2:	f043 0302 	orr.w	r3, r3, #2
90003db6:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
90003dba:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90003dbe:	f003 0302 	and.w	r3, r3, #2
90003dc2:	9306      	str	r3, [sp, #24]
90003dc4:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
90003dc6:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90003dca:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
90003dce:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
90003dd2:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90003dd6:	f403 7300 	and.w	r3, r3, #512	@ 0x200
90003dda:	9307      	str	r3, [sp, #28]
90003ddc:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90003dde:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90003de2:	f043 0308 	orr.w	r3, r3, #8
90003de6:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
90003dea:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90003dee:	f003 0308 	and.w	r3, r3, #8
90003df2:	9308      	str	r3, [sp, #32]
90003df4:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90003df6:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90003dfa:	f043 0320 	orr.w	r3, r3, #32
90003dfe:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
90003e02:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90003e06:	f003 0320 	and.w	r3, r3, #32
90003e0a:	9309      	str	r3, [sp, #36]	@ 0x24
90003e0c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOH_CLK_ENABLE();
90003e0e:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90003e12:	430b      	orrs	r3, r1
90003e14:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
90003e18:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90003e1c:	400b      	ands	r3, r1
90003e1e:	930a      	str	r3, [sp, #40]	@ 0x28
90003e20:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  __HAL_RCC_GPIOA_CLK_ENABLE();
90003e22:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90003e26:	f043 0301 	orr.w	r3, r3, #1
90003e2a:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
90003e2e:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90003e32:	f003 0301 	and.w	r3, r3, #1
90003e36:	930b      	str	r3, [sp, #44]	@ 0x2c
90003e38:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90003e3a:	f005 f9ef 	bl	9000921c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOI, GPIO_PIN_13, GPIO_PIN_SET);
90003e3e:	2201      	movs	r2, #1
90003e40:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
90003e44:	4849      	ldr	r0, [pc, #292]	@ (90003f6c <main+0x374>)
90003e46:	f005 f9e9 	bl	9000921c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
90003e4a:	462a      	mov	r2, r5
90003e4c:	2108      	movs	r1, #8
90003e4e:	4848      	ldr	r0, [pc, #288]	@ (90003f70 <main+0x378>)
90003e50:	f005 f9e4 	bl	9000921c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90003e54:	2201      	movs	r2, #1
90003e56:	4847      	ldr	r0, [pc, #284]	@ (90003f74 <main+0x37c>)
90003e58:	4611      	mov	r1, r2
90003e5a:	f005 f9df 	bl	9000921c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
90003e5e:	462a      	mov	r2, r5
90003e60:	2140      	movs	r1, #64	@ 0x40
90003e62:	4845      	ldr	r0, [pc, #276]	@ (90003f78 <main+0x380>)
90003e64:	f005 f9da 	bl	9000921c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOJ, GPIO_PIN_2, GPIO_PIN_SET);
90003e68:	2201      	movs	r2, #1
90003e6a:	2104      	movs	r1, #4
90003e6c:	4843      	ldr	r0, [pc, #268]	@ (90003f7c <main+0x384>)
90003e6e:	f005 f9d5 	bl	9000921c <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90003e72:	2380      	movs	r3, #128	@ 0x80
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90003e74:	a913      	add	r1, sp, #76	@ 0x4c
90003e76:	483c      	ldr	r0, [pc, #240]	@ (90003f68 <main+0x370>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003e78:	9515      	str	r5, [sp, #84]	@ 0x54
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90003e7a:	9313      	str	r3, [sp, #76]	@ 0x4c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003e7c:	9516      	str	r5, [sp, #88]	@ 0x58
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003e7e:	9614      	str	r6, [sp, #80]	@ 0x50
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90003e80:	f004 fe90 	bl	90008ba4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_13;
90003e84:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90003e88:	a913      	add	r1, sp, #76	@ 0x4c
90003e8a:	4838      	ldr	r0, [pc, #224]	@ (90003f6c <main+0x374>)
  GPIO_InitStruct.Pin = GPIO_PIN_13;
90003e8c:	9313      	str	r3, [sp, #76]	@ 0x4c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003e8e:	9516      	str	r5, [sp, #88]	@ 0x58
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003e90:	e9cd 6514 	strd	r6, r5, [sp, #80]	@ 0x50
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90003e94:	f004 fe86 	bl	90008ba4 <HAL_GPIO_Init>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90003e98:	a913      	add	r1, sp, #76	@ 0x4c
90003e9a:	4835      	ldr	r0, [pc, #212]	@ (90003f70 <main+0x378>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003e9c:	9716      	str	r7, [sp, #88]	@ 0x58
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90003e9e:	f8cd 904c 	str.w	r9, [sp, #76]	@ 0x4c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003ea2:	e9cd 6514 	strd	r6, r5, [sp, #80]	@ 0x50
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90003ea6:	f004 fe7d 	bl	90008ba4 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90003eaa:	a913      	add	r1, sp, #76	@ 0x4c
90003eac:	4831      	ldr	r0, [pc, #196]	@ (90003f74 <main+0x37c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003eae:	e9cd 5515 	strd	r5, r5, [sp, #84]	@ 0x54
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003eb2:	e9cd 6613 	strd	r6, r6, [sp, #76]	@ 0x4c
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90003eb6:	f004 fe75 	bl	90008ba4 <HAL_GPIO_Init>
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90003eba:	a913      	add	r1, sp, #76	@ 0x4c
90003ebc:	482e      	ldr	r0, [pc, #184]	@ (90003f78 <main+0x380>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003ebe:	9716      	str	r7, [sp, #88]	@ 0x58
  GPIO_InitStruct.Pin = GPIO_PIN_2;
90003ec0:	2704      	movs	r7, #4
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90003ec2:	f8cd 804c 	str.w	r8, [sp, #76]	@ 0x4c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003ec6:	e9cd 6514 	strd	r6, r5, [sp, #80]	@ 0x50
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90003eca:	f004 fe6b 	bl	90008ba4 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90003ece:	a913      	add	r1, sp, #76	@ 0x4c
90003ed0:	482a      	ldr	r0, [pc, #168]	@ (90003f7c <main+0x384>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003ed2:	9516      	str	r5, [sp, #88]	@ 0x58
  GPIO_InitStruct.Pin = GPIO_PIN_2;
90003ed4:	9713      	str	r7, [sp, #76]	@ 0x4c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003ed6:	e9cd 6514 	strd	r6, r5, [sp, #80]	@ 0x50
  HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90003eda:	f004 fe63 	bl	90008ba4 <HAL_GPIO_Init>
  __HAL_RCC_MDMA_CLK_ENABLE();
90003ede:	f8d4 30d4 	ldr.w	r3, [r4, #212]	@ 0xd4
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003ee2:	462a      	mov	r2, r5
90003ee4:	2105      	movs	r1, #5
  __HAL_RCC_MDMA_CLK_ENABLE();
90003ee6:	4333      	orrs	r3, r6
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003ee8:	207a      	movs	r0, #122	@ 0x7a
  __HAL_RCC_MDMA_CLK_ENABLE();
90003eea:	f8c4 30d4 	str.w	r3, [r4, #212]	@ 0xd4
90003eee:	f8d4 30d4 	ldr.w	r3, [r4, #212]	@ 0xd4
  hltdc.Instance = LTDC;
90003ef2:	4c23      	ldr	r4, [pc, #140]	@ (90003f80 <main+0x388>)
  __HAL_RCC_MDMA_CLK_ENABLE();
90003ef4:	4033      	ands	r3, r6
90003ef6:	9301      	str	r3, [sp, #4]
90003ef8:	9b01      	ldr	r3, [sp, #4]
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003efa:	f004 f973 	bl	900081e4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(MDMA_IRQn);
90003efe:	207a      	movs	r0, #122	@ 0x7a
90003f00:	f004 f9ac 	bl	9000825c <HAL_NVIC_EnableIRQ>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
90003f04:	2234      	movs	r2, #52	@ 0x34
90003f06:	4629      	mov	r1, r5
90003f08:	a813      	add	r0, sp, #76	@ 0x4c
90003f0a:	f029 fd03 	bl	9002d914 <memset>
  hltdc.Instance = LTDC;
90003f0e:	4b1d      	ldr	r3, [pc, #116]	@ (90003f84 <main+0x38c>)
  hltdc.Init.Backcolor.Blue = 0;
90003f10:	86a5      	strh	r5, [r4, #52]	@ 0x34
  hltdc.Init.AccumulatedActiveH = 283;
90003f12:	f240 2c0a 	movw	ip, #522	@ 0x20a
  hltdc.Instance = LTDC;
90003f16:	6023      	str	r3, [r4, #0]
  hltdc.Init.HorizontalSync = 39;
90003f18:	2327      	movs	r3, #39	@ 0x27
  hltdc.Init.Backcolor.Red = 0;
90003f1a:	f884 5036 	strb.w	r5, [r4, #54]	@ 0x36
  hltdc.Init.TotalHeigh = 285;
90003f1e:	f44f 7e04 	mov.w	lr, #528	@ 0x210
  hltdc.Init.HorizontalSync = 39;
90003f22:	6163      	str	r3, [r4, #20]
  hltdc.Init.AccumulatedVBP = 11;
90003f24:	230b      	movs	r3, #11
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90003f26:	4620      	mov	r0, r4
  hltdc.Init.VerticalSync = 8;
90003f28:	f8c4 9018 	str.w	r9, [r4, #24]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
90003f2c:	e9c4 5501 	strd	r5, r5, [r4, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
90003f30:	e9c4 5503 	strd	r5, r5, [r4, #12]
  hltdc.Init.AccumulatedVBP = 11;
90003f34:	252a      	movs	r5, #42	@ 0x2a
90003f36:	e9c4 5307 	strd	r5, r3, [r4, #28]
  hltdc.Init.AccumulatedActiveH = 283;
90003f3a:	f240 131b 	movw	r3, #283	@ 0x11b
90003f3e:	e9c4 c309 	strd	ip, r3, [r4, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 285;
90003f42:	f240 131d 	movw	r3, #285	@ 0x11d
90003f46:	e9c4 e30b 	strd	lr, r3, [r4, #44]	@ 0x2c
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90003f4a:	f007 fadf 	bl	9000b50c <HAL_LTDC_Init>
90003f4e:	4602      	mov	r2, r0
90003f50:	2800      	cmp	r0, #0
90003f52:	f040 80df 	bne.w	90004114 <main+0x51c>
90003f56:	e017      	b.n	90003f88 <main+0x390>
90003f58:	03000012 	.word	0x03000012
90003f5c:	01010001 	.word	0x01010001
90003f60:	e000ed00 	.word	0xe000ed00
90003f64:	58024400 	.word	0x58024400
90003f68:	58020c00 	.word	0x58020c00
90003f6c:	58022000 	.word	0x58022000
90003f70:	58021800 	.word	0x58021800
90003f74:	58022800 	.word	0x58022800
90003f78:	58020000 	.word	0x58020000
90003f7c:	58022400 	.word	0x58022400
90003f80:	24007798 	.word	0x24007798
90003f84:	50001000 	.word	0x50001000
  pLayerCfg.WindowX1 = 480;
90003f88:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
  pLayerCfg.Alpha = 255;
90003f8c:	f04f 0a02 	mov.w	sl, #2
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90003f90:	f44f 6580 	mov.w	r5, #1024	@ 0x400
90003f94:	f04f 0905 	mov.w	r9, #5
  pLayerCfg.WindowX1 = 480;
90003f98:	9314      	str	r3, [sp, #80]	@ 0x50
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003f9a:	a913      	add	r1, sp, #76	@ 0x4c
  pLayerCfg.ImageWidth = 480;
90003f9c:	931d      	str	r3, [sp, #116]	@ 0x74
  pLayerCfg.WindowY1 = 272;
90003f9e:	f44f 7388 	mov.w	r3, #272	@ 0x110
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003fa2:	4620      	mov	r0, r4
  pLayerCfg.WindowX0 = 0;
90003fa4:	9213      	str	r2, [sp, #76]	@ 0x4c
  pLayerCfg.WindowY1 = 272;
90003fa6:	9316      	str	r3, [sp, #88]	@ 0x58
  pLayerCfg.ImageHeight = 272;
90003fa8:	931e      	str	r3, [sp, #120]	@ 0x78
  pLayerCfg.Alpha = 255;
90003faa:	23ff      	movs	r3, #255	@ 0xff
  pLayerCfg.WindowY0 = 0;
90003fac:	9215      	str	r2, [sp, #84]	@ 0x54
  pLayerCfg.Alpha0 = 0;
90003fae:	9219      	str	r2, [sp, #100]	@ 0x64
  pLayerCfg.FBStartAdress = 0;
90003fb0:	921c      	str	r2, [sp, #112]	@ 0x70
  pLayerCfg.Backcolor.Blue = 0;
90003fb2:	f8ad 207c 	strh.w	r2, [sp, #124]	@ 0x7c
  pLayerCfg.Backcolor.Red = 0;
90003fb6:	f88d 207e 	strb.w	r2, [sp, #126]	@ 0x7e
  pLayerCfg.Alpha = 255;
90003fba:	e9cd a317 	strd	sl, r3, [sp, #92]	@ 0x5c
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90003fbe:	e9cd 591a 	strd	r5, r9, [sp, #104]	@ 0x68
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003fc2:	f007 fb61 	bl	9000b688 <HAL_LTDC_ConfigLayer>
90003fc6:	2800      	cmp	r0, #0
90003fc8:	f040 80a4 	bne.w	90004114 <main+0x51c>
  hdma2d.Instance = DMA2D;
90003fcc:	4c52      	ldr	r4, [pc, #328]	@ (90004118 <main+0x520>)
90003fce:	4b53      	ldr	r3, [pc, #332]	@ (9000411c <main+0x524>)
  hdma2d.Init.OutputOffset = 0;
90003fd0:	60e0      	str	r0, [r4, #12]
  hdma2d.LayerCfg[1].ChromaSubSampling = DMA2D_NO_CSS;
90003fd2:	65e0      	str	r0, [r4, #92]	@ 0x5c
  hdma2d.Instance = DMA2D;
90003fd4:	6023      	str	r3, [r4, #0]
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
90003fd6:	e9c4 0a01 	strd	r0, sl, [r4, #4]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
90003fda:	e9c4 0a11 	strd	r0, sl, [r4, #68]	@ 0x44
  hdma2d.LayerCfg[1].InputAlpha = 0;
90003fde:	e9c4 0013 	strd	r0, r0, [r4, #76]	@ 0x4c
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
90003fe2:	e9c4 0015 	strd	r0, r0, [r4, #84]	@ 0x54
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90003fe6:	4620      	mov	r0, r4
90003fe8:	f004 fc9c 	bl	90008924 <HAL_DMA2D_Init>
90003fec:	2800      	cmp	r0, #0
90003fee:	f040 8091 	bne.w	90004114 <main+0x51c>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
90003ff2:	4620      	mov	r0, r4
90003ff4:	4631      	mov	r1, r6
90003ff6:	f004 fd6b 	bl	90008ad0 <HAL_DMA2D_ConfigLayer>
90003ffa:	4603      	mov	r3, r0
90003ffc:	2800      	cmp	r0, #0
90003ffe:	f040 8089 	bne.w	90004114 <main+0x51c>
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90004002:	4847      	ldr	r0, [pc, #284]	@ (90004120 <main+0x528>)
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90004004:	f44f 72c0 	mov.w	r2, #384	@ 0x180
  SdramTiming.SelfRefreshTime = 4;
90004008:	970e      	str	r7, [sp, #56]	@ 0x38
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
9000400a:	a90c      	add	r1, sp, #48	@ 0x30
  hsdram2.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
9000400c:	6283      	str	r3, [r0, #40]	@ 0x28
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
9000400e:	60c7      	str	r7, [r0, #12]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90004010:	f44f 5780 	mov.w	r7, #4096	@ 0x1000
  SdramTiming.WriteRecoveryTime = 5;
90004014:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
  SdramTiming.LoadToActiveDelay = 2;
90004018:	f8cd a030 	str.w	sl, [sp, #48]	@ 0x30
  hsdram2.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
9000401c:	f8c0 8014 	str.w	r8, [r0, #20]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90004020:	6247      	str	r7, [r0, #36]	@ 0x24
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90004022:	e9c0 2306 	strd	r2, r3, [r0, #24]
  hsdram2.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
90004026:	e9c0 6301 	strd	r6, r3, [r0, #4]
  SdramTiming.ExitSelfRefreshDelay = 7;
9000402a:	2307      	movs	r3, #7
  hsdram2.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
9000402c:	f44f 6200 	mov.w	r2, #2048	@ 0x800
  SdramTiming.ExitSelfRefreshDelay = 7;
90004030:	930d      	str	r3, [sp, #52]	@ 0x34
  SdramTiming.RowCycleDelay = 7;
90004032:	930f      	str	r3, [sp, #60]	@ 0x3c
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90004034:	4b3b      	ldr	r3, [pc, #236]	@ (90004124 <main+0x52c>)
  hsdram2.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
90004036:	6202      	str	r2, [r0, #32]
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90004038:	6003      	str	r3, [r0, #0]
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
9000403a:	2310      	movs	r3, #16
  SdramTiming.RCDDelay = 2;
9000403c:	e9cd aa11 	strd	sl, sl, [sp, #68]	@ 0x44
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90004040:	6103      	str	r3, [r0, #16]
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90004042:	f009 fde9 	bl	9000dc18 <HAL_SDRAM_Init>
90004046:	4604      	mov	r4, r0
90004048:	2800      	cmp	r0, #0
9000404a:	d163      	bne.n	90004114 <main+0x51c>
  FMC_Bank1_R->BTCR[0] &= ~FMC_BCRx_MBKEN;
9000404c:	4a36      	ldr	r2, [pc, #216]	@ (90004128 <main+0x530>)
9000404e:	6813      	ldr	r3, [r2, #0]
90004050:	f023 0301 	bic.w	r3, r3, #1
90004054:	6013      	str	r3, [r2, #0]
  BSP_SDRAM_DeInit(0);
90004056:	f003 fdf7 	bl	90007c48 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init(0) != BSP_ERROR_NONE)
9000405a:	4620      	mov	r0, r4
9000405c:	f003 fe3e 	bl	90007cdc <BSP_SDRAM_Init>
90004060:	2800      	cmp	r0, #0
90004062:	d157      	bne.n	90004114 <main+0x51c>
  MX_LIBJPEG_Init();
90004064:	f7fc fd60 	bl	90000b28 <MX_LIBJPEG_Init>
  hjpeg.Instance = JPEG;
90004068:	4b30      	ldr	r3, [pc, #192]	@ (9000412c <main+0x534>)
9000406a:	4831      	ldr	r0, [pc, #196]	@ (90004130 <main+0x538>)
9000406c:	6003      	str	r3, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
9000406e:	f006 f99d 	bl	9000a3ac <HAL_JPEG_Init>
90004072:	4603      	mov	r3, r0
90004074:	2800      	cmp	r0, #0
90004076:	d14d      	bne.n	90004114 <main+0x51c>
  hcrc.Instance = CRC;
90004078:	482e      	ldr	r0, [pc, #184]	@ (90004134 <main+0x53c>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
9000407a:	8083      	strh	r3, [r0, #4]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
9000407c:	6206      	str	r6, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
9000407e:	e9c0 3305 	strd	r3, r3, [r0, #20]
  hcrc.Instance = CRC;
90004082:	4b2d      	ldr	r3, [pc, #180]	@ (90004138 <main+0x540>)
90004084:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
90004086:	f004 f957 	bl	90008338 <HAL_CRC_Init>
9000408a:	4603      	mov	r3, r0
9000408c:	2800      	cmp	r0, #0
9000408e:	d141      	bne.n	90004114 <main+0x51c>
  huart1.Instance = USART1;
90004090:	4c2a      	ldr	r4, [pc, #168]	@ (9000413c <main+0x544>)
  huart1.Init.Mode = UART_MODE_TX_RX;
90004092:	220c      	movs	r2, #12
  huart1.Instance = USART1;
90004094:	492a      	ldr	r1, [pc, #168]	@ (90004140 <main+0x548>)
  huart1.Init.WordLength = UART_WORDLENGTH_9B;
90004096:	60a7      	str	r7, [r4, #8]
  huart1.Instance = USART1;
90004098:	6021      	str	r1, [r4, #0]
  huart1.Init.BaudRate = 9600;
9000409a:	f44f 5116 	mov.w	r1, #9600	@ 0x2580
  huart1.Init.Parity = UART_PARITY_EVEN;
9000409e:	e9c4 0503 	strd	r0, r5, [r4, #12]
  if (HAL_UART_Init(&huart1) != HAL_OK)
900040a2:	4620      	mov	r0, r4
  huart1.Init.BaudRate = 9600;
900040a4:	6061      	str	r1, [r4, #4]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
900040a6:	e9c4 2305 	strd	r2, r3, [r4, #20]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
900040aa:	e9c4 3307 	strd	r3, r3, [r4, #28]
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
900040ae:	e9c4 3309 	strd	r3, r3, [r4, #36]	@ 0x24
  if (HAL_UART_Init(&huart1) != HAL_OK)
900040b2:	f00b f9a7 	bl	9000f404 <HAL_UART_Init>
900040b6:	4601      	mov	r1, r0
900040b8:	bb60      	cbnz	r0, 90004114 <main+0x51c>
  if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
900040ba:	4620      	mov	r0, r4
900040bc:	f00b f9fa 	bl	9000f4b4 <HAL_UARTEx_SetTxFifoThreshold>
900040c0:	bb40      	cbnz	r0, 90004114 <main+0x51c>
  if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
900040c2:	2100      	movs	r1, #0
900040c4:	4620      	mov	r0, r4
900040c6:	f00b fa37 	bl	9000f538 <HAL_UARTEx_SetRxFifoThreshold>
900040ca:	bb18      	cbnz	r0, 90004114 <main+0x51c>
  if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
900040cc:	4620      	mov	r0, r4
900040ce:	f00b f9d3 	bl	9000f478 <HAL_UARTEx_DisableFifoMode>
900040d2:	4604      	mov	r4, r0
900040d4:	b9f0      	cbnz	r0, 90004114 <main+0x51c>
  MX_TouchGFX_Init();
900040d6:	f7fc fd3d 	bl	90000b54 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
900040da:	f7fc fd39 	bl	90000b50 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
900040de:	f00b fb27 	bl	9000f730 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
900040e2:	4a18      	ldr	r2, [pc, #96]	@ (90004144 <main+0x54c>)
900040e4:	4621      	mov	r1, r4
900040e6:	4818      	ldr	r0, [pc, #96]	@ (90004148 <main+0x550>)
900040e8:	f00b fb52 	bl	9000f790 <osThreadNew>
900040ec:	4b17      	ldr	r3, [pc, #92]	@ (9000414c <main+0x554>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
900040ee:	4a18      	ldr	r2, [pc, #96]	@ (90004150 <main+0x558>)
900040f0:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
900040f2:	6018      	str	r0, [r3, #0]
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
900040f4:	4817      	ldr	r0, [pc, #92]	@ (90004154 <main+0x55c>)
900040f6:	f00b fb4b 	bl	9000f790 <osThreadNew>
900040fa:	4b17      	ldr	r3, [pc, #92]	@ (90004158 <main+0x560>)
900040fc:	4605      	mov	r5, r0
  UARTHandle = osThreadNew(Get_TC_USART, NULL, &UARTTask_attributes);
900040fe:	4a17      	ldr	r2, [pc, #92]	@ (9000415c <main+0x564>)
90004100:	4621      	mov	r1, r4
90004102:	4817      	ldr	r0, [pc, #92]	@ (90004160 <main+0x568>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90004104:	601d      	str	r5, [r3, #0]
  UARTHandle = osThreadNew(Get_TC_USART, NULL, &UARTTask_attributes);
90004106:	f00b fb43 	bl	9000f790 <osThreadNew>
9000410a:	4b16      	ldr	r3, [pc, #88]	@ (90004164 <main+0x56c>)
9000410c:	6018      	str	r0, [r3, #0]
  osKernelStart();
9000410e:	f00b fb21 	bl	9000f754 <osKernelStart>
  while (1)
90004112:	e7fe      	b.n	90004112 <main+0x51a>
    Error_Handler();
90004114:	f7ff fcfa 	bl	90003b0c <Error_Handler>
90004118:	24007970 	.word	0x24007970
9000411c:	52001000 	.word	0x52001000
90004120:	240076d0 	.word	0x240076d0
90004124:	52004140 	.word	0x52004140
90004128:	52004000 	.word	0x52004000
9000412c:	52003000 	.word	0x52003000
90004130:	24007918 	.word	0x24007918
90004134:	240079d8 	.word	0x240079d8
90004138:	58024c00 	.word	0x58024c00
9000413c:	24007704 	.word	0x24007704
90004140:	40011000 	.word	0x40011000
90004144:	90030724 	.word	0x90030724
90004148:	90003aed 	.word	0x90003aed
9000414c:	240076cc 	.word	0x240076cc
90004150:	90030700 	.word	0x90030700
90004154:	90000b65 	.word	0x90000b65
90004158:	240076c8 	.word	0x240076c8
9000415c:	900306dc 	.word	0x900306dc
90004160:	900039cd 	.word	0x900039cd
90004164:	240076c4 	.word	0x240076c4

90004168 <HAL_MspInit>:

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
90004168:	4b0b      	ldr	r3, [pc, #44]	@ (90004198 <HAL_MspInit+0x30>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
9000416a:	2200      	movs	r2, #0
9000416c:	210f      	movs	r1, #15
9000416e:	f06f 0001 	mvn.w	r0, #1
{
90004172:	b410      	push	{r4}
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90004174:	f8d3 40f4 	ldr.w	r4, [r3, #244]	@ 0xf4
{
90004178:	b083      	sub	sp, #12
  __HAL_RCC_SYSCFG_CLK_ENABLE();
9000417a:	f044 0402 	orr.w	r4, r4, #2
9000417e:	f8c3 40f4 	str.w	r4, [r3, #244]	@ 0xf4
90004182:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
90004186:	f003 0302 	and.w	r3, r3, #2
9000418a:	9301      	str	r3, [sp, #4]
9000418c:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
9000418e:	b003      	add	sp, #12
90004190:	f85d 4b04 	ldr.w	r4, [sp], #4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90004194:	f004 b826 	b.w	900081e4 <HAL_NVIC_SetPriority>
90004198:	58024400 	.word	0x58024400

9000419c <HAL_CRC_MspInit>:
  * @param hcrc: CRC handle pointer
  * @retval None
  */
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
9000419c:	4b0a      	ldr	r3, [pc, #40]	@ (900041c8 <HAL_CRC_MspInit+0x2c>)
9000419e:	6802      	ldr	r2, [r0, #0]
900041a0:	429a      	cmp	r2, r3
900041a2:	d000      	beq.n	900041a6 <HAL_CRC_MspInit+0xa>
900041a4:	4770      	bx	lr
  {
    /* USER CODE BEGIN CRC_MspInit 0 */

    /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
900041a6:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
{
900041aa:	b082      	sub	sp, #8
    __HAL_RCC_CRC_CLK_ENABLE();
900041ac:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900041b0:	f442 2200 	orr.w	r2, r2, #524288	@ 0x80000
900041b4:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900041b8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
900041bc:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
900041c0:	9301      	str	r3, [sp, #4]
900041c2:	9b01      	ldr	r3, [sp, #4]

    /* USER CODE END CRC_MspInit 1 */

  }

}
900041c4:	b002      	add	sp, #8
900041c6:	4770      	bx	lr
900041c8:	58024c00 	.word	0x58024c00

900041cc <HAL_DMA2D_MspInit>:
  * @param hdma2d: DMA2D handle pointer
  * @retval None
  */
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
900041cc:	4b0f      	ldr	r3, [pc, #60]	@ (9000420c <HAL_DMA2D_MspInit+0x40>)
900041ce:	6802      	ldr	r2, [r0, #0]
900041d0:	429a      	cmp	r2, r3
900041d2:	d000      	beq.n	900041d6 <HAL_DMA2D_MspInit+0xa>
900041d4:	4770      	bx	lr
  {
    /* USER CODE BEGIN DMA2D_MspInit 0 */

    /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
900041d6:	4b0e      	ldr	r3, [pc, #56]	@ (90004210 <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
900041d8:	2200      	movs	r2, #0
900041da:	2105      	movs	r1, #5
900041dc:	205a      	movs	r0, #90	@ 0x5a
{
900041de:	b510      	push	{r4, lr}
    __HAL_RCC_DMA2D_CLK_ENABLE();
900041e0:	f8d3 40d4 	ldr.w	r4, [r3, #212]	@ 0xd4
{
900041e4:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
900041e6:	f044 0410 	orr.w	r4, r4, #16
900041ea:	f8c3 40d4 	str.w	r4, [r3, #212]	@ 0xd4
900041ee:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
900041f2:	f003 0310 	and.w	r3, r3, #16
900041f6:	9301      	str	r3, [sp, #4]
900041f8:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
900041fa:	f003 fff3 	bl	900081e4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
900041fe:	205a      	movs	r0, #90	@ 0x5a

    /* USER CODE END DMA2D_MspInit 1 */

  }

}
90004200:	b002      	add	sp, #8
90004202:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90004206:	f004 b829 	b.w	9000825c <HAL_NVIC_EnableIRQ>
9000420a:	bf00      	nop
9000420c:	52001000 	.word	0x52001000
90004210:	58024400 	.word	0x58024400

90004214 <HAL_JPEG_MspInit>:
  * @param hjpeg: JPEG handle pointer
  * @retval None
  */
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
  if(hjpeg->Instance==JPEG)
90004214:	4b3f      	ldr	r3, [pc, #252]	@ (90004314 <HAL_JPEG_MspInit+0x100>)
90004216:	6802      	ldr	r2, [r0, #0]
90004218:	429a      	cmp	r2, r3
9000421a:	d000      	beq.n	9000421e <HAL_JPEG_MspInit+0xa>
9000421c:	4770      	bx	lr
{
9000421e:	b570      	push	{r4, r5, r6, lr}
    /* USER CODE BEGIN JPEG_MspInit 0 */
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
    /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
90004220:	4b3d      	ldr	r3, [pc, #244]	@ (90004318 <HAL_JPEG_MspInit+0x104>)
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
90004222:	2211      	movs	r2, #17
90004224:	4e3d      	ldr	r6, [pc, #244]	@ (9000431c <HAL_JPEG_MspInit+0x108>)
{
90004226:	b082      	sub	sp, #8
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90004228:	4d3d      	ldr	r5, [pc, #244]	@ (90004320 <HAL_JPEG_MspInit+0x10c>)
9000422a:	4604      	mov	r4, r0
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
9000422c:	6072      	str	r2, [r6, #4]
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
    hmdma_jpeg_infifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
9000422e:	4630      	mov	r0, r6
    __HAL_RCC_JPEG_CLK_ENABLE();
90004230:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90004234:	493b      	ldr	r1, [pc, #236]	@ (90004324 <HAL_JPEG_MspInit+0x110>)
    __HAL_RCC_JPEG_CLK_ENABLE();
90004236:	f042 0220 	orr.w	r2, r2, #32
9000423a:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
9000423e:	2280      	movs	r2, #128	@ 0x80
    __HAL_RCC_JPEG_CLK_ENABLE();
90004240:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
90004244:	6232      	str	r2, [r6, #32]
    __HAL_RCC_JPEG_CLK_ENABLE();
90004246:	f003 0320 	and.w	r3, r3, #32
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
9000424a:	6031      	str	r1, [r6, #0]
    __HAL_RCC_JPEG_CLK_ENABLE();
9000424c:	9301      	str	r3, [sp, #4]
    hmdma_jpeg_infifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
9000424e:	2300      	movs	r3, #0
    __HAL_RCC_JPEG_CLK_ENABLE();
90004250:	9901      	ldr	r1, [sp, #4]
    hmdma_jpeg_infifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
90004252:	6133      	str	r3, [r6, #16]
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
90004254:	e9c6 3202 	strd	r3, r2, [r6, #8]
    hmdma_jpeg_infifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90004258:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
9000425c:	6272      	str	r2, [r6, #36]	@ 0x24
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
9000425e:	2220      	movs	r2, #32
    hmdma_jpeg_infifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_BYTE;
90004260:	e9c6 3306 	strd	r3, r3, [r6, #24]
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
90004264:	e9c6 330d 	strd	r3, r3, [r6, #52]	@ 0x34
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90004268:	62b2      	str	r2, [r6, #40]	@ 0x28
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
9000426a:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
9000426e:	f44f 42a0 	mov.w	r2, #20480	@ 0x5000
90004272:	e9c6 230b 	strd	r2, r3, [r6, #44]	@ 0x2c
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90004276:	2313      	movs	r3, #19
90004278:	606b      	str	r3, [r5, #4]
    hmdma_jpeg_infifo_th.Init.SourceInc = MDMA_SRC_INC_BYTE;
9000427a:	2302      	movs	r3, #2
9000427c:	6173      	str	r3, [r6, #20]
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
9000427e:	f007 fae7 	bl	9000b850 <HAL_MDMA_Init>
90004282:	2800      	cmp	r0, #0
90004284:	d13a      	bne.n	900042fc <HAL_JPEG_MspInit+0xe8>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_infifo_th, 0, 0) != HAL_OK)
90004286:	2200      	movs	r2, #0
90004288:	4824      	ldr	r0, [pc, #144]	@ (9000431c <HAL_JPEG_MspInit+0x108>)
9000428a:	4611      	mov	r1, r2
9000428c:	f007 fb7e 	bl	9000b98c <HAL_MDMA_ConfigPostRequestMask>
90004290:	2800      	cmp	r0, #0
90004292:	d13c      	bne.n	9000430e <HAL_JPEG_MspInit+0xfa>
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
    hmdma_jpeg_outfifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90004294:	2220      	movs	r2, #32
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90004296:	2300      	movs	r3, #0
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90004298:	6326      	str	r6, [r4, #48]	@ 0x30
    hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
9000429a:	2013      	movs	r0, #19
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
9000429c:	61ea      	str	r2, [r5, #28]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
    hmdma_jpeg_outfifo_th.Init.BufferTransferLength = 32;
9000429e:	62aa      	str	r2, [r5, #40]	@ 0x28
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
900042a0:	f44f 3220 	mov.w	r2, #163840	@ 0x28000
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
900042a4:	4920      	ldr	r1, [pc, #128]	@ (90004328 <HAL_JPEG_MspInit+0x114>)
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
900042a6:	60ab      	str	r3, [r5, #8]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
900042a8:	622b      	str	r3, [r5, #32]
    hmdma_jpeg_outfifo_th.Init.SourceBlockAddressOffset = 0;
900042aa:	63ab      	str	r3, [r5, #56]	@ 0x38
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
900042ac:	6434      	str	r4, [r6, #64]	@ 0x40
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
900042ae:	e9c5 230c 	strd	r2, r3, [r5, #48]	@ 0x30
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
900042b2:	e9c5 3304 	strd	r3, r3, [r5, #16]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
900042b6:	2308      	movs	r3, #8
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
900042b8:	22c0      	movs	r2, #192	@ 0xc0
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
900042ba:	e9c5 1000 	strd	r1, r0, [r5]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
900042be:	61ab      	str	r3, [r5, #24]
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
900042c0:	f44f 41a0 	mov.w	r1, #20480	@ 0x5000
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900042c4:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
    hmdma_jpeg_outfifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
900042c8:	4815      	ldr	r0, [pc, #84]	@ (90004320 <HAL_JPEG_MspInit+0x10c>)
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
900042ca:	62e9      	str	r1, [r5, #44]	@ 0x2c
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
900042cc:	60ea      	str	r2, [r5, #12]
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900042ce:	626b      	str	r3, [r5, #36]	@ 0x24
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
900042d0:	f007 fabe 	bl	9000b850 <HAL_MDMA_Init>
900042d4:	b9c0      	cbnz	r0, 90004308 <HAL_JPEG_MspInit+0xf4>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_outfifo_th, 0, 0) != HAL_OK)
900042d6:	2200      	movs	r2, #0
900042d8:	4811      	ldr	r0, [pc, #68]	@ (90004320 <HAL_JPEG_MspInit+0x10c>)
900042da:	4611      	mov	r1, r2
900042dc:	f007 fb56 	bl	9000b98c <HAL_MDMA_ConfigPostRequestMask>
900042e0:	b978      	cbnz	r0, 90004302 <HAL_JPEG_MspInit+0xee>
    {
      Error_Handler();
    }

    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
900042e2:	6365      	str	r5, [r4, #52]	@ 0x34

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
900042e4:	2200      	movs	r2, #0
900042e6:	2105      	movs	r1, #5
900042e8:	2079      	movs	r0, #121	@ 0x79
    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
900042ea:	642c      	str	r4, [r5, #64]	@ 0x40
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
900042ec:	f003 ff7a 	bl	900081e4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
900042f0:	2079      	movs	r0, #121	@ 0x79

    /* USER CODE END JPEG_MspInit 1 */

  }

}
900042f2:	b002      	add	sp, #8
900042f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
900042f8:	f003 bfb0 	b.w	9000825c <HAL_NVIC_EnableIRQ>
      Error_Handler();
900042fc:	f7ff fc06 	bl	90003b0c <Error_Handler>
90004300:	e7c1      	b.n	90004286 <HAL_JPEG_MspInit+0x72>
      Error_Handler();
90004302:	f7ff fc03 	bl	90003b0c <Error_Handler>
90004306:	e7ec      	b.n	900042e2 <HAL_JPEG_MspInit+0xce>
      Error_Handler();
90004308:	f7ff fc00 	bl	90003b0c <Error_Handler>
9000430c:	e7e3      	b.n	900042d6 <HAL_JPEG_MspInit+0xc2>
      Error_Handler();
9000430e:	f7ff fbfd 	bl	90003b0c <Error_Handler>
90004312:	e7bf      	b.n	90004294 <HAL_JPEG_MspInit+0x80>
90004314:	52003000 	.word	0x52003000
90004318:	58024400 	.word	0x58024400
9000431c:	240078ac 	.word	0x240078ac
90004320:	24007840 	.word	0x24007840
90004324:	52000200 	.word	0x52000200
90004328:	520001c0 	.word	0x520001c0

9000432c <HAL_LTDC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hltdc: LTDC handle pointer
  * @retval None
  */
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
9000432c:	b570      	push	{r4, r5, r6, lr}
9000432e:	b0ba      	sub	sp, #232	@ 0xe8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90004330:	2100      	movs	r1, #0
{
90004332:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90004334:	22c0      	movs	r2, #192	@ 0xc0
90004336:	a80a      	add	r0, sp, #40	@ 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90004338:	9109      	str	r1, [sp, #36]	@ 0x24
9000433a:	e9cd 1105 	strd	r1, r1, [sp, #20]
9000433e:	e9cd 1107 	strd	r1, r1, [sp, #28]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90004342:	f029 fae7 	bl	9002d914 <memset>
  if(hltdc->Instance==LTDC)
90004346:	4b4a      	ldr	r3, [pc, #296]	@ (90004470 <HAL_LTDC_MspInit+0x144>)
90004348:	6822      	ldr	r2, [r4, #0]
9000434a:	429a      	cmp	r2, r3
9000434c:	d001      	beq.n	90004352 <HAL_LTDC_MspInit+0x26>

    /* USER CODE END LTDC_MspInit 1 */

  }

}
9000434e:	b03a      	add	sp, #232	@ 0xe8
90004350:	bd70      	pop	{r4, r5, r6, pc}
    PeriphClkInitStruct.PLL3.PLL3P = 2;
90004352:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90004354:	2205      	movs	r2, #5
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
90004356:	f04f 5400 	mov.w	r4, #536870912	@ 0x20000000
9000435a:	2500      	movs	r5, #0
    PeriphClkInitStruct.PLL3.PLL3N = 160;
9000435c:	21a0      	movs	r1, #160	@ 0xa0
    PeriphClkInitStruct.PLL3.PLL3P = 2;
9000435e:	9316      	str	r3, [sp, #88]	@ 0x58
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90004360:	9214      	str	r2, [sp, #80]	@ 0x50
    PeriphClkInitStruct.PLL3.PLL3R = 88;
90004362:	2258      	movs	r2, #88	@ 0x58
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
90004364:	9317      	str	r3, [sp, #92]	@ 0x5c
    PeriphClkInitStruct.PLL3.PLL3R = 88;
90004366:	f44f 6300 	mov.w	r3, #2048	@ 0x800
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000436a:	a80a      	add	r0, sp, #40	@ 0x28
    PeriphClkInitStruct.PLL3.PLL3N = 160;
9000436c:	9115      	str	r1, [sp, #84]	@ 0x54
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
9000436e:	e9cd 450a 	strd	r4, r5, [sp, #40]	@ 0x28
    PeriphClkInitStruct.PLL3.PLL3R = 88;
90004372:	e9cd 2318 	strd	r2, r3, [sp, #96]	@ 0x60
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90004376:	f008 fbc5 	bl	9000cb04 <HAL_RCCEx_PeriphCLKConfig>
9000437a:	2800      	cmp	r0, #0
9000437c:	d174      	bne.n	90004468 <HAL_LTDC_MspInit+0x13c>
    __HAL_RCC_LTDC_CLK_ENABLE();
9000437e:	4b3d      	ldr	r3, [pc, #244]	@ (90004474 <HAL_LTDC_MspInit+0x148>)
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
90004380:	21fc      	movs	r1, #252	@ 0xfc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90004382:	2402      	movs	r4, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90004384:	2500      	movs	r5, #0
    __HAL_RCC_LTDC_CLK_ENABLE();
90004386:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
9000438a:	260e      	movs	r6, #14
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
9000438c:	483a      	ldr	r0, [pc, #232]	@ (90004478 <HAL_LTDC_MspInit+0x14c>)
    __HAL_RCC_LTDC_CLK_ENABLE();
9000438e:	f042 0208 	orr.w	r2, r2, #8
90004392:	f8c3 20e4 	str.w	r2, [r3, #228]	@ 0xe4
90004396:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
9000439a:	f002 0208 	and.w	r2, r2, #8
9000439e:	9200      	str	r2, [sp, #0]
900043a0:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOK_CLK_ENABLE();
900043a2:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900043a6:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
900043aa:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900043ae:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900043b2:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
900043b6:	9201      	str	r2, [sp, #4]
900043b8:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
900043ba:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900043be:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
900043c2:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900043c6:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900043ca:	f402 7280 	and.w	r2, r2, #256	@ 0x100
900043ce:	9202      	str	r2, [sp, #8]
900043d0:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
900043d2:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900043d6:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
900043da:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900043de:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900043e2:	f402 7200 	and.w	r2, r2, #512	@ 0x200
900043e6:	9203      	str	r2, [sp, #12]
900043e8:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOH_CLK_ENABLE();
900043ea:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900043ee:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
900043f2:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900043f6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
900043fa:	9105      	str	r1, [sp, #20]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
900043fc:	a905      	add	r1, sp, #20
    __HAL_RCC_GPIOH_CLK_ENABLE();
900043fe:	f003 0380 	and.w	r3, r3, #128	@ 0x80
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90004402:	9406      	str	r4, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90004404:	9609      	str	r6, [sp, #36]	@ 0x24
    __HAL_RCC_GPIOH_CLK_ENABLE();
90004406:	9304      	str	r3, [sp, #16]
90004408:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
9000440a:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
9000440e:	f004 fbc9 	bl	90008ba4 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
90004412:	f24d 2303 	movw	r3, #53763	@ 0xd203
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90004416:	a905      	add	r1, sp, #20
90004418:	4818      	ldr	r0, [pc, #96]	@ (9000447c <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
9000441a:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
9000441c:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90004420:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90004424:	f004 fbbe 	bl	90008ba4 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90004428:	f64f 73fb 	movw	r3, #65531	@ 0xfffb
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
9000442c:	a905      	add	r1, sp, #20
9000442e:	4814      	ldr	r0, [pc, #80]	@ (90004480 <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90004430:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90004432:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90004436:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
9000443a:	f004 fbb3 	bl	90008ba4 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
9000443e:	f44f 7300 	mov.w	r3, #512	@ 0x200
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90004442:	a905      	add	r1, sp, #20
90004444:	480f      	ldr	r0, [pc, #60]	@ (90004484 <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90004446:	9609      	str	r6, [sp, #36]	@ 0x24
    GPIO_InitStruct.Pin = GPIO_PIN_9;
90004448:	e9cd 3405 	strd	r3, r4, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
9000444c:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90004450:	f004 fba8 	bl	90008ba4 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
90004454:	462a      	mov	r2, r5
90004456:	2105      	movs	r1, #5
90004458:	2058      	movs	r0, #88	@ 0x58
9000445a:	f003 fec3 	bl	900081e4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
9000445e:	2058      	movs	r0, #88	@ 0x58
90004460:	f003 fefc 	bl	9000825c <HAL_NVIC_EnableIRQ>
}
90004464:	b03a      	add	sp, #232	@ 0xe8
90004466:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
90004468:	f7ff fb50 	bl	90003b0c <Error_Handler>
9000446c:	e787      	b.n	9000437e <HAL_LTDC_MspInit+0x52>
9000446e:	bf00      	nop
90004470:	50001000 	.word	0x50001000
90004474:	58024400 	.word	0x58024400
90004478:	58022800 	.word	0x58022800
9000447c:	58022000 	.word	0x58022000
90004480:	58022400 	.word	0x58022400
90004484:	58021c00 	.word	0x58021c00

90004488 <HAL_UART_MspInit>:
  * This function configures the hardware resources used in this example
  * @param huart: UART handle pointer
  * @retval None
  */
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
90004488:	b510      	push	{r4, lr}
9000448a:	b0b8      	sub	sp, #224	@ 0xe0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
9000448c:	2100      	movs	r1, #0
{
9000448e:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90004490:	22c0      	movs	r2, #192	@ 0xc0
90004492:	a808      	add	r0, sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90004494:	9106      	str	r1, [sp, #24]
90004496:	e9cd 1102 	strd	r1, r1, [sp, #8]
9000449a:	e9cd 1104 	strd	r1, r1, [sp, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
9000449e:	f029 fa39 	bl	9002d914 <memset>
  if(huart->Instance==USART1)
900044a2:	4b25      	ldr	r3, [pc, #148]	@ (90004538 <HAL_UART_MspInit+0xb0>)
900044a4:	6822      	ldr	r2, [r4, #0]
900044a6:	429a      	cmp	r2, r3
900044a8:	d001      	beq.n	900044ae <HAL_UART_MspInit+0x26>

    /* USER CODE END USART1_MspInit 1 */

  }

}
900044aa:	b038      	add	sp, #224	@ 0xe0
900044ac:	bd10      	pop	{r4, pc}
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
900044ae:	2201      	movs	r2, #1
900044b0:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900044b2:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
900044b4:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900044b8:	f008 fb24 	bl	9000cb04 <HAL_RCCEx_PeriphCLKConfig>
900044bc:	bb80      	cbnz	r0, 90004520 <HAL_UART_MspInit+0x98>
    __HAL_RCC_USART1_CLK_ENABLE();
900044be:	4b1f      	ldr	r3, [pc, #124]	@ (9000453c <HAL_UART_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
900044c0:	2407      	movs	r4, #7
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
900044c2:	a902      	add	r1, sp, #8
900044c4:	481e      	ldr	r0, [pc, #120]	@ (90004540 <HAL_UART_MspInit+0xb8>)
    __HAL_RCC_USART1_CLK_ENABLE();
900044c6:	f8d3 20f0 	ldr.w	r2, [r3, #240]	@ 0xf0
900044ca:	f042 0210 	orr.w	r2, r2, #16
900044ce:	f8c3 20f0 	str.w	r2, [r3, #240]	@ 0xf0
900044d2:	f8d3 20f0 	ldr.w	r2, [r3, #240]	@ 0xf0
900044d6:	f002 0210 	and.w	r2, r2, #16
900044da:	9200      	str	r2, [sp, #0]
900044dc:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
900044de:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900044e2:	f042 0202 	orr.w	r2, r2, #2
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
900044e6:	ed9f 7b10 	vldr	d7, [pc, #64]	@ 90004528 <HAL_UART_MspInit+0xa0>
    __HAL_RCC_GPIOB_CLK_ENABLE();
900044ea:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900044ee:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
900044f2:	9406      	str	r4, [sp, #24]
    __HAL_RCC_GPIOB_CLK_ENABLE();
900044f4:	f003 0302 	and.w	r3, r3, #2
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
900044f8:	ed8d 7b02 	vstr	d7, [sp, #8]
900044fc:	ed9f 7b0c 	vldr	d7, [pc, #48]	@ 90004530 <HAL_UART_MspInit+0xa8>
    __HAL_RCC_GPIOB_CLK_ENABLE();
90004500:	9301      	str	r3, [sp, #4]
90004502:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
90004504:	ed8d 7b04 	vstr	d7, [sp, #16]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90004508:	f004 fb4c 	bl	90008ba4 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART1_IRQn, 5, 0);
9000450c:	2200      	movs	r2, #0
9000450e:	2105      	movs	r1, #5
90004510:	2025      	movs	r0, #37	@ 0x25
90004512:	f003 fe67 	bl	900081e4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
90004516:	2025      	movs	r0, #37	@ 0x25
90004518:	f003 fea0 	bl	9000825c <HAL_NVIC_EnableIRQ>
}
9000451c:	b038      	add	sp, #224	@ 0xe0
9000451e:	bd10      	pop	{r4, pc}
      Error_Handler();
90004520:	f7ff faf4 	bl	90003b0c <Error_Handler>
90004524:	e7cb      	b.n	900044be <HAL_UART_MspInit+0x36>
90004526:	bf00      	nop
90004528:	000000c0 	.word	0x000000c0
9000452c:	00000002 	.word	0x00000002
	...
90004538:	40011000 	.word	0x40011000
9000453c:	58024400 	.word	0x58024400
90004540:	58020400 	.word	0x58020400

90004544 <HAL_SDRAM_MspInit>:
static void HAL_FMC_MspInit(void){
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
  if (FMC_Initialized) {
90004544:	4836      	ldr	r0, [pc, #216]	@ (90004620 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitTypeDef GPIO_InitStruct ={0};
90004546:	2300      	movs	r3, #0
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
90004548:	b5d0      	push	{r4, r6, r7, lr}
  if (FMC_Initialized) {
9000454a:	6801      	ldr	r1, [r0, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
9000454c:	b0b8      	sub	sp, #224	@ 0xe0
  GPIO_InitTypeDef GPIO_InitStruct ={0};
9000454e:	e9cd 3302 	strd	r3, r3, [sp, #8]
90004552:	e9cd 3304 	strd	r3, r3, [sp, #16]
90004556:	9306      	str	r3, [sp, #24]
  if (FMC_Initialized) {
90004558:	b109      	cbz	r1, 9000455e <HAL_SDRAM_MspInit+0x1a>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
9000455a:	b038      	add	sp, #224	@ 0xe0
9000455c:	bdd0      	pop	{r4, r6, r7, pc}
  FMC_Initialized = 1;
9000455e:	2301      	movs	r3, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90004560:	22b8      	movs	r2, #184	@ 0xb8
  FMC_Initialized = 1;
90004562:	6003      	str	r3, [r0, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90004564:	a80a      	add	r0, sp, #40	@ 0x28
90004566:	f029 f9d5 	bl	9002d914 <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
9000456a:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
9000456e:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90004570:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
90004572:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90004576:	f008 fac5 	bl	9000cb04 <HAL_RCCEx_PeriphCLKConfig>
9000457a:	2800      	cmp	r0, #0
9000457c:	d14c      	bne.n	90004618 <HAL_SDRAM_MspInit+0xd4>
  __HAL_RCC_FMC_CLK_ENABLE();
9000457e:	4b29      	ldr	r3, [pc, #164]	@ (90004624 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90004580:	f64f 7083 	movw	r0, #65411	@ 0xff83
90004584:	2102      	movs	r1, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004586:	240c      	movs	r4, #12
  __HAL_RCC_FMC_CLK_ENABLE();
90004588:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000458c:	2600      	movs	r6, #0
9000458e:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
90004590:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
90004594:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
90004598:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000459c:	9406      	str	r4, [sp, #24]
  __HAL_RCC_FMC_CLK_ENABLE();
9000459e:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900045a2:	e9cd 0102 	strd	r0, r1, [sp, #8]
  __HAL_RCC_FMC_CLK_ENABLE();
900045a6:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900045a8:	a902      	add	r1, sp, #8
900045aa:	481f      	ldr	r0, [pc, #124]	@ (90004628 <HAL_SDRAM_MspInit+0xe4>)
  __HAL_RCC_FMC_CLK_ENABLE();
900045ac:	9b01      	ldr	r3, [sp, #4]
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900045ae:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900045b2:	f004 faf7 	bl	90008ba4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900045b6:	f248 1233 	movw	r2, #33075	@ 0x8133
900045ba:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
900045bc:	a902      	add	r1, sp, #8
900045be:	481b      	ldr	r0, [pc, #108]	@ (9000462c <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900045c0:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900045c2:	e9cd 2302 	strd	r2, r3, [sp, #8]
900045c6:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
900045ca:	f004 faeb 	bl	90008ba4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
900045ce:	f24c 7203 	movw	r2, #50947	@ 0xc703
900045d2:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
900045d4:	a902      	add	r1, sp, #8
900045d6:	4816      	ldr	r0, [pc, #88]	@ (90004630 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900045d8:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
900045da:	e9cd 2302 	strd	r2, r3, [sp, #8]
900045de:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
900045e2:	f004 fadf 	bl	90008ba4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
900045e6:	f64f 023f 	movw	r2, #63551	@ 0xf83f
900045ea:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
900045ec:	a902      	add	r1, sp, #8
900045ee:	4811      	ldr	r0, [pc, #68]	@ (90004634 <HAL_SDRAM_MspInit+0xf0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900045f0:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
900045f2:	e9cd 2302 	strd	r2, r3, [sp, #8]
900045f6:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
900045fa:	f004 fad3 	bl	90008ba4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
900045fe:	22e0      	movs	r2, #224	@ 0xe0
90004600:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90004602:	a902      	add	r1, sp, #8
90004604:	480c      	ldr	r0, [pc, #48]	@ (90004638 <HAL_SDRAM_MspInit+0xf4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004606:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
90004608:	e9cd 6704 	strd	r6, r7, [sp, #16]
9000460c:	e9cd 2302 	strd	r2, r3, [sp, #8]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90004610:	f004 fac8 	bl	90008ba4 <HAL_GPIO_Init>
}
90004614:	b038      	add	sp, #224	@ 0xe0
90004616:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
90004618:	f7ff fa78 	bl	90003b0c <Error_Handler>
9000461c:	e7af      	b.n	9000457e <HAL_SDRAM_MspInit+0x3a>
9000461e:	bf00      	nop
90004620:	24007a00 	.word	0x24007a00
90004624:	58024400 	.word	0x58024400
90004628:	58021000 	.word	0x58021000
9000462c:	58021800 	.word	0x58021800
90004630:	58020c00 	.word	0x58020c00
90004634:	58021400 	.word	0x58021400
90004638:	58021c00 	.word	0x58021c00

9000463c <HAL_SDRAM_MspDeInit>:

static void HAL_FMC_MspDeInit(void){
  /* USER CODE BEGIN FMC_MspDeInit 0 */

  /* USER CODE END FMC_MspDeInit 0 */
  if (FMC_DeInitialized) {
9000463c:	4b13      	ldr	r3, [pc, #76]	@ (9000468c <HAL_SDRAM_MspDeInit+0x50>)
9000463e:	681a      	ldr	r2, [r3, #0]
90004640:	b102      	cbz	r2, 90004644 <HAL_SDRAM_MspDeInit+0x8>
90004642:	4770      	bx	lr
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
90004644:	b510      	push	{r4, lr}
  __HAL_RCC_FMC_CLK_DISABLE();
90004646:	4a12      	ldr	r2, [pc, #72]	@ (90004690 <HAL_SDRAM_MspDeInit+0x54>)
  FMC_DeInitialized = 1;
90004648:	2401      	movs	r4, #1
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000464a:	f64f 7183 	movw	r1, #65411	@ 0xff83
9000464e:	4811      	ldr	r0, [pc, #68]	@ (90004694 <HAL_SDRAM_MspDeInit+0x58>)
  FMC_DeInitialized = 1;
90004650:	601c      	str	r4, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
90004652:	f8d2 30d4 	ldr.w	r3, [r2, #212]	@ 0xd4
90004656:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9000465a:	f8c2 30d4 	str.w	r3, [r2, #212]	@ 0xd4
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000465e:	f004 fca7 	bl	90008fb0 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
90004662:	f248 1133 	movw	r1, #33075	@ 0x8133
90004666:	480c      	ldr	r0, [pc, #48]	@ (90004698 <HAL_SDRAM_MspDeInit+0x5c>)
90004668:	f004 fca2 	bl	90008fb0 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
9000466c:	f24c 7103 	movw	r1, #50947	@ 0xc703
90004670:	480a      	ldr	r0, [pc, #40]	@ (9000469c <HAL_SDRAM_MspDeInit+0x60>)
90004672:	f004 fc9d 	bl	90008fb0 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90004676:	f64f 013f 	movw	r1, #63551	@ 0xf83f
9000467a:	4809      	ldr	r0, [pc, #36]	@ (900046a0 <HAL_SDRAM_MspDeInit+0x64>)
9000467c:	f004 fc98 	bl	90008fb0 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
90004680:	21e0      	movs	r1, #224	@ 0xe0
90004682:	4808      	ldr	r0, [pc, #32]	@ (900046a4 <HAL_SDRAM_MspDeInit+0x68>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
90004684:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
90004688:	f004 bc92 	b.w	90008fb0 <HAL_GPIO_DeInit>
9000468c:	240079fc 	.word	0x240079fc
90004690:	58024400 	.word	0x58024400
90004694:	58021000 	.word	0x58021000
90004698:	58021800 	.word	0x58021800
9000469c:	58020c00 	.word	0x58020c00
900046a0:	58021400 	.word	0x58021400
900046a4:	58021c00 	.word	0x58021c00

900046a8 <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;
  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;

  /*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
900046a8:	280f      	cmp	r0, #15
900046aa:	d901      	bls.n	900046b0 <HAL_InitTick+0x8>
     HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
     uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
900046ac:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
900046ae:	4770      	bx	lr
{
900046b0:	b530      	push	{r4, r5, lr}
     HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
900046b2:	4601      	mov	r1, r0
{
900046b4:	b08b      	sub	sp, #44	@ 0x2c
     HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
900046b6:	2200      	movs	r2, #0
900046b8:	4604      	mov	r4, r0
900046ba:	2036      	movs	r0, #54	@ 0x36
900046bc:	f003 fd92 	bl	900081e4 <HAL_NVIC_SetPriority>
     HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
900046c0:	2036      	movs	r0, #54	@ 0x36
900046c2:	f003 fdcb 	bl	9000825c <HAL_NVIC_EnableIRQ>
  __HAL_RCC_TIM6_CLK_ENABLE();
900046c6:	4b1b      	ldr	r3, [pc, #108]	@ (90004734 <HAL_InitTick+0x8c>)
     uwTickPrio = TickPriority;
900046c8:	4a1b      	ldr	r2, [pc, #108]	@ (90004738 <HAL_InitTick+0x90>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
900046ca:	4669      	mov	r1, sp
900046cc:	a802      	add	r0, sp, #8
     uwTickPrio = TickPriority;
900046ce:	6014      	str	r4, [r2, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
900046d0:	f8d3 20e8 	ldr.w	r2, [r3, #232]	@ 0xe8
900046d4:	f042 0210 	orr.w	r2, r2, #16
900046d8:	f8c3 20e8 	str.w	r2, [r3, #232]	@ 0xe8
900046dc:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
900046e0:	f003 0310 	and.w	r3, r3, #16
900046e4:	9301      	str	r3, [sp, #4]
900046e6:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
900046e8:	f008 f900 	bl	9000c8ec <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
900046ec:	9b07      	ldr	r3, [sp, #28]
900046ee:	b9c3      	cbnz	r3, 90004722 <HAL_InitTick+0x7a>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
900046f0:	f008 f86c 	bl	9000c7cc <HAL_RCC_GetPCLK1Freq>
900046f4:	4603      	mov	r3, r0
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
900046f6:	4911      	ldr	r1, [pc, #68]	@ (9000473c <HAL_InitTick+0x94>)
  htim6.Init.ClockDivision = 0;
900046f8:	2200      	movs	r2, #0
  htim6.Instance = TIM6;
900046fa:	4c11      	ldr	r4, [pc, #68]	@ (90004740 <HAL_InitTick+0x98>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
900046fc:	fba1 1303 	umull	r1, r3, r1, r3
  htim6.Instance = TIM6;
90004700:	4d10      	ldr	r5, [pc, #64]	@ (90004744 <HAL_InitTick+0x9c>)
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90004702:	f240 31e7 	movw	r1, #999	@ 0x3e7
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90004706:	4620      	mov	r0, r4
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90004708:	0c9b      	lsrs	r3, r3, #18
  htim6.Instance = TIM6;
9000470a:	6025      	str	r5, [r4, #0]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
9000470c:	60a2      	str	r2, [r4, #8]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
9000470e:	3b01      	subs	r3, #1
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90004710:	e9c4 1203 	strd	r1, r2, [r4, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
90004714:	6063      	str	r3, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90004716:	f009 faf1 	bl	9000dcfc <HAL_TIM_Base_Init>
9000471a:	b130      	cbz	r0, 9000472a <HAL_InitTick+0x82>
    return HAL_ERROR;
9000471c:	2001      	movs	r0, #1
}
9000471e:	b00b      	add	sp, #44	@ 0x2c
90004720:	bd30      	pop	{r4, r5, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
90004722:	f008 f853 	bl	9000c7cc <HAL_RCC_GetPCLK1Freq>
90004726:	0043      	lsls	r3, r0, #1
90004728:	e7e5      	b.n	900046f6 <HAL_InitTick+0x4e>
    return HAL_TIM_Base_Start_IT(&htim6);
9000472a:	4620      	mov	r0, r4
9000472c:	f009 fb8c 	bl	9000de48 <HAL_TIM_Base_Start_IT>
90004730:	e7f5      	b.n	9000471e <HAL_InitTick+0x76>
90004732:	bf00      	nop
90004734:	58024400 	.word	0x58024400
90004738:	24000080 	.word	0x24000080
9000473c:	431bde83 	.word	0x431bde83
90004740:	24007a04 	.word	0x24007a04
90004744:	40001000 	.word	0x40001000

90004748 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
90004748:	4770      	bx	lr
9000474a:	bf00      	nop

9000474c <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
9000474c:	e7fe      	b.n	9000474c <HardFault_Handler>
9000474e:	bf00      	nop

90004750 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
90004750:	e7fe      	b.n	90004750 <MemManage_Handler>
90004752:	bf00      	nop

90004754 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
90004754:	e7fe      	b.n	90004754 <BusFault_Handler>
90004756:	bf00      	nop

90004758 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
90004758:	e7fe      	b.n	90004758 <UsageFault_Handler>
9000475a:	bf00      	nop

9000475c <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
9000475c:	4770      	bx	lr
9000475e:	bf00      	nop

90004760 <USART1_IRQHandler>:
void USART1_IRQHandler(void)
{
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
90004760:	4801      	ldr	r0, [pc, #4]	@ (90004768 <USART1_IRQHandler+0x8>)
90004762:	f009 be81 	b.w	9000e468 <HAL_UART_IRQHandler>
90004766:	bf00      	nop
90004768:	24007704 	.word	0x24007704

9000476c <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
9000476c:	4801      	ldr	r0, [pc, #4]	@ (90004774 <TIM6_DAC_IRQHandler+0x8>)
9000476e:	f009 bbc5 	b.w	9000defc <HAL_TIM_IRQHandler>
90004772:	bf00      	nop
90004774:	24007a04 	.word	0x24007a04

90004778 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
90004778:	4801      	ldr	r0, [pc, #4]	@ (90004780 <LTDC_IRQHandler+0x8>)
9000477a:	f006 bf23 	b.w	9000b5c4 <HAL_LTDC_IRQHandler>
9000477e:	bf00      	nop
90004780:	24007798 	.word	0x24007798

90004784 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
90004784:	4801      	ldr	r0, [pc, #4]	@ (9000478c <DMA2D_IRQHandler+0x8>)
90004786:	f004 b90f 	b.w	900089a8 <HAL_DMA2D_IRQHandler>
9000478a:	bf00      	nop
9000478c:	24007970 	.word	0x24007970

90004790 <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
90004790:	4801      	ldr	r0, [pc, #4]	@ (90004798 <JPEG_IRQHandler+0x8>)
90004792:	f006 be1b 	b.w	9000b3cc <HAL_JPEG_IRQHandler>
90004796:	bf00      	nop
90004798:	24007918 	.word	0x24007918

9000479c <MDMA_IRQHandler>:
void MDMA_IRQHandler(void)
{
  /* USER CODE BEGIN MDMA_IRQn 0 */

  /* USER CODE END MDMA_IRQn 0 */
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
9000479c:	4804      	ldr	r0, [pc, #16]	@ (900047b0 <MDMA_IRQHandler+0x14>)
{
9000479e:	b508      	push	{r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
900047a0:	f007 f9da 	bl	9000bb58 <HAL_MDMA_IRQHandler>
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
900047a4:	4803      	ldr	r0, [pc, #12]	@ (900047b4 <MDMA_IRQHandler+0x18>)
  /* USER CODE BEGIN MDMA_IRQn 1 */

  /* USER CODE END MDMA_IRQn 1 */
}
900047a6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
900047aa:	f007 b9d5 	b.w	9000bb58 <HAL_MDMA_IRQHandler>
900047ae:	bf00      	nop
900047b0:	24007840 	.word	0x24007840
900047b4:	240078ac 	.word	0x240078ac

900047b8 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
900047b8:	2001      	movs	r0, #1
900047ba:	4770      	bx	lr

900047bc <_kill>:

int _kill(int pid, int sig)
{
900047bc:	b508      	push	{r3, lr}
	errno = EINVAL;
900047be:	f029 f9c9 	bl	9002db54 <__errno>
900047c2:	2216      	movs	r2, #22
900047c4:	4603      	mov	r3, r0
	return -1;
}
900047c6:	f04f 30ff 	mov.w	r0, #4294967295
	errno = EINVAL;
900047ca:	601a      	str	r2, [r3, #0]
}
900047cc:	bd08      	pop	{r3, pc}
900047ce:	bf00      	nop

900047d0 <_exit>:

void _exit (int status)
{
900047d0:	b508      	push	{r3, lr}
	errno = EINVAL;
900047d2:	f029 f9bf 	bl	9002db54 <__errno>
900047d6:	2316      	movs	r3, #22
900047d8:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
900047da:	e7fe      	b.n	900047da <_exit+0xa>

900047dc <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
900047dc:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
900047de:	1e16      	subs	r6, r2, #0
900047e0:	dd07      	ble.n	900047f2 <_read+0x16>
900047e2:	460c      	mov	r4, r1
900047e4:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
900047e6:	f3af 8000 	nop.w
900047ea:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
900047ee:	42a5      	cmp	r5, r4
900047f0:	d1f9      	bne.n	900047e6 <_read+0xa>
	}

return len;
}
900047f2:	4630      	mov	r0, r6
900047f4:	bd70      	pop	{r4, r5, r6, pc}
900047f6:	bf00      	nop

900047f8 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
900047f8:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
900047fa:	1e16      	subs	r6, r2, #0
900047fc:	dd07      	ble.n	9000480e <_write+0x16>
900047fe:	460c      	mov	r4, r1
90004800:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
90004802:	f814 0b01 	ldrb.w	r0, [r4], #1
90004806:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000480a:	42a5      	cmp	r5, r4
9000480c:	d1f9      	bne.n	90004802 <_write+0xa>
	}
	return len;
}
9000480e:	4630      	mov	r0, r6
90004810:	bd70      	pop	{r4, r5, r6, pc}
90004812:	bf00      	nop

90004814 <_close>:

int _close(int file)
{
	return -1;
}
90004814:	f04f 30ff 	mov.w	r0, #4294967295
90004818:	4770      	bx	lr
9000481a:	bf00      	nop

9000481c <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
9000481c:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
	return 0;
}
90004820:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
90004822:	604b      	str	r3, [r1, #4]
}
90004824:	4770      	bx	lr
90004826:	bf00      	nop

90004828 <_isatty>:

int _isatty(int file)
{
	return 1;
}
90004828:	2001      	movs	r0, #1
9000482a:	4770      	bx	lr

9000482c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
9000482c:	2000      	movs	r0, #0
9000482e:	4770      	bx	lr

90004830 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
90004830:	4a0c      	ldr	r2, [pc, #48]	@ (90004864 <_sbrk+0x34>)
{
90004832:	b508      	push	{r3, lr}
90004834:	4603      	mov	r3, r0
	if (heap_end == 0)
90004836:	6810      	ldr	r0, [r2, #0]
90004838:	b128      	cbz	r0, 90004846 <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
9000483a:	4403      	add	r3, r0
9000483c:	4669      	mov	r1, sp
9000483e:	428b      	cmp	r3, r1
90004840:	d808      	bhi.n	90004854 <_sbrk+0x24>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
90004842:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
90004844:	bd08      	pop	{r3, pc}
		heap_end = &end;
90004846:	4908      	ldr	r1, [pc, #32]	@ (90004868 <_sbrk+0x38>)
90004848:	4608      	mov	r0, r1
9000484a:	6011      	str	r1, [r2, #0]
	if (heap_end + incr > stack_ptr)
9000484c:	4669      	mov	r1, sp
9000484e:	4403      	add	r3, r0
90004850:	428b      	cmp	r3, r1
90004852:	d9f6      	bls.n	90004842 <_sbrk+0x12>
		errno = ENOMEM;
90004854:	f029 f97e 	bl	9002db54 <__errno>
90004858:	220c      	movs	r2, #12
9000485a:	4603      	mov	r3, r0
		return (caddr_t) -1;
9000485c:	f04f 30ff 	mov.w	r0, #4294967295
		errno = ENOMEM;
90004860:	601a      	str	r2, [r3, #0]
}
90004862:	bd08      	pop	{r3, pc}
90004864:	24007a50 	.word	0x24007a50
90004868:	24022950 	.word	0x24022950

9000486c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMLLER = 3;        // verdana_15_4bpp
    static const touchgfx::FontId TYPOGRAPHY_00 = 4; // arial_20_4bpp
    static const uint16_t NUMBER_OF_FONTS = 5;
};

class ApplicationFontProvider : public touchgfx::FontProvider
9000486c:	4770      	bx	lr
9000486e:	bf00      	nop

90004870 <_ZN23ApplicationFontProviderD0Ev>:
90004870:	b510      	push	{r4, lr}
90004872:	4604      	mov	r4, r0
90004874:	2104      	movs	r1, #4
90004876:	f028 fa21 	bl	9002ccbc <_ZdlPvj>
9000487a:	4620      	mov	r0, r4
9000487c:	bd10      	pop	{r4, pc}
9000487e:	bf00      	nop

90004880 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
90004880:	b508      	push	{r3, lr}
    switch (typography)
90004882:	2904      	cmp	r1, #4
90004884:	d818      	bhi.n	900048b8 <_ZN23ApplicationFontProvider7getFontEt+0x38>
90004886:	e8df f001 	tbb	[pc, r1]
9000488a:	1307      	.short	0x1307
9000488c:	0f0b      	.short	0x0f0b
9000488e:	03          	.byte	0x03
9000488f:	00          	.byte	0x00
    case Typography::SMLLER:
        // verdana_15_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    case Typography::TYPOGRAPHY_00:
        // arial_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
90004890:	f002 f8f6 	bl	90006a80 <_ZN17TypedTextDatabase8getFontsEv>
90004894:	6900      	ldr	r0, [r0, #16]
    default:
        return 0;
    }
}
90004896:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
90004898:	f002 f8f2 	bl	90006a80 <_ZN17TypedTextDatabase8getFontsEv>
9000489c:	6800      	ldr	r0, [r0, #0]
}
9000489e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
900048a0:	f002 f8ee 	bl	90006a80 <_ZN17TypedTextDatabase8getFontsEv>
900048a4:	6880      	ldr	r0, [r0, #8]
}
900048a6:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
900048a8:	f002 f8ea 	bl	90006a80 <_ZN17TypedTextDatabase8getFontsEv>
900048ac:	68c0      	ldr	r0, [r0, #12]
}
900048ae:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
900048b0:	f002 f8e6 	bl	90006a80 <_ZN17TypedTextDatabase8getFontsEv>
900048b4:	6840      	ldr	r0, [r0, #4]
}
900048b6:	bd08      	pop	{r3, pc}
    switch (typography)
900048b8:	2000      	movs	r0, #0
}
900048ba:	bd08      	pop	{r3, pc}

900048bc <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
900048bc:	4800      	ldr	r0, [pc, #0]	@ (900048c0 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
900048be:	4770      	bx	lr
900048c0:	9003075c 	.word	0x9003075c

900048c4 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
900048c4:	2006      	movs	r0, #6
900048c6:	4770      	bx	lr

900048c8 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
    {
        if (unicode == 0)
900048c8:	b169      	cbz	r1, 900048e6 <_ZNK8touchgfx4Font8getGlyphEt+0x1e>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
900048ca:	6802      	ldr	r2, [r0, #0]
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
900048cc:	b530      	push	{r4, r5, lr}
900048ce:	b083      	sub	sp, #12
        const uint8_t* dummyPixelDataPointer = 0;
900048d0:	2400      	movs	r4, #0
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
900048d2:	6895      	ldr	r5, [r2, #8]
900048d4:	f10d 0303 	add.w	r3, sp, #3
900048d8:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
900048da:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
900048dc:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
900048e0:	47a8      	blx	r5
        return glyph;
    }
900048e2:	b003      	add	sp, #12
900048e4:	bd30      	pop	{r4, r5, pc}
            return 0;
900048e6:	4608      	mov	r0, r1
    }
900048e8:	4770      	bx	lr
900048ea:	bf00      	nop

900048ec <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
900048ec:	89c0      	ldrh	r0, [r0, #14]
900048ee:	4770      	bx	lr

900048f0 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
900048f0:	8a00      	ldrh	r0, [r0, #16]
900048f2:	4770      	bx	lr

900048f4 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
900048f4:	88c0      	ldrh	r0, [r0, #6]
900048f6:	4770      	bx	lr

900048f8 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
900048f8:	8880      	ldrh	r0, [r0, #4]
900048fa:	4770      	bx	lr

900048fc <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
900048fc:	7a80      	ldrb	r0, [r0, #10]
    }
900048fe:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
90004902:	4770      	bx	lr

90004904 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
90004904:	7a80      	ldrb	r0, [r0, #10]
    }
90004906:	09c0      	lsrs	r0, r0, #7
90004908:	4770      	bx	lr
9000490a:	bf00      	nop

9000490c <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
9000490c:	2000      	movs	r0, #0
9000490e:	4770      	bx	lr

90004910 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
90004910:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 90004918 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
90004914:	4770      	bx	lr
90004916:	bf00      	nop
90004918:	00000000 	.word	0x00000000

9000491c <_ZN8touchgfx9TypedTextD1Ev>:
    }
9000491c:	4770      	bx	lr
9000491e:	bf00      	nop

90004920 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
90004920:	b510      	push	{r4, lr}
90004922:	4604      	mov	r4, r0
    }
90004924:	2108      	movs	r1, #8
90004926:	f028 f9c9 	bl	9002ccbc <_ZdlPvj>
9000492a:	4620      	mov	r0, r4
9000492c:	bd10      	pop	{r4, pc}
9000492e:	bf00      	nop

90004930 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
90004930:	4770      	bx	lr
90004932:	bf00      	nop

90004934 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
90004934:	f500 7398 	add.w	r3, r0, #304	@ 0x130
90004938:	6808      	ldr	r0, [r1, #0]
9000493a:	6849      	ldr	r1, [r1, #4]
9000493c:	c303      	stmia	r3!, {r0, r1}
    }
9000493e:	4770      	bx	lr

90004940 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
90004940:	4770      	bx	lr
90004942:	bf00      	nop

90004944 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
90004944:	4770      	bx	lr
90004946:	bf00      	nop

90004948 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
90004948:	6041      	str	r1, [r0, #4]
    }
9000494a:	4770      	bx	lr

9000494c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
9000494c:	4770      	bx	lr
9000494e:	bf00      	nop

90004950 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
90004950:	4770      	bx	lr
90004952:	bf00      	nop

90004954 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
90004954:	4905      	ldr	r1, [pc, #20]	@ (9000496c <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x18>)
90004956:	2200      	movs	r2, #0
// Home_Screen

void FrontendApplicationBase::gotoHome_ScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoHome_ScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
90004958:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
9000495c:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
90004960:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90004964:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148

    virtual void changeToStartScreen()
    {
        gotoHome_ScreenScreenNoTransition();
    }
90004968:	4770      	bx	lr
9000496a:	bf00      	nop
9000496c:	90004ab9 	.word	0x90004ab9

90004970 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
90004970:	2301      	movs	r3, #1
90004972:	7203      	strb	r3, [r0, #8]
    }
90004974:	4770      	bx	lr
90004976:	bf00      	nop

90004978 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
90004978:	4770      	bx	lr
9000497a:	bf00      	nop

9000497c <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
9000497c:	4770      	bx	lr
9000497e:	bf00      	nop

90004980 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
    {
        Transition::init();
    }
90004980:	4770      	bx	lr
90004982:	bf00      	nop

90004984 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
    {
        (pobject->*pmemfun)();
90004984:	1d01      	adds	r1, r0, #4
90004986:	c90e      	ldmia	r1, {r1, r2, r3}
90004988:	ea4f 0c63 	mov.w	ip, r3, asr #1
9000498c:	eb01 0063 	add.w	r0, r1, r3, asr #1
90004990:	07db      	lsls	r3, r3, #31
90004992:	d502      	bpl.n	9000499a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x16>
90004994:	f851 300c 	ldr.w	r3, [r1, ip]
90004998:	589a      	ldr	r2, [r3, r2]
9000499a:	4710      	bx	r2

9000499c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
9000499c:	6843      	ldr	r3, [r0, #4]
9000499e:	b13b      	cbz	r3, 900049b0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
900049a0:	6883      	ldr	r3, [r0, #8]
900049a2:	b10b      	cbz	r3, 900049a8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0xc>
900049a4:	2001      	movs	r0, #1
    }
900049a6:	4770      	bx	lr
900049a8:	68c0      	ldr	r0, [r0, #12]
900049aa:	f000 0001 	and.w	r0, r0, #1
900049ae:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
900049b0:	4618      	mov	r0, r3
900049b2:	4770      	bx	lr

900049b4 <_ZN8touchgfx12NoTransitionD0Ev>:
900049b4:	b510      	push	{r4, lr}
900049b6:	4604      	mov	r4, r0
900049b8:	210c      	movs	r1, #12
900049ba:	f028 f97f 	bl	9002ccbc <_ZdlPvj>
900049be:	4620      	mov	r0, r4
900049c0:	bd10      	pop	{r4, pc}
900049c2:	bf00      	nop

900049c4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
900049c4:	b510      	push	{r4, lr}
900049c6:	4604      	mov	r4, r0
900049c8:	2114      	movs	r1, #20
900049ca:	f028 f977 	bl	9002ccbc <_ZdlPvj>
900049ce:	4620      	mov	r0, r4
900049d0:	bd10      	pop	{r4, pc}
900049d2:	bf00      	nop

900049d4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
900049d4:	b510      	push	{r4, lr}
900049d6:	4604      	mov	r4, r0
900049d8:	2110      	movs	r1, #16
900049da:	f028 f96f 	bl	9002ccbc <_ZdlPvj>
900049de:	4620      	mov	r0, r4
900049e0:	bd10      	pop	{r4, pc}
900049e2:	bf00      	nop

900049e4 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
900049e4:	b510      	push	{r4, lr}
900049e6:	4604      	mov	r4, r0
900049e8:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
900049ec:	f028 f966 	bl	9002ccbc <_ZdlPvj>
900049f0:	4620      	mov	r0, r4
900049f2:	bd10      	pop	{r4, pc}

900049f4 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
900049f4:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
900049f6:	f014 fb73 	bl	900190e0 <_ZN8touchgfx11Application11getInstanceEv>
900049fa:	6803      	ldr	r3, [r0, #0]
    }
900049fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
90004a00:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90004a02:	4718      	bx	r3

90004a04 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:

    virtual void invalidate()
90004a04:	b510      	push	{r4, lr}
    {
        // The last step when finalizing a transition (see MVPApplication::finalizeTransition)
        // is to call invalidate on the transition. For the WipeTransition we want to erase any
        // invalidated areas that might have been added when setting up the new screen, which
        // is the first step of finalizing a transition (see MVPApplication::finalizeTransition).
        Application::getInstance()->clearCachedAreas();
90004a06:	f014 fb6b 	bl	900190e0 <_ZN8touchgfx11Application11getInstanceEv>
90004a0a:	6803      	ldr	r3, [r0, #0]
    }
90004a0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->clearCachedAreas();
90004a10:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90004a12:	4718      	bx	r3

90004a14 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
90004a14:	b510      	push	{r4, lr}
90004a16:	4604      	mov	r4, r0
        animationCounter++;
90004a18:	7a80      	ldrb	r0, [r0, #10]
    virtual void handleTickEvent()
90004a1a:	b082      	sub	sp, #8
        animationCounter++;
90004a1c:	3001      	adds	r0, #1
        if (animationCounter > animationSteps)
90004a1e:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
90004a20:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
90004a22:	4298      	cmp	r0, r3
        animationCounter++;
90004a24:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
90004a26:	d905      	bls.n	90004a34 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x20>
            done = true;
90004a28:	2201      	movs	r2, #1
            animationCounter = 0;
90004a2a:	2300      	movs	r3, #0
            done = true;
90004a2c:	7222      	strb	r2, [r4, #8]
            animationCounter = 0;
90004a2e:	72a3      	strb	r3, [r4, #10]
    }
90004a30:	b002      	add	sp, #8
90004a32:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
90004a34:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90004a38:	2100      	movs	r1, #0
90004a3a:	f016 fd59 	bl	9001b4f0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
90004a3e:	07c3      	lsls	r3, r0, #31
90004a40:	d429      	bmi.n	90004a96 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
90004a42:	b281      	uxth	r1, r0
                rect.x = HAL::DISPLAY_WIDTH - calculatedValue;
90004a44:	4b19      	ldr	r3, [pc, #100]	@ (90004aac <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
90004a46:	f04f 0c00 	mov.w	ip, #0
                rect.width = calculatedValue - prevCalculatedValue;
90004a4a:	8a22      	ldrh	r2, [r4, #16]
                rect.x = HAL::DISPLAY_WIDTH - calculatedValue;
90004a4c:	881b      	ldrh	r3, [r3, #0]
                rect.width = calculatedValue - prevCalculatedValue;
90004a4e:	1a8a      	subs	r2, r1, r2
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
90004a50:	81e0      	strh	r0, [r4, #14]
                rect.x = HAL::DISPLAY_WIDTH - calculatedValue;
90004a52:	1a5b      	subs	r3, r3, r1
                rect.height = HAL::DISPLAY_HEIGHT;
90004a54:	4916      	ldr	r1, [pc, #88]	@ (90004ab0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
                rect.width = calculatedValue - prevCalculatedValue;
90004a56:	f8ad 2004 	strh.w	r2, [sp, #4]
                rect.height = HAL::DISPLAY_HEIGHT;
90004a5a:	880a      	ldrh	r2, [r1, #0]
        prevCalculatedValue = calculatedValue;
90004a5c:	8220      	strh	r0, [r4, #16]
90004a5e:	f8ad c002 	strh.w	ip, [sp, #2]
                rect.x = HAL::DISPLAY_WIDTH - calculatedValue;
90004a62:	f8ad 3000 	strh.w	r3, [sp]
                rect.height = HAL::DISPLAY_HEIGHT;
90004a66:	f8ad 2006 	strh.w	r2, [sp, #6]
        Application::getInstance()->invalidateArea(rect);
90004a6a:	f014 fb39 	bl	900190e0 <_ZN8touchgfx11Application11getInstanceEv>
90004a6e:	ab02      	add	r3, sp, #8
90004a70:	e913 0006 	ldmdb	r3, {r1, r2}
90004a74:	6803      	ldr	r3, [r0, #0]
90004a76:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90004a78:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
90004a7a:	7aa3      	ldrb	r3, [r4, #10]
90004a7c:	2b01      	cmp	r3, #1
90004a7e:	d1d7      	bne.n	90004a30 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1c>
90004a80:	4b0c      	ldr	r3, [pc, #48]	@ (90004ab4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xa0>)
90004a82:	781b      	ldrb	r3, [r3, #0]
90004a84:	2b00      	cmp	r3, #0
90004a86:	d0d3      	beq.n	90004a30 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1c>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
90004a88:	f014 fb2a 	bl	900190e0 <_ZN8touchgfx11Application11getInstanceEv>
    }
90004a8c:	b002      	add	sp, #8
90004a8e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
90004a92:	f014 bb2b 	b.w	900190ec <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
90004a96:	2800      	cmp	r0, #0
90004a98:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90004a9c:	bfc8      	it	gt
90004a9e:	2301      	movgt	r3, #1
90004aa0:	fa13 f080 	uxtah	r0, r3, r0
90004aa4:	b281      	uxth	r1, r0
90004aa6:	b200      	sxth	r0, r0
90004aa8:	e7cc      	b.n	90004a44 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x30>
90004aaa:	bf00      	nop
90004aac:	24021c00 	.word	0x24021c00
90004ab0:	24021c02 	.word	0x24021c02
90004ab4:	24021c0a 	.word	0x24021c0a

90004ab8 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoHome_ScreenScreenNoTransitionImpl()
{
90004ab8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Home_ScreenView, Home_ScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90004abc:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
90004ac0:	4607      	mov	r7, r0
90004ac2:	b081      	sub	sp, #4
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004ac4:	68b0      	ldr	r0, [r6, #8]
90004ac6:	6803      	ldr	r3, [r0, #0]
90004ac8:	6a1b      	ldr	r3, [r3, #32]
90004aca:	4798      	blx	r3
90004acc:	f5b0 6f92 	cmp.w	r0, #1168	@ 0x490
90004ad0:	f0c0 809d 	bcc.w	90004c0e <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x156>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004ad4:	6870      	ldr	r0, [r6, #4]
90004ad6:	6803      	ldr	r3, [r0, #0]
90004ad8:	6a1b      	ldr	r3, [r3, #32]
90004ada:	4798      	blx	r3
90004adc:	280f      	cmp	r0, #15
90004ade:	f240 80a2 	bls.w	90004c26 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x16e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004ae2:	68f0      	ldr	r0, [r6, #12]
90004ae4:	6803      	ldr	r3, [r0, #0]
90004ae6:	6a1b      	ldr	r3, [r3, #32]
90004ae8:	4798      	blx	r3
90004aea:	280b      	cmp	r0, #11
90004aec:	f240 8095 	bls.w	90004c1a <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x162>
    if (*currentTrans)
90004af0:	f8df 9164 	ldr.w	r9, [pc, #356]	@ 90004c58 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x1a0>
    Application::getInstance()->clearAllTimerWidgets();
90004af4:	f014 faf4 	bl	900190e0 <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
90004af8:	3004      	adds	r0, #4
90004afa:	f014 fb3e 	bl	9001917a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90004afe:	f8d9 0000 	ldr.w	r0, [r9]
90004b02:	b130      	cbz	r0, 90004b12 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->tearDown();
90004b04:	6803      	ldr	r3, [r0, #0]
90004b06:	494b      	ldr	r1, [pc, #300]	@ (90004c34 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x17c>)
90004b08:	68da      	ldr	r2, [r3, #12]
90004b0a:	428a      	cmp	r2, r1
90004b0c:	d178      	bne.n	90004c00 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x148>
        (*currentTrans)->~Transition();
90004b0e:	681b      	ldr	r3, [r3, #0]
90004b10:	4798      	blx	r3
    if (*currentScreen)
90004b12:	f8df 8148 	ldr.w	r8, [pc, #328]	@ 90004c5c <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x1a4>
90004b16:	f8d8 0000 	ldr.w	r0, [r8]
90004b1a:	2800      	cmp	r0, #0
90004b1c:	d062      	beq.n	90004be4 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x12c>
        (*currentScreen)->tearDownScreen();
90004b1e:	6803      	ldr	r3, [r0, #0]
90004b20:	695b      	ldr	r3, [r3, #20]
90004b22:	4798      	blx	r3
    if (*currentPresenter)
90004b24:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004b28:	2800      	cmp	r0, #0
90004b2a:	d056      	beq.n	90004bda <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x122>
        (*currentPresenter)->deactivate();
90004b2c:	6803      	ldr	r3, [r0, #0]
90004b2e:	685b      	ldr	r3, [r3, #4]
90004b30:	4798      	blx	r3
    if (*currentScreen)
90004b32:	f8d8 0000 	ldr.w	r0, [r8]
90004b36:	b110      	cbz	r0, 90004b3e <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x86>
        (*currentScreen)->~Screen();
90004b38:	6803      	ldr	r3, [r0, #0]
90004b3a:	681b      	ldr	r3, [r3, #0]
90004b3c:	4798      	blx	r3
    if (*currentPresenter)
90004b3e:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004b42:	b110      	cbz	r0, 90004b4a <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x92>
        (*currentPresenter)->~Presenter();
90004b44:	6803      	ldr	r3, [r0, #0]
90004b46:	689b      	ldr	r3, [r3, #8]
90004b48:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90004b4a:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
90004b4c:	2100      	movs	r1, #0
        : screenContainer(0), done(false)
90004b4e:	f04f 0b00 	mov.w	fp, #0
90004b52:	6803      	ldr	r3, [r0, #0]
90004b54:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004b56:	4798      	blx	r3
90004b58:	4b37      	ldr	r3, [pc, #220]	@ (90004c38 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x180>)
90004b5a:	4604      	mov	r4, r0
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90004b5c:	68b0      	ldr	r0, [r6, #8]
90004b5e:	4659      	mov	r1, fp
90004b60:	6023      	str	r3, [r4, #0]
90004b62:	6803      	ldr	r3, [r0, #0]
90004b64:	f8c4 b004 	str.w	fp, [r4, #4]
90004b68:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004b6a:	f884 b008 	strb.w	fp, [r4, #8]
90004b6e:	4798      	blx	r3
90004b70:	4605      	mov	r5, r0
90004b72:	f002 f837 	bl	90006be4 <_ZN15Home_ScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90004b76:	6870      	ldr	r0, [r6, #4]
90004b78:	4659      	mov	r1, fp
90004b7a:	6803      	ldr	r3, [r0, #0]
90004b7c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004b7e:	4798      	blx	r3
90004b80:	4606      	mov	r6, r0
90004b82:	4629      	mov	r1, r5
90004b84:	f001 ffd8 	bl	90006b38 <_ZN20Home_ScreenPresenterC1ER15Home_ScreenView>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
90004b88:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
90004b8a:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
90004b8e:	4628      	mov	r0, r5
    *currentTrans = newTransition;
90004b90:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
90004b94:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
90004b98:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90004b9c:	682b      	ldr	r3, [r5, #0]

    virtual void updateTextBox(const char* newText);

    void bind(Model* m)
    {
        model = m;
90004b9e:	f8c6 a008 	str.w	sl, [r6, #8]
90004ba2:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
90004ba4:	63ee      	str	r6, [r5, #60]	@ 0x3c
90004ba6:	4798      	blx	r3
    newPresenter->activate();
90004ba8:	6833      	ldr	r3, [r6, #0]
90004baa:	4630      	mov	r0, r6
90004bac:	681b      	ldr	r3, [r3, #0]
90004bae:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90004bb0:	4621      	mov	r1, r4
90004bb2:	4628      	mov	r0, r5
90004bb4:	f016 fc96 	bl	9001b4e4 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90004bb8:	6823      	ldr	r3, [r4, #0]
90004bba:	4920      	ldr	r1, [pc, #128]	@ (90004c3c <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x184>)
90004bbc:	691a      	ldr	r2, [r3, #16]
90004bbe:	428a      	cmp	r2, r1
90004bc0:	d11a      	bne.n	90004bf8 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x140>
    newTransition->invalidate();
90004bc2:	695b      	ldr	r3, [r3, #20]
90004bc4:	4a1e      	ldr	r2, [pc, #120]	@ (90004c40 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x188>)
90004bc6:	4293      	cmp	r3, r2
90004bc8:	d111      	bne.n	90004bee <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x136>
        Application::getInstance()->invalidate();
90004bca:	f014 fa89 	bl	900190e0 <_ZN8touchgfx11Application11getInstanceEv>
90004bce:	6803      	ldr	r3, [r0, #0]
90004bd0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
}
90004bd2:	b001      	add	sp, #4
90004bd4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004bd8:	4718      	bx	r3
    if (*currentScreen)
90004bda:	f8d8 0000 	ldr.w	r0, [r8]
90004bde:	2800      	cmp	r0, #0
90004be0:	d1aa      	bne.n	90004b38 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x80>
90004be2:	e7b2      	b.n	90004b4a <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x92>
    if (*currentPresenter)
90004be4:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004be8:	2800      	cmp	r0, #0
90004bea:	d19f      	bne.n	90004b2c <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x74>
90004bec:	e7ad      	b.n	90004b4a <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x92>
    newTransition->invalidate();
90004bee:	4620      	mov	r0, r4
90004bf0:	b001      	add	sp, #4
90004bf2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004bf6:	4718      	bx	r3
    newTransition->init();
90004bf8:	4620      	mov	r0, r4
90004bfa:	4790      	blx	r2
    newTransition->invalidate();
90004bfc:	6823      	ldr	r3, [r4, #0]
90004bfe:	e7e0      	b.n	90004bc2 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x10a>
        (*currentTrans)->tearDown();
90004c00:	4790      	blx	r2
    if (*currentTrans)
90004c02:	f8d9 0000 	ldr.w	r0, [r9]
90004c06:	2800      	cmp	r0, #0
90004c08:	d083      	beq.n	90004b12 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->~Transition();
90004c0a:	6803      	ldr	r3, [r0, #0]
90004c0c:	e77f      	b.n	90004b0e <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x56>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004c0e:	4b0d      	ldr	r3, [pc, #52]	@ (90004c44 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x18c>)
90004c10:	21a3      	movs	r1, #163	@ 0xa3
90004c12:	4a0d      	ldr	r2, [pc, #52]	@ (90004c48 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x190>)
90004c14:	480d      	ldr	r0, [pc, #52]	@ (90004c4c <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x194>)
90004c16:	f028 fbc7 	bl	9002d3a8 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004c1a:	4b0d      	ldr	r3, [pc, #52]	@ (90004c50 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x198>)
90004c1c:	21a5      	movs	r1, #165	@ 0xa5
90004c1e:	4a0a      	ldr	r2, [pc, #40]	@ (90004c48 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x190>)
90004c20:	480a      	ldr	r0, [pc, #40]	@ (90004c4c <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x194>)
90004c22:	f028 fbc1 	bl	9002d3a8 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004c26:	4b0b      	ldr	r3, [pc, #44]	@ (90004c54 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x19c>)
90004c28:	21a4      	movs	r1, #164	@ 0xa4
90004c2a:	4a07      	ldr	r2, [pc, #28]	@ (90004c48 <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x190>)
90004c2c:	4807      	ldr	r0, [pc, #28]	@ (90004c4c <_ZN23FrontendApplicationBase37gotoHome_ScreenScreenNoTransitionImplEv+0x194>)
90004c2e:	f028 fbbb 	bl	9002d3a8 <__assert_func>
90004c32:	bf00      	nop
90004c34:	90004941 	.word	0x90004941
90004c38:	90030858 	.word	0x90030858
90004c3c:	90004945 	.word	0x90004945
90004c40:	900049f5 	.word	0x900049f5
90004c44:	9002fab0 	.word	0x9002fab0
90004c48:	9002fb40 	.word	0x9002fb40
90004c4c:	9002fc1c 	.word	0x9002fc1c
90004c50:	9002fd08 	.word	0x9002fd08
90004c54:	9002fc64 	.word	0x9002fc64
90004c58:	24021c54 	.word	0x24021c54
90004c5c:	24021c50 	.word	0x24021c50

90004c60 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoHome_ScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoHome_ScreenScreenWipeTransitionEastImpl()
{
90004c60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Home_ScreenView, Home_ScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90004c64:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
90004c68:	4607      	mov	r7, r0
90004c6a:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004c6c:	68b0      	ldr	r0, [r6, #8]
90004c6e:	6803      	ldr	r3, [r0, #0]
90004c70:	6a1b      	ldr	r3, [r3, #32]
90004c72:	4798      	blx	r3
90004c74:	f5b0 6f92 	cmp.w	r0, #1168	@ 0x490
90004c78:	f0c0 80a9 	bcc.w	90004dce <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x16e>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004c7c:	6870      	ldr	r0, [r6, #4]
90004c7e:	6803      	ldr	r3, [r0, #0]
90004c80:	6a1b      	ldr	r3, [r3, #32]
90004c82:	4798      	blx	r3
90004c84:	280f      	cmp	r0, #15
90004c86:	f240 80ae 	bls.w	90004de6 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x186>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004c8a:	68f0      	ldr	r0, [r6, #12]
90004c8c:	6803      	ldr	r3, [r0, #0]
90004c8e:	6a1b      	ldr	r3, [r3, #32]
90004c90:	4798      	blx	r3
90004c92:	2813      	cmp	r0, #19
90004c94:	f240 80a1 	bls.w	90004dda <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x17a>
    if (*currentTrans)
90004c98:	f8df 9180 	ldr.w	r9, [pc, #384]	@ 90004e1c <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x1bc>
    Application::getInstance()->clearAllTimerWidgets();
90004c9c:	f014 fa20 	bl	900190e0 <_ZN8touchgfx11Application11getInstanceEv>
90004ca0:	3004      	adds	r0, #4
90004ca2:	f014 fa6a 	bl	9001917a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90004ca6:	f8d9 0000 	ldr.w	r0, [r9]
90004caa:	b138      	cbz	r0, 90004cbc <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x5c>
        (*currentTrans)->tearDown();
90004cac:	6803      	ldr	r3, [r0, #0]
90004cae:	4951      	ldr	r1, [pc, #324]	@ (90004df4 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x194>)
90004cb0:	68da      	ldr	r2, [r3, #12]
90004cb2:	428a      	cmp	r2, r1
90004cb4:	f040 8083 	bne.w	90004dbe <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x15e>
        (*currentTrans)->~Transition();
90004cb8:	681b      	ldr	r3, [r3, #0]
90004cba:	4798      	blx	r3
    if (*currentScreen)
90004cbc:	f8df 8160 	ldr.w	r8, [pc, #352]	@ 90004e20 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x1c0>
90004cc0:	f8d8 0000 	ldr.w	r0, [r8]
90004cc4:	2800      	cmp	r0, #0
90004cc6:	d06c      	beq.n	90004da2 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x142>
        (*currentScreen)->tearDownScreen();
90004cc8:	6803      	ldr	r3, [r0, #0]
90004cca:	695b      	ldr	r3, [r3, #20]
90004ccc:	4798      	blx	r3
    if (*currentPresenter)
90004cce:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004cd2:	2800      	cmp	r0, #0
90004cd4:	d060      	beq.n	90004d98 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x138>
        (*currentPresenter)->deactivate();
90004cd6:	6803      	ldr	r3, [r0, #0]
90004cd8:	685b      	ldr	r3, [r3, #4]
90004cda:	4798      	blx	r3
    if (*currentScreen)
90004cdc:	f8d8 0000 	ldr.w	r0, [r8]
90004ce0:	b110      	cbz	r0, 90004ce8 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x88>
        (*currentScreen)->~Screen();
90004ce2:	6803      	ldr	r3, [r0, #0]
90004ce4:	681b      	ldr	r3, [r3, #0]
90004ce6:	4798      	blx	r3
    if (*currentPresenter)
90004ce8:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004cec:	b110      	cbz	r0, 90004cf4 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x94>
        (*currentPresenter)->~Presenter();
90004cee:	6803      	ldr	r3, [r0, #0]
90004cf0:	689b      	ldr	r3, [r3, #8]
90004cf2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90004cf4:	68f0      	ldr	r0, [r6, #12]
90004cf6:	2100      	movs	r1, #0
        : screenContainer(0), done(false)
90004cf8:	f04f 0b00 	mov.w	fp, #0
90004cfc:	6803      	ldr	r3, [r0, #0]
90004cfe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004d00:	4798      	blx	r3
          animationSteps(transitionSteps),
90004d02:	2314      	movs	r3, #20
90004d04:	4604      	mov	r4, r0
90004d06:	4659      	mov	r1, fp
90004d08:	f8a0 3009 	strh.w	r3, [r0, #9]
            targetValue = HAL::DISPLAY_WIDTH;
90004d0c:	4b3a      	ldr	r3, [pc, #232]	@ (90004df8 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x198>)
90004d0e:	881b      	ldrh	r3, [r3, #0]
90004d10:	8183      	strh	r3, [r0, #12]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90004d12:	68b0      	ldr	r0, [r6, #8]
          prevCalculatedValue(0)
90004d14:	4b39      	ldr	r3, [pc, #228]	@ (90004dfc <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x19c>)
90004d16:	f8c4 b004 	str.w	fp, [r4, #4]
90004d1a:	6023      	str	r3, [r4, #0]
90004d1c:	6803      	ldr	r3, [r0, #0]
90004d1e:	f884 b008 	strb.w	fp, [r4, #8]
90004d22:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
          calculatedValue(0),
90004d24:	f8a4 b00e 	strh.w	fp, [r4, #14]
          prevCalculatedValue(0)
90004d28:	f8a4 b010 	strh.w	fp, [r4, #16]
90004d2c:	4798      	blx	r3
90004d2e:	4605      	mov	r5, r0
90004d30:	f001 ff58 	bl	90006be4 <_ZN15Home_ScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90004d34:	6870      	ldr	r0, [r6, #4]
90004d36:	4659      	mov	r1, fp
90004d38:	6803      	ldr	r3, [r0, #0]
90004d3a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004d3c:	4798      	blx	r3
90004d3e:	4606      	mov	r6, r0
90004d40:	4629      	mov	r1, r5
90004d42:	f001 fef9 	bl	90006b38 <_ZN20Home_ScreenPresenterC1ER15Home_ScreenView>
    model->bind(newPresenter);
90004d46:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
90004d48:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
90004d4c:	4628      	mov	r0, r5
    *currentTrans = newTransition;
90004d4e:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
90004d52:	f8c8 5000 	str.w	r5, [r8]
90004d56:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90004d5a:	682b      	ldr	r3, [r5, #0]
90004d5c:	f8c6 a008 	str.w	sl, [r6, #8]
90004d60:	68db      	ldr	r3, [r3, #12]
90004d62:	63ee      	str	r6, [r5, #60]	@ 0x3c
90004d64:	4798      	blx	r3
    newPresenter->activate();
90004d66:	6833      	ldr	r3, [r6, #0]
90004d68:	4630      	mov	r0, r6
90004d6a:	681b      	ldr	r3, [r3, #0]
90004d6c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90004d6e:	4621      	mov	r1, r4
90004d70:	4628      	mov	r0, r5
90004d72:	f016 fbb7 	bl	9001b4e4 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90004d76:	6823      	ldr	r3, [r4, #0]
90004d78:	4921      	ldr	r1, [pc, #132]	@ (90004e00 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x1a0>)
90004d7a:	691a      	ldr	r2, [r3, #16]
90004d7c:	428a      	cmp	r2, r1
90004d7e:	d11a      	bne.n	90004db6 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x156>
    newTransition->invalidate();
90004d80:	695b      	ldr	r3, [r3, #20]
90004d82:	4a20      	ldr	r2, [pc, #128]	@ (90004e04 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x1a4>)
90004d84:	4293      	cmp	r3, r2
90004d86:	d111      	bne.n	90004dac <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x14c>
        Application::getInstance()->clearCachedAreas();
90004d88:	f014 f9aa 	bl	900190e0 <_ZN8touchgfx11Application11getInstanceEv>
90004d8c:	6803      	ldr	r3, [r0, #0]
90004d8e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
}
90004d90:	b001      	add	sp, #4
90004d92:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004d96:	4718      	bx	r3
    if (*currentScreen)
90004d98:	f8d8 0000 	ldr.w	r0, [r8]
90004d9c:	2800      	cmp	r0, #0
90004d9e:	d1a0      	bne.n	90004ce2 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x82>
90004da0:	e7a8      	b.n	90004cf4 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x94>
    if (*currentPresenter)
90004da2:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004da6:	2800      	cmp	r0, #0
90004da8:	d195      	bne.n	90004cd6 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x76>
90004daa:	e7a3      	b.n	90004cf4 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x94>
    newTransition->invalidate();
90004dac:	4620      	mov	r0, r4
90004dae:	b001      	add	sp, #4
90004db0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004db4:	4718      	bx	r3
    newTransition->init();
90004db6:	4620      	mov	r0, r4
90004db8:	4790      	blx	r2
    newTransition->invalidate();
90004dba:	6823      	ldr	r3, [r4, #0]
90004dbc:	e7e0      	b.n	90004d80 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x120>
        (*currentTrans)->tearDown();
90004dbe:	4790      	blx	r2
    if (*currentTrans)
90004dc0:	f8d9 0000 	ldr.w	r0, [r9]
90004dc4:	2800      	cmp	r0, #0
90004dc6:	f43f af79 	beq.w	90004cbc <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x5c>
        (*currentTrans)->~Transition();
90004dca:	6803      	ldr	r3, [r0, #0]
90004dcc:	e774      	b.n	90004cb8 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x58>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004dce:	4b0e      	ldr	r3, [pc, #56]	@ (90004e08 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x1a8>)
90004dd0:	21a3      	movs	r1, #163	@ 0xa3
90004dd2:	4a0e      	ldr	r2, [pc, #56]	@ (90004e0c <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x1ac>)
90004dd4:	480e      	ldr	r0, [pc, #56]	@ (90004e10 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x1b0>)
90004dd6:	f028 fae7 	bl	9002d3a8 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004dda:	4b0e      	ldr	r3, [pc, #56]	@ (90004e14 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x1b4>)
90004ddc:	21a5      	movs	r1, #165	@ 0xa5
90004dde:	4a0b      	ldr	r2, [pc, #44]	@ (90004e0c <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x1ac>)
90004de0:	480b      	ldr	r0, [pc, #44]	@ (90004e10 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x1b0>)
90004de2:	f028 fae1 	bl	9002d3a8 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004de6:	4b0c      	ldr	r3, [pc, #48]	@ (90004e18 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x1b8>)
90004de8:	21a4      	movs	r1, #164	@ 0xa4
90004dea:	4a08      	ldr	r2, [pc, #32]	@ (90004e0c <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x1ac>)
90004dec:	4808      	ldr	r0, [pc, #32]	@ (90004e10 <_ZN23FrontendApplicationBase43gotoHome_ScreenScreenWipeTransitionEastImplEv+0x1b0>)
90004dee:	f028 fadb 	bl	9002d3a8 <__assert_func>
90004df2:	bf00      	nop
90004df4:	90004941 	.word	0x90004941
90004df8:	24021c00 	.word	0x24021c00
90004dfc:	9003087c 	.word	0x9003087c
90004e00:	90004981 	.word	0x90004981
90004e04:	90004a05 	.word	0x90004a05
90004e08:	9002fab0 	.word	0x9002fab0
90004e0c:	9002fdac 	.word	0x9002fdac
90004e10:	9002fc1c 	.word	0x9002fc1c
90004e14:	9002fd08 	.word	0x9002fd08
90004e18:	9002fc64 	.word	0x9002fc64
90004e1c:	24021c54 	.word	0x24021c54
90004e20:	24021c50 	.word	0x24021c50

90004e24 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoTC_ScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoTC_ScreenScreenWipeTransitionEastImpl()
{
90004e24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<TC_ScreenView, TC_ScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90004e28:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
90004e2c:	4607      	mov	r7, r0
90004e2e:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004e30:	68b0      	ldr	r0, [r6, #8]
90004e32:	6803      	ldr	r3, [r0, #0]
90004e34:	6a1b      	ldr	r3, [r3, #32]
90004e36:	4798      	blx	r3
90004e38:	f5b0 7fec 	cmp.w	r0, #472	@ 0x1d8
90004e3c:	f0c0 80a9 	bcc.w	90004f92 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x16e>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004e40:	6870      	ldr	r0, [r6, #4]
90004e42:	6803      	ldr	r3, [r0, #0]
90004e44:	6a1b      	ldr	r3, [r3, #32]
90004e46:	4798      	blx	r3
90004e48:	280f      	cmp	r0, #15
90004e4a:	f240 80ae 	bls.w	90004faa <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x186>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004e4e:	68f0      	ldr	r0, [r6, #12]
90004e50:	6803      	ldr	r3, [r0, #0]
90004e52:	6a1b      	ldr	r3, [r3, #32]
90004e54:	4798      	blx	r3
90004e56:	2813      	cmp	r0, #19
90004e58:	f240 80a1 	bls.w	90004f9e <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x17a>
    if (*currentTrans)
90004e5c:	f8df 9180 	ldr.w	r9, [pc, #384]	@ 90004fe0 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x1bc>
    Application::getInstance()->clearAllTimerWidgets();
90004e60:	f014 f93e 	bl	900190e0 <_ZN8touchgfx11Application11getInstanceEv>
90004e64:	3004      	adds	r0, #4
90004e66:	f014 f988 	bl	9001917a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90004e6a:	f8d9 0000 	ldr.w	r0, [r9]
90004e6e:	b138      	cbz	r0, 90004e80 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x5c>
        (*currentTrans)->tearDown();
90004e70:	6803      	ldr	r3, [r0, #0]
90004e72:	4951      	ldr	r1, [pc, #324]	@ (90004fb8 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x194>)
90004e74:	68da      	ldr	r2, [r3, #12]
90004e76:	428a      	cmp	r2, r1
90004e78:	f040 8083 	bne.w	90004f82 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x15e>
        (*currentTrans)->~Transition();
90004e7c:	681b      	ldr	r3, [r3, #0]
90004e7e:	4798      	blx	r3
    if (*currentScreen)
90004e80:	f8df 8160 	ldr.w	r8, [pc, #352]	@ 90004fe4 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x1c0>
90004e84:	f8d8 0000 	ldr.w	r0, [r8]
90004e88:	2800      	cmp	r0, #0
90004e8a:	d06c      	beq.n	90004f66 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x142>
        (*currentScreen)->tearDownScreen();
90004e8c:	6803      	ldr	r3, [r0, #0]
90004e8e:	695b      	ldr	r3, [r3, #20]
90004e90:	4798      	blx	r3
    if (*currentPresenter)
90004e92:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004e96:	2800      	cmp	r0, #0
90004e98:	d060      	beq.n	90004f5c <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x138>
        (*currentPresenter)->deactivate();
90004e9a:	6803      	ldr	r3, [r0, #0]
90004e9c:	685b      	ldr	r3, [r3, #4]
90004e9e:	4798      	blx	r3
    if (*currentScreen)
90004ea0:	f8d8 0000 	ldr.w	r0, [r8]
90004ea4:	b110      	cbz	r0, 90004eac <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x88>
        (*currentScreen)->~Screen();
90004ea6:	6803      	ldr	r3, [r0, #0]
90004ea8:	681b      	ldr	r3, [r3, #0]
90004eaa:	4798      	blx	r3
    if (*currentPresenter)
90004eac:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004eb0:	b110      	cbz	r0, 90004eb8 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x94>
        (*currentPresenter)->~Presenter();
90004eb2:	6803      	ldr	r3, [r0, #0]
90004eb4:	689b      	ldr	r3, [r3, #8]
90004eb6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90004eb8:	68f0      	ldr	r0, [r6, #12]
90004eba:	2100      	movs	r1, #0
90004ebc:	f04f 0b00 	mov.w	fp, #0
90004ec0:	6803      	ldr	r3, [r0, #0]
90004ec2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004ec4:	4798      	blx	r3
          animationSteps(transitionSteps),
90004ec6:	2314      	movs	r3, #20
90004ec8:	4604      	mov	r4, r0
90004eca:	4659      	mov	r1, fp
90004ecc:	f8a0 3009 	strh.w	r3, [r0, #9]
            targetValue = HAL::DISPLAY_WIDTH;
90004ed0:	4b3a      	ldr	r3, [pc, #232]	@ (90004fbc <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x198>)
90004ed2:	881b      	ldrh	r3, [r3, #0]
90004ed4:	8183      	strh	r3, [r0, #12]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90004ed6:	68b0      	ldr	r0, [r6, #8]
          prevCalculatedValue(0)
90004ed8:	4b39      	ldr	r3, [pc, #228]	@ (90004fc0 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x19c>)
90004eda:	f8c4 b004 	str.w	fp, [r4, #4]
90004ede:	6023      	str	r3, [r4, #0]
90004ee0:	6803      	ldr	r3, [r0, #0]
90004ee2:	f884 b008 	strb.w	fp, [r4, #8]
90004ee6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
          calculatedValue(0),
90004ee8:	f8a4 b00e 	strh.w	fp, [r4, #14]
          prevCalculatedValue(0)
90004eec:	f8a4 b010 	strh.w	fp, [r4, #16]
90004ef0:	4798      	blx	r3
90004ef2:	4605      	mov	r5, r0
90004ef4:	f001 ff72 	bl	90006ddc <_ZN13TC_ScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90004ef8:	6870      	ldr	r0, [r6, #4]
90004efa:	4659      	mov	r1, fp
90004efc:	6803      	ldr	r3, [r0, #0]
90004efe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004f00:	4798      	blx	r3
90004f02:	4606      	mov	r6, r0
90004f04:	4629      	mov	r1, r5
90004f06:	f001 ff13 	bl	90006d30 <_ZN18TC_ScreenPresenterC1ER13TC_ScreenView>
    model->bind(newPresenter);
90004f0a:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
90004f0c:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
90004f10:	4628      	mov	r0, r5
    *currentTrans = newTransition;
90004f12:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
90004f16:	f8c8 5000 	str.w	r5, [r8]
90004f1a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90004f1e:	682b      	ldr	r3, [r5, #0]
90004f20:	f8c6 a008 	str.w	sl, [r6, #8]
90004f24:	68db      	ldr	r3, [r3, #12]
90004f26:	63ee      	str	r6, [r5, #60]	@ 0x3c
90004f28:	4798      	blx	r3
    newPresenter->activate();
90004f2a:	6833      	ldr	r3, [r6, #0]
90004f2c:	4630      	mov	r0, r6
90004f2e:	681b      	ldr	r3, [r3, #0]
90004f30:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90004f32:	4621      	mov	r1, r4
90004f34:	4628      	mov	r0, r5
90004f36:	f016 fad5 	bl	9001b4e4 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90004f3a:	6823      	ldr	r3, [r4, #0]
90004f3c:	4921      	ldr	r1, [pc, #132]	@ (90004fc4 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x1a0>)
90004f3e:	691a      	ldr	r2, [r3, #16]
90004f40:	428a      	cmp	r2, r1
90004f42:	d11a      	bne.n	90004f7a <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x156>
    newTransition->invalidate();
90004f44:	695b      	ldr	r3, [r3, #20]
90004f46:	4a20      	ldr	r2, [pc, #128]	@ (90004fc8 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x1a4>)
90004f48:	4293      	cmp	r3, r2
90004f4a:	d111      	bne.n	90004f70 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x14c>
        Application::getInstance()->clearCachedAreas();
90004f4c:	f014 f8c8 	bl	900190e0 <_ZN8touchgfx11Application11getInstanceEv>
90004f50:	6803      	ldr	r3, [r0, #0]
90004f52:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
}
90004f54:	b001      	add	sp, #4
90004f56:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004f5a:	4718      	bx	r3
    if (*currentScreen)
90004f5c:	f8d8 0000 	ldr.w	r0, [r8]
90004f60:	2800      	cmp	r0, #0
90004f62:	d1a0      	bne.n	90004ea6 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x82>
90004f64:	e7a8      	b.n	90004eb8 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x94>
    if (*currentPresenter)
90004f66:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004f6a:	2800      	cmp	r0, #0
90004f6c:	d195      	bne.n	90004e9a <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x76>
90004f6e:	e7a3      	b.n	90004eb8 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x94>
    newTransition->invalidate();
90004f70:	4620      	mov	r0, r4
90004f72:	b001      	add	sp, #4
90004f74:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004f78:	4718      	bx	r3
    newTransition->init();
90004f7a:	4620      	mov	r0, r4
90004f7c:	4790      	blx	r2
    newTransition->invalidate();
90004f7e:	6823      	ldr	r3, [r4, #0]
90004f80:	e7e0      	b.n	90004f44 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x120>
        (*currentTrans)->tearDown();
90004f82:	4790      	blx	r2
    if (*currentTrans)
90004f84:	f8d9 0000 	ldr.w	r0, [r9]
90004f88:	2800      	cmp	r0, #0
90004f8a:	f43f af79 	beq.w	90004e80 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x5c>
        (*currentTrans)->~Transition();
90004f8e:	6803      	ldr	r3, [r0, #0]
90004f90:	e774      	b.n	90004e7c <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x58>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004f92:	4b0e      	ldr	r3, [pc, #56]	@ (90004fcc <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x1a8>)
90004f94:	21a3      	movs	r1, #163	@ 0xa3
90004f96:	4a0e      	ldr	r2, [pc, #56]	@ (90004fd0 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x1ac>)
90004f98:	480e      	ldr	r0, [pc, #56]	@ (90004fd4 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x1b0>)
90004f9a:	f028 fa05 	bl	9002d3a8 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004f9e:	4b0e      	ldr	r3, [pc, #56]	@ (90004fd8 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x1b4>)
90004fa0:	21a5      	movs	r1, #165	@ 0xa5
90004fa2:	4a0b      	ldr	r2, [pc, #44]	@ (90004fd0 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x1ac>)
90004fa4:	480b      	ldr	r0, [pc, #44]	@ (90004fd4 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x1b0>)
90004fa6:	f028 f9ff 	bl	9002d3a8 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004faa:	4b0c      	ldr	r3, [pc, #48]	@ (90004fdc <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x1b8>)
90004fac:	21a4      	movs	r1, #164	@ 0xa4
90004fae:	4a08      	ldr	r2, [pc, #32]	@ (90004fd0 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x1ac>)
90004fb0:	4808      	ldr	r0, [pc, #32]	@ (90004fd4 <_ZN23FrontendApplicationBase41gotoTC_ScreenScreenWipeTransitionEastImplEv+0x1b0>)
90004fb2:	f028 f9f9 	bl	9002d3a8 <__assert_func>
90004fb6:	bf00      	nop
90004fb8:	90004941 	.word	0x90004941
90004fbc:	24021c00 	.word	0x24021c00
90004fc0:	9003087c 	.word	0x9003087c
90004fc4:	90004981 	.word	0x90004981
90004fc8:	90004a05 	.word	0x90004a05
90004fcc:	9002fab0 	.word	0x9002fab0
90004fd0:	9002fe98 	.word	0x9002fe98
90004fd4:	9002fc1c 	.word	0x9002fc1c
90004fd8:	9002fd08 	.word	0x9002fd08
90004fdc:	9002fc64 	.word	0x9002fc64
90004fe0:	24021c54 	.word	0x24021c54
90004fe4:	24021c50 	.word	0x24021c50

90004fe8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    virtual void handlePendingScreenTransition()
90004fe8:	b570      	push	{r4, r5, r6, lr}
90004fea:	4604      	mov	r4, r0
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90004fec:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
90004ff0:	b1b8      	cbz	r0, 90005022 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90004ff2:	6802      	ldr	r2, [r0, #0]
90004ff4:	4916      	ldr	r1, [pc, #88]	@ (90005050 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x68>)
90004ff6:	68d3      	ldr	r3, [r2, #12]
90004ff8:	428b      	cmp	r3, r1
90004ffa:	d11f      	bne.n	9000503c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x54>
        return (pobject != 0) && (pmemfun != 0);
90004ffc:	6843      	ldr	r3, [r0, #4]
90004ffe:	b183      	cbz	r3, 90005022 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90005000:	6881      	ldr	r1, [r0, #8]
90005002:	b179      	cbz	r1, 90005024 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3c>
            pendingScreenTransitionCallback->execute();
90005004:	6892      	ldr	r2, [r2, #8]
90005006:	4b13      	ldr	r3, [pc, #76]	@ (90005054 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6c>)
90005008:	429a      	cmp	r2, r3
9000500a:	d11e      	bne.n	9000504a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x62>
        (pobject->*pmemfun)();
9000500c:	68c2      	ldr	r2, [r0, #12]
9000500e:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
90005012:	eb03 0062 	add.w	r0, r3, r2, asr #1
90005016:	07d3      	lsls	r3, r2, #31
90005018:	d40d      	bmi.n	90005036 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x4e>
9000501a:	4788      	blx	r1
            pendingScreenTransitionCallback = 0;
9000501c:	2300      	movs	r3, #0
9000501e:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
90005022:	bd70      	pop	{r4, r5, r6, pc}
        return (pobject != 0) && (pmemfun != 0);
90005024:	68c5      	ldr	r5, [r0, #12]
90005026:	07ee      	lsls	r6, r5, #31
90005028:	d5fb      	bpl.n	90005022 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
9000502a:	6892      	ldr	r2, [r2, #8]
9000502c:	4e09      	ldr	r6, [pc, #36]	@ (90005054 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6c>)
9000502e:	42b2      	cmp	r2, r6
90005030:	d10b      	bne.n	9000504a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x62>
        (pobject->*pmemfun)();
90005032:	eb03 0065 	add.w	r0, r3, r5, asr #1
90005036:	6803      	ldr	r3, [r0, #0]
90005038:	5859      	ldr	r1, [r3, r1]
9000503a:	e7ee      	b.n	9000501a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x32>
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
9000503c:	4798      	blx	r3
9000503e:	2800      	cmp	r0, #0
90005040:	d0ef      	beq.n	90005022 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
90005042:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
90005046:	6802      	ldr	r2, [r0, #0]
90005048:	e7dc      	b.n	90005004 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x1c>
9000504a:	4790      	blx	r2
9000504c:	e7e6      	b.n	9000501c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x34>
9000504e:	bf00      	nop
90005050:	9000499d 	.word	0x9000499d
90005054:	90004985 	.word	0x90004985

90005058 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
90005058:	b570      	push	{r4, r5, r6, lr}
9000505a:	4604      	mov	r4, r0
9000505c:	4615      	mov	r5, r2
9000505e:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
90005060:	f014 f92c 	bl	900192bc <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
90005064:	4a22      	ldr	r2, [pc, #136]	@ (900050f0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x98>)
        : currentPresenter(0),
90005066:	2300      	movs	r3, #0
      frontendHeap(heap),
90005068:	f8c4 5154 	str.w	r5, [r4, #340]	@ 0x154
        instance = this;
9000506c:	6014      	str	r4, [r2, #0]
        return instance;
9000506e:	4d21      	ldr	r5, [pc, #132]	@ (900050f4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x9c>)
      model(m)
90005070:	4a21      	ldr	r2, [pc, #132]	@ (900050f8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa0>)
90005072:	6828      	ldr	r0, [r5, #0]
90005074:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
90005076:	4a21      	ldr	r2, [pc, #132]	@ (900050fc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa4>)
90005078:	4921      	ldr	r1, [pc, #132]	@ (90005100 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa8>)
9000507a:	f8c4 2144 	str.w	r2, [r4, #324]	@ 0x144
9000507e:	f8c4 3148 	str.w	r3, [r4, #328]	@ 0x148
90005082:	f8c4 6158 	str.w	r6, [r4, #344]	@ 0x158
        : currentPresenter(0),
90005086:	e9c4 334f 	strd	r3, r3, [r4, #316]	@ 0x13c
9000508a:	e9c4 3353 	strd	r3, r3, [r4, #332]	@ 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
9000508e:	6802      	ldr	r2, [r0, #0]
90005090:	6892      	ldr	r2, [r2, #8]
90005092:	428a      	cmp	r2, r1
90005094:	d129      	bne.n	900050ea <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x92>
        requestedOrientation = orientation;
90005096:	f44f 7380 	mov.w	r3, #256	@ 0x100
9000509a:	f8a0 3078 	strh.w	r3, [r0, #120]	@ 0x78
    touchgfx::Texts::setLanguage(GB);
9000509e:	2000      	movs	r0, #0
900050a0:	f001 fca0 	bl	900069e4 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
900050a4:	682b      	ldr	r3, [r5, #0]
900050a6:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900050aa:	b1e2      	cbz	r2, 900050e6 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8e>
900050ac:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900050ae:	b1d0      	cbz	r0, 900050e6 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8e>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
900050b0:	f01e fdb3 	bl	90023c1a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
900050b4:	682b      	ldr	r3, [r5, #0]
900050b6:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900050ba:	b192      	cbz	r2, 900050e2 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8a>
900050bc:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900050be:	b180      	cbz	r0, 900050e2 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8a>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
900050c0:	f01e fe26 	bl	90023d10 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
900050c4:	682b      	ldr	r3, [r5, #0]
900050c6:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900050ca:	b12a      	cbz	r2, 900050d8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x80>
900050cc:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900050ce:	b118      	cbz	r0, 900050d8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x80>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
900050d0:	f01e fe2a 	bl	90023d28 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
900050d4:	4620      	mov	r0, r4
900050d6:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
900050d8:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
900050da:	f01e fe25 	bl	90023d28 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
900050de:	4620      	mov	r0, r4
900050e0:	bd70      	pop	{r4, r5, r6, pc}
900050e2:	6898      	ldr	r0, [r3, #8]
900050e4:	e7ec      	b.n	900050c0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x68>
900050e6:	6898      	ldr	r0, [r3, #8]
900050e8:	e7e2      	b.n	900050b0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
900050ea:	4619      	mov	r1, r3
900050ec:	4790      	blx	r2
900050ee:	e7d6      	b.n	9000509e <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
900050f0:	24021c60 	.word	0x24021c60
900050f4:	24021c0c 	.word	0x24021c0c
900050f8:	90030804 	.word	0x90030804
900050fc:	900307ec 	.word	0x900307ec
90005100:	90000d3d 	.word	0x90000d3d

90005104 <_ZN23FrontendApplicationBase33gotoHome_ScreenScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90005104:	4905      	ldr	r1, [pc, #20]	@ (9000511c <_ZN23FrontendApplicationBase33gotoHome_ScreenScreenNoTransitionEv+0x18>)
90005106:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90005108:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
9000510c:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
90005110:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90005114:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
90005118:	4770      	bx	lr
9000511a:	bf00      	nop
9000511c:	90004ab9 	.word	0x90004ab9

90005120 <_ZN23FrontendApplicationBase39gotoHome_ScreenScreenWipeTransitionEastEv>:
90005120:	4905      	ldr	r1, [pc, #20]	@ (90005138 <_ZN23FrontendApplicationBase39gotoHome_ScreenScreenWipeTransitionEastEv+0x18>)
90005122:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90005124:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90005128:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
9000512c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90005130:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
90005134:	4770      	bx	lr
90005136:	bf00      	nop
90005138:	90004c61 	.word	0x90004c61

9000513c <_ZN23FrontendApplicationBase37gotoTC_ScreenScreenWipeTransitionEastEv>:
9000513c:	4905      	ldr	r1, [pc, #20]	@ (90005154 <_ZN23FrontendApplicationBase37gotoTC_ScreenScreenWipeTransitionEastEv+0x18>)
9000513e:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90005140:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90005144:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
90005148:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
9000514c:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
90005150:	4770      	bx	lr
90005152:	bf00      	nop
90005154:	90004e25 	.word	0x90004e25

90005158 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
90005158:	6a40      	ldr	r0, [r0, #36]	@ 0x24
9000515a:	4770      	bx	lr

9000515c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
9000515c:	6a80      	ldr	r0, [r0, #40]	@ 0x28
9000515e:	4770      	bx	lr

90005160 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
90005160:	4770      	bx	lr
90005162:	bf00      	nop

90005164 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    // Read dataOffset as 16bit, as it may be unaligned
    volatile const uint16_t* dataOffset = (const uint16_t*)((const uint8_t*)glyph + offsetof(GlyphNode, dataOffset));
    uint32_t offset = dataOffset[0];
90005164:	880b      	ldrh	r3, [r1, #0]
    offset |= dataOffset[1] << 16;

    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    const uint8_t* pixels = table[glyph->unicode / 2048];
90005166:	888a      	ldrh	r2, [r1, #4]
90005168:	69c0      	ldr	r0, [r0, #28]
    uint32_t offset = dataOffset[0];
9000516a:	b29b      	uxth	r3, r3
    offset |= dataOffset[1] << 16;
9000516c:	8849      	ldrh	r1, [r1, #2]
    const uint8_t* pixels = table[glyph->unicode / 2048];
9000516e:	0ad2      	lsrs	r2, r2, #11
    offset |= dataOffset[1] << 16;
90005170:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
    return pixels + offset;
90005174:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
}
90005178:	4418      	add	r0, r3
9000517a:	4770      	bx	lr

9000517c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
    if (!glyph || glyph->kerningTableSize == 0)
9000517c:	b1fa      	cbz	r2, 900051be <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x42>
{
9000517e:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
90005180:	7b14      	ldrb	r4, [r2, #12]
90005182:	b1d4      	cbz	r4, 900051ba <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
90005184:	f892 c00d 	ldrb.w	ip, [r2, #13]
90005188:	f892 e00b 	ldrb.w	lr, [r2, #11]
9000518c:	ea4f 220c 	mov.w	r2, ip, lsl #8
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
90005190:	6a03      	ldr	r3, [r0, #32]
90005192:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
90005196:	ea4e 0202 	orr.w	r2, lr, r2
9000519a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
9000519e:	eb03 0084 	add.w	r0, r3, r4, lsl #2
900051a2:	e004      	b.n	900051ae <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x32>
900051a4:	f103 0304 	add.w	r3, r3, #4
    {
        if (prevChar == kerndata->unicodePrevChar)
        {
            return kerndata->distance;
        }
        if (prevChar < kerndata->unicodePrevChar)
900051a8:	d807      	bhi.n	900051ba <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
900051aa:	4283      	cmp	r3, r0
900051ac:	d005      	beq.n	900051ba <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
        if (prevChar == kerndata->unicodePrevChar)
900051ae:	881a      	ldrh	r2, [r3, #0]
900051b0:	428a      	cmp	r2, r1
900051b2:	d1f7      	bne.n	900051a4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
            return kerndata->distance;
900051b4:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
900051b8:	bd10      	pop	{r4, pc}
        return 0;
900051ba:	2000      	movs	r0, #0
}
900051bc:	bd10      	pop	{r4, pc}
        return 0;
900051be:	4610      	mov	r0, r2
}
900051c0:	4770      	bx	lr
900051c2:	bf00      	nop

900051c4 <_ZN8touchgfx13GeneratedFontD0Ev>:
900051c4:	b510      	push	{r4, lr}
900051c6:	4604      	mov	r4, r0
900051c8:	212c      	movs	r1, #44	@ 0x2c
900051ca:	f027 fd77 	bl	9002ccbc <_ZdlPvj>
900051ce:	4620      	mov	r0, r4
900051d0:	bd10      	pop	{r4, pc}
900051d2:	bf00      	nop

900051d4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900051d4:	b530      	push	{r4, r5, lr}
900051d6:	b08b      	sub	sp, #44	@ 0x2c
900051d8:	4604      	mov	r4, r0
900051da:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
      arabicTable(formsTable)
900051de:	9500      	str	r5, [sp, #0]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900051e0:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
      arabicTable(formsTable)
900051e4:	9501      	str	r5, [sp, #4]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900051e6:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
      arabicTable(formsTable)
900051ea:	9502      	str	r5, [sp, #8]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900051ec:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
      arabicTable(formsTable)
900051f0:	9503      	str	r5, [sp, #12]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900051f2:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
      arabicTable(formsTable)
900051f6:	9504      	str	r5, [sp, #16]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900051f8:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
      arabicTable(formsTable)
900051fc:	9505      	str	r5, [sp, #20]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900051fe:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
      arabicTable(formsTable)
90005202:	9506      	str	r5, [sp, #24]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90005204:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
      arabicTable(formsTable)
90005208:	9507      	str	r5, [sp, #28]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
9000520a:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
      arabicTable(formsTable)
9000520e:	9508      	str	r5, [sp, #32]
90005210:	f015 fd9e 	bl	9001ad50 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
      glyphData(glyphDataInternalFlash),
90005214:	9b15      	ldr	r3, [sp, #84]	@ 0x54
}
90005216:	4620      	mov	r0, r4
      glyphData(glyphDataInternalFlash),
90005218:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
9000521a:	9b16      	ldr	r3, [sp, #88]	@ 0x58
9000521c:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
9000521e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90005220:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
90005222:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
90005224:	62a3      	str	r3, [r4, #40]	@ 0x28
90005226:	4b02      	ldr	r3, [pc, #8]	@ (90005230 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
90005228:	6023      	str	r3, [r4, #0]
}
9000522a:	b00b      	add	sp, #44	@ 0x2c
9000522c:	bd30      	pop	{r4, r5, pc}
9000522e:	bf00      	nop
90005230:	900308a0 	.word	0x900308a0

90005234 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
90005234:	6a80      	ldr	r0, [r0, #40]	@ 0x28
90005236:	4770      	bx	lr

90005238 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
90005238:	4770      	bx	lr
9000523a:	bf00      	nop

9000523c <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
9000523c:	4770      	bx	lr
9000523e:	bf00      	nop

90005240 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
90005240:	4770      	bx	lr
90005242:	bf00      	nop

90005244 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
90005244:	4770      	bx	lr
90005246:	bf00      	nop

90005248 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
90005248:	4770      	bx	lr
9000524a:	bf00      	nop

9000524c <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
 * The position of the text can be adjusted with setTextXY (default is centered).
 *
 * @see AbstractButtonContainer
 */
template <class T>
class TextButtonStyle : public T
9000524c:	4770      	bx	lr
9000524e:	bf00      	nop

90005250 <_ZN8touchgfx15IconButtonStyleINS_15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEED1Ev>:
 * The position of the icon can be adjusted with setIconXY.
 *
 * @see AbstractButtonContainer
 */
template <class T>
class IconButtonStyle : public T
90005250:	4770      	bx	lr
90005252:	bf00      	nop

90005254 <_ZN8touchgfx8CallbackI19Home_ScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005254:	4770      	bx	lr
90005256:	bf00      	nop

90005258 <_ZN19Home_ScreenViewBaseD1Ev>:
}

Home_ScreenViewBase::~Home_ScreenViewBase()
{

}
90005258:	4770      	bx	lr
9000525a:	bf00      	nop

9000525c <_ZN19Home_ScreenViewBase11setupScreenEv>:

void Home_ScreenViewBase::setupScreen()
{

}
9000525c:	4770      	bx	lr
9000525e:	bf00      	nop

90005260 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
90005260:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
90005264:	b133      	cbz	r3, 90005274 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>
90005266:	6ec2      	ldr	r2, [r0, #108]	@ 0x6c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005268:	f100 0374 	add.w	r3, r0, #116	@ 0x74
9000526c:	65c2      	str	r2, [r0, #92]	@ 0x5c
9000526e:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
90005270:	6603      	str	r3, [r0, #96]	@ 0x60
        T::handlePressedUpdated();
    }
90005272:	4770      	bx	lr
90005274:	6e82      	ldr	r2, [r0, #104]	@ 0x68
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005276:	f100 0370 	add.w	r3, r0, #112	@ 0x70
9000527a:	65c2      	str	r2, [r0, #92]	@ 0x5c
9000527c:	681b      	ldr	r3, [r3, #0]
9000527e:	6603      	str	r3, [r0, #96]	@ 0x60
    }
90005280:	4770      	bx	lr
90005282:	bf00      	nop

90005284 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    colortype colorPressed;  ///< The color pressed

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
90005284:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
90005288:	b153      	cbz	r3, 900052a0 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x1c>
9000528a:	f8d0 20c4 	ldr.w	r2, [r0, #196]	@ 0xc4
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
9000528e:	f100 0374 	add.w	r3, r0, #116	@ 0x74
90005292:	6ec1      	ldr	r1, [r0, #108]	@ 0x6c
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
90005294:	65c1      	str	r1, [r0, #92]	@ 0x5c
90005296:	f8c0 20a8 	str.w	r2, [r0, #168]	@ 0xa8
9000529a:	681b      	ldr	r3, [r3, #0]
9000529c:	6603      	str	r3, [r0, #96]	@ 0x60
        T::handlePressedUpdated();
    }
9000529e:	4770      	bx	lr
900052a0:	f8d0 20c0 	ldr.w	r2, [r0, #192]	@ 0xc0
900052a4:	f100 0370 	add.w	r3, r0, #112	@ 0x70
900052a8:	6e81      	ldr	r1, [r0, #104]	@ 0x68
900052aa:	e7f3      	b.n	90005294 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x10>

900052ac <_ZN8touchgfx8CallbackI19Home_ScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
900052ac:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
900052ae:	68c3      	ldr	r3, [r0, #12]
900052b0:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
900052b4:	f013 0f01 	tst.w	r3, #1
900052b8:	eb04 0063 	add.w	r0, r4, r3, asr #1
900052bc:	d004      	beq.n	900052c8 <_ZN8touchgfx8CallbackI19Home_ScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x1c>
900052be:	ea4f 0c63 	mov.w	ip, r3, asr #1
900052c2:	f854 300c 	ldr.w	r3, [r4, ip]
900052c6:	589a      	ldr	r2, [r3, r2]
    }
900052c8:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
900052cc:	4710      	bx	r2
900052ce:	bf00      	nop

900052d0 <_ZNK8touchgfx8CallbackI19Home_ScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
900052d0:	6843      	ldr	r3, [r0, #4]
900052d2:	b13b      	cbz	r3, 900052e4 <_ZNK8touchgfx8CallbackI19Home_ScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
900052d4:	6883      	ldr	r3, [r0, #8]
900052d6:	b10b      	cbz	r3, 900052dc <_ZNK8touchgfx8CallbackI19Home_ScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0xc>
900052d8:	2001      	movs	r0, #1
    }
900052da:	4770      	bx	lr
900052dc:	68c0      	ldr	r0, [r0, #12]
900052de:	f000 0001 	and.w	r0, r0, #1
900052e2:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
900052e4:	4618      	mov	r0, r3
900052e6:	4770      	bx	lr

900052e8 <_ZN8touchgfx15IconButtonStyleINS_15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEE18handleAlphaUpdatedEv>:
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
    {
        return alpha;
900052e8:	f890 302d 	ldrb.w	r3, [r0, #45]	@ 0x2d
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
900052ec:	f880 30f4 	strb.w	r3, [r0, #244]	@ 0xf4
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
900052f0:	f880 30ae 	strb.w	r3, [r0, #174]	@ 0xae
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
900052f4:	f880 305a 	strb.w	r3, [r0, #90]	@ 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        iconImage.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
900052f8:	4770      	bx	lr
900052fa:	bf00      	nop

900052fc <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:
900052fc:	f890 302d 	ldrb.w	r3, [r0, #45]	@ 0x2d
90005300:	f880 30ae 	strb.w	r3, [r0, #174]	@ 0xae
90005304:	f880 305a 	strb.w	r3, [r0, #90]	@ 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        text.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
90005308:	4770      	bx	lr
9000530a:	bf00      	nop

9000530c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
9000530c:	f890 302d 	ldrb.w	r3, [r0, #45]	@ 0x2d
90005310:	f880 305a 	strb.w	r3, [r0, #90]	@ 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
90005314:	4770      	bx	lr
90005316:	bf00      	nop

90005318 <_ZN8touchgfx15IconButtonStyleINS_15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEE20handlePressedUpdatedEv>:
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
90005318:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
    virtual void handlePressedUpdated()
9000531c:	b510      	push	{r4, lr}
9000531e:	4604      	mov	r4, r0
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
90005320:	30cc      	adds	r0, #204	@ 0xcc
90005322:	b18b      	cbz	r3, 90005348 <_ZN8touchgfx15IconButtonStyleINS_15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEE20handlePressedUpdatedEv+0x30>
90005324:	f104 01ca 	add.w	r1, r4, #202	@ 0xca
90005328:	f010 ff20 	bl	9001616c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
9000532c:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
90005330:	b193      	cbz	r3, 90005358 <_ZN8touchgfx15IconButtonStyleINS_15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEE20handlePressedUpdatedEv+0x40>
90005332:	f8d4 20c4 	ldr.w	r2, [r4, #196]	@ 0xc4
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005336:	f104 0374 	add.w	r3, r4, #116	@ 0x74
9000533a:	6ee1      	ldr	r1, [r4, #108]	@ 0x6c
        color = newColor;
9000533c:	65e1      	str	r1, [r4, #92]	@ 0x5c
9000533e:	f8c4 20a8 	str.w	r2, [r4, #168]	@ 0xa8
90005342:	681b      	ldr	r3, [r3, #0]
90005344:	6623      	str	r3, [r4, #96]	@ 0x60
    }
90005346:	bd10      	pop	{r4, pc}
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
90005348:	f104 01c8 	add.w	r1, r4, #200	@ 0xc8
9000534c:	f010 ff0e 	bl	9001616c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005350:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
90005354:	2b00      	cmp	r3, #0
90005356:	d1ec      	bne.n	90005332 <_ZN8touchgfx15IconButtonStyleINS_15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEE20handlePressedUpdatedEv+0x1a>
90005358:	f8d4 20c0 	ldr.w	r2, [r4, #192]	@ 0xc0
9000535c:	f104 0370 	add.w	r3, r4, #112	@ 0x70
90005360:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
90005362:	e7eb      	b.n	9000533c <_ZN8touchgfx15IconButtonStyleINS_15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEE20handlePressedUpdatedEv+0x24>

90005364 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
90005364:	b510      	push	{r4, lr}
90005366:	4604      	mov	r4, r0
90005368:	2178      	movs	r1, #120	@ 0x78
9000536a:	f027 fca7 	bl	9002ccbc <_ZdlPvj>
9000536e:	4620      	mov	r0, r4
90005370:	bd10      	pop	{r4, pc}
90005372:	bf00      	nop

90005374 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class TextButtonStyle : public T
90005374:	b510      	push	{r4, lr}
90005376:	4604      	mov	r4, r0
90005378:	21c8      	movs	r1, #200	@ 0xc8
9000537a:	f027 fc9f 	bl	9002ccbc <_ZdlPvj>
9000537e:	4620      	mov	r0, r4
90005380:	bd10      	pop	{r4, pc}
90005382:	bf00      	nop

90005384 <_ZN8touchgfx15IconButtonStyleINS_15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEED0Ev>:
class IconButtonStyle : public T
90005384:	b510      	push	{r4, lr}
90005386:	4604      	mov	r4, r0
90005388:	21f8      	movs	r1, #248	@ 0xf8
9000538a:	f027 fc97 	bl	9002ccbc <_ZdlPvj>
9000538e:	4620      	mov	r0, r4
90005390:	bd10      	pop	{r4, pc}
90005392:	bf00      	nop

90005394 <_ZN8touchgfx8CallbackI19Home_ScreenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005394:	b510      	push	{r4, lr}
90005396:	4604      	mov	r4, r0
90005398:	2110      	movs	r1, #16
9000539a:	f027 fc8f 	bl	9002ccbc <_ZdlPvj>
9000539e:	4620      	mov	r0, r4
900053a0:	bd10      	pop	{r4, pc}
900053a2:	bf00      	nop

900053a4 <_ZN19Home_ScreenViewBaseD0Ev>:
Home_ScreenViewBase::~Home_ScreenViewBase()
900053a4:	b510      	push	{r4, lr}
900053a6:	4604      	mov	r4, r0
}
900053a8:	f44f 618f 	mov.w	r1, #1144	@ 0x478
900053ac:	f027 fc86 	bl	9002ccbc <_ZdlPvj>
900053b0:	4620      	mov	r0, r4
900053b2:	bd10      	pop	{r4, pc}

900053b4 <_ZN19Home_ScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Home_ScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &Read_TC_Start_button)
900053b4:	f500 700c 	add.w	r0, r0, #560	@ 0x230
900053b8:	4288      	cmp	r0, r1
900053ba:	d000      	beq.n	900053be <_ZN19Home_ScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa>
900053bc:	4770      	bx	lr
{
900053be:	b508      	push	{r3, lr}
    virtual ~Home_ScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
900053c0:	f013 fe8e 	bl	900190e0 <_ZN8touchgfx11Application11getInstanceEv>
        //TC_Read_Screen_Switch
        //When Read_TC_Start_button clicked change screen to TC_Screen
        //Go to TC_Screen with screen transition towards East
        application().gotoTC_ScreenScreenWipeTransitionEast();
    }
}
900053c4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoTC_ScreenScreenWipeTransitionEast();
900053c8:	f7ff beb8 	b.w	9000513c <_ZN23FrontendApplicationBase37gotoTC_ScreenScreenWipeTransitionEastEv>

900053cc <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
900053cc:	b570      	push	{r4, r5, r6, lr}
900053ce:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
900053d0:	6b00      	ldr	r0, [r0, #48]	@ 0x30
900053d2:	b1c0      	cbz	r0, 90005406 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3a>
900053d4:	6802      	ldr	r2, [r0, #0]
900053d6:	4919      	ldr	r1, [pc, #100]	@ (9000543c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x70>)
900053d8:	68d3      	ldr	r3, [r2, #12]
900053da:	428b      	cmp	r3, r1
900053dc:	d124      	bne.n	90005428 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x5c>
        return (pobject != 0) && (pmemfun != 0);
900053de:	6843      	ldr	r3, [r0, #4]
900053e0:	b18b      	cbz	r3, 90005406 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3a>
900053e2:	6885      	ldr	r5, [r0, #8]
900053e4:	b185      	cbz	r5, 90005408 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3c>
        {
            action->execute(*this);
900053e6:	6892      	ldr	r2, [r2, #8]
900053e8:	4b15      	ldr	r3, [pc, #84]	@ (90005440 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x74>)
900053ea:	429a      	cmp	r2, r3
900053ec:	d122      	bne.n	90005434 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x68>
        (pobject->*pmemfun)(t1);
900053ee:	68c2      	ldr	r2, [r0, #12]
900053f0:	e9d0 3501 	ldrd	r3, r5, [r0, #4]
900053f4:	eb03 0062 	add.w	r0, r3, r2, asr #1
900053f8:	07d3      	lsls	r3, r2, #31
900053fa:	d40e      	bmi.n	9000541a <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x4e>
900053fc:	4621      	mov	r1, r4
900053fe:	462b      	mov	r3, r5
        }
    }
90005400:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90005404:	4718      	bx	r3
90005406:	bd70      	pop	{r4, r5, r6, pc}
        return (pobject != 0) && (pmemfun != 0);
90005408:	68c1      	ldr	r1, [r0, #12]
9000540a:	07ce      	lsls	r6, r1, #31
9000540c:	d5fb      	bpl.n	90005406 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3a>
            action->execute(*this);
9000540e:	6892      	ldr	r2, [r2, #8]
90005410:	4e0b      	ldr	r6, [pc, #44]	@ (90005440 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x74>)
90005412:	42b2      	cmp	r2, r6
90005414:	d10e      	bne.n	90005434 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x68>
        (pobject->*pmemfun)(t1);
90005416:	eb03 0061 	add.w	r0, r3, r1, asr #1
9000541a:	6803      	ldr	r3, [r0, #0]
9000541c:	4621      	mov	r1, r4
9000541e:	595d      	ldr	r5, [r3, r5]
90005420:	462b      	mov	r3, r5
    }
90005422:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90005426:	4718      	bx	r3
        if (action && action->isValid())
90005428:	4798      	blx	r3
9000542a:	2800      	cmp	r0, #0
9000542c:	d0eb      	beq.n	90005406 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3a>
            action->execute(*this);
9000542e:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90005430:	6802      	ldr	r2, [r0, #0]
90005432:	e7d8      	b.n	900053e6 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1a>
90005434:	4621      	mov	r1, r4
    }
90005436:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            action->execute(*this);
9000543a:	4710      	bx	r2
9000543c:	900052d1 	.word	0x900052d1
90005440:	900052ad 	.word	0x900052ad

90005444 <_ZN8touchgfx15IconButtonStyleINS_15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEE14setIconBitmapsERKNS_6BitmapES9_>:
        iconReleased = newIconReleased;
90005444:	880b      	ldrh	r3, [r1, #0]
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
90005446:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
9000544a:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
9000544e:	4604      	mov	r4, r0
        iconReleased = newIconReleased;
90005450:	f8a0 30c8 	strh.w	r3, [r0, #200]	@ 0xc8
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
90005454:	4615      	mov	r5, r2
        iconPressed = newIconPressed;
90005456:	8813      	ldrh	r3, [r2, #0]
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
90005458:	2e00      	cmp	r6, #0
        iconPressed = newIconPressed;
9000545a:	f8a0 30ca 	strh.w	r3, [r0, #202]	@ 0xca
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
9000545e:	4610      	mov	r0, r2
90005460:	bfb8      	it	lt
90005462:	3601      	addlt	r6, #1
90005464:	f017 fc32 	bl	9001cccc <_ZNK8touchgfx6Bitmap8getWidthEv>
90005468:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
9000546c:	4607      	mov	r7, r0
9000546e:	4628      	mov	r0, r5
90005470:	f3c6 064f 	ubfx	r6, r6, #1, #16
90005474:	2b00      	cmp	r3, #0
90005476:	bfb8      	it	lt
90005478:	3301      	addlt	r3, #1
9000547a:	f3c3 054f 	ubfx	r5, r3, #1, #16
9000547e:	f017 fc59 	bl	9001cd34 <_ZNK8touchgfx6Bitmap9getHeightEv>
90005482:	2f00      	cmp	r7, #0
        handlePressedUpdated();
90005484:	6822      	ldr	r2, [r4, #0]
90005486:	491e      	ldr	r1, [pc, #120]	@ (90005500 <_ZN8touchgfx15IconButtonStyleINS_15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEE14setIconBitmapsERKNS_6BitmapES9_+0xbc>)
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
90005488:	bfb8      	it	lt
9000548a:	3701      	addlt	r7, #1
9000548c:	2800      	cmp	r0, #0
        handlePressedUpdated();
9000548e:	f8d2 208c 	ldr.w	r2, [r2, #140]	@ 0x8c
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
90005492:	bfb8      	it	lt
90005494:	3001      	addlt	r0, #1
90005496:	eba6 0667 	sub.w	r6, r6, r7, asr #1
9000549a:	428a      	cmp	r2, r1
9000549c:	eba5 0360 	sub.w	r3, r5, r0, asr #1
        rect.x = x;
900054a0:	f8a4 60d0 	strh.w	r6, [r4, #208]	@ 0xd0
        rect.y = y;
900054a4:	f8a4 30d2 	strh.w	r3, [r4, #210]	@ 0xd2
900054a8:	d125      	bne.n	900054f6 <_ZN8touchgfx15IconButtonStyleINS_15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEE14setIconBitmapsERKNS_6BitmapES9_+0xb2>
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
900054aa:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
900054ae:	f104 00cc 	add.w	r0, r4, #204	@ 0xcc
900054b2:	b993      	cbnz	r3, 900054da <_ZN8touchgfx15IconButtonStyleINS_15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEE14setIconBitmapsERKNS_6BitmapES9_+0x96>
900054b4:	f104 01c8 	add.w	r1, r4, #200	@ 0xc8
900054b8:	f010 fe58 	bl	9001616c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
900054bc:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
900054c0:	b19b      	cbz	r3, 900054ea <_ZN8touchgfx15IconButtonStyleINS_15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEE14setIconBitmapsERKNS_6BitmapES9_+0xa6>
900054c2:	f8d4 20c4 	ldr.w	r2, [r4, #196]	@ 0xc4
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
900054c6:	f104 0374 	add.w	r3, r4, #116	@ 0x74
900054ca:	6ee1      	ldr	r1, [r4, #108]	@ 0x6c
900054cc:	65e1      	str	r1, [r4, #92]	@ 0x5c
900054ce:	f8c4 20a8 	str.w	r2, [r4, #168]	@ 0xa8
900054d2:	681b      	ldr	r3, [r3, #0]
900054d4:	6623      	str	r3, [r4, #96]	@ 0x60
    }
900054d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
900054da:	f104 01ca 	add.w	r1, r4, #202	@ 0xca
900054de:	f010 fe45 	bl	9001616c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
900054e2:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
900054e6:	2b00      	cmp	r3, #0
900054e8:	d1eb      	bne.n	900054c2 <_ZN8touchgfx15IconButtonStyleINS_15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEE14setIconBitmapsERKNS_6BitmapES9_+0x7e>
900054ea:	f8d4 20c0 	ldr.w	r2, [r4, #192]	@ 0xc0
900054ee:	f104 0370 	add.w	r3, r4, #112	@ 0x70
900054f2:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
900054f4:	e7ea      	b.n	900054cc <_ZN8touchgfx15IconButtonStyleINS_15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEE14setIconBitmapsERKNS_6BitmapES9_+0x88>
        handlePressedUpdated();
900054f6:	4620      	mov	r0, r4
    }
900054f8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        handlePressedUpdated();
900054fc:	4710      	bx	r2
900054fe:	bf00      	nop
90005500:	90005319 	.word	0x90005319

90005504 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
90005504:	790b      	ldrb	r3, [r1, #4]
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
90005506:	1e1a      	subs	r2, r3, #0
    virtual void handleClickEvent(const ClickEvent& event)
90005508:	b570      	push	{r4, r5, r6, lr}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
9000550a:	bf18      	it	ne
9000550c:	2201      	movne	r2, #1
        return pressed;
9000550e:	f890 602c 	ldrb.w	r6, [r0, #44]	@ 0x2c
    virtual void handleClickEvent(const ClickEvent& event)
90005512:	460d      	mov	r5, r1
90005514:	4604      	mov	r4, r0
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
90005516:	42b2      	cmp	r2, r6
90005518:	d004      	beq.n	90005524 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x20>
        {
            setPressed(newPressedValue);
            invalidate();
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
9000551a:	b116      	cbz	r6, 90005522 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
9000551c:	792b      	ldrb	r3, [r5, #4]
9000551e:	2b01      	cmp	r3, #1
90005520:	d00e      	beq.n	90005540 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
90005522:	bd70      	pop	{r4, r5, r6, pc}
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
90005524:	fab3 f383 	clz	r3, r3
90005528:	095b      	lsrs	r3, r3, #5
9000552a:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
        handlePressedUpdated();
9000552e:	6803      	ldr	r3, [r0, #0]
90005530:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
90005534:	4798      	blx	r3
            invalidate();
90005536:	6823      	ldr	r3, [r4, #0]
90005538:	4620      	mov	r0, r4
9000553a:	695b      	ldr	r3, [r3, #20]
9000553c:	4798      	blx	r3
9000553e:	e7ec      	b.n	9000551a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x16>
            executeAction();
90005540:	6823      	ldr	r3, [r4, #0]
90005542:	4a1e      	ldr	r2, [pc, #120]	@ (900055bc <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xb8>)
90005544:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
90005548:	4293      	cmp	r3, r2
9000554a:	d128      	bne.n	9000559e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x9a>
        if (action && action->isValid())
9000554c:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000554e:	2800      	cmp	r0, #0
90005550:	d0e7      	beq.n	90005522 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
90005552:	6802      	ldr	r2, [r0, #0]
90005554:	491a      	ldr	r1, [pc, #104]	@ (900055c0 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xbc>)
90005556:	68d3      	ldr	r3, [r2, #12]
90005558:	428b      	cmp	r3, r1
9000555a:	d124      	bne.n	900055a6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xa2>
        return (pobject != 0) && (pmemfun != 0);
9000555c:	6843      	ldr	r3, [r0, #4]
9000555e:	2b00      	cmp	r3, #0
90005560:	d0df      	beq.n	90005522 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
90005562:	6885      	ldr	r5, [r0, #8]
90005564:	b17d      	cbz	r5, 90005586 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x82>
            action->execute(*this);
90005566:	6892      	ldr	r2, [r2, #8]
90005568:	4b16      	ldr	r3, [pc, #88]	@ (900055c4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc0>)
9000556a:	429a      	cmp	r2, r3
9000556c:	d121      	bne.n	900055b2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xae>
        (pobject->*pmemfun)(t1);
9000556e:	68c2      	ldr	r2, [r0, #12]
90005570:	e9d0 3501 	ldrd	r3, r5, [r0, #4]
90005574:	eb03 0062 	add.w	r0, r3, r2, asr #1
90005578:	07d3      	lsls	r3, r2, #31
9000557a:	d40d      	bmi.n	90005598 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x94>
9000557c:	4621      	mov	r1, r4
9000557e:	462b      	mov	r3, r5
    }
90005580:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90005584:	4718      	bx	r3
        return (pobject != 0) && (pmemfun != 0);
90005586:	68c1      	ldr	r1, [r0, #12]
90005588:	07ce      	lsls	r6, r1, #31
9000558a:	d5ca      	bpl.n	90005522 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
9000558c:	6892      	ldr	r2, [r2, #8]
9000558e:	4e0d      	ldr	r6, [pc, #52]	@ (900055c4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc0>)
90005590:	42b2      	cmp	r2, r6
90005592:	d10e      	bne.n	900055b2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xae>
        (pobject->*pmemfun)(t1);
90005594:	eb03 0061 	add.w	r0, r3, r1, asr #1
90005598:	6803      	ldr	r3, [r0, #0]
9000559a:	595d      	ldr	r5, [r3, r5]
9000559c:	e7ee      	b.n	9000557c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x78>
            executeAction();
9000559e:	4620      	mov	r0, r4
    }
900055a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
900055a4:	4718      	bx	r3
        if (action && action->isValid())
900055a6:	4798      	blx	r3
900055a8:	2800      	cmp	r0, #0
900055aa:	d0ba      	beq.n	90005522 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
            action->execute(*this);
900055ac:	6b20      	ldr	r0, [r4, #48]	@ 0x30
900055ae:	6802      	ldr	r2, [r0, #0]
900055b0:	e7d9      	b.n	90005566 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x62>
900055b2:	4621      	mov	r1, r4
    }
900055b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900055b8:	4710      	bx	r2
900055ba:	bf00      	nop
900055bc:	900053cd 	.word	0x900053cd
900055c0:	900052d1 	.word	0x900052d1
900055c4:	900052ad 	.word	0x900052ad

900055c8 <_ZN19Home_ScreenViewBaseC1Ev>:
Home_ScreenViewBase::Home_ScreenViewBase() :
900055c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900055cc:	b08f      	sub	sp, #60	@ 0x3c
900055ce:	4604      	mov	r4, r0
        : presenter(0)
900055d0:	2500      	movs	r5, #0
900055d2:	f015 fddb 	bl	9001b18c <_ZN8touchgfx6ScreenC1Ev>
          touchable(false),
900055d6:	f44f 7680 	mov.w	r6, #256	@ 0x100
        : Widget(), alpha(255), color(0)
900055da:	27ff      	movs	r7, #255	@ 0xff
900055dc:	4ae8      	ldr	r2, [pc, #928]	@ (90005980 <_ZN19Home_ScreenViewBaseC1Ev+0x3b8>)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900055de:	f04f 38ff 	mov.w	r8, #4294967295
    flexButtonCallback(this, &Home_ScreenViewBase::flexButtonCallbackHandler)
900055e2:	4be8      	ldr	r3, [pc, #928]	@ (90005984 <_ZN19Home_ScreenViewBaseC1Ev+0x3bc>)
        : typedTextId(id)
900055e4:	f64f 79ff 	movw	r9, #65535	@ 0xffff
900055e8:	f8df b3cc 	ldr.w	fp, [pc, #972]	@ 900059b8 <_ZN19Home_ScreenViewBaseC1Ev+0x3f0>
900055ec:	a90c      	add	r1, sp, #48	@ 0x30
900055ee:	6023      	str	r3, [r4, #0]
        : pressed(false), alpha(255), action(0)
900055f0:	f44f 4a7f 	mov.w	sl, #65280	@ 0xff00
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
900055f4:	4be4      	ldr	r3, [pc, #912]	@ (90005988 <_ZN19Home_ScreenViewBaseC1Ev+0x3c0>)
900055f6:	f8a4 6064 	strh.w	r6, [r4, #100]	@ 0x64
900055fa:	6422      	str	r2, [r4, #64]	@ 0x40
900055fc:	f884 7066 	strb.w	r7, [r4, #102]	@ 0x66
90005600:	f8a4 6090 	strh.w	r6, [r4, #144]	@ 0x90
90005604:	66e2      	str	r2, [r4, #108]	@ 0x6c
90005606:	f884 7092 	strb.w	r7, [r4, #146]	@ 0x92
9000560a:	63e5      	str	r5, [r4, #60]	@ 0x3c
        : color(col)
9000560c:	66a5      	str	r5, [r4, #104]	@ 0x68
9000560e:	f8c4 5094 	str.w	r5, [r4, #148]	@ 0x94
        : x(0), y(0), width(0), height(0)
90005612:	e9c4 5511 	strd	r5, r5, [r4, #68]	@ 0x44
90005616:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
          nextSibling(0),
9000561a:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
          cachedAbsX(0),
9000561e:	e9c4 5517 	strd	r5, r5, [r4, #92]	@ 0x5c
90005622:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
90005626:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
          nextSibling(0),
9000562a:	e9c4 5520 	strd	r5, r5, [r4, #128]	@ 0x80
          cachedAbsX(0),
9000562e:	e9c4 5522 	strd	r5, r5, [r4, #136]	@ 0x88
90005632:	e9c4 5527 	strd	r5, r5, [r4, #156]	@ 0x9c
90005636:	e9c4 5529 	strd	r5, r5, [r4, #164]	@ 0xa4
          nextSibling(0),
9000563a:	e9c4 552b 	strd	r5, r5, [r4, #172]	@ 0xac
          cachedAbsX(0),
9000563e:	e9c4 552d 	strd	r5, r5, [r4, #180]	@ 0xb4
90005642:	f8c4 2098 	str.w	r2, [r4, #152]	@ 0x98
90005646:	f504 7286 	add.w	r2, r4, #268	@ 0x10c
          touchable(false),
9000564a:	f8a4 60bc 	strh.w	r6, [r4, #188]	@ 0xbc
9000564e:	4610      	mov	r0, r2
90005650:	f884 70be 	strb.w	r7, [r4, #190]	@ 0xbe
90005654:	f8a4 60e8 	strh.w	r6, [r4, #232]	@ 0xe8
90005658:	f8c4 70fa 	str.w	r7, [r4, #250]	@ 0xfa
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000565c:	f8c4 8104 	str.w	r8, [r4, #260]	@ 0x104
90005660:	f8c4 30c4 	str.w	r3, [r4, #196]	@ 0xc4
90005664:	f8a4 90f0 	strh.w	r9, [r4, #240]	@ 0xf0
        : color(col)
90005668:	f8c4 50c0 	str.w	r5, [r4, #192]	@ 0xc0
9000566c:	f8c4 50f4 	str.w	r5, [r4, #244]	@ 0xf4
90005670:	f8a4 50f8 	strh.w	r5, [r4, #248]	@ 0xf8
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005674:	f8c4 5100 	str.w	r5, [r4, #256]	@ 0x100
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
90005678:	f8c4 5108 	str.w	r5, [r4, #264]	@ 0x108
9000567c:	f8c4 b0ec 	str.w	fp, [r4, #236]	@ 0xec
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
90005680:	f8ad 8030 	strh.w	r8, [sp, #48]	@ 0x30
90005684:	9207      	str	r2, [sp, #28]
        : x(0), y(0), width(0), height(0)
90005686:	e9c4 5532 	strd	r5, r5, [r4, #200]	@ 0xc8
9000568a:	e9c4 5534 	strd	r5, r5, [r4, #208]	@ 0xd0
          nextSibling(0),
9000568e:	e9c4 5536 	strd	r5, r5, [r4, #216]	@ 0xd8
          cachedAbsX(0),
90005692:	e9c4 5538 	strd	r5, r5, [r4, #224]	@ 0xe0
90005696:	f00f fdf3 	bl	90015280 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
        touchable = touch;
9000569a:	f240 1301 	movw	r3, #257	@ 0x101
        : T(), up(), down()
9000569e:	4abb      	ldr	r2, [pc, #748]	@ (9000598c <_ZN19Home_ScreenViewBaseC1Ev+0x3c4>)
        T::add(borderBox);
900056a0:	f504 709c 	add.w	r0, r4, #312	@ 0x138
        : Box(), borderColor(0), borderSize(0)
900056a4:	49ba      	ldr	r1, [pc, #744]	@ (90005990 <_ZN19Home_ScreenViewBaseC1Ev+0x3c8>)
          touchable(false),
900056a6:	f8a4 6190 	strh.w	r6, [r4, #400]	@ 0x190
900056aa:	f884 9192 	strb.w	r9, [r4, #402]	@ 0x192
900056ae:	f8a4 a164 	strh.w	sl, [r4, #356]	@ 0x164
        touchable = touch;
900056b2:	f8a4 315c 	strh.w	r3, [r4, #348]	@ 0x15c
        : T(), up(), down()
900056b6:	f8c4 2138 	str.w	r2, [r4, #312]	@ 0x138
900056ba:	f8c4 116c 	str.w	r1, [r4, #364]	@ 0x16c
        T::add(borderBox);
900056be:	f504 71b6 	add.w	r1, r4, #364	@ 0x16c
          firstChild(0)
900056c2:	f8c4 5160 	str.w	r5, [r4, #352]	@ 0x160
900056c6:	f8c4 5168 	str.w	r5, [r4, #360]	@ 0x168
900056ca:	f8a4 519c 	strh.w	r5, [r4, #412]	@ 0x19c
900056ce:	9002      	str	r0, [sp, #8]
900056d0:	e9c4 554f 	strd	r5, r5, [r4, #316]	@ 0x13c
900056d4:	e9c4 5551 	strd	r5, r5, [r4, #324]	@ 0x144
          nextSibling(0),
900056d8:	e9c4 5553 	strd	r5, r5, [r4, #332]	@ 0x14c
          cachedAbsX(0),
900056dc:	e9c4 5555 	strd	r5, r5, [r4, #340]	@ 0x154
          nextSibling(0),
900056e0:	e9c4 5560 	strd	r5, r5, [r4, #384]	@ 0x180
          cachedAbsX(0),
900056e4:	e9c4 5562 	strd	r5, r5, [r4, #392]	@ 0x188
        : color(col)
900056e8:	e9c4 5565 	strd	r5, r5, [r4, #404]	@ 0x194
        : color(0)
900056ec:	e9c4 5568 	strd	r5, r5, [r4, #416]	@ 0x1a0
900056f0:	e9c4 556a 	strd	r5, r5, [r4, #424]	@ 0x1a8
        rect.x = x;
900056f4:	e9c4 555c 	strd	r5, r5, [r4, #368]	@ 0x170
900056f8:	e9c4 555e 	strd	r5, r5, [r4, #376]	@ 0x178
900056fc:	f00c fec2 	bl	90012484 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T()
90005700:	4aa4      	ldr	r2, [pc, #656]	@ (90005994 <_ZN19Home_ScreenViewBaseC1Ev+0x3cc>)
        T::add(text);
90005702:	f504 7cd8 	add.w	ip, r4, #432	@ 0x1b0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90005706:	4ba0      	ldr	r3, [pc, #640]	@ (90005988 <_ZN19Home_ScreenViewBaseC1Ev+0x3c0>)
        : T()
90005708:	f8c4 2138 	str.w	r2, [r4, #312]	@ 0x138
        T::add(text);
9000570c:	4661      	mov	r1, ip
9000570e:	9802      	ldr	r0, [sp, #8]
          touchable(false),
90005710:	f8a4 61d4 	strh.w	r6, [r4, #468]	@ 0x1d4
90005714:	f8c4 31b0 	str.w	r3, [r4, #432]	@ 0x1b0
90005718:	f8a4 91dc 	strh.w	r9, [r4, #476]	@ 0x1dc
9000571c:	f8c4 71e6 	str.w	r7, [r4, #486]	@ 0x1e6
90005720:	f8c4 b1d8 	str.w	fp, [r4, #472]	@ 0x1d8
        : color(col)
90005724:	f8c4 51e0 	str.w	r5, [r4, #480]	@ 0x1e0
90005728:	f8a4 51e4 	strh.w	r5, [r4, #484]	@ 0x1e4
        : color(0)
9000572c:	f8c4 51fc 	str.w	r5, [r4, #508]	@ 0x1fc
90005730:	f8cd c010 	str.w	ip, [sp, #16]
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005734:	e9c4 587b 	strd	r5, r8, [r4, #492]	@ 0x1ec
        : x(0), y(0), width(0), height(0)
90005738:	e9c4 556d 	strd	r5, r5, [r4, #436]	@ 0x1b4
9000573c:	e9c4 556f 	strd	r5, r5, [r4, #444]	@ 0x1bc
          nextSibling(0),
90005740:	e9c4 5571 	strd	r5, r5, [r4, #452]	@ 0x1c4
          cachedAbsX(0),
90005744:	e9c4 5573 	strd	r5, r5, [r4, #460]	@ 0x1cc
        : color(0)
90005748:	e9c4 557d 	strd	r5, r5, [r4, #500]	@ 0x1f4
9000574c:	f00c fe9a 	bl	90012484 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T()
90005750:	f504 7c01 	add.w	ip, r4, #516	@ 0x204
90005754:	4990      	ldr	r1, [pc, #576]	@ (90005998 <_ZN19Home_ScreenViewBaseC1Ev+0x3d0>)
90005756:	4663      	mov	r3, ip
        Image::setBitmap(bmp);
90005758:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
        : Widget(), bitmap(bmp), alpha(255)
9000575c:	488f      	ldr	r0, [pc, #572]	@ (9000599c <_ZN19Home_ScreenViewBaseC1Ev+0x3d4>)
9000575e:	f8c4 1138 	str.w	r1, [r4, #312]	@ 0x138
        Image::setBitmap(bmp);
90005762:	4661      	mov	r1, ip
90005764:	f504 7c00 	add.w	ip, r4, #512	@ 0x200
90005768:	f8c4 8200 	str.w	r8, [r4, #512]	@ 0x200
          touchable(false),
9000576c:	f8a4 6228 	strh.w	r6, [r4, #552]	@ 0x228
        : Widget(), bitmap(bmp), alpha(255)
90005770:	f8a4 922a 	strh.w	r9, [r4, #554]	@ 0x22a
90005774:	f884 822c 	strb.w	r8, [r4, #556]	@ 0x22c
90005778:	f8c4 0204 	str.w	r0, [r4, #516]	@ 0x204
        Image::setBitmap(bmp);
9000577c:	4618      	mov	r0, r3
9000577e:	9301      	str	r3, [sp, #4]
90005780:	f8cd c018 	str.w	ip, [sp, #24]
90005784:	f8ad 9030 	strh.w	r9, [sp, #48]	@ 0x30
        : x(0), y(0), width(0), height(0)
90005788:	e9c4 5582 	strd	r5, r5, [r4, #520]	@ 0x208
9000578c:	e9c4 5584 	strd	r5, r5, [r4, #528]	@ 0x210
          nextSibling(0),
90005790:	e9c4 5586 	strd	r5, r5, [r4, #536]	@ 0x218
          cachedAbsX(0),
90005794:	e9c4 5588 	strd	r5, r5, [r4, #544]	@ 0x220
90005798:	f010 fce8 	bl	9001616c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::add(iconImage);
9000579c:	e9dd 1001 	ldrd	r1, r0, [sp, #4]
900057a0:	f00c fe70 	bl	90012484 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900057a4:	f504 7c0c 	add.w	ip, r4, #560	@ 0x230
        touchable = touch;
900057a8:	f240 1301 	movw	r3, #257	@ 0x101
        : T(), up(), down()
900057ac:	4a77      	ldr	r2, [pc, #476]	@ (9000598c <_ZN19Home_ScreenViewBaseC1Ev+0x3c4>)
900057ae:	4978      	ldr	r1, [pc, #480]	@ (90005990 <_ZN19Home_ScreenViewBaseC1Ev+0x3c8>)
        T::add(borderBox);
900057b0:	4660      	mov	r0, ip
900057b2:	f8a4 a25c 	strh.w	sl, [r4, #604]	@ 0x25c
900057b6:	f504 7a2a 	add.w	sl, r4, #680	@ 0x2a8
900057ba:	f8a4 3254 	strh.w	r3, [r4, #596]	@ 0x254
        : T(), up(), down()
900057be:	f8c4 2230 	str.w	r2, [r4, #560]	@ 0x230
900057c2:	f8c4 1264 	str.w	r1, [r4, #612]	@ 0x264
        T::add(borderBox);
900057c6:	f504 7119 	add.w	r1, r4, #612	@ 0x264
          touchable(false),
900057ca:	f8a4 6288 	strh.w	r6, [r4, #648]	@ 0x288
900057ce:	f884 728a 	strb.w	r7, [r4, #650]	@ 0x28a
900057d2:	f8c4 5258 	str.w	r5, [r4, #600]	@ 0x258
900057d6:	f8c4 5260 	str.w	r5, [r4, #608]	@ 0x260
900057da:	f8a4 5294 	strh.w	r5, [r4, #660]	@ 0x294
900057de:	f8cd c00c 	str.w	ip, [sp, #12]
900057e2:	e9c4 558d 	strd	r5, r5, [r4, #564]	@ 0x234
900057e6:	e9c4 558f 	strd	r5, r5, [r4, #572]	@ 0x23c
          nextSibling(0),
900057ea:	e9c4 5591 	strd	r5, r5, [r4, #580]	@ 0x244
          cachedAbsX(0),
900057ee:	e9c4 5593 	strd	r5, r5, [r4, #588]	@ 0x24c
          nextSibling(0),
900057f2:	e9c4 559e 	strd	r5, r5, [r4, #632]	@ 0x278
          cachedAbsX(0),
900057f6:	e9c4 55a0 	strd	r5, r5, [r4, #640]	@ 0x280
        : color(col)
900057fa:	e9c4 55a3 	strd	r5, r5, [r4, #652]	@ 0x28c
        : color(0)
900057fe:	e9c4 55a6 	strd	r5, r5, [r4, #664]	@ 0x298
90005802:	e9c4 55a8 	strd	r5, r5, [r4, #672]	@ 0x2a0
        rect.x = x;
90005806:	e9c4 559a 	strd	r5, r5, [r4, #616]	@ 0x268
9000580a:	e9c4 559c 	strd	r5, r5, [r4, #624]	@ 0x270
9000580e:	f00c fe39 	bl	90012484 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005812:	4b5d      	ldr	r3, [pc, #372]	@ (90005988 <_ZN19Home_ScreenViewBaseC1Ev+0x3c0>)
        : T()
90005814:	4a5f      	ldr	r2, [pc, #380]	@ (90005994 <_ZN19Home_ScreenViewBaseC1Ev+0x3cc>)
        T::add(text);
90005816:	4651      	mov	r1, sl
90005818:	f8c4 32a8 	str.w	r3, [r4, #680]	@ 0x2a8
9000581c:	9803      	ldr	r0, [sp, #12]
        : T()
9000581e:	f8c4 2230 	str.w	r2, [r4, #560]	@ 0x230
          touchable(false),
90005822:	f8a4 62cc 	strh.w	r6, [r4, #716]	@ 0x2cc
90005826:	f8a4 92d4 	strh.w	r9, [r4, #724]	@ 0x2d4
9000582a:	f8c4 72de 	str.w	r7, [r4, #734]	@ 0x2de
9000582e:	f8c4 b2d0 	str.w	fp, [r4, #720]	@ 0x2d0
        : color(col)
90005832:	f8c4 52d8 	str.w	r5, [r4, #728]	@ 0x2d8
90005836:	f8a4 52dc 	strh.w	r5, [r4, #732]	@ 0x2dc
        : color(0)
9000583a:	f8c4 52f4 	str.w	r5, [r4, #756]	@ 0x2f4
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000583e:	e9c4 58b9 	strd	r5, r8, [r4, #740]	@ 0x2e4
        : x(0), y(0), width(0), height(0)
90005842:	e9c4 55ab 	strd	r5, r5, [r4, #684]	@ 0x2ac
90005846:	e9c4 55ad 	strd	r5, r5, [r4, #692]	@ 0x2b4
          nextSibling(0),
9000584a:	e9c4 55af 	strd	r5, r5, [r4, #700]	@ 0x2bc
          cachedAbsX(0),
9000584e:	e9c4 55b1 	strd	r5, r5, [r4, #708]	@ 0x2c4
        : color(0)
90005852:	e9c4 55bb 	strd	r5, r5, [r4, #748]	@ 0x2ec
        T::add(text);
90005856:	f00c fe15 	bl	90012484 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : Widget(), bitmap(bmp), alpha(255)
9000585a:	4a50      	ldr	r2, [pc, #320]	@ (9000599c <_ZN19Home_ScreenViewBaseC1Ev+0x3d4>)
        : T()
9000585c:	494e      	ldr	r1, [pc, #312]	@ (90005998 <_ZN19Home_ScreenViewBaseC1Ev+0x3d0>)
9000585e:	f504 7c3e 	add.w	ip, r4, #760	@ 0x2f8
          touchable(false),
90005862:	f8a4 6320 	strh.w	r6, [r4, #800]	@ 0x320
90005866:	f8c4 1230 	str.w	r1, [r4, #560]	@ 0x230
        Image::setBitmap(bmp);
9000586a:	a90c      	add	r1, sp, #48	@ 0x30
        : Widget(), bitmap(bmp), alpha(255)
9000586c:	f8a4 9322 	strh.w	r9, [r4, #802]	@ 0x322
90005870:	f884 7324 	strb.w	r7, [r4, #804]	@ 0x324
90005874:	f8cd c014 	str.w	ip, [sp, #20]
90005878:	f8ad 9030 	strh.w	r9, [sp, #48]	@ 0x30
9000587c:	e9c4 82be 	strd	r8, r2, [r4, #760]	@ 0x2f8
90005880:	f504 723f 	add.w	r2, r4, #764	@ 0x2fc
        : x(0), y(0), width(0), height(0)
90005884:	e9c4 55c0 	strd	r5, r5, [r4, #768]	@ 0x300
        Image::setBitmap(bmp);
90005888:	4610      	mov	r0, r2
9000588a:	9200      	str	r2, [sp, #0]
9000588c:	e9c4 55c2 	strd	r5, r5, [r4, #776]	@ 0x308
          nextSibling(0),
90005890:	e9c4 55c4 	strd	r5, r5, [r4, #784]	@ 0x310
          cachedAbsX(0),
90005894:	e9c4 55c6 	strd	r5, r5, [r4, #792]	@ 0x318
90005898:	f010 fc68 	bl	9001616c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::add(iconImage);
9000589c:	9900      	ldr	r1, [sp, #0]
9000589e:	9803      	ldr	r0, [sp, #12]
900058a0:	f00c fdf0 	bl	90012484 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900058a4:	4a36      	ldr	r2, [pc, #216]	@ (90005980 <_ZN19Home_ScreenViewBaseC1Ev+0x3b8>)
900058a6:	4b38      	ldr	r3, [pc, #224]	@ (90005988 <_ZN19Home_ScreenViewBaseC1Ev+0x3c0>)
900058a8:	f8a4 9380 	strh.w	r9, [r4, #896]	@ 0x380
900058ac:	f504 6982 	add.w	r9, r4, #1040	@ 0x410
900058b0:	f8c4 2328 	str.w	r2, [r4, #808]	@ 0x328
900058b4:	f8c4 3354 	str.w	r3, [r4, #852]	@ 0x354
900058b8:	4648      	mov	r0, r9
          touchable(false),
900058ba:	f8a4 634c 	strh.w	r6, [r4, #844]	@ 0x34c
900058be:	f8a4 6378 	strh.w	r6, [r4, #888]	@ 0x378
    __background.setPosition(0, 0, 480, 272);
900058c2:	f104 0640 	add.w	r6, r4, #64	@ 0x40
900058c6:	f884 734e 	strb.w	r7, [r4, #846]	@ 0x34e
900058ca:	f8c4 738a 	str.w	r7, [r4, #906]	@ 0x38a
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
900058ce:	1d27      	adds	r7, r4, #4
        : color(col)
900058d0:	f8c4 5350 	str.w	r5, [r4, #848]	@ 0x350
900058d4:	f8c4 b37c 	str.w	fp, [r4, #892]	@ 0x37c
900058d8:	f8c4 5384 	str.w	r5, [r4, #900]	@ 0x384
900058dc:	f8a4 5388 	strh.w	r5, [r4, #904]	@ 0x388
              text(0)
900058e0:	f8c4 5398 	str.w	r5, [r4, #920]	@ 0x398
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900058e4:	e9c4 58e4 	strd	r5, r8, [r4, #912]	@ 0x390
        : x(0), y(0), width(0), height(0)
900058e8:	e9c4 55cb 	strd	r5, r5, [r4, #812]	@ 0x32c
900058ec:	e9c4 55cd 	strd	r5, r5, [r4, #820]	@ 0x334
          nextSibling(0),
900058f0:	e9c4 55cf 	strd	r5, r5, [r4, #828]	@ 0x33c
          cachedAbsX(0),
900058f4:	e9c4 55d1 	strd	r5, r5, [r4, #836]	@ 0x344
900058f8:	e9c4 55d6 	strd	r5, r5, [r4, #856]	@ 0x358
900058fc:	e9c4 55d8 	strd	r5, r5, [r4, #864]	@ 0x360
          nextSibling(0),
90005900:	e9c4 55da 	strd	r5, r5, [r4, #872]	@ 0x368
          cachedAbsX(0),
90005904:	e9c4 55dc 	strd	r5, r5, [r4, #880]	@ 0x370
    flexButtonCallback(this, &Home_ScreenViewBase::flexButtonCallbackHandler)
90005908:	f010 fff0 	bl	900168ec <_ZN8touchgfx6QRCodeC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
9000590c:	4b24      	ldr	r3, [pc, #144]	@ (900059a0 <_ZN19Home_ScreenViewBaseC1Ev+0x3d8>)
        setWidth(width);
9000590e:	4630      	mov	r0, r6
90005910:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
90005914:	f8c4 3468 	str.w	r3, [r4, #1128]	@ 0x468
90005918:	4b22      	ldr	r3, [pc, #136]	@ (900059a4 <_ZN19Home_ScreenViewBaseC1Ev+0x3dc>)
9000591a:	f8c4 446c 	str.w	r4, [r4, #1132]	@ 0x46c
9000591e:	f8c4 3470 	str.w	r3, [r4, #1136]	@ 0x470
90005922:	f8c4 5474 	str.w	r5, [r4, #1140]	@ 0x474
        rect.x = x;
90005926:	6465      	str	r5, [r4, #68]	@ 0x44
        setWidth(width);
90005928:	f7fd fa74 	bl	90002e14 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
9000592c:	4630      	mov	r0, r6
9000592e:	f44f 7188 	mov.w	r1, #272	@ 0x110
90005932:	f7fd fa71 	bl	90002e18 <_ZN8touchgfx8Drawable9setHeightEs>
        color = newColor;
90005936:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
9000593a:	4631      	mov	r1, r6
9000593c:	4638      	mov	r0, r7
9000593e:	66a3      	str	r3, [r4, #104]	@ 0x68
        rect.x = x;
90005940:	f44f 0658 	mov.w	r6, #14155776	@ 0xd80000
90005944:	f00c fd9e 	bl	90012484 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005948:	4b17      	ldr	r3, [pc, #92]	@ (900059a8 <_ZN19Home_ScreenViewBaseC1Ev+0x3e0>)
9000594a:	f104 016c 	add.w	r1, r4, #108	@ 0x6c
9000594e:	4638      	mov	r0, r7
90005950:	f8c4 8094 	str.w	r8, [r4, #148]	@ 0x94
    TC_not_loaded.setXY(169, 94);
90005954:	f104 08c4 	add.w	r8, r4, #196	@ 0xc4
90005958:	6763      	str	r3, [r4, #116]	@ 0x74
9000595a:	6725      	str	r5, [r4, #112]	@ 0x70
9000595c:	f00c fd92 	bl	90012484 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005960:	4b12      	ldr	r3, [pc, #72]	@ (900059ac <_ZN19Home_ScreenViewBaseC1Ev+0x3e4>)
90005962:	f104 0198 	add.w	r1, r4, #152	@ 0x98
90005966:	4638      	mov	r0, r7
90005968:	e9c4 6327 	strd	r6, r3, [r4, #156]	@ 0x9c
9000596c:	4b10      	ldr	r3, [pc, #64]	@ (900059b0 <_ZN19Home_ScreenViewBaseC1Ev+0x3e8>)
        boundingArea = calculateBoundingArea();
9000596e:	ae08      	add	r6, sp, #32
90005970:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
90005974:	f00c fd86 	bl	90012484 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005978:	4b0e      	ldr	r3, [pc, #56]	@ (900059b4 <_ZN19Home_ScreenViewBaseC1Ev+0x3ec>)
9000597a:	4641      	mov	r1, r8
9000597c:	4630      	mov	r0, r6
9000597e:	e01d      	b.n	900059bc <_ZN19Home_ScreenViewBaseC1Ev+0x3f4>
90005980:	90031bec 	.word	0x90031bec
90005984:	90030af8 	.word	0x90030af8
90005988:	90031b5c 	.word	0x90031b5c
9000598c:	90030908 	.word	0x90030908
90005990:	90031c54 	.word	0x90031c54
90005994:	900309a4 	.word	0x900309a4
90005998:	90030a40 	.word	0x90030a40
9000599c:	90031cbc 	.word	0x90031cbc
900059a0:	90030ae0 	.word	0x90030ae0
900059a4:	900053b5 	.word	0x900053b5
900059a8:	011001e0 	.word	0x011001e0
900059ac:	002b01e0 	.word	0x002b01e0
900059b0:	ffc20000 	.word	0xffc20000
900059b4:	005e00a9 	.word	0x005e00a9
900059b8:	900307dc 	.word	0x900307dc
900059bc:	f8c4 30c8 	str.w	r3, [r4, #200]	@ 0xc8
        color = newColor;
900059c0:	4bdc      	ldr	r3, [pc, #880]	@ (90005d34 <_ZN19Home_ScreenViewBaseC1Ev+0x76c>)
        linespace = space;
900059c2:	f8a4 50f8 	strh.w	r5, [r4, #248]	@ 0xf8
        color = newColor;
900059c6:	f8c4 30f4 	str.w	r3, [r4, #244]	@ 0xf4
        boundingArea = calculateBoundingArea();
900059ca:	f00f ff03 	bl	900157d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
900059ce:	2303      	movs	r3, #3
900059d0:	f504 7c80 	add.w	ip, r4, #256	@ 0x100
900059d4:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
900059d8:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
900059dc:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
900059e0:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
    TC_not_loaded.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KXSK));
900059e4:	4640      	mov	r0, r8
900059e6:	a90c      	add	r1, sp, #48	@ 0x30
900059e8:	f010 f99c 	bl	90015d24 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
900059ec:	4641      	mov	r1, r8
900059ee:	4638      	mov	r0, r7
        visible = vis;
900059f0:	f884 50e9 	strb.w	r5, [r4, #233]	@ 0xe9
900059f4:	f00c fd46 	bl	90012484 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ATech_Logo.setBitmap(touchgfx::Bitmap(BITMAP_IMAGES_ID));
900059f8:	f8dd 801c 	ldr.w	r8, [sp, #28]
900059fc:	2303      	movs	r3, #3
900059fe:	a90c      	add	r1, sp, #48	@ 0x30
90005a00:	4640      	mov	r0, r8
90005a02:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
90005a06:	f010 fbb1 	bl	9001616c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        rect.x = x;
90005a0a:	4bcb      	ldr	r3, [pc, #812]	@ (90005d38 <_ZN19Home_ScreenViewBaseC1Ev+0x770>)
90005a0c:	f240 1e67 	movw	lr, #359	@ 0x167
    ATech_Logo.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90005a10:	4640      	mov	r0, r8
90005a12:	4629      	mov	r1, r5
90005a14:	e9c4 e344 	strd	lr, r3, [r4, #272]	@ 0x110
90005a18:	f00f fbed 	bl	900151f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90005a1c:	4641      	mov	r1, r8
90005a1e:	4638      	mov	r0, r7
        down = colorPressed;
90005a20:	f46f 78b5 	mvn.w	r8, #362	@ 0x16a
90005a24:	f00c fd2e 	bl	90012484 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005a28:	4ac4      	ldr	r2, [pc, #784]	@ (90005d3c <_ZN19Home_ScreenViewBaseC1Ev+0x774>)
        handlePressedUpdated();
90005a2a:	f8d4 3138 	ldr.w	r3, [r4, #312]	@ 0x138
90005a2e:	f8c4 5170 	str.w	r5, [r4, #368]	@ 0x170
90005a32:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
90005a36:	f8c4 2174 	str.w	r2, [r4, #372]	@ 0x174
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
90005a3a:	2205      	movs	r2, #5
90005a3c:	f8a4 219c 	strh.w	r2, [r4, #412]	@ 0x19c
        up = colorReleased;
90005a40:	4abf      	ldr	r2, [pc, #764]	@ (90005d40 <_ZN19Home_ScreenViewBaseC1Ev+0x778>)
90005a42:	f8c4 21a0 	str.w	r2, [r4, #416]	@ 0x1a0
        down = colorPressed;
90005a46:	f5a2 2238 	sub.w	r2, r2, #753664	@ 0xb8000
90005a4a:	4442      	add	r2, r8
90005a4c:	f8df 82fc 	ldr.w	r8, [pc, #764]	@ 90005d4c <_ZN19Home_ScreenViewBaseC1Ev+0x784>
90005a50:	f8c4 21a4 	str.w	r2, [r4, #420]	@ 0x1a4
        borderUp = borderColorReleased;
90005a54:	f5a2 42cc 	sub.w	r2, r2, #26112	@ 0x6600
90005a58:	4543      	cmp	r3, r8
90005a5a:	f1a2 0266 	sub.w	r2, r2, #102	@ 0x66
90005a5e:	f8c4 21a8 	str.w	r2, [r4, #424]	@ 0x1a8
        borderDown = borderColorPressed;
90005a62:	f102 1233 	add.w	r2, r2, #3342387	@ 0x330033
90005a66:	f502 524c 	add.w	r2, r2, #13056	@ 0x3300
90005a6a:	f8c4 21ac 	str.w	r2, [r4, #428]	@ 0x1ac
90005a6e:	f040 8278 	bne.w	90005f62 <_ZN19Home_ScreenViewBaseC1Ev+0x99a>
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
90005a72:	f894 3164 	ldrb.w	r3, [r4, #356]	@ 0x164
90005a76:	2b00      	cmp	r3, #0
90005a78:	f040 8226 	bne.w	90005ec8 <_ZN19Home_ScreenViewBaseC1Ev+0x900>
90005a7c:	9906      	ldr	r1, [sp, #24]
90005a7e:	9801      	ldr	r0, [sp, #4]
90005a80:	f010 fb74 	bl	9001616c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
90005a84:	f894 3164 	ldrb.w	r3, [r4, #356]	@ 0x164
90005a88:	2b00      	cmp	r3, #0
90005a8a:	f000 8227 	beq.w	90005edc <_ZN19Home_ScreenViewBaseC1Ev+0x914>
        color = newColor;
90005a8e:	f8d4 31fc 	ldr.w	r3, [r4, #508]	@ 0x1fc
90005a92:	f8d4 21a4 	ldr.w	r2, [r4, #420]	@ 0x1a4
90005a96:	f8c4 31e0 	str.w	r3, [r4, #480]	@ 0x1e0
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005a9a:	f504 73d6 	add.w	r3, r4, #428	@ 0x1ac
90005a9e:	f8c4 2194 	str.w	r2, [r4, #404]	@ 0x194
90005aa2:	681b      	ldr	r3, [r3, #0]
        borderColor = colorBorder;
90005aa4:	f8c4 3198 	str.w	r3, [r4, #408]	@ 0x198
        text.setTypedText(t);
90005aa8:	9d04      	ldr	r5, [sp, #16]
90005aaa:	2302      	movs	r3, #2
90005aac:	a90c      	add	r1, sp, #48	@ 0x30
90005aae:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
90005ab2:	4628      	mov	r0, r5
90005ab4:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
90005ab8:	f010 f934 	bl	90015d24 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        rect.width = width;
90005abc:	f8b4 3140 	ldrh.w	r3, [r4, #320]	@ 0x140
        boundingArea = calculateBoundingArea();
90005ac0:	4629      	mov	r1, r5
90005ac2:	4630      	mov	r0, r6
90005ac4:	f8a4 31b8 	strh.w	r3, [r4, #440]	@ 0x1b8
        return rect.height;
90005ac8:	f9b4 3142 	ldrsh.w	r3, [r4, #322]	@ 0x142
90005acc:	9304      	str	r3, [sp, #16]
90005ace:	f00f fe81 	bl	900157d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90005ad2:	46ac      	mov	ip, r5
        rect.height = height;
90005ad4:	9b04      	ldr	r3, [sp, #16]
90005ad6:	353c      	adds	r5, #60	@ 0x3c
90005ad8:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
90005adc:	e885 0007 	stmia.w	r5, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
90005ae0:	4661      	mov	r1, ip
90005ae2:	4630      	mov	r0, r6
90005ae4:	f8a4 31ba 	strh.w	r3, [r4, #442]	@ 0x1ba
90005ae8:	f8cd c010 	str.w	ip, [sp, #16]
90005aec:	f00f fe72 	bl	900157d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
        setX(x);
90005af0:	f8d4 31b0 	ldr.w	r3, [r4, #432]	@ 0x1b0
        rect.x = x;
90005af4:	f44f 1c2c 	mov.w	ip, #2818048	@ 0x2b0000
90005af8:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
        setWidth(width);
90005afc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90005afe:	e885 0007 	stmia.w	r5, {r0, r1, r2}
90005b02:	9d04      	ldr	r5, [sp, #16]
90005b04:	2161      	movs	r1, #97	@ 0x61
        rect.x = x;
90005b06:	f8c4 c1b4 	str.w	ip, [r4, #436]	@ 0x1b4
        setWidth(width);
90005b0a:	4628      	mov	r0, r5
90005b0c:	4798      	blx	r3
        setHeight(height);
90005b0e:	f8d4 31b0 	ldr.w	r3, [r4, #432]	@ 0x1b0
90005b12:	4628      	mov	r0, r5
90005b14:	2140      	movs	r1, #64	@ 0x40
90005b16:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90005b18:	4798      	blx	r3
        handlePressedUpdated();
90005b1a:	f8d4 3138 	ldr.w	r3, [r4, #312]	@ 0x138
90005b1e:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
        colorReleased = newColorReleased;
90005b22:	f04f 33ff 	mov.w	r3, #4294967295
90005b26:	4542      	cmp	r2, r8
        colorPressed = newColorPressed;
90005b28:	e9c4 337e 	strd	r3, r3, [r4, #504]	@ 0x1f8
90005b2c:	f040 821c 	bne.w	90005f68 <_ZN19Home_ScreenViewBaseC1Ev+0x9a0>
90005b30:	f894 3164 	ldrb.w	r3, [r4, #356]	@ 0x164
90005b34:	2b00      	cmp	r3, #0
90005b36:	f000 8212 	beq.w	90005f5e <_ZN19Home_ScreenViewBaseC1Ev+0x996>
90005b3a:	f204 2102 	addw	r1, r4, #514	@ 0x202
90005b3e:	9801      	ldr	r0, [sp, #4]
90005b40:	f010 fb14 	bl	9001616c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
90005b44:	f894 3164 	ldrb.w	r3, [r4, #356]	@ 0x164
90005b48:	2b00      	cmp	r3, #0
90005b4a:	f000 81ff 	beq.w	90005f4c <_ZN19Home_ScreenViewBaseC1Ev+0x984>
        color = newColor;
90005b4e:	f8d4 31fc 	ldr.w	r3, [r4, #508]	@ 0x1fc
90005b52:	f8d4 21a4 	ldr.w	r2, [r4, #420]	@ 0x1a4
90005b56:	f8c4 31e0 	str.w	r3, [r4, #480]	@ 0x1e0
90005b5a:	f504 73d6 	add.w	r3, r4, #428	@ 0x1ac
90005b5e:	f8c4 2194 	str.w	r2, [r4, #404]	@ 0x194
90005b62:	681b      	ldr	r3, [r3, #0]
90005b64:	f8c4 3198 	str.w	r3, [r4, #408]	@ 0x198
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
90005b68:	f9b4 5140 	ldrsh.w	r5, [r4, #320]	@ 0x140
90005b6c:	2302      	movs	r3, #2
90005b6e:	a80c      	add	r0, sp, #48	@ 0x30
90005b70:	2d00      	cmp	r5, #0
        iconReleased = newIconReleased;
90005b72:	f8a4 3200 	strh.w	r3, [r4, #512]	@ 0x200
        iconPressed = newIconPressed;
90005b76:	f8a4 3202 	strh.w	r3, [r4, #514]	@ 0x202
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
90005b7a:	bfb8      	it	lt
90005b7c:	3501      	addlt	r5, #1
90005b7e:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
90005b82:	f017 f8a3 	bl	9001cccc <_ZNK8touchgfx6Bitmap8getWidthEv>
90005b86:	f9b4 3142 	ldrsh.w	r3, [r4, #322]	@ 0x142
90005b8a:	9007      	str	r0, [sp, #28]
90005b8c:	a80c      	add	r0, sp, #48	@ 0x30
90005b8e:	2b00      	cmp	r3, #0
90005b90:	f3c5 054f 	ubfx	r5, r5, #1, #16
90005b94:	bfb8      	it	lt
90005b96:	3301      	addlt	r3, #1
90005b98:	f3c3 034f 	ubfx	r3, r3, #1, #16
90005b9c:	9304      	str	r3, [sp, #16]
90005b9e:	f017 f8c9 	bl	9001cd34 <_ZNK8touchgfx6Bitmap9getHeightEv>
90005ba2:	9a07      	ldr	r2, [sp, #28]
90005ba4:	9b04      	ldr	r3, [sp, #16]
90005ba6:	2a00      	cmp	r2, #0
90005ba8:	bfb8      	it	lt
90005baa:	3201      	addlt	r2, #1
90005bac:	2800      	cmp	r0, #0
90005bae:	bfb8      	it	lt
90005bb0:	3001      	addlt	r0, #1
90005bb2:	eba5 0562 	sub.w	r5, r5, r2, asr #1
90005bb6:	eba3 0360 	sub.w	r3, r3, r0, asr #1
        rect.x = x;
90005bba:	f8a4 5208 	strh.w	r5, [r4, #520]	@ 0x208
        rect.y = y;
90005bbe:	f8a4 320a 	strh.w	r3, [r4, #522]	@ 0x20a
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
90005bc2:	f894 3164 	ldrb.w	r3, [r4, #356]	@ 0x164
90005bc6:	b113      	cbz	r3, 90005bce <_ZN19Home_ScreenViewBaseC1Ev+0x606>
90005bc8:	f204 2302 	addw	r3, r4, #514	@ 0x202
90005bcc:	9306      	str	r3, [sp, #24]
90005bce:	9906      	ldr	r1, [sp, #24]
90005bd0:	9801      	ldr	r0, [sp, #4]
90005bd2:	f010 facb 	bl	9001616c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005bd6:	f894 3164 	ldrb.w	r3, [r4, #356]	@ 0x164
90005bda:	2b00      	cmp	r3, #0
90005bdc:	f000 8187 	beq.w	90005eee <_ZN19Home_ScreenViewBaseC1Ev+0x926>
90005be0:	f8d4 31fc 	ldr.w	r3, [r4, #508]	@ 0x1fc
90005be4:	f8d4 21a4 	ldr.w	r2, [r4, #420]	@ 0x1a4
90005be8:	f8c4 31e0 	str.w	r3, [r4, #480]	@ 0x1e0
90005bec:	f504 73d6 	add.w	r3, r4, #428	@ 0x1ac
90005bf0:	f8c4 2194 	str.w	r2, [r4, #404]	@ 0x194
90005bf4:	4638      	mov	r0, r7
90005bf6:	681b      	ldr	r3, [r3, #0]
        rect.x = x;
90005bf8:	4d50      	ldr	r5, [pc, #320]	@ (90005d3c <_ZN19Home_ScreenViewBaseC1Ev+0x774>)
90005bfa:	f8c4 3198 	str.w	r3, [r4, #408]	@ 0x198
90005bfe:	4b51      	ldr	r3, [pc, #324]	@ (90005d44 <_ZN19Home_ScreenViewBaseC1Ev+0x77c>)
90005c00:	9902      	ldr	r1, [sp, #8]
90005c02:	f8c4 3208 	str.w	r3, [r4, #520]	@ 0x208
90005c06:	4b50      	ldr	r3, [pc, #320]	@ (90005d48 <_ZN19Home_ScreenViewBaseC1Ev+0x780>)
90005c08:	e9c4 354f 	strd	r3, r5, [r4, #316]	@ 0x13c
90005c0c:	f00c fc3a 	bl	90012484 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005c10:	2200      	movs	r2, #0
        handlePressedUpdated();
90005c12:	f8d4 3230 	ldr.w	r3, [r4, #560]	@ 0x230
90005c16:	f8c4 526c 	str.w	r5, [r4, #620]	@ 0x26c
        down = colorPressed;
90005c1a:	f46f 75b5 	mvn.w	r5, #362	@ 0x16a
        handlePressedUpdated();
90005c1e:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
90005c22:	f8c4 2268 	str.w	r2, [r4, #616]	@ 0x268
        borderSize = size;
90005c26:	2205      	movs	r2, #5
90005c28:	4543      	cmp	r3, r8
90005c2a:	f8a4 2294 	strh.w	r2, [r4, #660]	@ 0x294
        up = colorReleased;
90005c2e:	4a44      	ldr	r2, [pc, #272]	@ (90005d40 <_ZN19Home_ScreenViewBaseC1Ev+0x778>)
90005c30:	f8c4 2298 	str.w	r2, [r4, #664]	@ 0x298
        down = colorPressed;
90005c34:	f5a2 2238 	sub.w	r2, r2, #753664	@ 0xb8000
90005c38:	442a      	add	r2, r5
90005c3a:	f8c4 229c 	str.w	r2, [r4, #668]	@ 0x29c
        borderUp = borderColorReleased;
90005c3e:	f5a2 42cc 	sub.w	r2, r2, #26112	@ 0x6600
90005c42:	f1a2 0266 	sub.w	r2, r2, #102	@ 0x66
90005c46:	f8c4 22a0 	str.w	r2, [r4, #672]	@ 0x2a0
        borderDown = borderColorPressed;
90005c4a:	f102 1233 	add.w	r2, r2, #3342387	@ 0x330033
90005c4e:	f502 524c 	add.w	r2, r2, #13056	@ 0x3300
90005c52:	f8c4 22a4 	str.w	r2, [r4, #676]	@ 0x2a4
90005c56:	f040 818d 	bne.w	90005f74 <_ZN19Home_ScreenViewBaseC1Ev+0x9ac>
90005c5a:	f894 325c 	ldrb.w	r3, [r4, #604]	@ 0x25c
90005c5e:	2b00      	cmp	r3, #0
90005c60:	f000 8172 	beq.w	90005f48 <_ZN19Home_ScreenViewBaseC1Ev+0x980>
90005c64:	f204 21fa 	addw	r1, r4, #762	@ 0x2fa
90005c68:	9800      	ldr	r0, [sp, #0]
90005c6a:	f010 fa7f 	bl	9001616c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005c6e:	f894 325c 	ldrb.w	r3, [r4, #604]	@ 0x25c
90005c72:	2b00      	cmp	r3, #0
90005c74:	f000 815f 	beq.w	90005f36 <_ZN19Home_ScreenViewBaseC1Ev+0x96e>
90005c78:	f8d4 32f4 	ldr.w	r3, [r4, #756]	@ 0x2f4
90005c7c:	f8d4 229c 	ldr.w	r2, [r4, #668]	@ 0x29c
90005c80:	f8c4 32d8 	str.w	r3, [r4, #728]	@ 0x2d8
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005c84:	f504 7329 	add.w	r3, r4, #676	@ 0x2a4
90005c88:	f8c4 228c 	str.w	r2, [r4, #652]	@ 0x28c
90005c8c:	681b      	ldr	r3, [r3, #0]
        borderColor = colorBorder;
90005c8e:	f8c4 3290 	str.w	r3, [r4, #656]	@ 0x290
90005c92:	2301      	movs	r3, #1
        text.setTypedText(t);
90005c94:	a90c      	add	r1, sp, #48	@ 0x30
90005c96:	4650      	mov	r0, sl
90005c98:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
90005c9c:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
90005ca0:	f010 f840 	bl	90015d24 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        rect.width = width;
90005ca4:	f8b4 3238 	ldrh.w	r3, [r4, #568]	@ 0x238
        boundingArea = calculateBoundingArea();
90005ca8:	4651      	mov	r1, sl
90005caa:	4630      	mov	r0, r6
90005cac:	f10a 053c 	add.w	r5, sl, #60	@ 0x3c
90005cb0:	f8a4 32b0 	strh.w	r3, [r4, #688]	@ 0x2b0
        return rect.height;
90005cb4:	f9b4 323a 	ldrsh.w	r3, [r4, #570]	@ 0x23a
90005cb8:	9301      	str	r3, [sp, #4]
90005cba:	f00f fd8b 	bl	900157d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
        rect.height = height;
90005cbe:	9b01      	ldr	r3, [sp, #4]
90005cc0:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
90005cc4:	e885 0007 	stmia.w	r5, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
90005cc8:	4651      	mov	r1, sl
90005cca:	4630      	mov	r0, r6
90005ccc:	f8a4 32b2 	strh.w	r3, [r4, #690]	@ 0x2b2
90005cd0:	f00f fd80 	bl	900157d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
        rect.x = x;
90005cd4:	f44f 1c2c 	mov.w	ip, #2818048	@ 0x2b0000
        setX(x);
90005cd8:	f8d4 32a8 	ldr.w	r3, [r4, #680]	@ 0x2a8
90005cdc:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
        setWidth(width);
90005ce0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90005ce2:	e885 0007 	stmia.w	r5, {r0, r1, r2}
90005ce6:	2161      	movs	r1, #97	@ 0x61
90005ce8:	4650      	mov	r0, sl
        rect.x = x;
90005cea:	f8c4 c2ac 	str.w	ip, [r4, #684]	@ 0x2ac
        setWidth(width);
90005cee:	4798      	blx	r3
        setHeight(height);
90005cf0:	f8d4 32a8 	ldr.w	r3, [r4, #680]	@ 0x2a8
90005cf4:	4650      	mov	r0, sl
90005cf6:	2140      	movs	r1, #64	@ 0x40
90005cf8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90005cfa:	4798      	blx	r3
        handlePressedUpdated();
90005cfc:	f8d4 3230 	ldr.w	r3, [r4, #560]	@ 0x230
90005d00:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
        colorReleased = newColorReleased;
90005d04:	f04f 33ff 	mov.w	r3, #4294967295
90005d08:	4542      	cmp	r2, r8
        colorPressed = newColorPressed;
90005d0a:	e9c4 33bc 	strd	r3, r3, [r4, #752]	@ 0x2f0
90005d0e:	f040 812e 	bne.w	90005f6e <_ZN19Home_ScreenViewBaseC1Ev+0x9a6>
90005d12:	f894 325c 	ldrb.w	r3, [r4, #604]	@ 0x25c
90005d16:	2b00      	cmp	r3, #0
90005d18:	f000 80fb 	beq.w	90005f12 <_ZN19Home_ScreenViewBaseC1Ev+0x94a>
90005d1c:	f204 21fa 	addw	r1, r4, #762	@ 0x2fa
90005d20:	9800      	ldr	r0, [sp, #0]
90005d22:	f010 fa23 	bl	9001616c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
90005d26:	f894 325c 	ldrb.w	r3, [r4, #604]	@ 0x25c
90005d2a:	2b00      	cmp	r3, #0
90005d2c:	f000 80fa 	beq.w	90005f24 <_ZN19Home_ScreenViewBaseC1Ev+0x95c>
90005d30:	e00e      	b.n	90005d50 <_ZN19Home_ScreenViewBaseC1Ev+0x788>
90005d32:	bf00      	nop
90005d34:	ffff0000 	.word	0xffff0000
90005d38:	003b0079 	.word	0x003b0079
90005d3c:	00400061 	.word	0x00400061
90005d40:	ff0c1b37 	.word	0xff0c1b37
90005d44:	fffd0018 	.word	0xfffd0018
90005d48:	00880057 	.word	0x00880057
90005d4c:	90005319 	.word	0x90005319
        color = newColor;
90005d50:	f8d4 32f4 	ldr.w	r3, [r4, #756]	@ 0x2f4
90005d54:	f8d4 229c 	ldr.w	r2, [r4, #668]	@ 0x29c
90005d58:	f8c4 32d8 	str.w	r3, [r4, #728]	@ 0x2d8
90005d5c:	f504 7329 	add.w	r3, r4, #676	@ 0x2a4
90005d60:	f8c4 228c 	str.w	r2, [r4, #652]	@ 0x28c
90005d64:	681b      	ldr	r3, [r3, #0]
90005d66:	f8c4 3290 	str.w	r3, [r4, #656]	@ 0x290
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
90005d6a:	f9b4 5238 	ldrsh.w	r5, [r4, #568]	@ 0x238
90005d6e:	2301      	movs	r3, #1
90005d70:	a80c      	add	r0, sp, #48	@ 0x30
90005d72:	2d00      	cmp	r5, #0
        iconReleased = newIconReleased;
90005d74:	f8a4 32f8 	strh.w	r3, [r4, #760]	@ 0x2f8
        iconPressed = newIconPressed;
90005d78:	f8a4 32fa 	strh.w	r3, [r4, #762]	@ 0x2fa
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
90005d7c:	bfb8      	it	lt
90005d7e:	18ed      	addlt	r5, r5, r3
90005d80:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
90005d84:	f016 ffa2 	bl	9001cccc <_ZNK8touchgfx6Bitmap8getWidthEv>
90005d88:	f9b4 823a 	ldrsh.w	r8, [r4, #570]	@ 0x23a
90005d8c:	4682      	mov	sl, r0
90005d8e:	a80c      	add	r0, sp, #48	@ 0x30
90005d90:	f1b8 0f00 	cmp.w	r8, #0
90005d94:	f3c5 054f 	ubfx	r5, r5, #1, #16
90005d98:	bfb8      	it	lt
90005d9a:	f108 0801 	addlt.w	r8, r8, #1
90005d9e:	f016 ffc9 	bl	9001cd34 <_ZNK8touchgfx6Bitmap9getHeightEv>
90005da2:	f1ba 0f00 	cmp.w	sl, #0
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
90005da6:	f894 325c 	ldrb.w	r3, [r4, #604]	@ 0x25c
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
90005daa:	f3c8 084f 	ubfx	r8, r8, #1, #16
90005dae:	bfb8      	it	lt
90005db0:	f10a 0a01 	addlt.w	sl, sl, #1
90005db4:	2800      	cmp	r0, #0
90005db6:	bfb8      	it	lt
90005db8:	3001      	addlt	r0, #1
90005dba:	eba5 056a 	sub.w	r5, r5, sl, asr #1
90005dbe:	eba8 0860 	sub.w	r8, r8, r0, asr #1
        rect.x = x;
90005dc2:	f8a4 5300 	strh.w	r5, [r4, #768]	@ 0x300
        rect.y = y;
90005dc6:	f8a4 8302 	strh.w	r8, [r4, #770]	@ 0x302
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
90005dca:	b113      	cbz	r3, 90005dd2 <_ZN19Home_ScreenViewBaseC1Ev+0x80a>
90005dcc:	f204 23fa 	addw	r3, r4, #762	@ 0x2fa
90005dd0:	9305      	str	r3, [sp, #20]
90005dd2:	9905      	ldr	r1, [sp, #20]
90005dd4:	9800      	ldr	r0, [sp, #0]
90005dd6:	f010 f9c9 	bl	9001616c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005dda:	f894 325c 	ldrb.w	r3, [r4, #604]	@ 0x25c
90005dde:	2b00      	cmp	r3, #0
90005de0:	f000 808e 	beq.w	90005f00 <_ZN19Home_ScreenViewBaseC1Ev+0x938>
90005de4:	f8d4 32f4 	ldr.w	r3, [r4, #756]	@ 0x2f4
90005de8:	f8d4 229c 	ldr.w	r2, [r4, #668]	@ 0x29c
90005dec:	f8c4 32d8 	str.w	r3, [r4, #728]	@ 0x2d8
90005df0:	f504 7329 	add.w	r3, r4, #676	@ 0x2a4
90005df4:	f8c4 228c 	str.w	r2, [r4, #652]	@ 0x28c
90005df8:	4638      	mov	r0, r7
90005dfa:	681b      	ldr	r3, [r3, #0]
        linespace = space;
90005dfc:	2500      	movs	r5, #0
        rect.x = x;
90005dfe:	4a5f      	ldr	r2, [pc, #380]	@ (90005f7c <_ZN19Home_ScreenViewBaseC1Ev+0x9b4>)
    textArea1.setXY(10, 235);
90005e00:	f504 7855 	add.w	r8, r4, #852	@ 0x354
90005e04:	f8c4 3290 	str.w	r3, [r4, #656]	@ 0x290
90005e08:	4b5d      	ldr	r3, [pc, #372]	@ (90005f80 <_ZN19Home_ScreenViewBaseC1Ev+0x9b8>)
90005e0a:	9903      	ldr	r1, [sp, #12]
90005e0c:	f8c4 3300 	str.w	r3, [r4, #768]	@ 0x300
    Read_TC_Start_button.setAction(flexButtonCallback);
90005e10:	f504 638d 	add.w	r3, r4, #1128	@ 0x468
        action = &callback;
90005e14:	f8c4 3260 	str.w	r3, [r4, #608]	@ 0x260
90005e18:	4b5a      	ldr	r3, [pc, #360]	@ (90005f84 <_ZN19Home_ScreenViewBaseC1Ev+0x9bc>)
90005e1a:	e9c4 238d 	strd	r2, r3, [r4, #564]	@ 0x234
90005e1e:	f00c fb31 	bl	90012484 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005e22:	f44f 015e 	mov.w	r1, #14548992	@ 0xde0000
90005e26:	4b58      	ldr	r3, [pc, #352]	@ (90005f88 <_ZN19Home_ScreenViewBaseC1Ev+0x9c0>)
90005e28:	4638      	mov	r0, r7
90005e2a:	e9c4 13cb 	strd	r1, r3, [r4, #812]	@ 0x32c
90005e2e:	4b57      	ldr	r3, [pc, #348]	@ (90005f8c <_ZN19Home_ScreenViewBaseC1Ev+0x9c4>)
90005e30:	f504 714a 	add.w	r1, r4, #808	@ 0x328
90005e34:	f8c4 3350 	str.w	r3, [r4, #848]	@ 0x350
90005e38:	f00c fb24 	bl	90012484 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005e3c:	4b54      	ldr	r3, [pc, #336]	@ (90005f90 <_ZN19Home_ScreenViewBaseC1Ev+0x9c8>)
        boundingArea = calculateBoundingArea();
90005e3e:	4641      	mov	r1, r8
90005e40:	4630      	mov	r0, r6
90005e42:	f8c4 3358 	str.w	r3, [r4, #856]	@ 0x358
        color = newColor;
90005e46:	f04f 33ff 	mov.w	r3, #4294967295
        linespace = space;
90005e4a:	f8a4 5388 	strh.w	r5, [r4, #904]	@ 0x388
        color = newColor;
90005e4e:	f8c4 3384 	str.w	r3, [r4, #900]	@ 0x384
        boundingArea = calculateBoundingArea();
90005e52:	f00f fcbf 	bl	900157d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90005e56:	f504 7364 	add.w	r3, r4, #912	@ 0x390
90005e5a:	f8ad 5034 	strh.w	r5, [sp, #52]	@ 0x34
90005e5e:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
90005e62:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
90005e66:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DOM7));
90005e6a:	a90c      	add	r1, sp, #48	@ 0x30
90005e6c:	4640      	mov	r0, r8
90005e6e:	f00f ff59 	bl	90015d24 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90005e72:	4641      	mov	r1, r8
90005e74:	4638      	mov	r0, r7
90005e76:	f00c fb05 	bl	90012484 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    qrCode1.setBuffers(qrBuffer_qrCode1, qrScratchBuffer_qrCode1);
90005e7a:	f504 7267 	add.w	r2, r4, #924	@ 0x39c
     *
     * @param version The QRCode version to use.
     */
    void setQRCodeVersion(uint8_t version)
    {
        qrCodeVersion = version;
90005e7e:	2301      	movs	r3, #1
        sizeOfQRCodeSymbol = version * 4 + 17;
        updateWidthAndHeight();
90005e80:	4648      	mov	r0, r9
     * @param qrBuffer Buffer to store the QRcode.
     * @param tempBuffer Scratch buffer used during QRCode generation.
     */
    void setBuffers(uint8_t* qrBuffer, uint8_t* tempBuffer)
    {
        qrCodeData = qrBuffer;
90005e82:	f8c4 2438 	str.w	r2, [r4, #1080]	@ 0x438
90005e86:	f204 32d5 	addw	r2, r4, #981	@ 0x3d5
        qrCodeVersion = version;
90005e8a:	f884 3440 	strb.w	r3, [r4, #1088]	@ 0x440
        sizeOfQRCodeSymbol = version * 4 + 17;
90005e8e:	2315      	movs	r3, #21
        qrTempBuffer = tempBuffer;
90005e90:	f8c4 243c 	str.w	r2, [r4, #1084]	@ 0x43c
        sizeOfQRCodeSymbol = version * 4 + 17;
90005e94:	f8c4 3444 	str.w	r3, [r4, #1092]	@ 0x444
90005e98:	f8c4 5414 	str.w	r5, [r4, #1044]	@ 0x414
        qrCodeData[0] = 0;
90005e9c:	f884 539c 	strb.w	r5, [r4, #924]	@ 0x39c
        updateWidthAndHeight();
90005ea0:	f010 fd7f 	bl	900169a2 <_ZN8touchgfx6QRCode20updateWidthAndHeightEv>
        scale = newScale;
90005ea4:	2305      	movs	r3, #5
        updateWidthAndHeight();
90005ea6:	4648      	mov	r0, r9
        scale = newScale;
90005ea8:	f8c4 3448 	str.w	r3, [r4, #1096]	@ 0x448
        updateWidthAndHeight();
90005eac:	f010 fd79 	bl	900169a2 <_ZN8touchgfx6QRCode20updateWidthAndHeightEv>
    qrCode1.convertStringToQRCode("https://www.atechtraining.com/products/automobile/power-seat-system");
90005eb0:	4938      	ldr	r1, [pc, #224]	@ (90005f94 <_ZN19Home_ScreenViewBaseC1Ev+0x9cc>)
90005eb2:	4648      	mov	r0, r9
90005eb4:	f010 fd58 	bl	90016968 <_ZN8touchgfx6QRCode21convertStringToQRCodeEPKc>
90005eb8:	4638      	mov	r0, r7
90005eba:	4649      	mov	r1, r9
90005ebc:	f00c fae2 	bl	90012484 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90005ec0:	4620      	mov	r0, r4
90005ec2:	b00f      	add	sp, #60	@ 0x3c
90005ec4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90005ec8:	f204 2102 	addw	r1, r4, #514	@ 0x202
90005ecc:	9801      	ldr	r0, [sp, #4]
90005ece:	f010 f94d 	bl	9001616c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005ed2:	f894 3164 	ldrb.w	r3, [r4, #356]	@ 0x164
90005ed6:	2b00      	cmp	r3, #0
90005ed8:	f47f add9 	bne.w	90005a8e <_ZN19Home_ScreenViewBaseC1Ev+0x4c6>
        color = newColor;
90005edc:	f8d4 31f8 	ldr.w	r3, [r4, #504]	@ 0x1f8
90005ee0:	f8d4 21a0 	ldr.w	r2, [r4, #416]	@ 0x1a0
90005ee4:	f8c4 31e0 	str.w	r3, [r4, #480]	@ 0x1e0
90005ee8:	f504 73d4 	add.w	r3, r4, #424	@ 0x1a8
90005eec:	e5d7      	b.n	90005a9e <_ZN19Home_ScreenViewBaseC1Ev+0x4d6>
90005eee:	f8d4 31f8 	ldr.w	r3, [r4, #504]	@ 0x1f8
90005ef2:	f8d4 21a0 	ldr.w	r2, [r4, #416]	@ 0x1a0
90005ef6:	f8c4 31e0 	str.w	r3, [r4, #480]	@ 0x1e0
90005efa:	f504 73d4 	add.w	r3, r4, #424	@ 0x1a8
90005efe:	e677      	b.n	90005bf0 <_ZN19Home_ScreenViewBaseC1Ev+0x628>
90005f00:	f8d4 32f0 	ldr.w	r3, [r4, #752]	@ 0x2f0
90005f04:	f8d4 2298 	ldr.w	r2, [r4, #664]	@ 0x298
90005f08:	f8c4 32d8 	str.w	r3, [r4, #728]	@ 0x2d8
90005f0c:	f504 7328 	add.w	r3, r4, #672	@ 0x2a0
90005f10:	e770      	b.n	90005df4 <_ZN19Home_ScreenViewBaseC1Ev+0x82c>
90005f12:	9905      	ldr	r1, [sp, #20]
90005f14:	9800      	ldr	r0, [sp, #0]
90005f16:	f010 f929 	bl	9001616c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005f1a:	f894 325c 	ldrb.w	r3, [r4, #604]	@ 0x25c
90005f1e:	2b00      	cmp	r3, #0
90005f20:	f47f af16 	bne.w	90005d50 <_ZN19Home_ScreenViewBaseC1Ev+0x788>
90005f24:	f8d4 32f0 	ldr.w	r3, [r4, #752]	@ 0x2f0
90005f28:	f8d4 2298 	ldr.w	r2, [r4, #664]	@ 0x298
90005f2c:	f8c4 32d8 	str.w	r3, [r4, #728]	@ 0x2d8
90005f30:	f504 7328 	add.w	r3, r4, #672	@ 0x2a0
90005f34:	e714      	b.n	90005d60 <_ZN19Home_ScreenViewBaseC1Ev+0x798>
90005f36:	f8d4 32f0 	ldr.w	r3, [r4, #752]	@ 0x2f0
90005f3a:	f8d4 2298 	ldr.w	r2, [r4, #664]	@ 0x298
90005f3e:	f8c4 32d8 	str.w	r3, [r4, #728]	@ 0x2d8
90005f42:	f504 7328 	add.w	r3, r4, #672	@ 0x2a0
90005f46:	e69f      	b.n	90005c88 <_ZN19Home_ScreenViewBaseC1Ev+0x6c0>
90005f48:	9905      	ldr	r1, [sp, #20]
90005f4a:	e68d      	b.n	90005c68 <_ZN19Home_ScreenViewBaseC1Ev+0x6a0>
90005f4c:	f8d4 31f8 	ldr.w	r3, [r4, #504]	@ 0x1f8
90005f50:	f8d4 21a0 	ldr.w	r2, [r4, #416]	@ 0x1a0
90005f54:	f8c4 31e0 	str.w	r3, [r4, #480]	@ 0x1e0
90005f58:	f504 73d4 	add.w	r3, r4, #424	@ 0x1a8
90005f5c:	e5ff      	b.n	90005b5e <_ZN19Home_ScreenViewBaseC1Ev+0x596>
90005f5e:	9906      	ldr	r1, [sp, #24]
90005f60:	e5ed      	b.n	90005b3e <_ZN19Home_ScreenViewBaseC1Ev+0x576>
        handlePressedUpdated();
90005f62:	9802      	ldr	r0, [sp, #8]
90005f64:	4798      	blx	r3
90005f66:	e59f      	b.n	90005aa8 <_ZN19Home_ScreenViewBaseC1Ev+0x4e0>
        handlePressedUpdated();
90005f68:	9802      	ldr	r0, [sp, #8]
90005f6a:	4790      	blx	r2
90005f6c:	e5fc      	b.n	90005b68 <_ZN19Home_ScreenViewBaseC1Ev+0x5a0>
90005f6e:	9803      	ldr	r0, [sp, #12]
90005f70:	4790      	blx	r2
90005f72:	e6fa      	b.n	90005d6a <_ZN19Home_ScreenViewBaseC1Ev+0x7a2>
90005f74:	9803      	ldr	r0, [sp, #12]
90005f76:	4798      	blx	r3
90005f78:	e68b      	b.n	90005c92 <_ZN19Home_ScreenViewBaseC1Ev+0x6ca>
90005f7a:	bf00      	nop
90005f7c:	00880137 	.word	0x00880137
90005f80:	fffe0017 	.word	0xfffe0017
90005f84:	00400061 	.word	0x00400061
90005f88:	003201e0 	.word	0x003201e0
90005f8c:	ff1a2147 	.word	0xff1a2147
90005f90:	00eb000a 	.word	0x00eb000a
90005f94:	9002ff80 	.word	0x9002ff80

90005f98 <_ZN8touchgfx8TextArea8setWidthEs>:
    virtual void setWidth(int16_t width)
90005f98:	b530      	push	{r4, r5, lr}
90005f9a:	b085      	sub	sp, #20
90005f9c:	460a      	mov	r2, r1
        boundingArea = calculateBoundingArea();
90005f9e:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
90005fa0:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
90005fa2:	466d      	mov	r5, sp
90005fa4:	4601      	mov	r1, r0
        rect.width = width;
90005fa6:	8102      	strh	r2, [r0, #8]
90005fa8:	343c      	adds	r4, #60	@ 0x3c
90005faa:	4628      	mov	r0, r5
90005fac:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90005fb0:	4798      	blx	r3
90005fb2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90005fb6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
90005fba:	b005      	add	sp, #20
90005fbc:	bd30      	pop	{r4, r5, pc}
90005fbe:	bf00      	nop

90005fc0 <_ZN8touchgfx8TextArea9setHeightEs>:
    virtual void setHeight(int16_t height)
90005fc0:	b530      	push	{r4, r5, lr}
90005fc2:	b085      	sub	sp, #20
90005fc4:	460a      	mov	r2, r1
        boundingArea = calculateBoundingArea();
90005fc6:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
90005fc8:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
90005fca:	466d      	mov	r5, sp
90005fcc:	4601      	mov	r1, r0
        rect.height = height;
90005fce:	8142      	strh	r2, [r0, #10]
90005fd0:	343c      	adds	r4, #60	@ 0x3c
90005fd2:	4628      	mov	r0, r5
90005fd4:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90005fd8:	4798      	blx	r3
90005fda:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90005fde:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
90005fe2:	b005      	add	sp, #20
90005fe4:	bd30      	pop	{r4, r5, pc}
90005fe6:	bf00      	nop

90005fe8 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
90005fe8:	2200      	movs	r2, #0
90005fea:	6002      	str	r2, [r0, #0]
90005fec:	6042      	str	r2, [r0, #4]
    }
90005fee:	4770      	bx	lr

90005ff0 <_ZN8touchgfx8TextArea8setAlphaEh>:
        alpha = newAlpha;
90005ff0:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
    }
90005ff4:	4770      	bx	lr
90005ff6:	bf00      	nop

90005ff8 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
    }
90005ff8:	2000      	movs	r0, #0
90005ffa:	4770      	bx	lr

90005ffc <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
        if (visible)
90005ffc:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90006000:	b112      	cbz	r2, 90006008 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xc>
            invalidate();
90006002:	6803      	ldr	r3, [r0, #0]
90006004:	695b      	ldr	r3, [r3, #20]
90006006:	4718      	bx	r3
    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
    {
        Widget::invalidateContent();
    }
90006008:	4770      	bx	lr
9000600a:	bf00      	nop

9000600c <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000600c:	2200      	movs	r2, #0
9000600e:	f04f 31ff 	mov.w	r1, #4294967295
              text(0)
90006012:	6082      	str	r2, [r0, #8]
90006014:	e9c0 2100 	strd	r2, r1, [r0]

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
    {
        return TextArea::BoundingArea();
    }
90006018:	4770      	bx	lr
9000601a:	bf00      	nop

9000601c <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
9000601c:	6c80      	ldr	r0, [r0, #72]	@ 0x48
9000601e:	4770      	bx	lr

90006020 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
90006020:	4770      	bx	lr
90006022:	bf00      	nop

90006024 <_ZN8touchgfx8CallbackI17TC_ScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90006024:	4770      	bx	lr
90006026:	bf00      	nop

90006028 <_ZN17TC_ScreenViewBaseD1Ev>:
}

TC_ScreenViewBase::~TC_ScreenViewBase()
{

}
90006028:	4770      	bx	lr
9000602a:	bf00      	nop

9000602c <_ZN17TC_ScreenViewBase11setupScreenEv>:

void TC_ScreenViewBase::setupScreen()
{

}
9000602c:	4770      	bx	lr
9000602e:	bf00      	nop

90006030 <_ZN8touchgfx8CallbackI17TC_ScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
90006030:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90006032:	68c3      	ldr	r3, [r0, #12]
90006034:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
90006038:	f013 0f01 	tst.w	r3, #1
9000603c:	eb04 0063 	add.w	r0, r4, r3, asr #1
90006040:	d004      	beq.n	9000604c <_ZN8touchgfx8CallbackI17TC_ScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1c>
90006042:	ea4f 0c63 	mov.w	ip, r3, asr #1
90006046:	f854 300c 	ldr.w	r3, [r4, ip]
9000604a:	589a      	ldr	r2, [r3, r2]
    }
9000604c:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90006050:	4710      	bx	r2
90006052:	bf00      	nop

90006054 <_ZNK8touchgfx8CallbackI17TC_ScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90006054:	6843      	ldr	r3, [r0, #4]
90006056:	b13b      	cbz	r3, 90006068 <_ZNK8touchgfx8CallbackI17TC_ScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
90006058:	6883      	ldr	r3, [r0, #8]
9000605a:	b10b      	cbz	r3, 90006060 <_ZNK8touchgfx8CallbackI17TC_ScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
9000605c:	2001      	movs	r0, #1
    }
9000605e:	4770      	bx	lr
90006060:	68c0      	ldr	r0, [r0, #12]
90006062:	f000 0001 	and.w	r0, r0, #1
90006066:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90006068:	4618      	mov	r0, r3
9000606a:	4770      	bx	lr

9000606c <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
9000606c:	b510      	push	{r4, lr}
9000606e:	4604      	mov	r4, r0
90006070:	214c      	movs	r1, #76	@ 0x4c
90006072:	f026 fe23 	bl	9002ccbc <_ZdlPvj>
90006076:	4620      	mov	r0, r4
90006078:	bd10      	pop	{r4, pc}
9000607a:	bf00      	nop

9000607c <_ZN8touchgfx8CallbackI17TC_ScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
9000607c:	b510      	push	{r4, lr}
9000607e:	4604      	mov	r4, r0
90006080:	2110      	movs	r1, #16
90006082:	f026 fe1b 	bl	9002ccbc <_ZdlPvj>
90006086:	4620      	mov	r0, r4
90006088:	bd10      	pop	{r4, pc}
9000608a:	bf00      	nop

9000608c <_ZN17TC_ScreenViewBaseD0Ev>:
TC_ScreenViewBase::~TC_ScreenViewBase()
9000608c:	b510      	push	{r4, lr}
9000608e:	4604      	mov	r4, r0
}
90006090:	f44f 71e2 	mov.w	r1, #452	@ 0x1c4
90006094:	f026 fe12 	bl	9002ccbc <_ZdlPvj>
90006098:	4620      	mov	r0, r4
9000609a:	bd10      	pop	{r4, pc}

9000609c <_ZN17TC_ScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void TC_ScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
9000609c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (&src == &TC_Button)
9000609e:	f100 03c4 	add.w	r3, r0, #196	@ 0xc4
{
900060a2:	4604      	mov	r4, r0
900060a4:	460d      	mov	r5, r1
    if (&src == &TC_Button)
900060a6:	4299      	cmp	r1, r3
900060a8:	d004      	beq.n	900060b4 <_ZN17TC_ScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>
900060aa:	f500 76ac 	add.w	r6, r0, #344	@ 0x158
        //When Show_TC completed show Erase_TC_Button
        //Show Erase_TC_Button
        Erase_TC_Button.setVisible(true);
        Erase_TC_Button.invalidate();
    }
    if (&src == &Erase_TC_Button)
900060ae:	42b5      	cmp	r5, r6
900060b0:	d010      	beq.n	900060d4 <_ZN17TC_ScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x38>
        //Erase_Change_Screen
        //When Erase_TC_Button clicked change screen to Home_Screen
        //Go to Home_Screen with screen transition towards East
        application().gotoHome_ScreenScreenWipeTransitionEast();
    }
}
900060b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        visible = vis;
900060b4:	2701      	movs	r7, #1
        Erase_TC_Button.invalidate();
900060b6:	f504 76ac 	add.w	r6, r4, #344	@ 0x158
        TC_TextBox.invalidate();
900060ba:	f500 7086 	add.w	r0, r0, #268	@ 0x10c
900060be:	f884 7131 	strb.w	r7, [r4, #305]	@ 0x131
900060c2:	f014 f9ee 	bl	9001a4a2 <_ZNK8touchgfx8Drawable10invalidateEv>
        Erase_TC_Button.invalidate();
900060c6:	4630      	mov	r0, r6
900060c8:	f884 717d 	strb.w	r7, [r4, #381]	@ 0x17d
900060cc:	f014 f9e9 	bl	9001a4a2 <_ZNK8touchgfx8Drawable10invalidateEv>
    if (&src == &Erase_TC_Button)
900060d0:	42b5      	cmp	r5, r6
900060d2:	d1ee      	bne.n	900060b2 <_ZN17TC_ScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~TC_ScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
900060d4:	f013 f804 	bl	900190e0 <_ZN8touchgfx11Application11getInstanceEv>
}
900060d8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
        application().gotoHome_ScreenScreenWipeTransitionEast();
900060dc:	f7ff b820 	b.w	90005120 <_ZN23FrontendApplicationBase39gotoHome_ScreenScreenWipeTransitionEastEv>

900060e0 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900060e0:	4b1b      	ldr	r3, [pc, #108]	@ (90006150 <_ZN8touchgfx8TextArea12setBaselineYEs+0x70>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
900060e2:	6802      	ldr	r2, [r0, #0]
900060e4:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
900060e6:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
900060e8:	6b55      	ldr	r5, [r2, #52]	@ 0x34
900060ea:	b323      	cbz	r3, 90006136 <_ZN8touchgfx8TextArea12setBaselineYEs+0x56>
900060ec:	b28e      	uxth	r6, r1
        return typedTextId < numberOfTypedTexts;
900060ee:	4919      	ldr	r1, [pc, #100]	@ (90006154 <_ZN8touchgfx8TextArea12setBaselineYEs+0x74>)
900060f0:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
900060f2:	4604      	mov	r4, r0
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900060f4:	8809      	ldrh	r1, [r1, #0]
900060f6:	4291      	cmp	r1, r2
900060f8:	d923      	bls.n	90006142 <_ZN8touchgfx8TextArea12setBaselineYEs+0x62>
        return fonts[typedTexts[typedTextId].fontIdx];
900060fa:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
900060fe:	4b16      	ldr	r3, [pc, #88]	@ (90006158 <_ZN8touchgfx8TextArea12setBaselineYEs+0x78>)
90006100:	681b      	ldr	r3, [r3, #0]
90006102:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90006106:	4a15      	ldr	r2, [pc, #84]	@ (9000615c <_ZN8touchgfx8TextArea12setBaselineYEs+0x7c>)
90006108:	6803      	ldr	r3, [r0, #0]
9000610a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000610c:	4293      	cmp	r3, r2
9000610e:	d107      	bne.n	90006120 <_ZN8touchgfx8TextArea12setBaselineYEs+0x40>
        return baselineHeight;
90006110:	88c0      	ldrh	r0, [r0, #6]
90006112:	4b13      	ldr	r3, [pc, #76]	@ (90006160 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
90006114:	1a31      	subs	r1, r6, r0
90006116:	429d      	cmp	r5, r3
90006118:	b209      	sxth	r1, r1
9000611a:	d107      	bne.n	9000612c <_ZN8touchgfx8TextArea12setBaselineYEs+0x4c>
        rect.y = y;
9000611c:	80e1      	strh	r1, [r4, #6]
    }
9000611e:	bd70      	pop	{r4, r5, r6, pc}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90006120:	4798      	blx	r3
90006122:	4b0f      	ldr	r3, [pc, #60]	@ (90006160 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
90006124:	1a31      	subs	r1, r6, r0
90006126:	429d      	cmp	r5, r3
90006128:	b209      	sxth	r1, r1
9000612a:	d0f7      	beq.n	9000611c <_ZN8touchgfx8TextArea12setBaselineYEs+0x3c>
9000612c:	4620      	mov	r0, r4
9000612e:	462b      	mov	r3, r5
    }
90006130:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90006134:	4718      	bx	r3
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90006136:	4b0b      	ldr	r3, [pc, #44]	@ (90006164 <_ZN8touchgfx8TextArea12setBaselineYEs+0x84>)
90006138:	216c      	movs	r1, #108	@ 0x6c
9000613a:	4a0b      	ldr	r2, [pc, #44]	@ (90006168 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
9000613c:	480b      	ldr	r0, [pc, #44]	@ (9000616c <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
9000613e:	f027 f933 	bl	9002d3a8 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90006142:	4b0b      	ldr	r3, [pc, #44]	@ (90006170 <_ZN8touchgfx8TextArea12setBaselineYEs+0x90>)
90006144:	216d      	movs	r1, #109	@ 0x6d
90006146:	4a08      	ldr	r2, [pc, #32]	@ (90006168 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
90006148:	4808      	ldr	r0, [pc, #32]	@ (9000616c <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
9000614a:	f027 f92d 	bl	9002d3a8 <__assert_func>
9000614e:	bf00      	nop
90006150:	24021c64 	.word	0x24021c64
90006154:	24021c68 	.word	0x24021c68
90006158:	24021c6c 	.word	0x24021c6c
9000615c:	900048f5 	.word	0x900048f5
90006160:	90002e11 	.word	0x90002e11
90006164:	9002ffc4 	.word	0x9002ffc4
90006168:	90030008 	.word	0x90030008
9000616c:	90030044 	.word	0x90030044
90006170:	9003008c 	.word	0x9003008c

90006174 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
        setX(x);
90006174:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
90006176:	b570      	push	{r4, r5, r6, lr}
90006178:	4614      	mov	r4, r2
9000617a:	4e23      	ldr	r6, [pc, #140]	@ (90006208 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x94>)
        setX(x);
9000617c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
9000617e:	4605      	mov	r5, r0
90006180:	42b2      	cmp	r2, r6
90006182:	d122      	bne.n	900061ca <_ZN8touchgfx8TextArea13setXBaselineYEss+0x56>
        setBaselineY(baselineY);
90006184:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
        rect.x = x;
90006186:	80a9      	strh	r1, [r5, #4]
90006188:	4920      	ldr	r1, [pc, #128]	@ (9000620c <_ZN8touchgfx8TextArea13setXBaselineYEss+0x98>)
9000618a:	428a      	cmp	r2, r1
9000618c:	d123      	bne.n	900061d6 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x62>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000618e:	4a20      	ldr	r2, [pc, #128]	@ (90006210 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x9c>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
90006190:	b2a4      	uxth	r4, r4
90006192:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
90006194:	6813      	ldr	r3, [r2, #0]
90006196:	2b00      	cmp	r3, #0
90006198:	d02f      	beq.n	900061fa <_ZN8touchgfx8TextArea13setXBaselineYEss+0x86>
        return typedTextId < numberOfTypedTexts;
9000619a:	491e      	ldr	r1, [pc, #120]	@ (90006214 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
9000619c:	8daa      	ldrh	r2, [r5, #44]	@ 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
9000619e:	8809      	ldrh	r1, [r1, #0]
900061a0:	4291      	cmp	r1, r2
900061a2:	d924      	bls.n	900061ee <_ZN8touchgfx8TextArea13setXBaselineYEss+0x7a>
        return fonts[typedTexts[typedTextId].fontIdx];
900061a4:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
900061a8:	4b1b      	ldr	r3, [pc, #108]	@ (90006218 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa4>)
900061aa:	681b      	ldr	r3, [r3, #0]
900061ac:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
900061b0:	4a1a      	ldr	r2, [pc, #104]	@ (9000621c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa8>)
900061b2:	6803      	ldr	r3, [r0, #0]
900061b4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900061b6:	4293      	cmp	r3, r2
900061b8:	d117      	bne.n	900061ea <_ZN8touchgfx8TextArea13setXBaselineYEss+0x76>
900061ba:	88c0      	ldrh	r0, [r0, #6]
900061bc:	4b18      	ldr	r3, [pc, #96]	@ (90006220 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xac>)
900061be:	1a24      	subs	r4, r4, r0
900061c0:	429e      	cmp	r6, r3
900061c2:	b221      	sxth	r1, r4
900061c4:	d10c      	bne.n	900061e0 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x6c>
        rect.y = y;
900061c6:	80e9      	strh	r1, [r5, #6]
    }
900061c8:	bd70      	pop	{r4, r5, r6, pc}
        setX(x);
900061ca:	4790      	blx	r2
        setBaselineY(baselineY);
900061cc:	682b      	ldr	r3, [r5, #0]
900061ce:	490f      	ldr	r1, [pc, #60]	@ (9000620c <_ZN8touchgfx8TextArea13setXBaselineYEss+0x98>)
900061d0:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
900061d2:	428a      	cmp	r2, r1
900061d4:	d0db      	beq.n	9000618e <_ZN8touchgfx8TextArea13setXBaselineYEss+0x1a>
900061d6:	4621      	mov	r1, r4
900061d8:	4628      	mov	r0, r5
    }
900061da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
900061de:	4710      	bx	r2
        setY(baselineY - getTypedText().getFont()->getBaseline());
900061e0:	4628      	mov	r0, r5
900061e2:	4633      	mov	r3, r6
    }
900061e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
900061e8:	4718      	bx	r3
900061ea:	4798      	blx	r3
900061ec:	e7e6      	b.n	900061bc <_ZN8touchgfx8TextArea13setXBaselineYEss+0x48>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900061ee:	4b0d      	ldr	r3, [pc, #52]	@ (90006224 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb0>)
900061f0:	216d      	movs	r1, #109	@ 0x6d
900061f2:	4a0d      	ldr	r2, [pc, #52]	@ (90006228 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
900061f4:	480d      	ldr	r0, [pc, #52]	@ (9000622c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
900061f6:	f027 f8d7 	bl	9002d3a8 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900061fa:	4b0d      	ldr	r3, [pc, #52]	@ (90006230 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
900061fc:	216c      	movs	r1, #108	@ 0x6c
900061fe:	4a0a      	ldr	r2, [pc, #40]	@ (90006228 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
90006200:	480a      	ldr	r0, [pc, #40]	@ (9000622c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
90006202:	f027 f8d1 	bl	9002d3a8 <__assert_func>
90006206:	bf00      	nop
90006208:	90002e0d 	.word	0x90002e0d
9000620c:	900060e1 	.word	0x900060e1
90006210:	24021c64 	.word	0x24021c64
90006214:	24021c68 	.word	0x24021c68
90006218:	24021c6c 	.word	0x24021c6c
9000621c:	900048f5 	.word	0x900048f5
90006220:	90002e11 	.word	0x90002e11
90006224:	9003008c 	.word	0x9003008c
90006228:	90030008 	.word	0x90030008
9000622c:	90030044 	.word	0x90030044
90006230:	9002ffc4 	.word	0x9002ffc4

90006234 <_ZN17TC_ScreenViewBaseC1Ev>:
TC_ScreenViewBase::TC_ScreenViewBase() :
90006234:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90006238:	4604      	mov	r4, r0
9000623a:	b08b      	sub	sp, #44	@ 0x2c
9000623c:	2600      	movs	r6, #0
9000623e:	f014 ffa5 	bl	9001b18c <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &TC_ScreenViewBase::buttonCallbackHandler)
90006242:	f104 0798 	add.w	r7, r4, #152	@ 0x98
90006246:	4acc      	ldr	r2, [pc, #816]	@ (90006578 <_ZN17TC_ScreenViewBaseC1Ev+0x344>)
        : Widget(), alpha(255), color(0)
90006248:	4bcc      	ldr	r3, [pc, #816]	@ (9000657c <_ZN17TC_ScreenViewBaseC1Ev+0x348>)
          touchable(false),
9000624a:	f44f 7880 	mov.w	r8, #256	@ 0x100
9000624e:	25ff      	movs	r5, #255	@ 0xff
90006250:	f64f 79ff 	movw	r9, #65535	@ 0xffff
90006254:	f104 0ac4 	add.w	sl, r4, #196	@ 0xc4
90006258:	6022      	str	r2, [r4, #0]
9000625a:	a908      	add	r1, sp, #32
9000625c:	6423      	str	r3, [r4, #64]	@ 0x40
9000625e:	66e3      	str	r3, [r4, #108]	@ 0x6c
90006260:	4638      	mov	r0, r7
90006262:	f8a4 8064 	strh.w	r8, [r4, #100]	@ 0x64
90006266:	f884 5066 	strb.w	r5, [r4, #102]	@ 0x66
9000626a:	f8a4 8090 	strh.w	r8, [r4, #144]	@ 0x90
9000626e:	f884 5092 	strb.w	r5, [r4, #146]	@ 0x92
90006272:	63e6      	str	r6, [r4, #60]	@ 0x3c
        : color(col)
90006274:	66a6      	str	r6, [r4, #104]	@ 0x68
90006276:	f8c4 6094 	str.w	r6, [r4, #148]	@ 0x94
9000627a:	f8ad 9020 	strh.w	r9, [sp, #32]
        : x(0), y(0), width(0), height(0)
9000627e:	e9c4 6611 	strd	r6, r6, [r4, #68]	@ 0x44
90006282:	e9c4 6613 	strd	r6, r6, [r4, #76]	@ 0x4c
          nextSibling(0),
90006286:	e9c4 6615 	strd	r6, r6, [r4, #84]	@ 0x54
          cachedAbsX(0),
9000628a:	e9c4 6617 	strd	r6, r6, [r4, #92]	@ 0x5c
9000628e:	e9c4 661c 	strd	r6, r6, [r4, #112]	@ 0x70
90006292:	e9c4 661e 	strd	r6, r6, [r4, #120]	@ 0x78
          nextSibling(0),
90006296:	e9c4 6620 	strd	r6, r6, [r4, #128]	@ 0x80
          cachedAbsX(0),
9000629a:	e9c4 6622 	strd	r6, r6, [r4, #136]	@ 0x88
9000629e:	f00e ffef 	bl	90015280 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900062a2:	4650      	mov	r0, sl
900062a4:	f010 f89a 	bl	900163dc <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : typedTextId(id)
900062a8:	4bb5      	ldr	r3, [pc, #724]	@ (90006580 <_ZN17TC_ScreenViewBaseC1Ev+0x34c>)
          touchable(false),
900062aa:	f8a4 8130 	strh.w	r8, [r4, #304]	@ 0x130
900062ae:	f504 78ac 	add.w	r8, r4, #344	@ 0x158
900062b2:	f8c4 3134 	str.w	r3, [r4, #308]	@ 0x134
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900062b6:	f04f 33ff 	mov.w	r3, #4294967295
900062ba:	f8a4 9138 	strh.w	r9, [r4, #312]	@ 0x138
900062be:	4640      	mov	r0, r8
900062c0:	f8c4 314c 	str.w	r3, [r4, #332]	@ 0x14c
        : TextAreaWithWildcardBase(), wc1(0)
900062c4:	4baf      	ldr	r3, [pc, #700]	@ (90006584 <_ZN17TC_ScreenViewBaseC1Ev+0x350>)
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
900062c6:	f8c4 5142 	str.w	r5, [r4, #322]	@ 0x142
900062ca:	1d25      	adds	r5, r4, #4
900062cc:	f8c4 310c 	str.w	r3, [r4, #268]	@ 0x10c
        : color(col)
900062d0:	f8c4 613c 	str.w	r6, [r4, #316]	@ 0x13c
900062d4:	f8a4 6140 	strh.w	r6, [r4, #320]	@ 0x140
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900062d8:	f8c4 6148 	str.w	r6, [r4, #328]	@ 0x148
        rect.x = x;
900062dc:	f8df 92e8 	ldr.w	r9, [pc, #744]	@ 900065c8 <_ZN17TC_ScreenViewBaseC1Ev+0x394>
        : x(0), y(0), width(0), height(0)
900062e0:	e9c4 6644 	strd	r6, r6, [r4, #272]	@ 0x110
900062e4:	e9c4 6646 	strd	r6, r6, [r4, #280]	@ 0x118
          nextSibling(0),
900062e8:	e9c4 6648 	strd	r6, r6, [r4, #288]	@ 0x120
          cachedAbsX(0),
900062ec:	e9c4 664a 	strd	r6, r6, [r4, #296]	@ 0x128
900062f0:	e9c4 6654 	strd	r6, r6, [r4, #336]	@ 0x150
900062f4:	f010 f872 	bl	900163dc <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
900062f8:	4ba3      	ldr	r3, [pc, #652]	@ (90006588 <_ZN17TC_ScreenViewBaseC1Ev+0x354>)
900062fa:	f104 0140 	add.w	r1, r4, #64	@ 0x40
900062fe:	4628      	mov	r0, r5
90006300:	f8c4 31b4 	str.w	r3, [r4, #436]	@ 0x1b4
90006304:	4ba1      	ldr	r3, [pc, #644]	@ (9000658c <_ZN17TC_ScreenViewBaseC1Ev+0x358>)
        rect.x = x;
90006306:	f8c4 9048 	str.w	r9, [r4, #72]	@ 0x48
9000630a:	f8c4 31bc 	str.w	r3, [r4, #444]	@ 0x1bc
        color = newColor;
9000630e:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
90006312:	f8c4 41b8 	str.w	r4, [r4, #440]	@ 0x1b8
90006316:	66a3      	str	r3, [r4, #104]	@ 0x68
90006318:	f8c4 61c0 	str.w	r6, [r4, #448]	@ 0x1c0
9000631c:	6466      	str	r6, [r4, #68]	@ 0x44
9000631e:	f00c f8b1 	bl	90012484 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006322:	4b9b      	ldr	r3, [pc, #620]	@ (90006590 <_ZN17TC_ScreenViewBaseC1Ev+0x35c>)
90006324:	f104 016c 	add.w	r1, r4, #108	@ 0x6c
90006328:	4628      	mov	r0, r5
9000632a:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
9000632e:	e9c4 691c 	strd	r6, r9, [r4, #112]	@ 0x70
90006332:	f00c f8a7 	bl	90012484 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006336:	2303      	movs	r3, #3
    ATech_Logo.setBitmap(touchgfx::Bitmap(BITMAP_IMAGES_ID));
90006338:	4638      	mov	r0, r7
9000633a:	a908      	add	r1, sp, #32
9000633c:	f8ad 3020 	strh.w	r3, [sp, #32]
90006340:	f00f ff14 	bl	9001616c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90006344:	f240 1267 	movw	r2, #359	@ 0x167
90006348:	4b92      	ldr	r3, [pc, #584]	@ (90006594 <_ZN17TC_ScreenViewBaseC1Ev+0x360>)
    ATech_Logo.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000634a:	4638      	mov	r0, r7
9000634c:	4631      	mov	r1, r6
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000634e:	f8df 927c 	ldr.w	r9, [pc, #636]	@ 900065cc <_ZN17TC_ScreenViewBaseC1Ev+0x398>
90006352:	e9c4 2327 	strd	r2, r3, [r4, #156]	@ 0x9c
90006356:	f00e ff4e 	bl	900151f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
9000635a:	4639      	mov	r1, r7
9000635c:	4628      	mov	r0, r5
        return typedTextId < numberOfTypedTexts;
9000635e:	4f8e      	ldr	r7, [pc, #568]	@ (90006598 <_ZN17TC_ScreenViewBaseC1Ev+0x364>)
90006360:	f00c f890 	bl	90012484 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006364:	4b8d      	ldr	r3, [pc, #564]	@ (9000659c <_ZN17TC_ScreenViewBaseC1Ev+0x368>)
    TC_Button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_DISABLED_ID));
90006366:	a907      	add	r1, sp, #28
90006368:	aa08      	add	r2, sp, #32
9000636a:	f8c4 30c8 	str.w	r3, [r4, #200]	@ 0xc8
9000636e:	4650      	mov	r0, sl
90006370:	f8ad 601c 	strh.w	r6, [sp, #28]
90006374:	f8ad 6020 	strh.w	r6, [sp, #32]
90006378:	f00f fd31 	bl	90015dde <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
9000637c:	2105      	movs	r1, #5
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
    {
        if (typedText.hasValidId())
9000637e:	883b      	ldrh	r3, [r7, #0]
90006380:	428b      	cmp	r3, r1
90006382:	f8a4 10fc 	strh.w	r1, [r4, #252]	@ 0xfc
90006386:	d926      	bls.n	900063d6 <_ZN17TC_ScreenViewBaseC1Ev+0x1a2>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90006388:	f8d9 3000 	ldr.w	r3, [r9]
9000638c:	2b00      	cmp	r3, #0
9000638e:	f000 813d 	beq.w	9000660c <_ZN17TC_ScreenViewBaseC1Ev+0x3d8>
        return fonts[typedTexts[typedTextId].fontIdx];
90006392:	7a9a      	ldrb	r2, [r3, #10]
90006394:	4b82      	ldr	r3, [pc, #520]	@ (900065a0 <_ZN17TC_ScreenViewBaseC1Ev+0x36c>)
90006396:	681b      	ldr	r3, [r3, #0]
90006398:	f853 b022 	ldr.w	fp, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
9000639c:	4b81      	ldr	r3, [pc, #516]	@ (900065a4 <_ZN17TC_ScreenViewBaseC1Ev+0x370>)
9000639e:	6818      	ldr	r0, [r3, #0]
900063a0:	f000 fb5e 	bl	90006a60 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900063a4:	f8db 3000 	ldr.w	r3, [fp]
900063a8:	4601      	mov	r1, r0
900063aa:	487f      	ldr	r0, [pc, #508]	@ (900065a8 <_ZN17TC_ScreenViewBaseC1Ev+0x374>)
900063ac:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
900063ae:	4282      	cmp	r2, r0
900063b0:	f040 811f 	bne.w	900065f2 <_ZN17TC_ScreenViewBaseC1Ev+0x3be>
        return fontHeight;
900063b4:	f8bb 6004 	ldrh.w	r6, [fp, #4]
900063b8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
900063ba:	4658      	mov	r0, fp
900063bc:	9101      	str	r1, [sp, #4]
900063be:	4798      	blx	r3
900063c0:	fb16 f600 	smulbb	r6, r6, r0
900063c4:	f8db 3000 	ldr.w	r3, [fp]
900063c8:	4658      	mov	r0, fp
900063ca:	b2b6      	uxth	r6, r6
900063cc:	9901      	ldr	r1, [sp, #4]
900063ce:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900063d0:	4798      	blx	r3
900063d2:	4406      	add	r6, r0
900063d4:	b236      	sxth	r6, r6
        color = col;
900063d6:	f04f 33ff 	mov.w	r3, #4294967295
    TC_Button.setAction(buttonCallback);
900063da:	f504 7bda 	add.w	fp, r4, #436	@ 0x1b4
900063de:	4651      	mov	r1, sl
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900063e0:	f8a4 610a 	strh.w	r6, [r4, #266]	@ 0x10a
900063e4:	4628      	mov	r0, r5
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
900063e6:	f8c4 b0ec 	str.w	fp, [r4, #236]	@ 0xec
    TC_TextBox.setPosition(0, 92, 480, 54);
900063ea:	f504 7686 	add.w	r6, r4, #268	@ 0x10c
        colorPressed = col;
900063ee:	e9c4 3340 	strd	r3, r3, [r4, #256]	@ 0x100
900063f2:	f00c f847 	bl	90012484 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900063f6:	f44f 02b8 	mov.w	r2, #6029312	@ 0x5c0000
        setX(x);
900063fa:	f8d4 310c 	ldr.w	r3, [r4, #268]	@ 0x10c
900063fe:	496b      	ldr	r1, [pc, #428]	@ (900065ac <_ZN17TC_ScreenViewBaseC1Ev+0x378>)
        rect.x = x;
90006400:	f8c4 2110 	str.w	r2, [r4, #272]	@ 0x110
        setWidth(width);
90006404:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90006406:	428a      	cmp	r2, r1
90006408:	f040 80ee 	bne.w	900065e8 <_ZN17TC_ScreenViewBaseC1Ev+0x3b4>
        rect.width = width;
9000640c:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
        boundingArea = calculateBoundingArea();
90006410:	f10d 0a08 	add.w	sl, sp, #8
90006414:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90006418:	4631      	mov	r1, r6
9000641a:	4650      	mov	r0, sl
9000641c:	f8a4 2114 	strh.w	r2, [r4, #276]	@ 0x114
90006420:	4798      	blx	r3
90006422:	f504 73a4 	add.w	r3, r4, #328	@ 0x148
90006426:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
9000642a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        setHeight(height);
9000642e:	f8d4 310c 	ldr.w	r3, [r4, #268]	@ 0x10c
90006432:	495f      	ldr	r1, [pc, #380]	@ (900065b0 <_ZN17TC_ScreenViewBaseC1Ev+0x37c>)
90006434:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
90006436:	428a      	cmp	r2, r1
90006438:	f040 809a 	bne.w	90006570 <_ZN17TC_ScreenViewBaseC1Ev+0x33c>
        rect.height = height;
9000643c:	2236      	movs	r2, #54	@ 0x36
        boundingArea = calculateBoundingArea();
9000643e:	f10d 0a08 	add.w	sl, sp, #8
90006442:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90006446:	4631      	mov	r1, r6
90006448:	4650      	mov	r0, sl
9000644a:	f8a4 2116 	strh.w	r2, [r4, #278]	@ 0x116
9000644e:	4798      	blx	r3
90006450:	f106 033c 	add.w	r3, r6, #60	@ 0x3c
90006454:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
90006458:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
9000645c:	f8d4 310c 	ldr.w	r3, [r4, #268]	@ 0x10c
90006460:	4954      	ldr	r1, [pc, #336]	@ (900065b4 <_ZN17TC_ScreenViewBaseC1Ev+0x380>)
90006462:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
        color = newColor;
90006466:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
9000646a:	428a      	cmp	r2, r1
9000646c:	f8c4 313c 	str.w	r3, [r4, #316]	@ 0x13c
        linespace = space;
90006470:	f04f 0300 	mov.w	r3, #0
90006474:	f8a4 3140 	strh.w	r3, [r4, #320]	@ 0x140
        boundingArea = calculateBoundingArea();
90006478:	f040 80aa 	bne.w	900065d0 <_ZN17TC_ScreenViewBaseC1Ev+0x39c>
9000647c:	f8c4 3148 	str.w	r3, [r4, #328]	@ 0x148
90006480:	f8c4 3150 	str.w	r3, [r4, #336]	@ 0x150
90006484:	f04f 33ff 	mov.w	r3, #4294967295
90006488:	f8c4 314c 	str.w	r3, [r4, #332]	@ 0x14c
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000648c:	f8d9 3000 	ldr.w	r3, [r9]
    Unicode::snprintf(TC_TextBoxBuffer, TC_TEXTBOX_SIZE, "%s", touchgfx::TypedText(T_TC_TEXTBOX_BUFFER).getText());
90006490:	f504 7ad0 	add.w	sl, r4, #416	@ 0x1a0
90006494:	2b00      	cmp	r3, #0
90006496:	f000 80c5 	beq.w	90006624 <_ZN17TC_ScreenViewBaseC1Ev+0x3f0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
9000649a:	883b      	ldrh	r3, [r7, #0]
9000649c:	2b07      	cmp	r3, #7
9000649e:	f240 80bb 	bls.w	90006618 <_ZN17TC_ScreenViewBaseC1Ev+0x3e4>
        return texts->getText(typedTextId);
900064a2:	4b40      	ldr	r3, [pc, #256]	@ (900065a4 <_ZN17TC_ScreenViewBaseC1Ev+0x370>)
900064a4:	2107      	movs	r1, #7
900064a6:	6818      	ldr	r0, [r3, #0]
900064a8:	f000 fada 	bl	90006a60 <_ZNK8touchgfx5Texts7getTextEt>
900064ac:	4a42      	ldr	r2, [pc, #264]	@ (900065b8 <_ZN17TC_ScreenViewBaseC1Ev+0x384>)
900064ae:	4603      	mov	r3, r0
900064b0:	210a      	movs	r1, #10
900064b2:	4650      	mov	r0, sl
900064b4:	f016 fb50 	bl	9001cb58 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
900064b8:	4a31      	ldr	r2, [pc, #196]	@ (90006580 <_ZN17TC_ScreenViewBaseC1Ev+0x34c>)
900064ba:	2306      	movs	r3, #6
    TC_TextBox.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6VCK));
900064bc:	4630      	mov	r0, r6
900064be:	a908      	add	r1, sp, #32
        wc1 = value;
900064c0:	f8c4 a154 	str.w	sl, [r4, #340]	@ 0x154
900064c4:	9208      	str	r2, [sp, #32]
900064c6:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
900064ca:	f00f fc2b 	bl	90015d24 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
900064ce:	4631      	mov	r1, r6
        visible = vis;
900064d0:	2600      	movs	r6, #0
900064d2:	4628      	mov	r0, r5
900064d4:	f884 6131 	strb.w	r6, [r4, #305]	@ 0x131
900064d8:	f00b ffd4 	bl	90012484 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
900064dc:	4b37      	ldr	r3, [pc, #220]	@ (900065bc <_ZN17TC_ScreenViewBaseC1Ev+0x388>)
    Erase_TC_Button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_DISABLED_ID));
900064de:	a907      	add	r1, sp, #28
900064e0:	aa08      	add	r2, sp, #32
900064e2:	f8c4 315c 	str.w	r3, [r4, #348]	@ 0x15c
900064e6:	4640      	mov	r0, r8
900064e8:	f8ad 601c 	strh.w	r6, [sp, #28]
900064ec:	f8ad 6020 	strh.w	r6, [sp, #32]
900064f0:	f00f fc75 	bl	90015dde <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
900064f4:	2104      	movs	r1, #4
        if (typedText.hasValidId())
900064f6:	883b      	ldrh	r3, [r7, #0]
900064f8:	428b      	cmp	r3, r1
900064fa:	f8a4 1190 	strh.w	r1, [r4, #400]	@ 0x190
900064fe:	d922      	bls.n	90006546 <_ZN17TC_ScreenViewBaseC1Ev+0x312>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90006500:	f8d9 3000 	ldr.w	r3, [r9]
90006504:	2b00      	cmp	r3, #0
90006506:	f000 8081 	beq.w	9000660c <_ZN17TC_ScreenViewBaseC1Ev+0x3d8>
        return fonts[typedTexts[typedTextId].fontIdx];
9000650a:	7a1a      	ldrb	r2, [r3, #8]
        return texts->getText(typedTextId);
9000650c:	4b25      	ldr	r3, [pc, #148]	@ (900065a4 <_ZN17TC_ScreenViewBaseC1Ev+0x370>)
9000650e:	6818      	ldr	r0, [r3, #0]
        return fonts[typedTexts[typedTextId].fontIdx];
90006510:	4b23      	ldr	r3, [pc, #140]	@ (900065a0 <_ZN17TC_ScreenViewBaseC1Ev+0x36c>)
90006512:	681b      	ldr	r3, [r3, #0]
90006514:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
90006518:	f000 faa2 	bl	90006a60 <_ZNK8touchgfx5Texts7getTextEt>
9000651c:	4922      	ldr	r1, [pc, #136]	@ (900065a8 <_ZN17TC_ScreenViewBaseC1Ev+0x374>)
9000651e:	4681      	mov	r9, r0
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90006520:	683b      	ldr	r3, [r7, #0]
90006522:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90006524:	428a      	cmp	r2, r1
90006526:	d16c      	bne.n	90006602 <_ZN17TC_ScreenViewBaseC1Ev+0x3ce>
90006528:	88be      	ldrh	r6, [r7, #4]
9000652a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
9000652c:	4649      	mov	r1, r9
9000652e:	4638      	mov	r0, r7
90006530:	4798      	blx	r3
90006532:	fb16 f600 	smulbb	r6, r6, r0
90006536:	683b      	ldr	r3, [r7, #0]
90006538:	4649      	mov	r1, r9
9000653a:	b2b6      	uxth	r6, r6
9000653c:	4638      	mov	r0, r7
9000653e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90006540:	4798      	blx	r3
90006542:	4406      	add	r6, r0
90006544:	b236      	sxth	r6, r6
        color = col;
90006546:	4b1e      	ldr	r3, [pc, #120]	@ (900065c0 <_ZN17TC_ScreenViewBaseC1Ev+0x38c>)
90006548:	4628      	mov	r0, r5
        colorPressed = col;
9000654a:	4a1e      	ldr	r2, [pc, #120]	@ (900065c4 <_ZN17TC_ScreenViewBaseC1Ev+0x390>)
9000654c:	4641      	mov	r1, r8
        color = col;
9000654e:	f8c4 3194 	str.w	r3, [r4, #404]	@ 0x194
        visible = vis;
90006552:	2300      	movs	r3, #0
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90006554:	f8a4 619e 	strh.w	r6, [r4, #414]	@ 0x19e
90006558:	f8c4 b180 	str.w	fp, [r4, #384]	@ 0x180
        colorPressed = col;
9000655c:	f8c4 2198 	str.w	r2, [r4, #408]	@ 0x198
90006560:	f884 317d 	strb.w	r3, [r4, #381]	@ 0x17d
90006564:	f00b ff8e 	bl	90012484 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90006568:	4620      	mov	r0, r4
9000656a:	b00b      	add	sp, #44	@ 0x2c
9000656c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        setHeight(height);
90006570:	2136      	movs	r1, #54	@ 0x36
90006572:	4630      	mov	r0, r6
90006574:	4790      	blx	r2
90006576:	e771      	b.n	9000645c <_ZN17TC_ScreenViewBaseC1Ev+0x228>
90006578:	90030bd4 	.word	0x90030bd4
9000657c:	90031bec 	.word	0x90031bec
90006580:	900307dc 	.word	0x900307dc
90006584:	90030b2c 	.word	0x90030b2c
90006588:	90030bbc 	.word	0x90030bbc
9000658c:	9000609d 	.word	0x9000609d
90006590:	ff919090 	.word	0xff919090
90006594:	003b0079 	.word	0x003b0079
90006598:	24021c68 	.word	0x24021c68
9000659c:	00a6001b 	.word	0x00a6001b
900065a0:	24021c6c 	.word	0x24021c6c
900065a4:	24021c70 	.word	0x24021c70
900065a8:	900048f9 	.word	0x900048f9
900065ac:	90005f99 	.word	0x90005f99
900065b0:	90005fc1 	.word	0x90005fc1
900065b4:	9000600d 	.word	0x9000600d
900065b8:	90030118 	.word	0x90030118
900065bc:	00a60110 	.word	0x00a60110
900065c0:	fff70000 	.word	0xfff70000
900065c4:	ffff0000 	.word	0xffff0000
900065c8:	011001e0 	.word	0x011001e0
900065cc:	24021c64 	.word	0x24021c64
900065d0:	f10d 0a08 	add.w	sl, sp, #8
900065d4:	4631      	mov	r1, r6
900065d6:	4650      	mov	r0, sl
900065d8:	4790      	blx	r2
900065da:	f106 033c 	add.w	r3, r6, #60	@ 0x3c
900065de:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
900065e2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
900065e6:	e751      	b.n	9000648c <_ZN17TC_ScreenViewBaseC1Ev+0x258>
        setWidth(width);
900065e8:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
900065ec:	4630      	mov	r0, r6
900065ee:	4790      	blx	r2
900065f0:	e71d      	b.n	9000642e <_ZN17TC_ScreenViewBaseC1Ev+0x1fa>
900065f2:	9101      	str	r1, [sp, #4]
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900065f4:	4658      	mov	r0, fp
900065f6:	4790      	blx	r2
900065f8:	f8db 3000 	ldr.w	r3, [fp]
900065fc:	4606      	mov	r6, r0
900065fe:	9901      	ldr	r1, [sp, #4]
90006600:	e6da      	b.n	900063b8 <_ZN17TC_ScreenViewBaseC1Ev+0x184>
90006602:	4638      	mov	r0, r7
90006604:	4790      	blx	r2
90006606:	683b      	ldr	r3, [r7, #0]
90006608:	4606      	mov	r6, r0
9000660a:	e78e      	b.n	9000652a <_ZN17TC_ScreenViewBaseC1Ev+0x2f6>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000660c:	4b08      	ldr	r3, [pc, #32]	@ (90006630 <_ZN17TC_ScreenViewBaseC1Ev+0x3fc>)
9000660e:	216c      	movs	r1, #108	@ 0x6c
90006610:	4a08      	ldr	r2, [pc, #32]	@ (90006634 <_ZN17TC_ScreenViewBaseC1Ev+0x400>)
90006612:	4809      	ldr	r0, [pc, #36]	@ (90006638 <_ZN17TC_ScreenViewBaseC1Ev+0x404>)
90006614:	f026 fec8 	bl	9002d3a8 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90006618:	4b08      	ldr	r3, [pc, #32]	@ (9000663c <_ZN17TC_ScreenViewBaseC1Ev+0x408>)
9000661a:	2161      	movs	r1, #97	@ 0x61
9000661c:	4a08      	ldr	r2, [pc, #32]	@ (90006640 <_ZN17TC_ScreenViewBaseC1Ev+0x40c>)
9000661e:	4806      	ldr	r0, [pc, #24]	@ (90006638 <_ZN17TC_ScreenViewBaseC1Ev+0x404>)
90006620:	f026 fec2 	bl	9002d3a8 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90006624:	4b02      	ldr	r3, [pc, #8]	@ (90006630 <_ZN17TC_ScreenViewBaseC1Ev+0x3fc>)
90006626:	2160      	movs	r1, #96	@ 0x60
90006628:	4a05      	ldr	r2, [pc, #20]	@ (90006640 <_ZN17TC_ScreenViewBaseC1Ev+0x40c>)
9000662a:	4803      	ldr	r0, [pc, #12]	@ (90006638 <_ZN17TC_ScreenViewBaseC1Ev+0x404>)
9000662c:	f026 febc 	bl	9002d3a8 <__assert_func>
90006630:	9002ffc4 	.word	0x9002ffc4
90006634:	90030008 	.word	0x90030008
90006638:	90030044 	.word	0x90030044
9000663c:	9003008c 	.word	0x9003008c
90006640:	900300cc 	.word	0x900300cc

90006644 <__tcf_0>:

touchgfx::GeneratedFont& getFont_arial_20_4bpp();

touchgfx::GeneratedFont& getFont_arial_20_4bpp()
{
    static touchgfx::GeneratedFont arial_20_4bpp(glyphs_arial_20_4bpp, 18, 24, 20, 0, 0, 4, 1, 0, 1, unicodes_arial_20_4bpp, kerning_arial_20_4bpp, 63, 0, 0, &arial_contextualFormsTable);
90006644:	4770      	bx	lr
90006646:	bf00      	nop

90006648 <_Z21getFont_arial_20_4bppv>:
{
90006648:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont arial_20_4bpp(glyphs_arial_20_4bpp, 18, 24, 20, 0, 0, 4, 1, 0, 1, unicodes_arial_20_4bpp, kerning_arial_20_4bpp, 63, 0, 0, &arial_contextualFormsTable);
9000664a:	4d19      	ldr	r5, [pc, #100]	@ (900066b0 <_Z21getFont_arial_20_4bppv+0x68>)
{
9000664c:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont arial_20_4bpp(glyphs_arial_20_4bpp, 18, 24, 20, 0, 0, 4, 1, 0, 1, unicodes_arial_20_4bpp, kerning_arial_20_4bpp, 63, 0, 0, &arial_contextualFormsTable);
9000664e:	682c      	ldr	r4, [r5, #0]
90006650:	f3bf 8f5b 	dmb	ish
90006654:	f014 0401 	ands.w	r4, r4, #1
90006658:	d002      	beq.n	90006660 <_Z21getFont_arial_20_4bppv+0x18>
    return arial_20_4bpp;
}
9000665a:	4816      	ldr	r0, [pc, #88]	@ (900066b4 <_Z21getFont_arial_20_4bppv+0x6c>)
9000665c:	b00f      	add	sp, #60	@ 0x3c
9000665e:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont arial_20_4bpp(glyphs_arial_20_4bpp, 18, 24, 20, 0, 0, 4, 1, 0, 1, unicodes_arial_20_4bpp, kerning_arial_20_4bpp, 63, 0, 0, &arial_contextualFormsTable);
90006660:	4628      	mov	r0, r5
90006662:	f026 fb2d 	bl	9002ccc0 <__cxa_guard_acquire>
90006666:	2800      	cmp	r0, #0
90006668:	d0f7      	beq.n	9000665a <_Z21getFont_arial_20_4bppv+0x12>
9000666a:	4913      	ldr	r1, [pc, #76]	@ (900066b8 <_Z21getFont_arial_20_4bppv+0x70>)
9000666c:	223f      	movs	r2, #63	@ 0x3f
9000666e:	2301      	movs	r3, #1
90006670:	9405      	str	r4, [sp, #20]
90006672:	4810      	ldr	r0, [pc, #64]	@ (900066b4 <_Z21getFont_arial_20_4bppv+0x6c>)
90006674:	9306      	str	r3, [sp, #24]
90006676:	e9cd 410b 	strd	r4, r1, [sp, #44]	@ 0x2c
9000667a:	e9cd 2409 	strd	r2, r4, [sp, #36]	@ 0x24
9000667e:	490f      	ldr	r1, [pc, #60]	@ (900066bc <_Z21getFont_arial_20_4bppv+0x74>)
90006680:	4a0f      	ldr	r2, [pc, #60]	@ (900066c0 <_Z21getFont_arial_20_4bppv+0x78>)
90006682:	9108      	str	r1, [sp, #32]
90006684:	2114      	movs	r1, #20
90006686:	9207      	str	r2, [sp, #28]
90006688:	2204      	movs	r2, #4
9000668a:	9100      	str	r1, [sp, #0]
9000668c:	490d      	ldr	r1, [pc, #52]	@ (900066c4 <_Z21getFont_arial_20_4bppv+0x7c>)
9000668e:	e9cd 2303 	strd	r2, r3, [sp, #12]
90006692:	e9cd 4401 	strd	r4, r4, [sp, #4]
90006696:	2318      	movs	r3, #24
90006698:	2212      	movs	r2, #18
9000669a:	f7fe fd9b 	bl	900051d4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
9000669e:	480a      	ldr	r0, [pc, #40]	@ (900066c8 <_Z21getFont_arial_20_4bppv+0x80>)
900066a0:	f026 fea0 	bl	9002d3e4 <atexit>
900066a4:	4628      	mov	r0, r5
900066a6:	f026 fb17 	bl	9002ccd8 <__cxa_guard_release>
}
900066aa:	4802      	ldr	r0, [pc, #8]	@ (900066b4 <_Z21getFont_arial_20_4bppv+0x6c>)
900066ac:	b00f      	add	sp, #60	@ 0x3c
900066ae:	bd30      	pop	{r4, r5, pc}
900066b0:	24007a54 	.word	0x24007a54
900066b4:	24007a58 	.word	0x24007a58
900066b8:	90030c00 	.word	0x90030c00
900066bc:	90032700 	.word	0x90032700
900066c0:	9003285c 	.word	0x9003285c
900066c4:	90204dc0 	.word	0x90204dc0
900066c8:	90006645 	.word	0x90006645

900066cc <__tcf_0>:

touchgfx::GeneratedFont& getFont_calibri_20_4bpp();

touchgfx::GeneratedFont& getFont_calibri_20_4bpp()
{
    static touchgfx::GeneratedFont calibri_20_4bpp(glyphs_calibri_20_4bpp, 51, 22, 20, 0, 0, 4, 1, 0, 1, unicodes_calibri_20_4bpp, kerning_calibri_20_4bpp, 63, 0, 0, &calibri_contextualFormsTable);
900066cc:	4770      	bx	lr
900066ce:	bf00      	nop

900066d0 <_Z23getFont_calibri_20_4bppv>:
{
900066d0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont calibri_20_4bpp(glyphs_calibri_20_4bpp, 51, 22, 20, 0, 0, 4, 1, 0, 1, unicodes_calibri_20_4bpp, kerning_calibri_20_4bpp, 63, 0, 0, &calibri_contextualFormsTable);
900066d2:	4d19      	ldr	r5, [pc, #100]	@ (90006738 <_Z23getFont_calibri_20_4bppv+0x68>)
{
900066d4:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont calibri_20_4bpp(glyphs_calibri_20_4bpp, 51, 22, 20, 0, 0, 4, 1, 0, 1, unicodes_calibri_20_4bpp, kerning_calibri_20_4bpp, 63, 0, 0, &calibri_contextualFormsTable);
900066d6:	682c      	ldr	r4, [r5, #0]
900066d8:	f3bf 8f5b 	dmb	ish
900066dc:	f014 0401 	ands.w	r4, r4, #1
900066e0:	d002      	beq.n	900066e8 <_Z23getFont_calibri_20_4bppv+0x18>
    return calibri_20_4bpp;
}
900066e2:	4816      	ldr	r0, [pc, #88]	@ (9000673c <_Z23getFont_calibri_20_4bppv+0x6c>)
900066e4:	b00f      	add	sp, #60	@ 0x3c
900066e6:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont calibri_20_4bpp(glyphs_calibri_20_4bpp, 51, 22, 20, 0, 0, 4, 1, 0, 1, unicodes_calibri_20_4bpp, kerning_calibri_20_4bpp, 63, 0, 0, &calibri_contextualFormsTable);
900066e8:	4628      	mov	r0, r5
900066ea:	f026 fae9 	bl	9002ccc0 <__cxa_guard_acquire>
900066ee:	2800      	cmp	r0, #0
900066f0:	d0f7      	beq.n	900066e2 <_Z23getFont_calibri_20_4bppv+0x12>
900066f2:	4913      	ldr	r1, [pc, #76]	@ (90006740 <_Z23getFont_calibri_20_4bppv+0x70>)
900066f4:	223f      	movs	r2, #63	@ 0x3f
900066f6:	2301      	movs	r3, #1
900066f8:	9405      	str	r4, [sp, #20]
900066fa:	4810      	ldr	r0, [pc, #64]	@ (9000673c <_Z23getFont_calibri_20_4bppv+0x6c>)
900066fc:	9306      	str	r3, [sp, #24]
900066fe:	e9cd 410b 	strd	r4, r1, [sp, #44]	@ 0x2c
90006702:	e9cd 2409 	strd	r2, r4, [sp, #36]	@ 0x24
90006706:	490f      	ldr	r1, [pc, #60]	@ (90006744 <_Z23getFont_calibri_20_4bppv+0x74>)
90006708:	4a0f      	ldr	r2, [pc, #60]	@ (90006748 <_Z23getFont_calibri_20_4bppv+0x78>)
9000670a:	9108      	str	r1, [sp, #32]
9000670c:	2114      	movs	r1, #20
9000670e:	9207      	str	r2, [sp, #28]
90006710:	2204      	movs	r2, #4
90006712:	9100      	str	r1, [sp, #0]
90006714:	490d      	ldr	r1, [pc, #52]	@ (9000674c <_Z23getFont_calibri_20_4bppv+0x7c>)
90006716:	e9cd 2303 	strd	r2, r3, [sp, #12]
9000671a:	e9cd 4401 	strd	r4, r4, [sp, #4]
9000671e:	2316      	movs	r3, #22
90006720:	2233      	movs	r2, #51	@ 0x33
90006722:	f7fe fd57 	bl	900051d4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90006726:	480a      	ldr	r0, [pc, #40]	@ (90006750 <_Z23getFont_calibri_20_4bppv+0x80>)
90006728:	f026 fe5c 	bl	9002d3e4 <atexit>
9000672c:	4628      	mov	r0, r5
9000672e:	f026 fad3 	bl	9002ccd8 <__cxa_guard_release>
}
90006732:	4802      	ldr	r0, [pc, #8]	@ (9000673c <_Z23getFont_calibri_20_4bppv+0x6c>)
90006734:	b00f      	add	sp, #60	@ 0x3c
90006736:	bd30      	pop	{r4, r5, pc}
90006738:	24007a84 	.word	0x24007a84
9000673c:	24007a88 	.word	0x24007a88
90006740:	9003105c 	.word	0x9003105c
90006744:	90032720 	.word	0x90032720
90006748:	90032860 	.word	0x90032860
9000674c:	90204ebc 	.word	0x90204ebc
90006750:	900066cd 	.word	0x900066cd

90006754 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90006754:	4770      	bx	lr
90006756:	bf00      	nop

90006758 <_Z23getFont_verdana_10_4bppv>:
{
90006758:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
9000675a:	4d18      	ldr	r5, [pc, #96]	@ (900067bc <_Z23getFont_verdana_10_4bppv+0x64>)
{
9000675c:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
9000675e:	682c      	ldr	r4, [r5, #0]
90006760:	f3bf 8f5b 	dmb	ish
90006764:	f014 0401 	ands.w	r4, r4, #1
90006768:	d002      	beq.n	90006770 <_Z23getFont_verdana_10_4bppv+0x18>
    return verdana_10_4bpp;
}
9000676a:	4815      	ldr	r0, [pc, #84]	@ (900067c0 <_Z23getFont_verdana_10_4bppv+0x68>)
9000676c:	b00f      	add	sp, #60	@ 0x3c
9000676e:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90006770:	4628      	mov	r0, r5
90006772:	f026 faa5 	bl	9002ccc0 <__cxa_guard_acquire>
90006776:	2800      	cmp	r0, #0
90006778:	d0f7      	beq.n	9000676a <_Z23getFont_verdana_10_4bppv+0x12>
9000677a:	213f      	movs	r1, #63	@ 0x3f
9000677c:	2201      	movs	r2, #1
9000677e:	230a      	movs	r3, #10
90006780:	2004      	movs	r0, #4
90006782:	9204      	str	r2, [sp, #16]
90006784:	9300      	str	r3, [sp, #0]
90006786:	9003      	str	r0, [sp, #12]
90006788:	480d      	ldr	r0, [pc, #52]	@ (900067c0 <_Z23getFont_verdana_10_4bppv+0x68>)
9000678a:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
9000678e:	490d      	ldr	r1, [pc, #52]	@ (900067c4 <_Z23getFont_verdana_10_4bppv+0x6c>)
90006790:	9108      	str	r1, [sp, #32]
90006792:	490d      	ldr	r1, [pc, #52]	@ (900067c8 <_Z23getFont_verdana_10_4bppv+0x70>)
90006794:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90006798:	9107      	str	r1, [sp, #28]
9000679a:	490c      	ldr	r1, [pc, #48]	@ (900067cc <_Z23getFont_verdana_10_4bppv+0x74>)
9000679c:	e9cd 4405 	strd	r4, r4, [sp, #20]
900067a0:	e9cd 4401 	strd	r4, r4, [sp, #4]
900067a4:	f7fe fd16 	bl	900051d4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
900067a8:	4809      	ldr	r0, [pc, #36]	@ (900067d0 <_Z23getFont_verdana_10_4bppv+0x78>)
900067aa:	f026 fe1b 	bl	9002d3e4 <atexit>
900067ae:	4628      	mov	r0, r5
900067b0:	f026 fa92 	bl	9002ccd8 <__cxa_guard_release>
}
900067b4:	4802      	ldr	r0, [pc, #8]	@ (900067c0 <_Z23getFont_verdana_10_4bppv+0x68>)
900067b6:	b00f      	add	sp, #60	@ 0x3c
900067b8:	bd30      	pop	{r4, r5, pc}
900067ba:	bf00      	nop
900067bc:	24007ab4 	.word	0x24007ab4
900067c0:	24007ab8 	.word	0x24007ab8
900067c4:	9003275c 	.word	0x9003275c
900067c8:	90032864 	.word	0x90032864
900067cc:	90205188 	.word	0x90205188
900067d0:	90006755 	.word	0x90006755

900067d4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_15_4bpp();

touchgfx::GeneratedFont& getFont_verdana_15_4bpp()
{
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 14, 15, 15, 0, 0, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
900067d4:	4770      	bx	lr
900067d6:	bf00      	nop

900067d8 <_Z23getFont_verdana_15_4bppv>:
{
900067d8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 14, 15, 15, 0, 0, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
900067da:	4d18      	ldr	r5, [pc, #96]	@ (9000683c <_Z23getFont_verdana_15_4bppv+0x64>)
{
900067dc:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 14, 15, 15, 0, 0, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
900067de:	682c      	ldr	r4, [r5, #0]
900067e0:	f3bf 8f5b 	dmb	ish
900067e4:	f014 0401 	ands.w	r4, r4, #1
900067e8:	d002      	beq.n	900067f0 <_Z23getFont_verdana_15_4bppv+0x18>
    return verdana_15_4bpp;
}
900067ea:	4815      	ldr	r0, [pc, #84]	@ (90006840 <_Z23getFont_verdana_15_4bppv+0x68>)
900067ec:	b00f      	add	sp, #60	@ 0x3c
900067ee:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 14, 15, 15, 0, 0, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
900067f0:	4628      	mov	r0, r5
900067f2:	f026 fa65 	bl	9002ccc0 <__cxa_guard_acquire>
900067f6:	2800      	cmp	r0, #0
900067f8:	d0f7      	beq.n	900067ea <_Z23getFont_verdana_15_4bppv+0x12>
900067fa:	213f      	movs	r1, #63	@ 0x3f
900067fc:	2201      	movs	r2, #1
900067fe:	230f      	movs	r3, #15
90006800:	480f      	ldr	r0, [pc, #60]	@ (90006840 <_Z23getFont_verdana_15_4bppv+0x68>)
90006802:	9204      	str	r2, [sp, #16]
90006804:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
90006808:	490e      	ldr	r1, [pc, #56]	@ (90006844 <_Z23getFont_verdana_15_4bppv+0x6c>)
9000680a:	e9cd 4205 	strd	r4, r2, [sp, #20]
9000680e:	9108      	str	r1, [sp, #32]
90006810:	2204      	movs	r2, #4
90006812:	490d      	ldr	r1, [pc, #52]	@ (90006848 <_Z23getFont_verdana_15_4bppv+0x70>)
90006814:	e9cd 3400 	strd	r3, r4, [sp]
90006818:	9107      	str	r1, [sp, #28]
9000681a:	490c      	ldr	r1, [pc, #48]	@ (9000684c <_Z23getFont_verdana_15_4bppv+0x74>)
9000681c:	e9cd 4202 	strd	r4, r2, [sp, #8]
90006820:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90006824:	220e      	movs	r2, #14
90006826:	f7fe fcd5 	bl	900051d4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
9000682a:	4809      	ldr	r0, [pc, #36]	@ (90006850 <_Z23getFont_verdana_15_4bppv+0x78>)
9000682c:	f026 fdda 	bl	9002d3e4 <atexit>
90006830:	4628      	mov	r0, r5
90006832:	f026 fa51 	bl	9002ccd8 <__cxa_guard_release>
}
90006836:	4802      	ldr	r0, [pc, #8]	@ (90006840 <_Z23getFont_verdana_15_4bppv+0x68>)
90006838:	b00f      	add	sp, #60	@ 0x3c
9000683a:	bd30      	pop	{r4, r5, pc}
9000683c:	24007ae4 	.word	0x24007ae4
90006840:	24007ae8 	.word	0x24007ae8
90006844:	90032760 	.word	0x90032760
90006848:	90032868 	.word	0x90032868
9000684c:	90205198 	.word	0x90205198
90006850:	900067d5 	.word	0x900067d5

90006854 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 46, 48, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90006854:	4770      	bx	lr
90006856:	bf00      	nop

90006858 <_Z23getFont_verdana_40_4bppv>:
{
90006858:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 46, 48, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
9000685a:	4d19      	ldr	r5, [pc, #100]	@ (900068c0 <_Z23getFont_verdana_40_4bppv+0x68>)
{
9000685c:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 46, 48, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
9000685e:	682c      	ldr	r4, [r5, #0]
90006860:	f3bf 8f5b 	dmb	ish
90006864:	f014 0401 	ands.w	r4, r4, #1
90006868:	d002      	beq.n	90006870 <_Z23getFont_verdana_40_4bppv+0x18>
    return verdana_40_4bpp;
}
9000686a:	4816      	ldr	r0, [pc, #88]	@ (900068c4 <_Z23getFont_verdana_40_4bppv+0x6c>)
9000686c:	b00f      	add	sp, #60	@ 0x3c
9000686e:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 46, 48, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90006870:	4628      	mov	r0, r5
90006872:	f026 fa25 	bl	9002ccc0 <__cxa_guard_acquire>
90006876:	2800      	cmp	r0, #0
90006878:	d0f7      	beq.n	9000686a <_Z23getFont_verdana_40_4bppv+0x12>
9000687a:	213f      	movs	r1, #63	@ 0x3f
9000687c:	4a12      	ldr	r2, [pc, #72]	@ (900068c8 <_Z23getFont_verdana_40_4bppv+0x70>)
9000687e:	2301      	movs	r3, #1
90006880:	2028      	movs	r0, #40	@ 0x28
90006882:	9208      	str	r2, [sp, #32]
90006884:	2204      	movs	r2, #4
90006886:	9304      	str	r3, [sp, #16]
90006888:	9000      	str	r0, [sp, #0]
9000688a:	9401      	str	r4, [sp, #4]
9000688c:	480d      	ldr	r0, [pc, #52]	@ (900068c4 <_Z23getFont_verdana_40_4bppv+0x6c>)
9000688e:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
90006892:	490e      	ldr	r1, [pc, #56]	@ (900068cc <_Z23getFont_verdana_40_4bppv+0x74>)
90006894:	e9cd 4305 	strd	r4, r3, [sp, #20]
90006898:	9107      	str	r1, [sp, #28]
9000689a:	2330      	movs	r3, #48	@ 0x30
9000689c:	490c      	ldr	r1, [pc, #48]	@ (900068d0 <_Z23getFont_verdana_40_4bppv+0x78>)
9000689e:	e9cd 4202 	strd	r4, r2, [sp, #8]
900068a2:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
900068a6:	222e      	movs	r2, #46	@ 0x2e
900068a8:	f7fe fc94 	bl	900051d4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
900068ac:	4809      	ldr	r0, [pc, #36]	@ (900068d4 <_Z23getFont_verdana_40_4bppv+0x7c>)
900068ae:	f026 fd99 	bl	9002d3e4 <atexit>
900068b2:	4628      	mov	r0, r5
900068b4:	f026 fa10 	bl	9002ccd8 <__cxa_guard_release>
}
900068b8:	4802      	ldr	r0, [pc, #8]	@ (900068c4 <_Z23getFont_verdana_40_4bppv+0x6c>)
900068ba:	b00f      	add	sp, #60	@ 0x3c
900068bc:	bd30      	pop	{r4, r5, pc}
900068be:	bf00      	nop
900068c0:	24007b14 	.word	0x24007b14
900068c4:	24007b18 	.word	0x24007b18
900068c8:	90032764 	.word	0x90032764
900068cc:	9003286c 	.word	0x9003286c
900068d0:	9020525c 	.word	0x9020525c
900068d4:	90006855 	.word	0x90006855

900068d8 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
900068d8:	2000      	movs	r0, #0
900068da:	4770      	bx	lr

900068dc <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
900068dc:	2000      	movs	r0, #0
900068de:	4770      	bx	lr

900068e0 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
900068e0:	b40e      	push	{r1, r2, r3}
900068e2:	b500      	push	{lr}
900068e4:	b082      	sub	sp, #8
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
900068e6:	2100      	movs	r1, #0
{
900068e8:	ab03      	add	r3, sp, #12
900068ea:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
900068ee:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
900068f0:	f013 fcac 	bl	9001a24c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
900068f4:	b002      	add	sp, #8
900068f6:	f85d eb04 	ldr.w	lr, [sp], #4
900068fa:	b003      	add	sp, #12
900068fc:	4770      	bx	lr
900068fe:	bf00      	nop

90006900 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
90006900:	b40c      	push	{r2, r3}
90006902:	b500      	push	{lr}
90006904:	b083      	sub	sp, #12
90006906:	ab04      	add	r3, sp, #16
90006908:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
9000690c:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
9000690e:	f013 fc9d 	bl	9001a24c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
90006912:	b003      	add	sp, #12
90006914:	f85d eb04 	ldr.w	lr, [sp], #4
90006918:	b002      	add	sp, #8
9000691a:	4770      	bx	lr

9000691c <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
9000691c:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
9000691e:	b510      	push	{r4, lr}
90006920:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
90006922:	b133      	cbz	r3, 90006932 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
90006924:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
90006926:	b39b      	cbz	r3, 90006990 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>
            return buffer[pos];
90006928:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
9000692a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9000692e:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
90006930:	b923      	cbnz	r3, 9000693c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
90006932:	4620      	mov	r0, r4
}
90006934:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
90006938:	f015 ba68 	b.w	9001be0c <_ZN8touchgfx12TextProvider11getNextCharEv>
        substituteGlyphs();
9000693c:	f015 fb64 	bl	9001c008 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
90006940:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90006942:	2b01      	cmp	r3, #1
90006944:	d92a      	bls.n	9000699c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>
            const uint16_t index = pos + offset;
90006946:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90006948:	1c53      	adds	r3, r2, #1
9000694a:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
9000694c:	2b09      	cmp	r3, #9
9000694e:	d812      	bhi.n	90006976 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x5a>
90006950:	eb04 0143 	add.w	r1, r4, r3, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
90006954:	f640 103f 	movw	r0, #2367	@ 0x93f
90006958:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
9000695a:	4281      	cmp	r1, r0
9000695c:	d1e9      	bne.n	90006932 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
9000695e:	eb04 0142 	add.w	r1, r4, r2, lsl #1
90006962:	0052      	lsls	r2, r2, #1
90006964:	8c48      	ldrh	r0, [r1, #34]	@ 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
90006966:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            buffer[pos] = newChar;
9000696a:	4422      	add	r2, r4
9000696c:	f640 113f 	movw	r1, #2367	@ 0x93f
            buffer[index < size ? index : 0] = newChar;
90006970:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
90006972:	8451      	strh	r1, [r2, #34]	@ 0x22
        }
90006974:	e7dd      	b.n	90006932 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[index < size ? index : index - size];
90006976:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9000697a:	f640 113f 	movw	r1, #2367	@ 0x93f
9000697e:	89db      	ldrh	r3, [r3, #14]
90006980:	428b      	cmp	r3, r1
90006982:	d1d6      	bne.n	90006932 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90006984:	eb04 0142 	add.w	r1, r4, r2, lsl #1
90006988:	2300      	movs	r3, #0
9000698a:	0052      	lsls	r2, r2, #1
9000698c:	8c48      	ldrh	r0, [r1, #34]	@ 0x22
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
9000698e:	e7ea      	b.n	90006966 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x4a>
            assert(used > 0);
90006990:	4b05      	ldr	r3, [pc, #20]	@ (900069a8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x8c>)
90006992:	21c5      	movs	r1, #197	@ 0xc5
90006994:	4a05      	ldr	r2, [pc, #20]	@ (900069ac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x90>)
90006996:	4806      	ldr	r0, [pc, #24]	@ (900069b0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90006998:	f026 fd06 	bl	9002d3a8 <__assert_func>
            assert(offset < used);
9000699c:	4b05      	ldr	r3, [pc, #20]	@ (900069b4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x98>)
9000699e:	21cb      	movs	r1, #203	@ 0xcb
900069a0:	4a05      	ldr	r2, [pc, #20]	@ (900069b8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x9c>)
900069a2:	4803      	ldr	r0, [pc, #12]	@ (900069b0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
900069a4:	f026 fd00 	bl	9002d3a8 <__assert_func>
900069a8:	9003011c 	.word	0x9003011c
900069ac:	90030128 	.word	0x90030128
900069b0:	900301d4 	.word	0x900301d4
900069b4:	90030220 	.word	0x90030220
900069b8:	90030230 	.word	0x90030230

900069bc <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
900069bc:	f015 b9ef 	b.w	9001bd9e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

900069c0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
900069c0:	b510      	push	{r4, lr}
900069c2:	b086      	sub	sp, #24
900069c4:	f10d 0c08 	add.w	ip, sp, #8
    va_list pArg;
    va_start(pArg, format);
900069c8:	ac0a      	add	r4, sp, #40	@ 0x28
{
900069ca:	e88c 0006 	stmia.w	ip, {r1, r2}
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
900069ce:	461a      	mov	r2, r3
900069d0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900069d2:	4661      	mov	r1, ip
900069d4:	9401      	str	r4, [sp, #4]
900069d6:	9300      	str	r3, [sp, #0]
900069d8:	9b08      	ldr	r3, [sp, #32]
    va_start(pArg, format);
900069da:	9405      	str	r4, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
900069dc:	f011 ff00 	bl	900187e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
900069e0:	b006      	add	sp, #24
900069e2:	bd10      	pop	{r4, pc}

900069e4 <_ZN8touchgfx5Texts11setLanguageEt>:
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
900069e4:	b9e0      	cbnz	r0, 90006a20 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
{
900069e6:	b538      	push	{r3, r4, r5, lr}
    {
        if (languagesArray[id] != 0)
900069e8:	4b13      	ldr	r3, [pc, #76]	@ (90006a38 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
900069ea:	681b      	ldr	r3, [r3, #0]
900069ec:	b1cb      	cbz	r3, 90006a22 <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900069ee:	4c13      	ldr	r4, [pc, #76]	@ (90006a3c <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900069f0:	4813      	ldr	r0, [pc, #76]	@ (90006a40 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
900069f2:	e9d3 1200 	ldrd	r1, r2, [r3]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900069f6:	4419      	add	r1, r3
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900069f8:	441a      	add	r2, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900069fa:	6021      	str	r1, [r4, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
900069fc:	6899      	ldr	r1, [r3, #8]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900069fe:	6002      	str	r2, [r0, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
90006a00:	185c      	adds	r4, r3, r1
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
90006a02:	4b10      	ldr	r3, [pc, #64]	@ (90006a44 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
90006a04:	2200      	movs	r2, #0
90006a06:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
90006a08:	f000 f83a 	bl	90006a80 <_ZN17TypedTextDatabase8getFontsEv>
90006a0c:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
90006a0e:	f000 f835 	bl	90006a7c <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
90006a12:	4b0d      	ldr	r3, [pc, #52]	@ (90006a48 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
        fonts = f;
90006a14:	4a0d      	ldr	r2, [pc, #52]	@ (90006a4c <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
        typedTexts = data;
90006a16:	601c      	str	r4, [r3, #0]
        numberOfTypedTexts = n;
90006a18:	4b0d      	ldr	r3, [pc, #52]	@ (90006a50 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
        fonts = f;
90006a1a:	6015      	str	r5, [r2, #0]
        numberOfTypedTexts = n;
90006a1c:	8018      	strh	r0, [r3, #0]
    }
}
90006a1e:	bd38      	pop	{r3, r4, r5, pc}
90006a20:	4770      	bx	lr
            currentLanguageTypedText = typedTextDatabaseArray[id];
90006a22:	4c0c      	ldr	r4, [pc, #48]	@ (90006a54 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
            currentLanguagePtr = texts_all_languages;
90006a24:	4905      	ldr	r1, [pc, #20]	@ (90006a3c <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageTypedText = typedTextDatabaseArray[id];
90006a26:	6824      	ldr	r4, [r4, #0]
            currentLanguagePtr = texts_all_languages;
90006a28:	480b      	ldr	r0, [pc, #44]	@ (90006a58 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
            currentLanguageIndices = staticLanguageIndices[id];
90006a2a:	4b05      	ldr	r3, [pc, #20]	@ (90006a40 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90006a2c:	4a0b      	ldr	r2, [pc, #44]	@ (90006a5c <_ZN8touchgfx5Texts11setLanguageEt+0x78>)
            currentLanguagePtr = texts_all_languages;
90006a2e:	6008      	str	r0, [r1, #0]
            currentLanguageIndices = staticLanguageIndices[id];
90006a30:	601a      	str	r2, [r3, #0]
    if (currentLanguageTypedText)
90006a32:	2c00      	cmp	r4, #0
90006a34:	d1e5      	bne.n	90006a02 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
90006a36:	bd38      	pop	{r3, r4, r5, pc}
90006a38:	24007b50 	.word	0x24007b50
90006a3c:	24007b48 	.word	0x24007b48
90006a40:	24007b44 	.word	0x24007b44
90006a44:	24007b4c 	.word	0x24007b4c
90006a48:	24021c64 	.word	0x24021c64
90006a4c:	24021c6c 	.word	0x24021c6c
90006a50:	24021c68 	.word	0x24021c68
90006a54:	902055fc 	.word	0x902055fc
90006a58:	90205500 	.word	0x90205500
90006a5c:	902054e0 	.word	0x902054e0

90006a60 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
90006a60:	4a04      	ldr	r2, [pc, #16]	@ (90006a74 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
90006a62:	4b05      	ldr	r3, [pc, #20]	@ (90006a78 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
90006a64:	6812      	ldr	r2, [r2, #0]
90006a66:	681b      	ldr	r3, [r3, #0]
90006a68:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
}
90006a6c:	eb03 0040 	add.w	r0, r3, r0, lsl #1
90006a70:	4770      	bx	lr
90006a72:	bf00      	nop
90006a74:	24007b44 	.word	0x24007b44
90006a78:	24007b48 	.word	0x24007b48

90006a7c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
90006a7c:	2008      	movs	r0, #8
90006a7e:	4770      	bx	lr

90006a80 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
90006a80:	4800      	ldr	r0, [pc, #0]	@ (90006a84 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
90006a82:	4770      	bx	lr
90006a84:	24007b54 	.word	0x24007b54

90006a88 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 4:
        touchgfx_fonts[4] = &(getFont_arial_20_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
90006a88:	b510      	push	{r4, lr}
};
90006a8a:	4c08      	ldr	r4, [pc, #32]	@ (90006aac <_GLOBAL__sub_I_touchgfx_fonts+0x24>)
    &(getFont_calibri_20_4bpp()),
90006a8c:	f7ff fe20 	bl	900066d0 <_Z23getFont_calibri_20_4bppv>
};
90006a90:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
90006a92:	f7ff fee1 	bl	90006858 <_Z23getFont_verdana_40_4bppv>
};
90006a96:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
90006a98:	f7ff fe5e 	bl	90006758 <_Z23getFont_verdana_10_4bppv>
};
90006a9c:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_15_4bpp()),
90006a9e:	f7ff fe9b 	bl	900067d8 <_Z23getFont_verdana_15_4bppv>
};
90006aa2:	60e0      	str	r0, [r4, #12]
    &(getFont_arial_20_4bpp())
90006aa4:	f7ff fdd0 	bl	90006648 <_Z21getFont_arial_20_4bppv>
};
90006aa8:	6120      	str	r0, [r4, #16]
} // namespace TypedTextDatabase
90006aaa:	bd10      	pop	{r4, pc}
90006aac:	24007b54 	.word	0x24007b54

90006ab0 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
90006ab0:	b410      	push	{r4}
    pointArray = 0;
90006ab2:	2400      	movs	r4, #0
90006ab4:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
90006ab6:	600c      	str	r4, [r1, #0]
    commandArray = 0;
90006ab8:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
90006aba:	601c      	str	r4, [r3, #0]
}
90006abc:	f85d 4b04 	ldr.w	r4, [sp], #4
90006ac0:	4770      	bx	lr
90006ac2:	bf00      	nop

90006ac4 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
90006ac4:	4770      	bx	lr
90006ac6:	bf00      	nop

90006ac8 <_ZN19FrontendApplicationD0Ev>:
90006ac8:	b510      	push	{r4, lr}
90006aca:	4604      	mov	r4, r0
90006acc:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
90006ad0:	f026 f8f4 	bl	9002ccbc <_ZdlPvj>
90006ad4:	4620      	mov	r0, r4
90006ad6:	bd10      	pop	{r4, pc}

90006ad8 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
90006ad8:	b510      	push	{r4, lr}
90006ada:	4604      	mov	r4, r0
    {
        model.tick();
90006adc:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
90006ae0:	f000 f8ee 	bl	90006cc0 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
90006ae4:	4620      	mov	r0, r4
    }
90006ae6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
90006aea:	f012 bba3 	b.w	90019234 <_ZN8touchgfx11Application15handleTickEventEv>
90006aee:	bf00      	nop

90006af0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
90006af0:	b510      	push	{r4, lr}
90006af2:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
90006af4:	f7fe fab0 	bl	90005058 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
90006af8:	4b01      	ldr	r3, [pc, #4]	@ (90006b00 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
90006afa:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
90006afc:	6023      	str	r3, [r4, #0]
}
90006afe:	bd10      	pop	{r4, pc}
90006b00:	900314c0 	.word	0x900314c0

90006b04 <_ZN20Home_ScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Home_ScreenPresenter() {}
90006b04:	4770      	bx	lr
90006b06:	bf00      	nop

90006b08 <_ZThn4_N20Home_ScreenPresenterD1Ev>:
90006b08:	3804      	subs	r0, #4
90006b0a:	4770      	bx	lr

90006b0c <_ZN20Home_ScreenPresenter10deactivateEv>:
}

void Home_ScreenPresenter::activate()
{

}
90006b0c:	4770      	bx	lr
90006b0e:	bf00      	nop

90006b10 <_ZN20Home_ScreenPresenter13updateTextBoxEPKc>:
}

void Home_ScreenPresenter::updateTextBox(const char * newText){
	//does nothing no tc textbox in this screen
	//funciton is usless because there is no text box that needs updated on this screen
}
90006b10:	4770      	bx	lr
90006b12:	bf00      	nop

90006b14 <_ZN20Home_ScreenPresenterD0Ev>:
90006b14:	b510      	push	{r4, lr}
90006b16:	4604      	mov	r4, r0
90006b18:	2110      	movs	r1, #16
90006b1a:	f026 f8cf 	bl	9002ccbc <_ZdlPvj>
90006b1e:	4620      	mov	r0, r4
90006b20:	bd10      	pop	{r4, pc}
90006b22:	bf00      	nop

90006b24 <_ZThn4_N20Home_ScreenPresenterD0Ev>:
90006b24:	b510      	push	{r4, lr}
90006b26:	1f04      	subs	r4, r0, #4
90006b28:	2110      	movs	r1, #16
90006b2a:	4620      	mov	r0, r4
90006b2c:	f026 f8c6 	bl	9002ccbc <_ZdlPvj>
90006b30:	4620      	mov	r0, r4
90006b32:	bd10      	pop	{r4, pc}

90006b34 <_ZThn4_N20Home_ScreenPresenter13updateTextBoxEPKc>:

    void updateTextBox(const char * newText);
90006b34:	4770      	bx	lr
90006b36:	bf00      	nop

90006b38 <_ZN20Home_ScreenPresenterC1ER15Home_ScreenView>:
Home_ScreenPresenter::Home_ScreenPresenter(Home_ScreenView& v)
90006b38:	b410      	push	{r4}
    : view(v)
90006b3a:	4a05      	ldr	r2, [pc, #20]	@ (90006b50 <_ZN20Home_ScreenPresenterC1ER15Home_ScreenView+0x18>)
    ModelListener() : model(0) {}
90006b3c:	2400      	movs	r4, #0
90006b3e:	60c1      	str	r1, [r0, #12]
90006b40:	6084      	str	r4, [r0, #8]
90006b42:	f102 041c 	add.w	r4, r2, #28
90006b46:	6002      	str	r2, [r0, #0]
90006b48:	6044      	str	r4, [r0, #4]
}
90006b4a:	f85d 4b04 	ldr.w	r4, [sp], #4
90006b4e:	4770      	bx	lr
90006b50:	90031514 	.word	0x90031514

90006b54 <_ZN20Home_ScreenPresenter8TC_ReadyEv>:
	return model->TC_Status();
90006b54:	6880      	ldr	r0, [r0, #8]
90006b56:	f000 b8bd 	b.w	90006cd4 <_ZN5Model9TC_StatusEv>
90006b5a:	bf00      	nop

90006b5c <_ZN8touchgfx8CallbackI15Home_ScreenViewRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90006b5c:	4770      	bx	lr
90006b5e:	bf00      	nop

90006b60 <_ZN15Home_ScreenView14tearDownScreenEv>:
}

void Home_ScreenView::tearDownScreen()
{
    Home_ScreenViewBase::tearDownScreen();
}
90006b60:	4770      	bx	lr
90006b62:	bf00      	nop

90006b64 <_ZN8touchgfx8CallbackI15Home_ScreenViewRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
90006b64:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90006b66:	68c3      	ldr	r3, [r0, #12]
90006b68:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
90006b6c:	f013 0f01 	tst.w	r3, #1
90006b70:	eb04 0063 	add.w	r0, r4, r3, asr #1
90006b74:	d004      	beq.n	90006b80 <_ZN8touchgfx8CallbackI15Home_ScreenViewRKNS_23AbstractButtonContainerEvvE7executeES4_+0x1c>
90006b76:	ea4f 0c63 	mov.w	ip, r3, asr #1
90006b7a:	f854 300c 	ldr.w	r3, [r4, ip]
90006b7e:	589a      	ldr	r2, [r3, r2]
    }
90006b80:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90006b84:	4710      	bx	r2
90006b86:	bf00      	nop

90006b88 <_ZNK8touchgfx8CallbackI15Home_ScreenViewRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90006b88:	6843      	ldr	r3, [r0, #4]
90006b8a:	b13b      	cbz	r3, 90006b9c <_ZNK8touchgfx8CallbackI15Home_ScreenViewRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
90006b8c:	6883      	ldr	r3, [r0, #8]
90006b8e:	b10b      	cbz	r3, 90006b94 <_ZNK8touchgfx8CallbackI15Home_ScreenViewRKNS_23AbstractButtonContainerEvvE7isValidEv+0xc>
90006b90:	2001      	movs	r0, #1
    }
90006b92:	4770      	bx	lr
90006b94:	68c0      	ldr	r0, [r0, #12]
90006b96:	f000 0001 	and.w	r0, r0, #1
90006b9a:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90006b9c:	4618      	mov	r0, r3
90006b9e:	4770      	bx	lr

90006ba0 <_ZN8touchgfx8CallbackI15Home_ScreenViewRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90006ba0:	b510      	push	{r4, lr}
90006ba2:	4604      	mov	r4, r0
90006ba4:	2110      	movs	r1, #16
90006ba6:	f026 f889 	bl	9002ccbc <_ZdlPvj>
90006baa:	4620      	mov	r0, r4
90006bac:	bd10      	pop	{r4, pc}
90006bae:	bf00      	nop

90006bb0 <_ZN15Home_ScreenViewD1Ev>:

class Home_ScreenView : public Home_ScreenViewBase
{
public:
    Home_ScreenView();
    virtual ~Home_ScreenView() {}
90006bb0:	4b03      	ldr	r3, [pc, #12]	@ (90006bc0 <_ZN15Home_ScreenViewD1Ev+0x10>)
90006bb2:	b510      	push	{r4, lr}
90006bb4:	4604      	mov	r4, r0
90006bb6:	6003      	str	r3, [r0, #0]
90006bb8:	f7fe fb4e 	bl	90005258 <_ZN19Home_ScreenViewBaseD1Ev>
90006bbc:	4620      	mov	r0, r4
90006bbe:	bd10      	pop	{r4, pc}
90006bc0:	9003155c 	.word	0x9003155c

90006bc4 <_ZN15Home_ScreenViewD0Ev>:
90006bc4:	4b06      	ldr	r3, [pc, #24]	@ (90006be0 <_ZN15Home_ScreenViewD0Ev+0x1c>)
90006bc6:	b510      	push	{r4, lr}
90006bc8:	4604      	mov	r4, r0
90006bca:	6003      	str	r3, [r0, #0]
90006bcc:	f7fe fb44 	bl	90005258 <_ZN19Home_ScreenViewBaseD1Ev>
90006bd0:	f44f 6192 	mov.w	r1, #1168	@ 0x490
90006bd4:	4620      	mov	r0, r4
90006bd6:	f026 f871 	bl	9002ccbc <_ZdlPvj>
90006bda:	4620      	mov	r0, r4
90006bdc:	bd10      	pop	{r4, pc}
90006bde:	bf00      	nop
90006be0:	9003155c 	.word	0x9003155c

90006be4 <_ZN15Home_ScreenViewC1Ev>:
Home_ScreenView::Home_ScreenView()
90006be4:	b510      	push	{r4, lr}
90006be6:	4604      	mov	r4, r0
    : wr_TC_Button_Pressed(this, &Home_ScreenView::read_tc_button_pressed)
90006be8:	f7fe fcee 	bl	900055c8 <_ZN19Home_ScreenViewBaseC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
90006bec:	4a09      	ldr	r2, [pc, #36]	@ (90006c14 <_ZN15Home_ScreenViewC1Ev+0x30>)
90006bee:	2300      	movs	r3, #0
90006bf0:	4809      	ldr	r0, [pc, #36]	@ (90006c18 <_ZN15Home_ScreenViewC1Ev+0x34>)
90006bf2:	490a      	ldr	r1, [pc, #40]	@ (90006c1c <_ZN15Home_ScreenViewC1Ev+0x38>)
90006bf4:	f8c4 2478 	str.w	r2, [r4, #1144]	@ 0x478
90006bf8:	2296      	movs	r2, #150	@ 0x96
90006bfa:	6020      	str	r0, [r4, #0]
{}
90006bfc:	4620      	mov	r0, r4
90006bfe:	f8c4 447c 	str.w	r4, [r4, #1148]	@ 0x47c
90006c02:	f8c4 1480 	str.w	r1, [r4, #1152]	@ 0x480
90006c06:	f8c4 3484 	str.w	r3, [r4, #1156]	@ 0x484
    : wr_TC_Button_Pressed(this, &Home_ScreenView::read_tc_button_pressed)
90006c0a:	f884 3488 	strb.w	r3, [r4, #1160]	@ 0x488
90006c0e:	f8c4 248c 	str.w	r2, [r4, #1164]	@ 0x48c
{}
90006c12:	bd10      	pop	{r4, pc}
90006c14:	90031544 	.word	0x90031544
90006c18:	9003155c 	.word	0x9003155c
90006c1c:	90006c69 	.word	0x90006c69

90006c20 <_ZN15Home_ScreenView11setupScreenEv>:
{
90006c20:	b510      	push	{r4, lr}
90006c22:	4604      	mov	r4, r0
    Home_ScreenViewBase::setupScreen();
90006c24:	f7fe fb1a 	bl	9000525c <_ZN19Home_ScreenViewBase11setupScreenEv>
        visible = vis;
90006c28:	2201      	movs	r2, #1
    Read_TC_Start_button.setAction(wr_TC_Button_Pressed);
90006c2a:	f504 638f 	add.w	r3, r4, #1144	@ 0x478
90006c2e:	f884 2435 	strb.w	r2, [r4, #1077]	@ 0x435
90006c32:	f8c4 3260 	str.w	r3, [r4, #608]	@ 0x260
}
90006c36:	bd10      	pop	{r4, pc}

90006c38 <_ZN15Home_ScreenView15handleTickEventEv>:

void Home_ScreenView::handleTickEvent(){
	if (tick_count > 0 && error_msg_show){
90006c38:	f8d0 348c 	ldr.w	r3, [r0, #1164]	@ 0x48c
90006c3c:	2b00      	cmp	r3, #0
90006c3e:	dd09      	ble.n	90006c54 <_ZN15Home_ScreenView15handleTickEventEv+0x1c>
90006c40:	f890 2488 	ldrb.w	r2, [r0, #1160]	@ 0x488
void Home_ScreenView::handleTickEvent(){
90006c44:	b510      	push	{r4, lr}
90006c46:	4604      	mov	r4, r0
	if (tick_count > 0 && error_msg_show){
90006c48:	b11a      	cbz	r2, 90006c52 <_ZN15Home_ScreenView15handleTickEventEv+0x1a>
		tick_count --;
90006c4a:	3b01      	subs	r3, #1
90006c4c:	f8c0 348c 	str.w	r3, [r0, #1164]	@ 0x48c
		if (tick_count == 0){
90006c50:	b10b      	cbz	r3, 90006c56 <_ZN15Home_ScreenView15handleTickEventEv+0x1e>
			TC_not_loaded.setVisible(false);
			TC_not_loaded.invalidate();
			tick_count = 150;
		}
	}
}
90006c52:	bd10      	pop	{r4, pc}
90006c54:	4770      	bx	lr
90006c56:	f884 30e9 	strb.w	r3, [r4, #233]	@ 0xe9
			TC_not_loaded.invalidate();
90006c5a:	30c4      	adds	r0, #196	@ 0xc4
90006c5c:	f013 fc21 	bl	9001a4a2 <_ZNK8touchgfx8Drawable10invalidateEv>
			tick_count = 150;
90006c60:	2396      	movs	r3, #150	@ 0x96
90006c62:	f8c4 348c 	str.w	r3, [r4, #1164]	@ 0x48c
}
90006c66:	bd10      	pop	{r4, pc}

90006c68 <_ZN15Home_ScreenView22read_tc_button_pressedERKN8touchgfx23AbstractButtonContainerE>:

void Home_ScreenView::read_tc_button_pressed(const touchgfx::AbstractButtonContainer& src){
90006c68:	b538      	push	{r3, r4, r5, lr}
	if (&src == &Read_TC_Start_button){
90006c6a:	f500 730c 	add.w	r3, r0, #560	@ 0x230
90006c6e:	428b      	cmp	r3, r1
90006c70:	d000      	beq.n	90006c74 <_ZN15Home_ScreenView22read_tc_button_pressedERKN8touchgfx23AbstractButtonContainerE+0xc>
			TC_not_loaded.setVisible(true);
			TC_not_loaded.invalidate();
			error_msg_show = true;
		}
	}
}
90006c72:	bd38      	pop	{r3, r4, r5, pc}
		if (presenter->TC_Ready()){
90006c74:	4604      	mov	r4, r0
90006c76:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90006c78:	f7ff ff6c 	bl	90006b54 <_ZN20Home_ScreenPresenter8TC_ReadyEv>
90006c7c:	b158      	cbz	r0, 90006c96 <_ZN15Home_ScreenView22read_tc_button_pressedERKN8touchgfx23AbstractButtonContainerE+0x2e>
			tick_count = 150;
90006c7e:	2396      	movs	r3, #150	@ 0x96
			error_msg_show = false;
90006c80:	2200      	movs	r2, #0
			tick_count = 150;
90006c82:	f8c4 348c 	str.w	r3, [r4, #1164]	@ 0x48c
			error_msg_show = false;
90006c86:	f884 2488 	strb.w	r2, [r4, #1160]	@ 0x488
90006c8a:	f012 fa29 	bl	900190e0 <_ZN8touchgfx11Application11getInstanceEv>
}
90006c8e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
			application().gotoTC_ScreenScreenWipeTransitionEast();
90006c92:	f7fe ba53 	b.w	9000513c <_ZN23FrontendApplicationBase37gotoTC_ScreenScreenWipeTransitionEastEv>
90006c96:	2501      	movs	r5, #1
			TC_not_loaded.invalidate();
90006c98:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
90006c9c:	f884 50e9 	strb.w	r5, [r4, #233]	@ 0xe9
90006ca0:	f013 fbff 	bl	9001a4a2 <_ZNK8touchgfx8Drawable10invalidateEv>
			error_msg_show = true;
90006ca4:	f884 5488 	strb.w	r5, [r4, #1160]	@ 0x488
}
90006ca8:	bd38      	pop	{r3, r4, r5, pc}
90006caa:	bf00      	nop

90006cac <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>
#include "../../STM32CubeIDE/Application/User/TouchGFX/App/TC_Bridge.hpp"

Model::Model() : modelListener(0)
90006cac:	2300      	movs	r3, #0
90006cae:	b510      	push	{r4, lr}
90006cb0:	4604      	mov	r4, r0
90006cb2:	6003      	str	r3, [r0, #0]
90006cb4:	7203      	strb	r3, [r0, #8]
{
	setModelInstance(this);
90006cb6:	f7f9 ff39 	bl	90000b2c <_Z16setModelInstanceP5Model>
}
90006cba:	4620      	mov	r0, r4
90006cbc:	bd10      	pop	{r4, pc}
90006cbe:	bf00      	nop

90006cc0 <_ZN5Model4tickEv>:

void Model::tick()
{

}
90006cc0:	4770      	bx	lr
90006cc2:	bf00      	nop

90006cc4 <_ZN5Model6TC_SetEPKc>:

void Model::TC_Set(const char* str)
{
	TC_Ready = (TC_Ready == true) ? false : true;
90006cc4:	7a03      	ldrb	r3, [r0, #8]
	this->data = str;
90006cc6:	6041      	str	r1, [r0, #4]
	TC_Ready = (TC_Ready == true) ? false : true;
90006cc8:	f083 0301 	eor.w	r3, r3, #1
90006ccc:	7203      	strb	r3, [r0, #8]
}
90006cce:	4770      	bx	lr

90006cd0 <_ZN5Model8reset_TCEv>:

void Model::reset_TC(){
	Logic_Reset_TC();
90006cd0:	f7f9 bf3c 	b.w	90000b4c <Logic_Reset_TC>

90006cd4 <_ZN5Model9TC_StatusEv>:
}

bool Model::TC_Status(){
	return TC_Ready;
}
90006cd4:	7a00      	ldrb	r0, [r0, #8]
90006cd6:	4770      	bx	lr

90006cd8 <_ZN5Model7TC_GiveEv>:
//*************************************Need to add error message if no trouble code
//*************************************given when read tc button pressed.
//Give function will update tc_textBox with correct trouble code.
void Model::TC_Give(){
90006cd8:	4603      	mov	r3, r0
	if (modelListener != nullptr && data != nullptr){
90006cda:	6800      	ldr	r0, [r0, #0]
90006cdc:	b120      	cbz	r0, 90006ce8 <_ZN5Model7TC_GiveEv+0x10>
90006cde:	6859      	ldr	r1, [r3, #4]
90006ce0:	b111      	cbz	r1, 90006ce8 <_ZN5Model7TC_GiveEv+0x10>
		modelListener->updateTextBox(data);
90006ce2:	6803      	ldr	r3, [r0, #0]
90006ce4:	689b      	ldr	r3, [r3, #8]
90006ce6:	4718      	bx	r3
	}
}
90006ce8:	4770      	bx	lr
90006cea:	bf00      	nop

90006cec <_ZN18TC_ScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~TC_ScreenPresenter() {}
90006cec:	4770      	bx	lr
90006cee:	bf00      	nop

90006cf0 <_ZThn4_N18TC_ScreenPresenterD1Ev>:
90006cf0:	3804      	subs	r0, #4
90006cf2:	4770      	bx	lr

90006cf4 <_ZN18TC_ScreenPresenter10deactivateEv>:
}

void TC_ScreenPresenter::deactivate()
{

}
90006cf4:	4770      	bx	lr
90006cf6:	bf00      	nop

90006cf8 <_ZN18TC_ScreenPresenterD0Ev>:
90006cf8:	b510      	push	{r4, lr}
90006cfa:	4604      	mov	r4, r0
90006cfc:	2110      	movs	r1, #16
90006cfe:	f025 ffdd 	bl	9002ccbc <_ZdlPvj>
90006d02:	4620      	mov	r0, r4
90006d04:	bd10      	pop	{r4, pc}
90006d06:	bf00      	nop

90006d08 <_ZThn4_N18TC_ScreenPresenterD0Ev>:
90006d08:	b510      	push	{r4, lr}
90006d0a:	1f04      	subs	r4, r0, #4
90006d0c:	2110      	movs	r1, #16
90006d0e:	4620      	mov	r0, r4
90006d10:	f025 ffd4 	bl	9002ccbc <_ZdlPvj>
90006d14:	4620      	mov	r0, r4
90006d16:	bd10      	pop	{r4, pc}

90006d18 <_ZN18TC_ScreenPresenter8activateEv>:
	model->TC_Give();
90006d18:	6880      	ldr	r0, [r0, #8]
90006d1a:	f7ff bfdd 	b.w	90006cd8 <_ZN5Model7TC_GiveEv>
90006d1e:	bf00      	nop

90006d20 <_ZN18TC_ScreenPresenter13updateTextBoxEPKc>:
void TC_ScreenPresenter::reset_TC(){
	model->reset_TC();
}

void TC_ScreenPresenter::updateTextBox(const char * newText) {
	view.bufferUpdateTCTextBox(newText);
90006d20:	68c0      	ldr	r0, [r0, #12]
90006d22:	f000 b881 	b.w	90006e28 <_ZN13TC_ScreenView21bufferUpdateTCTextBoxEPKc>
90006d26:	bf00      	nop

90006d28 <_ZThn4_N18TC_ScreenPresenter13updateTextBoxEPKc>:

    void reset_TC();
    void updateTextBox(const char * newText) override;
90006d28:	6880      	ldr	r0, [r0, #8]
90006d2a:	f000 b87d 	b.w	90006e28 <_ZN13TC_ScreenView21bufferUpdateTCTextBoxEPKc>
90006d2e:	bf00      	nop

90006d30 <_ZN18TC_ScreenPresenterC1ER13TC_ScreenView>:
TC_ScreenPresenter::TC_ScreenPresenter(TC_ScreenView& v)
90006d30:	b410      	push	{r4}
    : view(v)
90006d32:	4a05      	ldr	r2, [pc, #20]	@ (90006d48 <_ZN18TC_ScreenPresenterC1ER13TC_ScreenView+0x18>)
90006d34:	2400      	movs	r4, #0
90006d36:	60c1      	str	r1, [r0, #12]
90006d38:	6084      	str	r4, [r0, #8]
90006d3a:	f102 041c 	add.w	r4, r2, #28
90006d3e:	6002      	str	r2, [r0, #0]
90006d40:	6044      	str	r4, [r0, #4]
}
90006d42:	f85d 4b04 	ldr.w	r4, [sp], #4
90006d46:	4770      	bx	lr
90006d48:	90031590 	.word	0x90031590

90006d4c <_ZN18TC_ScreenPresenter8reset_TCEv>:
	model->reset_TC();
90006d4c:	6880      	ldr	r0, [r0, #8]
90006d4e:	f7ff bfbf 	b.w	90006cd0 <_ZN5Model8reset_TCEv>
90006d52:	bf00      	nop

90006d54 <_ZN8touchgfx8CallbackI13TC_ScreenViewRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90006d54:	4770      	bx	lr
90006d56:	bf00      	nop

90006d58 <_ZN13TC_ScreenView14tearDownScreenEv>:
}

void TC_ScreenView::tearDownScreen()
{
    TC_ScreenViewBase::tearDownScreen();
}
90006d58:	4770      	bx	lr
90006d5a:	bf00      	nop

90006d5c <_ZN8touchgfx8CallbackI13TC_ScreenViewRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
90006d5c:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90006d5e:	68c3      	ldr	r3, [r0, #12]
90006d60:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
90006d64:	f013 0f01 	tst.w	r3, #1
90006d68:	eb04 0063 	add.w	r0, r4, r3, asr #1
90006d6c:	d004      	beq.n	90006d78 <_ZN8touchgfx8CallbackI13TC_ScreenViewRKNS_14AbstractButtonEvvE7executeES4_+0x1c>
90006d6e:	ea4f 0c63 	mov.w	ip, r3, asr #1
90006d72:	f854 300c 	ldr.w	r3, [r4, ip]
90006d76:	589a      	ldr	r2, [r3, r2]
    }
90006d78:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90006d7c:	4710      	bx	r2
90006d7e:	bf00      	nop

90006d80 <_ZNK8touchgfx8CallbackI13TC_ScreenViewRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90006d80:	6843      	ldr	r3, [r0, #4]
90006d82:	b13b      	cbz	r3, 90006d94 <_ZNK8touchgfx8CallbackI13TC_ScreenViewRKNS_14AbstractButtonEvvE7isValidEv+0x14>
90006d84:	6883      	ldr	r3, [r0, #8]
90006d86:	b10b      	cbz	r3, 90006d8c <_ZNK8touchgfx8CallbackI13TC_ScreenViewRKNS_14AbstractButtonEvvE7isValidEv+0xc>
90006d88:	2001      	movs	r0, #1
    }
90006d8a:	4770      	bx	lr
90006d8c:	68c0      	ldr	r0, [r0, #12]
90006d8e:	f000 0001 	and.w	r0, r0, #1
90006d92:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90006d94:	4618      	mov	r0, r3
90006d96:	4770      	bx	lr

90006d98 <_ZN8touchgfx8CallbackI13TC_ScreenViewRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90006d98:	b510      	push	{r4, lr}
90006d9a:	4604      	mov	r4, r0
90006d9c:	2110      	movs	r1, #16
90006d9e:	f025 ff8d 	bl	9002ccbc <_ZdlPvj>
90006da2:	4620      	mov	r0, r4
90006da4:	bd10      	pop	{r4, pc}
90006da6:	bf00      	nop

90006da8 <_ZN13TC_ScreenViewD1Ev>:

class TC_ScreenView : public TC_ScreenViewBase
{
public:
    TC_ScreenView();
    virtual ~TC_ScreenView() {}
90006da8:	4b03      	ldr	r3, [pc, #12]	@ (90006db8 <_ZN13TC_ScreenViewD1Ev+0x10>)
90006daa:	b510      	push	{r4, lr}
90006dac:	4604      	mov	r4, r0
90006dae:	6003      	str	r3, [r0, #0]
90006db0:	f7ff f93a 	bl	90006028 <_ZN17TC_ScreenViewBaseD1Ev>
90006db4:	4620      	mov	r0, r4
90006db6:	bd10      	pop	{r4, pc}
90006db8:	900315d8 	.word	0x900315d8

90006dbc <_ZN13TC_ScreenViewD0Ev>:
90006dbc:	4b06      	ldr	r3, [pc, #24]	@ (90006dd8 <_ZN13TC_ScreenViewD0Ev+0x1c>)
90006dbe:	b510      	push	{r4, lr}
90006dc0:	4604      	mov	r4, r0
90006dc2:	6003      	str	r3, [r0, #0]
90006dc4:	f7ff f930 	bl	90006028 <_ZN17TC_ScreenViewBaseD1Ev>
90006dc8:	f44f 71ec 	mov.w	r1, #472	@ 0x1d8
90006dcc:	4620      	mov	r0, r4
90006dce:	f025 ff75 	bl	9002ccbc <_ZdlPvj>
90006dd2:	4620      	mov	r0, r4
90006dd4:	bd10      	pop	{r4, pc}
90006dd6:	bf00      	nop
90006dd8:	900315d8 	.word	0x900315d8

90006ddc <_ZN13TC_ScreenViewC1Ev>:
TC_ScreenView::TC_ScreenView()
90006ddc:	b510      	push	{r4, lr}
90006dde:	4604      	mov	r4, r0
    : myButtonCallback(this, &TC_ScreenView::onMyButtonPressed)
90006de0:	f7ff fa28 	bl	90006234 <_ZN17TC_ScreenViewBaseC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
90006de4:	4b07      	ldr	r3, [pc, #28]	@ (90006e04 <_ZN13TC_ScreenViewC1Ev+0x28>)
90006de6:	2200      	movs	r2, #0
90006de8:	4807      	ldr	r0, [pc, #28]	@ (90006e08 <_ZN13TC_ScreenViewC1Ev+0x2c>)
90006dea:	4908      	ldr	r1, [pc, #32]	@ (90006e0c <_ZN13TC_ScreenViewC1Ev+0x30>)
90006dec:	f8c4 31c4 	str.w	r3, [r4, #452]	@ 0x1c4
90006df0:	2301      	movs	r3, #1
90006df2:	6020      	str	r0, [r4, #0]
{}
90006df4:	4620      	mov	r0, r4
90006df6:	f8c4 21d0 	str.w	r2, [r4, #464]	@ 0x1d0
    : myButtonCallback(this, &TC_ScreenView::onMyButtonPressed)
90006dfa:	f884 31d4 	strb.w	r3, [r4, #468]	@ 0x1d4
90006dfe:	e9c4 4172 	strd	r4, r1, [r4, #456]	@ 0x1c8
{}
90006e02:	bd10      	pop	{r4, pc}
90006e04:	900315c0 	.word	0x900315c0
90006e08:	900315d8 	.word	0x900315d8
90006e0c:	90006e45 	.word	0x90006e45

90006e10 <_ZN13TC_ScreenView11setupScreenEv>:
{
90006e10:	b510      	push	{r4, lr}
90006e12:	4604      	mov	r4, r0
    TC_ScreenViewBase::setupScreen();
90006e14:	f7ff f90a 	bl	9000602c <_ZN17TC_ScreenViewBase11setupScreenEv>
    TC_Button.setAction(myButtonCallback);
90006e18:	f504 73e2 	add.w	r3, r4, #452	@ 0x1c4
90006e1c:	f8c4 30ec 	str.w	r3, [r4, #236]	@ 0xec
90006e20:	f8c4 3180 	str.w	r3, [r4, #384]	@ 0x180
}
90006e24:	bd10      	pop	{r4, pc}
90006e26:	bf00      	nop

90006e28 <_ZN13TC_ScreenView21bufferUpdateTCTextBoxEPKc>:

void TC_ScreenView::bufferUpdateTCTextBox(const char* newText)
{
90006e28:	b510      	push	{r4, lr}
90006e2a:	4604      	mov	r4, r0
	//Unicode::snprintf(TC_TextBoxBuffer, TC_TEXTBOX_SIZE, "%s",newText);
	Unicode::strncpy(TC_TextBoxBuffer, newText, TC_TEXTBOX_SIZE);
90006e2c:	220a      	movs	r2, #10
90006e2e:	f500 70d0 	add.w	r0, r0, #416	@ 0x1a0
90006e32:	f015 fb32 	bl	9001c49a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
    TC_TextBox.invalidate();
90006e36:	f504 7086 	add.w	r0, r4, #268	@ 0x10c
}
90006e3a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    TC_TextBox.invalidate();
90006e3e:	f013 bb30 	b.w	9001a4a2 <_ZNK8touchgfx8Drawable10invalidateEv>
90006e42:	bf00      	nop

90006e44 <_ZN13TC_ScreenView17onMyButtonPressedERKN8touchgfx14AbstractButtonE>:


void TC_ScreenView::onMyButtonPressed(const touchgfx::AbstractButton& source)
{
90006e44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (&source == &TC_Button)
90006e46:	f100 03c4 	add.w	r3, r0, #196	@ 0xc4
{
90006e4a:	4604      	mov	r4, r0
90006e4c:	460d      	mov	r5, r1
    if (&source == &TC_Button)
90006e4e:	4299      	cmp	r1, r3
90006e50:	d004      	beq.n	90006e5c <_ZN13TC_ScreenView17onMyButtonPressedERKN8touchgfx14AbstractButtonE+0x18>
90006e52:	f504 76ac 	add.w	r6, r4, #344	@ 0x158
			TC_Button_First_Press = false;
    	}else{
    		TC_TextBox.invalidate();
    	}
    }
    if (&source == &Erase_TC_Button){
90006e56:	42b5      	cmp	r5, r6
90006e58:	d016      	beq.n	90006e88 <_ZN13TC_ScreenView17onMyButtonPressedERKN8touchgfx14AbstractButtonE+0x44>
		//When Erase_TC_Button clicked change screen to Home_Screen
		//Go to Home_Screen with screen transition towards East
    	application().gotoHome_ScreenScreenWipeTransitionEast();
    	presenter->reset_TC();
     }
}
90006e5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    	if (TC_Button_First_Press){
90006e5c:	f890 31d4 	ldrb.w	r3, [r0, #468]	@ 0x1d4
90006e60:	b1db      	cbz	r3, 90006e9a <_ZN13TC_ScreenView17onMyButtonPressedERKN8touchgfx14AbstractButtonE+0x56>
90006e62:	2701      	movs	r7, #1
			Erase_TC_Button.invalidate();
90006e64:	f504 76ac 	add.w	r6, r4, #344	@ 0x158
			TC_TextBox.invalidate();
90006e68:	f500 7086 	add.w	r0, r0, #268	@ 0x10c
90006e6c:	f884 7131 	strb.w	r7, [r4, #305]	@ 0x131
90006e70:	f013 fb17 	bl	9001a4a2 <_ZNK8touchgfx8Drawable10invalidateEv>
			Erase_TC_Button.invalidate();
90006e74:	4630      	mov	r0, r6
90006e76:	f884 717d 	strb.w	r7, [r4, #381]	@ 0x17d
90006e7a:	f013 fb12 	bl	9001a4a2 <_ZNK8touchgfx8Drawable10invalidateEv>
			TC_Button_First_Press = false;
90006e7e:	2300      	movs	r3, #0
    if (&source == &Erase_TC_Button){
90006e80:	42b5      	cmp	r5, r6
			TC_Button_First_Press = false;
90006e82:	f884 31d4 	strb.w	r3, [r4, #468]	@ 0x1d4
    if (&source == &Erase_TC_Button){
90006e86:	d1e8      	bne.n	90006e5a <_ZN13TC_ScreenView17onMyButtonPressedERKN8touchgfx14AbstractButtonE+0x16>
90006e88:	f012 f92a 	bl	900190e0 <_ZN8touchgfx11Application11getInstanceEv>
    	application().gotoHome_ScreenScreenWipeTransitionEast();
90006e8c:	f7fe f948 	bl	90005120 <_ZN23FrontendApplicationBase39gotoHome_ScreenScreenWipeTransitionEastEv>
    	presenter->reset_TC();
90006e90:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
}
90006e92:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    	presenter->reset_TC();
90006e96:	f7ff bf59 	b.w	90006d4c <_ZN18TC_ScreenPresenter8reset_TCEv>
    		TC_TextBox.invalidate();
90006e9a:	f500 7086 	add.w	r0, r0, #268	@ 0x10c
90006e9e:	f013 fb00 	bl	9001a4a2 <_ZNK8touchgfx8Drawable10invalidateEv>
90006ea2:	e7d6      	b.n	90006e52 <_ZN13TC_ScreenView17onMyButtonPressedERKN8touchgfx14AbstractButtonE+0xe>

90006ea4 <FT5336_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
90006ea4:	f240 1c01 	movw	ip, #257	@ 0x101
  Capabilities->Gesture    = 1;
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90006ea8:	2005      	movs	r0, #5
  Capabilities->MaxXl      = FT5336_MAX_X_LENGTH;
90006eaa:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90006eae:	f44f 7388 	mov.w	r3, #272	@ 0x110
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90006eb2:	7088      	strb	r0, [r1, #2]

  return FT5336_OK;
}
90006eb4:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
90006eb6:	f8a1 c000 	strh.w	ip, [r1]
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90006eba:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
90006ebe:	4770      	bx	lr

90006ec0 <FT5336_DeInit>:
  */
int32_t FT5336_DeInit(FT5336_Object_t *pObj)
{
  int32_t ret = FT5336_OK;

  if(pObj->IsInitialized == 1U)
90006ec0:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
90006ec4:	2b01      	cmp	r3, #1
90006ec6:	d102      	bne.n	90006ece <FT5336_DeInit+0xe>
  {
    pObj->IsInitialized = 0;
90006ec8:	2300      	movs	r3, #0
90006eca:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
  }

  return ret;
}
90006ece:	2000      	movs	r0, #0
90006ed0:	4770      	bx	lr
90006ed2:	bf00      	nop

90006ed4 <FT5336_ITStatus>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return FT5336_OK as feature not applicable to FT5336 */
  return FT5336_OK;
}
90006ed4:	2000      	movs	r0, #0
90006ed6:	4770      	bx	lr

90006ed8 <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90006ed8:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90006eda:	6904      	ldr	r4, [r0, #16]
90006edc:	8900      	ldrh	r0, [r0, #8]
90006ede:	46a4      	mov	ip, r4
}
90006ee0:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90006ee4:	4760      	bx	ip
90006ee6:	bf00      	nop

90006ee8 <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90006ee8:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90006eea:	68c4      	ldr	r4, [r0, #12]
90006eec:	8900      	ldrh	r0, [r0, #8]
90006eee:	46a4      	mov	ip, r4
}
90006ef0:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90006ef4:	4760      	bx	ip
90006ef6:	bf00      	nop

90006ef8 <FT5336_GestureConfig>:
{
90006ef8:	b570      	push	{r4, r5, r6, lr}
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90006efa:	f100 0518 	add.w	r5, r0, #24
{
90006efe:	460e      	mov	r6, r1
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90006f00:	7809      	ldrb	r1, [r1, #0]
90006f02:	4628      	mov	r0, r5
90006f04:	f000 f96c 	bl	900071e0 <ft5336_radian_value>
90006f08:	4604      	mov	r4, r0
  ret += ft5336_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
90006f0a:	7931      	ldrb	r1, [r6, #4]
90006f0c:	4628      	mov	r0, r5
90006f0e:	f000 f975 	bl	900071fc <ft5336_offset_left_right>
90006f12:	4404      	add	r4, r0
  ret += ft5336_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
90006f14:	7a31      	ldrb	r1, [r6, #8]
90006f16:	4628      	mov	r0, r5
90006f18:	f000 f97e 	bl	90007218 <ft5336_offset_up_down>
90006f1c:	4404      	add	r4, r0
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90006f1e:	7b31      	ldrb	r1, [r6, #12]
90006f20:	4628      	mov	r0, r5
90006f22:	f000 f987 	bl	90007234 <ft5336_disatnce_left_right>
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90006f26:	7c31      	ldrb	r1, [r6, #16]
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90006f28:	4404      	add	r4, r0
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90006f2a:	4628      	mov	r0, r5
90006f2c:	f000 f990 	bl	90007250 <ft5336_distance_up_down>
90006f30:	4603      	mov	r3, r0
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90006f32:	7d31      	ldrb	r1, [r6, #20]
90006f34:	4628      	mov	r0, r5
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90006f36:	441c      	add	r4, r3
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90006f38:	f000 f998 	bl	9000726c <ft5336_distance_zoom>
  if(ret != FT5336_OK)
90006f3c:	42c4      	cmn	r4, r0
}
90006f3e:	bf14      	ite	ne
90006f40:	f04f 30ff 	movne.w	r0, #4294967295
90006f44:	2000      	moveq	r0, #0
90006f46:	bd70      	pop	{r4, r5, r6, pc}

90006f48 <FT5336_ReadID>:
  return ft5336_chip_id(&pObj->Ctx, (uint8_t *)Id);
90006f48:	3018      	adds	r0, #24
90006f4a:	f000 b9ab 	b.w	900072a4 <ft5336_chip_id>
90006f4e:	bf00      	nop

90006f50 <FT5336_GetState>:
{
90006f50:	b530      	push	{r4, r5, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006f52:	f100 0518 	add.w	r5, r0, #24
{
90006f56:	b083      	sub	sp, #12
90006f58:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006f5a:	4628      	mov	r0, r5
90006f5c:	a901      	add	r1, sp, #4
90006f5e:	f000 f931 	bl	900071c4 <ft5336_td_status>
90006f62:	bb10      	cbnz	r0, 90006faa <FT5336_GetState+0x5a>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90006f64:	f89d 3004 	ldrb.w	r3, [sp, #4]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90006f68:	2b05      	cmp	r3, #5
90006f6a:	bf94      	ite	ls
90006f6c:	4619      	movls	r1, r3
90006f6e:	2100      	movhi	r1, #0
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90006f70:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90006f72:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90006f74:	4628      	mov	r0, r5
90006f76:	2103      	movs	r1, #3
90006f78:	eb0d 0203 	add.w	r2, sp, r3
90006f7c:	f000 f910 	bl	900071a0 <ft5336_read_reg>
90006f80:	b9b0      	cbnz	r0, 90006fb0 <FT5336_GetState+0x60>
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006f82:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006f86:	f89d 3006 	ldrb.w	r3, [sp, #6]
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006f8a:	0212      	lsls	r2, r2, #8
90006f8c:	f89d 1005 	ldrb.w	r1, [sp, #5]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006f90:	021b      	lsls	r3, r3, #8
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006f92:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006f96:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006f9a:	430a      	orrs	r2, r1
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006f9c:	f89d 1007 	ldrb.w	r1, [sp, #7]
90006fa0:	430b      	orrs	r3, r1
90006fa2:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
90006fa6:	b003      	add	sp, #12
90006fa8:	bd30      	pop	{r4, r5, pc}
90006faa:	f04f 31ff 	mov.w	r1, #4294967295
90006fae:	e7df      	b.n	90006f70 <FT5336_GetState+0x20>
    ret = FT5336_ERROR;
90006fb0:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90006fb4:	e7f7      	b.n	90006fa6 <FT5336_GetState+0x56>
90006fb6:	bf00      	nop

90006fb8 <FT5336_GetMultiTouchState>:
{
90006fb8:	b570      	push	{r4, r5, r6, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006fba:	f100 0518 	add.w	r5, r0, #24
{
90006fbe:	b088      	sub	sp, #32
90006fc0:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006fc2:	4628      	mov	r0, r5
90006fc4:	4669      	mov	r1, sp
90006fc6:	f000 f8fd 	bl	900071c4 <ft5336_td_status>
90006fca:	2800      	cmp	r0, #0
90006fcc:	f040 809a 	bne.w	90007104 <FT5336_GetMultiTouchState+0x14c>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90006fd0:	f89d 3000 	ldrb.w	r3, [sp]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90006fd4:	2b05      	cmp	r3, #5
90006fd6:	bf94      	ite	ls
90006fd8:	4619      	movls	r1, r3
90006fda:	2100      	movhi	r1, #0
90006fdc:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90006fde:	231e      	movs	r3, #30
90006fe0:	466a      	mov	r2, sp
90006fe2:	4628      	mov	r0, r5
90006fe4:	2103      	movs	r1, #3
90006fe6:	f000 f8db 	bl	900071a0 <ft5336_read_reg>
90006fea:	2800      	cmp	r0, #0
90006fec:	f040 808d 	bne.w	9000710a <FT5336_GetMultiTouchState+0x152>
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006ff0:	f89d 1000 	ldrb.w	r1, [sp]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006ff4:	f89d 3002 	ldrb.w	r3, [sp, #2]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006ff8:	020a      	lsls	r2, r1, #8
90006ffa:	f89d 5001 	ldrb.w	r5, [sp, #1]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006ffe:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007000:	f89d c007 	ldrb.w	ip, [sp, #7]
90007004:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007008:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000700a:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000700e:	f89d 6011 	ldrb.w	r6, [sp, #17]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007012:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007014:	f89d 5003 	ldrb.w	r5, [sp, #3]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007018:	6421      	str	r1, [r4, #64]	@ 0x40
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000701a:	0936      	lsrs	r6, r6, #4
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000701c:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000701e:	6062      	str	r2, [r4, #4]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90007020:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007024:	61a3      	str	r3, [r4, #24]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007026:	f89d 3005 	ldrb.w	r3, [sp, #5]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000702a:	f89d 1006 	ldrb.w	r1, [sp, #6]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000702e:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90007030:	62e2      	str	r2, [r4, #44]	@ 0x2c
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007032:	f89d 200b 	ldrb.w	r2, [sp, #11]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007036:	020d      	lsls	r5, r1, #8
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007038:	6563      	str	r3, [r4, #84]	@ 0x54
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000703a:	0989      	lsrs	r1, r1, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000703c:	f89d 300c 	ldrb.w	r3, [sp, #12]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007040:	0912      	lsrs	r2, r2, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007042:	6461      	str	r1, [r4, #68]	@ 0x44
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007044:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90007048:	f89d 100a 	ldrb.w	r1, [sp, #10]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000704c:	65a2      	str	r2, [r4, #88]	@ 0x58
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000704e:	021a      	lsls	r2, r3, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90007050:	6321      	str	r1, [r4, #48]	@ 0x30
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007052:	ea45 050c 	orr.w	r5, r5, ip
90007056:	f402 6170 	and.w	r1, r2, #3840	@ 0xf00
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000705a:	f89d 2008 	ldrb.w	r2, [sp, #8]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000705e:	099b      	lsrs	r3, r3, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007060:	60a5      	str	r5, [r4, #8]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007062:	0212      	lsls	r2, r2, #8
90007064:	f89d 5009 	ldrb.w	r5, [sp, #9]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007068:	64a3      	str	r3, [r4, #72]	@ 0x48
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000706a:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
9000706e:	f89d 3010 	ldrb.w	r3, [sp, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007072:	432a      	orrs	r2, r5
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90007074:	6363      	str	r3, [r4, #52]	@ 0x34
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007076:	f89d 300e 	ldrb.w	r3, [sp, #14]
9000707a:	61e2      	str	r2, [r4, #28]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000707c:	f89d 200d 	ldrb.w	r2, [sp, #13]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007080:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007082:	430a      	orrs	r2, r1
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007084:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007088:	60e2      	str	r2, [r4, #12]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000708a:	f89d 200f 	ldrb.w	r2, [sp, #15]
9000708e:	4313      	orrs	r3, r2
90007090:	6223      	str	r3, [r4, #32]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007092:	65e6      	str	r6, [r4, #92]	@ 0x5c
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007094:	f89d 1012 	ldrb.w	r1, [sp, #18]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007098:	f89d 3014 	ldrb.w	r3, [sp, #20]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000709c:	020a      	lsls	r2, r1, #8
9000709e:	f89d 5013 	ldrb.w	r5, [sp, #19]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900070a2:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900070a4:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900070a8:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900070aa:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900070ae:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900070b0:	f89d 5015 	ldrb.w	r5, [sp, #21]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900070b4:	64e1      	str	r1, [r4, #76]	@ 0x4c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900070b6:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900070b8:	f89d 1018 	ldrb.w	r1, [sp, #24]
900070bc:	6122      	str	r2, [r4, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900070be:	6263      	str	r3, [r4, #36]	@ 0x24
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900070c0:	020b      	lsls	r3, r1, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900070c2:	f89d 2016 	ldrb.w	r2, [sp, #22]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900070c6:	0989      	lsrs	r1, r1, #6
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900070c8:	f89d 5017 	ldrb.w	r5, [sp, #23]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900070cc:	63a2      	str	r2, [r4, #56]	@ 0x38
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900070ce:	f403 6270 	and.w	r2, r3, #3840	@ 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900070d2:	f89d 301d 	ldrb.w	r3, [sp, #29]
900070d6:	092d      	lsrs	r5, r5, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900070d8:	6521      	str	r1, [r4, #80]	@ 0x50
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900070da:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900070dc:	f89d 101c 	ldrb.w	r1, [sp, #28]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900070e0:	6625      	str	r5, [r4, #96]	@ 0x60
900070e2:	6663      	str	r3, [r4, #100]	@ 0x64
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900070e4:	f89d 301a 	ldrb.w	r3, [sp, #26]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900070e8:	63e1      	str	r1, [r4, #60]	@ 0x3c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900070ea:	021b      	lsls	r3, r3, #8
900070ec:	f89d 101b 	ldrb.w	r1, [sp, #27]
900070f0:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
900070f4:	430b      	orrs	r3, r1
900070f6:	62a3      	str	r3, [r4, #40]	@ 0x28
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900070f8:	f89d 3019 	ldrb.w	r3, [sp, #25]
900070fc:	4313      	orrs	r3, r2
900070fe:	6163      	str	r3, [r4, #20]
}
90007100:	b008      	add	sp, #32
90007102:	bd70      	pop	{r4, r5, r6, pc}
90007104:	f04f 31ff 	mov.w	r1, #4294967295
90007108:	e768      	b.n	90006fdc <FT5336_GetMultiTouchState+0x24>
    ret = FT5336_ERROR;
9000710a:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
9000710e:	e7f7      	b.n	90007100 <FT5336_GetMultiTouchState+0x148>

90007110 <FT5336_GetGesture>:
  return ft5336_gest_id(&pObj->Ctx, GestureId);
90007110:	3018      	adds	r0, #24
90007112:	f000 b84d 	b.w	900071b0 <ft5336_gest_id>
90007116:	bf00      	nop

90007118 <FT5336_EnableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_TRIGGER);
90007118:	2101      	movs	r1, #1
9000711a:	3018      	adds	r0, #24
9000711c:	f000 b8b4 	b.w	90007288 <ft5336_g_mode>

90007120 <FT5336_DisableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90007120:	2100      	movs	r1, #0
90007122:	3018      	adds	r0, #24
90007124:	f000 b8b0 	b.w	90007288 <ft5336_g_mode>

90007128 <FT5336_Init>:
{
90007128:	b570      	push	{r4, r5, r6, lr}
  if(pObj->IsInitialized == 0U)
9000712a:	f890 5024 	ldrb.w	r5, [r0, #36]	@ 0x24
9000712e:	b98d      	cbnz	r5, 90007154 <FT5336_Init+0x2c>
    pObj->IO.Init();
90007130:	4606      	mov	r6, r0
90007132:	4604      	mov	r4, r0
90007134:	f856 3b18 	ldr.w	r3, [r6], #24
90007138:	4798      	blx	r3
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
9000713a:	4629      	mov	r1, r5
9000713c:	4630      	mov	r0, r6
9000713e:	f000 f8a3 	bl	90007288 <ft5336_g_mode>
  if(ret != FT5336_OK)
90007142:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
90007144:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
90007148:	bf18      	it	ne
9000714a:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
9000714c:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
  if(ret != FT5336_OK)
90007150:	4240      	negs	r0, r0
}
90007152:	bd70      	pop	{r4, r5, r6, pc}
90007154:	2000      	movs	r0, #0
90007156:	bd70      	pop	{r4, r5, r6, pc}

90007158 <FT5336_ClearIT>:
int32_t FT5336_ClearIT(FT5336_Object_t *pObj)
90007158:	2000      	movs	r0, #0
9000715a:	4770      	bx	lr

9000715c <FT5336_RegisterBusIO>:
  if (pObj == NULL)
9000715c:	b1c0      	cbz	r0, 90007190 <FT5336_RegisterBusIO+0x34>
    pObj->IO.Address   = pIO->Address;
9000715e:	890a      	ldrh	r2, [r1, #8]
{
90007160:	b430      	push	{r4, r5}
    pObj->IO.DeInit    = pIO->DeInit;
90007162:	e9d1 3400 	ldrd	r3, r4, [r1]
    pObj->IO.Address   = pIO->Address;
90007166:	8102      	strh	r2, [r0, #8]
    pObj->IO.DeInit    = pIO->DeInit;
90007168:	e9c0 3400 	strd	r3, r4, [r0]
    pObj->IO.WriteReg  = pIO->WriteReg;
9000716c:	694a      	ldr	r2, [r1, #20]
9000716e:	e9d1 5403 	ldrd	r5, r4, [r1, #12]
    pObj->Ctx.ReadReg  = ReadRegWrap;
90007172:	4909      	ldr	r1, [pc, #36]	@ (90007198 <FT5336_RegisterBusIO+0x3c>)
    pObj->IO.WriteReg  = pIO->WriteReg;
90007174:	60c5      	str	r5, [r0, #12]
90007176:	e9c0 4204 	strd	r4, r2, [r0, #16]
    pObj->Ctx.WriteReg = WriteRegWrap;
9000717a:	4a08      	ldr	r2, [pc, #32]	@ (9000719c <FT5336_RegisterBusIO+0x40>)
    pObj->Ctx.handle   = pObj;
9000717c:	e9c0 1007 	strd	r1, r0, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
90007180:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
90007182:	b10b      	cbz	r3, 90007188 <FT5336_RegisterBusIO+0x2c>
}
90007184:	bc30      	pop	{r4, r5}
      ret = pObj->IO.Init();
90007186:	4718      	bx	r3
}
90007188:	f04f 30ff 	mov.w	r0, #4294967295
9000718c:	bc30      	pop	{r4, r5}
9000718e:	4770      	bx	lr
90007190:	f04f 30ff 	mov.w	r0, #4294967295
90007194:	4770      	bx	lr
90007196:	bf00      	nop
90007198:	90006ed9 	.word	0x90006ed9
9000719c:	90006ee9 	.word	0x90006ee9

900071a0 <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
900071a0:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900071a2:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
900071a6:	46a4      	mov	ip, r4
}
900071a8:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900071ac:	4760      	bx	ip
900071ae:	bf00      	nop

900071b0 <ft5336_gest_id>:
  * @param  ctx Component context 
  * @param  value pointer to the value of FT5336_GEST_ID_REG register
  * @retval Component status
  */
int32_t  ft5336_gest_id(ft5336_ctx_t *ctx, uint8_t *value)
{
900071b0:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900071b2:	2301      	movs	r3, #1
{
900071b4:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900071b6:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
900071ba:	4619      	mov	r1, r3
900071bc:	46a4      	mov	ip, r4
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
}
900071be:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900071c2:	4760      	bx	ip

900071c4 <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
900071c4:	b538      	push	{r3, r4, r5, lr}
900071c6:	460c      	mov	r4, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900071c8:	2301      	movs	r3, #1
900071ca:	2102      	movs	r1, #2
900071cc:	4622      	mov	r2, r4
900071ce:	e9d0 5001 	ldrd	r5, r0, [r0, #4]
900071d2:	47a8      	blx	r5
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
  
  if(ret == 0)
900071d4:	b918      	cbnz	r0, 900071de <ft5336_td_status+0x1a>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
900071d6:	7823      	ldrb	r3, [r4, #0]
900071d8:	f003 030f 	and.w	r3, r3, #15
900071dc:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
900071de:	bd38      	pop	{r3, r4, r5, pc}

900071e0 <ft5336_radian_value>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_RADIAN_VALUE_REG register
  * @retval Component status
  */
int32_t  ft5336_radian_value(ft5336_ctx_t *ctx, uint8_t value)
{
900071e0:	b510      	push	{r4, lr}
900071e2:	460c      	mov	r4, r1
900071e4:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900071e6:	2301      	movs	r3, #1
900071e8:	2191      	movs	r1, #145	@ 0x91
{
900071ea:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900071ee:	f10d 0207 	add.w	r2, sp, #7
900071f2:	6804      	ldr	r4, [r0, #0]
900071f4:	6880      	ldr	r0, [r0, #8]
900071f6:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
}
900071f8:	b002      	add	sp, #8
900071fa:	bd10      	pop	{r4, pc}

900071fc <ft5336_offset_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
900071fc:	b510      	push	{r4, lr}
900071fe:	460c      	mov	r4, r1
90007200:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007202:	2301      	movs	r3, #1
90007204:	2192      	movs	r1, #146	@ 0x92
{
90007206:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000720a:	f10d 0207 	add.w	r2, sp, #7
9000720e:	6804      	ldr	r4, [r0, #0]
90007210:	6880      	ldr	r0, [r0, #8]
90007212:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
}
90007214:	b002      	add	sp, #8
90007216:	bd10      	pop	{r4, pc}

90007218 <ft5336_offset_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90007218:	b510      	push	{r4, lr}
9000721a:	460c      	mov	r4, r1
9000721c:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000721e:	2301      	movs	r3, #1
90007220:	2193      	movs	r1, #147	@ 0x93
{
90007222:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007226:	f10d 0207 	add.w	r2, sp, #7
9000722a:	6804      	ldr	r4, [r0, #0]
9000722c:	6880      	ldr	r0, [r0, #8]
9000722e:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
}
90007230:	b002      	add	sp, #8
90007232:	bd10      	pop	{r4, pc}

90007234 <ft5336_disatnce_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_disatnce_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90007234:	b510      	push	{r4, lr}
90007236:	460c      	mov	r4, r1
90007238:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000723a:	2301      	movs	r3, #1
9000723c:	2194      	movs	r1, #148	@ 0x94
{
9000723e:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007242:	f10d 0207 	add.w	r2, sp, #7
90007246:	6804      	ldr	r4, [r0, #0]
90007248:	6880      	ldr	r0, [r0, #8]
9000724a:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
}
9000724c:	b002      	add	sp, #8
9000724e:	bd10      	pop	{r4, pc}

90007250 <ft5336_distance_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90007250:	b510      	push	{r4, lr}
90007252:	460c      	mov	r4, r1
90007254:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007256:	2301      	movs	r3, #1
90007258:	2195      	movs	r1, #149	@ 0x95
{
9000725a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000725e:	f10d 0207 	add.w	r2, sp, #7
90007262:	6804      	ldr	r4, [r0, #0]
90007264:	6880      	ldr	r0, [r0, #8]
90007266:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
}
90007268:	b002      	add	sp, #8
9000726a:	bd10      	pop	{r4, pc}

9000726c <ft5336_distance_zoom>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_ZOOM_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_zoom(ft5336_ctx_t *ctx, uint8_t value)
{
9000726c:	b510      	push	{r4, lr}
9000726e:	460c      	mov	r4, r1
90007270:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007272:	2301      	movs	r3, #1
90007274:	2196      	movs	r1, #150	@ 0x96
{
90007276:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000727a:	f10d 0207 	add.w	r2, sp, #7
9000727e:	6804      	ldr	r4, [r0, #0]
90007280:	6880      	ldr	r0, [r0, #8]
90007282:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
}
90007284:	b002      	add	sp, #8
90007286:	bd10      	pop	{r4, pc}

90007288 <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
90007288:	b510      	push	{r4, lr}
9000728a:	460c      	mov	r4, r1
9000728c:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000728e:	2301      	movs	r3, #1
90007290:	21a4      	movs	r1, #164	@ 0xa4
{
90007292:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007296:	f10d 0207 	add.w	r2, sp, #7
9000729a:	6804      	ldr	r4, [r0, #0]
9000729c:	6880      	ldr	r0, [r0, #8]
9000729e:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
}
900072a0:	b002      	add	sp, #8
900072a2:	bd10      	pop	{r4, pc}

900072a4 <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
900072a4:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900072a6:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
{
900072aa:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900072ac:	2301      	movs	r3, #1
900072ae:	46a4      	mov	ip, r4
900072b0:	21a8      	movs	r1, #168	@ 0xa8
    *value &= FT5336_CHIP_ID_BIT_MASK; 
    *value = *value >> FT5336_CHIP_ID_BIT_POSITION; 
  }
  
  return ret;
}
900072b2:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900072b6:	4760      	bx	ip

900072b8 <MT48LC4M32B2_Init>:
  * @param  Ctx : Component object pointer
  * @param  pRegMode : Pointer to Register Mode stucture
  * @retval error status
  */
int32_t MT48LC4M32B2_Init(SDRAM_HandleTypeDef *Ctx, MT48LC4M32B2_Context_t *pRegMode) 
{
900072b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900072ba:	460d      	mov	r5, r1
  * @param  Interface : Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t MT48LC4M32B2_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
900072bc:	4c2a      	ldr	r4, [pc, #168]	@ (90007368 <MT48LC4M32B2_Init+0xb0>)
900072be:	2301      	movs	r3, #1
  Command.CommandTarget          = Interface;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;
900072c0:	2100      	movs	r1, #0
  if(MT48LC4M32B2_ClockEnable(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
900072c2:	682a      	ldr	r2, [r5, #0]
{
900072c4:	4607      	mov	r7, r0
  Command.ModeRegisterDefinition = 0;
900072c6:	60e1      	str	r1, [r4, #12]

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900072c8:	4621      	mov	r1, r4
  Command.AutoRefreshNumber      = 1;
900072ca:	60a3      	str	r3, [r4, #8]
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
900072cc:	e9c4 3200 	strd	r3, r2, [r4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900072d0:	f64f 72ff 	movw	r2, #65535	@ 0xffff
900072d4:	f006 fcd8 	bl	9000dc88 <HAL_SDRAM_SendCommand>
900072d8:	2800      	cmp	r0, #0
900072da:	d142      	bne.n	90007362 <MT48LC4M32B2_Init+0xaa>
  * @retval MT48LC4M32B2_OK
  */
static int32_t MT48LC4M32B2_Delay(uint32_t Delay)
{  
  uint32_t tickstart;
  tickstart = HAL_GetTick();
900072dc:	f000 ff52 	bl	90008184 <HAL_GetTick>
900072e0:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
900072e2:	f000 ff4f 	bl	90008184 <HAL_GetTick>
900072e6:	4286      	cmp	r6, r0
900072e8:	d0fb      	beq.n	900072e2 <MT48LC4M32B2_Init+0x2a>
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
900072ea:	2302      	movs	r3, #2
    if(MT48LC4M32B2_Precharge(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
900072ec:	682a      	ldr	r2, [r5, #0]
  Command.AutoRefreshNumber      = 1;
900072ee:	2601      	movs	r6, #1
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900072f0:	491d      	ldr	r1, [pc, #116]	@ (90007368 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
900072f2:	6023      	str	r3, [r4, #0]
  Command.ModeRegisterDefinition = 0;
900072f4:	2300      	movs	r3, #0
  Command.CommandTarget          = Interface;
900072f6:	6062      	str	r2, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900072f8:	4638      	mov	r0, r7
900072fa:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.AutoRefreshNumber      = 1;
900072fe:	60a6      	str	r6, [r4, #8]
  Command.ModeRegisterDefinition = 0;
90007300:	60e3      	str	r3, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007302:	f006 fcc1 	bl	9000dc88 <HAL_SDRAM_SendCommand>
90007306:	bb60      	cbnz	r0, 90007362 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007308:	4917      	ldr	r1, [pc, #92]	@ (90007368 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = RefreshMode;
9000730a:	e9d5 3200 	ldrd	r3, r2, [r5]
  Command.ModeRegisterDefinition = 0;
9000730e:	60e0      	str	r0, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007310:	4638      	mov	r0, r7
  Command.CommandMode            = RefreshMode;
90007312:	e9c4 2300 	strd	r2, r3, [r4]
  Command.AutoRefreshNumber      = 8;
90007316:	2308      	movs	r3, #8
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007318:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.AutoRefreshNumber      = 8;
9000731c:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000731e:	f006 fcb3 	bl	9000dc88 <HAL_SDRAM_SendCommand>
90007322:	b9f0      	cbnz	r0, 90007362 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007324:	4910      	ldr	r1, [pc, #64]	@ (90007368 <MT48LC4M32B2_Init+0xb0>)
90007326:	4638      	mov	r0, r7
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90007328:	e9d5 3203 	ldrd	r3, r2, [r5, #12]
9000732c:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
9000732e:	696a      	ldr	r2, [r5, #20]
90007330:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
90007332:	69aa      	ldr	r2, [r5, #24]
90007334:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90007336:	69ea      	ldr	r2, [r5, #28]
90007338:	4313      	orrs	r3, r2
  Command.CommandTarget          = pRegMode->TargetBank;
9000733a:	682a      	ldr	r2, [r5, #0]
  Command.ModeRegisterDefinition = tmpmrd;
9000733c:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
9000733e:	2304      	movs	r3, #4
  Command.CommandTarget          = pRegMode->TargetBank;
90007340:	e9c4 2601 	strd	r2, r6, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007344:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90007348:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000734a:	f006 fc9d 	bl	9000dc88 <HAL_SDRAM_SendCommand>
9000734e:	b940      	cbnz	r0, 90007362 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
90007350:	68a9      	ldr	r1, [r5, #8]
90007352:	4638      	mov	r0, r7
90007354:	f006 fcb8 	bl	9000dcc8 <HAL_SDRAM_ProgramRefreshRate>
90007358:	3800      	subs	r0, #0
9000735a:	bf18      	it	ne
9000735c:	2001      	movne	r0, #1
9000735e:	4240      	negs	r0, r0
}
90007360:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  int32_t ret = MT48LC4M32B2_ERROR;
90007362:	f04f 30ff 	mov.w	r0, #4294967295
}
90007366:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90007368:	24007b68 	.word	0x24007b68

9000736c <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c4InitCounter--;
9000736c:	4a10      	ldr	r2, [pc, #64]	@ (900073b0 <BSP_I2C4_DeInit+0x44>)
{
9000736e:	b508      	push	{r3, lr}
  I2c4InitCounter--;
90007370:	6813      	ldr	r3, [r2, #0]
90007372:	3b01      	subs	r3, #1
90007374:	6013      	str	r3, [r2, #0]

  if (I2c4InitCounter == 0U)
90007376:	b10b      	cbz	r3, 9000737c <BSP_I2C4_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
90007378:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
9000737a:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
9000737c:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
90007380:	480c      	ldr	r0, [pc, #48]	@ (900073b4 <BSP_I2C4_DeInit+0x48>)
90007382:	f001 fe15 	bl	90008fb0 <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
90007386:	480b      	ldr	r0, [pc, #44]	@ (900073b4 <BSP_I2C4_DeInit+0x48>)
90007388:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
9000738c:	f001 fe10 	bl	90008fb0 <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
90007390:	4a09      	ldr	r2, [pc, #36]	@ (900073b8 <BSP_I2C4_DeInit+0x4c>)
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
90007392:	480a      	ldr	r0, [pc, #40]	@ (900073bc <BSP_I2C4_DeInit+0x50>)
  BUS_I2C4_CLK_DISABLE();
90007394:	f8d2 30f4 	ldr.w	r3, [r2, #244]	@ 0xf4
90007398:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000739c:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
900073a0:	f002 fa80 	bl	900098a4 <HAL_I2C_DeInit>
900073a4:	2800      	cmp	r0, #0
900073a6:	d0e7      	beq.n	90007378 <BSP_I2C4_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
900073a8:	f06f 0007 	mvn.w	r0, #7
}
900073ac:	bd08      	pop	{r3, pc}
900073ae:	bf00      	nop
900073b0:	240085d0 	.word	0x240085d0
900073b4:	58020c00 	.word	0x58020c00
900073b8:	58024400 	.word	0x58024400
900073bc:	24007b78 	.word	0x24007b78

900073c0 <MX_I2C4_Init>:
  hI2c->Init.OwnAddress1      = 0;
900073c0:	2300      	movs	r3, #0
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
900073c2:	2201      	movs	r2, #1
{
900073c4:	b510      	push	{r4, lr}
  hI2c->Init.OwnAddress1      = 0;
900073c6:	e9c0 1301 	strd	r1, r3, [r0, #4]
  hI2c->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
900073ca:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hI2c->Init.OwnAddress2Masks = I2C_OA2_NOMASK;
900073ce:	e9c0 3305 	strd	r3, r3, [r0, #20]
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
900073d2:	e9c0 3307 	strd	r3, r3, [r0, #28]
{
900073d6:	4604      	mov	r4, r0
  if (HAL_I2C_Init(hI2c) != HAL_OK)
900073d8:	f002 fa08 	bl	900097ec <HAL_I2C_Init>
900073dc:	b108      	cbz	r0, 900073e2 <MX_I2C4_Init+0x22>
    status = HAL_ERROR;
900073de:	2001      	movs	r0, #1
}
900073e0:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
900073e2:	4601      	mov	r1, r0
900073e4:	4620      	mov	r0, r4
900073e6:	f002 fc7b 	bl	90009ce0 <HAL_I2CEx_ConfigAnalogFilter>
900073ea:	2800      	cmp	r0, #0
900073ec:	d1f7      	bne.n	900073de <MX_I2C4_Init+0x1e>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
900073ee:	4601      	mov	r1, r0
900073f0:	4620      	mov	r0, r4
900073f2:	f002 fc9f 	bl	90009d34 <HAL_I2CEx_ConfigDigitalFilter>
900073f6:	3800      	subs	r0, #0
900073f8:	bf18      	it	ne
900073fa:	2001      	movne	r0, #1
}
900073fc:	bd10      	pop	{r4, pc}
900073fe:	bf00      	nop

90007400 <BSP_I2C4_Init>:
  if (I2c4InitCounter == 0U)
90007400:	4b9b      	ldr	r3, [pc, #620]	@ (90007670 <BSP_I2C4_Init+0x270>)
  hbus_i2c4.Instance = BUS_I2C4;
90007402:	489c      	ldr	r0, [pc, #624]	@ (90007674 <BSP_I2C4_Init+0x274>)
90007404:	4a9c      	ldr	r2, [pc, #624]	@ (90007678 <BSP_I2C4_Init+0x278>)
{
90007406:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if (I2c4InitCounter == 0U)
9000740a:	681c      	ldr	r4, [r3, #0]
{
9000740c:	b09f      	sub	sp, #124	@ 0x7c
  hbus_i2c4.Instance = BUS_I2C4;
9000740e:	6002      	str	r2, [r0, #0]
  if (I2c4InitCounter == 0U)
90007410:	b11c      	cbz	r4, 9000741a <BSP_I2C4_Init+0x1a>
  int32_t ret = BSP_ERROR_NONE;
90007412:	2000      	movs	r0, #0
}
90007414:	b01f      	add	sp, #124	@ 0x7c
90007416:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    I2c4InitCounter++;
9000741a:	2201      	movs	r2, #1
9000741c:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
9000741e:	f002 fc59 	bl	90009cd4 <HAL_I2C_GetState>
90007422:	2800      	cmp	r0, #0
90007424:	d1f5      	bne.n	90007412 <BSP_I2C4_Init+0x12>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90007426:	4d95      	ldr	r5, [pc, #596]	@ (9000767c <BSP_I2C4_Init+0x27c>)
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90007428:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
9000742c:	2112      	movs	r1, #18
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
9000742e:	2604      	movs	r6, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90007430:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90007434:	f04f 0800 	mov.w	r8, #0
90007438:	f04f 0902 	mov.w	r9, #2
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
9000743c:	f043 0308 	orr.w	r3, r3, #8
90007440:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90007444:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90007448:	f003 0308 	and.w	r3, r3, #8
9000744c:	9315      	str	r3, [sp, #84]	@ 0x54
9000744e:	9b15      	ldr	r3, [sp, #84]	@ 0x54
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90007450:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90007454:	f043 0308 	orr.w	r3, r3, #8
90007458:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
9000745c:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90007460:	961c      	str	r6, [sp, #112]	@ 0x70
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90007462:	f003 0308 	and.w	r3, r3, #8
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90007466:	e9cd 0118 	strd	r0, r1, [sp, #96]	@ 0x60
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
9000746a:	9316      	str	r3, [sp, #88]	@ 0x58
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
9000746c:	a918      	add	r1, sp, #96	@ 0x60
9000746e:	4884      	ldr	r0, [pc, #528]	@ (90007680 <BSP_I2C4_Init+0x280>)
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90007470:	9b16      	ldr	r3, [sp, #88]	@ 0x58
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90007472:	e9cd 891a 	strd	r8, r9, [sp, #104]	@ 0x68
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90007476:	f001 fb95 	bl	90008ba4 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
9000747a:	2312      	movs	r3, #18
9000747c:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90007480:	a918      	add	r1, sp, #96	@ 0x60
90007482:	487f      	ldr	r0, [pc, #508]	@ (90007680 <BSP_I2C4_Init+0x280>)
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
90007484:	961c      	str	r6, [sp, #112]	@ 0x70
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90007486:	e9cd 2318 	strd	r2, r3, [sp, #96]	@ 0x60
9000748a:	e9cd 891a 	strd	r8, r9, [sp, #104]	@ 0x68
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
9000748e:	f001 fb89 	bl	90008ba4 <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
90007492:	f8d5 30f4 	ldr.w	r3, [r5, #244]	@ 0xf4
90007496:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9000749a:	f8c5 30f4 	str.w	r3, [r5, #244]	@ 0xf4
9000749e:	f8d5 30f4 	ldr.w	r3, [r5, #244]	@ 0xf4
900074a2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
900074a6:	9317      	str	r3, [sp, #92]	@ 0x5c
900074a8:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
  BUS_I2C4_FORCE_RESET();
900074aa:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
900074ae:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
900074b2:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
  BUS_I2C4_RELEASE_RESET();
900074b6:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
900074ba:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
900074be:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
900074c2:	f005 f9cb 	bl	9000c85c <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
900074c6:	2800      	cmp	r0, #0
900074c8:	f000 8196 	beq.w	900077f8 <BSP_I2C4_Init+0x3f8>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
900074cc:	4b6d      	ldr	r3, [pc, #436]	@ (90007684 <BSP_I2C4_Init+0x284>)
  if (tsdadel_max <= 0)
900074ce:	4627      	mov	r7, r4
  uint32_t prev_presc = I2C_PRESC_MAX;
900074d0:	f04f 0a10 	mov.w	sl, #16
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900074d4:	4e6c      	ldr	r6, [pc, #432]	@ (90007688 <BSP_I2C4_Init+0x288>)
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
900074d6:	eb03 0350 	add.w	r3, r3, r0, lsr #1
900074da:	9402      	str	r4, [sp, #8]
900074dc:	fbb3 f0f0 	udiv	r0, r3, r0
    (int32_t)tafdel_max - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 4) * (int32_t)ti2cclk);
900074e0:	0083      	lsls	r3, r0, #2
  if (tsdadel_max <= 0)
900074e2:	4684      	mov	ip, r0
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
900074e4:	eb00 0240 	add.w	r2, r0, r0, lsl #1
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
900074e8:	9001      	str	r0, [sp, #4]
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
900074ea:	f5c3 7ec3 	rsb	lr, r3, #390	@ 0x186
900074ee:	4b67      	ldr	r3, [pc, #412]	@ (9000768c <BSP_I2C4_Init+0x28c>)
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
900074f0:	f1c2 0832 	rsb	r8, r2, #50	@ 0x32
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
900074f4:	0041      	lsls	r1, r0, #1
900074f6:	681d      	ldr	r5, [r3, #0]
  if (tsdadel_max <= 0)
900074f8:	ea2e 7eee 	bic.w	lr, lr, lr, asr #31
  if (tsdadel_min <= 0)
900074fc:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
90007500:	4623      	mov	r3, r4
  if (tsdadel_max <= 0)
90007502:	46a9      	mov	r9, r5
90007504:	9513      	str	r5, [sp, #76]	@ 0x4c
90007506:	9103      	str	r1, [sp, #12]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90007508:	ebbe 0f4c 	cmp.w	lr, ip, lsl #1
9000750c:	eb0c 024c 	add.w	r2, ip, ip, lsl #1
90007510:	bf2c      	ite	cs
90007512:	2001      	movcs	r0, #1
90007514:	2000      	movcc	r0, #0
90007516:	ebb8 0f4c 	cmp.w	r8, ip, lsl #1
9000751a:	f000 0001 	and.w	r0, r0, #1
9000751e:	eb0c 018c 	add.w	r1, ip, ip, lsl #2
90007522:	bf88      	it	hi
90007524:	2000      	movhi	r0, #0
90007526:	4590      	cmp	r8, r2
90007528:	ebcc 0bcc 	rsb	fp, ip, ip, lsl #3
9000752c:	9004      	str	r0, [sp, #16]
9000752e:	bf8c      	ite	hi
90007530:	2000      	movhi	r0, #0
90007532:	2001      	movls	r0, #1
90007534:	4596      	cmp	lr, r2
90007536:	eb0c 0482 	add.w	r4, ip, r2, lsl #2
9000753a:	bf38      	it	cc
9000753c:	2000      	movcc	r0, #0
9000753e:	ebb8 0f8c 	cmp.w	r8, ip, lsl #2
90007542:	9411      	str	r4, [sp, #68]	@ 0x44
90007544:	465c      	mov	r4, fp
90007546:	9006      	str	r0, [sp, #24]
90007548:	eb0c 0041 	add.w	r0, ip, r1, lsl #1
9000754c:	9007      	str	r0, [sp, #28]
9000754e:	bf94      	ite	ls
90007550:	2001      	movls	r0, #1
90007552:	2000      	movhi	r0, #0
90007554:	ebbe 0f8c 	cmp.w	lr, ip, lsl #2
90007558:	f000 0501 	and.w	r5, r0, #1
9000755c:	bf38      	it	cc
9000755e:	2500      	movcc	r5, #0
90007560:	4588      	cmp	r8, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90007562:	f04f 0000 	mov.w	r0, #0
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90007566:	9508      	str	r5, [sp, #32]
90007568:	bf8c      	ite	hi
9000756a:	2500      	movhi	r5, #0
9000756c:	2501      	movls	r5, #1
9000756e:	458e      	cmp	lr, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90007570:	9005      	str	r0, [sp, #20]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90007572:	bf38      	it	cc
90007574:	2500      	movcc	r5, #0
90007576:	ebb8 0f42 	cmp.w	r8, r2, lsl #1
9000757a:	bf98      	it	ls
9000757c:	2001      	movls	r0, #1
9000757e:	ebbe 0f42 	cmp.w	lr, r2, lsl #1
90007582:	9509      	str	r5, [sp, #36]	@ 0x24
90007584:	4665      	mov	r5, ip
90007586:	f000 0001 	and.w	r0, r0, #1
9000758a:	bf38      	it	cc
9000758c:	2000      	movcc	r0, #0
9000758e:	45d8      	cmp	r8, fp
90007590:	900a      	str	r0, [sp, #40]	@ 0x28
90007592:	4658      	mov	r0, fp
90007594:	bf8c      	ite	hi
90007596:	2000      	movhi	r0, #0
90007598:	2001      	movls	r0, #1
9000759a:	45de      	cmp	lr, fp
9000759c:	bf38      	it	cc
9000759e:	2000      	movcc	r0, #0
900075a0:	ebb8 0fcc 	cmp.w	r8, ip, lsl #3
900075a4:	4683      	mov	fp, r0
900075a6:	bf94      	ite	ls
900075a8:	f04f 0b01 	movls.w	fp, #1
900075ac:	f04f 0b00 	movhi.w	fp, #0
900075b0:	ebbe 0fcc 	cmp.w	lr, ip, lsl #3
900075b4:	900b      	str	r0, [sp, #44]	@ 0x2c
900075b6:	f00b 0b01 	and.w	fp, fp, #1
900075ba:	bf38      	it	cc
900075bc:	f04f 0b00 	movcc.w	fp, #0
900075c0:	4658      	mov	r0, fp
900075c2:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
900075c6:	eb0c 0bcc 	add.w	fp, ip, ip, lsl #3
900075ca:	45d8      	cmp	r8, fp
900075cc:	bf8c      	ite	hi
900075ce:	2000      	movhi	r0, #0
900075d0:	2001      	movls	r0, #1
900075d2:	45de      	cmp	lr, fp
900075d4:	bf38      	it	cc
900075d6:	2000      	movcc	r0, #0
900075d8:	ebb8 0f41 	cmp.w	r8, r1, lsl #1
900075dc:	900d      	str	r0, [sp, #52]	@ 0x34
900075de:	bf98      	it	ls
900075e0:	f04f 0b01 	movls.w	fp, #1
900075e4:	9807      	ldr	r0, [sp, #28]
900075e6:	bf88      	it	hi
900075e8:	f04f 0b00 	movhi.w	fp, #0
900075ec:	ebbe 0f41 	cmp.w	lr, r1, lsl #1
900075f0:	f00b 0101 	and.w	r1, fp, #1
900075f4:	bf38      	it	cc
900075f6:	2100      	movcc	r1, #0
900075f8:	4580      	cmp	r8, r0
900075fa:	910e      	str	r1, [sp, #56]	@ 0x38
900075fc:	4601      	mov	r1, r0
900075fe:	bf8c      	ite	hi
90007600:	2100      	movhi	r1, #0
90007602:	2101      	movls	r1, #1
90007604:	4586      	cmp	lr, r0
90007606:	4620      	mov	r0, r4
90007608:	bf38      	it	cc
9000760a:	2100      	movcc	r1, #0
9000760c:	ebb8 0f82 	cmp.w	r8, r2, lsl #2
90007610:	910f      	str	r1, [sp, #60]	@ 0x3c
90007612:	bf94      	ite	ls
90007614:	2101      	movls	r1, #1
90007616:	2100      	movhi	r1, #0
90007618:	ebbe 0f82 	cmp.w	lr, r2, lsl #2
9000761c:	f001 0101 	and.w	r1, r1, #1
90007620:	bf38      	it	cc
90007622:	2100      	movcc	r1, #0
90007624:	9110      	str	r1, [sp, #64]	@ 0x40
90007626:	9911      	ldr	r1, [sp, #68]	@ 0x44
90007628:	4588      	cmp	r8, r1
9000762a:	460a      	mov	r2, r1
9000762c:	bf8c      	ite	hi
9000762e:	2200      	movhi	r2, #0
90007630:	2201      	movls	r2, #1
90007632:	458e      	cmp	lr, r1
90007634:	bf38      	it	cc
90007636:	2200      	movcc	r2, #0
90007638:	ebb8 0f44 	cmp.w	r8, r4, lsl #1
9000763c:	9211      	str	r2, [sp, #68]	@ 0x44
9000763e:	bf94      	ite	ls
90007640:	2201      	movls	r2, #1
90007642:	2200      	movhi	r2, #0
90007644:	ebbe 0f44 	cmp.w	lr, r4, lsl #1
90007648:	f04f 0400 	mov.w	r4, #0
9000764c:	f002 0201 	and.w	r2, r2, #1
90007650:	bf38      	it	cc
90007652:	2200      	movcc	r2, #0
90007654:	9212      	str	r2, [sp, #72]	@ 0x48
90007656:	ebcc 120c 	rsb	r2, ip, ip, lsl #4
9000765a:	4590      	cmp	r8, r2
9000765c:	bf8c      	ite	hi
9000765e:	2100      	movhi	r1, #0
90007660:	2101      	movls	r1, #1
90007662:	4596      	cmp	lr, r2
90007664:	bf38      	it	cc
90007666:	2100      	movcc	r1, #0
90007668:	460a      	mov	r2, r1
9000766a:	9107      	str	r1, [sp, #28]
9000766c:	e014      	b.n	90007698 <BSP_I2C4_Init+0x298>
9000766e:	bf00      	nop
90007670:	240085d0 	.word	0x240085d0
90007674:	24007b78 	.word	0x24007b78
90007678:	58001c00 	.word	0x58001c00
9000767c:	58024400 	.word	0x58024400
90007680:	58020c00 	.word	0x58020c00
90007684:	3b9aca00 	.word	0x3b9aca00
90007688:	24007bd0 	.word	0x24007bd0
9000768c:	24007bcc 	.word	0x24007bcc
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90007690:	2c10      	cmp	r4, #16
90007692:	4465      	add	r5, ip
90007694:	f000 827d 	beq.w	90007b92 <BSP_I2C4_Init+0x792>
      if (tscldel >= (uint32_t)tscldel_min)
90007698:	f5b5 7faf 	cmp.w	r5, #350	@ 0x15e
9000769c:	4621      	mov	r1, r4
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
9000769e:	f104 0401 	add.w	r4, r4, #1
      if (tscldel >= (uint32_t)tscldel_min)
900076a2:	d3f5      	bcc.n	90007690 <BSP_I2C4_Init+0x290>
            if(presc != prev_presc)
900076a4:	fab8 fb88 	clz	fp, r8
900076a8:	4557      	cmp	r7, sl
900076aa:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
900076ae:	bf08      	it	eq
900076b0:	f04f 0b00 	moveq.w	fp, #0
900076b4:	f1bb 0f00 	cmp.w	fp, #0
900076b8:	f040 8200 	bne.w	90007abc <BSP_I2C4_Init+0x6bc>
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
900076bc:	45f4      	cmp	ip, lr
900076be:	bf8c      	ite	hi
900076c0:	2200      	movhi	r2, #0
900076c2:	2201      	movls	r2, #1
900076c4:	45c4      	cmp	ip, r8
900076c6:	bf38      	it	cc
900076c8:	2200      	movcc	r2, #0
            if(presc != prev_presc)
900076ca:	4557      	cmp	r7, sl
900076cc:	bf0c      	ite	eq
900076ce:	2200      	moveq	r2, #0
900076d0:	f002 0201 	andne.w	r2, r2, #1
900076d4:	2a00      	cmp	r2, #0
900076d6:	f000 8099 	beq.w	9000780c <BSP_I2C4_Init+0x40c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900076da:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900076de:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900076e2:	2001      	movs	r0, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900076e4:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900076e8:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900076ec:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900076f0:	6098      	str	r0, [r3, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900076f2:	4630      	mov	r0, r6
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900076f4:	6059      	str	r1, [r3, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900076f6:	f200 80f2 	bhi.w	900078de <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
900076fa:	46ba      	mov	sl, r7
            if(presc != prev_presc)
900076fc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900076fe:	4557      	cmp	r7, sl
90007700:	bf0c      	ite	eq
90007702:	2300      	moveq	r3, #0
90007704:	f003 0301 	andne.w	r3, r3, #1
90007708:	469b      	mov	fp, r3
9000770a:	2b00      	cmp	r3, #0
9000770c:	f000 8097 	beq.w	9000783e <BSP_I2C4_Init+0x43e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007710:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007714:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007718:	2205      	movs	r2, #5
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000771a:	4630      	mov	r0, r6
9000771c:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007720:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007724:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007728:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000772a:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000772c:	f200 80d7 	bhi.w	900078de <BSP_I2C4_Init+0x4de>
90007730:	465a      	mov	r2, fp
              prev_presc = presc;
90007732:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90007734:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90007736:	4557      	cmp	r7, sl
90007738:	bf0c      	ite	eq
9000773a:	2300      	moveq	r3, #0
9000773c:	f003 0301 	andne.w	r3, r3, #1
90007740:	469b      	mov	fp, r3
90007742:	2b00      	cmp	r3, #0
90007744:	f000 8096 	beq.w	90007874 <BSP_I2C4_Init+0x474>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007748:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000774c:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007750:	2209      	movs	r2, #9
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007752:	4630      	mov	r0, r6
90007754:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007758:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000775c:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007760:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007762:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007764:	f200 80bb 	bhi.w	900078de <BSP_I2C4_Init+0x4de>
90007768:	465a      	mov	r2, fp
              prev_presc = presc;
9000776a:	46ba      	mov	sl, r7
            if(presc != prev_presc)
9000776c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
9000776e:	4557      	cmp	r7, sl
90007770:	bf0c      	ite	eq
90007772:	2300      	moveq	r3, #0
90007774:	f003 0301 	andne.w	r3, r3, #1
90007778:	2b00      	cmp	r3, #0
9000777a:	f000 8096 	beq.w	900078aa <BSP_I2C4_Init+0x4aa>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000777e:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007782:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007786:	4630      	mov	r0, r6
90007788:	f846 7022 	str.w	r7, [r6, r2, lsl #2]
9000778c:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007790:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007794:	6051      	str	r1, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007796:	f04f 010d 	mov.w	r1, #13
9000779a:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000779c:	f200 809f 	bhi.w	900078de <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
900077a0:	46ba      	mov	sl, r7
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
900077a2:	e775      	b.n	90007690 <BSP_I2C4_Init+0x290>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
900077a4:	9a06      	ldr	r2, [sp, #24]
900077a6:	4661      	mov	r1, ip
900077a8:	f109 0914 	add.w	r9, r9, #20
900077ac:	3201      	adds	r2, #1
900077ae:	e9dd e40a 	ldrd	lr, r4, [sp, #40]	@ 0x28
900077b2:	e9dd c30c 	ldrd	ip, r3, [sp, #48]	@ 0x30
900077b6:	4572      	cmp	r2, lr
900077b8:	9206      	str	r2, [sp, #24]
900077ba:	f040 80b4 	bne.w	90007926 <BSP_I2C4_Init+0x526>
        if (idx < I2C_VALID_TIMING_NBR)
900077be:	9b01      	ldr	r3, [sp, #4]
900077c0:	2b7f      	cmp	r3, #127	@ 0x7f
900077c2:	e9dd 4008 	ldrd	r4, r0, [sp, #32]
900077c6:	d817      	bhi.n	900077f8 <BSP_I2C4_Init+0x3f8>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900077c8:	eb03 0383 	add.w	r3, r3, r3, lsl #2
900077cc:	eb00 0283 	add.w	r2, r0, r3, lsl #2
900077d0:	f850 4023 	ldr.w	r4, [r0, r3, lsl #2]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900077d4:	6850      	ldr	r0, [r2, #4]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
900077d6:	7c13      	ldrb	r3, [r2, #16]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900077d8:	0500      	lsls	r0, r0, #20
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900077da:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900077de:	f400 0070 	and.w	r0, r0, #15728640	@ 0xf00000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900077e2:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900077e6:	4303      	orrs	r3, r0
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
900077e8:	0409      	lsls	r1, r1, #16
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900077ea:	0212      	lsls	r2, r2, #8
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
900077ec:	f401 2170 	and.w	r1, r1, #983040	@ 0xf0000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900077f0:	b292      	uxth	r2, r2
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900077f2:	430b      	orrs	r3, r1
900077f4:	ea43 0402 	orr.w	r4, r3, r2
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
900077f8:	4621      	mov	r1, r4
900077fa:	48ad      	ldr	r0, [pc, #692]	@ (90007ab0 <BSP_I2C4_Init+0x6b0>)
900077fc:	f7ff fde0 	bl	900073c0 <MX_I2C4_Init>
90007800:	2800      	cmp	r0, #0
90007802:	f43f ae06 	beq.w	90007412 <BSP_I2C4_Init+0x12>
          ret = BSP_ERROR_BUS_FAILURE;
90007806:	f06f 0007 	mvn.w	r0, #7
  return ret;
9000780a:	e603      	b.n	90007414 <BSP_I2C4_Init+0x14>
            if(presc != prev_presc)
9000780c:	9a04      	ldr	r2, [sp, #16]
9000780e:	4557      	cmp	r7, sl
90007810:	bf0c      	ite	eq
90007812:	2200      	moveq	r2, #0
90007814:	f002 0201 	andne.w	r2, r2, #1
90007818:	2a00      	cmp	r2, #0
9000781a:	f000 81cf 	beq.w	90007bbc <BSP_I2C4_Init+0x7bc>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000781e:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007822:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007826:	2002      	movs	r0, #2
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007828:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000782c:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007830:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007834:	6098      	str	r0, [r3, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007836:	4630      	mov	r0, r6
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007838:	6059      	str	r1, [r3, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000783a:	d850      	bhi.n	900078de <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
9000783c:	46ba      	mov	sl, r7
            if(presc != prev_presc)
9000783e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90007840:	4557      	cmp	r7, sl
90007842:	bf0c      	ite	eq
90007844:	2300      	moveq	r3, #0
90007846:	f003 0301 	andne.w	r3, r3, #1
9000784a:	469b      	mov	fp, r3
9000784c:	2b00      	cmp	r3, #0
9000784e:	f000 80da 	beq.w	90007a06 <BSP_I2C4_Init+0x606>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007852:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007856:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000785a:	2206      	movs	r2, #6
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000785c:	4630      	mov	r0, r6
9000785e:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007862:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007866:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000786a:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000786c:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000786e:	d836      	bhi.n	900078de <BSP_I2C4_Init+0x4de>
90007870:	465a      	mov	r2, fp
              prev_presc = presc;
90007872:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90007874:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90007876:	4557      	cmp	r7, sl
90007878:	bf0c      	ite	eq
9000787a:	2300      	moveq	r3, #0
9000787c:	f003 0301 	andne.w	r3, r3, #1
90007880:	469b      	mov	fp, r3
90007882:	2b00      	cmp	r3, #0
90007884:	f000 80db 	beq.w	90007a3e <BSP_I2C4_Init+0x63e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007888:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000788c:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007890:	220a      	movs	r2, #10
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007892:	4630      	mov	r0, r6
90007894:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007898:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000789c:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900078a0:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900078a2:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900078a4:	d81b      	bhi.n	900078de <BSP_I2C4_Init+0x4de>
900078a6:	465a      	mov	r2, fp
              prev_presc = presc;
900078a8:	46ba      	mov	sl, r7
            if(presc != prev_presc)
900078aa:	9b12      	ldr	r3, [sp, #72]	@ 0x48
900078ac:	4557      	cmp	r7, sl
900078ae:	bf0c      	ite	eq
900078b0:	2300      	moveq	r3, #0
900078b2:	f003 0301 	andne.w	r3, r3, #1
900078b6:	2b00      	cmp	r3, #0
900078b8:	f000 80dd 	beq.w	90007a76 <BSP_I2C4_Init+0x676>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900078bc:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900078c0:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900078c4:	4630      	mov	r0, r6
900078c6:	f846 7022 	str.w	r7, [r6, r2, lsl #2]
900078ca:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900078ce:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900078d2:	6051      	str	r1, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900078d4:	f04f 010e 	mov.w	r1, #14
900078d8:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900078da:	f67f af61 	bls.w	900077a0 <BSP_I2C4_Init+0x3a0>
900078de:	4b75      	ldr	r3, [pc, #468]	@ (90007ab4 <BSP_I2C4_Init+0x6b4>)
  uint32_t prev_presc = I2C_PRESC_MAX;
900078e0:	464d      	mov	r5, r9
900078e2:	e9dd 4102 	ldrd	r4, r1, [sp, #8]
900078e6:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
900078ea:	f640 0234 	movw	r2, #2100	@ 0x834
900078ee:	f101 0332 	add.w	r3, r1, #50	@ 0x32
900078f2:	f240 2657 	movw	r6, #599	@ 0x257
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900078f6:	2700      	movs	r7, #0
900078f8:	1a52      	subs	r2, r2, r1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900078fa:	9408      	str	r4, [sp, #32]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900078fc:	9706      	str	r7, [sp, #24]
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900078fe:	461c      	mov	r4, r3
90007900:	eba2 0c03 	sub.w	ip, r2, r3
90007904:	9a01      	ldr	r2, [sp, #4]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90007906:	f04f 37ff 	mov.w	r7, #4294967295
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
9000790a:	460b      	mov	r3, r1
9000790c:	4296      	cmp	r6, r2
9000790e:	f8df 91a8 	ldr.w	r9, [pc, #424]	@ 90007ab8 <BSP_I2C4_Init+0x6b8>
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90007912:	f640 1bc4 	movw	fp, #2500	@ 0x9c4
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90007916:	f240 4a12 	movw	sl, #1042	@ 0x412
9000791a:	bf38      	it	cc
9000791c:	4616      	movcc	r6, r2
9000791e:	46ae      	mov	lr, r5
90007920:	4611      	mov	r1, r2
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90007922:	9701      	str	r7, [sp, #4]
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90007924:	9009      	str	r0, [sp, #36]	@ 0x24
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
90007926:	f8d9 0000 	ldr.w	r0, [r9]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
9000792a:	2500      	movs	r5, #0
9000792c:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
90007930:	fb00 1001 	mla	r0, r0, r1, r1
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
90007934:	930d      	str	r3, [sp, #52]	@ 0x34
90007936:	18c2      	adds	r2, r0, r3
90007938:	ebac 0840 	sub.w	r8, ip, r0, lsl #1
9000793c:	1907      	adds	r7, r0, r4
9000793e:	468c      	mov	ip, r1
90007940:	f6a2 0234 	subw	r2, r2, #2100	@ 0x834
90007944:	e9cd e40a 	strd	lr, r4, [sp, #40]	@ 0x28
90007948:	9207      	str	r2, [sp, #28]
9000794a:	e006      	b.n	9000795a <BSP_I2C4_Init+0x55a>
9000794c:	f5b5 7f80 	cmp.w	r5, #256	@ 0x100
90007950:	4407      	add	r7, r0
90007952:	eba8 0800 	sub.w	r8, r8, r0
90007956:	f43f af25 	beq.w	900077a4 <BSP_I2C4_Init+0x3a4>
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
9000795a:	f240 5314 	movw	r3, #1300	@ 0x514
9000795e:	4629      	mov	r1, r5
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90007960:	3501      	adds	r5, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90007962:	429f      	cmp	r7, r3
90007964:	d9f2      	bls.n	9000794c <BSP_I2C4_Init+0x54c>
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90007966:	f1a7 0332 	sub.w	r3, r7, #50	@ 0x32
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
9000796a:	ebbc 0f93 	cmp.w	ip, r3, lsr #2
9000796e:	d2ed      	bcs.n	9000794c <BSP_I2C4_Init+0x54c>
90007970:	f640 0e34 	movw	lr, #2100	@ 0x834
90007974:	4644      	mov	r4, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90007976:	f8cd 8010 	str.w	r8, [sp, #16]
9000797a:	2200      	movs	r2, #0
9000797c:	ebae 0e03 	sub.w	lr, lr, r3
90007980:	9b07      	ldr	r3, [sp, #28]
90007982:	9705      	str	r7, [sp, #20]
90007984:	443b      	add	r3, r7
90007986:	f8dd 8018 	ldr.w	r8, [sp, #24]
9000798a:	460f      	mov	r7, r1
9000798c:	e9cd 5c02 	strd	r5, ip, [sp, #8]
90007990:	46b4      	mov	ip, r6
90007992:	e005      	b.n	900079a0 <BSP_I2C4_Init+0x5a0>
90007994:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
90007998:	4403      	add	r3, r0
9000799a:	eba4 0400 	sub.w	r4, r4, r0
9000799e:	d01a      	beq.n	900079d6 <BSP_I2C4_Init+0x5d6>
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900079a0:	eb0e 0103 	add.w	r1, lr, r3
900079a4:	4616      	mov	r6, r2
900079a6:	f203 15a1 	addw	r5, r3, #417	@ 0x1a1
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
900079aa:	3201      	adds	r2, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900079ac:	4561      	cmp	r1, ip
900079ae:	d9f1      	bls.n	90007994 <BSP_I2C4_Init+0x594>
900079b0:	4555      	cmp	r5, sl
900079b2:	d8ef      	bhi.n	90007994 <BSP_I2C4_Init+0x594>
            if (error < 0)
900079b4:	ea33 0123 	bics.w	r1, r3, r3, asr #32
900079b8:	bf28      	it	cs
900079ba:	4621      	movcs	r1, r4
            if ((uint32_t)error < prev_error)
900079bc:	458b      	cmp	fp, r1
900079be:	d9e9      	bls.n	90007994 <BSP_I2C4_Init+0x594>
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
900079c0:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
              prev_error = (uint32_t)error;
900079c4:	468b      	mov	fp, r1
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
900079c6:	4403      	add	r3, r0
900079c8:	eba4 0400 	sub.w	r4, r4, r0
              ret = count;
900079cc:	f8cd 8004 	str.w	r8, [sp, #4]
              I2c_valid_timing[count].sclh = sclh;
900079d0:	e9c9 6703 	strd	r6, r7, [r9, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
900079d4:	d1e4      	bne.n	900079a0 <BSP_I2C4_Init+0x5a0>
900079d6:	4666      	mov	r6, ip
900079d8:	9d02      	ldr	r5, [sp, #8]
900079da:	f8dd c00c 	ldr.w	ip, [sp, #12]
900079de:	e9dd 8704 	ldrd	r8, r7, [sp, #16]
900079e2:	e7b3      	b.n	9000794c <BSP_I2C4_Init+0x54c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900079e4:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900079e8:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900079ec:	2003      	movs	r0, #3
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900079ee:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900079f2:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900079f6:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900079fa:	6098      	str	r0, [r3, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900079fc:	4630      	mov	r0, r6
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900079fe:	6059      	str	r1, [r3, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007a00:	f63f af6d 	bhi.w	900078de <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90007a04:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90007a06:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90007a08:	4557      	cmp	r7, sl
90007a0a:	bf0c      	ite	eq
90007a0c:	2300      	moveq	r3, #0
90007a0e:	f003 0301 	andne.w	r3, r3, #1
90007a12:	469b      	mov	fp, r3
90007a14:	2b00      	cmp	r3, #0
90007a16:	f000 8084 	beq.w	90007b22 <BSP_I2C4_Init+0x722>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007a1a:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007a1e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007a22:	2207      	movs	r2, #7
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007a24:	4630      	mov	r0, r6
90007a26:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007a2a:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007a2e:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007a32:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007a34:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007a36:	f63f af52 	bhi.w	900078de <BSP_I2C4_Init+0x4de>
90007a3a:	465a      	mov	r2, fp
              prev_presc = presc;
90007a3c:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90007a3e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90007a40:	4557      	cmp	r7, sl
90007a42:	bf0c      	ite	eq
90007a44:	2300      	moveq	r3, #0
90007a46:	f003 0301 	andne.w	r3, r3, #1
90007a4a:	469b      	mov	fp, r3
90007a4c:	2b00      	cmp	r3, #0
90007a4e:	f000 8084 	beq.w	90007b5a <BSP_I2C4_Init+0x75a>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007a52:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007a56:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007a5a:	220b      	movs	r2, #11
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007a5c:	4630      	mov	r0, r6
90007a5e:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007a62:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007a66:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007a6a:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007a6c:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007a6e:	f63f af36 	bhi.w	900078de <BSP_I2C4_Init+0x4de>
90007a72:	465a      	mov	r2, fp
              prev_presc = presc;
90007a74:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90007a76:	9b07      	ldr	r3, [sp, #28]
90007a78:	4557      	cmp	r7, sl
90007a7a:	bf0c      	ite	eq
90007a7c:	2300      	moveq	r3, #0
90007a7e:	f003 0301 	andne.w	r3, r3, #1
90007a82:	2b00      	cmp	r3, #0
90007a84:	f000 8098 	beq.w	90007bb8 <BSP_I2C4_Init+0x7b8>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007a88:	eb09 0289 	add.w	r2, r9, r9, lsl #2
90007a8c:	480a      	ldr	r0, [pc, #40]	@ (90007ab8 <BSP_I2C4_Init+0x6b8>)
              I2c_valid_timing_nbr ++;
90007a8e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007a92:	f840 7022 	str.w	r7, [r0, r2, lsl #2]
90007a96:	eb00 0282 	add.w	r2, r0, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007a9a:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007a9e:	6051      	str	r1, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007aa0:	f04f 010f 	mov.w	r1, #15
90007aa4:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007aa6:	f63f af1a 	bhi.w	900078de <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90007aaa:	46ba      	mov	sl, r7
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
90007aac:	e5f0      	b.n	90007690 <BSP_I2C4_Init+0x290>
90007aae:	bf00      	nop
90007ab0:	24007b78 	.word	0x24007b78
90007ab4:	24007bcc 	.word	0x24007bcc
90007ab8:	24007bd0 	.word	0x24007bd0
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007abc:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007ac0:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007ac4:	2200      	movs	r2, #0
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007ac6:	4630      	mov	r0, r6
90007ac8:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007acc:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007ad0:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007ad4:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007ad6:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007ad8:	f63f af01 	bhi.w	900078de <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90007adc:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90007ade:	9a06      	ldr	r2, [sp, #24]
90007ae0:	45ba      	cmp	sl, r7
90007ae2:	bf0c      	ite	eq
90007ae4:	2200      	moveq	r2, #0
90007ae6:	f002 0201 	andne.w	r2, r2, #1
90007aea:	2a00      	cmp	r2, #0
90007aec:	f47f af7a 	bne.w	900079e4 <BSP_I2C4_Init+0x5e4>
90007af0:	9a08      	ldr	r2, [sp, #32]
90007af2:	45ba      	cmp	sl, r7
90007af4:	bf0c      	ite	eq
90007af6:	2200      	moveq	r2, #0
90007af8:	f002 0201 	andne.w	r2, r2, #1
90007afc:	2a00      	cmp	r2, #0
90007afe:	d05f      	beq.n	90007bc0 <BSP_I2C4_Init+0x7c0>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007b00:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007b04:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007b08:	2004      	movs	r0, #4
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007b0a:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007b0e:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007b12:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007b16:	6098      	str	r0, [r3, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007b18:	4630      	mov	r0, r6
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007b1a:	6059      	str	r1, [r3, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007b1c:	f63f aedf 	bhi.w	900078de <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90007b20:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90007b22:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90007b24:	4557      	cmp	r7, sl
90007b26:	bf0c      	ite	eq
90007b28:	2300      	moveq	r3, #0
90007b2a:	f003 0301 	andne.w	r3, r3, #1
90007b2e:	469b      	mov	fp, r3
90007b30:	2b00      	cmp	r3, #0
90007b32:	f43f adff 	beq.w	90007734 <BSP_I2C4_Init+0x334>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007b36:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007b3a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007b3e:	2208      	movs	r2, #8
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007b40:	4630      	mov	r0, r6
90007b42:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007b46:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007b4a:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007b4e:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007b50:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007b52:	f63f aec4 	bhi.w	900078de <BSP_I2C4_Init+0x4de>
90007b56:	465a      	mov	r2, fp
              prev_presc = presc;
90007b58:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90007b5a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90007b5c:	4557      	cmp	r7, sl
90007b5e:	bf0c      	ite	eq
90007b60:	2300      	moveq	r3, #0
90007b62:	f003 0301 	andne.w	r3, r3, #1
90007b66:	2b00      	cmp	r3, #0
90007b68:	f43f ae00 	beq.w	9000776c <BSP_I2C4_Init+0x36c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007b6c:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007b70:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007b74:	4630      	mov	r0, r6
90007b76:	f846 7022 	str.w	r7, [r6, r2, lsl #2]
90007b7a:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007b7e:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007b82:	6051      	str	r1, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007b84:	f04f 010c 	mov.w	r1, #12
90007b88:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007b8a:	f63f aea8 	bhi.w	900078de <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90007b8e:	46ba      	mov	sl, r7
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
90007b90:	e57e      	b.n	90007690 <BSP_I2C4_Init+0x290>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
90007b92:	3701      	adds	r7, #1
90007b94:	9a01      	ldr	r2, [sp, #4]
90007b96:	2f10      	cmp	r7, #16
90007b98:	4494      	add	ip, r2
90007b9a:	f47f acb5 	bne.w	90007508 <BSP_I2C4_Init+0x108>
90007b9e:	9c02      	ldr	r4, [sp, #8]
90007ba0:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90007ba2:	9903      	ldr	r1, [sp, #12]
90007ba4:	b11b      	cbz	r3, 90007bae <BSP_I2C4_Init+0x7ae>
90007ba6:	4b07      	ldr	r3, [pc, #28]	@ (90007bc4 <BSP_I2C4_Init+0x7c4>)
90007ba8:	464d      	mov	r5, r9
90007baa:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90007bae:	2d00      	cmp	r5, #0
90007bb0:	f43f ae22 	beq.w	900077f8 <BSP_I2C4_Init+0x3f8>
90007bb4:	4804      	ldr	r0, [pc, #16]	@ (90007bc8 <BSP_I2C4_Init+0x7c8>)
90007bb6:	e698      	b.n	900078ea <BSP_I2C4_Init+0x4ea>
90007bb8:	4613      	mov	r3, r2
90007bba:	e569      	b.n	90007690 <BSP_I2C4_Init+0x290>
            if(presc != prev_presc)
90007bbc:	469b      	mov	fp, r3
90007bbe:	e78e      	b.n	90007ade <BSP_I2C4_Init+0x6de>
90007bc0:	465a      	mov	r2, fp
90007bc2:	e59b      	b.n	900076fc <BSP_I2C4_Init+0x2fc>
90007bc4:	24007bcc 	.word	0x24007bcc
90007bc8:	24007bd0 	.word	0x24007bd0

90007bcc <BSP_I2C4_WriteReg>:
{
90007bcc:	b530      	push	{r4, r5, lr}
90007bce:	4614      	mov	r4, r2
90007bd0:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
90007bd2:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
90007bd6:	460a      	mov	r2, r1
90007bd8:	9301      	str	r3, [sp, #4]
90007bda:	4601      	mov	r1, r0
90007bdc:	2301      	movs	r3, #1
90007bde:	4809      	ldr	r0, [pc, #36]	@ (90007c04 <BSP_I2C4_WriteReg+0x38>)
90007be0:	9502      	str	r5, [sp, #8]
90007be2:	9400      	str	r4, [sp, #0]
90007be4:	f001 fe78 	bl	900098d8 <HAL_I2C_Mem_Write>
90007be8:	b908      	cbnz	r0, 90007bee <BSP_I2C4_WriteReg+0x22>
}
90007bea:	b005      	add	sp, #20
90007bec:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
90007bee:	4805      	ldr	r0, [pc, #20]	@ (90007c04 <BSP_I2C4_WriteReg+0x38>)
90007bf0:	f002 f874 	bl	90009cdc <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
90007bf4:	2804      	cmp	r0, #4
90007bf6:	bf14      	ite	ne
90007bf8:	f06f 0003 	mvnne.w	r0, #3
90007bfc:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
90007c00:	e7f3      	b.n	90007bea <BSP_I2C4_WriteReg+0x1e>
90007c02:	bf00      	nop
90007c04:	24007b78 	.word	0x24007b78

90007c08 <BSP_I2C4_ReadReg>:
{
90007c08:	b530      	push	{r4, r5, lr}
90007c0a:	4614      	mov	r4, r2
90007c0c:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
90007c0e:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
90007c12:	460a      	mov	r2, r1
90007c14:	9301      	str	r3, [sp, #4]
90007c16:	4601      	mov	r1, r0
90007c18:	2301      	movs	r3, #1
90007c1a:	4809      	ldr	r0, [pc, #36]	@ (90007c40 <BSP_I2C4_ReadReg+0x38>)
90007c1c:	9502      	str	r5, [sp, #8]
90007c1e:	9400      	str	r4, [sp, #0]
90007c20:	f001 ff58 	bl	90009ad4 <HAL_I2C_Mem_Read>
90007c24:	b908      	cbnz	r0, 90007c2a <BSP_I2C4_ReadReg+0x22>
}
90007c26:	b005      	add	sp, #20
90007c28:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
90007c2a:	4805      	ldr	r0, [pc, #20]	@ (90007c40 <BSP_I2C4_ReadReg+0x38>)
90007c2c:	f002 f856 	bl	90009cdc <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
90007c30:	2804      	cmp	r0, #4
90007c32:	bf14      	ite	ne
90007c34:	f06f 0003 	mvnne.w	r0, #3
90007c38:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
90007c3c:	e7f3      	b.n	90007c26 <BSP_I2C4_ReadReg+0x1e>
90007c3e:	bf00      	nop
90007c40:	24007b78 	.word	0x24007b78

90007c44 <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
90007c44:	f000 ba9e 	b.w	90008184 <HAL_GetTick>

90007c48 <BSP_SDRAM_DeInit>:
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
  int32_t ret = BSP_ERROR_NONE;

  if(Instance >= SDRAM_INSTANCES_NBR)
90007c48:	b970      	cbnz	r0, 90007c68 <BSP_SDRAM_DeInit+0x20>
{
90007c4a:	b510      	push	{r4, lr}
90007c4c:	4604      	mov	r4, r0
  {
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
90007c4e:	4808      	ldr	r0, [pc, #32]	@ (90007c70 <BSP_SDRAM_DeInit+0x28>)
90007c50:	f006 f80c 	bl	9000dc6c <HAL_SDRAM_DeInit>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hSdram);

  /* Disable NVIC configuration for DMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
90007c54:	207a      	movs	r0, #122	@ 0x7a
90007c56:	f000 fb0f 	bl	90008278 <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90007c5a:	4b06      	ldr	r3, [pc, #24]	@ (90007c74 <BSP_SDRAM_DeInit+0x2c>)
90007c5c:	4806      	ldr	r0, [pc, #24]	@ (90007c78 <BSP_SDRAM_DeInit+0x30>)
90007c5e:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
90007c60:	f003 fe70 	bl	9000b944 <HAL_MDMA_DeInit>
  int32_t ret = BSP_ERROR_NONE;
90007c64:	4620      	mov	r0, r4
}
90007c66:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
90007c68:	f06f 0001 	mvn.w	r0, #1
}
90007c6c:	4770      	bx	lr
90007c6e:	bf00      	nop
90007c70:	240086cc 	.word	0x240086cc
90007c74:	52000040 	.word	0x52000040
90007c78:	240085d4 	.word	0x240085d4

90007c7c <MX_SDRAM_BANK2_Init>:
{
90007c7c:	b530      	push	{r4, r5, lr}
90007c7e:	b089      	sub	sp, #36	@ 0x24
  hSdram->Init.MemoryDataWidth    = MemoryDataWidth;
90007c80:	6102      	str	r2, [r0, #16]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90007c82:	2200      	movs	r2, #0
  hsdram->Instance = FMC_SDRAM_DEVICE;
90007c84:	4c13      	ldr	r4, [pc, #76]	@ (90007cd4 <MX_SDRAM_BANK2_Init+0x58>)
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90007c86:	2540      	movs	r5, #64	@ 0x40
  hSdram->Init.RowBitsNumber      = RowBitsNumber;
90007c88:	60c1      	str	r1, [r0, #12]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90007c8a:	6082      	str	r2, [r0, #8]
  sdram_timing.ExitSelfRefreshDelay = 7;
90007c8c:	2307      	movs	r3, #7
  hSdram->Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
90007c8e:	61c2      	str	r2, [r0, #28]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90007c90:	f44f 71c0 	mov.w	r1, #384	@ 0x180
  hSdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
90007c94:	6282      	str	r2, [r0, #40]	@ 0x28
  sdram_timing.LoadToActiveDelay    = 2;
90007c96:	2202      	movs	r2, #2
  sdram_timing.ExitSelfRefreshDelay = 7;
90007c98:	9301      	str	r3, [sp, #4]
  sdram_timing.LoadToActiveDelay    = 2;
90007c9a:	9200      	str	r2, [sp, #0]
  sdram_timing.RCDDelay             = 2;
90007c9c:	9206      	str	r2, [sp, #24]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90007c9e:	2201      	movs	r2, #1
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90007ca0:	6181      	str	r1, [r0, #24]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
90007ca2:	4669      	mov	r1, sp
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90007ca4:	6042      	str	r2, [r0, #4]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90007ca6:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90007caa:	6165      	str	r5, [r4, #20]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90007cac:	f44f 6500 	mov.w	r5, #2048	@ 0x800
90007cb0:	e9c0 5208 	strd	r5, r2, [r0, #32]
  sdram_timing.SelfRefreshTime      = 4;
90007cb4:	2204      	movs	r2, #4
90007cb6:	e9cd 2302 	strd	r2, r3, [sp, #8]
  sdram_timing.WriteRecoveryTime    = 2;
90007cba:	2202      	movs	r2, #2
90007cbc:	2302      	movs	r3, #2
90007cbe:	e9cd 2304 	strd	r2, r3, [sp, #16]
  hsdram->Instance = FMC_SDRAM_DEVICE;
90007cc2:	4b05      	ldr	r3, [pc, #20]	@ (90007cd8 <MX_SDRAM_BANK2_Init+0x5c>)
90007cc4:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
90007cc6:	f005 ffa7 	bl	9000dc18 <HAL_SDRAM_Init>
}
90007cca:	3800      	subs	r0, #0
90007ccc:	bf18      	it	ne
90007cce:	2001      	movne	r0, #1
90007cd0:	b009      	add	sp, #36	@ 0x24
90007cd2:	bd30      	pop	{r4, r5, pc}
90007cd4:	240086cc 	.word	0x240086cc
90007cd8:	52004140 	.word	0x52004140

90007cdc <BSP_SDRAM_Init>:
  if(Instance >=SDRAM_INSTANCES_NBR)
90007cdc:	2800      	cmp	r0, #0
90007cde:	f040 80cd 	bne.w	90007e7c <BSP_SDRAM_Init+0x1a0>
  __HAL_RCC_FMC_CLK_ENABLE();
90007ce2:	4b69      	ldr	r3, [pc, #420]	@ (90007e88 <BSP_SDRAM_Init+0x1ac>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
90007ce4:	2101      	movs	r1, #1
  __HAL_RCC_FMC_CLK_ENABLE();
90007ce6:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90007cea:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
{
90007cee:	b5f0      	push	{r4, r5, r6, r7, lr}
90007cf0:	b08d      	sub	sp, #52	@ 0x34
  __HAL_RCC_FMC_CLK_ENABLE();
90007cf2:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
90007cf6:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90007cfa:	4605      	mov	r5, r0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
90007cfc:	2002      	movs	r0, #2
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
90007cfe:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
90007d00:	f402 5280 	and.w	r2, r2, #4096	@ 0x1000
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90007d04:	4c61      	ldr	r4, [pc, #388]	@ (90007e8c <BSP_SDRAM_Init+0x1b0>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90007d06:	4e62      	ldr	r6, [pc, #392]	@ (90007e90 <BSP_SDRAM_Init+0x1b4>)
  __HAL_RCC_FMC_CLK_ENABLE();
90007d08:	9200      	str	r2, [sp, #0]
90007d0a:	9a00      	ldr	r2, [sp, #0]
  SDRAM_MDMAx_CLK_ENABLE();
90007d0c:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90007d10:	430a      	orrs	r2, r1
90007d12:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
90007d16:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90007d1a:	400a      	ands	r2, r1
90007d1c:	9201      	str	r2, [sp, #4]
90007d1e:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90007d20:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007d24:	f042 0208 	orr.w	r2, r2, #8
90007d28:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90007d2c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007d30:	f002 0208 	and.w	r2, r2, #8
90007d34:	9202      	str	r2, [sp, #8]
90007d36:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90007d38:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007d3c:	f042 0210 	orr.w	r2, r2, #16
90007d40:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90007d44:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007d48:	f002 0210 	and.w	r2, r2, #16
90007d4c:	9203      	str	r2, [sp, #12]
90007d4e:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90007d50:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007d54:	f042 0220 	orr.w	r2, r2, #32
90007d58:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90007d5c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007d60:	f002 0220 	and.w	r2, r2, #32
90007d64:	9204      	str	r2, [sp, #16]
90007d66:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90007d68:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007d6c:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
90007d70:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90007d74:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007d78:	f002 0240 	and.w	r2, r2, #64	@ 0x40
90007d7c:	9205      	str	r2, [sp, #20]
90007d7e:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007d80:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007d84:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
90007d88:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
90007d8c:	220c      	movs	r2, #12
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007d8e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
90007d92:	9008      	str	r0, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007d94:	f003 0380 	and.w	r3, r3, #128	@ 0x80
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90007d98:	483e      	ldr	r0, [pc, #248]	@ (90007e94 <BSP_SDRAM_Init+0x1b8>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
90007d9a:	9109      	str	r1, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007d9c:	9306      	str	r3, [sp, #24]
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90007d9e:	f24c 7303 	movw	r3, #50947	@ 0xc703
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007da2:	9906      	ldr	r1, [sp, #24]
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90007da4:	a907      	add	r1, sp, #28
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90007da6:	9307      	str	r3, [sp, #28]
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
90007da8:	e9cd 720a 	strd	r7, r2, [sp, #40]	@ 0x28
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90007dac:	f000 fefa 	bl	90008ba4 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90007db0:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90007db4:	a907      	add	r1, sp, #28
90007db6:	4838      	ldr	r0, [pc, #224]	@ (90007e98 <BSP_SDRAM_Init+0x1bc>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90007db8:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90007dba:	f000 fef3 	bl	90008ba4 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
90007dbe:	f64f 033f 	movw	r3, #63551	@ 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90007dc2:	a907      	add	r1, sp, #28
90007dc4:	4835      	ldr	r0, [pc, #212]	@ (90007e9c <BSP_SDRAM_Init+0x1c0>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
90007dc6:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90007dc8:	f000 feec 	bl	90008ba4 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90007dcc:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90007dd0:	a907      	add	r1, sp, #28
90007dd2:	4833      	ldr	r0, [pc, #204]	@ (90007ea0 <BSP_SDRAM_Init+0x1c4>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90007dd4:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90007dd6:	f000 fee5 	bl	90008ba4 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90007dda:	23e0      	movs	r3, #224	@ 0xe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
90007ddc:	a907      	add	r1, sp, #28
90007dde:	4831      	ldr	r0, [pc, #196]	@ (90007ea4 <BSP_SDRAM_Init+0x1c8>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90007de0:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
90007de2:	f000 fedf 	bl	90008ba4 <HAL_GPIO_Init>
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
90007de6:	2380      	movs	r3, #128	@ 0x80
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90007de8:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90007dec:	f240 2102 	movw	r1, #514	@ 0x202
  HAL_MDMA_DeInit(&mdma_handle);
90007df0:	4620      	mov	r0, r4
  mdma_handle.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
90007df2:	6223      	str	r3, [r4, #32]
  mdma_handle.Init.BufferTransferLength = 128;
90007df4:	62a3      	str	r3, [r4, #40]	@ 0x28
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90007df6:	6062      	str	r2, [r4, #4]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90007df8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90007dfc:	6161      	str	r1, [r4, #20]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90007dfe:	60a2      	str	r2, [r4, #8]
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90007e00:	4a29      	ldr	r2, [pc, #164]	@ (90007ea8 <BSP_SDRAM_Init+0x1cc>)
  mdma_handle.Init.SourceBurst = MDMA_SOURCE_BURST_SINGLE;
90007e02:	62e5      	str	r5, [r4, #44]	@ 0x2c
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90007e04:	6022      	str	r2, [r4, #0]
  mdma_handle.Init.DestBurst = MDMA_DEST_BURST_SINGLE;
90007e06:	6325      	str	r5, [r4, #48]	@ 0x30
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90007e08:	6334      	str	r4, [r6, #48]	@ 0x30
90007e0a:	6426      	str	r6, [r4, #64]	@ 0x40
  mdma_handle.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
90007e0c:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DestinationInc = MDMA_DEST_INC_WORD;
90007e10:	f640 0308 	movw	r3, #2056	@ 0x808
90007e14:	61a3      	str	r3, [r4, #24]
  mdma_handle.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90007e16:	2320      	movs	r3, #32
90007e18:	61e3      	str	r3, [r4, #28]
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90007e1a:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
  mdma_handle.Init.SourceBlockAddressOffset = 0;
90007e1e:	e9c4 550d 	strd	r5, r5, [r4, #52]	@ 0x34
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90007e22:	6263      	str	r3, [r4, #36]	@ 0x24
  HAL_MDMA_DeInit(&mdma_handle);
90007e24:	f003 fd8e 	bl	9000b944 <HAL_MDMA_DeInit>
  HAL_MDMA_Init(&mdma_handle);
90007e28:	4620      	mov	r0, r4
90007e2a:	f003 fd11 	bl	9000b850 <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, 0x0F, 0);
90007e2e:	462a      	mov	r2, r5
90007e30:	210f      	movs	r1, #15
90007e32:	207a      	movs	r0, #122	@ 0x7a
90007e34:	f000 f9d6 	bl	900081e4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
90007e38:	207a      	movs	r0, #122	@ 0x7a
90007e3a:	f000 fa0f 	bl	9000825c <HAL_NVIC_EnableIRQ>
    if(MX_SDRAM_BANK2_Init(&hsdram[Instance],FMC_SDRAM_ROW_BITS_NUM_12, FMC_SDRAM_MEM_BUS_WIDTH_16) != HAL_OK)
90007e3e:	2210      	movs	r2, #16
90007e40:	2104      	movs	r1, #4
90007e42:	4630      	mov	r0, r6
90007e44:	f7ff ff1a 	bl	90007c7c <MX_SDRAM_BANK2_Init>
90007e48:	4603      	mov	r3, r0
90007e4a:	b9d0      	cbnz	r0, 90007e82 <BSP_SDRAM_Init+0x1a6>
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90007e4c:	4917      	ldr	r1, [pc, #92]	@ (90007eac <BSP_SDRAM_Init+0x1d0>)
90007e4e:	2208      	movs	r2, #8
      pRegMode.CASLatency      = MT48LC4M32B2_CAS_LATENCY_3;
90007e50:	2430      	movs	r4, #48	@ 0x30
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90007e52:	4630      	mov	r0, r6
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90007e54:	600a      	str	r2, [r1, #0]
      pRegMode.RefreshRate     = REFRESH_COUNT;
90007e56:	f240 6203 	movw	r2, #1539	@ 0x603
      pRegMode.RefreshMode     = MT48LC4M32B2_AUTOREFRESH_MODE_CMD;
90007e5a:	604f      	str	r7, [r1, #4]
      pRegMode.RefreshRate     = REFRESH_COUNT;
90007e5c:	e9c1 2302 	strd	r2, r3, [r1, #8]
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
90007e60:	f44f 7200 	mov.w	r2, #512	@ 0x200
      pRegMode.CASLatency      = MT48LC4M32B2_CAS_LATENCY_3;
90007e64:	e9c1 3404 	strd	r3, r4, [r1, #16]
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
90007e68:	e9c1 3206 	strd	r3, r2, [r1, #24]
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90007e6c:	f7ff fa24 	bl	900072b8 <MT48LC4M32B2_Init>
        ret =  BSP_ERROR_COMPONENT_FAILURE;
90007e70:	2800      	cmp	r0, #0
90007e72:	bf18      	it	ne
90007e74:	f06f 0004 	mvnne.w	r0, #4
}
90007e78:	b00d      	add	sp, #52	@ 0x34
90007e7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
90007e7c:	f06f 0001 	mvn.w	r0, #1
}
90007e80:	4770      	bx	lr
      ret = BSP_ERROR_NO_INIT;
90007e82:	f04f 30ff 	mov.w	r0, #4294967295
90007e86:	e7f7      	b.n	90007e78 <BSP_SDRAM_Init+0x19c>
90007e88:	58024400 	.word	0x58024400
90007e8c:	24008640 	.word	0x24008640
90007e90:	240086cc 	.word	0x240086cc
90007e94:	58020c00 	.word	0x58020c00
90007e98:	58021000 	.word	0x58021000
90007e9c:	58021400 	.word	0x58021400
90007ea0:	58021800 	.word	0x58021800
90007ea4:	58021c00 	.word	0x58021c00
90007ea8:	52000040 	.word	0x52000040
90007eac:	240086ac 	.word	0x240086ac

90007eb0 <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
90007eb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90007eb4:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
90007eb6:	2800      	cmp	r0, #0
90007eb8:	d16b      	bne.n	90007f92 <BSP_TS_Init+0xe2>
90007eba:	680b      	ldr	r3, [r1, #0]
90007ebc:	460d      	mov	r5, r1
90007ebe:	1e5a      	subs	r2, r3, #1
90007ec0:	f5b2 7ff0 	cmp.w	r2, #480	@ 0x1e0
90007ec4:	d265      	bcs.n	90007f92 <BSP_TS_Init+0xe2>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
90007ec6:	684a      	ldr	r2, [r1, #4]
90007ec8:	1e51      	subs	r1, r2, #1
90007eca:	f5b1 7f88 	cmp.w	r1, #272	@ 0x110
90007ece:	d260      	bcs.n	90007f92 <BSP_TS_Init+0xe2>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
90007ed0:	4293      	cmp	r3, r2
90007ed2:	bf28      	it	cs
90007ed4:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
90007ed6:	68ea      	ldr	r2, [r5, #12]
90007ed8:	429a      	cmp	r2, r3
90007eda:	d85a      	bhi.n	90007f92 <BSP_TS_Init+0xe2>
  FT5336_IO_t              IOCtx;
  static FT5336_Object_t   FT5336Obj;
  uint32_t ft5336_id       = 0;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
90007edc:	2270      	movs	r2, #112	@ 0x70
  IOCtx.Init        = BSP_I2C4_Init;
90007ede:	4b31      	ldr	r3, [pc, #196]	@ (90007fa4 <BSP_TS_Init+0xf4>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90007ee0:	4c31      	ldr	r4, [pc, #196]	@ (90007fa8 <BSP_TS_Init+0xf8>)
90007ee2:	a902      	add	r1, sp, #8
  IOCtx.Address     = TS_I2C_ADDRESS;
90007ee4:	f8ad 2010 	strh.w	r2, [sp, #16]
  IOCtx.Init        = BSP_I2C4_Init;
90007ee8:	9302      	str	r3, [sp, #8]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90007eea:	4a30      	ldr	r2, [pc, #192]	@ (90007fac <BSP_TS_Init+0xfc>)
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90007eec:	4b30      	ldr	r3, [pc, #192]	@ (90007fb0 <BSP_TS_Init+0x100>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90007eee:	9203      	str	r2, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90007ef0:	9306      	str	r3, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90007ef2:	4a30      	ldr	r2, [pc, #192]	@ (90007fb4 <BSP_TS_Init+0x104>)
  IOCtx.GetTick     = BSP_GetTick;
90007ef4:	4b30      	ldr	r3, [pc, #192]	@ (90007fb8 <BSP_TS_Init+0x108>)
  uint32_t ft5336_id       = 0;
90007ef6:	9001      	str	r0, [sp, #4]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90007ef8:	4620      	mov	r0, r4
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90007efa:	9205      	str	r2, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
90007efc:	9307      	str	r3, [sp, #28]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90007efe:	f7ff f92d 	bl	9000715c <FT5336_RegisterBusIO>
90007f02:	2800      	cmp	r0, #0
90007f04:	d14b      	bne.n	90007f9e <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(FT5336_ReadID(&FT5336Obj, &ft5336_id) != FT5336_OK)
90007f06:	a901      	add	r1, sp, #4
90007f08:	4620      	mov	r0, r4
90007f0a:	f7ff f81d 	bl	90006f48 <FT5336_ReadID>
90007f0e:	2800      	cmp	r0, #0
90007f10:	d145      	bne.n	90007f9e <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ft5336_id != FT5336_ID)
90007f12:	9b01      	ldr	r3, [sp, #4]
90007f14:	2b51      	cmp	r3, #81	@ 0x51
90007f16:	d142      	bne.n	90007f9e <BSP_TS_Init+0xee>
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &FT5336Obj;
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90007f18:	4b28      	ldr	r3, [pc, #160]	@ (90007fbc <BSP_TS_Init+0x10c>)

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90007f1a:	4620      	mov	r0, r4
    Ts_CompObj[Instance] = &FT5336Obj;
90007f1c:	4f28      	ldr	r7, [pc, #160]	@ (90007fc0 <BSP_TS_Init+0x110>)
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90007f1e:	f8df 80a8 	ldr.w	r8, [pc, #168]	@ 90007fc8 <BSP_TS_Init+0x118>
    Ts_CompObj[Instance] = &FT5336Obj;
90007f22:	603c      	str	r4, [r7, #0]
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90007f24:	f8c8 3000 	str.w	r3, [r8]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90007f28:	681b      	ldr	r3, [r3, #0]
90007f2a:	4798      	blx	r3
90007f2c:	4606      	mov	r6, r0
90007f2e:	2800      	cmp	r0, #0
90007f30:	d135      	bne.n	90007f9e <BSP_TS_Init+0xee>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007f32:	682a      	ldr	r2, [r5, #0]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007f34:	a902      	add	r1, sp, #8
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007f36:	4c23      	ldr	r4, [pc, #140]	@ (90007fc4 <BSP_TS_Init+0x114>)
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007f38:	f8d8 3000 	ldr.w	r3, [r8]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007f3c:	6022      	str	r2, [r4, #0]
90007f3e:	686a      	ldr	r2, [r5, #4]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007f40:	6838      	ldr	r0, [r7, #0]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007f42:	6062      	str	r2, [r4, #4]
90007f44:	68aa      	ldr	r2, [r5, #8]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007f46:	69db      	ldr	r3, [r3, #28]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007f48:	60a2      	str	r2, [r4, #8]
90007f4a:	68ea      	ldr	r2, [r5, #12]
90007f4c:	60e2      	str	r2, [r4, #12]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007f4e:	4798      	blx	r3
90007f50:	2800      	cmp	r0, #0
90007f52:	db18      	blt.n	90007f86 <BSP_TS_Init+0xd6>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
90007f54:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
90007f58:	e9c4 3204 	strd	r3, r2, [r4, #16]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007f5c:	68eb      	ldr	r3, [r5, #12]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007f5e:	e9d5 2100 	ldrd	r2, r1, [r5]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007f62:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007f64:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007f66:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007f68:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007f6a:	e9c4 2206 	strd	r2, r2, [r4, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007f6e:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007f72:	e9c4 2208 	strd	r2, r2, [r4, #32]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007f76:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007f7a:	62a2      	str	r2, [r4, #40]	@ 0x28
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007f7c:	63e3      	str	r3, [r4, #60]	@ 0x3c
}
90007f7e:	4630      	mov	r0, r6
90007f80:	b008      	add	sp, #32
90007f82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ret = BSP_ERROR_COMPONENT_FAILURE;
90007f86:	f06f 0604 	mvn.w	r6, #4
}
90007f8a:	4630      	mov	r0, r6
90007f8c:	b008      	add	sp, #32
90007f8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ret = BSP_ERROR_WRONG_PARAM;
90007f92:	f06f 0601 	mvn.w	r6, #1
}
90007f96:	4630      	mov	r0, r6
90007f98:	b008      	add	sp, #32
90007f9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      ret = BSP_ERROR_NO_INIT;
90007f9e:	f04f 36ff 	mov.w	r6, #4294967295
90007fa2:	e7ec      	b.n	90007f7e <BSP_TS_Init+0xce>
90007fa4:	90007401 	.word	0x90007401
90007fa8:	24008700 	.word	0x24008700
90007fac:	9000736d 	.word	0x9000736d
90007fb0:	90007c09 	.word	0x90007c09
90007fb4:	90007bcd 	.word	0x90007bcd
90007fb8:	90007c45 	.word	0x90007c45
90007fbc:	24000044 	.word	0x24000044
90007fc0:	24008768 	.word	0x24008768
90007fc4:	24008728 	.word	0x24008728
90007fc8:	2400876c 	.word	0x2400876c

90007fcc <BSP_TS_GetState>:
  if(Instance >= TS_INSTANCES_NBR)
90007fcc:	2800      	cmp	r0, #0
90007fce:	d154      	bne.n	9000807a <BSP_TS_GetState+0xae>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90007fd0:	4b2b      	ldr	r3, [pc, #172]	@ (90008080 <BSP_TS_GetState+0xb4>)
90007fd2:	4a2c      	ldr	r2, [pc, #176]	@ (90008084 <BSP_TS_GetState+0xb8>)
90007fd4:	681b      	ldr	r3, [r3, #0]
90007fd6:	6810      	ldr	r0, [r2, #0]
90007fd8:	691b      	ldr	r3, [r3, #16]
{
90007fda:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90007fde:	b084      	sub	sp, #16
90007fe0:	460c      	mov	r4, r1
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90007fe2:	a901      	add	r1, sp, #4
90007fe4:	4798      	blx	r3
90007fe6:	2800      	cmp	r0, #0
90007fe8:	db3f      	blt.n	9000806a <BSP_TS_GetState+0x9e>
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
90007fea:	4b27      	ldr	r3, [pc, #156]	@ (90008088 <BSP_TS_GetState+0xbc>)
    else if(state.TouchDetected != 0U)
90007fec:	9801      	ldr	r0, [sp, #4]
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
90007fee:	699e      	ldr	r6, [r3, #24]
        y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
90007ff0:	6add      	ldr	r5, [r3, #44]	@ 0x2c
    else if(state.TouchDetected != 0U)
90007ff2:	b930      	cbnz	r0, 90008002 <BSP_TS_GetState+0x36>
      TS_State->TouchDetected = 0U;
90007ff4:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
90007ff6:	e9c4 6501 	strd	r6, r5, [r4, #4]
  int32_t ret = BSP_ERROR_NONE;
90007ffa:	2000      	movs	r0, #0
}
90007ffc:	b004      	add	sp, #16
90007ffe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90008002:	689f      	ldr	r7, [r3, #8]
90008004:	073a      	lsls	r2, r7, #28
      y_oriented = state.TouchY;
90008006:	e9dd c802 	ldrd	ip, r8, [sp, #8]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
9000800a:	d433      	bmi.n	90008074 <BSP_TS_GetState+0xa8>
      y_oriented = state.TouchY;
9000800c:	4641      	mov	r1, r8
      x_oriented = state.TouchX;
9000800e:	4662      	mov	r2, ip
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90008010:	f017 0f02 	tst.w	r7, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90008014:	f8d3 e010 	ldr.w	lr, [r3, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90008018:	d003      	beq.n	90008022 <BSP_TS_GetState+0x56>
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
9000801a:	f10e 32ff 	add.w	r2, lr, #4294967295
9000801e:	eba2 020c 	sub.w	r2, r2, ip
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
90008022:	f8d3 c014 	ldr.w	ip, [r3, #20]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
90008026:	077f      	lsls	r7, r7, #29
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90008028:	681f      	ldr	r7, [r3, #0]
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
9000802a:	bf48      	it	mi
9000802c:	ebac 0108 	submi.w	r1, ip, r8
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90008030:	fb07 f202 	mul.w	r2, r7, r2
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90008034:	685f      	ldr	r7, [r3, #4]
      TS_State->TouchDetected = state.TouchDetected;
90008036:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90008038:	fb07 f101 	mul.w	r1, r7, r1
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
9000803c:	fbb2 f2fe 	udiv	r2, r2, lr
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90008040:	fbb1 f1fc 	udiv	r1, r1, ip
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90008044:	42b2      	cmp	r2, r6
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90008046:	6062      	str	r2, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90008048:	60a1      	str	r1, [r4, #8]
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
9000804a:	bf8c      	ite	hi
9000804c:	1b90      	subhi	r0, r2, r6
9000804e:	1ab0      	subls	r0, r6, r2
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
90008050:	42a9      	cmp	r1, r5
90008052:	bf8c      	ite	hi
90008054:	1b4f      	subhi	r7, r1, r5
90008056:	1a6f      	subls	r7, r5, r1
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90008058:	42b8      	cmp	r0, r7
9000805a:	bf38      	it	cc
9000805c:	4638      	movcc	r0, r7
9000805e:	68df      	ldr	r7, [r3, #12]
90008060:	4287      	cmp	r7, r0
90008062:	d2c8      	bcs.n	90007ff6 <BSP_TS_GetState+0x2a>
            Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
90008064:	619a      	str	r2, [r3, #24]
            Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
90008066:	62d9      	str	r1, [r3, #44]	@ 0x2c
90008068:	e7c7      	b.n	90007ffa <BSP_TS_GetState+0x2e>
      ret = BSP_ERROR_COMPONENT_FAILURE;
9000806a:	f06f 0004 	mvn.w	r0, #4
}
9000806e:	b004      	add	sp, #16
90008070:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        y_oriented = state.TouchX;
90008074:	4661      	mov	r1, ip
        x_oriented = state.TouchY;
90008076:	4642      	mov	r2, r8
90008078:	e7ca      	b.n	90008010 <BSP_TS_GetState+0x44>
    ret = BSP_ERROR_WRONG_PARAM;
9000807a:	f06f 0001 	mvn.w	r0, #1
}
9000807e:	4770      	bx	lr
90008080:	2400876c 	.word	0x2400876c
90008084:	24008768 	.word	0x24008768
90008088:	24008728 	.word	0x24008728

9000808c <SystemInit>:
#endif

extern unsigned int VECTOR_TABLE_LOCATION;

void SystemInit (void)
{
9000808c:	b410      	push	{r4}
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
9000808e:	4c19      	ldr	r4, [pc, #100]	@ (900080f4 <SystemInit+0x68>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
90008090:	2200      	movs	r2, #0
  RCC->CR |= RCC_CR_HSION;
90008092:	4b19      	ldr	r3, [pc, #100]	@ (900080f8 <SystemInit+0x6c>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90008094:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
90008098:	4918      	ldr	r1, [pc, #96]	@ (900080fc <SystemInit+0x70>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
9000809a:	f440 0070 	orr.w	r0, r0, #15728640	@ 0xf00000
9000809e:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
  RCC->CR |= RCC_CR_HSION;
900080a2:	6818      	ldr	r0, [r3, #0]
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
900080a4:	4c16      	ldr	r4, [pc, #88]	@ (90008100 <SystemInit+0x74>)
  RCC->CR |= RCC_CR_HSION;
900080a6:	f040 0001 	orr.w	r0, r0, #1
900080aa:	6018      	str	r0, [r3, #0]
  RCC->CFGR = 0x00000000;
900080ac:	611a      	str	r2, [r3, #16]
  RCC->CR &= 0xEAF6ED7FU;
900080ae:	6818      	ldr	r0, [r3, #0]
900080b0:	4001      	ands	r1, r0
900080b2:	6019      	str	r1, [r3, #0]
  RCC->D1CFGR = 0x00000000;
900080b4:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
900080b6:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
900080b8:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x00000000;
900080ba:	629a      	str	r2, [r3, #40]	@ 0x28
  RCC->PLLCFGR = 0x00000000;
900080bc:	62da      	str	r2, [r3, #44]	@ 0x2c
  RCC->PLL1DIVR = 0x00000000;
900080be:	631a      	str	r2, [r3, #48]	@ 0x30
  RCC->PLL1FRACR = 0x00000000;
900080c0:	635a      	str	r2, [r3, #52]	@ 0x34
  RCC->PLL2DIVR = 0x00000000;
900080c2:	639a      	str	r2, [r3, #56]	@ 0x38
  RCC->PLL2FRACR = 0x00000000;
900080c4:	63da      	str	r2, [r3, #60]	@ 0x3c
  RCC->PLL3DIVR = 0x00000000;
900080c6:	641a      	str	r2, [r3, #64]	@ 0x40
  RCC->PLL3FRACR = 0x00000000;
900080c8:	645a      	str	r2, [r3, #68]	@ 0x44
  RCC->CR &= 0xFFFBFFFFU;
900080ca:	6819      	ldr	r1, [r3, #0]
900080cc:	f421 2180 	bic.w	r1, r1, #262144	@ 0x40000
900080d0:	6019      	str	r1, [r3, #0]
  RCC->CIER = 0x00000000;
900080d2:	661a      	str	r2, [r3, #96]	@ 0x60
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
900080d4:	6823      	ldr	r3, [r4, #0]
900080d6:	f36f 030f 	bfc	r3, #0, #16
900080da:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
900080de:	d203      	bcs.n	900080e8 <SystemInit+0x5c>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
900080e0:	4b08      	ldr	r3, [pc, #32]	@ (90008104 <SystemInit+0x78>)
900080e2:	2201      	movs	r2, #1
900080e4:	f8c3 2108 	str.w	r2, [r3, #264]	@ 0x108

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#elif defined(VECT_TAB_QSPI)
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
900080e8:	4a07      	ldr	r2, [pc, #28]	@ (90008108 <SystemInit+0x7c>)
900080ea:	4b02      	ldr	r3, [pc, #8]	@ (900080f4 <SystemInit+0x68>)
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
900080ec:	f85d 4b04 	ldr.w	r4, [sp], #4
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
900080f0:	609a      	str	r2, [r3, #8]
}
900080f2:	4770      	bx	lr
900080f4:	e000ed00 	.word	0xe000ed00
900080f8:	58024400 	.word	0x58024400
900080fc:	eaf6ed7f 	.word	0xeaf6ed7f
90008100:	5c001000 	.word	0x5c001000
90008104:	51008000 	.word	0x51008000
90008108:	90000000 	.word	0x90000000

9000810c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
9000810c:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
9000810e:	2003      	movs	r0, #3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008110:	4c12      	ldr	r4, [pc, #72]	@ (9000815c <HAL_Init+0x50>)
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90008112:	f000 f855 	bl	900081c0 <HAL_NVIC_SetPriorityGrouping>
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90008116:	f004 f961 	bl	9000c3dc <HAL_RCC_GetSysClockFreq>
9000811a:	4b11      	ldr	r3, [pc, #68]	@ (90008160 <HAL_Init+0x54>)
9000811c:	4911      	ldr	r1, [pc, #68]	@ (90008164 <HAL_Init+0x58>)
9000811e:	699a      	ldr	r2, [r3, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008120:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90008122:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008126:	f003 030f 	and.w	r3, r3, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000812a:	5c8a      	ldrb	r2, [r1, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000812c:	5ccb      	ldrb	r3, [r1, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000812e:	f002 021f 	and.w	r2, r2, #31
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
90008132:	490d      	ldr	r1, [pc, #52]	@ (90008168 <HAL_Init+0x5c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008134:	f003 031f 	and.w	r3, r3, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90008138:	40d0      	lsrs	r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000813a:	fa20 f303 	lsr.w	r3, r0, r3
  SystemCoreClock = common_system_clock;
9000813e:	6008      	str	r0, [r1, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90008140:	2000      	movs	r0, #0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008142:	6023      	str	r3, [r4, #0]
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90008144:	f7fc fab0 	bl	900046a8 <HAL_InitTick>
90008148:	b110      	cbz	r0, 90008150 <HAL_Init+0x44>
  {
    return HAL_ERROR;
9000814a:	2401      	movs	r4, #1
  /* Init the low level hardware */
  HAL_MspInit();

  /* Return function status */
  return HAL_OK;
}
9000814c:	4620      	mov	r0, r4
9000814e:	bd10      	pop	{r4, pc}
90008150:	4604      	mov	r4, r0
  HAL_MspInit();
90008152:	f7fc f809 	bl	90004168 <HAL_MspInit>
}
90008156:	4620      	mov	r0, r4
90008158:	bd10      	pop	{r4, pc}
9000815a:	bf00      	nop
9000815c:	24000074 	.word	0x24000074
90008160:	58024400 	.word	0x58024400
90008164:	90031604 	.word	0x90031604
90008168:	24000078 	.word	0x24000078

9000816c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
9000816c:	4a03      	ldr	r2, [pc, #12]	@ (9000817c <HAL_IncTick+0x10>)
9000816e:	4b04      	ldr	r3, [pc, #16]	@ (90008180 <HAL_IncTick+0x14>)
90008170:	6811      	ldr	r1, [r2, #0]
90008172:	781b      	ldrb	r3, [r3, #0]
90008174:	440b      	add	r3, r1
90008176:	6013      	str	r3, [r2, #0]
}
90008178:	4770      	bx	lr
9000817a:	bf00      	nop
9000817c:	24008770 	.word	0x24008770
90008180:	2400007c 	.word	0x2400007c

90008184 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
90008184:	4b01      	ldr	r3, [pc, #4]	@ (9000818c <HAL_GetTick+0x8>)
90008186:	6818      	ldr	r0, [r3, #0]
}
90008188:	4770      	bx	lr
9000818a:	bf00      	nop
9000818c:	24008770 	.word	0x24008770

90008190 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
90008190:	b538      	push	{r3, r4, r5, lr}
90008192:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
90008194:	f7ff fff6 	bl	90008184 <HAL_GetTick>
90008198:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
9000819a:	1c63      	adds	r3, r4, #1
9000819c:	d002      	beq.n	900081a4 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
9000819e:	4b04      	ldr	r3, [pc, #16]	@ (900081b0 <HAL_Delay+0x20>)
900081a0:	781b      	ldrb	r3, [r3, #0]
900081a2:	441c      	add	r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
900081a4:	f7ff ffee 	bl	90008184 <HAL_GetTick>
900081a8:	1b40      	subs	r0, r0, r5
900081aa:	42a0      	cmp	r0, r4
900081ac:	d3fa      	bcc.n	900081a4 <HAL_Delay+0x14>
  {
  }
}
900081ae:	bd38      	pop	{r3, r4, r5, pc}
900081b0:	2400007c 	.word	0x2400007c

900081b4 <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
900081b4:	4b01      	ldr	r3, [pc, #4]	@ (900081bc <HAL_GetREVID+0x8>)
900081b6:	6818      	ldr	r0, [r3, #0]
}
900081b8:	0c00      	lsrs	r0, r0, #16
900081ba:	4770      	bx	lr
900081bc:	5c001000 	.word	0x5c001000

900081c0 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
900081c0:	4906      	ldr	r1, [pc, #24]	@ (900081dc <HAL_NVIC_SetPriorityGrouping+0x1c>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
900081c2:	f64f 0cff 	movw	ip, #63743	@ 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
900081c6:	0200      	lsls	r0, r0, #8
  reg_value  =  (reg_value                                   |
900081c8:	4b05      	ldr	r3, [pc, #20]	@ (900081e0 <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
900081ca:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
900081cc:	f400 60e0 	and.w	r0, r0, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
900081d0:	ea02 020c 	and.w	r2, r2, ip
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
900081d4:	4310      	orrs	r0, r2
  reg_value  =  (reg_value                                   |
900081d6:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
900081d8:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
900081da:	4770      	bx	lr
900081dc:	e000ed00 	.word	0xe000ed00
900081e0:	05fa0000 	.word	0x05fa0000

900081e4 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
900081e4:	4b1a      	ldr	r3, [pc, #104]	@ (90008250 <HAL_NVIC_SetPriority+0x6c>)
900081e6:	68db      	ldr	r3, [r3, #12]
900081e8:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
900081ec:	b500      	push	{lr}
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
900081ee:	f1c3 0e07 	rsb	lr, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
900081f2:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
900081f6:	f1be 0f04 	cmp.w	lr, #4
900081fa:	bf28      	it	cs
900081fc:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90008200:	f1bc 0f06 	cmp.w	ip, #6
90008204:	d91a      	bls.n	9000823c <HAL_NVIC_SetPriority+0x58>
90008206:	f1a3 0c03 	sub.w	ip, r3, #3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
9000820a:	f04f 33ff 	mov.w	r3, #4294967295
9000820e:	fa03 f30c 	lsl.w	r3, r3, ip
90008212:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90008216:	f04f 33ff 	mov.w	r3, #4294967295
  if ((int32_t)(IRQn) >= 0)
9000821a:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
9000821c:	fa03 f30e 	lsl.w	r3, r3, lr
90008220:	ea21 0303 	bic.w	r3, r1, r3
90008224:	fa03 f30c 	lsl.w	r3, r3, ip
90008228:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000822c:	ea4f 1303 	mov.w	r3, r3, lsl #4
90008230:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
90008232:	db06      	blt.n	90008242 <HAL_NVIC_SetPriority+0x5e>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90008234:	4a07      	ldr	r2, [pc, #28]	@ (90008254 <HAL_NVIC_SetPriority+0x70>)
90008236:	5413      	strb	r3, [r2, r0]
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
90008238:	f85d fb04 	ldr.w	pc, [sp], #4
9000823c:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
9000823e:	4694      	mov	ip, r2
90008240:	e7e9      	b.n	90008216 <HAL_NVIC_SetPriority+0x32>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90008242:	f000 000f 	and.w	r0, r0, #15
90008246:	4a04      	ldr	r2, [pc, #16]	@ (90008258 <HAL_NVIC_SetPriority+0x74>)
90008248:	5413      	strb	r3, [r2, r0]
9000824a:	f85d fb04 	ldr.w	pc, [sp], #4
9000824e:	bf00      	nop
90008250:	e000ed00 	.word	0xe000ed00
90008254:	e000e400 	.word	0xe000e400
90008258:	e000ed14 	.word	0xe000ed14

9000825c <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
9000825c:	2800      	cmp	r0, #0
9000825e:	db07      	blt.n	90008270 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90008260:	2301      	movs	r3, #1
90008262:	f000 011f 	and.w	r1, r0, #31
90008266:	4a03      	ldr	r2, [pc, #12]	@ (90008274 <HAL_NVIC_EnableIRQ+0x18>)
90008268:	0940      	lsrs	r0, r0, #5
9000826a:	408b      	lsls	r3, r1
9000826c:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
90008270:	4770      	bx	lr
90008272:	bf00      	nop
90008274:	e000e100 	.word	0xe000e100

90008278 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90008278:	2800      	cmp	r0, #0
9000827a:	db0c      	blt.n	90008296 <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000827c:	0943      	lsrs	r3, r0, #5
9000827e:	2201      	movs	r2, #1
90008280:	f000 001f 	and.w	r0, r0, #31
90008284:	4904      	ldr	r1, [pc, #16]	@ (90008298 <HAL_NVIC_DisableIRQ+0x20>)
90008286:	3320      	adds	r3, #32
90008288:	4082      	lsls	r2, r0
9000828a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
9000828e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90008292:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
90008296:	4770      	bx	lr
90008298:	e000e100 	.word	0xe000e100

9000829c <HAL_MPU_Disable>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
9000829c:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
900082a0:	4b04      	ldr	r3, [pc, #16]	@ (900082b4 <HAL_MPU_Disable+0x18>)

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
900082a2:	2100      	movs	r1, #0
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
900082a4:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
900082a6:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
900082aa:	625a      	str	r2, [r3, #36]	@ 0x24
  MPU->CTRL = 0;
900082ac:	f8c3 1094 	str.w	r1, [r3, #148]	@ 0x94
}
900082b0:	4770      	bx	lr
900082b2:	bf00      	nop
900082b4:	e000ed00 	.word	0xe000ed00

900082b8 <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
900082b8:	4b06      	ldr	r3, [pc, #24]	@ (900082d4 <HAL_MPU_Enable+0x1c>)
900082ba:	f040 0001 	orr.w	r0, r0, #1
900082be:	f8c3 0094 	str.w	r0, [r3, #148]	@ 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
900082c2:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
900082c4:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
900082c8:	625a      	str	r2, [r3, #36]	@ 0x24
  __ASM volatile ("dsb 0xF":::"memory");
900082ca:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900082ce:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
900082d2:	4770      	bx	lr
900082d4:	e000ed00 	.word	0xe000ed00

900082d8 <HAL_MPU_ConfigRegion>:
  assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
  assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
  assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
900082d8:	4a16      	ldr	r2, [pc, #88]	@ (90008334 <HAL_MPU_ConfigRegion+0x5c>)
900082da:	7843      	ldrb	r3, [r0, #1]
900082dc:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98

  /* Disable the Region */
  CLEAR_BIT(MPU->RASR, MPU_RASR_ENABLE_Msk);
900082e0:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
900082e4:	f023 0301 	bic.w	r3, r3, #1
900082e8:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0

  /* Apply configuration */
  MPU->RBAR = MPU_Init->BaseAddress;
900082ec:	6843      	ldr	r3, [r0, #4]
900082ee:	f8c2 309c 	str.w	r3, [r2, #156]	@ 0x9c
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
              ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
900082f2:	7ac3      	ldrb	r3, [r0, #11]
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
900082f4:	f890 c00c 	ldrb.w	ip, [r0, #12]
              ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
900082f8:	061b      	lsls	r3, r3, #24
              ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
              ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
              ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
              ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
              ((uint32_t)MPU_Init->Enable                  << MPU_RASR_ENABLE_Pos);
900082fa:	7801      	ldrb	r1, [r0, #0]
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
900082fc:	ea43 730c 	orr.w	r3, r3, ip, lsl #28
              ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
90008300:	f890 c00a 	ldrb.w	ip, [r0, #10]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90008304:	430b      	orrs	r3, r1
              ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
90008306:	7b41      	ldrb	r1, [r0, #13]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90008308:	ea43 43cc 	orr.w	r3, r3, ip, lsl #19
              ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
9000830c:	f890 c00e 	ldrb.w	ip, [r0, #14]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90008310:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
              ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
90008314:	7bc1      	ldrb	r1, [r0, #15]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90008316:	ea43 434c 	orr.w	r3, r3, ip, lsl #17
              ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
9000831a:	f890 c009 	ldrb.w	ip, [r0, #9]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000831e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
90008322:	7a01      	ldrb	r1, [r0, #8]
90008324:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
90008328:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
9000832c:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0
}
90008330:	4770      	bx	lr
90008332:	bf00      	nop
90008334:	e000ed00 	.word	0xe000ed00

90008338 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
90008338:	2800      	cmp	r0, #0
9000833a:	d036      	beq.n	900083aa <HAL_CRC_Init+0x72>
{
9000833c:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
9000833e:	7f43      	ldrb	r3, [r0, #29]
90008340:	4604      	mov	r4, r0
90008342:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90008346:	b363      	cbz	r3, 900083a2 <HAL_CRC_Init+0x6a>
    hcrc->Lock = HAL_UNLOCKED;
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
90008348:	2202      	movs	r2, #2

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
9000834a:	7923      	ldrb	r3, [r4, #4]
  hcrc->State = HAL_CRC_STATE_BUSY;
9000834c:	7762      	strb	r2, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
9000834e:	b9f3      	cbnz	r3, 9000838e <HAL_CRC_Init+0x56>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
90008350:	6823      	ldr	r3, [r4, #0]
90008352:	4a17      	ldr	r2, [pc, #92]	@ (900083b0 <HAL_CRC_Init+0x78>)
90008354:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
90008356:	689a      	ldr	r2, [r3, #8]
90008358:	f022 0218 	bic.w	r2, r2, #24
9000835c:	609a      	str	r2, [r3, #8]
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
9000835e:	7962      	ldrb	r2, [r4, #5]
90008360:	b18a      	cbz	r2, 90008386 <HAL_CRC_Init+0x4e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
90008362:	6922      	ldr	r2, [r4, #16]
90008364:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90008366:	689a      	ldr	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90008368:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
9000836c:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
90008370:	4302      	orrs	r2, r0

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
90008372:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90008374:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90008376:	689a      	ldr	r2, [r3, #8]
90008378:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000837c:	430a      	orrs	r2, r1
  hcrc->State = HAL_CRC_STATE_READY;
9000837e:	2101      	movs	r1, #1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90008380:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
90008382:	7761      	strb	r1, [r4, #29]
}
90008384:	bd10      	pop	{r4, pc}
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
90008386:	f04f 32ff 	mov.w	r2, #4294967295
9000838a:	611a      	str	r2, [r3, #16]
9000838c:	e7eb      	b.n	90008366 <HAL_CRC_Init+0x2e>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
9000838e:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
90008392:	4620      	mov	r0, r4
90008394:	f000 f80e 	bl	900083b4 <HAL_CRCEx_Polynomial_Set>
90008398:	b908      	cbnz	r0, 9000839e <HAL_CRC_Init+0x66>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
9000839a:	6823      	ldr	r3, [r4, #0]
9000839c:	e7df      	b.n	9000835e <HAL_CRC_Init+0x26>
    return HAL_ERROR;
9000839e:	2001      	movs	r0, #1
}
900083a0:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
900083a2:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
900083a4:	f7fb fefa 	bl	9000419c <HAL_CRC_MspInit>
900083a8:	e7ce      	b.n	90008348 <HAL_CRC_Init+0x10>
    return HAL_ERROR;
900083aa:	2001      	movs	r0, #1
}
900083ac:	4770      	bx	lr
900083ae:	bf00      	nop
900083b0:	04c11db7 	.word	0x04c11db7

900083b4 <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
900083b4:	07cb      	lsls	r3, r1, #31
900083b6:	d51a      	bpl.n	900083ee <HAL_CRCEx_Polynomial_Set+0x3a>
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
900083b8:	231f      	movs	r3, #31
{
900083ba:	b410      	push	{r4}
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
900083bc:	3b01      	subs	r3, #1
900083be:	1c5c      	adds	r4, r3, #1
900083c0:	fa21 fc03 	lsr.w	ip, r1, r3
900083c4:	d015      	beq.n	900083f2 <HAL_CRCEx_Polynomial_Set+0x3e>
900083c6:	f01c 0f01 	tst.w	ip, #1
900083ca:	d0f7      	beq.n	900083bc <HAL_CRCEx_Polynomial_Set+0x8>
    {
    }

    switch (PolyLength)
900083cc:	2a18      	cmp	r2, #24
900083ce:	d811      	bhi.n	900083f4 <HAL_CRCEx_Polynomial_Set+0x40>
900083d0:	e8df f002 	tbb	[pc, r2]
900083d4:	10101016 	.word	0x10101016
900083d8:	10101010 	.word	0x10101010
900083dc:	10101024 	.word	0x10101024
900083e0:	10101010 	.word	0x10101010
900083e4:	10101021 	.word	0x10101021
900083e8:	10101010 	.word	0x10101010
900083ec:	14          	.byte	0x14
900083ed:	00          	.byte	0x00
    {

      case CRC_POLYLENGTH_7B:
        if (msb >= HAL_CRC_LENGTH_7B)
        {
          status =   HAL_ERROR;
900083ee:	2001      	movs	r0, #1
    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
}
900083f0:	4770      	bx	lr
    switch (PolyLength)
900083f2:	b12a      	cbz	r2, 90008400 <HAL_CRCEx_Polynomial_Set+0x4c>
          status =   HAL_ERROR;
900083f4:	2001      	movs	r0, #1
}
900083f6:	f85d 4b04 	ldr.w	r4, [sp], #4
900083fa:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_7B)
900083fc:	2b06      	cmp	r3, #6
900083fe:	d8f9      	bhi.n	900083f4 <HAL_CRCEx_Polynomial_Set+0x40>
    WRITE_REG(hcrc->Instance->POL, Pol);
90008400:	6804      	ldr	r4, [r0, #0]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
90008402:	2000      	movs	r0, #0
    WRITE_REG(hcrc->Instance->POL, Pol);
90008404:	6161      	str	r1, [r4, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
90008406:	68a3      	ldr	r3, [r4, #8]
90008408:	f023 0318 	bic.w	r3, r3, #24
9000840c:	4313      	orrs	r3, r2
9000840e:	60a3      	str	r3, [r4, #8]
}
90008410:	f85d 4b04 	ldr.w	r4, [sp], #4
90008414:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_8B)
90008416:	2b07      	cmp	r3, #7
90008418:	d9f2      	bls.n	90008400 <HAL_CRCEx_Polynomial_Set+0x4c>
9000841a:	e7eb      	b.n	900083f4 <HAL_CRCEx_Polynomial_Set+0x40>
        if (msb >= HAL_CRC_LENGTH_16B)
9000841c:	2b0f      	cmp	r3, #15
9000841e:	d9ef      	bls.n	90008400 <HAL_CRCEx_Polynomial_Set+0x4c>
90008420:	e7e8      	b.n	900083f4 <HAL_CRCEx_Polynomial_Set+0x40>
90008422:	bf00      	nop

90008424 <HAL_DMA_Abort>:
  *        and the Stream will be effectively disabled only after the transfer of
  *        this single data is finished.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
90008424:	b570      	push	{r4, r5, r6, lr}
90008426:	4604      	mov	r4, r0
  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs_dma;
  BDMA_Base_Registers *regs_bdma;
  const __IO uint32_t *enableRegister;

  uint32_t tickstart = HAL_GetTick();
90008428:	f7ff feac 	bl	90008184 <HAL_GetTick>

 /* Check the DMA peripheral handle */
  if(hdma == NULL)
9000842c:	2c00      	cmp	r4, #0
9000842e:	d06d      	beq.n	9000850c <HAL_DMA_Abort+0xe8>
  {
    return HAL_ERROR;
  }

  /* Check the DMA peripheral state */
  if(hdma->State != HAL_DMA_STATE_BUSY)
90008430:	f894 3035 	ldrb.w	r3, [r4, #53]	@ 0x35
90008434:	2b02      	cmp	r3, #2
90008436:	d164      	bne.n	90008502 <HAL_DMA_Abort+0xde>
    return HAL_ERROR;
  }
  else
  {
    /* Disable all the transfer interrupts */
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
90008438:	6825      	ldr	r5, [r4, #0]
9000843a:	4606      	mov	r6, r0
9000843c:	4bad      	ldr	r3, [pc, #692]	@ (900086f4 <HAL_DMA_Abort+0x2d0>)
9000843e:	429d      	cmp	r5, r3
90008440:	d066      	beq.n	90008510 <HAL_DMA_Abort+0xec>
90008442:	3318      	adds	r3, #24
90008444:	429d      	cmp	r5, r3
90008446:	d063      	beq.n	90008510 <HAL_DMA_Abort+0xec>
90008448:	3318      	adds	r3, #24
9000844a:	429d      	cmp	r5, r3
9000844c:	f000 80f3 	beq.w	90008636 <HAL_DMA_Abort+0x212>
90008450:	3318      	adds	r3, #24
90008452:	429d      	cmp	r5, r3
90008454:	f000 811a 	beq.w	9000868c <HAL_DMA_Abort+0x268>
90008458:	3318      	adds	r3, #24
9000845a:	429d      	cmp	r5, r3
9000845c:	f000 8125 	beq.w	900086aa <HAL_DMA_Abort+0x286>
90008460:	3318      	adds	r3, #24
90008462:	429d      	cmp	r5, r3
90008464:	f000 80ff 	beq.w	90008666 <HAL_DMA_Abort+0x242>
90008468:	3318      	adds	r3, #24
9000846a:	429d      	cmp	r5, r3
9000846c:	f000 812e 	beq.w	900086cc <HAL_DMA_Abort+0x2a8>
90008470:	3318      	adds	r3, #24
90008472:	429d      	cmp	r5, r3
90008474:	f000 814a 	beq.w	9000870c <HAL_DMA_Abort+0x2e8>
90008478:	f503 7356 	add.w	r3, r3, #856	@ 0x358
9000847c:	429d      	cmp	r5, r3
9000847e:	f000 8158 	beq.w	90008732 <HAL_DMA_Abort+0x30e>
90008482:	3318      	adds	r3, #24
90008484:	429d      	cmp	r5, r3
90008486:	f000 8163 	beq.w	90008750 <HAL_DMA_Abort+0x32c>
9000848a:	3318      	adds	r3, #24
9000848c:	429d      	cmp	r5, r3
9000848e:	f000 816e 	beq.w	9000876e <HAL_DMA_Abort+0x34a>
90008492:	3318      	adds	r3, #24
90008494:	429d      	cmp	r5, r3
90008496:	f000 816c 	beq.w	90008772 <HAL_DMA_Abort+0x34e>
9000849a:	3318      	adds	r3, #24
9000849c:	429d      	cmp	r5, r3
9000849e:	f000 816a 	beq.w	90008776 <HAL_DMA_Abort+0x352>
900084a2:	3318      	adds	r3, #24
900084a4:	429d      	cmp	r5, r3
900084a6:	f000 8168 	beq.w	9000877a <HAL_DMA_Abort+0x356>
900084aa:	3318      	adds	r3, #24
900084ac:	429d      	cmp	r5, r3
900084ae:	f000 8168 	beq.w	90008782 <HAL_DMA_Abort+0x35e>
900084b2:	3318      	adds	r3, #24
900084b4:	429d      	cmp	r5, r3
900084b6:	f000 8162 	beq.w	9000877e <HAL_DMA_Abort+0x35a>
      enableRegister = (__IO uint32_t *)(&(((DMA_Stream_TypeDef   *)hdma->Instance)->CR));
    }
    else /* BDMA channel */
    {
      /* Disable DMA All Interrupts */
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
900084ba:	682b      	ldr	r3, [r5, #0]

      enableRegister = (__IO uint32_t *)(&(((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR));
    }

    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
900084bc:	4a8e      	ldr	r2, [pc, #568]	@ (900086f8 <HAL_DMA_Abort+0x2d4>)
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
900084be:	f023 030e 	bic.w	r3, r3, #14
    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
900084c2:	4295      	cmp	r5, r2
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
900084c4:	602b      	str	r3, [r5, #0]
    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
900084c6:	f000 80bf 	beq.w	90008648 <HAL_DMA_Abort+0x224>
900084ca:	4b8c      	ldr	r3, [pc, #560]	@ (900086fc <HAL_DMA_Abort+0x2d8>)
900084cc:	429d      	cmp	r5, r3
900084ce:	f000 80bb 	beq.w	90008648 <HAL_DMA_Abort+0x224>
900084d2:	3314      	adds	r3, #20
900084d4:	429d      	cmp	r5, r3
900084d6:	f000 80b7 	beq.w	90008648 <HAL_DMA_Abort+0x224>
900084da:	3314      	adds	r3, #20
900084dc:	429d      	cmp	r5, r3
900084de:	f000 80b3 	beq.w	90008648 <HAL_DMA_Abort+0x224>
900084e2:	3314      	adds	r3, #20
900084e4:	429d      	cmp	r5, r3
900084e6:	f000 80af 	beq.w	90008648 <HAL_DMA_Abort+0x224>
900084ea:	3314      	adds	r3, #20
900084ec:	429d      	cmp	r5, r3
900084ee:	f000 80ab 	beq.w	90008648 <HAL_DMA_Abort+0x224>
900084f2:	3314      	adds	r3, #20
900084f4:	429d      	cmp	r5, r3
900084f6:	f000 80a7 	beq.w	90008648 <HAL_DMA_Abort+0x224>
900084fa:	3314      	adds	r3, #20
900084fc:	429d      	cmp	r5, r3
900084fe:	d114      	bne.n	9000852a <HAL_DMA_Abort+0x106>
90008500:	e0a2      	b.n	90008648 <HAL_DMA_Abort+0x224>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
90008502:	2280      	movs	r2, #128	@ 0x80
    __HAL_UNLOCK(hdma);
90008504:	2300      	movs	r3, #0
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
90008506:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hdma);
90008508:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
    return HAL_ERROR;
9000850c:	2001      	movs	r0, #1
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
  }

  return HAL_OK;
}
9000850e:	bd70      	pop	{r4, r5, r6, pc}
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90008510:	682b      	ldr	r3, [r5, #0]
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90008512:	6e22      	ldr	r2, [r4, #96]	@ 0x60
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90008514:	f023 031e 	bic.w	r3, r3, #30
90008518:	602b      	str	r3, [r5, #0]
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
9000851a:	696b      	ldr	r3, [r5, #20]
9000851c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
90008520:	616b      	str	r3, [r5, #20]
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90008522:	6813      	ldr	r3, [r2, #0]
90008524:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
90008528:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
9000852a:	682b      	ldr	r3, [r5, #0]
9000852c:	f023 0301 	bic.w	r3, r3, #1
90008530:	602b      	str	r3, [r5, #0]
90008532:	e005      	b.n	90008540 <HAL_DMA_Abort+0x11c>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
90008534:	f7ff fe26 	bl	90008184 <HAL_GetTick>
90008538:	1b83      	subs	r3, r0, r6
9000853a:	2b05      	cmp	r3, #5
9000853c:	f200 808a 	bhi.w	90008654 <HAL_DMA_Abort+0x230>
    while(((*enableRegister) & DMA_SxCR_EN) != 0U)
90008540:	682b      	ldr	r3, [r5, #0]
90008542:	07db      	lsls	r3, r3, #31
90008544:	d4f6      	bmi.n	90008534 <HAL_DMA_Abort+0x110>
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
90008546:	6823      	ldr	r3, [r4, #0]
90008548:	496a      	ldr	r1, [pc, #424]	@ (900086f4 <HAL_DMA_Abort+0x2d0>)
      regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
9000854a:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
9000854c:	428b      	cmp	r3, r1
      regs_bdma = (BDMA_Base_Registers *)hdma->StreamBaseAddress;
9000854e:	6da0      	ldr	r0, [r4, #88]	@ 0x58
      regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
90008550:	f002 021f 	and.w	r2, r2, #31
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
90008554:	d05e      	beq.n	90008614 <HAL_DMA_Abort+0x1f0>
90008556:	3118      	adds	r1, #24
90008558:	428b      	cmp	r3, r1
9000855a:	d05b      	beq.n	90008614 <HAL_DMA_Abort+0x1f0>
9000855c:	3118      	adds	r1, #24
9000855e:	428b      	cmp	r3, r1
90008560:	d058      	beq.n	90008614 <HAL_DMA_Abort+0x1f0>
90008562:	3118      	adds	r1, #24
90008564:	428b      	cmp	r3, r1
90008566:	d055      	beq.n	90008614 <HAL_DMA_Abort+0x1f0>
90008568:	3118      	adds	r1, #24
9000856a:	428b      	cmp	r3, r1
9000856c:	d052      	beq.n	90008614 <HAL_DMA_Abort+0x1f0>
9000856e:	3118      	adds	r1, #24
90008570:	428b      	cmp	r3, r1
90008572:	d04f      	beq.n	90008614 <HAL_DMA_Abort+0x1f0>
90008574:	3118      	adds	r1, #24
90008576:	428b      	cmp	r3, r1
90008578:	d04c      	beq.n	90008614 <HAL_DMA_Abort+0x1f0>
9000857a:	3118      	adds	r1, #24
9000857c:	428b      	cmp	r3, r1
9000857e:	d049      	beq.n	90008614 <HAL_DMA_Abort+0x1f0>
90008580:	f501 7156 	add.w	r1, r1, #856	@ 0x358
90008584:	428b      	cmp	r3, r1
90008586:	d045      	beq.n	90008614 <HAL_DMA_Abort+0x1f0>
90008588:	3118      	adds	r1, #24
9000858a:	428b      	cmp	r3, r1
9000858c:	d042      	beq.n	90008614 <HAL_DMA_Abort+0x1f0>
9000858e:	3118      	adds	r1, #24
90008590:	428b      	cmp	r3, r1
90008592:	d03f      	beq.n	90008614 <HAL_DMA_Abort+0x1f0>
90008594:	3118      	adds	r1, #24
90008596:	428b      	cmp	r3, r1
90008598:	d03c      	beq.n	90008614 <HAL_DMA_Abort+0x1f0>
9000859a:	3118      	adds	r1, #24
9000859c:	428b      	cmp	r3, r1
9000859e:	d039      	beq.n	90008614 <HAL_DMA_Abort+0x1f0>
900085a0:	3118      	adds	r1, #24
900085a2:	428b      	cmp	r3, r1
900085a4:	d036      	beq.n	90008614 <HAL_DMA_Abort+0x1f0>
900085a6:	3118      	adds	r1, #24
900085a8:	428b      	cmp	r3, r1
900085aa:	d033      	beq.n	90008614 <HAL_DMA_Abort+0x1f0>
900085ac:	3118      	adds	r1, #24
900085ae:	428b      	cmp	r3, r1
900085b0:	d030      	beq.n	90008614 <HAL_DMA_Abort+0x1f0>
      regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
900085b2:	2101      	movs	r1, #1
900085b4:	4091      	lsls	r1, r2
    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
900085b6:	4a51      	ldr	r2, [pc, #324]	@ (900086fc <HAL_DMA_Abort+0x2d8>)
      regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
900085b8:	6041      	str	r1, [r0, #4]
    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
900085ba:	484f      	ldr	r0, [pc, #316]	@ (900086f8 <HAL_DMA_Abort+0x2d4>)
900085bc:	4950      	ldr	r1, [pc, #320]	@ (90008700 <HAL_DMA_Abort+0x2dc>)
900085be:	4283      	cmp	r3, r0
900085c0:	bf18      	it	ne
900085c2:	4293      	cmpne	r3, r2
900085c4:	f100 003c 	add.w	r0, r0, #60	@ 0x3c
900085c8:	bf0c      	ite	eq
900085ca:	2201      	moveq	r2, #1
900085cc:	2200      	movne	r2, #0
900085ce:	428b      	cmp	r3, r1
900085d0:	bf08      	it	eq
900085d2:	f042 0201 	orreq.w	r2, r2, #1
900085d6:	3128      	adds	r1, #40	@ 0x28
900085d8:	4283      	cmp	r3, r0
900085da:	bf08      	it	eq
900085dc:	f042 0201 	orreq.w	r2, r2, #1
900085e0:	3028      	adds	r0, #40	@ 0x28
900085e2:	428b      	cmp	r3, r1
900085e4:	bf08      	it	eq
900085e6:	f042 0201 	orreq.w	r2, r2, #1
900085ea:	3128      	adds	r1, #40	@ 0x28
900085ec:	4283      	cmp	r3, r0
900085ee:	bf08      	it	eq
900085f0:	f042 0201 	orreq.w	r2, r2, #1
900085f4:	428b      	cmp	r3, r1
900085f6:	bf08      	it	eq
900085f8:	f042 0201 	orreq.w	r2, r2, #1
900085fc:	b96a      	cbnz	r2, 9000861a <HAL_DMA_Abort+0x1f6>
900085fe:	4a41      	ldr	r2, [pc, #260]	@ (90008704 <HAL_DMA_Abort+0x2e0>)
90008600:	4293      	cmp	r3, r2
90008602:	d00a      	beq.n	9000861a <HAL_DMA_Abort+0x1f6>
    __HAL_UNLOCK(hdma);
90008604:	2300      	movs	r3, #0
    hdma->State = HAL_DMA_STATE_READY;
90008606:	2201      	movs	r2, #1
  return HAL_OK;
90008608:	4618      	mov	r0, r3
    hdma->State = HAL_DMA_STATE_READY;
9000860a:	f884 2035 	strb.w	r2, [r4, #53]	@ 0x35
    __HAL_UNLOCK(hdma);
9000860e:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
}
90008612:	bd70      	pop	{r4, r5, r6, pc}
      regs_dma->IFCR = 0x3FUL << (hdma->StreamIndex & 0x1FU);
90008614:	233f      	movs	r3, #63	@ 0x3f
90008616:	4093      	lsls	r3, r2
90008618:	6083      	str	r3, [r0, #8]
      if(hdma->DMAmuxRequestGen != 0U)
9000861a:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
      hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
9000861c:	e9d4 2119 	ldrd	r2, r1, [r4, #100]	@ 0x64
90008620:	6051      	str	r1, [r2, #4]
      if(hdma->DMAmuxRequestGen != 0U)
90008622:	2b00      	cmp	r3, #0
90008624:	d0ee      	beq.n	90008604 <HAL_DMA_Abort+0x1e0>
        hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
90008626:	681a      	ldr	r2, [r3, #0]
        hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
90008628:	e9d4 101c 	ldrd	r1, r0, [r4, #112]	@ 0x70
        hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
9000862c:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
90008630:	601a      	str	r2, [r3, #0]
        hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
90008632:	6048      	str	r0, [r1, #4]
90008634:	e7e6      	b.n	90008604 <HAL_DMA_Abort+0x1e0>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90008636:	4b34      	ldr	r3, [pc, #208]	@ (90008708 <HAL_DMA_Abort+0x2e4>)
90008638:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
9000863a:	f022 021e 	bic.w	r2, r2, #30
9000863e:	641a      	str	r2, [r3, #64]	@ 0x40
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
90008640:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
90008642:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90008646:	655a      	str	r2, [r3, #84]	@ 0x54
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90008648:	6e22      	ldr	r2, [r4, #96]	@ 0x60
9000864a:	6813      	ldr	r3, [r2, #0]
9000864c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
90008650:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
90008652:	e76a      	b.n	9000852a <HAL_DMA_Abort+0x106>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
90008654:	2120      	movs	r1, #32
        hdma->State = HAL_DMA_STATE_ERROR;
90008656:	2203      	movs	r2, #3
        __HAL_UNLOCK(hdma);
90008658:	2300      	movs	r3, #0
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
9000865a:	6561      	str	r1, [r4, #84]	@ 0x54
        __HAL_UNLOCK(hdma);
9000865c:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
        hdma->State = HAL_DMA_STATE_ERROR;
90008660:	f884 2035 	strb.w	r2, [r4, #53]	@ 0x35
        return HAL_ERROR;
90008664:	e752      	b.n	9000850c <HAL_DMA_Abort+0xe8>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90008666:	4b28      	ldr	r3, [pc, #160]	@ (90008708 <HAL_DMA_Abort+0x2e4>)
90008668:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
9000866c:	f022 021e 	bic.w	r2, r2, #30
90008670:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
90008674:	f8d3 209c 	ldr.w	r2, [r3, #156]	@ 0x9c
90008678:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000867c:	f8c3 209c 	str.w	r2, [r3, #156]	@ 0x9c
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90008680:	6e22      	ldr	r2, [r4, #96]	@ 0x60
90008682:	6813      	ldr	r3, [r2, #0]
90008684:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
90008688:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
9000868a:	e74e      	b.n	9000852a <HAL_DMA_Abort+0x106>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
9000868c:	4b1e      	ldr	r3, [pc, #120]	@ (90008708 <HAL_DMA_Abort+0x2e4>)
9000868e:	6d9a      	ldr	r2, [r3, #88]	@ 0x58
90008690:	f022 021e 	bic.w	r2, r2, #30
90008694:	659a      	str	r2, [r3, #88]	@ 0x58
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
90008696:	6eda      	ldr	r2, [r3, #108]	@ 0x6c
90008698:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000869c:	66da      	str	r2, [r3, #108]	@ 0x6c
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
9000869e:	6e22      	ldr	r2, [r4, #96]	@ 0x60
900086a0:	6813      	ldr	r3, [r2, #0]
900086a2:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
900086a6:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
900086a8:	e73f      	b.n	9000852a <HAL_DMA_Abort+0x106>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
900086aa:	4b17      	ldr	r3, [pc, #92]	@ (90008708 <HAL_DMA_Abort+0x2e4>)
900086ac:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
900086ae:	f022 021e 	bic.w	r2, r2, #30
900086b2:	671a      	str	r2, [r3, #112]	@ 0x70
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
900086b4:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
900086b8:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
900086bc:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
900086c0:	6e22      	ldr	r2, [r4, #96]	@ 0x60
900086c2:	6813      	ldr	r3, [r2, #0]
900086c4:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
900086c8:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
900086ca:	e72e      	b.n	9000852a <HAL_DMA_Abort+0x106>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
900086cc:	4b0e      	ldr	r3, [pc, #56]	@ (90008708 <HAL_DMA_Abort+0x2e4>)
900086ce:	f8d3 20a0 	ldr.w	r2, [r3, #160]	@ 0xa0
900086d2:	f022 021e 	bic.w	r2, r2, #30
900086d6:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
900086da:	f8d3 20b4 	ldr.w	r2, [r3, #180]	@ 0xb4
900086de:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
900086e2:	f8c3 20b4 	str.w	r2, [r3, #180]	@ 0xb4
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
900086e6:	6e22      	ldr	r2, [r4, #96]	@ 0x60
900086e8:	6813      	ldr	r3, [r2, #0]
900086ea:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
900086ee:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
900086f0:	e71b      	b.n	9000852a <HAL_DMA_Abort+0x106>
900086f2:	bf00      	nop
900086f4:	40020010 	.word	0x40020010
900086f8:	58025408 	.word	0x58025408
900086fc:	5802541c 	.word	0x5802541c
90008700:	58025430 	.word	0x58025430
90008704:	58025494 	.word	0x58025494
90008708:	40020000 	.word	0x40020000
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
9000870c:	4b1e      	ldr	r3, [pc, #120]	@ (90008788 <HAL_DMA_Abort+0x364>)
9000870e:	f8d3 20b8 	ldr.w	r2, [r3, #184]	@ 0xb8
90008712:	f022 021e 	bic.w	r2, r2, #30
90008716:	f8c3 20b8 	str.w	r2, [r3, #184]	@ 0xb8
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
9000871a:	f8d3 20cc 	ldr.w	r2, [r3, #204]	@ 0xcc
9000871e:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90008722:	f8c3 20cc 	str.w	r2, [r3, #204]	@ 0xcc
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90008726:	6e22      	ldr	r2, [r4, #96]	@ 0x60
90008728:	6813      	ldr	r3, [r2, #0]
9000872a:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
9000872e:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
90008730:	e6fb      	b.n	9000852a <HAL_DMA_Abort+0x106>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90008732:	4b16      	ldr	r3, [pc, #88]	@ (9000878c <HAL_DMA_Abort+0x368>)
90008734:	691a      	ldr	r2, [r3, #16]
90008736:	f022 021e 	bic.w	r2, r2, #30
9000873a:	611a      	str	r2, [r3, #16]
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
9000873c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
9000873e:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90008742:	625a      	str	r2, [r3, #36]	@ 0x24
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90008744:	6e22      	ldr	r2, [r4, #96]	@ 0x60
90008746:	6813      	ldr	r3, [r2, #0]
90008748:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
9000874c:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
9000874e:	e6ec      	b.n	9000852a <HAL_DMA_Abort+0x106>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90008750:	4b0e      	ldr	r3, [pc, #56]	@ (9000878c <HAL_DMA_Abort+0x368>)
90008752:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
90008754:	f022 021e 	bic.w	r2, r2, #30
90008758:	629a      	str	r2, [r3, #40]	@ 0x28
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
9000875a:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
9000875c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90008760:	63da      	str	r2, [r3, #60]	@ 0x3c
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90008762:	6e22      	ldr	r2, [r4, #96]	@ 0x60
90008764:	6813      	ldr	r3, [r2, #0]
90008766:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
9000876a:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
9000876c:	e6dd      	b.n	9000852a <HAL_DMA_Abort+0x106>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
9000876e:	4b07      	ldr	r3, [pc, #28]	@ (9000878c <HAL_DMA_Abort+0x368>)
90008770:	e762      	b.n	90008638 <HAL_DMA_Abort+0x214>
90008772:	4b06      	ldr	r3, [pc, #24]	@ (9000878c <HAL_DMA_Abort+0x368>)
90008774:	e78b      	b.n	9000868e <HAL_DMA_Abort+0x26a>
90008776:	4b05      	ldr	r3, [pc, #20]	@ (9000878c <HAL_DMA_Abort+0x368>)
90008778:	e798      	b.n	900086ac <HAL_DMA_Abort+0x288>
9000877a:	4b04      	ldr	r3, [pc, #16]	@ (9000878c <HAL_DMA_Abort+0x368>)
9000877c:	e774      	b.n	90008668 <HAL_DMA_Abort+0x244>
9000877e:	4b03      	ldr	r3, [pc, #12]	@ (9000878c <HAL_DMA_Abort+0x368>)
90008780:	e7c5      	b.n	9000870e <HAL_DMA_Abort+0x2ea>
90008782:	4b02      	ldr	r3, [pc, #8]	@ (9000878c <HAL_DMA_Abort+0x368>)
90008784:	e7a3      	b.n	900086ce <HAL_DMA_Abort+0x2aa>
90008786:	bf00      	nop
90008788:	40020000 	.word	0x40020000
9000878c:	40020400 	.word	0x40020400

90008790 <HAL_DMA_Abort_IT>:
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  BDMA_Base_Registers *regs_bdma;

  /* Check the DMA peripheral handle */
  if(hdma == NULL)
90008790:	2800      	cmp	r0, #0
90008792:	d062      	beq.n	9000885a <HAL_DMA_Abort_IT+0xca>
{
90008794:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if(hdma->State != HAL_DMA_STATE_BUSY)
90008796:	f890 3035 	ldrb.w	r3, [r0, #53]	@ 0x35
9000879a:	2b02      	cmp	r3, #2
9000879c:	d159      	bne.n	90008852 <HAL_DMA_Abort_IT+0xc2>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
    return HAL_ERROR;
  }
  else
  {
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
9000879e:	6802      	ldr	r2, [r0, #0]
900087a0:	4b57      	ldr	r3, [pc, #348]	@ (90008900 <HAL_DMA_Abort_IT+0x170>)
900087a2:	4c58      	ldr	r4, [pc, #352]	@ (90008904 <HAL_DMA_Abort_IT+0x174>)
900087a4:	4958      	ldr	r1, [pc, #352]	@ (90008908 <HAL_DMA_Abort_IT+0x178>)
900087a6:	42a2      	cmp	r2, r4
900087a8:	bf18      	it	ne
900087aa:	429a      	cmpne	r2, r3
900087ac:	f104 0430 	add.w	r4, r4, #48	@ 0x30
900087b0:	bf0c      	ite	eq
900087b2:	2301      	moveq	r3, #1
900087b4:	2300      	movne	r3, #0
900087b6:	428a      	cmp	r2, r1
900087b8:	bf08      	it	eq
900087ba:	f043 0301 	orreq.w	r3, r3, #1
900087be:	3130      	adds	r1, #48	@ 0x30
900087c0:	42a2      	cmp	r2, r4
900087c2:	bf08      	it	eq
900087c4:	f043 0301 	orreq.w	r3, r3, #1
900087c8:	3430      	adds	r4, #48	@ 0x30
900087ca:	428a      	cmp	r2, r1
900087cc:	bf08      	it	eq
900087ce:	f043 0301 	orreq.w	r3, r3, #1
900087d2:	3130      	adds	r1, #48	@ 0x30
900087d4:	42a2      	cmp	r2, r4
900087d6:	bf08      	it	eq
900087d8:	f043 0301 	orreq.w	r3, r3, #1
900087dc:	3430      	adds	r4, #48	@ 0x30
900087de:	428a      	cmp	r2, r1
900087e0:	bf08      	it	eq
900087e2:	f043 0301 	orreq.w	r3, r3, #1
900087e6:	f501 715c 	add.w	r1, r1, #880	@ 0x370
900087ea:	42a2      	cmp	r2, r4
900087ec:	bf08      	it	eq
900087ee:	f043 0301 	orreq.w	r3, r3, #1
900087f2:	f504 745c 	add.w	r4, r4, #880	@ 0x370
900087f6:	428a      	cmp	r2, r1
900087f8:	bf08      	it	eq
900087fa:	f043 0301 	orreq.w	r3, r3, #1
900087fe:	3130      	adds	r1, #48	@ 0x30
90008800:	42a2      	cmp	r2, r4
90008802:	bf08      	it	eq
90008804:	f043 0301 	orreq.w	r3, r3, #1
90008808:	3430      	adds	r4, #48	@ 0x30
9000880a:	428a      	cmp	r2, r1
9000880c:	bf08      	it	eq
9000880e:	f043 0301 	orreq.w	r3, r3, #1
90008812:	3130      	adds	r1, #48	@ 0x30
90008814:	42a2      	cmp	r2, r4
90008816:	bf08      	it	eq
90008818:	f043 0301 	orreq.w	r3, r3, #1
9000881c:	3430      	adds	r4, #48	@ 0x30
9000881e:	428a      	cmp	r2, r1
90008820:	bf08      	it	eq
90008822:	f043 0301 	orreq.w	r3, r3, #1
90008826:	3130      	adds	r1, #48	@ 0x30
90008828:	42a2      	cmp	r2, r4
9000882a:	bf08      	it	eq
9000882c:	f043 0301 	orreq.w	r3, r3, #1
90008830:	428a      	cmp	r2, r1
90008832:	bf08      	it	eq
90008834:	f043 0301 	orreq.w	r3, r3, #1
90008838:	b913      	cbnz	r3, 90008840 <HAL_DMA_Abort_IT+0xb0>
9000883a:	4b34      	ldr	r3, [pc, #208]	@ (9000890c <HAL_DMA_Abort_IT+0x17c>)
9000883c:	429a      	cmp	r2, r3
9000883e:	d10e      	bne.n	9000885e <HAL_DMA_Abort_IT+0xce>
    {
      /* Set Abort State  */
      hdma->State = HAL_DMA_STATE_ABORT;
90008840:	2304      	movs	r3, #4
90008842:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35

      /* Disable the stream */
      __HAL_DMA_DISABLE(hdma);
90008846:	6813      	ldr	r3, [r2, #0]
90008848:	f023 0301 	bic.w	r3, r3, #1
9000884c:	6013      	str	r3, [r2, #0]
        hdma->XferAbortCallback(hdma);
      }
    }
  }

  return HAL_OK;
9000884e:	2000      	movs	r0, #0
}
90008850:	bd38      	pop	{r3, r4, r5, pc}
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
90008852:	2380      	movs	r3, #128	@ 0x80
90008854:	6543      	str	r3, [r0, #84]	@ 0x54
    return HAL_ERROR;
90008856:	2001      	movs	r0, #1
}
90008858:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
9000885a:	2001      	movs	r0, #1
}
9000885c:	4770      	bx	lr
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
9000885e:	4b2c      	ldr	r3, [pc, #176]	@ (90008910 <HAL_DMA_Abort_IT+0x180>)
90008860:	4d2c      	ldr	r5, [pc, #176]	@ (90008914 <HAL_DMA_Abort_IT+0x184>)
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
90008862:	6811      	ldr	r1, [r2, #0]
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
90008864:	42aa      	cmp	r2, r5
90008866:	bf18      	it	ne
90008868:	429a      	cmpne	r2, r3
9000886a:	4c2b      	ldr	r4, [pc, #172]	@ (90008918 <HAL_DMA_Abort_IT+0x188>)
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
9000886c:	f021 010e 	bic.w	r1, r1, #14
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
90008870:	f105 053c 	add.w	r5, r5, #60	@ 0x3c
90008874:	bf0c      	ite	eq
90008876:	2301      	moveq	r3, #1
90008878:	2300      	movne	r3, #0
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
9000887a:	6011      	str	r1, [r2, #0]
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
9000887c:	42a2      	cmp	r2, r4
9000887e:	bf08      	it	eq
90008880:	f043 0301 	orreq.w	r3, r3, #1
      __HAL_DMA_DISABLE(hdma);
90008884:	6811      	ldr	r1, [r2, #0]
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
90008886:	3428      	adds	r4, #40	@ 0x28
90008888:	42aa      	cmp	r2, r5
9000888a:	bf08      	it	eq
9000888c:	f043 0301 	orreq.w	r3, r3, #1
      __HAL_DMA_DISABLE(hdma);
90008890:	f021 0101 	bic.w	r1, r1, #1
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
90008894:	42a2      	cmp	r2, r4
90008896:	bf08      	it	eq
90008898:	f043 0301 	orreq.w	r3, r3, #1
9000889c:	3414      	adds	r4, #20
      __HAL_DMA_DISABLE(hdma);
9000889e:	6011      	str	r1, [r2, #0]
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
900088a0:	42a2      	cmp	r2, r4
900088a2:	bf08      	it	eq
900088a4:	f043 0301 	orreq.w	r3, r3, #1
900088a8:	491c      	ldr	r1, [pc, #112]	@ (9000891c <HAL_DMA_Abort_IT+0x18c>)
900088aa:	428a      	cmp	r2, r1
900088ac:	bf08      	it	eq
900088ae:	f043 0301 	orreq.w	r3, r3, #1
900088b2:	b913      	cbnz	r3, 900088ba <HAL_DMA_Abort_IT+0x12a>
900088b4:	4b1a      	ldr	r3, [pc, #104]	@ (90008920 <HAL_DMA_Abort_IT+0x190>)
900088b6:	429a      	cmp	r2, r3
900088b8:	d117      	bne.n	900088ea <HAL_DMA_Abort_IT+0x15a>
        regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
900088ba:	2301      	movs	r3, #1
        regs_bdma = (BDMA_Base_Registers *)hdma->StreamBaseAddress;
900088bc:	6d85      	ldr	r5, [r0, #88]	@ 0x58
        regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
900088be:	e9d0 1417 	ldrd	r1, r4, [r0, #92]	@ 0x5c
        hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
900088c2:	6822      	ldr	r2, [r4, #0]
        regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
900088c4:	f001 011f 	and.w	r1, r1, #31
        hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
900088c8:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
        regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
900088cc:	408b      	lsls	r3, r1
        hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
900088ce:	6022      	str	r2, [r4, #0]
        regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
900088d0:	606b      	str	r3, [r5, #4]
        if(hdma->DMAmuxRequestGen != 0U)
900088d2:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
        hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
900088d4:	e9d0 2119 	ldrd	r2, r1, [r0, #100]	@ 0x64
900088d8:	6051      	str	r1, [r2, #4]
        if(hdma->DMAmuxRequestGen != 0U)
900088da:	b133      	cbz	r3, 900088ea <HAL_DMA_Abort_IT+0x15a>
          hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
900088dc:	681a      	ldr	r2, [r3, #0]
          hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
900088de:	e9d0 141c 	ldrd	r1, r4, [r0, #112]	@ 0x70
          hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
900088e2:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
900088e6:	601a      	str	r2, [r3, #0]
          hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
900088e8:	604c      	str	r4, [r1, #4]
      hdma->State = HAL_DMA_STATE_READY;
900088ea:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma);
900088ec:	2200      	movs	r2, #0
      if(hdma->XferAbortCallback != NULL)
900088ee:	6d03      	ldr	r3, [r0, #80]	@ 0x50
      hdma->State = HAL_DMA_STATE_READY;
900088f0:	f880 1035 	strb.w	r1, [r0, #53]	@ 0x35
      __HAL_UNLOCK(hdma);
900088f4:	f880 2034 	strb.w	r2, [r0, #52]	@ 0x34
      if(hdma->XferAbortCallback != NULL)
900088f8:	2b00      	cmp	r3, #0
900088fa:	d0a8      	beq.n	9000884e <HAL_DMA_Abort_IT+0xbe>
        hdma->XferAbortCallback(hdma);
900088fc:	4798      	blx	r3
900088fe:	e7a6      	b.n	9000884e <HAL_DMA_Abort_IT+0xbe>
90008900:	40020010 	.word	0x40020010
90008904:	40020028 	.word	0x40020028
90008908:	40020040 	.word	0x40020040
9000890c:	400204b8 	.word	0x400204b8
90008910:	5802541c 	.word	0x5802541c
90008914:	58025408 	.word	0x58025408
90008918:	58025430 	.word	0x58025430
9000891c:	58025480 	.word	0x58025480
90008920:	58025494 	.word	0x58025494

90008924 <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
90008924:	2800      	cmp	r0, #0
90008926:	d035      	beq.n	90008994 <HAL_DMA2D_Init+0x70>
{
90008928:	b538      	push	{r3, r4, r5, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
9000892a:	f890 3061 	ldrb.w	r3, [r0, #97]	@ 0x61
9000892e:	4604      	mov	r4, r0
90008930:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90008934:	b34b      	cbz	r3, 9000898a <HAL_DMA2D_Init+0x66>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90008936:	6823      	ldr	r3, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90008938:	2002      	movs	r0, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000893a:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000893c:	f884 0061 	strb.w	r0, [r4, #97]	@ 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90008940:	69e1      	ldr	r1, [r4, #28]
90008942:	681d      	ldr	r5, [r3, #0]
90008944:	4814      	ldr	r0, [pc, #80]	@ (90008998 <HAL_DMA2D_Init+0x74>)
90008946:	4311      	orrs	r1, r2

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90008948:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000894a:	4028      	ands	r0, r5
9000894c:	4301      	orrs	r1, r0
9000894e:	6019      	str	r1, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90008950:	69a1      	ldr	r1, [r4, #24]
90008952:	6b58      	ldr	r0, [r3, #52]	@ 0x34
90008954:	430a      	orrs	r2, r1
90008956:	4911      	ldr	r1, [pc, #68]	@ (9000899c <HAL_DMA2D_Init+0x78>)
90008958:	4001      	ands	r1, r0
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000895a:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000895c:	430a      	orrs	r2, r1
9000895e:	635a      	str	r2, [r3, #52]	@ 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90008960:	6c19      	ldr	r1, [r3, #64]	@ 0x40
90008962:	f36f 010f 	bfc	r1, #0, #16
90008966:	4301      	orrs	r1, r0
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90008968:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000896c:	6419      	str	r1, [r3, #64]	@ 0x40
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000896e:	0552      	lsls	r2, r2, #21
90008970:	6b59      	ldr	r1, [r3, #52]	@ 0x34
90008972:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
90008976:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
9000897a:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000897c:	430a      	orrs	r2, r1
9000897e:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90008980:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
90008982:	6660      	str	r0, [r4, #100]	@ 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90008984:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61

  return HAL_OK;
}
90008988:	bd38      	pop	{r3, r4, r5, pc}
    hdma2d->Lock = HAL_UNLOCKED;
9000898a:	f880 2060 	strb.w	r2, [r0, #96]	@ 0x60
    HAL_DMA2D_MspInit(hdma2d);
9000898e:	f7fb fc1d 	bl	900041cc <HAL_DMA2D_MspInit>
90008992:	e7d0      	b.n	90008936 <HAL_DMA2D_Init+0x12>
    return HAL_ERROR;
90008994:	2001      	movs	r0, #1
}
90008996:	4770      	bx	lr
90008998:	fff8ffbf 	.word	0xfff8ffbf
9000899c:	fffffef8 	.word	0xfffffef8

900089a0 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
900089a0:	4770      	bx	lr
900089a2:	bf00      	nop

900089a4 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
900089a4:	4770      	bx	lr
900089a6:	bf00      	nop

900089a8 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
900089a8:	6803      	ldr	r3, [r0, #0]
{
900089aa:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
900089ac:	685d      	ldr	r5, [r3, #4]
{
900089ae:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
900089b0:	681e      	ldr	r6, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
900089b2:	07ea      	lsls	r2, r5, #31
900089b4:	d501      	bpl.n	900089ba <HAL_DMA2D_IRQHandler+0x12>
    if ((crflags & DMA2D_IT_TE) != 0U)
900089b6:	05f1      	lsls	r1, r6, #23
900089b8:	d456      	bmi.n	90008a68 <HAL_DMA2D_IRQHandler+0xc0>
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
900089ba:	06aa      	lsls	r2, r5, #26
900089bc:	d501      	bpl.n	900089c2 <HAL_DMA2D_IRQHandler+0x1a>
    if ((crflags & DMA2D_IT_CE) != 0U)
900089be:	04b3      	lsls	r3, r6, #18
900089c0:	d43b      	bmi.n	90008a3a <HAL_DMA2D_IRQHandler+0x92>
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
900089c2:	0728      	lsls	r0, r5, #28
900089c4:	d501      	bpl.n	900089ca <HAL_DMA2D_IRQHandler+0x22>
    if ((crflags & DMA2D_IT_CAE) != 0U)
900089c6:	0531      	lsls	r1, r6, #20
900089c8:	d421      	bmi.n	90008a0e <HAL_DMA2D_IRQHandler+0x66>
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
900089ca:	076a      	lsls	r2, r5, #29
900089cc:	d501      	bpl.n	900089d2 <HAL_DMA2D_IRQHandler+0x2a>
    if ((crflags & DMA2D_IT_TW) != 0U)
900089ce:	0573      	lsls	r3, r6, #21
900089d0:	d472      	bmi.n	90008ab8 <HAL_DMA2D_IRQHandler+0x110>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
900089d2:	07a8      	lsls	r0, r5, #30
900089d4:	d501      	bpl.n	900089da <HAL_DMA2D_IRQHandler+0x32>
    if ((crflags & DMA2D_IT_TC) != 0U)
900089d6:	05b1      	lsls	r1, r6, #22
900089d8:	d404      	bmi.n	900089e4 <HAL_DMA2D_IRQHandler+0x3c>
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
900089da:	06ea      	lsls	r2, r5, #27
900089dc:	d501      	bpl.n	900089e2 <HAL_DMA2D_IRQHandler+0x3a>
    if ((crflags & DMA2D_IT_CTC) != 0U)
900089de:	04f3      	lsls	r3, r6, #19
900089e0:	d457      	bmi.n	90008a92 <HAL_DMA2D_IRQHandler+0xea>
}
900089e2:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
900089e4:	6823      	ldr	r3, [r4, #0]
900089e6:	681a      	ldr	r2, [r3, #0]
900089e8:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
900089ec:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
900089ee:	2202      	movs	r2, #2
900089f0:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_READY;
900089f2:	2201      	movs	r2, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
900089f4:	6e63      	ldr	r3, [r4, #100]	@ 0x64
900089f6:	6663      	str	r3, [r4, #100]	@ 0x64
      __HAL_UNLOCK(hdma2d);
900089f8:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_READY;
900089fa:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
900089fe:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      if (hdma2d->XferCpltCallback != NULL)
90008a02:	6a23      	ldr	r3, [r4, #32]
90008a04:	2b00      	cmp	r3, #0
90008a06:	d0e8      	beq.n	900089da <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
90008a08:	4620      	mov	r0, r4
90008a0a:	4798      	blx	r3
90008a0c:	e7e5      	b.n	900089da <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
90008a0e:	6823      	ldr	r3, [r4, #0]
90008a10:	681a      	ldr	r2, [r3, #0]
90008a12:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
90008a16:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
90008a18:	2208      	movs	r2, #8
90008a1a:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90008a1c:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
90008a1e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
90008a20:	4313      	orrs	r3, r2
90008a22:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90008a24:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
90008a28:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
90008a2a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      __HAL_UNLOCK(hdma2d);
90008a2c:	f884 2060 	strb.w	r2, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
90008a30:	2b00      	cmp	r3, #0
90008a32:	d0ca      	beq.n	900089ca <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
90008a34:	4620      	mov	r0, r4
90008a36:	4798      	blx	r3
90008a38:	e7c7      	b.n	900089ca <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
90008a3a:	6823      	ldr	r3, [r4, #0]
90008a3c:	681a      	ldr	r2, [r3, #0]
90008a3e:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
90008a42:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
90008a44:	2220      	movs	r2, #32
90008a46:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90008a48:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
90008a4a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
90008a4c:	f043 0302 	orr.w	r3, r3, #2
90008a50:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90008a52:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
90008a56:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
90008a58:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      __HAL_UNLOCK(hdma2d);
90008a5a:	f884 2060 	strb.w	r2, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
90008a5e:	2b00      	cmp	r3, #0
90008a60:	d0af      	beq.n	900089c2 <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
90008a62:	4620      	mov	r0, r4
90008a64:	4798      	blx	r3
90008a66:	e7ac      	b.n	900089c2 <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
90008a68:	681a      	ldr	r2, [r3, #0]
90008a6a:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
90008a6e:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
90008a70:	6e42      	ldr	r2, [r0, #100]	@ 0x64
90008a72:	f042 0201 	orr.w	r2, r2, #1
90008a76:	6642      	str	r2, [r0, #100]	@ 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
90008a78:	2201      	movs	r2, #1
90008a7a:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90008a7c:	2304      	movs	r3, #4
90008a7e:	f880 3061 	strb.w	r3, [r0, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
90008a82:	2300      	movs	r3, #0
90008a84:	f880 3060 	strb.w	r3, [r0, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
90008a88:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90008a8a:	2b00      	cmp	r3, #0
90008a8c:	d095      	beq.n	900089ba <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
90008a8e:	4798      	blx	r3
90008a90:	e793      	b.n	900089ba <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
90008a92:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90008a94:	2010      	movs	r0, #16
      hdma2d->State = HAL_DMA2D_STATE_READY;
90008a96:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
90008a98:	2500      	movs	r5, #0
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
90008a9a:	681a      	ldr	r2, [r3, #0]
90008a9c:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
90008aa0:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90008aa2:	6098      	str	r0, [r3, #8]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90008aa4:	4620      	mov	r0, r4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90008aa6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
      __HAL_UNLOCK(hdma2d);
90008aa8:	f884 5060 	strb.w	r5, [r4, #96]	@ 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90008aac:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
90008aae:	f884 1061 	strb.w	r1, [r4, #97]	@ 0x61
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90008ab2:	f7ff ff77 	bl	900089a4 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
90008ab6:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90008ab8:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
90008aba:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90008abc:	681a      	ldr	r2, [r3, #0]
90008abe:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
90008ac2:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
90008ac4:	2204      	movs	r2, #4
90008ac6:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
90008ac8:	f7ff ff6a 	bl	900089a0 <HAL_DMA2D_LineEventCallback>
90008acc:	e781      	b.n	900089d2 <HAL_DMA2D_IRQHandler+0x2a>
90008ace:	bf00      	nop

90008ad0 <HAL_DMA2D_ConfigLayer>:
  {
    assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
90008ad0:	f890 2060 	ldrb.w	r2, [r0, #96]	@ 0x60
90008ad4:	2a01      	cmp	r2, #1
90008ad6:	d05f      	beq.n	90008b98 <HAL_DMA2D_ConfigLayer+0xc8>
90008ad8:	4603      	mov	r3, r0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008ada:	ebc1 00c1 	rsb	r0, r1, r1, lsl #3
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90008ade:	2202      	movs	r2, #2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008ae0:	ea4f 0cc1 	mov.w	ip, r1, lsl #3
90008ae4:	eb03 0080 	add.w	r0, r3, r0, lsl #2
{
90008ae8:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(hdma2d);
90008aea:	2401      	movs	r4, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90008aec:	f883 2061 	strb.w	r2, [r3, #97]	@ 0x61
  __HAL_LOCK(hdma2d);
90008af0:	f883 4060 	strb.w	r4, [r3, #96]	@ 0x60
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90008af4:	6b82      	ldr	r2, [r0, #56]	@ 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008af6:	6b04      	ldr	r4, [r0, #48]	@ 0x30
90008af8:	6ac5      	ldr	r5, [r0, #44]	@ 0x2c
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90008afa:	0512      	lsls	r2, r2, #20
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
90008afc:	6b46      	ldr	r6, [r0, #52]	@ 0x34
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008afe:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90008b02:	f1a5 0e09 	sub.w	lr, r5, #9
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90008b06:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008b08:	432a      	orrs	r2, r5
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90008b0a:	f1be 0f01 	cmp.w	lr, #1
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008b0e:	ea42 5244 	orr.w	r2, r2, r4, lsl #21

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008b12:	681c      	ldr	r4, [r3, #0]
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90008b14:	d923      	bls.n	90008b5e <HAL_DMA2D_ConfigLayer+0x8e>
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
90008b16:	ea42 6206 	orr.w	r2, r2, r6, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90008b1a:	b971      	cbnz	r1, 90008b3a <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008b1c:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90008b1e:	491f      	ldr	r1, [pc, #124]	@ (90008b9c <HAL_DMA2D_ConfigLayer+0xcc>)
90008b20:	4001      	ands	r1, r0

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90008b22:	6a98      	ldr	r0, [r3, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008b24:	4311      	orrs	r1, r2
90008b26:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90008b28:	61a0      	str	r0, [r4, #24]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
90008b2a:	2200      	movs	r2, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
90008b2c:	2101      	movs	r1, #1

  return HAL_OK;
90008b2e:	4610      	mov	r0, r2
  hdma2d->State = HAL_DMA2D_STATE_READY;
90008b30:	f883 1061 	strb.w	r1, [r3, #97]	@ 0x61
  __HAL_UNLOCK(hdma2d);
90008b34:	f883 2060 	strb.w	r2, [r3, #96]	@ 0x60
}
90008b38:	bd70      	pop	{r4, r5, r6, pc}
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
90008b3a:	2d0b      	cmp	r5, #11
90008b3c:	d12a      	bne.n	90008b94 <HAL_DMA2D_ConfigLayer+0xc4>
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
90008b3e:	6c00      	ldr	r0, [r0, #64]	@ 0x40
90008b40:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
90008b44:	4816      	ldr	r0, [pc, #88]	@ (90008ba0 <HAL_DMA2D_ConfigLayer+0xd0>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008b46:	ebac 0c01 	sub.w	ip, ip, r1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008b4a:	69e1      	ldr	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008b4c:	eb03 0c8c 	add.w	ip, r3, ip, lsl #2
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008b50:	4001      	ands	r1, r0
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008b52:	f8dc 5028 	ldr.w	r5, [ip, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008b56:	430a      	orrs	r2, r1
90008b58:	61e2      	str	r2, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008b5a:	6125      	str	r5, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90008b5c:	e7e5      	b.n	90008b2a <HAL_DMA2D_ConfigLayer+0x5a>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
90008b5e:	f006 457f 	and.w	r5, r6, #4278190080	@ 0xff000000
90008b62:	432a      	orrs	r2, r5
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90008b64:	b959      	cbnz	r1, 90008b7e <HAL_DMA2D_ConfigLayer+0xae>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008b66:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90008b68:	490c      	ldr	r1, [pc, #48]	@ (90008b9c <HAL_DMA2D_ConfigLayer+0xcc>)
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90008b6a:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008b6c:	4001      	ands	r1, r0
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90008b6e:	6b58      	ldr	r0, [r3, #52]	@ 0x34
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008b70:	4311      	orrs	r1, r2
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90008b72:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008b76:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90008b78:	61a5      	str	r5, [r4, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90008b7a:	62a0      	str	r0, [r4, #40]	@ 0x28
90008b7c:	e7d5      	b.n	90008b2a <HAL_DMA2D_ConfigLayer+0x5a>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008b7e:	69e5      	ldr	r5, [r4, #28]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90008b80:	f026 467f 	bic.w	r6, r6, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008b84:	4905      	ldr	r1, [pc, #20]	@ (90008b9c <HAL_DMA2D_ConfigLayer+0xcc>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008b86:	6a80      	ldr	r0, [r0, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008b88:	4029      	ands	r1, r5
90008b8a:	4311      	orrs	r1, r2
90008b8c:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008b8e:	6120      	str	r0, [r4, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90008b90:	6226      	str	r6, [r4, #32]
90008b92:	e7ca      	b.n	90008b2a <HAL_DMA2D_ConfigLayer+0x5a>
90008b94:	4801      	ldr	r0, [pc, #4]	@ (90008b9c <HAL_DMA2D_ConfigLayer+0xcc>)
90008b96:	e7d6      	b.n	90008b46 <HAL_DMA2D_ConfigLayer+0x76>
  __HAL_LOCK(hdma2d);
90008b98:	2002      	movs	r0, #2
}
90008b9a:	4770      	bx	lr
90008b9c:	00ccfff0 	.word	0x00ccfff0
90008ba0:	00c0fff0 	.word	0x00c0fff0

90008ba4 <HAL_GPIO_Init>:
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90008ba4:	680b      	ldr	r3, [r1, #0]
90008ba6:	2b00      	cmp	r3, #0
90008ba8:	f000 81dc 	beq.w	90008f64 <HAL_GPIO_Init+0x3c0>
90008bac:	4ab4      	ldr	r2, [pc, #720]	@ (90008e80 <HAL_GPIO_Init+0x2dc>)
90008bae:	4290      	cmp	r0, r2
  uint32_t position = 0x00U;
90008bb0:	f04f 0200 	mov.w	r2, #0
{
90008bb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
90008bb8:	f04f 0b01 	mov.w	fp, #1
{
90008bbc:	b085      	sub	sp, #20
90008bbe:	f000 8105 	beq.w	90008dcc <HAL_GPIO_Init+0x228>
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
90008bc2:	f04f 4eb0 	mov.w	lr, #1476395008	@ 0x58000000
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90008bc6:	9300      	str	r3, [sp, #0]
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
90008bc8:	fa0b fc02 	lsl.w	ip, fp, r2
    if (iocurrent != 0x00U)
90008bcc:	9b00      	ldr	r3, [sp, #0]
90008bce:	ea1c 0a03 	ands.w	sl, ip, r3
90008bd2:	f000 814b 	beq.w	90008e6c <HAL_GPIO_Init+0x2c8>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90008bd6:	684d      	ldr	r5, [r1, #4]
90008bd8:	0054      	lsls	r4, r2, #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008bda:	2303      	movs	r3, #3
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90008bdc:	f005 0703 	and.w	r7, r5, #3
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008be0:	fa03 f604 	lsl.w	r6, r3, r4
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90008be4:	f107 38ff 	add.w	r8, r7, #4294967295
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008be8:	43f6      	mvns	r6, r6
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90008bea:	f1b8 0f01 	cmp.w	r8, #1
90008bee:	f240 815d 	bls.w	90008eac <HAL_GPIO_Init+0x308>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
90008bf2:	2f03      	cmp	r7, #3
90008bf4:	f040 81cf 	bne.w	90008f96 <HAL_GPIO_Init+0x3f2>
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
90008bf8:	fa07 f404 	lsl.w	r4, r7, r4
      temp = GPIOx->MODER;
90008bfc:	6807      	ldr	r7, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
90008bfe:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
90008c02:	ea06 0607 	and.w	r6, r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
90008c06:	ea44 0406 	orr.w	r4, r4, r6
      GPIOx->MODER = temp;
90008c0a:	6004      	str	r4, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
90008c0c:	f000 812e 	beq.w	90008e6c <HAL_GPIO_Init+0x2c8>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008c10:	4e9c      	ldr	r6, [pc, #624]	@ (90008e84 <HAL_GPIO_Init+0x2e0>)
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008c12:	f002 0703 	and.w	r7, r2, #3
90008c16:	230f      	movs	r3, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008c18:	f8d6 40f4 	ldr.w	r4, [r6, #244]	@ 0xf4
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008c1c:	00bf      	lsls	r7, r7, #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008c1e:	f044 0402 	orr.w	r4, r4, #2
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008c22:	fa03 fc07 	lsl.w	ip, r3, r7
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90008c26:	4b98      	ldr	r3, [pc, #608]	@ (90008e88 <HAL_GPIO_Init+0x2e4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008c28:	f8c6 40f4 	str.w	r4, [r6, #244]	@ 0xf4
90008c2c:	f8d6 40f4 	ldr.w	r4, [r6, #244]	@ 0xf4
90008c30:	f022 0603 	bic.w	r6, r2, #3
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90008c34:	4298      	cmp	r0, r3
90008c36:	f106 46b0 	add.w	r6, r6, #1476395008	@ 0x58000000
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008c3a:	f004 0402 	and.w	r4, r4, #2
90008c3e:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
90008c42:	9403      	str	r4, [sp, #12]
90008c44:	9c03      	ldr	r4, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
90008c46:	68b4      	ldr	r4, [r6, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008c48:	ea24 040c 	bic.w	r4, r4, ip
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90008c4c:	f000 8178 	beq.w	90008f40 <HAL_GPIO_Init+0x39c>
90008c50:	4b8e      	ldr	r3, [pc, #568]	@ (90008e8c <HAL_GPIO_Init+0x2e8>)
90008c52:	4298      	cmp	r0, r3
90008c54:	f000 80de 	beq.w	90008e14 <HAL_GPIO_Init+0x270>
90008c58:	f8df c234 	ldr.w	ip, [pc, #564]	@ 90008e90 <HAL_GPIO_Init+0x2ec>
90008c5c:	4560      	cmp	r0, ip
90008c5e:	f000 817b 	beq.w	90008f58 <HAL_GPIO_Init+0x3b4>
90008c62:	f8df c230 	ldr.w	ip, [pc, #560]	@ 90008e94 <HAL_GPIO_Init+0x2f0>
90008c66:	4560      	cmp	r0, ip
90008c68:	f000 817d 	beq.w	90008f66 <HAL_GPIO_Init+0x3c2>
90008c6c:	f8df c228 	ldr.w	ip, [pc, #552]	@ 90008e98 <HAL_GPIO_Init+0x2f4>
90008c70:	4560      	cmp	r0, ip
90008c72:	f000 816b 	beq.w	90008f4c <HAL_GPIO_Init+0x3a8>
90008c76:	f8df c224 	ldr.w	ip, [pc, #548]	@ 90008e9c <HAL_GPIO_Init+0x2f8>
90008c7a:	4560      	cmp	r0, ip
90008c7c:	f000 8179 	beq.w	90008f72 <HAL_GPIO_Init+0x3ce>
90008c80:	f8df c21c 	ldr.w	ip, [pc, #540]	@ 90008ea0 <HAL_GPIO_Init+0x2fc>
90008c84:	4560      	cmp	r0, ip
90008c86:	f000 817a 	beq.w	90008f7e <HAL_GPIO_Init+0x3da>
90008c8a:	f8df c218 	ldr.w	ip, [pc, #536]	@ 90008ea4 <HAL_GPIO_Init+0x300>
90008c8e:	4560      	cmp	r0, ip
90008c90:	f000 817b 	beq.w	90008f8a <HAL_GPIO_Init+0x3e6>
90008c94:	f8df c210 	ldr.w	ip, [pc, #528]	@ 90008ea8 <HAL_GPIO_Init+0x304>
90008c98:	4560      	cmp	r0, ip
90008c9a:	bf0c      	ite	eq
90008c9c:	f04f 0c09 	moveq.w	ip, #9
90008ca0:	f04f 0c0a 	movne.w	ip, #10
90008ca4:	fa0c f707 	lsl.w	r7, ip, r7
90008ca8:	433c      	orrs	r4, r7
90008caa:	e0b8      	b.n	90008e1e <HAL_GPIO_Init+0x27a>
        temp = GPIOx->OSPEEDR;
90008cac:	f8d0 9008 	ldr.w	r9, [r0, #8]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90008cb0:	2c02      	cmp	r4, #2
        temp |= (GPIO_Init->Speed << (position * 2U));
90008cb2:	68ce      	ldr	r6, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008cb4:	ea0a 0909 	and.w	r9, sl, r9
        temp |= (GPIO_Init->Speed << (position * 2U));
90008cb8:	fa06 f807 	lsl.w	r8, r6, r7
90008cbc:	ea48 0809 	orr.w	r8, r8, r9
        GPIOx->OSPEEDR = temp;
90008cc0:	f8c0 8008 	str.w	r8, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90008cc4:	f3c5 1800 	ubfx	r8, r5, #4, #1
        temp = GPIOx->OTYPER;
90008cc8:	f8d0 9004 	ldr.w	r9, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90008ccc:	fa08 f802 	lsl.w	r8, r8, r2
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
90008cd0:	ea29 0e0e 	bic.w	lr, r9, lr
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90008cd4:	ea48 0e0e 	orr.w	lr, r8, lr
        GPIOx->OTYPER = temp;
90008cd8:	f8c0 e004 	str.w	lr, [r0, #4]
      temp = GPIOx->PUPDR;
90008cdc:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008ce0:	688e      	ldr	r6, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90008ce2:	ea0a 0808 	and.w	r8, sl, r8
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008ce6:	fa06 fe07 	lsl.w	lr, r6, r7
90008cea:	ea4e 0e08 	orr.w	lr, lr, r8
      GPIOx->PUPDR = temp;
90008cee:	f8c0 e00c 	str.w	lr, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90008cf2:	d117      	bne.n	90008d24 <HAL_GPIO_Init+0x180>
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90008cf4:	f002 0e07 	and.w	lr, r2, #7
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90008cf8:	690e      	ldr	r6, [r1, #16]
        temp = GPIOx->AFR[position >> 3U];
90008cfa:	ea4f 08d2 	mov.w	r8, r2, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90008cfe:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
90008d02:	eb00 0888 	add.w	r8, r0, r8, lsl #2
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90008d06:	fa06 f60e 	lsl.w	r6, r6, lr
        temp = GPIOx->AFR[position >> 3U];
90008d0a:	f8d8 9020 	ldr.w	r9, [r8, #32]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90008d0e:	9600      	str	r6, [sp, #0]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90008d10:	260f      	movs	r6, #15
90008d12:	fa06 fe0e 	lsl.w	lr, r6, lr
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90008d16:	9e00      	ldr	r6, [sp, #0]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90008d18:	ea29 090e 	bic.w	r9, r9, lr
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90008d1c:	ea46 0e09 	orr.w	lr, r6, r9
        GPIOx->AFR[position >> 3U] = temp;
90008d20:	f8c8 e020 	str.w	lr, [r8, #32]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
90008d24:	40bc      	lsls	r4, r7
      temp = GPIOx->MODER;
90008d26:	6807      	ldr	r7, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
90008d28:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
90008d2c:	ea07 070a 	and.w	r7, r7, sl
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
90008d30:	ea44 0407 	orr.w	r4, r4, r7
      GPIOx->MODER = temp;
90008d34:	6004      	str	r4, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
90008d36:	d045      	beq.n	90008dc4 <HAL_GPIO_Init+0x220>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008d38:	4f52      	ldr	r7, [pc, #328]	@ (90008e84 <HAL_GPIO_Init+0x2e0>)
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008d3a:	260f      	movs	r6, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008d3c:	f8d7 40f4 	ldr.w	r4, [r7, #244]	@ 0xf4
90008d40:	f044 0402 	orr.w	r4, r4, #2
90008d44:	f8c7 40f4 	str.w	r4, [r7, #244]	@ 0xf4
90008d48:	f8d7 40f4 	ldr.w	r4, [r7, #244]	@ 0xf4
90008d4c:	f022 0703 	bic.w	r7, r2, #3
90008d50:	f004 0402 	and.w	r4, r4, #2
90008d54:	f107 47b0 	add.w	r7, r7, #1476395008	@ 0x58000000
90008d58:	9403      	str	r4, [sp, #12]
90008d5a:	f507 6780 	add.w	r7, r7, #1024	@ 0x400
90008d5e:	9c03      	ldr	r4, [sp, #12]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008d60:	f002 0403 	and.w	r4, r2, #3
        temp = SYSCFG->EXTICR[position >> 2U];
90008d64:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008d68:	00a4      	lsls	r4, r4, #2
90008d6a:	fa06 f404 	lsl.w	r4, r6, r4
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
90008d6e:	02ee      	lsls	r6, r5, #11
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008d70:	ea2e 0404 	bic.w	r4, lr, r4
        SYSCFG->EXTICR[position >> 2U] = temp;
90008d74:	60bc      	str	r4, [r7, #8]
        temp = EXTI->RTSR1;
90008d76:	f04f 44b0 	mov.w	r4, #1476395008	@ 0x58000000
        temp &= ~(iocurrent);
90008d7a:	ea6f 070c 	mvn.w	r7, ip
        temp = EXTI->RTSR1;
90008d7e:	6824      	ldr	r4, [r4, #0]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
90008d80:	f100 80d2 	bmi.w	90008f28 <HAL_GPIO_Init+0x384>
        temp &= ~(iocurrent);
90008d84:	403c      	ands	r4, r7
        {
          temp |= iocurrent;
        }
        EXTI->RTSR1 = temp;
90008d86:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
90008d8a:	6034      	str	r4, [r6, #0]

        temp = EXTI->FTSR1;
90008d8c:	6874      	ldr	r4, [r6, #4]
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
90008d8e:	02ae      	lsls	r6, r5, #10
90008d90:	f100 80d3 	bmi.w	90008f3a <HAL_GPIO_Init+0x396>
        temp &= ~(iocurrent);
90008d94:	403c      	ands	r4, r7
        {
          temp |= iocurrent;
        }
        EXTI->FTSR1 = temp;
90008d96:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
90008d9a:	6074      	str	r4, [r6, #4]

        temp = EXTI_CurrentCPU->EMR1;
90008d9c:	f8d6 4084 	ldr.w	r4, [r6, #132]	@ 0x84
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
90008da0:	03ae      	lsls	r6, r5, #14
90008da2:	f100 80c7 	bmi.w	90008f34 <HAL_GPIO_Init+0x390>
        temp &= ~(iocurrent);
90008da6:	403c      	ands	r4, r7
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->EMR1 = temp;
90008da8:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
90008dac:	03ed      	lsls	r5, r5, #15
        EXTI_CurrentCPU->EMR1 = temp;
90008dae:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
        temp = EXTI_CurrentCPU->IMR1;
90008db2:	f8d6 4080 	ldr.w	r4, [r6, #128]	@ 0x80
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
90008db6:	f100 80ba 	bmi.w	90008f2e <HAL_GPIO_Init+0x38a>
        temp &= ~(iocurrent);
90008dba:	403c      	ands	r4, r7
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->IMR1 = temp;
90008dbc:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
90008dc0:	f8c5 4080 	str.w	r4, [r5, #128]	@ 0x80
      }
    }

    position++;
90008dc4:	3201      	adds	r2, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90008dc6:	fa33 f402 	lsrs.w	r4, r3, r2
90008dca:	d055      	beq.n	90008e78 <HAL_GPIO_Init+0x2d4>
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
90008dcc:	fa0b fe02 	lsl.w	lr, fp, r2
    if (iocurrent != 0x00U)
90008dd0:	ea13 0c0e 	ands.w	ip, r3, lr
90008dd4:	d0f6      	beq.n	90008dc4 <HAL_GPIO_Init+0x220>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90008dd6:	684d      	ldr	r5, [r1, #4]
90008dd8:	0057      	lsls	r7, r2, #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008dda:	2603      	movs	r6, #3
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90008ddc:	f005 0403 	and.w	r4, r5, #3
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008de0:	fa06 f807 	lsl.w	r8, r6, r7
90008de4:	ea6f 0a08 	mvn.w	sl, r8
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90008de8:	f104 38ff 	add.w	r8, r4, #4294967295
90008dec:	f1b8 0f01 	cmp.w	r8, #1
90008df0:	f67f af5c 	bls.w	90008cac <HAL_GPIO_Init+0x108>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
90008df4:	2c03      	cmp	r4, #3
90008df6:	d095      	beq.n	90008d24 <HAL_GPIO_Init+0x180>
      temp = GPIOx->PUPDR;
90008df8:	f8df 8084 	ldr.w	r8, [pc, #132]	@ 90008e80 <HAL_GPIO_Init+0x2dc>
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008dfc:	688e      	ldr	r6, [r1, #8]
      temp = GPIOx->PUPDR;
90008dfe:	f8d8 900c 	ldr.w	r9, [r8, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008e02:	fa06 fe07 	lsl.w	lr, r6, r7
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90008e06:	ea0a 0909 	and.w	r9, sl, r9
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008e0a:	ea4e 0e09 	orr.w	lr, lr, r9
      GPIOx->PUPDR = temp;
90008e0e:	f8c8 e00c 	str.w	lr, [r8, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90008e12:	e787      	b.n	90008d24 <HAL_GPIO_Init+0x180>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90008e14:	f04f 0c02 	mov.w	ip, #2
90008e18:	fa0c f707 	lsl.w	r7, ip, r7
90008e1c:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
90008e1e:	60b4      	str	r4, [r6, #8]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
90008e20:	02ef      	lsls	r7, r5, #11
        temp = EXTI->RTSR1;
90008e22:	f8de 4000 	ldr.w	r4, [lr]
        temp &= ~(iocurrent);
90008e26:	ea6f 060a 	mvn.w	r6, sl
          temp |= iocurrent;
90008e2a:	bf4c      	ite	mi
90008e2c:	ea4a 0404 	orrmi.w	r4, sl, r4
        temp &= ~(iocurrent);
90008e30:	4034      	andpl	r4, r6
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
90008e32:	02ab      	lsls	r3, r5, #10
        EXTI->RTSR1 = temp;
90008e34:	f8ce 4000 	str.w	r4, [lr]
        temp = EXTI->FTSR1;
90008e38:	f8de 4004 	ldr.w	r4, [lr, #4]
        temp &= ~(iocurrent);
90008e3c:	bf54      	ite	pl
90008e3e:	4034      	andpl	r4, r6
          temp |= iocurrent;
90008e40:	ea4a 0404 	orrmi.w	r4, sl, r4
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
90008e44:	03af      	lsls	r7, r5, #14
        EXTI->FTSR1 = temp;
90008e46:	f8ce 4004 	str.w	r4, [lr, #4]
        temp = EXTI_CurrentCPU->EMR1;
90008e4a:	f8de 4084 	ldr.w	r4, [lr, #132]	@ 0x84
        temp &= ~(iocurrent);
90008e4e:	bf54      	ite	pl
90008e50:	4034      	andpl	r4, r6
          temp |= iocurrent;
90008e52:	ea4a 0404 	orrmi.w	r4, sl, r4
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
90008e56:	03eb      	lsls	r3, r5, #15
        EXTI_CurrentCPU->EMR1 = temp;
90008e58:	f8ce 4084 	str.w	r4, [lr, #132]	@ 0x84
        temp = EXTI_CurrentCPU->IMR1;
90008e5c:	f8de 4080 	ldr.w	r4, [lr, #128]	@ 0x80
        temp &= ~(iocurrent);
90008e60:	bf54      	ite	pl
90008e62:	4034      	andpl	r4, r6
          temp |= iocurrent;
90008e64:	ea4a 0404 	orrmi.w	r4, sl, r4
        EXTI_CurrentCPU->IMR1 = temp;
90008e68:	f8ce 4080 	str.w	r4, [lr, #128]	@ 0x80
    position++;
90008e6c:	3201      	adds	r2, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90008e6e:	9b00      	ldr	r3, [sp, #0]
90008e70:	fa33 f402 	lsrs.w	r4, r3, r2
90008e74:	f47f aea8 	bne.w	90008bc8 <HAL_GPIO_Init+0x24>
  }
}
90008e78:	b005      	add	sp, #20
90008e7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90008e7e:	bf00      	nop
90008e80:	58020000 	.word	0x58020000
90008e84:	58024400 	.word	0x58024400
90008e88:	58020400 	.word	0x58020400
90008e8c:	58020800 	.word	0x58020800
90008e90:	58020c00 	.word	0x58020c00
90008e94:	58021000 	.word	0x58021000
90008e98:	58021400 	.word	0x58021400
90008e9c:	58021800 	.word	0x58021800
90008ea0:	58021c00 	.word	0x58021c00
90008ea4:	58022000 	.word	0x58022000
90008ea8:	58022400 	.word	0x58022400
        temp = GPIOx->OSPEEDR;
90008eac:	f8d0 9008 	ldr.w	r9, [r0, #8]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90008eb0:	2f02      	cmp	r7, #2
        temp |= (GPIO_Init->Speed << (position * 2U));
90008eb2:	68cb      	ldr	r3, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008eb4:	ea09 0906 	and.w	r9, r9, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
90008eb8:	fa03 f804 	lsl.w	r8, r3, r4
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008ebc:	688b      	ldr	r3, [r1, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
90008ebe:	ea48 0809 	orr.w	r8, r8, r9
        GPIOx->OSPEEDR = temp;
90008ec2:	f8c0 8008 	str.w	r8, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90008ec6:	f3c5 1800 	ubfx	r8, r5, #4, #1
        temp = GPIOx->OTYPER;
90008eca:	f8d0 9004 	ldr.w	r9, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90008ece:	fa08 f802 	lsl.w	r8, r8, r2
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
90008ed2:	ea29 0c0c 	bic.w	ip, r9, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90008ed6:	ea48 0c0c 	orr.w	ip, r8, ip
        GPIOx->OTYPER = temp;
90008eda:	f8c0 c004 	str.w	ip, [r0, #4]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008ede:	fa03 fc04 	lsl.w	ip, r3, r4
      temp = GPIOx->PUPDR;
90008ee2:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90008ee6:	ea08 0806 	and.w	r8, r8, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008eea:	ea4c 0c08 	orr.w	ip, ip, r8
      GPIOx->PUPDR = temp;
90008eee:	f8c0 c00c 	str.w	ip, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90008ef2:	f47f ae81 	bne.w	90008bf8 <HAL_GPIO_Init+0x54>
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90008ef6:	f002 0c07 	and.w	ip, r2, #7
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90008efa:	690b      	ldr	r3, [r1, #16]
        temp = GPIOx->AFR[position >> 3U];
90008efc:	ea4f 08d2 	mov.w	r8, r2, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90008f00:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
90008f04:	eb00 0888 	add.w	r8, r0, r8, lsl #2
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90008f08:	fa03 f30c 	lsl.w	r3, r3, ip
        temp = GPIOx->AFR[position >> 3U];
90008f0c:	f8d8 9020 	ldr.w	r9, [r8, #32]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90008f10:	9301      	str	r3, [sp, #4]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90008f12:	230f      	movs	r3, #15
90008f14:	fa03 fc0c 	lsl.w	ip, r3, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90008f18:	9b01      	ldr	r3, [sp, #4]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90008f1a:	ea29 090c 	bic.w	r9, r9, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90008f1e:	ea43 0c09 	orr.w	ip, r3, r9
        GPIOx->AFR[position >> 3U] = temp;
90008f22:	f8c8 c020 	str.w	ip, [r8, #32]
90008f26:	e667      	b.n	90008bf8 <HAL_GPIO_Init+0x54>
          temp |= iocurrent;
90008f28:	ea44 040c 	orr.w	r4, r4, ip
90008f2c:	e72b      	b.n	90008d86 <HAL_GPIO_Init+0x1e2>
          temp |= iocurrent;
90008f2e:	ea44 040c 	orr.w	r4, r4, ip
90008f32:	e743      	b.n	90008dbc <HAL_GPIO_Init+0x218>
          temp |= iocurrent;
90008f34:	ea4c 0404 	orr.w	r4, ip, r4
90008f38:	e736      	b.n	90008da8 <HAL_GPIO_Init+0x204>
          temp |= iocurrent;
90008f3a:	ea44 040c 	orr.w	r4, r4, ip
90008f3e:	e72a      	b.n	90008d96 <HAL_GPIO_Init+0x1f2>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90008f40:	f04f 0c01 	mov.w	ip, #1
90008f44:	fa0c f707 	lsl.w	r7, ip, r7
90008f48:	433c      	orrs	r4, r7
90008f4a:	e768      	b.n	90008e1e <HAL_GPIO_Init+0x27a>
90008f4c:	f04f 0c05 	mov.w	ip, #5
90008f50:	fa0c f707 	lsl.w	r7, ip, r7
90008f54:	433c      	orrs	r4, r7
90008f56:	e762      	b.n	90008e1e <HAL_GPIO_Init+0x27a>
90008f58:	f04f 0c03 	mov.w	ip, #3
90008f5c:	fa0c f707 	lsl.w	r7, ip, r7
90008f60:	433c      	orrs	r4, r7
90008f62:	e75c      	b.n	90008e1e <HAL_GPIO_Init+0x27a>
90008f64:	4770      	bx	lr
90008f66:	f04f 0c04 	mov.w	ip, #4
90008f6a:	fa0c f707 	lsl.w	r7, ip, r7
90008f6e:	433c      	orrs	r4, r7
90008f70:	e755      	b.n	90008e1e <HAL_GPIO_Init+0x27a>
90008f72:	f04f 0c06 	mov.w	ip, #6
90008f76:	fa0c f707 	lsl.w	r7, ip, r7
90008f7a:	433c      	orrs	r4, r7
90008f7c:	e74f      	b.n	90008e1e <HAL_GPIO_Init+0x27a>
90008f7e:	f04f 0c07 	mov.w	ip, #7
90008f82:	fa0c f707 	lsl.w	r7, ip, r7
90008f86:	433c      	orrs	r4, r7
90008f88:	e749      	b.n	90008e1e <HAL_GPIO_Init+0x27a>
90008f8a:	f04f 0c08 	mov.w	ip, #8
90008f8e:	fa0c f707 	lsl.w	r7, ip, r7
90008f92:	433c      	orrs	r4, r7
90008f94:	e743      	b.n	90008e1e <HAL_GPIO_Init+0x27a>
      temp = GPIOx->PUPDR;
90008f96:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008f9a:	688b      	ldr	r3, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90008f9c:	ea08 0806 	and.w	r8, r8, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008fa0:	fa03 fc04 	lsl.w	ip, r3, r4
90008fa4:	ea4c 0c08 	orr.w	ip, ip, r8
      GPIOx->PUPDR = temp;
90008fa8:	f8c0 c00c 	str.w	ip, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90008fac:	e624      	b.n	90008bf8 <HAL_GPIO_Init+0x54>
90008fae:	bf00      	nop

90008fb0 <HAL_GPIO_DeInit>:
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* Configure the port pins */
  while ((GPIO_Pin >> position) != 0x00U)
90008fb0:	2900      	cmp	r1, #0
90008fb2:	f000 810c 	beq.w	900091ce <HAL_GPIO_DeInit+0x21e>
90008fb6:	4b8b      	ldr	r3, [pc, #556]	@ (900091e4 <HAL_GPIO_DeInit+0x234>)
90008fb8:	4298      	cmp	r0, r3
{
90008fba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90008fbe:	f000 809a 	beq.w	900090f6 <HAL_GPIO_DeInit+0x146>
  uint32_t position = 0x00U;
90008fc2:	2300      	movs	r3, #0
    if (iocurrent != 0x00U)
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90008fc4:	f04f 090f 	mov.w	r9, #15
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO in Analog Mode */
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90008fc8:	f04f 0a03 	mov.w	sl, #3
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
90008fcc:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
    iocurrent = GPIO_Pin & (1UL << position) ;
90008fd0:	2201      	movs	r2, #1
90008fd2:	409a      	lsls	r2, r3
    if (iocurrent != 0x00U)
90008fd4:	ea12 0e01 	ands.w	lr, r2, r1
90008fd8:	d077      	beq.n	900090ca <HAL_GPIO_DeInit+0x11a>
      tmp = SYSCFG->EXTICR[position >> 2U];
90008fda:	f023 0503 	bic.w	r5, r3, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90008fde:	f003 0403 	and.w	r4, r3, #3
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90008fe2:	4f81      	ldr	r7, [pc, #516]	@ (900091e8 <HAL_GPIO_DeInit+0x238>)
90008fe4:	f105 45b0 	add.w	r5, r5, #1476395008	@ 0x58000000
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90008fe8:	00a4      	lsls	r4, r4, #2
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90008fea:	42b8      	cmp	r0, r7
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90008fec:	fa09 f804 	lsl.w	r8, r9, r4
      tmp = SYSCFG->EXTICR[position >> 2U];
90008ff0:	f8d5 c408 	ldr.w	ip, [r5, #1032]	@ 0x408
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90008ff4:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
90008ff8:	ea08 0c0c 	and.w	ip, r8, ip
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90008ffc:	d027      	beq.n	9000904e <HAL_GPIO_DeInit+0x9e>
90008ffe:	4f7b      	ldr	r7, [pc, #492]	@ (900091ec <HAL_GPIO_DeInit+0x23c>)
90009000:	42b8      	cmp	r0, r7
90009002:	d06e      	beq.n	900090e2 <HAL_GPIO_DeInit+0x132>
90009004:	4f7a      	ldr	r7, [pc, #488]	@ (900091f0 <HAL_GPIO_DeInit+0x240>)
90009006:	42b8      	cmp	r0, r7
90009008:	d070      	beq.n	900090ec <HAL_GPIO_DeInit+0x13c>
9000900a:	4f7a      	ldr	r7, [pc, #488]	@ (900091f4 <HAL_GPIO_DeInit+0x244>)
9000900c:	42b8      	cmp	r0, r7
9000900e:	d063      	beq.n	900090d8 <HAL_GPIO_DeInit+0x128>
90009010:	f8df b1e8 	ldr.w	fp, [pc, #488]	@ 900091fc <HAL_GPIO_DeInit+0x24c>
90009014:	4558      	cmp	r0, fp
90009016:	f000 80d5 	beq.w	900091c4 <HAL_GPIO_DeInit+0x214>
9000901a:	f8df b1e4 	ldr.w	fp, [pc, #484]	@ 90009200 <HAL_GPIO_DeInit+0x250>
9000901e:	4558      	cmp	r0, fp
90009020:	f000 80d6 	beq.w	900091d0 <HAL_GPIO_DeInit+0x220>
90009024:	f8df b1dc 	ldr.w	fp, [pc, #476]	@ 90009204 <HAL_GPIO_DeInit+0x254>
90009028:	4558      	cmp	r0, fp
9000902a:	f000 80c6 	beq.w	900091ba <HAL_GPIO_DeInit+0x20a>
9000902e:	f8df b1d8 	ldr.w	fp, [pc, #472]	@ 90009208 <HAL_GPIO_DeInit+0x258>
90009032:	4558      	cmp	r0, fp
90009034:	f000 80d1 	beq.w	900091da <HAL_GPIO_DeInit+0x22a>
90009038:	f8df b1d0 	ldr.w	fp, [pc, #464]	@ 9000920c <HAL_GPIO_DeInit+0x25c>
9000903c:	4558      	cmp	r0, fp
9000903e:	bf0c      	ite	eq
90009040:	f04f 0b09 	moveq.w	fp, #9
90009044:	f04f 0b0a 	movne.w	fp, #10
90009048:	fa0b f404 	lsl.w	r4, fp, r4
9000904c:	e002      	b.n	90009054 <HAL_GPIO_DeInit+0xa4>
9000904e:	2701      	movs	r7, #1
90009050:	fa07 f404 	lsl.w	r4, r7, r4
90009054:	45a4      	cmp	ip, r4
90009056:	d117      	bne.n	90009088 <HAL_GPIO_DeInit+0xd8>
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
90009058:	f8d6 4080 	ldr.w	r4, [r6, #128]	@ 0x80
9000905c:	ea24 040e 	bic.w	r4, r4, lr
90009060:	f8c6 4080 	str.w	r4, [r6, #128]	@ 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
90009064:	f8d6 4084 	ldr.w	r4, [r6, #132]	@ 0x84
90009068:	ea24 040e 	bic.w	r4, r4, lr
9000906c:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
        EXTI->FTSR1 &= ~(iocurrent);
90009070:	6874      	ldr	r4, [r6, #4]
90009072:	ea24 040e 	bic.w	r4, r4, lr
90009076:	6074      	str	r4, [r6, #4]
        EXTI->RTSR1 &= ~(iocurrent);
90009078:	6834      	ldr	r4, [r6, #0]
9000907a:	ea24 040e 	bic.w	r4, r4, lr
9000907e:	6034      	str	r4, [r6, #0]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
90009080:	68ac      	ldr	r4, [r5, #8]
90009082:	ea24 0408 	bic.w	r4, r4, r8
90009086:	60ac      	str	r4, [r5, #8]
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90009088:	005d      	lsls	r5, r3, #1
9000908a:	6804      	ldr	r4, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000908c:	ea4f 0cd3 	mov.w	ip, r3, lsr #3
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90009090:	fa0a f505 	lsl.w	r5, sl, r5
90009094:	eb00 0c8c 	add.w	ip, r0, ip, lsl #2
90009098:	432c      	orrs	r4, r5
9000909a:	6004      	str	r4, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000909c:	f003 0407 	and.w	r4, r3, #7
900090a0:	f8dc e020 	ldr.w	lr, [ip, #32]
900090a4:	00a4      	lsls	r4, r4, #2
900090a6:	fa09 f404 	lsl.w	r4, r9, r4
900090aa:	ea2e 0404 	bic.w	r4, lr, r4
900090ae:	f8cc 4020 	str.w	r4, [ip, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
900090b2:	68c4      	ldr	r4, [r0, #12]
900090b4:	ea24 0405 	bic.w	r4, r4, r5
900090b8:	60c4      	str	r4, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
900090ba:	6844      	ldr	r4, [r0, #4]
900090bc:	ea24 0202 	bic.w	r2, r4, r2
900090c0:	6042      	str	r2, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900090c2:	6882      	ldr	r2, [r0, #8]
900090c4:	ea22 0205 	bic.w	r2, r2, r5
900090c8:	6082      	str	r2, [r0, #8]
    }

    position++;
900090ca:	3301      	adds	r3, #1
  while ((GPIO_Pin >> position) != 0x00U)
900090cc:	fa31 f203 	lsrs.w	r2, r1, r3
900090d0:	f47f af7e 	bne.w	90008fd0 <HAL_GPIO_DeInit+0x20>
  }
}
900090d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900090d8:	f04f 0b04 	mov.w	fp, #4
900090dc:	fa0b f404 	lsl.w	r4, fp, r4
900090e0:	e7b8      	b.n	90009054 <HAL_GPIO_DeInit+0xa4>
900090e2:	f04f 0b02 	mov.w	fp, #2
900090e6:	fa0b f404 	lsl.w	r4, fp, r4
900090ea:	e7b3      	b.n	90009054 <HAL_GPIO_DeInit+0xa4>
900090ec:	f04f 0b03 	mov.w	fp, #3
900090f0:	fa0b f404 	lsl.w	r4, fp, r4
900090f4:	e7ae      	b.n	90009054 <HAL_GPIO_DeInit+0xa4>
  uint32_t position = 0x00U;
900090f6:	2200      	movs	r2, #0
    iocurrent = GPIO_Pin & (1UL << position) ;
900090f8:	f04f 0c01 	mov.w	ip, #1
900090fc:	4f3e      	ldr	r7, [pc, #248]	@ (900091f8 <HAL_GPIO_DeInit+0x248>)
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900090fe:	250f      	movs	r5, #15
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
90009100:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90009104:	f04f 0e03 	mov.w	lr, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90009108:	f002 0303 	and.w	r3, r2, #3
    iocurrent = GPIO_Pin & (1UL << position) ;
9000910c:	fa0c f402 	lsl.w	r4, ip, r2
    if (iocurrent != 0x00U)
90009110:	f022 0803 	bic.w	r8, r2, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90009114:	009b      	lsls	r3, r3, #2
    if (iocurrent != 0x00U)
90009116:	ea11 0904 	ands.w	r9, r1, r4
9000911a:	44b8      	add	r8, r7
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000911c:	fa05 f303 	lsl.w	r3, r5, r3
    if (iocurrent != 0x00U)
90009120:	d045      	beq.n	900091ae <HAL_GPIO_DeInit+0x1fe>
      tmp = SYSCFG->EXTICR[position >> 2U];
90009122:	f8d8 a008 	ldr.w	sl, [r8, #8]
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90009126:	ea13 0f0a 	tst.w	r3, sl
9000912a:	d11d      	bne.n	90009168 <HAL_GPIO_DeInit+0x1b8>
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
9000912c:	f8d6 a080 	ldr.w	sl, [r6, #128]	@ 0x80
90009130:	ea2a 0a09 	bic.w	sl, sl, r9
90009134:	f8c6 a080 	str.w	sl, [r6, #128]	@ 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
90009138:	f8d6 a084 	ldr.w	sl, [r6, #132]	@ 0x84
9000913c:	ea2a 0a09 	bic.w	sl, sl, r9
90009140:	f8c6 a084 	str.w	sl, [r6, #132]	@ 0x84
        EXTI->FTSR1 &= ~(iocurrent);
90009144:	f8d6 a004 	ldr.w	sl, [r6, #4]
90009148:	ea2a 0a09 	bic.w	sl, sl, r9
9000914c:	f8c6 a004 	str.w	sl, [r6, #4]
        EXTI->RTSR1 &= ~(iocurrent);
90009150:	f8d6 a000 	ldr.w	sl, [r6]
90009154:	ea2a 0909 	bic.w	r9, sl, r9
90009158:	f8c6 9000 	str.w	r9, [r6]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
9000915c:	f8d8 9008 	ldr.w	r9, [r8, #8]
90009160:	ea29 0303 	bic.w	r3, r9, r3
90009164:	f8c8 3008 	str.w	r3, [r8, #8]
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90009168:	ea4f 0842 	mov.w	r8, r2, lsl #1
9000916c:	6803      	ldr	r3, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000916e:	ea4f 09d2 	mov.w	r9, r2, lsr #3
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90009172:	fa0e f808 	lsl.w	r8, lr, r8
90009176:	eb00 0989 	add.w	r9, r0, r9, lsl #2
9000917a:	ea43 0308 	orr.w	r3, r3, r8
9000917e:	6003      	str	r3, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90009180:	f002 0307 	and.w	r3, r2, #7
90009184:	f8d9 a020 	ldr.w	sl, [r9, #32]
90009188:	009b      	lsls	r3, r3, #2
9000918a:	fa05 f303 	lsl.w	r3, r5, r3
9000918e:	ea2a 0303 	bic.w	r3, sl, r3
90009192:	f8c9 3020 	str.w	r3, [r9, #32]
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90009196:	68c3      	ldr	r3, [r0, #12]
90009198:	ea23 0308 	bic.w	r3, r3, r8
9000919c:	60c3      	str	r3, [r0, #12]
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
9000919e:	6843      	ldr	r3, [r0, #4]
900091a0:	ea23 0304 	bic.w	r3, r3, r4
900091a4:	6043      	str	r3, [r0, #4]
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900091a6:	6883      	ldr	r3, [r0, #8]
900091a8:	ea23 0308 	bic.w	r3, r3, r8
900091ac:	6083      	str	r3, [r0, #8]
    position++;
900091ae:	3201      	adds	r2, #1
  while ((GPIO_Pin >> position) != 0x00U)
900091b0:	fa31 f302 	lsrs.w	r3, r1, r2
900091b4:	d1a8      	bne.n	90009108 <HAL_GPIO_DeInit+0x158>
}
900091b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900091ba:	f04f 0b07 	mov.w	fp, #7
900091be:	fa0b f404 	lsl.w	r4, fp, r4
900091c2:	e747      	b.n	90009054 <HAL_GPIO_DeInit+0xa4>
900091c4:	f04f 0b05 	mov.w	fp, #5
900091c8:	fa0b f404 	lsl.w	r4, fp, r4
900091cc:	e742      	b.n	90009054 <HAL_GPIO_DeInit+0xa4>
900091ce:	4770      	bx	lr
900091d0:	f04f 0b06 	mov.w	fp, #6
900091d4:	fa0b f404 	lsl.w	r4, fp, r4
900091d8:	e73c      	b.n	90009054 <HAL_GPIO_DeInit+0xa4>
900091da:	f04f 0b08 	mov.w	fp, #8
900091de:	fa0b f404 	lsl.w	r4, fp, r4
900091e2:	e737      	b.n	90009054 <HAL_GPIO_DeInit+0xa4>
900091e4:	58020000 	.word	0x58020000
900091e8:	58020400 	.word	0x58020400
900091ec:	58020800 	.word	0x58020800
900091f0:	58020c00 	.word	0x58020c00
900091f4:	58021000 	.word	0x58021000
900091f8:	58000400 	.word	0x58000400
900091fc:	58021400 	.word	0x58021400
90009200:	58021800 	.word	0x58021800
90009204:	58021c00 	.word	0x58021c00
90009208:	58022000 	.word	0x58022000
9000920c:	58022400 	.word	0x58022400

90009210 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
90009210:	6903      	ldr	r3, [r0, #16]
90009212:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
90009214:	bf14      	ite	ne
90009216:	2001      	movne	r0, #1
90009218:	2000      	moveq	r0, #0
9000921a:	4770      	bx	lr

9000921c <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
9000921c:	b902      	cbnz	r2, 90009220 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
9000921e:	0409      	lsls	r1, r1, #16
90009220:	6181      	str	r1, [r0, #24]
  }
}
90009222:	4770      	bx	lr

90009224 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
90009224:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
90009226:	ea01 0203 	and.w	r2, r1, r3
9000922a:	ea21 0103 	bic.w	r1, r1, r3
9000922e:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
90009232:	6181      	str	r1, [r0, #24]
}
90009234:	4770      	bx	lr
90009236:	bf00      	nop

90009238 <I2C_WaitOnFlagUntilTimeout.constprop.0>:
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status,
                                                    uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009238:	6803      	ldr	r3, [r0, #0]
9000923a:	699a      	ldr	r2, [r3, #24]
9000923c:	0412      	lsls	r2, r2, #16
9000923e:	f140 8097 	bpl.w	90009370 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x138>
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status,
90009242:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90009246:	4604      	mov	r4, r0
90009248:	460e      	mov	r6, r1
  HAL_I2C_ModeTypeDef tmp2;

  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000924a:	2710      	movs	r7, #16
  uint32_t itflag   = hi2c->Instance->ISR;
9000924c:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
9000924e:	f012 0810 	ands.w	r8, r2, #16
90009252:	d07f      	beq.n	90009354 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x11c>
  uint32_t tickstart = Tickstart;
90009254:	4635      	mov	r5, r6
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90009256:	61df      	str	r7, [r3, #28]

    /* Wait until STOP Flag is set or timeout occurred */
    /* AutoEnd should be initiate after AF */
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90009258:	699a      	ldr	r2, [r3, #24]
9000925a:	f012 0820 	ands.w	r8, r2, #32
9000925e:	d17b      	bne.n	90009358 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x120>
    {
      /* Check for the Timeout */
      if (Timeout != HAL_MAX_DELAY)
      {
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90009260:	f7fe ff90 	bl	90008184 <HAL_GetTick>
90009264:	1b40      	subs	r0, r0, r5
        {
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90009266:	6823      	ldr	r3, [r4, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90009268:	2819      	cmp	r0, #25
9000926a:	d83d      	bhi.n	900092e8 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xb0>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000926c:	699a      	ldr	r2, [r3, #24]
9000926e:	0690      	lsls	r0, r2, #26
90009270:	d5f6      	bpl.n	90009260 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x28>

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009272:	2220      	movs	r2, #32
90009274:	61da      	str	r2, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
90009276:	f048 0804 	orr.w	r8, r8, #4

    status = HAL_ERROR;
9000927a:	2501      	movs	r5, #1
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
9000927c:	699a      	ldr	r2, [r3, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
9000927e:	05d1      	lsls	r1, r2, #23
90009280:	d552      	bpl.n	90009328 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xf0>
  {
    error_code |= HAL_I2C_ERROR_BERR;

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90009282:	f44f 7180 	mov.w	r1, #256	@ 0x100

    status = HAL_ERROR;
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90009286:	0555      	lsls	r5, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90009288:	f048 0801 	orr.w	r8, r8, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000928c:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000928e:	d504      	bpl.n	9000929a <I2C_WaitOnFlagUntilTimeout.constprop.0+0x62>
  {
    error_code |= HAL_I2C_ERROR_OVR;

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90009290:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90009294:	f048 0808 	orr.w	r8, r8, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90009298:	61d9      	str	r1, [r3, #28]

    status = HAL_ERROR;
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000929a:	0591      	lsls	r1, r2, #22
9000929c:	d504      	bpl.n	900092a8 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x70>
  {
    error_code |= HAL_I2C_ERROR_ARLO;

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000929e:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
900092a2:	f048 0802 	orr.w	r8, r8, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
900092a6:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
900092a8:	699a      	ldr	r2, [r3, #24]
900092aa:	0795      	lsls	r5, r2, #30
900092ac:	d501      	bpl.n	900092b2 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x7a>
    hi2c->Instance->TXDR = 0x00U;
900092ae:	2200      	movs	r2, #0
900092b0:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
900092b2:	699a      	ldr	r2, [r3, #24]
900092b4:	07d0      	lsls	r0, r2, #31
900092b6:	d403      	bmi.n	900092c0 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x88>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
900092b8:	699a      	ldr	r2, [r3, #24]
900092ba:	f042 0201 	orr.w	r2, r2, #1
900092be:	619a      	str	r2, [r3, #24]
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
900092c0:	685a      	ldr	r2, [r3, #4]

    hi2c->ErrorCode |= error_code;
    hi2c->State = HAL_I2C_STATE_READY;
900092c2:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
900092c4:	4d2b      	ldr	r5, [pc, #172]	@ (90009374 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x13c>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
900092c6:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
900092c8:	402a      	ands	r2, r5
900092ca:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
900092cc:	6c63      	ldr	r3, [r4, #68]	@ 0x44
900092ce:	ea43 0308 	orr.w	r3, r3, r8
900092d2:	6463      	str	r3, [r4, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
900092d4:	f884 0041 	strb.w	r0, [r4, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
900092d8:	f884 1042 	strb.w	r1, [r4, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
900092dc:	2300      	movs	r3, #0
      return HAL_ERROR;
900092de:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
900092e0:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
900092e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
900092e8:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
900092ea:	f894 2042 	ldrb.w	r2, [r4, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
900092ee:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
900092f0:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
900092f2:	0409      	lsls	r1, r1, #16
900092f4:	d50b      	bpl.n	9000930e <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
              (tmp1 != I2C_CR2_STOP) && \
900092f6:	0441      	lsls	r1, r0, #17
900092f8:	d409      	bmi.n	9000930e <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
900092fa:	2a20      	cmp	r2, #32
900092fc:	d007      	beq.n	9000930e <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
900092fe:	685a      	ldr	r2, [r3, #4]
90009300:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90009304:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90009306:	f7fe ff3d 	bl	90008184 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000930a:	6823      	ldr	r3, [r4, #0]
            tickstart = HAL_GetTick();
9000930c:	4605      	mov	r5, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000930e:	699a      	ldr	r2, [r3, #24]
90009310:	0690      	lsls	r0, r2, #26
90009312:	d4a1      	bmi.n	90009258 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x20>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90009314:	f7fe ff36 	bl	90008184 <HAL_GetTick>
90009318:	1b40      	subs	r0, r0, r5
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000931a:	6823      	ldr	r3, [r4, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000931c:	2819      	cmp	r0, #25
9000931e:	d9f6      	bls.n	9000930e <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90009320:	f04f 0820 	mov.w	r8, #32
90009324:	699a      	ldr	r2, [r3, #24]
90009326:	e7a6      	b.n	90009276 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x3e>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90009328:	0550      	lsls	r0, r2, #21
9000932a:	d4b1      	bmi.n	90009290 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x58>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000932c:	0592      	lsls	r2, r2, #22
9000932e:	d4b6      	bmi.n	9000929e <I2C_WaitOnFlagUntilTimeout.constprop.0+0x66>
  if (status != HAL_OK)
90009330:	2d00      	cmp	r5, #0
90009332:	d1b9      	bne.n	900092a8 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x70>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009334:	f7fe ff26 	bl	90008184 <HAL_GetTick>
90009338:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000933a:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000933c:	2819      	cmp	r0, #25
9000933e:	d902      	bls.n	90009346 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x10e>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009340:	699a      	ldr	r2, [r3, #24]
90009342:	0411      	lsls	r1, r2, #16
90009344:	d40b      	bmi.n	9000935e <I2C_WaitOnFlagUntilTimeout.constprop.0+0x126>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009346:	699a      	ldr	r2, [r3, #24]
90009348:	0412      	lsls	r2, r2, #16
9000934a:	f53f af7f 	bmi.w	9000924c <I2C_WaitOnFlagUntilTimeout.constprop.0+0x14>
  return HAL_OK;
9000934e:	2000      	movs	r0, #0
}
90009350:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  HAL_StatusTypeDef status = HAL_OK;
90009354:	4645      	mov	r5, r8
90009356:	e791      	b.n	9000927c <I2C_WaitOnFlagUntilTimeout.constprop.0+0x44>
90009358:	f04f 0800 	mov.w	r8, #0
9000935c:	e789      	b.n	90009272 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x3a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000935e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009360:	2220      	movs	r2, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009362:	4313      	orrs	r3, r2
90009364:	6463      	str	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009366:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000936a:	f884 5042 	strb.w	r5, [r4, #66]	@ 0x42
          return HAL_ERROR;
9000936e:	e7b5      	b.n	900092dc <I2C_WaitOnFlagUntilTimeout.constprop.0+0xa4>
  return HAL_OK;
90009370:	2000      	movs	r0, #0
}
90009372:	4770      	bx	lr
90009374:	fe00e800 	.word	0xfe00e800

90009378 <I2C_WaitOnTXISFlagUntilTimeout>:
{
90009378:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
9000937c:	6803      	ldr	r3, [r0, #0]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000937e:	2710      	movs	r7, #16
{
90009380:	4605      	mov	r5, r0
90009382:	460e      	mov	r6, r1
90009384:	4690      	mov	r8, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
90009386:	699a      	ldr	r2, [r3, #24]
90009388:	f012 0202 	ands.w	r2, r2, #2
9000938c:	d168      	bne.n	90009460 <I2C_WaitOnTXISFlagUntilTimeout+0xe8>
  uint32_t itflag   = hi2c->Instance->ISR;
9000938e:	6999      	ldr	r1, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90009390:	f011 0c10 	ands.w	ip, r1, #16
90009394:	d062      	beq.n	9000945c <I2C_WaitOnTXISFlagUntilTimeout+0xe4>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90009396:	1c74      	adds	r4, r6, #1
90009398:	61df      	str	r7, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000939a:	d166      	bne.n	9000946a <I2C_WaitOnTXISFlagUntilTimeout+0xf2>
9000939c:	699c      	ldr	r4, [r3, #24]
9000939e:	f014 0420 	ands.w	r4, r4, #32
900093a2:	d160      	bne.n	90009466 <I2C_WaitOnTXISFlagUntilTimeout+0xee>
900093a4:	699a      	ldr	r2, [r3, #24]
900093a6:	0691      	lsls	r1, r2, #26
900093a8:	d5fc      	bpl.n	900093a4 <I2C_WaitOnTXISFlagUntilTimeout+0x2c>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900093aa:	2220      	movs	r2, #32
900093ac:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
900093ae:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
900093b2:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
900093b4:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
900093b6:	05d0      	lsls	r0, r2, #23
900093b8:	d532      	bpl.n	90009420 <I2C_WaitOnTXISFlagUntilTimeout+0xa8>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
900093ba:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900093be:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
900093c0:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
900093c4:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900093c6:	d504      	bpl.n	900093d2 <I2C_WaitOnTXISFlagUntilTimeout+0x5a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
900093c8:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
900093cc:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
900093d0:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
900093d2:	0596      	lsls	r6, r2, #22
900093d4:	d504      	bpl.n	900093e0 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
900093d6:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
900093da:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
900093de:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
900093e0:	699a      	ldr	r2, [r3, #24]
900093e2:	0790      	lsls	r0, r2, #30
900093e4:	d501      	bpl.n	900093ea <I2C_WaitOnTXISFlagUntilTimeout+0x72>
    hi2c->Instance->TXDR = 0x00U;
900093e6:	2200      	movs	r2, #0
900093e8:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
900093ea:	699a      	ldr	r2, [r3, #24]
900093ec:	07d1      	lsls	r1, r2, #31
900093ee:	d403      	bmi.n	900093f8 <I2C_WaitOnTXISFlagUntilTimeout+0x80>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
900093f0:	699a      	ldr	r2, [r3, #24]
900093f2:	f042 0201 	orr.w	r2, r2, #1
900093f6:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
900093f8:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
900093fa:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
900093fc:	4c38      	ldr	r4, [pc, #224]	@ (900094e0 <I2C_WaitOnTXISFlagUntilTimeout+0x168>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
900093fe:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90009400:	4022      	ands	r2, r4
90009402:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90009404:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
90009406:	ea43 030c 	orr.w	r3, r3, ip
9000940a:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
9000940c:	f885 0041 	strb.w	r0, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90009410:	f885 1042 	strb.w	r1, [r5, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
90009414:	2300      	movs	r3, #0
      return HAL_ERROR;
90009416:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90009418:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
9000941c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90009420:	0550      	lsls	r0, r2, #21
90009422:	d4d1      	bmi.n	900093c8 <I2C_WaitOnTXISFlagUntilTimeout+0x50>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90009424:	0594      	lsls	r4, r2, #22
90009426:	d4d6      	bmi.n	900093d6 <I2C_WaitOnTXISFlagUntilTimeout+0x5e>
  if (status != HAL_OK)
90009428:	2900      	cmp	r1, #0
9000942a:	d1d9      	bne.n	900093e0 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
    if (Timeout != HAL_MAX_DELAY)
9000942c:	1c72      	adds	r2, r6, #1
9000942e:	d0aa      	beq.n	90009386 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009430:	f7fe fea8 	bl	90008184 <HAL_GetTick>
90009434:	eba0 0308 	sub.w	r3, r0, r8
90009438:	42b3      	cmp	r3, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
9000943a:	682b      	ldr	r3, [r5, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000943c:	d801      	bhi.n	90009442 <I2C_WaitOnTXISFlagUntilTimeout+0xca>
9000943e:	2e00      	cmp	r6, #0
90009440:	d1a1      	bne.n	90009386 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
90009442:	699a      	ldr	r2, [r3, #24]
90009444:	f012 0202 	ands.w	r2, r2, #2
90009448:	d19d      	bne.n	90009386 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000944a:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000944c:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000944e:	430b      	orrs	r3, r1
90009450:	646b      	str	r3, [r5, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009452:	f885 1041 	strb.w	r1, [r5, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90009456:	f885 2042 	strb.w	r2, [r5, #66]	@ 0x42
          return HAL_ERROR;
9000945a:	e7db      	b.n	90009414 <I2C_WaitOnTXISFlagUntilTimeout+0x9c>
  HAL_StatusTypeDef status = HAL_OK;
9000945c:	4661      	mov	r1, ip
9000945e:	e7a9      	b.n	900093b4 <I2C_WaitOnTXISFlagUntilTimeout+0x3c>
  return HAL_OK;
90009460:	2000      	movs	r0, #0
}
90009462:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90009466:	4614      	mov	r4, r2
90009468:	e79f      	b.n	900093aa <I2C_WaitOnTXISFlagUntilTimeout+0x32>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000946a:	4614      	mov	r4, r2
9000946c:	46c1      	mov	r9, r8
9000946e:	4692      	mov	sl, r2
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90009470:	699a      	ldr	r2, [r3, #24]
90009472:	0692      	lsls	r2, r2, #26
90009474:	d40e      	bmi.n	90009494 <I2C_WaitOnTXISFlagUntilTimeout+0x11c>
90009476:	f1ba 0f00 	cmp.w	sl, #0
9000947a:	d198      	bne.n	900093ae <I2C_WaitOnTXISFlagUntilTimeout+0x36>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000947c:	f7fe fe82 	bl	90008184 <HAL_GetTick>
90009480:	eba0 0309 	sub.w	r3, r0, r9
90009484:	429e      	cmp	r6, r3
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90009486:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90009488:	d308      	bcc.n	9000949c <I2C_WaitOnTXISFlagUntilTimeout+0x124>
9000948a:	b13e      	cbz	r6, 9000949c <I2C_WaitOnTXISFlagUntilTimeout+0x124>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000948c:	699a      	ldr	r2, [r3, #24]
9000948e:	0690      	lsls	r0, r2, #26
90009490:	d5f4      	bpl.n	9000947c <I2C_WaitOnTXISFlagUntilTimeout+0x104>
90009492:	e78a      	b.n	900093aa <I2C_WaitOnTXISFlagUntilTimeout+0x32>
    if (status == HAL_OK)
90009494:	f1ba 0f00 	cmp.w	sl, #0
90009498:	d189      	bne.n	900093ae <I2C_WaitOnTXISFlagUntilTimeout+0x36>
9000949a:	e786      	b.n	900093aa <I2C_WaitOnTXISFlagUntilTimeout+0x32>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000949c:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
9000949e:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
900094a2:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
900094a4:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
900094a6:	0409      	lsls	r1, r1, #16
900094a8:	d50b      	bpl.n	900094c2 <I2C_WaitOnTXISFlagUntilTimeout+0x14a>
              (tmp1 != I2C_CR2_STOP) && \
900094aa:	0441      	lsls	r1, r0, #17
900094ac:	d409      	bmi.n	900094c2 <I2C_WaitOnTXISFlagUntilTimeout+0x14a>
900094ae:	2a20      	cmp	r2, #32
900094b0:	d007      	beq.n	900094c2 <I2C_WaitOnTXISFlagUntilTimeout+0x14a>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
900094b2:	685a      	ldr	r2, [r3, #4]
900094b4:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
900094b8:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
900094ba:	f7fe fe63 	bl	90008184 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900094be:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
900094c0:	4681      	mov	r9, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900094c2:	699a      	ldr	r2, [r3, #24]
900094c4:	0690      	lsls	r0, r2, #26
900094c6:	d4d3      	bmi.n	90009470 <I2C_WaitOnTXISFlagUntilTimeout+0xf8>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
900094c8:	f7fe fe5c 	bl	90008184 <HAL_GetTick>
900094cc:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900094d0:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
900094d2:	2819      	cmp	r0, #25
900094d4:	d9f5      	bls.n	900094c2 <I2C_WaitOnTXISFlagUntilTimeout+0x14a>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
900094d6:	2420      	movs	r4, #32
              status = HAL_ERROR;
900094d8:	f04f 0a01 	mov.w	sl, #1
900094dc:	e7c8      	b.n	90009470 <I2C_WaitOnTXISFlagUntilTimeout+0xf8>
900094de:	bf00      	nop
900094e0:	fe00e800 	.word	0xfe00e800

900094e4 <I2C_WaitOnFlagUntilTimeout>:
{
900094e4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
900094e8:	461d      	mov	r5, r3
900094ea:	4683      	mov	fp, r0
900094ec:	460f      	mov	r7, r1
900094ee:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900094f0:	6803      	ldr	r3, [r0, #0]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
900094f2:	f04f 0810 	mov.w	r8, #16
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900094f6:	699a      	ldr	r2, [r3, #24]
900094f8:	ea37 0202 	bics.w	r2, r7, r2
900094fc:	bf0c      	ite	eq
900094fe:	2201      	moveq	r2, #1
90009500:	2200      	movne	r2, #0
90009502:	42b2      	cmp	r2, r6
90009504:	d173      	bne.n	900095ee <I2C_WaitOnFlagUntilTimeout+0x10a>
  uint32_t itflag   = hi2c->Instance->ISR;
90009506:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90009508:	f012 0c10 	ands.w	ip, r2, #16
9000950c:	d06d      	beq.n	900095ea <I2C_WaitOnFlagUntilTimeout+0x106>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000950e:	1c6c      	adds	r4, r5, #1
90009510:	f8c3 801c 	str.w	r8, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90009514:	d170      	bne.n	900095f8 <I2C_WaitOnFlagUntilTimeout+0x114>
90009516:	699c      	ldr	r4, [r3, #24]
90009518:	f014 0420 	ands.w	r4, r4, #32
9000951c:	d16a      	bne.n	900095f4 <I2C_WaitOnFlagUntilTimeout+0x110>
9000951e:	699a      	ldr	r2, [r3, #24]
90009520:	0691      	lsls	r1, r2, #26
90009522:	d5fc      	bpl.n	9000951e <I2C_WaitOnFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009524:	2220      	movs	r2, #32
90009526:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
90009528:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
9000952c:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
9000952e:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90009530:	05d0      	lsls	r0, r2, #23
90009532:	d534      	bpl.n	9000959e <I2C_WaitOnFlagUntilTimeout+0xba>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90009534:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90009538:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
9000953a:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000953e:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90009540:	d504      	bpl.n	9000954c <I2C_WaitOnFlagUntilTimeout+0x68>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90009542:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90009546:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000954a:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000954c:	0595      	lsls	r5, r2, #22
9000954e:	d504      	bpl.n	9000955a <I2C_WaitOnFlagUntilTimeout+0x76>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90009550:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90009554:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90009558:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
9000955a:	699a      	ldr	r2, [r3, #24]
9000955c:	0790      	lsls	r0, r2, #30
9000955e:	d501      	bpl.n	90009564 <I2C_WaitOnFlagUntilTimeout+0x80>
    hi2c->Instance->TXDR = 0x00U;
90009560:	2200      	movs	r2, #0
90009562:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90009564:	699a      	ldr	r2, [r3, #24]
90009566:	07d1      	lsls	r1, r2, #31
90009568:	d403      	bmi.n	90009572 <I2C_WaitOnFlagUntilTimeout+0x8e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
9000956a:	699a      	ldr	r2, [r3, #24]
9000956c:	f042 0201 	orr.w	r2, r2, #1
90009570:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90009572:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90009574:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90009576:	4c40      	ldr	r4, [pc, #256]	@ (90009678 <I2C_WaitOnFlagUntilTimeout+0x194>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90009578:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
9000957a:	4022      	ands	r2, r4
9000957c:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
9000957e:	f8db 3044 	ldr.w	r3, [fp, #68]	@ 0x44
90009582:	ea43 030c 	orr.w	r3, r3, ip
90009586:	f8cb 3044 	str.w	r3, [fp, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
9000958a:	f88b 0041 	strb.w	r0, [fp, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000958e:	f88b 1042 	strb.w	r1, [fp, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
90009592:	2300      	movs	r3, #0
      return HAL_ERROR;
90009594:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90009596:	f88b 3040 	strb.w	r3, [fp, #64]	@ 0x40
}
9000959a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000959e:	0550      	lsls	r0, r2, #21
900095a0:	d4cf      	bmi.n	90009542 <I2C_WaitOnFlagUntilTimeout+0x5e>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
900095a2:	0594      	lsls	r4, r2, #22
900095a4:	d4d4      	bmi.n	90009550 <I2C_WaitOnFlagUntilTimeout+0x6c>
  if (status != HAL_OK)
900095a6:	2900      	cmp	r1, #0
900095a8:	d1d7      	bne.n	9000955a <I2C_WaitOnFlagUntilTimeout+0x76>
    if (Timeout != HAL_MAX_DELAY)
900095aa:	1c6a      	adds	r2, r5, #1
900095ac:	d0a3      	beq.n	900094f6 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900095ae:	f7fe fde9 	bl	90008184 <HAL_GetTick>
900095b2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900095b4:	1ac3      	subs	r3, r0, r3
900095b6:	42ab      	cmp	r3, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
900095b8:	f8db 3000 	ldr.w	r3, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900095bc:	d801      	bhi.n	900095c2 <I2C_WaitOnFlagUntilTimeout+0xde>
900095be:	2d00      	cmp	r5, #0
900095c0:	d199      	bne.n	900094f6 <I2C_WaitOnFlagUntilTimeout+0x12>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
900095c2:	699a      	ldr	r2, [r3, #24]
900095c4:	ea37 0202 	bics.w	r2, r7, r2
900095c8:	bf0c      	ite	eq
900095ca:	2201      	moveq	r2, #1
900095cc:	2200      	movne	r2, #0
900095ce:	42b2      	cmp	r2, r6
900095d0:	d191      	bne.n	900094f6 <I2C_WaitOnFlagUntilTimeout+0x12>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900095d2:	f8db 3044 	ldr.w	r3, [fp, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900095d6:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
900095d8:	2200      	movs	r2, #0
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900095da:	430b      	orrs	r3, r1
900095dc:	f8cb 3044 	str.w	r3, [fp, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900095e0:	f88b 1041 	strb.w	r1, [fp, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
900095e4:	f88b 2042 	strb.w	r2, [fp, #66]	@ 0x42
          return HAL_ERROR;
900095e8:	e7d3      	b.n	90009592 <I2C_WaitOnFlagUntilTimeout+0xae>
  HAL_StatusTypeDef status = HAL_OK;
900095ea:	4661      	mov	r1, ip
900095ec:	e79f      	b.n	9000952e <I2C_WaitOnFlagUntilTimeout+0x4a>
  return HAL_OK;
900095ee:	2000      	movs	r0, #0
}
900095f0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900095f4:	2400      	movs	r4, #0
900095f6:	e795      	b.n	90009524 <I2C_WaitOnFlagUntilTimeout+0x40>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
900095f8:	2400      	movs	r4, #0
900095fa:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
900095fe:	46a2      	mov	sl, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90009600:	699a      	ldr	r2, [r3, #24]
90009602:	0692      	lsls	r2, r2, #26
90009604:	d40f      	bmi.n	90009626 <I2C_WaitOnFlagUntilTimeout+0x142>
90009606:	f1ba 0f00 	cmp.w	sl, #0
9000960a:	d18d      	bne.n	90009528 <I2C_WaitOnFlagUntilTimeout+0x44>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000960c:	f7fe fdba 	bl	90008184 <HAL_GetTick>
90009610:	eba0 0309 	sub.w	r3, r0, r9
90009614:	429d      	cmp	r5, r3
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90009616:	f8db 3000 	ldr.w	r3, [fp]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000961a:	d309      	bcc.n	90009630 <I2C_WaitOnFlagUntilTimeout+0x14c>
9000961c:	b145      	cbz	r5, 90009630 <I2C_WaitOnFlagUntilTimeout+0x14c>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000961e:	699a      	ldr	r2, [r3, #24]
90009620:	0690      	lsls	r0, r2, #26
90009622:	d5f3      	bpl.n	9000960c <I2C_WaitOnFlagUntilTimeout+0x128>
90009624:	e77e      	b.n	90009524 <I2C_WaitOnFlagUntilTimeout+0x40>
    if (status == HAL_OK)
90009626:	f1ba 0f00 	cmp.w	sl, #0
9000962a:	f47f af7d 	bne.w	90009528 <I2C_WaitOnFlagUntilTimeout+0x44>
9000962e:	e779      	b.n	90009524 <I2C_WaitOnFlagUntilTimeout+0x40>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90009630:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90009632:	f89b 2042 	ldrb.w	r2, [fp, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90009636:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90009638:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000963a:	0409      	lsls	r1, r1, #16
9000963c:	d50c      	bpl.n	90009658 <I2C_WaitOnFlagUntilTimeout+0x174>
              (tmp1 != I2C_CR2_STOP) && \
9000963e:	0441      	lsls	r1, r0, #17
90009640:	d40a      	bmi.n	90009658 <I2C_WaitOnFlagUntilTimeout+0x174>
90009642:	2a20      	cmp	r2, #32
90009644:	d008      	beq.n	90009658 <I2C_WaitOnFlagUntilTimeout+0x174>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90009646:	685a      	ldr	r2, [r3, #4]
90009648:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
9000964c:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
9000964e:	f7fe fd99 	bl	90008184 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90009652:	f8db 3000 	ldr.w	r3, [fp]
            tickstart = HAL_GetTick();
90009656:	4681      	mov	r9, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90009658:	699a      	ldr	r2, [r3, #24]
9000965a:	0690      	lsls	r0, r2, #26
9000965c:	d4d0      	bmi.n	90009600 <I2C_WaitOnFlagUntilTimeout+0x11c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000965e:	f7fe fd91 	bl	90008184 <HAL_GetTick>
90009662:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90009666:	f8db 3000 	ldr.w	r3, [fp]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000966a:	2819      	cmp	r0, #25
9000966c:	d9f4      	bls.n	90009658 <I2C_WaitOnFlagUntilTimeout+0x174>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
9000966e:	2420      	movs	r4, #32
              status = HAL_ERROR;
90009670:	f04f 0a01 	mov.w	sl, #1
90009674:	e7c4      	b.n	90009600 <I2C_WaitOnFlagUntilTimeout+0x11c>
90009676:	bf00      	nop
90009678:	fe00e800 	.word	0xfe00e800

9000967c <I2C_WaitOnSTOPFlagUntilTimeout>:
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000967c:	6803      	ldr	r3, [r0, #0]
{
9000967e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90009682:	4617      	mov	r7, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90009684:	699a      	ldr	r2, [r3, #24]
90009686:	0695      	lsls	r5, r2, #26
90009688:	d461      	bmi.n	9000974e <I2C_WaitOnSTOPFlagUntilTimeout+0xd2>
9000968a:	4605      	mov	r5, r0
9000968c:	460e      	mov	r6, r1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000968e:	f04f 0810 	mov.w	r8, #16
  uint32_t itflag   = hi2c->Instance->ISR;
90009692:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90009694:	f012 0c10 	ands.w	ip, r2, #16
90009698:	d05c      	beq.n	90009754 <I2C_WaitOnSTOPFlagUntilTimeout+0xd8>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000969a:	1c74      	adds	r4, r6, #1
9000969c:	f8c3 801c 	str.w	r8, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900096a0:	d165      	bne.n	9000976e <I2C_WaitOnSTOPFlagUntilTimeout+0xf2>
900096a2:	699c      	ldr	r4, [r3, #24]
900096a4:	f014 0420 	ands.w	r4, r4, #32
900096a8:	d15f      	bne.n	9000976a <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
900096aa:	699a      	ldr	r2, [r3, #24]
900096ac:	0691      	lsls	r1, r2, #26
900096ae:	d5fc      	bpl.n	900096aa <I2C_WaitOnSTOPFlagUntilTimeout+0x2e>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900096b0:	2220      	movs	r2, #32
900096b2:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
900096b4:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
900096b8:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
900096ba:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
900096bc:	05d0      	lsls	r0, r2, #23
900096be:	d532      	bpl.n	90009726 <I2C_WaitOnSTOPFlagUntilTimeout+0xaa>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
900096c0:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900096c4:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
900096c6:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
900096ca:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900096cc:	d504      	bpl.n	900096d8 <I2C_WaitOnSTOPFlagUntilTimeout+0x5c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
900096ce:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
900096d2:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
900096d6:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
900096d8:	0596      	lsls	r6, r2, #22
900096da:	d504      	bpl.n	900096e6 <I2C_WaitOnSTOPFlagUntilTimeout+0x6a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
900096dc:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
900096e0:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
900096e4:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
900096e6:	699a      	ldr	r2, [r3, #24]
900096e8:	0790      	lsls	r0, r2, #30
900096ea:	d501      	bpl.n	900096f0 <I2C_WaitOnSTOPFlagUntilTimeout+0x74>
    hi2c->Instance->TXDR = 0x00U;
900096ec:	2200      	movs	r2, #0
900096ee:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
900096f0:	699a      	ldr	r2, [r3, #24]
900096f2:	07d1      	lsls	r1, r2, #31
900096f4:	d403      	bmi.n	900096fe <I2C_WaitOnSTOPFlagUntilTimeout+0x82>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
900096f6:	699a      	ldr	r2, [r3, #24]
900096f8:	f042 0201 	orr.w	r2, r2, #1
900096fc:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
900096fe:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90009700:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90009702:	4c38      	ldr	r4, [pc, #224]	@ (900097e4 <I2C_WaitOnSTOPFlagUntilTimeout+0x168>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90009704:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90009706:	4022      	ands	r2, r4
90009708:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
9000970a:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
9000970c:	ea43 030c 	orr.w	r3, r3, ip
90009710:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90009712:	f885 0041 	strb.w	r0, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90009716:	f885 1042 	strb.w	r1, [r5, #66]	@ 0x42
        __HAL_UNLOCK(hi2c);
9000971a:	2300      	movs	r3, #0
      return HAL_ERROR;
9000971c:	2001      	movs	r0, #1
        __HAL_UNLOCK(hi2c);
9000971e:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
90009722:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90009726:	0550      	lsls	r0, r2, #21
90009728:	d4d1      	bmi.n	900096ce <I2C_WaitOnSTOPFlagUntilTimeout+0x52>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000972a:	0594      	lsls	r4, r2, #22
9000972c:	d4d6      	bmi.n	900096dc <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
  if (status != HAL_OK)
9000972e:	2900      	cmp	r1, #0
90009730:	d1d9      	bne.n	900096e6 <I2C_WaitOnSTOPFlagUntilTimeout+0x6a>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009732:	f7fe fd27 	bl	90008184 <HAL_GetTick>
90009736:	1bc0      	subs	r0, r0, r7
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90009738:	682b      	ldr	r3, [r5, #0]
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000973a:	42b0      	cmp	r0, r6
9000973c:	d800      	bhi.n	90009740 <I2C_WaitOnSTOPFlagUntilTimeout+0xc4>
9000973e:	b91e      	cbnz	r6, 90009748 <I2C_WaitOnSTOPFlagUntilTimeout+0xcc>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90009740:	699a      	ldr	r2, [r3, #24]
90009742:	f012 0220 	ands.w	r2, r2, #32
90009746:	d007      	beq.n	90009758 <I2C_WaitOnSTOPFlagUntilTimeout+0xdc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90009748:	699a      	ldr	r2, [r3, #24]
9000974a:	0692      	lsls	r2, r2, #26
9000974c:	d5a1      	bpl.n	90009692 <I2C_WaitOnSTOPFlagUntilTimeout+0x16>
  return HAL_OK;
9000974e:	2000      	movs	r0, #0
}
90009750:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  HAL_StatusTypeDef status = HAL_OK;
90009754:	4661      	mov	r1, ip
90009756:	e7b0      	b.n	900096ba <I2C_WaitOnSTOPFlagUntilTimeout+0x3e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009758:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
9000975a:	2120      	movs	r1, #32
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000975c:	430b      	orrs	r3, r1
9000975e:	646b      	str	r3, [r5, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
90009760:	f885 1041 	strb.w	r1, [r5, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
90009764:	f885 2042 	strb.w	r2, [r5, #66]	@ 0x42
        return HAL_ERROR;
90009768:	e7d7      	b.n	9000971a <I2C_WaitOnSTOPFlagUntilTimeout+0x9e>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000976a:	2400      	movs	r4, #0
9000976c:	e7a0      	b.n	900096b0 <I2C_WaitOnSTOPFlagUntilTimeout+0x34>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000976e:	2400      	movs	r4, #0
90009770:	46b9      	mov	r9, r7
90009772:	46a2      	mov	sl, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90009774:	699a      	ldr	r2, [r3, #24]
90009776:	0692      	lsls	r2, r2, #26
90009778:	d42f      	bmi.n	900097da <I2C_WaitOnSTOPFlagUntilTimeout+0x15e>
9000977a:	f1ba 0f00 	cmp.w	sl, #0
9000977e:	d199      	bne.n	900096b4 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90009780:	f7fe fd00 	bl	90008184 <HAL_GetTick>
90009784:	eba0 0309 	sub.w	r3, r0, r9
90009788:	429e      	cmp	r6, r3
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000978a:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000978c:	d304      	bcc.n	90009798 <I2C_WaitOnSTOPFlagUntilTimeout+0x11c>
9000978e:	b11e      	cbz	r6, 90009798 <I2C_WaitOnSTOPFlagUntilTimeout+0x11c>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90009790:	699a      	ldr	r2, [r3, #24]
90009792:	0690      	lsls	r0, r2, #26
90009794:	d5f4      	bpl.n	90009780 <I2C_WaitOnSTOPFlagUntilTimeout+0x104>
90009796:	e78b      	b.n	900096b0 <I2C_WaitOnSTOPFlagUntilTimeout+0x34>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90009798:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
9000979a:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000979e:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
900097a0:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
900097a2:	0409      	lsls	r1, r1, #16
900097a4:	d50b      	bpl.n	900097be <I2C_WaitOnSTOPFlagUntilTimeout+0x142>
              (tmp1 != I2C_CR2_STOP) && \
900097a6:	0441      	lsls	r1, r0, #17
900097a8:	d409      	bmi.n	900097be <I2C_WaitOnSTOPFlagUntilTimeout+0x142>
900097aa:	2a20      	cmp	r2, #32
900097ac:	d007      	beq.n	900097be <I2C_WaitOnSTOPFlagUntilTimeout+0x142>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
900097ae:	685a      	ldr	r2, [r3, #4]
900097b0:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
900097b4:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
900097b6:	f7fe fce5 	bl	90008184 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900097ba:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
900097bc:	4681      	mov	r9, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900097be:	699a      	ldr	r2, [r3, #24]
900097c0:	0690      	lsls	r0, r2, #26
900097c2:	d4d7      	bmi.n	90009774 <I2C_WaitOnSTOPFlagUntilTimeout+0xf8>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
900097c4:	f7fe fcde 	bl	90008184 <HAL_GetTick>
900097c8:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900097cc:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
900097ce:	2819      	cmp	r0, #25
900097d0:	d9f5      	bls.n	900097be <I2C_WaitOnSTOPFlagUntilTimeout+0x142>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
900097d2:	2420      	movs	r4, #32
              status = HAL_ERROR;
900097d4:	f04f 0a01 	mov.w	sl, #1
900097d8:	e7cc      	b.n	90009774 <I2C_WaitOnSTOPFlagUntilTimeout+0xf8>
    if (status == HAL_OK)
900097da:	f1ba 0f00 	cmp.w	sl, #0
900097de:	f47f af69 	bne.w	900096b4 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
900097e2:	e765      	b.n	900096b0 <I2C_WaitOnSTOPFlagUntilTimeout+0x34>
900097e4:	fe00e800 	.word	0xfe00e800

900097e8 <HAL_I2C_MspInit>:
}
900097e8:	4770      	bx	lr
900097ea:	bf00      	nop

900097ec <HAL_I2C_Init>:
  if (hi2c == NULL)
900097ec:	2800      	cmp	r0, #0
900097ee:	d053      	beq.n	90009898 <HAL_I2C_Init+0xac>
{
900097f0:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
900097f2:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
900097f6:	4604      	mov	r4, r0
900097f8:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
900097fc:	2b00      	cmp	r3, #0
900097fe:	d046      	beq.n	9000988e <HAL_I2C_Init+0xa2>
  __HAL_I2C_DISABLE(hi2c);
90009800:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
90009802:	2124      	movs	r1, #36	@ 0x24
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90009804:	6862      	ldr	r2, [r4, #4]
  hi2c->State = HAL_I2C_STATE_BUSY;
90009806:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
9000980a:	6819      	ldr	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
9000980c:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90009810:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
90009812:	f021 0101 	bic.w	r1, r1, #1
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90009816:	2801      	cmp	r0, #1
  __HAL_I2C_DISABLE(hi2c);
90009818:	6019      	str	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
9000981a:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
9000981c:	689a      	ldr	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
9000981e:	68a1      	ldr	r1, [r4, #8]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
90009820:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
90009824:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90009826:	d009      	beq.n	9000983c <HAL_I2C_Init+0x50>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
90009828:	f441 4104 	orr.w	r1, r1, #33792	@ 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
9000982c:	2802      	cmp	r0, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
9000982e:	6099      	str	r1, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90009830:	d107      	bne.n	90009842 <HAL_I2C_Init+0x56>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
90009832:	685a      	ldr	r2, [r3, #4]
90009834:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
90009838:	605a      	str	r2, [r3, #4]
9000983a:	e006      	b.n	9000984a <HAL_I2C_Init+0x5e>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
9000983c:	f441 4100 	orr.w	r1, r1, #32768	@ 0x8000
90009840:	6099      	str	r1, [r3, #8]
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
90009842:	685a      	ldr	r2, [r3, #4]
90009844:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
90009848:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
9000984a:	6858      	ldr	r0, [r3, #4]
  hi2c->State = HAL_I2C_STATE_READY;
9000984c:	f04f 0c20 	mov.w	ip, #32
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90009850:	4912      	ldr	r1, [pc, #72]	@ (9000989c <HAL_I2C_Init+0xb0>)
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90009852:	6922      	ldr	r2, [r4, #16]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90009854:	4301      	orrs	r1, r0
90009856:	6059      	str	r1, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
90009858:	68d9      	ldr	r1, [r3, #12]
9000985a:	f421 4100 	bic.w	r1, r1, #32768	@ 0x8000
9000985e:	60d9      	str	r1, [r3, #12]
                          (hi2c->Init.OwnAddress2Masks << 8));
90009860:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90009864:	4302      	orrs	r2, r0
90009866:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9000986a:	e9d4 1007 	ldrd	r1, r0, [r4, #28]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
9000986e:	60da      	str	r2, [r3, #12]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90009870:	2200      	movs	r2, #0
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90009872:	4301      	orrs	r1, r0
  return HAL_OK;
90009874:	4610      	mov	r0, r2
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90009876:	6019      	str	r1, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
90009878:	6819      	ldr	r1, [r3, #0]
9000987a:	f041 0101 	orr.w	r1, r1, #1
9000987e:	6019      	str	r1, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90009880:	6462      	str	r2, [r4, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
90009882:	f884 c041 	strb.w	ip, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
90009886:	6322      	str	r2, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
90009888:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
}
9000988c:	bd10      	pop	{r4, pc}
    hi2c->Lock = HAL_UNLOCKED;
9000988e:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_I2C_MspInit(hi2c);
90009892:	f7ff ffa9 	bl	900097e8 <HAL_I2C_MspInit>
90009896:	e7b3      	b.n	90009800 <HAL_I2C_Init+0x14>
    return HAL_ERROR;
90009898:	2001      	movs	r0, #1
}
9000989a:	4770      	bx	lr
9000989c:	02008000 	.word	0x02008000

900098a0 <HAL_I2C_MspDeInit>:
__weak void HAL_I2C_MspDeInit(I2C_HandleTypeDef *hi2c)
900098a0:	4770      	bx	lr
900098a2:	bf00      	nop

900098a4 <HAL_I2C_DeInit>:
  if (hi2c == NULL)
900098a4:	b1b0      	cbz	r0, 900098d4 <HAL_I2C_DeInit+0x30>
  __HAL_I2C_DISABLE(hi2c);
900098a6:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
900098a8:	2324      	movs	r3, #36	@ 0x24
{
900098aa:	b510      	push	{r4, lr}
  hi2c->State = HAL_I2C_STATE_BUSY;
900098ac:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
900098b0:	4604      	mov	r4, r0
  __HAL_I2C_DISABLE(hi2c);
900098b2:	6813      	ldr	r3, [r2, #0]
900098b4:	f023 0301 	bic.w	r3, r3, #1
900098b8:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
900098ba:	f7ff fff1 	bl	900098a0 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
900098be:	2300      	movs	r3, #0
900098c0:	6463      	str	r3, [r4, #68]	@ 0x44
  return HAL_OK;
900098c2:	4618      	mov	r0, r3
  hi2c->State = HAL_I2C_STATE_RESET;
900098c4:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hi2c);
900098c8:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  hi2c->PreviousState = I2C_STATE_NONE;
900098cc:	6323      	str	r3, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
900098ce:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
}
900098d2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
900098d4:	2001      	movs	r0, #1
}
900098d6:	4770      	bx	lr

900098d8 <HAL_I2C_Mem_Write>:
{
900098d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900098dc:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
900098de:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
{
900098e2:	b083      	sub	sp, #12
  if (hi2c->State == HAL_I2C_STATE_READY)
900098e4:	2820      	cmp	r0, #32
{
900098e6:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
900098ea:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
900098ec:	d11e      	bne.n	9000992c <HAL_I2C_Mem_Write+0x54>
    if ((pData == NULL) || (Size == 0U))
900098ee:	4698      	mov	r8, r3
900098f0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900098f2:	b1bb      	cbz	r3, 90009924 <HAL_I2C_Mem_Write+0x4c>
900098f4:	f1ba 0f00 	cmp.w	sl, #0
900098f8:	d014      	beq.n	90009924 <HAL_I2C_Mem_Write+0x4c>
    __HAL_LOCK(hi2c);
900098fa:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
900098fe:	2b01      	cmp	r3, #1
90009900:	d014      	beq.n	9000992c <HAL_I2C_Mem_Write+0x54>
90009902:	2301      	movs	r3, #1
90009904:	460d      	mov	r5, r1
90009906:	4691      	mov	r9, r2
90009908:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    tickstart = HAL_GetTick();
9000990c:	f7fe fc3a 	bl	90008184 <HAL_GetTick>
90009910:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
90009912:	4620      	mov	r0, r4
90009914:	4631      	mov	r1, r6
90009916:	f7ff fc8f 	bl	90009238 <I2C_WaitOnFlagUntilTimeout.constprop.0>
9000991a:	b158      	cbz	r0, 90009934 <HAL_I2C_Mem_Write+0x5c>
      return  HAL_ERROR;
9000991c:	2001      	movs	r0, #1
}
9000991e:	b003      	add	sp, #12
90009920:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90009924:	f44f 7300 	mov.w	r3, #512	@ 0x200
90009928:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
9000992a:	e7f7      	b.n	9000991c <HAL_I2C_Mem_Write+0x44>
    __HAL_LOCK(hi2c);
9000992c:	2002      	movs	r0, #2
}
9000992e:	b003      	add	sp, #12
90009930:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    hi2c->pBuffPtr  = pData;
90009934:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
90009936:	f3c5 0b09 	ubfx	fp, r5, #0, #10
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                    (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
9000993a:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr  = pData;
9000993c:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
9000993e:	2321      	movs	r3, #33	@ 0x21
  MODIFY_REG(hi2c->Instance->CR2, \
90009940:	4a5f      	ldr	r2, [pc, #380]	@ (90009ac0 <HAL_I2C_Mem_Write+0x1e8>)
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
90009942:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90009946:	2340      	movs	r3, #64	@ 0x40
    hi2c->XferISR   = NULL;
90009948:	6360      	str	r0, [r4, #52]	@ 0x34
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000994a:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000994e:	6460      	str	r0, [r4, #68]	@ 0x44
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009950:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
90009952:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009956:	684b      	ldr	r3, [r1, #4]
90009958:	4013      	ands	r3, r2
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000995a:	fa5f f288 	uxtb.w	r2, r8
  MODIFY_REG(hi2c->Instance->CR2, \
9000995e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90009962:	4a58      	ldr	r2, [pc, #352]	@ (90009ac4 <HAL_I2C_Mem_Write+0x1ec>)
90009964:	ea43 030b 	orr.w	r3, r3, fp
90009968:	431a      	orrs	r2, r3
9000996a:	604a      	str	r2, [r1, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000996c:	4632      	mov	r2, r6
9000996e:	4639      	mov	r1, r7
90009970:	f7ff fd02 	bl	90009378 <I2C_WaitOnTXISFlagUntilTimeout>
90009974:	2800      	cmp	r0, #0
90009976:	d176      	bne.n	90009a66 <HAL_I2C_Mem_Write+0x18e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90009978:	f1b8 0f01 	cmp.w	r8, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000997c:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
9000997e:	d169      	bne.n	90009a54 <HAL_I2C_Mem_Write+0x17c>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90009980:	fa5f f289 	uxtb.w	r2, r9
90009984:	629a      	str	r2, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
90009986:	463b      	mov	r3, r7
90009988:	2200      	movs	r2, #0
9000998a:	2180      	movs	r1, #128	@ 0x80
9000998c:	4620      	mov	r0, r4
9000998e:	9600      	str	r6, [sp, #0]
90009990:	f7ff fda8 	bl	900094e4 <I2C_WaitOnFlagUntilTimeout>
90009994:	2800      	cmp	r0, #0
90009996:	d166      	bne.n	90009a66 <HAL_I2C_Mem_Write+0x18e>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009998:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000999a:	6822      	ldr	r2, [r4, #0]
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000999c:	b29b      	uxth	r3, r3
9000999e:	2bff      	cmp	r3, #255	@ 0xff
900099a0:	d965      	bls.n	90009a6e <HAL_I2C_Mem_Write+0x196>
  MODIFY_REG(hi2c->Instance->CR2, \
900099a2:	6853      	ldr	r3, [r2, #4]
900099a4:	4948      	ldr	r1, [pc, #288]	@ (90009ac8 <HAL_I2C_Mem_Write+0x1f0>)
900099a6:	400b      	ands	r3, r1
900099a8:	4948      	ldr	r1, [pc, #288]	@ (90009acc <HAL_I2C_Mem_Write+0x1f4>)
900099aa:	ea43 030b 	orr.w	r3, r3, fp
900099ae:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
900099b0:	23ff      	movs	r3, #255	@ 0xff
900099b2:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
900099b4:	6051      	str	r1, [r2, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
900099b6:	e003      	b.n	900099c0 <HAL_I2C_Mem_Write+0xe8>
    } while (hi2c->XferCount > 0U);
900099b8:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
900099ba:	b29b      	uxth	r3, r3
900099bc:	2b00      	cmp	r3, #0
900099be:	d069      	beq.n	90009a94 <HAL_I2C_Mem_Write+0x1bc>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
900099c0:	4632      	mov	r2, r6
900099c2:	4639      	mov	r1, r7
900099c4:	4620      	mov	r0, r4
900099c6:	f7ff fcd7 	bl	90009378 <I2C_WaitOnTXISFlagUntilTimeout>
900099ca:	4602      	mov	r2, r0
900099cc:	2800      	cmp	r0, #0
900099ce:	d1a5      	bne.n	9000991c <HAL_I2C_Mem_Write+0x44>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
900099d0:	6a60      	ldr	r0, [r4, #36]	@ 0x24
900099d2:	6825      	ldr	r5, [r4, #0]
900099d4:	f810 1b01 	ldrb.w	r1, [r0], #1
      hi2c->XferSize--;
900099d8:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
900099da:	62a9      	str	r1, [r5, #40]	@ 0x28
      hi2c->XferCount--;
900099dc:	f8b4 c02a 	ldrh.w	ip, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
900099e0:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
900099e2:	6260      	str	r0, [r4, #36]	@ 0x24
      hi2c->XferCount--;
900099e4:	f10c 3cff 	add.w	ip, ip, #4294967295
      hi2c->XferSize--;
900099e8:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
900099ea:	fa1f fc8c 	uxth.w	ip, ip
      hi2c->XferSize--;
900099ee:	8523      	strh	r3, [r4, #40]	@ 0x28
      hi2c->XferCount--;
900099f0:	f8a4 c02a 	strh.w	ip, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
900099f4:	8d61      	ldrh	r1, [r4, #42]	@ 0x2a
900099f6:	b289      	uxth	r1, r1
900099f8:	2900      	cmp	r1, #0
900099fa:	d0dd      	beq.n	900099b8 <HAL_I2C_Mem_Write+0xe0>
900099fc:	2b00      	cmp	r3, #0
900099fe:	d1db      	bne.n	900099b8 <HAL_I2C_Mem_Write+0xe0>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
90009a00:	463b      	mov	r3, r7
90009a02:	2180      	movs	r1, #128	@ 0x80
90009a04:	4620      	mov	r0, r4
90009a06:	9600      	str	r6, [sp, #0]
90009a08:	f7ff fd6c 	bl	900094e4 <I2C_WaitOnFlagUntilTimeout>
          hi2c->XferSize = MAX_NBYTE_SIZE;
90009a0c:	f04f 0cff 	mov.w	ip, #255	@ 0xff
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
90009a10:	2800      	cmp	r0, #0
90009a12:	d183      	bne.n	9000991c <HAL_I2C_Mem_Write+0x44>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009a14:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009a16:	f8df e0b0 	ldr.w	lr, [pc, #176]	@ 90009ac8 <HAL_I2C_Mem_Write+0x1f0>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009a1a:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009a1c:	492b      	ldr	r1, [pc, #172]	@ (90009acc <HAL_I2C_Mem_Write+0x1f4>)
90009a1e:	4670      	mov	r0, lr
90009a20:	6822      	ldr	r2, [r4, #0]
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009a22:	4563      	cmp	r3, ip
90009a24:	d909      	bls.n	90009a3a <HAL_I2C_Mem_Write+0x162>
  MODIFY_REG(hi2c->Instance->CR2, \
90009a26:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
90009a28:	f8a4 c028 	strh.w	ip, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009a2c:	ea03 030e 	and.w	r3, r3, lr
90009a30:	ea43 030b 	orr.w	r3, r3, fp
90009a34:	4319      	orrs	r1, r3
90009a36:	6051      	str	r1, [r2, #4]
}
90009a38:	e7be      	b.n	900099b8 <HAL_I2C_Mem_Write+0xe0>
          hi2c->XferSize = hi2c->XferCount;
90009a3a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009a3c:	6851      	ldr	r1, [r2, #4]
          hi2c->XferSize = hi2c->XferCount;
90009a3e:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009a40:	4001      	ands	r1, r0
          hi2c->XferSize = hi2c->XferCount;
90009a42:	8523      	strh	r3, [r4, #40]	@ 0x28
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90009a44:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009a46:	ea4b 4303 	orr.w	r3, fp, r3, lsl #16
90009a4a:	430b      	orrs	r3, r1
90009a4c:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
90009a50:	6053      	str	r3, [r2, #4]
}
90009a52:	e7b1      	b.n	900099b8 <HAL_I2C_Mem_Write+0xe0>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90009a54:	ea4f 2219 	mov.w	r2, r9, lsr #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009a58:	4639      	mov	r1, r7
90009a5a:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90009a5c:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009a5e:	4632      	mov	r2, r6
90009a60:	f7ff fc8a 	bl	90009378 <I2C_WaitOnTXISFlagUntilTimeout>
90009a64:	b188      	cbz	r0, 90009a8a <HAL_I2C_Mem_Write+0x1b2>
      __HAL_UNLOCK(hi2c);
90009a66:	2300      	movs	r3, #0
90009a68:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
90009a6c:	e756      	b.n	9000991c <HAL_I2C_Mem_Write+0x44>
      hi2c->XferSize = hi2c->XferCount;
90009a6e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009a70:	4815      	ldr	r0, [pc, #84]	@ (90009ac8 <HAL_I2C_Mem_Write+0x1f0>)
      hi2c->XferSize = hi2c->XferCount;
90009a72:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009a74:	6851      	ldr	r1, [r2, #4]
      hi2c->XferSize = hi2c->XferCount;
90009a76:	8523      	strh	r3, [r4, #40]	@ 0x28
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90009a78:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009a7a:	4001      	ands	r1, r0
90009a7c:	ea4b 4303 	orr.w	r3, fp, r3, lsl #16
90009a80:	430b      	orrs	r3, r1
90009a82:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
90009a86:	6053      	str	r3, [r2, #4]
}
90009a88:	e79a      	b.n	900099c0 <HAL_I2C_Mem_Write+0xe8>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90009a8a:	fa5f f289 	uxtb.w	r2, r9
90009a8e:	6823      	ldr	r3, [r4, #0]
90009a90:	629a      	str	r2, [r3, #40]	@ 0x28
90009a92:	e778      	b.n	90009986 <HAL_I2C_Mem_Write+0xae>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90009a94:	4632      	mov	r2, r6
90009a96:	4639      	mov	r1, r7
90009a98:	4620      	mov	r0, r4
90009a9a:	f7ff fdef 	bl	9000967c <I2C_WaitOnSTOPFlagUntilTimeout>
90009a9e:	2800      	cmp	r0, #0
90009aa0:	f47f af3c 	bne.w	9000991c <HAL_I2C_Mem_Write+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009aa4:	6823      	ldr	r3, [r4, #0]
90009aa6:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
90009aa8:	4d09      	ldr	r5, [pc, #36]	@ (90009ad0 <HAL_I2C_Mem_Write+0x1f8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009aaa:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
90009aac:	685a      	ldr	r2, [r3, #4]
90009aae:	402a      	ands	r2, r5
90009ab0:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90009ab2:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
90009ab6:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
90009aba:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
90009abe:	e72e      	b.n	9000991e <HAL_I2C_Mem_Write+0x46>
90009ac0:	fc009800 	.word	0xfc009800
90009ac4:	01002000 	.word	0x01002000
90009ac8:	fc009c00 	.word	0xfc009c00
90009acc:	01ff0000 	.word	0x01ff0000
90009ad0:	fe00e800 	.word	0xfe00e800

90009ad4 <HAL_I2C_Mem_Read>:
{
90009ad4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90009ad8:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
90009ada:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
{
90009ade:	b082      	sub	sp, #8
  if (hi2c->State == HAL_I2C_STATE_READY)
90009ae0:	2820      	cmp	r0, #32
{
90009ae2:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
90009ae6:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
  if (hi2c->State == HAL_I2C_STATE_READY)
90009ae8:	d11e      	bne.n	90009b28 <HAL_I2C_Mem_Read+0x54>
    if ((pData == NULL) || (Size == 0U))
90009aea:	4698      	mov	r8, r3
90009aec:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90009aee:	b1bb      	cbz	r3, 90009b20 <HAL_I2C_Mem_Read+0x4c>
90009af0:	f1ba 0f00 	cmp.w	sl, #0
90009af4:	d014      	beq.n	90009b20 <HAL_I2C_Mem_Read+0x4c>
    __HAL_LOCK(hi2c);
90009af6:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
90009afa:	2b01      	cmp	r3, #1
90009afc:	d014      	beq.n	90009b28 <HAL_I2C_Mem_Read+0x54>
90009afe:	2301      	movs	r3, #1
90009b00:	460d      	mov	r5, r1
90009b02:	4691      	mov	r9, r2
90009b04:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    tickstart = HAL_GetTick();
90009b08:	f7fe fb3c 	bl	90008184 <HAL_GetTick>
90009b0c:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
90009b0e:	4620      	mov	r0, r4
90009b10:	4631      	mov	r1, r6
90009b12:	f7ff fb91 	bl	90009238 <I2C_WaitOnFlagUntilTimeout.constprop.0>
90009b16:	b158      	cbz	r0, 90009b30 <HAL_I2C_Mem_Read+0x5c>
      return  HAL_ERROR;
90009b18:	2001      	movs	r0, #1
}
90009b1a:	b002      	add	sp, #8
90009b1c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90009b20:	f44f 7300 	mov.w	r3, #512	@ 0x200
90009b24:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
90009b26:	e7f7      	b.n	90009b18 <HAL_I2C_Mem_Read+0x44>
    __HAL_LOCK(hi2c);
90009b28:	2002      	movs	r0, #2
}
90009b2a:	b002      	add	sp, #8
90009b2c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->pBuffPtr  = pData;
90009b30:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
90009b32:	f3c5 0509 	ubfx	r5, r5, #0, #10
  MODIFY_REG(hi2c->Instance->CR2, \
90009b36:	6822      	ldr	r2, [r4, #0]
    hi2c->pBuffPtr  = pData;
90009b38:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
90009b3a:	2322      	movs	r3, #34	@ 0x22
  MODIFY_REG(hi2c->Instance->CR2, \
90009b3c:	495f      	ldr	r1, [pc, #380]	@ (90009cbc <HAL_I2C_Mem_Read+0x1e8>)
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
90009b3e:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90009b42:	2340      	movs	r3, #64	@ 0x40
    hi2c->XferISR   = NULL;
90009b44:	6360      	str	r0, [r4, #52]	@ 0x34
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90009b46:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90009b4a:	6460      	str	r0, [r4, #68]	@ 0x44
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009b4c:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
90009b4e:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009b52:	6853      	ldr	r3, [r2, #4]
90009b54:	400b      	ands	r3, r1
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90009b56:	fa5f f188 	uxtb.w	r1, r8
  MODIFY_REG(hi2c->Instance->CR2, \
90009b5a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009b5e:	4639      	mov	r1, r7
  MODIFY_REG(hi2c->Instance->CR2, \
90009b60:	432b      	orrs	r3, r5
90009b62:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
90009b66:	6053      	str	r3, [r2, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009b68:	4632      	mov	r2, r6
90009b6a:	f7ff fc05 	bl	90009378 <I2C_WaitOnTXISFlagUntilTimeout>
90009b6e:	2800      	cmp	r0, #0
90009b70:	d177      	bne.n	90009c62 <HAL_I2C_Mem_Read+0x18e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90009b72:	f1b8 0f01 	cmp.w	r8, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90009b76:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90009b78:	d16a      	bne.n	90009c50 <HAL_I2C_Mem_Read+0x17c>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90009b7a:	fa5f f289 	uxtb.w	r2, r9
90009b7e:	629a      	str	r2, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
90009b80:	463b      	mov	r3, r7
90009b82:	2200      	movs	r2, #0
90009b84:	2140      	movs	r1, #64	@ 0x40
90009b86:	4620      	mov	r0, r4
90009b88:	9600      	str	r6, [sp, #0]
90009b8a:	f7ff fcab 	bl	900094e4 <I2C_WaitOnFlagUntilTimeout>
90009b8e:	2800      	cmp	r0, #0
90009b90:	d167      	bne.n	90009c62 <HAL_I2C_Mem_Read+0x18e>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009b92:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009b94:	6822      	ldr	r2, [r4, #0]
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009b96:	b29b      	uxth	r3, r3
90009b98:	2bff      	cmp	r3, #255	@ 0xff
90009b9a:	d966      	bls.n	90009c6a <HAL_I2C_Mem_Read+0x196>
  MODIFY_REG(hi2c->Instance->CR2, \
90009b9c:	6853      	ldr	r3, [r2, #4]
90009b9e:	4947      	ldr	r1, [pc, #284]	@ (90009cbc <HAL_I2C_Mem_Read+0x1e8>)
90009ba0:	400b      	ands	r3, r1
90009ba2:	4947      	ldr	r1, [pc, #284]	@ (90009cc0 <HAL_I2C_Mem_Read+0x1ec>)
90009ba4:	432b      	orrs	r3, r5
90009ba6:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
90009ba8:	23ff      	movs	r3, #255	@ 0xff
90009baa:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009bac:	6051      	str	r1, [r2, #4]
}
90009bae:	e003      	b.n	90009bb8 <HAL_I2C_Mem_Read+0xe4>
    } while (hi2c->XferCount > 0U);
90009bb0:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
90009bb2:	b29b      	uxth	r3, r3
90009bb4:	2b00      	cmp	r3, #0
90009bb6:	d06b      	beq.n	90009c90 <HAL_I2C_Mem_Read+0x1bc>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
90009bb8:	463b      	mov	r3, r7
90009bba:	2200      	movs	r2, #0
90009bbc:	2104      	movs	r1, #4
90009bbe:	4620      	mov	r0, r4
90009bc0:	9600      	str	r6, [sp, #0]
90009bc2:	f7ff fc8f 	bl	900094e4 <I2C_WaitOnFlagUntilTimeout>
90009bc6:	2800      	cmp	r0, #0
90009bc8:	d1a6      	bne.n	90009b18 <HAL_I2C_Mem_Read+0x44>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
90009bca:	6821      	ldr	r1, [r4, #0]
90009bcc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009bce:	6a49      	ldr	r1, [r1, #36]	@ 0x24
90009bd0:	7019      	strb	r1, [r3, #0]
      hi2c->XferCount--;
90009bd2:	f8b4 c02a 	ldrh.w	ip, [r4, #42]	@ 0x2a
      hi2c->pBuffPtr++;
90009bd6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
      hi2c->XferCount--;
90009bd8:	f10c 3cff 	add.w	ip, ip, #4294967295
      hi2c->XferSize--;
90009bdc:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      hi2c->pBuffPtr++;
90009bde:	3101      	adds	r1, #1
      hi2c->XferCount--;
90009be0:	fa1f fc8c 	uxth.w	ip, ip
      hi2c->XferSize--;
90009be4:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
90009be6:	6261      	str	r1, [r4, #36]	@ 0x24
      hi2c->XferCount--;
90009be8:	f8a4 c02a 	strh.w	ip, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
90009bec:	b29b      	uxth	r3, r3
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90009bee:	8d61      	ldrh	r1, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
90009bf0:	8523      	strh	r3, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90009bf2:	b289      	uxth	r1, r1
90009bf4:	2900      	cmp	r1, #0
90009bf6:	d0db      	beq.n	90009bb0 <HAL_I2C_Mem_Read+0xdc>
90009bf8:	2b00      	cmp	r3, #0
90009bfa:	d1d9      	bne.n	90009bb0 <HAL_I2C_Mem_Read+0xdc>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
90009bfc:	4602      	mov	r2, r0
90009bfe:	463b      	mov	r3, r7
90009c00:	2180      	movs	r1, #128	@ 0x80
90009c02:	4620      	mov	r0, r4
90009c04:	9600      	str	r6, [sp, #0]
90009c06:	f7ff fc6d 	bl	900094e4 <I2C_WaitOnFlagUntilTimeout>
          hi2c->XferSize = MAX_NBYTE_SIZE;
90009c0a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
90009c0e:	2800      	cmp	r0, #0
90009c10:	d182      	bne.n	90009b18 <HAL_I2C_Mem_Read+0x44>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009c12:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009c14:	f8df e0b8 	ldr.w	lr, [pc, #184]	@ 90009cd0 <HAL_I2C_Mem_Read+0x1fc>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009c18:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009c1a:	492a      	ldr	r1, [pc, #168]	@ (90009cc4 <HAL_I2C_Mem_Read+0x1f0>)
90009c1c:	4670      	mov	r0, lr
90009c1e:	6822      	ldr	r2, [r4, #0]
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009c20:	4563      	cmp	r3, ip
90009c22:	d908      	bls.n	90009c36 <HAL_I2C_Mem_Read+0x162>
  MODIFY_REG(hi2c->Instance->CR2, \
90009c24:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
90009c26:	f8a4 c028 	strh.w	ip, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009c2a:	ea03 030e 	and.w	r3, r3, lr
90009c2e:	432b      	orrs	r3, r5
90009c30:	4319      	orrs	r1, r3
90009c32:	6051      	str	r1, [r2, #4]
}
90009c34:	e7bc      	b.n	90009bb0 <HAL_I2C_Mem_Read+0xdc>
          hi2c->XferSize = hi2c->XferCount;
90009c36:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009c38:	6851      	ldr	r1, [r2, #4]
          hi2c->XferSize = hi2c->XferCount;
90009c3a:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009c3c:	4001      	ands	r1, r0
          hi2c->XferSize = hi2c->XferCount;
90009c3e:	8523      	strh	r3, [r4, #40]	@ 0x28
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90009c40:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009c42:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
90009c46:	430b      	orrs	r3, r1
90009c48:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
90009c4c:	6053      	str	r3, [r2, #4]
}
90009c4e:	e7af      	b.n	90009bb0 <HAL_I2C_Mem_Read+0xdc>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90009c50:	ea4f 2219 	mov.w	r2, r9, lsr #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009c54:	4639      	mov	r1, r7
90009c56:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90009c58:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009c5a:	4632      	mov	r2, r6
90009c5c:	f7ff fb8c 	bl	90009378 <I2C_WaitOnTXISFlagUntilTimeout>
90009c60:	b188      	cbz	r0, 90009c86 <HAL_I2C_Mem_Read+0x1b2>
      __HAL_UNLOCK(hi2c);
90009c62:	2300      	movs	r3, #0
90009c64:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
90009c68:	e756      	b.n	90009b18 <HAL_I2C_Mem_Read+0x44>
      hi2c->XferSize = hi2c->XferCount;
90009c6a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009c6c:	4813      	ldr	r0, [pc, #76]	@ (90009cbc <HAL_I2C_Mem_Read+0x1e8>)
      hi2c->XferSize = hi2c->XferCount;
90009c6e:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009c70:	6851      	ldr	r1, [r2, #4]
      hi2c->XferSize = hi2c->XferCount;
90009c72:	8523      	strh	r3, [r4, #40]	@ 0x28
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90009c74:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009c76:	4001      	ands	r1, r0
90009c78:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
90009c7c:	430b      	orrs	r3, r1
90009c7e:	4912      	ldr	r1, [pc, #72]	@ (90009cc8 <HAL_I2C_Mem_Read+0x1f4>)
90009c80:	4319      	orrs	r1, r3
90009c82:	6051      	str	r1, [r2, #4]
}
90009c84:	e798      	b.n	90009bb8 <HAL_I2C_Mem_Read+0xe4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90009c86:	fa5f f289 	uxtb.w	r2, r9
90009c8a:	6823      	ldr	r3, [r4, #0]
90009c8c:	629a      	str	r2, [r3, #40]	@ 0x28
90009c8e:	e777      	b.n	90009b80 <HAL_I2C_Mem_Read+0xac>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90009c90:	4632      	mov	r2, r6
90009c92:	4639      	mov	r1, r7
90009c94:	4620      	mov	r0, r4
90009c96:	f7ff fcf1 	bl	9000967c <I2C_WaitOnSTOPFlagUntilTimeout>
90009c9a:	2800      	cmp	r0, #0
90009c9c:	f47f af3c 	bne.w	90009b18 <HAL_I2C_Mem_Read+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009ca0:	6823      	ldr	r3, [r4, #0]
90009ca2:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
90009ca4:	4d09      	ldr	r5, [pc, #36]	@ (90009ccc <HAL_I2C_Mem_Read+0x1f8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009ca6:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
90009ca8:	685a      	ldr	r2, [r3, #4]
90009caa:	402a      	ands	r2, r5
90009cac:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90009cae:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
90009cb2:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
90009cb6:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
90009cba:	e72e      	b.n	90009b1a <HAL_I2C_Mem_Read+0x46>
90009cbc:	fc009800 	.word	0xfc009800
90009cc0:	01ff2400 	.word	0x01ff2400
90009cc4:	01ff0000 	.word	0x01ff0000
90009cc8:	02002400 	.word	0x02002400
90009ccc:	fe00e800 	.word	0xfe00e800
90009cd0:	fc009c00 	.word	0xfc009c00

90009cd4 <HAL_I2C_GetState>:
  return hi2c->State;
90009cd4:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
}
90009cd8:	4770      	bx	lr
90009cda:	bf00      	nop

90009cdc <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
90009cdc:	6c40      	ldr	r0, [r0, #68]	@ 0x44
}
90009cde:	4770      	bx	lr

90009ce0 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
90009ce0:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
90009ce4:	2a20      	cmp	r2, #32
90009ce6:	d123      	bne.n	90009d30 <HAL_I2CEx_ConfigAnalogFilter+0x50>
90009ce8:	fa5f fc82 	uxtb.w	ip, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90009cec:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
90009cf0:	4603      	mov	r3, r0
90009cf2:	2a01      	cmp	r2, #1
90009cf4:	d01c      	beq.n	90009d30 <HAL_I2CEx_ConfigAnalogFilter+0x50>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
90009cf6:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
90009cf8:	2024      	movs	r0, #36	@ 0x24
{
90009cfa:	b500      	push	{lr}
    hi2c->State = HAL_I2C_STATE_BUSY;
90009cfc:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90009d00:	f04f 0e00 	mov.w	lr, #0
    __HAL_I2C_DISABLE(hi2c);
90009d04:	6810      	ldr	r0, [r2, #0]
90009d06:	f020 0001 	bic.w	r0, r0, #1
90009d0a:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
90009d0c:	6810      	ldr	r0, [r2, #0]
90009d0e:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
90009d12:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
90009d14:	6810      	ldr	r0, [r2, #0]
90009d16:	4301      	orrs	r1, r0

    return HAL_OK;
90009d18:	4670      	mov	r0, lr
    hi2c->Instance->CR1 |= AnalogFilter;
90009d1a:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
90009d1c:	6811      	ldr	r1, [r2, #0]
90009d1e:	f041 0101 	orr.w	r1, r1, #1
90009d22:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
90009d24:	f883 c041 	strb.w	ip, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
90009d28:	f883 e040 	strb.w	lr, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
90009d2c:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_LOCK(hi2c);
90009d30:	2002      	movs	r0, #2
}
90009d32:	4770      	bx	lr

90009d34 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
90009d34:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
90009d38:	2a20      	cmp	r2, #32
90009d3a:	d122      	bne.n	90009d82 <HAL_I2CEx_ConfigDigitalFilter+0x4e>
90009d3c:	4603      	mov	r3, r0
{
90009d3e:	b500      	push	{lr}
90009d40:	fa5f fe82 	uxtb.w	lr, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90009d44:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
90009d48:	2a01      	cmp	r2, #1
90009d4a:	d01c      	beq.n	90009d86 <HAL_I2CEx_ConfigDigitalFilter+0x52>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
90009d4c:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
90009d4e:	2024      	movs	r0, #36	@ 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90009d50:	f04f 0c00 	mov.w	ip, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
90009d54:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
    __HAL_I2C_DISABLE(hi2c);
90009d58:	6810      	ldr	r0, [r2, #0]
90009d5a:	f020 0001 	bic.w	r0, r0, #1
90009d5e:	6010      	str	r0, [r2, #0]
    tmpreg = hi2c->Instance->CR1;
90009d60:	6810      	ldr	r0, [r2, #0]
    tmpreg &= ~(I2C_CR1_DNF);
90009d62:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00
    tmpreg |= DigitalFilter << 8U;
90009d66:	ea40 2101 	orr.w	r1, r0, r1, lsl #8

    return HAL_OK;
90009d6a:	4660      	mov	r0, ip
    hi2c->Instance->CR1 = tmpreg;
90009d6c:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
90009d6e:	6811      	ldr	r1, [r2, #0]
90009d70:	f041 0101 	orr.w	r1, r1, #1
90009d74:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
90009d76:	f883 e041 	strb.w	lr, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
90009d7a:	f883 c040 	strb.w	ip, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
90009d7e:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_LOCK(hi2c);
90009d82:	2002      	movs	r0, #2
}
90009d84:	4770      	bx	lr
    __HAL_LOCK(hi2c);
90009d86:	2002      	movs	r0, #2
}
90009d88:	f85d fb04 	ldr.w	pc, [sp], #4

90009d8c <JPEG_Bits_To_SizeCodes>:
  * @param  Huffcode pointer to codes table
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode, uint32_t *LastK)
{
90009d8c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90009d90:	4681      	mov	r9, r0
90009d92:	460d      	mov	r5, r1
90009d94:	4614      	mov	r4, r2
90009d96:	469a      	mov	sl, r3

  /* Figure C.1: Generation of table of Huffman code sizes */
  p = 0;
  for (l = 0; l < 16UL; l++)
  {
    i = (uint32_t)Bits[l];
90009d98:	7806      	ldrb	r6, [r0, #0]
90009d9a:	2701      	movs	r7, #1
  p = 0;
90009d9c:	f04f 0800 	mov.w	r8, #0
90009da0:	e006      	b.n	90009db0 <JPEG_Bits_To_SizeCodes+0x24>
    i = (uint32_t)Bits[l];
90009da2:	f819 6f01 	ldrb.w	r6, [r9, #1]!
    if ((p + i) > 256UL)
90009da6:	eb06 0308 	add.w	r3, r6, r8
90009daa:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
90009dae:	d83c      	bhi.n	90009e2a <JPEG_Bits_To_SizeCodes+0x9e>
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
    {
      Huffsize[p] = (uint8_t) l + 1U;
90009db0:	4632      	mov	r2, r6
90009db2:	4639      	mov	r1, r7
90009db4:	eb05 0008 	add.w	r0, r5, r8
    while (i != 0UL)
90009db8:	b116      	cbz	r6, 90009dc0 <JPEG_Bits_To_SizeCodes+0x34>
90009dba:	44b0      	add	r8, r6
      Huffsize[p] = (uint8_t) l + 1U;
90009dbc:	f023 fdaa 	bl	9002d914 <memset>
  for (l = 0; l < 16UL; l++)
90009dc0:	2f10      	cmp	r7, #16
    if ((p + i) > 256UL)
90009dc2:	f107 0701 	add.w	r7, r7, #1
  for (l = 0; l < 16UL; l++)
90009dc6:	d1ec      	bne.n	90009da2 <JPEG_Bits_To_SizeCodes+0x16>
      p++;
      i--;
    }
  }
  Huffsize[p] = 0;
90009dc8:	f04f 0900 	mov.w	r9, #0
90009dcc:	f805 9008 	strb.w	r9, [r5, r8]
  *LastK = p;
90009dd0:	f8ca 8000 	str.w	r8, [sl]

  /* Figure C.2: Generation of table of Huffman codes */
  code = 0;
  si = Huffsize[0];
90009dd4:	7829      	ldrb	r1, [r5, #0]
90009dd6:	460a      	mov	r2, r1
  p = 0;
  while (Huffsize[p] != 0U)
90009dd8:	b321      	cbz	r1, 90009e24 <JPEG_Bits_To_SizeCodes+0x98>
90009dda:	f06f 4840 	mvn.w	r8, #3221225472	@ 0xc0000000
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if(si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
90009dde:	2701      	movs	r7, #1
  p = 0;
90009de0:	464e      	mov	r6, r9
    while (((uint32_t) Huffsize[p]) == si)
90009de2:	4291      	cmp	r1, r2
90009de4:	d124      	bne.n	90009e30 <JPEG_Bits_To_SizeCodes+0xa4>
90009de6:	eb06 0008 	add.w	r0, r6, r8
90009dea:	eb05 0c06 	add.w	ip, r5, r6
90009dee:	464b      	mov	r3, r9
90009df0:	eb04 0080 	add.w	r0, r4, r0, lsl #2
      Huffcode[p] = code;
90009df4:	f840 3f04 	str.w	r3, [r0, #4]!
      code++;
90009df8:	4619      	mov	r1, r3
    while (((uint32_t) Huffsize[p]) == si)
90009dfa:	f81c ef01 	ldrb.w	lr, [ip, #1]!
      code++;
90009dfe:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[p]) == si)
90009e00:	4596      	cmp	lr, r2
90009e02:	d0f7      	beq.n	90009df4 <JPEG_Bits_To_SizeCodes+0x68>
90009e04:	3601      	adds	r6, #1
90009e06:	eba6 0609 	sub.w	r6, r6, r9
      p++;
90009e0a:	440e      	add	r6, r1
    if(si > 31UL)
90009e0c:	2a1f      	cmp	r2, #31
90009e0e:	d80c      	bhi.n	90009e2a <JPEG_Bits_To_SizeCodes+0x9e>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
90009e10:	fa07 f102 	lsl.w	r1, r7, r2
90009e14:	4299      	cmp	r1, r3
90009e16:	d908      	bls.n	90009e2a <JPEG_Bits_To_SizeCodes+0x9e>
  while (Huffsize[p] != 0U)
90009e18:	5da9      	ldrb	r1, [r5, r6]
    {
      return HAL_ERROR;
    }
    code <<= 1;
90009e1a:	ea4f 0943 	mov.w	r9, r3, lsl #1
    si++;
90009e1e:	3201      	adds	r2, #1
  while (Huffsize[p] != 0U)
90009e20:	2900      	cmp	r1, #0
90009e22:	d1de      	bne.n	90009de2 <JPEG_Bits_To_SizeCodes+0x56>
  }
  /* Return function status */
  return HAL_OK;
90009e24:	2000      	movs	r0, #0
}
90009e26:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      return HAL_ERROR;
90009e2a:	2001      	movs	r0, #1
}
90009e2c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while (((uint32_t) Huffsize[p]) == si)
90009e30:	464b      	mov	r3, r9
90009e32:	e7eb      	b.n	90009e0c <JPEG_Bits_To_SizeCodes+0x80>

90009e34 <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
90009e34:	b5f0      	push	{r4, r5, r6, r7, lr}
90009e36:	f2ad 5d14 	subw	sp, sp, #1300	@ 0x514
90009e3a:	460d      	mov	r5, r1
90009e3c:	4604      	mov	r4, r0
  uint32_t k;
  uint32_t l;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
90009e3e:	ab01      	add	r3, sp, #4
90009e40:	aa43      	add	r2, sp, #268	@ 0x10c
90009e42:	a902      	add	r1, sp, #8
90009e44:	f7ff ffa2 	bl	90009d8c <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
90009e48:	b9d0      	cbnz	r0, 90009e80 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
90009e4a:	9f01      	ldr	r7, [sp, #4]
90009e4c:	b1c7      	cbz	r7, 90009e80 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
90009e4e:	370f      	adds	r7, #15
90009e50:	f50d 7e86 	add.w	lr, sp, #268	@ 0x10c
90009e54:	a902      	add	r1, sp, #8
90009e56:	f104 0c0f 	add.w	ip, r4, #15
90009e5a:	4427      	add	r7, r4
90009e5c:	e009      	b.n	90009e72 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x3e>
      return HAL_ERROR; /* Huffman Table overflow error*/
    }
    else
    {
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009e5e:	f811 2b01 	ldrb.w	r2, [r1], #1
  while (k < lastK)
90009e62:	45bc      	cmp	ip, r7
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009e64:	f85e 6b04 	ldr.w	r6, [lr], #4
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009e68:	f102 32ff 	add.w	r2, r2, #4294967295
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009e6c:	60e6      	str	r6, [r4, #12]
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009e6e:	54ea      	strb	r2, [r5, r3]
  while (k < lastK)
90009e70:	d006      	beq.n	90009e80 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    l = DC_BitsValsTable->HuffVal[k];
90009e72:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
90009e76:	2b0b      	cmp	r3, #11
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009e78:	eb05 0483 	add.w	r4, r5, r3, lsl #2
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
90009e7c:	d9ef      	bls.n	90009e5e <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2a>
      return HAL_ERROR; /* Huffman Table overflow error*/
90009e7e:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90009e80:	f20d 5d14 	addw	sp, sp, #1300	@ 0x514
90009e84:	bdf0      	pop	{r4, r5, r6, r7, pc}
90009e86:	bf00      	nop

90009e88 <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
90009e88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t i;
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address, *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
90009e8c:	6804      	ldr	r4, [r0, #0]
{
90009e8e:	b093      	sub	sp, #76	@ 0x4c
90009e90:	4608      	mov	r0, r1
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
90009e92:	f504 63f8 	add.w	r3, r4, #1984	@ 0x7c0
90009e96:	429a      	cmp	r2, r3
90009e98:	f000 809d 	beq.w	90009fd6 <JPEG_Set_HuffDC_Mem+0x14e>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
90009e9c:	f504 63fc 	add.w	r3, r4, #2016	@ 0x7e0
90009ea0:	429a      	cmp	r2, r3
90009ea2:	d003      	beq.n	90009eac <JPEG_Set_HuffDC_Mem+0x24>
  {
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
90009ea4:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90009ea6:	b013      	add	sp, #76	@ 0x4c
90009ea8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
90009eac:	f504 64ff 	add.w	r4, r4, #2040	@ 0x7f8
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
90009eb0:	a903      	add	r1, sp, #12
90009eb2:	f7ff ffbf 	bl	90009e34 <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
90009eb6:	2800      	cmp	r0, #0
90009eb8:	d1f5      	bne.n	90009ea6 <JPEG_Set_HuffDC_Mem+0x1e>
    *addressDef = 0x0FFF0FFF;
90009eba:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009ebe:	f89d a017 	ldrb.w	sl, [sp, #23]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009ec2:	f89d e016 	ldrb.w	lr, [sp, #22]
    *addressDef = 0x0FFF0FFF;
90009ec6:	6023      	str	r3, [r4, #0]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009ec8:	ea4f 2a0a 	mov.w	sl, sl, lsl #8
    *addressDef = 0x0FFF0FFF;
90009ecc:	6063      	str	r3, [r4, #4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009ece:	ea4f 2e0e 	mov.w	lr, lr, lsl #8
90009ed2:	f89d 300e 	ldrb.w	r3, [sp, #14]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009ed6:	f40a 6a70 	and.w	sl, sl, #3840	@ 0xf00
90009eda:	f89d 2044 	ldrb.w	r2, [sp, #68]	@ 0x44
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009ede:	f40e 6e70 	and.w	lr, lr, #3840	@ 0xf00
90009ee2:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009ee4:	f89d 9015 	ldrb.w	r9, [sp, #21]
90009ee8:	ea4a 0a02 	orr.w	sl, sl, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009eec:	f89d c014 	ldrb.w	ip, [sp, #20]
90009ef0:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009ef4:	ea4f 2909 	mov.w	r9, r9, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009ef8:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009efc:	f89d 8013 	ldrb.w	r8, [sp, #19]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f00:	9301      	str	r3, [sp, #4]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f02:	f409 6970 	and.w	r9, r9, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f06:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
90009f0a:	f40c 6c70 	and.w	ip, ip, #3840	@ 0xf00
90009f0e:	f89d 1012 	ldrb.w	r1, [sp, #18]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f12:	ea4f 2808 	mov.w	r8, r8, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f16:	ea4e 0e03 	orr.w	lr, lr, r3
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f1a:	f89d 7011 	ldrb.w	r7, [sp, #17]
90009f1e:	f408 6870 	and.w	r8, r8, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f22:	0209      	lsls	r1, r1, #8
      *address = lsb | (msb << 16);
90009f24:	ea4e 4e0a 	orr.w	lr, lr, sl, lsl #16
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f28:	f89d 2010 	ldrb.w	r2, [sp, #16]
90009f2c:	f401 6170 	and.w	r1, r1, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f30:	023f      	lsls	r7, r7, #8
      *address = lsb | (msb << 16);
90009f32:	f844 ec04 	str.w	lr, [r4, #-4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f36:	0212      	lsls	r2, r2, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f38:	f89d e03c 	ldrb.w	lr, [sp, #60]	@ 0x3c
90009f3c:	f407 6770 	and.w	r7, r7, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f40:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f44:	f89d 600f 	ldrb.w	r6, [sp, #15]
90009f48:	ea49 090e 	orr.w	r9, r9, lr
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f4c:	f89d e038 	ldrb.w	lr, [sp, #56]	@ 0x38
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f50:	0236      	lsls	r6, r6, #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f52:	9b01      	ldr	r3, [sp, #4]
90009f54:	ea4c 0c0e 	orr.w	ip, ip, lr
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f58:	f89d 500d 	ldrb.w	r5, [sp, #13]
90009f5c:	f406 6670 	and.w	r6, r6, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f60:	f89d b00c 	ldrb.w	fp, [sp, #12]
      *address = lsb | (msb << 16);
90009f64:	ea4c 4c09 	orr.w	ip, ip, r9, lsl #16
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f68:	022d      	lsls	r5, r5, #8
      *address = lsb | (msb << 16);
90009f6a:	f844 cc08 	str.w	ip, [r4, #-8]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f6e:	ea4f 2b0b 	mov.w	fp, fp, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f72:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
90009f76:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f7a:	f40b 6b70 	and.w	fp, fp, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f7e:	ea48 080c 	orr.w	r8, r8, ip
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f82:	f89d c030 	ldrb.w	ip, [sp, #48]	@ 0x30
90009f86:	ea41 010c 	orr.w	r1, r1, ip
      *address = lsb | (msb << 16);
90009f8a:	ea41 4108 	orr.w	r1, r1, r8, lsl #16
90009f8e:	f844 1c0c 	str.w	r1, [r4, #-12]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f92:	f89d 102c 	ldrb.w	r1, [sp, #44]	@ 0x2c
90009f96:	430f      	orrs	r7, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f98:	f89d 1028 	ldrb.w	r1, [sp, #40]	@ 0x28
90009f9c:	430a      	orrs	r2, r1
      *address = lsb | (msb << 16);
90009f9e:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
90009fa2:	f844 2c10 	str.w	r2, [r4, #-16]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009fa6:	f89d 2024 	ldrb.w	r2, [sp, #36]	@ 0x24
90009faa:	4316      	orrs	r6, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009fac:	f89d 2020 	ldrb.w	r2, [sp, #32]
90009fb0:	4313      	orrs	r3, r2
      *address = lsb | (msb << 16);
90009fb2:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
90009fb6:	f844 3c14 	str.w	r3, [r4, #-20]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009fba:	f89d 301c 	ldrb.w	r3, [sp, #28]
90009fbe:	431d      	orrs	r5, r3
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009fc0:	f89d 3018 	ldrb.w	r3, [sp, #24]
90009fc4:	ea4b 0303 	orr.w	r3, fp, r3
      *address = lsb | (msb << 16);
90009fc8:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
90009fcc:	f844 3c18 	str.w	r3, [r4, #-24]
}
90009fd0:	b013      	add	sp, #76	@ 0x4c
90009fd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
90009fd6:	f504 64fb 	add.w	r4, r4, #2008	@ 0x7d8
  if (HuffTableDC != NULL)
90009fda:	e769      	b.n	90009eb0 <JPEG_Set_HuffDC_Mem+0x28>

90009fdc <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
90009fdc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_StatusTypeDef error;
  JPEG_AC_HuffCodeTableTypeDef acSizeCodesTable;
  uint32_t i, lsb, msb;
  __IO uint32_t *address, *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
90009fe0:	6804      	ldr	r4, [r0, #0]
{
90009fe2:	f6ad 0d3c 	subw	sp, sp, #2108	@ 0x83c
90009fe6:	460d      	mov	r5, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
90009fe8:	f504 63a0 	add.w	r3, r4, #1280	@ 0x500
90009fec:	429a      	cmp	r2, r3
90009fee:	d041      	beq.n	9000a074 <JPEG_Set_HuffAC_Mem+0x98>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
90009ff0:	f504 63cc 	add.w	r3, r4, #1632	@ 0x660
90009ff4:	429a      	cmp	r2, r3
90009ff6:	d004      	beq.n	9000a002 <JPEG_Set_HuffAC_Mem+0x26>
  {
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
90009ff8:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90009ffa:	f60d 0d3c 	addw	sp, sp, #2108	@ 0x83c
90009ffe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
9000a002:	f204 74a4 	addw	r4, r4, #1956	@ 0x7a4
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
9000a006:	4628      	mov	r0, r5
9000a008:	466b      	mov	r3, sp
9000a00a:	f20d 4234 	addw	r2, sp, #1076	@ 0x434
9000a00e:	a901      	add	r1, sp, #4
9000a010:	f7ff febc 	bl	90009d8c <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
9000a014:	2800      	cmp	r0, #0
9000a016:	d1f0      	bne.n	90009ffa <JPEG_Set_HuffAC_Mem+0x1e>
  while (k < lastK)
9000a018:	9b00      	ldr	r3, [sp, #0]
9000a01a:	b373      	cbz	r3, 9000a07a <JPEG_Set_HuffAC_Mem+0x9e>
9000a01c:	330f      	adds	r3, #15
9000a01e:	f20d 4c34 	addw	ip, sp, #1076	@ 0x434
9000a022:	af01      	add	r7, sp, #4
9000a024:	f105 020f 	add.w	r2, r5, #15
9000a028:	eb05 0e03 	add.w	lr, r5, r3
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000a02c:	ae42      	add	r6, sp, #264	@ 0x108
9000a02e:	e011      	b.n	9000a054 <JPEG_Set_HuffAC_Mem+0x78>
      l = (msb * 10UL) + lsb - 1UL;
9000a030:	eb03 0345 	add.w	r3, r3, r5, lsl #1
    if (l >= JPEG_AC_HUFF_TABLE_SIZE)
9000a034:	2ba1      	cmp	r3, #161	@ 0xa1
9000a036:	d8df      	bhi.n	90009ff8 <JPEG_Set_HuffAC_Mem+0x1c>
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000a038:	f817 5b01 	ldrb.w	r5, [r7], #1
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000a03c:	eb06 0883 	add.w	r8, r6, r3, lsl #2
9000a040:	f85c 1b04 	ldr.w	r1, [ip], #4
  while (k < lastK)
9000a044:	4572      	cmp	r2, lr
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000a046:	f105 35ff 	add.w	r5, r5, #4294967295
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000a04a:	46b1      	mov	r9, r6
9000a04c:	f8c8 10a4 	str.w	r1, [r8, #164]	@ 0xa4
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000a050:	54f5      	strb	r5, [r6, r3]
  while (k < lastK)
9000a052:	d014      	beq.n	9000a07e <JPEG_Set_HuffAC_Mem+0xa2>
    l = AC_BitsValsTable->HuffVal[k];
9000a054:	f812 1f01 	ldrb.w	r1, [r2, #1]!
      l = 160; /*l = 0x00 EOB code*/
9000a058:	23a0      	movs	r3, #160	@ 0xa0
    if (l == 0UL)
9000a05a:	2900      	cmp	r1, #0
9000a05c:	d0ec      	beq.n	9000a038 <JPEG_Set_HuffAC_Mem+0x5c>
      msb = (l & 0xF0UL) >> 4;
9000a05e:	090d      	lsrs	r5, r1, #4
      lsb = (l & 0x0FUL);
9000a060:	f001 030f 	and.w	r3, r1, #15
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
9000a064:	29f0      	cmp	r1, #240	@ 0xf0
      l = (msb * 10UL) + lsb - 1UL;
9000a066:	eb05 0585 	add.w	r5, r5, r5, lsl #2
9000a06a:	f103 33ff 	add.w	r3, r3, #4294967295
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
9000a06e:	d1df      	bne.n	9000a030 <JPEG_Set_HuffAC_Mem+0x54>
      l = 161;
9000a070:	23a1      	movs	r3, #161	@ 0xa1
9000a072:	e7e1      	b.n	9000a038 <JPEG_Set_HuffAC_Mem+0x5c>
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
9000a074:	f204 6444 	addw	r4, r4, #1604	@ 0x644
  if (HuffTableAC != NULL)
9000a078:	e7c5      	b.n	9000a006 <JPEG_Set_HuffAC_Mem+0x2a>
9000a07a:	f50d 7984 	add.w	r9, sp, #264	@ 0x108
      *addressDef = 0x0FFF0FFF;
9000a07e:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
    *addressDef = 0x0FD10FD0;
9000a082:	4a1a      	ldr	r2, [pc, #104]	@ (9000a0ec <JPEG_Set_HuffAC_Mem+0x110>)
9000a084:	eba9 0c89 	sub.w	ip, r9, r9, lsl #2
9000a088:	4649      	mov	r1, r9
      *addressDef = 0x0FFF0FFF;
9000a08a:	6023      	str	r3, [r4, #0]
9000a08c:	f10d 0566 	add.w	r5, sp, #102	@ 0x66
9000a090:	6063      	str	r3, [r4, #4]
9000a092:	f50c 7e4a 	add.w	lr, ip, #808	@ 0x328
9000a096:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD30FD2;
9000a098:	f103 33d3 	add.w	r3, r3, #3553874899	@ 0xd3d3d3d3
    *addressDef = 0x0FD10FD0;
9000a09c:	60e2      	str	r2, [r4, #12]
    *addressDef = 0x0FD30FD2;
9000a09e:	f50c 7c49 	add.w	ip, ip, #804	@ 0x324
9000a0a2:	f103 232c 	add.w	r3, r3, #738208768	@ 0x2c002c00
9000a0a6:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
9000a0a8:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
9000a0ac:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
9000a0ae:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
9000a0b2:	61a3      	str	r3, [r4, #24]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a0b4:	f891 20a1 	ldrb.w	r2, [r1, #161]	@ 0xa1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a0b8:	f891 30a0 	ldrb.w	r3, [r1, #160]	@ 0xa0
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a0bc:	0212      	lsls	r2, r2, #8
9000a0be:	f81e 7021 	ldrb.w	r7, [lr, r1, lsl #2]
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a0c2:	021b      	lsls	r3, r3, #8
9000a0c4:	f81c 6021 	ldrb.w	r6, [ip, r1, lsl #2]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a0c8:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    while (i > 1UL)
9000a0cc:	3902      	subs	r1, #2
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a0ce:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a0d2:	433a      	orrs	r2, r7
    while (i > 1UL)
9000a0d4:	42a9      	cmp	r1, r5
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a0d6:	ea43 0306 	orr.w	r3, r3, r6
      *address = lsb | (msb << 16);
9000a0da:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000a0de:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
9000a0e2:	d1e7      	bne.n	9000a0b4 <JPEG_Set_HuffAC_Mem+0xd8>
}
9000a0e4:	f60d 0d3c 	addw	sp, sp, #2108	@ 0x83c
9000a0e8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000a0ec:	0fd10fd0 	.word	0x0fd10fd0

9000a0f0 <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
9000a0f0:	6d42      	ldr	r2, [r0, #84]	@ 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
9000a0f2:	6803      	ldr	r3, [r0, #0]
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
9000a0f4:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
9000a0f8:	6542      	str	r2, [r0, #84]	@ 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a0fa:	6d42      	ldr	r2, [r0, #84]	@ 0x54
9000a0fc:	f002 0203 	and.w	r2, r2, #3
9000a100:	2a02      	cmp	r2, #2
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
9000a102:	685a      	ldr	r2, [r3, #4]
9000a104:	bf0c      	ite	eq
9000a106:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
9000a10a:	f022 0208 	bicne.w	r2, r2, #8
9000a10e:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a110:	681a      	ldr	r2, [r3, #0]
9000a112:	f022 0201 	bic.w	r2, r2, #1
9000a116:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a118:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a11a:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000a11e:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
9000a120:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a122:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
9000a126:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000a128:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a12a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
9000a12e:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000a130:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000a132:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000a136:	639a      	str	r2, [r3, #56]	@ 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
9000a138:	681a      	ldr	r2, [r3, #0]
9000a13a:	f042 0201 	orr.w	r2, r2, #1
9000a13e:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a140:	6d42      	ldr	r2, [r0, #84]	@ 0x54
9000a142:	f002 020c 	and.w	r2, r2, #12
9000a146:	2a08      	cmp	r2, #8
9000a148:	d00a      	beq.n	9000a160 <JPEG_Init_Process+0x70>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a14a:	6d42      	ldr	r2, [r0, #84]	@ 0x54
9000a14c:	f002 020c 	and.w	r2, r2, #12
9000a150:	2a0c      	cmp	r2, #12
9000a152:	d000      	beq.n	9000a156 <JPEG_Init_Process+0x66>
  }
  else
  {
    /* Nothing to do */
  }
}
9000a154:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000a156:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a158:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000a15c:	631a      	str	r2, [r3, #48]	@ 0x30
}
9000a15e:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
9000a160:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a162:	f042 026e 	orr.w	r2, r2, #110	@ 0x6e
9000a166:	631a      	str	r2, [r3, #48]	@ 0x30
9000a168:	4770      	bx	lr
9000a16a:	bf00      	nop

9000a16c <JPEG_DMA_StartProcess>:
  /*if the MDMA In is triggred with JPEG In FIFO Threshold flag
      then MDMA In buffer size is 32 bytes
    else (MDMA In is triggred with JPEG In FIFO not full flag)
      then MDMA In buffer size is 4 bytes
    */
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a16c:	6b01      	ldr	r1, [r0, #48]	@ 0x30
    else (MDMA Out is triggred with JPEG Out FIFO not empty flag)
      then MDMA buffer size is 4 bytes
    */
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;

  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000a16e:	6a82      	ldr	r2, [r0, #40]	@ 0x28
{
9000a170:	b5f0      	push	{r4, r5, r6, r7, lr}
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a172:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
{
9000a174:	b083      	sub	sp, #12
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000a176:	42aa      	cmp	r2, r5
9000a178:	d32a      	bcc.n	9000a1d0 <JPEG_DMA_StartProcess+0x64>
9000a17a:	4604      	mov	r4, r0
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000a17c:	6b40      	ldr	r0, [r0, #52]	@ 0x34
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000a17e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000a180:	6a86      	ldr	r6, [r0, #40]	@ 0x28
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000a182:	42b3      	cmp	r3, r6
9000a184:	d324      	bcc.n	9000a1d0 <JPEG_DMA_StartProcess+0x64>
    return HAL_ERROR;
  }
  /* Set the JPEG MDMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
  /* Set the MDMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
9000a186:	4f19      	ldr	r7, [pc, #100]	@ (9000a1ec <JPEG_DMA_StartProcess+0x80>)
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
9000a188:	f8df c06c 	ldr.w	ip, [pc, #108]	@ 9000a1f8 <JPEG_DMA_StartProcess+0x8c>
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
9000a18c:	654f      	str	r7, [r1, #84]	@ 0x54
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
9000a18e:	f8c1 c044 	str.w	ip, [r1, #68]	@ 0x44

  /* Set the JPEG MDMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
9000a192:	4917      	ldr	r1, [pc, #92]	@ (9000a1f0 <JPEG_DMA_StartProcess+0x84>)
  /* Set the MDMA In error callback */
  hjpeg->hdmaout->XferErrorCallback = JPEG_MDMAErrorCallback;
9000a194:	6547      	str	r7, [r0, #84]	@ 0x54
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
9000a196:	6441      	str	r1, [r0, #68]	@ 0x44
  /* Set the MDMA Out Abort callback */
  hjpeg->hdmaout->XferAbortCallback = JPEG_MDMAOutAbortCallback;
9000a198:	4916      	ldr	r1, [pc, #88]	@ (9000a1f4 <JPEG_DMA_StartProcess+0x88>)
9000a19a:	6581      	str	r1, [r0, #88]	@ 0x58

  if ((inXfrSize == 0UL) || (outXfrSize == 0UL))
9000a19c:	b1a5      	cbz	r5, 9000a1c8 <JPEG_DMA_StartProcess+0x5c>
9000a19e:	b19e      	cbz	r6, 9000a1c8 <JPEG_DMA_StartProcess+0x5c>
  {
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000a1a0:	fbb2 f1f5 	udiv	r1, r2, r5
9000a1a4:	fb05 2111 	mls	r1, r5, r1, r2
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);


  /* Start MDMA FIFO Out transfer */
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a1a8:	2501      	movs	r5, #1
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000a1aa:	1a52      	subs	r2, r2, r1
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a1ac:	6821      	ldr	r1, [r4, #0]
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000a1ae:	62a2      	str	r2, [r4, #40]	@ 0x28
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a1b0:	3144      	adds	r1, #68	@ 0x44
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);
9000a1b2:	fbb3 f2f6 	udiv	r2, r3, r6
9000a1b6:	fb06 3212 	mls	r2, r6, r2, r3
9000a1ba:	1a9b      	subs	r3, r3, r2
9000a1bc:	62e3      	str	r3, [r4, #44]	@ 0x2c
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a1be:	9500      	str	r5, [sp, #0]
9000a1c0:	69e2      	ldr	r2, [r4, #28]
9000a1c2:	f001 fc0f 	bl	9000b9e4 <HAL_MDMA_Start_IT>
9000a1c6:	b130      	cbz	r0, 9000a1d6 <JPEG_DMA_StartProcess+0x6a>
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a1c8:	6d23      	ldr	r3, [r4, #80]	@ 0x50
9000a1ca:	f043 0304 	orr.w	r3, r3, #4
9000a1ce:	6523      	str	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
9000a1d0:	2001      	movs	r0, #1
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }

  return HAL_OK;
}
9000a1d2:	b003      	add	sp, #12
9000a1d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000a1d6:	6822      	ldr	r2, [r4, #0]
9000a1d8:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000a1da:	69a1      	ldr	r1, [r4, #24]
9000a1dc:	3240      	adds	r2, #64	@ 0x40
9000a1de:	9500      	str	r5, [sp, #0]
9000a1e0:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000a1e2:	f001 fbff 	bl	9000b9e4 <HAL_MDMA_Start_IT>
9000a1e6:	2800      	cmp	r0, #0
9000a1e8:	d0f3      	beq.n	9000a1d2 <JPEG_DMA_StartProcess+0x66>
9000a1ea:	e7ed      	b.n	9000a1c8 <JPEG_DMA_StartProcess+0x5c>
9000a1ec:	9000a7e9 	.word	0x9000a7e9
9000a1f0:	9000aa5d 	.word	0x9000aa5d
9000a1f4:	9000aadd 	.word	0x9000aadd
9000a1f8:	9000a815 	.word	0x9000a815

9000a1fc <HAL_JPEG_GetInfo.part.0>:
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
9000a1fc:	6803      	ldr	r3, [r0, #0]
9000a1fe:	685a      	ldr	r2, [r3, #4]
9000a200:	f002 0203 	and.w	r2, r2, #3
9000a204:	2a02      	cmp	r2, #2
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000a206:	685a      	ldr	r2, [r3, #4]
HAL_StatusTypeDef HAL_JPEG_GetInfo(JPEG_HandleTypeDef *hjpeg, JPEG_ConfTypeDef *pInfo)
9000a208:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000a20c:	4689      	mov	r9, r1
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
9000a20e:	f000 80a0 	beq.w	9000a352 <HAL_JPEG_GetInfo.part.0+0x156>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
9000a212:	f012 0203 	ands.w	r2, r2, #3
9000a216:	d177      	bne.n	9000a308 <HAL_JPEG_GetInfo.part.0+0x10c>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000a218:	6859      	ldr	r1, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000a21a:	f8c9 2000 	str.w	r2, [r9]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000a21e:	68da      	ldr	r2, [r3, #12]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000a220:	0c09      	lsrs	r1, r1, #16
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000a222:	0c12      	lsrs	r2, r2, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000a224:	f8c9 1008 	str.w	r1, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000a228:	f8c9 200c 	str.w	r2, [r9, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
9000a22c:	2100      	movs	r1, #0
9000a22e:	4a5e      	ldr	r2, [pc, #376]	@ (9000a3a8 <HAL_JPEG_GetInfo.part.0+0x1ac>)
  */
static uint32_t JPEG_GetQuality(JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
  uint32_t quantRow, quantVal, scale, i, j;
  __IO uint32_t *tableAddress = hjpeg->Instance->QMEM0;
9000a230:	f103 0c50 	add.w	ip, r3, #80	@ 0x50
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
9000a234:	f8c9 1004 	str.w	r1, [r9, #4]
  uint32_t quality = 0;
9000a238:	2600      	movs	r6, #0
9000a23a:	f102 0440 	add.w	r4, r2, #64	@ 0x40
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000a23e:	f04f 0e64 	mov.w	lr, #100	@ 0x64
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
9000a242:	f241 3188 	movw	r1, #5000	@ 0x1388
9000a246:	e033      	b.n	9000a2b0 <HAL_JPEG_GetInfo.part.0+0xb4>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000a248:	f892 8001 	ldrb.w	r8, [r2, #1]
9000a24c:	fb0e f707 	mul.w	r7, lr, r7
9000a250:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
9000a252:	f815 8008 	ldrb.w	r8, [r5, r8]
9000a256:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000a25a:	2f64      	cmp	r7, #100	@ 0x64
9000a25c:	d96a      	bls.n	9000a334 <HAL_JPEG_GetInfo.part.0+0x138>
          quality += 5000UL / scale;
9000a25e:	fbb1 f7f7 	udiv	r7, r1, r7
9000a262:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000a264:	f3c3 4707 	ubfx	r7, r3, #16, #8
      if (quantVal == 1UL)
9000a268:	2f01      	cmp	r7, #1
9000a26a:	d03d      	beq.n	9000a2e8 <HAL_JPEG_GetInfo.part.0+0xec>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000a26c:	f892 8002 	ldrb.w	r8, [r2, #2]
9000a270:	fb0e f707 	mul.w	r7, lr, r7
9000a274:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
9000a276:	f815 8008 	ldrb.w	r8, [r5, r8]
9000a27a:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000a27e:	2f64      	cmp	r7, #100	@ 0x64
9000a280:	d953      	bls.n	9000a32a <HAL_JPEG_GetInfo.part.0+0x12e>
          quality += 5000UL / scale;
9000a282:	fbb1 f7f7 	udiv	r7, r1, r7
9000a286:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000a288:	0e1b      	lsrs	r3, r3, #24
      if (quantVal == 1UL)
9000a28a:	2b01      	cmp	r3, #1
9000a28c:	d030      	beq.n	9000a2f0 <HAL_JPEG_GetInfo.part.0+0xf4>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000a28e:	78d7      	ldrb	r7, [r2, #3]
9000a290:	fb0e f303 	mul.w	r3, lr, r3
9000a294:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
9000a296:	5def      	ldrb	r7, [r5, r7]
9000a298:	fbb3 f3f7 	udiv	r3, r3, r7
        if (scale <= 100UL)
9000a29c:	2b64      	cmp	r3, #100	@ 0x64
9000a29e:	d953      	bls.n	9000a348 <HAL_JPEG_GetInfo.part.0+0x14c>
          quality += 5000UL / scale;
9000a2a0:	fbb1 f3f3 	udiv	r3, r1, r3
9000a2a4:	441e      	add	r6, r3
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000a2a6:	3204      	adds	r2, #4
        }
      }
    }

    i += 4UL;
    tableAddress ++;
9000a2a8:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000a2ac:	42a2      	cmp	r2, r4
9000a2ae:	d025      	beq.n	9000a2fc <HAL_JPEG_GetInfo.part.0+0x100>
    quantRow = *tableAddress;
9000a2b0:	f8dc 3000 	ldr.w	r3, [ip]
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000a2b4:	b2df      	uxtb	r7, r3
      if (quantVal == 1UL)
9000a2b6:	2f01      	cmp	r7, #1
9000a2b8:	d035      	beq.n	9000a326 <HAL_JPEG_GetInfo.part.0+0x12a>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000a2ba:	f892 8000 	ldrb.w	r8, [r2]
9000a2be:	fb0e f707 	mul.w	r7, lr, r7
9000a2c2:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
9000a2c4:	f815 8008 	ldrb.w	r8, [r5, r8]
9000a2c8:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000a2cc:	2f64      	cmp	r7, #100	@ 0x64
9000a2ce:	d936      	bls.n	9000a33e <HAL_JPEG_GetInfo.part.0+0x142>
          quality += 5000UL / scale;
9000a2d0:	fbb1 f7f7 	udiv	r7, r1, r7
9000a2d4:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000a2d6:	f3c3 2707 	ubfx	r7, r3, #8, #8
      if (quantVal == 1UL)
9000a2da:	2f01      	cmp	r7, #1
9000a2dc:	d1b4      	bne.n	9000a248 <HAL_JPEG_GetInfo.part.0+0x4c>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000a2de:	f3c3 4707 	ubfx	r7, r3, #16, #8
        quality += 100UL;
9000a2e2:	3664      	adds	r6, #100	@ 0x64
      if (quantVal == 1UL)
9000a2e4:	2f01      	cmp	r7, #1
9000a2e6:	d1c1      	bne.n	9000a26c <HAL_JPEG_GetInfo.part.0+0x70>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000a2e8:	0e1b      	lsrs	r3, r3, #24
        quality += 100UL;
9000a2ea:	3664      	adds	r6, #100	@ 0x64
      if (quantVal == 1UL)
9000a2ec:	2b01      	cmp	r3, #1
9000a2ee:	d1ce      	bne.n	9000a28e <HAL_JPEG_GetInfo.part.0+0x92>
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000a2f0:	3204      	adds	r2, #4
        quality += 100UL;
9000a2f2:	3664      	adds	r6, #100	@ 0x64
    tableAddress ++;
9000a2f4:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000a2f8:	42a2      	cmp	r2, r4
9000a2fa:	d1d9      	bne.n	9000a2b0 <HAL_JPEG_GetInfo.part.0+0xb4>
  }

  return (quality / 64UL);
9000a2fc:	09b6      	lsrs	r6, r6, #6
  return HAL_OK;
9000a2fe:	2000      	movs	r0, #0
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
9000a300:	f8c9 6010 	str.w	r6, [r9, #16]
}
9000a304:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
9000a308:	685a      	ldr	r2, [r3, #4]
9000a30a:	f002 0203 	and.w	r2, r2, #3
9000a30e:	2a03      	cmp	r2, #3
9000a310:	d147      	bne.n	9000a3a2 <HAL_JPEG_GetInfo.part.0+0x1a6>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000a312:	685a      	ldr	r2, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000a314:	2130      	movs	r1, #48	@ 0x30
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000a316:	0c12      	lsrs	r2, r2, #16
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000a318:	f8c9 1000 	str.w	r1, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000a31c:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000a320:	68da      	ldr	r2, [r3, #12]
9000a322:	0c12      	lsrs	r2, r2, #16
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
9000a324:	e01d      	b.n	9000a362 <HAL_JPEG_GetInfo.part.0+0x166>
        quality += 100UL;
9000a326:	3664      	adds	r6, #100	@ 0x64
9000a328:	e7d5      	b.n	9000a2d6 <HAL_JPEG_GetInfo.part.0+0xda>
          quality += (200UL - scale) / 2UL;
9000a32a:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
9000a32e:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000a332:	e7a9      	b.n	9000a288 <HAL_JPEG_GetInfo.part.0+0x8c>
9000a334:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
9000a338:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000a33c:	e792      	b.n	9000a264 <HAL_JPEG_GetInfo.part.0+0x68>
9000a33e:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
9000a342:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000a346:	e7c6      	b.n	9000a2d6 <HAL_JPEG_GetInfo.part.0+0xda>
9000a348:	f1c3 03c8 	rsb	r3, r3, #200	@ 0xc8
9000a34c:	eb06 0653 	add.w	r6, r6, r3, lsr #1
9000a350:	e7a9      	b.n	9000a2a6 <HAL_JPEG_GetInfo.part.0+0xaa>
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000a352:	2110      	movs	r1, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000a354:	40ca      	lsrs	r2, r1
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000a356:	f8c9 1000 	str.w	r1, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000a35a:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000a35e:	68da      	ldr	r2, [r3, #12]
9000a360:	40ca      	lsrs	r2, r1
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000a362:	6919      	ldr	r1, [r3, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
9000a364:	695c      	ldr	r4, [r3, #20]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000a366:	f3c1 1603 	ubfx	r6, r1, #4, #4
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000a36a:	f8c9 200c 	str.w	r2, [r9, #12]
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
9000a36e:	699a      	ldr	r2, [r3, #24]
9000a370:	f004 07f0 	and.w	r7, r4, #240	@ 0xf0
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000a374:	2e01      	cmp	r6, #1
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
9000a376:	f3c2 1203 	ubfx	r2, r2, #4, #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000a37a:	d105      	bne.n	9000a388 <HAL_JPEG_GetInfo.part.0+0x18c>
9000a37c:	b927      	cbnz	r7, 9000a388 <HAL_JPEG_GetInfo.part.0+0x18c>
9000a37e:	2a00      	cmp	r2, #0
9000a380:	f47f af54 	bne.w	9000a22c <HAL_JPEG_GetInfo.part.0+0x30>
9000a384:	2102      	movs	r1, #2
9000a386:	e752      	b.n	9000a22e <HAL_JPEG_GetInfo.part.0+0x32>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000a388:	4321      	orrs	r1, r4
9000a38a:	f011 0ff0 	tst.w	r1, #240	@ 0xf0
9000a38e:	f43f af4d 	beq.w	9000a22c <HAL_JPEG_GetInfo.part.0+0x30>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000a392:	433a      	orrs	r2, r7
9000a394:	f47f af4a 	bne.w	9000a22c <HAL_JPEG_GetInfo.part.0+0x30>
9000a398:	2e03      	cmp	r6, #3
9000a39a:	f47f af47 	bne.w	9000a22c <HAL_JPEG_GetInfo.part.0+0x30>
9000a39e:	2101      	movs	r1, #1
9000a3a0:	e745      	b.n	9000a22e <HAL_JPEG_GetInfo.part.0+0x32>
    return HAL_ERROR;
9000a3a2:	2001      	movs	r0, #1
}
9000a3a4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000a3a8:	90031694 	.word	0x90031694

9000a3ac <HAL_JPEG_Init>:
  if (hjpeg == NULL)
9000a3ac:	2800      	cmp	r0, #0
9000a3ae:	f000 8108 	beq.w	9000a5c2 <HAL_JPEG_Init+0x216>
{
9000a3b2:	b570      	push	{r4, r5, r6, lr}
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
9000a3b4:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
9000a3b8:	4605      	mov	r5, r0
9000a3ba:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000a3be:	2b00      	cmp	r3, #0
9000a3c0:	f000 80fa 	beq.w	9000a5b8 <HAL_JPEG_Init+0x20c>
  __HAL_JPEG_ENABLE(hjpeg);
9000a3c4:	682c      	ldr	r4, [r5, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
9000a3c6:	2202      	movs	r2, #2
  hjpeg->QuantTable2 = NULL;
9000a3c8:	2300      	movs	r3, #0
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
9000a3ca:	497f      	ldr	r1, [pc, #508]	@ (9000a5c8 <HAL_JPEG_Init+0x21c>)
  hjpeg->State = HAL_JPEG_STATE_BUSY;
9000a3cc:	f885 204d 	strb.w	r2, [r5, #77]	@ 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
9000a3d0:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000a3d2:	f042 0201 	orr.w	r2, r2, #1
9000a3d6:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a3d8:	6822      	ldr	r2, [r4, #0]
9000a3da:	f022 0201 	bic.w	r2, r2, #1
9000a3de:	6022      	str	r2, [r4, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a3e0:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000a3e2:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000a3e6:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
9000a3e8:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000a3ea:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
9000a3ee:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000a3f0:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000a3f2:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
9000a3f6:	6322      	str	r2, [r4, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000a3f8:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000a3fa:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000a3fe:	63a2      	str	r2, [r4, #56]	@ 0x38
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
9000a400:	4a72      	ldr	r2, [pc, #456]	@ (9000a5cc <HAL_JPEG_Init+0x220>)
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
9000a402:	63e9      	str	r1, [r5, #60]	@ 0x3c
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000a404:	2101      	movs	r1, #1
  hjpeg->QuantTable2 = NULL;
9000a406:	64ab      	str	r3, [r5, #72]	@ 0x48
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
9000a408:	e9c5 2310 	strd	r2, r3, [r5, #64]	@ 0x40
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000a40c:	f8c4 336c 	str.w	r3, [r4, #876]	@ 0x36c
9000a410:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
9000a414:	4b6e      	ldr	r3, [pc, #440]	@ (9000a5d0 <HAL_JPEG_Init+0x224>)
9000a416:	f8c4 1368 	str.w	r1, [r4, #872]	@ 0x368
9000a41a:	f8c4 2364 	str.w	r2, [r4, #868]	@ 0x364
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a41e:	496d      	ldr	r1, [pc, #436]	@ (9000a5d4 <HAL_JPEG_Init+0x228>)
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000a420:	f8c4 3360 	str.w	r3, [r4, #864]	@ 0x360
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a424:	4b6c      	ldr	r3, [pc, #432]	@ (9000a5d8 <HAL_JPEG_Init+0x22c>)
9000a426:	f8c4 1378 	str.w	r1, [r4, #888]	@ 0x378
9000a42a:	4a6c      	ldr	r2, [pc, #432]	@ (9000a5dc <HAL_JPEG_Init+0x230>)
9000a42c:	f8c4 3374 	str.w	r3, [r4, #884]	@ 0x374
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000a430:	4b6b      	ldr	r3, [pc, #428]	@ (9000a5e0 <HAL_JPEG_Init+0x234>)
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a432:	f8c4 2370 	str.w	r2, [r4, #880]	@ 0x370
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000a436:	f5a2 427f 	sub.w	r2, r2, #65280	@ 0xff00
9000a43a:	f8c4 3388 	str.w	r3, [r4, #904]	@ 0x388
9000a43e:	4969      	ldr	r1, [pc, #420]	@ (9000a5e4 <HAL_JPEG_Init+0x238>)
9000a440:	4b69      	ldr	r3, [pc, #420]	@ (9000a5e8 <HAL_JPEG_Init+0x23c>)
9000a442:	f8c4 1384 	str.w	r1, [r4, #900]	@ 0x384
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
9000a446:	f504 6185 	add.w	r1, r4, #1064	@ 0x428
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000a44a:	f8c4 3380 	str.w	r3, [r4, #896]	@ 0x380
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
9000a44e:	f64f 23f9 	movw	r3, #64249	@ 0xfaf9
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000a452:	f8c4 237c 	str.w	r2, [r4, #892]	@ 0x37c
  value = *address & 0xFFFF0000U;
9000a456:	f8d4 042c 	ldr.w	r0, [r4, #1068]	@ 0x42c
9000a45a:	4a64      	ldr	r2, [pc, #400]	@ (9000a5ec <HAL_JPEG_Init+0x240>)
9000a45c:	f36f 000f 	bfc	r0, #0, #16
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
9000a460:	f1a2 06a0 	sub.w	r6, r2, #160	@ 0xa0
9000a464:	4303      	orrs	r3, r0
  *address = value;
9000a466:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
9000a46a:	f892 30ae 	ldrb.w	r3, [r2, #174]	@ 0xae
  while (index > 3UL)
9000a46e:	3a04      	subs	r2, #4
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a470:	f892 e0b3 	ldrb.w	lr, [r2, #179]	@ 0xb3
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
9000a474:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
9000a476:	f892 c0b0 	ldrb.w	ip, [r2, #176]	@ 0xb0
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
9000a47a:	f892 00b1 	ldrb.w	r0, [r2, #177]	@ 0xb1
  while (index > 3UL)
9000a47e:	4296      	cmp	r6, r2
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a480:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
9000a484:	ea43 030c 	orr.w	r3, r3, ip
9000a488:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a48c:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
9000a490:	d1eb      	bne.n	9000a46a <HAL_JPEG_Init+0xbe>
  value = *address & 0x0000FFFFU;
9000a492:	f8d4 342c 	ldr.w	r3, [r4, #1068]	@ 0x42c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a496:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
  value = *address & 0xFFFF0000U;
9000a49a:	4955      	ldr	r1, [pc, #340]	@ (9000a5f0 <HAL_JPEG_Init+0x244>)
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a49c:	2001      	movs	r0, #1
  value = *address & 0x0000FFFFU;
9000a49e:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->Bits[0] & 0xFFUL) << 16);
9000a4a0:	f043 7340 	orr.w	r3, r3, #50331648	@ 0x3000000
  *address = value;
9000a4a4:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
  value = *address & 0xFFFF0000U;
9000a4a8:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
9000a4ac:	400b      	ands	r3, r1
  *address = value;
9000a4ae:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a4b2:	f8c4 0438 	str.w	r0, [r4, #1080]	@ 0x438
9000a4b6:	f8c4 2434 	str.w	r2, [r4, #1076]	@ 0x434
9000a4ba:	f8c4 2430 	str.w	r2, [r4, #1072]	@ 0x430
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
9000a4be:	f640 320a 	movw	r2, #2826	@ 0xb0a
  value = *address & 0x0000FFFFUL;
9000a4c2:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
9000a4c6:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->HuffVal[0] & 0xFFUL) <<
9000a4c8:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
9000a4cc:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
  value = *address & 0xFFFF0000UL;
9000a4d0:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
9000a4d4:	400b      	ands	r3, r1
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
9000a4d6:	431a      	orrs	r2, r3
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000a4d8:	4b46      	ldr	r3, [pc, #280]	@ (9000a5f4 <HAL_JPEG_Init+0x248>)
  *address = value;
9000a4da:	f8c4 2448 	str.w	r2, [r4, #1096]	@ 0x448
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
9000a4de:	f247 7202 	movw	r2, #30466	@ 0x7702
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000a4e2:	f8c4 3444 	str.w	r3, [r4, #1092]	@ 0x444
9000a4e6:	f1a3 3304 	sub.w	r3, r3, #67372036	@ 0x4040404
9000a4ea:	f8c4 3440 	str.w	r3, [r4, #1088]	@ 0x440
  value = *address & 0x0000FFFFU;
9000a4ee:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
9000a4f2:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->Bits[0] & 0xFFUL) << 16);
9000a4f4:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
  *address = value;
9000a4f8:	f8c4 3448 	str.w	r3, [r4, #1096]	@ 0x448
  value = *address & 0xFFFF0000U;
9000a4fc:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
9000a500:	400b      	ands	r3, r1
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a502:	493d      	ldr	r1, [pc, #244]	@ (9000a5f8 <HAL_JPEG_Init+0x24c>)
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
9000a504:	431a      	orrs	r2, r3
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a506:	4b3d      	ldr	r3, [pc, #244]	@ (9000a5fc <HAL_JPEG_Init+0x250>)
  *address = value;
9000a508:	f8c4 2458 	str.w	r2, [r4, #1112]	@ 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a50c:	4a3c      	ldr	r2, [pc, #240]	@ (9000a600 <HAL_JPEG_Init+0x254>)
9000a50e:	f8c4 1454 	str.w	r1, [r4, #1108]	@ 0x454
  address = (hjpeg->Instance->DHTMEM + 102);
9000a512:	f504 619f 	add.w	r1, r4, #1272	@ 0x4f8
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a516:	f8c4 2450 	str.w	r2, [r4, #1104]	@ 0x450
9000a51a:	f8c4 344c 	str.w	r3, [r4, #1100]	@ 0x44c
  value = *address & 0x0000FFFFUL;
9000a51e:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
9000a522:	4a38      	ldr	r2, [pc, #224]	@ (9000a604 <HAL_JPEG_Init+0x258>)
  value = *address & 0x0000FFFFUL;
9000a524:	b29b      	uxth	r3, r3
9000a526:	f1a2 06a0 	sub.w	r6, r2, #160	@ 0xa0
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
9000a52a:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
9000a52e:	f8c4 3458 	str.w	r3, [r4, #1112]	@ 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
9000a532:	f892 30b0 	ldrb.w	r3, [r2, #176]	@ 0xb0
  while (index > 3UL)
9000a536:	3a04      	subs	r2, #4
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000a538:	f892 e0b5 	ldrb.w	lr, [r2, #181]	@ 0xb5
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
9000a53c:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
9000a53e:	f892 c0b2 	ldrb.w	ip, [r2, #178]	@ 0xb2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
9000a542:	f892 00b3 	ldrb.w	r0, [r2, #179]	@ 0xb3
  while (index > 3UL)
9000a546:	4296      	cmp	r6, r2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
9000a548:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
9000a54c:	ea43 030c 	orr.w	r3, r3, ip
9000a550:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000a554:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
9000a558:	d1eb      	bne.n	9000a532 <HAL_JPEG_Init+0x186>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
9000a55a:	f504 62a0 	add.w	r2, r4, #1280	@ 0x500
9000a55e:	4923      	ldr	r1, [pc, #140]	@ (9000a5ec <HAL_JPEG_Init+0x240>)
9000a560:	4628      	mov	r0, r5
9000a562:	f7ff fd3b 	bl	90009fdc <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
9000a566:	b118      	cbz	r0, 9000a570 <HAL_JPEG_Init+0x1c4>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
9000a568:	2301      	movs	r3, #1
    return HAL_ERROR;
9000a56a:	2001      	movs	r0, #1
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
9000a56c:	652b      	str	r3, [r5, #80]	@ 0x50
}
9000a56e:	bd70      	pop	{r4, r5, r6, pc}
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
9000a570:	f504 62cc 	add.w	r2, r4, #1632	@ 0x660
9000a574:	4923      	ldr	r1, [pc, #140]	@ (9000a604 <HAL_JPEG_Init+0x258>)
9000a576:	4628      	mov	r0, r5
9000a578:	f7ff fd30 	bl	90009fdc <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
9000a57c:	2800      	cmp	r0, #0
9000a57e:	d1f3      	bne.n	9000a568 <HAL_JPEG_Init+0x1bc>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
9000a580:	f504 62f8 	add.w	r2, r4, #1984	@ 0x7c0
9000a584:	4920      	ldr	r1, [pc, #128]	@ (9000a608 <HAL_JPEG_Init+0x25c>)
9000a586:	4628      	mov	r0, r5
9000a588:	f7ff fc7e 	bl	90009e88 <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
9000a58c:	2800      	cmp	r0, #0
9000a58e:	d1eb      	bne.n	9000a568 <HAL_JPEG_Init+0x1bc>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
9000a590:	f504 62fc 	add.w	r2, r4, #2016	@ 0x7e0
9000a594:	491d      	ldr	r1, [pc, #116]	@ (9000a60c <HAL_JPEG_Init+0x260>)
9000a596:	4628      	mov	r0, r5
9000a598:	f7ff fc76 	bl	90009e88 <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
9000a59c:	2800      	cmp	r0, #0
9000a59e:	d1e3      	bne.n	9000a568 <HAL_JPEG_Init+0x1bc>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
9000a5a0:	6863      	ldr	r3, [r4, #4]
  hjpeg->State = HAL_JPEG_STATE_READY;
9000a5a2:	2201      	movs	r2, #1
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
9000a5a4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000a5a8:	6063      	str	r3, [r4, #4]
  hjpeg->JpegInCount = 0;
9000a5aa:	6228      	str	r0, [r5, #32]
  hjpeg->JpegOutCount = 0;
9000a5ac:	6268      	str	r0, [r5, #36]	@ 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
9000a5ae:	f885 204d 	strb.w	r2, [r5, #77]	@ 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
9000a5b2:	6528      	str	r0, [r5, #80]	@ 0x50
  hjpeg->Context = 0;
9000a5b4:	6568      	str	r0, [r5, #84]	@ 0x54
}
9000a5b6:	bd70      	pop	{r4, r5, r6, pc}
    hjpeg->Lock = HAL_UNLOCKED;
9000a5b8:	f880 204c 	strb.w	r2, [r0, #76]	@ 0x4c
    HAL_JPEG_MspInit(hjpeg);
9000a5bc:	f7f9 fe2a 	bl	90004214 <HAL_JPEG_MspInit>
9000a5c0:	e700      	b.n	9000a3c4 <HAL_JPEG_Init+0x18>
    return HAL_ERROR;
9000a5c2:	2001      	movs	r0, #1
}
9000a5c4:	4770      	bx	lr
9000a5c6:	bf00      	nop
9000a5c8:	90031654 	.word	0x90031654
9000a5cc:	90031614 	.word	0x90031614
9000a5d0:	01050100 	.word	0x01050100
9000a5d4:	0b0a0908 	.word	0x0b0a0908
9000a5d8:	07060504 	.word	0x07060504
9000a5dc:	03020100 	.word	0x03020100
9000a5e0:	7d010000 	.word	0x7d010000
9000a5e4:	04040505 	.word	0x04040505
9000a5e8:	03040203 	.word	0x03040203
9000a5ec:	90031788 	.word	0x90031788
9000a5f0:	ffff0000 	.word	0xffff0000
9000a5f4:	09080706 	.word	0x09080706
9000a5f8:	01000404 	.word	0x01000404
9000a5fc:	04040201 	.word	0x04040201
9000a600:	05070403 	.word	0x05070403
9000a604:	900316d4 	.word	0x900316d4
9000a608:	90031858 	.word	0x90031858
9000a60c:	9003183c 	.word	0x9003183c

9000a610 <HAL_JPEG_Decode_DMA>:
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
9000a610:	2b00      	cmp	r3, #0
9000a612:	bf18      	it	ne
9000a614:	2900      	cmpne	r1, #0
9000a616:	d036      	beq.n	9000a686 <HAL_JPEG_Decode_DMA+0x76>
{
9000a618:	b538      	push	{r3, r4, r5, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
9000a61a:	fab0 f580 	clz	r5, r0
9000a61e:	4604      	mov	r4, r0
9000a620:	096d      	lsrs	r5, r5, #5
9000a622:	b370      	cbz	r0, 9000a682 <HAL_JPEG_Decode_DMA+0x72>
  __HAL_LOCK(hjpeg);
9000a624:	f890 c04c 	ldrb.w	ip, [r0, #76]	@ 0x4c
9000a628:	f1bc 0f01 	cmp.w	ip, #1
9000a62c:	d022      	beq.n	9000a674 <HAL_JPEG_Decode_DMA+0x64>
9000a62e:	f04f 0c01 	mov.w	ip, #1
9000a632:	f880 c04c 	strb.w	ip, [r0, #76]	@ 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000a636:	f890 c04d 	ldrb.w	ip, [r0, #77]	@ 0x4d
9000a63a:	f1bc 0f01 	cmp.w	ip, #1
9000a63e:	d117      	bne.n	9000a670 <HAL_JPEG_Decode_DMA+0x60>
    hjpeg->InDataLength = InDataLength;
9000a640:	6282      	str	r2, [r0, #40]	@ 0x28
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
9000a642:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->OutDataLength = OutDataLength;
9000a646:	9b04      	ldr	r3, [sp, #16]
9000a648:	62c3      	str	r3, [r0, #44]	@ 0x2c
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
9000a64a:	2304      	movs	r3, #4
9000a64c:	f880 304d 	strb.w	r3, [r0, #77]	@ 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
9000a650:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a652:	f023 030f 	bic.w	r3, r3, #15
9000a656:	6543      	str	r3, [r0, #84]	@ 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
9000a658:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a65a:	f043 030e 	orr.w	r3, r3, #14
9000a65e:	6543      	str	r3, [r0, #84]	@ 0x54
    hjpeg->JpegInCount = 0;
9000a660:	6205      	str	r5, [r0, #32]
    hjpeg->JpegOutCount = 0;
9000a662:	6245      	str	r5, [r0, #36]	@ 0x24
    JPEG_Init_Process(hjpeg);
9000a664:	f7ff fd44 	bl	9000a0f0 <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
9000a668:	f7ff fd80 	bl	9000a16c <JPEG_DMA_StartProcess>
9000a66c:	b920      	cbnz	r0, 9000a678 <HAL_JPEG_Decode_DMA+0x68>
}
9000a66e:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_UNLOCK(hjpeg);
9000a670:	f880 504c 	strb.w	r5, [r0, #76]	@ 0x4c
  __HAL_LOCK(hjpeg);
9000a674:	2002      	movs	r0, #2
}
9000a676:	bd38      	pop	{r3, r4, r5, pc}
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a678:	2306      	movs	r3, #6
      __HAL_UNLOCK(hjpeg);
9000a67a:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a67e:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
9000a682:	2001      	movs	r0, #1
}
9000a684:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
9000a686:	2001      	movs	r0, #1
}
9000a688:	4770      	bx	lr
9000a68a:	bf00      	nop

9000a68c <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a68c:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a68e:	f003 030c 	and.w	r3, r3, #12
9000a692:	2b0c      	cmp	r3, #12
9000a694:	d01a      	beq.n	9000a6cc <HAL_JPEG_Pause+0x40>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a696:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a698:	f003 030c 	and.w	r3, r3, #12
9000a69c:	2b08      	cmp	r3, #8
9000a69e:	d001      	beq.n	9000a6a4 <HAL_JPEG_Pause+0x18>
}
9000a6a0:	2000      	movs	r0, #0
9000a6a2:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000a6a4:	07ca      	lsls	r2, r1, #31
9000a6a6:	d41f      	bmi.n	9000a6e8 <HAL_JPEG_Pause+0x5c>
9000a6a8:	f04f 3cff 	mov.w	ip, #4294967295
9000a6ac:	f06f 0228 	mvn.w	r2, #40	@ 0x28
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000a6b0:	078b      	lsls	r3, r1, #30
9000a6b2:	d504      	bpl.n	9000a6be <HAL_JPEG_Pause+0x32>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
9000a6b4:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a6b6:	4694      	mov	ip, r2
9000a6b8:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
9000a6bc:	6543      	str	r3, [r0, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000a6be:	6802      	ldr	r2, [r0, #0]
}
9000a6c0:	2000      	movs	r0, #0
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000a6c2:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000a6c4:	ea03 030c 	and.w	r3, r3, ip
9000a6c8:	6313      	str	r3, [r2, #48]	@ 0x30
}
9000a6ca:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000a6cc:	07cb      	lsls	r3, r1, #31
9000a6ce:	d503      	bpl.n	9000a6d8 <HAL_JPEG_Pause+0x4c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a6d0:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a6d2:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
9000a6d6:	6543      	str	r3, [r0, #84]	@ 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000a6d8:	0789      	lsls	r1, r1, #30
9000a6da:	d5e1      	bpl.n	9000a6a0 <HAL_JPEG_Pause+0x14>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
9000a6dc:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a6de:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
9000a6e2:	6543      	str	r3, [r0, #84]	@ 0x54
}
9000a6e4:	2000      	movs	r0, #0
9000a6e6:	4770      	bx	lr
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a6e8:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a6ea:	f06f 0c06 	mvn.w	ip, #6
9000a6ee:	f06f 022e 	mvn.w	r2, #46	@ 0x2e
9000a6f2:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
9000a6f6:	6543      	str	r3, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
9000a6f8:	e7da      	b.n	9000a6b0 <HAL_JPEG_Pause+0x24>
9000a6fa:	bf00      	nop

9000a6fc <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
9000a6fc:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
9000a6fe:	6282      	str	r2, [r0, #40]	@ 0x28
}
9000a700:	4770      	bx	lr
9000a702:	bf00      	nop

9000a704 <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
9000a704:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
9000a706:	62c2      	str	r2, [r0, #44]	@ 0x2c
}
9000a708:	4770      	bx	lr
9000a70a:	bf00      	nop

9000a70c <HAL_JPEG_Abort>:
{
9000a70c:	b538      	push	{r3, r4, r5, lr}
  tmpContext = hjpeg->Context;
9000a70e:	6d43      	ldr	r3, [r0, #84]	@ 0x54
{
9000a710:	4604      	mov	r4, r0
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
9000a712:	6d41      	ldr	r1, [r0, #84]	@ 0x54
9000a714:	4a32      	ldr	r2, [pc, #200]	@ (9000a7e0 <HAL_JPEG_Abort+0xd4>)
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a716:	f003 030c 	and.w	r3, r3, #12
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
9000a71a:	400a      	ands	r2, r1
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a71c:	2b0c      	cmp	r3, #12
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
9000a71e:	6542      	str	r2, [r0, #84]	@ 0x54
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a720:	d043      	beq.n	9000a7aa <HAL_JPEG_Abort+0x9e>
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a722:	6822      	ldr	r2, [r4, #0]
9000a724:	6813      	ldr	r3, [r2, #0]
9000a726:	f023 0301 	bic.w	r3, r3, #1
9000a72a:	6013      	str	r3, [r2, #0]
  tickstart = HAL_GetTick();
9000a72c:	f7fd fd2a 	bl	90008184 <HAL_GetTick>
9000a730:	4605      	mov	r5, r0
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
9000a732:	e005      	b.n	9000a740 <HAL_JPEG_Abort+0x34>
    if ((HAL_GetTick() - tickstart) > JPEG_TIMEOUT_VALUE)
9000a734:	f7fd fd26 	bl	90008184 <HAL_GetTick>
9000a738:	1b40      	subs	r0, r0, r5
9000a73a:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
9000a73e:	d82b      	bhi.n	9000a798 <HAL_JPEG_Abort+0x8c>
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
9000a740:	6823      	ldr	r3, [r4, #0]
9000a742:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a744:	0612      	lsls	r2, r2, #24
9000a746:	d4f5      	bmi.n	9000a734 <HAL_JPEG_Abort+0x28>
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a748:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  hjpeg->JpegInCount = 0;
9000a74a:	2100      	movs	r1, #0
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a74c:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000a750:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
9000a752:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a754:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
9000a758:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000a75a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a75c:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
9000a760:	631a      	str	r2, [r3, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000a762:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000a764:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000a768:	639a      	str	r2, [r3, #56]	@ 0x38
  hjpeg->JpegInCount = 0;
9000a76a:	6221      	str	r1, [r4, #32]
  hjpeg->JpegOutCount = 0;
9000a76c:	6261      	str	r1, [r4, #36]	@ 0x24
  hjpeg->Context &= ~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT);
9000a76e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a770:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
9000a774:	6563      	str	r3, [r4, #84]	@ 0x54
  if (hjpeg->ErrorCode != HAL_JPEG_ERROR_NONE)
9000a776:	6d20      	ldr	r0, [r4, #80]	@ 0x50
9000a778:	b138      	cbz	r0, 9000a78a <HAL_JPEG_Abort+0x7e>
    hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a77a:	2306      	movs	r3, #6
    return HAL_ERROR;
9000a77c:	2001      	movs	r0, #1
    hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a77e:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
9000a782:	2300      	movs	r3, #0
9000a784:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
9000a788:	bd38      	pop	{r3, r4, r5, pc}
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a78a:	2301      	movs	r3, #1
9000a78c:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_OK;
9000a790:	2300      	movs	r3, #0
9000a792:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
9000a796:	bd38      	pop	{r3, r4, r5, pc}
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
9000a798:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a79a:	2106      	movs	r1, #6
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a79c:	6823      	ldr	r3, [r4, #0]
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
9000a79e:	f042 0208 	orr.w	r2, r2, #8
9000a7a2:	6522      	str	r2, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a7a4:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
      break;
9000a7a8:	e7ce      	b.n	9000a748 <HAL_JPEG_Abort+0x3c>
    if (HAL_MDMA_Abort(hjpeg->hdmaout) != HAL_OK)
9000a7aa:	6b40      	ldr	r0, [r0, #52]	@ 0x34
9000a7ac:	f001 f986 	bl	9000babc <HAL_MDMA_Abort>
9000a7b0:	b118      	cbz	r0, 9000a7ba <HAL_JPEG_Abort+0xae>
      if (hjpeg->hdmaout->ErrorCode == HAL_MDMA_ERROR_TIMEOUT)
9000a7b2:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9000a7b4:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
9000a7b6:	2b40      	cmp	r3, #64	@ 0x40
9000a7b8:	d00d      	beq.n	9000a7d6 <HAL_JPEG_Abort+0xca>
    if (HAL_MDMA_Abort(hjpeg->hdmain) != HAL_OK)
9000a7ba:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000a7bc:	f001 f97e 	bl	9000babc <HAL_MDMA_Abort>
9000a7c0:	2800      	cmp	r0, #0
9000a7c2:	d0ae      	beq.n	9000a722 <HAL_JPEG_Abort+0x16>
      if (hjpeg->hdmain->ErrorCode == HAL_MDMA_ERROR_TIMEOUT)
9000a7c4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000a7c6:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
9000a7c8:	2b40      	cmp	r3, #64	@ 0x40
9000a7ca:	d1aa      	bne.n	9000a722 <HAL_JPEG_Abort+0x16>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a7cc:	6d23      	ldr	r3, [r4, #80]	@ 0x50
9000a7ce:	f043 0304 	orr.w	r3, r3, #4
9000a7d2:	6523      	str	r3, [r4, #80]	@ 0x50
9000a7d4:	e7a5      	b.n	9000a722 <HAL_JPEG_Abort+0x16>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a7d6:	6d23      	ldr	r3, [r4, #80]	@ 0x50
9000a7d8:	f043 0304 	orr.w	r3, r3, #4
9000a7dc:	6523      	str	r3, [r4, #80]	@ 0x50
9000a7de:	e7ec      	b.n	9000a7ba <HAL_JPEG_Abort+0xae>
9000a7e0:	ffff7ff0 	.word	0xffff7ff0

9000a7e4 <HAL_JPEG_EncodeCpltCallback>:
__weak void HAL_JPEG_EncodeCpltCallback(JPEG_HandleTypeDef *hjpeg)
9000a7e4:	4770      	bx	lr
9000a7e6:	bf00      	nop

9000a7e8 <JPEG_MDMAErrorCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000a7e8:	6c00      	ldr	r0, [r0, #64]	@ 0x40
  hjpeg->State = HAL_JPEG_STATE_READY;
9000a7ea:	2101      	movs	r1, #1
{
9000a7ec:	b508      	push	{r3, lr}
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a7ee:	6803      	ldr	r3, [r0, #0]
9000a7f0:	681a      	ldr	r2, [r3, #0]
9000a7f2:	f022 0201 	bic.w	r2, r2, #1
9000a7f6:	601a      	str	r2, [r3, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a7f8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a7fa:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000a7fe:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->State = HAL_JPEG_STATE_READY;
9000a800:	f880 104d 	strb.w	r1, [r0, #77]	@ 0x4d
  hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a804:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9000a806:	f043 0304 	orr.w	r3, r3, #4
9000a80a:	6503      	str	r3, [r0, #80]	@ 0x50
  HAL_JPEG_ErrorCallback(hjpeg);
9000a80c:	f7f7 fc6e 	bl	900020ec <HAL_JPEG_ErrorCallback>
}
9000a810:	bd08      	pop	{r3, pc}
9000a812:	bf00      	nop

9000a814 <JPEG_MDMAInCpltCallback>:
{
9000a814:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000a816:	6c04      	ldr	r4, [r0, #64]	@ 0x40
{
9000a818:	b083      	sub	sp, #12
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
9000a81a:	f248 010c 	movw	r1, #32780	@ 0x800c
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a81e:	6822      	ldr	r2, [r4, #0]
9000a820:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000a822:	f023 037e 	bic.w	r3, r3, #126	@ 0x7e
9000a826:	6313      	str	r3, [r2, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
9000a828:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a82a:	400b      	ands	r3, r1
9000a82c:	2b0c      	cmp	r3, #12
9000a82e:	d001      	beq.n	9000a834 <JPEG_MDMAInCpltCallback+0x20>
}
9000a830:	b003      	add	sp, #12
9000a832:	bd30      	pop	{r4, r5, pc}
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a834:	6802      	ldr	r2, [r0, #0]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000a836:	4620      	mov	r0, r4
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a838:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000a83a:	6952      	ldr	r2, [r2, #20]
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a83c:	6b21      	ldr	r1, [r4, #48]	@ 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a83e:	f3c2 0210 	ubfx	r2, r2, #0, #17
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a842:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a844:	1a9b      	subs	r3, r3, r2
9000a846:	6223      	str	r3, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000a848:	6a21      	ldr	r1, [r4, #32]
9000a84a:	f7f7 fb83 	bl	90001f54 <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= inXfrSize)
9000a84e:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000a850:	42ab      	cmp	r3, r5
9000a852:	d311      	bcc.n	9000a878 <JPEG_MDMAInCpltCallback+0x64>
      if (inXfrSize == 0UL)
9000a854:	b305      	cbz	r5, 9000a898 <JPEG_MDMAInCpltCallback+0x84>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000a856:	fbb3 f2f5 	udiv	r2, r3, r5
9000a85a:	fb05 3212 	mls	r2, r5, r2, r3
9000a85e:	1a9b      	subs	r3, r3, r2
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000a860:	6d62      	ldr	r2, [r4, #84]	@ 0x54
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000a862:	62a3      	str	r3, [r4, #40]	@ 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000a864:	04d1      	lsls	r1, r2, #19
9000a866:	d400      	bmi.n	9000a86a <JPEG_MDMAInCpltCallback+0x56>
9000a868:	b963      	cbnz	r3, 9000a884 <JPEG_MDMAInCpltCallback+0x70>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000a86a:	6822      	ldr	r2, [r4, #0]
9000a86c:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000a86e:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
9000a872:	6313      	str	r3, [r2, #48]	@ 0x30
}
9000a874:	b003      	add	sp, #12
9000a876:	bd30      	pop	{r4, r5, pc}
    else if (hjpeg->InDataLength > 0UL)
9000a878:	b1cb      	cbz	r3, 9000a8ae <JPEG_MDMAInCpltCallback+0x9a>
      if ((hjpeg->InDataLength % 4UL) != 0UL)
9000a87a:	0798      	lsls	r0, r3, #30
9000a87c:	d119      	bne.n	9000a8b2 <JPEG_MDMAInCpltCallback+0x9e>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000a87e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a880:	04d2      	lsls	r2, r2, #19
9000a882:	d4f2      	bmi.n	9000a86a <JPEG_MDMAInCpltCallback+0x56>
      if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000a884:	6822      	ldr	r2, [r4, #0]
9000a886:	2501      	movs	r5, #1
9000a888:	69a1      	ldr	r1, [r4, #24]
9000a88a:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000a88c:	3240      	adds	r2, #64	@ 0x40
9000a88e:	9500      	str	r5, [sp, #0]
9000a890:	f001 f8a8 	bl	9000b9e4 <HAL_MDMA_Start_IT>
9000a894:	2800      	cmp	r0, #0
9000a896:	d0e8      	beq.n	9000a86a <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a898:	6d23      	ldr	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a89a:	2206      	movs	r2, #6
        HAL_JPEG_ErrorCallback(hjpeg);
9000a89c:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a89e:	f043 0304 	orr.w	r3, r3, #4
9000a8a2:	6523      	str	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a8a4:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
9000a8a8:	f7f7 fc20 	bl	900020ec <HAL_JPEG_ErrorCallback>
        return;
9000a8ac:	e7c0      	b.n	9000a830 <JPEG_MDMAInCpltCallback+0x1c>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000a8ae:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a8b0:	e7db      	b.n	9000a86a <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->InDataLength = ((hjpeg->InDataLength / 4UL) + 1UL) * 4UL;
9000a8b2:	f023 0303 	bic.w	r3, r3, #3
9000a8b6:	3304      	adds	r3, #4
9000a8b8:	e7d2      	b.n	9000a860 <JPEG_MDMAInCpltCallback+0x4c>
9000a8ba:	bf00      	nop

9000a8bc <JPEG_DMA_PollResidualData>:
{
9000a8bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000a8be:	6802      	ldr	r2, [r0, #0]
9000a8c0:	2610      	movs	r6, #16
{
9000a8c2:	4604      	mov	r4, r0
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000a8c4:	6d65      	ldr	r5, [r4, #84]	@ 0x54
9000a8c6:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
9000a8ca:	d11d      	bne.n	9000a908 <JPEG_DMA_PollResidualData+0x4c>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000a8cc:	6b53      	ldr	r3, [r2, #52]	@ 0x34
9000a8ce:	06df      	lsls	r7, r3, #27
9000a8d0:	d51a      	bpl.n	9000a908 <JPEG_DMA_PollResidualData+0x4c>
        dataOut = hjpeg->Instance->DOR;
9000a8d2:	6c53      	ldr	r3, [r2, #68]	@ 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000a8d4:	69e7      	ldr	r7, [r4, #28]
9000a8d6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
9000a8d8:	0a18      	lsrs	r0, r3, #8
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
9000a8da:	0c19      	lsrs	r1, r3, #16
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000a8dc:	54bb      	strb	r3, [r7, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
9000a8de:	0e1b      	lsrs	r3, r3, #24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
9000a8e0:	6a67      	ldr	r7, [r4, #36]	@ 0x24
9000a8e2:	69e2      	ldr	r2, [r4, #28]
9000a8e4:	443a      	add	r2, r7
9000a8e6:	7050      	strb	r0, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
9000a8e8:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000a8ea:	69e2      	ldr	r2, [r4, #28]
9000a8ec:	4402      	add	r2, r0
9000a8ee:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
9000a8f0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a8f2:	69e2      	ldr	r2, [r4, #28]
9000a8f4:	440a      	add	r2, r1
9000a8f6:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
9000a8f8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000a8fa:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
        hjpeg->JpegOutCount += 4UL;
9000a8fc:	3304      	adds	r3, #4
9000a8fe:	6263      	str	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000a900:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a902:	4293      	cmp	r3, r2
9000a904:	d021      	beq.n	9000a94a <JPEG_DMA_PollResidualData+0x8e>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000a906:	6822      	ldr	r2, [r4, #0]
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
9000a908:	3e01      	subs	r6, #1
9000a90a:	d1db      	bne.n	9000a8c4 <JPEG_DMA_PollResidualData+0x8>
  tmpContext = hjpeg->Context;
9000a90c:	6d61      	ldr	r1, [r4, #84]	@ 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000a90e:	6b53      	ldr	r3, [r2, #52]	@ 0x34
9000a910:	06d8      	lsls	r0, r3, #27
9000a912:	d501      	bpl.n	9000a918 <JPEG_DMA_PollResidualData+0x5c>
9000a914:	048b      	lsls	r3, r1, #18
9000a916:	d417      	bmi.n	9000a948 <JPEG_DMA_PollResidualData+0x8c>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a918:	6813      	ldr	r3, [r2, #0]
9000a91a:	f023 0301 	bic.w	r3, r3, #1
9000a91e:	6013      	str	r3, [r2, #0]
    if (hjpeg->JpegOutCount > 0UL)
9000a920:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a922:	b9eb      	cbnz	r3, 9000a960 <JPEG_DMA_PollResidualData+0xa4>
    tmpContext = hjpeg->Context;
9000a924:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
9000a926:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a928:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a92a:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a92c:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000a930:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a934:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a938:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a93a:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a93c:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a93e:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a942:	d00a      	beq.n	9000a95a <JPEG_DMA_PollResidualData+0x9e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000a944:	f7ff ff4e 	bl	9000a7e4 <HAL_JPEG_EncodeCpltCallback>
}
9000a948:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a94a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a94c:	4620      	mov	r0, r4
9000a94e:	69e1      	ldr	r1, [r4, #28]
9000a950:	f7f7 fb20 	bl	90001f94 <HAL_JPEG_DataReadyCallback>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000a954:	6822      	ldr	r2, [r4, #0]
          hjpeg->JpegOutCount = 0;
9000a956:	6265      	str	r5, [r4, #36]	@ 0x24
9000a958:	e7d6      	b.n	9000a908 <JPEG_DMA_PollResidualData+0x4c>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a95a:	f7f7 fbc9 	bl	900020f0 <HAL_JPEG_DecodeCpltCallback>
}
9000a95e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a960:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a962:	4620      	mov	r0, r4
9000a964:	69e1      	ldr	r1, [r4, #28]
9000a966:	f7f7 fb15 	bl	90001f94 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000a96a:	2300      	movs	r3, #0
9000a96c:	6263      	str	r3, [r4, #36]	@ 0x24
9000a96e:	e7d9      	b.n	9000a924 <JPEG_DMA_PollResidualData+0x68>

9000a970 <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
9000a970:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a972:	f413 5f40 	tst.w	r3, #12288	@ 0x3000
9000a976:	d06f      	beq.n	9000aa58 <HAL_JPEG_Resume+0xe8>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a978:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a97a:	f003 030c 	and.w	r3, r3, #12
9000a97e:	2b0c      	cmp	r3, #12
{
9000a980:	b530      	push	{r4, r5, lr}
9000a982:	4604      	mov	r4, r0
9000a984:	b083      	sub	sp, #12
9000a986:	460d      	mov	r5, r1
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a988:	d007      	beq.n	9000a99a <HAL_JPEG_Resume+0x2a>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a98a:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a98c:	f003 030c 	and.w	r3, r3, #12
9000a990:	2b08      	cmp	r3, #8
9000a992:	d035      	beq.n	9000aa00 <HAL_JPEG_Resume+0x90>
  return HAL_OK;
9000a994:	2000      	movs	r0, #0
}
9000a996:	b003      	add	sp, #12
9000a998:	bd30      	pop	{r4, r5, pc}
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000a99a:	07c8      	lsls	r0, r1, #31
9000a99c:	d415      	bmi.n	9000a9ca <HAL_JPEG_Resume+0x5a>
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000a99e:	07a9      	lsls	r1, r5, #30
9000a9a0:	d5f8      	bpl.n	9000a994 <HAL_JPEG_Resume+0x24>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000a9a2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a9a4:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
9000a9a8:	6563      	str	r3, [r4, #84]	@ 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
9000a9aa:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a9ac:	041a      	lsls	r2, r3, #16
9000a9ae:	d44f      	bmi.n	9000aa50 <HAL_JPEG_Resume+0xe0>
        xfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000a9b0:	6b60      	ldr	r0, [r4, #52]	@ 0x34
9000a9b2:	6a82      	ldr	r2, [r0, #40]	@ 0x28
        if (xfrSize == 0UL)
9000a9b4:	2a00      	cmp	r2, #0
9000a9b6:	d13a      	bne.n	9000aa2e <HAL_JPEG_Resume+0xbe>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a9b8:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a9ba:	2206      	movs	r2, #6
    return HAL_ERROR;
9000a9bc:	2001      	movs	r0, #1
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a9be:	f043 0304 	orr.w	r3, r3, #4
9000a9c2:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a9c4:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
          return HAL_ERROR;
9000a9c8:	e7e5      	b.n	9000a996 <HAL_JPEG_Resume+0x26>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a9ca:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a9cc:	6b20      	ldr	r0, [r4, #48]	@ 0x30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a9ce:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a9d2:	6a82      	ldr	r2, [r0, #40]	@ 0x28
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a9d4:	6563      	str	r3, [r4, #84]	@ 0x54
      if (xfrSize == 0UL)
9000a9d6:	2a00      	cmp	r2, #0
9000a9d8:	d0ee      	beq.n	9000a9b8 <HAL_JPEG_Resume+0x48>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % xfrSize);
9000a9da:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000a9dc:	fbb3 f1f2 	udiv	r1, r3, r2
9000a9e0:	fb02 3211 	mls	r2, r2, r1, r3
9000a9e4:	1a9b      	subs	r3, r3, r2
9000a9e6:	62a3      	str	r3, [r4, #40]	@ 0x28
      if (hjpeg->InDataLength > 0UL)
9000a9e8:	2b00      	cmp	r3, #0
9000a9ea:	d0d8      	beq.n	9000a99e <HAL_JPEG_Resume+0x2e>
        if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000a9ec:	6822      	ldr	r2, [r4, #0]
9000a9ee:	2101      	movs	r1, #1
9000a9f0:	3240      	adds	r2, #64	@ 0x40
9000a9f2:	9100      	str	r1, [sp, #0]
9000a9f4:	69a1      	ldr	r1, [r4, #24]
9000a9f6:	f000 fff5 	bl	9000b9e4 <HAL_MDMA_Start_IT>
9000a9fa:	2800      	cmp	r0, #0
9000a9fc:	d0cf      	beq.n	9000a99e <HAL_JPEG_Resume+0x2e>
9000a9fe:	e7db      	b.n	9000a9b8 <HAL_JPEG_Resume+0x48>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000aa00:	f011 0101 	ands.w	r1, r1, #1
9000aa04:	d011      	beq.n	9000aa2a <HAL_JPEG_Resume+0xba>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000aa06:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000aa08:	222e      	movs	r2, #46	@ 0x2e
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
9000aa0a:	2106      	movs	r1, #6
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000aa0c:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9000aa10:	6543      	str	r3, [r0, #84]	@ 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000aa12:	07ab      	lsls	r3, r5, #30
9000aa14:	d504      	bpl.n	9000aa20 <HAL_JPEG_Resume+0xb0>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000aa16:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
9000aa18:	4611      	mov	r1, r2
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000aa1a:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
9000aa1e:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
9000aa20:	6822      	ldr	r2, [r4, #0]
9000aa22:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000aa24:	430b      	orrs	r3, r1
9000aa26:	6313      	str	r3, [r2, #48]	@ 0x30
9000aa28:	e7b4      	b.n	9000a994 <HAL_JPEG_Resume+0x24>
9000aa2a:	2228      	movs	r2, #40	@ 0x28
9000aa2c:	e7f1      	b.n	9000aa12 <HAL_JPEG_Resume+0xa2>
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000aa2e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000aa30:	fbb3 f1f2 	udiv	r1, r3, r2
9000aa34:	fb02 3211 	mls	r2, r2, r1, r3
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000aa38:	6821      	ldr	r1, [r4, #0]
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000aa3a:	1a9b      	subs	r3, r3, r2
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000aa3c:	2201      	movs	r2, #1
9000aa3e:	3144      	adds	r1, #68	@ 0x44
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000aa40:	62e3      	str	r3, [r4, #44]	@ 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000aa42:	9200      	str	r2, [sp, #0]
9000aa44:	69e2      	ldr	r2, [r4, #28]
9000aa46:	f000 ffcd 	bl	9000b9e4 <HAL_MDMA_Start_IT>
9000aa4a:	2800      	cmp	r0, #0
9000aa4c:	d0a2      	beq.n	9000a994 <HAL_JPEG_Resume+0x24>
9000aa4e:	e7b3      	b.n	9000a9b8 <HAL_JPEG_Resume+0x48>
        JPEG_DMA_PollResidualData(hjpeg);
9000aa50:	4620      	mov	r0, r4
9000aa52:	f7ff ff33 	bl	9000a8bc <JPEG_DMA_PollResidualData>
9000aa56:	e79d      	b.n	9000a994 <HAL_JPEG_Resume+0x24>
    return HAL_ERROR;
9000aa58:	2001      	movs	r0, #1
}
9000aa5a:	4770      	bx	lr

9000aa5c <JPEG_MDMAOutCpltCallback>:
{
9000aa5c:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000aa5e:	6c04      	ldr	r4, [r0, #64]	@ 0x40
{
9000aa60:	b083      	sub	sp, #12
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000aa62:	f248 010c 	movw	r1, #32780	@ 0x800c
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000aa66:	6823      	ldr	r3, [r4, #0]
9000aa68:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000aa6a:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000aa6e:	631a      	str	r2, [r3, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000aa70:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000aa72:	400a      	ands	r2, r1
9000aa74:	2a0c      	cmp	r2, #12
9000aa76:	d001      	beq.n	9000aa7c <JPEG_MDMAOutCpltCallback+0x20>
}
9000aa78:	b003      	add	sp, #12
9000aa7a:	bd30      	pop	{r4, r5, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
9000aa7c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000aa7e:	0692      	lsls	r2, r2, #26
9000aa80:	d505      	bpl.n	9000aa8e <JPEG_MDMAOutCpltCallback+0x32>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000aa82:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000aa84:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000aa88:	631a      	str	r2, [r3, #48]	@ 0x30
}
9000aa8a:	b003      	add	sp, #12
9000aa8c:	bd30      	pop	{r4, r5, pc}
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000aa8e:	6802      	ldr	r2, [r0, #0]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000aa90:	4620      	mov	r0, r4
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000aa92:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000aa94:	6952      	ldr	r2, [r2, #20]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000aa96:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000aa98:	f3c2 0210 	ubfx	r2, r2, #0, #17
9000aa9c:	1a9b      	subs	r3, r3, r2
9000aa9e:	6263      	str	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000aaa0:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000aaa2:	f7f7 fa77 	bl	90001f94 <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000aaa6:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000aaa8:	049b      	lsls	r3, r3, #18
9000aaaa:	d501      	bpl.n	9000aab0 <JPEG_MDMAOutCpltCallback+0x54>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000aaac:	6823      	ldr	r3, [r4, #0]
9000aaae:	e7e8      	b.n	9000aa82 <JPEG_MDMAOutCpltCallback+0x26>
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000aab0:	6821      	ldr	r1, [r4, #0]
9000aab2:	2501      	movs	r5, #1
9000aab4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000aab6:	69e2      	ldr	r2, [r4, #28]
9000aab8:	3144      	adds	r1, #68	@ 0x44
9000aaba:	6b60      	ldr	r0, [r4, #52]	@ 0x34
9000aabc:	9500      	str	r5, [sp, #0]
9000aabe:	f000 ff91 	bl	9000b9e4 <HAL_MDMA_Start_IT>
9000aac2:	2800      	cmp	r0, #0
9000aac4:	d0f2      	beq.n	9000aaac <JPEG_MDMAOutCpltCallback+0x50>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000aac6:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000aac8:	2206      	movs	r2, #6
          HAL_JPEG_ErrorCallback(hjpeg);
9000aaca:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000aacc:	f043 0304 	orr.w	r3, r3, #4
9000aad0:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000aad2:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
9000aad6:	f7f7 fb09 	bl	900020ec <HAL_JPEG_ErrorCallback>
          return;
9000aada:	e7cd      	b.n	9000aa78 <JPEG_MDMAOutCpltCallback+0x1c>

9000aadc <JPEG_MDMAOutAbortCallback>:
{
9000aadc:	b538      	push	{r3, r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000aade:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
9000aae0:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000aae2:	041a      	lsls	r2, r3, #16
9000aae4:	d400      	bmi.n	9000aae8 <JPEG_MDMAOutAbortCallback+0xc>
}
9000aae6:	bd38      	pop	{r3, r4, r5, pc}
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000aae8:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9000aaea:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000aaec:	681b      	ldr	r3, [r3, #0]
9000aaee:	695b      	ldr	r3, [r3, #20]
9000aaf0:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000aaf4:	1ad3      	subs	r3, r2, r3
9000aaf6:	6263      	str	r3, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000aaf8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000aafa:	429a      	cmp	r2, r3
9000aafc:	d025      	beq.n	9000ab4a <JPEG_MDMAOutAbortCallback+0x6e>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000aafe:	6822      	ldr	r2, [r4, #0]
9000ab00:	6b55      	ldr	r5, [r2, #52]	@ 0x34
9000ab02:	f015 0510 	ands.w	r5, r5, #16
9000ab06:	d118      	bne.n	9000ab3a <JPEG_MDMAOutAbortCallback+0x5e>
    if (hjpeg->JpegOutCount > 0UL)
9000ab08:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000ab0a:	bb4b      	cbnz	r3, 9000ab60 <JPEG_MDMAOutAbortCallback+0x84>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000ab0c:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000ab0e:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000ab10:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000ab12:	f023 0301 	bic.w	r3, r3, #1
9000ab16:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000ab18:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000ab1a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000ab1c:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000ab20:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000ab24:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000ab28:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000ab2a:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000ab2c:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000ab2e:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000ab32:	d012      	beq.n	9000ab5a <JPEG_MDMAOutAbortCallback+0x7e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000ab34:	f7ff fe56 	bl	9000a7e4 <HAL_JPEG_EncodeCpltCallback>
}
9000ab38:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000ab3a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000ab3c:	049b      	lsls	r3, r3, #18
9000ab3e:	d4d2      	bmi.n	9000aae6 <JPEG_MDMAOutAbortCallback+0xa>
    JPEG_DMA_PollResidualData(hjpeg);
9000ab40:	4620      	mov	r0, r4
}
9000ab42:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000ab46:	f7ff beb9 	b.w	9000a8bc <JPEG_DMA_PollResidualData>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000ab4a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000ab4c:	4620      	mov	r0, r4
9000ab4e:	69e1      	ldr	r1, [r4, #28]
9000ab50:	f7f7 fa20 	bl	90001f94 <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000ab54:	2300      	movs	r3, #0
9000ab56:	6263      	str	r3, [r4, #36]	@ 0x24
9000ab58:	e7d1      	b.n	9000aafe <JPEG_MDMAOutAbortCallback+0x22>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000ab5a:	f7f7 fac9 	bl	900020f0 <HAL_JPEG_DecodeCpltCallback>
}
9000ab5e:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000ab60:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000ab62:	4620      	mov	r0, r4
9000ab64:	69e1      	ldr	r1, [r4, #28]
9000ab66:	f7f7 fa15 	bl	90001f94 <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000ab6a:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000ab6c:	6265      	str	r5, [r4, #36]	@ 0x24
9000ab6e:	e7cd      	b.n	9000ab0c <JPEG_MDMAOutAbortCallback+0x30>

9000ab70 <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000ab70:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000ab72:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000ab74:	f002 0203 	and.w	r2, r2, #3
9000ab78:	2a02      	cmp	r2, #2
{
9000ab7a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000ab7e:	4604      	mov	r4, r0
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000ab80:	d01e      	beq.n	9000abc0 <JPEG_Process+0x50>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
9000ab82:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000ab84:	04d7      	lsls	r7, r2, #19
9000ab86:	d407      	bmi.n	9000ab98 <JPEG_Process+0x28>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
9000ab88:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000ab8a:	0796      	lsls	r6, r2, #30
9000ab8c:	f100 811b 	bmi.w	9000adc6 <JPEG_Process+0x256>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
9000ab90:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000ab92:	0750      	lsls	r0, r2, #29
9000ab94:	f100 81cc 	bmi.w	9000af30 <JPEG_Process+0x3c0>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000ab98:	6d65      	ldr	r5, [r4, #84]	@ 0x54
9000ab9a:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
9000ab9e:	d107      	bne.n	9000abb0 <JPEG_Process+0x40>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
9000aba0:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
9000aba2:	f016 0608 	ands.w	r6, r6, #8
9000aba6:	d14a      	bne.n	9000ac3e <JPEG_Process+0xce>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000aba8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000abaa:	06d2      	lsls	r2, r2, #27
9000abac:	f100 81fe 	bmi.w	9000afac <JPEG_Process+0x43c>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000abb0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000abb2:	f002 0238 	and.w	r2, r2, #56	@ 0x38
9000abb6:	2a20      	cmp	r2, #32
9000abb8:	d019      	beq.n	9000abee <JPEG_Process+0x7e>
  return JPEG_PROCESS_ONGOING;
9000abba:	2000      	movs	r0, #0
}
9000abbc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000abc0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000abc2:	0652      	lsls	r2, r2, #25
9000abc4:	d5dd      	bpl.n	9000ab82 <JPEG_Process+0x12>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000abc6:	1d05      	adds	r5, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000abc8:	4629      	mov	r1, r5
9000abca:	f7ff fb17 	bl	9000a1fc <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000abce:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000abd0:	4629      	mov	r1, r5
9000abd2:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000abd4:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000abd6:	f7f7 f98f 	bl	90001ef8 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000abda:	6823      	ldr	r3, [r4, #0]
9000abdc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000abde:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
9000abe2:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000abe4:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000abe6:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
9000abea:	639a      	str	r2, [r3, #56]	@ 0x38
9000abec:	e7c9      	b.n	9000ab82 <JPEG_Process+0x12>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000abee:	681a      	ldr	r2, [r3, #0]
9000abf0:	f022 0201 	bic.w	r2, r2, #1
9000abf4:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000abf6:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000abf8:	f002 020c 	and.w	r2, r2, #12
9000abfc:	2a08      	cmp	r2, #8
9000abfe:	f000 8201 	beq.w	9000b004 <JPEG_Process+0x494>
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000ac02:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000ac04:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000ac08:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->JpegOutCount > 0UL)
9000ac0a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000ac0c:	2b00      	cmp	r3, #0
9000ac0e:	f040 81fe 	bne.w	9000b00e <JPEG_Process+0x49e>
    tmpContext = hjpeg->Context;
9000ac12:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
9000ac14:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000ac16:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000ac18:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000ac1a:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000ac1e:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000ac22:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000ac26:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000ac28:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000ac2a:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000ac2c:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000ac30:	f000 81e5 	beq.w	9000affe <JPEG_Process+0x48e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000ac34:	f7ff fdd6 	bl	9000a7e4 <HAL_JPEG_EncodeCpltCallback>
    return JPEG_PROCESS_DONE;
9000ac38:	2001      	movs	r0, #1
}
9000ac3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000ac3e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000ac40:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9000ac42:	3220      	adds	r2, #32
9000ac44:	4296      	cmp	r6, r2
9000ac46:	f0c0 8200 	bcc.w	9000b04a <JPEG_Process+0x4da>
      dataword = hjpeg->Instance->DOR;
9000ac4a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ac4c:	69e1      	ldr	r1, [r4, #28]
9000ac4e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000ac50:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000ac52:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ac54:	69e2      	ldr	r2, [r4, #28]
9000ac56:	440a      	add	r2, r1
9000ac58:	0a19      	lsrs	r1, r3, #8
9000ac5a:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ac5c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ac5e:	69e2      	ldr	r2, [r4, #28]
9000ac60:	440a      	add	r2, r1
9000ac62:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ac64:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ac66:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ac68:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ac6a:	69e2      	ldr	r2, [r4, #28]
9000ac6c:	440a      	add	r2, r1
9000ac6e:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000ac70:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000ac72:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000ac74:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ac76:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000ac78:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000ac7a:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ac7c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000ac7e:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000ac80:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ac82:	69e2      	ldr	r2, [r4, #28]
9000ac84:	440a      	add	r2, r1
9000ac86:	0a19      	lsrs	r1, r3, #8
9000ac88:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ac8a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ac8c:	69e2      	ldr	r2, [r4, #28]
9000ac8e:	440a      	add	r2, r1
9000ac90:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ac92:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ac94:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ac96:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ac98:	69e2      	ldr	r2, [r4, #28]
9000ac9a:	440a      	add	r2, r1
9000ac9c:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000ac9e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000aca0:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000aca2:	3304      	adds	r3, #4
9000aca4:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000aca6:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000aca8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000acaa:	69e1      	ldr	r1, [r4, #28]
9000acac:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000acae:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000acb0:	69e2      	ldr	r2, [r4, #28]
9000acb2:	440a      	add	r2, r1
9000acb4:	0a19      	lsrs	r1, r3, #8
9000acb6:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000acb8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000acba:	69e2      	ldr	r2, [r4, #28]
9000acbc:	440a      	add	r2, r1
9000acbe:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000acc0:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000acc2:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000acc4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000acc6:	69e2      	ldr	r2, [r4, #28]
9000acc8:	440a      	add	r2, r1
9000acca:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000accc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000acce:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000acd0:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000acd2:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000acd4:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000acd6:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000acd8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000acda:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000acdc:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000acde:	69e2      	ldr	r2, [r4, #28]
9000ace0:	440a      	add	r2, r1
9000ace2:	0a19      	lsrs	r1, r3, #8
9000ace4:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ace6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ace8:	69e2      	ldr	r2, [r4, #28]
9000acea:	440a      	add	r2, r1
9000acec:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000acee:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000acf0:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000acf2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000acf4:	69e2      	ldr	r2, [r4, #28]
9000acf6:	440a      	add	r2, r1
9000acf8:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000acfa:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000acfc:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000acfe:	3304      	adds	r3, #4
9000ad00:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000ad02:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ad04:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000ad06:	69e1      	ldr	r1, [r4, #28]
9000ad08:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000ad0a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ad0c:	69e2      	ldr	r2, [r4, #28]
9000ad0e:	440a      	add	r2, r1
9000ad10:	0a19      	lsrs	r1, r3, #8
9000ad12:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ad14:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ad16:	69e2      	ldr	r2, [r4, #28]
9000ad18:	440a      	add	r2, r1
9000ad1a:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ad1c:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ad1e:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ad20:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ad22:	69e2      	ldr	r2, [r4, #28]
9000ad24:	440a      	add	r2, r1
9000ad26:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000ad28:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000ad2a:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000ad2c:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ad2e:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000ad30:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000ad32:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ad34:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000ad36:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000ad38:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ad3a:	69e2      	ldr	r2, [r4, #28]
9000ad3c:	440a      	add	r2, r1
9000ad3e:	0a19      	lsrs	r1, r3, #8
9000ad40:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ad42:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ad44:	69e2      	ldr	r2, [r4, #28]
9000ad46:	440a      	add	r2, r1
9000ad48:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ad4a:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ad4c:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ad4e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ad50:	69e2      	ldr	r2, [r4, #28]
9000ad52:	440a      	add	r2, r1
9000ad54:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000ad56:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000ad58:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000ad5a:	3304      	adds	r3, #4
9000ad5c:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000ad5e:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ad60:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000ad62:	69e1      	ldr	r1, [r4, #28]
9000ad64:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000ad66:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ad68:	69e2      	ldr	r2, [r4, #28]
9000ad6a:	440a      	add	r2, r1
9000ad6c:	0a19      	lsrs	r1, r3, #8
9000ad6e:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ad70:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ad72:	69e2      	ldr	r2, [r4, #28]
9000ad74:	440a      	add	r2, r1
9000ad76:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ad78:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ad7a:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ad7c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ad7e:	69e2      	ldr	r2, [r4, #28]
9000ad80:	440a      	add	r2, r1
9000ad82:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000ad84:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000ad86:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000ad88:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ad8a:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000ad8c:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000ad8e:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ad90:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000ad92:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000ad94:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ad96:	69e2      	ldr	r2, [r4, #28]
9000ad98:	440a      	add	r2, r1
9000ad9a:	0a19      	lsrs	r1, r3, #8
9000ad9c:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ad9e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ada0:	69e2      	ldr	r2, [r4, #28]
9000ada2:	440a      	add	r2, r1
9000ada4:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ada6:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ada8:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000adaa:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000adac:	69e2      	ldr	r2, [r4, #28]
9000adae:	440a      	add	r2, r1
9000adb0:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000adb2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000adb4:	3304      	adds	r3, #4
9000adb6:	6263      	str	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000adb8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000adba:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000adbc:	429a      	cmp	r2, r3
9000adbe:	f000 82d8 	beq.w	9000b372 <JPEG_Process+0x802>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000adc2:	6823      	ldr	r3, [r4, #0]
9000adc4:	e6f4      	b.n	9000abb0 <JPEG_Process+0x40>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000adc6:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000adc8:	2a00      	cmp	r2, #0
9000adca:	f000 8128 	beq.w	9000b01e <JPEG_Process+0x4ae>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000adce:	6a21      	ldr	r1, [r4, #32]
9000add0:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000add2:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000add4:	f240 81b9 	bls.w	9000b14a <JPEG_Process+0x5da>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000add8:	1a52      	subs	r2, r2, r1
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000adda:	6d61      	ldr	r1, [r4, #84]	@ 0x54
9000addc:	04cd      	lsls	r5, r1, #19
9000adde:	f53f aedb 	bmi.w	9000ab98 <JPEG_Process+0x28>
9000ade2:	2a00      	cmp	r2, #0
9000ade4:	f43f aed8 	beq.w	9000ab98 <JPEG_Process+0x28>
    if (nb_words >= nbRequestWords)
9000ade8:	2a1f      	cmp	r2, #31
    nb_words = nb_bytes / 4UL;
9000adea:	ea4f 0092 	mov.w	r0, r2, lsr #2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000adee:	69a1      	ldr	r1, [r4, #24]
    if (nb_words >= nbRequestWords)
9000adf0:	f200 824e 	bhi.w	9000b290 <JPEG_Process+0x720>
      if (nb_words > 0UL)
9000adf4:	2a03      	cmp	r2, #3
9000adf6:	f240 82cc 	bls.w	9000b392 <JPEG_Process+0x822>
          input_count = hjpeg->JpegInCount;
9000adfa:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000adfc:	2801      	cmp	r0, #1
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000adfe:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ae02:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ae04:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ae06:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ae08:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ae0c:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ae0e:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
9000ae12:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ae16:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ae1a:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000ae1c:	6a22      	ldr	r2, [r4, #32]
9000ae1e:	f102 0204 	add.w	r2, r2, #4
9000ae22:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ae24:	f43f aeb8 	beq.w	9000ab98 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000ae28:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ae2a:	2802      	cmp	r0, #2
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ae2c:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ae30:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ae32:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ae34:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ae36:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ae3a:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ae3c:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
9000ae40:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ae44:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ae48:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000ae4a:	6a22      	ldr	r2, [r4, #32]
9000ae4c:	f102 0204 	add.w	r2, r2, #4
9000ae50:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ae52:	f43f aea1 	beq.w	9000ab98 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000ae56:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ae58:	2803      	cmp	r0, #3
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ae5a:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ae5e:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ae60:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ae62:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ae64:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ae68:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ae6a:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
9000ae6e:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ae72:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ae76:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000ae78:	6a22      	ldr	r2, [r4, #32]
9000ae7a:	f102 0204 	add.w	r2, r2, #4
9000ae7e:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ae80:	f43f ae8a 	beq.w	9000ab98 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000ae84:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ae86:	2804      	cmp	r0, #4
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ae88:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ae8c:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ae8e:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ae90:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ae92:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ae96:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ae98:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
9000ae9c:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aea0:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000aea4:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000aea6:	6a22      	ldr	r2, [r4, #32]
9000aea8:	f102 0204 	add.w	r2, r2, #4
9000aeac:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000aeae:	f43f ae73 	beq.w	9000ab98 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000aeb2:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000aeb4:	2805      	cmp	r0, #5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aeb6:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000aeba:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aebc:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aebe:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aec0:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000aec4:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aec6:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
9000aeca:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aece:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000aed2:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000aed4:	6a22      	ldr	r2, [r4, #32]
9000aed6:	f102 0204 	add.w	r2, r2, #4
9000aeda:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000aedc:	f43f ae5c 	beq.w	9000ab98 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000aee0:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000aee2:	2807      	cmp	r0, #7
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aee4:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000aee8:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aeea:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aeec:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aeee:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000aef2:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aef4:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
9000aef8:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aefc:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000af00:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000af02:	6a22      	ldr	r2, [r4, #32]
9000af04:	f102 0204 	add.w	r2, r2, #4
9000af08:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000af0a:	f47f ae45 	bne.w	9000ab98 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000af0e:	6a22      	ldr	r2, [r4, #32]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000af10:	1888      	adds	r0, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000af12:	5c8d      	ldrb	r5, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000af14:	7882      	ldrb	r2, [r0, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000af16:	78c1      	ldrb	r1, [r0, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000af18:	0412      	lsls	r2, r2, #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000af1a:	7840      	ldrb	r0, [r0, #1]
9000af1c:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
9000af20:	432a      	orrs	r2, r5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000af22:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000af26:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000af28:	6a22      	ldr	r2, [r4, #32]
9000af2a:	3204      	adds	r2, #4
9000af2c:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000af2e:	e633      	b.n	9000ab98 <JPEG_Process+0x28>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000af30:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000af32:	2a00      	cmp	r2, #0
9000af34:	d073      	beq.n	9000b01e <JPEG_Process+0x4ae>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000af36:	6a21      	ldr	r1, [r4, #32]
9000af38:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000af3a:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000af3c:	f200 8182 	bhi.w	9000b244 <JPEG_Process+0x6d4>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000af40:	428a      	cmp	r2, r1
9000af42:	f040 8104 	bne.w	9000b14e <JPEG_Process+0x5de>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000af46:	6a21      	ldr	r1, [r4, #32]
9000af48:	4620      	mov	r0, r4
9000af4a:	f7f7 f803 	bl	90001f54 <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000af4e:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000af50:	2a04      	cmp	r2, #4
9000af52:	d902      	bls.n	9000af5a <JPEG_Process+0x3ea>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000af54:	f022 0203 	bic.w	r2, r2, #3
9000af58:	62a2      	str	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
9000af5a:	2100      	movs	r1, #0
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000af5c:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000af5e:	6221      	str	r1, [r4, #32]
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000af60:	6d61      	ldr	r1, [r4, #84]	@ 0x54
9000af62:	04c9      	lsls	r1, r1, #19
9000af64:	f53f ae18 	bmi.w	9000ab98 <JPEG_Process+0x28>
9000af68:	2a00      	cmp	r2, #0
9000af6a:	f43f ae15 	beq.w	9000ab98 <JPEG_Process+0x28>
    if (nb_words >= nbRequestWords)
9000af6e:	0891      	lsrs	r1, r2, #2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000af70:	69a0      	ldr	r0, [r4, #24]
    if (nb_words >= nbRequestWords)
9000af72:	f040 8177 	bne.w	9000b264 <JPEG_Process+0x6f4>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000af76:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000af78:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000af7a:	6a25      	ldr	r5, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000af7c:	5c41      	ldrb	r1, [r0, r1]
          hjpeg->JpegInCount++;
9000af7e:	f105 0501 	add.w	r5, r5, #1
9000af82:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000af84:	d010      	beq.n	9000afa8 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000af86:	6a25      	ldr	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000af88:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000af8a:	5d45      	ldrb	r5, [r0, r5]
9000af8c:	ea41 2105 	orr.w	r1, r1, r5, lsl #8
          hjpeg->JpegInCount++;
9000af90:	6a25      	ldr	r5, [r4, #32]
9000af92:	f105 0501 	add.w	r5, r5, #1
9000af96:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000af98:	d106      	bne.n	9000afa8 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000af9a:	6a22      	ldr	r2, [r4, #32]
9000af9c:	5c80      	ldrb	r0, [r0, r2]
          hjpeg->JpegInCount++;
9000af9e:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000afa0:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
9000afa4:	3201      	adds	r2, #1
9000afa6:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000afa8:	6419      	str	r1, [r3, #64]	@ 0x40
9000afaa:	e5f5      	b.n	9000ab98 <JPEG_Process+0x28>
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000afac:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000afae:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
9000afb0:	3204      	adds	r2, #4
9000afb2:	4295      	cmp	r5, r2
9000afb4:	f0c0 80cd 	bcc.w	9000b152 <JPEG_Process+0x5e2>
      dataword = hjpeg->Instance->DOR;
9000afb8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000afba:	69e1      	ldr	r1, [r4, #28]
9000afbc:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000afbe:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000afc0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000afc2:	69e2      	ldr	r2, [r4, #28]
9000afc4:	440a      	add	r2, r1
9000afc6:	0a19      	lsrs	r1, r3, #8
9000afc8:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000afca:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000afcc:	69e2      	ldr	r2, [r4, #28]
9000afce:	440a      	add	r2, r1
9000afd0:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000afd2:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000afd4:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000afd6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000afd8:	69e2      	ldr	r2, [r4, #28]
9000afda:	440a      	add	r2, r1
9000afdc:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000afde:	6a63      	ldr	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000afe0:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
      hjpeg->JpegOutCount += 4UL;
9000afe2:	3304      	adds	r3, #4
9000afe4:	6263      	str	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000afe6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000afe8:	429a      	cmp	r2, r3
9000afea:	f47f aeea 	bne.w	9000adc2 <JPEG_Process+0x252>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000afee:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000aff0:	4620      	mov	r0, r4
9000aff2:	69e1      	ldr	r1, [r4, #28]
9000aff4:	f7f6 ffce 	bl	90001f94 <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000aff8:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000affa:	6266      	str	r6, [r4, #36]	@ 0x24
9000affc:	e5d8      	b.n	9000abb0 <JPEG_Process+0x40>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000affe:	f7f7 f877 	bl	900020f0 <HAL_JPEG_DecodeCpltCallback>
9000b002:	e619      	b.n	9000ac38 <JPEG_Process+0xc8>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000b004:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000b006:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000b00a:	631a      	str	r2, [r3, #48]	@ 0x30
9000b00c:	e5f9      	b.n	9000ac02 <JPEG_Process+0x92>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b00e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000b010:	4620      	mov	r0, r4
9000b012:	69e1      	ldr	r1, [r4, #28]
9000b014:	f7f6 ffbe 	bl	90001f94 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000b018:	2300      	movs	r3, #0
9000b01a:	6263      	str	r3, [r4, #36]	@ 0x24
9000b01c:	e5f9      	b.n	9000ac12 <JPEG_Process+0xa2>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000b01e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000b020:	f002 020c 	and.w	r2, r2, #12
9000b024:	2a0c      	cmp	r2, #12
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000b026:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000b028:	f000 812d 	beq.w	9000b286 <JPEG_Process+0x716>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000b02c:	f002 020c 	and.w	r2, r2, #12
9000b030:	2a08      	cmp	r2, #8
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000b032:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000b034:	f47f adb0 	bne.w	9000ab98 <JPEG_Process+0x28>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000b038:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
9000b03c:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000b03e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000b040:	f022 0206 	bic.w	r2, r2, #6
9000b044:	631a      	str	r2, [r3, #48]	@ 0x30
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000b046:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000b048:	e5a6      	b.n	9000ab98 <JPEG_Process+0x28>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000b04a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000b04c:	4296      	cmp	r6, r2
9000b04e:	f67f adaf 	bls.w	9000abb0 <JPEG_Process+0x40>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000b052:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000b054:	1a30      	subs	r0, r6, r0
    for (index = 0; index < nb_words; index++)
9000b056:	0880      	lsrs	r0, r0, #2
9000b058:	d020      	beq.n	9000b09c <JPEG_Process+0x52c>
9000b05a:	4629      	mov	r1, r5
9000b05c:	e000      	b.n	9000b060 <JPEG_Process+0x4f0>
      dataword = hjpeg->Instance->DOR;
9000b05e:	6823      	ldr	r3, [r4, #0]
9000b060:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
    for (index = 0; index < nb_words; index++)
9000b062:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b064:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000b066:	69e6      	ldr	r6, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000b068:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b06a:	54b3      	strb	r3, [r6, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000b06c:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000b06e:	69e2      	ldr	r2, [r4, #28]
9000b070:	4432      	add	r2, r6
9000b072:	ea4f 2613 	mov.w	r6, r3, lsr #8
9000b076:	7056      	strb	r6, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b078:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000b07a:	69e2      	ldr	r2, [r4, #28]
9000b07c:	4432      	add	r2, r6
9000b07e:	ea4f 4613 	mov.w	r6, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b082:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b086:	7096      	strb	r6, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b088:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000b08a:	69e2      	ldr	r2, [r4, #28]
9000b08c:	4432      	add	r2, r6
9000b08e:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000b090:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000b092:	f103 0304 	add.w	r3, r3, #4
9000b096:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
9000b098:	d1e1      	bne.n	9000b05e <JPEG_Process+0x4ee>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000b09a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9000b09c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b09e:	69e1      	ldr	r1, [r4, #28]
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000b0a0:	429e      	cmp	r6, r3
9000b0a2:	f000 816e 	beq.w	9000b382 <JPEG_Process+0x812>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000b0a6:	f8d4 8024 	ldr.w	r8, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000b0aa:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000b0ac:	ebb6 0008 	subs.w	r0, r6, r8
      dataword = hjpeg->Instance->DOR;
9000b0b0:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
      for (index = 0; index < nb_bytes; index++)
9000b0b2:	d00e      	beq.n	9000b0d2 <JPEG_Process+0x562>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000b0b4:	f005 0303 	and.w	r3, r5, #3
9000b0b8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000b0ba:	3501      	adds	r5, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000b0bc:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000b0be:	42a8      	cmp	r0, r5
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000b0c0:	fa27 f303 	lsr.w	r3, r7, r3
9000b0c4:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000b0c6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000b0c8:	69e1      	ldr	r1, [r4, #28]
9000b0ca:	f103 0301 	add.w	r3, r3, #1
9000b0ce:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000b0d0:	d1f0      	bne.n	9000b0b4 <JPEG_Process+0x544>
      nb_bytes = 4UL - nb_bytes;
9000b0d2:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b0d6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000b0d8:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000b0da:	eba8 0606 	sub.w	r6, r8, r6
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b0de:	f7f6 ff59 	bl	90001f94 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000b0e2:	2200      	movs	r2, #0
      for (index = nb_bytes; index < 4UL; index++)
9000b0e4:	2e03      	cmp	r6, #3
      hjpeg->JpegOutCount = 0;
9000b0e6:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b0e8:	f63f ae6b 	bhi.w	9000adc2 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b0ec:	ea4f 02c6 	mov.w	r2, r6, lsl #3
9000b0f0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000b0f2:	69e0      	ldr	r0, [r4, #28]
9000b0f4:	fa27 f502 	lsr.w	r5, r7, r2
9000b0f8:	5445      	strb	r5, [r0, r1]
        hjpeg->JpegOutCount++;
9000b0fa:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000b0fc:	f101 0101 	add.w	r1, r1, #1
9000b100:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b102:	f43f ae5e 	beq.w	9000adc2 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b106:	f102 0108 	add.w	r1, r2, #8
9000b10a:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000b10c:	69e5      	ldr	r5, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000b10e:	2e02      	cmp	r6, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b110:	fa27 f101 	lsr.w	r1, r7, r1
9000b114:	5429      	strb	r1, [r5, r0]
        hjpeg->JpegOutCount++;
9000b116:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000b118:	f101 0101 	add.w	r1, r1, #1
9000b11c:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b11e:	f43f ae50 	beq.w	9000adc2 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b122:	3210      	adds	r2, #16
9000b124:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000b126:	69e0      	ldr	r0, [r4, #28]
9000b128:	fa27 f202 	lsr.w	r2, r7, r2
9000b12c:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
9000b12e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000b130:	3201      	adds	r2, #1
9000b132:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b134:	2e00      	cmp	r6, #0
9000b136:	f47f ae44 	bne.w	9000adc2 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b13a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000b13c:	0e3f      	lsrs	r7, r7, #24
9000b13e:	69e2      	ldr	r2, [r4, #28]
9000b140:	54d7      	strb	r7, [r2, r3]
        hjpeg->JpegOutCount++;
9000b142:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000b144:	3301      	adds	r3, #1
9000b146:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b148:	e63b      	b.n	9000adc2 <JPEG_Process+0x252>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000b14a:	428a      	cmp	r2, r1
9000b14c:	d07c      	beq.n	9000b248 <JPEG_Process+0x6d8>
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000b14e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000b150:	e522      	b.n	9000ab98 <JPEG_Process+0x28>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000b152:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000b154:	4295      	cmp	r5, r2
9000b156:	f67f ad2b 	bls.w	9000abb0 <JPEG_Process+0x40>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000b15a:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000b15c:	1a28      	subs	r0, r5, r0
    for (index = 0; index < nb_words; index++)
9000b15e:	0880      	lsrs	r0, r0, #2
9000b160:	d020      	beq.n	9000b1a4 <JPEG_Process+0x634>
9000b162:	4631      	mov	r1, r6
9000b164:	e000      	b.n	9000b168 <JPEG_Process+0x5f8>
      dataword = hjpeg->Instance->DOR;
9000b166:	6823      	ldr	r3, [r4, #0]
9000b168:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
    for (index = 0; index < nb_words; index++)
9000b16a:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b16c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000b16e:	69e5      	ldr	r5, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000b170:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b172:	54ab      	strb	r3, [r5, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000b174:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000b176:	69e2      	ldr	r2, [r4, #28]
9000b178:	442a      	add	r2, r5
9000b17a:	ea4f 2513 	mov.w	r5, r3, lsr #8
9000b17e:	7055      	strb	r5, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b180:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000b182:	69e2      	ldr	r2, [r4, #28]
9000b184:	442a      	add	r2, r5
9000b186:	ea4f 4513 	mov.w	r5, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b18a:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b18e:	7095      	strb	r5, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b190:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000b192:	69e2      	ldr	r2, [r4, #28]
9000b194:	442a      	add	r2, r5
9000b196:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000b198:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000b19a:	f103 0304 	add.w	r3, r3, #4
9000b19e:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
9000b1a0:	d1e1      	bne.n	9000b166 <JPEG_Process+0x5f6>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000b1a2:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
9000b1a4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b1a6:	69e1      	ldr	r1, [r4, #28]
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000b1a8:	429d      	cmp	r5, r3
9000b1aa:	f000 80ea 	beq.w	9000b382 <JPEG_Process+0x812>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000b1ae:	f8d4 8024 	ldr.w	r8, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000b1b2:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000b1b4:	ebb5 0008 	subs.w	r0, r5, r8
      dataword = hjpeg->Instance->DOR;
9000b1b8:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
      for (index = 0; index < nb_bytes; index++)
9000b1ba:	d00e      	beq.n	9000b1da <JPEG_Process+0x66a>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000b1bc:	f006 0303 	and.w	r3, r6, #3
9000b1c0:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000b1c2:	3601      	adds	r6, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000b1c4:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000b1c6:	42b0      	cmp	r0, r6
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000b1c8:	fa27 f303 	lsr.w	r3, r7, r3
9000b1cc:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000b1ce:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000b1d0:	69e1      	ldr	r1, [r4, #28]
9000b1d2:	f103 0301 	add.w	r3, r3, #1
9000b1d6:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000b1d8:	d1f0      	bne.n	9000b1bc <JPEG_Process+0x64c>
      nb_bytes = 4UL - nb_bytes;
9000b1da:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b1de:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000b1e0:	4620      	mov	r0, r4
9000b1e2:	f7f6 fed7 	bl	90001f94 <HAL_JPEG_DataReadyCallback>
      nb_bytes = 4UL - nb_bytes;
9000b1e6:	eba8 0305 	sub.w	r3, r8, r5
      hjpeg->JpegOutCount = 0;
9000b1ea:	2200      	movs	r2, #0
      for (index = nb_bytes; index < 4UL; index++)
9000b1ec:	2b03      	cmp	r3, #3
      hjpeg->JpegOutCount = 0;
9000b1ee:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b1f0:	f63f ade7 	bhi.w	9000adc2 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b1f4:	ea4f 02c3 	mov.w	r2, r3, lsl #3
9000b1f8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000b1fa:	69e0      	ldr	r0, [r4, #28]
9000b1fc:	fa27 f502 	lsr.w	r5, r7, r2
9000b200:	5445      	strb	r5, [r0, r1]
        hjpeg->JpegOutCount++;
9000b202:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000b204:	f101 0101 	add.w	r1, r1, #1
9000b208:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b20a:	f43f adda 	beq.w	9000adc2 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b20e:	f102 0108 	add.w	r1, r2, #8
9000b212:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000b214:	69e5      	ldr	r5, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000b216:	2b02      	cmp	r3, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b218:	fa27 f101 	lsr.w	r1, r7, r1
9000b21c:	5429      	strb	r1, [r5, r0]
        hjpeg->JpegOutCount++;
9000b21e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000b220:	f101 0101 	add.w	r1, r1, #1
9000b224:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b226:	f43f adcc 	beq.w	9000adc2 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b22a:	3210      	adds	r2, #16
9000b22c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000b22e:	69e0      	ldr	r0, [r4, #28]
9000b230:	fa27 f202 	lsr.w	r2, r7, r2
9000b234:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
9000b236:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000b238:	3201      	adds	r2, #1
9000b23a:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b23c:	2b00      	cmp	r3, #0
9000b23e:	f43f af7c 	beq.w	9000b13a <JPEG_Process+0x5ca>
9000b242:	e5be      	b.n	9000adc2 <JPEG_Process+0x252>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000b244:	1a52      	subs	r2, r2, r1
9000b246:	e68b      	b.n	9000af60 <JPEG_Process+0x3f0>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000b248:	6a21      	ldr	r1, [r4, #32]
9000b24a:	4620      	mov	r0, r4
9000b24c:	f7f6 fe82 	bl	90001f54 <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000b250:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000b252:	2a04      	cmp	r2, #4
9000b254:	d902      	bls.n	9000b25c <JPEG_Process+0x6ec>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000b256:	f022 0203 	bic.w	r2, r2, #3
9000b25a:	62a2      	str	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
9000b25c:	2100      	movs	r1, #0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b25e:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000b260:	6221      	str	r1, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
9000b262:	e5ba      	b.n	9000adda <JPEG_Process+0x26a>
        input_count = hjpeg->JpegInCount;
9000b264:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b266:	1881      	adds	r1, r0, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b268:	5c85      	ldrb	r5, [r0, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b26a:	788a      	ldrb	r2, [r1, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b26c:	78c8      	ldrb	r0, [r1, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b26e:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b270:	7849      	ldrb	r1, [r1, #1]
9000b272:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9000b276:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b278:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b27c:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000b27e:	6a22      	ldr	r2, [r4, #32]
9000b280:	3204      	adds	r2, #4
9000b282:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
9000b284:	e488      	b.n	9000ab98 <JPEG_Process+0x28>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000b286:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
9000b28a:	6562      	str	r2, [r4, #84]	@ 0x54
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000b28c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000b28e:	e483      	b.n	9000ab98 <JPEG_Process+0x28>
        input_count = hjpeg->JpegInCount;
9000b290:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b292:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b294:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b296:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b298:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b29a:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b29c:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b29e:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
9000b2a2:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b2a4:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b2a8:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000b2aa:	6a22      	ldr	r2, [r4, #32]
9000b2ac:	3204      	adds	r2, #4
9000b2ae:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000b2b0:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b2b2:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b2b4:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b2b6:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b2b8:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b2ba:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b2bc:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b2be:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
9000b2c2:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b2c4:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b2c8:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000b2ca:	6a22      	ldr	r2, [r4, #32]
9000b2cc:	3204      	adds	r2, #4
9000b2ce:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000b2d0:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b2d2:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b2d4:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b2d6:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b2d8:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b2da:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b2dc:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b2de:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
9000b2e2:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b2e4:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b2e8:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000b2ea:	6a22      	ldr	r2, [r4, #32]
9000b2ec:	3204      	adds	r2, #4
9000b2ee:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000b2f0:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b2f2:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b2f4:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b2f6:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b2f8:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b2fa:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b2fc:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b2fe:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
9000b302:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b304:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b308:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000b30a:	6a22      	ldr	r2, [r4, #32]
9000b30c:	3204      	adds	r2, #4
9000b30e:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000b310:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b312:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b314:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b316:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b318:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b31a:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b31c:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b31e:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
9000b322:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b324:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b328:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000b32a:	6a22      	ldr	r2, [r4, #32]
9000b32c:	3204      	adds	r2, #4
9000b32e:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000b330:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b332:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b334:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b336:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b338:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b33a:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b33c:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b33e:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
9000b342:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b344:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b348:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000b34a:	6a22      	ldr	r2, [r4, #32]
9000b34c:	3204      	adds	r2, #4
9000b34e:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000b350:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b352:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b354:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b356:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b358:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b35a:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b35c:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b35e:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
9000b362:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b364:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b368:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000b36a:	6a22      	ldr	r2, [r4, #32]
9000b36c:	3204      	adds	r2, #4
9000b36e:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000b370:	e5cd      	b.n	9000af0e <JPEG_Process+0x39e>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b372:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000b374:	4620      	mov	r0, r4
9000b376:	69e1      	ldr	r1, [r4, #28]
9000b378:	f7f6 fe0c 	bl	90001f94 <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000b37c:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000b37e:	6265      	str	r5, [r4, #36]	@ 0x24
9000b380:	e416      	b.n	9000abb0 <JPEG_Process+0x40>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b382:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000b384:	4620      	mov	r0, r4
9000b386:	f7f6 fe05 	bl	90001f94 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000b38a:	2200      	movs	r2, #0
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000b38c:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000b38e:	6262      	str	r2, [r4, #36]	@ 0x24
9000b390:	e40e      	b.n	9000abb0 <JPEG_Process+0x40>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b392:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000b394:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000b396:	6a25      	ldr	r5, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b398:	5c08      	ldrb	r0, [r1, r0]
          hjpeg->JpegInCount++;
9000b39a:	f105 0501 	add.w	r5, r5, #1
9000b39e:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000b3a0:	d010      	beq.n	9000b3c4 <JPEG_Process+0x854>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b3a2:	6a25      	ldr	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000b3a4:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b3a6:	5d4d      	ldrb	r5, [r1, r5]
9000b3a8:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
          hjpeg->JpegInCount++;
9000b3ac:	6a25      	ldr	r5, [r4, #32]
9000b3ae:	f105 0501 	add.w	r5, r5, #1
9000b3b2:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000b3b4:	d106      	bne.n	9000b3c4 <JPEG_Process+0x854>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b3b6:	6a22      	ldr	r2, [r4, #32]
9000b3b8:	5c89      	ldrb	r1, [r1, r2]
          hjpeg->JpegInCount++;
9000b3ba:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b3bc:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
          hjpeg->JpegInCount++;
9000b3c0:	3201      	adds	r2, #1
9000b3c2:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000b3c4:	6418      	str	r0, [r3, #64]	@ 0x40
9000b3c6:	f7ff bbe7 	b.w	9000ab98 <JPEG_Process+0x28>
9000b3ca:	bf00      	nop

9000b3cc <HAL_JPEG_IRQHandler>:
{
9000b3cc:	b538      	push	{r3, r4, r5, lr}
  switch (hjpeg->State)
9000b3ce:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
9000b3d2:	3b03      	subs	r3, #3
9000b3d4:	2b01      	cmp	r3, #1
9000b3d6:	d900      	bls.n	9000b3da <HAL_JPEG_IRQHandler+0xe>
}
9000b3d8:	bd38      	pop	{r3, r4, r5, pc}
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000b3da:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000b3dc:	4604      	mov	r4, r0
9000b3de:	f003 030c 	and.w	r3, r3, #12
9000b3e2:	2b08      	cmp	r3, #8
9000b3e4:	d050      	beq.n	9000b488 <HAL_JPEG_IRQHandler+0xbc>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000b3e6:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000b3e8:	f003 030c 	and.w	r3, r3, #12
9000b3ec:	2b0c      	cmp	r3, #12
9000b3ee:	d1f3      	bne.n	9000b3d8 <HAL_JPEG_IRQHandler+0xc>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b3f0:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000b3f2:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b3f4:	f002 0203 	and.w	r2, r2, #3
9000b3f8:	2a02      	cmp	r2, #2
9000b3fa:	d049      	beq.n	9000b490 <HAL_JPEG_IRQHandler+0xc4>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
9000b3fc:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000b3fe:	0692      	lsls	r2, r2, #26
9000b400:	d5ea      	bpl.n	9000b3d8 <HAL_JPEG_IRQHandler+0xc>
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000b402:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000b404:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000b406:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
9000b40a:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000b40c:	681a      	ldr	r2, [r3, #0]
9000b40e:	f022 0201 	bic.w	r2, r2, #1
9000b412:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000b414:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000b416:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000b41a:	631a      	str	r2, [r3, #48]	@ 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000b41c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000b41e:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000b422:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000b424:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000b428:	2b02      	cmp	r3, #2
9000b42a:	d054      	beq.n	9000b4d6 <HAL_JPEG_IRQHandler+0x10a>
    if (hjpeg->hdmaout->State == HAL_MDMA_STATE_BUSY)
9000b42c:	6b60      	ldr	r0, [r4, #52]	@ 0x34
9000b42e:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000b432:	2b02      	cmp	r3, #2
9000b434:	d043      	beq.n	9000b4be <HAL_JPEG_IRQHandler+0xf2>
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000b436:	6803      	ldr	r3, [r0, #0]
9000b438:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000b43a:	695b      	ldr	r3, [r3, #20]
9000b43c:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000b440:	1ad3      	subs	r3, r2, r3
9000b442:	6263      	str	r3, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000b444:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000b446:	429a      	cmp	r2, r3
9000b448:	d048      	beq.n	9000b4dc <HAL_JPEG_IRQHandler+0x110>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000b44a:	6822      	ldr	r2, [r4, #0]
9000b44c:	6b55      	ldr	r5, [r2, #52]	@ 0x34
9000b44e:	f015 0510 	ands.w	r5, r5, #16
9000b452:	d138      	bne.n	9000b4c6 <HAL_JPEG_IRQHandler+0xfa>
    if (hjpeg->JpegOutCount > 0UL)
9000b454:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000b456:	2b00      	cmp	r3, #0
9000b458:	d14b      	bne.n	9000b4f2 <HAL_JPEG_IRQHandler+0x126>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000b45a:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000b45c:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000b45e:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000b460:	f023 0301 	bic.w	r3, r3, #1
9000b464:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000b466:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000b468:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b46a:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000b46e:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000b472:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000b476:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b478:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000b47a:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000b47c:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b480:	d034      	beq.n	9000b4ec <HAL_JPEG_IRQHandler+0x120>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000b482:	f7ff f9af 	bl	9000a7e4 <HAL_JPEG_EncodeCpltCallback>
}
9000b486:	bd38      	pop	{r3, r4, r5, pc}
9000b488:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        (void) JPEG_Process(hjpeg);
9000b48c:	f7ff bb70 	b.w	9000ab70 <JPEG_Process>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000b490:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000b492:	0651      	lsls	r1, r2, #25
9000b494:	d5b2      	bpl.n	9000b3fc <HAL_JPEG_IRQHandler+0x30>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000b496:	1d05      	adds	r5, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000b498:	4629      	mov	r1, r5
9000b49a:	f7fe feaf 	bl	9000a1fc <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000b49e:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000b4a0:	4629      	mov	r1, r5
9000b4a2:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000b4a4:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000b4a6:	f7f6 fd27 	bl	90001ef8 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000b4aa:	6823      	ldr	r3, [r4, #0]
9000b4ac:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000b4ae:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
9000b4b2:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000b4b4:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000b4b6:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
9000b4ba:	639a      	str	r2, [r3, #56]	@ 0x38
9000b4bc:	e79e      	b.n	9000b3fc <HAL_JPEG_IRQHandler+0x30>
}
9000b4be:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmaout);
9000b4c2:	f000 bb35 	b.w	9000bb30 <HAL_MDMA_Abort_IT>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000b4c6:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000b4c8:	049b      	lsls	r3, r3, #18
9000b4ca:	d485      	bmi.n	9000b3d8 <HAL_JPEG_IRQHandler+0xc>
    JPEG_DMA_PollResidualData(hjpeg);
9000b4cc:	4620      	mov	r0, r4
}
9000b4ce:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000b4d2:	f7ff b9f3 	b.w	9000a8bc <JPEG_DMA_PollResidualData>
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmain);
9000b4d6:	f000 fb2b 	bl	9000bb30 <HAL_MDMA_Abort_IT>
9000b4da:	e7a7      	b.n	9000b42c <HAL_JPEG_IRQHandler+0x60>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b4dc:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000b4de:	4620      	mov	r0, r4
9000b4e0:	69e1      	ldr	r1, [r4, #28]
9000b4e2:	f7f6 fd57 	bl	90001f94 <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000b4e6:	2300      	movs	r3, #0
9000b4e8:	6263      	str	r3, [r4, #36]	@ 0x24
9000b4ea:	e7ae      	b.n	9000b44a <HAL_JPEG_IRQHandler+0x7e>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000b4ec:	f7f6 fe00 	bl	900020f0 <HAL_JPEG_DecodeCpltCallback>
}
9000b4f0:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b4f2:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000b4f4:	4620      	mov	r0, r4
9000b4f6:	69e1      	ldr	r1, [r4, #28]
9000b4f8:	f7f6 fd4c 	bl	90001f94 <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000b4fc:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000b4fe:	6265      	str	r5, [r4, #36]	@ 0x24
9000b500:	e7ab      	b.n	9000b45a <HAL_JPEG_IRQHandler+0x8e>
9000b502:	bf00      	nop

9000b504 <HAL_JPEG_GetState>:
  return hjpeg->State;
9000b504:	f890 004d 	ldrb.w	r0, [r0, #77]	@ 0x4d
}
9000b508:	4770      	bx	lr
9000b50a:	bf00      	nop

9000b50c <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
9000b50c:	2800      	cmp	r0, #0
9000b50e:	d052      	beq.n	9000b5b6 <HAL_LTDC_Init+0xaa>
{
9000b510:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
9000b512:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
9000b516:	4604      	mov	r4, r0
9000b518:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000b51c:	2b00      	cmp	r3, #0
9000b51e:	d045      	beq.n	9000b5ac <HAL_LTDC_Init+0xa0>
  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b520:	68a0      	ldr	r0, [r4, #8]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b522:	2102      	movs	r1, #2
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b524:	e9d4 3200 	ldrd	r3, r2, [r4]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b528:	f884 10a1 	strb.w	r1, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b52c:	4302      	orrs	r2, r0
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000b52e:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b530:	68e0      	ldr	r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000b532:	f021 4170 	bic.w	r1, r1, #4026531840	@ 0xf0000000
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b536:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000b538:	6920      	ldr	r0, [r4, #16]
9000b53a:	4302      	orrs	r2, r0

  /* Set Synchronization size */
  tmp = (hltdc->Init.HorizontalSync << 16U);
9000b53c:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000b53e:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b540:	6999      	ldr	r1, [r3, #24]
9000b542:	430a      	orrs	r2, r1
9000b544:	619a      	str	r2, [r3, #24]
  WRITE_REG(hltdc->Instance->SSCR, (tmp | hltdc->Init.VerticalSync));

  /* Set Accumulated Back porch */
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
9000b546:	e9d4 2106 	ldrd	r2, r1, [r4, #24]
  WRITE_REG(hltdc->Instance->SSCR, (tmp | hltdc->Init.VerticalSync));
9000b54a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000b54e:	609a      	str	r2, [r3, #8]
  WRITE_REG(hltdc->Instance->BPCR, (tmp | hltdc->Init.AccumulatedVBP));

  /* Set Accumulated Active Width */
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
9000b550:	e9d4 2008 	ldrd	r2, r0, [r4, #32]
  WRITE_REG(hltdc->Instance->BPCR, (tmp | hltdc->Init.AccumulatedVBP));
9000b554:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000b558:	60da      	str	r2, [r3, #12]
  WRITE_REG(hltdc->Instance->AWCR, (tmp | hltdc->Init.AccumulatedActiveH));

  /* Set Total Width */
  tmp = (hltdc->Init.TotalWidth << 16U);
9000b55a:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	@ 0x28
  WRITE_REG(hltdc->Instance->AWCR, (tmp | hltdc->Init.AccumulatedActiveH));
9000b55e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000b562:	611a      	str	r2, [r3, #16]
  WRITE_REG(hltdc->Instance->TWCR, (tmp | hltdc->Init.TotalHeigh));
9000b564:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000b566:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000b56a:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000b56c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
9000b56e:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000b572:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
9000b576:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000b57a:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000b57c:	6add      	ldr	r5, [r3, #44]	@ 0x2c
9000b57e:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
9000b582:	432a      	orrs	r2, r5
9000b584:	ea42 2200 	orr.w	r2, r2, r0, lsl #8

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000b588:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000b58a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000b58e:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
9000b590:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000b592:	f042 0206 	orr.w	r2, r2, #6
9000b596:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
9000b598:	699a      	ldr	r2, [r3, #24]
9000b59a:	f042 0201 	orr.w	r2, r2, #1
9000b59e:	619a      	str	r2, [r3, #24]

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
9000b5a0:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000b5a2:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
9000b5a6:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1

  return HAL_OK;
}
9000b5aa:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
9000b5ac:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
9000b5b0:	f7f8 febc 	bl	9000432c <HAL_LTDC_MspInit>
9000b5b4:	e7b4      	b.n	9000b520 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
9000b5b6:	2001      	movs	r0, #1
}
9000b5b8:	4770      	bx	lr
9000b5ba:	bf00      	nop

9000b5bc <HAL_LTDC_ErrorCallback>:
  * @brief  Error LTDC callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
9000b5bc:	4770      	bx	lr
9000b5be:	bf00      	nop

9000b5c0 <HAL_LTDC_ReloadEventCallback>:
  * @brief  Reload Event callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
9000b5c0:	4770      	bx	lr
9000b5c2:	bf00      	nop

9000b5c4 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000b5c4:	6803      	ldr	r3, [r0, #0]
{
9000b5c6:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000b5c8:	6b9d      	ldr	r5, [r3, #56]	@ 0x38
{
9000b5ca:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
9000b5cc:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
9000b5ce:	076a      	lsls	r2, r5, #29
9000b5d0:	d501      	bpl.n	9000b5d6 <HAL_LTDC_IRQHandler+0x12>
9000b5d2:	0771      	lsls	r1, r6, #29
9000b5d4:	d41d      	bmi.n	9000b612 <HAL_LTDC_IRQHandler+0x4e>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
9000b5d6:	07aa      	lsls	r2, r5, #30
9000b5d8:	d501      	bpl.n	9000b5de <HAL_LTDC_IRQHandler+0x1a>
9000b5da:	07b3      	lsls	r3, r6, #30
9000b5dc:	d42d      	bmi.n	9000b63a <HAL_LTDC_IRQHandler+0x76>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
9000b5de:	07e8      	lsls	r0, r5, #31
9000b5e0:	d501      	bpl.n	9000b5e6 <HAL_LTDC_IRQHandler+0x22>
9000b5e2:	07f1      	lsls	r1, r6, #31
9000b5e4:	d440      	bmi.n	9000b668 <HAL_LTDC_IRQHandler+0xa4>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
9000b5e6:	072a      	lsls	r2, r5, #28
9000b5e8:	d501      	bpl.n	9000b5ee <HAL_LTDC_IRQHandler+0x2a>
9000b5ea:	0733      	lsls	r3, r6, #28
9000b5ec:	d400      	bmi.n	9000b5f0 <HAL_LTDC_IRQHandler+0x2c>
}
9000b5ee:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000b5f0:	6823      	ldr	r3, [r4, #0]
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000b5f2:	2008      	movs	r0, #8
    hltdc->State = HAL_LTDC_STATE_READY;
9000b5f4:	2501      	movs	r5, #1
    __HAL_UNLOCK(hltdc);
9000b5f6:	2100      	movs	r1, #0
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000b5f8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000b5fa:	f022 0208 	bic.w	r2, r2, #8
9000b5fe:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000b600:	63d8      	str	r0, [r3, #60]	@ 0x3c
    HAL_LTDC_ReloadEventCallback(hltdc);
9000b602:	4620      	mov	r0, r4
    hltdc->State = HAL_LTDC_STATE_READY;
9000b604:	f884 50a1 	strb.w	r5, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000b608:	f884 10a0 	strb.w	r1, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
9000b60c:	f7ff ffd8 	bl	9000b5c0 <HAL_LTDC_ReloadEventCallback>
}
9000b610:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
9000b612:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000b614:	f022 0204 	bic.w	r2, r2, #4
9000b618:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
9000b61a:	2204      	movs	r2, #4
9000b61c:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
9000b61e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
9000b622:	f043 0301 	orr.w	r3, r3, #1
9000b626:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
9000b62a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000b62c:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000b630:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000b634:	f7ff ffc2 	bl	9000b5bc <HAL_LTDC_ErrorCallback>
9000b638:	e7cd      	b.n	9000b5d6 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000b63a:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
9000b63c:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000b63e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000b640:	f022 0202 	bic.w	r2, r2, #2
9000b644:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
9000b646:	2202      	movs	r2, #2
9000b648:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000b64a:	2204      	movs	r2, #4
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
9000b64c:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
9000b650:	f043 0302 	orr.w	r3, r3, #2
9000b654:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
9000b658:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000b65a:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000b65e:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000b662:	f7ff ffab 	bl	9000b5bc <HAL_LTDC_ErrorCallback>
9000b666:	e7ba      	b.n	9000b5de <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000b668:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
9000b66a:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000b66c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000b66e:	f022 0201 	bic.w	r2, r2, #1
9000b672:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
9000b674:	2201      	movs	r2, #1
9000b676:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
9000b678:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
9000b67a:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000b67e:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
9000b682:	f7f7 ffe5 	bl	90003650 <HAL_LTDC_LineEventCallback>
9000b686:	e7ae      	b.n	9000b5e6 <HAL_LTDC_IRQHandler+0x22>

9000b688 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
9000b688:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
9000b68c:	2b01      	cmp	r3, #1
9000b68e:	f000 80b6 	beq.w	9000b7fe <HAL_LTDC_ConfigLayer+0x176>

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b692:	2302      	movs	r3, #2
{
9000b694:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b698:	f04f 0e34 	mov.w	lr, #52	@ 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000b69c:	f8d0 9000 	ldr.w	r9, [r0]
{
9000b6a0:	b083      	sub	sp, #12
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b6a2:	f880 30a1 	strb.w	r3, [r0, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b6a6:	fb0e 0e02 	mla	lr, lr, r2, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b6aa:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000b6ac:	f8d9 300c 	ldr.w	r3, [r9, #12]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b6b0:	460c      	mov	r4, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b6b2:	f102 0684 	add.w	r6, r2, #132	@ 0x84
9000b6b6:	460d      	mov	r5, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000b6b8:	f3c3 4b0b 	ubfx	fp, r3, #16, #12
9000b6bc:	4680      	mov	r8, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b6be:	eb09 0c06 	add.w	ip, r9, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b6c2:	f10e 0e38 	add.w	lr, lr, #56	@ 0x38
  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000b6c6:	f8df a140 	ldr.w	sl, [pc, #320]	@ 9000b808 <HAL_LTDC_ConfigLayer+0x180>
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b6ca:	f8dc 3004 	ldr.w	r3, [ip, #4]
9000b6ce:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
9000b6d2:	9301      	str	r3, [sp, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b6d4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000b6d6:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000b6da:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000b6dc:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b6de:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000b6e2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000b6e4:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000b6e8:	6823      	ldr	r3, [r4, #0]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000b6ea:	44bb      	add	fp, r7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000b6ec:	682a      	ldr	r2, [r5, #0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b6ee:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b6f2:	9b01      	ldr	r3, [sp, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000b6f4:	1c51      	adds	r1, r2, #1
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000b6f6:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b6f8:	f8cc 3004 	str.w	r3, [ip, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000b6fc:	f8d9 300c 	ldr.w	r3, [r9, #12]
9000b700:	f3c3 430b 	ubfx	r3, r3, #16, #12
9000b704:	440b      	add	r3, r1
9000b706:	ea43 430b 	orr.w	r3, r3, fp, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000b70a:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000b70e:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000b712:	f8dc 3008 	ldr.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000b716:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000b71a:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000b71e:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000b720:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000b724:	68ab      	ldr	r3, [r5, #8]
9000b726:	f8d9 000c 	ldr.w	r0, [r9, #12]
9000b72a:	3301      	adds	r3, #1
9000b72c:	f3c0 000a 	ubfx	r0, r0, #0, #11
9000b730:	4403      	add	r3, r0
  tmp2 = (pLayerCfg->Alpha0 << 24U);
9000b732:	69a8      	ldr	r0, [r5, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000b734:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000b738:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000b73a:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
9000b73e:	2907      	cmp	r1, #7
9000b740:	f8dc 3010 	ldr.w	r3, [ip, #16]
9000b744:	f023 0307 	bic.w	r3, r3, #7
9000b748:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000b74c:	f8cc 1010 	str.w	r1, [ip, #16]
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
9000b750:	f895 3030 	ldrb.w	r3, [r5, #48]	@ 0x30
9000b754:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
9000b758:	f895 0031 	ldrb.w	r0, [r5, #49]	@ 0x31
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
9000b75c:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
9000b760:	f895 0032 	ldrb.w	r0, [r5, #50]	@ 0x32
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
9000b764:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
9000b768:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
9000b76c:	f8dc 3014 	ldr.w	r3, [ip, #20]
9000b770:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
9000b774:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
9000b778:	696b      	ldr	r3, [r5, #20]
9000b77a:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000b77e:	f8dc 001c 	ldr.w	r0, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000b782:	69eb      	ldr	r3, [r5, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000b784:	ea00 0a0a 	and.w	sl, r0, sl
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000b788:	6a28      	ldr	r0, [r5, #32]
9000b78a:	ea43 0300 	orr.w	r3, r3, r0
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000b78e:	f8cc a01c 	str.w	sl, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000b792:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->CFBAR, pLayerCfg->FBStartAdress);
9000b796:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
9000b798:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000b79c:	d82d      	bhi.n	9000b7fa <HAL_LTDC_ConfigLayer+0x172>
9000b79e:	4b19      	ldr	r3, [pc, #100]	@ (9000b804 <HAL_LTDC_ConfigLayer+0x17c>)
9000b7a0:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000b7a4:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000b7a6:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000b7a8:	fb03 f707 	mul.w	r7, r3, r7
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000b7ac:	fb02 f303 	mul.w	r3, r2, r3
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000b7b0:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000b7b2:	3707      	adds	r7, #7
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000b7b4:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
9000b7b8:	f8dc 302c 	ldr.w	r3, [ip, #44]	@ 0x2c
9000b7bc:	f003 23e0 	and.w	r3, r3, #3758153728	@ 0xe000e000
9000b7c0:	f8cc 302c 	str.w	r3, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000b7c4:	f8cc 702c 	str.w	r7, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
9000b7c8:	f8dc 3030 	ldr.w	r3, [ip, #48]	@ 0x30
9000b7cc:	f36f 030a 	bfc	r3, #0, #11
9000b7d0:	f8cc 3030 	str.w	r3, [ip, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000b7d4:	f8cc 2030 	str.w	r2, [ip, #48]	@ 0x30
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000b7d8:	2201      	movs	r2, #1

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
9000b7da:	f859 3006 	ldr.w	r3, [r9, r6]
9000b7de:	4313      	orrs	r3, r2
9000b7e0:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
9000b7e4:	2300      	movs	r3, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000b7e6:	f8c9 2024 	str.w	r2, [r9, #36]	@ 0x24
  return HAL_OK;
9000b7ea:	4618      	mov	r0, r3
  hltdc->State  = HAL_LTDC_STATE_READY;
9000b7ec:	f888 20a1 	strb.w	r2, [r8, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
9000b7f0:	f888 30a0 	strb.w	r3, [r8, #160]	@ 0xa0
}
9000b7f4:	b003      	add	sp, #12
9000b7f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->CFBAR, pLayerCfg->FBStartAdress);
9000b7fa:	2301      	movs	r3, #1
9000b7fc:	e7d2      	b.n	9000b7a4 <HAL_LTDC_ConfigLayer+0x11c>
  __HAL_LOCK(hltdc);
9000b7fe:	2002      	movs	r0, #2
}
9000b800:	4770      	bx	lr
9000b802:	bf00      	nop
9000b804:	90031874 	.word	0x90031874
9000b808:	fffff8f8 	.word	0xfffff8f8

9000b80c <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
9000b80c:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
9000b810:	2a01      	cmp	r2, #1
9000b812:	d019      	beq.n	9000b848 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000b814:	6802      	ldr	r2, [r0, #0]
9000b816:	4603      	mov	r3, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b818:	2002      	movs	r0, #2
  __HAL_UNLOCK(hltdc);
9000b81a:	f04f 0c00 	mov.w	ip, #0
{
9000b81e:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b820:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000b824:	6b50      	ldr	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
9000b826:	4c09      	ldr	r4, [pc, #36]	@ (9000b84c <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000b828:	f020 0001 	bic.w	r0, r0, #1
9000b82c:	6350      	str	r0, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000b82e:	2001      	movs	r0, #1
  LTDC->LIPCR = (uint32_t)Line;
9000b830:	6421      	str	r1, [r4, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
9000b832:	6b51      	ldr	r1, [r2, #52]	@ 0x34
9000b834:	4301      	orrs	r1, r0
9000b836:	6351      	str	r1, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000b838:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  return HAL_OK;
9000b83c:	4660      	mov	r0, ip
  __HAL_UNLOCK(hltdc);
9000b83e:	f883 c0a0 	strb.w	ip, [r3, #160]	@ 0xa0
}
9000b842:	f85d 4b04 	ldr.w	r4, [sp], #4
9000b846:	4770      	bx	lr
  __HAL_LOCK(hltdc);
9000b848:	2002      	movs	r0, #2
}
9000b84a:	4770      	bx	lr
9000b84c:	50001000 	.word	0x50001000

9000b850 <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
9000b850:	b538      	push	{r3, r4, r5, lr}
9000b852:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
9000b854:	f7fc fc96 	bl	90008184 <HAL_GetTick>

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
9000b858:	2c00      	cmp	r4, #0
9000b85a:	d058      	beq.n	9000b90e <HAL_MDMA_Init+0xbe>

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
9000b85c:	6823      	ldr	r3, [r4, #0]
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000b85e:	2202      	movs	r2, #2
  __HAL_UNLOCK(hmdma);
9000b860:	2100      	movs	r1, #0
9000b862:	4605      	mov	r5, r0
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000b864:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
  __HAL_UNLOCK(hmdma);
9000b868:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
  __HAL_MDMA_DISABLE(hmdma);
9000b86c:	68da      	ldr	r2, [r3, #12]
9000b86e:	f022 0201 	bic.w	r2, r2, #1
9000b872:	60da      	str	r2, [r3, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000b874:	e005      	b.n	9000b882 <HAL_MDMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000b876:	f7fc fc85 	bl	90008184 <HAL_GetTick>
9000b87a:	1b43      	subs	r3, r0, r5
9000b87c:	2b05      	cmp	r3, #5
9000b87e:	d841      	bhi.n	9000b904 <HAL_MDMA_Init+0xb4>
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000b880:	6823      	ldr	r3, [r4, #0]
9000b882:	68da      	ldr	r2, [r3, #12]
9000b884:	07d2      	lsls	r2, r2, #31
9000b886:	d4f6      	bmi.n	9000b876 <HAL_MDMA_Init+0x26>
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000b888:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
9000b88c:	69e0      	ldr	r0, [r4, #28]
9000b88e:	432a      	orrs	r2, r5
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000b890:	68e1      	ldr	r1, [r4, #12]
9000b892:	6925      	ldr	r5, [r4, #16]
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000b894:	4302      	orrs	r2, r0
9000b896:	6a20      	ldr	r0, [r4, #32]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000b898:	4329      	orrs	r1, r5
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000b89a:	4302      	orrs	r2, r0
9000b89c:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000b89e:	4302      	orrs	r2, r0
9000b8a0:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
9000b8a2:	4302      	orrs	r2, r0
9000b8a4:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000b8a6:	4302      	orrs	r2, r0
9000b8a8:	68a0      	ldr	r0, [r4, #8]
9000b8aa:	4302      	orrs	r2, r0
9000b8ac:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
9000b8ae:	3801      	subs	r0, #1
9000b8b0:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b8b4:	6860      	ldr	r0, [r4, #4]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000b8b6:	60d9      	str	r1, [r3, #12]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b8b8:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
9000b8bc:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b8be:	d103      	bne.n	9000b8c8 <HAL_MDMA_Init+0x78>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
9000b8c0:	691a      	ldr	r2, [r3, #16]
9000b8c2:	f042 4240 	orr.w	r2, r2, #3221225472	@ 0xc0000000
9000b8c6:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
9000b8c8:	2100      	movs	r1, #0

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000b8ca:	6b62      	ldr	r2, [r4, #52]	@ 0x34
9000b8cc:	428a      	cmp	r2, r1
  hmdma->Instance->CBNDTR = 0;
9000b8ce:	6159      	str	r1, [r3, #20]
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000b8d0:	db1f      	blt.n	9000b912 <HAL_MDMA_Init+0xc2>
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
9000b8d2:	b292      	uxth	r2, r2
9000b8d4:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000b8d6:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000b8d8:	2a00      	cmp	r2, #0
9000b8da:	db24      	blt.n	9000b926 <HAL_MDMA_Init+0xd6>
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000b8dc:	6a19      	ldr	r1, [r3, #32]
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000b8de:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000b8e2:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000b8e6:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000b8e8:	d029      	beq.n	9000b93e <HAL_MDMA_Init+0xee>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
9000b8ea:	b2c0      	uxtb	r0, r0
9000b8ec:	6298      	str	r0, [r3, #40]	@ 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
9000b8ee:	2200      	movs	r2, #0
  hmdma->State = HAL_MDMA_STATE_READY;
9000b8f0:	2101      	movs	r1, #1
  hmdma->Instance->CLAR =  0;
9000b8f2:	625a      	str	r2, [r3, #36]	@ 0x24
  return HAL_OK;
9000b8f4:	4610      	mov	r0, r2
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000b8f6:	66a2      	str	r2, [r4, #104]	@ 0x68
  hmdma->LinkedListNodeCounter  = 0;
9000b8f8:	6662      	str	r2, [r4, #100]	@ 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
9000b8fa:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
  hmdma->FirstLinkedListNodeAddress  = 0;
9000b8fe:	e9c4 2217 	strd	r2, r2, [r4, #92]	@ 0x5c
}
9000b902:	bd38      	pop	{r3, r4, r5, pc}
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000b904:	2240      	movs	r2, #64	@ 0x40
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000b906:	2303      	movs	r3, #3
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000b908:	66a2      	str	r2, [r4, #104]	@ 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000b90a:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    return HAL_ERROR;
9000b90e:	2001      	movs	r0, #1
}
9000b910:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000b912:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
9000b914:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000b916:	f441 2180 	orr.w	r1, r1, #262144	@ 0x40000
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000b91a:	b292      	uxth	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000b91c:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000b91e:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000b920:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000b922:	2a00      	cmp	r2, #0
9000b924:	dada      	bge.n	9000b8dc <HAL_MDMA_Init+0x8c>
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000b926:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
9000b928:	4252      	negs	r2, r2
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000b92a:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000b92e:	f441 2100 	orr.w	r1, r1, #524288	@ 0x80000
9000b932:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000b934:	6a19      	ldr	r1, [r3, #32]
9000b936:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000b93a:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000b93c:	d1d5      	bne.n	9000b8ea <HAL_MDMA_Init+0x9a>
    hmdma->Instance->CTBR = 0;
9000b93e:	2200      	movs	r2, #0
9000b940:	629a      	str	r2, [r3, #40]	@ 0x28
9000b942:	e7d4      	b.n	9000b8ee <HAL_MDMA_Init+0x9e>

9000b944 <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
9000b944:	b1f8      	cbz	r0, 9000b986 <HAL_MDMA_DeInit+0x42>
  __HAL_MDMA_DISABLE(hmdma);
9000b946:	6802      	ldr	r2, [r0, #0]
9000b948:	4601      	mov	r1, r0
  hmdma->Instance->CCR  = 0;
9000b94a:	2300      	movs	r3, #0
  __HAL_MDMA_DISABLE(hmdma);
9000b94c:	68d0      	ldr	r0, [r2, #12]
{
9000b94e:	b410      	push	{r4}
  __HAL_MDMA_DISABLE(hmdma);
9000b950:	f020 0001 	bic.w	r0, r0, #1
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000b954:	241f      	movs	r4, #31
  __HAL_MDMA_DISABLE(hmdma);
9000b956:	60d0      	str	r0, [r2, #12]
  return HAL_OK;
9000b958:	4618      	mov	r0, r3
  hmdma->Instance->CCR  = 0;
9000b95a:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
9000b95c:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
9000b95e:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
9000b960:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
9000b962:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
9000b964:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
9000b966:	6253      	str	r3, [r2, #36]	@ 0x24
  hmdma->Instance->CTBR = 0;
9000b968:	6293      	str	r3, [r2, #40]	@ 0x28
  hmdma->Instance->CMAR = 0;
9000b96a:	6313      	str	r3, [r2, #48]	@ 0x30
  hmdma->Instance->CMDR = 0;
9000b96c:	6353      	str	r3, [r2, #52]	@ 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000b96e:	6054      	str	r4, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000b970:	668b      	str	r3, [r1, #104]	@ 0x68
  __HAL_UNLOCK(hmdma);
9000b972:	f881 303c 	strb.w	r3, [r1, #60]	@ 0x3c
  hmdma->State = HAL_MDMA_STATE_RESET;
9000b976:	f881 303d 	strb.w	r3, [r1, #61]	@ 0x3d
}
9000b97a:	f85d 4b04 	ldr.w	r4, [sp], #4
  hmdma->LinkedListNodeCounter  = 0;
9000b97e:	664b      	str	r3, [r1, #100]	@ 0x64
  hmdma->FirstLinkedListNodeAddress  = 0;
9000b980:	e9c1 3317 	strd	r3, r3, [r1, #92]	@ 0x5c
}
9000b984:	4770      	bx	lr
    return HAL_ERROR;
9000b986:	2001      	movs	r0, #1
}
9000b988:	4770      	bx	lr
9000b98a:	bf00      	nop

9000b98c <HAL_MDMA_ConfigPostRequestMask>:
  if(hmdma == NULL)
9000b98c:	b308      	cbz	r0, 9000b9d2 <HAL_MDMA_ConfigPostRequestMask+0x46>
9000b98e:	4603      	mov	r3, r0
  __HAL_LOCK(hmdma);
9000b990:	f890 003c 	ldrb.w	r0, [r0, #60]	@ 0x3c
9000b994:	2801      	cmp	r0, #1
9000b996:	d01e      	beq.n	9000b9d6 <HAL_MDMA_ConfigPostRequestMask+0x4a>
{
9000b998:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hmdma);
9000b99a:	f04f 0e01 	mov.w	lr, #1
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000b99e:	f893 c03d 	ldrb.w	ip, [r3, #61]	@ 0x3d
9000b9a2:	45f4      	cmp	ip, lr
9000b9a4:	fa5f f08c 	uxtb.w	r0, ip
  __HAL_LOCK(hmdma);
9000b9a8:	f883 e03c 	strb.w	lr, [r3, #60]	@ 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000b9ac:	d004      	beq.n	9000b9b8 <HAL_MDMA_ConfigPostRequestMask+0x2c>
      status =  HAL_ERROR;
9000b9ae:	4670      	mov	r0, lr
  __HAL_UNLOCK(hmdma);
9000b9b0:	2200      	movs	r2, #0
9000b9b2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
}
9000b9b6:	bd30      	pop	{r4, r5, pc}
    if((hmdma->Instance->CTCR & MDMA_CTCR_SWRM) == 0U)
9000b9b8:	681c      	ldr	r4, [r3, #0]
9000b9ba:	6925      	ldr	r5, [r4, #16]
9000b9bc:	006d      	lsls	r5, r5, #1
9000b9be:	d4f7      	bmi.n	9000b9b0 <HAL_MDMA_ConfigPostRequestMask+0x24>
      hmdma->Instance->CMAR = MaskAddress;
9000b9c0:	6321      	str	r1, [r4, #48]	@ 0x30
      hmdma->Instance->CMDR = MaskData;
9000b9c2:	6362      	str	r2, [r4, #52]	@ 0x34
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000b9c4:	6922      	ldr	r2, [r4, #16]
      if(MaskAddress == 0U)
9000b9c6:	b941      	cbnz	r1, 9000b9da <HAL_MDMA_ConfigPostRequestMask+0x4e>
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000b9c8:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
9000b9cc:	6122      	str	r2, [r4, #16]
  HAL_StatusTypeDef  status = HAL_OK;
9000b9ce:	2000      	movs	r0, #0
9000b9d0:	e7ee      	b.n	9000b9b0 <HAL_MDMA_ConfigPostRequestMask+0x24>
    return HAL_ERROR;
9000b9d2:	2001      	movs	r0, #1
9000b9d4:	4770      	bx	lr
  __HAL_LOCK(hmdma);
9000b9d6:	2002      	movs	r0, #2
}
9000b9d8:	4770      	bx	lr
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000b9da:	f042 4200 	orr.w	r2, r2, #2147483648	@ 0x80000000
9000b9de:	6122      	str	r2, [r4, #16]
9000b9e0:	e7f5      	b.n	9000b9ce <HAL_MDMA_ConfigPostRequestMask+0x42>
9000b9e2:	bf00      	nop

9000b9e4 <HAL_MDMA_Start_IT>:
  if(hmdma == NULL)
9000b9e4:	2800      	cmp	r0, #0
9000b9e6:	d066      	beq.n	9000bab6 <HAL_MDMA_Start_IT+0xd2>
{
9000b9e8:	b470      	push	{r4, r5, r6}
  __HAL_LOCK(hmdma);
9000b9ea:	f890 403c 	ldrb.w	r4, [r0, #60]	@ 0x3c
9000b9ee:	2c01      	cmp	r4, #1
9000b9f0:	d009      	beq.n	9000ba06 <HAL_MDMA_Start_IT+0x22>
9000b9f2:	2401      	movs	r4, #1
9000b9f4:	f880 403c 	strb.w	r4, [r0, #60]	@ 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000b9f8:	f890 403d 	ldrb.w	r4, [r0, #61]	@ 0x3d
9000b9fc:	2c01      	cmp	r4, #1
9000b9fe:	d005      	beq.n	9000ba0c <HAL_MDMA_Start_IT+0x28>
    __HAL_UNLOCK(hmdma);
9000ba00:	2300      	movs	r3, #0
9000ba02:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  __HAL_LOCK(hmdma);
9000ba06:	2002      	movs	r0, #2
}
9000ba08:	bc70      	pop	{r4, r5, r6}
9000ba0a:	4770      	bx	lr
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000ba0c:	2402      	movs	r4, #2
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000ba0e:	9d03      	ldr	r5, [sp, #12]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000ba10:	261f      	movs	r6, #31
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000ba12:	f011 4f5f 	tst.w	r1, #3741319168	@ 0xdf000000
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000ba16:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000ba1a:	f04f 0400 	mov.w	r4, #0
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000ba1e:	f105 3cff 	add.w	ip, r5, #4294967295
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000ba22:	6684      	str	r4, [r0, #104]	@ 0x68
    __HAL_MDMA_DISABLE(hmdma);
9000ba24:	6804      	ldr	r4, [r0, #0]
9000ba26:	68e5      	ldr	r5, [r4, #12]
9000ba28:	f025 0501 	bic.w	r5, r5, #1
9000ba2c:	60e5      	str	r5, [r4, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000ba2e:	6965      	ldr	r5, [r4, #20]
9000ba30:	f363 0510 	bfi	r5, r3, #0, #17
9000ba34:	6165      	str	r5, [r4, #20]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000ba36:	6963      	ldr	r3, [r4, #20]
9000ba38:	f3c3 0313 	ubfx	r3, r3, #0, #20
9000ba3c:	ea43 530c 	orr.w	r3, r3, ip, lsl #20
9000ba40:	6163      	str	r3, [r4, #20]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000ba42:	6066      	str	r6, [r4, #4]
  hmdma->Instance->CDAR = DstAddress;
9000ba44:	61e2      	str	r2, [r4, #28]
  hmdma->Instance->CSAR = SrcAddress;
9000ba46:	61a1      	str	r1, [r4, #24]
    hmdma->Instance->CTBR |= MDMA_CTBR_SBUS;
9000ba48:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000ba4a:	bf0c      	ite	eq
9000ba4c:	f443 3380 	orreq.w	r3, r3, #65536	@ 0x10000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000ba50:	f423 3380 	bicne.w	r3, r3, #65536	@ 0x10000
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000ba54:	f012 4f5f 	tst.w	r2, #3741319168	@ 0xdf000000
    if(hmdma->XferBlockCpltCallback != NULL)
9000ba58:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000ba5a:	62a3      	str	r3, [r4, #40]	@ 0x28
    hmdma->Instance->CTBR |= MDMA_CTBR_DBUS;
9000ba5c:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000ba5e:	bf0c      	ite	eq
9000ba60:	f443 3300 	orreq.w	r3, r3, #131072	@ 0x20000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_DBUS);
9000ba64:	f423 3300 	bicne.w	r3, r3, #131072	@ 0x20000
9000ba68:	62a3      	str	r3, [r4, #40]	@ 0x28
  hmdma->Instance->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;
9000ba6a:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
9000ba6c:	6263      	str	r3, [r4, #36]	@ 0x24
    __HAL_MDMA_ENABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC));
9000ba6e:	68e3      	ldr	r3, [r4, #12]
9000ba70:	f043 0306 	orr.w	r3, r3, #6
9000ba74:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBlockCpltCallback != NULL)
9000ba76:	b11a      	cbz	r2, 9000ba80 <HAL_MDMA_Start_IT+0x9c>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BT);
9000ba78:	68e3      	ldr	r3, [r4, #12]
9000ba7a:	f043 0310 	orr.w	r3, r3, #16
9000ba7e:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000ba80:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9000ba82:	b11b      	cbz	r3, 9000ba8c <HAL_MDMA_Start_IT+0xa8>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BRT);
9000ba84:	68e3      	ldr	r3, [r4, #12]
9000ba86:	f043 0308 	orr.w	r3, r3, #8
9000ba8a:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBufferCpltCallback != NULL)
9000ba8c:	6c83      	ldr	r3, [r0, #72]	@ 0x48
9000ba8e:	b11b      	cbz	r3, 9000ba98 <HAL_MDMA_Start_IT+0xb4>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BFTC);
9000ba90:	68e3      	ldr	r3, [r4, #12]
9000ba92:	f043 0320 	orr.w	r3, r3, #32
9000ba96:	60e3      	str	r3, [r4, #12]
    __HAL_MDMA_ENABLE(hmdma);
9000ba98:	68e3      	ldr	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000ba9a:	6842      	ldr	r2, [r0, #4]
    __HAL_MDMA_ENABLE(hmdma);
9000ba9c:	f043 0301 	orr.w	r3, r3, #1
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000baa0:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
    __HAL_MDMA_ENABLE(hmdma);
9000baa4:	60e3      	str	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000baa6:	d103      	bne.n	9000bab0 <HAL_MDMA_Start_IT+0xcc>
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000baa8:	68e3      	ldr	r3, [r4, #12]
9000baaa:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000baae:	60e3      	str	r3, [r4, #12]
  return HAL_OK;
9000bab0:	2000      	movs	r0, #0
}
9000bab2:	bc70      	pop	{r4, r5, r6}
9000bab4:	4770      	bx	lr
    return HAL_ERROR;
9000bab6:	2001      	movs	r0, #1
}
9000bab8:	4770      	bx	lr
9000baba:	bf00      	nop

9000babc <HAL_MDMA_Abort>:
{
9000babc:	b538      	push	{r3, r4, r5, lr}
9000babe:	4604      	mov	r4, r0
  uint32_t tickstart =  HAL_GetTick();
9000bac0:	f7fc fb60 	bl	90008184 <HAL_GetTick>
  if(hmdma == NULL)
9000bac4:	b334      	cbz	r4, 9000bb14 <HAL_MDMA_Abort+0x58>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000bac6:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
9000baca:	2b02      	cmp	r3, #2
9000bacc:	d11d      	bne.n	9000bb0a <HAL_MDMA_Abort+0x4e>
    __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000bace:	6822      	ldr	r2, [r4, #0]
9000bad0:	4605      	mov	r5, r0
9000bad2:	68d3      	ldr	r3, [r2, #12]
9000bad4:	f023 033e 	bic.w	r3, r3, #62	@ 0x3e
9000bad8:	60d3      	str	r3, [r2, #12]
    __HAL_MDMA_DISABLE(hmdma);
9000bada:	68d3      	ldr	r3, [r2, #12]
9000badc:	f023 0301 	bic.w	r3, r3, #1
9000bae0:	60d3      	str	r3, [r2, #12]
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000bae2:	e005      	b.n	9000baf0 <HAL_MDMA_Abort+0x34>
      if( (HAL_GetTick()  - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000bae4:	f7fc fb4e 	bl	90008184 <HAL_GetTick>
9000bae8:	1b43      	subs	r3, r0, r5
9000baea:	2b05      	cmp	r3, #5
9000baec:	d814      	bhi.n	9000bb18 <HAL_MDMA_Abort+0x5c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000baee:	6822      	ldr	r2, [r4, #0]
9000baf0:	68d3      	ldr	r3, [r2, #12]
9000baf2:	f013 0301 	ands.w	r3, r3, #1
9000baf6:	d1f5      	bne.n	9000bae4 <HAL_MDMA_Abort+0x28>
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
9000baf8:	201f      	movs	r0, #31
    hmdma->State = HAL_MDMA_STATE_READY;
9000bafa:	2101      	movs	r1, #1
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
9000bafc:	6050      	str	r0, [r2, #4]
  return HAL_OK;
9000bafe:	4618      	mov	r0, r3
    __HAL_UNLOCK(hmdma);
9000bb00:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hmdma->State = HAL_MDMA_STATE_READY;
9000bb04:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
}
9000bb08:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000bb0a:	2280      	movs	r2, #128	@ 0x80
    __HAL_UNLOCK(hmdma);
9000bb0c:	2300      	movs	r3, #0
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000bb0e:	66a2      	str	r2, [r4, #104]	@ 0x68
    __HAL_UNLOCK(hmdma);
9000bb10:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    return HAL_ERROR;
9000bb14:	2001      	movs	r0, #1
}
9000bb16:	bd38      	pop	{r3, r4, r5, pc}
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000bb18:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
        __HAL_UNLOCK(hmdma);
9000bb1a:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_ERROR;
9000bb1c:	2203      	movs	r2, #3
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000bb1e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
        __HAL_UNLOCK(hmdma);
9000bb22:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000bb26:	66a3      	str	r3, [r4, #104]	@ 0x68
        hmdma->State = HAL_MDMA_STATE_ERROR;
9000bb28:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        return HAL_ERROR;
9000bb2c:	e7f2      	b.n	9000bb14 <HAL_MDMA_Abort+0x58>
9000bb2e:	bf00      	nop

9000bb30 <HAL_MDMA_Abort_IT>:
  if(hmdma == NULL)
9000bb30:	4603      	mov	r3, r0
9000bb32:	b128      	cbz	r0, 9000bb40 <HAL_MDMA_Abort_IT+0x10>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000bb34:	f890 203d 	ldrb.w	r2, [r0, #61]	@ 0x3d
9000bb38:	2a02      	cmp	r2, #2
9000bb3a:	d003      	beq.n	9000bb44 <HAL_MDMA_Abort_IT+0x14>
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000bb3c:	2280      	movs	r2, #128	@ 0x80
9000bb3e:	6682      	str	r2, [r0, #104]	@ 0x68
    return HAL_ERROR;
9000bb40:	2001      	movs	r0, #1
9000bb42:	4770      	bx	lr
    __HAL_MDMA_DISABLE(hmdma);
9000bb44:	6802      	ldr	r2, [r0, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000bb46:	2104      	movs	r1, #4
  return HAL_OK;
9000bb48:	2000      	movs	r0, #0
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000bb4a:	f883 103d 	strb.w	r1, [r3, #61]	@ 0x3d
    __HAL_MDMA_DISABLE(hmdma);
9000bb4e:	68d3      	ldr	r3, [r2, #12]
9000bb50:	f023 0301 	bic.w	r3, r3, #1
9000bb54:	60d3      	str	r3, [r2, #12]
}
9000bb56:	4770      	bx	lr

9000bb58 <HAL_MDMA_IRQHandler>:
{
9000bb58:	b530      	push	{r4, r5, lr}
  __IO uint32_t count = 0;
9000bb5a:	2300      	movs	r3, #0
{
9000bb5c:	b083      	sub	sp, #12
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000bb5e:	f04f 45a4 	mov.w	r5, #1375731712	@ 0x52000000
{
9000bb62:	4604      	mov	r4, r0
  __IO uint32_t count = 0;
9000bb64:	9301      	str	r3, [sp, #4]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000bb66:	2101      	movs	r1, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000bb68:	4b57      	ldr	r3, [pc, #348]	@ (9000bcc8 <HAL_MDMA_IRQHandler+0x170>)
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000bb6a:	6828      	ldr	r0, [r5, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000bb6c:	4a57      	ldr	r2, [pc, #348]	@ (9000bccc <HAL_MDMA_IRQHandler+0x174>)
  uint32_t timeout = SystemCoreClock / 9600U;
9000bb6e:	681d      	ldr	r5, [r3, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000bb70:	6823      	ldr	r3, [r4, #0]
9000bb72:	441a      	add	r2, r3
9000bb74:	f3c2 1284 	ubfx	r2, r2, #6, #5
9000bb78:	fa01 f202 	lsl.w	r2, r1, r2
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000bb7c:	4202      	tst	r2, r0
9000bb7e:	f000 80a0 	beq.w	9000bcc2 <HAL_MDMA_IRQHandler+0x16a>
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
9000bb82:	681a      	ldr	r2, [r3, #0]
9000bb84:	07d1      	lsls	r1, r2, #31
9000bb86:	d529      	bpl.n	9000bbdc <HAL_MDMA_IRQHandler+0x84>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_TE) != 0U)
9000bb88:	68da      	ldr	r2, [r3, #12]
9000bb8a:	0792      	lsls	r2, r2, #30
9000bb8c:	d526      	bpl.n	9000bbdc <HAL_MDMA_IRQHandler+0x84>
      __HAL_MDMA_DISABLE_IT(hmdma, MDMA_IT_TE);
9000bb8e:	68da      	ldr	r2, [r3, #12]
9000bb90:	f022 0202 	bic.w	r2, r2, #2
9000bb94:	60da      	str	r2, [r3, #12]
      errorFlag = hmdma->Instance->CESR;
9000bb96:	689a      	ldr	r2, [r3, #8]
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000bb98:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TED) == 0U)
9000bb9a:	0610      	lsls	r0, r2, #24
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000bb9c:	bf54      	ite	pl
9000bb9e:	f041 0101 	orrpl.w	r1, r1, #1
        hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;
9000bba2:	f041 0102 	orrmi.w	r1, r1, #2
9000bba6:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TEMD) != 0U)
9000bba8:	0591      	lsls	r1, r2, #22
9000bbaa:	d503      	bpl.n	9000bbb4 <HAL_MDMA_IRQHandler+0x5c>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
9000bbac:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000bbae:	f041 0104 	orr.w	r1, r1, #4
9000bbb2:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TELD) != 0U)
9000bbb4:	05d0      	lsls	r0, r2, #23
9000bbb6:	d503      	bpl.n	9000bbc0 <HAL_MDMA_IRQHandler+0x68>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
9000bbb8:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000bbba:	f041 0108 	orr.w	r1, r1, #8
9000bbbe:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_ASE) != 0U)
9000bbc0:	0551      	lsls	r1, r2, #21
9000bbc2:	d503      	bpl.n	9000bbcc <HAL_MDMA_IRQHandler+0x74>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
9000bbc4:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000bbc6:	f041 0110 	orr.w	r1, r1, #16
9000bbca:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_BSE) != 0U)
9000bbcc:	0510      	lsls	r0, r2, #20
9000bbce:	d503      	bpl.n	9000bbd8 <HAL_MDMA_IRQHandler+0x80>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
9000bbd0:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
9000bbd2:	f042 0220 	orr.w	r2, r2, #32
9000bbd6:	66a2      	str	r2, [r4, #104]	@ 0x68
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE);
9000bbd8:	2201      	movs	r2, #1
9000bbda:	605a      	str	r2, [r3, #4]
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BFTC) != 0U))
9000bbdc:	681a      	ldr	r2, [r3, #0]
9000bbde:	06d1      	lsls	r1, r2, #27
9000bbe0:	d509      	bpl.n	9000bbf6 <HAL_MDMA_IRQHandler+0x9e>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BFTC) != 0U)
9000bbe2:	68da      	ldr	r2, [r3, #12]
9000bbe4:	0692      	lsls	r2, r2, #26
9000bbe6:	d506      	bpl.n	9000bbf6 <HAL_MDMA_IRQHandler+0x9e>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000bbe8:	2110      	movs	r1, #16
      if(hmdma->XferBufferCpltCallback != NULL)
9000bbea:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000bbec:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBufferCpltCallback != NULL)
9000bbee:	b112      	cbz	r2, 9000bbf6 <HAL_MDMA_IRQHandler+0x9e>
        hmdma->XferBufferCpltCallback(hmdma);
9000bbf0:	4620      	mov	r0, r4
9000bbf2:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BT) != 0U))
9000bbf4:	6823      	ldr	r3, [r4, #0]
9000bbf6:	681a      	ldr	r2, [r3, #0]
9000bbf8:	0710      	lsls	r0, r2, #28
9000bbfa:	d509      	bpl.n	9000bc10 <HAL_MDMA_IRQHandler+0xb8>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BT) != 0U)
9000bbfc:	68da      	ldr	r2, [r3, #12]
9000bbfe:	06d1      	lsls	r1, r2, #27
9000bc00:	d506      	bpl.n	9000bc10 <HAL_MDMA_IRQHandler+0xb8>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000bc02:	2108      	movs	r1, #8
      if(hmdma->XferBlockCpltCallback != NULL)
9000bc04:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000bc06:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBlockCpltCallback != NULL)
9000bc08:	b112      	cbz	r2, 9000bc10 <HAL_MDMA_IRQHandler+0xb8>
        hmdma->XferBlockCpltCallback(hmdma);
9000bc0a:	4620      	mov	r0, r4
9000bc0c:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BRT) != 0U))
9000bc0e:	6823      	ldr	r3, [r4, #0]
9000bc10:	681a      	ldr	r2, [r3, #0]
9000bc12:	0752      	lsls	r2, r2, #29
9000bc14:	d509      	bpl.n	9000bc2a <HAL_MDMA_IRQHandler+0xd2>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BRT) != 0U)
9000bc16:	68da      	ldr	r2, [r3, #12]
9000bc18:	0710      	lsls	r0, r2, #28
9000bc1a:	d506      	bpl.n	9000bc2a <HAL_MDMA_IRQHandler+0xd2>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000bc1c:	2104      	movs	r1, #4
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000bc1e:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000bc20:	6059      	str	r1, [r3, #4]
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000bc22:	b112      	cbz	r2, 9000bc2a <HAL_MDMA_IRQHandler+0xd2>
        hmdma->XferRepeatBlockCpltCallback(hmdma);
9000bc24:	4620      	mov	r0, r4
9000bc26:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_CTC) != 0U))
9000bc28:	6823      	ldr	r3, [r4, #0]
9000bc2a:	681a      	ldr	r2, [r3, #0]
9000bc2c:	0791      	lsls	r1, r2, #30
9000bc2e:	d516      	bpl.n	9000bc5e <HAL_MDMA_IRQHandler+0x106>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_CTC) != 0U)
9000bc30:	68da      	ldr	r2, [r3, #12]
9000bc32:	0752      	lsls	r2, r2, #29
9000bc34:	d513      	bpl.n	9000bc5e <HAL_MDMA_IRQHandler+0x106>
      __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000bc36:	68da      	ldr	r2, [r3, #12]
9000bc38:	f022 023e 	bic.w	r2, r2, #62	@ 0x3e
9000bc3c:	60da      	str	r2, [r3, #12]
      if(HAL_MDMA_STATE_ABORT == hmdma->State)
9000bc3e:	f894 203d 	ldrb.w	r2, [r4, #61]	@ 0x3d
9000bc42:	2a04      	cmp	r2, #4
9000bc44:	d034      	beq.n	9000bcb0 <HAL_MDMA_IRQHandler+0x158>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000bc46:	2202      	movs	r2, #2
      __HAL_UNLOCK(hmdma);
9000bc48:	2100      	movs	r1, #0
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000bc4a:	605a      	str	r2, [r3, #4]
      hmdma->State = HAL_MDMA_STATE_READY;
9000bc4c:	2201      	movs	r2, #1
      if(hmdma->XferCpltCallback != NULL)
9000bc4e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
      __HAL_UNLOCK(hmdma);
9000bc50:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
      hmdma->State = HAL_MDMA_STATE_READY;
9000bc54:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      if(hmdma->XferCpltCallback != NULL)
9000bc58:	b10b      	cbz	r3, 9000bc5e <HAL_MDMA_IRQHandler+0x106>
        hmdma->XferCpltCallback(hmdma);
9000bc5a:	4620      	mov	r0, r4
9000bc5c:	4798      	blx	r3
  if(hmdma->ErrorCode != HAL_MDMA_ERROR_NONE)
9000bc5e:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
9000bc60:	2b00      	cmp	r3, #0
9000bc62:	d02e      	beq.n	9000bcc2 <HAL_MDMA_IRQHandler+0x16a>
    __HAL_MDMA_DISABLE(hmdma);
9000bc64:	6821      	ldr	r1, [r4, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000bc66:	2004      	movs	r0, #4
  uint32_t timeout = SystemCoreClock / 9600U;
9000bc68:	4b19      	ldr	r3, [pc, #100]	@ (9000bcd0 <HAL_MDMA_IRQHandler+0x178>)
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000bc6a:	f884 003d 	strb.w	r0, [r4, #61]	@ 0x3d
  uint32_t timeout = SystemCoreClock / 9600U;
9000bc6e:	fba3 3205 	umull	r3, r2, r3, r5
    __HAL_MDMA_DISABLE(hmdma);
9000bc72:	68cb      	ldr	r3, [r1, #12]
9000bc74:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000bc78:	0a92      	lsrs	r2, r2, #10
    __HAL_MDMA_DISABLE(hmdma);
9000bc7a:	60cb      	str	r3, [r1, #12]
9000bc7c:	e002      	b.n	9000bc84 <HAL_MDMA_IRQHandler+0x12c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U);
9000bc7e:	68cb      	ldr	r3, [r1, #12]
9000bc80:	07d8      	lsls	r0, r3, #31
9000bc82:	d504      	bpl.n	9000bc8e <HAL_MDMA_IRQHandler+0x136>
      if (++count > timeout)
9000bc84:	9b01      	ldr	r3, [sp, #4]
9000bc86:	3301      	adds	r3, #1
9000bc88:	4293      	cmp	r3, r2
9000bc8a:	9301      	str	r3, [sp, #4]
9000bc8c:	d9f7      	bls.n	9000bc7e <HAL_MDMA_IRQHandler+0x126>
    __HAL_UNLOCK(hmdma);
9000bc8e:	2300      	movs	r3, #0
9000bc90:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000bc94:	68cb      	ldr	r3, [r1, #12]
9000bc96:	07db      	lsls	r3, r3, #31
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000bc98:	bf4c      	ite	mi
9000bc9a:	2303      	movmi	r3, #3
      hmdma->State = HAL_MDMA_STATE_READY;
9000bc9c:	2301      	movpl	r3, #1
9000bc9e:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    if (hmdma->XferErrorCallback != NULL)
9000bca2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000bca4:	b16b      	cbz	r3, 9000bcc2 <HAL_MDMA_IRQHandler+0x16a>
      hmdma->XferErrorCallback(hmdma);
9000bca6:	4620      	mov	r0, r4
}
9000bca8:	b003      	add	sp, #12
9000bcaa:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      hmdma->XferErrorCallback(hmdma);
9000bcae:	4718      	bx	r3
        __HAL_UNLOCK(hmdma);
9000bcb0:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_READY;
9000bcb2:	2201      	movs	r2, #1
        if(hmdma->XferAbortCallback != NULL)
9000bcb4:	6da3      	ldr	r3, [r4, #88]	@ 0x58
        __HAL_UNLOCK(hmdma);
9000bcb6:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
        hmdma->State = HAL_MDMA_STATE_READY;
9000bcba:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        if(hmdma->XferAbortCallback != NULL)
9000bcbe:	2b00      	cmp	r3, #0
9000bcc0:	d1f1      	bne.n	9000bca6 <HAL_MDMA_IRQHandler+0x14e>
}
9000bcc2:	b003      	add	sp, #12
9000bcc4:	bd30      	pop	{r4, r5, pc}
9000bcc6:	bf00      	nop
9000bcc8:	24000078 	.word	0x24000078
9000bccc:	adffffc0 	.word	0xadffffc0
9000bcd0:	1b4e81b5 	.word	0x1b4e81b5

9000bcd4 <HAL_PWREx_ConfigSupply>:
  *         process during startup.
  *         For more details, please refer to the power control chapter in the reference manual
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
9000bcd4:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000bcd6:	4c10      	ldr	r4, [pc, #64]	@ (9000bd18 <HAL_PWREx_ConfigSupply+0x44>)
9000bcd8:	68e3      	ldr	r3, [r4, #12]
9000bcda:	f013 0f04 	tst.w	r3, #4
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000bcde:	68e3      	ldr	r3, [r4, #12]
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000bce0:	d105      	bne.n	9000bcee <HAL_PWREx_ConfigSupply+0x1a>
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000bce2:	f003 0307 	and.w	r3, r3, #7
9000bce6:	1a18      	subs	r0, r3, r0
9000bce8:	bf18      	it	ne
9000bcea:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
9000bcec:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
9000bcee:	f023 0307 	bic.w	r3, r3, #7
9000bcf2:	4303      	orrs	r3, r0
9000bcf4:	60e3      	str	r3, [r4, #12]
  tickstart = HAL_GetTick ();
9000bcf6:	f7fc fa45 	bl	90008184 <HAL_GetTick>
9000bcfa:	4605      	mov	r5, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000bcfc:	e005      	b.n	9000bd0a <HAL_PWREx_ConfigSupply+0x36>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
9000bcfe:	f7fc fa41 	bl	90008184 <HAL_GetTick>
9000bd02:	1b40      	subs	r0, r0, r5
9000bd04:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
9000bd08:	d804      	bhi.n	9000bd14 <HAL_PWREx_ConfigSupply+0x40>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000bd0a:	6863      	ldr	r3, [r4, #4]
9000bd0c:	049b      	lsls	r3, r3, #18
9000bd0e:	d5f6      	bpl.n	9000bcfe <HAL_PWREx_ConfigSupply+0x2a>
      return HAL_OK;
9000bd10:	2000      	movs	r0, #0
}
9000bd12:	bd38      	pop	{r3, r4, r5, pc}
      return HAL_ERROR;
9000bd14:	2001      	movs	r0, #1
}
9000bd16:	bd38      	pop	{r3, r4, r5, pc}
9000bd18:	58024800 	.word	0x58024800

9000bd1c <HAL_RCC_GetSysClockFreq.part.0>:
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000bd1c:	4b33      	ldr	r3, [pc, #204]	@ (9000bdec <HAL_RCC_GetSysClockFreq.part.0+0xd0>)
uint32_t HAL_RCC_GetSysClockFreq(void)
9000bd1e:	b430      	push	{r4, r5}
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000bd20:	6a99      	ldr	r1, [r3, #40]	@ 0x28
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000bd22:	6a9c      	ldr	r4, [r3, #40]	@ 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000bd24:	6add      	ldr	r5, [r3, #44]	@ 0x2c
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));

      if (pllm != 0U)
9000bd26:	f414 7f7c 	tst.w	r4, #1008	@ 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000bd2a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000bd2c:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000bd30:	d036      	beq.n	9000bda0 <HAL_RCC_GetSysClockFreq.part.0+0x84>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000bd32:	f3c2 02cc 	ubfx	r2, r2, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000bd36:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000bd3a:	f001 0103 	and.w	r1, r1, #3
          case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
            {
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bd3e:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000bd42:	fb05 f202 	mul.w	r2, r5, r2
        switch (pllsource)
9000bd46:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bd48:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000bd4c:	ee06 2a90 	vmov	s13, r2
9000bd50:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
        switch (pllsource)
9000bd54:	d002      	beq.n	9000bd5c <HAL_RCC_GetSysClockFreq.part.0+0x40>
9000bd56:	2902      	cmp	r1, #2
9000bd58:	d042      	beq.n	9000bde0 <HAL_RCC_GetSysClockFreq.part.0+0xc4>
9000bd5a:	b319      	cbz	r1, 9000bda4 <HAL_RCC_GetSysClockFreq.part.0+0x88>
          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            break;

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bd5c:	eddf 7a24 	vldr	s15, [pc, #144]	@ 9000bdf0 <HAL_RCC_GetSysClockFreq.part.0+0xd4>
9000bd60:	ee87 6a87 	vdiv.f32	s12, s15, s14
9000bd64:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000bd66:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000bd6a:	ee07 3a90 	vmov	s15, r3
9000bd6e:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000bd72:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000bd76:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000bd7a:	ee77 7aa5 	vadd.f32	s15, s15, s11
9000bd7e:	ee67 7a86 	vmul.f32	s15, s15, s12
            break;
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000bd82:	4b1a      	ldr	r3, [pc, #104]	@ (9000bdec <HAL_RCC_GetSysClockFreq.part.0+0xd0>)
9000bd84:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000bd86:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000bd8a:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000bd8c:	ee07 3a10 	vmov	s14, r3
9000bd90:	eef8 6ac7 	vcvt.f32.s32	s13, s14
9000bd94:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000bd98:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000bd9c:	ee17 0a90 	vmov	r0, s15
      sysclockfreq = CSI_VALUE;
      break;
  }

  return sysclockfreq;
}
9000bda0:	bc30      	pop	{r4, r5}
9000bda2:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000bda4:	681a      	ldr	r2, [r3, #0]
9000bda6:	0692      	lsls	r2, r2, #26
9000bda8:	d51d      	bpl.n	9000bde6 <HAL_RCC_GetSysClockFreq.part.0+0xca>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000bdaa:	6819      	ldr	r1, [r3, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bdac:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000bdb0:	4a10      	ldr	r2, [pc, #64]	@ (9000bdf4 <HAL_RCC_GetSysClockFreq.part.0+0xd8>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bdb2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000bdb4:	f3c1 01c1 	ubfx	r1, r1, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bdb8:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000bdbc:	40ca      	lsrs	r2, r1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bdbe:	ee07 3a90 	vmov	s15, r3
9000bdc2:	ee06 2a10 	vmov	s12, r2
9000bdc6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000bdca:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000bdce:	ee77 6aa6 	vadd.f32	s13, s15, s13
9000bdd2:	eec6 7a07 	vdiv.f32	s15, s12, s14
9000bdd6:	ee36 7aa5 	vadd.f32	s14, s13, s11
9000bdda:	ee67 7a87 	vmul.f32	s15, s15, s14
9000bdde:	e7d0      	b.n	9000bd82 <HAL_RCC_GetSysClockFreq.part.0+0x66>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bde0:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000bdf8 <HAL_RCC_GetSysClockFreq.part.0+0xdc>
9000bde4:	e7bc      	b.n	9000bd60 <HAL_RCC_GetSysClockFreq.part.0+0x44>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bde6:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000bdfc <HAL_RCC_GetSysClockFreq.part.0+0xe0>
9000bdea:	e7b9      	b.n	9000bd60 <HAL_RCC_GetSysClockFreq.part.0+0x44>
9000bdec:	58024400 	.word	0x58024400
9000bdf0:	4a742400 	.word	0x4a742400
9000bdf4:	03d09000 	.word	0x03d09000
9000bdf8:	4bbebc20 	.word	0x4bbebc20
9000bdfc:	4c742400 	.word	0x4c742400

9000be00 <HAL_RCC_OscConfig>:
  if (RCC_OscInitStruct == NULL)
9000be00:	2800      	cmp	r0, #0
9000be02:	f000 82e7 	beq.w	9000c3d4 <HAL_RCC_OscConfig+0x5d4>
{
9000be06:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
9000be08:	6803      	ldr	r3, [r0, #0]
9000be0a:	4604      	mov	r4, r0
9000be0c:	07d9      	lsls	r1, r3, #31
9000be0e:	d52e      	bpl.n	9000be6e <HAL_RCC_OscConfig+0x6e>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000be10:	4997      	ldr	r1, [pc, #604]	@ (9000c070 <HAL_RCC_OscConfig+0x270>)
9000be12:	690a      	ldr	r2, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000be14:	6a89      	ldr	r1, [r1, #40]	@ 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000be16:	f002 0238 	and.w	r2, r2, #56	@ 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000be1a:	2a10      	cmp	r2, #16
9000be1c:	f000 80ee 	beq.w	9000bffc <HAL_RCC_OscConfig+0x1fc>
9000be20:	2a18      	cmp	r2, #24
9000be22:	f000 80e6 	beq.w	9000bff2 <HAL_RCC_OscConfig+0x1f2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000be26:	6863      	ldr	r3, [r4, #4]
9000be28:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000be2c:	f000 8111 	beq.w	9000c052 <HAL_RCC_OscConfig+0x252>
9000be30:	2b00      	cmp	r3, #0
9000be32:	f000 8167 	beq.w	9000c104 <HAL_RCC_OscConfig+0x304>
9000be36:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
9000be3a:	4b8d      	ldr	r3, [pc, #564]	@ (9000c070 <HAL_RCC_OscConfig+0x270>)
9000be3c:	681a      	ldr	r2, [r3, #0]
9000be3e:	f000 8288 	beq.w	9000c352 <HAL_RCC_OscConfig+0x552>
9000be42:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
9000be46:	601a      	str	r2, [r3, #0]
9000be48:	681a      	ldr	r2, [r3, #0]
9000be4a:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
9000be4e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9000be50:	f7fc f998 	bl	90008184 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000be54:	4e86      	ldr	r6, [pc, #536]	@ (9000c070 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
9000be56:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000be58:	e005      	b.n	9000be66 <HAL_RCC_OscConfig+0x66>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000be5a:	f7fc f993 	bl	90008184 <HAL_GetTick>
9000be5e:	1b40      	subs	r0, r0, r5
9000be60:	2864      	cmp	r0, #100	@ 0x64
9000be62:	f200 814d 	bhi.w	9000c100 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000be66:	6833      	ldr	r3, [r6, #0]
9000be68:	039b      	lsls	r3, r3, #14
9000be6a:	d5f6      	bpl.n	9000be5a <HAL_RCC_OscConfig+0x5a>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
9000be6c:	6823      	ldr	r3, [r4, #0]
9000be6e:	079d      	lsls	r5, r3, #30
9000be70:	d470      	bmi.n	9000bf54 <HAL_RCC_OscConfig+0x154>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000be72:	06d9      	lsls	r1, r3, #27
9000be74:	d533      	bpl.n	9000bede <HAL_RCC_OscConfig+0xde>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000be76:	4a7e      	ldr	r2, [pc, #504]	@ (9000c070 <HAL_RCC_OscConfig+0x270>)
9000be78:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000be7a:	6a92      	ldr	r2, [r2, #40]	@ 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000be7c:	f003 0338 	and.w	r3, r3, #56	@ 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000be80:	2b08      	cmp	r3, #8
9000be82:	f000 80cb 	beq.w	9000c01c <HAL_RCC_OscConfig+0x21c>
9000be86:	2b18      	cmp	r3, #24
9000be88:	f000 80c3 	beq.w	9000c012 <HAL_RCC_OscConfig+0x212>
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000be8c:	69e3      	ldr	r3, [r4, #28]
        __HAL_RCC_CSI_ENABLE();
9000be8e:	4d78      	ldr	r5, [pc, #480]	@ (9000c070 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000be90:	2b00      	cmp	r3, #0
9000be92:	f000 816f 	beq.w	9000c174 <HAL_RCC_OscConfig+0x374>
        __HAL_RCC_CSI_ENABLE();
9000be96:	682b      	ldr	r3, [r5, #0]
9000be98:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9000be9c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000be9e:	f7fc f971 	bl	90008184 <HAL_GetTick>
9000bea2:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000bea4:	e005      	b.n	9000beb2 <HAL_RCC_OscConfig+0xb2>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000bea6:	f7fc f96d 	bl	90008184 <HAL_GetTick>
9000beaa:	1b80      	subs	r0, r0, r6
9000beac:	2802      	cmp	r0, #2
9000beae:	f200 8127 	bhi.w	9000c100 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000beb2:	682b      	ldr	r3, [r5, #0]
9000beb4:	05db      	lsls	r3, r3, #23
9000beb6:	d5f6      	bpl.n	9000bea6 <HAL_RCC_OscConfig+0xa6>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000beb8:	f7fc f97c 	bl	900081b4 <HAL_GetREVID>
9000bebc:	f241 0303 	movw	r3, #4099	@ 0x1003
9000bec0:	4298      	cmp	r0, r3
9000bec2:	f200 8267 	bhi.w	9000c394 <HAL_RCC_OscConfig+0x594>
9000bec6:	6a22      	ldr	r2, [r4, #32]
9000bec8:	686b      	ldr	r3, [r5, #4]
9000beca:	2a20      	cmp	r2, #32
9000becc:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000bed0:	bf0c      	ite	eq
9000bed2:	f043 4380 	orreq.w	r3, r3, #1073741824	@ 0x40000000
9000bed6:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
9000beda:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000bedc:	6823      	ldr	r3, [r4, #0]
9000bede:	071d      	lsls	r5, r3, #28
9000bee0:	d516      	bpl.n	9000bf10 <HAL_RCC_OscConfig+0x110>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000bee2:	6963      	ldr	r3, [r4, #20]
      __HAL_RCC_LSI_ENABLE();
9000bee4:	4d62      	ldr	r5, [pc, #392]	@ (9000c070 <HAL_RCC_OscConfig+0x270>)
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000bee6:	2b00      	cmp	r3, #0
9000bee8:	f000 8122 	beq.w	9000c130 <HAL_RCC_OscConfig+0x330>
      __HAL_RCC_LSI_ENABLE();
9000beec:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000beee:	f043 0301 	orr.w	r3, r3, #1
9000bef2:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
9000bef4:	f7fc f946 	bl	90008184 <HAL_GetTick>
9000bef8:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000befa:	e005      	b.n	9000bf08 <HAL_RCC_OscConfig+0x108>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000befc:	f7fc f942 	bl	90008184 <HAL_GetTick>
9000bf00:	1b80      	subs	r0, r0, r6
9000bf02:	2802      	cmp	r0, #2
9000bf04:	f200 80fc 	bhi.w	9000c100 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000bf08:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000bf0a:	0798      	lsls	r0, r3, #30
9000bf0c:	d5f6      	bpl.n	9000befc <HAL_RCC_OscConfig+0xfc>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
9000bf0e:	6823      	ldr	r3, [r4, #0]
9000bf10:	069a      	lsls	r2, r3, #26
9000bf12:	d516      	bpl.n	9000bf42 <HAL_RCC_OscConfig+0x142>
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000bf14:	69a3      	ldr	r3, [r4, #24]
      __HAL_RCC_HSI48_ENABLE();
9000bf16:	4d56      	ldr	r5, [pc, #344]	@ (9000c070 <HAL_RCC_OscConfig+0x270>)
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000bf18:	2b00      	cmp	r3, #0
9000bf1a:	f000 811a 	beq.w	9000c152 <HAL_RCC_OscConfig+0x352>
      __HAL_RCC_HSI48_ENABLE();
9000bf1e:	682b      	ldr	r3, [r5, #0]
9000bf20:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
9000bf24:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000bf26:	f7fc f92d 	bl	90008184 <HAL_GetTick>
9000bf2a:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000bf2c:	e005      	b.n	9000bf3a <HAL_RCC_OscConfig+0x13a>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000bf2e:	f7fc f929 	bl	90008184 <HAL_GetTick>
9000bf32:	1b80      	subs	r0, r0, r6
9000bf34:	2802      	cmp	r0, #2
9000bf36:	f200 80e3 	bhi.w	9000c100 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000bf3a:	682b      	ldr	r3, [r5, #0]
9000bf3c:	049f      	lsls	r7, r3, #18
9000bf3e:	d5f6      	bpl.n	9000bf2e <HAL_RCC_OscConfig+0x12e>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
9000bf40:	6823      	ldr	r3, [r4, #0]
9000bf42:	0759      	lsls	r1, r3, #29
9000bf44:	f100 808b 	bmi.w	9000c05e <HAL_RCC_OscConfig+0x25e>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
9000bf48:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000bf4a:	2b00      	cmp	r3, #0
9000bf4c:	f040 80bf 	bne.w	9000c0ce <HAL_RCC_OscConfig+0x2ce>
  return HAL_OK;
9000bf50:	2000      	movs	r0, #0
}
9000bf52:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000bf54:	4a46      	ldr	r2, [pc, #280]	@ (9000c070 <HAL_RCC_OscConfig+0x270>)
9000bf56:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000bf58:	6a92      	ldr	r2, [r2, #40]	@ 0x28
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000bf5a:	f013 0338 	ands.w	r3, r3, #56	@ 0x38
9000bf5e:	d12d      	bne.n	9000bfbc <HAL_RCC_OscConfig+0x1bc>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000bf60:	4b43      	ldr	r3, [pc, #268]	@ (9000c070 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000bf62:	68e2      	ldr	r2, [r4, #12]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000bf64:	681b      	ldr	r3, [r3, #0]
9000bf66:	0759      	lsls	r1, r3, #29
9000bf68:	d501      	bpl.n	9000bf6e <HAL_RCC_OscConfig+0x16e>
9000bf6a:	2a00      	cmp	r2, #0
9000bf6c:	d04f      	beq.n	9000c00e <HAL_RCC_OscConfig+0x20e>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000bf6e:	4d40      	ldr	r5, [pc, #256]	@ (9000c070 <HAL_RCC_OscConfig+0x270>)
9000bf70:	682b      	ldr	r3, [r5, #0]
9000bf72:	f023 0319 	bic.w	r3, r3, #25
9000bf76:	4313      	orrs	r3, r2
9000bf78:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000bf7a:	f7fc f903 	bl	90008184 <HAL_GetTick>
9000bf7e:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000bf80:	e005      	b.n	9000bf8e <HAL_RCC_OscConfig+0x18e>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000bf82:	f7fc f8ff 	bl	90008184 <HAL_GetTick>
9000bf86:	1b80      	subs	r0, r0, r6
9000bf88:	2802      	cmp	r0, #2
9000bf8a:	f200 80b9 	bhi.w	9000c100 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000bf8e:	682b      	ldr	r3, [r5, #0]
9000bf90:	075b      	lsls	r3, r3, #29
9000bf92:	d5f6      	bpl.n	9000bf82 <HAL_RCC_OscConfig+0x182>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000bf94:	f7fc f90e 	bl	900081b4 <HAL_GetREVID>
9000bf98:	f241 0303 	movw	r3, #4099	@ 0x1003
9000bf9c:	4298      	cmp	r0, r3
9000bf9e:	f200 8110 	bhi.w	9000c1c2 <HAL_RCC_OscConfig+0x3c2>
9000bfa2:	6922      	ldr	r2, [r4, #16]
9000bfa4:	686b      	ldr	r3, [r5, #4]
9000bfa6:	2a40      	cmp	r2, #64	@ 0x40
9000bfa8:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
9000bfac:	bf0c      	ite	eq
9000bfae:	f443 3300 	orreq.w	r3, r3, #131072	@ 0x20000
9000bfb2:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
9000bfb6:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000bfb8:	6823      	ldr	r3, [r4, #0]
9000bfba:	e75a      	b.n	9000be72 <HAL_RCC_OscConfig+0x72>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000bfbc:	2b18      	cmp	r3, #24
9000bfbe:	f000 80fc 	beq.w	9000c1ba <HAL_RCC_OscConfig+0x3ba>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000bfc2:	4d2b      	ldr	r5, [pc, #172]	@ (9000c070 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000bfc4:	68e2      	ldr	r2, [r4, #12]
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000bfc6:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000bfc8:	2a00      	cmp	r2, #0
9000bfca:	f000 80e5 	beq.w	9000c198 <HAL_RCC_OscConfig+0x398>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000bfce:	f023 0319 	bic.w	r3, r3, #25
9000bfd2:	4313      	orrs	r3, r2
9000bfd4:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000bfd6:	f7fc f8d5 	bl	90008184 <HAL_GetTick>
9000bfda:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000bfdc:	e005      	b.n	9000bfea <HAL_RCC_OscConfig+0x1ea>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000bfde:	f7fc f8d1 	bl	90008184 <HAL_GetTick>
9000bfe2:	1b80      	subs	r0, r0, r6
9000bfe4:	2802      	cmp	r0, #2
9000bfe6:	f200 808b 	bhi.w	9000c100 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000bfea:	682b      	ldr	r3, [r5, #0]
9000bfec:	075f      	lsls	r7, r3, #29
9000bfee:	d5f6      	bpl.n	9000bfde <HAL_RCC_OscConfig+0x1de>
9000bff0:	e7d0      	b.n	9000bf94 <HAL_RCC_OscConfig+0x194>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000bff2:	f001 0103 	and.w	r1, r1, #3
9000bff6:	2902      	cmp	r1, #2
9000bff8:	f47f af15 	bne.w	9000be26 <HAL_RCC_OscConfig+0x26>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
9000bffc:	4a1c      	ldr	r2, [pc, #112]	@ (9000c070 <HAL_RCC_OscConfig+0x270>)
9000bffe:	6812      	ldr	r2, [r2, #0]
9000c000:	0392      	lsls	r2, r2, #14
9000c002:	f57f af34 	bpl.w	9000be6e <HAL_RCC_OscConfig+0x6e>
9000c006:	6862      	ldr	r2, [r4, #4]
9000c008:	2a00      	cmp	r2, #0
9000c00a:	f47f af30 	bne.w	9000be6e <HAL_RCC_OscConfig+0x6e>
    return HAL_ERROR;
9000c00e:	2001      	movs	r0, #1
}
9000c010:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000c012:	f002 0203 	and.w	r2, r2, #3
9000c016:	2a01      	cmp	r2, #1
9000c018:	f47f af38 	bne.w	9000be8c <HAL_RCC_OscConfig+0x8c>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
9000c01c:	4b14      	ldr	r3, [pc, #80]	@ (9000c070 <HAL_RCC_OscConfig+0x270>)
9000c01e:	681b      	ldr	r3, [r3, #0]
9000c020:	05da      	lsls	r2, r3, #23
9000c022:	d502      	bpl.n	9000c02a <HAL_RCC_OscConfig+0x22a>
9000c024:	69e3      	ldr	r3, [r4, #28]
9000c026:	2b80      	cmp	r3, #128	@ 0x80
9000c028:	d1f1      	bne.n	9000c00e <HAL_RCC_OscConfig+0x20e>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000c02a:	f7fc f8c3 	bl	900081b4 <HAL_GetREVID>
9000c02e:	f241 0303 	movw	r3, #4099	@ 0x1003
9000c032:	4298      	cmp	r0, r3
9000c034:	f200 80ce 	bhi.w	9000c1d4 <HAL_RCC_OscConfig+0x3d4>
9000c038:	6a22      	ldr	r2, [r4, #32]
9000c03a:	2a20      	cmp	r2, #32
9000c03c:	f000 81b9 	beq.w	9000c3b2 <HAL_RCC_OscConfig+0x5b2>
9000c040:	490b      	ldr	r1, [pc, #44]	@ (9000c070 <HAL_RCC_OscConfig+0x270>)
9000c042:	684b      	ldr	r3, [r1, #4]
9000c044:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000c048:	ea43 6382 	orr.w	r3, r3, r2, lsl #26
9000c04c:	604b      	str	r3, [r1, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000c04e:	6823      	ldr	r3, [r4, #0]
9000c050:	e745      	b.n	9000bede <HAL_RCC_OscConfig+0xde>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000c052:	4a07      	ldr	r2, [pc, #28]	@ (9000c070 <HAL_RCC_OscConfig+0x270>)
9000c054:	6813      	ldr	r3, [r2, #0]
9000c056:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000c05a:	6013      	str	r3, [r2, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000c05c:	e6f8      	b.n	9000be50 <HAL_RCC_OscConfig+0x50>
    PWR->CR1 |= PWR_CR1_DBP;
9000c05e:	4d05      	ldr	r5, [pc, #20]	@ (9000c074 <HAL_RCC_OscConfig+0x274>)
9000c060:	682b      	ldr	r3, [r5, #0]
9000c062:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000c066:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
9000c068:	f7fc f88c 	bl	90008184 <HAL_GetTick>
9000c06c:	4606      	mov	r6, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000c06e:	e008      	b.n	9000c082 <HAL_RCC_OscConfig+0x282>
9000c070:	58024400 	.word	0x58024400
9000c074:	58024800 	.word	0x58024800
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000c078:	f7fc f884 	bl	90008184 <HAL_GetTick>
9000c07c:	1b80      	subs	r0, r0, r6
9000c07e:	2864      	cmp	r0, #100	@ 0x64
9000c080:	d83e      	bhi.n	9000c100 <HAL_RCC_OscConfig+0x300>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000c082:	682b      	ldr	r3, [r5, #0]
9000c084:	05da      	lsls	r2, r3, #23
9000c086:	d5f7      	bpl.n	9000c078 <HAL_RCC_OscConfig+0x278>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000c088:	68a3      	ldr	r3, [r4, #8]
9000c08a:	2b01      	cmp	r3, #1
9000c08c:	f000 818b 	beq.w	9000c3a6 <HAL_RCC_OscConfig+0x5a6>
9000c090:	2b00      	cmp	r3, #0
9000c092:	f000 8166 	beq.w	9000c362 <HAL_RCC_OscConfig+0x562>
9000c096:	2b05      	cmp	r3, #5
9000c098:	4b85      	ldr	r3, [pc, #532]	@ (9000c2b0 <HAL_RCC_OscConfig+0x4b0>)
9000c09a:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000c09c:	f000 8192 	beq.w	9000c3c4 <HAL_RCC_OscConfig+0x5c4>
9000c0a0:	f022 0201 	bic.w	r2, r2, #1
9000c0a4:	671a      	str	r2, [r3, #112]	@ 0x70
9000c0a6:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000c0a8:	f022 0204 	bic.w	r2, r2, #4
9000c0ac:	671a      	str	r2, [r3, #112]	@ 0x70
      tickstart = HAL_GetTick();
9000c0ae:	f7fc f869 	bl	90008184 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c0b2:	4e7f      	ldr	r6, [pc, #508]	@ (9000c2b0 <HAL_RCC_OscConfig+0x4b0>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c0b4:	f241 3788 	movw	r7, #5000	@ 0x1388
      tickstart = HAL_GetTick();
9000c0b8:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c0ba:	e004      	b.n	9000c0c6 <HAL_RCC_OscConfig+0x2c6>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c0bc:	f7fc f862 	bl	90008184 <HAL_GetTick>
9000c0c0:	1b40      	subs	r0, r0, r5
9000c0c2:	42b8      	cmp	r0, r7
9000c0c4:	d81c      	bhi.n	9000c100 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c0c6:	6f33      	ldr	r3, [r6, #112]	@ 0x70
9000c0c8:	079b      	lsls	r3, r3, #30
9000c0ca:	d5f7      	bpl.n	9000c0bc <HAL_RCC_OscConfig+0x2bc>
9000c0cc:	e73c      	b.n	9000bf48 <HAL_RCC_OscConfig+0x148>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
9000c0ce:	4d78      	ldr	r5, [pc, #480]	@ (9000c2b0 <HAL_RCC_OscConfig+0x4b0>)
9000c0d0:	692a      	ldr	r2, [r5, #16]
9000c0d2:	f002 0238 	and.w	r2, r2, #56	@ 0x38
9000c0d6:	2a18      	cmp	r2, #24
9000c0d8:	f000 80ee 	beq.w	9000c2b8 <HAL_RCC_OscConfig+0x4b8>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000c0dc:	2b02      	cmp	r3, #2
        __HAL_RCC_PLL_DISABLE();
9000c0de:	682b      	ldr	r3, [r5, #0]
9000c0e0:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
9000c0e4:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000c0e6:	d07f      	beq.n	9000c1e8 <HAL_RCC_OscConfig+0x3e8>
        tickstart = HAL_GetTick();
9000c0e8:	f7fc f84c 	bl	90008184 <HAL_GetTick>
9000c0ec:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000c0ee:	682b      	ldr	r3, [r5, #0]
9000c0f0:	019b      	lsls	r3, r3, #6
9000c0f2:	f57f af2d 	bpl.w	9000bf50 <HAL_RCC_OscConfig+0x150>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000c0f6:	f7fc f845 	bl	90008184 <HAL_GetTick>
9000c0fa:	1b00      	subs	r0, r0, r4
9000c0fc:	2802      	cmp	r0, #2
9000c0fe:	d9f6      	bls.n	9000c0ee <HAL_RCC_OscConfig+0x2ee>
            return HAL_TIMEOUT;
9000c100:	2003      	movs	r0, #3
}
9000c102:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000c104:	4d6a      	ldr	r5, [pc, #424]	@ (9000c2b0 <HAL_RCC_OscConfig+0x4b0>)
9000c106:	682b      	ldr	r3, [r5, #0]
9000c108:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
9000c10c:	602b      	str	r3, [r5, #0]
9000c10e:	682b      	ldr	r3, [r5, #0]
9000c110:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
9000c114:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000c116:	f7fc f835 	bl	90008184 <HAL_GetTick>
9000c11a:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000c11c:	e004      	b.n	9000c128 <HAL_RCC_OscConfig+0x328>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000c11e:	f7fc f831 	bl	90008184 <HAL_GetTick>
9000c122:	1b80      	subs	r0, r0, r6
9000c124:	2864      	cmp	r0, #100	@ 0x64
9000c126:	d8eb      	bhi.n	9000c100 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000c128:	682b      	ldr	r3, [r5, #0]
9000c12a:	039f      	lsls	r7, r3, #14
9000c12c:	d4f7      	bmi.n	9000c11e <HAL_RCC_OscConfig+0x31e>
9000c12e:	e69d      	b.n	9000be6c <HAL_RCC_OscConfig+0x6c>
      __HAL_RCC_LSI_DISABLE();
9000c130:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000c132:	f023 0301 	bic.w	r3, r3, #1
9000c136:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
9000c138:	f7fc f824 	bl	90008184 <HAL_GetTick>
9000c13c:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000c13e:	e004      	b.n	9000c14a <HAL_RCC_OscConfig+0x34a>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000c140:	f7fc f820 	bl	90008184 <HAL_GetTick>
9000c144:	1b80      	subs	r0, r0, r6
9000c146:	2802      	cmp	r0, #2
9000c148:	d8da      	bhi.n	9000c100 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000c14a:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000c14c:	0799      	lsls	r1, r3, #30
9000c14e:	d4f7      	bmi.n	9000c140 <HAL_RCC_OscConfig+0x340>
9000c150:	e6dd      	b.n	9000bf0e <HAL_RCC_OscConfig+0x10e>
      __HAL_RCC_HSI48_DISABLE();
9000c152:	682b      	ldr	r3, [r5, #0]
9000c154:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9000c158:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000c15a:	f7fc f813 	bl	90008184 <HAL_GetTick>
9000c15e:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000c160:	e004      	b.n	9000c16c <HAL_RCC_OscConfig+0x36c>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000c162:	f7fc f80f 	bl	90008184 <HAL_GetTick>
9000c166:	1b80      	subs	r0, r0, r6
9000c168:	2802      	cmp	r0, #2
9000c16a:	d8c9      	bhi.n	9000c100 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000c16c:	682b      	ldr	r3, [r5, #0]
9000c16e:	0498      	lsls	r0, r3, #18
9000c170:	d4f7      	bmi.n	9000c162 <HAL_RCC_OscConfig+0x362>
9000c172:	e6e5      	b.n	9000bf40 <HAL_RCC_OscConfig+0x140>
        __HAL_RCC_CSI_DISABLE();
9000c174:	682b      	ldr	r3, [r5, #0]
9000c176:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000c17a:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000c17c:	f7fc f802 	bl	90008184 <HAL_GetTick>
9000c180:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000c182:	e004      	b.n	9000c18e <HAL_RCC_OscConfig+0x38e>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000c184:	f7fb fffe 	bl	90008184 <HAL_GetTick>
9000c188:	1b80      	subs	r0, r0, r6
9000c18a:	2802      	cmp	r0, #2
9000c18c:	d8b8      	bhi.n	9000c100 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000c18e:	682b      	ldr	r3, [r5, #0]
9000c190:	05df      	lsls	r7, r3, #23
9000c192:	d4f7      	bmi.n	9000c184 <HAL_RCC_OscConfig+0x384>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000c194:	6823      	ldr	r3, [r4, #0]
9000c196:	e6a2      	b.n	9000bede <HAL_RCC_OscConfig+0xde>
        __HAL_RCC_HSI_DISABLE();
9000c198:	f023 0301 	bic.w	r3, r3, #1
9000c19c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000c19e:	f7fb fff1 	bl	90008184 <HAL_GetTick>
9000c1a2:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000c1a4:	e004      	b.n	9000c1b0 <HAL_RCC_OscConfig+0x3b0>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000c1a6:	f7fb ffed 	bl	90008184 <HAL_GetTick>
9000c1aa:	1b80      	subs	r0, r0, r6
9000c1ac:	2802      	cmp	r0, #2
9000c1ae:	d8a7      	bhi.n	9000c100 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000c1b0:	682b      	ldr	r3, [r5, #0]
9000c1b2:	0758      	lsls	r0, r3, #29
9000c1b4:	d4f7      	bmi.n	9000c1a6 <HAL_RCC_OscConfig+0x3a6>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000c1b6:	6823      	ldr	r3, [r4, #0]
9000c1b8:	e65b      	b.n	9000be72 <HAL_RCC_OscConfig+0x72>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000c1ba:	0790      	lsls	r0, r2, #30
9000c1bc:	f47f af01 	bne.w	9000bfc2 <HAL_RCC_OscConfig+0x1c2>
9000c1c0:	e6ce      	b.n	9000bf60 <HAL_RCC_OscConfig+0x160>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000c1c2:	686b      	ldr	r3, [r5, #4]
9000c1c4:	6922      	ldr	r2, [r4, #16]
9000c1c6:	f023 43fe 	bic.w	r3, r3, #2130706432	@ 0x7f000000
9000c1ca:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000c1ce:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000c1d0:	6823      	ldr	r3, [r4, #0]
9000c1d2:	e64e      	b.n	9000be72 <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000c1d4:	4a36      	ldr	r2, [pc, #216]	@ (9000c2b0 <HAL_RCC_OscConfig+0x4b0>)
9000c1d6:	6a21      	ldr	r1, [r4, #32]
9000c1d8:	68d3      	ldr	r3, [r2, #12]
9000c1da:	f023 537c 	bic.w	r3, r3, #1056964608	@ 0x3f000000
9000c1de:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9000c1e2:	60d3      	str	r3, [r2, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000c1e4:	6823      	ldr	r3, [r4, #0]
9000c1e6:	e67a      	b.n	9000bede <HAL_RCC_OscConfig+0xde>
        tickstart = HAL_GetTick();
9000c1e8:	f7fb ffcc 	bl	90008184 <HAL_GetTick>
9000c1ec:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000c1ee:	e004      	b.n	9000c1fa <HAL_RCC_OscConfig+0x3fa>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000c1f0:	f7fb ffc8 	bl	90008184 <HAL_GetTick>
9000c1f4:	1b80      	subs	r0, r0, r6
9000c1f6:	2802      	cmp	r0, #2
9000c1f8:	d882      	bhi.n	9000c100 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000c1fa:	682b      	ldr	r3, [r5, #0]
9000c1fc:	0199      	lsls	r1, r3, #6
9000c1fe:	d4f7      	bmi.n	9000c1f0 <HAL_RCC_OscConfig+0x3f0>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000c200:	6aa9      	ldr	r1, [r5, #40]	@ 0x28
9000c202:	4b2c      	ldr	r3, [pc, #176]	@ (9000c2b4 <HAL_RCC_OscConfig+0x4b4>)
9000c204:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000c206:	400b      	ands	r3, r1
9000c208:	4313      	orrs	r3, r2
9000c20a:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000c20c:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
9000c210:	62ab      	str	r3, [r5, #40]	@ 0x28
9000c212:	6b21      	ldr	r1, [r4, #48]	@ 0x30
9000c214:	e9d4 320d 	ldrd	r3, r2, [r4, #52]	@ 0x34
9000c218:	3901      	subs	r1, #1
9000c21a:	3b01      	subs	r3, #1
9000c21c:	3a01      	subs	r2, #1
9000c21e:	f3c1 0108 	ubfx	r1, r1, #0, #9
9000c222:	025b      	lsls	r3, r3, #9
9000c224:	0412      	lsls	r2, r2, #16
9000c226:	b29b      	uxth	r3, r3
9000c228:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000c22c:	4313      	orrs	r3, r2
9000c22e:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
9000c230:	3a01      	subs	r2, #1
9000c232:	430b      	orrs	r3, r1
9000c234:	0612      	lsls	r2, r2, #24
9000c236:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000c23a:	4313      	orrs	r3, r2
9000c23c:	632b      	str	r3, [r5, #48]	@ 0x30
        __HAL_RCC_PLLFRACN_DISABLE();
9000c23e:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000c240:	f023 0301 	bic.w	r3, r3, #1
9000c244:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000c246:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
9000c248:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
9000c24a:	f36f 03cf 	bfc	r3, #3, #13
9000c24e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000c252:	636b      	str	r3, [r5, #52]	@ 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
9000c254:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000c256:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000c258:	f023 030c 	bic.w	r3, r3, #12
9000c25c:	4313      	orrs	r3, r2
9000c25e:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
9000c260:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000c262:	6c62      	ldr	r2, [r4, #68]	@ 0x44
9000c264:	f023 0302 	bic.w	r3, r3, #2
9000c268:	4313      	orrs	r3, r2
9000c26a:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
9000c26c:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000c26e:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000c272:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c274:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000c276:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
9000c27a:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
9000c27c:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000c27e:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
9000c282:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLFRACN_ENABLE();
9000c284:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000c286:	f043 0301 	orr.w	r3, r3, #1
9000c28a:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLL_ENABLE();
9000c28c:	682b      	ldr	r3, [r5, #0]
9000c28e:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
9000c292:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000c294:	f7fb ff76 	bl	90008184 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000c298:	4d05      	ldr	r5, [pc, #20]	@ (9000c2b0 <HAL_RCC_OscConfig+0x4b0>)
        tickstart = HAL_GetTick();
9000c29a:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000c29c:	682b      	ldr	r3, [r5, #0]
9000c29e:	019a      	lsls	r2, r3, #6
9000c2a0:	f53f ae56 	bmi.w	9000bf50 <HAL_RCC_OscConfig+0x150>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000c2a4:	f7fb ff6e 	bl	90008184 <HAL_GetTick>
9000c2a8:	1b00      	subs	r0, r0, r4
9000c2aa:	2802      	cmp	r0, #2
9000c2ac:	d9f6      	bls.n	9000c29c <HAL_RCC_OscConfig+0x49c>
9000c2ae:	e727      	b.n	9000c100 <HAL_RCC_OscConfig+0x300>
9000c2b0:	58024400 	.word	0x58024400
9000c2b4:	fffffc0c 	.word	0xfffffc0c
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000c2b8:	2b01      	cmp	r3, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
9000c2ba:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
9000c2bc:	6b28      	ldr	r0, [r5, #48]	@ 0x30
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000c2be:	f43f aea6 	beq.w	9000c00e <HAL_RCC_OscConfig+0x20e>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000c2c2:	f002 0303 	and.w	r3, r2, #3
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000c2c6:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
9000c2c8:	428b      	cmp	r3, r1
9000c2ca:	f47f aea0 	bne.w	9000c00e <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000c2ce:	f3c2 1205 	ubfx	r2, r2, #4, #6
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000c2d2:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000c2d4:	429a      	cmp	r2, r3
9000c2d6:	f47f ae9a 	bne.w	9000c00e <HAL_RCC_OscConfig+0x20e>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000c2da:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000c2dc:	f3c0 0208 	ubfx	r2, r0, #0, #9
9000c2e0:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000c2e2:	429a      	cmp	r2, r3
9000c2e4:	f47f ae93 	bne.w	9000c00e <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000c2e8:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9000c2ea:	f3c0 2246 	ubfx	r2, r0, #9, #7
9000c2ee:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000c2f0:	429a      	cmp	r2, r3
9000c2f2:	f47f ae8c 	bne.w	9000c00e <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000c2f6:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000c2f8:	f3c0 4206 	ubfx	r2, r0, #16, #7
9000c2fc:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000c2fe:	429a      	cmp	r2, r3
9000c300:	f47f ae85 	bne.w	9000c00e <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
9000c304:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000c306:	f3c0 6006 	ubfx	r0, r0, #24, #7
9000c30a:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000c30c:	4298      	cmp	r0, r3
9000c30e:	f47f ae7e 	bne.w	9000c00e <HAL_RCC_OscConfig+0x20e>
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000c312:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000c314:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000c316:	f3c3 03cc 	ubfx	r3, r3, #3, #13
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000c31a:	429a      	cmp	r2, r3
9000c31c:	f43f ae18 	beq.w	9000bf50 <HAL_RCC_OscConfig+0x150>
          __HAL_RCC_PLLFRACN_DISABLE();
9000c320:	4a2d      	ldr	r2, [pc, #180]	@ (9000c3d8 <HAL_RCC_OscConfig+0x5d8>)
9000c322:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
9000c324:	f023 0301 	bic.w	r3, r3, #1
9000c328:	62d3      	str	r3, [r2, #44]	@ 0x2c
          tickstart = HAL_GetTick();
9000c32a:	f7fb ff2b 	bl	90008184 <HAL_GetTick>
9000c32e:	4605      	mov	r5, r0
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
9000c330:	f7fb ff28 	bl	90008184 <HAL_GetTick>
9000c334:	42a8      	cmp	r0, r5
9000c336:	d0fb      	beq.n	9000c330 <HAL_RCC_OscConfig+0x530>
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000c338:	4a27      	ldr	r2, [pc, #156]	@ (9000c3d8 <HAL_RCC_OscConfig+0x5d8>)
9000c33a:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000c33c:	6b53      	ldr	r3, [r2, #52]	@ 0x34
9000c33e:	f36f 03cf 	bfc	r3, #3, #13
9000c342:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
9000c346:	6353      	str	r3, [r2, #52]	@ 0x34
          __HAL_RCC_PLLFRACN_ENABLE();
9000c348:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
9000c34a:	f043 0301 	orr.w	r3, r3, #1
9000c34e:	62d3      	str	r3, [r2, #44]	@ 0x2c
9000c350:	e5fe      	b.n	9000bf50 <HAL_RCC_OscConfig+0x150>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000c352:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
9000c356:	601a      	str	r2, [r3, #0]
9000c358:	681a      	ldr	r2, [r3, #0]
9000c35a:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
9000c35e:	601a      	str	r2, [r3, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000c360:	e576      	b.n	9000be50 <HAL_RCC_OscConfig+0x50>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000c362:	4d1d      	ldr	r5, [pc, #116]	@ (9000c3d8 <HAL_RCC_OscConfig+0x5d8>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c364:	f241 3788 	movw	r7, #5000	@ 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000c368:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000c36a:	f023 0301 	bic.w	r3, r3, #1
9000c36e:	672b      	str	r3, [r5, #112]	@ 0x70
9000c370:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000c372:	f023 0304 	bic.w	r3, r3, #4
9000c376:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
9000c378:	f7fb ff04 	bl	90008184 <HAL_GetTick>
9000c37c:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000c37e:	e005      	b.n	9000c38c <HAL_RCC_OscConfig+0x58c>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c380:	f7fb ff00 	bl	90008184 <HAL_GetTick>
9000c384:	1b80      	subs	r0, r0, r6
9000c386:	42b8      	cmp	r0, r7
9000c388:	f63f aeba 	bhi.w	9000c100 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000c38c:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000c38e:	0798      	lsls	r0, r3, #30
9000c390:	d4f6      	bmi.n	9000c380 <HAL_RCC_OscConfig+0x580>
9000c392:	e5d9      	b.n	9000bf48 <HAL_RCC_OscConfig+0x148>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000c394:	68eb      	ldr	r3, [r5, #12]
9000c396:	6a22      	ldr	r2, [r4, #32]
9000c398:	f023 537c 	bic.w	r3, r3, #1056964608	@ 0x3f000000
9000c39c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000c3a0:	60eb      	str	r3, [r5, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000c3a2:	6823      	ldr	r3, [r4, #0]
9000c3a4:	e59b      	b.n	9000bede <HAL_RCC_OscConfig+0xde>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000c3a6:	4a0c      	ldr	r2, [pc, #48]	@ (9000c3d8 <HAL_RCC_OscConfig+0x5d8>)
9000c3a8:	6f13      	ldr	r3, [r2, #112]	@ 0x70
9000c3aa:	f043 0301 	orr.w	r3, r3, #1
9000c3ae:	6713      	str	r3, [r2, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000c3b0:	e67d      	b.n	9000c0ae <HAL_RCC_OscConfig+0x2ae>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000c3b2:	4a09      	ldr	r2, [pc, #36]	@ (9000c3d8 <HAL_RCC_OscConfig+0x5d8>)
9000c3b4:	6853      	ldr	r3, [r2, #4]
9000c3b6:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000c3ba:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
9000c3be:	6053      	str	r3, [r2, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000c3c0:	6823      	ldr	r3, [r4, #0]
9000c3c2:	e58c      	b.n	9000bede <HAL_RCC_OscConfig+0xde>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000c3c4:	f042 0204 	orr.w	r2, r2, #4
9000c3c8:	671a      	str	r2, [r3, #112]	@ 0x70
9000c3ca:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000c3cc:	f042 0201 	orr.w	r2, r2, #1
9000c3d0:	671a      	str	r2, [r3, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000c3d2:	e66c      	b.n	9000c0ae <HAL_RCC_OscConfig+0x2ae>
    return HAL_ERROR;
9000c3d4:	2001      	movs	r0, #1
}
9000c3d6:	4770      	bx	lr
9000c3d8:	58024400 	.word	0x58024400

9000c3dc <HAL_RCC_GetSysClockFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c3dc:	4a3f      	ldr	r2, [pc, #252]	@ (9000c4dc <HAL_RCC_GetSysClockFreq+0x100>)
9000c3de:	6913      	ldr	r3, [r2, #16]
9000c3e0:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000c3e4:	2b10      	cmp	r3, #16
9000c3e6:	d04f      	beq.n	9000c488 <HAL_RCC_GetSysClockFreq+0xac>
9000c3e8:	2b18      	cmp	r3, #24
9000c3ea:	d00a      	beq.n	9000c402 <HAL_RCC_GetSysClockFreq+0x26>
9000c3ec:	2b00      	cmp	r3, #0
9000c3ee:	d14d      	bne.n	9000c48c <HAL_RCC_GetSysClockFreq+0xb0>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c3f0:	6813      	ldr	r3, [r2, #0]
9000c3f2:	0699      	lsls	r1, r3, #26
9000c3f4:	d54c      	bpl.n	9000c490 <HAL_RCC_GetSysClockFreq+0xb4>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c3f6:	6813      	ldr	r3, [r2, #0]
9000c3f8:	4839      	ldr	r0, [pc, #228]	@ (9000c4e0 <HAL_RCC_GetSysClockFreq+0x104>)
9000c3fa:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000c3fe:	40d8      	lsrs	r0, r3
9000c400:	4770      	bx	lr
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c402:	6a91      	ldr	r1, [r2, #40]	@ 0x28
{
9000c404:	b430      	push	{r4, r5}
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000c406:	6a94      	ldr	r4, [r2, #40]	@ 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000c408:	6ad5      	ldr	r5, [r2, #44]	@ 0x2c
      if (pllm != 0U)
9000c40a:	f414 7f7c 	tst.w	r4, #1008	@ 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000c40e:	6b53      	ldr	r3, [r2, #52]	@ 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000c410:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000c414:	d036      	beq.n	9000c484 <HAL_RCC_GetSysClockFreq+0xa8>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000c416:	f3c3 03cc 	ubfx	r3, r3, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000c41a:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c41e:	f001 0103 	and.w	r1, r1, #3
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c422:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000c426:	fb05 f303 	mul.w	r3, r5, r3
        switch (pllsource)
9000c42a:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c42c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c430:	ee06 3a90 	vmov	s13, r3
9000c434:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
        switch (pllsource)
9000c438:	d002      	beq.n	9000c440 <HAL_RCC_GetSysClockFreq+0x64>
9000c43a:	2902      	cmp	r1, #2
9000c43c:	d048      	beq.n	9000c4d0 <HAL_RCC_GetSysClockFreq+0xf4>
9000c43e:	b349      	cbz	r1, 9000c494 <HAL_RCC_GetSysClockFreq+0xb8>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c440:	ed9f 7a28 	vldr	s14, [pc, #160]	@ 9000c4e4 <HAL_RCC_GetSysClockFreq+0x108>
9000c444:	ee87 6a27 	vdiv.f32	s12, s14, s15
9000c448:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000c44a:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000c44e:	ee07 3a10 	vmov	s14, r3
9000c452:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000c456:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000c45a:	ee37 7a26 	vadd.f32	s14, s14, s13
9000c45e:	ee37 7a25 	vadd.f32	s14, s14, s11
9000c462:	ee27 7a06 	vmul.f32	s14, s14, s12
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000c466:	4b1d      	ldr	r3, [pc, #116]	@ (9000c4dc <HAL_RCC_GetSysClockFreq+0x100>)
9000c468:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000c46a:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000c46e:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000c470:	ee07 3a90 	vmov	s15, r3
9000c474:	eef8 6ae7 	vcvt.f32.s32	s13, s15
9000c478:	eec7 7a26 	vdiv.f32	s15, s14, s13
9000c47c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000c480:	ee17 0a90 	vmov	r0, s15
}
9000c484:	bc30      	pop	{r4, r5}
9000c486:	4770      	bx	lr
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c488:	4817      	ldr	r0, [pc, #92]	@ (9000c4e8 <HAL_RCC_GetSysClockFreq+0x10c>)
9000c48a:	4770      	bx	lr
      sysclockfreq = CSI_VALUE;
9000c48c:	4817      	ldr	r0, [pc, #92]	@ (9000c4ec <HAL_RCC_GetSysClockFreq+0x110>)
9000c48e:	4770      	bx	lr
        sysclockfreq = (uint32_t) HSI_VALUE;
9000c490:	4813      	ldr	r0, [pc, #76]	@ (9000c4e0 <HAL_RCC_GetSysClockFreq+0x104>)
}
9000c492:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c494:	6813      	ldr	r3, [r2, #0]
9000c496:	069b      	lsls	r3, r3, #26
9000c498:	d51d      	bpl.n	9000c4d6 <HAL_RCC_GetSysClockFreq+0xfa>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c49a:	6810      	ldr	r0, [r2, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c49c:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000c4a0:	6b13      	ldr	r3, [r2, #48]	@ 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c4a2:	490f      	ldr	r1, [pc, #60]	@ (9000c4e0 <HAL_RCC_GetSysClockFreq+0x104>)
9000c4a4:	f3c0 02c1 	ubfx	r2, r0, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c4a8:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c4ac:	40d1      	lsrs	r1, r2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c4ae:	ee07 3a10 	vmov	s14, r3
9000c4b2:	ee06 1a10 	vmov	s12, r1
9000c4b6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000c4ba:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000c4be:	ee77 6a26 	vadd.f32	s13, s14, s13
9000c4c2:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000c4c6:	ee76 7aa5 	vadd.f32	s15, s13, s11
9000c4ca:	ee27 7a27 	vmul.f32	s14, s14, s15
9000c4ce:	e7ca      	b.n	9000c466 <HAL_RCC_GetSysClockFreq+0x8a>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c4d0:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 9000c4f0 <HAL_RCC_GetSysClockFreq+0x114>
9000c4d4:	e7b6      	b.n	9000c444 <HAL_RCC_GetSysClockFreq+0x68>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c4d6:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 9000c4f4 <HAL_RCC_GetSysClockFreq+0x118>
9000c4da:	e7b3      	b.n	9000c444 <HAL_RCC_GetSysClockFreq+0x68>
9000c4dc:	58024400 	.word	0x58024400
9000c4e0:	03d09000 	.word	0x03d09000
9000c4e4:	4a742400 	.word	0x4a742400
9000c4e8:	017d7840 	.word	0x017d7840
9000c4ec:	003d0900 	.word	0x003d0900
9000c4f0:	4bbebc20 	.word	0x4bbebc20
9000c4f4:	4c742400 	.word	0x4c742400

9000c4f8 <HAL_RCC_ClockConfig>:
  if (RCC_ClkInitStruct == NULL)
9000c4f8:	2800      	cmp	r0, #0
9000c4fa:	f000 810e 	beq.w	9000c71a <HAL_RCC_ClockConfig+0x222>
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000c4fe:	4a8d      	ldr	r2, [pc, #564]	@ (9000c734 <HAL_RCC_ClockConfig+0x23c>)
9000c500:	6813      	ldr	r3, [r2, #0]
9000c502:	f003 030f 	and.w	r3, r3, #15
9000c506:	428b      	cmp	r3, r1
{
9000c508:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000c50c:	4604      	mov	r4, r0
9000c50e:	460d      	mov	r5, r1
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000c510:	d20c      	bcs.n	9000c52c <HAL_RCC_ClockConfig+0x34>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000c512:	6813      	ldr	r3, [r2, #0]
9000c514:	f023 030f 	bic.w	r3, r3, #15
9000c518:	430b      	orrs	r3, r1
9000c51a:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000c51c:	6813      	ldr	r3, [r2, #0]
9000c51e:	f003 030f 	and.w	r3, r3, #15
9000c522:	428b      	cmp	r3, r1
9000c524:	d002      	beq.n	9000c52c <HAL_RCC_ClockConfig+0x34>
    return HAL_ERROR;
9000c526:	2001      	movs	r0, #1
}
9000c528:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000c52c:	6823      	ldr	r3, [r4, #0]
9000c52e:	0758      	lsls	r0, r3, #29
9000c530:	d50b      	bpl.n	9000c54a <HAL_RCC_ClockConfig+0x52>
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000c532:	4981      	ldr	r1, [pc, #516]	@ (9000c738 <HAL_RCC_ClockConfig+0x240>)
9000c534:	6920      	ldr	r0, [r4, #16]
9000c536:	698a      	ldr	r2, [r1, #24]
9000c538:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000c53c:	4290      	cmp	r0, r2
9000c53e:	d904      	bls.n	9000c54a <HAL_RCC_ClockConfig+0x52>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000c540:	698a      	ldr	r2, [r1, #24]
9000c542:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000c546:	4302      	orrs	r2, r0
9000c548:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000c54a:	0719      	lsls	r1, r3, #28
9000c54c:	d50b      	bpl.n	9000c566 <HAL_RCC_ClockConfig+0x6e>
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000c54e:	497a      	ldr	r1, [pc, #488]	@ (9000c738 <HAL_RCC_ClockConfig+0x240>)
9000c550:	6960      	ldr	r0, [r4, #20]
9000c552:	69ca      	ldr	r2, [r1, #28]
9000c554:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000c558:	4290      	cmp	r0, r2
9000c55a:	d904      	bls.n	9000c566 <HAL_RCC_ClockConfig+0x6e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000c55c:	69ca      	ldr	r2, [r1, #28]
9000c55e:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000c562:	4302      	orrs	r2, r0
9000c564:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000c566:	06da      	lsls	r2, r3, #27
9000c568:	d50b      	bpl.n	9000c582 <HAL_RCC_ClockConfig+0x8a>
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000c56a:	4973      	ldr	r1, [pc, #460]	@ (9000c738 <HAL_RCC_ClockConfig+0x240>)
9000c56c:	69a0      	ldr	r0, [r4, #24]
9000c56e:	69ca      	ldr	r2, [r1, #28]
9000c570:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000c574:	4290      	cmp	r0, r2
9000c576:	d904      	bls.n	9000c582 <HAL_RCC_ClockConfig+0x8a>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000c578:	69ca      	ldr	r2, [r1, #28]
9000c57a:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
9000c57e:	4302      	orrs	r2, r0
9000c580:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000c582:	069f      	lsls	r7, r3, #26
9000c584:	d50b      	bpl.n	9000c59e <HAL_RCC_ClockConfig+0xa6>
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000c586:	496c      	ldr	r1, [pc, #432]	@ (9000c738 <HAL_RCC_ClockConfig+0x240>)
9000c588:	69e0      	ldr	r0, [r4, #28]
9000c58a:	6a0a      	ldr	r2, [r1, #32]
9000c58c:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000c590:	4290      	cmp	r0, r2
9000c592:	d904      	bls.n	9000c59e <HAL_RCC_ClockConfig+0xa6>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000c594:	6a0a      	ldr	r2, [r1, #32]
9000c596:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000c59a:	4302      	orrs	r2, r0
9000c59c:	620a      	str	r2, [r1, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000c59e:	079e      	lsls	r6, r3, #30
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000c5a0:	f003 0201 	and.w	r2, r3, #1
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000c5a4:	f140 80ab 	bpl.w	9000c6fe <HAL_RCC_ClockConfig+0x206>
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000c5a8:	4e63      	ldr	r6, [pc, #396]	@ (9000c738 <HAL_RCC_ClockConfig+0x240>)
9000c5aa:	68e0      	ldr	r0, [r4, #12]
9000c5ac:	69b1      	ldr	r1, [r6, #24]
9000c5ae:	f001 010f 	and.w	r1, r1, #15
9000c5b2:	4288      	cmp	r0, r1
9000c5b4:	d904      	bls.n	9000c5c0 <HAL_RCC_ClockConfig+0xc8>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000c5b6:	69b1      	ldr	r1, [r6, #24]
9000c5b8:	f021 010f 	bic.w	r1, r1, #15
9000c5bc:	4301      	orrs	r1, r0
9000c5be:	61b1      	str	r1, [r6, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000c5c0:	2a00      	cmp	r2, #0
9000c5c2:	d030      	beq.n	9000c626 <HAL_RCC_ClockConfig+0x12e>
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
9000c5c4:	4a5c      	ldr	r2, [pc, #368]	@ (9000c738 <HAL_RCC_ClockConfig+0x240>)
9000c5c6:	68a1      	ldr	r1, [r4, #8]
9000c5c8:	6993      	ldr	r3, [r2, #24]
9000c5ca:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
9000c5ce:	430b      	orrs	r3, r1
9000c5d0:	6193      	str	r3, [r2, #24]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000c5d2:	6861      	ldr	r1, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000c5d4:	6813      	ldr	r3, [r2, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000c5d6:	2902      	cmp	r1, #2
9000c5d8:	f000 80a1 	beq.w	9000c71e <HAL_RCC_ClockConfig+0x226>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
9000c5dc:	2903      	cmp	r1, #3
9000c5de:	f000 8098 	beq.w	9000c712 <HAL_RCC_ClockConfig+0x21a>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
9000c5e2:	2901      	cmp	r1, #1
9000c5e4:	f000 80a1 	beq.w	9000c72a <HAL_RCC_ClockConfig+0x232>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000c5e8:	075f      	lsls	r7, r3, #29
9000c5ea:	d59c      	bpl.n	9000c526 <HAL_RCC_ClockConfig+0x2e>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000c5ec:	4e52      	ldr	r6, [pc, #328]	@ (9000c738 <HAL_RCC_ClockConfig+0x240>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000c5ee:	f241 3888 	movw	r8, #5000	@ 0x1388
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000c5f2:	6933      	ldr	r3, [r6, #16]
9000c5f4:	f023 0307 	bic.w	r3, r3, #7
9000c5f8:	430b      	orrs	r3, r1
9000c5fa:	6133      	str	r3, [r6, #16]
    tickstart = HAL_GetTick();
9000c5fc:	f7fb fdc2 	bl	90008184 <HAL_GetTick>
9000c600:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000c602:	e005      	b.n	9000c610 <HAL_RCC_ClockConfig+0x118>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000c604:	f7fb fdbe 	bl	90008184 <HAL_GetTick>
9000c608:	1bc0      	subs	r0, r0, r7
9000c60a:	4540      	cmp	r0, r8
9000c60c:	f200 808b 	bhi.w	9000c726 <HAL_RCC_ClockConfig+0x22e>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000c610:	6933      	ldr	r3, [r6, #16]
9000c612:	6862      	ldr	r2, [r4, #4]
9000c614:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000c618:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
9000c61c:	d1f2      	bne.n	9000c604 <HAL_RCC_ClockConfig+0x10c>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000c61e:	6823      	ldr	r3, [r4, #0]
9000c620:	079e      	lsls	r6, r3, #30
9000c622:	d506      	bpl.n	9000c632 <HAL_RCC_ClockConfig+0x13a>
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000c624:	68e0      	ldr	r0, [r4, #12]
9000c626:	4944      	ldr	r1, [pc, #272]	@ (9000c738 <HAL_RCC_ClockConfig+0x240>)
9000c628:	698a      	ldr	r2, [r1, #24]
9000c62a:	f002 020f 	and.w	r2, r2, #15
9000c62e:	4290      	cmp	r0, r2
9000c630:	d369      	bcc.n	9000c706 <HAL_RCC_ClockConfig+0x20e>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
9000c632:	4940      	ldr	r1, [pc, #256]	@ (9000c734 <HAL_RCC_ClockConfig+0x23c>)
9000c634:	680a      	ldr	r2, [r1, #0]
9000c636:	f002 020f 	and.w	r2, r2, #15
9000c63a:	42aa      	cmp	r2, r5
9000c63c:	d90a      	bls.n	9000c654 <HAL_RCC_ClockConfig+0x15c>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000c63e:	680a      	ldr	r2, [r1, #0]
9000c640:	f022 020f 	bic.w	r2, r2, #15
9000c644:	432a      	orrs	r2, r5
9000c646:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000c648:	680a      	ldr	r2, [r1, #0]
9000c64a:	f002 020f 	and.w	r2, r2, #15
9000c64e:	42aa      	cmp	r2, r5
9000c650:	f47f af69 	bne.w	9000c526 <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000c654:	0758      	lsls	r0, r3, #29
9000c656:	d50b      	bpl.n	9000c670 <HAL_RCC_ClockConfig+0x178>
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000c658:	4937      	ldr	r1, [pc, #220]	@ (9000c738 <HAL_RCC_ClockConfig+0x240>)
9000c65a:	6920      	ldr	r0, [r4, #16]
9000c65c:	698a      	ldr	r2, [r1, #24]
9000c65e:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000c662:	4290      	cmp	r0, r2
9000c664:	d204      	bcs.n	9000c670 <HAL_RCC_ClockConfig+0x178>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000c666:	698a      	ldr	r2, [r1, #24]
9000c668:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000c66c:	4302      	orrs	r2, r0
9000c66e:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000c670:	0719      	lsls	r1, r3, #28
9000c672:	d50b      	bpl.n	9000c68c <HAL_RCC_ClockConfig+0x194>
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000c674:	4930      	ldr	r1, [pc, #192]	@ (9000c738 <HAL_RCC_ClockConfig+0x240>)
9000c676:	6960      	ldr	r0, [r4, #20]
9000c678:	69ca      	ldr	r2, [r1, #28]
9000c67a:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000c67e:	4290      	cmp	r0, r2
9000c680:	d204      	bcs.n	9000c68c <HAL_RCC_ClockConfig+0x194>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000c682:	69ca      	ldr	r2, [r1, #28]
9000c684:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000c688:	4302      	orrs	r2, r0
9000c68a:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000c68c:	06da      	lsls	r2, r3, #27
9000c68e:	d50b      	bpl.n	9000c6a8 <HAL_RCC_ClockConfig+0x1b0>
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000c690:	4929      	ldr	r1, [pc, #164]	@ (9000c738 <HAL_RCC_ClockConfig+0x240>)
9000c692:	69a0      	ldr	r0, [r4, #24]
9000c694:	69ca      	ldr	r2, [r1, #28]
9000c696:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000c69a:	4290      	cmp	r0, r2
9000c69c:	d204      	bcs.n	9000c6a8 <HAL_RCC_ClockConfig+0x1b0>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000c69e:	69ca      	ldr	r2, [r1, #28]
9000c6a0:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
9000c6a4:	4302      	orrs	r2, r0
9000c6a6:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000c6a8:	069b      	lsls	r3, r3, #26
9000c6aa:	d50b      	bpl.n	9000c6c4 <HAL_RCC_ClockConfig+0x1cc>
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000c6ac:	4a22      	ldr	r2, [pc, #136]	@ (9000c738 <HAL_RCC_ClockConfig+0x240>)
9000c6ae:	69e1      	ldr	r1, [r4, #28]
9000c6b0:	6a13      	ldr	r3, [r2, #32]
9000c6b2:	f003 0370 	and.w	r3, r3, #112	@ 0x70
9000c6b6:	4299      	cmp	r1, r3
9000c6b8:	d204      	bcs.n	9000c6c4 <HAL_RCC_ClockConfig+0x1cc>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000c6ba:	6a13      	ldr	r3, [r2, #32]
9000c6bc:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
9000c6c0:	430b      	orrs	r3, r1
9000c6c2:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000c6c4:	f7ff fe8a 	bl	9000c3dc <HAL_RCC_GetSysClockFreq>
9000c6c8:	4a1b      	ldr	r2, [pc, #108]	@ (9000c738 <HAL_RCC_ClockConfig+0x240>)
9000c6ca:	4603      	mov	r3, r0
9000c6cc:	481b      	ldr	r0, [pc, #108]	@ (9000c73c <HAL_RCC_ClockConfig+0x244>)
9000c6ce:	6991      	ldr	r1, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c6d0:	6992      	ldr	r2, [r2, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000c6d2:	f3c1 2103 	ubfx	r1, r1, #8, #4
  SystemCoreClock = common_system_clock;
9000c6d6:	4d1a      	ldr	r5, [pc, #104]	@ (9000c740 <HAL_RCC_ClockConfig+0x248>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c6d8:	f002 020f 	and.w	r2, r2, #15
9000c6dc:	4c19      	ldr	r4, [pc, #100]	@ (9000c744 <HAL_RCC_ClockConfig+0x24c>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000c6de:	5c41      	ldrb	r1, [r0, r1]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c6e0:	5c82      	ldrb	r2, [r0, r2]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000c6e2:	f001 011f 	and.w	r1, r1, #31
  halstatus = HAL_InitTick(uwTickPrio);
9000c6e6:	4818      	ldr	r0, [pc, #96]	@ (9000c748 <HAL_RCC_ClockConfig+0x250>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c6e8:	f002 021f 	and.w	r2, r2, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000c6ec:	40cb      	lsrs	r3, r1
  halstatus = HAL_InitTick(uwTickPrio);
9000c6ee:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = common_system_clock;
9000c6f0:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c6f2:	40d3      	lsrs	r3, r2
9000c6f4:	6023      	str	r3, [r4, #0]
}
9000c6f6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick(uwTickPrio);
9000c6fa:	f7f7 bfd5 	b.w	900046a8 <HAL_InitTick>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000c6fe:	2a00      	cmp	r2, #0
9000c700:	f47f af60 	bne.w	9000c5c4 <HAL_RCC_ClockConfig+0xcc>
9000c704:	e795      	b.n	9000c632 <HAL_RCC_ClockConfig+0x13a>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000c706:	698a      	ldr	r2, [r1, #24]
9000c708:	f022 020f 	bic.w	r2, r2, #15
9000c70c:	4302      	orrs	r2, r0
9000c70e:	618a      	str	r2, [r1, #24]
9000c710:	e78f      	b.n	9000c632 <HAL_RCC_ClockConfig+0x13a>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000c712:	019a      	lsls	r2, r3, #6
9000c714:	f53f af6a 	bmi.w	9000c5ec <HAL_RCC_ClockConfig+0xf4>
9000c718:	e705      	b.n	9000c526 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
9000c71a:	2001      	movs	r0, #1
}
9000c71c:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000c71e:	0398      	lsls	r0, r3, #14
9000c720:	f53f af64 	bmi.w	9000c5ec <HAL_RCC_ClockConfig+0xf4>
9000c724:	e6ff      	b.n	9000c526 <HAL_RCC_ClockConfig+0x2e>
        return HAL_TIMEOUT;
9000c726:	2003      	movs	r0, #3
9000c728:	e6fe      	b.n	9000c528 <HAL_RCC_ClockConfig+0x30>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000c72a:	05db      	lsls	r3, r3, #23
9000c72c:	f53f af5e 	bmi.w	9000c5ec <HAL_RCC_ClockConfig+0xf4>
9000c730:	e6f9      	b.n	9000c526 <HAL_RCC_ClockConfig+0x2e>
9000c732:	bf00      	nop
9000c734:	52002000 	.word	0x52002000
9000c738:	58024400 	.word	0x58024400
9000c73c:	90031604 	.word	0x90031604
9000c740:	24000078 	.word	0x24000078
9000c744:	24000074 	.word	0x24000074
9000c748:	24000080 	.word	0x24000080

9000c74c <HAL_RCC_GetHCLKFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c74c:	4a18      	ldr	r2, [pc, #96]	@ (9000c7b0 <HAL_RCC_GetHCLKFreq+0x64>)
  * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
9000c74e:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c750:	6913      	ldr	r3, [r2, #16]
9000c752:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000c756:	2b10      	cmp	r3, #16
9000c758:	d024      	beq.n	9000c7a4 <HAL_RCC_GetHCLKFreq+0x58>
9000c75a:	2b18      	cmp	r3, #24
9000c75c:	d009      	beq.n	9000c772 <HAL_RCC_GetHCLKFreq+0x26>
9000c75e:	bb1b      	cbnz	r3, 9000c7a8 <HAL_RCC_GetHCLKFreq+0x5c>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c760:	6813      	ldr	r3, [r2, #0]
9000c762:	069b      	lsls	r3, r3, #26
9000c764:	d522      	bpl.n	9000c7ac <HAL_RCC_GetHCLKFreq+0x60>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c766:	6812      	ldr	r2, [r2, #0]
9000c768:	4b12      	ldr	r3, [pc, #72]	@ (9000c7b4 <HAL_RCC_GetHCLKFreq+0x68>)
9000c76a:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000c76e:	40d3      	lsrs	r3, r2
9000c770:	e002      	b.n	9000c778 <HAL_RCC_GetHCLKFreq+0x2c>
9000c772:	f7ff fad3 	bl	9000bd1c <HAL_RCC_GetSysClockFreq.part.0>
9000c776:	4603      	mov	r3, r0
  uint32_t common_system_clock;

#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c778:	490d      	ldr	r1, [pc, #52]	@ (9000c7b0 <HAL_RCC_GetHCLKFreq+0x64>)
9000c77a:	480f      	ldr	r0, [pc, #60]	@ (9000c7b8 <HAL_RCC_GetHCLKFreq+0x6c>)
9000c77c:	698a      	ldr	r2, [r1, #24]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE) >> RCC_CDCFGR1_CDCPRE_Pos] & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c77e:	6989      	ldr	r1, [r1, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c780:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c784:	4c0d      	ldr	r4, [pc, #52]	@ (9000c7bc <HAL_RCC_GetHCLKFreq+0x70>)
9000c786:	f001 010f 	and.w	r1, r1, #15
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
9000c78a:	4d0d      	ldr	r5, [pc, #52]	@ (9000c7c0 <HAL_RCC_GetHCLKFreq+0x74>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c78c:	5c82      	ldrb	r2, [r0, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c78e:	5c40      	ldrb	r0, [r0, r1]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c790:	f002 021f 	and.w	r2, r2, #31
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c794:	f000 001f 	and.w	r0, r0, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c798:	40d3      	lsrs	r3, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c79a:	fa23 f000 	lsr.w	r0, r3, r0
  SystemCoreClock = common_system_clock;
9000c79e:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c7a0:	6020      	str	r0, [r4, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  return SystemD2Clock;
}
9000c7a2:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c7a4:	4b07      	ldr	r3, [pc, #28]	@ (9000c7c4 <HAL_RCC_GetHCLKFreq+0x78>)
9000c7a6:	e7e7      	b.n	9000c778 <HAL_RCC_GetHCLKFreq+0x2c>
      sysclockfreq = CSI_VALUE;
9000c7a8:	4b07      	ldr	r3, [pc, #28]	@ (9000c7c8 <HAL_RCC_GetHCLKFreq+0x7c>)
9000c7aa:	e7e5      	b.n	9000c778 <HAL_RCC_GetHCLKFreq+0x2c>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000c7ac:	4b01      	ldr	r3, [pc, #4]	@ (9000c7b4 <HAL_RCC_GetHCLKFreq+0x68>)
9000c7ae:	e7e3      	b.n	9000c778 <HAL_RCC_GetHCLKFreq+0x2c>
9000c7b0:	58024400 	.word	0x58024400
9000c7b4:	03d09000 	.word	0x03d09000
9000c7b8:	90031604 	.word	0x90031604
9000c7bc:	24000074 	.word	0x24000074
9000c7c0:	24000078 	.word	0x24000078
9000c7c4:	017d7840 	.word	0x017d7840
9000c7c8:	003d0900 	.word	0x003d0900

9000c7cc <HAL_RCC_GetPCLK1Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c7cc:	4a1c      	ldr	r2, [pc, #112]	@ (9000c840 <HAL_RCC_GetPCLK1Freq+0x74>)
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
9000c7ce:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c7d0:	6913      	ldr	r3, [r2, #16]
9000c7d2:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000c7d6:	2b10      	cmp	r3, #16
9000c7d8:	d02b      	beq.n	9000c832 <HAL_RCC_GetPCLK1Freq+0x66>
9000c7da:	2b18      	cmp	r3, #24
9000c7dc:	d009      	beq.n	9000c7f2 <HAL_RCC_GetPCLK1Freq+0x26>
9000c7de:	bb53      	cbnz	r3, 9000c836 <HAL_RCC_GetPCLK1Freq+0x6a>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c7e0:	6813      	ldr	r3, [r2, #0]
9000c7e2:	069b      	lsls	r3, r3, #26
9000c7e4:	d529      	bpl.n	9000c83a <HAL_RCC_GetPCLK1Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c7e6:	6812      	ldr	r2, [r2, #0]
9000c7e8:	4b16      	ldr	r3, [pc, #88]	@ (9000c844 <HAL_RCC_GetPCLK1Freq+0x78>)
9000c7ea:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000c7ee:	40d3      	lsrs	r3, r2
9000c7f0:	e002      	b.n	9000c7f8 <HAL_RCC_GetPCLK1Freq+0x2c>
9000c7f2:	f7ff fa93 	bl	9000bd1c <HAL_RCC_GetSysClockFreq.part.0>
9000c7f6:	4603      	mov	r3, r0
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c7f8:	4a11      	ldr	r2, [pc, #68]	@ (9000c840 <HAL_RCC_GetPCLK1Freq+0x74>)
9000c7fa:	4913      	ldr	r1, [pc, #76]	@ (9000c848 <HAL_RCC_GetPCLK1Freq+0x7c>)
9000c7fc:	6990      	ldr	r0, [r2, #24]
  SystemCoreClock = common_system_clock;
9000c7fe:	4d13      	ldr	r5, [pc, #76]	@ (9000c84c <HAL_RCC_GetPCLK1Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c800:	f3c0 2003 	ubfx	r0, r0, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c804:	4c12      	ldr	r4, [pc, #72]	@ (9000c850 <HAL_RCC_GetPCLK1Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c806:	5c08      	ldrb	r0, [r1, r0]
9000c808:	f000 001f 	and.w	r0, r0, #31
9000c80c:	40c3      	lsrs	r3, r0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c80e:	6990      	ldr	r0, [r2, #24]
9000c810:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000c814:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c816:	5c08      	ldrb	r0, [r1, r0]
9000c818:	f000 001f 	and.w	r0, r0, #31
9000c81c:	40c3      	lsrs	r3, r0
9000c81e:	6023      	str	r3, [r4, #0]
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
9000c820:	69d2      	ldr	r2, [r2, #28]
9000c822:	f3c2 1202 	ubfx	r2, r2, #4, #3
9000c826:	5c88      	ldrb	r0, [r1, r2]
9000c828:	f000 001f 	and.w	r0, r0, #31
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
9000c82c:	fa23 f000 	lsr.w	r0, r3, r0
9000c830:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c832:	4b08      	ldr	r3, [pc, #32]	@ (9000c854 <HAL_RCC_GetPCLK1Freq+0x88>)
9000c834:	e7e0      	b.n	9000c7f8 <HAL_RCC_GetPCLK1Freq+0x2c>
      sysclockfreq = CSI_VALUE;
9000c836:	4b08      	ldr	r3, [pc, #32]	@ (9000c858 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000c838:	e7de      	b.n	9000c7f8 <HAL_RCC_GetPCLK1Freq+0x2c>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000c83a:	4b02      	ldr	r3, [pc, #8]	@ (9000c844 <HAL_RCC_GetPCLK1Freq+0x78>)
9000c83c:	e7dc      	b.n	9000c7f8 <HAL_RCC_GetPCLK1Freq+0x2c>
9000c83e:	bf00      	nop
9000c840:	58024400 	.word	0x58024400
9000c844:	03d09000 	.word	0x03d09000
9000c848:	90031604 	.word	0x90031604
9000c84c:	24000078 	.word	0x24000078
9000c850:	24000074 	.word	0x24000074
9000c854:	017d7840 	.word	0x017d7840
9000c858:	003d0900 	.word	0x003d0900

9000c85c <HAL_RCC_GetPCLK2Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c85c:	4a1c      	ldr	r2, [pc, #112]	@ (9000c8d0 <HAL_RCC_GetPCLK2Freq+0x74>)
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
9000c85e:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c860:	6913      	ldr	r3, [r2, #16]
9000c862:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000c866:	2b10      	cmp	r3, #16
9000c868:	d02b      	beq.n	9000c8c2 <HAL_RCC_GetPCLK2Freq+0x66>
9000c86a:	2b18      	cmp	r3, #24
9000c86c:	d009      	beq.n	9000c882 <HAL_RCC_GetPCLK2Freq+0x26>
9000c86e:	bb53      	cbnz	r3, 9000c8c6 <HAL_RCC_GetPCLK2Freq+0x6a>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c870:	6813      	ldr	r3, [r2, #0]
9000c872:	069b      	lsls	r3, r3, #26
9000c874:	d529      	bpl.n	9000c8ca <HAL_RCC_GetPCLK2Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c876:	6812      	ldr	r2, [r2, #0]
9000c878:	4b16      	ldr	r3, [pc, #88]	@ (9000c8d4 <HAL_RCC_GetPCLK2Freq+0x78>)
9000c87a:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000c87e:	40d3      	lsrs	r3, r2
9000c880:	e002      	b.n	9000c888 <HAL_RCC_GetPCLK2Freq+0x2c>
9000c882:	f7ff fa4b 	bl	9000bd1c <HAL_RCC_GetSysClockFreq.part.0>
9000c886:	4603      	mov	r3, r0
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c888:	4a11      	ldr	r2, [pc, #68]	@ (9000c8d0 <HAL_RCC_GetPCLK2Freq+0x74>)
9000c88a:	4913      	ldr	r1, [pc, #76]	@ (9000c8d8 <HAL_RCC_GetPCLK2Freq+0x7c>)
9000c88c:	6990      	ldr	r0, [r2, #24]
  SystemCoreClock = common_system_clock;
9000c88e:	4d13      	ldr	r5, [pc, #76]	@ (9000c8dc <HAL_RCC_GetPCLK2Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c890:	f3c0 2003 	ubfx	r0, r0, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c894:	4c12      	ldr	r4, [pc, #72]	@ (9000c8e0 <HAL_RCC_GetPCLK2Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c896:	5c08      	ldrb	r0, [r1, r0]
9000c898:	f000 001f 	and.w	r0, r0, #31
9000c89c:	40c3      	lsrs	r3, r0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c89e:	6990      	ldr	r0, [r2, #24]
9000c8a0:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000c8a4:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c8a6:	5c08      	ldrb	r0, [r1, r0]
9000c8a8:	f000 001f 	and.w	r0, r0, #31
9000c8ac:	40c3      	lsrs	r3, r0
9000c8ae:	6023      	str	r3, [r4, #0]
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
9000c8b0:	69d2      	ldr	r2, [r2, #28]
9000c8b2:	f3c2 2202 	ubfx	r2, r2, #8, #3
9000c8b6:	5c88      	ldrb	r0, [r1, r2]
9000c8b8:	f000 001f 	and.w	r0, r0, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
9000c8bc:	fa23 f000 	lsr.w	r0, r3, r0
9000c8c0:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c8c2:	4b08      	ldr	r3, [pc, #32]	@ (9000c8e4 <HAL_RCC_GetPCLK2Freq+0x88>)
9000c8c4:	e7e0      	b.n	9000c888 <HAL_RCC_GetPCLK2Freq+0x2c>
      sysclockfreq = CSI_VALUE;
9000c8c6:	4b08      	ldr	r3, [pc, #32]	@ (9000c8e8 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000c8c8:	e7de      	b.n	9000c888 <HAL_RCC_GetPCLK2Freq+0x2c>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000c8ca:	4b02      	ldr	r3, [pc, #8]	@ (9000c8d4 <HAL_RCC_GetPCLK2Freq+0x78>)
9000c8cc:	e7dc      	b.n	9000c888 <HAL_RCC_GetPCLK2Freq+0x2c>
9000c8ce:	bf00      	nop
9000c8d0:	58024400 	.word	0x58024400
9000c8d4:	03d09000 	.word	0x03d09000
9000c8d8:	90031604 	.word	0x90031604
9000c8dc:	24000078 	.word	0x24000078
9000c8e0:	24000074 	.word	0x24000074
9000c8e4:	017d7840 	.word	0x017d7840
9000c8e8:	003d0900 	.word	0x003d0900

9000c8ec <HAL_RCC_GetClockConfig>:
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000c8ec:	4b13      	ldr	r3, [pc, #76]	@ (9000c93c <HAL_RCC_GetClockConfig+0x50>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000c8ee:	223f      	movs	r2, #63	@ 0x3f
{
9000c8f0:	b410      	push	{r4}
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000c8f2:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000c8f4:	691a      	ldr	r2, [r3, #16]
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000c8f6:	4c12      	ldr	r4, [pc, #72]	@ (9000c940 <HAL_RCC_GetClockConfig+0x54>)
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000c8f8:	f002 0207 	and.w	r2, r2, #7
9000c8fc:	6042      	str	r2, [r0, #4]
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
9000c8fe:	699a      	ldr	r2, [r3, #24]
9000c900:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
9000c904:	6082      	str	r2, [r0, #8]
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
9000c906:	699a      	ldr	r2, [r3, #24]
9000c908:	f002 020f 	and.w	r2, r2, #15
9000c90c:	60c2      	str	r2, [r0, #12]
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
9000c90e:	699a      	ldr	r2, [r3, #24]
9000c910:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000c914:	6102      	str	r2, [r0, #16]
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
9000c916:	69da      	ldr	r2, [r3, #28]
9000c918:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000c91c:	6142      	str	r2, [r0, #20]
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
9000c91e:	69da      	ldr	r2, [r3, #28]
9000c920:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000c924:	6182      	str	r2, [r0, #24]
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000c926:	6a1b      	ldr	r3, [r3, #32]
9000c928:	f003 0370 	and.w	r3, r3, #112	@ 0x70
9000c92c:	61c3      	str	r3, [r0, #28]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000c92e:	6823      	ldr	r3, [r4, #0]
}
9000c930:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000c934:	f003 030f 	and.w	r3, r3, #15
9000c938:	600b      	str	r3, [r1, #0]
}
9000c93a:	4770      	bx	lr
9000c93c:	58024400 	.word	0x58024400
9000c940:	52002000 	.word	0x52002000

9000c944 <RCCEx_PLL2_Config.part.0>:
  * @param  Divider  divider parameter to be updated
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(const RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
9000c944:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
9000c946:	4c36      	ldr	r4, [pc, #216]	@ (9000ca20 <RCCEx_PLL2_Config.part.0+0xdc>)
static HAL_StatusTypeDef RCCEx_PLL2_Config(const RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
9000c948:	4606      	mov	r6, r0
9000c94a:	460f      	mov	r7, r1
    __HAL_RCC_PLL2_DISABLE();
9000c94c:	6823      	ldr	r3, [r4, #0]
9000c94e:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
9000c952:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000c954:	f7fb fc16 	bl	90008184 <HAL_GetTick>
9000c958:	4605      	mov	r5, r0

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000c95a:	e004      	b.n	9000c966 <RCCEx_PLL2_Config.part.0+0x22>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000c95c:	f7fb fc12 	bl	90008184 <HAL_GetTick>
9000c960:	1b40      	subs	r0, r0, r5
9000c962:	2802      	cmp	r0, #2
9000c964:	d856      	bhi.n	9000ca14 <RCCEx_PLL2_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000c966:	6823      	ldr	r3, [r4, #0]
9000c968:	011a      	lsls	r2, r3, #4
9000c96a:	d4f7      	bmi.n	9000c95c <RCCEx_PLL2_Config.part.0+0x18>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
9000c96c:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000c96e:	6832      	ldr	r2, [r6, #0]
9000c970:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
9000c974:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000c978:	62a3      	str	r3, [r4, #40]	@ 0x28
9000c97a:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000c97e:	3b01      	subs	r3, #1
9000c980:	3a01      	subs	r2, #1
9000c982:	025b      	lsls	r3, r3, #9
9000c984:	0412      	lsls	r2, r2, #16
9000c986:	b29b      	uxth	r3, r3
9000c988:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000c98c:	4313      	orrs	r3, r2
9000c98e:	6872      	ldr	r2, [r6, #4]
9000c990:	3a01      	subs	r2, #1
9000c992:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000c996:	4313      	orrs	r3, r2
9000c998:	6932      	ldr	r2, [r6, #16]
9000c99a:	3a01      	subs	r2, #1
9000c99c:	0612      	lsls	r2, r2, #24
9000c99e:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000c9a2:	4313      	orrs	r3, r2
9000c9a4:	63a3      	str	r3, [r4, #56]	@ 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
9000c9a6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000c9a8:	6972      	ldr	r2, [r6, #20]
9000c9aa:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
9000c9ae:	4313      	orrs	r3, r2
9000c9b0:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000c9b2:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000c9b4:	69b2      	ldr	r2, [r6, #24]
9000c9b6:	f023 0320 	bic.w	r3, r3, #32
9000c9ba:	4313      	orrs	r3, r2
9000c9bc:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();
9000c9be:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000c9c0:	f023 0310 	bic.w	r3, r3, #16
9000c9c4:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000c9c6:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000c9c8:	69f2      	ldr	r2, [r6, #28]
9000c9ca:	f36f 03cf 	bfc	r3, #3, #13
9000c9ce:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000c9d2:	63e3      	str	r3, [r4, #60]	@ 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
9000c9d4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000c9d6:	f043 0310 	orr.w	r3, r3, #16
9000c9da:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000c9dc:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000c9de:	b1df      	cbz	r7, 9000ca18 <RCCEx_PLL2_Config.part.0+0xd4>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000c9e0:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
9000c9e2:	bf0c      	ite	eq
9000c9e4:	f443 1380 	orreq.w	r3, r3, #1048576	@ 0x100000
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
9000c9e8:	f443 1300 	orrne.w	r3, r3, #2097152	@ 0x200000
9000c9ec:	62e3      	str	r3, [r4, #44]	@ 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
9000c9ee:	4c0c      	ldr	r4, [pc, #48]	@ (9000ca20 <RCCEx_PLL2_Config.part.0+0xdc>)
9000c9f0:	6823      	ldr	r3, [r4, #0]
9000c9f2:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
9000c9f6:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000c9f8:	f7fb fbc4 	bl	90008184 <HAL_GetTick>
9000c9fc:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000c9fe:	e004      	b.n	9000ca0a <RCCEx_PLL2_Config.part.0+0xc6>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000ca00:	f7fb fbc0 	bl	90008184 <HAL_GetTick>
9000ca04:	1b40      	subs	r0, r0, r5
9000ca06:	2802      	cmp	r0, #2
9000ca08:	d804      	bhi.n	9000ca14 <RCCEx_PLL2_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000ca0a:	6823      	ldr	r3, [r4, #0]
9000ca0c:	011b      	lsls	r3, r3, #4
9000ca0e:	d5f7      	bpl.n	9000ca00 <RCCEx_PLL2_Config.part.0+0xbc>
    }

  }


  return status;
9000ca10:	2000      	movs	r0, #0
}
9000ca12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000ca14:	2003      	movs	r0, #3
}
9000ca16:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000ca18:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
9000ca1c:	62e3      	str	r3, [r4, #44]	@ 0x2c
9000ca1e:	e7e6      	b.n	9000c9ee <RCCEx_PLL2_Config.part.0+0xaa>
9000ca20:	58024400 	.word	0x58024400

9000ca24 <RCCEx_PLL3_Config.part.0>:
  * @param  Divider  divider parameter to be updated
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(const RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
9000ca24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
9000ca26:	4c36      	ldr	r4, [pc, #216]	@ (9000cb00 <RCCEx_PLL3_Config.part.0+0xdc>)
static HAL_StatusTypeDef RCCEx_PLL3_Config(const RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
9000ca28:	4606      	mov	r6, r0
9000ca2a:	460f      	mov	r7, r1
    __HAL_RCC_PLL3_DISABLE();
9000ca2c:	6823      	ldr	r3, [r4, #0]
9000ca2e:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
9000ca32:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000ca34:	f7fb fba6 	bl	90008184 <HAL_GetTick>
9000ca38:	4605      	mov	r5, r0
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000ca3a:	e004      	b.n	9000ca46 <RCCEx_PLL3_Config.part.0+0x22>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000ca3c:	f7fb fba2 	bl	90008184 <HAL_GetTick>
9000ca40:	1b40      	subs	r0, r0, r5
9000ca42:	2802      	cmp	r0, #2
9000ca44:	d856      	bhi.n	9000caf4 <RCCEx_PLL3_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000ca46:	6823      	ldr	r3, [r4, #0]
9000ca48:	009a      	lsls	r2, r3, #2
9000ca4a:	d4f7      	bmi.n	9000ca3c <RCCEx_PLL3_Config.part.0+0x18>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
9000ca4c:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000ca4e:	6832      	ldr	r2, [r6, #0]
9000ca50:	f023 737c 	bic.w	r3, r3, #66060288	@ 0x3f00000
9000ca54:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
9000ca58:	62a3      	str	r3, [r4, #40]	@ 0x28
9000ca5a:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000ca5e:	3b01      	subs	r3, #1
9000ca60:	3a01      	subs	r2, #1
9000ca62:	025b      	lsls	r3, r3, #9
9000ca64:	0412      	lsls	r2, r2, #16
9000ca66:	b29b      	uxth	r3, r3
9000ca68:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000ca6c:	4313      	orrs	r3, r2
9000ca6e:	6872      	ldr	r2, [r6, #4]
9000ca70:	3a01      	subs	r2, #1
9000ca72:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000ca76:	4313      	orrs	r3, r2
9000ca78:	6932      	ldr	r2, [r6, #16]
9000ca7a:	3a01      	subs	r2, #1
9000ca7c:	0612      	lsls	r2, r2, #24
9000ca7e:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000ca82:	4313      	orrs	r3, r2
9000ca84:	6423      	str	r3, [r4, #64]	@ 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
9000ca86:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000ca88:	6972      	ldr	r2, [r6, #20]
9000ca8a:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
9000ca8e:	4313      	orrs	r3, r2
9000ca90:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000ca92:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000ca94:	69b2      	ldr	r2, [r6, #24]
9000ca96:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
9000ca9a:	4313      	orrs	r3, r2
9000ca9c:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();
9000ca9e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000caa0:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
9000caa4:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000caa6:	6c63      	ldr	r3, [r4, #68]	@ 0x44
9000caa8:	69f2      	ldr	r2, [r6, #28]
9000caaa:	f36f 03cf 	bfc	r3, #3, #13
9000caae:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000cab2:	6463      	str	r3, [r4, #68]	@ 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
9000cab4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000cab6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000caba:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000cabc:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000cabe:	b1df      	cbz	r7, 9000caf8 <RCCEx_PLL3_Config.part.0+0xd4>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000cac0:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
9000cac2:	bf0c      	ite	eq
9000cac4:	f443 0300 	orreq.w	r3, r3, #8388608	@ 0x800000
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
9000cac8:	f043 7380 	orrne.w	r3, r3, #16777216	@ 0x1000000
9000cacc:	62e3      	str	r3, [r4, #44]	@ 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
9000cace:	4c0c      	ldr	r4, [pc, #48]	@ (9000cb00 <RCCEx_PLL3_Config.part.0+0xdc>)
9000cad0:	6823      	ldr	r3, [r4, #0]
9000cad2:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
9000cad6:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000cad8:	f7fb fb54 	bl	90008184 <HAL_GetTick>
9000cadc:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000cade:	e004      	b.n	9000caea <RCCEx_PLL3_Config.part.0+0xc6>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000cae0:	f7fb fb50 	bl	90008184 <HAL_GetTick>
9000cae4:	1b40      	subs	r0, r0, r5
9000cae6:	2802      	cmp	r0, #2
9000cae8:	d804      	bhi.n	9000caf4 <RCCEx_PLL3_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000caea:	6823      	ldr	r3, [r4, #0]
9000caec:	009b      	lsls	r3, r3, #2
9000caee:	d5f7      	bpl.n	9000cae0 <RCCEx_PLL3_Config.part.0+0xbc>
    }

  }


  return status;
9000caf0:	2000      	movs	r0, #0
}
9000caf2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000caf4:	2003      	movs	r0, #3
}
9000caf6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000caf8:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
9000cafc:	62e3      	str	r3, [r4, #44]	@ 0x2c
9000cafe:	e7e6      	b.n	9000cace <RCCEx_PLL3_Config.part.0+0xaa>
9000cb00:	58024400 	.word	0x58024400

9000cb04 <HAL_RCCEx_PeriphCLKConfig>:
{
9000cb04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000cb08:	e9d0 3200 	ldrd	r3, r2, [r0]
{
9000cb0c:	4604      	mov	r4, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000cb0e:	011d      	lsls	r5, r3, #4
9000cb10:	f003 6600 	and.w	r6, r3, #134217728	@ 0x8000000
9000cb14:	d524      	bpl.n	9000cb60 <HAL_RCCEx_PeriphCLKConfig+0x5c>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000cb16:	6e81      	ldr	r1, [r0, #104]	@ 0x68
9000cb18:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000cb1c:	f000 85df 	beq.w	9000d6de <HAL_RCCEx_PeriphCLKConfig+0xbda>
9000cb20:	f200 86a8 	bhi.w	9000d874 <HAL_RCCEx_PeriphCLKConfig+0xd70>
9000cb24:	2900      	cmp	r1, #0
9000cb26:	f000 85f6 	beq.w	9000d716 <HAL_RCCEx_PeriphCLKConfig+0xc12>
9000cb2a:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000cb2e:	f040 86a5 	bne.w	9000d87c <HAL_RCCEx_PeriphCLKConfig+0xd78>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cb32:	49a9      	ldr	r1, [pc, #676]	@ (9000cdd8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000cb34:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cb36:	f001 0103 	and.w	r1, r1, #3
9000cb3a:	2903      	cmp	r1, #3
9000cb3c:	f000 869e 	beq.w	9000d87c <HAL_RCCEx_PeriphCLKConfig+0xd78>
9000cb40:	2102      	movs	r1, #2
9000cb42:	3008      	adds	r0, #8
9000cb44:	f7ff fefe 	bl	9000c944 <RCCEx_PLL2_Config.part.0>
9000cb48:	4606      	mov	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000cb4a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cb4e:	b93e      	cbnz	r6, 9000cb60 <HAL_RCCEx_PeriphCLKConfig+0x5c>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000cb50:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000cb52:	4da1      	ldr	r5, [pc, #644]	@ (9000cdd8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
9000cb54:	2600      	movs	r6, #0
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000cb56:	6d28      	ldr	r0, [r5, #80]	@ 0x50
9000cb58:	f420 1040 	bic.w	r0, r0, #3145728	@ 0x300000
9000cb5c:	4301      	orrs	r1, r0
9000cb5e:	6529      	str	r1, [r5, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000cb60:	05d8      	lsls	r0, r3, #23
9000cb62:	d50a      	bpl.n	9000cb7a <HAL_RCCEx_PeriphCLKConfig+0x76>
    switch (PeriphClkInit->Sai1ClockSelection)
9000cb64:	6da1      	ldr	r1, [r4, #88]	@ 0x58
9000cb66:	2904      	cmp	r1, #4
9000cb68:	d806      	bhi.n	9000cb78 <HAL_RCCEx_PeriphCLKConfig+0x74>
9000cb6a:	e8df f011 	tbh	[pc, r1, lsl #1]
9000cb6e:	03ff      	.short	0x03ff
9000cb70:	0582056d 	.word	0x0582056d
9000cb74:	04040404 	.word	0x04040404
      status = ret;
9000cb78:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000cb7a:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000cb7c:	0599      	lsls	r1, r3, #22
9000cb7e:	d524      	bpl.n	9000cbca <HAL_RCCEx_PeriphCLKConfig+0xc6>
    switch (PeriphClkInit->Sai23ClockSelection)
9000cb80:	6de1      	ldr	r1, [r4, #92]	@ 0x5c
9000cb82:	2980      	cmp	r1, #128	@ 0x80
9000cb84:	f000 854b 	beq.w	9000d61e <HAL_RCCEx_PeriphCLKConfig+0xb1a>
9000cb88:	f200 8687 	bhi.w	9000d89a <HAL_RCCEx_PeriphCLKConfig+0xd96>
9000cb8c:	2900      	cmp	r1, #0
9000cb8e:	f000 85bb 	beq.w	9000d708 <HAL_RCCEx_PeriphCLKConfig+0xc04>
9000cb92:	2940      	cmp	r1, #64	@ 0x40
9000cb94:	f040 8688 	bne.w	9000d8a8 <HAL_RCCEx_PeriphCLKConfig+0xda4>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cb98:	498f      	ldr	r1, [pc, #572]	@ (9000cdd8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000cb9a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cb9c:	f001 0103 	and.w	r1, r1, #3
9000cba0:	2903      	cmp	r1, #3
9000cba2:	f000 8681 	beq.w	9000d8a8 <HAL_RCCEx_PeriphCLKConfig+0xda4>
9000cba6:	2100      	movs	r1, #0
9000cba8:	f104 0008 	add.w	r0, r4, #8
9000cbac:	f7ff feca 	bl	9000c944 <RCCEx_PLL2_Config.part.0>
9000cbb0:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000cbb2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cbb6:	2d00      	cmp	r5, #0
9000cbb8:	f040 8543 	bne.w	9000d642 <HAL_RCCEx_PeriphCLKConfig+0xb3e>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
9000cbbc:	4f86      	ldr	r7, [pc, #536]	@ (9000cdd8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000cbbe:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
9000cbc0:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000cbc2:	f421 71e0 	bic.w	r1, r1, #448	@ 0x1c0
9000cbc6:	4301      	orrs	r1, r0
9000cbc8:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000cbca:	055f      	lsls	r7, r3, #21
9000cbcc:	d528      	bpl.n	9000cc20 <HAL_RCCEx_PeriphCLKConfig+0x11c>
    switch (PeriphClkInit->Sai4AClockSelection)
9000cbce:	f8d4 10a8 	ldr.w	r1, [r4, #168]	@ 0xa8
9000cbd2:	f5b1 0f80 	cmp.w	r1, #4194304	@ 0x400000
9000cbd6:	f000 855c 	beq.w	9000d692 <HAL_RCCEx_PeriphCLKConfig+0xb8e>
9000cbda:	f200 8652 	bhi.w	9000d882 <HAL_RCCEx_PeriphCLKConfig+0xd7e>
9000cbde:	2900      	cmp	r1, #0
9000cbe0:	f000 858b 	beq.w	9000d6fa <HAL_RCCEx_PeriphCLKConfig+0xbf6>
9000cbe4:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000cbe8:	f040 8653 	bne.w	9000d892 <HAL_RCCEx_PeriphCLKConfig+0xd8e>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cbec:	497a      	ldr	r1, [pc, #488]	@ (9000cdd8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000cbee:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cbf0:	f001 0103 	and.w	r1, r1, #3
9000cbf4:	2903      	cmp	r1, #3
9000cbf6:	f000 864c 	beq.w	9000d892 <HAL_RCCEx_PeriphCLKConfig+0xd8e>
9000cbfa:	2100      	movs	r1, #0
9000cbfc:	f104 0008 	add.w	r0, r4, #8
9000cc00:	f7ff fea0 	bl	9000c944 <RCCEx_PLL2_Config.part.0>
9000cc04:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000cc06:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cc0a:	2d00      	cmp	r5, #0
9000cc0c:	f040 8553 	bne.w	9000d6b6 <HAL_RCCEx_PeriphCLKConfig+0xbb2>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
9000cc10:	4f71      	ldr	r7, [pc, #452]	@ (9000cdd8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000cc12:	f8d4 00a8 	ldr.w	r0, [r4, #168]	@ 0xa8
9000cc16:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000cc18:	f421 0160 	bic.w	r1, r1, #14680064	@ 0xe00000
9000cc1c:	4301      	orrs	r1, r0
9000cc1e:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000cc20:	0518      	lsls	r0, r3, #20
9000cc22:	d528      	bpl.n	9000cc76 <HAL_RCCEx_PeriphCLKConfig+0x172>
    switch (PeriphClkInit->Sai4BClockSelection)
9000cc24:	f8d4 10ac 	ldr.w	r1, [r4, #172]	@ 0xac
9000cc28:	f1b1 7f00 	cmp.w	r1, #33554432	@ 0x2000000
9000cc2c:	f000 8546 	beq.w	9000d6bc <HAL_RCCEx_PeriphCLKConfig+0xbb8>
9000cc30:	f200 8614 	bhi.w	9000d85c <HAL_RCCEx_PeriphCLKConfig+0xd58>
9000cc34:	2900      	cmp	r1, #0
9000cc36:	f000 84d6 	beq.w	9000d5e6 <HAL_RCCEx_PeriphCLKConfig+0xae2>
9000cc3a:	f1b1 7f80 	cmp.w	r1, #16777216	@ 0x1000000
9000cc3e:	f040 8615 	bne.w	9000d86c <HAL_RCCEx_PeriphCLKConfig+0xd68>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cc42:	4965      	ldr	r1, [pc, #404]	@ (9000cdd8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000cc44:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cc46:	f001 0103 	and.w	r1, r1, #3
9000cc4a:	2903      	cmp	r1, #3
9000cc4c:	f000 860e 	beq.w	9000d86c <HAL_RCCEx_PeriphCLKConfig+0xd68>
9000cc50:	2100      	movs	r1, #0
9000cc52:	f104 0008 	add.w	r0, r4, #8
9000cc56:	f7ff fe75 	bl	9000c944 <RCCEx_PLL2_Config.part.0>
9000cc5a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000cc5c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cc60:	2d00      	cmp	r5, #0
9000cc62:	f040 84c8 	bne.w	9000d5f6 <HAL_RCCEx_PeriphCLKConfig+0xaf2>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
9000cc66:	4f5c      	ldr	r7, [pc, #368]	@ (9000cdd8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000cc68:	f8d4 00ac 	ldr.w	r0, [r4, #172]	@ 0xac
9000cc6c:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000cc6e:	f021 61e0 	bic.w	r1, r1, #117440512	@ 0x7000000
9000cc72:	4301      	orrs	r1, r0
9000cc74:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000cc76:	0199      	lsls	r1, r3, #6
9000cc78:	d518      	bpl.n	9000ccac <HAL_RCCEx_PeriphCLKConfig+0x1a8>
    switch (PeriphClkInit->QspiClockSelection)
9000cc7a:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
9000cc7c:	2920      	cmp	r1, #32
9000cc7e:	f000 8434 	beq.w	9000d4ea <HAL_RCCEx_PeriphCLKConfig+0x9e6>
9000cc82:	f200 8615 	bhi.w	9000d8b0 <HAL_RCCEx_PeriphCLKConfig+0xdac>
9000cc86:	b139      	cbz	r1, 9000cc98 <HAL_RCCEx_PeriphCLKConfig+0x194>
9000cc88:	2910      	cmp	r1, #16
9000cc8a:	f040 8614 	bne.w	9000d8b6 <HAL_RCCEx_PeriphCLKConfig+0xdb2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000cc8e:	4852      	ldr	r0, [pc, #328]	@ (9000cdd8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000cc90:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000cc92:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000cc96:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000cc98:	2d00      	cmp	r5, #0
9000cc9a:	f040 83bf 	bne.w	9000d41c <HAL_RCCEx_PeriphCLKConfig+0x918>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
9000cc9e:	4f4e      	ldr	r7, [pc, #312]	@ (9000cdd8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000cca0:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
9000cca2:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000cca4:	f021 0130 	bic.w	r1, r1, #48	@ 0x30
9000cca8:	4301      	orrs	r1, r0
9000ccaa:	64f9      	str	r1, [r7, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000ccac:	04df      	lsls	r7, r3, #19
9000ccae:	d526      	bpl.n	9000ccfe <HAL_RCCEx_PeriphCLKConfig+0x1fa>
    switch (PeriphClkInit->Spi123ClockSelection)
9000ccb0:	6e21      	ldr	r1, [r4, #96]	@ 0x60
9000ccb2:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
9000ccb6:	f000 84a1 	beq.w	9000d5fc <HAL_RCCEx_PeriphCLKConfig+0xaf8>
9000ccba:	f200 85c3 	bhi.w	9000d844 <HAL_RCCEx_PeriphCLKConfig+0xd40>
9000ccbe:	2900      	cmp	r1, #0
9000ccc0:	f000 8486 	beq.w	9000d5d0 <HAL_RCCEx_PeriphCLKConfig+0xacc>
9000ccc4:	f5b1 5f80 	cmp.w	r1, #4096	@ 0x1000
9000ccc8:	f040 85c4 	bne.w	9000d854 <HAL_RCCEx_PeriphCLKConfig+0xd50>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cccc:	4942      	ldr	r1, [pc, #264]	@ (9000cdd8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000ccce:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ccd0:	f001 0103 	and.w	r1, r1, #3
9000ccd4:	2903      	cmp	r1, #3
9000ccd6:	f000 85bd 	beq.w	9000d854 <HAL_RCCEx_PeriphCLKConfig+0xd50>
9000ccda:	2100      	movs	r1, #0
9000ccdc:	f104 0008 	add.w	r0, r4, #8
9000cce0:	f7ff fe30 	bl	9000c944 <RCCEx_PLL2_Config.part.0>
9000cce4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000cce6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ccea:	2d00      	cmp	r5, #0
9000ccec:	f040 8478 	bne.w	9000d5e0 <HAL_RCCEx_PeriphCLKConfig+0xadc>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
9000ccf0:	4f39      	ldr	r7, [pc, #228]	@ (9000cdd8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000ccf2:	6e20      	ldr	r0, [r4, #96]	@ 0x60
9000ccf4:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000ccf6:	f421 41e0 	bic.w	r1, r1, #28672	@ 0x7000
9000ccfa:	4301      	orrs	r1, r0
9000ccfc:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000ccfe:	0498      	lsls	r0, r3, #18
9000cd00:	d524      	bpl.n	9000cd4c <HAL_RCCEx_PeriphCLKConfig+0x248>
    switch (PeriphClkInit->Spi45ClockSelection)
9000cd02:	6e61      	ldr	r1, [r4, #100]	@ 0x64
9000cd04:	f5b1 3f00 	cmp.w	r1, #131072	@ 0x20000
9000cd08:	f000 8415 	beq.w	9000d536 <HAL_RCCEx_PeriphCLKConfig+0xa32>
9000cd0c:	f200 8556 	bhi.w	9000d7bc <HAL_RCCEx_PeriphCLKConfig+0xcb8>
9000cd10:	b191      	cbz	r1, 9000cd38 <HAL_RCCEx_PeriphCLKConfig+0x234>
9000cd12:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000cd16:	f040 855b 	bne.w	9000d7d0 <HAL_RCCEx_PeriphCLKConfig+0xccc>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cd1a:	492f      	ldr	r1, [pc, #188]	@ (9000cdd8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000cd1c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cd1e:	f001 0103 	and.w	r1, r1, #3
9000cd22:	2903      	cmp	r1, #3
9000cd24:	f000 8554 	beq.w	9000d7d0 <HAL_RCCEx_PeriphCLKConfig+0xccc>
9000cd28:	2101      	movs	r1, #1
9000cd2a:	f104 0008 	add.w	r0, r4, #8
9000cd2e:	f7ff fe09 	bl	9000c944 <RCCEx_PLL2_Config.part.0>
9000cd32:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000cd34:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cd38:	2d00      	cmp	r5, #0
9000cd3a:	f040 838f 	bne.w	9000d45c <HAL_RCCEx_PeriphCLKConfig+0x958>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
9000cd3e:	4f26      	ldr	r7, [pc, #152]	@ (9000cdd8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000cd40:	6e60      	ldr	r0, [r4, #100]	@ 0x64
9000cd42:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000cd44:	f421 21e0 	bic.w	r1, r1, #458752	@ 0x70000
9000cd48:	4301      	orrs	r1, r0
9000cd4a:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000cd4c:	0459      	lsls	r1, r3, #17
9000cd4e:	d526      	bpl.n	9000cd9e <HAL_RCCEx_PeriphCLKConfig+0x29a>
    switch (PeriphClkInit->Spi6ClockSelection)
9000cd50:	f8d4 10b0 	ldr.w	r1, [r4, #176]	@ 0xb0
9000cd54:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000cd58:	f000 8426 	beq.w	9000d5a8 <HAL_RCCEx_PeriphCLKConfig+0xaa4>
9000cd5c:	f200 854a 	bhi.w	9000d7f4 <HAL_RCCEx_PeriphCLKConfig+0xcf0>
9000cd60:	b191      	cbz	r1, 9000cd88 <HAL_RCCEx_PeriphCLKConfig+0x284>
9000cd62:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000cd66:	f040 854f 	bne.w	9000d808 <HAL_RCCEx_PeriphCLKConfig+0xd04>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cd6a:	491b      	ldr	r1, [pc, #108]	@ (9000cdd8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000cd6c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cd6e:	f001 0103 	and.w	r1, r1, #3
9000cd72:	2903      	cmp	r1, #3
9000cd74:	f000 8548 	beq.w	9000d808 <HAL_RCCEx_PeriphCLKConfig+0xd04>
9000cd78:	2101      	movs	r1, #1
9000cd7a:	f104 0008 	add.w	r0, r4, #8
9000cd7e:	f7ff fde1 	bl	9000c944 <RCCEx_PLL2_Config.part.0>
9000cd82:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000cd84:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cd88:	2d00      	cmp	r5, #0
9000cd8a:	f040 835b 	bne.w	9000d444 <HAL_RCCEx_PeriphCLKConfig+0x940>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
9000cd8e:	4f12      	ldr	r7, [pc, #72]	@ (9000cdd8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000cd90:	f8d4 00b0 	ldr.w	r0, [r4, #176]	@ 0xb0
9000cd94:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000cd96:	f021 41e0 	bic.w	r1, r1, #1879048192	@ 0x70000000
9000cd9a:	4301      	orrs	r1, r0
9000cd9c:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000cd9e:	041f      	lsls	r7, r3, #16
9000cda0:	d50d      	bpl.n	9000cdbe <HAL_RCCEx_PeriphCLKConfig+0x2ba>
    switch (PeriphClkInit->FdcanClockSelection)
9000cda2:	6f21      	ldr	r1, [r4, #112]	@ 0x70
9000cda4:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000cda8:	f000 8260 	beq.w	9000d26c <HAL_RCCEx_PeriphCLKConfig+0x768>
9000cdac:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000cdb0:	f000 8591 	beq.w	9000d8d6 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
9000cdb4:	2900      	cmp	r1, #0
9000cdb6:	f000 825e 	beq.w	9000d276 <HAL_RCCEx_PeriphCLKConfig+0x772>
      status = ret;
9000cdba:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000cdbc:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000cdbe:	01d8      	lsls	r0, r3, #7
9000cdc0:	d515      	bpl.n	9000cdee <HAL_RCCEx_PeriphCLKConfig+0x2ea>
    switch (PeriphClkInit->FmcClockSelection)
9000cdc2:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000cdc4:	2903      	cmp	r1, #3
9000cdc6:	f200 85b4 	bhi.w	9000d932 <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000cdca:	e8df f011 	tbh	[pc, r1, lsl #1]
9000cdce:	000c      	.short	0x000c
9000cdd0:	03a10007 	.word	0x03a10007
9000cdd4:	000c      	.short	0x000c
9000cdd6:	bf00      	nop
9000cdd8:	58024400 	.word	0x58024400
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000cddc:	4836      	ldr	r0, [pc, #216]	@ (9000ceb8 <HAL_RCCEx_PeriphCLKConfig+0x3b4>)
9000cdde:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000cde0:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000cde4:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000cde6:	2d00      	cmp	r5, #0
9000cde8:	f000 831a 	beq.w	9000d420 <HAL_RCCEx_PeriphCLKConfig+0x91c>
      status = ret;
9000cdec:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000cdee:	0259      	lsls	r1, r3, #9
9000cdf0:	f100 827a 	bmi.w	9000d2e8 <HAL_RCCEx_PeriphCLKConfig+0x7e4>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000cdf4:	07df      	lsls	r7, r3, #31
9000cdf6:	d52f      	bpl.n	9000ce58 <HAL_RCCEx_PeriphCLKConfig+0x354>
    switch (PeriphClkInit->Usart16ClockSelection)
9000cdf8:	6fe1      	ldr	r1, [r4, #124]	@ 0x7c
9000cdfa:	2928      	cmp	r1, #40	@ 0x28
9000cdfc:	d82a      	bhi.n	9000ce54 <HAL_RCCEx_PeriphCLKConfig+0x350>
9000cdfe:	e8df f011 	tbh	[pc, r1, lsl #1]
9000ce02:	0257      	.short	0x0257
9000ce04:	00290029 	.word	0x00290029
9000ce08:	00290029 	.word	0x00290029
9000ce0c:	00290029 	.word	0x00290029
9000ce10:	02480029 	.word	0x02480029
9000ce14:	00290029 	.word	0x00290029
9000ce18:	00290029 	.word	0x00290029
9000ce1c:	00290029 	.word	0x00290029
9000ce20:	04b90029 	.word	0x04b90029
9000ce24:	00290029 	.word	0x00290029
9000ce28:	00290029 	.word	0x00290029
9000ce2c:	00290029 	.word	0x00290029
9000ce30:	02570029 	.word	0x02570029
9000ce34:	00290029 	.word	0x00290029
9000ce38:	00290029 	.word	0x00290029
9000ce3c:	00290029 	.word	0x00290029
9000ce40:	02570029 	.word	0x02570029
9000ce44:	00290029 	.word	0x00290029
9000ce48:	00290029 	.word	0x00290029
9000ce4c:	00290029 	.word	0x00290029
9000ce50:	02570029 	.word	0x02570029
      status = ret;
9000ce54:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000ce56:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000ce58:	0798      	lsls	r0, r3, #30
9000ce5a:	d51e      	bpl.n	9000ce9a <HAL_RCCEx_PeriphCLKConfig+0x396>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000ce5c:	6fa1      	ldr	r1, [r4, #120]	@ 0x78
9000ce5e:	2905      	cmp	r1, #5
9000ce60:	f200 8550 	bhi.w	9000d904 <HAL_RCCEx_PeriphCLKConfig+0xe00>
9000ce64:	e8df f011 	tbh	[pc, r1, lsl #1]
9000ce68:	00060015 	.word	0x00060015
9000ce6c:	00150471 	.word	0x00150471
9000ce70:	00150015 	.word	0x00150015
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ce74:	4910      	ldr	r1, [pc, #64]	@ (9000ceb8 <HAL_RCCEx_PeriphCLKConfig+0x3b4>)
9000ce76:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ce78:	f001 0103 	and.w	r1, r1, #3
9000ce7c:	2903      	cmp	r1, #3
9000ce7e:	f000 8541 	beq.w	9000d904 <HAL_RCCEx_PeriphCLKConfig+0xe00>
9000ce82:	2101      	movs	r1, #1
9000ce84:	f104 0008 	add.w	r0, r4, #8
9000ce88:	f7ff fd5c 	bl	9000c944 <RCCEx_PLL2_Config.part.0>
9000ce8c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000ce8e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ce92:	2d00      	cmp	r5, #0
9000ce94:	f000 82cc 	beq.w	9000d430 <HAL_RCCEx_PeriphCLKConfig+0x92c>
      status = ret;
9000ce98:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000ce9a:	0759      	lsls	r1, r3, #29
9000ce9c:	d521      	bpl.n	9000cee2 <HAL_RCCEx_PeriphCLKConfig+0x3de>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000ce9e:	f8d4 1094 	ldr.w	r1, [r4, #148]	@ 0x94
9000cea2:	2905      	cmp	r1, #5
9000cea4:	f200 852a 	bhi.w	9000d8fc <HAL_RCCEx_PeriphCLKConfig+0xdf8>
9000cea8:	e8df f011 	tbh	[pc, r1, lsl #1]
9000ceac:	00080017 	.word	0x00080017
9000ceb0:	0017043c 	.word	0x0017043c
9000ceb4:	00170017 	.word	0x00170017
9000ceb8:	58024400 	.word	0x58024400
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cebc:	49ae      	ldr	r1, [pc, #696]	@ (9000d178 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000cebe:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cec0:	f001 0103 	and.w	r1, r1, #3
9000cec4:	2903      	cmp	r1, #3
9000cec6:	f000 8519 	beq.w	9000d8fc <HAL_RCCEx_PeriphCLKConfig+0xdf8>
9000ceca:	2101      	movs	r1, #1
9000cecc:	f104 0008 	add.w	r0, r4, #8
9000ced0:	f7ff fd38 	bl	9000c944 <RCCEx_PLL2_Config.part.0>
9000ced4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000ced6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ceda:	2d00      	cmp	r5, #0
9000cedc:	f000 82c2 	beq.w	9000d464 <HAL_RCCEx_PeriphCLKConfig+0x960>
      status = ret;
9000cee0:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000cee2:	069f      	lsls	r7, r3, #26
9000cee4:	d526      	bpl.n	9000cf34 <HAL_RCCEx_PeriphCLKConfig+0x430>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000cee6:	f8d4 1090 	ldr.w	r1, [r4, #144]	@ 0x90
9000ceea:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000ceee:	f000 82c6 	beq.w	9000d47e <HAL_RCCEx_PeriphCLKConfig+0x97a>
9000cef2:	f200 8455 	bhi.w	9000d7a0 <HAL_RCCEx_PeriphCLKConfig+0xc9c>
9000cef6:	b191      	cbz	r1, 9000cf1e <HAL_RCCEx_PeriphCLKConfig+0x41a>
9000cef8:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000cefc:	f040 845a 	bne.w	9000d7b4 <HAL_RCCEx_PeriphCLKConfig+0xcb0>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cf00:	499d      	ldr	r1, [pc, #628]	@ (9000d178 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000cf02:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cf04:	f001 0103 	and.w	r1, r1, #3
9000cf08:	2903      	cmp	r1, #3
9000cf0a:	f000 8453 	beq.w	9000d7b4 <HAL_RCCEx_PeriphCLKConfig+0xcb0>
9000cf0e:	2100      	movs	r1, #0
9000cf10:	f104 0008 	add.w	r0, r4, #8
9000cf14:	f7ff fd16 	bl	9000c944 <RCCEx_PLL2_Config.part.0>
9000cf18:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000cf1a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cf1e:	2d00      	cmp	r5, #0
9000cf20:	f040 828e 	bne.w	9000d440 <HAL_RCCEx_PeriphCLKConfig+0x93c>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
9000cf24:	4f94      	ldr	r7, [pc, #592]	@ (9000d178 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000cf26:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
9000cf2a:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000cf2c:	f021 41e0 	bic.w	r1, r1, #1879048192	@ 0x70000000
9000cf30:	4301      	orrs	r1, r0
9000cf32:	6579      	str	r1, [r7, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000cf34:	0658      	lsls	r0, r3, #25
9000cf36:	d526      	bpl.n	9000cf86 <HAL_RCCEx_PeriphCLKConfig+0x482>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000cf38:	f8d4 109c 	ldr.w	r1, [r4, #156]	@ 0x9c
9000cf3c:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
9000cf40:	f000 82af 	beq.w	9000d4a2 <HAL_RCCEx_PeriphCLKConfig+0x99e>
9000cf44:	f200 8464 	bhi.w	9000d810 <HAL_RCCEx_PeriphCLKConfig+0xd0c>
9000cf48:	b191      	cbz	r1, 9000cf70 <HAL_RCCEx_PeriphCLKConfig+0x46c>
9000cf4a:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
9000cf4e:	f040 8469 	bne.w	9000d824 <HAL_RCCEx_PeriphCLKConfig+0xd20>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cf52:	4989      	ldr	r1, [pc, #548]	@ (9000d178 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000cf54:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cf56:	f001 0103 	and.w	r1, r1, #3
9000cf5a:	2903      	cmp	r1, #3
9000cf5c:	f000 8462 	beq.w	9000d824 <HAL_RCCEx_PeriphCLKConfig+0xd20>
9000cf60:	2100      	movs	r1, #0
9000cf62:	f104 0008 	add.w	r0, r4, #8
9000cf66:	f7ff fced 	bl	9000c944 <RCCEx_PLL2_Config.part.0>
9000cf6a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000cf6c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cf70:	2d00      	cmp	r5, #0
9000cf72:	f040 8269 	bne.w	9000d448 <HAL_RCCEx_PeriphCLKConfig+0x944>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
9000cf76:	4f80      	ldr	r7, [pc, #512]	@ (9000d178 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000cf78:	f8d4 009c 	ldr.w	r0, [r4, #156]	@ 0x9c
9000cf7c:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000cf7e:	f421 51e0 	bic.w	r1, r1, #7168	@ 0x1c00
9000cf82:	4301      	orrs	r1, r0
9000cf84:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000cf86:	0619      	lsls	r1, r3, #24
9000cf88:	d526      	bpl.n	9000cfd8 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000cf8a:	f8d4 10a0 	ldr.w	r1, [r4, #160]	@ 0xa0
9000cf8e:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
9000cf92:	f000 8298 	beq.w	9000d4c6 <HAL_RCCEx_PeriphCLKConfig+0x9c2>
9000cf96:	f200 841f 	bhi.w	9000d7d8 <HAL_RCCEx_PeriphCLKConfig+0xcd4>
9000cf9a:	b191      	cbz	r1, 9000cfc2 <HAL_RCCEx_PeriphCLKConfig+0x4be>
9000cf9c:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
9000cfa0:	f040 8424 	bne.w	9000d7ec <HAL_RCCEx_PeriphCLKConfig+0xce8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cfa4:	4974      	ldr	r1, [pc, #464]	@ (9000d178 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000cfa6:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cfa8:	f001 0103 	and.w	r1, r1, #3
9000cfac:	2903      	cmp	r1, #3
9000cfae:	f000 841d 	beq.w	9000d7ec <HAL_RCCEx_PeriphCLKConfig+0xce8>
9000cfb2:	2100      	movs	r1, #0
9000cfb4:	f104 0008 	add.w	r0, r4, #8
9000cfb8:	f7ff fcc4 	bl	9000c944 <RCCEx_PLL2_Config.part.0>
9000cfbc:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000cfbe:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cfc2:	2d00      	cmp	r5, #0
9000cfc4:	f040 8244 	bne.w	9000d450 <HAL_RCCEx_PeriphCLKConfig+0x94c>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
9000cfc8:	4f6b      	ldr	r7, [pc, #428]	@ (9000d178 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000cfca:	f8d4 00a0 	ldr.w	r0, [r4, #160]	@ 0xa0
9000cfce:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000cfd0:	f421 4160 	bic.w	r1, r1, #57344	@ 0xe000
9000cfd4:	4301      	orrs	r1, r0
9000cfd6:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000cfd8:	071f      	lsls	r7, r3, #28
9000cfda:	d50b      	bpl.n	9000cff4 <HAL_RCCEx_PeriphCLKConfig+0x4f0>
    if ((PeriphClkInit->I2c123ClockSelection) == RCC_I2C123CLKSOURCE_PLL3)
9000cfdc:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
9000cfe0:	f5b0 5f80 	cmp.w	r0, #4096	@ 0x1000
9000cfe4:	f000 81d4 	beq.w	9000d390 <HAL_RCCEx_PeriphCLKConfig+0x88c>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000cfe8:	4f63      	ldr	r7, [pc, #396]	@ (9000d178 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000cfea:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000cfec:	f421 5140 	bic.w	r1, r1, #12288	@ 0x3000
9000cff0:	4301      	orrs	r1, r0
9000cff2:	6579      	str	r1, [r7, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000cff4:	06d8      	lsls	r0, r3, #27
9000cff6:	d50b      	bpl.n	9000d010 <HAL_RCCEx_PeriphCLKConfig+0x50c>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
9000cff8:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
9000cffc:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
9000d000:	f000 81db 	beq.w	9000d3ba <HAL_RCCEx_PeriphCLKConfig+0x8b6>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000d004:	4f5c      	ldr	r7, [pc, #368]	@ (9000d178 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000d006:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000d008:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
9000d00c:	4301      	orrs	r1, r0
9000d00e:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000d010:	0319      	lsls	r1, r3, #12
9000d012:	d524      	bpl.n	9000d05e <HAL_RCCEx_PeriphCLKConfig+0x55a>
    switch (PeriphClkInit->AdcClockSelection)
9000d014:	f8d4 10a4 	ldr.w	r1, [r4, #164]	@ 0xa4
9000d018:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000d01c:	f000 82b1 	beq.w	9000d582 <HAL_RCCEx_PeriphCLKConfig+0xa7e>
9000d020:	f5b1 3f00 	cmp.w	r1, #131072	@ 0x20000
9000d024:	d010      	beq.n	9000d048 <HAL_RCCEx_PeriphCLKConfig+0x544>
9000d026:	2900      	cmp	r1, #0
9000d028:	f040 8130 	bne.w	9000d28c <HAL_RCCEx_PeriphCLKConfig+0x788>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d02c:	4852      	ldr	r0, [pc, #328]	@ (9000d178 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000d02e:	6a80      	ldr	r0, [r0, #40]	@ 0x28
9000d030:	f000 0003 	and.w	r0, r0, #3
9000d034:	2803      	cmp	r0, #3
9000d036:	f000 8129 	beq.w	9000d28c <HAL_RCCEx_PeriphCLKConfig+0x788>
9000d03a:	f104 0008 	add.w	r0, r4, #8
9000d03e:	f7ff fc81 	bl	9000c944 <RCCEx_PLL2_Config.part.0>
9000d042:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000d044:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d048:	2d00      	cmp	r5, #0
9000d04a:	f040 81ff 	bne.w	9000d44c <HAL_RCCEx_PeriphCLKConfig+0x948>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
9000d04e:	4f4a      	ldr	r7, [pc, #296]	@ (9000d178 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000d050:	f8d4 00a4 	ldr.w	r0, [r4, #164]	@ 0xa4
9000d054:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000d056:	f421 3140 	bic.w	r1, r1, #196608	@ 0x30000
9000d05a:	4301      	orrs	r1, r0
9000d05c:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000d05e:	035f      	lsls	r7, r3, #13
9000d060:	d50f      	bpl.n	9000d082 <HAL_RCCEx_PeriphCLKConfig+0x57e>
    switch (PeriphClkInit->UsbClockSelection)
9000d062:	f8d4 1088 	ldr.w	r1, [r4, #136]	@ 0x88
9000d066:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000d06a:	f000 8277 	beq.w	9000d55c <HAL_RCCEx_PeriphCLKConfig+0xa58>
9000d06e:	f5b1 1f40 	cmp.w	r1, #3145728	@ 0x300000
9000d072:	f000 812d 	beq.w	9000d2d0 <HAL_RCCEx_PeriphCLKConfig+0x7cc>
9000d076:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000d07a:	f000 8124 	beq.w	9000d2c6 <HAL_RCCEx_PeriphCLKConfig+0x7c2>
      status = ret;
9000d07e:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000d080:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000d082:	03d8      	lsls	r0, r3, #15
9000d084:	d520      	bpl.n	9000d0c8 <HAL_RCCEx_PeriphCLKConfig+0x5c4>
    switch (PeriphClkInit->SdmmcClockSelection)
9000d086:	6d21      	ldr	r1, [r4, #80]	@ 0x50
9000d088:	2900      	cmp	r1, #0
9000d08a:	f000 81aa 	beq.w	9000d3e2 <HAL_RCCEx_PeriphCLKConfig+0x8de>
9000d08e:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000d092:	f040 80e8 	bne.w	9000d266 <HAL_RCCEx_PeriphCLKConfig+0x762>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d096:	4938      	ldr	r1, [pc, #224]	@ (9000d178 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000d098:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d09a:	f001 0103 	and.w	r1, r1, #3
9000d09e:	2903      	cmp	r1, #3
9000d0a0:	f000 80e1 	beq.w	9000d266 <HAL_RCCEx_PeriphCLKConfig+0x762>
9000d0a4:	2102      	movs	r1, #2
9000d0a6:	f104 0008 	add.w	r0, r4, #8
9000d0aa:	f7ff fc4b 	bl	9000c944 <RCCEx_PLL2_Config.part.0>
9000d0ae:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000d0b0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d0b4:	2d00      	cmp	r5, #0
9000d0b6:	f040 819c 	bne.w	9000d3f2 <HAL_RCCEx_PeriphCLKConfig+0x8ee>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
9000d0ba:	4f2f      	ldr	r7, [pc, #188]	@ (9000d178 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000d0bc:	6d20      	ldr	r0, [r4, #80]	@ 0x50
9000d0be:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000d0c0:	f421 3180 	bic.w	r1, r1, #65536	@ 0x10000
9000d0c4:	4301      	orrs	r1, r0
9000d0c6:	64f9      	str	r1, [r7, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000d0c8:	0099      	lsls	r1, r3, #2
9000d0ca:	d50e      	bpl.n	9000d0ea <HAL_RCCEx_PeriphCLKConfig+0x5e6>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d0cc:	492a      	ldr	r1, [pc, #168]	@ (9000d178 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000d0ce:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d0d0:	f001 0103 	and.w	r1, r1, #3
9000d0d4:	2903      	cmp	r1, #3
9000d0d6:	d007      	beq.n	9000d0e8 <HAL_RCCEx_PeriphCLKConfig+0x5e4>
9000d0d8:	2102      	movs	r1, #2
9000d0da:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d0de:	f7ff fca1 	bl	9000ca24 <RCCEx_PLL3_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000d0e2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000d0e6:	b100      	cbz	r0, 9000d0ea <HAL_RCCEx_PeriphCLKConfig+0x5e6>
      status = HAL_ERROR;
9000d0e8:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000d0ea:	039f      	lsls	r7, r3, #14
9000d0ec:	f100 80ab 	bmi.w	9000d246 <HAL_RCCEx_PeriphCLKConfig+0x742>
      status = HAL_ERROR;
9000d0f0:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
9000d0f2:	02d8      	lsls	r0, r3, #11
9000d0f4:	d506      	bpl.n	9000d104 <HAL_RCCEx_PeriphCLKConfig+0x600>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
9000d0f6:	4820      	ldr	r0, [pc, #128]	@ (9000d178 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000d0f8:	6f66      	ldr	r6, [r4, #116]	@ 0x74
9000d0fa:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000d0fc:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
9000d100:	4331      	orrs	r1, r6
9000d102:	6501      	str	r1, [r0, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
9000d104:	00d9      	lsls	r1, r3, #3
9000d106:	d507      	bpl.n	9000d118 <HAL_RCCEx_PeriphCLKConfig+0x614>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
9000d108:	481b      	ldr	r0, [pc, #108]	@ (9000d178 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000d10a:	f8d4 60b8 	ldr.w	r6, [r4, #184]	@ 0xb8
9000d10e:	6901      	ldr	r1, [r0, #16]
9000d110:	f421 4180 	bic.w	r1, r1, #16384	@ 0x4000
9000d114:	4331      	orrs	r1, r6
9000d116:	6101      	str	r1, [r0, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
9000d118:	029f      	lsls	r7, r3, #10
9000d11a:	d506      	bpl.n	9000d12a <HAL_RCCEx_PeriphCLKConfig+0x626>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
9000d11c:	4816      	ldr	r0, [pc, #88]	@ (9000d178 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000d11e:	6ee6      	ldr	r6, [r4, #108]	@ 0x6c
9000d120:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000d122:	f021 7180 	bic.w	r1, r1, #16777216	@ 0x1000000
9000d126:	4331      	orrs	r1, r6
9000d128:	6501      	str	r1, [r0, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
9000d12a:	005e      	lsls	r6, r3, #1
9000d12c:	d509      	bpl.n	9000d142 <HAL_RCCEx_PeriphCLKConfig+0x63e>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
9000d12e:	4912      	ldr	r1, [pc, #72]	@ (9000d178 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000d130:	6908      	ldr	r0, [r1, #16]
9000d132:	f420 4000 	bic.w	r0, r0, #32768	@ 0x8000
9000d136:	6108      	str	r0, [r1, #16]
9000d138:	6908      	ldr	r0, [r1, #16]
9000d13a:	f8d4 60bc 	ldr.w	r6, [r4, #188]	@ 0xbc
9000d13e:	4330      	orrs	r0, r6
9000d140:	6108      	str	r0, [r1, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
9000d142:	2b00      	cmp	r3, #0
9000d144:	da06      	bge.n	9000d154 <HAL_RCCEx_PeriphCLKConfig+0x650>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
9000d146:	480c      	ldr	r0, [pc, #48]	@ (9000d178 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000d148:	6d66      	ldr	r6, [r4, #84]	@ 0x54
9000d14a:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
9000d14c:	f021 5140 	bic.w	r1, r1, #805306368	@ 0x30000000
9000d150:	4331      	orrs	r1, r6
9000d152:	64c1      	str	r1, [r0, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
9000d154:	0218      	lsls	r0, r3, #8
9000d156:	d507      	bpl.n	9000d168 <HAL_RCCEx_PeriphCLKConfig+0x664>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
9000d158:	4907      	ldr	r1, [pc, #28]	@ (9000d178 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000d15a:	f8d4 008c 	ldr.w	r0, [r4, #140]	@ 0x8c
9000d15e:	6d4b      	ldr	r3, [r1, #84]	@ 0x54
9000d160:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
9000d164:	4303      	orrs	r3, r0
9000d166:	654b      	str	r3, [r1, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
9000d168:	07d1      	lsls	r1, r2, #31
9000d16a:	d511      	bpl.n	9000d190 <HAL_RCCEx_PeriphCLKConfig+0x68c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d16c:	4b02      	ldr	r3, [pc, #8]	@ (9000d178 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000d16e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000d170:	f003 0303 	and.w	r3, r3, #3
9000d174:	2b03      	cmp	r3, #3
9000d176:	e001      	b.n	9000d17c <HAL_RCCEx_PeriphCLKConfig+0x678>
9000d178:	58024400 	.word	0x58024400
9000d17c:	f000 835c 	beq.w	9000d838 <HAL_RCCEx_PeriphCLKConfig+0xd34>
9000d180:	2100      	movs	r1, #0
9000d182:	f104 0008 	add.w	r0, r4, #8
9000d186:	f7ff fbdd 	bl	9000c944 <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000d18a:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000d18c:	b100      	cbz	r0, 9000d190 <HAL_RCCEx_PeriphCLKConfig+0x68c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000d18e:	4605      	mov	r5, r0
9000d190:	0793      	lsls	r3, r2, #30
9000d192:	d50e      	bpl.n	9000d1b2 <HAL_RCCEx_PeriphCLKConfig+0x6ae>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d194:	4baf      	ldr	r3, [pc, #700]	@ (9000d454 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000d196:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000d198:	f003 0303 	and.w	r3, r3, #3
9000d19c:	2b03      	cmp	r3, #3
9000d19e:	f000 834d 	beq.w	9000d83c <HAL_RCCEx_PeriphCLKConfig+0xd38>
9000d1a2:	2101      	movs	r1, #1
9000d1a4:	f104 0008 	add.w	r0, r4, #8
9000d1a8:	f7ff fbcc 	bl	9000c944 <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000d1ac:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000d1ae:	b100      	cbz	r0, 9000d1b2 <HAL_RCCEx_PeriphCLKConfig+0x6ae>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000d1b0:	4605      	mov	r5, r0
9000d1b2:	0757      	lsls	r7, r2, #29
9000d1b4:	d50e      	bpl.n	9000d1d4 <HAL_RCCEx_PeriphCLKConfig+0x6d0>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d1b6:	4ba7      	ldr	r3, [pc, #668]	@ (9000d454 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000d1b8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000d1ba:	f003 0303 	and.w	r3, r3, #3
9000d1be:	2b03      	cmp	r3, #3
9000d1c0:	f000 833e 	beq.w	9000d840 <HAL_RCCEx_PeriphCLKConfig+0xd3c>
9000d1c4:	2102      	movs	r1, #2
9000d1c6:	f104 0008 	add.w	r0, r4, #8
9000d1ca:	f7ff fbbb 	bl	9000c944 <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000d1ce:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000d1d0:	b100      	cbz	r0, 9000d1d4 <HAL_RCCEx_PeriphCLKConfig+0x6d0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000d1d2:	4605      	mov	r5, r0
9000d1d4:	0716      	lsls	r6, r2, #28
9000d1d6:	d50e      	bpl.n	9000d1f6 <HAL_RCCEx_PeriphCLKConfig+0x6f2>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d1d8:	4b9e      	ldr	r3, [pc, #632]	@ (9000d454 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000d1da:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000d1dc:	f003 0303 	and.w	r3, r3, #3
9000d1e0:	2b03      	cmp	r3, #3
9000d1e2:	f000 8323 	beq.w	9000d82c <HAL_RCCEx_PeriphCLKConfig+0xd28>
9000d1e6:	2100      	movs	r1, #0
9000d1e8:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d1ec:	f7ff fc1a 	bl	9000ca24 <RCCEx_PLL3_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000d1f0:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000d1f2:	b100      	cbz	r0, 9000d1f6 <HAL_RCCEx_PeriphCLKConfig+0x6f2>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000d1f4:	4605      	mov	r5, r0
9000d1f6:	06d0      	lsls	r0, r2, #27
9000d1f8:	d50f      	bpl.n	9000d21a <HAL_RCCEx_PeriphCLKConfig+0x716>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d1fa:	4b96      	ldr	r3, [pc, #600]	@ (9000d454 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000d1fc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000d1fe:	f003 0303 	and.w	r3, r3, #3
9000d202:	2b03      	cmp	r3, #3
9000d204:	f000 8314 	beq.w	9000d830 <HAL_RCCEx_PeriphCLKConfig+0xd2c>
9000d208:	2101      	movs	r1, #1
9000d20a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d20e:	f7ff fc09 	bl	9000ca24 <RCCEx_PLL3_Config.part.0>
    if (ret == HAL_OK)
9000d212:	2800      	cmp	r0, #0
9000d214:	f040 8359 	bne.w	9000d8ca <HAL_RCCEx_PeriphCLKConfig+0xdc6>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000d218:	6862      	ldr	r2, [r4, #4]
9000d21a:	0693      	lsls	r3, r2, #26
9000d21c:	d50e      	bpl.n	9000d23c <HAL_RCCEx_PeriphCLKConfig+0x738>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d21e:	4b8d      	ldr	r3, [pc, #564]	@ (9000d454 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000d220:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000d222:	f003 0303 	and.w	r3, r3, #3
9000d226:	2b03      	cmp	r3, #3
9000d228:	f000 82b7 	beq.w	9000d79a <HAL_RCCEx_PeriphCLKConfig+0xc96>
9000d22c:	2102      	movs	r1, #2
9000d22e:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d232:	f7ff fbf7 	bl	9000ca24 <RCCEx_PLL3_Config.part.0>
    if (ret == HAL_OK)
9000d236:	2800      	cmp	r0, #0
9000d238:	f040 82af 	bne.w	9000d79a <HAL_RCCEx_PeriphCLKConfig+0xc96>
  if (status == HAL_OK)
9000d23c:	1e28      	subs	r0, r5, #0
9000d23e:	bf18      	it	ne
9000d240:	2001      	movne	r0, #1
}
9000d242:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    switch (PeriphClkInit->RngClockSelection)
9000d246:	f8d4 1080 	ldr.w	r1, [r4, #128]	@ 0x80
9000d24a:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
9000d24e:	f000 80d2 	beq.w	9000d3f6 <HAL_RCCEx_PeriphCLKConfig+0x8f2>
9000d252:	f240 8110 	bls.w	9000d476 <HAL_RCCEx_PeriphCLKConfig+0x972>
9000d256:	f421 7080 	bic.w	r0, r1, #256	@ 0x100
9000d25a:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
9000d25e:	f000 80cf 	beq.w	9000d400 <HAL_RCCEx_PeriphCLKConfig+0x8fc>
9000d262:	2501      	movs	r5, #1
9000d264:	e745      	b.n	9000d0f2 <HAL_RCCEx_PeriphCLKConfig+0x5ee>
      status = ret;
9000d266:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000d268:	4635      	mov	r5, r6
9000d26a:	e72d      	b.n	9000d0c8 <HAL_RCCEx_PeriphCLKConfig+0x5c4>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d26c:	4879      	ldr	r0, [pc, #484]	@ (9000d454 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000d26e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000d270:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000d274:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000d276:	2d00      	cmp	r5, #0
9000d278:	f040 80ce 	bne.w	9000d418 <HAL_RCCEx_PeriphCLKConfig+0x914>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
9000d27c:	4f75      	ldr	r7, [pc, #468]	@ (9000d454 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000d27e:	6f20      	ldr	r0, [r4, #112]	@ 0x70
9000d280:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000d282:	f021 5140 	bic.w	r1, r1, #805306368	@ 0x30000000
9000d286:	4301      	orrs	r1, r0
9000d288:	6539      	str	r1, [r7, #80]	@ 0x50
9000d28a:	e598      	b.n	9000cdbe <HAL_RCCEx_PeriphCLKConfig+0x2ba>
      status = ret;
9000d28c:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000d28e:	4635      	mov	r5, r6
9000d290:	e6e5      	b.n	9000d05e <HAL_RCCEx_PeriphCLKConfig+0x55a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d292:	4970      	ldr	r1, [pc, #448]	@ (9000d454 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000d294:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d296:	f001 0103 	and.w	r1, r1, #3
9000d29a:	2903      	cmp	r1, #3
9000d29c:	f43f adda 	beq.w	9000ce54 <HAL_RCCEx_PeriphCLKConfig+0x350>
9000d2a0:	2101      	movs	r1, #1
9000d2a2:	f104 0008 	add.w	r0, r4, #8
9000d2a6:	f7ff fb4d 	bl	9000c944 <RCCEx_PLL2_Config.part.0>
9000d2aa:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000d2ac:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d2b0:	2d00      	cmp	r5, #0
9000d2b2:	f040 80d5 	bne.w	9000d460 <HAL_RCCEx_PeriphCLKConfig+0x95c>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
9000d2b6:	4f67      	ldr	r7, [pc, #412]	@ (9000d454 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000d2b8:	6fe0      	ldr	r0, [r4, #124]	@ 0x7c
9000d2ba:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000d2bc:	f021 0138 	bic.w	r1, r1, #56	@ 0x38
9000d2c0:	4301      	orrs	r1, r0
9000d2c2:	6579      	str	r1, [r7, #84]	@ 0x54
9000d2c4:	e5c8      	b.n	9000ce58 <HAL_RCCEx_PeriphCLKConfig+0x354>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d2c6:	4863      	ldr	r0, [pc, #396]	@ (9000d454 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000d2c8:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000d2ca:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000d2ce:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000d2d0:	2d00      	cmp	r5, #0
9000d2d2:	f040 809f 	bne.w	9000d414 <HAL_RCCEx_PeriphCLKConfig+0x910>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
9000d2d6:	4f5f      	ldr	r7, [pc, #380]	@ (9000d454 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000d2d8:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
9000d2dc:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000d2de:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
9000d2e2:	4301      	orrs	r1, r0
9000d2e4:	6579      	str	r1, [r7, #84]	@ 0x54
9000d2e6:	e6cc      	b.n	9000d082 <HAL_RCCEx_PeriphCLKConfig+0x57e>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
9000d2e8:	4f5b      	ldr	r7, [pc, #364]	@ (9000d458 <HAL_RCCEx_PeriphCLKConfig+0x954>)
9000d2ea:	683b      	ldr	r3, [r7, #0]
9000d2ec:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000d2f0:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
9000d2f2:	f7fa ff47 	bl	90008184 <HAL_GetTick>
9000d2f6:	4680      	mov	r8, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000d2f8:	e006      	b.n	9000d308 <HAL_RCCEx_PeriphCLKConfig+0x804>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000d2fa:	f7fa ff43 	bl	90008184 <HAL_GetTick>
9000d2fe:	eba0 0008 	sub.w	r0, r0, r8
9000d302:	2864      	cmp	r0, #100	@ 0x64
9000d304:	f200 82db 	bhi.w	9000d8be <HAL_RCCEx_PeriphCLKConfig+0xdba>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000d308:	683b      	ldr	r3, [r7, #0]
9000d30a:	05da      	lsls	r2, r3, #23
9000d30c:	d5f5      	bpl.n	9000d2fa <HAL_RCCEx_PeriphCLKConfig+0x7f6>
    if (ret == HAL_OK)
9000d30e:	2d00      	cmp	r5, #0
9000d310:	f040 82d6 	bne.w	9000d8c0 <HAL_RCCEx_PeriphCLKConfig+0xdbc>
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
9000d314:	4a4f      	ldr	r2, [pc, #316]	@ (9000d454 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000d316:	f8d4 30b4 	ldr.w	r3, [r4, #180]	@ 0xb4
9000d31a:	6f11      	ldr	r1, [r2, #112]	@ 0x70
9000d31c:	4059      	eors	r1, r3
9000d31e:	f411 7f40 	tst.w	r1, #768	@ 0x300
9000d322:	d00b      	beq.n	9000d33c <HAL_RCCEx_PeriphCLKConfig+0x838>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000d324:	6f11      	ldr	r1, [r2, #112]	@ 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
9000d326:	6f10      	ldr	r0, [r2, #112]	@ 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000d328:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
9000d32c:	f440 3080 	orr.w	r0, r0, #65536	@ 0x10000
9000d330:	6710      	str	r0, [r2, #112]	@ 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
9000d332:	6f10      	ldr	r0, [r2, #112]	@ 0x70
9000d334:	f420 3080 	bic.w	r0, r0, #65536	@ 0x10000
9000d338:	6710      	str	r0, [r2, #112]	@ 0x70
        RCC->BDCR = tmpreg;
9000d33a:	6711      	str	r1, [r2, #112]	@ 0x70
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
9000d33c:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
9000d340:	f000 82fb 	beq.w	9000d93a <HAL_RCCEx_PeriphCLKConfig+0xe36>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000d344:	f403 7240 	and.w	r2, r3, #768	@ 0x300
9000d348:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
9000d34c:	f000 8309 	beq.w	9000d962 <HAL_RCCEx_PeriphCLKConfig+0xe5e>
9000d350:	4940      	ldr	r1, [pc, #256]	@ (9000d454 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000d352:	690a      	ldr	r2, [r1, #16]
9000d354:	f422 527c 	bic.w	r2, r2, #16128	@ 0x3f00
9000d358:	610a      	str	r2, [r1, #16]
9000d35a:	483e      	ldr	r0, [pc, #248]	@ (9000d454 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000d35c:	f3c3 010b 	ubfx	r1, r3, #0, #12
9000d360:	6f07      	ldr	r7, [r0, #112]	@ 0x70
9000d362:	4339      	orrs	r1, r7
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000d364:	e9d4 3200 	ldrd	r3, r2, [r4]
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000d368:	6701      	str	r1, [r0, #112]	@ 0x70
9000d36a:	e543      	b.n	9000cdf4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d36c:	4839      	ldr	r0, [pc, #228]	@ (9000d454 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000d36e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000d370:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000d374:	62c1      	str	r1, [r0, #44]	@ 0x2c
        ret = HAL_ERROR;
9000d376:	4635      	mov	r5, r6
    if (ret == HAL_OK)
9000d378:	2d00      	cmp	r5, #0
9000d37a:	f040 8177 	bne.w	9000d66c <HAL_RCCEx_PeriphCLKConfig+0xb68>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
9000d37e:	4f35      	ldr	r7, [pc, #212]	@ (9000d454 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000d380:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9000d382:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000d384:	f021 0107 	bic.w	r1, r1, #7
9000d388:	4301      	orrs	r1, r0
9000d38a:	6539      	str	r1, [r7, #80]	@ 0x50
9000d38c:	f7ff bbf6 	b.w	9000cb7c <HAL_RCCEx_PeriphCLKConfig+0x78>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d390:	4930      	ldr	r1, [pc, #192]	@ (9000d454 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000d392:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d394:	f001 0103 	and.w	r1, r1, #3
9000d398:	2903      	cmp	r1, #3
9000d39a:	f000 82ba 	beq.w	9000d912 <HAL_RCCEx_PeriphCLKConfig+0xe0e>
9000d39e:	2102      	movs	r1, #2
9000d3a0:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d3a4:	f7ff fb3e 	bl	9000ca24 <RCCEx_PLL3_Config.part.0>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000d3a8:	2800      	cmp	r0, #0
9000d3aa:	f000 82b5 	beq.w	9000d918 <HAL_RCCEx_PeriphCLKConfig+0xe14>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000d3ae:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
        status = HAL_ERROR;
9000d3b2:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000d3b4:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d3b8:	e616      	b.n	9000cfe8 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d3ba:	4926      	ldr	r1, [pc, #152]	@ (9000d454 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000d3bc:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d3be:	f001 0103 	and.w	r1, r1, #3
9000d3c2:	2903      	cmp	r1, #3
9000d3c4:	f000 82a2 	beq.w	9000d90c <HAL_RCCEx_PeriphCLKConfig+0xe08>
9000d3c8:	2102      	movs	r1, #2
9000d3ca:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d3ce:	f7ff fb29 	bl	9000ca24 <RCCEx_PLL3_Config.part.0>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000d3d2:	2800      	cmp	r0, #0
9000d3d4:	f040 82a6 	bne.w	9000d924 <HAL_RCCEx_PeriphCLKConfig+0xe20>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000d3d8:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000d3dc:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d3e0:	e610      	b.n	9000d004 <HAL_RCCEx_PeriphCLKConfig+0x500>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d3e2:	481c      	ldr	r0, [pc, #112]	@ (9000d454 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000d3e4:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000d3e6:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000d3ea:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000d3ec:	2d00      	cmp	r5, #0
9000d3ee:	f43f ae64 	beq.w	9000d0ba <HAL_RCCEx_PeriphCLKConfig+0x5b6>
      status = ret;
9000d3f2:	462e      	mov	r6, r5
9000d3f4:	e668      	b.n	9000d0c8 <HAL_RCCEx_PeriphCLKConfig+0x5c4>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d3f6:	4f17      	ldr	r7, [pc, #92]	@ (9000d454 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000d3f8:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
9000d3fa:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
9000d3fe:	62f8      	str	r0, [r7, #44]	@ 0x2c
    if (ret == HAL_OK)
9000d400:	2d00      	cmp	r5, #0
9000d402:	f47f ae76 	bne.w	9000d0f2 <HAL_RCCEx_PeriphCLKConfig+0x5ee>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
9000d406:	4d13      	ldr	r5, [pc, #76]	@ (9000d454 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000d408:	6d68      	ldr	r0, [r5, #84]	@ 0x54
9000d40a:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
9000d40e:	4301      	orrs	r1, r0
9000d410:	6569      	str	r1, [r5, #84]	@ 0x54
9000d412:	e66d      	b.n	9000d0f0 <HAL_RCCEx_PeriphCLKConfig+0x5ec>
      status = ret;
9000d414:	462e      	mov	r6, r5
9000d416:	e634      	b.n	9000d082 <HAL_RCCEx_PeriphCLKConfig+0x57e>
      status = ret;
9000d418:	462e      	mov	r6, r5
9000d41a:	e4d0      	b.n	9000cdbe <HAL_RCCEx_PeriphCLKConfig+0x2ba>
      status = ret;
9000d41c:	462e      	mov	r6, r5
9000d41e:	e445      	b.n	9000ccac <HAL_RCCEx_PeriphCLKConfig+0x1a8>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
9000d420:	4f0c      	ldr	r7, [pc, #48]	@ (9000d454 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000d422:	6ca0      	ldr	r0, [r4, #72]	@ 0x48
9000d424:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000d426:	f021 0103 	bic.w	r1, r1, #3
9000d42a:	4301      	orrs	r1, r0
9000d42c:	64f9      	str	r1, [r7, #76]	@ 0x4c
9000d42e:	e4de      	b.n	9000cdee <HAL_RCCEx_PeriphCLKConfig+0x2ea>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
9000d430:	4f08      	ldr	r7, [pc, #32]	@ (9000d454 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000d432:	6fa0      	ldr	r0, [r4, #120]	@ 0x78
9000d434:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000d436:	f021 0107 	bic.w	r1, r1, #7
9000d43a:	4301      	orrs	r1, r0
9000d43c:	6579      	str	r1, [r7, #84]	@ 0x54
9000d43e:	e52c      	b.n	9000ce9a <HAL_RCCEx_PeriphCLKConfig+0x396>
      status = ret;
9000d440:	462e      	mov	r6, r5
9000d442:	e577      	b.n	9000cf34 <HAL_RCCEx_PeriphCLKConfig+0x430>
      status = ret;
9000d444:	462e      	mov	r6, r5
9000d446:	e4aa      	b.n	9000cd9e <HAL_RCCEx_PeriphCLKConfig+0x29a>
      status = ret;
9000d448:	462e      	mov	r6, r5
9000d44a:	e59c      	b.n	9000cf86 <HAL_RCCEx_PeriphCLKConfig+0x482>
      status = ret;
9000d44c:	462e      	mov	r6, r5
9000d44e:	e606      	b.n	9000d05e <HAL_RCCEx_PeriphCLKConfig+0x55a>
      status = ret;
9000d450:	462e      	mov	r6, r5
9000d452:	e5c1      	b.n	9000cfd8 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000d454:	58024400 	.word	0x58024400
9000d458:	58024800 	.word	0x58024800
      status = ret;
9000d45c:	462e      	mov	r6, r5
9000d45e:	e475      	b.n	9000cd4c <HAL_RCCEx_PeriphCLKConfig+0x248>
      status = ret;
9000d460:	462e      	mov	r6, r5
9000d462:	e4f9      	b.n	9000ce58 <HAL_RCCEx_PeriphCLKConfig+0x354>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
9000d464:	4fc2      	ldr	r7, [pc, #776]	@ (9000d770 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000d466:	f8d4 0094 	ldr.w	r0, [r4, #148]	@ 0x94
9000d46a:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000d46c:	f021 0107 	bic.w	r1, r1, #7
9000d470:	4301      	orrs	r1, r0
9000d472:	65b9      	str	r1, [r7, #88]	@ 0x58
9000d474:	e535      	b.n	9000cee2 <HAL_RCCEx_PeriphCLKConfig+0x3de>
    switch (PeriphClkInit->RngClockSelection)
9000d476:	2900      	cmp	r1, #0
9000d478:	f47f aef3 	bne.w	9000d262 <HAL_RCCEx_PeriphCLKConfig+0x75e>
9000d47c:	e7c0      	b.n	9000d400 <HAL_RCCEx_PeriphCLKConfig+0x8fc>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d47e:	49bc      	ldr	r1, [pc, #752]	@ (9000d770 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000d480:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d482:	f001 0103 	and.w	r1, r1, #3
9000d486:	2903      	cmp	r1, #3
9000d488:	f000 8194 	beq.w	9000d7b4 <HAL_RCCEx_PeriphCLKConfig+0xcb0>
9000d48c:	2102      	movs	r1, #2
9000d48e:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d492:	f7ff fac7 	bl	9000ca24 <RCCEx_PLL3_Config.part.0>
9000d496:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000d498:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d49c:	2d00      	cmp	r5, #0
9000d49e:	d1cf      	bne.n	9000d440 <HAL_RCCEx_PeriphCLKConfig+0x93c>
9000d4a0:	e540      	b.n	9000cf24 <HAL_RCCEx_PeriphCLKConfig+0x420>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d4a2:	49b3      	ldr	r1, [pc, #716]	@ (9000d770 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000d4a4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d4a6:	f001 0103 	and.w	r1, r1, #3
9000d4aa:	2903      	cmp	r1, #3
9000d4ac:	f000 81ba 	beq.w	9000d824 <HAL_RCCEx_PeriphCLKConfig+0xd20>
9000d4b0:	2102      	movs	r1, #2
9000d4b2:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d4b6:	f7ff fab5 	bl	9000ca24 <RCCEx_PLL3_Config.part.0>
9000d4ba:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000d4bc:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d4c0:	2d00      	cmp	r5, #0
9000d4c2:	d1c1      	bne.n	9000d448 <HAL_RCCEx_PeriphCLKConfig+0x944>
9000d4c4:	e557      	b.n	9000cf76 <HAL_RCCEx_PeriphCLKConfig+0x472>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d4c6:	49aa      	ldr	r1, [pc, #680]	@ (9000d770 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000d4c8:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d4ca:	f001 0103 	and.w	r1, r1, #3
9000d4ce:	2903      	cmp	r1, #3
9000d4d0:	f000 818c 	beq.w	9000d7ec <HAL_RCCEx_PeriphCLKConfig+0xce8>
9000d4d4:	2102      	movs	r1, #2
9000d4d6:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d4da:	f7ff faa3 	bl	9000ca24 <RCCEx_PLL3_Config.part.0>
9000d4de:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000d4e0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d4e4:	2d00      	cmp	r5, #0
9000d4e6:	d1b3      	bne.n	9000d450 <HAL_RCCEx_PeriphCLKConfig+0x94c>
9000d4e8:	e56e      	b.n	9000cfc8 <HAL_RCCEx_PeriphCLKConfig+0x4c4>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d4ea:	49a1      	ldr	r1, [pc, #644]	@ (9000d770 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000d4ec:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d4ee:	f001 0103 	and.w	r1, r1, #3
9000d4f2:	2903      	cmp	r1, #3
9000d4f4:	f000 81df 	beq.w	9000d8b6 <HAL_RCCEx_PeriphCLKConfig+0xdb2>
9000d4f8:	2102      	movs	r1, #2
9000d4fa:	f104 0008 	add.w	r0, r4, #8
9000d4fe:	f7ff fa21 	bl	9000c944 <RCCEx_PLL2_Config.part.0>
9000d502:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000d504:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d508:	2d00      	cmp	r5, #0
9000d50a:	d187      	bne.n	9000d41c <HAL_RCCEx_PeriphCLKConfig+0x918>
9000d50c:	f7ff bbc7 	b.w	9000cc9e <HAL_RCCEx_PeriphCLKConfig+0x19a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d510:	4997      	ldr	r1, [pc, #604]	@ (9000d770 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000d512:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d514:	f001 0103 	and.w	r1, r1, #3
9000d518:	2903      	cmp	r1, #3
9000d51a:	f000 820a 	beq.w	9000d932 <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000d51e:	2102      	movs	r1, #2
9000d520:	f104 0008 	add.w	r0, r4, #8
9000d524:	f7ff fa0e 	bl	9000c944 <RCCEx_PLL2_Config.part.0>
9000d528:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000d52a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d52e:	2d00      	cmp	r5, #0
9000d530:	f47f ac5c 	bne.w	9000cdec <HAL_RCCEx_PeriphCLKConfig+0x2e8>
9000d534:	e774      	b.n	9000d420 <HAL_RCCEx_PeriphCLKConfig+0x91c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d536:	498e      	ldr	r1, [pc, #568]	@ (9000d770 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000d538:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d53a:	f001 0103 	and.w	r1, r1, #3
9000d53e:	2903      	cmp	r1, #3
9000d540:	f000 8146 	beq.w	9000d7d0 <HAL_RCCEx_PeriphCLKConfig+0xccc>
9000d544:	2101      	movs	r1, #1
9000d546:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d54a:	f7ff fa6b 	bl	9000ca24 <RCCEx_PLL3_Config.part.0>
9000d54e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000d550:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d554:	2d00      	cmp	r5, #0
9000d556:	d181      	bne.n	9000d45c <HAL_RCCEx_PeriphCLKConfig+0x958>
9000d558:	f7ff bbf1 	b.w	9000cd3e <HAL_RCCEx_PeriphCLKConfig+0x23a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d55c:	4984      	ldr	r1, [pc, #528]	@ (9000d770 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000d55e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d560:	f001 0103 	and.w	r1, r1, #3
9000d564:	2903      	cmp	r1, #3
9000d566:	f43f ad8a 	beq.w	9000d07e <HAL_RCCEx_PeriphCLKConfig+0x57a>
9000d56a:	2101      	movs	r1, #1
9000d56c:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d570:	f7ff fa58 	bl	9000ca24 <RCCEx_PLL3_Config.part.0>
9000d574:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000d576:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d57a:	2d00      	cmp	r5, #0
9000d57c:	f47f af4a 	bne.w	9000d414 <HAL_RCCEx_PeriphCLKConfig+0x910>
9000d580:	e6a9      	b.n	9000d2d6 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d582:	497b      	ldr	r1, [pc, #492]	@ (9000d770 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000d584:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d586:	f001 0103 	and.w	r1, r1, #3
9000d58a:	2903      	cmp	r1, #3
9000d58c:	f43f ae7e 	beq.w	9000d28c <HAL_RCCEx_PeriphCLKConfig+0x788>
9000d590:	2102      	movs	r1, #2
9000d592:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d596:	f7ff fa45 	bl	9000ca24 <RCCEx_PLL3_Config.part.0>
9000d59a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000d59c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d5a0:	2d00      	cmp	r5, #0
9000d5a2:	f47f af53 	bne.w	9000d44c <HAL_RCCEx_PeriphCLKConfig+0x948>
9000d5a6:	e552      	b.n	9000d04e <HAL_RCCEx_PeriphCLKConfig+0x54a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d5a8:	4971      	ldr	r1, [pc, #452]	@ (9000d770 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000d5aa:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d5ac:	f001 0103 	and.w	r1, r1, #3
9000d5b0:	2903      	cmp	r1, #3
9000d5b2:	f000 8129 	beq.w	9000d808 <HAL_RCCEx_PeriphCLKConfig+0xd04>
9000d5b6:	2101      	movs	r1, #1
9000d5b8:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d5bc:	f7ff fa32 	bl	9000ca24 <RCCEx_PLL3_Config.part.0>
9000d5c0:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000d5c2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d5c6:	2d00      	cmp	r5, #0
9000d5c8:	f47f af3c 	bne.w	9000d444 <HAL_RCCEx_PeriphCLKConfig+0x940>
9000d5cc:	f7ff bbdf 	b.w	9000cd8e <HAL_RCCEx_PeriphCLKConfig+0x28a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d5d0:	4867      	ldr	r0, [pc, #412]	@ (9000d770 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000d5d2:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000d5d4:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000d5d8:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000d5da:	2d00      	cmp	r5, #0
9000d5dc:	f43f ab88 	beq.w	9000ccf0 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
      status = ret;
9000d5e0:	462e      	mov	r6, r5
9000d5e2:	f7ff bb8c 	b.w	9000ccfe <HAL_RCCEx_PeriphCLKConfig+0x1fa>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d5e6:	4862      	ldr	r0, [pc, #392]	@ (9000d770 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000d5e8:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000d5ea:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000d5ee:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000d5f0:	2d00      	cmp	r5, #0
9000d5f2:	f43f ab38 	beq.w	9000cc66 <HAL_RCCEx_PeriphCLKConfig+0x162>
      status = ret;
9000d5f6:	462e      	mov	r6, r5
9000d5f8:	f7ff bb3d 	b.w	9000cc76 <HAL_RCCEx_PeriphCLKConfig+0x172>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d5fc:	495c      	ldr	r1, [pc, #368]	@ (9000d770 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000d5fe:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d600:	f001 0103 	and.w	r1, r1, #3
9000d604:	2903      	cmp	r1, #3
9000d606:	f000 8125 	beq.w	9000d854 <HAL_RCCEx_PeriphCLKConfig+0xd50>
9000d60a:	2100      	movs	r1, #0
9000d60c:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d610:	f7ff fa08 	bl	9000ca24 <RCCEx_PLL3_Config.part.0>
9000d614:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000d616:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000d61a:	f7ff bb66 	b.w	9000ccea <HAL_RCCEx_PeriphCLKConfig+0x1e6>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d61e:	4954      	ldr	r1, [pc, #336]	@ (9000d770 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000d620:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d622:	f001 0103 	and.w	r1, r1, #3
9000d626:	2903      	cmp	r1, #3
9000d628:	f000 813e 	beq.w	9000d8a8 <HAL_RCCEx_PeriphCLKConfig+0xda4>
9000d62c:	2100      	movs	r1, #0
9000d62e:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d632:	f7ff f9f7 	bl	9000ca24 <RCCEx_PLL3_Config.part.0>
9000d636:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000d638:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d63c:	2d00      	cmp	r5, #0
9000d63e:	f43f aabd 	beq.w	9000cbbc <HAL_RCCEx_PeriphCLKConfig+0xb8>
      status = ret;
9000d642:	462e      	mov	r6, r5
9000d644:	f7ff bac1 	b.w	9000cbca <HAL_RCCEx_PeriphCLKConfig+0xc6>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d648:	4949      	ldr	r1, [pc, #292]	@ (9000d770 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000d64a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d64c:	f001 0103 	and.w	r1, r1, #3
9000d650:	2903      	cmp	r1, #3
9000d652:	f43f aa91 	beq.w	9000cb78 <HAL_RCCEx_PeriphCLKConfig+0x74>
9000d656:	2100      	movs	r1, #0
9000d658:	f104 0008 	add.w	r0, r4, #8
9000d65c:	f7ff f972 	bl	9000c944 <RCCEx_PLL2_Config.part.0>
9000d660:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000d662:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d666:	2d00      	cmp	r5, #0
9000d668:	f43f ae89 	beq.w	9000d37e <HAL_RCCEx_PeriphCLKConfig+0x87a>
      status = ret;
9000d66c:	462e      	mov	r6, r5
9000d66e:	f7ff ba85 	b.w	9000cb7c <HAL_RCCEx_PeriphCLKConfig+0x78>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d672:	493f      	ldr	r1, [pc, #252]	@ (9000d770 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000d674:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d676:	f001 0103 	and.w	r1, r1, #3
9000d67a:	2903      	cmp	r1, #3
9000d67c:	f43f aa7c 	beq.w	9000cb78 <HAL_RCCEx_PeriphCLKConfig+0x74>
9000d680:	2100      	movs	r1, #0
9000d682:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d686:	f7ff f9cd 	bl	9000ca24 <RCCEx_PLL3_Config.part.0>
9000d68a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000d68c:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000d690:	e672      	b.n	9000d378 <HAL_RCCEx_PeriphCLKConfig+0x874>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d692:	4937      	ldr	r1, [pc, #220]	@ (9000d770 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000d694:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d696:	f001 0103 	and.w	r1, r1, #3
9000d69a:	2903      	cmp	r1, #3
9000d69c:	f000 80f9 	beq.w	9000d892 <HAL_RCCEx_PeriphCLKConfig+0xd8e>
9000d6a0:	2100      	movs	r1, #0
9000d6a2:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d6a6:	f7ff f9bd 	bl	9000ca24 <RCCEx_PLL3_Config.part.0>
9000d6aa:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000d6ac:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d6b0:	2d00      	cmp	r5, #0
9000d6b2:	f43f aaad 	beq.w	9000cc10 <HAL_RCCEx_PeriphCLKConfig+0x10c>
      status = ret;
9000d6b6:	462e      	mov	r6, r5
9000d6b8:	f7ff bab2 	b.w	9000cc20 <HAL_RCCEx_PeriphCLKConfig+0x11c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d6bc:	492c      	ldr	r1, [pc, #176]	@ (9000d770 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000d6be:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d6c0:	f001 0103 	and.w	r1, r1, #3
9000d6c4:	2903      	cmp	r1, #3
9000d6c6:	f000 80d1 	beq.w	9000d86c <HAL_RCCEx_PeriphCLKConfig+0xd68>
9000d6ca:	2100      	movs	r1, #0
9000d6cc:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d6d0:	f7ff f9a8 	bl	9000ca24 <RCCEx_PLL3_Config.part.0>
9000d6d4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000d6d6:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000d6da:	f7ff bac1 	b.w	9000cc60 <HAL_RCCEx_PeriphCLKConfig+0x15c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d6de:	4924      	ldr	r1, [pc, #144]	@ (9000d770 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000d6e0:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d6e2:	f001 0103 	and.w	r1, r1, #3
9000d6e6:	2903      	cmp	r1, #3
9000d6e8:	f000 80c8 	beq.w	9000d87c <HAL_RCCEx_PeriphCLKConfig+0xd78>
9000d6ec:	2102      	movs	r1, #2
9000d6ee:	3028      	adds	r0, #40	@ 0x28
9000d6f0:	f7ff f998 	bl	9000ca24 <RCCEx_PLL3_Config.part.0>
9000d6f4:	4606      	mov	r6, r0
        break;
9000d6f6:	f7ff ba28 	b.w	9000cb4a <HAL_RCCEx_PeriphCLKConfig+0x46>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d6fa:	481d      	ldr	r0, [pc, #116]	@ (9000d770 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000d6fc:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000d6fe:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000d702:	62c1      	str	r1, [r0, #44]	@ 0x2c
        break;
9000d704:	f7ff ba81 	b.w	9000cc0a <HAL_RCCEx_PeriphCLKConfig+0x106>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d708:	4819      	ldr	r0, [pc, #100]	@ (9000d770 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000d70a:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000d70c:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000d710:	62c1      	str	r1, [r0, #44]	@ 0x2c
        break;
9000d712:	f7ff ba50 	b.w	9000cbb6 <HAL_RCCEx_PeriphCLKConfig+0xb2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d716:	4d16      	ldr	r5, [pc, #88]	@ (9000d770 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000d718:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
9000d71a:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
9000d71e:	62e8      	str	r0, [r5, #44]	@ 0x2c
    if (ret == HAL_OK)
9000d720:	f7ff ba17 	b.w	9000cb52 <HAL_RCCEx_PeriphCLKConfig+0x4e>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d724:	4912      	ldr	r1, [pc, #72]	@ (9000d770 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000d726:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d728:	f001 0103 	and.w	r1, r1, #3
9000d72c:	2903      	cmp	r1, #3
9000d72e:	f000 80e5 	beq.w	9000d8fc <HAL_RCCEx_PeriphCLKConfig+0xdf8>
9000d732:	2101      	movs	r1, #1
9000d734:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d738:	f7ff f974 	bl	9000ca24 <RCCEx_PLL3_Config.part.0>
9000d73c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000d73e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d742:	2d00      	cmp	r5, #0
9000d744:	f47f abcc 	bne.w	9000cee0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>
9000d748:	e68c      	b.n	9000d464 <HAL_RCCEx_PeriphCLKConfig+0x960>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d74a:	4909      	ldr	r1, [pc, #36]	@ (9000d770 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000d74c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d74e:	f001 0103 	and.w	r1, r1, #3
9000d752:	2903      	cmp	r1, #3
9000d754:	f000 80d6 	beq.w	9000d904 <HAL_RCCEx_PeriphCLKConfig+0xe00>
9000d758:	2101      	movs	r1, #1
9000d75a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d75e:	f7ff f961 	bl	9000ca24 <RCCEx_PLL3_Config.part.0>
9000d762:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000d764:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d768:	2d00      	cmp	r5, #0
9000d76a:	f47f ab95 	bne.w	9000ce98 <HAL_RCCEx_PeriphCLKConfig+0x394>
9000d76e:	e65f      	b.n	9000d430 <HAL_RCCEx_PeriphCLKConfig+0x92c>
9000d770:	58024400 	.word	0x58024400
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d774:	4983      	ldr	r1, [pc, #524]	@ (9000d984 <HAL_RCCEx_PeriphCLKConfig+0xe80>)
9000d776:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d778:	f001 0103 	and.w	r1, r1, #3
9000d77c:	2903      	cmp	r1, #3
9000d77e:	f43f ab69 	beq.w	9000ce54 <HAL_RCCEx_PeriphCLKConfig+0x350>
9000d782:	2101      	movs	r1, #1
9000d784:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d788:	f7ff f94c 	bl	9000ca24 <RCCEx_PLL3_Config.part.0>
9000d78c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000d78e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d792:	2d00      	cmp	r5, #0
9000d794:	f47f ae64 	bne.w	9000d460 <HAL_RCCEx_PeriphCLKConfig+0x95c>
9000d798:	e58d      	b.n	9000d2b6 <HAL_RCCEx_PeriphCLKConfig+0x7b2>
  return HAL_ERROR;
9000d79a:	2001      	movs	r0, #1
}
9000d79c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    switch (PeriphClkInit->Lptim1ClockSelection)
9000d7a0:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
9000d7a4:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
9000d7a8:	f43f abb9 	beq.w	9000cf1e <HAL_RCCEx_PeriphCLKConfig+0x41a>
9000d7ac:	f1b1 5f40 	cmp.w	r1, #805306368	@ 0x30000000
9000d7b0:	f43f abb5 	beq.w	9000cf1e <HAL_RCCEx_PeriphCLKConfig+0x41a>
      status = ret;
9000d7b4:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000d7b6:	4635      	mov	r5, r6
9000d7b8:	f7ff bbbc 	b.w	9000cf34 <HAL_RCCEx_PeriphCLKConfig+0x430>
    switch (PeriphClkInit->Spi45ClockSelection)
9000d7bc:	f421 3080 	bic.w	r0, r1, #65536	@ 0x10000
9000d7c0:	f5b0 2f80 	cmp.w	r0, #262144	@ 0x40000
9000d7c4:	f43f aab8 	beq.w	9000cd38 <HAL_RCCEx_PeriphCLKConfig+0x234>
9000d7c8:	f5b1 3f40 	cmp.w	r1, #196608	@ 0x30000
9000d7cc:	f43f aab4 	beq.w	9000cd38 <HAL_RCCEx_PeriphCLKConfig+0x234>
      status = ret;
9000d7d0:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000d7d2:	4635      	mov	r5, r6
9000d7d4:	f7ff baba 	b.w	9000cd4c <HAL_RCCEx_PeriphCLKConfig+0x248>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000d7d8:	f421 5000 	bic.w	r0, r1, #8192	@ 0x2000
9000d7dc:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000d7e0:	f43f abef 	beq.w	9000cfc2 <HAL_RCCEx_PeriphCLKConfig+0x4be>
9000d7e4:	f5b1 4fc0 	cmp.w	r1, #24576	@ 0x6000
9000d7e8:	f43f abeb 	beq.w	9000cfc2 <HAL_RCCEx_PeriphCLKConfig+0x4be>
      status = ret;
9000d7ec:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000d7ee:	4635      	mov	r5, r6
9000d7f0:	f7ff bbf2 	b.w	9000cfd8 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
    switch (PeriphClkInit->Spi6ClockSelection)
9000d7f4:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
9000d7f8:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
9000d7fc:	f43f aac4 	beq.w	9000cd88 <HAL_RCCEx_PeriphCLKConfig+0x284>
9000d800:	f1b1 5f40 	cmp.w	r1, #805306368	@ 0x30000000
9000d804:	f43f aac0 	beq.w	9000cd88 <HAL_RCCEx_PeriphCLKConfig+0x284>
      status = ret;
9000d808:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000d80a:	4635      	mov	r5, r6
9000d80c:	f7ff bac7 	b.w	9000cd9e <HAL_RCCEx_PeriphCLKConfig+0x29a>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000d810:	f421 6080 	bic.w	r0, r1, #1024	@ 0x400
9000d814:	f5b0 5f80 	cmp.w	r0, #4096	@ 0x1000
9000d818:	f43f abaa 	beq.w	9000cf70 <HAL_RCCEx_PeriphCLKConfig+0x46c>
9000d81c:	f5b1 6f40 	cmp.w	r1, #3072	@ 0xc00
9000d820:	f43f aba6 	beq.w	9000cf70 <HAL_RCCEx_PeriphCLKConfig+0x46c>
      status = ret;
9000d824:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000d826:	4635      	mov	r5, r6
9000d828:	f7ff bbad 	b.w	9000cf86 <HAL_RCCEx_PeriphCLKConfig+0x482>
    return HAL_ERROR;
9000d82c:	2501      	movs	r5, #1
9000d82e:	e4e2      	b.n	9000d1f6 <HAL_RCCEx_PeriphCLKConfig+0x6f2>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000d830:	0691      	lsls	r1, r2, #26
9000d832:	d5b2      	bpl.n	9000d79a <HAL_RCCEx_PeriphCLKConfig+0xc96>
    return HAL_ERROR;
9000d834:	2501      	movs	r5, #1
9000d836:	e4f2      	b.n	9000d21e <HAL_RCCEx_PeriphCLKConfig+0x71a>
    return HAL_ERROR;
9000d838:	2501      	movs	r5, #1
9000d83a:	e4a9      	b.n	9000d190 <HAL_RCCEx_PeriphCLKConfig+0x68c>
9000d83c:	2501      	movs	r5, #1
9000d83e:	e4b8      	b.n	9000d1b2 <HAL_RCCEx_PeriphCLKConfig+0x6ae>
9000d840:	2501      	movs	r5, #1
9000d842:	e4c7      	b.n	9000d1d4 <HAL_RCCEx_PeriphCLKConfig+0x6d0>
    switch (PeriphClkInit->Spi123ClockSelection)
9000d844:	f5b1 5f40 	cmp.w	r1, #12288	@ 0x3000
9000d848:	f43f aa4f 	beq.w	9000ccea <HAL_RCCEx_PeriphCLKConfig+0x1e6>
9000d84c:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
9000d850:	f43f aa4b 	beq.w	9000ccea <HAL_RCCEx_PeriphCLKConfig+0x1e6>
      status = ret;
9000d854:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000d856:	4635      	mov	r5, r6
9000d858:	f7ff ba51 	b.w	9000ccfe <HAL_RCCEx_PeriphCLKConfig+0x1fa>
    switch (PeriphClkInit->Sai4BClockSelection)
9000d85c:	f1b1 7f40 	cmp.w	r1, #50331648	@ 0x3000000
9000d860:	f43f a9fe 	beq.w	9000cc60 <HAL_RCCEx_PeriphCLKConfig+0x15c>
9000d864:	f1b1 6f80 	cmp.w	r1, #67108864	@ 0x4000000
9000d868:	f43f a9fa 	beq.w	9000cc60 <HAL_RCCEx_PeriphCLKConfig+0x15c>
      status = ret;
9000d86c:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000d86e:	4635      	mov	r5, r6
9000d870:	f7ff ba01 	b.w	9000cc76 <HAL_RCCEx_PeriphCLKConfig+0x172>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000d874:	f5b1 1f40 	cmp.w	r1, #3145728	@ 0x300000
9000d878:	f43f a96b 	beq.w	9000cb52 <HAL_RCCEx_PeriphCLKConfig+0x4e>
        ret = HAL_ERROR;
9000d87c:	2601      	movs	r6, #1
9000d87e:	f7ff b96f 	b.w	9000cb60 <HAL_RCCEx_PeriphCLKConfig+0x5c>
    switch (PeriphClkInit->Sai4AClockSelection)
9000d882:	f5b1 0fc0 	cmp.w	r1, #6291456	@ 0x600000
9000d886:	f43f a9c0 	beq.w	9000cc0a <HAL_RCCEx_PeriphCLKConfig+0x106>
9000d88a:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
9000d88e:	f43f a9bc 	beq.w	9000cc0a <HAL_RCCEx_PeriphCLKConfig+0x106>
      status = ret;
9000d892:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000d894:	4635      	mov	r5, r6
9000d896:	f7ff b9c3 	b.w	9000cc20 <HAL_RCCEx_PeriphCLKConfig+0x11c>
    switch (PeriphClkInit->Sai23ClockSelection)
9000d89a:	29c0      	cmp	r1, #192	@ 0xc0
9000d89c:	f43f a98b 	beq.w	9000cbb6 <HAL_RCCEx_PeriphCLKConfig+0xb2>
9000d8a0:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
9000d8a4:	f43f a987 	beq.w	9000cbb6 <HAL_RCCEx_PeriphCLKConfig+0xb2>
      status = ret;
9000d8a8:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000d8aa:	4635      	mov	r5, r6
9000d8ac:	f7ff b98d 	b.w	9000cbca <HAL_RCCEx_PeriphCLKConfig+0xc6>
    switch (PeriphClkInit->QspiClockSelection)
9000d8b0:	2930      	cmp	r1, #48	@ 0x30
9000d8b2:	f43f a9f1 	beq.w	9000cc98 <HAL_RCCEx_PeriphCLKConfig+0x194>
      status = ret;
9000d8b6:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000d8b8:	4635      	mov	r5, r6
9000d8ba:	f7ff b9f7 	b.w	9000ccac <HAL_RCCEx_PeriphCLKConfig+0x1a8>
        ret = HAL_TIMEOUT;
9000d8be:	2503      	movs	r5, #3
      status = ret;
9000d8c0:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000d8c2:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d8c6:	f7ff ba95 	b.w	9000cdf4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000d8ca:	6863      	ldr	r3, [r4, #4]
9000d8cc:	069a      	lsls	r2, r3, #26
9000d8ce:	f57f af64 	bpl.w	9000d79a <HAL_RCCEx_PeriphCLKConfig+0xc96>
9000d8d2:	4605      	mov	r5, r0
9000d8d4:	e4a3      	b.n	9000d21e <HAL_RCCEx_PeriphCLKConfig+0x71a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d8d6:	492b      	ldr	r1, [pc, #172]	@ (9000d984 <HAL_RCCEx_PeriphCLKConfig+0xe80>)
9000d8d8:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d8da:	f001 0103 	and.w	r1, r1, #3
9000d8de:	2903      	cmp	r1, #3
9000d8e0:	f43f aa6b 	beq.w	9000cdba <HAL_RCCEx_PeriphCLKConfig+0x2b6>
9000d8e4:	2101      	movs	r1, #1
9000d8e6:	f104 0008 	add.w	r0, r4, #8
9000d8ea:	f7ff f82b 	bl	9000c944 <RCCEx_PLL2_Config.part.0>
9000d8ee:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000d8f0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d8f4:	2d00      	cmp	r5, #0
9000d8f6:	f47f ad8f 	bne.w	9000d418 <HAL_RCCEx_PeriphCLKConfig+0x914>
9000d8fa:	e4bf      	b.n	9000d27c <HAL_RCCEx_PeriphCLKConfig+0x778>
      status = ret;
9000d8fc:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000d8fe:	4635      	mov	r5, r6
9000d900:	f7ff baef 	b.w	9000cee2 <HAL_RCCEx_PeriphCLKConfig+0x3de>
      status = ret;
9000d904:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000d906:	4635      	mov	r5, r6
9000d908:	f7ff bac7 	b.w	9000ce9a <HAL_RCCEx_PeriphCLKConfig+0x396>
        status = HAL_ERROR;
9000d90c:	2601      	movs	r6, #1
9000d90e:	f7ff bb79 	b.w	9000d004 <HAL_RCCEx_PeriphCLKConfig+0x500>
        status = HAL_ERROR;
9000d912:	2601      	movs	r6, #1
9000d914:	f7ff bb68 	b.w	9000cfe8 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000d918:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000d91c:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d920:	f7ff bb62 	b.w	9000cfe8 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000d924:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
        status = HAL_ERROR;
9000d928:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000d92a:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d92e:	f7ff bb69 	b.w	9000d004 <HAL_RCCEx_PeriphCLKConfig+0x500>
      status = ret;
9000d932:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000d934:	4635      	mov	r5, r6
9000d936:	f7ff ba5a 	b.w	9000cdee <HAL_RCCEx_PeriphCLKConfig+0x2ea>
        tickstart = HAL_GetTick();
9000d93a:	f7fa fc23 	bl	90008184 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000d93e:	f8df 8044 	ldr.w	r8, [pc, #68]	@ 9000d984 <HAL_RCCEx_PeriphCLKConfig+0xe80>
        tickstart = HAL_GetTick();
9000d942:	4607      	mov	r7, r0
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000d944:	f241 3988 	movw	r9, #5000	@ 0x1388
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000d948:	e004      	b.n	9000d954 <HAL_RCCEx_PeriphCLKConfig+0xe50>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000d94a:	f7fa fc1b 	bl	90008184 <HAL_GetTick>
9000d94e:	1bc0      	subs	r0, r0, r7
9000d950:	4548      	cmp	r0, r9
9000d952:	d810      	bhi.n	9000d976 <HAL_RCCEx_PeriphCLKConfig+0xe72>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000d954:	f8d8 3070 	ldr.w	r3, [r8, #112]	@ 0x70
9000d958:	079b      	lsls	r3, r3, #30
9000d95a:	d5f6      	bpl.n	9000d94a <HAL_RCCEx_PeriphCLKConfig+0xe46>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000d95c:	f8d4 30b4 	ldr.w	r3, [r4, #180]	@ 0xb4
9000d960:	e4f0      	b.n	9000d344 <HAL_RCCEx_PeriphCLKConfig+0x840>
9000d962:	4808      	ldr	r0, [pc, #32]	@ (9000d984 <HAL_RCCEx_PeriphCLKConfig+0xe80>)
9000d964:	4a08      	ldr	r2, [pc, #32]	@ (9000d988 <HAL_RCCEx_PeriphCLKConfig+0xe84>)
9000d966:	6901      	ldr	r1, [r0, #16]
9000d968:	ea02 1213 	and.w	r2, r2, r3, lsr #4
9000d96c:	f421 517c 	bic.w	r1, r1, #16128	@ 0x3f00
9000d970:	430a      	orrs	r2, r1
9000d972:	6102      	str	r2, [r0, #16]
9000d974:	e4f1      	b.n	9000d35a <HAL_RCCEx_PeriphCLKConfig+0x856>
        status = ret;
9000d976:	2603      	movs	r6, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000d978:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d97c:	4635      	mov	r5, r6
9000d97e:	f7ff ba39 	b.w	9000cdf4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
9000d982:	bf00      	nop
9000d984:	58024400 	.word	0x58024400
9000d988:	00ffffcf 	.word	0x00ffffcf

9000d98c <HAL_RCCEx_GetD3PCLK1Freq>:
{
9000d98c:	b508      	push	{r3, lr}
  return (HAL_RCC_GetHCLKFreq() >> (D1CorePrescTable[(RCC->D3CFGR & RCC_D3CFGR_D3PPRE) >> RCC_D3CFGR_D3PPRE_Pos] & 0x1FU));
9000d98e:	f7fe fedd 	bl	9000c74c <HAL_RCC_GetHCLKFreq>
9000d992:	4b05      	ldr	r3, [pc, #20]	@ (9000d9a8 <HAL_RCCEx_GetD3PCLK1Freq+0x1c>)
9000d994:	4a05      	ldr	r2, [pc, #20]	@ (9000d9ac <HAL_RCCEx_GetD3PCLK1Freq+0x20>)
9000d996:	6a1b      	ldr	r3, [r3, #32]
9000d998:	f3c3 1302 	ubfx	r3, r3, #4, #3
9000d99c:	5cd3      	ldrb	r3, [r2, r3]
9000d99e:	f003 031f 	and.w	r3, r3, #31
}
9000d9a2:	40d8      	lsrs	r0, r3
9000d9a4:	bd08      	pop	{r3, pc}
9000d9a6:	bf00      	nop
9000d9a8:	58024400 	.word	0x58024400
9000d9ac:	90031604 	.word	0x90031604

9000d9b0 <HAL_RCCEx_GetPLL2ClockFreq>:
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000d9b0:	4a47      	ldr	r2, [pc, #284]	@ (9000dad0 <HAL_RCCEx_GetPLL2ClockFreq+0x120>)
{
9000d9b2:	b470      	push	{r4, r5, r6}
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000d9b4:	6a94      	ldr	r4, [r2, #40]	@ 0x28
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2) >> 12);
9000d9b6:	6a95      	ldr	r5, [r2, #40]	@ 0x28
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
9000d9b8:	6ad6      	ldr	r6, [r2, #44]	@ 0x2c
  if (pll2m != 0U)
9000d9ba:	f415 3f7c 	tst.w	r5, #258048	@ 0x3f000
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2) >> 12);
9000d9be:	f3c5 3305 	ubfx	r3, r5, #12, #6
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
9000d9c2:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
  if (pll2m != 0U)
9000d9c4:	d05b      	beq.n	9000da7e <HAL_RCCEx_GetPLL2ClockFreq+0xce>
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
9000d9c6:	f3c1 01cc 	ubfx	r1, r1, #3, #13
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
9000d9ca:	f3c6 1600 	ubfx	r6, r6, #4, #1
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000d9ce:	f004 0403 	and.w	r4, r4, #3
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000d9d2:	ee07 3a90 	vmov	s15, r3
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
9000d9d6:	fb06 f101 	mul.w	r1, r6, r1
    switch (pllsource)
9000d9da:	2c01      	cmp	r4, #1
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000d9dc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000d9e0:	ee06 1a90 	vmov	s13, r1
9000d9e4:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
    switch (pllsource)
9000d9e8:	d003      	beq.n	9000d9f2 <HAL_RCCEx_GetPLL2ClockFreq+0x42>
9000d9ea:	2c02      	cmp	r4, #2
9000d9ec:	d06a      	beq.n	9000dac4 <HAL_RCCEx_GetPLL2ClockFreq+0x114>
9000d9ee:	2c00      	cmp	r4, #0
9000d9f0:	d04a      	beq.n	9000da88 <HAL_RCCEx_GetPLL2ClockFreq+0xd8>
        pll2vco = ((float_t)CSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000d9f2:	eddf 7a38 	vldr	s15, [pc, #224]	@ 9000dad4 <HAL_RCCEx_GetPLL2ClockFreq+0x124>
9000d9f6:	ee87 6a87 	vdiv.f32	s12, s15, s14
9000d9fa:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000d9fc:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000da00:	ee07 3a90 	vmov	s15, r3
9000da04:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000da08:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000da0c:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000da10:	ee77 7aa5 	vadd.f32	s15, s15, s11
9000da14:	ee67 7a86 	vmul.f32	s15, s15, s12
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >> 9)  + (float_t)1)) ;
9000da18:	4a2d      	ldr	r2, [pc, #180]	@ (9000dad0 <HAL_RCCEx_GetPLL2ClockFreq+0x120>)
9000da1a:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
9000da1e:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000da20:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000da24:	ee07 3a10 	vmov	s14, r3
9000da28:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
}
9000da2c:	bc70      	pop	{r4, r5, r6}
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >> 9)  + (float_t)1)) ;
9000da2e:	ee37 7a06 	vadd.f32	s14, s14, s12
9000da32:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000da36:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000da3a:	edc0 6a00 	vstr	s13, [r0]
    PLL2_Clocks->PLL2_Q_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_Q2) >> 16) + (float_t)1)) ;
9000da3e:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000da40:	f3c3 4306 	ubfx	r3, r3, #16, #7
9000da44:	ee07 3a10 	vmov	s14, r3
9000da48:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000da4c:	ee37 7a06 	vadd.f32	s14, s14, s12
9000da50:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000da54:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000da58:	edc0 6a01 	vstr	s13, [r0, #4]
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_R2) >> 24) + (float_t)1)) ;
9000da5c:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000da5e:	f3c3 6306 	ubfx	r3, r3, #24, #7
9000da62:	ee06 3a90 	vmov	s13, r3
9000da66:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000da6a:	ee76 6a86 	vadd.f32	s13, s13, s12
9000da6e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000da72:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000da76:	ee17 3a90 	vmov	r3, s15
9000da7a:	6083      	str	r3, [r0, #8]
}
9000da7c:	4770      	bx	lr
9000da7e:	bc70      	pop	{r4, r5, r6}
    PLL2_Clocks->PLL2_P_Frequency = 0U;
9000da80:	e9c0 3300 	strd	r3, r3, [r0]
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_R2) >> 24) + (float_t)1)) ;
9000da84:	6083      	str	r3, [r0, #8]
}
9000da86:	4770      	bx	lr
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000da88:	6813      	ldr	r3, [r2, #0]
9000da8a:	069b      	lsls	r3, r3, #26
9000da8c:	d51d      	bpl.n	9000daca <HAL_RCCEx_GetPLL2ClockFreq+0x11a>
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000da8e:	6814      	ldr	r4, [r2, #0]
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000da90:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000da94:	6b93      	ldr	r3, [r2, #56]	@ 0x38
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000da96:	4910      	ldr	r1, [pc, #64]	@ (9000dad8 <HAL_RCCEx_GetPLL2ClockFreq+0x128>)
9000da98:	f3c4 02c1 	ubfx	r2, r4, #3, #2
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000da9c:	f3c3 0308 	ubfx	r3, r3, #0, #9
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000daa0:	40d1      	lsrs	r1, r2
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000daa2:	ee07 3a90 	vmov	s15, r3
9000daa6:	ee06 1a10 	vmov	s12, r1
9000daaa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000daae:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000dab2:	ee77 6aa6 	vadd.f32	s13, s15, s13
9000dab6:	eec6 7a07 	vdiv.f32	s15, s12, s14
9000daba:	ee36 7aa5 	vadd.f32	s14, s13, s11
9000dabe:	ee67 7a87 	vmul.f32	s15, s15, s14
9000dac2:	e7a9      	b.n	9000da18 <HAL_RCCEx_GetPLL2ClockFreq+0x68>
        pll2vco = ((float_t)HSE_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000dac4:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000dadc <HAL_RCCEx_GetPLL2ClockFreq+0x12c>
9000dac8:	e795      	b.n	9000d9f6 <HAL_RCCEx_GetPLL2ClockFreq+0x46>
          pll2vco = ((float_t)HSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000daca:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000dae0 <HAL_RCCEx_GetPLL2ClockFreq+0x130>
9000dace:	e792      	b.n	9000d9f6 <HAL_RCCEx_GetPLL2ClockFreq+0x46>
9000dad0:	58024400 	.word	0x58024400
9000dad4:	4a742400 	.word	0x4a742400
9000dad8:	03d09000 	.word	0x03d09000
9000dadc:	4bbebc20 	.word	0x4bbebc20
9000dae0:	4c742400 	.word	0x4c742400

9000dae4 <HAL_RCCEx_GetPLL3ClockFreq>:
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000dae4:	4a47      	ldr	r2, [pc, #284]	@ (9000dc04 <HAL_RCCEx_GetPLL3ClockFreq+0x120>)
{
9000dae6:	b470      	push	{r4, r5, r6}
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000dae8:	6a94      	ldr	r4, [r2, #40]	@ 0x28
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3) >> 20)  ;
9000daea:	6a95      	ldr	r5, [r2, #40]	@ 0x28
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
9000daec:	6ad6      	ldr	r6, [r2, #44]	@ 0x2c
  if (pll3m != 0U)
9000daee:	f015 7f7c 	tst.w	r5, #66060288	@ 0x3f00000
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3) >> 20)  ;
9000daf2:	f3c5 5305 	ubfx	r3, r5, #20, #6
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
9000daf6:	6c51      	ldr	r1, [r2, #68]	@ 0x44
  if (pll3m != 0U)
9000daf8:	d05b      	beq.n	9000dbb2 <HAL_RCCEx_GetPLL3ClockFreq+0xce>
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
9000dafa:	f3c1 01cc 	ubfx	r1, r1, #3, #13
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
9000dafe:	f3c6 2600 	ubfx	r6, r6, #8, #1
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000db02:	f004 0403 	and.w	r4, r4, #3
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000db06:	ee07 3a90 	vmov	s15, r3
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
9000db0a:	fb06 f101 	mul.w	r1, r6, r1
    switch (pllsource)
9000db0e:	2c01      	cmp	r4, #1
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000db10:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000db14:	ee06 1a90 	vmov	s13, r1
9000db18:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
    switch (pllsource)
9000db1c:	d003      	beq.n	9000db26 <HAL_RCCEx_GetPLL3ClockFreq+0x42>
9000db1e:	2c02      	cmp	r4, #2
9000db20:	d06a      	beq.n	9000dbf8 <HAL_RCCEx_GetPLL3ClockFreq+0x114>
9000db22:	2c00      	cmp	r4, #0
9000db24:	d04a      	beq.n	9000dbbc <HAL_RCCEx_GetPLL3ClockFreq+0xd8>
        pll3vco = ((float_t)CSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000db26:	eddf 7a38 	vldr	s15, [pc, #224]	@ 9000dc08 <HAL_RCCEx_GetPLL3ClockFreq+0x124>
9000db2a:	ee87 6a87 	vdiv.f32	s12, s15, s14
9000db2e:	6c13      	ldr	r3, [r2, #64]	@ 0x40
9000db30:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000db34:	ee07 3a90 	vmov	s15, r3
9000db38:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000db3c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000db40:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000db44:	ee77 7aa5 	vadd.f32	s15, s15, s11
9000db48:	ee67 7a86 	vmul.f32	s15, s15, s12
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >> 9)  + (float_t)1)) ;
9000db4c:	4a2d      	ldr	r2, [pc, #180]	@ (9000dc04 <HAL_RCCEx_GetPLL3ClockFreq+0x120>)
9000db4e:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
9000db52:	6c13      	ldr	r3, [r2, #64]	@ 0x40
9000db54:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000db58:	ee07 3a10 	vmov	s14, r3
9000db5c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
}
9000db60:	bc70      	pop	{r4, r5, r6}
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >> 9)  + (float_t)1)) ;
9000db62:	ee37 7a06 	vadd.f32	s14, s14, s12
9000db66:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000db6a:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000db6e:	edc0 6a00 	vstr	s13, [r0]
    PLL3_Clocks->PLL3_Q_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_Q3) >> 16) + (float_t)1)) ;
9000db72:	6c13      	ldr	r3, [r2, #64]	@ 0x40
9000db74:	f3c3 4306 	ubfx	r3, r3, #16, #7
9000db78:	ee07 3a10 	vmov	s14, r3
9000db7c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000db80:	ee37 7a06 	vadd.f32	s14, s14, s12
9000db84:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000db88:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000db8c:	edc0 6a01 	vstr	s13, [r0, #4]
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_R3) >> 24) + (float_t)1)) ;
9000db90:	6c13      	ldr	r3, [r2, #64]	@ 0x40
9000db92:	f3c3 6306 	ubfx	r3, r3, #24, #7
9000db96:	ee06 3a90 	vmov	s13, r3
9000db9a:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000db9e:	ee76 6a86 	vadd.f32	s13, s13, s12
9000dba2:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000dba6:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000dbaa:	ee17 3a90 	vmov	r3, s15
9000dbae:	6083      	str	r3, [r0, #8]
}
9000dbb0:	4770      	bx	lr
9000dbb2:	bc70      	pop	{r4, r5, r6}
    PLL3_Clocks->PLL3_P_Frequency = 0U;
9000dbb4:	e9c0 3300 	strd	r3, r3, [r0]
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_R3) >> 24) + (float_t)1)) ;
9000dbb8:	6083      	str	r3, [r0, #8]
}
9000dbba:	4770      	bx	lr
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000dbbc:	6813      	ldr	r3, [r2, #0]
9000dbbe:	069b      	lsls	r3, r3, #26
9000dbc0:	d51d      	bpl.n	9000dbfe <HAL_RCCEx_GetPLL3ClockFreq+0x11a>
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000dbc2:	6814      	ldr	r4, [r2, #0]
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000dbc4:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000dbc8:	6c13      	ldr	r3, [r2, #64]	@ 0x40
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000dbca:	4910      	ldr	r1, [pc, #64]	@ (9000dc0c <HAL_RCCEx_GetPLL3ClockFreq+0x128>)
9000dbcc:	f3c4 02c1 	ubfx	r2, r4, #3, #2
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000dbd0:	f3c3 0308 	ubfx	r3, r3, #0, #9
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000dbd4:	40d1      	lsrs	r1, r2
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000dbd6:	ee07 3a90 	vmov	s15, r3
9000dbda:	ee06 1a10 	vmov	s12, r1
9000dbde:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000dbe2:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000dbe6:	ee77 6aa6 	vadd.f32	s13, s15, s13
9000dbea:	eec6 7a07 	vdiv.f32	s15, s12, s14
9000dbee:	ee36 7aa5 	vadd.f32	s14, s13, s11
9000dbf2:	ee67 7a87 	vmul.f32	s15, s15, s14
9000dbf6:	e7a9      	b.n	9000db4c <HAL_RCCEx_GetPLL3ClockFreq+0x68>
        pll3vco = ((float_t)HSE_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000dbf8:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000dc10 <HAL_RCCEx_GetPLL3ClockFreq+0x12c>
9000dbfc:	e795      	b.n	9000db2a <HAL_RCCEx_GetPLL3ClockFreq+0x46>
          pll3vco = ((float_t)HSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000dbfe:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000dc14 <HAL_RCCEx_GetPLL3ClockFreq+0x130>
9000dc02:	e792      	b.n	9000db2a <HAL_RCCEx_GetPLL3ClockFreq+0x46>
9000dc04:	58024400 	.word	0x58024400
9000dc08:	4a742400 	.word	0x4a742400
9000dc0c:	03d09000 	.word	0x03d09000
9000dc10:	4bbebc20 	.word	0x4bbebc20
9000dc14:	4c742400 	.word	0x4c742400

9000dc18 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
9000dc18:	b318      	cbz	r0, 9000dc62 <HAL_SDRAM_Init+0x4a>
{
9000dc1a:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
9000dc1c:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
9000dc20:	4604      	mov	r4, r0
9000dc22:	460d      	mov	r5, r1
9000dc24:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000dc28:	b1b3      	cbz	r3, 9000dc58 <HAL_SDRAM_Init+0x40>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000dc2a:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
9000dc2c:	2302      	movs	r3, #2
9000dc2e:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000dc32:	f851 0b04 	ldr.w	r0, [r1], #4
9000dc36:	f001 fcc1 	bl	9000f5bc <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
9000dc3a:	6862      	ldr	r2, [r4, #4]
9000dc3c:	4629      	mov	r1, r5
9000dc3e:	6820      	ldr	r0, [r4, #0]
9000dc40:	f001 fcf2 	bl	9000f628 <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
9000dc44:	4a08      	ldr	r2, [pc, #32]	@ (9000dc68 <HAL_SDRAM_Init+0x50>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
9000dc46:	2101      	movs	r1, #1

  return HAL_OK;
9000dc48:	2000      	movs	r0, #0
  __FMC_ENABLE();
9000dc4a:	6813      	ldr	r3, [r2, #0]
9000dc4c:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
9000dc50:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
9000dc52:	f884 102c 	strb.w	r1, [r4, #44]	@ 0x2c
}
9000dc56:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
9000dc58:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d
    HAL_SDRAM_MspInit(hsdram);
9000dc5c:	f7f6 fc72 	bl	90004544 <HAL_SDRAM_MspInit>
9000dc60:	e7e3      	b.n	9000dc2a <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
9000dc62:	2001      	movs	r0, #1
}
9000dc64:	4770      	bx	lr
9000dc66:	bf00      	nop
9000dc68:	52004000 	.word	0x52004000

9000dc6c <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
9000dc6c:	b510      	push	{r4, lr}
9000dc6e:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
9000dc70:	f7f6 fce4 	bl	9000463c <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
9000dc74:	e9d4 0100 	ldrd	r0, r1, [r4]
9000dc78:	f001 fd14 	bl	9000f6a4 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
9000dc7c:	2000      	movs	r0, #0
9000dc7e:	f884 002c 	strb.w	r0, [r4, #44]	@ 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
9000dc82:	f884 002d 	strb.w	r0, [r4, #45]	@ 0x2d

  return HAL_OK;
}
9000dc86:	bd10      	pop	{r4, pc}

9000dc88 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
9000dc88:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000dc8a:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
9000dc8e:	4605      	mov	r5, r0

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
9000dc90:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000dc92:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
9000dc94:	d004      	beq.n	9000dca0 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
9000dc96:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
9000dc9a:	2c01      	cmp	r4, #1
9000dc9c:	d001      	beq.n	9000dca2 <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
9000dc9e:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000dca0:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000dca2:	2302      	movs	r3, #2
9000dca4:	460e      	mov	r6, r1
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000dca6:	6828      	ldr	r0, [r5, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000dca8:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000dcac:	f001 fd0e 	bl	9000f6cc <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
9000dcb0:	6833      	ldr	r3, [r6, #0]
9000dcb2:	2b02      	cmp	r3, #2
9000dcb4:	d003      	beq.n	9000dcbe <HAL_SDRAM_SendCommand+0x36>
      hsdram->State = HAL_SDRAM_STATE_READY;
9000dcb6:	f885 402c 	strb.w	r4, [r5, #44]	@ 0x2c
  return HAL_OK;
9000dcba:	2000      	movs	r0, #0
}
9000dcbc:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000dcbe:	2305      	movs	r3, #5
9000dcc0:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
9000dcc4:	e7f9      	b.n	9000dcba <HAL_SDRAM_SendCommand+0x32>
9000dcc6:	bf00      	nop

9000dcc8 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
9000dcc8:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000dcca:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
9000dcce:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000dcd0:	2b02      	cmp	r3, #2
9000dcd2:	b2d8      	uxtb	r0, r3
9000dcd4:	d005      	beq.n	9000dce2 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
9000dcd6:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
9000dcda:	2b01      	cmp	r3, #1
9000dcdc:	b2dd      	uxtb	r5, r3
9000dcde:	d001      	beq.n	9000dce4 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
9000dce0:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000dce2:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000dce4:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000dce6:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000dce8:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000dcec:	f001 fd08 	bl	9000f700 <FMC_SDRAM_ProgramRefreshRate>
  return HAL_OK;
9000dcf0:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
9000dcf2:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
}
9000dcf6:	bd38      	pop	{r3, r4, r5, pc}

9000dcf8 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
9000dcf8:	4770      	bx	lr
9000dcfa:	bf00      	nop

9000dcfc <HAL_TIM_Base_Init>:
  if (htim == NULL)
9000dcfc:	2800      	cmp	r0, #0
9000dcfe:	f000 8095 	beq.w	9000de2c <HAL_TIM_Base_Init+0x130>
{
9000dd02:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
9000dd04:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000dd08:	4604      	mov	r4, r0
9000dd0a:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000dd0e:	2b00      	cmp	r3, #0
9000dd10:	f000 8087 	beq.w	9000de22 <HAL_TIM_Base_Init+0x126>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
9000dd14:	6823      	ldr	r3, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000dd16:	2202      	movs	r2, #2
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000dd18:	4945      	ldr	r1, [pc, #276]	@ (9000de30 <HAL_TIM_Base_Init+0x134>)
9000dd1a:	4d46      	ldr	r5, [pc, #280]	@ (9000de34 <HAL_TIM_Base_Init+0x138>)
9000dd1c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
9000dd20:	eba3 0101 	sub.w	r1, r3, r1
  htim->State = HAL_TIM_STATE_BUSY;
9000dd24:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000dd28:	eba3 0e05 	sub.w	lr, r3, r5
  tmpcr1 = TIMx->CR1;
9000dd2c:	681a      	ldr	r2, [r3, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000dd2e:	fab1 f181 	clz	r1, r1
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000dd32:	69a0      	ldr	r0, [r4, #24]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000dd34:	fabe fe8e 	clz	lr, lr

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
9000dd38:	68e7      	ldr	r7, [r4, #12]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000dd3a:	ea4f 1151 	mov.w	r1, r1, lsr #5

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
9000dd3e:	6866      	ldr	r6, [r4, #4]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000dd40:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9000dd44:	d01f      	beq.n	9000dd86 <HAL_TIM_Base_Init+0x8a>
9000dd46:	b9f1      	cbnz	r1, 9000dd86 <HAL_TIM_Base_Init+0x8a>
9000dd48:	f8df c0f8 	ldr.w	ip, [pc, #248]	@ 9000de44 <HAL_TIM_Base_Init+0x148>
9000dd4c:	4563      	cmp	r3, ip
9000dd4e:	d050      	beq.n	9000ddf2 <HAL_TIM_Base_Init+0xf6>
9000dd50:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
9000dd54:	4563      	cmp	r3, ip
9000dd56:	d04c      	beq.n	9000ddf2 <HAL_TIM_Base_Init+0xf6>
9000dd58:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
9000dd5c:	4563      	cmp	r3, ip
9000dd5e:	d012      	beq.n	9000dd86 <HAL_TIM_Base_Init+0x8a>
9000dd60:	f1be 0f00 	cmp.w	lr, #0
9000dd64:	d10f      	bne.n	9000dd86 <HAL_TIM_Base_Init+0x8a>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000dd66:	4d34      	ldr	r5, [pc, #208]	@ (9000de38 <HAL_TIM_Base_Init+0x13c>)
9000dd68:	4934      	ldr	r1, [pc, #208]	@ (9000de3c <HAL_TIM_Base_Init+0x140>)
9000dd6a:	428b      	cmp	r3, r1
9000dd6c:	bf18      	it	ne
9000dd6e:	42ab      	cmpne	r3, r5
9000dd70:	d043      	beq.n	9000ddfa <HAL_TIM_Base_Init+0xfe>
9000dd72:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
9000dd76:	428b      	cmp	r3, r1
9000dd78:	d03f      	beq.n	9000ddfa <HAL_TIM_Base_Init+0xfe>
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000dd7a:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
9000dd7e:	62df      	str	r7, [r3, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000dd80:	629e      	str	r6, [r3, #40]	@ 0x28
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000dd82:	4310      	orrs	r0, r2

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000dd84:	e014      	b.n	9000ddb0 <HAL_TIM_Base_Init+0xb4>
    tmpcr1 |= Structure->CounterMode;
9000dd86:	68a5      	ldr	r5, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000dd88:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000dd8c:	f8d4 c010 	ldr.w	ip, [r4, #16]
    tmpcr1 |= Structure->CounterMode;
9000dd90:	432a      	orrs	r2, r5
  TIMx->ARR = (uint32_t)Structure->Period ;
9000dd92:	62df      	str	r7, [r3, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000dd94:	629e      	str	r6, [r3, #40]	@ 0x28
    tmpcr1 &= ~TIM_CR1_CKD;
9000dd96:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000dd9a:	ea42 020c 	orr.w	r2, r2, ip
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000dd9e:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000dda2:	4310      	orrs	r0, r2
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000dda4:	b911      	cbnz	r1, 9000ddac <HAL_TIM_Base_Init+0xb0>
9000dda6:	f1be 0f00 	cmp.w	lr, #0
9000ddaa:	d02f      	beq.n	9000de0c <HAL_TIM_Base_Init+0x110>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
9000ddac:	6962      	ldr	r2, [r4, #20]
9000ddae:	631a      	str	r2, [r3, #48]	@ 0x30
  }

  /* Disable Update Event (UEV) with Update Generation (UG)
     by changing Update Request Source (URS) to avoid Update flag (UIF) */
  SET_BIT(TIMx->CR1, TIM_CR1_URS);
9000ddb0:	6819      	ldr	r1, [r3, #0]

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
9000ddb2:	2201      	movs	r2, #1
  SET_BIT(TIMx->CR1, TIM_CR1_URS);
9000ddb4:	f041 0104 	orr.w	r1, r1, #4
9000ddb8:	6019      	str	r1, [r3, #0]
  TIMx->EGR = TIM_EGR_UG;
9000ddba:	615a      	str	r2, [r3, #20]

  TIMx->CR1 = tmpcr1;
9000ddbc:	6018      	str	r0, [r3, #0]
  return HAL_OK;
9000ddbe:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000ddc0:	f884 2048 	strb.w	r2, [r4, #72]	@ 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000ddc4:	f884 203e 	strb.w	r2, [r4, #62]	@ 0x3e
9000ddc8:	f884 203f 	strb.w	r2, [r4, #63]	@ 0x3f
9000ddcc:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
9000ddd0:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
9000ddd4:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
9000ddd8:	f884 2043 	strb.w	r2, [r4, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000dddc:	f884 2044 	strb.w	r2, [r4, #68]	@ 0x44
9000dde0:	f884 2045 	strb.w	r2, [r4, #69]	@ 0x45
9000dde4:	f884 2046 	strb.w	r2, [r4, #70]	@ 0x46
9000dde8:	f884 2047 	strb.w	r2, [r4, #71]	@ 0x47
  htim->State = HAL_TIM_STATE_READY;
9000ddec:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
}
9000ddf0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000ddf2:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
9000ddf6:	68a1      	ldr	r1, [r4, #8]
9000ddf8:	430a      	orrs	r2, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000ddfa:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000ddfc:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
  TIMx->ARR = (uint32_t)Structure->Period ;
9000de00:	62df      	str	r7, [r3, #44]	@ 0x2c
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000de02:	430a      	orrs	r2, r1
  TIMx->PSC = Structure->Prescaler;
9000de04:	629e      	str	r6, [r3, #40]	@ 0x28
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000de06:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000de0a:	4310      	orrs	r0, r2
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000de0c:	490c      	ldr	r1, [pc, #48]	@ (9000de40 <HAL_TIM_Base_Init+0x144>)
9000de0e:	4a0a      	ldr	r2, [pc, #40]	@ (9000de38 <HAL_TIM_Base_Init+0x13c>)
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000de10:	4293      	cmp	r3, r2
9000de12:	bf18      	it	ne
9000de14:	428b      	cmpne	r3, r1
9000de16:	d0c9      	beq.n	9000ddac <HAL_TIM_Base_Init+0xb0>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000de18:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000de1c:	4293      	cmp	r3, r2
9000de1e:	d0c5      	beq.n	9000ddac <HAL_TIM_Base_Init+0xb0>
9000de20:	e7c6      	b.n	9000ddb0 <HAL_TIM_Base_Init+0xb4>
    htim->Lock = HAL_UNLOCKED;
9000de22:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
9000de26:	f7ff ff67 	bl	9000dcf8 <HAL_TIM_Base_MspInit>
9000de2a:	e773      	b.n	9000dd14 <HAL_TIM_Base_Init+0x18>
    return HAL_ERROR;
9000de2c:	2001      	movs	r0, #1
}
9000de2e:	4770      	bx	lr
9000de30:	40010000 	.word	0x40010000
9000de34:	40010400 	.word	0x40010400
9000de38:	40014000 	.word	0x40014000
9000de3c:	40014400 	.word	0x40014400
9000de40:	40014800 	.word	0x40014800
9000de44:	40000400 	.word	0x40000400

9000de48 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
9000de48:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000de4c:	2b01      	cmp	r3, #1
9000de4e:	d13d      	bne.n	9000decc <HAL_TIM_Base_Start_IT+0x84>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000de50:	6802      	ldr	r2, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000de52:	2102      	movs	r1, #2
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000de54:	4b1e      	ldr	r3, [pc, #120]	@ (9000ded0 <HAL_TIM_Base_Start_IT+0x88>)
9000de56:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
9000de5a:	bf18      	it	ne
9000de5c:	429a      	cmpne	r2, r3
{
9000de5e:	b430      	push	{r4, r5}
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000de60:	bf0c      	ite	eq
9000de62:	2301      	moveq	r3, #1
9000de64:	2300      	movne	r3, #0
9000de66:	4d1b      	ldr	r5, [pc, #108]	@ (9000ded4 <HAL_TIM_Base_Start_IT+0x8c>)
9000de68:	4c1b      	ldr	r4, [pc, #108]	@ (9000ded8 <HAL_TIM_Base_Start_IT+0x90>)
9000de6a:	42aa      	cmp	r2, r5
9000de6c:	bf08      	it	eq
9000de6e:	f043 0301 	orreq.w	r3, r3, #1
  htim->State = HAL_TIM_STATE_BUSY;
9000de72:	f880 103d 	strb.w	r1, [r0, #61]	@ 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000de76:	68d1      	ldr	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000de78:	42a2      	cmp	r2, r4
9000de7a:	bf08      	it	eq
9000de7c:	f043 0301 	orreq.w	r3, r3, #1
9000de80:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000de84:	f041 0101 	orr.w	r1, r1, #1
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000de88:	4814      	ldr	r0, [pc, #80]	@ (9000dedc <HAL_TIM_Base_Start_IT+0x94>)
9000de8a:	42a2      	cmp	r2, r4
9000de8c:	bf08      	it	eq
9000de8e:	f043 0301 	orreq.w	r3, r3, #1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000de92:	60d1      	str	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000de94:	4282      	cmp	r2, r0
9000de96:	bf08      	it	eq
9000de98:	f043 0301 	orreq.w	r3, r3, #1
9000de9c:	4910      	ldr	r1, [pc, #64]	@ (9000dee0 <HAL_TIM_Base_Start_IT+0x98>)
9000de9e:	428a      	cmp	r2, r1
9000dea0:	bf08      	it	eq
9000dea2:	f043 0301 	orreq.w	r3, r3, #1
9000dea6:	b913      	cbnz	r3, 9000deae <HAL_TIM_Base_Start_IT+0x66>
9000dea8:	4b0e      	ldr	r3, [pc, #56]	@ (9000dee4 <HAL_TIM_Base_Start_IT+0x9c>)
9000deaa:	429a      	cmp	r2, r3
9000deac:	d107      	bne.n	9000debe <HAL_TIM_Base_Start_IT+0x76>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
9000deae:	6891      	ldr	r1, [r2, #8]
9000deb0:	4b0d      	ldr	r3, [pc, #52]	@ (9000dee8 <HAL_TIM_Base_Start_IT+0xa0>)
9000deb2:	400b      	ands	r3, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
9000deb4:	2b06      	cmp	r3, #6
9000deb6:	d006      	beq.n	9000dec6 <HAL_TIM_Base_Start_IT+0x7e>
9000deb8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000debc:	d003      	beq.n	9000dec6 <HAL_TIM_Base_Start_IT+0x7e>
      __HAL_TIM_ENABLE(htim);
9000debe:	6813      	ldr	r3, [r2, #0]
9000dec0:	f043 0301 	orr.w	r3, r3, #1
9000dec4:	6013      	str	r3, [r2, #0]
  return HAL_OK;
9000dec6:	2000      	movs	r0, #0
}
9000dec8:	bc30      	pop	{r4, r5}
9000deca:	4770      	bx	lr
    return HAL_ERROR;
9000decc:	2001      	movs	r0, #1
}
9000dece:	4770      	bx	lr
9000ded0:	40010000 	.word	0x40010000
9000ded4:	40000400 	.word	0x40000400
9000ded8:	40000800 	.word	0x40000800
9000dedc:	40010400 	.word	0x40010400
9000dee0:	40001800 	.word	0x40001800
9000dee4:	40014000 	.word	0x40014000
9000dee8:	00010007 	.word	0x00010007

9000deec <HAL_TIM_OC_DelayElapsedCallback>:
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
9000deec:	4770      	bx	lr
9000deee:	bf00      	nop

9000def0 <HAL_TIM_IC_CaptureCallback>:
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
9000def0:	4770      	bx	lr
9000def2:	bf00      	nop

9000def4 <HAL_TIM_PWM_PulseFinishedCallback>:
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
9000def4:	4770      	bx	lr
9000def6:	bf00      	nop

9000def8 <HAL_TIM_TriggerCallback>:
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
9000def8:	4770      	bx	lr
9000defa:	bf00      	nop

9000defc <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
9000defc:	6803      	ldr	r3, [r0, #0]
{
9000defe:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
9000df00:	68de      	ldr	r6, [r3, #12]
{
9000df02:	4604      	mov	r4, r0
  uint32_t itflag   = htim->Instance->SR;
9000df04:	691d      	ldr	r5, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
9000df06:	07aa      	lsls	r2, r5, #30
9000df08:	d501      	bpl.n	9000df0e <HAL_TIM_IRQHandler+0x12>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
9000df0a:	07b1      	lsls	r1, r6, #30
9000df0c:	d452      	bmi.n	9000dfb4 <HAL_TIM_IRQHandler+0xb8>
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
9000df0e:	076b      	lsls	r3, r5, #29
9000df10:	d501      	bpl.n	9000df16 <HAL_TIM_IRQHandler+0x1a>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
9000df12:	0770      	lsls	r0, r6, #29
9000df14:	d43b      	bmi.n	9000df8e <HAL_TIM_IRQHandler+0x92>
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
9000df16:	0729      	lsls	r1, r5, #28
9000df18:	d501      	bpl.n	9000df1e <HAL_TIM_IRQHandler+0x22>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
9000df1a:	0732      	lsls	r2, r6, #28
9000df1c:	d425      	bmi.n	9000df6a <HAL_TIM_IRQHandler+0x6e>
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
9000df1e:	06e8      	lsls	r0, r5, #27
9000df20:	d501      	bpl.n	9000df26 <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
9000df22:	06f1      	lsls	r1, r6, #27
9000df24:	d411      	bmi.n	9000df4a <HAL_TIM_IRQHandler+0x4e>
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
9000df26:	07ea      	lsls	r2, r5, #31
9000df28:	d501      	bpl.n	9000df2e <HAL_TIM_IRQHandler+0x32>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
9000df2a:	07f3      	lsls	r3, r6, #31
9000df2c:	d464      	bmi.n	9000dff8 <HAL_TIM_IRQHandler+0xfc>
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
9000df2e:	f415 5f02 	tst.w	r5, #8320	@ 0x2080
9000df32:	d04c      	beq.n	9000dfce <HAL_TIM_IRQHandler+0xd2>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
9000df34:	0630      	lsls	r0, r6, #24
9000df36:	d467      	bmi.n	9000e008 <HAL_TIM_IRQHandler+0x10c>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
9000df38:	0668      	lsls	r0, r5, #25
9000df3a:	d501      	bpl.n	9000df40 <HAL_TIM_IRQHandler+0x44>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
9000df3c:	0671      	lsls	r1, r6, #25
9000df3e:	d46d      	bmi.n	9000e01c <HAL_TIM_IRQHandler+0x120>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
9000df40:	06aa      	lsls	r2, r5, #26
9000df42:	d501      	bpl.n	9000df48 <HAL_TIM_IRQHandler+0x4c>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
9000df44:	06b3      	lsls	r3, r6, #26
9000df46:	d44e      	bmi.n	9000dfe6 <HAL_TIM_IRQHandler+0xea>
}
9000df48:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
9000df4a:	6823      	ldr	r3, [r4, #0]
9000df4c:	f06f 0210 	mvn.w	r2, #16
        HAL_TIM_IC_CaptureCallback(htim);
9000df50:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
9000df52:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000df54:	2208      	movs	r2, #8
9000df56:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
9000df58:	69db      	ldr	r3, [r3, #28]
9000df5a:	f413 7f40 	tst.w	r3, #768	@ 0x300
9000df5e:	d071      	beq.n	9000e044 <HAL_TIM_IRQHandler+0x148>
        HAL_TIM_IC_CaptureCallback(htim);
9000df60:	f7ff ffc6 	bl	9000def0 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000df64:	2300      	movs	r3, #0
9000df66:	7723      	strb	r3, [r4, #28]
9000df68:	e7dd      	b.n	9000df26 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
9000df6a:	6823      	ldr	r3, [r4, #0]
9000df6c:	f06f 0208 	mvn.w	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
9000df70:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
9000df72:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000df74:	2204      	movs	r2, #4
9000df76:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
9000df78:	69db      	ldr	r3, [r3, #28]
9000df7a:	079b      	lsls	r3, r3, #30
9000df7c:	d15f      	bne.n	9000e03e <HAL_TIM_IRQHandler+0x142>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000df7e:	f7ff ffb5 	bl	9000deec <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000df82:	4620      	mov	r0, r4
9000df84:	f7ff ffb6 	bl	9000def4 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000df88:	2300      	movs	r3, #0
9000df8a:	7723      	strb	r3, [r4, #28]
9000df8c:	e7c7      	b.n	9000df1e <HAL_TIM_IRQHandler+0x22>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
9000df8e:	6823      	ldr	r3, [r4, #0]
9000df90:	f06f 0204 	mvn.w	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
9000df94:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
9000df96:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000df98:	2202      	movs	r2, #2
9000df9a:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
9000df9c:	699b      	ldr	r3, [r3, #24]
9000df9e:	f413 7f40 	tst.w	r3, #768	@ 0x300
9000dfa2:	d149      	bne.n	9000e038 <HAL_TIM_IRQHandler+0x13c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000dfa4:	f7ff ffa2 	bl	9000deec <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000dfa8:	4620      	mov	r0, r4
9000dfaa:	f7ff ffa3 	bl	9000def4 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000dfae:	2300      	movs	r3, #0
9000dfb0:	7723      	strb	r3, [r4, #28]
9000dfb2:	e7b0      	b.n	9000df16 <HAL_TIM_IRQHandler+0x1a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
9000dfb4:	f06f 0202 	mvn.w	r2, #2
9000dfb8:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000dfba:	2201      	movs	r2, #1
9000dfbc:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
9000dfbe:	699b      	ldr	r3, [r3, #24]
9000dfc0:	079a      	lsls	r2, r3, #30
9000dfc2:	d033      	beq.n	9000e02c <HAL_TIM_IRQHandler+0x130>
          HAL_TIM_IC_CaptureCallback(htim);
9000dfc4:	f7ff ff94 	bl	9000def0 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000dfc8:	2300      	movs	r3, #0
9000dfca:	7723      	strb	r3, [r4, #28]
9000dfcc:	e79f      	b.n	9000df0e <HAL_TIM_IRQHandler+0x12>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
9000dfce:	05ea      	lsls	r2, r5, #23
9000dfd0:	d5b2      	bpl.n	9000df38 <HAL_TIM_IRQHandler+0x3c>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
9000dfd2:	0633      	lsls	r3, r6, #24
9000dfd4:	d5b0      	bpl.n	9000df38 <HAL_TIM_IRQHandler+0x3c>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000dfd6:	6823      	ldr	r3, [r4, #0]
9000dfd8:	f46f 7280 	mvn.w	r2, #256	@ 0x100
      HAL_TIMEx_Break2Callback(htim);
9000dfdc:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000dfde:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
9000dfe0:	f000 f83a 	bl	9000e058 <HAL_TIMEx_Break2Callback>
9000dfe4:	e7a8      	b.n	9000df38 <HAL_TIM_IRQHandler+0x3c>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
9000dfe6:	6823      	ldr	r3, [r4, #0]
9000dfe8:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
9000dfec:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
9000dfee:	611a      	str	r2, [r3, #16]
}
9000dff0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      HAL_TIMEx_CommutCallback(htim);
9000dff4:	f000 b82c 	b.w	9000e050 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
9000dff8:	6823      	ldr	r3, [r4, #0]
9000dffa:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
9000dffe:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
9000e000:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
9000e002:	f7f5 fd79 	bl	90003af8 <HAL_TIM_PeriodElapsedCallback>
9000e006:	e792      	b.n	9000df2e <HAL_TIM_IRQHandler+0x32>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
9000e008:	6823      	ldr	r3, [r4, #0]
9000e00a:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
      HAL_TIMEx_BreakCallback(htim);
9000e00e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
9000e010:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
9000e012:	f000 f81f 	bl	9000e054 <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
9000e016:	05e9      	lsls	r1, r5, #23
9000e018:	d58e      	bpl.n	9000df38 <HAL_TIM_IRQHandler+0x3c>
9000e01a:	e7dc      	b.n	9000dfd6 <HAL_TIM_IRQHandler+0xda>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
9000e01c:	6823      	ldr	r3, [r4, #0]
9000e01e:	f06f 0240 	mvn.w	r2, #64	@ 0x40
      HAL_TIM_TriggerCallback(htim);
9000e022:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
9000e024:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
9000e026:	f7ff ff67 	bl	9000def8 <HAL_TIM_TriggerCallback>
9000e02a:	e789      	b.n	9000df40 <HAL_TIM_IRQHandler+0x44>
          HAL_TIM_OC_DelayElapsedCallback(htim);
9000e02c:	f7ff ff5e 	bl	9000deec <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
9000e030:	4620      	mov	r0, r4
9000e032:	f7ff ff5f 	bl	9000def4 <HAL_TIM_PWM_PulseFinishedCallback>
9000e036:	e7c7      	b.n	9000dfc8 <HAL_TIM_IRQHandler+0xcc>
        HAL_TIM_IC_CaptureCallback(htim);
9000e038:	f7ff ff5a 	bl	9000def0 <HAL_TIM_IC_CaptureCallback>
9000e03c:	e7b7      	b.n	9000dfae <HAL_TIM_IRQHandler+0xb2>
        HAL_TIM_IC_CaptureCallback(htim);
9000e03e:	f7ff ff57 	bl	9000def0 <HAL_TIM_IC_CaptureCallback>
9000e042:	e7a1      	b.n	9000df88 <HAL_TIM_IRQHandler+0x8c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000e044:	f7ff ff52 	bl	9000deec <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000e048:	4620      	mov	r0, r4
9000e04a:	f7ff ff53 	bl	9000def4 <HAL_TIM_PWM_PulseFinishedCallback>
9000e04e:	e789      	b.n	9000df64 <HAL_TIM_IRQHandler+0x68>

9000e050 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
9000e050:	4770      	bx	lr
9000e052:	bf00      	nop

9000e054 <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
9000e054:	4770      	bx	lr
9000e056:	bf00      	nop

9000e058 <HAL_TIMEx_Break2Callback>:
/**
  * @brief  Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
9000e058:	4770      	bx	lr
9000e05a:	bf00      	nop

9000e05c <UART_TxISR_16BIT>:
static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
{
  const uint16_t *tmp;

  /* Check that a Tx process is ongoing */
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
9000e05c:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
9000e060:	2b21      	cmp	r3, #33	@ 0x21
9000e062:	d000      	beq.n	9000e066 <UART_TxISR_16BIT+0xa>
      huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
      huart->pTxBuffPtr += 2U;
      huart->TxXferCount--;
    }
  }
}
9000e064:	4770      	bx	lr
    if (huart->TxXferCount == 0U)
9000e066:	f8b0 3056 	ldrh.w	r3, [r0, #86]	@ 0x56
      huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
9000e06a:	6802      	ldr	r2, [r0, #0]
    if (huart->TxXferCount == 0U)
9000e06c:	b29b      	uxth	r3, r3
9000e06e:	b983      	cbnz	r3, 9000e092 <UART_TxISR_16BIT+0x36>
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e070:	e852 3f00 	ldrex	r3, [r2]
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
9000e074:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e078:	e842 3100 	strex	r1, r3, [r2]
9000e07c:	2900      	cmp	r1, #0
9000e07e:	d1f7      	bne.n	9000e070 <UART_TxISR_16BIT+0x14>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e080:	e852 3f00 	ldrex	r3, [r2]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
9000e084:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e088:	e842 3100 	strex	r1, r3, [r2]
9000e08c:	2900      	cmp	r1, #0
9000e08e:	d1f7      	bne.n	9000e080 <UART_TxISR_16BIT+0x24>
9000e090:	4770      	bx	lr
      huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
9000e092:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000e094:	f831 3b02 	ldrh.w	r3, [r1], #2
9000e098:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000e09c:	6293      	str	r3, [r2, #40]	@ 0x28
      huart->TxXferCount--;
9000e09e:	f8b0 3056 	ldrh.w	r3, [r0, #86]	@ 0x56
      huart->pTxBuffPtr += 2U;
9000e0a2:	6501      	str	r1, [r0, #80]	@ 0x50
      huart->TxXferCount--;
9000e0a4:	3b01      	subs	r3, #1
9000e0a6:	b29b      	uxth	r3, r3
9000e0a8:	f8a0 3056 	strh.w	r3, [r0, #86]	@ 0x56
}
9000e0ac:	4770      	bx	lr
9000e0ae:	bf00      	nop

9000e0b0 <UART_TxISR_16BIT_FIFOEN>:
{
  const uint16_t *tmp;
  uint16_t  nb_tx_data;

  /* Check that a Tx process is ongoing */
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
9000e0b0:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
9000e0b4:	2b21      	cmp	r3, #33	@ 0x21
9000e0b6:	d000      	beq.n	9000e0ba <UART_TxISR_16BIT_FIFOEN+0xa>
9000e0b8:	4770      	bx	lr
  {
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
9000e0ba:	f8b0 306a 	ldrh.w	r3, [r0, #106]	@ 0x6a
9000e0be:	2b00      	cmp	r3, #0
9000e0c0:	d0fa      	beq.n	9000e0b8 <UART_TxISR_16BIT_FIFOEN+0x8>
        /* Enable the UART Transmit Complete Interrupt */
        ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);

        break; /* force exit loop */
      }
      else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
9000e0c2:	6801      	ldr	r1, [r0, #0]
{
9000e0c4:	b410      	push	{r4}
      if (huart->TxXferCount == 0U)
9000e0c6:	f8b0 2056 	ldrh.w	r2, [r0, #86]	@ 0x56
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
9000e0ca:	3b01      	subs	r3, #1
      if (huart->TxXferCount == 0U)
9000e0cc:	b292      	uxth	r2, r2
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
9000e0ce:	b29b      	uxth	r3, r3
      if (huart->TxXferCount == 0U)
9000e0d0:	b1a2      	cbz	r2, 9000e0fc <UART_TxISR_16BIT_FIFOEN+0x4c>
      else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
9000e0d2:	69ca      	ldr	r2, [r1, #28]
9000e0d4:	0612      	lsls	r2, r2, #24
9000e0d6:	d50c      	bpl.n	9000e0f2 <UART_TxISR_16BIT_FIFOEN+0x42>
      {
        tmp = (const uint16_t *) huart->pTxBuffPtr;
        huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
9000e0d8:	6d04      	ldr	r4, [r0, #80]	@ 0x50
9000e0da:	f834 2b02 	ldrh.w	r2, [r4], #2
9000e0de:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000e0e2:	628a      	str	r2, [r1, #40]	@ 0x28
        huart->pTxBuffPtr += 2U;
        huart->TxXferCount--;
9000e0e4:	f8b0 2056 	ldrh.w	r2, [r0, #86]	@ 0x56
        huart->pTxBuffPtr += 2U;
9000e0e8:	6504      	str	r4, [r0, #80]	@ 0x50
        huart->TxXferCount--;
9000e0ea:	3a01      	subs	r2, #1
9000e0ec:	b292      	uxth	r2, r2
9000e0ee:	f8a0 2056 	strh.w	r2, [r0, #86]	@ 0x56
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
9000e0f2:	2b00      	cmp	r3, #0
9000e0f4:	d1e7      	bne.n	9000e0c6 <UART_TxISR_16BIT_FIFOEN+0x16>
      {
        /* Nothing to do */
      }
    }
  }
}
9000e0f6:	f85d 4b04 	ldr.w	r4, [sp], #4
9000e0fa:	4770      	bx	lr
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e0fc:	f101 0308 	add.w	r3, r1, #8
9000e100:	e853 3f00 	ldrex	r3, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
9000e104:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e108:	f101 0008 	add.w	r0, r1, #8
9000e10c:	e840 3200 	strex	r2, r3, [r0]
9000e110:	2a00      	cmp	r2, #0
9000e112:	d1f3      	bne.n	9000e0fc <UART_TxISR_16BIT_FIFOEN+0x4c>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e114:	e851 3f00 	ldrex	r3, [r1]
        ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
9000e118:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e11c:	e841 3200 	strex	r2, r3, [r1]
9000e120:	2a00      	cmp	r2, #0
9000e122:	d0e8      	beq.n	9000e0f6 <UART_TxISR_16BIT_FIFOEN+0x46>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e124:	e851 3f00 	ldrex	r3, [r1]
9000e128:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e12c:	e841 3200 	strex	r2, r3, [r1]
9000e130:	2a00      	cmp	r2, #0
9000e132:	d1ef      	bne.n	9000e114 <UART_TxISR_16BIT_FIFOEN+0x64>
9000e134:	e7df      	b.n	9000e0f6 <UART_TxISR_16BIT_FIFOEN+0x46>
9000e136:	bf00      	nop

9000e138 <UART_TxISR_8BIT>:
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
9000e138:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
9000e13c:	2b21      	cmp	r3, #33	@ 0x21
9000e13e:	d000      	beq.n	9000e142 <UART_TxISR_8BIT+0xa>
}
9000e140:	4770      	bx	lr
    if (huart->TxXferCount == 0U)
9000e142:	f8b0 3056 	ldrh.w	r3, [r0, #86]	@ 0x56
      huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
9000e146:	6802      	ldr	r2, [r0, #0]
    if (huart->TxXferCount == 0U)
9000e148:	b29b      	uxth	r3, r3
9000e14a:	b983      	cbnz	r3, 9000e16e <UART_TxISR_8BIT+0x36>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e14c:	e852 3f00 	ldrex	r3, [r2]
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
9000e150:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e154:	e842 3100 	strex	r1, r3, [r2]
9000e158:	2900      	cmp	r1, #0
9000e15a:	d1f7      	bne.n	9000e14c <UART_TxISR_8BIT+0x14>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e15c:	e852 3f00 	ldrex	r3, [r2]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
9000e160:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e164:	e842 3100 	strex	r1, r3, [r2]
9000e168:	2900      	cmp	r1, #0
9000e16a:	d1f7      	bne.n	9000e15c <UART_TxISR_8BIT+0x24>
9000e16c:	4770      	bx	lr
      huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
9000e16e:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000e170:	f811 3b01 	ldrb.w	r3, [r1], #1
9000e174:	6293      	str	r3, [r2, #40]	@ 0x28
      huart->TxXferCount--;
9000e176:	f8b0 3056 	ldrh.w	r3, [r0, #86]	@ 0x56
      huart->pTxBuffPtr++;
9000e17a:	6501      	str	r1, [r0, #80]	@ 0x50
      huart->TxXferCount--;
9000e17c:	3b01      	subs	r3, #1
9000e17e:	b29b      	uxth	r3, r3
9000e180:	f8a0 3056 	strh.w	r3, [r0, #86]	@ 0x56
}
9000e184:	4770      	bx	lr
9000e186:	bf00      	nop

9000e188 <UART_TxISR_8BIT_FIFOEN>:
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
9000e188:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
9000e18c:	2b21      	cmp	r3, #33	@ 0x21
9000e18e:	d000      	beq.n	9000e192 <UART_TxISR_8BIT_FIFOEN+0xa>
9000e190:	4770      	bx	lr
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
9000e192:	f8b0 306a 	ldrh.w	r3, [r0, #106]	@ 0x6a
9000e196:	2b00      	cmp	r3, #0
9000e198:	d0fa      	beq.n	9000e190 <UART_TxISR_8BIT_FIFOEN+0x8>
      else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
9000e19a:	6801      	ldr	r1, [r0, #0]
{
9000e19c:	b410      	push	{r4}
      if (huart->TxXferCount == 0U)
9000e19e:	f8b0 2056 	ldrh.w	r2, [r0, #86]	@ 0x56
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
9000e1a2:	3b01      	subs	r3, #1
      if (huart->TxXferCount == 0U)
9000e1a4:	b292      	uxth	r2, r2
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
9000e1a6:	b29b      	uxth	r3, r3
      if (huart->TxXferCount == 0U)
9000e1a8:	b192      	cbz	r2, 9000e1d0 <UART_TxISR_8BIT_FIFOEN+0x48>
      else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
9000e1aa:	69ca      	ldr	r2, [r1, #28]
9000e1ac:	0612      	lsls	r2, r2, #24
9000e1ae:	d50a      	bpl.n	9000e1c6 <UART_TxISR_8BIT_FIFOEN+0x3e>
        huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
9000e1b0:	6d04      	ldr	r4, [r0, #80]	@ 0x50
9000e1b2:	f814 2b01 	ldrb.w	r2, [r4], #1
9000e1b6:	628a      	str	r2, [r1, #40]	@ 0x28
        huart->TxXferCount--;
9000e1b8:	f8b0 2056 	ldrh.w	r2, [r0, #86]	@ 0x56
        huart->pTxBuffPtr++;
9000e1bc:	6504      	str	r4, [r0, #80]	@ 0x50
        huart->TxXferCount--;
9000e1be:	3a01      	subs	r2, #1
9000e1c0:	b292      	uxth	r2, r2
9000e1c2:	f8a0 2056 	strh.w	r2, [r0, #86]	@ 0x56
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
9000e1c6:	2b00      	cmp	r3, #0
9000e1c8:	d1e9      	bne.n	9000e19e <UART_TxISR_8BIT_FIFOEN+0x16>
}
9000e1ca:	f85d 4b04 	ldr.w	r4, [sp], #4
9000e1ce:	4770      	bx	lr
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e1d0:	f101 0308 	add.w	r3, r1, #8
9000e1d4:	e853 3f00 	ldrex	r3, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
9000e1d8:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e1dc:	f101 0008 	add.w	r0, r1, #8
9000e1e0:	e840 3200 	strex	r2, r3, [r0]
9000e1e4:	2a00      	cmp	r2, #0
9000e1e6:	d1f3      	bne.n	9000e1d0 <UART_TxISR_8BIT_FIFOEN+0x48>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e1e8:	e851 3f00 	ldrex	r3, [r1]
        ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
9000e1ec:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e1f0:	e841 3200 	strex	r2, r3, [r1]
9000e1f4:	2a00      	cmp	r2, #0
9000e1f6:	d0e8      	beq.n	9000e1ca <UART_TxISR_8BIT_FIFOEN+0x42>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e1f8:	e851 3f00 	ldrex	r3, [r1]
9000e1fc:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e200:	e841 3200 	strex	r2, r3, [r1]
9000e204:	2a00      	cmp	r2, #0
9000e206:	d1ef      	bne.n	9000e1e8 <UART_TxISR_8BIT_FIFOEN+0x60>
9000e208:	e7df      	b.n	9000e1ca <UART_TxISR_8BIT_FIFOEN+0x42>
9000e20a:	bf00      	nop

9000e20c <HAL_UART_Transmit_IT>:
  if (huart->gState == HAL_UART_STATE_READY)
9000e20c:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
9000e210:	2b20      	cmp	r3, #32
9000e212:	d128      	bne.n	9000e266 <HAL_UART_Transmit_IT+0x5a>
    if ((pData == NULL) || (Size == 0U))
9000e214:	b329      	cbz	r1, 9000e262 <HAL_UART_Transmit_IT+0x56>
9000e216:	fab2 f382 	clz	r3, r2
9000e21a:	095b      	lsrs	r3, r3, #5
9000e21c:	b30a      	cbz	r2, 9000e262 <HAL_UART_Transmit_IT+0x56>
{
9000e21e:	b410      	push	{r4}
    huart->pTxBuffPtr  = pData;
9000e220:	6501      	str	r1, [r0, #80]	@ 0x50
    huart->gState = HAL_UART_STATE_BUSY_TX;
9000e222:	2421      	movs	r4, #33	@ 0x21
    if (huart->FifoMode == UART_FIFOMODE_ENABLE)
9000e224:	6e41      	ldr	r1, [r0, #100]	@ 0x64
    huart->TxXferCount = Size;
9000e226:	f8a0 2056 	strh.w	r2, [r0, #86]	@ 0x56
    if (huart->FifoMode == UART_FIFOMODE_ENABLE)
9000e22a:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
    huart->ErrorCode = HAL_UART_ERROR_NONE;
9000e22e:	f8c0 3090 	str.w	r3, [r0, #144]	@ 0x90
    huart->TxXferSize  = Size;
9000e232:	f8a0 2054 	strh.w	r2, [r0, #84]	@ 0x54
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000e236:	6883      	ldr	r3, [r0, #8]
    huart->gState = HAL_UART_STATE_BUSY_TX;
9000e238:	f8c0 4088 	str.w	r4, [r0, #136]	@ 0x88
    if (huart->FifoMode == UART_FIFOMODE_ENABLE)
9000e23c:	d01c      	beq.n	9000e278 <HAL_UART_Transmit_IT+0x6c>
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000e23e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
9000e242:	d012      	beq.n	9000e26a <HAL_UART_Transmit_IT+0x5e>
        huart->TxISR = UART_TxISR_8BIT;
9000e244:	4b1b      	ldr	r3, [pc, #108]	@ (9000e2b4 <HAL_UART_Transmit_IT+0xa8>)
9000e246:	6802      	ldr	r2, [r0, #0]
9000e248:	6783      	str	r3, [r0, #120]	@ 0x78
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e24a:	e852 3f00 	ldrex	r3, [r2]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
9000e24e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e252:	e842 3100 	strex	r1, r3, [r2]
9000e256:	2900      	cmp	r1, #0
9000e258:	d1f7      	bne.n	9000e24a <HAL_UART_Transmit_IT+0x3e>
    return HAL_OK;
9000e25a:	2000      	movs	r0, #0
}
9000e25c:	f85d 4b04 	ldr.w	r4, [sp], #4
9000e260:	4770      	bx	lr
      return HAL_ERROR;
9000e262:	2001      	movs	r0, #1
}
9000e264:	4770      	bx	lr
    return HAL_BUSY;
9000e266:	2002      	movs	r0, #2
9000e268:	4770      	bx	lr
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000e26a:	6901      	ldr	r1, [r0, #16]
        huart->TxISR = UART_TxISR_8BIT;
9000e26c:	4b12      	ldr	r3, [pc, #72]	@ (9000e2b8 <HAL_UART_Transmit_IT+0xac>)
9000e26e:	4a11      	ldr	r2, [pc, #68]	@ (9000e2b4 <HAL_UART_Transmit_IT+0xa8>)
9000e270:	2900      	cmp	r1, #0
9000e272:	bf18      	it	ne
9000e274:	4613      	movne	r3, r2
9000e276:	e7e6      	b.n	9000e246 <HAL_UART_Transmit_IT+0x3a>
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000e278:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
9000e27c:	d012      	beq.n	9000e2a4 <HAL_UART_Transmit_IT+0x98>
        huart->TxISR = UART_TxISR_8BIT_FIFOEN;
9000e27e:	4b0f      	ldr	r3, [pc, #60]	@ (9000e2bc <HAL_UART_Transmit_IT+0xb0>)
9000e280:	6802      	ldr	r2, [r0, #0]
9000e282:	6783      	str	r3, [r0, #120]	@ 0x78
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e284:	f102 0308 	add.w	r3, r2, #8
9000e288:	e853 3f00 	ldrex	r3, [r3]
      ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
9000e28c:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e290:	f102 0008 	add.w	r0, r2, #8
9000e294:	e840 3100 	strex	r1, r3, [r0]
9000e298:	2900      	cmp	r1, #0
9000e29a:	d1f3      	bne.n	9000e284 <HAL_UART_Transmit_IT+0x78>
    return HAL_OK;
9000e29c:	2000      	movs	r0, #0
}
9000e29e:	f85d 4b04 	ldr.w	r4, [sp], #4
9000e2a2:	4770      	bx	lr
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000e2a4:	6901      	ldr	r1, [r0, #16]
        huart->TxISR = UART_TxISR_8BIT_FIFOEN;
9000e2a6:	4b06      	ldr	r3, [pc, #24]	@ (9000e2c0 <HAL_UART_Transmit_IT+0xb4>)
9000e2a8:	4a04      	ldr	r2, [pc, #16]	@ (9000e2bc <HAL_UART_Transmit_IT+0xb0>)
9000e2aa:	2900      	cmp	r1, #0
9000e2ac:	bf18      	it	ne
9000e2ae:	4613      	movne	r3, r2
9000e2b0:	e7e6      	b.n	9000e280 <HAL_UART_Transmit_IT+0x74>
9000e2b2:	bf00      	nop
9000e2b4:	9000e139 	.word	0x9000e139
9000e2b8:	9000e05d 	.word	0x9000e05d
9000e2bc:	9000e189 	.word	0x9000e189
9000e2c0:	9000e0b1 	.word	0x9000e0b1

9000e2c4 <HAL_UART_Receive_IT>:
  if (huart->RxState == HAL_UART_STATE_READY)
9000e2c4:	f8d0 308c 	ldr.w	r3, [r0, #140]	@ 0x8c
9000e2c8:	2b20      	cmp	r3, #32
9000e2ca:	d15d      	bne.n	9000e388 <HAL_UART_Receive_IT+0xc4>
    if ((pData == NULL) || (Size == 0U))
9000e2cc:	2900      	cmp	r1, #0
9000e2ce:	d060      	beq.n	9000e392 <HAL_UART_Receive_IT+0xce>
{
9000e2d0:	b430      	push	{r4, r5}
    if ((pData == NULL) || (Size == 0U))
9000e2d2:	fab2 f482 	clz	r4, r2
9000e2d6:	0964      	lsrs	r4, r4, #5
9000e2d8:	2a00      	cmp	r2, #0
9000e2da:	d057      	beq.n	9000e38c <HAL_UART_Receive_IT+0xc8>
    if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000e2dc:	6803      	ldr	r3, [r0, #0]
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000e2de:	66c4      	str	r4, [r0, #108]	@ 0x6c
    if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000e2e0:	4c57      	ldr	r4, [pc, #348]	@ (9000e440 <HAL_UART_Receive_IT+0x17c>)
9000e2e2:	42a3      	cmp	r3, r4
9000e2e4:	d002      	beq.n	9000e2ec <HAL_UART_Receive_IT+0x28>
      if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
9000e2e6:	685c      	ldr	r4, [r3, #4]
9000e2e8:	0224      	lsls	r4, r4, #8
9000e2ea:	d43c      	bmi.n	9000e366 <HAL_UART_Receive_IT+0xa2>
  huart->pRxBuffPtr  = pData;
9000e2ec:	6581      	str	r1, [r0, #88]	@ 0x58
  huart->RxISR       = NULL;
9000e2ee:	2400      	movs	r4, #0
  UART_MASK_COMPUTATION(huart);
9000e2f0:	6881      	ldr	r1, [r0, #8]
  huart->RxXferSize  = Size;
9000e2f2:	f8a0 205c 	strh.w	r2, [r0, #92]	@ 0x5c
  UART_MASK_COMPUTATION(huart);
9000e2f6:	f5b1 5f80 	cmp.w	r1, #4096	@ 0x1000
  huart->RxXferCount = Size;
9000e2fa:	f8a0 205e 	strh.w	r2, [r0, #94]	@ 0x5e
  huart->RxISR       = NULL;
9000e2fe:	6744      	str	r4, [r0, #116]	@ 0x74
  UART_MASK_COMPUTATION(huart);
9000e300:	d066      	beq.n	9000e3d0 <HAL_UART_Receive_IT+0x10c>
9000e302:	2900      	cmp	r1, #0
9000e304:	d147      	bne.n	9000e396 <HAL_UART_Receive_IT+0xd2>
9000e306:	6901      	ldr	r1, [r0, #16]
9000e308:	2900      	cmp	r1, #0
9000e30a:	bf0c      	ite	eq
9000e30c:	24ff      	moveq	r4, #255	@ 0xff
9000e30e:	247f      	movne	r4, #127	@ 0x7f
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9000e310:	2100      	movs	r1, #0
  UART_MASK_COMPUTATION(huart);
9000e312:	f8a0 4060 	strh.w	r4, [r0, #96]	@ 0x60
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9000e316:	f8c0 1090 	str.w	r1, [r0, #144]	@ 0x90
  huart->RxState = HAL_UART_STATE_BUSY_RX;
9000e31a:	2122      	movs	r1, #34	@ 0x22
9000e31c:	f8c0 108c 	str.w	r1, [r0, #140]	@ 0x8c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e320:	f103 0108 	add.w	r1, r3, #8
9000e324:	e851 1f00 	ldrex	r1, [r1]
  ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
9000e328:	f041 0101 	orr.w	r1, r1, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e32c:	f103 0508 	add.w	r5, r3, #8
9000e330:	e845 1400 	strex	r4, r1, [r5]
9000e334:	2c00      	cmp	r4, #0
9000e336:	d1f3      	bne.n	9000e320 <HAL_UART_Receive_IT+0x5c>
  if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
9000e338:	6e41      	ldr	r1, [r0, #100]	@ 0x64
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000e33a:	6885      	ldr	r5, [r0, #8]
  if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
9000e33c:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000e340:	6904      	ldr	r4, [r0, #16]
  if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
9000e342:	d04c      	beq.n	9000e3de <HAL_UART_Receive_IT+0x11a>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000e344:	f5b5 5f80 	cmp.w	r5, #4096	@ 0x1000
9000e348:	d02e      	beq.n	9000e3a8 <HAL_UART_Receive_IT+0xe4>
9000e34a:	4a3e      	ldr	r2, [pc, #248]	@ (9000e444 <HAL_UART_Receive_IT+0x180>)
9000e34c:	6742      	str	r2, [r0, #116]	@ 0x74
    if (huart->Init.Parity != UART_PARITY_NONE)
9000e34e:	b374      	cbz	r4, 9000e3ae <HAL_UART_Receive_IT+0xea>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e350:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE);
9000e354:	f442 7290 	orr.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e358:	e843 2100 	strex	r1, r2, [r3]
9000e35c:	2900      	cmp	r1, #0
9000e35e:	d1f7      	bne.n	9000e350 <HAL_UART_Receive_IT+0x8c>
    return (UART_Start_Receive_IT(huart, pData, Size));
9000e360:	2000      	movs	r0, #0
}
9000e362:	bc30      	pop	{r4, r5}
9000e364:	4770      	bx	lr
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e366:	e853 4f00 	ldrex	r4, [r3]
        ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
9000e36a:	f044 6480 	orr.w	r4, r4, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e36e:	e843 4500 	strex	r5, r4, [r3]
9000e372:	2d00      	cmp	r5, #0
9000e374:	d0ba      	beq.n	9000e2ec <HAL_UART_Receive_IT+0x28>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e376:	e853 4f00 	ldrex	r4, [r3]
9000e37a:	f044 6480 	orr.w	r4, r4, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e37e:	e843 4500 	strex	r5, r4, [r3]
9000e382:	2d00      	cmp	r5, #0
9000e384:	d1ef      	bne.n	9000e366 <HAL_UART_Receive_IT+0xa2>
9000e386:	e7b1      	b.n	9000e2ec <HAL_UART_Receive_IT+0x28>
    return HAL_BUSY;
9000e388:	2002      	movs	r0, #2
9000e38a:	4770      	bx	lr
      return HAL_ERROR;
9000e38c:	2001      	movs	r0, #1
}
9000e38e:	bc30      	pop	{r4, r5}
9000e390:	4770      	bx	lr
      return HAL_ERROR;
9000e392:	2001      	movs	r0, #1
}
9000e394:	4770      	bx	lr
  UART_MASK_COMPUTATION(huart);
9000e396:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000e39a:	d1b9      	bne.n	9000e310 <HAL_UART_Receive_IT+0x4c>
9000e39c:	6901      	ldr	r1, [r0, #16]
9000e39e:	2900      	cmp	r1, #0
9000e3a0:	bf0c      	ite	eq
9000e3a2:	247f      	moveq	r4, #127	@ 0x7f
9000e3a4:	243f      	movne	r4, #63	@ 0x3f
9000e3a6:	e7b3      	b.n	9000e310 <HAL_UART_Receive_IT+0x4c>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000e3a8:	bb84      	cbnz	r4, 9000e40c <HAL_UART_Receive_IT+0x148>
9000e3aa:	4a27      	ldr	r2, [pc, #156]	@ (9000e448 <HAL_UART_Receive_IT+0x184>)
9000e3ac:	6742      	str	r2, [r0, #116]	@ 0x74
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e3ae:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
9000e3b2:	f042 0220 	orr.w	r2, r2, #32
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e3b6:	e843 2100 	strex	r1, r2, [r3]
9000e3ba:	2900      	cmp	r1, #0
9000e3bc:	d0d0      	beq.n	9000e360 <HAL_UART_Receive_IT+0x9c>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e3be:	e853 2f00 	ldrex	r2, [r3]
9000e3c2:	f042 0220 	orr.w	r2, r2, #32
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e3c6:	e843 2100 	strex	r1, r2, [r3]
9000e3ca:	2900      	cmp	r1, #0
9000e3cc:	d1ef      	bne.n	9000e3ae <HAL_UART_Receive_IT+0xea>
9000e3ce:	e7c7      	b.n	9000e360 <HAL_UART_Receive_IT+0x9c>
  UART_MASK_COMPUTATION(huart);
9000e3d0:	6901      	ldr	r1, [r0, #16]
9000e3d2:	f240 14ff 	movw	r4, #511	@ 0x1ff
9000e3d6:	2900      	cmp	r1, #0
9000e3d8:	bf18      	it	ne
9000e3da:	24ff      	movne	r4, #255	@ 0xff
9000e3dc:	e798      	b.n	9000e310 <HAL_UART_Receive_IT+0x4c>
  if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
9000e3de:	f8b0 1068 	ldrh.w	r1, [r0, #104]	@ 0x68
9000e3e2:	4291      	cmp	r1, r2
9000e3e4:	d8ae      	bhi.n	9000e344 <HAL_UART_Receive_IT+0x80>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000e3e6:	f5b5 5f80 	cmp.w	r5, #4096	@ 0x1000
9000e3ea:	d012      	beq.n	9000e412 <HAL_UART_Receive_IT+0x14e>
      huart->RxISR = UART_RxISR_8BIT_FIFOEN;
9000e3ec:	4a17      	ldr	r2, [pc, #92]	@ (9000e44c <HAL_UART_Receive_IT+0x188>)
9000e3ee:	6742      	str	r2, [r0, #116]	@ 0x74
    if (huart->Init.Parity != UART_PARITY_NONE)
9000e3f0:	b994      	cbnz	r4, 9000e418 <HAL_UART_Receive_IT+0x154>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e3f2:	f103 0208 	add.w	r2, r3, #8
9000e3f6:	e852 2f00 	ldrex	r2, [r2]
    ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
9000e3fa:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e3fe:	f103 0008 	add.w	r0, r3, #8
9000e402:	e840 2100 	strex	r1, r2, [r0]
9000e406:	2900      	cmp	r1, #0
9000e408:	d1f3      	bne.n	9000e3f2 <HAL_UART_Receive_IT+0x12e>
9000e40a:	e7a9      	b.n	9000e360 <HAL_UART_Receive_IT+0x9c>
9000e40c:	4a0d      	ldr	r2, [pc, #52]	@ (9000e444 <HAL_UART_Receive_IT+0x180>)
9000e40e:	6742      	str	r2, [r0, #116]	@ 0x74
    if (huart->Init.Parity != UART_PARITY_NONE)
9000e410:	e79e      	b.n	9000e350 <HAL_UART_Receive_IT+0x8c>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000e412:	b194      	cbz	r4, 9000e43a <HAL_UART_Receive_IT+0x176>
      huart->RxISR = UART_RxISR_8BIT_FIFOEN;
9000e414:	4a0d      	ldr	r2, [pc, #52]	@ (9000e44c <HAL_UART_Receive_IT+0x188>)
9000e416:	6742      	str	r2, [r0, #116]	@ 0x74
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e418:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
9000e41c:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e420:	e843 2100 	strex	r1, r2, [r3]
9000e424:	2900      	cmp	r1, #0
9000e426:	d0e4      	beq.n	9000e3f2 <HAL_UART_Receive_IT+0x12e>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e428:	e853 2f00 	ldrex	r2, [r3]
9000e42c:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e430:	e843 2100 	strex	r1, r2, [r3]
9000e434:	2900      	cmp	r1, #0
9000e436:	d1ef      	bne.n	9000e418 <HAL_UART_Receive_IT+0x154>
9000e438:	e7db      	b.n	9000e3f2 <HAL_UART_Receive_IT+0x12e>
9000e43a:	4a05      	ldr	r2, [pc, #20]	@ (9000e450 <HAL_UART_Receive_IT+0x18c>)
9000e43c:	6742      	str	r2, [r0, #116]	@ 0x74
    if (huart->Init.Parity != UART_PARITY_NONE)
9000e43e:	e7d8      	b.n	9000e3f2 <HAL_UART_Receive_IT+0x12e>
9000e440:	58000c00 	.word	0x58000c00
9000e444:	9000e8f5 	.word	0x9000e8f5
9000e448:	9000e8ad 	.word	0x9000e8ad
9000e44c:	9000e939 	.word	0x9000e939
9000e450:	9000eb61 	.word	0x9000eb61

9000e454 <UART_DMAAbortOnError>:
{
9000e454:	b508      	push	{r3, lr}
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
9000e456:	6b80      	ldr	r0, [r0, #56]	@ 0x38
  huart->RxXferCount = 0U;
9000e458:	2300      	movs	r3, #0
9000e45a:	f8a0 305e 	strh.w	r3, [r0, #94]	@ 0x5e
  HAL_UART_ErrorCallback(huart);
9000e45e:	f7f5 fa5b 	bl	90003918 <HAL_UART_ErrorCallback>
}
9000e462:	bd08      	pop	{r3, pc}

9000e464 <HAL_UARTEx_RxEventCallback>:
}
9000e464:	4770      	bx	lr
9000e466:	bf00      	nop

9000e468 <HAL_UART_IRQHandler>:
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
9000e468:	6803      	ldr	r3, [r0, #0]
  errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | USART_ISR_RTOF));
9000e46a:	f640 0c0f 	movw	ip, #2063	@ 0x80f
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
9000e46e:	69da      	ldr	r2, [r3, #28]
  if (errorflags == 0U)
9000e470:	ea12 0f0c 	tst.w	r2, ip
{
9000e474:	b570      	push	{r4, r5, r6, lr}
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
9000e476:	681d      	ldr	r5, [r3, #0]
{
9000e478:	4604      	mov	r4, r0
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
9000e47a:	6899      	ldr	r1, [r3, #8]
  if (errorflags == 0U)
9000e47c:	d145      	bne.n	9000e50a <HAL_UART_IRQHandler+0xa2>
    if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
9000e47e:	0696      	lsls	r6, r2, #26
9000e480:	d507      	bpl.n	9000e492 <HAL_UART_IRQHandler+0x2a>
        && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
9000e482:	f005 0c20 	and.w	ip, r5, #32
            || ((cr3its & USART_CR3_RXFTIE) != 0U)))
9000e486:	f001 5680 	and.w	r6, r1, #268435456	@ 0x10000000
9000e48a:	ea5c 0c06 	orrs.w	ip, ip, r6
9000e48e:	f040 812a 	bne.w	9000e6e6 <HAL_UART_IRQHandler+0x27e>
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000e492:	6ee0      	ldr	r0, [r4, #108]	@ 0x6c
9000e494:	2801      	cmp	r0, #1
9000e496:	f000 80cd 	beq.w	9000e634 <HAL_UART_IRQHandler+0x1cc>
  if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
9000e49a:	02d0      	lsls	r0, r2, #11
9000e49c:	d41d      	bmi.n	9000e4da <HAL_UART_IRQHandler+0x72>
  if (((isrflags & USART_ISR_TXE_TXFNF) != 0U)
9000e49e:	0610      	lsls	r0, r2, #24
9000e4a0:	d506      	bpl.n	9000e4b0 <HAL_UART_IRQHandler+0x48>
          || ((cr3its & USART_CR3_TXFTIE) != 0U)))
9000e4a2:	f401 0100 	and.w	r1, r1, #8388608	@ 0x800000
      && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
9000e4a6:	f005 0080 	and.w	r0, r5, #128	@ 0x80
          || ((cr3its & USART_CR3_TXFTIE) != 0U)))
9000e4aa:	4308      	orrs	r0, r1
9000e4ac:	f040 8122 	bne.w	9000e6f4 <HAL_UART_IRQHandler+0x28c>
  if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
9000e4b0:	0651      	lsls	r1, r2, #25
9000e4b2:	d51c      	bpl.n	9000e4ee <HAL_UART_IRQHandler+0x86>
9000e4b4:	066e      	lsls	r6, r5, #25
9000e4b6:	d51a      	bpl.n	9000e4ee <HAL_UART_IRQHandler+0x86>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e4b8:	e853 2f00 	ldrex	r2, [r3]
  * @retval None
  */
static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
  /* Disable the UART Transmit Complete Interrupt */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
9000e4bc:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e4c0:	e843 2100 	strex	r1, r2, [r3]
9000e4c4:	2900      	cmp	r1, #0
9000e4c6:	d1f7      	bne.n	9000e4b8 <HAL_UART_IRQHandler+0x50>

  /* Tx process is ended, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
9000e4c8:	2220      	movs	r2, #32

  /* Cleat TxISR function pointer */
  huart->TxISR = NULL;
9000e4ca:	2300      	movs	r3, #0
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxCpltCallback(huart);
9000e4cc:	4620      	mov	r0, r4
  huart->gState = HAL_UART_STATE_READY;
9000e4ce:	f8c4 2088 	str.w	r2, [r4, #136]	@ 0x88
  huart->TxISR = NULL;
9000e4d2:	67a3      	str	r3, [r4, #120]	@ 0x78
  HAL_UART_TxCpltCallback(huart);
9000e4d4:	f7f5 fa0c 	bl	900038f0 <HAL_UART_TxCpltCallback>
}
9000e4d8:	bd70      	pop	{r4, r5, r6, pc}
  if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
9000e4da:	024e      	lsls	r6, r1, #9
9000e4dc:	d5df      	bpl.n	9000e49e <HAL_UART_IRQHandler+0x36>
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
9000e4de:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
    HAL_UARTEx_WakeupCallback(huart);
9000e4e2:	4620      	mov	r0, r4
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
9000e4e4:	621a      	str	r2, [r3, #32]
}
9000e4e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_UARTEx_WakeupCallback(huart);
9000e4ea:	f000 bfbf 	b.w	9000f46c <HAL_UARTEx_WakeupCallback>
  if (((isrflags & USART_ISR_TXFE) != 0U) && ((cr1its & USART_CR1_TXFEIE) != 0U))
9000e4ee:	0210      	lsls	r0, r2, #8
9000e4f0:	d502      	bpl.n	9000e4f8 <HAL_UART_IRQHandler+0x90>
9000e4f2:	0069      	lsls	r1, r5, #1
9000e4f4:	f100 813d 	bmi.w	9000e772 <HAL_UART_IRQHandler+0x30a>
  if (((isrflags & USART_ISR_RXFF) != 0U) && ((cr1its & USART_CR1_RXFFIE) != 0U))
9000e4f8:	01d3      	lsls	r3, r2, #7
9000e4fa:	d5ed      	bpl.n	9000e4d8 <HAL_UART_IRQHandler+0x70>
9000e4fc:	2d00      	cmp	r5, #0
9000e4fe:	daeb      	bge.n	9000e4d8 <HAL_UART_IRQHandler+0x70>
    HAL_UARTEx_RxFifoFullCallback(huart);
9000e500:	4620      	mov	r0, r4
}
9000e502:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_UARTEx_RxFifoFullCallback(huart);
9000e506:	f000 bfb3 	b.w	9000f470 <HAL_UARTEx_RxFifoFullCallback>
      && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
9000e50a:	48b9      	ldr	r0, [pc, #740]	@ (9000e7f0 <HAL_UART_IRQHandler+0x388>)
9000e50c:	4008      	ands	r0, r1
9000e50e:	f040 8125 	bne.w	9000e75c <HAL_UART_IRQHandler+0x2f4>
           || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U))))
9000e512:	4eb8      	ldr	r6, [pc, #736]	@ (9000e7f4 <HAL_UART_IRQHandler+0x38c>)
9000e514:	4235      	tst	r5, r6
9000e516:	d0bc      	beq.n	9000e492 <HAL_UART_IRQHandler+0x2a>
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000e518:	07d6      	lsls	r6, r2, #31
9000e51a:	d51a      	bpl.n	9000e552 <HAL_UART_IRQHandler+0xea>
9000e51c:	05ee      	lsls	r6, r5, #23
9000e51e:	f140 8103 	bpl.w	9000e728 <HAL_UART_IRQHandler+0x2c0>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
9000e522:	2601      	movs	r6, #1
9000e524:	621e      	str	r6, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_PE;
9000e526:	f8d4 6090 	ldr.w	r6, [r4, #144]	@ 0x90
9000e52a:	f046 0601 	orr.w	r6, r6, #1
9000e52e:	f8c4 6090 	str.w	r6, [r4, #144]	@ 0x90
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000e532:	0796      	lsls	r6, r2, #30
9000e534:	f140 80fb 	bpl.w	9000e72e <HAL_UART_IRQHandler+0x2c6>
9000e538:	07ce      	lsls	r6, r1, #31
9000e53a:	d50a      	bpl.n	9000e552 <HAL_UART_IRQHandler+0xea>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
9000e53c:	2602      	movs	r6, #2
9000e53e:	621e      	str	r6, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_FE;
9000e540:	f8d4 6090 	ldr.w	r6, [r4, #144]	@ 0x90
9000e544:	f046 0604 	orr.w	r6, r6, #4
9000e548:	f8c4 6090 	str.w	r6, [r4, #144]	@ 0x90
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000e54c:	0756      	lsls	r6, r2, #29
9000e54e:	f100 80f4 	bmi.w	9000e73a <HAL_UART_IRQHandler+0x2d2>
    if (((isrflags & USART_ISR_ORE) != 0U)
9000e552:	0716      	lsls	r6, r2, #28
9000e554:	d50b      	bpl.n	9000e56e <HAL_UART_IRQHandler+0x106>
        && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
9000e556:	f005 0620 	and.w	r6, r5, #32
9000e55a:	4306      	orrs	r6, r0
9000e55c:	d007      	beq.n	9000e56e <HAL_UART_IRQHandler+0x106>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
9000e55e:	2008      	movs	r0, #8
9000e560:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
9000e562:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
9000e566:	f040 0008 	orr.w	r0, r0, #8
9000e56a:	f8c4 0090 	str.w	r0, [r4, #144]	@ 0x90
    if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
9000e56e:	0510      	lsls	r0, r2, #20
9000e570:	d50a      	bpl.n	9000e588 <HAL_UART_IRQHandler+0x120>
9000e572:	016e      	lsls	r6, r5, #5
9000e574:	d508      	bpl.n	9000e588 <HAL_UART_IRQHandler+0x120>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
9000e576:	f44f 6000 	mov.w	r0, #2048	@ 0x800
9000e57a:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_RTO;
9000e57c:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
9000e580:	f040 0020 	orr.w	r0, r0, #32
9000e584:	f8c4 0090 	str.w	r0, [r4, #144]	@ 0x90
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
9000e588:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
9000e58c:	2800      	cmp	r0, #0
9000e58e:	d0a3      	beq.n	9000e4d8 <HAL_UART_IRQHandler+0x70>
      if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
9000e590:	0690      	lsls	r0, r2, #26
9000e592:	d506      	bpl.n	9000e5a2 <HAL_UART_IRQHandler+0x13a>
          && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
9000e594:	f005 0520 	and.w	r5, r5, #32
              || ((cr3its & USART_CR3_RXFTIE) != 0U)))
9000e598:	f001 5180 	and.w	r1, r1, #268435456	@ 0x10000000
9000e59c:	430d      	orrs	r5, r1
9000e59e:	f040 80d5 	bne.w	9000e74c <HAL_UART_IRQHandler+0x2e4>
      errorcode = huart->ErrorCode;
9000e5a2:	f8d4 1090 	ldr.w	r1, [r4, #144]	@ 0x90
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
9000e5a6:	689a      	ldr	r2, [r3, #8]
          ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
9000e5a8:	f001 0128 	and.w	r1, r1, #40	@ 0x28
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
9000e5ac:	f002 0240 	and.w	r2, r2, #64	@ 0x40
9000e5b0:	ea52 0501 	orrs.w	r5, r2, r1
9000e5b4:	f000 80e2 	beq.w	9000e77c <HAL_UART_IRQHandler+0x314>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e5b8:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000e5bc:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e5c0:	e843 2100 	strex	r1, r2, [r3]
9000e5c4:	2900      	cmp	r1, #0
9000e5c6:	d1f7      	bne.n	9000e5b8 <HAL_UART_IRQHandler+0x150>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000e5c8:	488b      	ldr	r0, [pc, #556]	@ (9000e7f8 <HAL_UART_IRQHandler+0x390>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e5ca:	f103 0208 	add.w	r2, r3, #8
9000e5ce:	e852 2f00 	ldrex	r2, [r2]
9000e5d2:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e5d4:	f103 0508 	add.w	r5, r3, #8
9000e5d8:	e845 2100 	strex	r1, r2, [r5]
9000e5dc:	2900      	cmp	r1, #0
9000e5de:	d1f4      	bne.n	9000e5ca <HAL_UART_IRQHandler+0x162>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000e5e0:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000e5e2:	2a01      	cmp	r2, #1
9000e5e4:	f000 808e 	beq.w	9000e704 <HAL_UART_IRQHandler+0x29c>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000e5e8:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9000e5ea:	2120      	movs	r1, #32
9000e5ec:	f8c4 108c 	str.w	r1, [r4, #140]	@ 0x8c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000e5f0:	66e2      	str	r2, [r4, #108]	@ 0x6c
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000e5f2:	6899      	ldr	r1, [r3, #8]
  huart->RxISR = NULL;
9000e5f4:	6762      	str	r2, [r4, #116]	@ 0x74
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000e5f6:	064a      	lsls	r2, r1, #25
9000e5f8:	f140 80b7 	bpl.w	9000e76a <HAL_UART_IRQHandler+0x302>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e5fc:	f103 0208 	add.w	r2, r3, #8
9000e600:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
9000e604:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e608:	f103 0008 	add.w	r0, r3, #8
9000e60c:	e840 2100 	strex	r1, r2, [r0]
9000e610:	2900      	cmp	r1, #0
9000e612:	d1f3      	bne.n	9000e5fc <HAL_UART_IRQHandler+0x194>
          if (huart->hdmarx != NULL)
9000e614:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
9000e618:	2800      	cmp	r0, #0
9000e61a:	f000 80a6 	beq.w	9000e76a <HAL_UART_IRQHandler+0x302>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
9000e61e:	4b77      	ldr	r3, [pc, #476]	@ (9000e7fc <HAL_UART_IRQHandler+0x394>)
9000e620:	6503      	str	r3, [r0, #80]	@ 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
9000e622:	f7fa f8b5 	bl	90008790 <HAL_DMA_Abort_IT>
9000e626:	2800      	cmp	r0, #0
9000e628:	f43f af56 	beq.w	9000e4d8 <HAL_UART_IRQHandler+0x70>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
9000e62c:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
9000e630:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9000e632:	e05c      	b.n	9000e6ee <HAL_UART_IRQHandler+0x286>
      && ((isrflags & USART_ISR_IDLE) != 0U)
9000e634:	06d6      	lsls	r6, r2, #27
9000e636:	f57f af30 	bpl.w	9000e49a <HAL_UART_IRQHandler+0x32>
      && ((cr1its & USART_ISR_IDLE) != 0U))
9000e63a:	06e8      	lsls	r0, r5, #27
9000e63c:	f57f af2d 	bpl.w	9000e49a <HAL_UART_IRQHandler+0x32>
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
9000e640:	2210      	movs	r2, #16
          && (nb_remaining_rx_data < huart->RxXferSize))
9000e642:	f8b4 505c 	ldrh.w	r5, [r4, #92]	@ 0x5c
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
9000e646:	621a      	str	r2, [r3, #32]
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000e648:	689a      	ldr	r2, [r3, #8]
9000e64a:	0656      	lsls	r6, r2, #25
9000e64c:	f140 809c 	bpl.w	9000e788 <HAL_UART_IRQHandler+0x320>
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
9000e650:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
9000e654:	6801      	ldr	r1, [r0, #0]
9000e656:	6849      	ldr	r1, [r1, #4]
9000e658:	b289      	uxth	r1, r1
      if ((nb_remaining_rx_data > 0U)
9000e65a:	2900      	cmp	r1, #0
9000e65c:	f000 80d0 	beq.w	9000e800 <HAL_UART_IRQHandler+0x398>
          && (nb_remaining_rx_data < huart->RxXferSize))
9000e660:	42a9      	cmp	r1, r5
9000e662:	f080 80cd 	bcs.w	9000e800 <HAL_UART_IRQHandler+0x398>
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
9000e666:	69c2      	ldr	r2, [r0, #28]
        huart->RxXferCount = nb_remaining_rx_data;
9000e668:	f8a4 105e 	strh.w	r1, [r4, #94]	@ 0x5e
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
9000e66c:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
9000e670:	d02f      	beq.n	9000e6d2 <HAL_UART_IRQHandler+0x26a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e672:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
9000e676:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e67a:	e843 2100 	strex	r1, r2, [r3]
9000e67e:	2900      	cmp	r1, #0
9000e680:	d1f7      	bne.n	9000e672 <HAL_UART_IRQHandler+0x20a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e682:	f103 0208 	add.w	r2, r3, #8
9000e686:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
9000e68a:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e68e:	f103 0508 	add.w	r5, r3, #8
9000e692:	e845 2100 	strex	r1, r2, [r5]
9000e696:	2900      	cmp	r1, #0
9000e698:	d1f3      	bne.n	9000e682 <HAL_UART_IRQHandler+0x21a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e69a:	f103 0208 	add.w	r2, r3, #8
9000e69e:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
9000e6a2:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e6a6:	f103 0508 	add.w	r5, r3, #8
9000e6aa:	e845 2100 	strex	r1, r2, [r5]
9000e6ae:	2900      	cmp	r1, #0
9000e6b0:	d1f3      	bne.n	9000e69a <HAL_UART_IRQHandler+0x232>
          huart->RxState = HAL_UART_STATE_READY;
9000e6b2:	2220      	movs	r2, #32
9000e6b4:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000e6b8:	66e1      	str	r1, [r4, #108]	@ 0x6c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e6ba:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000e6be:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e6c2:	e843 2100 	strex	r1, r2, [r3]
9000e6c6:	2900      	cmp	r1, #0
9000e6c8:	d1f7      	bne.n	9000e6ba <HAL_UART_IRQHandler+0x252>
          (void)HAL_DMA_Abort(huart->hdmarx);
9000e6ca:	f7f9 feab 	bl	90008424 <HAL_DMA_Abort>
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
9000e6ce:	f8b4 505c 	ldrh.w	r5, [r4, #92]	@ 0x5c
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
9000e6d2:	2302      	movs	r3, #2
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
9000e6d4:	4620      	mov	r0, r4
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
9000e6d6:	6723      	str	r3, [r4, #112]	@ 0x70
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
9000e6d8:	f8b4 105e 	ldrh.w	r1, [r4, #94]	@ 0x5e
9000e6dc:	1a69      	subs	r1, r5, r1
9000e6de:	b289      	uxth	r1, r1
9000e6e0:	f7ff fec0 	bl	9000e464 <HAL_UARTEx_RxEventCallback>
}
9000e6e4:	bd70      	pop	{r4, r5, r6, pc}
      if (huart->RxISR != NULL)
9000e6e6:	6f43      	ldr	r3, [r0, #116]	@ 0x74
9000e6e8:	2b00      	cmp	r3, #0
9000e6ea:	f43f aef5 	beq.w	9000e4d8 <HAL_UART_IRQHandler+0x70>
}
9000e6ee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
9000e6f2:	4718      	bx	r3
    if (huart->TxISR != NULL)
9000e6f4:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
9000e6f6:	2b00      	cmp	r3, #0
9000e6f8:	f43f aeee 	beq.w	9000e4d8 <HAL_UART_IRQHandler+0x70>
      huart->TxISR(huart);
9000e6fc:	4620      	mov	r0, r4
}
9000e6fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      huart->TxISR(huart);
9000e702:	4718      	bx	r3
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e704:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000e708:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e70c:	e843 2100 	strex	r1, r2, [r3]
9000e710:	2900      	cmp	r1, #0
9000e712:	f43f af69 	beq.w	9000e5e8 <HAL_UART_IRQHandler+0x180>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e716:	e853 2f00 	ldrex	r2, [r3]
9000e71a:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e71e:	e843 2100 	strex	r1, r2, [r3]
9000e722:	2900      	cmp	r1, #0
9000e724:	d1ee      	bne.n	9000e704 <HAL_UART_IRQHandler+0x29c>
9000e726:	e75f      	b.n	9000e5e8 <HAL_UART_IRQHandler+0x180>
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000e728:	0796      	lsls	r6, r2, #30
9000e72a:	f53f af12 	bmi.w	9000e552 <HAL_UART_IRQHandler+0xea>
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000e72e:	0756      	lsls	r6, r2, #29
9000e730:	f57f af0f 	bpl.w	9000e552 <HAL_UART_IRQHandler+0xea>
9000e734:	07ce      	lsls	r6, r1, #31
9000e736:	f57f af0c 	bpl.w	9000e552 <HAL_UART_IRQHandler+0xea>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
9000e73a:	2604      	movs	r6, #4
9000e73c:	621e      	str	r6, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_NE;
9000e73e:	f8d4 6090 	ldr.w	r6, [r4, #144]	@ 0x90
9000e742:	f046 0602 	orr.w	r6, r6, #2
9000e746:	f8c4 6090 	str.w	r6, [r4, #144]	@ 0x90
9000e74a:	e702      	b.n	9000e552 <HAL_UART_IRQHandler+0xea>
        if (huart->RxISR != NULL)
9000e74c:	6f62      	ldr	r2, [r4, #116]	@ 0x74
9000e74e:	2a00      	cmp	r2, #0
9000e750:	f43f af27 	beq.w	9000e5a2 <HAL_UART_IRQHandler+0x13a>
          huart->RxISR(huart);
9000e754:	4620      	mov	r0, r4
9000e756:	4790      	blx	r2
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
9000e758:	6823      	ldr	r3, [r4, #0]
9000e75a:	e722      	b.n	9000e5a2 <HAL_UART_IRQHandler+0x13a>
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000e75c:	07d6      	lsls	r6, r2, #31
9000e75e:	f57f aee8 	bpl.w	9000e532 <HAL_UART_IRQHandler+0xca>
9000e762:	05ee      	lsls	r6, r5, #23
9000e764:	f57f aee5 	bpl.w	9000e532 <HAL_UART_IRQHandler+0xca>
9000e768:	e6db      	b.n	9000e522 <HAL_UART_IRQHandler+0xba>
            HAL_UART_ErrorCallback(huart);
9000e76a:	4620      	mov	r0, r4
9000e76c:	f7f5 f8d4 	bl	90003918 <HAL_UART_ErrorCallback>
}
9000e770:	bd70      	pop	{r4, r5, r6, pc}
    HAL_UARTEx_TxFifoEmptyCallback(huart);
9000e772:	4620      	mov	r0, r4
}
9000e774:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_UARTEx_TxFifoEmptyCallback(huart);
9000e778:	f000 be7c 	b.w	9000f474 <HAL_UARTEx_TxFifoEmptyCallback>
        HAL_UART_ErrorCallback(huart);
9000e77c:	4620      	mov	r0, r4
9000e77e:	f7f5 f8cb 	bl	90003918 <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
9000e782:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
}
9000e786:	bd70      	pop	{r4, r5, r6, pc}
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
9000e788:	f8b4 105e 	ldrh.w	r1, [r4, #94]	@ 0x5e
      if ((huart->RxXferCount > 0U)
9000e78c:	f8b4 205e 	ldrh.w	r2, [r4, #94]	@ 0x5e
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
9000e790:	1a6d      	subs	r5, r5, r1
      if ((huart->RxXferCount > 0U)
9000e792:	b292      	uxth	r2, r2
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
9000e794:	b2a9      	uxth	r1, r5
          && (nb_rx_data > 0U))
9000e796:	2900      	cmp	r1, #0
9000e798:	f43f ae9e 	beq.w	9000e4d8 <HAL_UART_IRQHandler+0x70>
9000e79c:	2a00      	cmp	r2, #0
9000e79e:	f43f ae9b 	beq.w	9000e4d8 <HAL_UART_IRQHandler+0x70>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e7a2:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000e7a6:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e7aa:	e843 2000 	strex	r0, r2, [r3]
9000e7ae:	2800      	cmp	r0, #0
9000e7b0:	d1f7      	bne.n	9000e7a2 <HAL_UART_IRQHandler+0x33a>
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000e7b2:	4d11      	ldr	r5, [pc, #68]	@ (9000e7f8 <HAL_UART_IRQHandler+0x390>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e7b4:	f103 0208 	add.w	r2, r3, #8
9000e7b8:	e852 2f00 	ldrex	r2, [r2]
9000e7bc:	402a      	ands	r2, r5
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e7be:	f103 0608 	add.w	r6, r3, #8
9000e7c2:	e846 2000 	strex	r0, r2, [r6]
9000e7c6:	2800      	cmp	r0, #0
9000e7c8:	d1f4      	bne.n	9000e7b4 <HAL_UART_IRQHandler+0x34c>
        huart->RxState = HAL_UART_STATE_READY;
9000e7ca:	2220      	movs	r2, #32
        huart->RxISR = NULL;
9000e7cc:	6760      	str	r0, [r4, #116]	@ 0x74
        huart->RxState = HAL_UART_STATE_READY;
9000e7ce:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000e7d2:	66e0      	str	r0, [r4, #108]	@ 0x6c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e7d4:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000e7d8:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e7dc:	e843 2000 	strex	r0, r2, [r3]
9000e7e0:	2800      	cmp	r0, #0
9000e7e2:	d1f7      	bne.n	9000e7d4 <HAL_UART_IRQHandler+0x36c>
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
9000e7e4:	2302      	movs	r3, #2
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
9000e7e6:	4620      	mov	r0, r4
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
9000e7e8:	6723      	str	r3, [r4, #112]	@ 0x70
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
9000e7ea:	f7ff fe3b 	bl	9000e464 <HAL_UARTEx_RxEventCallback>
}
9000e7ee:	bd70      	pop	{r4, r5, r6, pc}
9000e7f0:	10000001 	.word	0x10000001
9000e7f4:	04000120 	.word	0x04000120
9000e7f8:	effffffe 	.word	0xeffffffe
9000e7fc:	9000e455 	.word	0x9000e455
        if (nb_remaining_rx_data == huart->RxXferSize)
9000e800:	42a9      	cmp	r1, r5
9000e802:	f47f ae69 	bne.w	9000e4d8 <HAL_UART_IRQHandler+0x70>
          if (huart->hdmarx->Init.Mode == DMA_CIRCULAR)
9000e806:	69c3      	ldr	r3, [r0, #28]
9000e808:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
9000e80c:	d0ea      	beq.n	9000e7e4 <HAL_UART_IRQHandler+0x37c>
}
9000e80e:	bd70      	pop	{r4, r5, r6, pc}

9000e810 <UART_RxISR_16BIT.part.0>:
/**
  * @brief RX interrupt handler for 7 or 8 bits data word length .
  * @param huart UART handle.
  * @retval None
  */
static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
9000e810:	6803      	ldr	r3, [r0, #0]
9000e812:	b510      	push	{r4, lr}
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e814:	e853 2f00 	ldrex	r2, [r3]
    huart->RxXferCount--;

    if (huart->RxXferCount == 0U)
    {
      /* Disable the UART Parity Error Interrupt and RXNE interrupts */
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000e818:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e81c:	e843 2100 	strex	r1, r2, [r3]
9000e820:	2900      	cmp	r1, #0
9000e822:	d1f7      	bne.n	9000e814 <UART_RxISR_16BIT.part.0+0x4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e824:	f103 0208 	add.w	r2, r3, #8
9000e828:	e852 2f00 	ldrex	r2, [r2]

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
9000e82c:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e830:	f103 0408 	add.w	r4, r3, #8
9000e834:	e844 2100 	strex	r1, r2, [r4]
9000e838:	2900      	cmp	r1, #0
9000e83a:	d1f3      	bne.n	9000e824 <UART_RxISR_16BIT.part.0+0x14>
      huart->RxISR = NULL;

      /* Initialize type of RxEvent to Transfer Complete */
      huart->RxEventType = HAL_UART_RXEVENT_TC;

      if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000e83c:	4a1a      	ldr	r2, [pc, #104]	@ (9000e8a8 <UART_RxISR_16BIT.part.0+0x98>)
      huart->RxState = HAL_UART_STATE_READY;
9000e83e:	2420      	movs	r4, #32
      huart->RxISR = NULL;
9000e840:	6741      	str	r1, [r0, #116]	@ 0x74
      if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000e842:	4293      	cmp	r3, r2
      huart->RxState = HAL_UART_STATE_READY;
9000e844:	f8c0 408c 	str.w	r4, [r0, #140]	@ 0x8c
      huart->RxEventType = HAL_UART_RXEVENT_TC;
9000e848:	6701      	str	r1, [r0, #112]	@ 0x70
      if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000e84a:	d002      	beq.n	9000e852 <UART_RxISR_16BIT.part.0+0x42>
      {
        /* Check that USART RTOEN bit is set */
        if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
9000e84c:	685a      	ldr	r2, [r3, #4]
9000e84e:	0211      	lsls	r1, r2, #8
9000e850:	d416      	bmi.n	9000e880 <UART_RxISR_16BIT.part.0+0x70>
        }
      }

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000e852:	6ec2      	ldr	r2, [r0, #108]	@ 0x6c
9000e854:	2a01      	cmp	r2, #1
9000e856:	d124      	bne.n	9000e8a2 <UART_RxISR_16BIT.part.0+0x92>
      {
        /* Set reception type to Standard */
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000e858:	2200      	movs	r2, #0
9000e85a:	66c2      	str	r2, [r0, #108]	@ 0x6c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e85c:	e853 2f00 	ldrex	r2, [r3]

        /* Disable IDLE interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000e860:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e864:	e843 2100 	strex	r1, r2, [r3]
9000e868:	2900      	cmp	r1, #0
9000e86a:	d1f7      	bne.n	9000e85c <UART_RxISR_16BIT.part.0+0x4c>

        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
9000e86c:	69da      	ldr	r2, [r3, #28]
9000e86e:	06d2      	lsls	r2, r2, #27
9000e870:	d501      	bpl.n	9000e876 <UART_RxISR_16BIT.part.0+0x66>
        {
          /* Clear IDLE Flag */
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
9000e872:	2210      	movs	r2, #16
9000e874:	621a      	str	r2, [r3, #32]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
9000e876:	f8b0 105c 	ldrh.w	r1, [r0, #92]	@ 0x5c
9000e87a:	f7ff fdf3 	bl	9000e464 <HAL_UARTEx_RxEventCallback>
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
9000e87e:	bd10      	pop	{r4, pc}
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e880:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
9000e884:	f022 6280 	bic.w	r2, r2, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e888:	e843 2100 	strex	r1, r2, [r3]
9000e88c:	2900      	cmp	r1, #0
9000e88e:	d0e0      	beq.n	9000e852 <UART_RxISR_16BIT.part.0+0x42>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000e890:	e853 2f00 	ldrex	r2, [r3]
9000e894:	f022 6280 	bic.w	r2, r2, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000e898:	e843 2100 	strex	r1, r2, [r3]
9000e89c:	2900      	cmp	r1, #0
9000e89e:	d1ef      	bne.n	9000e880 <UART_RxISR_16BIT.part.0+0x70>
9000e8a0:	e7d7      	b.n	9000e852 <UART_RxISR_16BIT.part.0+0x42>
        HAL_UART_RxCpltCallback(huart);
9000e8a2:	f7f5 f827 	bl	900038f4 <HAL_UART_RxCpltCallback>
}
9000e8a6:	bd10      	pop	{r4, pc}
9000e8a8:	58000c00 	.word	0x58000c00

9000e8ac <UART_RxISR_16BIT>:
  *         interruptions have been enabled by HAL_UART_Receive_IT()
  * @param huart UART handle.
  * @retval None
  */
static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
{
9000e8ac:	b410      	push	{r4}
  uint16_t *tmp;
  uint16_t uhMask = huart->Mask;
  uint16_t  uhdata;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000e8ae:	f8d0 408c 	ldr.w	r4, [r0, #140]	@ 0x8c
  uint16_t uhMask = huart->Mask;
9000e8b2:	f8b0 1060 	ldrh.w	r1, [r0, #96]	@ 0x60
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000e8b6:	2c22      	cmp	r4, #34	@ 0x22
  {
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000e8b8:	6802      	ldr	r2, [r0, #0]
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000e8ba:	d006      	beq.n	9000e8ca <UART_RxISR_16BIT+0x1e>
    }
  }
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
9000e8bc:	6993      	ldr	r3, [r2, #24]
9000e8be:	f043 0308 	orr.w	r3, r3, #8
9000e8c2:	6193      	str	r3, [r2, #24]
  }
}
9000e8c4:	f85d 4b04 	ldr.w	r4, [sp], #4
9000e8c8:	4770      	bx	lr
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000e8ca:	6a52      	ldr	r2, [r2, #36]	@ 0x24
    *tmp = (uint16_t)(uhdata & uhMask);
9000e8cc:	6d84      	ldr	r4, [r0, #88]	@ 0x58
9000e8ce:	4011      	ands	r1, r2
9000e8d0:	f824 1b02 	strh.w	r1, [r4], #2
    huart->RxXferCount--;
9000e8d4:	f8b0 205e 	ldrh.w	r2, [r0, #94]	@ 0x5e
    huart->pRxBuffPtr += 2U;
9000e8d8:	6584      	str	r4, [r0, #88]	@ 0x58
    huart->RxXferCount--;
9000e8da:	3a01      	subs	r2, #1
9000e8dc:	b292      	uxth	r2, r2
9000e8de:	f8a0 205e 	strh.w	r2, [r0, #94]	@ 0x5e
    if (huart->RxXferCount == 0U)
9000e8e2:	f8b0 305e 	ldrh.w	r3, [r0, #94]	@ 0x5e
9000e8e6:	b29b      	uxth	r3, r3
9000e8e8:	2b00      	cmp	r3, #0
9000e8ea:	d1eb      	bne.n	9000e8c4 <UART_RxISR_16BIT+0x18>
}
9000e8ec:	f85d 4b04 	ldr.w	r4, [sp], #4
9000e8f0:	f7ff bf8e 	b.w	9000e810 <UART_RxISR_16BIT.part.0>

9000e8f4 <UART_RxISR_8BIT>:
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000e8f4:	f8d0 108c 	ldr.w	r1, [r0, #140]	@ 0x8c
  uint16_t uhMask = huart->Mask;
9000e8f8:	f8b0 c060 	ldrh.w	ip, [r0, #96]	@ 0x60
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000e8fc:	2922      	cmp	r1, #34	@ 0x22
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000e8fe:	6802      	ldr	r2, [r0, #0]
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000e900:	d004      	beq.n	9000e90c <UART_RxISR_8BIT+0x18>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
9000e902:	6993      	ldr	r3, [r2, #24]
9000e904:	f043 0308 	orr.w	r3, r3, #8
9000e908:	6193      	str	r3, [r2, #24]
}
9000e90a:	4770      	bx	lr
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000e90c:	6a52      	ldr	r2, [r2, #36]	@ 0x24
    *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
9000e90e:	6d81      	ldr	r1, [r0, #88]	@ 0x58
9000e910:	ea02 020c 	and.w	r2, r2, ip
9000e914:	700a      	strb	r2, [r1, #0]
    huart->RxXferCount--;
9000e916:	f8b0 205e 	ldrh.w	r2, [r0, #94]	@ 0x5e
    huart->pRxBuffPtr++;
9000e91a:	6d81      	ldr	r1, [r0, #88]	@ 0x58
    huart->RxXferCount--;
9000e91c:	3a01      	subs	r2, #1
    huart->pRxBuffPtr++;
9000e91e:	3101      	adds	r1, #1
    huart->RxXferCount--;
9000e920:	b292      	uxth	r2, r2
    huart->pRxBuffPtr++;
9000e922:	6581      	str	r1, [r0, #88]	@ 0x58
    huart->RxXferCount--;
9000e924:	f8a0 205e 	strh.w	r2, [r0, #94]	@ 0x5e
    if (huart->RxXferCount == 0U)
9000e928:	f8b0 305e 	ldrh.w	r3, [r0, #94]	@ 0x5e
9000e92c:	b29b      	uxth	r3, r3
9000e92e:	2b00      	cmp	r3, #0
9000e930:	d1eb      	bne.n	9000e90a <UART_RxISR_8BIT+0x16>
9000e932:	f7ff bf6d 	b.w	9000e810 <UART_RxISR_16BIT.part.0>
9000e936:	bf00      	nop

9000e938 <UART_RxISR_8BIT_FIFOEN>:
{
  uint16_t  uhMask = huart->Mask;
  uint16_t  uhdata;
  uint16_t  nb_rx_data;
  uint16_t  rxdatacount;
  uint32_t  isrflags = READ_REG(huart->Instance->ISR);
9000e938:	6803      	ldr	r3, [r0, #0]
{
9000e93a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  uint32_t  isrflags = READ_REG(huart->Instance->ISR);
9000e93e:	69dd      	ldr	r5, [r3, #28]
  uint32_t  cr1its   = READ_REG(huart->Instance->CR1);
9000e940:	6819      	ldr	r1, [r3, #0]
  uint32_t  cr3its   = READ_REG(huart->Instance->CR3);
9000e942:	689f      	ldr	r7, [r3, #8]

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000e944:	f8d0 208c 	ldr.w	r2, [r0, #140]	@ 0x8c
  uint16_t  uhMask = huart->Mask;
9000e948:	f8b0 9060 	ldrh.w	r9, [r0, #96]	@ 0x60
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000e94c:	2a22      	cmp	r2, #34	@ 0x22
9000e94e:	d005      	beq.n	9000e95c <UART_RxISR_8BIT_FIFOEN+0x24>
    }
  }
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
9000e950:	699a      	ldr	r2, [r3, #24]
9000e952:	f042 0208 	orr.w	r2, r2, #8
9000e956:	619a      	str	r2, [r3, #24]
  }
}
9000e958:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
9000e95c:	f8b0 3068 	ldrh.w	r3, [r0, #104]	@ 0x68
9000e960:	4604      	mov	r4, r0
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000e962:	f401 7a80 	and.w	sl, r1, #256	@ 0x100
        if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000e966:	f007 0701 	and.w	r7, r7, #1
9000e96a:	2b00      	cmp	r3, #0
9000e96c:	f000 80d8 	beq.w	9000eb20 <UART_RxISR_8BIT_FIFOEN+0x1e8>
9000e970:	2f00      	cmp	r7, #0
9000e972:	f000 80a3 	beq.w	9000eabc <UART_RxISR_8BIT_FIFOEN+0x184>
          huart->ErrorCode = HAL_UART_ERROR_NONE;
9000e976:	2600      	movs	r6, #0
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
9000e978:	2704      	movs	r7, #4
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
9000e97a:	f04f 0802 	mov.w	r8, #2
9000e97e:	e004      	b.n	9000e98a <UART_RxISR_8BIT_FIFOEN+0x52>
      if (huart->RxXferCount == 0U)
9000e980:	f8b4 305e 	ldrh.w	r3, [r4, #94]	@ 0x5e
9000e984:	b29b      	uxth	r3, r3
9000e986:	2b00      	cmp	r3, #0
9000e988:	d03e      	beq.n	9000ea08 <UART_RxISR_8BIT_FIFOEN+0xd0>
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
9000e98a:	06ab      	lsls	r3, r5, #26
9000e98c:	d573      	bpl.n	9000ea76 <UART_RxISR_8BIT_FIFOEN+0x13e>
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000e98e:	6823      	ldr	r3, [r4, #0]
      *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
9000e990:	6da2      	ldr	r2, [r4, #88]	@ 0x58
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000e992:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
      *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
9000e994:	ea03 0309 	and.w	r3, r3, r9
9000e998:	7013      	strb	r3, [r2, #0]
      huart->RxXferCount--;
9000e99a:	f8b4 205e 	ldrh.w	r2, [r4, #94]	@ 0x5e
      isrflags = READ_REG(huart->Instance->ISR);
9000e99e:	6823      	ldr	r3, [r4, #0]
      huart->RxXferCount--;
9000e9a0:	3a01      	subs	r2, #1
      huart->pRxBuffPtr++;
9000e9a2:	6da1      	ldr	r1, [r4, #88]	@ 0x58
      huart->RxXferCount--;
9000e9a4:	b292      	uxth	r2, r2
      huart->pRxBuffPtr++;
9000e9a6:	3101      	adds	r1, #1
      huart->RxXferCount--;
9000e9a8:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
      isrflags = READ_REG(huart->Instance->ISR);
9000e9ac:	69dd      	ldr	r5, [r3, #28]
      huart->pRxBuffPtr++;
9000e9ae:	65a1      	str	r1, [r4, #88]	@ 0x58
      if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
9000e9b0:	0768      	lsls	r0, r5, #29
9000e9b2:	d0e5      	beq.n	9000e980 <UART_RxISR_8BIT_FIFOEN+0x48>
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000e9b4:	07e9      	lsls	r1, r5, #31
9000e9b6:	d50a      	bpl.n	9000e9ce <UART_RxISR_8BIT_FIFOEN+0x96>
9000e9b8:	f1ba 0f00 	cmp.w	sl, #0
9000e9bc:	d007      	beq.n	9000e9ce <UART_RxISR_8BIT_FIFOEN+0x96>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
9000e9be:	2201      	movs	r2, #1
9000e9c0:	621a      	str	r2, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_PE;
9000e9c2:	f8d4 2090 	ldr.w	r2, [r4, #144]	@ 0x90
9000e9c6:	f042 0201 	orr.w	r2, r2, #1
9000e9ca:	f8c4 2090 	str.w	r2, [r4, #144]	@ 0x90
        if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000e9ce:	07aa      	lsls	r2, r5, #30
9000e9d0:	d507      	bpl.n	9000e9e2 <UART_RxISR_8BIT_FIFOEN+0xaa>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
9000e9d2:	f8c3 8020 	str.w	r8, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_FE;
9000e9d6:	f8d4 2090 	ldr.w	r2, [r4, #144]	@ 0x90
9000e9da:	f042 0204 	orr.w	r2, r2, #4
9000e9de:	f8c4 2090 	str.w	r2, [r4, #144]	@ 0x90
        if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000e9e2:	0768      	lsls	r0, r5, #29
9000e9e4:	d506      	bpl.n	9000e9f4 <UART_RxISR_8BIT_FIFOEN+0xbc>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
9000e9e6:	621f      	str	r7, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_NE;
9000e9e8:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
9000e9ec:	f043 0302 	orr.w	r3, r3, #2
9000e9f0:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
        if (huart->ErrorCode != HAL_UART_ERROR_NONE)
9000e9f4:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
9000e9f8:	2b00      	cmp	r3, #0
9000e9fa:	d0c1      	beq.n	9000e980 <UART_RxISR_8BIT_FIFOEN+0x48>
          HAL_UART_ErrorCallback(huart);
9000e9fc:	4620      	mov	r0, r4
9000e9fe:	f7f4 ff8b 	bl	90003918 <HAL_UART_ErrorCallback>
          huart->ErrorCode = HAL_UART_ERROR_NONE;
9000ea02:	f8c4 6090 	str.w	r6, [r4, #144]	@ 0x90
9000ea06:	e7bb      	b.n	9000e980 <UART_RxISR_8BIT_FIFOEN+0x48>
9000ea08:	6823      	ldr	r3, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ea0a:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
9000ea0e:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ea12:	e843 2100 	strex	r1, r2, [r3]
9000ea16:	2900      	cmp	r1, #0
9000ea18:	d1f7      	bne.n	9000ea0a <UART_RxISR_8BIT_FIFOEN+0xd2>
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000ea1a:	484e      	ldr	r0, [pc, #312]	@ (9000eb54 <UART_RxISR_8BIT_FIFOEN+0x21c>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ea1c:	f103 0208 	add.w	r2, r3, #8
9000ea20:	e852 2f00 	ldrex	r2, [r2]
9000ea24:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ea26:	f103 0508 	add.w	r5, r3, #8
9000ea2a:	e845 2100 	strex	r1, r2, [r5]
9000ea2e:	2900      	cmp	r1, #0
9000ea30:	d1f4      	bne.n	9000ea1c <UART_RxISR_8BIT_FIFOEN+0xe4>
        if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000ea32:	4a49      	ldr	r2, [pc, #292]	@ (9000eb58 <UART_RxISR_8BIT_FIFOEN+0x220>)
        huart->RxState = HAL_UART_STATE_READY;
9000ea34:	2020      	movs	r0, #32
        huart->RxISR = NULL;
9000ea36:	6761      	str	r1, [r4, #116]	@ 0x74
        if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000ea38:	4293      	cmp	r3, r2
        huart->RxState = HAL_UART_STATE_READY;
9000ea3a:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
        huart->RxEventType = HAL_UART_RXEVENT_TC;
9000ea3e:	6721      	str	r1, [r4, #112]	@ 0x70
        if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000ea40:	d002      	beq.n	9000ea48 <UART_RxISR_8BIT_FIFOEN+0x110>
          if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
9000ea42:	685a      	ldr	r2, [r3, #4]
9000ea44:	0211      	lsls	r1, r2, #8
9000ea46:	d46f      	bmi.n	9000eb28 <UART_RxISR_8BIT_FIFOEN+0x1f0>
        if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000ea48:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000ea4a:	2a01      	cmp	r2, #1
9000ea4c:	d17d      	bne.n	9000eb4a <UART_RxISR_8BIT_FIFOEN+0x212>
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000ea4e:	2200      	movs	r2, #0
9000ea50:	66e2      	str	r2, [r4, #108]	@ 0x6c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ea52:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000ea56:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ea5a:	e843 2100 	strex	r1, r2, [r3]
9000ea5e:	2900      	cmp	r1, #0
9000ea60:	d1f7      	bne.n	9000ea52 <UART_RxISR_8BIT_FIFOEN+0x11a>
          if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
9000ea62:	69da      	ldr	r2, [r3, #28]
9000ea64:	06d2      	lsls	r2, r2, #27
9000ea66:	d501      	bpl.n	9000ea6c <UART_RxISR_8BIT_FIFOEN+0x134>
            __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
9000ea68:	2210      	movs	r2, #16
9000ea6a:	621a      	str	r2, [r3, #32]
          HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
9000ea6c:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
9000ea70:	4620      	mov	r0, r4
9000ea72:	f7ff fcf7 	bl	9000e464 <HAL_UARTEx_RxEventCallback>
    rxdatacount = huart->RxXferCount;
9000ea76:	f8b4 305e 	ldrh.w	r3, [r4, #94]	@ 0x5e
9000ea7a:	b29b      	uxth	r3, r3
    if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
9000ea7c:	2b00      	cmp	r3, #0
9000ea7e:	f43f af6b 	beq.w	9000e958 <UART_RxISR_8BIT_FIFOEN+0x20>
9000ea82:	f8b4 2068 	ldrh.w	r2, [r4, #104]	@ 0x68
9000ea86:	429a      	cmp	r2, r3
9000ea88:	f67f af66 	bls.w	9000e958 <UART_RxISR_8BIT_FIFOEN+0x20>
9000ea8c:	6823      	ldr	r3, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ea8e:	f103 0208 	add.w	r2, r3, #8
9000ea92:	e852 2f00 	ldrex	r2, [r2]
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
9000ea96:	f022 5280 	bic.w	r2, r2, #268435456	@ 0x10000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ea9a:	f103 0008 	add.w	r0, r3, #8
9000ea9e:	e840 2100 	strex	r1, r2, [r0]
9000eaa2:	2900      	cmp	r1, #0
9000eaa4:	d1f3      	bne.n	9000ea8e <UART_RxISR_8BIT_FIFOEN+0x156>
      huart->RxISR = UART_RxISR_8BIT;
9000eaa6:	4a2d      	ldr	r2, [pc, #180]	@ (9000eb5c <UART_RxISR_8BIT_FIFOEN+0x224>)
9000eaa8:	6762      	str	r2, [r4, #116]	@ 0x74
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000eaaa:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
9000eaae:	f042 0220 	orr.w	r2, r2, #32
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000eab2:	e843 2100 	strex	r1, r2, [r3]
9000eab6:	2900      	cmp	r1, #0
9000eab8:	d1f7      	bne.n	9000eaaa <UART_RxISR_8BIT_FIFOEN+0x172>
9000eaba:	e74d      	b.n	9000e958 <UART_RxISR_8BIT_FIFOEN+0x20>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
9000eabc:	2601      	movs	r6, #1
9000eabe:	e004      	b.n	9000eaca <UART_RxISR_8BIT_FIFOEN+0x192>
      if (huart->RxXferCount == 0U)
9000eac0:	f8b4 305e 	ldrh.w	r3, [r4, #94]	@ 0x5e
9000eac4:	b29b      	uxth	r3, r3
9000eac6:	2b00      	cmp	r3, #0
9000eac8:	d09e      	beq.n	9000ea08 <UART_RxISR_8BIT_FIFOEN+0xd0>
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
9000eaca:	06a8      	lsls	r0, r5, #26
9000eacc:	d5d3      	bpl.n	9000ea76 <UART_RxISR_8BIT_FIFOEN+0x13e>
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000eace:	6823      	ldr	r3, [r4, #0]
      *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
9000ead0:	6da2      	ldr	r2, [r4, #88]	@ 0x58
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000ead2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
      *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
9000ead4:	ea03 0309 	and.w	r3, r3, r9
9000ead8:	7013      	strb	r3, [r2, #0]
      huart->RxXferCount--;
9000eada:	f8b4 305e 	ldrh.w	r3, [r4, #94]	@ 0x5e
      huart->pRxBuffPtr++;
9000eade:	6da2      	ldr	r2, [r4, #88]	@ 0x58
      huart->RxXferCount--;
9000eae0:	3b01      	subs	r3, #1
      huart->pRxBuffPtr++;
9000eae2:	3201      	adds	r2, #1
      huart->RxXferCount--;
9000eae4:	b29b      	uxth	r3, r3
      huart->pRxBuffPtr++;
9000eae6:	65a2      	str	r2, [r4, #88]	@ 0x58
      huart->RxXferCount--;
9000eae8:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
      isrflags = READ_REG(huart->Instance->ISR);
9000eaec:	6823      	ldr	r3, [r4, #0]
9000eaee:	69dd      	ldr	r5, [r3, #28]
      if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
9000eaf0:	0769      	lsls	r1, r5, #29
9000eaf2:	d0e5      	beq.n	9000eac0 <UART_RxISR_8BIT_FIFOEN+0x188>
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000eaf4:	07ea      	lsls	r2, r5, #31
9000eaf6:	d509      	bpl.n	9000eb0c <UART_RxISR_8BIT_FIFOEN+0x1d4>
9000eaf8:	f1ba 0f00 	cmp.w	sl, #0
9000eafc:	d006      	beq.n	9000eb0c <UART_RxISR_8BIT_FIFOEN+0x1d4>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
9000eafe:	621e      	str	r6, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_PE;
9000eb00:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
9000eb04:	f043 0301 	orr.w	r3, r3, #1
9000eb08:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
        if (huart->ErrorCode != HAL_UART_ERROR_NONE)
9000eb0c:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
9000eb10:	2b00      	cmp	r3, #0
9000eb12:	d0d5      	beq.n	9000eac0 <UART_RxISR_8BIT_FIFOEN+0x188>
          HAL_UART_ErrorCallback(huart);
9000eb14:	4620      	mov	r0, r4
9000eb16:	f7f4 feff 	bl	90003918 <HAL_UART_ErrorCallback>
          huart->ErrorCode = HAL_UART_ERROR_NONE;
9000eb1a:	f8c4 7090 	str.w	r7, [r4, #144]	@ 0x90
9000eb1e:	e7cf      	b.n	9000eac0 <UART_RxISR_8BIT_FIFOEN+0x188>
    rxdatacount = huart->RxXferCount;
9000eb20:	f8b0 305e 	ldrh.w	r3, [r0, #94]	@ 0x5e
}
9000eb24:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000eb28:	e853 2f00 	ldrex	r2, [r3]
            ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
9000eb2c:	f022 6280 	bic.w	r2, r2, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000eb30:	e843 2100 	strex	r1, r2, [r3]
9000eb34:	2900      	cmp	r1, #0
9000eb36:	d087      	beq.n	9000ea48 <UART_RxISR_8BIT_FIFOEN+0x110>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000eb38:	e853 2f00 	ldrex	r2, [r3]
9000eb3c:	f022 6280 	bic.w	r2, r2, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000eb40:	e843 2100 	strex	r1, r2, [r3]
9000eb44:	2900      	cmp	r1, #0
9000eb46:	d1ef      	bne.n	9000eb28 <UART_RxISR_8BIT_FIFOEN+0x1f0>
9000eb48:	e77e      	b.n	9000ea48 <UART_RxISR_8BIT_FIFOEN+0x110>
          HAL_UART_RxCpltCallback(huart);
9000eb4a:	4620      	mov	r0, r4
9000eb4c:	f7f4 fed2 	bl	900038f4 <HAL_UART_RxCpltCallback>
9000eb50:	e791      	b.n	9000ea76 <UART_RxISR_8BIT_FIFOEN+0x13e>
9000eb52:	bf00      	nop
9000eb54:	effffffe 	.word	0xeffffffe
9000eb58:	58000c00 	.word	0x58000c00
9000eb5c:	9000e8f5 	.word	0x9000e8f5

9000eb60 <UART_RxISR_16BIT_FIFOEN>:
  uint16_t *tmp;
  uint16_t  uhMask = huart->Mask;
  uint16_t  uhdata;
  uint16_t  nb_rx_data;
  uint16_t  rxdatacount;
  uint32_t  isrflags = READ_REG(huart->Instance->ISR);
9000eb60:	6803      	ldr	r3, [r0, #0]
{
9000eb62:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  uint32_t  isrflags = READ_REG(huart->Instance->ISR);
9000eb66:	69dd      	ldr	r5, [r3, #28]
  uint32_t  cr1its   = READ_REG(huart->Instance->CR1);
9000eb68:	6819      	ldr	r1, [r3, #0]
  uint32_t  cr3its   = READ_REG(huart->Instance->CR3);
9000eb6a:	689f      	ldr	r7, [r3, #8]

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000eb6c:	f8d0 208c 	ldr.w	r2, [r0, #140]	@ 0x8c
  uint16_t  uhMask = huart->Mask;
9000eb70:	f8b0 9060 	ldrh.w	r9, [r0, #96]	@ 0x60
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000eb74:	2a22      	cmp	r2, #34	@ 0x22
9000eb76:	d005      	beq.n	9000eb84 <UART_RxISR_16BIT_FIFOEN+0x24>
    }
  }
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
9000eb78:	699a      	ldr	r2, [r3, #24]
9000eb7a:	f042 0208 	orr.w	r2, r2, #8
9000eb7e:	619a      	str	r2, [r3, #24]
  }
}
9000eb80:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
9000eb84:	f8b0 3068 	ldrh.w	r3, [r0, #104]	@ 0x68
9000eb88:	4604      	mov	r4, r0
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000eb8a:	f401 7a80 	and.w	sl, r1, #256	@ 0x100
        if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000eb8e:	f007 0701 	and.w	r7, r7, #1
9000eb92:	2b00      	cmp	r3, #0
9000eb94:	f000 80d4 	beq.w	9000ed40 <UART_RxISR_16BIT_FIFOEN+0x1e0>
9000eb98:	2f00      	cmp	r7, #0
9000eb9a:	f000 80a1 	beq.w	9000ece0 <UART_RxISR_16BIT_FIFOEN+0x180>
          huart->ErrorCode = HAL_UART_ERROR_NONE;
9000eb9e:	2600      	movs	r6, #0
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
9000eba0:	2704      	movs	r7, #4
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
9000eba2:	f04f 0802 	mov.w	r8, #2
9000eba6:	e004      	b.n	9000ebb2 <UART_RxISR_16BIT_FIFOEN+0x52>
      if (huart->RxXferCount == 0U)
9000eba8:	f8b4 305e 	ldrh.w	r3, [r4, #94]	@ 0x5e
9000ebac:	b29b      	uxth	r3, r3
9000ebae:	2b00      	cmp	r3, #0
9000ebb0:	d03c      	beq.n	9000ec2c <UART_RxISR_16BIT_FIFOEN+0xcc>
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
9000ebb2:	06ab      	lsls	r3, r5, #26
9000ebb4:	d571      	bpl.n	9000ec9a <UART_RxISR_16BIT_FIFOEN+0x13a>
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000ebb6:	6823      	ldr	r3, [r4, #0]
      *tmp = (uint16_t)(uhdata & uhMask);
9000ebb8:	6da1      	ldr	r1, [r4, #88]	@ 0x58
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000ebba:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
      *tmp = (uint16_t)(uhdata & uhMask);
9000ebbc:	ea09 0202 	and.w	r2, r9, r2
9000ebc0:	f821 2b02 	strh.w	r2, [r1], #2
      huart->RxXferCount--;
9000ebc4:	f8b4 205e 	ldrh.w	r2, [r4, #94]	@ 0x5e
      huart->pRxBuffPtr += 2U;
9000ebc8:	65a1      	str	r1, [r4, #88]	@ 0x58
      huart->RxXferCount--;
9000ebca:	3a01      	subs	r2, #1
9000ebcc:	b292      	uxth	r2, r2
9000ebce:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
      isrflags = READ_REG(huart->Instance->ISR);
9000ebd2:	69dd      	ldr	r5, [r3, #28]
      if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
9000ebd4:	0768      	lsls	r0, r5, #29
9000ebd6:	d0e7      	beq.n	9000eba8 <UART_RxISR_16BIT_FIFOEN+0x48>
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000ebd8:	07e9      	lsls	r1, r5, #31
9000ebda:	d50a      	bpl.n	9000ebf2 <UART_RxISR_16BIT_FIFOEN+0x92>
9000ebdc:	f1ba 0f00 	cmp.w	sl, #0
9000ebe0:	d007      	beq.n	9000ebf2 <UART_RxISR_16BIT_FIFOEN+0x92>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
9000ebe2:	2201      	movs	r2, #1
9000ebe4:	621a      	str	r2, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_PE;
9000ebe6:	f8d4 2090 	ldr.w	r2, [r4, #144]	@ 0x90
9000ebea:	f042 0201 	orr.w	r2, r2, #1
9000ebee:	f8c4 2090 	str.w	r2, [r4, #144]	@ 0x90
        if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000ebf2:	07aa      	lsls	r2, r5, #30
9000ebf4:	d507      	bpl.n	9000ec06 <UART_RxISR_16BIT_FIFOEN+0xa6>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
9000ebf6:	f8c3 8020 	str.w	r8, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_FE;
9000ebfa:	f8d4 2090 	ldr.w	r2, [r4, #144]	@ 0x90
9000ebfe:	f042 0204 	orr.w	r2, r2, #4
9000ec02:	f8c4 2090 	str.w	r2, [r4, #144]	@ 0x90
        if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000ec06:	0768      	lsls	r0, r5, #29
9000ec08:	d506      	bpl.n	9000ec18 <UART_RxISR_16BIT_FIFOEN+0xb8>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
9000ec0a:	621f      	str	r7, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_NE;
9000ec0c:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
9000ec10:	f043 0302 	orr.w	r3, r3, #2
9000ec14:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
        if (huart->ErrorCode != HAL_UART_ERROR_NONE)
9000ec18:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
9000ec1c:	2b00      	cmp	r3, #0
9000ec1e:	d0c3      	beq.n	9000eba8 <UART_RxISR_16BIT_FIFOEN+0x48>
          HAL_UART_ErrorCallback(huart);
9000ec20:	4620      	mov	r0, r4
9000ec22:	f7f4 fe79 	bl	90003918 <HAL_UART_ErrorCallback>
          huart->ErrorCode = HAL_UART_ERROR_NONE;
9000ec26:	f8c4 6090 	str.w	r6, [r4, #144]	@ 0x90
9000ec2a:	e7bd      	b.n	9000eba8 <UART_RxISR_16BIT_FIFOEN+0x48>
9000ec2c:	6823      	ldr	r3, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ec2e:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
9000ec32:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ec36:	e843 2100 	strex	r1, r2, [r3]
9000ec3a:	2900      	cmp	r1, #0
9000ec3c:	d1f7      	bne.n	9000ec2e <UART_RxISR_16BIT_FIFOEN+0xce>
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000ec3e:	484d      	ldr	r0, [pc, #308]	@ (9000ed74 <UART_RxISR_16BIT_FIFOEN+0x214>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ec40:	f103 0208 	add.w	r2, r3, #8
9000ec44:	e852 2f00 	ldrex	r2, [r2]
9000ec48:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ec4a:	f103 0508 	add.w	r5, r3, #8
9000ec4e:	e845 2100 	strex	r1, r2, [r5]
9000ec52:	2900      	cmp	r1, #0
9000ec54:	d1f4      	bne.n	9000ec40 <UART_RxISR_16BIT_FIFOEN+0xe0>
        if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000ec56:	4a48      	ldr	r2, [pc, #288]	@ (9000ed78 <UART_RxISR_16BIT_FIFOEN+0x218>)
        huart->RxState = HAL_UART_STATE_READY;
9000ec58:	2020      	movs	r0, #32
        huart->RxISR = NULL;
9000ec5a:	6761      	str	r1, [r4, #116]	@ 0x74
        if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000ec5c:	4293      	cmp	r3, r2
        huart->RxState = HAL_UART_STATE_READY;
9000ec5e:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
        huart->RxEventType = HAL_UART_RXEVENT_TC;
9000ec62:	6721      	str	r1, [r4, #112]	@ 0x70
        if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000ec64:	d002      	beq.n	9000ec6c <UART_RxISR_16BIT_FIFOEN+0x10c>
          if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
9000ec66:	685a      	ldr	r2, [r3, #4]
9000ec68:	0211      	lsls	r1, r2, #8
9000ec6a:	d46d      	bmi.n	9000ed48 <UART_RxISR_16BIT_FIFOEN+0x1e8>
        if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000ec6c:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000ec6e:	2a01      	cmp	r2, #1
9000ec70:	d17b      	bne.n	9000ed6a <UART_RxISR_16BIT_FIFOEN+0x20a>
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000ec72:	2200      	movs	r2, #0
9000ec74:	66e2      	str	r2, [r4, #108]	@ 0x6c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ec76:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000ec7a:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ec7e:	e843 2100 	strex	r1, r2, [r3]
9000ec82:	2900      	cmp	r1, #0
9000ec84:	d1f7      	bne.n	9000ec76 <UART_RxISR_16BIT_FIFOEN+0x116>
          if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
9000ec86:	69da      	ldr	r2, [r3, #28]
9000ec88:	06d2      	lsls	r2, r2, #27
9000ec8a:	d501      	bpl.n	9000ec90 <UART_RxISR_16BIT_FIFOEN+0x130>
            __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
9000ec8c:	2210      	movs	r2, #16
9000ec8e:	621a      	str	r2, [r3, #32]
          HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
9000ec90:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
9000ec94:	4620      	mov	r0, r4
9000ec96:	f7ff fbe5 	bl	9000e464 <HAL_UARTEx_RxEventCallback>
    rxdatacount = huart->RxXferCount;
9000ec9a:	f8b4 305e 	ldrh.w	r3, [r4, #94]	@ 0x5e
9000ec9e:	b29b      	uxth	r3, r3
    if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
9000eca0:	2b00      	cmp	r3, #0
9000eca2:	f43f af6d 	beq.w	9000eb80 <UART_RxISR_16BIT_FIFOEN+0x20>
9000eca6:	f8b4 2068 	ldrh.w	r2, [r4, #104]	@ 0x68
9000ecaa:	429a      	cmp	r2, r3
9000ecac:	f67f af68 	bls.w	9000eb80 <UART_RxISR_16BIT_FIFOEN+0x20>
9000ecb0:	6823      	ldr	r3, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ecb2:	f103 0208 	add.w	r2, r3, #8
9000ecb6:	e852 2f00 	ldrex	r2, [r2]
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
9000ecba:	f022 5280 	bic.w	r2, r2, #268435456	@ 0x10000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ecbe:	f103 0008 	add.w	r0, r3, #8
9000ecc2:	e840 2100 	strex	r1, r2, [r0]
9000ecc6:	2900      	cmp	r1, #0
9000ecc8:	d1f3      	bne.n	9000ecb2 <UART_RxISR_16BIT_FIFOEN+0x152>
      huart->RxISR = UART_RxISR_16BIT;
9000ecca:	4a2c      	ldr	r2, [pc, #176]	@ (9000ed7c <UART_RxISR_16BIT_FIFOEN+0x21c>)
9000eccc:	6762      	str	r2, [r4, #116]	@ 0x74
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ecce:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
9000ecd2:	f042 0220 	orr.w	r2, r2, #32
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ecd6:	e843 2100 	strex	r1, r2, [r3]
9000ecda:	2900      	cmp	r1, #0
9000ecdc:	d1f7      	bne.n	9000ecce <UART_RxISR_16BIT_FIFOEN+0x16e>
9000ecde:	e74f      	b.n	9000eb80 <UART_RxISR_16BIT_FIFOEN+0x20>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
9000ece0:	2601      	movs	r6, #1
9000ece2:	e004      	b.n	9000ecee <UART_RxISR_16BIT_FIFOEN+0x18e>
      if (huart->RxXferCount == 0U)
9000ece4:	f8b4 305e 	ldrh.w	r3, [r4, #94]	@ 0x5e
9000ece8:	b29b      	uxth	r3, r3
9000ecea:	2b00      	cmp	r3, #0
9000ecec:	d09e      	beq.n	9000ec2c <UART_RxISR_16BIT_FIFOEN+0xcc>
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
9000ecee:	06a8      	lsls	r0, r5, #26
9000ecf0:	d5d3      	bpl.n	9000ec9a <UART_RxISR_16BIT_FIFOEN+0x13a>
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000ecf2:	6823      	ldr	r3, [r4, #0]
      *tmp = (uint16_t)(uhdata & uhMask);
9000ecf4:	6da2      	ldr	r2, [r4, #88]	@ 0x58
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000ecf6:	6a59      	ldr	r1, [r3, #36]	@ 0x24
      *tmp = (uint16_t)(uhdata & uhMask);
9000ecf8:	ea09 0101 	and.w	r1, r9, r1
9000ecfc:	f822 1b02 	strh.w	r1, [r2], #2
      huart->pRxBuffPtr += 2U;
9000ed00:	65a2      	str	r2, [r4, #88]	@ 0x58
      huart->RxXferCount--;
9000ed02:	f8b4 205e 	ldrh.w	r2, [r4, #94]	@ 0x5e
9000ed06:	3a01      	subs	r2, #1
9000ed08:	b292      	uxth	r2, r2
9000ed0a:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
      isrflags = READ_REG(huart->Instance->ISR);
9000ed0e:	69dd      	ldr	r5, [r3, #28]
      if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
9000ed10:	0769      	lsls	r1, r5, #29
9000ed12:	d0e7      	beq.n	9000ece4 <UART_RxISR_16BIT_FIFOEN+0x184>
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000ed14:	07ea      	lsls	r2, r5, #31
9000ed16:	d509      	bpl.n	9000ed2c <UART_RxISR_16BIT_FIFOEN+0x1cc>
9000ed18:	f1ba 0f00 	cmp.w	sl, #0
9000ed1c:	d006      	beq.n	9000ed2c <UART_RxISR_16BIT_FIFOEN+0x1cc>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
9000ed1e:	621e      	str	r6, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_PE;
9000ed20:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
9000ed24:	f043 0301 	orr.w	r3, r3, #1
9000ed28:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
        if (huart->ErrorCode != HAL_UART_ERROR_NONE)
9000ed2c:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
9000ed30:	2b00      	cmp	r3, #0
9000ed32:	d0d7      	beq.n	9000ece4 <UART_RxISR_16BIT_FIFOEN+0x184>
          HAL_UART_ErrorCallback(huart);
9000ed34:	4620      	mov	r0, r4
9000ed36:	f7f4 fdef 	bl	90003918 <HAL_UART_ErrorCallback>
          huart->ErrorCode = HAL_UART_ERROR_NONE;
9000ed3a:	f8c4 7090 	str.w	r7, [r4, #144]	@ 0x90
9000ed3e:	e7d1      	b.n	9000ece4 <UART_RxISR_16BIT_FIFOEN+0x184>
    rxdatacount = huart->RxXferCount;
9000ed40:	f8b0 305e 	ldrh.w	r3, [r0, #94]	@ 0x5e
}
9000ed44:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ed48:	e853 2f00 	ldrex	r2, [r3]
            ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
9000ed4c:	f022 6280 	bic.w	r2, r2, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ed50:	e843 2100 	strex	r1, r2, [r3]
9000ed54:	2900      	cmp	r1, #0
9000ed56:	d089      	beq.n	9000ec6c <UART_RxISR_16BIT_FIFOEN+0x10c>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ed58:	e853 2f00 	ldrex	r2, [r3]
9000ed5c:	f022 6280 	bic.w	r2, r2, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ed60:	e843 2100 	strex	r1, r2, [r3]
9000ed64:	2900      	cmp	r1, #0
9000ed66:	d1ef      	bne.n	9000ed48 <UART_RxISR_16BIT_FIFOEN+0x1e8>
9000ed68:	e780      	b.n	9000ec6c <UART_RxISR_16BIT_FIFOEN+0x10c>
          HAL_UART_RxCpltCallback(huart);
9000ed6a:	4620      	mov	r0, r4
9000ed6c:	f7f4 fdc2 	bl	900038f4 <HAL_UART_RxCpltCallback>
9000ed70:	e793      	b.n	9000ec9a <UART_RxISR_16BIT_FIFOEN+0x13a>
9000ed72:	bf00      	nop
9000ed74:	effffffe 	.word	0xeffffffe
9000ed78:	58000c00 	.word	0x58000c00
9000ed7c:	9000e8ad 	.word	0x9000e8ad

9000ed80 <UART_SetConfig>:
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000ed80:	6901      	ldr	r1, [r0, #16]
9000ed82:	6882      	ldr	r2, [r0, #8]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000ed84:	6803      	ldr	r3, [r0, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000ed86:	430a      	orrs	r2, r1
{
9000ed88:	b570      	push	{r4, r5, r6, lr}
9000ed8a:	4604      	mov	r4, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000ed8c:	681d      	ldr	r5, [r3, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000ed8e:	69c0      	ldr	r0, [r0, #28]
{
9000ed90:	b086      	sub	sp, #24
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000ed92:	6961      	ldr	r1, [r4, #20]
9000ed94:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000ed96:	49a0      	ldr	r1, [pc, #640]	@ (9000f018 <UART_SetConfig+0x298>)
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000ed98:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000ed9a:	4029      	ands	r1, r5
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
9000ed9c:	6a65      	ldr	r5, [r4, #36]	@ 0x24
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000ed9e:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
9000eda0:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000eda2:	601a      	str	r2, [r3, #0]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
9000eda4:	685a      	ldr	r2, [r3, #4]
9000eda6:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
9000edaa:	430a      	orrs	r2, r1
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
9000edac:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
9000edae:	605a      	str	r2, [r3, #4]
  if (!(UART_INSTANCE_LOWPOWER(huart)))
9000edb0:	4a9a      	ldr	r2, [pc, #616]	@ (9000f01c <UART_SetConfig+0x29c>)
9000edb2:	4293      	cmp	r3, r2
9000edb4:	f000 8119 	beq.w	9000efea <UART_SetConfig+0x26a>
    tmpreg |= huart->Init.OneBitSampling;
9000edb8:	6a22      	ldr	r2, [r4, #32]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000edba:	689e      	ldr	r6, [r3, #8]
    tmpreg |= huart->Init.OneBitSampling;
9000edbc:	4311      	orrs	r1, r2
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000edbe:	4a98      	ldr	r2, [pc, #608]	@ (9000f020 <UART_SetConfig+0x2a0>)
9000edc0:	4032      	ands	r2, r6
9000edc2:	4311      	orrs	r1, r2
9000edc4:	6099      	str	r1, [r3, #8]
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
9000edc6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000edc8:	f022 020f 	bic.w	r2, r2, #15
9000edcc:	432a      	orrs	r2, r5
9000edce:	62da      	str	r2, [r3, #44]	@ 0x2c
  UART_GETCLOCKSOURCE(huart, clocksource);
9000edd0:	4a94      	ldr	r2, [pc, #592]	@ (9000f024 <UART_SetConfig+0x2a4>)
9000edd2:	4293      	cmp	r3, r2
9000edd4:	d028      	beq.n	9000ee28 <UART_SetConfig+0xa8>
9000edd6:	4a94      	ldr	r2, [pc, #592]	@ (9000f028 <UART_SetConfig+0x2a8>)
9000edd8:	4293      	cmp	r3, r2
9000edda:	d01a      	beq.n	9000ee12 <UART_SetConfig+0x92>
9000eddc:	4a93      	ldr	r2, [pc, #588]	@ (9000f02c <UART_SetConfig+0x2ac>)
9000edde:	4293      	cmp	r3, r2
9000ede0:	d017      	beq.n	9000ee12 <UART_SetConfig+0x92>
9000ede2:	4a93      	ldr	r2, [pc, #588]	@ (9000f030 <UART_SetConfig+0x2b0>)
9000ede4:	4293      	cmp	r3, r2
9000ede6:	d014      	beq.n	9000ee12 <UART_SetConfig+0x92>
9000ede8:	4a92      	ldr	r2, [pc, #584]	@ (9000f034 <UART_SetConfig+0x2b4>)
9000edea:	4293      	cmp	r3, r2
9000edec:	d011      	beq.n	9000ee12 <UART_SetConfig+0x92>
9000edee:	4a92      	ldr	r2, [pc, #584]	@ (9000f038 <UART_SetConfig+0x2b8>)
9000edf0:	4293      	cmp	r3, r2
9000edf2:	d019      	beq.n	9000ee28 <UART_SetConfig+0xa8>
9000edf4:	4a91      	ldr	r2, [pc, #580]	@ (9000f03c <UART_SetConfig+0x2bc>)
9000edf6:	4293      	cmp	r3, r2
9000edf8:	d00b      	beq.n	9000ee12 <UART_SetConfig+0x92>
9000edfa:	4a91      	ldr	r2, [pc, #580]	@ (9000f040 <UART_SetConfig+0x2c0>)
9000edfc:	4293      	cmp	r3, r2
9000edfe:	d008      	beq.n	9000ee12 <UART_SetConfig+0x92>
        ret = HAL_ERROR;
9000ee00:	2001      	movs	r0, #1
  huart->RxISR = NULL;
9000ee02:	2300      	movs	r3, #0
  huart->NbRxDataToProcess = 1;
9000ee04:	f04f 1201 	mov.w	r2, #65537	@ 0x10001
  huart->RxISR = NULL;
9000ee08:	6763      	str	r3, [r4, #116]	@ 0x74
  huart->NbRxDataToProcess = 1;
9000ee0a:	66a2      	str	r2, [r4, #104]	@ 0x68
  huart->TxISR = NULL;
9000ee0c:	67a3      	str	r3, [r4, #120]	@ 0x78
}
9000ee0e:	b006      	add	sp, #24
9000ee10:	bd70      	pop	{r4, r5, r6, pc}
  UART_GETCLOCKSOURCE(huart, clocksource);
9000ee12:	4b8c      	ldr	r3, [pc, #560]	@ (9000f044 <UART_SetConfig+0x2c4>)
9000ee14:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000ee16:	f003 0307 	and.w	r3, r3, #7
9000ee1a:	2b05      	cmp	r3, #5
9000ee1c:	d8f0      	bhi.n	9000ee00 <UART_SetConfig+0x80>
9000ee1e:	e8df f003 	tbb	[pc, r3]
9000ee22:	7e9e      	.short	0x7e9e
9000ee24:	785f9189 	.word	0x785f9189
9000ee28:	4b86      	ldr	r3, [pc, #536]	@ (9000f044 <UART_SetConfig+0x2c4>)
9000ee2a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000ee2c:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000ee30:	2b28      	cmp	r3, #40	@ 0x28
9000ee32:	d8e5      	bhi.n	9000ee00 <UART_SetConfig+0x80>
9000ee34:	a201      	add	r2, pc, #4	@ (adr r2, 9000ee3c <UART_SetConfig+0xbc>)
9000ee36:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
9000ee3a:	bf00      	nop
9000ee3c:	9000efb9 	.word	0x9000efb9
9000ee40:	9000ee01 	.word	0x9000ee01
9000ee44:	9000ee01 	.word	0x9000ee01
9000ee48:	9000ee01 	.word	0x9000ee01
9000ee4c:	9000ee01 	.word	0x9000ee01
9000ee50:	9000ee01 	.word	0x9000ee01
9000ee54:	9000ee01 	.word	0x9000ee01
9000ee58:	9000ee01 	.word	0x9000ee01
9000ee5c:	9000ef1f 	.word	0x9000ef1f
9000ee60:	9000ee01 	.word	0x9000ee01
9000ee64:	9000ee01 	.word	0x9000ee01
9000ee68:	9000ee01 	.word	0x9000ee01
9000ee6c:	9000ee01 	.word	0x9000ee01
9000ee70:	9000ee01 	.word	0x9000ee01
9000ee74:	9000ee01 	.word	0x9000ee01
9000ee78:	9000ee01 	.word	0x9000ee01
9000ee7c:	9000ef35 	.word	0x9000ef35
9000ee80:	9000ee01 	.word	0x9000ee01
9000ee84:	9000ee01 	.word	0x9000ee01
9000ee88:	9000ee01 	.word	0x9000ee01
9000ee8c:	9000ee01 	.word	0x9000ee01
9000ee90:	9000ee01 	.word	0x9000ee01
9000ee94:	9000ee01 	.word	0x9000ee01
9000ee98:	9000ee01 	.word	0x9000ee01
9000ee9c:	9000ef45 	.word	0x9000ef45
9000eea0:	9000ee01 	.word	0x9000ee01
9000eea4:	9000ee01 	.word	0x9000ee01
9000eea8:	9000ee01 	.word	0x9000ee01
9000eeac:	9000ee01 	.word	0x9000ee01
9000eeb0:	9000ee01 	.word	0x9000ee01
9000eeb4:	9000ee01 	.word	0x9000ee01
9000eeb8:	9000ee01 	.word	0x9000ee01
9000eebc:	9000eee1 	.word	0x9000eee1
9000eec0:	9000ee01 	.word	0x9000ee01
9000eec4:	9000ee01 	.word	0x9000ee01
9000eec8:	9000ee01 	.word	0x9000ee01
9000eecc:	9000ee01 	.word	0x9000ee01
9000eed0:	9000ee01 	.word	0x9000ee01
9000eed4:	9000ee01 	.word	0x9000ee01
9000eed8:	9000ee01 	.word	0x9000ee01
9000eedc:	9000ef13 	.word	0x9000ef13
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000eee0:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
        pclk = (uint32_t) CSI_VALUE;
9000eee4:	4858      	ldr	r0, [pc, #352]	@ (9000f048 <UART_SetConfig+0x2c8>)
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000eee6:	d047      	beq.n	9000ef78 <UART_SetConfig+0x1f8>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000eee8:	4a58      	ldr	r2, [pc, #352]	@ (9000f04c <UART_SetConfig+0x2cc>)
9000eeea:	6863      	ldr	r3, [r4, #4]
9000eeec:	f832 1015 	ldrh.w	r1, [r2, r5, lsl #1]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000eef0:	f64f 72ef 	movw	r2, #65519	@ 0xffef
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000eef4:	fbb0 f0f1 	udiv	r0, r0, r1
9000eef8:	eb00 0053 	add.w	r0, r0, r3, lsr #1
9000eefc:	fbb0 f0f3 	udiv	r0, r0, r3
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000ef00:	f1a0 0310 	sub.w	r3, r0, #16
9000ef04:	4293      	cmp	r3, r2
9000ef06:	f63f af7b 	bhi.w	9000ee00 <UART_SetConfig+0x80>
          huart->Instance->BRR = usartdiv;
9000ef0a:	6823      	ldr	r3, [r4, #0]
9000ef0c:	60d8      	str	r0, [r3, #12]
          pclk = (uint32_t) HSI_VALUE;
9000ef0e:	2000      	movs	r0, #0
9000ef10:	e777      	b.n	9000ee02 <UART_SetConfig+0x82>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000ef12:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000ef16:	d02f      	beq.n	9000ef78 <UART_SetConfig+0x1f8>
        pclk = (uint32_t) LSE_VALUE;
9000ef18:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
9000ef1c:	e7e4      	b.n	9000eee8 <UART_SetConfig+0x168>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000ef1e:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000ef22:	d022      	beq.n	9000ef6a <UART_SetConfig+0x1ea>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
9000ef24:	4668      	mov	r0, sp
9000ef26:	f7fe fd43 	bl	9000d9b0 <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
9000ef2a:	9801      	ldr	r0, [sp, #4]
    if (pclk != 0U)
9000ef2c:	2800      	cmp	r0, #0
9000ef2e:	d0ee      	beq.n	9000ef0e <UART_SetConfig+0x18e>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000ef30:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000ef32:	e7d9      	b.n	9000eee8 <UART_SetConfig+0x168>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000ef34:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000ef38:	d04f      	beq.n	9000efda <UART_SetConfig+0x25a>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
9000ef3a:	a803      	add	r0, sp, #12
9000ef3c:	f7fe fdd2 	bl	9000dae4 <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
9000ef40:	9804      	ldr	r0, [sp, #16]
        break;
9000ef42:	e7f3      	b.n	9000ef2c <UART_SetConfig+0x1ac>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000ef44:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000ef48:	d03c      	beq.n	9000efc4 <UART_SetConfig+0x244>
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000ef4a:	4b3e      	ldr	r3, [pc, #248]	@ (9000f044 <UART_SetConfig+0x2c4>)
9000ef4c:	681a      	ldr	r2, [r3, #0]
9000ef4e:	0691      	lsls	r1, r2, #26
9000ef50:	d52d      	bpl.n	9000efae <UART_SetConfig+0x22e>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
9000ef52:	681b      	ldr	r3, [r3, #0]
9000ef54:	483e      	ldr	r0, [pc, #248]	@ (9000f050 <UART_SetConfig+0x2d0>)
9000ef56:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000ef5a:	40d8      	lsrs	r0, r3
    if (pclk != 0U)
9000ef5c:	e7c4      	b.n	9000eee8 <UART_SetConfig+0x168>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000ef5e:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000ef62:	d026      	beq.n	9000efb2 <UART_SetConfig+0x232>
        pclk = HAL_RCC_GetPCLK1Freq();
9000ef64:	f7fd fc32 	bl	9000c7cc <HAL_RCC_GetPCLK1Freq>
        break;
9000ef68:	e7e0      	b.n	9000ef2c <UART_SetConfig+0x1ac>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
9000ef6a:	4668      	mov	r0, sp
9000ef6c:	f7fe fd20 	bl	9000d9b0 <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
9000ef70:	9801      	ldr	r0, [sp, #4]
    if (pclk != 0U)
9000ef72:	2800      	cmp	r0, #0
9000ef74:	d0cb      	beq.n	9000ef0e <UART_SetConfig+0x18e>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000ef76:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000ef78:	4b34      	ldr	r3, [pc, #208]	@ (9000f04c <UART_SetConfig+0x2cc>)
9000ef7a:	6862      	ldr	r2, [r4, #4]
9000ef7c:	f833 1015 	ldrh.w	r1, [r3, r5, lsl #1]
9000ef80:	0853      	lsrs	r3, r2, #1
9000ef82:	fbb0 f0f1 	udiv	r0, r0, r1
9000ef86:	eb03 0340 	add.w	r3, r3, r0, lsl #1
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000ef8a:	f64f 71ef 	movw	r1, #65519	@ 0xffef
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000ef8e:	fbb3 f3f2 	udiv	r3, r3, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000ef92:	f1a3 0210 	sub.w	r2, r3, #16
9000ef96:	428a      	cmp	r2, r1
9000ef98:	f63f af32 	bhi.w	9000ee00 <UART_SetConfig+0x80>
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
9000ef9c:	f023 020f 	bic.w	r2, r3, #15
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
9000efa0:	f3c3 0342 	ubfx	r3, r3, #1, #3
        huart->Instance->BRR = brrtemp;
9000efa4:	6821      	ldr	r1, [r4, #0]
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
9000efa6:	b292      	uxth	r2, r2
        huart->Instance->BRR = brrtemp;
9000efa8:	4313      	orrs	r3, r2
9000efaa:	60cb      	str	r3, [r1, #12]
9000efac:	e7af      	b.n	9000ef0e <UART_SetConfig+0x18e>
          pclk = (uint32_t) HSI_VALUE;
9000efae:	4828      	ldr	r0, [pc, #160]	@ (9000f050 <UART_SetConfig+0x2d0>)
9000efb0:	e79a      	b.n	9000eee8 <UART_SetConfig+0x168>
        pclk = HAL_RCC_GetPCLK1Freq();
9000efb2:	f7fd fc0b 	bl	9000c7cc <HAL_RCC_GetPCLK1Freq>
        break;
9000efb6:	e7dc      	b.n	9000ef72 <UART_SetConfig+0x1f2>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000efb8:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000efbc:	d012      	beq.n	9000efe4 <UART_SetConfig+0x264>
        pclk = HAL_RCC_GetPCLK2Freq();
9000efbe:	f7fd fc4d 	bl	9000c85c <HAL_RCC_GetPCLK2Freq>
        break;
9000efc2:	e7b3      	b.n	9000ef2c <UART_SetConfig+0x1ac>
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000efc4:	4b1f      	ldr	r3, [pc, #124]	@ (9000f044 <UART_SetConfig+0x2c4>)
9000efc6:	681a      	ldr	r2, [r3, #0]
9000efc8:	0690      	lsls	r0, r2, #26
9000efca:	f140 808b 	bpl.w	9000f0e4 <UART_SetConfig+0x364>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
9000efce:	681b      	ldr	r3, [r3, #0]
9000efd0:	481f      	ldr	r0, [pc, #124]	@ (9000f050 <UART_SetConfig+0x2d0>)
9000efd2:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000efd6:	40d8      	lsrs	r0, r3
    if (pclk != 0U)
9000efd8:	e7ce      	b.n	9000ef78 <UART_SetConfig+0x1f8>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
9000efda:	a803      	add	r0, sp, #12
9000efdc:	f7fe fd82 	bl	9000dae4 <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
9000efe0:	9804      	ldr	r0, [sp, #16]
        break;
9000efe2:	e7c6      	b.n	9000ef72 <UART_SetConfig+0x1f2>
        pclk = HAL_RCC_GetPCLK2Freq();
9000efe4:	f7fd fc3a 	bl	9000c85c <HAL_RCC_GetPCLK2Freq>
        break;
9000efe8:	e7c3      	b.n	9000ef72 <UART_SetConfig+0x1f2>
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000efea:	6898      	ldr	r0, [r3, #8]
9000efec:	4a0c      	ldr	r2, [pc, #48]	@ (9000f020 <UART_SetConfig+0x2a0>)
9000efee:	4002      	ands	r2, r0
9000eff0:	430a      	orrs	r2, r1
  UART_GETCLOCKSOURCE(huart, clocksource);
9000eff2:	4914      	ldr	r1, [pc, #80]	@ (9000f044 <UART_SetConfig+0x2c4>)
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000eff4:	609a      	str	r2, [r3, #8]
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
9000eff6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000eff8:	f022 020f 	bic.w	r2, r2, #15
9000effc:	432a      	orrs	r2, r5
9000effe:	62da      	str	r2, [r3, #44]	@ 0x2c
  UART_GETCLOCKSOURCE(huart, clocksource);
9000f000:	6d8b      	ldr	r3, [r1, #88]	@ 0x58
9000f002:	f003 0307 	and.w	r3, r3, #7
9000f006:	2b05      	cmp	r3, #5
9000f008:	f63f aefa 	bhi.w	9000ee00 <UART_SetConfig+0x80>
9000f00c:	e8df f003 	tbb	[pc, r3]
9000f010:	224e575c 	.word	0x224e575c
9000f014:	5f62      	.short	0x5f62
9000f016:	bf00      	nop
9000f018:	cfff69f3 	.word	0xcfff69f3
9000f01c:	58000c00 	.word	0x58000c00
9000f020:	11fff4ff 	.word	0x11fff4ff
9000f024:	40011000 	.word	0x40011000
9000f028:	40004400 	.word	0x40004400
9000f02c:	40004800 	.word	0x40004800
9000f030:	40004c00 	.word	0x40004c00
9000f034:	40005000 	.word	0x40005000
9000f038:	40011400 	.word	0x40011400
9000f03c:	40007800 	.word	0x40007800
9000f040:	40007c00 	.word	0x40007c00
9000f044:	58024400 	.word	0x58024400
9000f048:	003d0900 	.word	0x003d0900
9000f04c:	90031894 	.word	0x90031894
9000f050:	03d09000 	.word	0x03d09000
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000f054:	4b24      	ldr	r3, [pc, #144]	@ (9000f0e8 <UART_SetConfig+0x368>)
9000f056:	681a      	ldr	r2, [r3, #0]
9000f058:	0692      	lsls	r2, r2, #26
9000f05a:	d43d      	bmi.n	9000f0d8 <UART_SetConfig+0x358>
          pclk = (uint32_t) HSI_VALUE;
9000f05c:	4823      	ldr	r0, [pc, #140]	@ (9000f0ec <UART_SetConfig+0x36c>)
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000f05e:	4b24      	ldr	r3, [pc, #144]	@ (9000f0f0 <UART_SetConfig+0x370>)
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
9000f060:	6866      	ldr	r6, [r4, #4]
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000f062:	f833 2015 	ldrh.w	r2, [r3, r5, lsl #1]
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
9000f066:	eb06 0146 	add.w	r1, r6, r6, lsl #1
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000f06a:	fbb0 f3f2 	udiv	r3, r0, r2
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
9000f06e:	4299      	cmp	r1, r3
9000f070:	f63f aec6 	bhi.w	9000ee00 <UART_SetConfig+0x80>
9000f074:	ebb3 3f06 	cmp.w	r3, r6, lsl #12
9000f078:	f63f aec2 	bhi.w	9000ee00 <UART_SetConfig+0x80>
        usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000f07c:	2300      	movs	r3, #0
9000f07e:	4619      	mov	r1, r3
9000f080:	f7f1 fb92 	bl	900007a8 <__aeabi_uldivmod>
9000f084:	4632      	mov	r2, r6
9000f086:	0209      	lsls	r1, r1, #8
9000f088:	0203      	lsls	r3, r0, #8
9000f08a:	ea41 6110 	orr.w	r1, r1, r0, lsr #24
9000f08e:	0870      	lsrs	r0, r6, #1
9000f090:	1818      	adds	r0, r3, r0
9000f092:	f04f 0300 	mov.w	r3, #0
9000f096:	f141 0100 	adc.w	r1, r1, #0
9000f09a:	f7f1 fb85 	bl	900007a8 <__aeabi_uldivmod>
        if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
9000f09e:	4b15      	ldr	r3, [pc, #84]	@ (9000f0f4 <UART_SetConfig+0x374>)
9000f0a0:	f5a0 7240 	sub.w	r2, r0, #768	@ 0x300
9000f0a4:	429a      	cmp	r2, r3
9000f0a6:	f63f aeab 	bhi.w	9000ee00 <UART_SetConfig+0x80>
9000f0aa:	e72e      	b.n	9000ef0a <UART_SetConfig+0x18a>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
9000f0ac:	a803      	add	r0, sp, #12
9000f0ae:	f7fe fd19 	bl	9000dae4 <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
9000f0b2:	9804      	ldr	r0, [sp, #16]
    if (pclk != 0U)
9000f0b4:	2800      	cmp	r0, #0
9000f0b6:	f43f af2a 	beq.w	9000ef0e <UART_SetConfig+0x18e>
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000f0ba:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000f0bc:	e7cf      	b.n	9000f05e <UART_SetConfig+0x2de>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
9000f0be:	4668      	mov	r0, sp
9000f0c0:	f7fe fc76 	bl	9000d9b0 <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
9000f0c4:	9801      	ldr	r0, [sp, #4]
        break;
9000f0c6:	e7f5      	b.n	9000f0b4 <UART_SetConfig+0x334>
        pclk = HAL_RCCEx_GetD3PCLK1Freq();
9000f0c8:	f7fe fc60 	bl	9000d98c <HAL_RCCEx_GetD3PCLK1Freq>
        break;
9000f0cc:	e7f2      	b.n	9000f0b4 <UART_SetConfig+0x334>
        pclk = (uint32_t) LSE_VALUE;
9000f0ce:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
9000f0d2:	e7c4      	b.n	9000f05e <UART_SetConfig+0x2de>
        pclk = (uint32_t) CSI_VALUE;
9000f0d4:	4808      	ldr	r0, [pc, #32]	@ (9000f0f8 <UART_SetConfig+0x378>)
9000f0d6:	e7c2      	b.n	9000f05e <UART_SetConfig+0x2de>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
9000f0d8:	681b      	ldr	r3, [r3, #0]
9000f0da:	4804      	ldr	r0, [pc, #16]	@ (9000f0ec <UART_SetConfig+0x36c>)
9000f0dc:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000f0e0:	40d8      	lsrs	r0, r3
    if (pclk != 0U)
9000f0e2:	e7bc      	b.n	9000f05e <UART_SetConfig+0x2de>
          pclk = (uint32_t) HSI_VALUE;
9000f0e4:	4801      	ldr	r0, [pc, #4]	@ (9000f0ec <UART_SetConfig+0x36c>)
9000f0e6:	e747      	b.n	9000ef78 <UART_SetConfig+0x1f8>
9000f0e8:	58024400 	.word	0x58024400
9000f0ec:	03d09000 	.word	0x03d09000
9000f0f0:	90031894 	.word	0x90031894
9000f0f4:	000ffcff 	.word	0x000ffcff
9000f0f8:	003d0900 	.word	0x003d0900

9000f0fc <UART_AdvFeatureConfig>:
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
9000f0fc:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9000f0fe:	071a      	lsls	r2, r3, #28
{
9000f100:	b410      	push	{r4}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
9000f102:	d506      	bpl.n	9000f112 <UART_AdvFeatureConfig+0x16>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
9000f104:	6801      	ldr	r1, [r0, #0]
9000f106:	6b84      	ldr	r4, [r0, #56]	@ 0x38
9000f108:	684a      	ldr	r2, [r1, #4]
9000f10a:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
9000f10e:	4322      	orrs	r2, r4
9000f110:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
9000f112:	07dc      	lsls	r4, r3, #31
9000f114:	d506      	bpl.n	9000f124 <UART_AdvFeatureConfig+0x28>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
9000f116:	6801      	ldr	r1, [r0, #0]
9000f118:	6ac4      	ldr	r4, [r0, #44]	@ 0x2c
9000f11a:	684a      	ldr	r2, [r1, #4]
9000f11c:	f422 3200 	bic.w	r2, r2, #131072	@ 0x20000
9000f120:	4322      	orrs	r2, r4
9000f122:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
9000f124:	0799      	lsls	r1, r3, #30
9000f126:	d506      	bpl.n	9000f136 <UART_AdvFeatureConfig+0x3a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
9000f128:	6801      	ldr	r1, [r0, #0]
9000f12a:	6b04      	ldr	r4, [r0, #48]	@ 0x30
9000f12c:	684a      	ldr	r2, [r1, #4]
9000f12e:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
9000f132:	4322      	orrs	r2, r4
9000f134:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
9000f136:	075a      	lsls	r2, r3, #29
9000f138:	d506      	bpl.n	9000f148 <UART_AdvFeatureConfig+0x4c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
9000f13a:	6801      	ldr	r1, [r0, #0]
9000f13c:	6b44      	ldr	r4, [r0, #52]	@ 0x34
9000f13e:	684a      	ldr	r2, [r1, #4]
9000f140:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
9000f144:	4322      	orrs	r2, r4
9000f146:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
9000f148:	06dc      	lsls	r4, r3, #27
9000f14a:	d506      	bpl.n	9000f15a <UART_AdvFeatureConfig+0x5e>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
9000f14c:	6801      	ldr	r1, [r0, #0]
9000f14e:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
9000f150:	688a      	ldr	r2, [r1, #8]
9000f152:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
9000f156:	4322      	orrs	r2, r4
9000f158:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
9000f15a:	0699      	lsls	r1, r3, #26
9000f15c:	d506      	bpl.n	9000f16c <UART_AdvFeatureConfig+0x70>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
9000f15e:	6801      	ldr	r1, [r0, #0]
9000f160:	6c04      	ldr	r4, [r0, #64]	@ 0x40
9000f162:	688a      	ldr	r2, [r1, #8]
9000f164:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
9000f168:	4322      	orrs	r2, r4
9000f16a:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
9000f16c:	065a      	lsls	r2, r3, #25
9000f16e:	d50a      	bpl.n	9000f186 <UART_AdvFeatureConfig+0x8a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
9000f170:	6801      	ldr	r1, [r0, #0]
9000f172:	6c44      	ldr	r4, [r0, #68]	@ 0x44
9000f174:	684a      	ldr	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
9000f176:	f5b4 1f80 	cmp.w	r4, #1048576	@ 0x100000
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
9000f17a:	f422 1280 	bic.w	r2, r2, #1048576	@ 0x100000
9000f17e:	ea42 0204 	orr.w	r2, r2, r4
9000f182:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
9000f184:	d00b      	beq.n	9000f19e <UART_AdvFeatureConfig+0xa2>
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
9000f186:	061b      	lsls	r3, r3, #24
9000f188:	d506      	bpl.n	9000f198 <UART_AdvFeatureConfig+0x9c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
9000f18a:	6802      	ldr	r2, [r0, #0]
9000f18c:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
9000f18e:	6853      	ldr	r3, [r2, #4]
9000f190:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
9000f194:	430b      	orrs	r3, r1
9000f196:	6053      	str	r3, [r2, #4]
}
9000f198:	f85d 4b04 	ldr.w	r4, [sp], #4
9000f19c:	4770      	bx	lr
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
9000f19e:	684a      	ldr	r2, [r1, #4]
9000f1a0:	6c84      	ldr	r4, [r0, #72]	@ 0x48
9000f1a2:	f422 02c0 	bic.w	r2, r2, #6291456	@ 0x600000
9000f1a6:	4322      	orrs	r2, r4
9000f1a8:	604a      	str	r2, [r1, #4]
9000f1aa:	e7ec      	b.n	9000f186 <UART_AdvFeatureConfig+0x8a>

9000f1ac <UART_CheckIdleState>:
{
9000f1ac:	b538      	push	{r3, r4, r5, lr}
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9000f1ae:	2300      	movs	r3, #0
{
9000f1b0:	4604      	mov	r4, r0
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9000f1b2:	f8c0 3090 	str.w	r3, [r0, #144]	@ 0x90
  tickstart = HAL_GetTick();
9000f1b6:	f7f8 ffe5 	bl	90008184 <HAL_GetTick>
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
9000f1ba:	6822      	ldr	r2, [r4, #0]
  tickstart = HAL_GetTick();
9000f1bc:	4605      	mov	r5, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
9000f1be:	6813      	ldr	r3, [r2, #0]
9000f1c0:	071b      	lsls	r3, r3, #28
9000f1c2:	d40f      	bmi.n	9000f1e4 <UART_CheckIdleState+0x38>
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
9000f1c4:	6813      	ldr	r3, [r2, #0]
9000f1c6:	0759      	lsls	r1, r3, #29
9000f1c8:	d431      	bmi.n	9000f22e <UART_CheckIdleState+0x82>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000f1ca:	2300      	movs	r3, #0
  huart->gState = HAL_UART_STATE_READY;
9000f1cc:	2220      	movs	r2, #32
  return HAL_OK;
9000f1ce:	4618      	mov	r0, r3
  huart->gState = HAL_UART_STATE_READY;
9000f1d0:	f8c4 2088 	str.w	r2, [r4, #136]	@ 0x88
  huart->RxState = HAL_UART_STATE_READY;
9000f1d4:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000f1d8:	66e3      	str	r3, [r4, #108]	@ 0x6c
  huart->RxEventType = HAL_UART_RXEVENT_TC;
9000f1da:	6723      	str	r3, [r4, #112]	@ 0x70
      __HAL_UNLOCK(huart);
9000f1dc:	2300      	movs	r3, #0
9000f1de:	f884 3084 	strb.w	r3, [r4, #132]	@ 0x84
}
9000f1e2:	bd38      	pop	{r3, r4, r5, pc}
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000f1e4:	69d3      	ldr	r3, [r2, #28]
9000f1e6:	0298      	lsls	r0, r3, #10
9000f1e8:	d4ec      	bmi.n	9000f1c4 <UART_CheckIdleState+0x18>
9000f1ea:	e00c      	b.n	9000f206 <UART_CheckIdleState+0x5a>
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
9000f1ec:	6819      	ldr	r1, [r3, #0]
9000f1ee:	461a      	mov	r2, r3
9000f1f0:	0749      	lsls	r1, r1, #29
9000f1f2:	d505      	bpl.n	9000f200 <UART_CheckIdleState+0x54>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
9000f1f4:	69d9      	ldr	r1, [r3, #28]
9000f1f6:	0708      	lsls	r0, r1, #28
9000f1f8:	d44a      	bmi.n	9000f290 <UART_CheckIdleState+0xe4>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
9000f1fa:	69d9      	ldr	r1, [r3, #28]
9000f1fc:	0509      	lsls	r1, r1, #20
9000f1fe:	d475      	bmi.n	9000f2ec <UART_CheckIdleState+0x140>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000f200:	69db      	ldr	r3, [r3, #28]
9000f202:	0298      	lsls	r0, r3, #10
9000f204:	d4de      	bmi.n	9000f1c4 <UART_CheckIdleState+0x18>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000f206:	f7f8 ffbd 	bl	90008184 <HAL_GetTick>
9000f20a:	1b43      	subs	r3, r0, r5
9000f20c:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
9000f210:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000f212:	d3eb      	bcc.n	9000f1ec <UART_CheckIdleState+0x40>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000f214:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE));
9000f218:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000f21c:	e843 2100 	strex	r1, r2, [r3]
9000f220:	2900      	cmp	r1, #0
9000f222:	d1f7      	bne.n	9000f214 <UART_CheckIdleState+0x68>
      huart->gState = HAL_UART_STATE_READY;
9000f224:	2320      	movs	r3, #32
9000f226:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
      return HAL_TIMEOUT;
9000f22a:	2003      	movs	r0, #3
9000f22c:	e7d6      	b.n	9000f1dc <UART_CheckIdleState+0x30>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000f22e:	69d3      	ldr	r3, [r2, #28]
9000f230:	025b      	lsls	r3, r3, #9
9000f232:	d4ca      	bmi.n	9000f1ca <UART_CheckIdleState+0x1e>
9000f234:	e00d      	b.n	9000f252 <UART_CheckIdleState+0xa6>
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
9000f236:	681a      	ldr	r2, [r3, #0]
9000f238:	0750      	lsls	r0, r2, #29
9000f23a:	d507      	bpl.n	9000f24c <UART_CheckIdleState+0xa0>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
9000f23c:	69da      	ldr	r2, [r3, #28]
9000f23e:	0711      	lsls	r1, r2, #28
9000f240:	f100 8082 	bmi.w	9000f348 <UART_CheckIdleState+0x19c>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
9000f244:	69da      	ldr	r2, [r3, #28]
9000f246:	0512      	lsls	r2, r2, #20
9000f248:	f100 80ac 	bmi.w	9000f3a4 <UART_CheckIdleState+0x1f8>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000f24c:	69db      	ldr	r3, [r3, #28]
9000f24e:	025b      	lsls	r3, r3, #9
9000f250:	d4bb      	bmi.n	9000f1ca <UART_CheckIdleState+0x1e>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000f252:	f7f8 ff97 	bl	90008184 <HAL_GetTick>
9000f256:	1b43      	subs	r3, r0, r5
9000f258:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
9000f25c:	6823      	ldr	r3, [r4, #0]
9000f25e:	d3ea      	bcc.n	9000f236 <UART_CheckIdleState+0x8a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000f260:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000f264:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000f268:	e843 2100 	strex	r1, r2, [r3]
9000f26c:	2900      	cmp	r1, #0
9000f26e:	d1f7      	bne.n	9000f260 <UART_CheckIdleState+0xb4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000f270:	f103 0208 	add.w	r2, r3, #8
9000f274:	e852 2f00 	ldrex	r2, [r2]
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
9000f278:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000f27c:	f103 0008 	add.w	r0, r3, #8
9000f280:	e840 2100 	strex	r1, r2, [r0]
9000f284:	2900      	cmp	r1, #0
9000f286:	d1f3      	bne.n	9000f270 <UART_CheckIdleState+0xc4>
      huart->RxState = HAL_UART_STATE_READY;
9000f288:	2320      	movs	r3, #32
9000f28a:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
      return HAL_TIMEOUT;
9000f28e:	e7cc      	b.n	9000f22a <UART_CheckIdleState+0x7e>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
9000f290:	2208      	movs	r2, #8
9000f292:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000f294:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000f298:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000f29c:	e843 2100 	strex	r1, r2, [r3]
9000f2a0:	2900      	cmp	r1, #0
9000f2a2:	d1f7      	bne.n	9000f294 <UART_CheckIdleState+0xe8>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000f2a4:	4856      	ldr	r0, [pc, #344]	@ (9000f400 <UART_CheckIdleState+0x254>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000f2a6:	f103 0208 	add.w	r2, r3, #8
9000f2aa:	e852 2f00 	ldrex	r2, [r2]
9000f2ae:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000f2b0:	f103 0508 	add.w	r5, r3, #8
9000f2b4:	e845 2100 	strex	r1, r2, [r5]
9000f2b8:	2900      	cmp	r1, #0
9000f2ba:	d1f4      	bne.n	9000f2a6 <UART_CheckIdleState+0xfa>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000f2bc:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000f2be:	2a01      	cmp	r2, #1
9000f2c0:	d00b      	beq.n	9000f2da <UART_CheckIdleState+0x12e>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000f2c2:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9000f2c4:	2020      	movs	r0, #32
          huart->ErrorCode = HAL_UART_ERROR_ORE;
9000f2c6:	2108      	movs	r1, #8
  huart->RxState = HAL_UART_STATE_READY;
9000f2c8:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
  huart->RxISR = NULL;
9000f2cc:	6762      	str	r2, [r4, #116]	@ 0x74
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000f2ce:	66e2      	str	r2, [r4, #108]	@ 0x6c
          __HAL_UNLOCK(huart);
9000f2d0:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
          huart->ErrorCode = HAL_UART_ERROR_ORE;
9000f2d4:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
          return HAL_ERROR;
9000f2d8:	e79c      	b.n	9000f214 <UART_CheckIdleState+0x68>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000f2da:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000f2de:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000f2e2:	e843 2100 	strex	r1, r2, [r3]
9000f2e6:	2900      	cmp	r1, #0
9000f2e8:	d1f7      	bne.n	9000f2da <UART_CheckIdleState+0x12e>
9000f2ea:	e7ea      	b.n	9000f2c2 <UART_CheckIdleState+0x116>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
9000f2ec:	f44f 6200 	mov.w	r2, #2048	@ 0x800
9000f2f0:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000f2f2:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000f2f6:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000f2fa:	e843 2100 	strex	r1, r2, [r3]
9000f2fe:	2900      	cmp	r1, #0
9000f300:	d1f7      	bne.n	9000f2f2 <UART_CheckIdleState+0x146>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000f302:	483f      	ldr	r0, [pc, #252]	@ (9000f400 <UART_CheckIdleState+0x254>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000f304:	f103 0208 	add.w	r2, r3, #8
9000f308:	e852 2f00 	ldrex	r2, [r2]
9000f30c:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000f30e:	f103 0508 	add.w	r5, r3, #8
9000f312:	e845 2100 	strex	r1, r2, [r5]
9000f316:	2900      	cmp	r1, #0
9000f318:	d1f4      	bne.n	9000f304 <UART_CheckIdleState+0x158>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000f31a:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000f31c:	2a01      	cmp	r2, #1
9000f31e:	d00a      	beq.n	9000f336 <UART_CheckIdleState+0x18a>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000f320:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9000f322:	2120      	movs	r1, #32
  huart->RxISR = NULL;
9000f324:	6762      	str	r2, [r4, #116]	@ 0x74
  huart->RxState = HAL_UART_STATE_READY;
9000f326:	f8c4 108c 	str.w	r1, [r4, #140]	@ 0x8c
          __HAL_UNLOCK(huart);
9000f32a:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000f32e:	66e2      	str	r2, [r4, #108]	@ 0x6c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
9000f330:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
          return HAL_TIMEOUT;
9000f334:	e76e      	b.n	9000f214 <UART_CheckIdleState+0x68>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000f336:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000f33a:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000f33e:	e843 2100 	strex	r1, r2, [r3]
9000f342:	2900      	cmp	r1, #0
9000f344:	d1f7      	bne.n	9000f336 <UART_CheckIdleState+0x18a>
9000f346:	e7eb      	b.n	9000f320 <UART_CheckIdleState+0x174>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
9000f348:	2208      	movs	r2, #8
9000f34a:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000f34c:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000f350:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000f354:	e843 2100 	strex	r1, r2, [r3]
9000f358:	2900      	cmp	r1, #0
9000f35a:	d1f7      	bne.n	9000f34c <UART_CheckIdleState+0x1a0>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000f35c:	4828      	ldr	r0, [pc, #160]	@ (9000f400 <UART_CheckIdleState+0x254>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000f35e:	f103 0208 	add.w	r2, r3, #8
9000f362:	e852 2f00 	ldrex	r2, [r2]
9000f366:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000f368:	f103 0508 	add.w	r5, r3, #8
9000f36c:	e845 2100 	strex	r1, r2, [r5]
9000f370:	2900      	cmp	r1, #0
9000f372:	d1f4      	bne.n	9000f35e <UART_CheckIdleState+0x1b2>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000f374:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000f376:	2a01      	cmp	r2, #1
9000f378:	d00b      	beq.n	9000f392 <UART_CheckIdleState+0x1e6>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000f37a:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9000f37c:	2020      	movs	r0, #32
          huart->ErrorCode = HAL_UART_ERROR_ORE;
9000f37e:	2108      	movs	r1, #8
  huart->RxState = HAL_UART_STATE_READY;
9000f380:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
  huart->RxISR = NULL;
9000f384:	6762      	str	r2, [r4, #116]	@ 0x74
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000f386:	66e2      	str	r2, [r4, #108]	@ 0x6c
          __HAL_UNLOCK(huart);
9000f388:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
          huart->ErrorCode = HAL_UART_ERROR_ORE;
9000f38c:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
          return HAL_ERROR;
9000f390:	e766      	b.n	9000f260 <UART_CheckIdleState+0xb4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000f392:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000f396:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000f39a:	e843 2100 	strex	r1, r2, [r3]
9000f39e:	2900      	cmp	r1, #0
9000f3a0:	d1f7      	bne.n	9000f392 <UART_CheckIdleState+0x1e6>
9000f3a2:	e7ea      	b.n	9000f37a <UART_CheckIdleState+0x1ce>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
9000f3a4:	f44f 6200 	mov.w	r2, #2048	@ 0x800
9000f3a8:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000f3aa:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000f3ae:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000f3b2:	e843 2100 	strex	r1, r2, [r3]
9000f3b6:	2900      	cmp	r1, #0
9000f3b8:	d1f7      	bne.n	9000f3aa <UART_CheckIdleState+0x1fe>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000f3ba:	4811      	ldr	r0, [pc, #68]	@ (9000f400 <UART_CheckIdleState+0x254>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000f3bc:	f103 0208 	add.w	r2, r3, #8
9000f3c0:	e852 2f00 	ldrex	r2, [r2]
9000f3c4:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000f3c6:	f103 0508 	add.w	r5, r3, #8
9000f3ca:	e845 2100 	strex	r1, r2, [r5]
9000f3ce:	2900      	cmp	r1, #0
9000f3d0:	d1f4      	bne.n	9000f3bc <UART_CheckIdleState+0x210>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000f3d2:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000f3d4:	2a01      	cmp	r2, #1
9000f3d6:	d00a      	beq.n	9000f3ee <UART_CheckIdleState+0x242>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000f3d8:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9000f3da:	2120      	movs	r1, #32
  huart->RxISR = NULL;
9000f3dc:	6762      	str	r2, [r4, #116]	@ 0x74
  huart->RxState = HAL_UART_STATE_READY;
9000f3de:	f8c4 108c 	str.w	r1, [r4, #140]	@ 0x8c
          __HAL_UNLOCK(huart);
9000f3e2:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000f3e6:	66e2      	str	r2, [r4, #108]	@ 0x6c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
9000f3e8:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
          return HAL_TIMEOUT;
9000f3ec:	e738      	b.n	9000f260 <UART_CheckIdleState+0xb4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000f3ee:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000f3f2:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000f3f6:	e843 2100 	strex	r1, r2, [r3]
9000f3fa:	2900      	cmp	r1, #0
9000f3fc:	d1f7      	bne.n	9000f3ee <UART_CheckIdleState+0x242>
9000f3fe:	e7eb      	b.n	9000f3d8 <UART_CheckIdleState+0x22c>
9000f400:	effffffe 	.word	0xeffffffe

9000f404 <HAL_UART_Init>:
  if (huart == NULL)
9000f404:	b380      	cbz	r0, 9000f468 <HAL_UART_Init+0x64>
  if (huart->gState == HAL_UART_STATE_RESET)
9000f406:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
{
9000f40a:	b510      	push	{r4, lr}
9000f40c:	4604      	mov	r4, r0
  if (huart->gState == HAL_UART_STATE_RESET)
9000f40e:	b333      	cbz	r3, 9000f45e <HAL_UART_Init+0x5a>
  __HAL_UART_DISABLE(huart);
9000f410:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
9000f412:	2324      	movs	r3, #36	@ 0x24
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
9000f414:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
  huart->gState = HAL_UART_STATE_BUSY;
9000f416:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
  __HAL_UART_DISABLE(huart);
9000f41a:	6813      	ldr	r3, [r2, #0]
9000f41c:	f023 0301 	bic.w	r3, r3, #1
9000f420:	6013      	str	r3, [r2, #0]
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
9000f422:	b9c1      	cbnz	r1, 9000f456 <HAL_UART_Init+0x52>
  if (UART_SetConfig(huart) == HAL_ERROR)
9000f424:	4620      	mov	r0, r4
9000f426:	f7ff fcab 	bl	9000ed80 <UART_SetConfig>
9000f42a:	2801      	cmp	r0, #1
9000f42c:	d011      	beq.n	9000f452 <HAL_UART_Init+0x4e>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
9000f42e:	6823      	ldr	r3, [r4, #0]
  return (UART_CheckIdleState(huart));
9000f430:	4620      	mov	r0, r4
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
9000f432:	685a      	ldr	r2, [r3, #4]
9000f434:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
9000f438:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
9000f43a:	689a      	ldr	r2, [r3, #8]
9000f43c:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
9000f440:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
9000f442:	681a      	ldr	r2, [r3, #0]
9000f444:	f042 0201 	orr.w	r2, r2, #1
}
9000f448:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  __HAL_UART_ENABLE(huart);
9000f44c:	601a      	str	r2, [r3, #0]
  return (UART_CheckIdleState(huart));
9000f44e:	f7ff bead 	b.w	9000f1ac <UART_CheckIdleState>
}
9000f452:	2001      	movs	r0, #1
9000f454:	bd10      	pop	{r4, pc}
    UART_AdvFeatureConfig(huart);
9000f456:	4620      	mov	r0, r4
9000f458:	f7ff fe50 	bl	9000f0fc <UART_AdvFeatureConfig>
9000f45c:	e7e2      	b.n	9000f424 <HAL_UART_Init+0x20>
    huart->Lock = HAL_UNLOCKED;
9000f45e:	f880 3084 	strb.w	r3, [r0, #132]	@ 0x84
    HAL_UART_MspInit(huart);
9000f462:	f7f5 f811 	bl	90004488 <HAL_UART_MspInit>
9000f466:	e7d3      	b.n	9000f410 <HAL_UART_Init+0xc>
}
9000f468:	2001      	movs	r0, #1
9000f46a:	4770      	bx	lr

9000f46c <HAL_UARTEx_WakeupCallback>:
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UARTEx_WakeupCallback can be implemented in the user file.
   */
}
9000f46c:	4770      	bx	lr
9000f46e:	bf00      	nop

9000f470 <HAL_UARTEx_RxFifoFullCallback>:
/**
  * @brief  UART RX Fifo full callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UARTEx_RxFifoFullCallback(UART_HandleTypeDef *huart)
9000f470:	4770      	bx	lr
9000f472:	bf00      	nop

9000f474 <HAL_UARTEx_TxFifoEmptyCallback>:
/**
  * @brief  UART TX Fifo empty callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UARTEx_TxFifoEmptyCallback(UART_HandleTypeDef *huart)
9000f474:	4770      	bx	lr
9000f476:	bf00      	nop

9000f478 <HAL_UARTEx_DisableFifoMode>:

  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));

  /* Process Locked */
  __HAL_LOCK(huart);
9000f478:	f890 2084 	ldrb.w	r2, [r0, #132]	@ 0x84
9000f47c:	2a01      	cmp	r2, #1
9000f47e:	d017      	beq.n	9000f4b0 <HAL_UARTEx_DisableFifoMode+0x38>

  huart->gState = HAL_UART_STATE_BUSY;

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000f480:	6802      	ldr	r2, [r0, #0]
9000f482:	4603      	mov	r3, r0
  huart->gState = HAL_UART_STATE_BUSY;
9000f484:	2024      	movs	r0, #36	@ 0x24
  /* Disable UART */
  __HAL_UART_DISABLE(huart);

  /* Disable FIFO mode */
  CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
  huart->FifoMode = UART_FIFOMODE_DISABLE;
9000f486:	2100      	movs	r1, #0
{
9000f488:	b430      	push	{r4, r5}
  huart->gState = HAL_UART_STATE_BUSY;
9000f48a:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88

  /* Restore UART configuration */
  WRITE_REG(huart->Instance->CR1, tmpcr1);

  huart->gState = HAL_UART_STATE_READY;
9000f48e:	2520      	movs	r5, #32
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000f490:	6810      	ldr	r0, [r2, #0]
  __HAL_UART_DISABLE(huart);
9000f492:	6814      	ldr	r4, [r2, #0]
  CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
9000f494:	f020 5000 	bic.w	r0, r0, #536870912	@ 0x20000000
  __HAL_UART_DISABLE(huart);
9000f498:	f024 0401 	bic.w	r4, r4, #1
9000f49c:	6014      	str	r4, [r2, #0]
  huart->FifoMode = UART_FIFOMODE_DISABLE;
9000f49e:	6659      	str	r1, [r3, #100]	@ 0x64
  WRITE_REG(huart->Instance->CR1, tmpcr1);
9000f4a0:	6010      	str	r0, [r2, #0]

  /* Process Unlocked */
  __HAL_UNLOCK(huart);

  return HAL_OK;
9000f4a2:	4608      	mov	r0, r1
  huart->gState = HAL_UART_STATE_READY;
9000f4a4:	f8c3 5088 	str.w	r5, [r3, #136]	@ 0x88
  __HAL_UNLOCK(huart);
9000f4a8:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
}
9000f4ac:	bc30      	pop	{r4, r5}
9000f4ae:	4770      	bx	lr
  __HAL_LOCK(huart);
9000f4b0:	2002      	movs	r0, #2
}
9000f4b2:	4770      	bx	lr

9000f4b4 <HAL_UARTEx_SetTxFifoThreshold>:
  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
  assert_param(IS_UART_TXFIFO_THRESHOLD(Threshold));

  /* Process Locked */
  __HAL_LOCK(huart);
9000f4b4:	f890 2084 	ldrb.w	r2, [r0, #132]	@ 0x84
9000f4b8:	2a01      	cmp	r2, #1
9000f4ba:	d037      	beq.n	9000f52c <HAL_UARTEx_SetTxFifoThreshold+0x78>

  huart->gState = HAL_UART_STATE_BUSY;

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000f4bc:	6802      	ldr	r2, [r0, #0]
9000f4be:	4603      	mov	r3, r0
  huart->gState = HAL_UART_STATE_BUSY;
9000f4c0:	2024      	movs	r0, #36	@ 0x24
{
9000f4c2:	b530      	push	{r4, r5, lr}
  huart->gState = HAL_UART_STATE_BUSY;
9000f4c4:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000f4c8:	6814      	ldr	r4, [r2, #0]

  /* Disable UART */
  __HAL_UART_DISABLE(huart);
9000f4ca:	6810      	ldr	r0, [r2, #0]
9000f4cc:	f020 0001 	bic.w	r0, r0, #1
9000f4d0:	6010      	str	r0, [r2, #0]

  /* Update TX threshold configuration */
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
9000f4d2:	6890      	ldr	r0, [r2, #8]
9000f4d4:	f020 4060 	bic.w	r0, r0, #3758096384	@ 0xe0000000
9000f4d8:	4301      	orrs	r1, r0
  uint8_t rx_fifo_threshold;
  uint8_t tx_fifo_threshold;
  static const uint8_t numerator[] = {1U, 1U, 1U, 3U, 7U, 1U, 0U, 0U};
  static const uint8_t denominator[] = {8U, 4U, 2U, 4U, 8U, 1U, 1U, 1U};

  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
9000f4da:	6e58      	ldr	r0, [r3, #100]	@ 0x64
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
9000f4dc:	6091      	str	r1, [r2, #8]
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
9000f4de:	b310      	cbz	r0, 9000f526 <HAL_UARTEx_SetTxFifoThreshold+0x72>
  }
  else
  {
    rx_fifo_depth = RX_FIFO_DEPTH;
    tx_fifo_depth = TX_FIFO_DEPTH;
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
9000f4e0:	6891      	ldr	r1, [r2, #8]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
9000f4e2:	6890      	ldr	r0, [r2, #8]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
                               (uint16_t)denominator[tx_fifo_threshold];
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000f4e4:	f3c1 6c42 	ubfx	ip, r1, #25, #3
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000f4e8:	4911      	ldr	r1, [pc, #68]	@ (9000f530 <HAL_UARTEx_SetTxFifoThreshold+0x7c>)
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
9000f4ea:	ea4f 7e50 	mov.w	lr, r0, lsr #29
                               (uint16_t)denominator[tx_fifo_threshold];
9000f4ee:	4d11      	ldr	r5, [pc, #68]	@ (9000f534 <HAL_UARTEx_SetTxFifoThreshold+0x80>)
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000f4f0:	f811 000e 	ldrb.w	r0, [r1, lr]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000f4f4:	f811 100c 	ldrb.w	r1, [r1, ip]
                               (uint16_t)denominator[tx_fifo_threshold];
9000f4f8:	f815 e00e 	ldrb.w	lr, [r5, lr]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000f4fc:	0100      	lsls	r0, r0, #4
                               (uint16_t)denominator[rx_fifo_threshold];
9000f4fe:	f815 500c 	ldrb.w	r5, [r5, ip]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000f502:	0109      	lsls	r1, r1, #4
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000f504:	fbb0 f0fe 	udiv	r0, r0, lr
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000f508:	fbb1 f1f5 	udiv	r1, r1, r5
9000f50c:	f8a3 1068 	strh.w	r1, [r3, #104]	@ 0x68
  huart->gState = HAL_UART_STATE_READY;
9000f510:	2520      	movs	r5, #32
  __HAL_UNLOCK(huart);
9000f512:	2100      	movs	r1, #0
9000f514:	f8a3 006a 	strh.w	r0, [r3, #106]	@ 0x6a
  WRITE_REG(huart->Instance->CR1, tmpcr1);
9000f518:	6014      	str	r4, [r2, #0]
  return HAL_OK;
9000f51a:	4608      	mov	r0, r1
  huart->gState = HAL_UART_STATE_READY;
9000f51c:	f8c3 5088 	str.w	r5, [r3, #136]	@ 0x88
  __HAL_UNLOCK(huart);
9000f520:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
}
9000f524:	bd30      	pop	{r4, r5, pc}
    huart->NbRxDataToProcess = 1U;
9000f526:	2101      	movs	r1, #1
    huart->NbTxDataToProcess = 1U;
9000f528:	4608      	mov	r0, r1
9000f52a:	e7ef      	b.n	9000f50c <HAL_UARTEx_SetTxFifoThreshold+0x58>
  __HAL_LOCK(huart);
9000f52c:	2002      	movs	r0, #2
}
9000f52e:	4770      	bx	lr
9000f530:	900318b4 	.word	0x900318b4
9000f534:	900318ac 	.word	0x900318ac

9000f538 <HAL_UARTEx_SetRxFifoThreshold>:
  __HAL_LOCK(huart);
9000f538:	f890 2084 	ldrb.w	r2, [r0, #132]	@ 0x84
9000f53c:	2a01      	cmp	r2, #1
9000f53e:	d037      	beq.n	9000f5b0 <HAL_UARTEx_SetRxFifoThreshold+0x78>
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000f540:	6802      	ldr	r2, [r0, #0]
9000f542:	4603      	mov	r3, r0
  huart->gState = HAL_UART_STATE_BUSY;
9000f544:	2024      	movs	r0, #36	@ 0x24
{
9000f546:	b530      	push	{r4, r5, lr}
  huart->gState = HAL_UART_STATE_BUSY;
9000f548:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000f54c:	6814      	ldr	r4, [r2, #0]
  __HAL_UART_DISABLE(huart);
9000f54e:	6810      	ldr	r0, [r2, #0]
9000f550:	f020 0001 	bic.w	r0, r0, #1
9000f554:	6010      	str	r0, [r2, #0]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
9000f556:	6890      	ldr	r0, [r2, #8]
9000f558:	f020 6060 	bic.w	r0, r0, #234881024	@ 0xe000000
9000f55c:	4301      	orrs	r1, r0
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
9000f55e:	6e58      	ldr	r0, [r3, #100]	@ 0x64
  MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
9000f560:	6091      	str	r1, [r2, #8]
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
9000f562:	b310      	cbz	r0, 9000f5aa <HAL_UARTEx_SetRxFifoThreshold+0x72>
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
9000f564:	6891      	ldr	r1, [r2, #8]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
9000f566:	6890      	ldr	r0, [r2, #8]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000f568:	f3c1 6c42 	ubfx	ip, r1, #25, #3
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000f56c:	4911      	ldr	r1, [pc, #68]	@ (9000f5b4 <HAL_UARTEx_SetRxFifoThreshold+0x7c>)
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
9000f56e:	ea4f 7e50 	mov.w	lr, r0, lsr #29
                               (uint16_t)denominator[tx_fifo_threshold];
9000f572:	4d11      	ldr	r5, [pc, #68]	@ (9000f5b8 <HAL_UARTEx_SetRxFifoThreshold+0x80>)
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000f574:	f811 000e 	ldrb.w	r0, [r1, lr]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000f578:	f811 100c 	ldrb.w	r1, [r1, ip]
                               (uint16_t)denominator[tx_fifo_threshold];
9000f57c:	f815 e00e 	ldrb.w	lr, [r5, lr]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000f580:	0100      	lsls	r0, r0, #4
                               (uint16_t)denominator[rx_fifo_threshold];
9000f582:	f815 500c 	ldrb.w	r5, [r5, ip]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000f586:	0109      	lsls	r1, r1, #4
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000f588:	fbb0 f0fe 	udiv	r0, r0, lr
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000f58c:	fbb1 f1f5 	udiv	r1, r1, r5
9000f590:	f8a3 1068 	strh.w	r1, [r3, #104]	@ 0x68
  huart->gState = HAL_UART_STATE_READY;
9000f594:	2520      	movs	r5, #32
  __HAL_UNLOCK(huart);
9000f596:	2100      	movs	r1, #0
9000f598:	f8a3 006a 	strh.w	r0, [r3, #106]	@ 0x6a
  WRITE_REG(huart->Instance->CR1, tmpcr1);
9000f59c:	6014      	str	r4, [r2, #0]
  return HAL_OK;
9000f59e:	4608      	mov	r0, r1
  huart->gState = HAL_UART_STATE_READY;
9000f5a0:	f8c3 5088 	str.w	r5, [r3, #136]	@ 0x88
  __HAL_UNLOCK(huart);
9000f5a4:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
}
9000f5a8:	bd30      	pop	{r4, r5, pc}
    huart->NbRxDataToProcess = 1U;
9000f5aa:	2101      	movs	r1, #1
    huart->NbTxDataToProcess = 1U;
9000f5ac:	4608      	mov	r0, r1
9000f5ae:	e7ef      	b.n	9000f590 <HAL_UARTEx_SetRxFifoThreshold+0x58>
  __HAL_LOCK(huart);
9000f5b0:	2002      	movs	r0, #2
}
9000f5b2:	4770      	bx	lr
9000f5b4:	900318b4 	.word	0x900318b4
9000f5b8:	900318ac 	.word	0x900318ac

9000f5bc <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, const FMC_SDRAM_InitTypeDef *Init)
{
9000f5bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000f5c0:	e9d1 3e07 	ldrd	r3, lr, [r1, #28]
9000f5c4:	e9d1 8200 	ldrd	r8, r2, [r1]
9000f5c8:	6a4f      	ldr	r7, [r1, #36]	@ 0x24
9000f5ca:	ea43 030e 	orr.w	r3, r3, lr
9000f5ce:	e9d1 c602 	ldrd	ip, r6, [r1, #8]
9000f5d2:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
9000f5d6:	6989      	ldr	r1, [r1, #24]
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000f5d8:	f1b8 0f00 	cmp.w	r8, #0
9000f5dc:	d10f      	bne.n	9000f5fe <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000f5de:	433b      	orrs	r3, r7
9000f5e0:	4313      	orrs	r3, r2
9000f5e2:	6802      	ldr	r2, [r0, #0]
9000f5e4:	ea43 030c 	orr.w	r3, r3, ip
9000f5e8:	f36f 020e 	bfc	r2, #0, #15
9000f5ec:	4333      	orrs	r3, r6
9000f5ee:	432b      	orrs	r3, r5
9000f5f0:	4323      	orrs	r3, r4
9000f5f2:	430b      	orrs	r3, r1
9000f5f4:	4313      	orrs	r3, r2
9000f5f6:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
9000f5f8:	2000      	movs	r0, #0
9000f5fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000f5fe:	ea42 020c 	orr.w	r2, r2, ip
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000f602:	433b      	orrs	r3, r7
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000f604:	4332      	orrs	r2, r6
9000f606:	432a      	orrs	r2, r5
9000f608:	4322      	orrs	r2, r4
9000f60a:	430a      	orrs	r2, r1
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000f60c:	6801      	ldr	r1, [r0, #0]
9000f60e:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
9000f612:	430b      	orrs	r3, r1
9000f614:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000f616:	6843      	ldr	r3, [r0, #4]
9000f618:	f36f 030e 	bfc	r3, #0, #15
9000f61c:	4313      	orrs	r3, r2
9000f61e:	6043      	str	r3, [r0, #4]
}
9000f620:	2000      	movs	r0, #0
9000f622:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000f626:	bf00      	nop

9000f628 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        const FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
9000f628:	b5f0      	push	{r4, r5, r6, r7, lr}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000f62a:	68cc      	ldr	r4, [r1, #12]
9000f62c:	694b      	ldr	r3, [r1, #20]
9000f62e:	3c01      	subs	r4, #1
9000f630:	688d      	ldr	r5, [r1, #8]
9000f632:	698f      	ldr	r7, [r1, #24]
9000f634:	3b01      	subs	r3, #1
9000f636:	ea4f 3e04 	mov.w	lr, r4, lsl #12
9000f63a:	684c      	ldr	r4, [r1, #4]
9000f63c:	680e      	ldr	r6, [r1, #0]
9000f63e:	3d01      	subs	r5, #1
9000f640:	3c01      	subs	r4, #1
9000f642:	051b      	lsls	r3, r3, #20
9000f644:	022d      	lsls	r5, r5, #8
9000f646:	3e01      	subs	r6, #1
9000f648:	ea4f 1c04 	mov.w	ip, r4, lsl #4
9000f64c:	690c      	ldr	r4, [r1, #16]
9000f64e:	1e79      	subs	r1, r7, #1
9000f650:	3c01      	subs	r4, #1
9000f652:	0609      	lsls	r1, r1, #24
9000f654:	0424      	lsls	r4, r4, #16
  if (Bank == FMC_SDRAM_BANK1)
9000f656:	b972      	cbnz	r2, 9000f676 <FMC_SDRAM_Timing_Init+0x4e>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000f658:	ea4e 0303 	orr.w	r3, lr, r3
9000f65c:	6882      	ldr	r2, [r0, #8]
9000f65e:	4333      	orrs	r3, r6
9000f660:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
9000f664:	ea43 030c 	orr.w	r3, r3, ip
9000f668:	432b      	orrs	r3, r5
9000f66a:	4323      	orrs	r3, r4
9000f66c:	430b      	orrs	r3, r1
9000f66e:	4313      	orrs	r3, r2
9000f670:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
9000f672:	2000      	movs	r0, #0
9000f674:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000f676:	ea4e 0e03 	orr.w	lr, lr, r3
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000f67a:	ea4c 0305 	orr.w	r3, ip, r5
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000f67e:	4a08      	ldr	r2, [pc, #32]	@ (9000f6a0 <FMC_SDRAM_Timing_Init+0x78>)
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000f680:	4333      	orrs	r3, r6
9000f682:	4323      	orrs	r3, r4
9000f684:	430b      	orrs	r3, r1
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000f686:	6881      	ldr	r1, [r0, #8]
9000f688:	400a      	ands	r2, r1
9000f68a:	ea4e 0202 	orr.w	r2, lr, r2
9000f68e:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000f690:	68c2      	ldr	r2, [r0, #12]
9000f692:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
9000f696:	4313      	orrs	r3, r2
9000f698:	60c3      	str	r3, [r0, #12]
}
9000f69a:	2000      	movs	r0, #0
9000f69c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000f69e:	bf00      	nop
9000f6a0:	ff0f0fff 	.word	0xff0f0fff

9000f6a4 <FMC_SDRAM_DeInit>:
  * @brief  DeInitializes the FMC_SDRAM peripheral
  * @param  Device Pointer to SDRAM device instance
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_DeInit(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
{
9000f6a4:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
  Device->SDTR[Bank] = 0x0FFFFFFFU;
  Device->SDCMR      = 0x00000000U;
9000f6a6:	2200      	movs	r2, #0
{
9000f6a8:	4603      	mov	r3, r0
  Device->SDCR[Bank] = 0x000002D0U;
9000f6aa:	f44f 7534 	mov.w	r5, #720	@ 0x2d0
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000f6ae:	f06f 4470 	mvn.w	r4, #4026531840	@ 0xf0000000
9000f6b2:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
  Device->SDCR[Bank] = 0x000002D0U;
9000f6b6:	f840 5021 	str.w	r5, [r0, r1, lsl #2]
  Device->SDRTR      = 0x00000000U;
  Device->SDSR       = 0x00000000U;

  return HAL_OK;
}
9000f6ba:	4610      	mov	r0, r2
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000f6bc:	f8cc 4008 	str.w	r4, [ip, #8]
  Device->SDCMR      = 0x00000000U;
9000f6c0:	611a      	str	r2, [r3, #16]
  Device->SDRTR      = 0x00000000U;
9000f6c2:	615a      	str	r2, [r3, #20]
  Device->SDSR       = 0x00000000U;
9000f6c4:	619a      	str	r2, [r3, #24]
}
9000f6c6:	bc30      	pop	{r4, r5}
9000f6c8:	4770      	bx	lr
9000f6ca:	bf00      	nop

9000f6cc <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        const FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
9000f6cc:	b410      	push	{r4}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000f6ce:	e9d1 3400 	ldrd	r3, r4, [r1]
{
9000f6d2:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000f6d4:	f8df c024 	ldr.w	ip, [pc, #36]	@ 9000f6fc <FMC_SDRAM_SendCommand+0x30>
9000f6d8:	6900      	ldr	r0, [r0, #16]
9000f6da:	4323      	orrs	r3, r4
9000f6dc:	e9d1 1402 	ldrd	r1, r4, [r1, #8]
9000f6e0:	ea00 0c0c 	and.w	ip, r0, ip
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
9000f6e4:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000f6e6:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
9000f6ea:	3901      	subs	r1, #1
}
9000f6ec:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000f6f0:	ea43 030c 	orr.w	r3, r3, ip
9000f6f4:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
9000f6f8:	6113      	str	r3, [r2, #16]
}
9000f6fa:	4770      	bx	lr
9000f6fc:	ffc00000 	.word	0xffc00000

9000f700 <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
9000f700:	4602      	mov	r2, r0

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));

  return HAL_OK;
}
9000f702:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000f704:	6953      	ldr	r3, [r2, #20]
9000f706:	f36f 034d 	bfc	r3, #1, #13
9000f70a:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
9000f70e:	6153      	str	r3, [r2, #20]
}
9000f710:	4770      	bx	lr
9000f712:	bf00      	nop

9000f714 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
9000f714:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
9000f716:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f71a:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
9000f71c:	f002 fb98 	bl	90011e50 <xTaskGetSchedulerState>
9000f720:	2801      	cmp	r0, #1
9000f722:	d100      	bne.n	9000f726 <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
9000f724:	bd08      	pop	{r3, pc}
9000f726:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
9000f72a:	f000 bc53 	b.w	9000ffd4 <xPortSysTickHandler>
9000f72e:	bf00      	nop

9000f730 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
9000f730:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000f734:	b92b      	cbnz	r3, 9000f742 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
9000f736:	4b06      	ldr	r3, [pc, #24]	@ (9000f750 <osKernelInitialize+0x20>)
9000f738:	6818      	ldr	r0, [r3, #0]
9000f73a:	b928      	cbnz	r0, 9000f748 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
9000f73c:	2201      	movs	r2, #1
9000f73e:	601a      	str	r2, [r3, #0]
      stat = osOK;
9000f740:	4770      	bx	lr
    stat = osErrorISR;
9000f742:	f06f 0005 	mvn.w	r0, #5
9000f746:	4770      	bx	lr
    } else {
      stat = osError;
9000f748:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
9000f74c:	4770      	bx	lr
9000f74e:	bf00      	nop
9000f750:	24008ecc 	.word	0x24008ecc

9000f754 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
9000f754:	b510      	push	{r4, lr}
9000f756:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000f75a:	b974      	cbnz	r4, 9000f77a <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
9000f75c:	4b08      	ldr	r3, [pc, #32]	@ (9000f780 <osKernelStart+0x2c>)
9000f75e:	681a      	ldr	r2, [r3, #0]
9000f760:	2a01      	cmp	r2, #1
9000f762:	d107      	bne.n	9000f774 <osKernelStart+0x20>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000f764:	4907      	ldr	r1, [pc, #28]	@ (9000f784 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
9000f766:	2202      	movs	r2, #2
9000f768:	77cc      	strb	r4, [r1, #31]
9000f76a:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
9000f76c:	f002 f922 	bl	900119b4 <vTaskStartScheduler>
      stat = osOK;
9000f770:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
9000f772:	bd10      	pop	{r4, pc}
      stat = osError;
9000f774:	f04f 30ff 	mov.w	r0, #4294967295
}
9000f778:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000f77a:	f06f 0005 	mvn.w	r0, #5
}
9000f77e:	bd10      	pop	{r4, pc}
9000f780:	24008ecc 	.word	0x24008ecc
9000f784:	e000ed00 	.word	0xe000ed00

9000f788 <osKernelGetTickFreq>:
  return (ticks);
}

uint32_t osKernelGetTickFreq (void) {
  return (configTICK_RATE_HZ);
}
9000f788:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
9000f78c:	4770      	bx	lr
9000f78e:	bf00      	nop

9000f790 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000f790:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
9000f792:	2500      	movs	r5, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000f794:	b087      	sub	sp, #28
  hTask = NULL;
9000f796:	9505      	str	r5, [sp, #20]
9000f798:	f3ef 8305 	mrs	r3, IPSR

  if (!IS_IRQ() && (func != NULL)) {
9000f79c:	b340      	cbz	r0, 9000f7f0 <osThreadNew+0x60>
9000f79e:	bb3b      	cbnz	r3, 9000f7f0 <osThreadNew+0x60>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
9000f7a0:	4614      	mov	r4, r2
9000f7a2:	b1d2      	cbz	r2, 9000f7da <osThreadNew+0x4a>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
9000f7a4:	6996      	ldr	r6, [r2, #24]
9000f7a6:	bb36      	cbnz	r6, 9000f7f6 <osThreadNew+0x66>
    prio  = (UBaseType_t)osPriorityNormal;
9000f7a8:	2618      	movs	r6, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000f7aa:	6863      	ldr	r3, [r4, #4]
9000f7ac:	07db      	lsls	r3, r3, #31
9000f7ae:	d41f      	bmi.n	9000f7f0 <osThreadNew+0x60>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
9000f7b0:	6963      	ldr	r3, [r4, #20]
9000f7b2:	b323      	cbz	r3, 9000f7fe <osThreadNew+0x6e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
9000f7b4:	089a      	lsrs	r2, r3, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000f7b6:	68a5      	ldr	r5, [r4, #8]
      if (attr->name != NULL) {
9000f7b8:	f8d4 c000 	ldr.w	ip, [r4]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000f7bc:	68e7      	ldr	r7, [r4, #12]
9000f7be:	b305      	cbz	r5, 9000f802 <osThreadNew+0x72>
9000f7c0:	2fab      	cmp	r7, #171	@ 0xab
9000f7c2:	d915      	bls.n	9000f7f0 <osThreadNew+0x60>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
9000f7c4:	6924      	ldr	r4, [r4, #16]
9000f7c6:	b19c      	cbz	r4, 9000f7f0 <osThreadNew+0x60>
9000f7c8:	b193      	cbz	r3, 9000f7f0 <osThreadNew+0x60>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
9000f7ca:	460b      	mov	r3, r1
9000f7cc:	9600      	str	r6, [sp, #0]
9000f7ce:	4661      	mov	r1, ip
9000f7d0:	e9cd 4501 	strd	r4, r5, [sp, #4]
9000f7d4:	f001 ffa8 	bl	90011728 <xTaskCreateStatic>
9000f7d8:	e00b      	b.n	9000f7f2 <osThreadNew+0x62>
9000f7da:	2280      	movs	r2, #128	@ 0x80
    prio  = (UBaseType_t)osPriorityNormal;
9000f7dc:	2618      	movs	r6, #24
      #endif
    }
    else {
      if (mem == 0) {
        #if (configSUPPORT_DYNAMIC_ALLOCATION == 1)
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000f7de:	460b      	mov	r3, r1
9000f7e0:	4621      	mov	r1, r4
9000f7e2:	ac05      	add	r4, sp, #20
9000f7e4:	9600      	str	r6, [sp, #0]
9000f7e6:	9401      	str	r4, [sp, #4]
9000f7e8:	f001 ffd8 	bl	9001179c <xTaskCreate>
9000f7ec:	2801      	cmp	r0, #1
9000f7ee:	d010      	beq.n	9000f812 <osThreadNew+0x82>
        return (NULL);
9000f7f0:	2000      	movs	r0, #0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
9000f7f2:	b007      	add	sp, #28
9000f7f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000f7f6:	1e72      	subs	r2, r6, #1
9000f7f8:	2a37      	cmp	r2, #55	@ 0x37
9000f7fa:	d9d6      	bls.n	9000f7aa <osThreadNew+0x1a>
9000f7fc:	e7f8      	b.n	9000f7f0 <osThreadNew+0x60>
    stack = configMINIMAL_STACK_SIZE;
9000f7fe:	2280      	movs	r2, #128	@ 0x80
9000f800:	e7d9      	b.n	9000f7b6 <osThreadNew+0x26>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
9000f802:	2f00      	cmp	r7, #0
9000f804:	d1f4      	bne.n	9000f7f0 <osThreadNew+0x60>
9000f806:	6923      	ldr	r3, [r4, #16]
9000f808:	2b00      	cmp	r3, #0
9000f80a:	d1f1      	bne.n	9000f7f0 <osThreadNew+0x60>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000f80c:	b292      	uxth	r2, r2
9000f80e:	4664      	mov	r4, ip
9000f810:	e7e5      	b.n	9000f7de <osThreadNew+0x4e>
  return ((osThreadId_t)hTask);
9000f812:	9805      	ldr	r0, [sp, #20]
9000f814:	e7ed      	b.n	9000f7f2 <osThreadNew+0x62>
9000f816:	bf00      	nop

9000f818 <osThreadExit>:
}
#endif /* (configUSE_OS2_THREAD_SUSPEND_RESUME == 1) */

__NO_RETURN void osThreadExit (void) {
#ifndef USE_FreeRTOS_HEAP_1
  vTaskDelete (NULL);
9000f818:	2000      	movs	r0, #0
__NO_RETURN void osThreadExit (void) {
9000f81a:	b508      	push	{r3, lr}
  vTaskDelete (NULL);
9000f81c:	f001 ffee 	bl	900117fc <vTaskDelete>
#endif
  for (;;);
9000f820:	e7fe      	b.n	9000f820 <osThreadExit+0x8>
9000f822:	bf00      	nop

9000f824 <osDelay>:
9000f824:	f3ef 8205 	mrs	r2, IPSR
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000f828:	b93a      	cbnz	r2, 9000f83a <osDelay+0x16>
osStatus_t osDelay (uint32_t ticks) {
9000f82a:	b508      	push	{r3, lr}
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
9000f82c:	b908      	cbnz	r0, 9000f832 <osDelay+0xe>
    stat = osOK;
9000f82e:	2000      	movs	r0, #0
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
9000f830:	bd08      	pop	{r3, pc}
      vTaskDelay(ticks);
9000f832:	f002 f869 	bl	90011908 <vTaskDelay>
    stat = osOK;
9000f836:	2000      	movs	r0, #0
}
9000f838:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
9000f83a:	f06f 0005 	mvn.w	r0, #5
}
9000f83e:	4770      	bx	lr

9000f840 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
9000f840:	b5f0      	push	{r4, r5, r6, r7, lr}
9000f842:	b083      	sub	sp, #12
9000f844:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
9000f848:	b98e      	cbnz	r6, 9000f86e <osSemaphoreNew+0x2e>
9000f84a:	4605      	mov	r5, r0
9000f84c:	b178      	cbz	r0, 9000f86e <osSemaphoreNew+0x2e>
9000f84e:	4288      	cmp	r0, r1
9000f850:	460f      	mov	r7, r1
9000f852:	d30c      	bcc.n	9000f86e <osSemaphoreNew+0x2e>
    mem = -1;

    if (attr != NULL) {
9000f854:	4614      	mov	r4, r2
9000f856:	b172      	cbz	r2, 9000f876 <osSemaphoreNew+0x36>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000f858:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
9000f85c:	b14a      	cbz	r2, 9000f872 <osSemaphoreNew+0x32>
9000f85e:	2b4f      	cmp	r3, #79	@ 0x4f
9000f860:	d905      	bls.n	9000f86e <osSemaphoreNew+0x2e>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
9000f862:	2801      	cmp	r0, #1
9000f864:	d02e      	beq.n	9000f8c4 <osSemaphoreNew+0x84>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
9000f866:	f000 fd95 	bl	90010394 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
9000f86a:	4605      	mov	r5, r0
9000f86c:	b96d      	cbnz	r5, 9000f88a <osSemaphoreNew+0x4a>
  hSemaphore = NULL;
9000f86e:	2500      	movs	r5, #0
9000f870:	e010      	b.n	9000f894 <osSemaphoreNew+0x54>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000f872:	2b00      	cmp	r3, #0
9000f874:	d1fb      	bne.n	9000f86e <osSemaphoreNew+0x2e>
      if (max_count == 1U) {
9000f876:	2d01      	cmp	r5, #1
9000f878:	d00f      	beq.n	9000f89a <osSemaphoreNew+0x5a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
9000f87a:	4628      	mov	r0, r5
9000f87c:	4639      	mov	r1, r7
9000f87e:	f000 fde9 	bl	90010454 <xQueueCreateCountingSemaphore>
9000f882:	4605      	mov	r5, r0
      if (hSemaphore != NULL) {
9000f884:	2d00      	cmp	r5, #0
9000f886:	d0f2      	beq.n	9000f86e <osSemaphoreNew+0x2e>
        if (attr != NULL) {
9000f888:	b104      	cbz	r4, 9000f88c <osSemaphoreNew+0x4c>
          name = attr->name;
9000f88a:	6824      	ldr	r4, [r4, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
9000f88c:	4621      	mov	r1, r4
9000f88e:	4628      	mov	r0, r5
9000f890:	f001 fc14 	bl	900110bc <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
9000f894:	4628      	mov	r0, r5
9000f896:	b003      	add	sp, #12
9000f898:	bdf0      	pop	{r4, r5, r6, r7, pc}
            hSemaphore = xSemaphoreCreateBinary();
9000f89a:	4628      	mov	r0, r5
9000f89c:	2203      	movs	r2, #3
9000f89e:	2100      	movs	r1, #0
9000f8a0:	f000 fd36 	bl	90010310 <xQueueGenericCreate>
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000f8a4:	4605      	mov	r5, r0
9000f8a6:	2800      	cmp	r0, #0
9000f8a8:	d0ec      	beq.n	9000f884 <osSemaphoreNew+0x44>
9000f8aa:	2f00      	cmp	r7, #0
9000f8ac:	d0ea      	beq.n	9000f884 <osSemaphoreNew+0x44>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000f8ae:	2300      	movs	r3, #0
9000f8b0:	461a      	mov	r2, r3
9000f8b2:	4619      	mov	r1, r3
9000f8b4:	f000 fe14 	bl	900104e0 <xQueueGenericSend>
9000f8b8:	2801      	cmp	r0, #1
9000f8ba:	d0e5      	beq.n	9000f888 <osSemaphoreNew+0x48>
            vSemaphoreDelete (hSemaphore);
9000f8bc:	4628      	mov	r0, r5
9000f8be:	f001 fbb7 	bl	90011030 <vQueueDelete>
      if (hSemaphore != NULL) {
9000f8c2:	e7d4      	b.n	9000f86e <osSemaphoreNew+0x2e>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
9000f8c4:	4613      	mov	r3, r2
9000f8c6:	2203      	movs	r2, #3
9000f8c8:	4631      	mov	r1, r6
9000f8ca:	9200      	str	r2, [sp, #0]
9000f8cc:	4632      	mov	r2, r6
9000f8ce:	f000 fcb3 	bl	90010238 <xQueueGenericCreateStatic>
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000f8d2:	4605      	mov	r5, r0
9000f8d4:	2800      	cmp	r0, #0
9000f8d6:	d0c9      	beq.n	9000f86c <osSemaphoreNew+0x2c>
9000f8d8:	2f00      	cmp	r7, #0
9000f8da:	d0c7      	beq.n	9000f86c <osSemaphoreNew+0x2c>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000f8dc:	4633      	mov	r3, r6
9000f8de:	4632      	mov	r2, r6
9000f8e0:	4631      	mov	r1, r6
9000f8e2:	f000 fdfd 	bl	900104e0 <xQueueGenericSend>
9000f8e6:	2801      	cmp	r0, #1
9000f8e8:	d0cf      	beq.n	9000f88a <osSemaphoreNew+0x4a>
9000f8ea:	e7e7      	b.n	9000f8bc <osSemaphoreNew+0x7c>

9000f8ec <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000f8ec:	b360      	cbz	r0, 9000f948 <osSemaphoreAcquire+0x5c>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
9000f8ee:	b510      	push	{r4, lr}
9000f8f0:	460c      	mov	r4, r1
9000f8f2:	b082      	sub	sp, #8
9000f8f4:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000f8f8:	b1b3      	cbz	r3, 9000f928 <osSemaphoreAcquire+0x3c>
    if (timeout != 0U) {
9000f8fa:	bb11      	cbnz	r1, 9000f942 <osSemaphoreAcquire+0x56>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000f8fc:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000f8fe:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000f900:	f001 fb3a 	bl	90010f78 <xQueueReceiveFromISR>
9000f904:	2801      	cmp	r0, #1
9000f906:	d118      	bne.n	9000f93a <osSemaphoreAcquire+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000f908:	9b01      	ldr	r3, [sp, #4]
9000f90a:	b913      	cbnz	r3, 9000f912 <osSemaphoreAcquire+0x26>
  stat = osOK;
9000f90c:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000f90e:	b002      	add	sp, #8
9000f910:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
9000f912:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f916:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f91a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f91e:	f3bf 8f4f 	dsb	sy
9000f922:	f3bf 8f6f 	isb	sy
9000f926:	e7f1      	b.n	9000f90c <osSemaphoreAcquire+0x20>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
9000f928:	f001 f996 	bl	90010c58 <xQueueSemaphoreTake>
9000f92c:	2801      	cmp	r0, #1
9000f92e:	d0ed      	beq.n	9000f90c <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
9000f930:	b11c      	cbz	r4, 9000f93a <osSemaphoreAcquire+0x4e>
        stat = osErrorTimeout;
9000f932:	f06f 0001 	mvn.w	r0, #1
}
9000f936:	b002      	add	sp, #8
9000f938:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
9000f93a:	f06f 0002 	mvn.w	r0, #2
}
9000f93e:	b002      	add	sp, #8
9000f940:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
9000f942:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000f946:	e7e2      	b.n	9000f90e <osSemaphoreAcquire+0x22>
    stat = osErrorParameter;
9000f948:	f06f 0003 	mvn.w	r0, #3
}
9000f94c:	4770      	bx	lr
9000f94e:	bf00      	nop

9000f950 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000f950:	b328      	cbz	r0, 9000f99e <osSemaphoreRelease+0x4e>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
9000f952:	b500      	push	{lr}
9000f954:	b083      	sub	sp, #12
9000f956:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000f95a:	b19b      	cbz	r3, 9000f984 <osSemaphoreRelease+0x34>
    yield = pdFALSE;
9000f95c:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000f95e:	a901      	add	r1, sp, #4
    yield = pdFALSE;
9000f960:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000f962:	f000 ffa5 	bl	900108b0 <xQueueGiveFromISR>
9000f966:	2801      	cmp	r0, #1
9000f968:	d116      	bne.n	9000f998 <osSemaphoreRelease+0x48>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
9000f96a:	9b01      	ldr	r3, [sp, #4]
9000f96c:	b183      	cbz	r3, 9000f990 <osSemaphoreRelease+0x40>
9000f96e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f972:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f976:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f97a:	f3bf 8f4f 	dsb	sy
9000f97e:	f3bf 8f6f 	isb	sy
9000f982:	e005      	b.n	9000f990 <osSemaphoreRelease+0x40>
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000f984:	461a      	mov	r2, r3
9000f986:	4619      	mov	r1, r3
9000f988:	f000 fdaa 	bl	900104e0 <xQueueGenericSend>
9000f98c:	2801      	cmp	r0, #1
9000f98e:	d103      	bne.n	9000f998 <osSemaphoreRelease+0x48>
  stat = osOK;
9000f990:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
9000f992:	b003      	add	sp, #12
9000f994:	f85d fb04 	ldr.w	pc, [sp], #4
      stat = osErrorResource;
9000f998:	f06f 0002 	mvn.w	r0, #2
9000f99c:	e7f9      	b.n	9000f992 <osSemaphoreRelease+0x42>
    stat = osErrorParameter;
9000f99e:	f06f 0003 	mvn.w	r0, #3
}
9000f9a2:	4770      	bx	lr

9000f9a4 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
9000f9a4:	b5f0      	push	{r4, r5, r6, r7, lr}
9000f9a6:	b083      	sub	sp, #12
9000f9a8:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
9000f9ac:	b987      	cbnz	r7, 9000f9d0 <osMessageQueueNew+0x2c>
9000f9ae:	4605      	mov	r5, r0
9000f9b0:	b170      	cbz	r0, 9000f9d0 <osMessageQueueNew+0x2c>
9000f9b2:	b169      	cbz	r1, 9000f9d0 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
9000f9b4:	4614      	mov	r4, r2
9000f9b6:	b17a      	cbz	r2, 9000f9d8 <osMessageQueueNew+0x34>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000f9b8:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
9000f9bc:	b1c3      	cbz	r3, 9000f9f0 <osMessageQueueNew+0x4c>
9000f9be:	2a4f      	cmp	r2, #79	@ 0x4f
9000f9c0:	d906      	bls.n	9000f9d0 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000f9c2:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000f9c4:	b122      	cbz	r2, 9000f9d0 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000f9c6:	fb01 f505 	mul.w	r5, r1, r5
9000f9ca:	6966      	ldr	r6, [r4, #20]
9000f9cc:	42ae      	cmp	r6, r5
9000f9ce:	d21e      	bcs.n	9000fa0e <osMessageQueueNew+0x6a>
  hQueue = NULL;
9000f9d0:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
9000f9d2:	4628      	mov	r0, r5
9000f9d4:	b003      	add	sp, #12
9000f9d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
          hQueue = xQueueCreate (msg_count, msg_size);
9000f9d8:	f000 fc9a 	bl	90010310 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000f9dc:	4605      	mov	r5, r0
9000f9de:	2800      	cmp	r0, #0
9000f9e0:	d0f6      	beq.n	9000f9d0 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
9000f9e2:	4628      	mov	r0, r5
9000f9e4:	4621      	mov	r1, r4
9000f9e6:	f001 fb69 	bl	900110bc <vQueueAddToRegistry>
}
9000f9ea:	4628      	mov	r0, r5
9000f9ec:	b003      	add	sp, #12
9000f9ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
9000f9f0:	2a00      	cmp	r2, #0
9000f9f2:	d1ed      	bne.n	9000f9d0 <osMessageQueueNew+0x2c>
9000f9f4:	6923      	ldr	r3, [r4, #16]
9000f9f6:	2b00      	cmp	r3, #0
9000f9f8:	d1ea      	bne.n	9000f9d0 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
9000f9fa:	6962      	ldr	r2, [r4, #20]
9000f9fc:	2a00      	cmp	r2, #0
9000f9fe:	d1e7      	bne.n	9000f9d0 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
9000fa00:	f000 fc86 	bl	90010310 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000fa04:	4605      	mov	r5, r0
9000fa06:	2800      	cmp	r0, #0
9000fa08:	d0e2      	beq.n	9000f9d0 <osMessageQueueNew+0x2c>
        name = attr->name;
9000fa0a:	6824      	ldr	r4, [r4, #0]
9000fa0c:	e7e9      	b.n	9000f9e2 <osMessageQueueNew+0x3e>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
9000fa0e:	9700      	str	r7, [sp, #0]
9000fa10:	f000 fc12 	bl	90010238 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
9000fa14:	4605      	mov	r5, r0
9000fa16:	2800      	cmp	r0, #0
9000fa18:	d1f7      	bne.n	9000fa0a <osMessageQueueNew+0x66>
9000fa1a:	e7d9      	b.n	9000f9d0 <osMessageQueueNew+0x2c>

9000fa1c <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
9000fa1c:	b560      	push	{r5, r6, lr}
9000fa1e:	461e      	mov	r6, r3
9000fa20:	b083      	sub	sp, #12
9000fa22:	f3ef 8205 	mrs	r2, IPSR
  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000fa26:	fab0 f580 	clz	r5, r0
9000fa2a:	fab1 f381 	clz	r3, r1
9000fa2e:	096d      	lsrs	r5, r5, #5
9000fa30:	095b      	lsrs	r3, r3, #5
  if (IS_IRQ()) {
9000fa32:	b1da      	cbz	r2, 9000fa6c <osMessageQueuePut+0x50>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000fa34:	2e00      	cmp	r6, #0
9000fa36:	bf18      	it	ne
9000fa38:	f043 0301 	orrne.w	r3, r3, #1
9000fa3c:	bb33      	cbnz	r3, 9000fa8c <osMessageQueuePut+0x70>
9000fa3e:	bb2d      	cbnz	r5, 9000fa8c <osMessageQueuePut+0x70>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000fa40:	462b      	mov	r3, r5
9000fa42:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000fa44:	9501      	str	r5, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000fa46:	f000 fecd 	bl	900107e4 <xQueueGenericSendFromISR>
9000fa4a:	2801      	cmp	r0, #1
9000fa4c:	d11a      	bne.n	9000fa84 <osMessageQueuePut+0x68>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000fa4e:	9b01      	ldr	r3, [sp, #4]
9000fa50:	b14b      	cbz	r3, 9000fa66 <osMessageQueuePut+0x4a>
9000fa52:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000fa56:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000fa5a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000fa5e:	f3bf 8f4f 	dsb	sy
9000fa62:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000fa66:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000fa68:	b003      	add	sp, #12
9000fa6a:	bd60      	pop	{r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000fa6c:	b975      	cbnz	r5, 9000fa8c <osMessageQueuePut+0x70>
9000fa6e:	b96b      	cbnz	r3, 9000fa8c <osMessageQueuePut+0x70>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000fa70:	4632      	mov	r2, r6
9000fa72:	f000 fd35 	bl	900104e0 <xQueueGenericSend>
9000fa76:	2801      	cmp	r0, #1
9000fa78:	d0f5      	beq.n	9000fa66 <osMessageQueuePut+0x4a>
        if (timeout != 0U) {
9000fa7a:	b11e      	cbz	r6, 9000fa84 <osMessageQueuePut+0x68>
          stat = osErrorTimeout;
9000fa7c:	f06f 0001 	mvn.w	r0, #1
}
9000fa80:	b003      	add	sp, #12
9000fa82:	bd60      	pop	{r5, r6, pc}
        stat = osErrorResource;
9000fa84:	f06f 0002 	mvn.w	r0, #2
}
9000fa88:	b003      	add	sp, #12
9000fa8a:	bd60      	pop	{r5, r6, pc}
      stat = osErrorParameter;
9000fa8c:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000fa90:	e7ea      	b.n	9000fa68 <osMessageQueuePut+0x4c>
9000fa92:	bf00      	nop

9000fa94 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
9000fa94:	b570      	push	{r4, r5, r6, lr}
9000fa96:	461e      	mov	r6, r3
9000fa98:	b082      	sub	sp, #8
9000fa9a:	f3ef 8305 	mrs	r3, IPSR
  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000fa9e:	fab0 f580 	clz	r5, r0
9000faa2:	fab1 f481 	clz	r4, r1
9000faa6:	096d      	lsrs	r5, r5, #5
9000faa8:	0964      	lsrs	r4, r4, #5
  if (IS_IRQ()) {
9000faaa:	b1d3      	cbz	r3, 9000fae2 <osMessageQueueGet+0x4e>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000faac:	2e00      	cmp	r6, #0
9000faae:	bf18      	it	ne
9000fab0:	f044 0401 	orrne.w	r4, r4, #1
9000fab4:	bb2c      	cbnz	r4, 9000fb02 <osMessageQueueGet+0x6e>
9000fab6:	bb25      	cbnz	r5, 9000fb02 <osMessageQueueGet+0x6e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000fab8:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000faba:	9501      	str	r5, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000fabc:	f001 fa5c 	bl	90010f78 <xQueueReceiveFromISR>
9000fac0:	2801      	cmp	r0, #1
9000fac2:	d11a      	bne.n	9000fafa <osMessageQueueGet+0x66>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000fac4:	9b01      	ldr	r3, [sp, #4]
9000fac6:	b14b      	cbz	r3, 9000fadc <osMessageQueueGet+0x48>
9000fac8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000facc:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000fad0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000fad4:	f3bf 8f4f 	dsb	sy
9000fad8:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000fadc:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000fade:	b002      	add	sp, #8
9000fae0:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000fae2:	b975      	cbnz	r5, 9000fb02 <osMessageQueueGet+0x6e>
9000fae4:	b96c      	cbnz	r4, 9000fb02 <osMessageQueueGet+0x6e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000fae6:	4632      	mov	r2, r6
9000fae8:	f000 ff38 	bl	9001095c <xQueueReceive>
9000faec:	2801      	cmp	r0, #1
9000faee:	d0f5      	beq.n	9000fadc <osMessageQueueGet+0x48>
        if (timeout != 0U) {
9000faf0:	b11e      	cbz	r6, 9000fafa <osMessageQueueGet+0x66>
          stat = osErrorTimeout;
9000faf2:	f06f 0001 	mvn.w	r0, #1
}
9000faf6:	b002      	add	sp, #8
9000faf8:	bd70      	pop	{r4, r5, r6, pc}
        stat = osErrorResource;
9000fafa:	f06f 0002 	mvn.w	r0, #2
}
9000fafe:	b002      	add	sp, #8
9000fb00:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
9000fb02:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000fb06:	e7ea      	b.n	9000fade <osMessageQueueGet+0x4a>

9000fb08 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000fb08:	4b04      	ldr	r3, [pc, #16]	@ (9000fb1c <vApplicationGetIdleTaskMemory+0x14>)
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
9000fb0a:	b410      	push	{r4}
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000fb0c:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000fb0e:	2380      	movs	r3, #128	@ 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
9000fb10:	4c03      	ldr	r4, [pc, #12]	@ (9000fb20 <vApplicationGetIdleTaskMemory+0x18>)
9000fb12:	600c      	str	r4, [r1, #0]
}
9000fb14:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000fb18:	6013      	str	r3, [r2, #0]
}
9000fb1a:	4770      	bx	lr
9000fb1c:	24008e20 	.word	0x24008e20
9000fb20:	24008c20 	.word	0x24008c20

9000fb24 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000fb24:	4b05      	ldr	r3, [pc, #20]	@ (9000fb3c <vApplicationGetTimerTaskMemory+0x18>)
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
9000fb26:	b410      	push	{r4}
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000fb28:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000fb2a:	f44f 7380 	mov.w	r3, #256	@ 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
9000fb2e:	4c04      	ldr	r4, [pc, #16]	@ (9000fb40 <vApplicationGetTimerTaskMemory+0x1c>)
9000fb30:	600c      	str	r4, [r1, #0]
}
9000fb32:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000fb36:	6013      	str	r3, [r2, #0]
}
9000fb38:	4770      	bx	lr
9000fb3a:	bf00      	nop
9000fb3c:	24008b74 	.word	0x24008b74
9000fb40:	24008774 	.word	0x24008774

9000fb44 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
9000fb44:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000fb48:	4604      	mov	r4, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
9000fb4a:	f001 ffb7 	bl	90011abc <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
9000fb4e:	4a54      	ldr	r2, [pc, #336]	@ (9000fca0 <pvPortMalloc+0x15c>)
9000fb50:	6815      	ldr	r5, [r2, #0]
9000fb52:	2d00      	cmp	r5, #0
9000fb54:	d035      	beq.n	9000fbc2 <pvPortMalloc+0x7e>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
9000fb56:	4b53      	ldr	r3, [pc, #332]	@ (9000fca4 <pvPortMalloc+0x160>)
9000fb58:	681e      	ldr	r6, [r3, #0]
9000fb5a:	4234      	tst	r4, r6
9000fb5c:	d12b      	bne.n	9000fbb6 <pvPortMalloc+0x72>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
9000fb5e:	b354      	cbz	r4, 9000fbb6 <pvPortMalloc+0x72>
			{
				xWantedSize += xHeapStructSize;
9000fb60:	f104 0008 	add.w	r0, r4, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
9000fb64:	0764      	lsls	r4, r4, #29
9000fb66:	d002      	beq.n	9000fb6e <pvPortMalloc+0x2a>
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
9000fb68:	f020 0007 	bic.w	r0, r0, #7
9000fb6c:	3008      	adds	r0, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
9000fb6e:	b310      	cbz	r0, 9000fbb6 <pvPortMalloc+0x72>
9000fb70:	f8df e144 	ldr.w	lr, [pc, #324]	@ 9000fcb8 <pvPortMalloc+0x174>
9000fb74:	f8de c000 	ldr.w	ip, [lr]
9000fb78:	4584      	cmp	ip, r0
9000fb7a:	d31c      	bcc.n	9000fbb6 <pvPortMalloc+0x72>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
9000fb7c:	4c4a      	ldr	r4, [pc, #296]	@ (9000fca8 <pvPortMalloc+0x164>)
9000fb7e:	6823      	ldr	r3, [r4, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9000fb80:	e003      	b.n	9000fb8a <pvPortMalloc+0x46>
9000fb82:	681a      	ldr	r2, [r3, #0]
9000fb84:	b122      	cbz	r2, 9000fb90 <pvPortMalloc+0x4c>
				{
					pxPreviousBlock = pxBlock;
9000fb86:	461c      	mov	r4, r3
					pxBlock = pxBlock->pxNextFreeBlock;
9000fb88:	4613      	mov	r3, r2
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9000fb8a:	6859      	ldr	r1, [r3, #4]
9000fb8c:	4281      	cmp	r1, r0
9000fb8e:	d3f8      	bcc.n	9000fb82 <pvPortMalloc+0x3e>
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
9000fb90:	42ab      	cmp	r3, r5
9000fb92:	d010      	beq.n	9000fbb6 <pvPortMalloc+0x72>
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );

					/* This block is being returned for use so must be taken out
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000fb94:	681a      	ldr	r2, [r3, #0]
9000fb96:	6022      	str	r2, [r4, #0]

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000fb98:	1a0c      	subs	r4, r1, r0
9000fb9a:	2c10      	cmp	r4, #16
9000fb9c:	d947      	bls.n	9000fc2e <pvPortMalloc+0xea>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
9000fb9e:	181a      	adds	r2, r3, r0
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
9000fba0:	0751      	lsls	r1, r2, #29
9000fba2:	d02d      	beq.n	9000fc00 <pvPortMalloc+0xbc>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
9000fba4:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fba8:	f383 8811 	msr	BASEPRI, r3
9000fbac:	f3bf 8f6f 	isb	sy
9000fbb0:	f3bf 8f4f 	dsb	sy
9000fbb4:	e7fe      	b.n	9000fbb4 <pvPortMalloc+0x70>
void *pvReturn = NULL;
9000fbb6:	2400      	movs	r4, #0
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
9000fbb8:	f001 ff88 	bl	90011acc <xTaskResumeAll>
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
9000fbbc:	4620      	mov	r0, r4
9000fbbe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
uint8_t *pucAlignedHeap;
size_t uxAddress;
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;

	/* Ensure the heap starts on a correctly aligned boundary. */
	uxAddress = ( size_t ) ucHeap;
9000fbc2:	4b3a      	ldr	r3, [pc, #232]	@ (9000fcac <pvPortMalloc+0x168>)
	/* Only one block exists - and it covers the entire usable heap space. */
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;

	/* Work out the position of the top bit in a size_t variable. */
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000fbc4:	f04f 4000 	mov.w	r0, #2147483648	@ 0x80000000
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000fbc8:	4e37      	ldr	r6, [pc, #220]	@ (9000fca8 <pvPortMalloc+0x164>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
9000fbca:	075d      	lsls	r5, r3, #29
	uxAddress -= xHeapStructSize;
9000fbcc:	4d38      	ldr	r5, [pc, #224]	@ (9000fcb0 <pvPortMalloc+0x16c>)
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
9000fbce:	bf18      	it	ne
9000fbd0:	3307      	addne	r3, #7
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000fbd2:	f025 0507 	bic.w	r5, r5, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000fbd6:	bf18      	it	ne
9000fbd8:	f023 0307 	bicne.w	r3, r3, #7
	pxEnd = ( void * ) uxAddress;
9000fbdc:	6015      	str	r5, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
9000fbde:	2200      	movs	r2, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000fbe0:	6033      	str	r3, [r6, #0]
9000fbe2:	4619      	mov	r1, r3
	xStart.xBlockSize = ( size_t ) 0;
9000fbe4:	6072      	str	r2, [r6, #4]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
9000fbe6:	1aeb      	subs	r3, r5, r3
}
9000fbe8:	4606      	mov	r6, r0
	pxEnd->pxNextFreeBlock = NULL;
9000fbea:	e9c5 2200 	strd	r2, r2, [r5]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000fbee:	4a31      	ldr	r2, [pc, #196]	@ (9000fcb4 <pvPortMalloc+0x170>)
9000fbf0:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000fbf2:	4a31      	ldr	r2, [pc, #196]	@ (9000fcb8 <pvPortMalloc+0x174>)
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
9000fbf4:	e9c1 5300 	strd	r5, r3, [r1]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000fbf8:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000fbfa:	4b2a      	ldr	r3, [pc, #168]	@ (9000fca4 <pvPortMalloc+0x160>)
9000fbfc:	6018      	str	r0, [r3, #0]
}
9000fbfe:	e7ac      	b.n	9000fb5a <pvPortMalloc+0x16>
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000fc00:	4929      	ldr	r1, [pc, #164]	@ (9000fca8 <pvPortMalloc+0x164>)
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
9000fc02:	6054      	str	r4, [r2, #4]
						pxBlock->xBlockSize = xWantedSize;
9000fc04:	6058      	str	r0, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000fc06:	460c      	mov	r4, r1
9000fc08:	6809      	ldr	r1, [r1, #0]
9000fc0a:	428a      	cmp	r2, r1
9000fc0c:	d8fb      	bhi.n	9000fc06 <pvPortMalloc+0xc2>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000fc0e:	6867      	ldr	r7, [r4, #4]
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000fc10:	f8d2 8004 	ldr.w	r8, [r2, #4]
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000fc14:	eb04 0907 	add.w	r9, r4, r7
9000fc18:	454a      	cmp	r2, r9
9000fc1a:	d028      	beq.n	9000fc6e <pvPortMalloc+0x12a>
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000fc1c:	eb02 0708 	add.w	r7, r2, r8
9000fc20:	42b9      	cmp	r1, r7
9000fc22:	d02b      	beq.n	9000fc7c <pvPortMalloc+0x138>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
9000fc24:	6011      	str	r1, [r2, #0]
9000fc26:	4601      	mov	r1, r0

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
9000fc28:	42a2      	cmp	r2, r4
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000fc2a:	bf18      	it	ne
9000fc2c:	6022      	strne	r2, [r4, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000fc2e:	4821      	ldr	r0, [pc, #132]	@ (9000fcb4 <pvPortMalloc+0x170>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000fc30:	ebac 0201 	sub.w	r2, ip, r1
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000fc34:	430e      	orrs	r6, r1
					pxBlock->pxNextFreeBlock = NULL;
9000fc36:	2100      	movs	r1, #0
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000fc38:	6804      	ldr	r4, [r0, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000fc3a:	f8ce 2000 	str.w	r2, [lr]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000fc3e:	42a2      	cmp	r2, r4
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
9000fc40:	f103 0408 	add.w	r4, r3, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000fc44:	605e      	str	r6, [r3, #4]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
9000fc46:	bf38      	it	cc
9000fc48:	6002      	strcc	r2, [r0, #0]
					xNumberOfSuccessfulAllocations++;
9000fc4a:	481c      	ldr	r0, [pc, #112]	@ (9000fcbc <pvPortMalloc+0x178>)
					pxBlock->pxNextFreeBlock = NULL;
9000fc4c:	6019      	str	r1, [r3, #0]
					xNumberOfSuccessfulAllocations++;
9000fc4e:	6802      	ldr	r2, [r0, #0]
9000fc50:	3201      	adds	r2, #1
9000fc52:	6002      	str	r2, [r0, #0]
	( void ) xTaskResumeAll();
9000fc54:	f001 ff3a 	bl	90011acc <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
9000fc58:	0763      	lsls	r3, r4, #29
9000fc5a:	d0af      	beq.n	9000fbbc <pvPortMalloc+0x78>
9000fc5c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fc60:	f383 8811 	msr	BASEPRI, r3
9000fc64:	f3bf 8f6f 	isb	sy
9000fc68:	f3bf 8f4f 	dsb	sy
9000fc6c:	e7fe      	b.n	9000fc6c <pvPortMalloc+0x128>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000fc6e:	4447      	add	r7, r8
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000fc70:	19e0      	adds	r0, r4, r7
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000fc72:	6067      	str	r7, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000fc74:	4281      	cmp	r1, r0
9000fc76:	d00a      	beq.n	9000fc8e <pvPortMalloc+0x14a>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000fc78:	6859      	ldr	r1, [r3, #4]
	if( pxIterator != pxBlockToInsert )
9000fc7a:	e7d8      	b.n	9000fc2e <pvPortMalloc+0xea>
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000fc7c:	42a9      	cmp	r1, r5
9000fc7e:	d0d1      	beq.n	9000fc24 <pvPortMalloc+0xe0>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000fc80:	6848      	ldr	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000fc82:	6809      	ldr	r1, [r1, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000fc84:	4440      	add	r0, r8
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000fc86:	6011      	str	r1, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000fc88:	6050      	str	r0, [r2, #4]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000fc8a:	6859      	ldr	r1, [r3, #4]
9000fc8c:	e7cc      	b.n	9000fc28 <pvPortMalloc+0xe4>
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000fc8e:	42a9      	cmp	r1, r5
9000fc90:	d0f2      	beq.n	9000fc78 <pvPortMalloc+0x134>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000fc92:	6848      	ldr	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000fc94:	680a      	ldr	r2, [r1, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000fc96:	4438      	add	r0, r7
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000fc98:	6022      	str	r2, [r4, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000fc9a:	6060      	str	r0, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000fc9c:	e7ec      	b.n	9000fc78 <pvPortMalloc+0x134>
9000fc9e:	bf00      	nop
9000fca0:	24008ee4 	.word	0x24008ee4
9000fca4:	24008ed0 	.word	0x24008ed0
9000fca8:	24008ee8 	.word	0x24008ee8
9000fcac:	24008ef0 	.word	0x24008ef0
9000fcb0:	24021588 	.word	0x24021588
9000fcb4:	24008edc 	.word	0x24008edc
9000fcb8:	24008ee0 	.word	0x24008ee0
9000fcbc:	24008ed8 	.word	0x24008ed8

9000fcc0 <vPortFree>:
	if( pv != NULL )
9000fcc0:	b1d0      	cbz	r0, 9000fcf8 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000fcc2:	4a2f      	ldr	r2, [pc, #188]	@ (9000fd80 <vPortFree+0xc0>)
9000fcc4:	f850 3c04 	ldr.w	r3, [r0, #-4]
9000fcc8:	6812      	ldr	r2, [r2, #0]
9000fcca:	4213      	tst	r3, r2
9000fccc:	d00b      	beq.n	9000fce6 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
9000fcce:	f850 1c08 	ldr.w	r1, [r0, #-8]
9000fcd2:	b191      	cbz	r1, 9000fcfa <vPortFree+0x3a>
9000fcd4:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fcd8:	f383 8811 	msr	BASEPRI, r3
9000fcdc:	f3bf 8f6f 	isb	sy
9000fce0:	f3bf 8f4f 	dsb	sy
9000fce4:	e7fe      	b.n	9000fce4 <vPortFree+0x24>
9000fce6:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fcea:	f383 8811 	msr	BASEPRI, r3
9000fcee:	f3bf 8f6f 	isb	sy
9000fcf2:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000fcf6:	e7fe      	b.n	9000fcf6 <vPortFree+0x36>
9000fcf8:	4770      	bx	lr
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000fcfa:	ea23 0302 	bic.w	r3, r3, r2
{
9000fcfe:	b530      	push	{r4, r5, lr}
9000fd00:	b083      	sub	sp, #12
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000fd02:	f840 3c04 	str.w	r3, [r0, #-4]
		puc -= xHeapStructSize;
9000fd06:	f1a0 0408 	sub.w	r4, r0, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000fd0a:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
9000fd0c:	f001 fed6 	bl	90011abc <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
9000fd10:	4a1c      	ldr	r2, [pc, #112]	@ (9000fd84 <vPortFree+0xc4>)
9000fd12:	9801      	ldr	r0, [sp, #4]
9000fd14:	6813      	ldr	r3, [r2, #0]
9000fd16:	f850 1c04 	ldr.w	r1, [r0, #-4]
9000fd1a:	440b      	add	r3, r1
9000fd1c:	6013      	str	r3, [r2, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000fd1e:	4b1a      	ldr	r3, [pc, #104]	@ (9000fd88 <vPortFree+0xc8>)
9000fd20:	461a      	mov	r2, r3
9000fd22:	681b      	ldr	r3, [r3, #0]
9000fd24:	429c      	cmp	r4, r3
9000fd26:	d8fb      	bhi.n	9000fd20 <vPortFree+0x60>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000fd28:	6855      	ldr	r5, [r2, #4]
9000fd2a:	eb02 0e05 	add.w	lr, r2, r5
9000fd2e:	4574      	cmp	r4, lr
9000fd30:	d011      	beq.n	9000fd56 <vPortFree+0x96>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000fd32:	eb04 0c01 	add.w	ip, r4, r1
9000fd36:	4563      	cmp	r3, ip
9000fd38:	d01d      	beq.n	9000fd76 <vPortFree+0xb6>
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
9000fd3a:	f840 3c08 	str.w	r3, [r0, #-8]
	if( pxIterator != pxBlockToInsert )
9000fd3e:	42a2      	cmp	r2, r4
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000fd40:	bf18      	it	ne
9000fd42:	6014      	strne	r4, [r2, #0]
					xNumberOfSuccessfulFrees++;
9000fd44:	4a11      	ldr	r2, [pc, #68]	@ (9000fd8c <vPortFree+0xcc>)
9000fd46:	6813      	ldr	r3, [r2, #0]
9000fd48:	3301      	adds	r3, #1
9000fd4a:	6013      	str	r3, [r2, #0]
}
9000fd4c:	b003      	add	sp, #12
9000fd4e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
				( void ) xTaskResumeAll();
9000fd52:	f001 bebb 	b.w	90011acc <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000fd56:	4429      	add	r1, r5
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000fd58:	1850      	adds	r0, r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000fd5a:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000fd5c:	4283      	cmp	r3, r0
9000fd5e:	d1f1      	bne.n	9000fd44 <vPortFree+0x84>
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000fd60:	480b      	ldr	r0, [pc, #44]	@ (9000fd90 <vPortFree+0xd0>)
9000fd62:	6800      	ldr	r0, [r0, #0]
9000fd64:	4283      	cmp	r3, r0
9000fd66:	d0ed      	beq.n	9000fd44 <vPortFree+0x84>
		pxBlockToInsert = pxIterator;
9000fd68:	4614      	mov	r4, r2
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000fd6a:	e9d3 3000 	ldrd	r3, r0, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000fd6e:	4401      	add	r1, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000fd70:	6023      	str	r3, [r4, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000fd72:	6061      	str	r1, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000fd74:	e7e3      	b.n	9000fd3e <vPortFree+0x7e>
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000fd76:	4d06      	ldr	r5, [pc, #24]	@ (9000fd90 <vPortFree+0xd0>)
9000fd78:	682d      	ldr	r5, [r5, #0]
9000fd7a:	42ab      	cmp	r3, r5
9000fd7c:	d1f5      	bne.n	9000fd6a <vPortFree+0xaa>
9000fd7e:	e7dc      	b.n	9000fd3a <vPortFree+0x7a>
9000fd80:	24008ed0 	.word	0x24008ed0
9000fd84:	24008ee0 	.word	0x24008ee0
9000fd88:	24008ee8 	.word	0x24008ee8
9000fd8c:	24008ed4 	.word	0x24008ed4
9000fd90:	24008ee4 	.word	0x24008ee4

9000fd94 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000fd94:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000fd98:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000fd9c:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000fd9e:	6081      	str	r1, [r0, #8]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000fda0:	6002      	str	r2, [r0, #0]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000fda2:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000fda4:	e9c0 3303 	strd	r3, r3, [r0, #12]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
9000fda8:	4770      	bx	lr
9000fdaa:	bf00      	nop

9000fdac <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
9000fdac:	2300      	movs	r3, #0
9000fdae:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
9000fdb0:	4770      	bx	lr
9000fdb2:	bf00      	nop

9000fdb4 <vListInsertEnd>:
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000fdb4:	6803      	ldr	r3, [r0, #0]
ListItem_t * const pxIndex = pxList->pxIndex;
9000fdb6:	6842      	ldr	r2, [r0, #4]
	( pxList->uxNumberOfItems )++;
9000fdb8:	3301      	adds	r3, #1
{
9000fdba:	b410      	push	{r4}
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000fdbc:	6894      	ldr	r4, [r2, #8]
9000fdbe:	e9c1 2401 	strd	r2, r4, [r1, #4]
	pxIndex->pxPrevious->pxNext = pxNewListItem;
9000fdc2:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
9000fdc4:	6091      	str	r1, [r2, #8]
}
9000fdc6:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
9000fdca:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000fdcc:	6003      	str	r3, [r0, #0]
}
9000fdce:	4770      	bx	lr

9000fdd0 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
9000fdd0:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
9000fdd2:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
9000fdd4:	1c6b      	adds	r3, r5, #1
9000fdd6:	d010      	beq.n	9000fdfa <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
9000fdd8:	f100 0308 	add.w	r3, r0, #8
9000fddc:	461c      	mov	r4, r3
9000fdde:	685b      	ldr	r3, [r3, #4]
9000fde0:	681a      	ldr	r2, [r3, #0]
9000fde2:	42aa      	cmp	r2, r5
9000fde4:	d9fa      	bls.n	9000fddc <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000fde6:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000fde8:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
9000fdea:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
9000fdec:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
9000fdee:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
9000fdf0:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
9000fdf2:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000fdf4:	6002      	str	r2, [r0, #0]
}
9000fdf6:	bc30      	pop	{r4, r5}
9000fdf8:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
9000fdfa:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000fdfc:	6863      	ldr	r3, [r4, #4]
9000fdfe:	e7f2      	b.n	9000fde6 <vListInsert+0x16>

9000fe00 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
9000fe00:	6903      	ldr	r3, [r0, #16]
{
9000fe02:	b410      	push	{r4}

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
9000fe04:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000fe06:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
	if( pxList->pxIndex == pxItemToRemove )
9000fe0a:	4284      	cmp	r4, r0

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;

	return pxList->uxNumberOfItems;
}
9000fe0c:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000fe10:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
9000fe12:	6051      	str	r1, [r2, #4]
	pxItemToRemove->pxContainer = NULL;
9000fe14:	f04f 0100 	mov.w	r1, #0
		pxList->pxIndex = pxItemToRemove->pxPrevious;
9000fe18:	bf08      	it	eq
9000fe1a:	605a      	streq	r2, [r3, #4]
	( pxList->uxNumberOfItems )--;
9000fe1c:	681a      	ldr	r2, [r3, #0]
	pxItemToRemove->pxContainer = NULL;
9000fe1e:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
9000fe20:	3a01      	subs	r2, #1
9000fe22:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
9000fe24:	6818      	ldr	r0, [r3, #0]
}
9000fe26:	4770      	bx	lr

9000fe28 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
9000fe28:	4808      	ldr	r0, [pc, #32]	@ (9000fe4c <prvPortStartFirstTask+0x24>)
9000fe2a:	6800      	ldr	r0, [r0, #0]
9000fe2c:	6800      	ldr	r0, [r0, #0]
9000fe2e:	f380 8808 	msr	MSP, r0
9000fe32:	f04f 0000 	mov.w	r0, #0
9000fe36:	f380 8814 	msr	CONTROL, r0
9000fe3a:	b662      	cpsie	i
9000fe3c:	b661      	cpsie	f
9000fe3e:	f3bf 8f4f 	dsb	sy
9000fe42:	f3bf 8f6f 	isb	sy
9000fe46:	df00      	svc	0
9000fe48:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
9000fe4a:	0000      	.short	0x0000
9000fe4c:	e000ed08 	.word	0xe000ed08

9000fe50 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
9000fe50:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 9000fe60 <vPortEnableVFP+0x10>
9000fe54:	6801      	ldr	r1, [r0, #0]
9000fe56:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
9000fe5a:	6001      	str	r1, [r0, #0]
9000fe5c:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
9000fe5e:	0000      	.short	0x0000
9000fe60:	e000ed88 	.word	0xe000ed88

9000fe64 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
9000fe64:	4b0e      	ldr	r3, [pc, #56]	@ (9000fea0 <prvTaskExitError+0x3c>)
{
9000fe66:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
9000fe68:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
9000fe6a:	681b      	ldr	r3, [r3, #0]
volatile uint32_t ulDummy = 0;
9000fe6c:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
9000fe6e:	3301      	adds	r3, #1
9000fe70:	d008      	beq.n	9000fe84 <prvTaskExitError+0x20>
9000fe72:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fe76:	f383 8811 	msr	BASEPRI, r3
9000fe7a:	f3bf 8f6f 	isb	sy
9000fe7e:	f3bf 8f4f 	dsb	sy
9000fe82:	e7fe      	b.n	9000fe82 <prvTaskExitError+0x1e>
9000fe84:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fe88:	f383 8811 	msr	BASEPRI, r3
9000fe8c:	f3bf 8f6f 	isb	sy
9000fe90:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000fe94:	9b01      	ldr	r3, [sp, #4]
9000fe96:	2b00      	cmp	r3, #0
9000fe98:	d0fc      	beq.n	9000fe94 <prvTaskExitError+0x30>
}
9000fe9a:	b002      	add	sp, #8
9000fe9c:	4770      	bx	lr
9000fe9e:	bf00      	nop
9000fea0:	24000084 	.word	0x24000084

9000fea4 <pxPortInitialiseStack>:
{
9000fea4:	4603      	mov	r3, r0
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000fea6:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000feaa:	4809      	ldr	r0, [pc, #36]	@ (9000fed0 <pxPortInitialiseStack+0x2c>)
{
9000feac:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
9000feae:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000feb2:	f843 0c0c 	str.w	r0, [r3, #-12]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
9000feb6:	f843 2c20 	str.w	r2, [r3, #-32]
}
9000feba:	f1a3 0044 	sub.w	r0, r3, #68	@ 0x44
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000febe:	e943 1402 	strd	r1, r4, [r3, #-8]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000fec2:	f06f 0102 	mvn.w	r1, #2
}
9000fec6:	f85d 4b04 	ldr.w	r4, [sp], #4
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000feca:	f843 1c24 	str.w	r1, [r3, #-36]
}
9000fece:	4770      	bx	lr
9000fed0:	9000fe65 	.word	0x9000fe65
	...

9000fee0 <SVC_Handler>:
	__asm volatile (
9000fee0:	4b07      	ldr	r3, [pc, #28]	@ (9000ff00 <pxCurrentTCBConst2>)
9000fee2:	6819      	ldr	r1, [r3, #0]
9000fee4:	6808      	ldr	r0, [r1, #0]
9000fee6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000feea:	f380 8809 	msr	PSP, r0
9000feee:	f3bf 8f6f 	isb	sy
9000fef2:	f04f 0000 	mov.w	r0, #0
9000fef6:	f380 8811 	msr	BASEPRI, r0
9000fefa:	4770      	bx	lr
9000fefc:	f3af 8000 	nop.w

9000ff00 <pxCurrentTCBConst2>:
9000ff00:	24021ad0 	.word	0x24021ad0

9000ff04 <vPortEnterCritical>:
9000ff04:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ff08:	f383 8811 	msr	BASEPRI, r3
9000ff0c:	f3bf 8f6f 	isb	sy
9000ff10:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
9000ff14:	4a0b      	ldr	r2, [pc, #44]	@ (9000ff44 <vPortEnterCritical+0x40>)
9000ff16:	6813      	ldr	r3, [r2, #0]
9000ff18:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
9000ff1a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
9000ff1c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
9000ff1e:	d000      	beq.n	9000ff22 <vPortEnterCritical+0x1e>
}
9000ff20:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
9000ff22:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000ff26:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
9000ff2a:	b2db      	uxtb	r3, r3
9000ff2c:	2b00      	cmp	r3, #0
9000ff2e:	d0f7      	beq.n	9000ff20 <vPortEnterCritical+0x1c>
9000ff30:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ff34:	f383 8811 	msr	BASEPRI, r3
9000ff38:	f3bf 8f6f 	isb	sy
9000ff3c:	f3bf 8f4f 	dsb	sy
9000ff40:	e7fe      	b.n	9000ff40 <vPortEnterCritical+0x3c>
9000ff42:	bf00      	nop
9000ff44:	24000084 	.word	0x24000084

9000ff48 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
9000ff48:	4a08      	ldr	r2, [pc, #32]	@ (9000ff6c <vPortExitCritical+0x24>)
9000ff4a:	6813      	ldr	r3, [r2, #0]
9000ff4c:	b943      	cbnz	r3, 9000ff60 <vPortExitCritical+0x18>
9000ff4e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ff52:	f383 8811 	msr	BASEPRI, r3
9000ff56:	f3bf 8f6f 	isb	sy
9000ff5a:	f3bf 8f4f 	dsb	sy
9000ff5e:	e7fe      	b.n	9000ff5e <vPortExitCritical+0x16>
	uxCriticalNesting--;
9000ff60:	3b01      	subs	r3, #1
9000ff62:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
9000ff64:	b90b      	cbnz	r3, 9000ff6a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
9000ff66:	f383 8811 	msr	BASEPRI, r3
}
9000ff6a:	4770      	bx	lr
9000ff6c:	24000084 	.word	0x24000084

9000ff70 <PendSV_Handler>:
	__asm volatile
9000ff70:	f3ef 8009 	mrs	r0, PSP
9000ff74:	f3bf 8f6f 	isb	sy
9000ff78:	4b15      	ldr	r3, [pc, #84]	@ (9000ffd0 <pxCurrentTCBConst>)
9000ff7a:	681a      	ldr	r2, [r3, #0]
9000ff7c:	f01e 0f10 	tst.w	lr, #16
9000ff80:	bf08      	it	eq
9000ff82:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
9000ff86:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000ff8a:	6010      	str	r0, [r2, #0]
9000ff8c:	e92d 0009 	stmdb	sp!, {r0, r3}
9000ff90:	f04f 0050 	mov.w	r0, #80	@ 0x50
9000ff94:	f380 8811 	msr	BASEPRI, r0
9000ff98:	f3bf 8f4f 	dsb	sy
9000ff9c:	f3bf 8f6f 	isb	sy
9000ffa0:	f001 fdd0 	bl	90011b44 <vTaskSwitchContext>
9000ffa4:	f04f 0000 	mov.w	r0, #0
9000ffa8:	f380 8811 	msr	BASEPRI, r0
9000ffac:	bc09      	pop	{r0, r3}
9000ffae:	6819      	ldr	r1, [r3, #0]
9000ffb0:	6808      	ldr	r0, [r1, #0]
9000ffb2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000ffb6:	f01e 0f10 	tst.w	lr, #16
9000ffba:	bf08      	it	eq
9000ffbc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
9000ffc0:	f380 8809 	msr	PSP, r0
9000ffc4:	f3bf 8f6f 	isb	sy
9000ffc8:	4770      	bx	lr
9000ffca:	bf00      	nop
9000ffcc:	f3af 8000 	nop.w

9000ffd0 <pxCurrentTCBConst>:
9000ffd0:	24021ad0 	.word	0x24021ad0

9000ffd4 <xPortSysTickHandler>:
{
9000ffd4:	b508      	push	{r3, lr}
	__asm volatile
9000ffd6:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ffda:	f383 8811 	msr	BASEPRI, r3
9000ffde:	f3bf 8f6f 	isb	sy
9000ffe2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
9000ffe6:	f001 fd87 	bl	90011af8 <xTaskIncrementTick>
9000ffea:	b128      	cbz	r0, 9000fff8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
9000ffec:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000fff0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000fff4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
9000fff8:	2300      	movs	r3, #0
9000fffa:	f383 8811 	msr	BASEPRI, r3
}
9000fffe:	bd08      	pop	{r3, pc}

90010000 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
90010000:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
90010004:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
90010006:	4806      	ldr	r0, [pc, #24]	@ (90010020 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
90010008:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9001000a:	4906      	ldr	r1, [pc, #24]	@ (90010024 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
9001000c:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9001000e:	6803      	ldr	r3, [r0, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
90010010:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
90010012:	fba1 1303 	umull	r1, r3, r1, r3
90010016:	099b      	lsrs	r3, r3, #6
90010018:	3b01      	subs	r3, #1
9001001a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9001001c:	6110      	str	r0, [r2, #16]
}
9001001e:	4770      	bx	lr
90010020:	24000078 	.word	0x24000078
90010024:	10624dd3 	.word	0x10624dd3

90010028 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
90010028:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9001002c:	4a48      	ldr	r2, [pc, #288]	@ (90010150 <xPortStartScheduler+0x128>)
9001002e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
90010032:	4291      	cmp	r1, r2
90010034:	d041      	beq.n	900100ba <xPortStartScheduler+0x92>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
90010036:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
9001003a:	4b46      	ldr	r3, [pc, #280]	@ (90010154 <xPortStartScheduler+0x12c>)
9001003c:	429a      	cmp	r2, r3
9001003e:	d033      	beq.n	900100a8 <xPortStartScheduler+0x80>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
90010040:	4b45      	ldr	r3, [pc, #276]	@ (90010158 <xPortStartScheduler+0x130>)
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
90010042:	f04f 0cff 	mov.w	ip, #255	@ 0xff
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
90010046:	4845      	ldr	r0, [pc, #276]	@ (9001015c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
90010048:	4945      	ldr	r1, [pc, #276]	@ (90010160 <xPortStartScheduler+0x138>)
{
9001004a:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9001004c:	781a      	ldrb	r2, [r3, #0]
{
9001004e:	b084      	sub	sp, #16
		ulOriginalPriority = *pucFirstUserPriorityRegister;
90010050:	b2d2      	uxtb	r2, r2
90010052:	9202      	str	r2, [sp, #8]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
90010054:	2207      	movs	r2, #7
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
90010056:	f883 c000 	strb.w	ip, [r3]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9001005a:	781b      	ldrb	r3, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9001005c:	6002      	str	r2, [r0, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9001005e:	b2db      	uxtb	r3, r3
90010060:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
90010064:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
90010068:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9001006c:	f003 0350 	and.w	r3, r3, #80	@ 0x50
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
90010070:	0612      	lsls	r2, r2, #24
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
90010072:	700b      	strb	r3, [r1, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
90010074:	d50f      	bpl.n	90010096 <xPortStartScheduler+0x6e>
90010076:	2206      	movs	r2, #6
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
90010078:	f89d 3007 	ldrb.w	r3, [sp, #7]
9001007c:	4611      	mov	r1, r2
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9001007e:	3a01      	subs	r2, #1
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
90010080:	005b      	lsls	r3, r3, #1
90010082:	b2db      	uxtb	r3, r3
90010084:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
90010088:	f89d 3007 	ldrb.w	r3, [sp, #7]
9001008c:	061b      	lsls	r3, r3, #24
9001008e:	d4f3      	bmi.n	90010078 <xPortStartScheduler+0x50>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
90010090:	2903      	cmp	r1, #3
90010092:	d01b      	beq.n	900100cc <xPortStartScheduler+0xa4>
90010094:	6001      	str	r1, [r0, #0]
	__asm volatile
90010096:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001009a:	f383 8811 	msr	BASEPRI, r3
9001009e:	f3bf 8f6f 	isb	sy
900100a2:	f3bf 8f4f 	dsb	sy
900100a6:	e7fe      	b.n	900100a6 <xPortStartScheduler+0x7e>
900100a8:	f04f 0350 	mov.w	r3, #80	@ 0x50
900100ac:	f383 8811 	msr	BASEPRI, r3
900100b0:	f3bf 8f6f 	isb	sy
900100b4:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
900100b8:	e7fe      	b.n	900100b8 <xPortStartScheduler+0x90>
900100ba:	f04f 0350 	mov.w	r3, #80	@ 0x50
900100be:	f383 8811 	msr	BASEPRI, r3
900100c2:	f3bf 8f6f 	isb	sy
900100c6:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
900100ca:	e7fe      	b.n	900100ca <xPortStartScheduler+0xa2>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
900100cc:	9b02      	ldr	r3, [sp, #8]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
900100ce:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
900100d2:	f44f 7140 	mov.w	r1, #768	@ 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
900100d6:	4a20      	ldr	r2, [pc, #128]	@ (90010158 <xPortStartScheduler+0x130>)
900100d8:	b2db      	uxtb	r3, r3
	uxCriticalNesting = 0;
900100da:	4e22      	ldr	r6, [pc, #136]	@ (90010164 <xPortStartScheduler+0x13c>)
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
900100dc:	6001      	str	r1, [r0, #0]
	uxCriticalNesting = 0;
900100de:	2500      	movs	r5, #0
		*pucFirstUserPriorityRegister = ulOriginalPriority;
900100e0:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
900100e2:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
900100e6:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
900100ea:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
900100ee:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
900100f2:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
900100f6:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
900100fa:	f7ff ff81 	bl	90010000 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
900100fe:	6035      	str	r5, [r6, #0]
	vPortEnableVFP();
90010100:	f7ff fea6 	bl	9000fe50 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
90010104:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
90010108:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
9001010c:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
90010110:	f7ff fe8a 	bl	9000fe28 <prvPortStartFirstTask>
	vTaskSwitchContext();
90010114:	f001 fd16 	bl	90011b44 <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
90010118:	6833      	ldr	r3, [r6, #0]
volatile uint32_t ulDummy = 0;
9001011a:	9503      	str	r5, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
9001011c:	3301      	adds	r3, #1
9001011e:	d008      	beq.n	90010132 <xPortStartScheduler+0x10a>
90010120:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010124:	f383 8811 	msr	BASEPRI, r3
90010128:	f3bf 8f6f 	isb	sy
9001012c:	f3bf 8f4f 	dsb	sy
90010130:	e7fe      	b.n	90010130 <xPortStartScheduler+0x108>
90010132:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010136:	f383 8811 	msr	BASEPRI, r3
9001013a:	f3bf 8f6f 	isb	sy
9001013e:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
90010142:	9b03      	ldr	r3, [sp, #12]
90010144:	2b00      	cmp	r3, #0
90010146:	d0fc      	beq.n	90010142 <xPortStartScheduler+0x11a>
}
90010148:	2000      	movs	r0, #0
9001014a:	b004      	add	sp, #16
9001014c:	bd70      	pop	{r4, r5, r6, pc}
9001014e:	bf00      	nop
90010150:	410fc271 	.word	0x410fc271
90010154:	410fc270 	.word	0x410fc270
90010158:	e000e400 	.word	0xe000e400
9001015c:	24021590 	.word	0x24021590
90010160:	24021594 	.word	0x24021594
90010164:	24000084 	.word	0x24000084

90010168 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
90010168:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
9001016c:	2b0f      	cmp	r3, #15
9001016e:	d90e      	bls.n	9001018e <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
90010170:	4911      	ldr	r1, [pc, #68]	@ (900101b8 <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
90010172:	4a12      	ldr	r2, [pc, #72]	@ (900101bc <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
90010174:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
90010176:	7812      	ldrb	r2, [r2, #0]
90010178:	429a      	cmp	r2, r3
9001017a:	d908      	bls.n	9001018e <vPortValidateInterruptPriority+0x26>
9001017c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010180:	f383 8811 	msr	BASEPRI, r3
90010184:	f3bf 8f6f 	isb	sy
90010188:	f3bf 8f4f 	dsb	sy
9001018c:	e7fe      	b.n	9001018c <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
9001018e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90010192:	4a0b      	ldr	r2, [pc, #44]	@ (900101c0 <vPortValidateInterruptPriority+0x58>)
90010194:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
90010198:	6812      	ldr	r2, [r2, #0]
9001019a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
9001019e:	4293      	cmp	r3, r2
900101a0:	d908      	bls.n	900101b4 <vPortValidateInterruptPriority+0x4c>
900101a2:	f04f 0350 	mov.w	r3, #80	@ 0x50
900101a6:	f383 8811 	msr	BASEPRI, r3
900101aa:	f3bf 8f6f 	isb	sy
900101ae:	f3bf 8f4f 	dsb	sy
900101b2:	e7fe      	b.n	900101b2 <vPortValidateInterruptPriority+0x4a>
	}
900101b4:	4770      	bx	lr
900101b6:	bf00      	nop
900101b8:	e000e3f0 	.word	0xe000e3f0
900101bc:	24021594 	.word	0x24021594
900101c0:	24021590 	.word	0x24021590

900101c4 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
900101c4:	b570      	push	{r4, r5, r6, lr}
900101c6:	4616      	mov	r6, r2

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
900101c8:	6c02      	ldr	r2, [r0, #64]	@ 0x40
{
900101ca:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
900101cc:	6b85      	ldr	r5, [r0, #56]	@ 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
900101ce:	b92a      	cbnz	r2, 900101dc <prvCopyDataToQueue+0x18>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
900101d0:	6806      	ldr	r6, [r0, #0]
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900101d2:	3501      	adds	r5, #1
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
900101d4:	b32e      	cbz	r6, 90010222 <prvCopyDataToQueue+0x5e>
BaseType_t xReturn = pdFALSE;
900101d6:	4610      	mov	r0, r2
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900101d8:	63a5      	str	r5, [r4, #56]	@ 0x38

	return xReturn;
}
900101da:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
900101dc:	b97e      	cbnz	r6, 900101fe <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
900101de:	6840      	ldr	r0, [r0, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900101e0:	3501      	adds	r5, #1
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
900101e2:	f01d fce4 	bl	9002dbae <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
900101e6:	6863      	ldr	r3, [r4, #4]
900101e8:	6c21      	ldr	r1, [r4, #64]	@ 0x40
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
900101ea:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
900101ec:	440b      	add	r3, r1
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
900101ee:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
900101f0:	6063      	str	r3, [r4, #4]
			pxQueue->pcWriteTo = pxQueue->pcHead;
900101f2:	bf24      	itt	cs
900101f4:	6823      	ldrcs	r3, [r4, #0]
900101f6:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
900101f8:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900101fa:	63a5      	str	r5, [r4, #56]	@ 0x38
}
900101fc:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
900101fe:	68c0      	ldr	r0, [r0, #12]
90010200:	f01d fcd5 	bl	9002dbae <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
90010204:	6c22      	ldr	r2, [r4, #64]	@ 0x40
90010206:	68e3      	ldr	r3, [r4, #12]
90010208:	4251      	negs	r1, r2
9001020a:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9001020c:	6822      	ldr	r2, [r4, #0]
9001020e:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
90010210:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
90010212:	d202      	bcs.n	9001021a <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
90010214:	68a3      	ldr	r3, [r4, #8]
90010216:	440b      	add	r3, r1
90010218:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
9001021a:	2e02      	cmp	r6, #2
9001021c:	d006      	beq.n	9001022c <prvCopyDataToQueue+0x68>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9001021e:	3501      	adds	r5, #1
90010220:	e7ea      	b.n	900101f8 <prvCopyDataToQueue+0x34>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
90010222:	6880      	ldr	r0, [r0, #8]
90010224:	f001 fe64 	bl	90011ef0 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
90010228:	60a6      	str	r6, [r4, #8]
9001022a:	e7d5      	b.n	900101d8 <prvCopyDataToQueue+0x14>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9001022c:	2d01      	cmp	r5, #1
BaseType_t xReturn = pdFALSE;
9001022e:	f04f 0000 	mov.w	r0, #0
90010232:	bf38      	it	cc
90010234:	2501      	movcc	r5, #1
90010236:	e7cf      	b.n	900101d8 <prvCopyDataToQueue+0x14>

90010238 <xQueueGenericCreateStatic>:
	{
90010238:	b530      	push	{r4, r5, lr}
9001023a:	b083      	sub	sp, #12
9001023c:	f89d 5018 	ldrb.w	r5, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
90010240:	b940      	cbnz	r0, 90010254 <xQueueGenericCreateStatic+0x1c>
90010242:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010246:	f383 8811 	msr	BASEPRI, r3
9001024a:	f3bf 8f6f 	isb	sy
9001024e:	f3bf 8f4f 	dsb	sy
90010252:	e7fe      	b.n	90010252 <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
90010254:	461c      	mov	r4, r3
90010256:	b153      	cbz	r3, 9001026e <xQueueGenericCreateStatic+0x36>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
90010258:	b30a      	cbz	r2, 9001029e <xQueueGenericCreateStatic+0x66>
9001025a:	b989      	cbnz	r1, 90010280 <xQueueGenericCreateStatic+0x48>
9001025c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010260:	f383 8811 	msr	BASEPRI, r3
90010264:	f3bf 8f6f 	isb	sy
90010268:	f3bf 8f4f 	dsb	sy
9001026c:	e7fe      	b.n	9001026c <xQueueGenericCreateStatic+0x34>
9001026e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010272:	f383 8811 	msr	BASEPRI, r3
90010276:	f3bf 8f6f 	isb	sy
9001027a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9001027e:	e7fe      	b.n	9001027e <xQueueGenericCreateStatic+0x46>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
90010280:	b16a      	cbz	r2, 9001029e <xQueueGenericCreateStatic+0x66>
			volatile size_t xSize = sizeof( StaticQueue_t );
90010282:	2350      	movs	r3, #80	@ 0x50
90010284:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
90010286:	9b01      	ldr	r3, [sp, #4]
90010288:	2b50      	cmp	r3, #80	@ 0x50
9001028a:	d013      	beq.n	900102b4 <xQueueGenericCreateStatic+0x7c>
9001028c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010290:	f383 8811 	msr	BASEPRI, r3
90010294:	f3bf 8f6f 	isb	sy
90010298:	f3bf 8f4f 	dsb	sy
9001029c:	e7fe      	b.n	9001029c <xQueueGenericCreateStatic+0x64>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9001029e:	2900      	cmp	r1, #0
900102a0:	d0ef      	beq.n	90010282 <xQueueGenericCreateStatic+0x4a>
900102a2:	f04f 0350 	mov.w	r3, #80	@ 0x50
900102a6:	f383 8811 	msr	BASEPRI, r3
900102aa:	f3bf 8f6f 	isb	sy
900102ae:	f3bf 8f4f 	dsb	sy
900102b2:	e7fe      	b.n	900102b2 <xQueueGenericCreateStatic+0x7a>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
900102b4:	2900      	cmp	r1, #0
900102b6:	bf08      	it	eq
900102b8:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
900102ba:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
900102bc:	2301      	movs	r3, #1
	pxNewQueue->uxLength = uxQueueLength;
900102be:	63e0      	str	r0, [r4, #60]	@ 0x3c
900102c0:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
900102c2:	6421      	str	r1, [r4, #64]	@ 0x40
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
900102c4:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
	taskENTER_CRITICAL();
900102c8:	f7ff fe1c 	bl	9000ff04 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900102cc:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
900102ce:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
900102d2:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900102d4:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
900102d8:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900102dc:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900102de:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900102e0:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900102e2:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
900102e4:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
900102e6:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900102e8:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
900102ea:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
900102ec:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
900102f0:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
900102f4:	f7ff fd4e 	bl	9000fd94 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
900102f8:	f104 0024 	add.w	r0, r4, #36	@ 0x24
900102fc:	f7ff fd4a 	bl	9000fd94 <vListInitialise>
	taskEXIT_CRITICAL();
90010300:	f7ff fe22 	bl	9000ff48 <vPortExitCritical>
	}
90010304:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
90010306:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
	}
9001030a:	b003      	add	sp, #12
9001030c:	bd30      	pop	{r4, r5, pc}
9001030e:	bf00      	nop

90010310 <xQueueGenericCreate>:
	{
90010310:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
90010312:	b940      	cbnz	r0, 90010326 <xQueueGenericCreate+0x16>
90010314:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010318:	f383 8811 	msr	BASEPRI, r3
9001031c:	f3bf 8f6f 	isb	sy
90010320:	f3bf 8f4f 	dsb	sy
90010324:	e7fe      	b.n	90010324 <xQueueGenericCreate+0x14>
90010326:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010328:	fb01 f000 	mul.w	r0, r1, r0
9001032c:	460e      	mov	r6, r1
9001032e:	4617      	mov	r7, r2
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
90010330:	3050      	adds	r0, #80	@ 0x50
90010332:	f7ff fc07 	bl	9000fb44 <pvPortMalloc>
		if( pxNewQueue != NULL )
90010336:	4604      	mov	r4, r0
90010338:	b340      	cbz	r0, 9001038c <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9001033a:	2300      	movs	r3, #0
9001033c:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
90010340:	b336      	cbz	r6, 90010390 <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010342:	f100 0350 	add.w	r3, r0, #80	@ 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
90010346:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
90010348:	e9c4 560f 	strd	r5, r6, [r4, #60]	@ 0x3c
	taskENTER_CRITICAL();
9001034c:	f7ff fdda 	bl	9000ff04 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010350:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010352:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
90010356:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010358:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
9001035c:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010360:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010362:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010364:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010366:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90010368:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9001036a:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001036c:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9001036e:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
90010370:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
90010374:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010378:	f7ff fd0c 	bl	9000fd94 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9001037c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
90010380:	f7ff fd08 	bl	9000fd94 <vListInitialise>
	taskEXIT_CRITICAL();
90010384:	f7ff fde0 	bl	9000ff48 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
90010388:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
9001038c:	4620      	mov	r0, r4
9001038e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
90010390:	4603      	mov	r3, r0
90010392:	e7d8      	b.n	90010346 <xQueueGenericCreate+0x36>

90010394 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
90010394:	b940      	cbnz	r0, 900103a8 <xQueueCreateCountingSemaphoreStatic+0x14>
90010396:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001039a:	f383 8811 	msr	BASEPRI, r3
9001039e:	f3bf 8f6f 	isb	sy
900103a2:	f3bf 8f4f 	dsb	sy
900103a6:	e7fe      	b.n	900103a6 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
900103a8:	4288      	cmp	r0, r1
900103aa:	d208      	bcs.n	900103be <xQueueCreateCountingSemaphoreStatic+0x2a>
900103ac:	f04f 0350 	mov.w	r3, #80	@ 0x50
900103b0:	f383 8811 	msr	BASEPRI, r3
900103b4:	f3bf 8f6f 	isb	sy
900103b8:	f3bf 8f4f 	dsb	sy
900103bc:	e7fe      	b.n	900103bc <xQueueCreateCountingSemaphoreStatic+0x28>
	{
900103be:	b530      	push	{r4, r5, lr}
900103c0:	4614      	mov	r4, r2
900103c2:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
900103c4:	2a00      	cmp	r2, #0
900103c6:	d03b      	beq.n	90010440 <xQueueCreateCountingSemaphoreStatic+0xac>
			volatile size_t xSize = sizeof( StaticQueue_t );
900103c8:	2350      	movs	r3, #80	@ 0x50
900103ca:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
900103cc:	9b03      	ldr	r3, [sp, #12]
900103ce:	2b50      	cmp	r3, #80	@ 0x50
900103d0:	d008      	beq.n	900103e4 <xQueueCreateCountingSemaphoreStatic+0x50>
900103d2:	f04f 0350 	mov.w	r3, #80	@ 0x50
900103d6:	f383 8811 	msr	BASEPRI, r3
900103da:	f3bf 8f6f 	isb	sy
900103de:	f3bf 8f4f 	dsb	sy
900103e2:	e7fe      	b.n	900103e2 <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
900103e4:	2500      	movs	r5, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
900103e6:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
900103e8:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxLength = uxQueueLength;
900103ea:	63d0      	str	r0, [r2, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
900103ec:	f882 3046 	strb.w	r3, [r2, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
900103f0:	6415      	str	r5, [r2, #64]	@ 0x40
900103f2:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
900103f4:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
900103f6:	f7ff fd85 	bl	9000ff04 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900103fa:	6822      	ldr	r2, [r4, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
900103fc:	63a5      	str	r5, [r4, #56]	@ 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
900103fe:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010400:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	@ 0x3c
90010404:	fb00 f303 	mul.w	r3, r0, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010408:	1a18      	subs	r0, r3, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001040a:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001040c:	4402      	add	r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001040e:	60a3      	str	r3, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
90010410:	23ff      	movs	r3, #255	@ 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010412:	f104 0010 	add.w	r0, r4, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010416:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
90010418:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9001041c:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010420:	f7ff fcb8 	bl	9000fd94 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
90010424:	f104 0024 	add.w	r0, r4, #36	@ 0x24
90010428:	f7ff fcb4 	bl	9000fd94 <vListInitialise>
	taskEXIT_CRITICAL();
9001042c:	f7ff fd8c 	bl	9000ff48 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
90010430:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
90010432:	9901      	ldr	r1, [sp, #4]
	}
90010434:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
90010436:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9001043a:	63a1      	str	r1, [r4, #56]	@ 0x38
	}
9001043c:	b005      	add	sp, #20
9001043e:	bd30      	pop	{r4, r5, pc}
90010440:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010444:	f383 8811 	msr	BASEPRI, r3
90010448:	f3bf 8f6f 	isb	sy
9001044c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
90010450:	e7fe      	b.n	90010450 <xQueueCreateCountingSemaphoreStatic+0xbc>
90010452:	bf00      	nop

90010454 <xQueueCreateCountingSemaphore>:
	{
90010454:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
90010456:	b940      	cbnz	r0, 9001046a <xQueueCreateCountingSemaphore+0x16>
90010458:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001045c:	f383 8811 	msr	BASEPRI, r3
90010460:	f3bf 8f6f 	isb	sy
90010464:	f3bf 8f4f 	dsb	sy
90010468:	e7fe      	b.n	90010468 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
9001046a:	4288      	cmp	r0, r1
9001046c:	4604      	mov	r4, r0
9001046e:	460e      	mov	r6, r1
90010470:	d208      	bcs.n	90010484 <xQueueCreateCountingSemaphore+0x30>
90010472:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010476:	f383 8811 	msr	BASEPRI, r3
9001047a:	f3bf 8f6f 	isb	sy
9001047e:	f3bf 8f4f 	dsb	sy
90010482:	e7fe      	b.n	90010482 <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
90010484:	2050      	movs	r0, #80	@ 0x50
90010486:	f7ff fb5d 	bl	9000fb44 <pvPortMalloc>
		if( pxNewQueue != NULL )
9001048a:	4605      	mov	r5, r0
9001048c:	b330      	cbz	r0, 900104dc <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9001048e:	2700      	movs	r7, #0
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
90010490:	6000      	str	r0, [r0, #0]
	pxNewQueue->uxLength = uxQueueLength;
90010492:	63c4      	str	r4, [r0, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
90010494:	f880 7046 	strb.w	r7, [r0, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
90010498:	6407      	str	r7, [r0, #64]	@ 0x40
	taskENTER_CRITICAL();
9001049a:	f7ff fd33 	bl	9000ff04 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001049e:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
900104a0:	63af      	str	r7, [r5, #56]	@ 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
900104a2:	f105 0010 	add.w	r0, r5, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
900104a6:	606a      	str	r2, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900104a8:	e9d5 310f 	ldrd	r3, r1, [r5, #60]	@ 0x3c
900104ac:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900104b0:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900104b2:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900104b4:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900104b6:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
900104b8:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900104ba:	60ea      	str	r2, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
900104bc:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
900104c0:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
900104c4:	f7ff fc66 	bl	9000fd94 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
900104c8:	f105 0024 	add.w	r0, r5, #36	@ 0x24
900104cc:	f7ff fc62 	bl	9000fd94 <vListInitialise>
	taskEXIT_CRITICAL();
900104d0:	f7ff fd3a 	bl	9000ff48 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
900104d4:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
900104d6:	63ae      	str	r6, [r5, #56]	@ 0x38
		pxNewQueue->ucQueueType = ucQueueType;
900104d8:	f885 304c 	strb.w	r3, [r5, #76]	@ 0x4c
	}
900104dc:	4628      	mov	r0, r5
900104de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

900104e0 <xQueueGenericSend>:
{
900104e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900104e4:	b084      	sub	sp, #16
900104e6:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
900104e8:	2800      	cmp	r0, #0
900104ea:	f000 8103 	beq.w	900106f4 <xQueueGenericSend+0x214>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
900104ee:	4688      	mov	r8, r1
900104f0:	4604      	mov	r4, r0
900104f2:	461f      	mov	r7, r3
900104f4:	2900      	cmp	r1, #0
900104f6:	f000 8097 	beq.w	90010628 <xQueueGenericSend+0x148>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
900104fa:	2f02      	cmp	r7, #2
900104fc:	d10b      	bne.n	90010516 <xQueueGenericSend+0x36>
900104fe:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
90010500:	2b01      	cmp	r3, #1
90010502:	d008      	beq.n	90010516 <xQueueGenericSend+0x36>
90010504:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010508:	f383 8811 	msr	BASEPRI, r3
9001050c:	f3bf 8f6f 	isb	sy
90010510:	f3bf 8f4f 	dsb	sy
90010514:	e7fe      	b.n	90010514 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90010516:	f001 fc9b 	bl	90011e50 <xTaskGetSchedulerState>
9001051a:	2800      	cmp	r0, #0
9001051c:	f000 80f3 	beq.w	90010706 <xQueueGenericSend+0x226>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
90010520:	f1a7 0902 	sub.w	r9, r7, #2
90010524:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010526:	f104 0624 	add.w	r6, r4, #36	@ 0x24
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9001052a:	fab9 f989 	clz	r9, r9
9001052e:	ea4f 1959 	mov.w	r9, r9, lsr #5
		taskENTER_CRITICAL();
90010532:	f7ff fce7 	bl	9000ff04 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
90010536:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
90010538:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9001053a:	429a      	cmp	r2, r3
9001053c:	f0c0 80f0 	bcc.w	90010720 <xQueueGenericSend+0x240>
90010540:	f1b9 0f00 	cmp.w	r9, #0
90010544:	f040 80ec 	bne.w	90010720 <xQueueGenericSend+0x240>
				if( xTicksToWait == ( TickType_t ) 0 )
90010548:	9b01      	ldr	r3, [sp, #4]
9001054a:	2b00      	cmp	r3, #0
9001054c:	f000 8101 	beq.w	90010752 <xQueueGenericSend+0x272>
				else if( xEntryTimeSet == pdFALSE )
90010550:	2d00      	cmp	r5, #0
90010552:	f000 80cb 	beq.w	900106ec <xQueueGenericSend+0x20c>
		taskEXIT_CRITICAL();
90010556:	f7ff fcf7 	bl	9000ff48 <vPortExitCritical>
		vTaskSuspendAll();
9001055a:	f001 faaf 	bl	90011abc <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9001055e:	f7ff fcd1 	bl	9000ff04 <vPortEnterCritical>
90010562:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010566:	2bff      	cmp	r3, #255	@ 0xff
90010568:	d102      	bne.n	90010570 <xQueueGenericSend+0x90>
9001056a:	2300      	movs	r3, #0
9001056c:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
90010570:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010574:	2bff      	cmp	r3, #255	@ 0xff
90010576:	d102      	bne.n	9001057e <xQueueGenericSend+0x9e>
90010578:	2300      	movs	r3, #0
9001057a:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
9001057e:	f7ff fce3 	bl	9000ff48 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
90010582:	a901      	add	r1, sp, #4
90010584:	a802      	add	r0, sp, #8
90010586:	f001 fc1b 	bl	90011dc0 <xTaskCheckForTimeOut>
9001058a:	2800      	cmp	r0, #0
9001058c:	f040 80e5 	bne.w	9001075a <xQueueGenericSend+0x27a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
90010590:	f7ff fcb8 	bl	9000ff04 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
90010594:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
90010596:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
90010598:	429a      	cmp	r2, r3
9001059a:	d052      	beq.n	90010642 <xQueueGenericSend+0x162>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
9001059c:	f7ff fcd4 	bl	9000ff48 <vPortExitCritical>
	taskENTER_CRITICAL();
900105a0:	f7ff fcb0 	bl	9000ff04 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
900105a4:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
900105a8:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
900105aa:	2d00      	cmp	r5, #0
900105ac:	dc04      	bgt.n	900105b8 <xQueueGenericSend+0xd8>
900105ae:	e011      	b.n	900105d4 <xQueueGenericSend+0xf4>
			--cTxLock;
900105b0:	1e6a      	subs	r2, r5, #1
900105b2:	b2d3      	uxtb	r3, r2
900105b4:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
900105b6:	b16b      	cbz	r3, 900105d4 <xQueueGenericSend+0xf4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900105b8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900105ba:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900105bc:	b153      	cbz	r3, 900105d4 <xQueueGenericSend+0xf4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900105be:	f001 fbad 	bl	90011d1c <xTaskRemoveFromEventList>
900105c2:	2800      	cmp	r0, #0
900105c4:	d0f4      	beq.n	900105b0 <xQueueGenericSend+0xd0>
						vTaskMissedYield();
900105c6:	f001 fc3d 	bl	90011e44 <vTaskMissedYield>
			--cTxLock;
900105ca:	1e6a      	subs	r2, r5, #1
900105cc:	b2d3      	uxtb	r3, r2
900105ce:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
900105d0:	2b00      	cmp	r3, #0
900105d2:	d1f1      	bne.n	900105b8 <xQueueGenericSend+0xd8>
		pxQueue->cTxLock = queueUNLOCKED;
900105d4:	23ff      	movs	r3, #255	@ 0xff
900105d6:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
900105da:	f7ff fcb5 	bl	9000ff48 <vPortExitCritical>
	taskENTER_CRITICAL();
900105de:	f7ff fc91 	bl	9000ff04 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
900105e2:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
900105e6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
900105e8:	2d00      	cmp	r5, #0
900105ea:	dd14      	ble.n	90010616 <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900105ec:	f104 0a10 	add.w	sl, r4, #16
900105f0:	e003      	b.n	900105fa <xQueueGenericSend+0x11a>
				--cRxLock;
900105f2:	1e6a      	subs	r2, r5, #1
900105f4:	b2d3      	uxtb	r3, r2
900105f6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
900105f8:	b16b      	cbz	r3, 90010616 <xQueueGenericSend+0x136>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900105fa:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900105fc:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900105fe:	b153      	cbz	r3, 90010616 <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010600:	f001 fb8c 	bl	90011d1c <xTaskRemoveFromEventList>
90010604:	2800      	cmp	r0, #0
90010606:	d0f4      	beq.n	900105f2 <xQueueGenericSend+0x112>
					vTaskMissedYield();
90010608:	f001 fc1c 	bl	90011e44 <vTaskMissedYield>
				--cRxLock;
9001060c:	1e6a      	subs	r2, r5, #1
9001060e:	b2d3      	uxtb	r3, r2
90010610:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010612:	2b00      	cmp	r3, #0
90010614:	d1f1      	bne.n	900105fa <xQueueGenericSend+0x11a>
		pxQueue->cRxLock = queueUNLOCKED;
90010616:	23ff      	movs	r3, #255	@ 0xff
90010618:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9001061c:	f7ff fc94 	bl	9000ff48 <vPortExitCritical>
				( void ) xTaskResumeAll();
90010620:	f001 fa54 	bl	90011acc <xTaskResumeAll>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
90010624:	2501      	movs	r5, #1
90010626:	e784      	b.n	90010532 <xQueueGenericSend+0x52>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
90010628:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9001062a:	2b00      	cmp	r3, #0
9001062c:	f43f af65 	beq.w	900104fa <xQueueGenericSend+0x1a>
90010630:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010634:	f383 8811 	msr	BASEPRI, r3
90010638:	f3bf 8f6f 	isb	sy
9001063c:	f3bf 8f4f 	dsb	sy
90010640:	e7fe      	b.n	90010640 <xQueueGenericSend+0x160>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
90010642:	f104 0a10 	add.w	sl, r4, #16
	taskEXIT_CRITICAL();
90010646:	f7ff fc7f 	bl	9000ff48 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9001064a:	9901      	ldr	r1, [sp, #4]
9001064c:	4650      	mov	r0, sl
9001064e:	f001 fad7 	bl	90011c00 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
90010652:	f7ff fc57 	bl	9000ff04 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010656:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9001065a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9001065c:	2d00      	cmp	r5, #0
9001065e:	dc04      	bgt.n	9001066a <xQueueGenericSend+0x18a>
90010660:	e011      	b.n	90010686 <xQueueGenericSend+0x1a6>
			--cTxLock;
90010662:	1e6b      	subs	r3, r5, #1
90010664:	b2da      	uxtb	r2, r3
90010666:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010668:	b16a      	cbz	r2, 90010686 <xQueueGenericSend+0x1a6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001066a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001066c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001066e:	b153      	cbz	r3, 90010686 <xQueueGenericSend+0x1a6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010670:	f001 fb54 	bl	90011d1c <xTaskRemoveFromEventList>
90010674:	2800      	cmp	r0, #0
90010676:	d0f4      	beq.n	90010662 <xQueueGenericSend+0x182>
						vTaskMissedYield();
90010678:	f001 fbe4 	bl	90011e44 <vTaskMissedYield>
			--cTxLock;
9001067c:	1e6b      	subs	r3, r5, #1
9001067e:	b2da      	uxtb	r2, r3
90010680:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010682:	2a00      	cmp	r2, #0
90010684:	d1f1      	bne.n	9001066a <xQueueGenericSend+0x18a>
		pxQueue->cTxLock = queueUNLOCKED;
90010686:	23ff      	movs	r3, #255	@ 0xff
90010688:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9001068c:	f7ff fc5c 	bl	9000ff48 <vPortExitCritical>
	taskENTER_CRITICAL();
90010690:	f7ff fc38 	bl	9000ff04 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010694:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010698:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001069a:	2d00      	cmp	r5, #0
9001069c:	dc04      	bgt.n	900106a8 <xQueueGenericSend+0x1c8>
9001069e:	e011      	b.n	900106c4 <xQueueGenericSend+0x1e4>
				--cRxLock;
900106a0:	1e6b      	subs	r3, r5, #1
900106a2:	b2da      	uxtb	r2, r3
900106a4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900106a6:	b16a      	cbz	r2, 900106c4 <xQueueGenericSend+0x1e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900106a8:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900106aa:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900106ac:	b153      	cbz	r3, 900106c4 <xQueueGenericSend+0x1e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900106ae:	f001 fb35 	bl	90011d1c <xTaskRemoveFromEventList>
900106b2:	2800      	cmp	r0, #0
900106b4:	d0f4      	beq.n	900106a0 <xQueueGenericSend+0x1c0>
					vTaskMissedYield();
900106b6:	f001 fbc5 	bl	90011e44 <vTaskMissedYield>
				--cRxLock;
900106ba:	1e6b      	subs	r3, r5, #1
900106bc:	b2da      	uxtb	r2, r3
900106be:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900106c0:	2a00      	cmp	r2, #0
900106c2:	d1f1      	bne.n	900106a8 <xQueueGenericSend+0x1c8>
		pxQueue->cRxLock = queueUNLOCKED;
900106c4:	23ff      	movs	r3, #255	@ 0xff
900106c6:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
900106ca:	f7ff fc3d 	bl	9000ff48 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
900106ce:	f001 f9fd 	bl	90011acc <xTaskResumeAll>
900106d2:	2800      	cmp	r0, #0
900106d4:	d1a6      	bne.n	90010624 <xQueueGenericSend+0x144>
					portYIELD_WITHIN_API();
900106d6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
900106da:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
900106de:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
900106e2:	f3bf 8f4f 	dsb	sy
900106e6:	f3bf 8f6f 	isb	sy
900106ea:	e79b      	b.n	90010624 <xQueueGenericSend+0x144>
					vTaskInternalSetTimeOutState( &xTimeOut );
900106ec:	a802      	add	r0, sp, #8
900106ee:	f001 fb5b 	bl	90011da8 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
900106f2:	e730      	b.n	90010556 <xQueueGenericSend+0x76>
900106f4:	f04f 0350 	mov.w	r3, #80	@ 0x50
900106f8:	f383 8811 	msr	BASEPRI, r3
900106fc:	f3bf 8f6f 	isb	sy
90010700:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90010704:	e7fe      	b.n	90010704 <xQueueGenericSend+0x224>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90010706:	9b01      	ldr	r3, [sp, #4]
90010708:	2b00      	cmp	r3, #0
9001070a:	f43f af09 	beq.w	90010520 <xQueueGenericSend+0x40>
9001070e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010712:	f383 8811 	msr	BASEPRI, r3
90010716:	f3bf 8f6f 	isb	sy
9001071a:	f3bf 8f4f 	dsb	sy
9001071e:	e7fe      	b.n	9001071e <xQueueGenericSend+0x23e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
90010720:	463a      	mov	r2, r7
90010722:	4641      	mov	r1, r8
90010724:	4620      	mov	r0, r4
90010726:	f7ff fd4d 	bl	900101c4 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001072a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9001072c:	2b00      	cmp	r3, #0
9001072e:	d151      	bne.n	900107d4 <xQueueGenericSend+0x2f4>
					else if( xYieldRequired != pdFALSE )
90010730:	b148      	cbz	r0, 90010746 <xQueueGenericSend+0x266>
						queueYIELD_IF_USING_PREEMPTION();
90010732:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90010736:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9001073a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9001073e:	f3bf 8f4f 	dsb	sy
90010742:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
90010746:	f7ff fbff 	bl	9000ff48 <vPortExitCritical>
				return pdPASS;
9001074a:	2001      	movs	r0, #1
}
9001074c:	b004      	add	sp, #16
9001074e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					taskEXIT_CRITICAL();
90010752:	f7ff fbf9 	bl	9000ff48 <vPortExitCritical>
					return errQUEUE_FULL;
90010756:	2000      	movs	r0, #0
90010758:	e7f8      	b.n	9001074c <xQueueGenericSend+0x26c>
	taskENTER_CRITICAL();
9001075a:	f7ff fbd3 	bl	9000ff04 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9001075e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010762:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010764:	2d00      	cmp	r5, #0
90010766:	dd10      	ble.n	9001078a <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010768:	f104 0624 	add.w	r6, r4, #36	@ 0x24
9001076c:	e003      	b.n	90010776 <xQueueGenericSend+0x296>
			--cTxLock;
9001076e:	1e6b      	subs	r3, r5, #1
90010770:	b2da      	uxtb	r2, r3
90010772:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010774:	b14a      	cbz	r2, 9001078a <xQueueGenericSend+0x2aa>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010776:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010778:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001077a:	b133      	cbz	r3, 9001078a <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001077c:	f001 face 	bl	90011d1c <xTaskRemoveFromEventList>
90010780:	2800      	cmp	r0, #0
90010782:	d0f4      	beq.n	9001076e <xQueueGenericSend+0x28e>
						vTaskMissedYield();
90010784:	f001 fb5e 	bl	90011e44 <vTaskMissedYield>
90010788:	e7f1      	b.n	9001076e <xQueueGenericSend+0x28e>
		pxQueue->cTxLock = queueUNLOCKED;
9001078a:	23ff      	movs	r3, #255	@ 0xff
9001078c:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
90010790:	f7ff fbda 	bl	9000ff48 <vPortExitCritical>
	taskENTER_CRITICAL();
90010794:	f7ff fbb6 	bl	9000ff04 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010798:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9001079c:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001079e:	2d00      	cmp	r5, #0
900107a0:	dd10      	ble.n	900107c4 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900107a2:	f104 0610 	add.w	r6, r4, #16
900107a6:	e003      	b.n	900107b0 <xQueueGenericSend+0x2d0>
				--cRxLock;
900107a8:	1e6b      	subs	r3, r5, #1
900107aa:	b2da      	uxtb	r2, r3
900107ac:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900107ae:	b14a      	cbz	r2, 900107c4 <xQueueGenericSend+0x2e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900107b0:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900107b2:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900107b4:	b133      	cbz	r3, 900107c4 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900107b6:	f001 fab1 	bl	90011d1c <xTaskRemoveFromEventList>
900107ba:	2800      	cmp	r0, #0
900107bc:	d0f4      	beq.n	900107a8 <xQueueGenericSend+0x2c8>
					vTaskMissedYield();
900107be:	f001 fb41 	bl	90011e44 <vTaskMissedYield>
900107c2:	e7f1      	b.n	900107a8 <xQueueGenericSend+0x2c8>
		pxQueue->cRxLock = queueUNLOCKED;
900107c4:	23ff      	movs	r3, #255	@ 0xff
900107c6:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
900107ca:	f7ff fbbd 	bl	9000ff48 <vPortExitCritical>
			( void ) xTaskResumeAll();
900107ce:	f001 f97d 	bl	90011acc <xTaskResumeAll>
			return errQUEUE_FULL;
900107d2:	e7c0      	b.n	90010756 <xQueueGenericSend+0x276>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900107d4:	f104 0024 	add.w	r0, r4, #36	@ 0x24
900107d8:	f001 faa0 	bl	90011d1c <xTaskRemoveFromEventList>
900107dc:	2800      	cmp	r0, #0
900107de:	d0b2      	beq.n	90010746 <xQueueGenericSend+0x266>
900107e0:	e7a7      	b.n	90010732 <xQueueGenericSend+0x252>
900107e2:	bf00      	nop

900107e4 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
900107e4:	2800      	cmp	r0, #0
900107e6:	d04b      	beq.n	90010880 <xQueueGenericSendFromISR+0x9c>
{
900107e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900107ec:	460e      	mov	r6, r1
900107ee:	4604      	mov	r4, r0
900107f0:	4617      	mov	r7, r2
900107f2:	461d      	mov	r5, r3
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
900107f4:	b339      	cbz	r1, 90010846 <xQueueGenericSendFromISR+0x62>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
900107f6:	2d02      	cmp	r5, #2
900107f8:	d10b      	bne.n	90010812 <xQueueGenericSendFromISR+0x2e>
900107fa:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
900107fc:	2b01      	cmp	r3, #1
900107fe:	d008      	beq.n	90010812 <xQueueGenericSendFromISR+0x2e>
90010800:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010804:	f383 8811 	msr	BASEPRI, r3
90010808:	f3bf 8f6f 	isb	sy
9001080c:	f3bf 8f4f 	dsb	sy
90010810:	e7fe      	b.n	90010810 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
90010812:	f7ff fca9 	bl	90010168 <vPortValidateInterruptPriority>
	__asm volatile
90010816:	f3ef 8811 	mrs	r8, BASEPRI
9001081a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001081e:	f383 8811 	msr	BASEPRI, r3
90010822:	f3bf 8f6f 	isb	sy
90010826:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9001082a:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9001082c:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9001082e:	429a      	cmp	r2, r3
90010830:	d315      	bcc.n	9001085e <xQueueGenericSendFromISR+0x7a>
90010832:	f1a5 0002 	sub.w	r0, r5, #2
90010836:	fab0 f080 	clz	r0, r0
9001083a:	0940      	lsrs	r0, r0, #5
9001083c:	b978      	cbnz	r0, 9001085e <xQueueGenericSendFromISR+0x7a>
	__asm volatile
9001083e:	f388 8811 	msr	BASEPRI, r8
}
90010842:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
90010846:	6c03      	ldr	r3, [r0, #64]	@ 0x40
90010848:	2b00      	cmp	r3, #0
9001084a:	d0d4      	beq.n	900107f6 <xQueueGenericSendFromISR+0x12>
	__asm volatile
9001084c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010850:	f383 8811 	msr	BASEPRI, r3
90010854:	f3bf 8f6f 	isb	sy
90010858:	f3bf 8f4f 	dsb	sy
9001085c:	e7fe      	b.n	9001085c <xQueueGenericSendFromISR+0x78>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9001085e:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
90010860:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
90010864:	4631      	mov	r1, r6
90010866:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
90010868:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
9001086a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9001086c:	f7ff fcaa 	bl	900101c4 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
90010870:	1c6b      	adds	r3, r5, #1
90010872:	d00e      	beq.n	90010892 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
90010874:	1c6b      	adds	r3, r5, #1
90010876:	b25b      	sxtb	r3, r3
90010878:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
9001087c:	2001      	movs	r0, #1
9001087e:	e7de      	b.n	9001083e <xQueueGenericSendFromISR+0x5a>
90010880:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010884:	f383 8811 	msr	BASEPRI, r3
90010888:	f3bf 8f6f 	isb	sy
9001088c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90010890:	e7fe      	b.n	90010890 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010892:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90010894:	2b00      	cmp	r3, #0
90010896:	d0f1      	beq.n	9001087c <xQueueGenericSendFromISR+0x98>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010898:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9001089c:	f001 fa3e 	bl	90011d1c <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
900108a0:	2f00      	cmp	r7, #0
900108a2:	d0eb      	beq.n	9001087c <xQueueGenericSendFromISR+0x98>
900108a4:	2800      	cmp	r0, #0
900108a6:	d0e9      	beq.n	9001087c <xQueueGenericSendFromISR+0x98>
								*pxHigherPriorityTaskWoken = pdTRUE;
900108a8:	2301      	movs	r3, #1
900108aa:	603b      	str	r3, [r7, #0]
900108ac:	e7e6      	b.n	9001087c <xQueueGenericSendFromISR+0x98>
900108ae:	bf00      	nop

900108b0 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
900108b0:	b360      	cbz	r0, 9001090c <xQueueGiveFromISR+0x5c>
	configASSERT( pxQueue->uxItemSize == 0 );
900108b2:	6c03      	ldr	r3, [r0, #64]	@ 0x40
{
900108b4:	b570      	push	{r4, r5, r6, lr}
900108b6:	4604      	mov	r4, r0
	configASSERT( pxQueue->uxItemSize == 0 );
900108b8:	b143      	cbz	r3, 900108cc <xQueueGiveFromISR+0x1c>
900108ba:	f04f 0350 	mov.w	r3, #80	@ 0x50
900108be:	f383 8811 	msr	BASEPRI, r3
900108c2:	f3bf 8f6f 	isb	sy
900108c6:	f3bf 8f4f 	dsb	sy
900108ca:	e7fe      	b.n	900108ca <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
900108cc:	6803      	ldr	r3, [r0, #0]
900108ce:	460d      	mov	r5, r1
900108d0:	b32b      	cbz	r3, 9001091e <xQueueGiveFromISR+0x6e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
900108d2:	f7ff fc49 	bl	90010168 <vPortValidateInterruptPriority>
	__asm volatile
900108d6:	f3ef 8611 	mrs	r6, BASEPRI
900108da:	f04f 0350 	mov.w	r3, #80	@ 0x50
900108de:	f383 8811 	msr	BASEPRI, r3
900108e2:	f3bf 8f6f 	isb	sy
900108e6:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
900108ea:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
900108ec:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
900108ee:	429a      	cmp	r2, r3
900108f0:	d921      	bls.n	90010936 <xQueueGiveFromISR+0x86>
			const int8_t cTxLock = pxQueue->cTxLock;
900108f2:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900108f6:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
900108f8:	2aff      	cmp	r2, #255	@ 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900108fa:	63a3      	str	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
900108fc:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
900108fe:	d01e      	beq.n	9001093e <xQueueGiveFromISR+0x8e>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
90010900:	3301      	adds	r3, #1
90010902:	b25b      	sxtb	r3, r3
90010904:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
90010908:	2001      	movs	r0, #1
9001090a:	e015      	b.n	90010938 <xQueueGiveFromISR+0x88>
	__asm volatile
9001090c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010910:	f383 8811 	msr	BASEPRI, r3
90010914:	f3bf 8f6f 	isb	sy
90010918:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9001091c:	e7fe      	b.n	9001091c <xQueueGiveFromISR+0x6c>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9001091e:	6883      	ldr	r3, [r0, #8]
90010920:	2b00      	cmp	r3, #0
90010922:	d0d6      	beq.n	900108d2 <xQueueGiveFromISR+0x22>
90010924:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010928:	f383 8811 	msr	BASEPRI, r3
9001092c:	f3bf 8f6f 	isb	sy
90010930:	f3bf 8f4f 	dsb	sy
90010934:	e7fe      	b.n	90010934 <xQueueGiveFromISR+0x84>
			xReturn = errQUEUE_FULL;
90010936:	2000      	movs	r0, #0
	__asm volatile
90010938:	f386 8811 	msr	BASEPRI, r6
}
9001093c:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001093e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90010940:	2b00      	cmp	r3, #0
90010942:	d0e1      	beq.n	90010908 <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010944:	f104 0024 	add.w	r0, r4, #36	@ 0x24
90010948:	f001 f9e8 	bl	90011d1c <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9001094c:	2d00      	cmp	r5, #0
9001094e:	d0db      	beq.n	90010908 <xQueueGiveFromISR+0x58>
90010950:	2800      	cmp	r0, #0
90010952:	d0d9      	beq.n	90010908 <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
90010954:	2301      	movs	r3, #1
90010956:	602b      	str	r3, [r5, #0]
90010958:	e7d6      	b.n	90010908 <xQueueGiveFromISR+0x58>
9001095a:	bf00      	nop

9001095c <xQueueReceive>:
{
9001095c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010960:	b085      	sub	sp, #20
90010962:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
90010964:	2800      	cmp	r0, #0
90010966:	f000 8147 	beq.w	90010bf8 <xQueueReceive+0x29c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9001096a:	460f      	mov	r7, r1
9001096c:	4604      	mov	r4, r0
9001096e:	2900      	cmp	r1, #0
90010970:	d07b      	beq.n	90010a6a <xQueueReceive+0x10e>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90010972:	f001 fa6d 	bl	90011e50 <xTaskGetSchedulerState>
90010976:	2800      	cmp	r0, #0
90010978:	f000 8083 	beq.w	90010a82 <xQueueReceive+0x126>
		taskENTER_CRITICAL();
9001097c:	f7ff fac2 	bl	9000ff04 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90010980:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90010982:	2d00      	cmp	r5, #0
90010984:	f040 8141 	bne.w	90010c0a <xQueueReceive+0x2ae>
				if( xTicksToWait == ( TickType_t ) 0 )
90010988:	9b01      	ldr	r3, [sp, #4]
9001098a:	2b00      	cmp	r3, #0
9001098c:	f000 80d7 	beq.w	90010b3e <xQueueReceive+0x1e2>
		prvLockQueue( pxQueue );
90010990:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010992:	f104 0624 	add.w	r6, r4, #36	@ 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
90010996:	a802      	add	r0, sp, #8
90010998:	f001 fa06 	bl	90011da8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
9001099c:	f7ff fad4 	bl	9000ff48 <vPortExitCritical>
		vTaskSuspendAll();
900109a0:	f001 f88c 	bl	90011abc <vTaskSuspendAll>
		prvLockQueue( pxQueue );
900109a4:	f7ff faae 	bl	9000ff04 <vPortEnterCritical>
900109a8:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
900109ac:	2bff      	cmp	r3, #255	@ 0xff
900109ae:	d101      	bne.n	900109b4 <xQueueReceive+0x58>
900109b0:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
900109b4:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
900109b8:	2bff      	cmp	r3, #255	@ 0xff
900109ba:	d101      	bne.n	900109c0 <xQueueReceive+0x64>
900109bc:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
900109c0:	f7ff fac2 	bl	9000ff48 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
900109c4:	a901      	add	r1, sp, #4
900109c6:	a802      	add	r0, sp, #8
900109c8:	f001 f9fa 	bl	90011dc0 <xTaskCheckForTimeOut>
900109cc:	2800      	cmp	r0, #0
900109ce:	d165      	bne.n	90010a9c <xQueueReceive+0x140>
	taskENTER_CRITICAL();
900109d0:	f7ff fa98 	bl	9000ff04 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
900109d4:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
900109d6:	2b00      	cmp	r3, #0
900109d8:	f000 80b7 	beq.w	90010b4a <xQueueReceive+0x1ee>
	taskEXIT_CRITICAL();
900109dc:	f7ff fab4 	bl	9000ff48 <vPortExitCritical>
	taskENTER_CRITICAL();
900109e0:	f7ff fa90 	bl	9000ff04 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
900109e4:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
900109e8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900109ea:	2d00      	cmp	r5, #0
900109ec:	dd14      	ble.n	90010a18 <xQueueReceive+0xbc>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900109ee:	f104 0924 	add.w	r9, r4, #36	@ 0x24
900109f2:	e003      	b.n	900109fc <xQueueReceive+0xa0>
			--cTxLock;
900109f4:	1e6b      	subs	r3, r5, #1
900109f6:	b2da      	uxtb	r2, r3
900109f8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900109fa:	b16a      	cbz	r2, 90010a18 <xQueueReceive+0xbc>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900109fc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900109fe:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010a00:	b153      	cbz	r3, 90010a18 <xQueueReceive+0xbc>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010a02:	f001 f98b 	bl	90011d1c <xTaskRemoveFromEventList>
90010a06:	2800      	cmp	r0, #0
90010a08:	d0f4      	beq.n	900109f4 <xQueueReceive+0x98>
						vTaskMissedYield();
90010a0a:	f001 fa1b 	bl	90011e44 <vTaskMissedYield>
			--cTxLock;
90010a0e:	1e6b      	subs	r3, r5, #1
90010a10:	b2da      	uxtb	r2, r3
90010a12:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010a14:	2a00      	cmp	r2, #0
90010a16:	d1f1      	bne.n	900109fc <xQueueReceive+0xa0>
		pxQueue->cTxLock = queueUNLOCKED;
90010a18:	23ff      	movs	r3, #255	@ 0xff
90010a1a:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
90010a1e:	f7ff fa93 	bl	9000ff48 <vPortExitCritical>
	taskENTER_CRITICAL();
90010a22:	f7ff fa6f 	bl	9000ff04 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010a26:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010a2a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010a2c:	2d00      	cmp	r5, #0
90010a2e:	dd14      	ble.n	90010a5a <xQueueReceive+0xfe>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010a30:	f104 0910 	add.w	r9, r4, #16
90010a34:	e003      	b.n	90010a3e <xQueueReceive+0xe2>
				--cRxLock;
90010a36:	1e6b      	subs	r3, r5, #1
90010a38:	b2da      	uxtb	r2, r3
90010a3a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010a3c:	b16a      	cbz	r2, 90010a5a <xQueueReceive+0xfe>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010a3e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010a40:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010a42:	b153      	cbz	r3, 90010a5a <xQueueReceive+0xfe>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010a44:	f001 f96a 	bl	90011d1c <xTaskRemoveFromEventList>
90010a48:	2800      	cmp	r0, #0
90010a4a:	d0f4      	beq.n	90010a36 <xQueueReceive+0xda>
					vTaskMissedYield();
90010a4c:	f001 f9fa 	bl	90011e44 <vTaskMissedYield>
				--cRxLock;
90010a50:	1e6b      	subs	r3, r5, #1
90010a52:	b2da      	uxtb	r2, r3
90010a54:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010a56:	2a00      	cmp	r2, #0
90010a58:	d1f1      	bne.n	90010a3e <xQueueReceive+0xe2>
		pxQueue->cRxLock = queueUNLOCKED;
90010a5a:	23ff      	movs	r3, #255	@ 0xff
90010a5c:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
90010a60:	f7ff fa72 	bl	9000ff48 <vPortExitCritical>
				( void ) xTaskResumeAll();
90010a64:	f001 f832 	bl	90011acc <xTaskResumeAll>
90010a68:	e060      	b.n	90010b2c <xQueueReceive+0x1d0>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
90010a6a:	6c03      	ldr	r3, [r0, #64]	@ 0x40
90010a6c:	2b00      	cmp	r3, #0
90010a6e:	d080      	beq.n	90010972 <xQueueReceive+0x16>
	__asm volatile
90010a70:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010a74:	f383 8811 	msr	BASEPRI, r3
90010a78:	f3bf 8f6f 	isb	sy
90010a7c:	f3bf 8f4f 	dsb	sy
90010a80:	e7fe      	b.n	90010a80 <xQueueReceive+0x124>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90010a82:	9b01      	ldr	r3, [sp, #4]
90010a84:	2b00      	cmp	r3, #0
90010a86:	f43f af79 	beq.w	9001097c <xQueueReceive+0x20>
90010a8a:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010a8e:	f383 8811 	msr	BASEPRI, r3
90010a92:	f3bf 8f6f 	isb	sy
90010a96:	f3bf 8f4f 	dsb	sy
90010a9a:	e7fe      	b.n	90010a9a <xQueueReceive+0x13e>
	taskENTER_CRITICAL();
90010a9c:	f7ff fa32 	bl	9000ff04 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010aa0:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010aa4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010aa6:	2d00      	cmp	r5, #0
90010aa8:	dc04      	bgt.n	90010ab4 <xQueueReceive+0x158>
90010aaa:	e011      	b.n	90010ad0 <xQueueReceive+0x174>
			--cTxLock;
90010aac:	1e6b      	subs	r3, r5, #1
90010aae:	b2da      	uxtb	r2, r3
90010ab0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010ab2:	b16a      	cbz	r2, 90010ad0 <xQueueReceive+0x174>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010ab4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010ab6:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010ab8:	b153      	cbz	r3, 90010ad0 <xQueueReceive+0x174>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010aba:	f001 f92f 	bl	90011d1c <xTaskRemoveFromEventList>
90010abe:	2800      	cmp	r0, #0
90010ac0:	d0f4      	beq.n	90010aac <xQueueReceive+0x150>
						vTaskMissedYield();
90010ac2:	f001 f9bf 	bl	90011e44 <vTaskMissedYield>
			--cTxLock;
90010ac6:	1e6b      	subs	r3, r5, #1
90010ac8:	b2da      	uxtb	r2, r3
90010aca:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010acc:	2a00      	cmp	r2, #0
90010ace:	d1f1      	bne.n	90010ab4 <xQueueReceive+0x158>
		pxQueue->cTxLock = queueUNLOCKED;
90010ad0:	23ff      	movs	r3, #255	@ 0xff
90010ad2:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
90010ad6:	f7ff fa37 	bl	9000ff48 <vPortExitCritical>
	taskENTER_CRITICAL();
90010ada:	f7ff fa13 	bl	9000ff04 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010ade:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010ae2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010ae4:	2d00      	cmp	r5, #0
90010ae6:	dd14      	ble.n	90010b12 <xQueueReceive+0x1b6>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010ae8:	f104 0910 	add.w	r9, r4, #16
90010aec:	e003      	b.n	90010af6 <xQueueReceive+0x19a>
				--cRxLock;
90010aee:	1e6b      	subs	r3, r5, #1
90010af0:	b2da      	uxtb	r2, r3
90010af2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010af4:	b16a      	cbz	r2, 90010b12 <xQueueReceive+0x1b6>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010af6:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010af8:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010afa:	b153      	cbz	r3, 90010b12 <xQueueReceive+0x1b6>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010afc:	f001 f90e 	bl	90011d1c <xTaskRemoveFromEventList>
90010b00:	2800      	cmp	r0, #0
90010b02:	d0f4      	beq.n	90010aee <xQueueReceive+0x192>
					vTaskMissedYield();
90010b04:	f001 f99e 	bl	90011e44 <vTaskMissedYield>
				--cRxLock;
90010b08:	1e6b      	subs	r3, r5, #1
90010b0a:	b2da      	uxtb	r2, r3
90010b0c:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010b0e:	2a00      	cmp	r2, #0
90010b10:	d1f1      	bne.n	90010af6 <xQueueReceive+0x19a>
		pxQueue->cRxLock = queueUNLOCKED;
90010b12:	23ff      	movs	r3, #255	@ 0xff
90010b14:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
90010b18:	f7ff fa16 	bl	9000ff48 <vPortExitCritical>
			( void ) xTaskResumeAll();
90010b1c:	f000 ffd6 	bl	90011acc <xTaskResumeAll>
	taskENTER_CRITICAL();
90010b20:	f7ff f9f0 	bl	9000ff04 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90010b24:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90010b26:	b153      	cbz	r3, 90010b3e <xQueueReceive+0x1e2>
	taskEXIT_CRITICAL();
90010b28:	f7ff fa0e 	bl	9000ff48 <vPortExitCritical>
		taskENTER_CRITICAL();
90010b2c:	f7ff f9ea 	bl	9000ff04 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90010b30:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90010b32:	2d00      	cmp	r5, #0
90010b34:	d169      	bne.n	90010c0a <xQueueReceive+0x2ae>
				if( xTicksToWait == ( TickType_t ) 0 )
90010b36:	9b01      	ldr	r3, [sp, #4]
90010b38:	2b00      	cmp	r3, #0
90010b3a:	f47f af2f 	bne.w	9001099c <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
90010b3e:	f7ff fa03 	bl	9000ff48 <vPortExitCritical>
					return errQUEUE_EMPTY;
90010b42:	2000      	movs	r0, #0
}
90010b44:	b005      	add	sp, #20
90010b46:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
90010b4a:	f104 0924 	add.w	r9, r4, #36	@ 0x24
	taskEXIT_CRITICAL();
90010b4e:	f7ff f9fb 	bl	9000ff48 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
90010b52:	9901      	ldr	r1, [sp, #4]
90010b54:	4648      	mov	r0, r9
90010b56:	f001 f853 	bl	90011c00 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
90010b5a:	f7ff f9d3 	bl	9000ff04 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010b5e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010b62:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010b64:	2d00      	cmp	r5, #0
90010b66:	dc04      	bgt.n	90010b72 <xQueueReceive+0x216>
90010b68:	e011      	b.n	90010b8e <xQueueReceive+0x232>
			--cTxLock;
90010b6a:	1e6b      	subs	r3, r5, #1
90010b6c:	b2da      	uxtb	r2, r3
90010b6e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010b70:	b16a      	cbz	r2, 90010b8e <xQueueReceive+0x232>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010b72:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010b74:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010b76:	b153      	cbz	r3, 90010b8e <xQueueReceive+0x232>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010b78:	f001 f8d0 	bl	90011d1c <xTaskRemoveFromEventList>
90010b7c:	2800      	cmp	r0, #0
90010b7e:	d0f4      	beq.n	90010b6a <xQueueReceive+0x20e>
						vTaskMissedYield();
90010b80:	f001 f960 	bl	90011e44 <vTaskMissedYield>
			--cTxLock;
90010b84:	1e6b      	subs	r3, r5, #1
90010b86:	b2da      	uxtb	r2, r3
90010b88:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010b8a:	2a00      	cmp	r2, #0
90010b8c:	d1f1      	bne.n	90010b72 <xQueueReceive+0x216>
		pxQueue->cTxLock = queueUNLOCKED;
90010b8e:	23ff      	movs	r3, #255	@ 0xff
90010b90:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
90010b94:	f7ff f9d8 	bl	9000ff48 <vPortExitCritical>
	taskENTER_CRITICAL();
90010b98:	f7ff f9b4 	bl	9000ff04 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010b9c:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010ba0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010ba2:	2d00      	cmp	r5, #0
90010ba4:	dd14      	ble.n	90010bd0 <xQueueReceive+0x274>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010ba6:	f104 0910 	add.w	r9, r4, #16
90010baa:	e003      	b.n	90010bb4 <xQueueReceive+0x258>
				--cRxLock;
90010bac:	1e6b      	subs	r3, r5, #1
90010bae:	b2da      	uxtb	r2, r3
90010bb0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010bb2:	b16a      	cbz	r2, 90010bd0 <xQueueReceive+0x274>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010bb4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010bb6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010bb8:	b153      	cbz	r3, 90010bd0 <xQueueReceive+0x274>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010bba:	f001 f8af 	bl	90011d1c <xTaskRemoveFromEventList>
90010bbe:	2800      	cmp	r0, #0
90010bc0:	d0f4      	beq.n	90010bac <xQueueReceive+0x250>
					vTaskMissedYield();
90010bc2:	f001 f93f 	bl	90011e44 <vTaskMissedYield>
				--cRxLock;
90010bc6:	1e6b      	subs	r3, r5, #1
90010bc8:	b2da      	uxtb	r2, r3
90010bca:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010bcc:	2a00      	cmp	r2, #0
90010bce:	d1f1      	bne.n	90010bb4 <xQueueReceive+0x258>
		pxQueue->cRxLock = queueUNLOCKED;
90010bd0:	23ff      	movs	r3, #255	@ 0xff
90010bd2:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
90010bd6:	f7ff f9b7 	bl	9000ff48 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
90010bda:	f000 ff77 	bl	90011acc <xTaskResumeAll>
90010bde:	2800      	cmp	r0, #0
90010be0:	d1a4      	bne.n	90010b2c <xQueueReceive+0x1d0>
					portYIELD_WITHIN_API();
90010be2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90010be6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90010bea:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90010bee:	f3bf 8f4f 	dsb	sy
90010bf2:	f3bf 8f6f 	isb	sy
90010bf6:	e799      	b.n	90010b2c <xQueueReceive+0x1d0>
90010bf8:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010bfc:	f383 8811 	msr	BASEPRI, r3
90010c00:	f3bf 8f6f 	isb	sy
90010c04:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
90010c08:	e7fe      	b.n	90010c08 <xQueueReceive+0x2ac>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
90010c0a:	6c22      	ldr	r2, [r4, #64]	@ 0x40
90010c0c:	b152      	cbz	r2, 90010c24 <xQueueReceive+0x2c8>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90010c0e:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90010c10:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90010c12:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90010c14:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90010c16:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90010c18:	d301      	bcc.n	90010c1e <xQueueReceive+0x2c2>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
90010c1a:	6821      	ldr	r1, [r4, #0]
90010c1c:	60e1      	str	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
90010c1e:	4638      	mov	r0, r7
90010c20:	f01c ffc5 	bl	9002dbae <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
90010c24:	3d01      	subs	r5, #1
90010c26:	63a5      	str	r5, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010c28:	6923      	ldr	r3, [r4, #16]
90010c2a:	b91b      	cbnz	r3, 90010c34 <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
90010c2c:	f7ff f98c 	bl	9000ff48 <vPortExitCritical>
				return pdPASS;
90010c30:	2001      	movs	r0, #1
90010c32:	e787      	b.n	90010b44 <xQueueReceive+0x1e8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010c34:	f104 0010 	add.w	r0, r4, #16
90010c38:	f001 f870 	bl	90011d1c <xTaskRemoveFromEventList>
90010c3c:	2800      	cmp	r0, #0
90010c3e:	d0f5      	beq.n	90010c2c <xQueueReceive+0x2d0>
						queueYIELD_IF_USING_PREEMPTION();
90010c40:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90010c44:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90010c48:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90010c4c:	f3bf 8f4f 	dsb	sy
90010c50:	f3bf 8f6f 	isb	sy
90010c54:	e7ea      	b.n	90010c2c <xQueueReceive+0x2d0>
90010c56:	bf00      	nop

90010c58 <xQueueSemaphoreTake>:
{
90010c58:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010c5c:	b085      	sub	sp, #20
90010c5e:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
90010c60:	2800      	cmp	r0, #0
90010c62:	d05f      	beq.n	90010d24 <xQueueSemaphoreTake+0xcc>
	configASSERT( pxQueue->uxItemSize == 0 );
90010c64:	6c03      	ldr	r3, [r0, #64]	@ 0x40
90010c66:	4604      	mov	r4, r0
90010c68:	b143      	cbz	r3, 90010c7c <xQueueSemaphoreTake+0x24>
90010c6a:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010c6e:	f383 8811 	msr	BASEPRI, r3
90010c72:	f3bf 8f6f 	isb	sy
90010c76:	f3bf 8f4f 	dsb	sy
90010c7a:	e7fe      	b.n	90010c7a <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90010c7c:	f001 f8e8 	bl	90011e50 <xTaskGetSchedulerState>
90010c80:	2800      	cmp	r0, #0
90010c82:	d058      	beq.n	90010d36 <xQueueSemaphoreTake+0xde>
		taskENTER_CRITICAL();
90010c84:	f7ff f93e 	bl	9000ff04 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
90010c88:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
90010c8a:	2d00      	cmp	r5, #0
90010c8c:	f040 8155 	bne.w	90010f3a <xQueueSemaphoreTake+0x2e2>
				if( xTicksToWait == ( TickType_t ) 0 )
90010c90:	9b01      	ldr	r3, [sp, #4]
90010c92:	2b00      	cmp	r3, #0
90010c94:	f000 8145 	beq.w	90010f22 <xQueueSemaphoreTake+0x2ca>
					vTaskInternalSetTimeOutState( &xTimeOut );
90010c98:	462f      	mov	r7, r5
		prvLockQueue( pxQueue );
90010c9a:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010c9c:	f104 0624 	add.w	r6, r4, #36	@ 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
90010ca0:	a802      	add	r0, sp, #8
90010ca2:	f001 f881 	bl	90011da8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
90010ca6:	f7ff f94f 	bl	9000ff48 <vPortExitCritical>
		vTaskSuspendAll();
90010caa:	f000 ff07 	bl	90011abc <vTaskSuspendAll>
		prvLockQueue( pxQueue );
90010cae:	f7ff f929 	bl	9000ff04 <vPortEnterCritical>
90010cb2:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010cb6:	2bff      	cmp	r3, #255	@ 0xff
90010cb8:	d101      	bne.n	90010cbe <xQueueSemaphoreTake+0x66>
90010cba:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
90010cbe:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010cc2:	2bff      	cmp	r3, #255	@ 0xff
90010cc4:	d101      	bne.n	90010cca <xQueueSemaphoreTake+0x72>
90010cc6:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
90010cca:	f7ff f93d 	bl	9000ff48 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
90010cce:	a901      	add	r1, sp, #4
90010cd0:	a802      	add	r0, sp, #8
90010cd2:	f001 f875 	bl	90011dc0 <xTaskCheckForTimeOut>
90010cd6:	2800      	cmp	r0, #0
90010cd8:	d139      	bne.n	90010d4e <xQueueSemaphoreTake+0xf6>
	taskENTER_CRITICAL();
90010cda:	f7ff f913 	bl	9000ff04 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90010cde:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90010ce0:	2b00      	cmp	r3, #0
90010ce2:	f000 80c0 	beq.w	90010e66 <xQueueSemaphoreTake+0x20e>
	taskEXIT_CRITICAL();
90010ce6:	f7ff f92f 	bl	9000ff48 <vPortExitCritical>
	taskENTER_CRITICAL();
90010cea:	f7ff f90b 	bl	9000ff04 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010cee:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010cf2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010cf4:	2d00      	cmp	r5, #0
90010cf6:	f340 8091 	ble.w	90010e1c <xQueueSemaphoreTake+0x1c4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010cfa:	f104 0924 	add.w	r9, r4, #36	@ 0x24
90010cfe:	e005      	b.n	90010d0c <xQueueSemaphoreTake+0xb4>
			--cTxLock;
90010d00:	1e6b      	subs	r3, r5, #1
90010d02:	b2da      	uxtb	r2, r3
90010d04:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010d06:	2a00      	cmp	r2, #0
90010d08:	f000 8088 	beq.w	90010e1c <xQueueSemaphoreTake+0x1c4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010d0c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010d0e:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010d10:	2b00      	cmp	r3, #0
90010d12:	f000 8083 	beq.w	90010e1c <xQueueSemaphoreTake+0x1c4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010d16:	f001 f801 	bl	90011d1c <xTaskRemoveFromEventList>
90010d1a:	2800      	cmp	r0, #0
90010d1c:	d0f0      	beq.n	90010d00 <xQueueSemaphoreTake+0xa8>
						vTaskMissedYield();
90010d1e:	f001 f891 	bl	90011e44 <vTaskMissedYield>
90010d22:	e7ed      	b.n	90010d00 <xQueueSemaphoreTake+0xa8>
90010d24:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010d28:	f383 8811 	msr	BASEPRI, r3
90010d2c:	f3bf 8f6f 	isb	sy
90010d30:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
90010d34:	e7fe      	b.n	90010d34 <xQueueSemaphoreTake+0xdc>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90010d36:	9b01      	ldr	r3, [sp, #4]
90010d38:	2b00      	cmp	r3, #0
90010d3a:	d0a3      	beq.n	90010c84 <xQueueSemaphoreTake+0x2c>
90010d3c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010d40:	f383 8811 	msr	BASEPRI, r3
90010d44:	f3bf 8f6f 	isb	sy
90010d48:	f3bf 8f4f 	dsb	sy
90010d4c:	e7fe      	b.n	90010d4c <xQueueSemaphoreTake+0xf4>
	taskENTER_CRITICAL();
90010d4e:	f7ff f8d9 	bl	9000ff04 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010d52:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010d56:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010d58:	2d00      	cmp	r5, #0
90010d5a:	dc04      	bgt.n	90010d66 <xQueueSemaphoreTake+0x10e>
90010d5c:	e011      	b.n	90010d82 <xQueueSemaphoreTake+0x12a>
			--cTxLock;
90010d5e:	1e6b      	subs	r3, r5, #1
90010d60:	b2da      	uxtb	r2, r3
90010d62:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010d64:	b16a      	cbz	r2, 90010d82 <xQueueSemaphoreTake+0x12a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010d66:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010d68:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010d6a:	b153      	cbz	r3, 90010d82 <xQueueSemaphoreTake+0x12a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010d6c:	f000 ffd6 	bl	90011d1c <xTaskRemoveFromEventList>
90010d70:	2800      	cmp	r0, #0
90010d72:	d0f4      	beq.n	90010d5e <xQueueSemaphoreTake+0x106>
						vTaskMissedYield();
90010d74:	f001 f866 	bl	90011e44 <vTaskMissedYield>
			--cTxLock;
90010d78:	1e6b      	subs	r3, r5, #1
90010d7a:	b2da      	uxtb	r2, r3
90010d7c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010d7e:	2a00      	cmp	r2, #0
90010d80:	d1f1      	bne.n	90010d66 <xQueueSemaphoreTake+0x10e>
		pxQueue->cTxLock = queueUNLOCKED;
90010d82:	23ff      	movs	r3, #255	@ 0xff
90010d84:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
90010d88:	f7ff f8de 	bl	9000ff48 <vPortExitCritical>
	taskENTER_CRITICAL();
90010d8c:	f7ff f8ba 	bl	9000ff04 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010d90:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010d94:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010d96:	2d00      	cmp	r5, #0
90010d98:	dd14      	ble.n	90010dc4 <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010d9a:	f104 0910 	add.w	r9, r4, #16
90010d9e:	e003      	b.n	90010da8 <xQueueSemaphoreTake+0x150>
				--cRxLock;
90010da0:	1e6b      	subs	r3, r5, #1
90010da2:	b2da      	uxtb	r2, r3
90010da4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010da6:	b16a      	cbz	r2, 90010dc4 <xQueueSemaphoreTake+0x16c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010da8:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010daa:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010dac:	b153      	cbz	r3, 90010dc4 <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010dae:	f000 ffb5 	bl	90011d1c <xTaskRemoveFromEventList>
90010db2:	2800      	cmp	r0, #0
90010db4:	d0f4      	beq.n	90010da0 <xQueueSemaphoreTake+0x148>
					vTaskMissedYield();
90010db6:	f001 f845 	bl	90011e44 <vTaskMissedYield>
				--cRxLock;
90010dba:	1e6b      	subs	r3, r5, #1
90010dbc:	b2da      	uxtb	r2, r3
90010dbe:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010dc0:	2a00      	cmp	r2, #0
90010dc2:	d1f1      	bne.n	90010da8 <xQueueSemaphoreTake+0x150>
		pxQueue->cRxLock = queueUNLOCKED;
90010dc4:	23ff      	movs	r3, #255	@ 0xff
90010dc6:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
90010dca:	f7ff f8bd 	bl	9000ff48 <vPortExitCritical>
			( void ) xTaskResumeAll();
90010dce:	f000 fe7d 	bl	90011acc <xTaskResumeAll>
	taskENTER_CRITICAL();
90010dd2:	f7ff f897 	bl	9000ff04 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90010dd6:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90010dd8:	b943      	cbnz	r3, 90010dec <xQueueSemaphoreTake+0x194>
	taskEXIT_CRITICAL();
90010dda:	f7ff f8b5 	bl	9000ff48 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
90010dde:	2f00      	cmp	r7, #0
90010de0:	f040 8094 	bne.w	90010f0c <xQueueSemaphoreTake+0x2b4>
					return errQUEUE_EMPTY;
90010de4:	2000      	movs	r0, #0
}
90010de6:	b005      	add	sp, #20
90010de8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
90010dec:	f7ff f8ac 	bl	9000ff48 <vPortExitCritical>
		taskENTER_CRITICAL();
90010df0:	f7ff f888 	bl	9000ff04 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
90010df4:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
90010df6:	2d00      	cmp	r5, #0
90010df8:	f040 809f 	bne.w	90010f3a <xQueueSemaphoreTake+0x2e2>
				if( xTicksToWait == ( TickType_t ) 0 )
90010dfc:	9b01      	ldr	r3, [sp, #4]
90010dfe:	2b00      	cmp	r3, #0
90010e00:	f47f af51 	bne.w	90010ca6 <xQueueSemaphoreTake+0x4e>
						configASSERT( xInheritanceOccurred == pdFALSE );
90010e04:	2f00      	cmp	r7, #0
90010e06:	f000 808c 	beq.w	90010f22 <xQueueSemaphoreTake+0x2ca>
90010e0a:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010e0e:	f383 8811 	msr	BASEPRI, r3
90010e12:	f3bf 8f6f 	isb	sy
90010e16:	f3bf 8f4f 	dsb	sy
90010e1a:	e7fe      	b.n	90010e1a <xQueueSemaphoreTake+0x1c2>
		pxQueue->cTxLock = queueUNLOCKED;
90010e1c:	23ff      	movs	r3, #255	@ 0xff
90010e1e:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
90010e22:	f7ff f891 	bl	9000ff48 <vPortExitCritical>
	taskENTER_CRITICAL();
90010e26:	f7ff f86d 	bl	9000ff04 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010e2a:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010e2e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010e30:	2d00      	cmp	r5, #0
90010e32:	dd10      	ble.n	90010e56 <xQueueSemaphoreTake+0x1fe>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010e34:	f104 0910 	add.w	r9, r4, #16
90010e38:	e003      	b.n	90010e42 <xQueueSemaphoreTake+0x1ea>
				--cRxLock;
90010e3a:	1e6b      	subs	r3, r5, #1
90010e3c:	b2da      	uxtb	r2, r3
90010e3e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010e40:	b14a      	cbz	r2, 90010e56 <xQueueSemaphoreTake+0x1fe>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010e42:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010e44:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010e46:	b133      	cbz	r3, 90010e56 <xQueueSemaphoreTake+0x1fe>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010e48:	f000 ff68 	bl	90011d1c <xTaskRemoveFromEventList>
90010e4c:	2800      	cmp	r0, #0
90010e4e:	d0f4      	beq.n	90010e3a <xQueueSemaphoreTake+0x1e2>
					vTaskMissedYield();
90010e50:	f000 fff8 	bl	90011e44 <vTaskMissedYield>
90010e54:	e7f1      	b.n	90010e3a <xQueueSemaphoreTake+0x1e2>
		pxQueue->cRxLock = queueUNLOCKED;
90010e56:	23ff      	movs	r3, #255	@ 0xff
90010e58:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
90010e5c:	f7ff f874 	bl	9000ff48 <vPortExitCritical>
				( void ) xTaskResumeAll();
90010e60:	f000 fe34 	bl	90011acc <xTaskResumeAll>
90010e64:	e7c4      	b.n	90010df0 <xQueueSemaphoreTake+0x198>
	taskEXIT_CRITICAL();
90010e66:	f7ff f86f 	bl	9000ff48 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
90010e6a:	6823      	ldr	r3, [r4, #0]
90010e6c:	2b00      	cmp	r3, #0
90010e6e:	d05b      	beq.n	90010f28 <xQueueSemaphoreTake+0x2d0>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
90010e70:	f104 0924 	add.w	r9, r4, #36	@ 0x24
90010e74:	9901      	ldr	r1, [sp, #4]
90010e76:	4648      	mov	r0, r9
90010e78:	f000 fec2 	bl	90011c00 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
90010e7c:	f7ff f842 	bl	9000ff04 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010e80:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010e84:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010e86:	2d00      	cmp	r5, #0
90010e88:	dc04      	bgt.n	90010e94 <xQueueSemaphoreTake+0x23c>
90010e8a:	e00d      	b.n	90010ea8 <xQueueSemaphoreTake+0x250>
			--cTxLock;
90010e8c:	1e6b      	subs	r3, r5, #1
90010e8e:	b2da      	uxtb	r2, r3
90010e90:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010e92:	b14a      	cbz	r2, 90010ea8 <xQueueSemaphoreTake+0x250>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010e94:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010e96:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010e98:	b133      	cbz	r3, 90010ea8 <xQueueSemaphoreTake+0x250>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010e9a:	f000 ff3f 	bl	90011d1c <xTaskRemoveFromEventList>
90010e9e:	2800      	cmp	r0, #0
90010ea0:	d0f4      	beq.n	90010e8c <xQueueSemaphoreTake+0x234>
						vTaskMissedYield();
90010ea2:	f000 ffcf 	bl	90011e44 <vTaskMissedYield>
90010ea6:	e7f1      	b.n	90010e8c <xQueueSemaphoreTake+0x234>
		pxQueue->cTxLock = queueUNLOCKED;
90010ea8:	23ff      	movs	r3, #255	@ 0xff
90010eaa:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
90010eae:	f7ff f84b 	bl	9000ff48 <vPortExitCritical>
	taskENTER_CRITICAL();
90010eb2:	f7ff f827 	bl	9000ff04 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010eb6:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010eba:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010ebc:	2d00      	cmp	r5, #0
90010ebe:	dd10      	ble.n	90010ee2 <xQueueSemaphoreTake+0x28a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010ec0:	f104 0910 	add.w	r9, r4, #16
90010ec4:	e003      	b.n	90010ece <xQueueSemaphoreTake+0x276>
				--cRxLock;
90010ec6:	1e6b      	subs	r3, r5, #1
90010ec8:	b2da      	uxtb	r2, r3
90010eca:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010ecc:	b14a      	cbz	r2, 90010ee2 <xQueueSemaphoreTake+0x28a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010ece:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010ed0:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010ed2:	b133      	cbz	r3, 90010ee2 <xQueueSemaphoreTake+0x28a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010ed4:	f000 ff22 	bl	90011d1c <xTaskRemoveFromEventList>
90010ed8:	2800      	cmp	r0, #0
90010eda:	d0f4      	beq.n	90010ec6 <xQueueSemaphoreTake+0x26e>
					vTaskMissedYield();
90010edc:	f000 ffb2 	bl	90011e44 <vTaskMissedYield>
90010ee0:	e7f1      	b.n	90010ec6 <xQueueSemaphoreTake+0x26e>
		pxQueue->cRxLock = queueUNLOCKED;
90010ee2:	23ff      	movs	r3, #255	@ 0xff
90010ee4:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
90010ee8:	f7ff f82e 	bl	9000ff48 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
90010eec:	f000 fdee 	bl	90011acc <xTaskResumeAll>
90010ef0:	2800      	cmp	r0, #0
90010ef2:	f47f af7d 	bne.w	90010df0 <xQueueSemaphoreTake+0x198>
					portYIELD_WITHIN_API();
90010ef6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90010efa:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90010efe:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90010f02:	f3bf 8f4f 	dsb	sy
90010f06:	f3bf 8f6f 	isb	sy
90010f0a:	e771      	b.n	90010df0 <xQueueSemaphoreTake+0x198>
						taskENTER_CRITICAL();
90010f0c:	f7fe fffa 	bl	9000ff04 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
90010f10:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90010f12:	b119      	cbz	r1, 90010f1c <xQueueSemaphoreTake+0x2c4>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
90010f14:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90010f16:	6819      	ldr	r1, [r3, #0]
90010f18:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
90010f1c:	68a0      	ldr	r0, [r4, #8]
90010f1e:	f001 f82b 	bl	90011f78 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
90010f22:	f7ff f811 	bl	9000ff48 <vPortExitCritical>
90010f26:	e75d      	b.n	90010de4 <xQueueSemaphoreTake+0x18c>
						taskENTER_CRITICAL();
90010f28:	f7fe ffec 	bl	9000ff04 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
90010f2c:	68a0      	ldr	r0, [r4, #8]
90010f2e:	f000 ff9f 	bl	90011e70 <xTaskPriorityInherit>
90010f32:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
90010f34:	f7ff f808 	bl	9000ff48 <vPortExitCritical>
90010f38:	e79a      	b.n	90010e70 <xQueueSemaphoreTake+0x218>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
90010f3a:	3d01      	subs	r5, #1
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
90010f3c:	6823      	ldr	r3, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
90010f3e:	63a5      	str	r5, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
90010f40:	b12b      	cbz	r3, 90010f4e <xQueueSemaphoreTake+0x2f6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010f42:	6923      	ldr	r3, [r4, #16]
90010f44:	b93b      	cbnz	r3, 90010f56 <xQueueSemaphoreTake+0x2fe>
				taskEXIT_CRITICAL();
90010f46:	f7fe ffff 	bl	9000ff48 <vPortExitCritical>
				return pdPASS;
90010f4a:	2001      	movs	r0, #1
90010f4c:	e74b      	b.n	90010de6 <xQueueSemaphoreTake+0x18e>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
90010f4e:	f001 f863 	bl	90012018 <pvTaskIncrementMutexHeldCount>
90010f52:	60a0      	str	r0, [r4, #8]
90010f54:	e7f5      	b.n	90010f42 <xQueueSemaphoreTake+0x2ea>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010f56:	f104 0010 	add.w	r0, r4, #16
90010f5a:	f000 fedf 	bl	90011d1c <xTaskRemoveFromEventList>
90010f5e:	2800      	cmp	r0, #0
90010f60:	d0f1      	beq.n	90010f46 <xQueueSemaphoreTake+0x2ee>
						queueYIELD_IF_USING_PREEMPTION();
90010f62:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90010f66:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90010f6a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90010f6e:	f3bf 8f4f 	dsb	sy
90010f72:	f3bf 8f6f 	isb	sy
90010f76:	e7e6      	b.n	90010f46 <xQueueSemaphoreTake+0x2ee>

90010f78 <xQueueReceiveFromISR>:
{
90010f78:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
90010f7c:	b310      	cbz	r0, 90010fc4 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
90010f7e:	460f      	mov	r7, r1
90010f80:	4604      	mov	r4, r0
90010f82:	4616      	mov	r6, r2
90010f84:	b191      	cbz	r1, 90010fac <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
90010f86:	f7ff f8ef 	bl	90010168 <vPortValidateInterruptPriority>
	__asm volatile
90010f8a:	f3ef 8911 	mrs	r9, BASEPRI
90010f8e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010f92:	f383 8811 	msr	BASEPRI, r3
90010f96:	f3bf 8f6f 	isb	sy
90010f9a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90010f9e:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90010fa0:	b9cd      	cbnz	r5, 90010fd6 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
90010fa2:	4628      	mov	r0, r5
	__asm volatile
90010fa4:	f389 8811 	msr	BASEPRI, r9
}
90010fa8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
90010fac:	6c03      	ldr	r3, [r0, #64]	@ 0x40
90010fae:	2b00      	cmp	r3, #0
90010fb0:	d0e9      	beq.n	90010f86 <xQueueReceiveFromISR+0xe>
	__asm volatile
90010fb2:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010fb6:	f383 8811 	msr	BASEPRI, r3
90010fba:	f3bf 8f6f 	isb	sy
90010fbe:	f3bf 8f4f 	dsb	sy
90010fc2:	e7fe      	b.n	90010fc2 <xQueueReceiveFromISR+0x4a>
90010fc4:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010fc8:	f383 8811 	msr	BASEPRI, r3
90010fcc:	f3bf 8f6f 	isb	sy
90010fd0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90010fd4:	e7fe      	b.n	90010fd4 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
90010fd6:	f894 8044 	ldrb.w	r8, [r4, #68]	@ 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
90010fda:	6c22      	ldr	r2, [r4, #64]	@ 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
90010fdc:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
90010fe0:	b142      	cbz	r2, 90010ff4 <xQueueReceiveFromISR+0x7c>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90010fe2:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90010fe4:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90010fe6:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90010fe8:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90010fea:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90010fec:	d21c      	bcs.n	90011028 <xQueueReceiveFromISR+0xb0>
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
90010fee:	4638      	mov	r0, r7
90010ff0:	f01c fddd 	bl	9002dbae <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
90010ff4:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
90010ff6:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
90010ffa:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
90010ffc:	d006      	beq.n	9001100c <xQueueReceiveFromISR+0x94>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
90010ffe:	f108 0301 	add.w	r3, r8, #1
90011002:	b25b      	sxtb	r3, r3
90011004:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
			xReturn = pdPASS;
90011008:	2001      	movs	r0, #1
9001100a:	e7cb      	b.n	90010fa4 <xQueueReceiveFromISR+0x2c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001100c:	6923      	ldr	r3, [r4, #16]
9001100e:	2b00      	cmp	r3, #0
90011010:	d0fa      	beq.n	90011008 <xQueueReceiveFromISR+0x90>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011012:	f104 0010 	add.w	r0, r4, #16
90011016:	f000 fe81 	bl	90011d1c <xTaskRemoveFromEventList>
						if( pxHigherPriorityTaskWoken != NULL )
9001101a:	2e00      	cmp	r6, #0
9001101c:	d0f4      	beq.n	90011008 <xQueueReceiveFromISR+0x90>
9001101e:	2800      	cmp	r0, #0
90011020:	d0f2      	beq.n	90011008 <xQueueReceiveFromISR+0x90>
							*pxHigherPriorityTaskWoken = pdTRUE;
90011022:	2301      	movs	r3, #1
90011024:	6033      	str	r3, [r6, #0]
90011026:	e7ef      	b.n	90011008 <xQueueReceiveFromISR+0x90>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
90011028:	6821      	ldr	r1, [r4, #0]
9001102a:	60e1      	str	r1, [r4, #12]
9001102c:	e7df      	b.n	90010fee <xQueueReceiveFromISR+0x76>
9001102e:	bf00      	nop

90011030 <vQueueDelete>:
	configASSERT( pxQueue );
90011030:	b1e0      	cbz	r0, 9001106c <vQueueDelete+0x3c>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
90011032:	4b21      	ldr	r3, [pc, #132]	@ (900110b8 <vQueueDelete+0x88>)
90011034:	685a      	ldr	r2, [r3, #4]
90011036:	4290      	cmp	r0, r2
90011038:	d02b      	beq.n	90011092 <vQueueDelete+0x62>
9001103a:	68da      	ldr	r2, [r3, #12]
9001103c:	4290      	cmp	r0, r2
9001103e:	d02a      	beq.n	90011096 <vQueueDelete+0x66>
90011040:	695a      	ldr	r2, [r3, #20]
90011042:	4290      	cmp	r0, r2
90011044:	d029      	beq.n	9001109a <vQueueDelete+0x6a>
90011046:	69da      	ldr	r2, [r3, #28]
90011048:	4290      	cmp	r0, r2
9001104a:	d028      	beq.n	9001109e <vQueueDelete+0x6e>
9001104c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
9001104e:	4290      	cmp	r0, r2
90011050:	d027      	beq.n	900110a2 <vQueueDelete+0x72>
90011052:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
90011054:	4290      	cmp	r0, r2
90011056:	d014      	beq.n	90011082 <vQueueDelete+0x52>
90011058:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9001105a:	4290      	cmp	r0, r2
9001105c:	d023      	beq.n	900110a6 <vQueueDelete+0x76>
9001105e:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
90011060:	4290      	cmp	r0, r2
90011062:	d022      	beq.n	900110aa <vQueueDelete+0x7a>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
90011064:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
90011068:	b14b      	cbz	r3, 9001107e <vQueueDelete+0x4e>
}
9001106a:	4770      	bx	lr
9001106c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011070:	f383 8811 	msr	BASEPRI, r3
90011074:	f3bf 8f6f 	isb	sy
90011078:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9001107c:	e7fe      	b.n	9001107c <vQueueDelete+0x4c>
			vPortFree( pxQueue );
9001107e:	f7fe be1f 	b.w	9000fcc0 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
90011082:	2205      	movs	r2, #5
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
90011084:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
90011088:	ed9f 7b09 	vldr	d7, [pc, #36]	@ 900110b0 <vQueueDelete+0x80>
9001108c:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
90011090:	e7e8      	b.n	90011064 <vQueueDelete+0x34>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
90011092:	2200      	movs	r2, #0
90011094:	e7f6      	b.n	90011084 <vQueueDelete+0x54>
90011096:	2201      	movs	r2, #1
90011098:	e7f4      	b.n	90011084 <vQueueDelete+0x54>
9001109a:	2202      	movs	r2, #2
9001109c:	e7f2      	b.n	90011084 <vQueueDelete+0x54>
9001109e:	2203      	movs	r2, #3
900110a0:	e7f0      	b.n	90011084 <vQueueDelete+0x54>
900110a2:	2204      	movs	r2, #4
900110a4:	e7ee      	b.n	90011084 <vQueueDelete+0x54>
900110a6:	2206      	movs	r2, #6
900110a8:	e7ec      	b.n	90011084 <vQueueDelete+0x54>
900110aa:	2207      	movs	r2, #7
900110ac:	e7ea      	b.n	90011084 <vQueueDelete+0x54>
900110ae:	bf00      	nop
	...
900110b8:	24021598 	.word	0x24021598

900110bc <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
900110bc:	4b12      	ldr	r3, [pc, #72]	@ (90011108 <vQueueAddToRegistry+0x4c>)
900110be:	681a      	ldr	r2, [r3, #0]
900110c0:	b17a      	cbz	r2, 900110e2 <vQueueAddToRegistry+0x26>
900110c2:	689a      	ldr	r2, [r3, #8]
900110c4:	b162      	cbz	r2, 900110e0 <vQueueAddToRegistry+0x24>
900110c6:	691a      	ldr	r2, [r3, #16]
900110c8:	b192      	cbz	r2, 900110f0 <vQueueAddToRegistry+0x34>
900110ca:	699a      	ldr	r2, [r3, #24]
900110cc:	b192      	cbz	r2, 900110f4 <vQueueAddToRegistry+0x38>
900110ce:	6a1a      	ldr	r2, [r3, #32]
900110d0:	b192      	cbz	r2, 900110f8 <vQueueAddToRegistry+0x3c>
900110d2:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
900110d4:	b192      	cbz	r2, 900110fc <vQueueAddToRegistry+0x40>
900110d6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900110d8:	b192      	cbz	r2, 90011100 <vQueueAddToRegistry+0x44>
900110da:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
900110dc:	b192      	cbz	r2, 90011104 <vQueueAddToRegistry+0x48>
	}
900110de:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
900110e0:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
900110e2:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
900110e6:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
900110ea:	f8cc 0004 	str.w	r0, [ip, #4]
	}
900110ee:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
900110f0:	2202      	movs	r2, #2
900110f2:	e7f6      	b.n	900110e2 <vQueueAddToRegistry+0x26>
900110f4:	2203      	movs	r2, #3
900110f6:	e7f4      	b.n	900110e2 <vQueueAddToRegistry+0x26>
900110f8:	2204      	movs	r2, #4
900110fa:	e7f2      	b.n	900110e2 <vQueueAddToRegistry+0x26>
900110fc:	2205      	movs	r2, #5
900110fe:	e7f0      	b.n	900110e2 <vQueueAddToRegistry+0x26>
90011100:	2206      	movs	r2, #6
90011102:	e7ee      	b.n	900110e2 <vQueueAddToRegistry+0x26>
90011104:	2207      	movs	r2, #7
90011106:	e7ec      	b.n	900110e2 <vQueueAddToRegistry+0x26>
90011108:	24021598 	.word	0x24021598

9001110c <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
9001110c:	b570      	push	{r4, r5, r6, lr}
9001110e:	4605      	mov	r5, r0
90011110:	460e      	mov	r6, r1
90011112:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
90011114:	f7fe fef6 	bl	9000ff04 <vPortEnterCritical>
90011118:	f895 3044 	ldrb.w	r3, [r5, #68]	@ 0x44
9001111c:	2bff      	cmp	r3, #255	@ 0xff
9001111e:	d102      	bne.n	90011126 <vQueueWaitForMessageRestricted+0x1a>
90011120:	2300      	movs	r3, #0
90011122:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
90011126:	f895 3045 	ldrb.w	r3, [r5, #69]	@ 0x45
9001112a:	2bff      	cmp	r3, #255	@ 0xff
9001112c:	d102      	bne.n	90011134 <vQueueWaitForMessageRestricted+0x28>
9001112e:	2300      	movs	r3, #0
90011130:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
90011134:	f7fe ff08 	bl	9000ff48 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
90011138:	6bab      	ldr	r3, [r5, #56]	@ 0x38
9001113a:	2b00      	cmp	r3, #0
9001113c:	d043      	beq.n	900111c6 <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
9001113e:	f7fe fee1 	bl	9000ff04 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90011142:	f895 3045 	ldrb.w	r3, [r5, #69]	@ 0x45
90011146:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011148:	2c00      	cmp	r4, #0
9001114a:	dd14      	ble.n	90011176 <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001114c:	f105 0624 	add.w	r6, r5, #36	@ 0x24
90011150:	e003      	b.n	9001115a <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
90011152:	1e63      	subs	r3, r4, #1
90011154:	b2da      	uxtb	r2, r3
90011156:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011158:	b16a      	cbz	r2, 90011176 <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001115a:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001115c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001115e:	b153      	cbz	r3, 90011176 <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011160:	f000 fddc 	bl	90011d1c <xTaskRemoveFromEventList>
90011164:	2800      	cmp	r0, #0
90011166:	d0f4      	beq.n	90011152 <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
90011168:	f000 fe6c 	bl	90011e44 <vTaskMissedYield>
			--cTxLock;
9001116c:	1e63      	subs	r3, r4, #1
9001116e:	b2da      	uxtb	r2, r3
90011170:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011172:	2a00      	cmp	r2, #0
90011174:	d1f1      	bne.n	9001115a <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
90011176:	23ff      	movs	r3, #255	@ 0xff
90011178:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
	taskEXIT_CRITICAL();
9001117c:	f7fe fee4 	bl	9000ff48 <vPortExitCritical>
	taskENTER_CRITICAL();
90011180:	f7fe fec0 	bl	9000ff04 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90011184:	f895 3044 	ldrb.w	r3, [r5, #68]	@ 0x44
90011188:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001118a:	2c00      	cmp	r4, #0
9001118c:	dd14      	ble.n	900111b8 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001118e:	f105 0610 	add.w	r6, r5, #16
90011192:	e003      	b.n	9001119c <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
90011194:	1e63      	subs	r3, r4, #1
90011196:	b2da      	uxtb	r2, r3
90011198:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001119a:	b16a      	cbz	r2, 900111b8 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001119c:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001119e:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900111a0:	b153      	cbz	r3, 900111b8 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900111a2:	f000 fdbb 	bl	90011d1c <xTaskRemoveFromEventList>
900111a6:	2800      	cmp	r0, #0
900111a8:	d0f4      	beq.n	90011194 <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
900111aa:	f000 fe4b 	bl	90011e44 <vTaskMissedYield>
				--cRxLock;
900111ae:	1e63      	subs	r3, r4, #1
900111b0:	b2da      	uxtb	r2, r3
900111b2:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900111b4:	2a00      	cmp	r2, #0
900111b6:	d1f1      	bne.n	9001119c <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
900111b8:	23ff      	movs	r3, #255	@ 0xff
900111ba:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
900111be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
900111c2:	f7fe bec1 	b.w	9000ff48 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
900111c6:	4622      	mov	r2, r4
900111c8:	4631      	mov	r1, r6
900111ca:	f105 0024 	add.w	r0, r5, #36	@ 0x24
900111ce:	f000 fd5b 	bl	90011c88 <vTaskPlaceOnEventListRestricted>
900111d2:	e7b4      	b.n	9001113e <vQueueWaitForMessageRestricted+0x32>

900111d4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
900111d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900111d8:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
900111da:	f7fe fe93 	bl	9000ff04 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
900111de:	4a33      	ldr	r2, [pc, #204]	@ (900112ac <prvAddNewTaskToReadyList+0xd8>)
		if( pxCurrentTCB == NULL )
900111e0:	4e33      	ldr	r6, [pc, #204]	@ (900112b0 <prvAddNewTaskToReadyList+0xdc>)
		uxCurrentNumberOfTasks++;
900111e2:	6813      	ldr	r3, [r2, #0]
900111e4:	3301      	adds	r3, #1
900111e6:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
900111e8:	6833      	ldr	r3, [r6, #0]
900111ea:	2b00      	cmp	r3, #0
900111ec:	d031      	beq.n	90011252 <prvAddNewTaskToReadyList+0x7e>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
900111ee:	4c31      	ldr	r4, [pc, #196]	@ (900112b4 <prvAddNewTaskToReadyList+0xe0>)
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
900111f0:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
900111f2:	6823      	ldr	r3, [r4, #0]
900111f4:	b333      	cbz	r3, 90011244 <prvAddNewTaskToReadyList+0x70>
900111f6:	4f30      	ldr	r7, [pc, #192]	@ (900112b8 <prvAddNewTaskToReadyList+0xe4>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
900111f8:	4a30      	ldr	r2, [pc, #192]	@ (900112bc <prvAddNewTaskToReadyList+0xe8>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
900111fa:	4931      	ldr	r1, [pc, #196]	@ (900112c0 <prvAddNewTaskToReadyList+0xec>)
		uxTaskNumber++;
900111fc:	6813      	ldr	r3, [r2, #0]
900111fe:	3301      	adds	r3, #1
90011200:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
90011202:	646b      	str	r3, [r5, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
90011204:	680b      	ldr	r3, [r1, #0]
90011206:	4283      	cmp	r3, r0
90011208:	d200      	bcs.n	9001120c <prvAddNewTaskToReadyList+0x38>
9001120a:	6008      	str	r0, [r1, #0]
9001120c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90011210:	1d29      	adds	r1, r5, #4
90011212:	eb07 0080 	add.w	r0, r7, r0, lsl #2
90011216:	f7fe fdcd 	bl	9000fdb4 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
9001121a:	f7fe fe95 	bl	9000ff48 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
9001121e:	6823      	ldr	r3, [r4, #0]
90011220:	b173      	cbz	r3, 90011240 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
90011222:	6832      	ldr	r2, [r6, #0]
90011224:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
90011226:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
90011228:	429a      	cmp	r2, r3
9001122a:	d209      	bcs.n	90011240 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
9001122c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90011230:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90011234:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90011238:	f3bf 8f4f 	dsb	sy
9001123c:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
90011240:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
90011244:	6833      	ldr	r3, [r6, #0]
90011246:	4f1c      	ldr	r7, [pc, #112]	@ (900112b8 <prvAddNewTaskToReadyList+0xe4>)
90011248:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001124a:	4283      	cmp	r3, r0
9001124c:	d8d4      	bhi.n	900111f8 <prvAddNewTaskToReadyList+0x24>
					pxCurrentTCB = pxNewTCB;
9001124e:	6035      	str	r5, [r6, #0]
90011250:	e7d2      	b.n	900111f8 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
90011252:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
90011254:	6813      	ldr	r3, [r2, #0]
90011256:	2b01      	cmp	r3, #1
90011258:	d003      	beq.n	90011262 <prvAddNewTaskToReadyList+0x8e>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9001125a:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
9001125c:	4f16      	ldr	r7, [pc, #88]	@ (900112b8 <prvAddNewTaskToReadyList+0xe4>)
9001125e:	4c15      	ldr	r4, [pc, #84]	@ (900112b4 <prvAddNewTaskToReadyList+0xe0>)
90011260:	e7ca      	b.n	900111f8 <prvAddNewTaskToReadyList+0x24>
90011262:	4f15      	ldr	r7, [pc, #84]	@ (900112b8 <prvAddNewTaskToReadyList+0xe4>)
90011264:	463c      	mov	r4, r7
90011266:	f507 688c 	add.w	r8, r7, #1120	@ 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9001126a:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9001126c:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9001126e:	f7fe fd91 	bl	9000fd94 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
90011272:	45a0      	cmp	r8, r4
90011274:	d1f9      	bne.n	9001126a <prvAddNewTaskToReadyList+0x96>
	}

	vListInitialise( &xDelayedTaskList1 );
90011276:	f8df 8064 	ldr.w	r8, [pc, #100]	@ 900112dc <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
9001127a:	4c12      	ldr	r4, [pc, #72]	@ (900112c4 <prvAddNewTaskToReadyList+0xf0>)
	vListInitialise( &xDelayedTaskList1 );
9001127c:	4640      	mov	r0, r8
9001127e:	f7fe fd89 	bl	9000fd94 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
90011282:	4620      	mov	r0, r4
90011284:	f7fe fd86 	bl	9000fd94 <vListInitialise>
	vListInitialise( &xPendingReadyList );
90011288:	480f      	ldr	r0, [pc, #60]	@ (900112c8 <prvAddNewTaskToReadyList+0xf4>)
9001128a:	f7fe fd83 	bl	9000fd94 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
9001128e:	480f      	ldr	r0, [pc, #60]	@ (900112cc <prvAddNewTaskToReadyList+0xf8>)
90011290:	f7fe fd80 	bl	9000fd94 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
90011294:	480e      	ldr	r0, [pc, #56]	@ (900112d0 <prvAddNewTaskToReadyList+0xfc>)
90011296:	f7fe fd7d 	bl	9000fd94 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
9001129a:	4b0e      	ldr	r3, [pc, #56]	@ (900112d4 <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
9001129c:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
9001129e:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
900112a2:	4b0d      	ldr	r3, [pc, #52]	@ (900112d8 <prvAddNewTaskToReadyList+0x104>)
900112a4:	601c      	str	r4, [r3, #0]
900112a6:	4c03      	ldr	r4, [pc, #12]	@ (900112b4 <prvAddNewTaskToReadyList+0xe0>)
}
900112a8:	e7a6      	b.n	900111f8 <prvAddNewTaskToReadyList+0x24>
900112aa:	bf00      	nop
900112ac:	240215fc 	.word	0x240215fc
900112b0:	24021ad0 	.word	0x24021ad0
900112b4:	240215f0 	.word	0x240215f0
900112b8:	24021670 	.word	0x24021670
900112bc:	240215e0 	.word	0x240215e0
900112c0:	240215f4 	.word	0x240215f4
900112c4:	24021648 	.word	0x24021648
900112c8:	2402162c 	.word	0x2402162c
900112cc:	24021618 	.word	0x24021618
900112d0:	24021600 	.word	0x24021600
900112d4:	24021644 	.word	0x24021644
900112d8:	24021640 	.word	0x24021640
900112dc:	2402165c 	.word	0x2402165c

900112e0 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
900112e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900112e4:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
900112e6:	0096      	lsls	r6, r2, #2
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
900112e8:	4607      	mov	r7, r0
900112ea:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
900112ec:	4632      	mov	r2, r6
900112ee:	21a5      	movs	r1, #165	@ 0xa5
900112f0:	6b20      	ldr	r0, [r4, #48]	@ 0x30
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
900112f2:	4698      	mov	r8, r3
900112f4:	f8dd 9024 	ldr.w	r9, [sp, #36]	@ 0x24
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
900112f8:	3e04      	subs	r6, #4
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
900112fa:	f01c fb0b 	bl	9002d914 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
900112fe:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90011300:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
90011302:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
90011306:	2d00      	cmp	r5, #0
90011308:	d074      	beq.n	900113f4 <prvInitialiseNewTask.constprop.0+0x114>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001130a:	782b      	ldrb	r3, [r5, #0]
9001130c:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
			if( pcName[ x ] == ( char ) 0x00 )
90011310:	2b00      	cmp	r3, #0
90011312:	d036      	beq.n	90011382 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011314:	786b      	ldrb	r3, [r5, #1]
90011316:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
			if( pcName[ x ] == ( char ) 0x00 )
9001131a:	b393      	cbz	r3, 90011382 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001131c:	78ab      	ldrb	r3, [r5, #2]
9001131e:	f884 3036 	strb.w	r3, [r4, #54]	@ 0x36
			if( pcName[ x ] == ( char ) 0x00 )
90011322:	b373      	cbz	r3, 90011382 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011324:	78eb      	ldrb	r3, [r5, #3]
90011326:	f884 3037 	strb.w	r3, [r4, #55]	@ 0x37
			if( pcName[ x ] == ( char ) 0x00 )
9001132a:	b353      	cbz	r3, 90011382 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001132c:	792b      	ldrb	r3, [r5, #4]
9001132e:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
			if( pcName[ x ] == ( char ) 0x00 )
90011332:	b333      	cbz	r3, 90011382 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011334:	796b      	ldrb	r3, [r5, #5]
90011336:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
			if( pcName[ x ] == ( char ) 0x00 )
9001133a:	b313      	cbz	r3, 90011382 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001133c:	79ab      	ldrb	r3, [r5, #6]
9001133e:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
90011342:	b1f3      	cbz	r3, 90011382 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011344:	79eb      	ldrb	r3, [r5, #7]
90011346:	f884 303b 	strb.w	r3, [r4, #59]	@ 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
9001134a:	b1d3      	cbz	r3, 90011382 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001134c:	7a2b      	ldrb	r3, [r5, #8]
9001134e:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
90011352:	b1b3      	cbz	r3, 90011382 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011354:	7a6b      	ldrb	r3, [r5, #9]
90011356:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
9001135a:	b193      	cbz	r3, 90011382 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001135c:	7aab      	ldrb	r3, [r5, #10]
9001135e:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
90011362:	b173      	cbz	r3, 90011382 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011364:	7aeb      	ldrb	r3, [r5, #11]
90011366:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
9001136a:	b153      	cbz	r3, 90011382 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001136c:	7b2b      	ldrb	r3, [r5, #12]
9001136e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
			if( pcName[ x ] == ( char ) 0x00 )
90011372:	b133      	cbz	r3, 90011382 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011374:	7b6b      	ldrb	r3, [r5, #13]
90011376:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
			if( pcName[ x ] == ( char ) 0x00 )
9001137a:	b113      	cbz	r3, 90011382 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001137c:	7bab      	ldrb	r3, [r5, #14]
9001137e:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
90011382:	2300      	movs	r3, #0
90011384:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
90011388:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
9001138a:	f04f 0a00 	mov.w	sl, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9001138e:	1d20      	adds	r0, r4, #4
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
90011390:	2d37      	cmp	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
90011392:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
90011396:	bf28      	it	cs
90011398:	2537      	movcs	r5, #55	@ 0x37
	pxNewTCB->uxPriority = uxPriority;
9001139a:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9001139c:	64e5      	str	r5, [r4, #76]	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9001139e:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
900113a2:	f7fe fd03 	bl	9000fdac <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
900113a6:	f104 0018 	add.w	r0, r4, #24
900113aa:	f7fe fcff 	bl	9000fdac <vListInitialiseItem>
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
900113ae:	4651      	mov	r1, sl
900113b0:	224c      	movs	r2, #76	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900113b2:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
900113b4:	f8c4 a0a4 	str.w	sl, [r4, #164]	@ 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
900113b8:	f104 0058 	add.w	r0, r4, #88	@ 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
900113bc:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
900113be:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
900113c0:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
900113c4:	f884 a0a8 	strb.w	sl, [r4, #168]	@ 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
900113c8:	f01c faa4 	bl	9002d914 <memset>
900113cc:	4b0b      	ldr	r3, [pc, #44]	@ (900113fc <prvInitialiseNewTask.constprop.0+0x11c>)
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900113ce:	4642      	mov	r2, r8
900113d0:	4639      	mov	r1, r7
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
900113d2:	f103 0568 	add.w	r5, r3, #104	@ 0x68
900113d6:	65e3      	str	r3, [r4, #92]	@ 0x5c
900113d8:	33d0      	adds	r3, #208	@ 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900113da:	4630      	mov	r0, r6
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
900113dc:	6625      	str	r5, [r4, #96]	@ 0x60
900113de:	6663      	str	r3, [r4, #100]	@ 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900113e0:	f7fe fd60 	bl	9000fea4 <pxPortInitialiseStack>
900113e4:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
900113e6:	f1b9 0f00 	cmp.w	r9, #0
900113ea:	d001      	beq.n	900113f0 <prvInitialiseNewTask.constprop.0+0x110>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
900113ec:	f8c9 4000 	str.w	r4, [r9]
}
900113f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
900113f4:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
900113f8:	e7c6      	b.n	90011388 <prvInitialiseNewTask.constprop.0+0xa8>
900113fa:	bf00      	nop
900113fc:	24022670 	.word	0x24022670

90011400 <prvIdleTask>:
{
90011400:	b580      	push	{r7, lr}
90011402:	4d24      	ldr	r5, [pc, #144]	@ (90011494 <prvIdleTask+0x94>)
90011404:	4f24      	ldr	r7, [pc, #144]	@ (90011498 <prvIdleTask+0x98>)
90011406:	4e25      	ldr	r6, [pc, #148]	@ (9001149c <prvIdleTask+0x9c>)
90011408:	f8df 8094 	ldr.w	r8, [pc, #148]	@ 900114a0 <prvIdleTask+0xa0>
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9001140c:	682b      	ldr	r3, [r5, #0]
9001140e:	b35b      	cbz	r3, 90011468 <prvIdleTask+0x68>
		{
			taskENTER_CRITICAL();
90011410:	f7fe fd78 	bl	9000ff04 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011414:	68fb      	ldr	r3, [r7, #12]
90011416:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90011418:	1d20      	adds	r0, r4, #4
9001141a:	f7fe fcf1 	bl	9000fe00 <uxListRemove>
				--uxCurrentNumberOfTasks;
9001141e:	6833      	ldr	r3, [r6, #0]
90011420:	3b01      	subs	r3, #1
90011422:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
90011424:	682b      	ldr	r3, [r5, #0]
90011426:	3b01      	subs	r3, #1
90011428:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
9001142a:	f7fe fd8d 	bl	9000ff48 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
9001142e:	f104 0058 	add.w	r0, r4, #88	@ 0x58
90011432:	f01c fad7 	bl	9002d9e4 <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
90011436:	f894 30a9 	ldrb.w	r3, [r4, #169]	@ 0xa9
9001143a:	b163      	cbz	r3, 90011456 <prvIdleTask+0x56>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
9001143c:	2b01      	cmp	r3, #1
9001143e:	d024      	beq.n	9001148a <prvIdleTask+0x8a>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
90011440:	2b02      	cmp	r3, #2
90011442:	d0e3      	beq.n	9001140c <prvIdleTask+0xc>
90011444:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011448:	f383 8811 	msr	BASEPRI, r3
9001144c:	f3bf 8f6f 	isb	sy
90011450:	f3bf 8f4f 	dsb	sy
90011454:	e7fe      	b.n	90011454 <prvIdleTask+0x54>
				vPortFree( pxTCB->pxStack );
90011456:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90011458:	f7fe fc32 	bl	9000fcc0 <vPortFree>
				vPortFree( pxTCB );
9001145c:	4620      	mov	r0, r4
9001145e:	f7fe fc2f 	bl	9000fcc0 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
90011462:	682b      	ldr	r3, [r5, #0]
90011464:	2b00      	cmp	r3, #0
90011466:	d1d3      	bne.n	90011410 <prvIdleTask+0x10>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
90011468:	f8d8 3000 	ldr.w	r3, [r8]
9001146c:	2b01      	cmp	r3, #1
9001146e:	d909      	bls.n	90011484 <prvIdleTask+0x84>
				taskYIELD();
90011470:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90011474:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90011478:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9001147c:	f3bf 8f4f 	dsb	sy
90011480:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
90011484:	f7f2 fb2c 	bl	90003ae0 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
90011488:	e7c0      	b.n	9001140c <prvIdleTask+0xc>
				vPortFree( pxTCB );
9001148a:	4620      	mov	r0, r4
9001148c:	f7fe fc18 	bl	9000fcc0 <vPortFree>
90011490:	e7bc      	b.n	9001140c <prvIdleTask+0xc>
90011492:	bf00      	nop
90011494:	24021614 	.word	0x24021614
90011498:	24021618 	.word	0x24021618
9001149c:	240215fc 	.word	0x240215fc
900114a0:	24021670 	.word	0x24021670

900114a4 <xTaskIncrementTick.part.0>:
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
900114a4:	4b49      	ldr	r3, [pc, #292]	@ (900115cc <xTaskIncrementTick.part.0+0x128>)
BaseType_t xTaskIncrementTick( void )
900114a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
900114aa:	681e      	ldr	r6, [r3, #0]
BaseType_t xTaskIncrementTick( void )
900114ac:	b083      	sub	sp, #12
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
900114ae:	3601      	adds	r6, #1
		xTickCount = xConstTickCount;
900114b0:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
900114b2:	2e00      	cmp	r6, #0
900114b4:	d03e      	beq.n	90011534 <xTaskIncrementTick.part.0+0x90>
900114b6:	4b46      	ldr	r3, [pc, #280]	@ (900115d0 <xTaskIncrementTick.part.0+0x12c>)
900114b8:	9301      	str	r3, [sp, #4]
		if( xConstTickCount >= xNextTaskUnblockTime )
900114ba:	681b      	ldr	r3, [r3, #0]
900114bc:	429e      	cmp	r6, r3
900114be:	d346      	bcc.n	9001154e <xTaskIncrementTick.part.0+0xaa>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
900114c0:	4f44      	ldr	r7, [pc, #272]	@ (900115d4 <xTaskIncrementTick.part.0+0x130>)
900114c2:	683b      	ldr	r3, [r7, #0]
900114c4:	681d      	ldr	r5, [r3, #0]
900114c6:	2d00      	cmp	r5, #0
900114c8:	d077      	beq.n	900115ba <xTaskIncrementTick.part.0+0x116>
BaseType_t xSwitchRequired = pdFALSE;
900114ca:	2500      	movs	r5, #0
900114cc:	f8df 9114 	ldr.w	r9, [pc, #276]	@ 900115e4 <xTaskIncrementTick.part.0+0x140>
900114d0:	f8df a114 	ldr.w	sl, [pc, #276]	@ 900115e8 <xTaskIncrementTick.part.0+0x144>
					prvAddTaskToReadyList( pxTCB );
900114d4:	f8df 8114 	ldr.w	r8, [pc, #276]	@ 900115ec <xTaskIncrementTick.part.0+0x148>
900114d8:	e020      	b.n	9001151c <xTaskIncrementTick.part.0+0x78>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900114da:	f7fe fc91 	bl	9000fe00 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
900114de:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
900114e0:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
900114e4:	b10b      	cbz	r3, 900114ea <xTaskIncrementTick.part.0+0x46>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
900114e6:	f7fe fc8b 	bl	9000fe00 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
900114ea:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
900114ec:	4659      	mov	r1, fp
900114ee:	f8d8 2000 	ldr.w	r2, [r8]
900114f2:	eb03 0083 	add.w	r0, r3, r3, lsl #2
900114f6:	4293      	cmp	r3, r2
900114f8:	eb09 0080 	add.w	r0, r9, r0, lsl #2
900114fc:	d901      	bls.n	90011502 <xTaskIncrementTick.part.0+0x5e>
900114fe:	f8c8 3000 	str.w	r3, [r8]
90011502:	f7fe fc57 	bl	9000fdb4 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
90011506:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9001150a:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9001150c:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
9001150e:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90011510:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
90011512:	4291      	cmp	r1, r2
90011514:	bf28      	it	cs
90011516:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90011518:	2b00      	cmp	r3, #0
9001151a:	d052      	beq.n	900115c2 <xTaskIncrementTick.part.0+0x11e>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001151c:	683b      	ldr	r3, [r7, #0]
9001151e:	68db      	ldr	r3, [r3, #12]
90011520:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
90011522:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90011524:	f104 0b04 	add.w	fp, r4, #4
					if( xConstTickCount < xItemValue )
90011528:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9001152a:	4658      	mov	r0, fp
					if( xConstTickCount < xItemValue )
9001152c:	d2d5      	bcs.n	900114da <xTaskIncrementTick.part.0+0x36>
						xNextTaskUnblockTime = xItemValue;
9001152e:	9a01      	ldr	r2, [sp, #4]
90011530:	6013      	str	r3, [r2, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
90011532:	e011      	b.n	90011558 <xTaskIncrementTick.part.0+0xb4>
			taskSWITCH_DELAYED_LISTS();
90011534:	4b27      	ldr	r3, [pc, #156]	@ (900115d4 <xTaskIncrementTick.part.0+0x130>)
90011536:	681a      	ldr	r2, [r3, #0]
90011538:	6812      	ldr	r2, [r2, #0]
9001153a:	b30a      	cbz	r2, 90011580 <xTaskIncrementTick.part.0+0xdc>
9001153c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011540:	f383 8811 	msr	BASEPRI, r3
90011544:	f3bf 8f6f 	isb	sy
90011548:	f3bf 8f4f 	dsb	sy
9001154c:	e7fe      	b.n	9001154c <xTaskIncrementTick.part.0+0xa8>
BaseType_t xSwitchRequired = pdFALSE;
9001154e:	2500      	movs	r5, #0
90011550:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 900115e4 <xTaskIncrementTick.part.0+0x140>
90011554:	f8df a090 	ldr.w	sl, [pc, #144]	@ 900115e8 <xTaskIncrementTick.part.0+0x144>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
90011558:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
9001155c:	491e      	ldr	r1, [pc, #120]	@ (900115d8 <xTaskIncrementTick.part.0+0x134>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9001155e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011560:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90011564:	009b      	lsls	r3, r3, #2
90011566:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
9001156a:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
9001156c:	2a02      	cmp	r2, #2
9001156e:	bf28      	it	cs
90011570:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
90011572:	2b00      	cmp	r3, #0
}
90011574:	bf0c      	ite	eq
90011576:	4628      	moveq	r0, r5
90011578:	2001      	movne	r0, #1
9001157a:	b003      	add	sp, #12
9001157c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
90011580:	4a16      	ldr	r2, [pc, #88]	@ (900115dc <xTaskIncrementTick.part.0+0x138>)
90011582:	6818      	ldr	r0, [r3, #0]
90011584:	6811      	ldr	r1, [r2, #0]
90011586:	6019      	str	r1, [r3, #0]
90011588:	4915      	ldr	r1, [pc, #84]	@ (900115e0 <xTaskIncrementTick.part.0+0x13c>)
9001158a:	6010      	str	r0, [r2, #0]
9001158c:	680a      	ldr	r2, [r1, #0]
9001158e:	3201      	adds	r2, #1
90011590:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90011592:	681a      	ldr	r2, [r3, #0]
90011594:	6812      	ldr	r2, [r2, #0]
90011596:	b93a      	cbnz	r2, 900115a8 <xTaskIncrementTick.part.0+0x104>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
90011598:	4b0d      	ldr	r3, [pc, #52]	@ (900115d0 <xTaskIncrementTick.part.0+0x12c>)
9001159a:	461a      	mov	r2, r3
9001159c:	9301      	str	r3, [sp, #4]
9001159e:	f04f 33ff 	mov.w	r3, #4294967295
900115a2:	6013      	str	r3, [r2, #0]
900115a4:	4613      	mov	r3, r2
900115a6:	e788      	b.n	900114ba <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900115a8:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
900115aa:	4a09      	ldr	r2, [pc, #36]	@ (900115d0 <xTaskIncrementTick.part.0+0x12c>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900115ac:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
900115ae:	9201      	str	r2, [sp, #4]
900115b0:	68db      	ldr	r3, [r3, #12]
900115b2:	685b      	ldr	r3, [r3, #4]
900115b4:	6013      	str	r3, [r2, #0]
900115b6:	4613      	mov	r3, r2
	}
}
900115b8:	e77f      	b.n	900114ba <xTaskIncrementTick.part.0+0x16>
900115ba:	f8df 9028 	ldr.w	r9, [pc, #40]	@ 900115e4 <xTaskIncrementTick.part.0+0x140>
900115be:	f8df a028 	ldr.w	sl, [pc, #40]	@ 900115e8 <xTaskIncrementTick.part.0+0x144>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900115c2:	f04f 33ff 	mov.w	r3, #4294967295
900115c6:	9a01      	ldr	r2, [sp, #4]
900115c8:	6013      	str	r3, [r2, #0]
					break;
900115ca:	e7c5      	b.n	90011558 <xTaskIncrementTick.part.0+0xb4>
900115cc:	240215f8 	.word	0x240215f8
900115d0:	240215dc 	.word	0x240215dc
900115d4:	24021644 	.word	0x24021644
900115d8:	240215e8 	.word	0x240215e8
900115dc:	24021640 	.word	0x24021640
900115e0:	240215e4 	.word	0x240215e4
900115e4:	24021670 	.word	0x24021670
900115e8:	24021ad0 	.word	0x24021ad0
900115ec:	240215f4 	.word	0x240215f4

900115f0 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
900115f0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
900115f4:	4d42      	ldr	r5, [pc, #264]	@ (90011700 <xTaskResumeAll.part.0+0x110>)
	taskENTER_CRITICAL();
900115f6:	f7fe fc85 	bl	9000ff04 <vPortEnterCritical>
		--uxSchedulerSuspended;
900115fa:	682b      	ldr	r3, [r5, #0]
900115fc:	3b01      	subs	r3, #1
900115fe:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90011600:	682b      	ldr	r3, [r5, #0]
90011602:	2b00      	cmp	r3, #0
90011604:	d165      	bne.n	900116d2 <xTaskResumeAll.part.0+0xe2>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
90011606:	4b3f      	ldr	r3, [pc, #252]	@ (90011704 <xTaskResumeAll.part.0+0x114>)
90011608:	681b      	ldr	r3, [r3, #0]
9001160a:	2b00      	cmp	r3, #0
9001160c:	d061      	beq.n	900116d2 <xTaskResumeAll.part.0+0xe2>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9001160e:	4e3e      	ldr	r6, [pc, #248]	@ (90011708 <xTaskResumeAll.part.0+0x118>)
90011610:	6833      	ldr	r3, [r6, #0]
90011612:	2b00      	cmp	r3, #0
90011614:	d070      	beq.n	900116f8 <xTaskResumeAll.part.0+0x108>
90011616:	4f3d      	ldr	r7, [pc, #244]	@ (9001170c <xTaskResumeAll.part.0+0x11c>)
90011618:	f8df 9100 	ldr.w	r9, [pc, #256]	@ 9001171c <xTaskResumeAll.part.0+0x12c>
9001161c:	f8df 8100 	ldr.w	r8, [pc, #256]	@ 90011720 <xTaskResumeAll.part.0+0x130>
90011620:	f8df a100 	ldr.w	sl, [pc, #256]	@ 90011724 <xTaskResumeAll.part.0+0x134>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011624:	68f3      	ldr	r3, [r6, #12]
90011626:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90011628:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9001162c:	f104 0018 	add.w	r0, r4, #24
90011630:	f7fe fbe6 	bl	9000fe00 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90011634:	4658      	mov	r0, fp
90011636:	f7fe fbe3 	bl	9000fe00 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
9001163a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9001163c:	683a      	ldr	r2, [r7, #0]
9001163e:	4659      	mov	r1, fp
90011640:	eb03 0083 	add.w	r0, r3, r3, lsl #2
90011644:	4293      	cmp	r3, r2
90011646:	eb09 0080 	add.w	r0, r9, r0, lsl #2
9001164a:	d900      	bls.n	9001164e <xTaskResumeAll.part.0+0x5e>
9001164c:	603b      	str	r3, [r7, #0]
9001164e:	f7fe fbb1 	bl	9000fdb4 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
90011652:	f8d8 3000 	ldr.w	r3, [r8]
90011656:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90011658:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001165a:	429a      	cmp	r2, r3
9001165c:	d33f      	bcc.n	900116de <xTaskResumeAll.part.0+0xee>
						xYieldPending = pdTRUE;
9001165e:	2301      	movs	r3, #1
90011660:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
90011664:	6833      	ldr	r3, [r6, #0]
90011666:	2b00      	cmp	r3, #0
90011668:	d1dc      	bne.n	90011624 <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9001166a:	4b29      	ldr	r3, [pc, #164]	@ (90011710 <xTaskResumeAll.part.0+0x120>)
9001166c:	681a      	ldr	r2, [r3, #0]
9001166e:	6812      	ldr	r2, [r2, #0]
90011670:	2a00      	cmp	r2, #0
90011672:	d03c      	beq.n	900116ee <xTaskResumeAll.part.0+0xfe>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011674:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90011676:	4b27      	ldr	r3, [pc, #156]	@ (90011714 <xTaskResumeAll.part.0+0x124>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011678:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9001167a:	68d2      	ldr	r2, [r2, #12]
9001167c:	6852      	ldr	r2, [r2, #4]
9001167e:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
90011680:	4e25      	ldr	r6, [pc, #148]	@ (90011718 <xTaskResumeAll.part.0+0x128>)
90011682:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
90011684:	b194      	cbz	r4, 900116ac <xTaskResumeAll.part.0+0xbc>
								xYieldPending = pdTRUE;
90011686:	2701      	movs	r7, #1
90011688:	e006      	b.n	90011698 <xTaskResumeAll.part.0+0xa8>
9001168a:	f7ff ff0b 	bl	900114a4 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
9001168e:	b108      	cbz	r0, 90011694 <xTaskResumeAll.part.0+0xa4>
								xYieldPending = pdTRUE;
90011690:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
90011694:	3c01      	subs	r4, #1
90011696:	d008      	beq.n	900116aa <xTaskResumeAll.part.0+0xba>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90011698:	682b      	ldr	r3, [r5, #0]
9001169a:	2b00      	cmp	r3, #0
9001169c:	d0f5      	beq.n	9001168a <xTaskResumeAll.part.0+0x9a>
		++xPendedTicks;
9001169e:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
900116a0:	3c01      	subs	r4, #1
		++xPendedTicks;
900116a2:	f103 0301 	add.w	r3, r3, #1
900116a6:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
900116a8:	d1f6      	bne.n	90011698 <xTaskResumeAll.part.0+0xa8>
						xPendedTicks = 0;
900116aa:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
900116ac:	f8da 3000 	ldr.w	r3, [sl]
900116b0:	b17b      	cbz	r3, 900116d2 <xTaskResumeAll.part.0+0xe2>
					taskYIELD_IF_USING_PREEMPTION();
900116b2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
900116b6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
900116ba:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
900116be:	f3bf 8f4f 	dsb	sy
900116c2:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
900116c6:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
900116c8:	f7fe fc3e 	bl	9000ff48 <vPortExitCritical>
}
900116cc:	4620      	mov	r0, r4
900116ce:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
BaseType_t xAlreadyYielded = pdFALSE;
900116d2:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
900116d4:	f7fe fc38 	bl	9000ff48 <vPortExitCritical>
}
900116d8:	4620      	mov	r0, r4
900116da:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
900116de:	6833      	ldr	r3, [r6, #0]
900116e0:	2b00      	cmp	r3, #0
900116e2:	d19f      	bne.n	90011624 <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
900116e4:	4b0a      	ldr	r3, [pc, #40]	@ (90011710 <xTaskResumeAll.part.0+0x120>)
900116e6:	681a      	ldr	r2, [r3, #0]
900116e8:	6812      	ldr	r2, [r2, #0]
900116ea:	2a00      	cmp	r2, #0
900116ec:	d1c2      	bne.n	90011674 <xTaskResumeAll.part.0+0x84>
		xNextTaskUnblockTime = portMAX_DELAY;
900116ee:	4b09      	ldr	r3, [pc, #36]	@ (90011714 <xTaskResumeAll.part.0+0x124>)
900116f0:	f04f 32ff 	mov.w	r2, #4294967295
900116f4:	601a      	str	r2, [r3, #0]
900116f6:	e7c3      	b.n	90011680 <xTaskResumeAll.part.0+0x90>
900116f8:	f8df a028 	ldr.w	sl, [pc, #40]	@ 90011724 <xTaskResumeAll.part.0+0x134>
900116fc:	e7c0      	b.n	90011680 <xTaskResumeAll.part.0+0x90>
900116fe:	bf00      	nop
90011700:	240215d8 	.word	0x240215d8
90011704:	240215fc 	.word	0x240215fc
90011708:	2402162c 	.word	0x2402162c
9001170c:	240215f4 	.word	0x240215f4
90011710:	24021644 	.word	0x24021644
90011714:	240215dc 	.word	0x240215dc
90011718:	240215ec 	.word	0x240215ec
9001171c:	24021670 	.word	0x24021670
90011720:	24021ad0 	.word	0x24021ad0
90011724:	240215e8 	.word	0x240215e8

90011728 <xTaskCreateStatic>:
	{
90011728:	b530      	push	{r4, r5, lr}
9001172a:	b087      	sub	sp, #28
9001172c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
9001172e:	b1c4      	cbz	r4, 90011762 <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
90011730:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90011732:	b16d      	cbz	r5, 90011750 <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
90011734:	25ac      	movs	r5, #172	@ 0xac
90011736:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
90011738:	9d05      	ldr	r5, [sp, #20]
9001173a:	2dac      	cmp	r5, #172	@ 0xac
9001173c:	d01a      	beq.n	90011774 <xTaskCreateStatic+0x4c>
9001173e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011742:	f383 8811 	msr	BASEPRI, r3
90011746:	f3bf 8f6f 	isb	sy
9001174a:	f3bf 8f4f 	dsb	sy
9001174e:	e7fe      	b.n	9001174e <xTaskCreateStatic+0x26>
90011750:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011754:	f383 8811 	msr	BASEPRI, r3
90011758:	f3bf 8f6f 	isb	sy
9001175c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
90011760:	e7fe      	b.n	90011760 <xTaskCreateStatic+0x38>
90011762:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011766:	f383 8811 	msr	BASEPRI, r3
9001176a:	f3bf 8f6f 	isb	sy
9001176e:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
90011772:	e7fe      	b.n	90011772 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
90011774:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90011776:	632c      	str	r4, [r5, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90011778:	2402      	movs	r4, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
9001177a:	9502      	str	r5, [sp, #8]
9001177c:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
9001177e:	9500      	str	r5, [sp, #0]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90011780:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90011782:	f885 40a9 	strb.w	r4, [r5, #169]	@ 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
90011786:	ac04      	add	r4, sp, #16
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
90011788:	9d05      	ldr	r5, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
9001178a:	9401      	str	r4, [sp, #4]
9001178c:	f7ff fda8 	bl	900112e0 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
90011790:	980c      	ldr	r0, [sp, #48]	@ 0x30
90011792:	f7ff fd1f 	bl	900111d4 <prvAddNewTaskToReadyList>
	}
90011796:	9804      	ldr	r0, [sp, #16]
90011798:	b007      	add	sp, #28
9001179a:	bd30      	pop	{r4, r5, pc}

9001179c <xTaskCreate>:
	{
9001179c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900117a0:	4607      	mov	r7, r0
900117a2:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
900117a4:	0090      	lsls	r0, r2, #2
	{
900117a6:	4615      	mov	r5, r2
900117a8:	4688      	mov	r8, r1
900117aa:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
900117ac:	f7fe f9ca 	bl	9000fb44 <pvPortMalloc>
			if( pxStack != NULL )
900117b0:	b1f0      	cbz	r0, 900117f0 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
900117b2:	4604      	mov	r4, r0
900117b4:	20ac      	movs	r0, #172	@ 0xac
900117b6:	f7fe f9c5 	bl	9000fb44 <pvPortMalloc>
				if( pxNewTCB != NULL )
900117ba:	4606      	mov	r6, r0
900117bc:	b1a8      	cbz	r0, 900117ea <xTaskCreate+0x4e>
					pxNewTCB->pxStack = pxStack;
900117be:	6304      	str	r4, [r0, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
900117c0:	2400      	movs	r4, #0
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
900117c2:	464b      	mov	r3, r9
900117c4:	462a      	mov	r2, r5
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
900117c6:	f886 40a9 	strb.w	r4, [r6, #169]	@ 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
900117ca:	4641      	mov	r1, r8
900117cc:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900117ce:	4638      	mov	r0, r7
900117d0:	9602      	str	r6, [sp, #8]
900117d2:	9401      	str	r4, [sp, #4]
900117d4:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
900117d6:	9400      	str	r4, [sp, #0]
900117d8:	f7ff fd82 	bl	900112e0 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
900117dc:	4630      	mov	r0, r6
900117de:	f7ff fcf9 	bl	900111d4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
900117e2:	2001      	movs	r0, #1
	}
900117e4:	b005      	add	sp, #20
900117e6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
900117ea:	4620      	mov	r0, r4
900117ec:	f7fe fa68 	bl	9000fcc0 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
900117f0:	f04f 30ff 	mov.w	r0, #4294967295
	}
900117f4:	b005      	add	sp, #20
900117f6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900117fa:	bf00      	nop

900117fc <vTaskDelete>:
	{
900117fc:	b570      	push	{r4, r5, r6, lr}
900117fe:	4604      	mov	r4, r0
			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
90011800:	4d38      	ldr	r5, [pc, #224]	@ (900118e4 <vTaskDelete+0xe8>)
		taskENTER_CRITICAL();
90011802:	f7fe fb7f 	bl	9000ff04 <vPortEnterCritical>
			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
90011806:	2c00      	cmp	r4, #0
90011808:	d048      	beq.n	9001189c <vTaskDelete+0xa0>
			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9001180a:	1d26      	adds	r6, r4, #4
9001180c:	4630      	mov	r0, r6
9001180e:	f7fe faf7 	bl	9000fe00 <uxListRemove>
			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
90011812:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90011814:	b11b      	cbz	r3, 9001181e <vTaskDelete+0x22>
				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
90011816:	f104 0018 	add.w	r0, r4, #24
9001181a:	f7fe faf1 	bl	9000fe00 <uxListRemove>
			uxTaskNumber++;
9001181e:	4a32      	ldr	r2, [pc, #200]	@ (900118e8 <vTaskDelete+0xec>)
90011820:	6813      	ldr	r3, [r2, #0]
90011822:	3301      	adds	r3, #1
90011824:	6013      	str	r3, [r2, #0]
			if( pxTCB == pxCurrentTCB )
90011826:	682b      	ldr	r3, [r5, #0]
90011828:	42a3      	cmp	r3, r4
9001182a:	d02e      	beq.n	9001188a <vTaskDelete+0x8e>
				--uxCurrentNumberOfTasks;
9001182c:	4a2f      	ldr	r2, [pc, #188]	@ (900118ec <vTaskDelete+0xf0>)
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
9001182e:	f104 0058 	add.w	r0, r4, #88	@ 0x58
				--uxCurrentNumberOfTasks;
90011832:	6813      	ldr	r3, [r2, #0]
90011834:	3b01      	subs	r3, #1
90011836:	6013      	str	r3, [r2, #0]
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
90011838:	f01c f8d4 	bl	9002d9e4 <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
9001183c:	f894 30a9 	ldrb.w	r3, [r4, #169]	@ 0xa9
90011840:	b163      	cbz	r3, 9001185c <vTaskDelete+0x60>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
90011842:	2b01      	cmp	r3, #1
90011844:	d03f      	beq.n	900118c6 <vTaskDelete+0xca>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
90011846:	2b02      	cmp	r3, #2
90011848:	d00e      	beq.n	90011868 <vTaskDelete+0x6c>
9001184a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001184e:	f383 8811 	msr	BASEPRI, r3
90011852:	f3bf 8f6f 	isb	sy
90011856:	f3bf 8f4f 	dsb	sy
9001185a:	e7fe      	b.n	9001185a <vTaskDelete+0x5e>
				vPortFree( pxTCB->pxStack );
9001185c:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9001185e:	f7fe fa2f 	bl	9000fcc0 <vPortFree>
				vPortFree( pxTCB );
90011862:	4620      	mov	r0, r4
90011864:	f7fe fa2c 	bl	9000fcc0 <vPortFree>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90011868:	4b21      	ldr	r3, [pc, #132]	@ (900118f0 <vTaskDelete+0xf4>)
9001186a:	681a      	ldr	r2, [r3, #0]
9001186c:	6812      	ldr	r2, [r2, #0]
9001186e:	b9ba      	cbnz	r2, 900118a0 <vTaskDelete+0xa4>
		xNextTaskUnblockTime = portMAX_DELAY;
90011870:	4b20      	ldr	r3, [pc, #128]	@ (900118f4 <vTaskDelete+0xf8>)
90011872:	f04f 32ff 	mov.w	r2, #4294967295
90011876:	601a      	str	r2, [r3, #0]
		taskEXIT_CRITICAL();
90011878:	f7fe fb66 	bl	9000ff48 <vPortExitCritical>
		if( xSchedulerRunning != pdFALSE )
9001187c:	4b1e      	ldr	r3, [pc, #120]	@ (900118f8 <vTaskDelete+0xfc>)
9001187e:	681b      	ldr	r3, [r3, #0]
90011880:	b113      	cbz	r3, 90011888 <vTaskDelete+0x8c>
			if( pxTCB == pxCurrentTCB )
90011882:	682b      	ldr	r3, [r5, #0]
90011884:	42a3      	cmp	r3, r4
90011886:	d012      	beq.n	900118ae <vTaskDelete+0xb2>
	}
90011888:	bd70      	pop	{r4, r5, r6, pc}
				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
9001188a:	4631      	mov	r1, r6
9001188c:	481b      	ldr	r0, [pc, #108]	@ (900118fc <vTaskDelete+0x100>)
9001188e:	f7fe fa91 	bl	9000fdb4 <vListInsertEnd>
				++uxDeletedTasksWaitingCleanUp;
90011892:	4a1b      	ldr	r2, [pc, #108]	@ (90011900 <vTaskDelete+0x104>)
90011894:	6813      	ldr	r3, [r2, #0]
90011896:	3301      	adds	r3, #1
90011898:	6013      	str	r3, [r2, #0]
				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
9001189a:	e7ed      	b.n	90011878 <vTaskDelete+0x7c>
			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
9001189c:	682c      	ldr	r4, [r5, #0]
9001189e:	e7b4      	b.n	9001180a <vTaskDelete+0xe>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900118a0:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
900118a2:	4b14      	ldr	r3, [pc, #80]	@ (900118f4 <vTaskDelete+0xf8>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900118a4:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
900118a6:	68d2      	ldr	r2, [r2, #12]
900118a8:	6852      	ldr	r2, [r2, #4]
900118aa:	601a      	str	r2, [r3, #0]
}
900118ac:	e7e4      	b.n	90011878 <vTaskDelete+0x7c>
				configASSERT( uxSchedulerSuspended == 0 );
900118ae:	4b15      	ldr	r3, [pc, #84]	@ (90011904 <vTaskDelete+0x108>)
900118b0:	681b      	ldr	r3, [r3, #0]
900118b2:	b163      	cbz	r3, 900118ce <vTaskDelete+0xd2>
900118b4:	f04f 0350 	mov.w	r3, #80	@ 0x50
900118b8:	f383 8811 	msr	BASEPRI, r3
900118bc:	f3bf 8f6f 	isb	sy
900118c0:	f3bf 8f4f 	dsb	sy
900118c4:	e7fe      	b.n	900118c4 <vTaskDelete+0xc8>
				vPortFree( pxTCB );
900118c6:	4620      	mov	r0, r4
900118c8:	f7fe f9fa 	bl	9000fcc0 <vPortFree>
900118cc:	e7cc      	b.n	90011868 <vTaskDelete+0x6c>
				portYIELD_WITHIN_API();
900118ce:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
900118d2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
900118d6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
900118da:	f3bf 8f4f 	dsb	sy
900118de:	f3bf 8f6f 	isb	sy
	}
900118e2:	bd70      	pop	{r4, r5, r6, pc}
900118e4:	24021ad0 	.word	0x24021ad0
900118e8:	240215e0 	.word	0x240215e0
900118ec:	240215fc 	.word	0x240215fc
900118f0:	24021644 	.word	0x24021644
900118f4:	240215dc 	.word	0x240215dc
900118f8:	240215f0 	.word	0x240215f0
900118fc:	24021618 	.word	0x24021618
90011900:	24021614 	.word	0x24021614
90011904:	240215d8 	.word	0x240215d8

90011908 <vTaskDelay>:
	{
90011908:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
9001190a:	b950      	cbnz	r0, 90011922 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
9001190c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90011910:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90011914:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90011918:	f3bf 8f4f 	dsb	sy
9001191c:	f3bf 8f6f 	isb	sy
	}
90011920:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
90011922:	4d1e      	ldr	r5, [pc, #120]	@ (9001199c <vTaskDelay+0x94>)
90011924:	682b      	ldr	r3, [r5, #0]
90011926:	b143      	cbz	r3, 9001193a <vTaskDelay+0x32>
90011928:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001192c:	f383 8811 	msr	BASEPRI, r3
90011930:	f3bf 8f6f 	isb	sy
90011934:	f3bf 8f4f 	dsb	sy
90011938:	e7fe      	b.n	90011938 <vTaskDelay+0x30>
	++uxSchedulerSuspended;
9001193a:	682b      	ldr	r3, [r5, #0]
9001193c:	4604      	mov	r4, r0
9001193e:	3301      	adds	r3, #1
90011940:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
90011942:	4b17      	ldr	r3, [pc, #92]	@ (900119a0 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011944:	4e17      	ldr	r6, [pc, #92]	@ (900119a4 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
90011946:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011948:	6830      	ldr	r0, [r6, #0]
9001194a:	3004      	adds	r0, #4
9001194c:	f7fe fa58 	bl	9000fe00 <uxListRemove>
		else
		{
			/* Calculate the time at which the task should be woken if the event
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;
90011950:	19e4      	adds	r4, r4, r7

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
90011952:	6833      	ldr	r3, [r6, #0]
90011954:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
90011956:	d315      	bcc.n	90011984 <vTaskDelay+0x7c>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011958:	4b13      	ldr	r3, [pc, #76]	@ (900119a8 <vTaskDelay+0xa0>)
9001195a:	6818      	ldr	r0, [r3, #0]
9001195c:	6831      	ldr	r1, [r6, #0]
9001195e:	3104      	adds	r1, #4
90011960:	f7fe fa36 	bl	9000fdd0 <vListInsert>
	configASSERT( uxSchedulerSuspended );
90011964:	682b      	ldr	r3, [r5, #0]
90011966:	b943      	cbnz	r3, 9001197a <vTaskDelay+0x72>
90011968:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001196c:	f383 8811 	msr	BASEPRI, r3
90011970:	f3bf 8f6f 	isb	sy
90011974:	f3bf 8f4f 	dsb	sy
90011978:	e7fe      	b.n	90011978 <vTaskDelay+0x70>
9001197a:	f7ff fe39 	bl	900115f0 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
9001197e:	2800      	cmp	r0, #0
90011980:	d0c4      	beq.n	9001190c <vTaskDelay+0x4>
	}
90011982:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011984:	4b09      	ldr	r3, [pc, #36]	@ (900119ac <vTaskDelay+0xa4>)
90011986:	6818      	ldr	r0, [r3, #0]
90011988:	6831      	ldr	r1, [r6, #0]
9001198a:	3104      	adds	r1, #4
9001198c:	f7fe fa20 	bl	9000fdd0 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
90011990:	4b07      	ldr	r3, [pc, #28]	@ (900119b0 <vTaskDelay+0xa8>)
90011992:	681a      	ldr	r2, [r3, #0]
90011994:	4294      	cmp	r4, r2
90011996:	d2e5      	bcs.n	90011964 <vTaskDelay+0x5c>
				{
					xNextTaskUnblockTime = xTimeToWake;
90011998:	601c      	str	r4, [r3, #0]
9001199a:	e7e3      	b.n	90011964 <vTaskDelay+0x5c>
9001199c:	240215d8 	.word	0x240215d8
900119a0:	240215f8 	.word	0x240215f8
900119a4:	24021ad0 	.word	0x24021ad0
900119a8:	24021640 	.word	0x24021640
900119ac:	24021644 	.word	0x24021644
900119b0:	240215dc 	.word	0x240215dc

900119b4 <vTaskStartScheduler>:
{
900119b4:	b530      	push	{r4, r5, lr}
900119b6:	b08b      	sub	sp, #44	@ 0x2c
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
900119b8:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
900119ba:	aa07      	add	r2, sp, #28
900119bc:	a906      	add	r1, sp, #24
900119be:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
900119c0:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
900119c4:	f7fe f8a0 	bl	9000fb08 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
900119c8:	9d05      	ldr	r5, [sp, #20]
900119ca:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
		configASSERT( puxStackBuffer != NULL );
900119ce:	b1bb      	cbz	r3, 90011a00 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
900119d0:	b16d      	cbz	r5, 900119ee <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
900119d2:	21ac      	movs	r1, #172	@ 0xac
900119d4:	9109      	str	r1, [sp, #36]	@ 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
900119d6:	9909      	ldr	r1, [sp, #36]	@ 0x24
900119d8:	29ac      	cmp	r1, #172	@ 0xac
900119da:	d01a      	beq.n	90011a12 <vTaskStartScheduler+0x5e>
900119dc:	f04f 0350 	mov.w	r3, #80	@ 0x50
900119e0:	f383 8811 	msr	BASEPRI, r3
900119e4:	f3bf 8f6f 	isb	sy
900119e8:	f3bf 8f4f 	dsb	sy
900119ec:	e7fe      	b.n	900119ec <vTaskStartScheduler+0x38>
900119ee:	f04f 0350 	mov.w	r3, #80	@ 0x50
900119f2:	f383 8811 	msr	BASEPRI, r3
900119f6:	f3bf 8f6f 	isb	sy
900119fa:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
900119fe:	e7fe      	b.n	900119fe <vTaskStartScheduler+0x4a>
90011a00:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011a04:	f383 8811 	msr	BASEPRI, r3
90011a08:	f3bf 8f6f 	isb	sy
90011a0c:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
90011a10:	e7fe      	b.n	90011a10 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90011a12:	2102      	movs	r1, #2
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
90011a14:	632b      	str	r3, [r5, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
90011a16:	4822      	ldr	r0, [pc, #136]	@ (90011aa0 <vTaskStartScheduler+0xec>)
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90011a18:	f885 10a9 	strb.w	r1, [r5, #169]	@ 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
90011a1c:	a908      	add	r1, sp, #32
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
90011a1e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
90011a20:	4623      	mov	r3, r4
90011a22:	9400      	str	r4, [sp, #0]
90011a24:	e9cd 1501 	strd	r1, r5, [sp, #4]
90011a28:	491e      	ldr	r1, [pc, #120]	@ (90011aa4 <vTaskStartScheduler+0xf0>)
90011a2a:	f7ff fc59 	bl	900112e0 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
90011a2e:	4628      	mov	r0, r5
90011a30:	f7ff fbd0 	bl	900111d4 <prvAddNewTaskToReadyList>
		return xReturn;
90011a34:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
90011a36:	b17b      	cbz	r3, 90011a58 <vTaskStartScheduler+0xa4>
			xReturn = xTimerCreateTimerTask();
90011a38:	f000 fc90 	bl	9001235c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
90011a3c:	2801      	cmp	r0, #1
			xReturn = xTimerCreateTimerTask();
90011a3e:	4603      	mov	r3, r0
	if( xReturn == pdPASS )
90011a40:	d00c      	beq.n	90011a5c <vTaskStartScheduler+0xa8>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
90011a42:	3301      	adds	r3, #1
90011a44:	d108      	bne.n	90011a58 <vTaskStartScheduler+0xa4>
90011a46:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011a4a:	f383 8811 	msr	BASEPRI, r3
90011a4e:	f3bf 8f6f 	isb	sy
90011a52:	f3bf 8f4f 	dsb	sy
90011a56:	e7fe      	b.n	90011a56 <vTaskStartScheduler+0xa2>
}
90011a58:	b00b      	add	sp, #44	@ 0x2c
90011a5a:	bd30      	pop	{r4, r5, pc}
90011a5c:	f04f 0250 	mov.w	r2, #80	@ 0x50
90011a60:	f382 8811 	msr	BASEPRI, r2
90011a64:	f3bf 8f6f 	isb	sy
90011a68:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
90011a6c:	4a0e      	ldr	r2, [pc, #56]	@ (90011aa8 <vTaskStartScheduler+0xf4>)
90011a6e:	480f      	ldr	r0, [pc, #60]	@ (90011aac <vTaskStartScheduler+0xf8>)
90011a70:	6811      	ldr	r1, [r2, #0]
90011a72:	3158      	adds	r1, #88	@ 0x58
90011a74:	6001      	str	r1, [r0, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
90011a76:	f04f 30ff 	mov.w	r0, #4294967295
90011a7a:	490d      	ldr	r1, [pc, #52]	@ (90011ab0 <vTaskStartScheduler+0xfc>)
90011a7c:	6008      	str	r0, [r1, #0]
		xSchedulerRunning = pdTRUE;
90011a7e:	480d      	ldr	r0, [pc, #52]	@ (90011ab4 <vTaskStartScheduler+0x100>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
90011a80:	490d      	ldr	r1, [pc, #52]	@ (90011ab8 <vTaskStartScheduler+0x104>)
		xSchedulerRunning = pdTRUE;
90011a82:	6003      	str	r3, [r0, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
90011a84:	600c      	str	r4, [r1, #0]
		traceTASK_SWITCHED_IN();
90011a86:	6813      	ldr	r3, [r2, #0]
		if( xTask == NULL )
90011a88:	b143      	cbz	r3, 90011a9c <vTaskStartScheduler+0xe8>
		if( xTCB->pxTaskTag != NULL )
90011a8a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90011a8c:	b10b      	cbz	r3, 90011a92 <vTaskStartScheduler+0xde>
			xReturn = xTCB->pxTaskTag( pvParameter );
90011a8e:	2000      	movs	r0, #0
90011a90:	4798      	blx	r3
}
90011a92:	b00b      	add	sp, #44	@ 0x2c
90011a94:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
90011a98:	f7fe bac6 	b.w	90010028 <xPortStartScheduler>
			xTCB = pxCurrentTCB;
90011a9c:	6813      	ldr	r3, [r2, #0]
90011a9e:	e7f4      	b.n	90011a8a <vTaskStartScheduler+0xd6>
90011aa0:	90011401 	.word	0x90011401
90011aa4:	90030304 	.word	0x90030304
90011aa8:	24021ad0 	.word	0x24021ad0
90011aac:	24000114 	.word	0x24000114
90011ab0:	240215dc 	.word	0x240215dc
90011ab4:	240215f0 	.word	0x240215f0
90011ab8:	240215f8 	.word	0x240215f8

90011abc <vTaskSuspendAll>:
	++uxSchedulerSuspended;
90011abc:	4a02      	ldr	r2, [pc, #8]	@ (90011ac8 <vTaskSuspendAll+0xc>)
90011abe:	6813      	ldr	r3, [r2, #0]
90011ac0:	3301      	adds	r3, #1
90011ac2:	6013      	str	r3, [r2, #0]
}
90011ac4:	4770      	bx	lr
90011ac6:	bf00      	nop
90011ac8:	240215d8 	.word	0x240215d8

90011acc <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
90011acc:	4b06      	ldr	r3, [pc, #24]	@ (90011ae8 <xTaskResumeAll+0x1c>)
90011ace:	681b      	ldr	r3, [r3, #0]
90011ad0:	b943      	cbnz	r3, 90011ae4 <xTaskResumeAll+0x18>
90011ad2:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011ad6:	f383 8811 	msr	BASEPRI, r3
90011ada:	f3bf 8f6f 	isb	sy
90011ade:	f3bf 8f4f 	dsb	sy
90011ae2:	e7fe      	b.n	90011ae2 <xTaskResumeAll+0x16>
90011ae4:	f7ff bd84 	b.w	900115f0 <xTaskResumeAll.part.0>
90011ae8:	240215d8 	.word	0x240215d8

90011aec <xTaskGetTickCount>:
		xTicks = xTickCount;
90011aec:	4b01      	ldr	r3, [pc, #4]	@ (90011af4 <xTaskGetTickCount+0x8>)
90011aee:	6818      	ldr	r0, [r3, #0]
}
90011af0:	4770      	bx	lr
90011af2:	bf00      	nop
90011af4:	240215f8 	.word	0x240215f8

90011af8 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90011af8:	4b05      	ldr	r3, [pc, #20]	@ (90011b10 <xTaskIncrementTick+0x18>)
90011afa:	681b      	ldr	r3, [r3, #0]
90011afc:	b90b      	cbnz	r3, 90011b02 <xTaskIncrementTick+0xa>
90011afe:	f7ff bcd1 	b.w	900114a4 <xTaskIncrementTick.part.0>
		++xPendedTicks;
90011b02:	4a04      	ldr	r2, [pc, #16]	@ (90011b14 <xTaskIncrementTick+0x1c>)
}
90011b04:	2000      	movs	r0, #0
		++xPendedTicks;
90011b06:	6813      	ldr	r3, [r2, #0]
90011b08:	3301      	adds	r3, #1
90011b0a:	6013      	str	r3, [r2, #0]
}
90011b0c:	4770      	bx	lr
90011b0e:	bf00      	nop
90011b10:	240215d8 	.word	0x240215d8
90011b14:	240215ec 	.word	0x240215ec

90011b18 <vTaskSetApplicationTaskTag>:
	{
90011b18:	b538      	push	{r3, r4, r5, lr}
90011b1a:	460d      	mov	r5, r1
		if( xTask == NULL )
90011b1c:	b138      	cbz	r0, 90011b2e <vTaskSetApplicationTaskTag+0x16>
90011b1e:	4604      	mov	r4, r0
		taskENTER_CRITICAL();
90011b20:	f7fe f9f0 	bl	9000ff04 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
90011b24:	6565      	str	r5, [r4, #84]	@ 0x54
	}
90011b26:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
90011b2a:	f7fe ba0d 	b.w	9000ff48 <vPortExitCritical>
			xTCB = ( TCB_t * ) pxCurrentTCB;
90011b2e:	4b04      	ldr	r3, [pc, #16]	@ (90011b40 <vTaskSetApplicationTaskTag+0x28>)
90011b30:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
90011b32:	f7fe f9e7 	bl	9000ff04 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
90011b36:	6565      	str	r5, [r4, #84]	@ 0x54
	}
90011b38:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
90011b3c:	f7fe ba04 	b.w	9000ff48 <vPortExitCritical>
90011b40:	24021ad0 	.word	0x24021ad0

90011b44 <vTaskSwitchContext>:
{
90011b44:	b538      	push	{r3, r4, r5, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
90011b46:	4b28      	ldr	r3, [pc, #160]	@ (90011be8 <vTaskSwitchContext+0xa4>)
90011b48:	681b      	ldr	r3, [r3, #0]
90011b4a:	b11b      	cbz	r3, 90011b54 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
90011b4c:	4b27      	ldr	r3, [pc, #156]	@ (90011bec <vTaskSwitchContext+0xa8>)
90011b4e:	2201      	movs	r2, #1
90011b50:	601a      	str	r2, [r3, #0]
}
90011b52:	bd38      	pop	{r3, r4, r5, pc}
		xYieldPending = pdFALSE;
90011b54:	4a25      	ldr	r2, [pc, #148]	@ (90011bec <vTaskSwitchContext+0xa8>)
		traceTASK_SWITCHED_OUT();
90011b56:	4c26      	ldr	r4, [pc, #152]	@ (90011bf0 <vTaskSwitchContext+0xac>)
		xYieldPending = pdFALSE;
90011b58:	6013      	str	r3, [r2, #0]
		traceTASK_SWITCHED_OUT();
90011b5a:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
90011b5c:	2b00      	cmp	r3, #0
90011b5e:	d038      	beq.n	90011bd2 <vTaskSwitchContext+0x8e>
		if( xTCB->pxTaskTag != NULL )
90011b60:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90011b62:	b10b      	cbz	r3, 90011b68 <vTaskSwitchContext+0x24>
			xReturn = xTCB->pxTaskTag( pvParameter );
90011b64:	2001      	movs	r0, #1
90011b66:	4798      	blx	r3
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011b68:	4d22      	ldr	r5, [pc, #136]	@ (90011bf4 <vTaskSwitchContext+0xb0>)
90011b6a:	4923      	ldr	r1, [pc, #140]	@ (90011bf8 <vTaskSwitchContext+0xb4>)
90011b6c:	682b      	ldr	r3, [r5, #0]
90011b6e:	eb03 0283 	add.w	r2, r3, r3, lsl #2
90011b72:	0098      	lsls	r0, r3, #2
90011b74:	0092      	lsls	r2, r2, #2
90011b76:	588a      	ldr	r2, [r1, r2]
90011b78:	b942      	cbnz	r2, 90011b8c <vTaskSwitchContext+0x48>
90011b7a:	b30b      	cbz	r3, 90011bc0 <vTaskSwitchContext+0x7c>
90011b7c:	3b01      	subs	r3, #1
90011b7e:	eb03 0283 	add.w	r2, r3, r3, lsl #2
90011b82:	0098      	lsls	r0, r3, #2
90011b84:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
90011b88:	2a00      	cmp	r2, #0
90011b8a:	d0f6      	beq.n	90011b7a <vTaskSwitchContext+0x36>
90011b8c:	4418      	add	r0, r3
90011b8e:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
90011b92:	f8dc 1004 	ldr.w	r1, [ip, #4]
90011b96:	4662      	mov	r2, ip
90011b98:	6849      	ldr	r1, [r1, #4]
90011b9a:	3208      	adds	r2, #8
90011b9c:	4291      	cmp	r1, r2
90011b9e:	f8cc 1004 	str.w	r1, [ip, #4]
90011ba2:	d01d      	beq.n	90011be0 <vTaskSwitchContext+0x9c>
90011ba4:	68ca      	ldr	r2, [r1, #12]
90011ba6:	6022      	str	r2, [r4, #0]
90011ba8:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
90011baa:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
90011bac:	b1b3      	cbz	r3, 90011bdc <vTaskSwitchContext+0x98>
		if( xTCB->pxTaskTag != NULL )
90011bae:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90011bb0:	b10b      	cbz	r3, 90011bb6 <vTaskSwitchContext+0x72>
			xReturn = xTCB->pxTaskTag( pvParameter );
90011bb2:	2000      	movs	r0, #0
90011bb4:	4798      	blx	r3
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
90011bb6:	6823      	ldr	r3, [r4, #0]
90011bb8:	4a10      	ldr	r2, [pc, #64]	@ (90011bfc <vTaskSwitchContext+0xb8>)
90011bba:	3358      	adds	r3, #88	@ 0x58
90011bbc:	6013      	str	r3, [r2, #0]
}
90011bbe:	bd38      	pop	{r3, r4, r5, pc}
90011bc0:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011bc4:	f383 8811 	msr	BASEPRI, r3
90011bc8:	f3bf 8f6f 	isb	sy
90011bcc:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011bd0:	e7fe      	b.n	90011bd0 <vTaskSwitchContext+0x8c>
			xTCB = pxCurrentTCB;
90011bd2:	6823      	ldr	r3, [r4, #0]
		if( xTCB->pxTaskTag != NULL )
90011bd4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90011bd6:	2b00      	cmp	r3, #0
90011bd8:	d1c4      	bne.n	90011b64 <vTaskSwitchContext+0x20>
90011bda:	e7c5      	b.n	90011b68 <vTaskSwitchContext+0x24>
			xTCB = pxCurrentTCB;
90011bdc:	6823      	ldr	r3, [r4, #0]
90011bde:	e7e6      	b.n	90011bae <vTaskSwitchContext+0x6a>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011be0:	6849      	ldr	r1, [r1, #4]
90011be2:	f8cc 1004 	str.w	r1, [ip, #4]
90011be6:	e7dd      	b.n	90011ba4 <vTaskSwitchContext+0x60>
90011be8:	240215d8 	.word	0x240215d8
90011bec:	240215e8 	.word	0x240215e8
90011bf0:	24021ad0 	.word	0x24021ad0
90011bf4:	240215f4 	.word	0x240215f4
90011bf8:	24021670 	.word	0x24021670
90011bfc:	24000114 	.word	0x24000114

90011c00 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
90011c00:	b1f0      	cbz	r0, 90011c40 <vTaskPlaceOnEventList+0x40>
{
90011c02:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
90011c04:	4d1a      	ldr	r5, [pc, #104]	@ (90011c70 <vTaskPlaceOnEventList+0x70>)
90011c06:	460c      	mov	r4, r1
90011c08:	6829      	ldr	r1, [r5, #0]
90011c0a:	3118      	adds	r1, #24
90011c0c:	f7fe f8e0 	bl	9000fdd0 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
90011c10:	4b18      	ldr	r3, [pc, #96]	@ (90011c74 <vTaskPlaceOnEventList+0x74>)
90011c12:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011c14:	6828      	ldr	r0, [r5, #0]
90011c16:	3004      	adds	r0, #4
90011c18:	f7fe f8f2 	bl	9000fe00 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
90011c1c:	1c63      	adds	r3, r4, #1
90011c1e:	d020      	beq.n	90011c62 <vTaskPlaceOnEventList+0x62>
			xTimeToWake = xConstTickCount + xTicksToWait;
90011c20:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
90011c22:	682b      	ldr	r3, [r5, #0]
90011c24:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
90011c26:	d214      	bcs.n	90011c52 <vTaskPlaceOnEventList+0x52>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011c28:	4b13      	ldr	r3, [pc, #76]	@ (90011c78 <vTaskPlaceOnEventList+0x78>)
90011c2a:	6818      	ldr	r0, [r3, #0]
90011c2c:	6829      	ldr	r1, [r5, #0]
90011c2e:	3104      	adds	r1, #4
90011c30:	f7fe f8ce 	bl	9000fdd0 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
90011c34:	4b11      	ldr	r3, [pc, #68]	@ (90011c7c <vTaskPlaceOnEventList+0x7c>)
90011c36:	681a      	ldr	r2, [r3, #0]
90011c38:	4294      	cmp	r4, r2
90011c3a:	d200      	bcs.n	90011c3e <vTaskPlaceOnEventList+0x3e>
					xNextTaskUnblockTime = xTimeToWake;
90011c3c:	601c      	str	r4, [r3, #0]
}
90011c3e:	bd70      	pop	{r4, r5, r6, pc}
90011c40:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011c44:	f383 8811 	msr	BASEPRI, r3
90011c48:	f3bf 8f6f 	isb	sy
90011c4c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
90011c50:	e7fe      	b.n	90011c50 <vTaskPlaceOnEventList+0x50>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011c52:	4b0b      	ldr	r3, [pc, #44]	@ (90011c80 <vTaskPlaceOnEventList+0x80>)
90011c54:	6818      	ldr	r0, [r3, #0]
90011c56:	6829      	ldr	r1, [r5, #0]
}
90011c58:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011c5c:	3104      	adds	r1, #4
90011c5e:	f7fe b8b7 	b.w	9000fdd0 <vListInsert>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011c62:	6829      	ldr	r1, [r5, #0]
90011c64:	4807      	ldr	r0, [pc, #28]	@ (90011c84 <vTaskPlaceOnEventList+0x84>)
90011c66:	3104      	adds	r1, #4
}
90011c68:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011c6c:	f7fe b8a2 	b.w	9000fdb4 <vListInsertEnd>
90011c70:	24021ad0 	.word	0x24021ad0
90011c74:	240215f8 	.word	0x240215f8
90011c78:	24021644 	.word	0x24021644
90011c7c:	240215dc 	.word	0x240215dc
90011c80:	24021640 	.word	0x24021640
90011c84:	24021600 	.word	0x24021600

90011c88 <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
90011c88:	b350      	cbz	r0, 90011ce0 <vTaskPlaceOnEventListRestricted+0x58>
	{
90011c8a:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
90011c8c:	4e1d      	ldr	r6, [pc, #116]	@ (90011d04 <vTaskPlaceOnEventListRestricted+0x7c>)
90011c8e:	460c      	mov	r4, r1
90011c90:	4615      	mov	r5, r2
90011c92:	6831      	ldr	r1, [r6, #0]
90011c94:	3118      	adds	r1, #24
90011c96:	f7fe f88d 	bl	9000fdb4 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
90011c9a:	4b1b      	ldr	r3, [pc, #108]	@ (90011d08 <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
90011c9c:	b15d      	cbz	r5, 90011cb6 <vTaskPlaceOnEventListRestricted+0x2e>
const TickType_t xConstTickCount = xTickCount;
90011c9e:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011ca0:	6830      	ldr	r0, [r6, #0]
90011ca2:	3004      	adds	r0, #4
90011ca4:	f7fe f8ac 	bl	9000fe00 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011ca8:	6831      	ldr	r1, [r6, #0]
90011caa:	4818      	ldr	r0, [pc, #96]	@ (90011d0c <vTaskPlaceOnEventListRestricted+0x84>)
90011cac:	3104      	adds	r1, #4
	}
90011cae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011cb2:	f7fe b87f 	b.w	9000fdb4 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
90011cb6:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011cb8:	6830      	ldr	r0, [r6, #0]
90011cba:	3004      	adds	r0, #4
90011cbc:	f7fe f8a0 	bl	9000fe00 <uxListRemove>
			xTimeToWake = xConstTickCount + xTicksToWait;
90011cc0:	1964      	adds	r4, r4, r5
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
90011cc2:	6833      	ldr	r3, [r6, #0]
90011cc4:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
90011cc6:	d214      	bcs.n	90011cf2 <vTaskPlaceOnEventListRestricted+0x6a>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011cc8:	4b11      	ldr	r3, [pc, #68]	@ (90011d10 <vTaskPlaceOnEventListRestricted+0x88>)
90011cca:	6818      	ldr	r0, [r3, #0]
90011ccc:	6831      	ldr	r1, [r6, #0]
90011cce:	3104      	adds	r1, #4
90011cd0:	f7fe f87e 	bl	9000fdd0 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
90011cd4:	4b0f      	ldr	r3, [pc, #60]	@ (90011d14 <vTaskPlaceOnEventListRestricted+0x8c>)
90011cd6:	681a      	ldr	r2, [r3, #0]
90011cd8:	4294      	cmp	r4, r2
90011cda:	d200      	bcs.n	90011cde <vTaskPlaceOnEventListRestricted+0x56>
					xNextTaskUnblockTime = xTimeToWake;
90011cdc:	601c      	str	r4, [r3, #0]
	}
90011cde:	bd70      	pop	{r4, r5, r6, pc}
90011ce0:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011ce4:	f383 8811 	msr	BASEPRI, r3
90011ce8:	f3bf 8f6f 	isb	sy
90011cec:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
90011cf0:	e7fe      	b.n	90011cf0 <vTaskPlaceOnEventListRestricted+0x68>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011cf2:	4b09      	ldr	r3, [pc, #36]	@ (90011d18 <vTaskPlaceOnEventListRestricted+0x90>)
90011cf4:	6818      	ldr	r0, [r3, #0]
90011cf6:	6831      	ldr	r1, [r6, #0]
	}
90011cf8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011cfc:	3104      	adds	r1, #4
90011cfe:	f7fe b867 	b.w	9000fdd0 <vListInsert>
90011d02:	bf00      	nop
90011d04:	24021ad0 	.word	0x24021ad0
90011d08:	240215f8 	.word	0x240215f8
90011d0c:	24021600 	.word	0x24021600
90011d10:	24021644 	.word	0x24021644
90011d14:	240215dc 	.word	0x240215dc
90011d18:	24021640 	.word	0x24021640

90011d1c <xTaskRemoveFromEventList>:
{
90011d1c:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011d1e:	68c3      	ldr	r3, [r0, #12]
90011d20:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
90011d22:	b34c      	cbz	r4, 90011d78 <xTaskRemoveFromEventList+0x5c>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
90011d24:	f104 0518 	add.w	r5, r4, #24
90011d28:	4628      	mov	r0, r5
90011d2a:	f7fe f869 	bl	9000fe00 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90011d2e:	4b18      	ldr	r3, [pc, #96]	@ (90011d90 <xTaskRemoveFromEventList+0x74>)
90011d30:	681b      	ldr	r3, [r3, #0]
90011d32:	b173      	cbz	r3, 90011d52 <xTaskRemoveFromEventList+0x36>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
90011d34:	4629      	mov	r1, r5
90011d36:	4817      	ldr	r0, [pc, #92]	@ (90011d94 <xTaskRemoveFromEventList+0x78>)
90011d38:	f7fe f83c 	bl	9000fdb4 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
90011d3c:	4b16      	ldr	r3, [pc, #88]	@ (90011d98 <xTaskRemoveFromEventList+0x7c>)
90011d3e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90011d40:	681b      	ldr	r3, [r3, #0]
90011d42:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011d44:	429a      	cmp	r2, r3
90011d46:	d920      	bls.n	90011d8a <xTaskRemoveFromEventList+0x6e>
		xYieldPending = pdTRUE;
90011d48:	2301      	movs	r3, #1
90011d4a:	4a14      	ldr	r2, [pc, #80]	@ (90011d9c <xTaskRemoveFromEventList+0x80>)
		xReturn = pdTRUE;
90011d4c:	4618      	mov	r0, r3
		xYieldPending = pdTRUE;
90011d4e:	6013      	str	r3, [r2, #0]
}
90011d50:	bd38      	pop	{r3, r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
90011d52:	1d25      	adds	r5, r4, #4
90011d54:	4628      	mov	r0, r5
90011d56:	f7fe f853 	bl	9000fe00 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
90011d5a:	4b11      	ldr	r3, [pc, #68]	@ (90011da0 <xTaskRemoveFromEventList+0x84>)
90011d5c:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
90011d5e:	681a      	ldr	r2, [r3, #0]
90011d60:	4290      	cmp	r0, r2
90011d62:	d900      	bls.n	90011d66 <xTaskRemoveFromEventList+0x4a>
90011d64:	6018      	str	r0, [r3, #0]
90011d66:	4b0f      	ldr	r3, [pc, #60]	@ (90011da4 <xTaskRemoveFromEventList+0x88>)
90011d68:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90011d6c:	4629      	mov	r1, r5
90011d6e:	eb03 0080 	add.w	r0, r3, r0, lsl #2
90011d72:	f7fe f81f 	bl	9000fdb4 <vListInsertEnd>
90011d76:	e7e1      	b.n	90011d3c <xTaskRemoveFromEventList+0x20>
90011d78:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011d7c:	f383 8811 	msr	BASEPRI, r3
90011d80:	f3bf 8f6f 	isb	sy
90011d84:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
90011d88:	e7fe      	b.n	90011d88 <xTaskRemoveFromEventList+0x6c>
		xReturn = pdFALSE;
90011d8a:	2000      	movs	r0, #0
}
90011d8c:	bd38      	pop	{r3, r4, r5, pc}
90011d8e:	bf00      	nop
90011d90:	240215d8 	.word	0x240215d8
90011d94:	2402162c 	.word	0x2402162c
90011d98:	24021ad0 	.word	0x24021ad0
90011d9c:	240215e8 	.word	0x240215e8
90011da0:	240215f4 	.word	0x240215f4
90011da4:	24021670 	.word	0x24021670

90011da8 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
90011da8:	4a03      	ldr	r2, [pc, #12]	@ (90011db8 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
90011daa:	4b04      	ldr	r3, [pc, #16]	@ (90011dbc <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
90011dac:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
90011dae:	681b      	ldr	r3, [r3, #0]
90011db0:	e9c0 2300 	strd	r2, r3, [r0]
}
90011db4:	4770      	bx	lr
90011db6:	bf00      	nop
90011db8:	240215e4 	.word	0x240215e4
90011dbc:	240215f8 	.word	0x240215f8

90011dc0 <xTaskCheckForTimeOut>:
{
90011dc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	configASSERT( pxTimeOut );
90011dc2:	b308      	cbz	r0, 90011e08 <xTaskCheckForTimeOut+0x48>
	configASSERT( pxTicksToWait );
90011dc4:	460d      	mov	r5, r1
90011dc6:	b1b1      	cbz	r1, 90011df6 <xTaskCheckForTimeOut+0x36>
90011dc8:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
90011dca:	f7fe f89b 	bl	9000ff04 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
90011dce:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
90011dd0:	4a1a      	ldr	r2, [pc, #104]	@ (90011e3c <xTaskCheckForTimeOut+0x7c>)
			if( *pxTicksToWait == portMAX_DELAY )
90011dd2:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
90011dd4:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
90011dd6:	d02c      	beq.n	90011e32 <xTaskCheckForTimeOut+0x72>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
90011dd8:	f8df c064 	ldr.w	ip, [pc, #100]	@ 90011e40 <xTaskCheckForTimeOut+0x80>
90011ddc:	6826      	ldr	r6, [r4, #0]
90011dde:	f8dc 7000 	ldr.w	r7, [ip]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
90011de2:	6860      	ldr	r0, [r4, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
90011de4:	42be      	cmp	r6, r7
90011de6:	d018      	beq.n	90011e1a <xTaskCheckForTimeOut+0x5a>
90011de8:	4288      	cmp	r0, r1
90011dea:	d816      	bhi.n	90011e1a <xTaskCheckForTimeOut+0x5a>
			xReturn = pdTRUE;
90011dec:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
90011dee:	f7fe f8ab 	bl	9000ff48 <vPortExitCritical>
}
90011df2:	4620      	mov	r0, r4
90011df4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90011df6:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011dfa:	f383 8811 	msr	BASEPRI, r3
90011dfe:	f3bf 8f6f 	isb	sy
90011e02:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
90011e06:	e7fe      	b.n	90011e06 <xTaskCheckForTimeOut+0x46>
90011e08:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011e0c:	f383 8811 	msr	BASEPRI, r3
90011e10:	f3bf 8f6f 	isb	sy
90011e14:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
90011e18:	e7fe      	b.n	90011e18 <xTaskCheckForTimeOut+0x58>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
90011e1a:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
90011e1e:	4573      	cmp	r3, lr
90011e20:	d909      	bls.n	90011e36 <xTaskCheckForTimeOut+0x76>
			*pxTicksToWait -= xElapsedTime;
90011e22:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
90011e24:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
90011e28:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
90011e2a:	4403      	add	r3, r0
90011e2c:	602b      	str	r3, [r5, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
90011e2e:	e9c4 1200 	strd	r1, r2, [r4]
				xReturn = pdFALSE;
90011e32:	2400      	movs	r4, #0
90011e34:	e7db      	b.n	90011dee <xTaskCheckForTimeOut+0x2e>
			*pxTicksToWait = 0;
90011e36:	2300      	movs	r3, #0
90011e38:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
90011e3a:	e7d7      	b.n	90011dec <xTaskCheckForTimeOut+0x2c>
90011e3c:	240215f8 	.word	0x240215f8
90011e40:	240215e4 	.word	0x240215e4

90011e44 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
90011e44:	4b01      	ldr	r3, [pc, #4]	@ (90011e4c <vTaskMissedYield+0x8>)
90011e46:	2201      	movs	r2, #1
90011e48:	601a      	str	r2, [r3, #0]
}
90011e4a:	4770      	bx	lr
90011e4c:	240215e8 	.word	0x240215e8

90011e50 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
90011e50:	4b05      	ldr	r3, [pc, #20]	@ (90011e68 <xTaskGetSchedulerState+0x18>)
90011e52:	681b      	ldr	r3, [r3, #0]
90011e54:	b133      	cbz	r3, 90011e64 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90011e56:	4b05      	ldr	r3, [pc, #20]	@ (90011e6c <xTaskGetSchedulerState+0x1c>)
90011e58:	6818      	ldr	r0, [r3, #0]
90011e5a:	fab0 f080 	clz	r0, r0
90011e5e:	0940      	lsrs	r0, r0, #5
90011e60:	0040      	lsls	r0, r0, #1
90011e62:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
90011e64:	2001      	movs	r0, #1
	}
90011e66:	4770      	bx	lr
90011e68:	240215f0 	.word	0x240215f0
90011e6c:	240215d8 	.word	0x240215d8

90011e70 <xTaskPriorityInherit>:
	{
90011e70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
90011e72:	4604      	mov	r4, r0
90011e74:	b1c8      	cbz	r0, 90011eaa <xTaskPriorityInherit+0x3a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
90011e76:	4d1b      	ldr	r5, [pc, #108]	@ (90011ee4 <xTaskPriorityInherit+0x74>)
90011e78:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90011e7a:	682a      	ldr	r2, [r5, #0]
90011e7c:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
90011e7e:	4293      	cmp	r3, r2
90011e80:	d214      	bcs.n	90011eac <xTaskPriorityInherit+0x3c>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90011e82:	6982      	ldr	r2, [r0, #24]
90011e84:	2a00      	cmp	r2, #0
90011e86:	db04      	blt.n	90011e92 <xTaskPriorityInherit+0x22>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011e88:	682a      	ldr	r2, [r5, #0]
90011e8a:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
90011e8c:	f1c2 0238 	rsb	r2, r2, #56	@ 0x38
90011e90:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
90011e92:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90011e96:	4e14      	ldr	r6, [pc, #80]	@ (90011ee8 <xTaskPriorityInherit+0x78>)
90011e98:	6962      	ldr	r2, [r4, #20]
90011e9a:	eb06 0383 	add.w	r3, r6, r3, lsl #2
90011e9e:	429a      	cmp	r2, r3
90011ea0:	d00c      	beq.n	90011ebc <xTaskPriorityInherit+0x4c>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90011ea2:	682b      	ldr	r3, [r5, #0]
90011ea4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011ea6:	62e3      	str	r3, [r4, #44]	@ 0x2c
				xReturn = pdTRUE;
90011ea8:	2001      	movs	r0, #1
	}
90011eaa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
90011eac:	682b      	ldr	r3, [r5, #0]
90011eae:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
90011eb0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011eb2:	4298      	cmp	r0, r3
90011eb4:	bf2c      	ite	cs
90011eb6:	2000      	movcs	r0, #0
90011eb8:	2001      	movcc	r0, #1
	}
90011eba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011ebc:	1d27      	adds	r7, r4, #4
90011ebe:	4638      	mov	r0, r7
90011ec0:	f7fd ff9e 	bl	9000fe00 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90011ec4:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
90011ec6:	4b09      	ldr	r3, [pc, #36]	@ (90011eec <xTaskPriorityInherit+0x7c>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90011ec8:	6ad0      	ldr	r0, [r2, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
90011eca:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90011ecc:	62e0      	str	r0, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
90011ece:	4290      	cmp	r0, r2
90011ed0:	d900      	bls.n	90011ed4 <xTaskPriorityInherit+0x64>
90011ed2:	6018      	str	r0, [r3, #0]
90011ed4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90011ed8:	4639      	mov	r1, r7
90011eda:	eb06 0080 	add.w	r0, r6, r0, lsl #2
90011ede:	f7fd ff69 	bl	9000fdb4 <vListInsertEnd>
90011ee2:	e7e1      	b.n	90011ea8 <xTaskPriorityInherit+0x38>
90011ee4:	24021ad0 	.word	0x24021ad0
90011ee8:	24021670 	.word	0x24021670
90011eec:	240215f4 	.word	0x240215f4

90011ef0 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
90011ef0:	b308      	cbz	r0, 90011f36 <xTaskPriorityDisinherit+0x46>
	{
90011ef2:	b538      	push	{r3, r4, r5, lr}
			configASSERT( pxTCB == pxCurrentTCB );
90011ef4:	4b1d      	ldr	r3, [pc, #116]	@ (90011f6c <xTaskPriorityDisinherit+0x7c>)
90011ef6:	681c      	ldr	r4, [r3, #0]
90011ef8:	4284      	cmp	r4, r0
90011efa:	d008      	beq.n	90011f0e <xTaskPriorityDisinherit+0x1e>
90011efc:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011f00:	f383 8811 	msr	BASEPRI, r3
90011f04:	f3bf 8f6f 	isb	sy
90011f08:	f3bf 8f4f 	dsb	sy
90011f0c:	e7fe      	b.n	90011f0c <xTaskPriorityDisinherit+0x1c>
			configASSERT( pxTCB->uxMutexesHeld );
90011f0e:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90011f10:	b143      	cbz	r3, 90011f24 <xTaskPriorityDisinherit+0x34>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
90011f12:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
			( pxTCB->uxMutexesHeld )--;
90011f14:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
90011f16:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
90011f18:	6523      	str	r3, [r4, #80]	@ 0x50
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
90011f1a:	4291      	cmp	r1, r2
90011f1c:	d000      	beq.n	90011f20 <xTaskPriorityDisinherit+0x30>
90011f1e:	b163      	cbz	r3, 90011f3a <xTaskPriorityDisinherit+0x4a>
	BaseType_t xReturn = pdFALSE;
90011f20:	2000      	movs	r0, #0
	}
90011f22:	bd38      	pop	{r3, r4, r5, pc}
90011f24:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011f28:	f383 8811 	msr	BASEPRI, r3
90011f2c:	f3bf 8f6f 	isb	sy
90011f30:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
90011f34:	e7fe      	b.n	90011f34 <xTaskPriorityDisinherit+0x44>
	BaseType_t xReturn = pdFALSE;
90011f36:	2000      	movs	r0, #0
	}
90011f38:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011f3a:	1d25      	adds	r5, r4, #4
90011f3c:	4628      	mov	r0, r5
90011f3e:	f7fd ff5f 	bl	9000fe00 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
90011f42:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
					prvAddTaskToReadyList( pxTCB );
90011f44:	4b0a      	ldr	r3, [pc, #40]	@ (90011f70 <xTaskPriorityDisinherit+0x80>)
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011f46:	f1c0 0238 	rsb	r2, r0, #56	@ 0x38
					pxTCB->uxPriority = pxTCB->uxBasePriority;
90011f4a:	62e0      	str	r0, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011f4c:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
90011f4e:	681a      	ldr	r2, [r3, #0]
90011f50:	4290      	cmp	r0, r2
90011f52:	d900      	bls.n	90011f56 <xTaskPriorityDisinherit+0x66>
90011f54:	6018      	str	r0, [r3, #0]
90011f56:	4b07      	ldr	r3, [pc, #28]	@ (90011f74 <xTaskPriorityDisinherit+0x84>)
90011f58:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90011f5c:	4629      	mov	r1, r5
90011f5e:	eb03 0080 	add.w	r0, r3, r0, lsl #2
90011f62:	f7fd ff27 	bl	9000fdb4 <vListInsertEnd>
					xReturn = pdTRUE;
90011f66:	2001      	movs	r0, #1
	}
90011f68:	bd38      	pop	{r3, r4, r5, pc}
90011f6a:	bf00      	nop
90011f6c:	24021ad0 	.word	0x24021ad0
90011f70:	240215f4 	.word	0x240215f4
90011f74:	24021670 	.word	0x24021670

90011f78 <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
90011f78:	2800      	cmp	r0, #0
90011f7a:	d03c      	beq.n	90011ff6 <vTaskPriorityDisinheritAfterTimeout+0x7e>
			configASSERT( pxTCB->uxMutexesHeld );
90011f7c:	6d03      	ldr	r3, [r0, #80]	@ 0x50
	{
90011f7e:	b570      	push	{r4, r5, r6, lr}
90011f80:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
90011f82:	b14b      	cbz	r3, 90011f98 <vTaskPriorityDisinheritAfterTimeout+0x20>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
90011f84:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
90011f86:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
90011f88:	4281      	cmp	r1, r0
90011f8a:	bf38      	it	cc
90011f8c:	4601      	movcc	r1, r0
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
90011f8e:	2b01      	cmp	r3, #1
90011f90:	d101      	bne.n	90011f96 <vTaskPriorityDisinheritAfterTimeout+0x1e>
90011f92:	428a      	cmp	r2, r1
90011f94:	d109      	bne.n	90011faa <vTaskPriorityDisinheritAfterTimeout+0x32>
	}
90011f96:	bd70      	pop	{r4, r5, r6, pc}
90011f98:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011f9c:	f383 8811 	msr	BASEPRI, r3
90011fa0:	f3bf 8f6f 	isb	sy
90011fa4:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
90011fa8:	e7fe      	b.n	90011fa8 <vTaskPriorityDisinheritAfterTimeout+0x30>
					configASSERT( pxTCB != pxCurrentTCB );
90011faa:	4b18      	ldr	r3, [pc, #96]	@ (9001200c <vTaskPriorityDisinheritAfterTimeout+0x94>)
90011fac:	681b      	ldr	r3, [r3, #0]
90011fae:	42a3      	cmp	r3, r4
90011fb0:	d022      	beq.n	90011ff8 <vTaskPriorityDisinheritAfterTimeout+0x80>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90011fb2:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
90011fb4:	62e1      	str	r1, [r4, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90011fb6:	2b00      	cmp	r3, #0
90011fb8:	db02      	blt.n	90011fc0 <vTaskPriorityDisinheritAfterTimeout+0x48>
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011fba:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
90011fbe:	61a1      	str	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
90011fc0:	eb02 0282 	add.w	r2, r2, r2, lsl #2
90011fc4:	4d12      	ldr	r5, [pc, #72]	@ (90012010 <vTaskPriorityDisinheritAfterTimeout+0x98>)
90011fc6:	6961      	ldr	r1, [r4, #20]
90011fc8:	eb05 0382 	add.w	r3, r5, r2, lsl #2
90011fcc:	4299      	cmp	r1, r3
90011fce:	d1e2      	bne.n	90011f96 <vTaskPriorityDisinheritAfterTimeout+0x1e>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011fd0:	1d26      	adds	r6, r4, #4
90011fd2:	4630      	mov	r0, r6
90011fd4:	f7fd ff14 	bl	9000fe00 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
90011fd8:	4b0e      	ldr	r3, [pc, #56]	@ (90012014 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
90011fda:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
90011fdc:	681a      	ldr	r2, [r3, #0]
90011fde:	4290      	cmp	r0, r2
90011fe0:	d900      	bls.n	90011fe4 <vTaskPriorityDisinheritAfterTimeout+0x6c>
90011fe2:	6018      	str	r0, [r3, #0]
90011fe4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90011fe8:	4631      	mov	r1, r6
90011fea:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
90011fee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
90011ff2:	f7fd bedf 	b.w	9000fdb4 <vListInsertEnd>
90011ff6:	4770      	bx	lr
90011ff8:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011ffc:	f383 8811 	msr	BASEPRI, r3
90012000:	f3bf 8f6f 	isb	sy
90012004:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
90012008:	e7fe      	b.n	90012008 <vTaskPriorityDisinheritAfterTimeout+0x90>
9001200a:	bf00      	nop
9001200c:	24021ad0 	.word	0x24021ad0
90012010:	24021670 	.word	0x24021670
90012014:	240215f4 	.word	0x240215f4

90012018 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
90012018:	4b04      	ldr	r3, [pc, #16]	@ (9001202c <pvTaskIncrementMutexHeldCount+0x14>)
9001201a:	681a      	ldr	r2, [r3, #0]
9001201c:	b11a      	cbz	r2, 90012026 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
9001201e:	6819      	ldr	r1, [r3, #0]
90012020:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
90012022:	3201      	adds	r2, #1
90012024:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
90012026:	6818      	ldr	r0, [r3, #0]
	}
90012028:	4770      	bx	lr
9001202a:	bf00      	nop
9001202c:	24021ad0 	.word	0x24021ad0

90012030 <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
90012030:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012034:	4e21      	ldr	r6, [pc, #132]	@ (900120bc <prvSwitchTimerLists+0x8c>)
90012036:	b084      	sub	sp, #16

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
90012038:	e00d      	b.n	90012056 <prvSwitchTimerLists+0x26>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9001203a:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001203c:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9001203e:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
90012040:	1d25      	adds	r5, r4, #4
90012042:	4628      	mov	r0, r5
90012044:	f7fd fedc 	bl	9000fe00 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
90012048:	6a23      	ldr	r3, [r4, #32]
9001204a:	4620      	mov	r0, r4
9001204c:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9001204e:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
90012052:	075b      	lsls	r3, r3, #29
90012054:	d40a      	bmi.n	9001206c <prvSwitchTimerLists+0x3c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
90012056:	6833      	ldr	r3, [r6, #0]
90012058:	681a      	ldr	r2, [r3, #0]
9001205a:	2a00      	cmp	r2, #0
9001205c:	d1ed      	bne.n	9001203a <prvSwitchTimerLists+0xa>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
9001205e:	4a18      	ldr	r2, [pc, #96]	@ (900120c0 <prvSwitchTimerLists+0x90>)
90012060:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
90012062:	6013      	str	r3, [r2, #0]
	pxCurrentTimerList = pxOverflowTimerList;
90012064:	6031      	str	r1, [r6, #0]
}
90012066:	b004      	add	sp, #16
90012068:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
9001206c:	69a3      	ldr	r3, [r4, #24]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9001206e:	4629      	mov	r1, r5
	if( xTimerQueue != NULL )
90012070:	f8df 8050 	ldr.w	r8, [pc, #80]	@ 900120c4 <prvSwitchTimerLists+0x94>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
90012074:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
90012076:	429f      	cmp	r7, r3
90012078:	d205      	bcs.n	90012086 <prvSwitchTimerLists+0x56>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9001207a:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
9001207c:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9001207e:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90012080:	f7fd fea6 	bl	9000fdd0 <vListInsert>
90012084:	e7e7      	b.n	90012056 <prvSwitchTimerLists+0x26>
	if( xTimerQueue != NULL )
90012086:	f8d8 3000 	ldr.w	r3, [r8]
		xMessage.xMessageID = xCommandID;
9001208a:	2500      	movs	r5, #0
	if( xTimerQueue != NULL )
9001208c:	b16b      	cbz	r3, 900120aa <prvSwitchTimerLists+0x7a>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
9001208e:	9402      	str	r4, [sp, #8]
		xMessage.xMessageID = xCommandID;
90012090:	e9cd 5700 	strd	r5, r7, [sp]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90012094:	f7ff fedc 	bl	90011e50 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
90012098:	462b      	mov	r3, r5
9001209a:	462a      	mov	r2, r5
9001209c:	4669      	mov	r1, sp
9001209e:	f8d8 0000 	ldr.w	r0, [r8]
900120a2:	f7fe fa1d 	bl	900104e0 <xQueueGenericSend>
				configASSERT( xResult );
900120a6:	2800      	cmp	r0, #0
900120a8:	d1d5      	bne.n	90012056 <prvSwitchTimerLists+0x26>
900120aa:	f04f 0350 	mov.w	r3, #80	@ 0x50
900120ae:	f383 8811 	msr	BASEPRI, r3
900120b2:	f3bf 8f6f 	isb	sy
900120b6:	f3bf 8f4f 	dsb	sy
900120ba:	e7fe      	b.n	900120ba <prvSwitchTimerLists+0x8a>
900120bc:	24021bd4 	.word	0x24021bd4
900120c0:	24021bd0 	.word	0x24021bd0
900120c4:	24021bcc 	.word	0x24021bcc

900120c8 <prvTimerTask>:
{
900120c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900120cc:	4e9f      	ldr	r6, [pc, #636]	@ (9001234c <prvTimerTask+0x284>)
900120ce:	b089      	sub	sp, #36	@ 0x24
900120d0:	4d9f      	ldr	r5, [pc, #636]	@ (90012350 <prvTimerTask+0x288>)
					portYIELD_WITHIN_API();
900120d2:	f04f 29e0 	mov.w	r9, #3758153728	@ 0xe000e000
900120d6:	4c9f      	ldr	r4, [pc, #636]	@ (90012354 <prvTimerTask+0x28c>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
900120d8:	6833      	ldr	r3, [r6, #0]
900120da:	681f      	ldr	r7, [r3, #0]
900120dc:	2f00      	cmp	r7, #0
900120de:	f000 80b2 	beq.w	90012246 <prvTimerTask+0x17e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
900120e2:	68db      	ldr	r3, [r3, #12]
900120e4:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
900120e6:	f7ff fce9 	bl	90011abc <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
900120ea:	f7ff fcff 	bl	90011aec <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
900120ee:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
900120f0:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
900120f2:	4298      	cmp	r0, r3
900120f4:	f0c0 80af 	bcc.w	90012256 <prvTimerTask+0x18e>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
900120f8:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
900120fa:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
900120fc:	f200 80d0 	bhi.w	900122a0 <prvTimerTask+0x1d8>
				( void ) xTaskResumeAll();
90012100:	f7ff fce4 	bl	90011acc <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90012104:	6833      	ldr	r3, [r6, #0]
90012106:	68db      	ldr	r3, [r3, #12]
90012108:	f8d3 b00c 	ldr.w	fp, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9001210c:	f10b 0804 	add.w	r8, fp, #4
90012110:	4640      	mov	r0, r8
90012112:	f7fd fe75 	bl	9000fe00 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
90012116:	f89b 3028 	ldrb.w	r3, [fp, #40]	@ 0x28
9001211a:	0758      	lsls	r0, r3, #29
9001211c:	f100 80d0 	bmi.w	900122c0 <prvTimerTask+0x1f8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
90012120:	f023 0301 	bic.w	r3, r3, #1
90012124:	f88b 3028 	strb.w	r3, [fp, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
90012128:	f8db 3020 	ldr.w	r3, [fp, #32]
9001212c:	4658      	mov	r0, fp
9001212e:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
90012130:	2200      	movs	r2, #0
90012132:	4669      	mov	r1, sp
90012134:	6820      	ldr	r0, [r4, #0]
90012136:	f7fe fc11 	bl	9001095c <xQueueReceive>
9001213a:	2800      	cmp	r0, #0
9001213c:	d0cc      	beq.n	900120d8 <prvTimerTask+0x10>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
9001213e:	9b00      	ldr	r3, [sp, #0]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
90012140:	9802      	ldr	r0, [sp, #8]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
90012142:	2b00      	cmp	r3, #0
90012144:	db77      	blt.n	90012236 <prvTimerTask+0x16e>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
90012146:	9f02      	ldr	r7, [sp, #8]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
90012148:	697b      	ldr	r3, [r7, #20]
9001214a:	b113      	cbz	r3, 90012152 <prvTimerTask+0x8a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9001214c:	1d38      	adds	r0, r7, #4
9001214e:	f7fd fe57 	bl	9000fe00 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
90012152:	f7ff fccb 	bl	90011aec <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90012156:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
90012158:	4683      	mov	fp, r0
	if( xTimeNow < xLastTime )
9001215a:	4298      	cmp	r0, r3
9001215c:	f0c0 8082 	bcc.w	90012264 <prvTimerTask+0x19c>
			switch( xMessage.xMessageID )
90012160:	9b00      	ldr	r3, [sp, #0]
	xLastTime = xTimeNow;
90012162:	f8c5 b000 	str.w	fp, [r5]
			switch( xMessage.xMessageID )
90012166:	2b09      	cmp	r3, #9
90012168:	d8e2      	bhi.n	90012130 <prvTimerTask+0x68>
9001216a:	e8df f003 	tbb	[pc, r3]
9001216e:	0505      	.short	0x0505
90012170:	5b3e5405 	.word	0x5b3e5405
90012174:	3e540505 	.word	0x3e540505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90012178:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
9001217c:	9b01      	ldr	r3, [sp, #4]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9001217e:	f042 0201 	orr.w	r2, r2, #1
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90012182:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90012184:	f887 2028 	strb.w	r2, [r7, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
90012188:	69ba      	ldr	r2, [r7, #24]
9001218a:	1899      	adds	r1, r3, r2
9001218c:	bf2c      	ite	cs
9001218e:	2001      	movcs	r0, #1
90012190:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
90012192:	4559      	cmp	r1, fp
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90012194:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
90012196:	f200 8085 	bhi.w	900122a4 <prvTimerTask+0x1dc>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9001219a:	ebab 0303 	sub.w	r3, fp, r3
9001219e:	429a      	cmp	r2, r3
900121a0:	f200 80be 	bhi.w	90012320 <prvTimerTask+0x258>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
900121a4:	6a3b      	ldr	r3, [r7, #32]
900121a6:	4638      	mov	r0, r7
900121a8:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
900121aa:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
900121ae:	0759      	lsls	r1, r3, #29
900121b0:	d5be      	bpl.n	90012130 <prvTimerTask+0x68>
	if( xTimerQueue != NULL )
900121b2:	6821      	ldr	r1, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
900121b4:	9b01      	ldr	r3, [sp, #4]
900121b6:	69ba      	ldr	r2, [r7, #24]
	if( xTimerQueue != NULL )
900121b8:	b171      	cbz	r1, 900121d8 <prvTimerTask+0x110>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
900121ba:	4413      	add	r3, r2
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
900121bc:	e9cd 3705 	strd	r3, r7, [sp, #20]
		xMessage.xMessageID = xCommandID;
900121c0:	2700      	movs	r7, #0
900121c2:	9704      	str	r7, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
900121c4:	f7ff fe44 	bl	90011e50 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
900121c8:	463b      	mov	r3, r7
900121ca:	463a      	mov	r2, r7
900121cc:	a904      	add	r1, sp, #16
900121ce:	6820      	ldr	r0, [r4, #0]
900121d0:	f7fe f986 	bl	900104e0 <xQueueGenericSend>
							configASSERT( xResult );
900121d4:	2800      	cmp	r0, #0
900121d6:	d1ab      	bne.n	90012130 <prvTimerTask+0x68>
900121d8:	f04f 0350 	mov.w	r3, #80	@ 0x50
900121dc:	f383 8811 	msr	BASEPRI, r3
900121e0:	f3bf 8f6f 	isb	sy
900121e4:	f3bf 8f4f 	dsb	sy
900121e8:	e7fe      	b.n	900121e8 <prvTimerTask+0x120>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
900121ea:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
900121ee:	9b01      	ldr	r3, [sp, #4]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
900121f0:	f042 0201 	orr.w	r2, r2, #1
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
900121f4:	61bb      	str	r3, [r7, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
900121f6:	f887 2028 	strb.w	r2, [r7, #40]	@ 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
900121fa:	2b00      	cmp	r3, #0
900121fc:	f000 809c 	beq.w	90012338 <prvTimerTask+0x270>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
90012200:	445b      	add	r3, fp
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90012202:	1d39      	adds	r1, r7, #4
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90012204:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
90012206:	455b      	cmp	r3, fp
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90012208:	607b      	str	r3, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
9001220a:	d855      	bhi.n	900122b8 <prvTimerTask+0x1f0>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9001220c:	4b52      	ldr	r3, [pc, #328]	@ (90012358 <prvTimerTask+0x290>)
9001220e:	6818      	ldr	r0, [r3, #0]
90012210:	f7fd fdde 	bl	9000fdd0 <vListInsert>
90012214:	e78c      	b.n	90012130 <prvTimerTask+0x68>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
90012216:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
9001221a:	f023 0301 	bic.w	r3, r3, #1
9001221e:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
					break;
90012222:	e785      	b.n	90012130 <prvTimerTask+0x68>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
90012224:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
90012228:	079a      	lsls	r2, r3, #30
9001222a:	d557      	bpl.n	900122dc <prvTimerTask+0x214>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9001222c:	f023 0301 	bic.w	r3, r3, #1
90012230:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
90012234:	e77c      	b.n	90012130 <prvTimerTask+0x68>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
90012236:	9b01      	ldr	r3, [sp, #4]
90012238:	9903      	ldr	r1, [sp, #12]
9001223a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
9001223c:	9b00      	ldr	r3, [sp, #0]
9001223e:	2b00      	cmp	r3, #0
90012240:	f6ff af76 	blt.w	90012130 <prvTimerTask+0x68>
90012244:	e77f      	b.n	90012146 <prvTimerTask+0x7e>
	vTaskSuspendAll();
90012246:	f7ff fc39 	bl	90011abc <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
9001224a:	f7ff fc4f 	bl	90011aec <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9001224e:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
90012250:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
90012252:	4283      	cmp	r3, r0
90012254:	d909      	bls.n	9001226a <prvTimerTask+0x1a2>
		prvSwitchTimerLists();
90012256:	f7ff feeb 	bl	90012030 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
9001225a:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
9001225e:	f7ff fc35 	bl	90011acc <xTaskResumeAll>
90012262:	e765      	b.n	90012130 <prvTimerTask+0x68>
		prvSwitchTimerLists();
90012264:	f7ff fee4 	bl	90012030 <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
90012268:	e77a      	b.n	90012160 <prvTimerTask+0x98>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
9001226a:	4b3b      	ldr	r3, [pc, #236]	@ (90012358 <prvTimerTask+0x290>)
	xLastTime = xTimeNow;
9001226c:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
90012270:	681b      	ldr	r3, [r3, #0]
90012272:	681a      	ldr	r2, [r3, #0]
90012274:	fab2 f282 	clz	r2, r2
90012278:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
9001227a:	eba7 010a 	sub.w	r1, r7, sl
9001227e:	6820      	ldr	r0, [r4, #0]
90012280:	f7fe ff44 	bl	9001110c <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
90012284:	f7ff fc22 	bl	90011acc <xTaskResumeAll>
90012288:	2800      	cmp	r0, #0
9001228a:	f47f af51 	bne.w	90012130 <prvTimerTask+0x68>
					portYIELD_WITHIN_API();
9001228e:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
90012292:	f8c9 3d04 	str.w	r3, [r9, #3332]	@ 0xd04
90012296:	f3bf 8f4f 	dsb	sy
9001229a:	f3bf 8f6f 	isb	sy
9001229e:	e747      	b.n	90012130 <prvTimerTask+0x68>
900122a0:	2200      	movs	r2, #0
900122a2:	e7ea      	b.n	9001227a <prvTimerTask+0x1b2>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
900122a4:	455b      	cmp	r3, fp
900122a6:	d902      	bls.n	900122ae <prvTimerTask+0x1e6>
900122a8:	2800      	cmp	r0, #0
900122aa:	f43f af7b 	beq.w	900121a4 <prvTimerTask+0xdc>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
900122ae:	1d39      	adds	r1, r7, #4
900122b0:	6830      	ldr	r0, [r6, #0]
900122b2:	f7fd fd8d 	bl	9000fdd0 <vListInsert>
	return xProcessTimerNow;
900122b6:	e73b      	b.n	90012130 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
900122b8:	6830      	ldr	r0, [r6, #0]
900122ba:	f7fd fd89 	bl	9000fdd0 <vListInsert>
900122be:	e737      	b.n	90012130 <prvTimerTask+0x68>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
900122c0:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
900122c4:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
900122c8:	18bb      	adds	r3, r7, r2
	if( xNextExpiryTime <= xTimeNow )
900122ca:	459a      	cmp	sl, r3
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
900122cc:	f8cb 3004 	str.w	r3, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
900122d0:	d208      	bcs.n	900122e4 <prvTimerTask+0x21c>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
900122d2:	4641      	mov	r1, r8
900122d4:	6830      	ldr	r0, [r6, #0]
900122d6:	f7fd fd7b 	bl	9000fdd0 <vListInsert>
	return xProcessTimerNow;
900122da:	e725      	b.n	90012128 <prvTimerTask+0x60>
							vPortFree( pxTimer );
900122dc:	4638      	mov	r0, r7
900122de:	f7fd fcef 	bl	9000fcc0 <vPortFree>
900122e2:	e725      	b.n	90012130 <prvTimerTask+0x68>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900122e4:	ebaa 0a07 	sub.w	sl, sl, r7
900122e8:	4552      	cmp	r2, sl
900122ea:	d81f      	bhi.n	9001232c <prvTimerTask+0x264>
	if( xTimerQueue != NULL )
900122ec:	6823      	ldr	r3, [r4, #0]
900122ee:	b173      	cbz	r3, 9001230e <prvTimerTask+0x246>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
900122f0:	e9cd 7b05 	strd	r7, fp, [sp, #20]
		xMessage.xMessageID = xCommandID;
900122f4:	2700      	movs	r7, #0
900122f6:	9704      	str	r7, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
900122f8:	f7ff fdaa 	bl	90011e50 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
900122fc:	463b      	mov	r3, r7
900122fe:	463a      	mov	r2, r7
90012300:	a904      	add	r1, sp, #16
90012302:	6820      	ldr	r0, [r4, #0]
90012304:	f7fe f8ec 	bl	900104e0 <xQueueGenericSend>
			configASSERT( xResult );
90012308:	2800      	cmp	r0, #0
9001230a:	f47f af0d 	bne.w	90012128 <prvTimerTask+0x60>
9001230e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90012312:	f383 8811 	msr	BASEPRI, r3
90012316:	f3bf 8f6f 	isb	sy
9001231a:	f3bf 8f4f 	dsb	sy
9001231e:	e7fe      	b.n	9001231e <prvTimerTask+0x256>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90012320:	4b0d      	ldr	r3, [pc, #52]	@ (90012358 <prvTimerTask+0x290>)
90012322:	1d39      	adds	r1, r7, #4
90012324:	6818      	ldr	r0, [r3, #0]
90012326:	f7fd fd53 	bl	9000fdd0 <vListInsert>
	return xProcessTimerNow;
9001232a:	e701      	b.n	90012130 <prvTimerTask+0x68>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9001232c:	4b0a      	ldr	r3, [pc, #40]	@ (90012358 <prvTimerTask+0x290>)
9001232e:	4641      	mov	r1, r8
90012330:	6818      	ldr	r0, [r3, #0]
90012332:	f7fd fd4d 	bl	9000fdd0 <vListInsert>
	return xProcessTimerNow;
90012336:	e6f7      	b.n	90012128 <prvTimerTask+0x60>
90012338:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001233c:	f383 8811 	msr	BASEPRI, r3
90012340:	f3bf 8f6f 	isb	sy
90012344:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
90012348:	e7fe      	b.n	90012348 <prvTimerTask+0x280>
9001234a:	bf00      	nop
9001234c:	24021bd4 	.word	0x24021bd4
90012350:	24021bc4 	.word	0x24021bc4
90012354:	24021bcc 	.word	0x24021bcc
90012358:	24021bd0 	.word	0x24021bd0

9001235c <xTimerCreateTimerTask>:
{
9001235c:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
9001235e:	4c23      	ldr	r4, [pc, #140]	@ (900123ec <xTimerCreateTimerTask+0x90>)
{
90012360:	b089      	sub	sp, #36	@ 0x24
	taskENTER_CRITICAL();
90012362:	f7fd fdcf 	bl	9000ff04 <vPortEnterCritical>
		if( xTimerQueue == NULL )
90012366:	6825      	ldr	r5, [r4, #0]
90012368:	b335      	cbz	r5, 900123b8 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
9001236a:	f7fd fded 	bl	9000ff48 <vPortExitCritical>
	if( xTimerQueue != NULL )
9001236e:	6823      	ldr	r3, [r4, #0]
90012370:	b1cb      	cbz	r3, 900123a6 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
90012372:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
90012374:	aa07      	add	r2, sp, #28
90012376:	a906      	add	r1, sp, #24
90012378:	a805      	add	r0, sp, #20
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
9001237a:	2502      	movs	r5, #2
			StackType_t *pxTimerTaskStackBuffer = NULL;
9001237c:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
90012380:	f7fd fbd0 	bl	9000fb24 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
90012384:	4623      	mov	r3, r4
90012386:	9a07      	ldr	r2, [sp, #28]
90012388:	9500      	str	r5, [sp, #0]
9001238a:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
9001238e:	e9cd 1001 	strd	r1, r0, [sp, #4]
90012392:	4917      	ldr	r1, [pc, #92]	@ (900123f0 <xTimerCreateTimerTask+0x94>)
90012394:	4817      	ldr	r0, [pc, #92]	@ (900123f4 <xTimerCreateTimerTask+0x98>)
90012396:	f7ff f9c7 	bl	90011728 <xTaskCreateStatic>
9001239a:	4b17      	ldr	r3, [pc, #92]	@ (900123f8 <xTimerCreateTimerTask+0x9c>)
9001239c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
9001239e:	b110      	cbz	r0, 900123a6 <xTimerCreateTimerTask+0x4a>
}
900123a0:	2001      	movs	r0, #1
900123a2:	b009      	add	sp, #36	@ 0x24
900123a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
900123a6:	f04f 0350 	mov.w	r3, #80	@ 0x50
900123aa:	f383 8811 	msr	BASEPRI, r3
900123ae:	f3bf 8f6f 	isb	sy
900123b2:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
900123b6:	e7fe      	b.n	900123b6 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
900123b8:	4f10      	ldr	r7, [pc, #64]	@ (900123fc <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
900123ba:	4e11      	ldr	r6, [pc, #68]	@ (90012400 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
900123bc:	4638      	mov	r0, r7
900123be:	f7fd fce9 	bl	9000fd94 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
900123c2:	4630      	mov	r0, r6
900123c4:	f7fd fce6 	bl	9000fd94 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
900123c8:	4a0e      	ldr	r2, [pc, #56]	@ (90012404 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
900123ca:	9500      	str	r5, [sp, #0]
900123cc:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
900123ce:	6017      	str	r7, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
900123d0:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
900123d2:	4a0d      	ldr	r2, [pc, #52]	@ (90012408 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
900123d4:	4b0d      	ldr	r3, [pc, #52]	@ (9001240c <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
900123d6:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
900123d8:	4a0d      	ldr	r2, [pc, #52]	@ (90012410 <xTimerCreateTimerTask+0xb4>)
900123da:	f7fd ff2d 	bl	90010238 <xQueueGenericCreateStatic>
900123de:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
900123e0:	2800      	cmp	r0, #0
900123e2:	d0c2      	beq.n	9001236a <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
900123e4:	490b      	ldr	r1, [pc, #44]	@ (90012414 <xTimerCreateTimerTask+0xb8>)
900123e6:	f7fe fe69 	bl	900110bc <vQueueAddToRegistry>
900123ea:	e7be      	b.n	9001236a <xTimerCreateTimerTask+0xe>
900123ec:	24021bcc 	.word	0x24021bcc
900123f0:	90030314 	.word	0x90030314
900123f4:	900120c9 	.word	0x900120c9
900123f8:	24021bc8 	.word	0x24021bc8
900123fc:	24021bec 	.word	0x24021bec
90012400:	24021bd8 	.word	0x24021bd8
90012404:	24021bd4 	.word	0x24021bd4
90012408:	24021bd0 	.word	0x24021bd0
9001240c:	24021ad4 	.word	0x24021ad4
90012410:	24021b24 	.word	0x24021b24
90012414:	9003030c 	.word	0x9003030c

90012418 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
90012418:	8880      	ldrh	r0, [r0, #4]
9001241a:	4770      	bx	lr

9001241c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
9001241c:	b570      	push	{r4, r5, r6, lr}
9001241e:	6803      	ldr	r3, [r0, #0]
90012420:	460c      	mov	r4, r1
90012422:	2100      	movs	r1, #0
90012424:	4605      	mov	r5, r0
90012426:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90012428:	4798      	blx	r3
9001242a:	4606      	mov	r6, r0
9001242c:	682b      	ldr	r3, [r5, #0]
9001242e:	4628      	mov	r0, r5
90012430:	1ba4      	subs	r4, r4, r6
90012432:	6a1b      	ldr	r3, [r3, #32]
90012434:	b2a4      	uxth	r4, r4
90012436:	4798      	blx	r3
90012438:	fbb4 f0f0 	udiv	r0, r4, r0
9001243c:	bd70      	pop	{r4, r5, r6, pc}

9001243e <_ZN8touchgfx17AbstractPartition5clearEv>:
9001243e:	2300      	movs	r3, #0
90012440:	8083      	strh	r3, [r0, #4]
90012442:	4770      	bx	lr

90012444 <_ZN8touchgfx17AbstractPartition8allocateEt>:
90012444:	b510      	push	{r4, lr}
90012446:	6803      	ldr	r3, [r0, #0]
90012448:	4604      	mov	r4, r0
9001244a:	8881      	ldrh	r1, [r0, #4]
9001244c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9001244e:	4798      	blx	r3
90012450:	88a3      	ldrh	r3, [r4, #4]
90012452:	3301      	adds	r3, #1
90012454:	80a3      	strh	r3, [r4, #4]
90012456:	bd10      	pop	{r4, pc}

90012458 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
90012458:	6803      	ldr	r3, [r0, #0]
9001245a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9001245c:	4718      	bx	r3

9001245e <_ZN8touchgfx17AbstractPartitionD1Ev>:
9001245e:	4770      	bx	lr

90012460 <_ZN8touchgfx17AbstractPartitionC1Ev>:
90012460:	4a02      	ldr	r2, [pc, #8]	@ (9001246c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
90012462:	6002      	str	r2, [r0, #0]
90012464:	2200      	movs	r2, #0
90012466:	8082      	strh	r2, [r0, #4]
90012468:	4770      	bx	lr
9001246a:	bf00      	nop
9001246c:	900318c4 	.word	0x900318c4

90012470 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
90012470:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90012472:	2000      	movs	r0, #0
90012474:	b12b      	cbz	r3, 90012482 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
90012476:	b920      	cbnz	r0, 90012482 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
90012478:	1a5a      	subs	r2, r3, r1
9001247a:	699b      	ldr	r3, [r3, #24]
9001247c:	4250      	negs	r0, r2
9001247e:	4150      	adcs	r0, r2
90012480:	e7f8      	b.n	90012474 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
90012482:	4770      	bx	lr

90012484 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
90012484:	2300      	movs	r3, #0
90012486:	6148      	str	r0, [r1, #20]
90012488:	618b      	str	r3, [r1, #24]
9001248a:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9001248c:	b913      	cbnz	r3, 90012494 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
9001248e:	6281      	str	r1, [r0, #40]	@ 0x28
90012490:	4770      	bx	lr
90012492:	4613      	mov	r3, r2
90012494:	699a      	ldr	r2, [r3, #24]
90012496:	2a00      	cmp	r2, #0
90012498:	d1fb      	bne.n	90012492 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
9001249a:	6199      	str	r1, [r3, #24]
9001249c:	4770      	bx	lr

9001249e <_ZN8touchgfx9Container9removeAllEv>:
9001249e:	2200      	movs	r2, #0
900124a0:	6a83      	ldr	r3, [r0, #40]	@ 0x28
900124a2:	b123      	cbz	r3, 900124ae <_ZN8touchgfx9Container9removeAllEv+0x10>
900124a4:	6999      	ldr	r1, [r3, #24]
900124a6:	6281      	str	r1, [r0, #40]	@ 0x28
900124a8:	e9c3 2205 	strd	r2, r2, [r3, #20]
900124ac:	e7f8      	b.n	900124a0 <_ZN8touchgfx9Container9removeAllEv+0x2>
900124ae:	4770      	bx	lr

900124b0 <_ZN8touchgfx9Container6unlinkEv>:
900124b0:	2300      	movs	r3, #0
900124b2:	6283      	str	r3, [r0, #40]	@ 0x28
900124b4:	4770      	bx	lr

900124b6 <_ZNK8touchgfx9Container12getSolidRectEv>:
900124b6:	2200      	movs	r2, #0
900124b8:	8002      	strh	r2, [r0, #0]
900124ba:	8042      	strh	r2, [r0, #2]
900124bc:	8082      	strh	r2, [r0, #4]
900124be:	80c2      	strh	r2, [r0, #6]
900124c0:	4770      	bx	lr

900124c2 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
900124c2:	b570      	push	{r4, r5, r6, lr}
900124c4:	460d      	mov	r5, r1
900124c6:	4616      	mov	r6, r2
900124c8:	6a84      	ldr	r4, [r0, #40]	@ 0x28
900124ca:	b13c      	cbz	r4, 900124dc <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
900124cc:	6823      	ldr	r3, [r4, #0]
900124ce:	4620      	mov	r0, r4
900124d0:	4632      	mov	r2, r6
900124d2:	4629      	mov	r1, r5
900124d4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
900124d6:	4798      	blx	r3
900124d8:	69a4      	ldr	r4, [r4, #24]
900124da:	e7f6      	b.n	900124ca <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
900124dc:	bd70      	pop	{r4, r5, r6, pc}

900124de <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
900124de:	b538      	push	{r3, r4, r5, lr}
900124e0:	460d      	mov	r5, r1
900124e2:	6a84      	ldr	r4, [r0, #40]	@ 0x28
900124e4:	b134      	cbz	r4, 900124f4 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
900124e6:	682b      	ldr	r3, [r5, #0]
900124e8:	4621      	mov	r1, r4
900124ea:	4628      	mov	r0, r5
900124ec:	689b      	ldr	r3, [r3, #8]
900124ee:	4798      	blx	r3
900124f0:	69a4      	ldr	r4, [r4, #24]
900124f2:	e7f7      	b.n	900124e4 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
900124f4:	bd38      	pop	{r3, r4, r5, pc}

900124f6 <_ZN8touchgfx9ContainerD1Ev>:
900124f6:	4770      	bx	lr

900124f8 <_ZN8touchgfx9ContainerD0Ev>:
900124f8:	b510      	push	{r4, lr}
900124fa:	4604      	mov	r4, r0
900124fc:	212c      	movs	r1, #44	@ 0x2c
900124fe:	f01a fbdd 	bl	9002ccbc <_ZdlPvj>
90012502:	4620      	mov	r0, r4
90012504:	bd10      	pop	{r4, pc}

90012506 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
90012506:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90012508:	b19b      	cbz	r3, 90012532 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
9001250a:	428b      	cmp	r3, r1
9001250c:	d109      	bne.n	90012522 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
9001250e:	699a      	ldr	r2, [r3, #24]
90012510:	2100      	movs	r1, #0
90012512:	6159      	str	r1, [r3, #20]
90012514:	6282      	str	r2, [r0, #40]	@ 0x28
90012516:	b902      	cbnz	r2, 9001251a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
90012518:	4770      	bx	lr
9001251a:	6199      	str	r1, [r3, #24]
9001251c:	4770      	bx	lr
9001251e:	4613      	mov	r3, r2
90012520:	b13a      	cbz	r2, 90012532 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
90012522:	699a      	ldr	r2, [r3, #24]
90012524:	428a      	cmp	r2, r1
90012526:	d1fa      	bne.n	9001251e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
90012528:	698a      	ldr	r2, [r1, #24]
9001252a:	619a      	str	r2, [r3, #24]
9001252c:	2300      	movs	r3, #0
9001252e:	e9c1 3305 	strd	r3, r3, [r1, #20]
90012532:	4770      	bx	lr

90012534 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
90012534:	b410      	push	{r4}
90012536:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90012538:	4604      	mov	r4, r0
9001253a:	b92b      	cbnz	r3, 90012548 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
9001253c:	6803      	ldr	r3, [r0, #0]
9001253e:	4611      	mov	r1, r2
90012540:	f85d 4b04 	ldr.w	r4, [sp], #4
90012544:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
90012546:	4718      	bx	r3
90012548:	b941      	cbnz	r1, 9001255c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
9001254a:	6193      	str	r3, [r2, #24]
9001254c:	6282      	str	r2, [r0, #40]	@ 0x28
9001254e:	6154      	str	r4, [r2, #20]
90012550:	f85d 4b04 	ldr.w	r4, [sp], #4
90012554:	4770      	bx	lr
90012556:	4603      	mov	r3, r0
90012558:	2800      	cmp	r0, #0
9001255a:	d0f9      	beq.n	90012550 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
9001255c:	4299      	cmp	r1, r3
9001255e:	6998      	ldr	r0, [r3, #24]
90012560:	d1f9      	bne.n	90012556 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
90012562:	6190      	str	r0, [r2, #24]
90012564:	618a      	str	r2, [r1, #24]
90012566:	e7f2      	b.n	9001254e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

90012568 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
90012568:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001256c:	461f      	mov	r7, r3
9001256e:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
90012572:	460d      	mov	r5, r1
90012574:	4616      	mov	r6, r2
90012576:	b103      	cbz	r3, 9001257a <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
90012578:	6038      	str	r0, [r7, #0]
9001257a:	6a84      	ldr	r4, [r0, #40]	@ 0x28
9001257c:	b314      	cbz	r4, 900125c4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
9001257e:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
90012582:	b1eb      	cbz	r3, 900125c0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90012584:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90012588:	428d      	cmp	r5, r1
9001258a:	db19      	blt.n	900125c0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9001258c:	b289      	uxth	r1, r1
9001258e:	8923      	ldrh	r3, [r4, #8]
90012590:	440b      	add	r3, r1
90012592:	b21b      	sxth	r3, r3
90012594:	429d      	cmp	r5, r3
90012596:	da13      	bge.n	900125c0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90012598:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
9001259c:	4296      	cmp	r6, r2
9001259e:	db0f      	blt.n	900125c0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
900125a0:	b292      	uxth	r2, r2
900125a2:	8963      	ldrh	r3, [r4, #10]
900125a4:	4413      	add	r3, r2
900125a6:	b21b      	sxth	r3, r3
900125a8:	429e      	cmp	r6, r3
900125aa:	da09      	bge.n	900125c0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
900125ac:	6823      	ldr	r3, [r4, #0]
900125ae:	1ab2      	subs	r2, r6, r2
900125b0:	1a69      	subs	r1, r5, r1
900125b2:	4620      	mov	r0, r4
900125b4:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
900125b8:	b212      	sxth	r2, r2
900125ba:	463b      	mov	r3, r7
900125bc:	b209      	sxth	r1, r1
900125be:	47c0      	blx	r8
900125c0:	69a4      	ldr	r4, [r4, #24]
900125c2:	e7db      	b.n	9001257c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
900125c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900125c8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
900125c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900125cc:	4c6d      	ldr	r4, [pc, #436]	@ (90012784 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
900125ce:	b0a1      	sub	sp, #132	@ 0x84
900125d0:	4606      	mov	r6, r0
900125d2:	6824      	ldr	r4, [r4, #0]
900125d4:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
900125d6:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
900125da:	2400      	movs	r4, #0
900125dc:	9303      	str	r3, [sp, #12]
900125de:	802c      	strh	r4, [r5, #0]
900125e0:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
900125e2:	802c      	strh	r4, [r5, #0]
900125e4:	601c      	str	r4, [r3, #0]
900125e6:	e9cd 1201 	strd	r1, r2, [sp, #4]
900125ea:	f7ff ffbd 	bl	90012568 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
900125ee:	f1b9 0f03 	cmp.w	r9, #3
900125f2:	f340 80c1 	ble.w	90012778 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
900125f6:	4631      	mov	r1, r6
900125f8:	a80c      	add	r0, sp, #48	@ 0x30
900125fa:	f007 ffed 	bl	9001a5d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900125fe:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
90012602:	9306      	str	r3, [sp, #24]
90012604:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90012608:	9307      	str	r3, [sp, #28]
9001260a:	9b03      	ldr	r3, [sp, #12]
9001260c:	f8d3 a000 	ldr.w	sl, [r3]
90012610:	f1ba 0f00 	cmp.w	sl, #0
90012614:	f000 80b3 	beq.w	9001277e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
90012618:	4651      	mov	r1, sl
9001261a:	a810      	add	r0, sp, #64	@ 0x40
9001261c:	f007 ffdc 	bl	9001a5d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90012620:	2002      	movs	r0, #2
90012622:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
90012626:	9b01      	ldr	r3, [sp, #4]
90012628:	9a06      	ldr	r2, [sp, #24]
9001262a:	fb91 f1f0 	sdiv	r1, r1, r0
9001262e:	189d      	adds	r5, r3, r2
90012630:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
90012634:	9a07      	ldr	r2, [sp, #28]
90012636:	4419      	add	r1, r3
90012638:	9b02      	ldr	r3, [sp, #8]
9001263a:	4413      	add	r3, r2
9001263c:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
90012640:	1a6d      	subs	r5, r5, r1
90012642:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
90012646:	fb92 f2f0 	sdiv	r2, r2, r0
9001264a:	440a      	add	r2, r1
9001264c:	1a9b      	subs	r3, r3, r2
9001264e:	435b      	muls	r3, r3
90012650:	fb05 3505 	mla	r5, r5, r5, r3
90012654:	4f4c      	ldr	r7, [pc, #304]	@ (90012788 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
90012656:	ac10      	add	r4, sp, #64	@ 0x40
90012658:	f1b9 0f0c 	cmp.w	r9, #12
9001265c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9001265e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90012660:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90012662:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90012664:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90012666:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90012668:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
9001266c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
90012670:	f04f 0303 	mov.w	r3, #3
90012674:	bfd8      	it	le
90012676:	f109 32ff 	addle.w	r2, r9, #4294967295
9001267a:	f04f 0400 	mov.w	r4, #0
9001267e:	f8cd 9000 	str.w	r9, [sp]
90012682:	bfcc      	ite	gt
90012684:	4698      	movgt	r8, r3
90012686:	fb92 f8f3 	sdivle	r8, r2, r3
9001268a:	1c63      	adds	r3, r4, #1
9001268c:	aa10      	add	r2, sp, #64	@ 0x40
9001268e:	f004 0401 	and.w	r4, r4, #1
90012692:	f04f 0b00 	mov.w	fp, #0
90012696:	9308      	str	r3, [sp, #32]
90012698:	9b00      	ldr	r3, [sp, #0]
9001269a:	eb02 1444 	add.w	r4, r2, r4, lsl #5
9001269e:	fb93 f3f8 	sdiv	r3, r3, r8
900126a2:	3404      	adds	r4, #4
900126a4:	b29b      	uxth	r3, r3
900126a6:	9304      	str	r3, [sp, #16]
900126a8:	9a04      	ldr	r2, [sp, #16]
900126aa:	f854 3c04 	ldr.w	r3, [r4, #-4]
900126ae:	fb13 f302 	smulbb	r3, r3, r2
900126b2:	9a01      	ldr	r2, [sp, #4]
900126b4:	b29b      	uxth	r3, r3
900126b6:	1899      	adds	r1, r3, r2
900126b8:	9305      	str	r3, [sp, #20]
900126ba:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
900126be:	b209      	sxth	r1, r1
900126c0:	4299      	cmp	r1, r3
900126c2:	db4d      	blt.n	90012760 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900126c4:	8932      	ldrh	r2, [r6, #8]
900126c6:	4413      	add	r3, r2
900126c8:	b21b      	sxth	r3, r3
900126ca:	4299      	cmp	r1, r3
900126cc:	da48      	bge.n	90012760 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900126ce:	9b04      	ldr	r3, [sp, #16]
900126d0:	6827      	ldr	r7, [r4, #0]
900126d2:	fb17 f703 	smulbb	r7, r7, r3
900126d6:	9b02      	ldr	r3, [sp, #8]
900126d8:	b2bf      	uxth	r7, r7
900126da:	18fa      	adds	r2, r7, r3
900126dc:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
900126e0:	b212      	sxth	r2, r2
900126e2:	429a      	cmp	r2, r3
900126e4:	db3c      	blt.n	90012760 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900126e6:	8970      	ldrh	r0, [r6, #10]
900126e8:	4403      	add	r3, r0
900126ea:	b21b      	sxth	r3, r3
900126ec:	429a      	cmp	r2, r3
900126ee:	da37      	bge.n	90012760 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900126f0:	2300      	movs	r3, #0
900126f2:	4630      	mov	r0, r6
900126f4:	930b      	str	r3, [sp, #44]	@ 0x2c
900126f6:	ab0b      	add	r3, sp, #44	@ 0x2c
900126f8:	f7ff ff36 	bl	90012568 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
900126fc:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900126fe:	b37a      	cbz	r2, 90012760 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90012700:	4552      	cmp	r2, sl
90012702:	d02d      	beq.n	90012760 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90012704:	4611      	mov	r1, r2
90012706:	a80e      	add	r0, sp, #56	@ 0x38
90012708:	9209      	str	r2, [sp, #36]	@ 0x24
9001270a:	f007 ff65 	bl	9001a5d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001270e:	f04f 0e02 	mov.w	lr, #2
90012712:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
90012716:	9a06      	ldr	r2, [sp, #24]
90012718:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
9001271c:	9b01      	ldr	r3, [sp, #4]
9001271e:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
90012722:	4413      	add	r3, r2
90012724:	9a07      	ldr	r2, [sp, #28]
90012726:	fb91 f1fe 	sdiv	r1, r1, lr
9001272a:	fb9c fcfe 	sdiv	ip, ip, lr
9001272e:	4401      	add	r1, r0
90012730:	1a58      	subs	r0, r3, r1
90012732:	9b02      	ldr	r3, [sp, #8]
90012734:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
90012738:	4413      	add	r3, r2
9001273a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001273c:	448c      	add	ip, r1
9001273e:	eba3 030c 	sub.w	r3, r3, ip
90012742:	435b      	muls	r3, r3
90012744:	fb00 3300 	mla	r3, r0, r0, r3
90012748:	42ab      	cmp	r3, r5
9001274a:	d208      	bcs.n	9001275e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
9001274c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001274e:	461d      	mov	r5, r3
90012750:	9803      	ldr	r0, [sp, #12]
90012752:	6001      	str	r1, [r0, #0]
90012754:	992a      	ldr	r1, [sp, #168]	@ 0xa8
90012756:	9805      	ldr	r0, [sp, #20]
90012758:	8008      	strh	r0, [r1, #0]
9001275a:	992b      	ldr	r1, [sp, #172]	@ 0xac
9001275c:	800f      	strh	r7, [r1, #0]
9001275e:	4692      	mov	sl, r2
90012760:	f10b 0b01 	add.w	fp, fp, #1
90012764:	3408      	adds	r4, #8
90012766:	f1bb 0f04 	cmp.w	fp, #4
9001276a:	d19d      	bne.n	900126a8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
9001276c:	9b00      	ldr	r3, [sp, #0]
9001276e:	9c08      	ldr	r4, [sp, #32]
90012770:	444b      	add	r3, r9
90012772:	4544      	cmp	r4, r8
90012774:	9300      	str	r3, [sp, #0]
90012776:	d188      	bne.n	9001268a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
90012778:	b021      	add	sp, #132	@ 0x84
9001277a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001277e:	f04f 35ff 	mov.w	r5, #4294967295
90012782:	e767      	b.n	90012654 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
90012784:	24021c0c 	.word	0x24021c0c
90012788:	9002e538 	.word	0x9002e538

9001278c <_ZN8touchgfx4RectaNERKS0_>:
9001278c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90012790:	f9b1 7000 	ldrsh.w	r7, [r1]
90012794:	888c      	ldrh	r4, [r1, #4]
90012796:	f9b0 9000 	ldrsh.w	r9, [r0]
9001279a:	443c      	add	r4, r7
9001279c:	b2a4      	uxth	r4, r4
9001279e:	fa0f f884 	sxth.w	r8, r4
900127a2:	45c1      	cmp	r9, r8
900127a4:	da2f      	bge.n	90012806 <_ZN8touchgfx4RectaNERKS0_+0x7a>
900127a6:	8882      	ldrh	r2, [r0, #4]
900127a8:	444a      	add	r2, r9
900127aa:	b292      	uxth	r2, r2
900127ac:	fa0f fe82 	sxth.w	lr, r2
900127b0:	4577      	cmp	r7, lr
900127b2:	da28      	bge.n	90012806 <_ZN8touchgfx4RectaNERKS0_+0x7a>
900127b4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
900127b8:	88cb      	ldrh	r3, [r1, #6]
900127ba:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
900127be:	442b      	add	r3, r5
900127c0:	b21b      	sxth	r3, r3
900127c2:	429e      	cmp	r6, r3
900127c4:	da1f      	bge.n	90012806 <_ZN8touchgfx4RectaNERKS0_+0x7a>
900127c6:	88c3      	ldrh	r3, [r0, #6]
900127c8:	4433      	add	r3, r6
900127ca:	b29b      	uxth	r3, r3
900127cc:	fa0f fc83 	sxth.w	ip, r3
900127d0:	4565      	cmp	r5, ip
900127d2:	da18      	bge.n	90012806 <_ZN8touchgfx4RectaNERKS0_+0x7a>
900127d4:	454f      	cmp	r7, r9
900127d6:	bfb8      	it	lt
900127d8:	464f      	movlt	r7, r9
900127da:	42b5      	cmp	r5, r6
900127dc:	bfb8      	it	lt
900127de:	4635      	movlt	r5, r6
900127e0:	45f0      	cmp	r8, lr
900127e2:	bfd8      	it	le
900127e4:	4622      	movle	r2, r4
900127e6:	1bd2      	subs	r2, r2, r7
900127e8:	8082      	strh	r2, [r0, #4]
900127ea:	884a      	ldrh	r2, [r1, #2]
900127ec:	88c9      	ldrh	r1, [r1, #6]
900127ee:	8007      	strh	r7, [r0, #0]
900127f0:	440a      	add	r2, r1
900127f2:	8045      	strh	r5, [r0, #2]
900127f4:	b292      	uxth	r2, r2
900127f6:	b211      	sxth	r1, r2
900127f8:	458c      	cmp	ip, r1
900127fa:	bfa8      	it	ge
900127fc:	4613      	movge	r3, r2
900127fe:	1b5b      	subs	r3, r3, r5
90012800:	80c3      	strh	r3, [r0, #6]
90012802:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90012806:	2300      	movs	r3, #0
90012808:	8003      	strh	r3, [r0, #0]
9001280a:	8043      	strh	r3, [r0, #2]
9001280c:	8083      	strh	r3, [r0, #4]
9001280e:	80c3      	strh	r3, [r0, #6]
90012810:	e7f7      	b.n	90012802 <_ZN8touchgfx4RectaNERKS0_+0x76>

90012812 <_ZNK8touchgfx4Rect7isEmptyEv>:
90012812:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90012816:	2b00      	cmp	r3, #0
90012818:	dd06      	ble.n	90012828 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
9001281a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
9001281e:	2800      	cmp	r0, #0
90012820:	bfcc      	ite	gt
90012822:	2000      	movgt	r0, #0
90012824:	2001      	movle	r0, #1
90012826:	4770      	bx	lr
90012828:	2001      	movs	r0, #1
9001282a:	4770      	bx	lr

9001282c <_ZNK8touchgfx9Container16getContainedAreaEv>:
9001282c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012830:	2300      	movs	r3, #0
90012832:	4604      	mov	r4, r0
90012834:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
90012836:	8003      	strh	r3, [r0, #0]
90012838:	8043      	strh	r3, [r0, #2]
9001283a:	8083      	strh	r3, [r0, #4]
9001283c:	80c3      	strh	r3, [r0, #6]
9001283e:	2d00      	cmp	r5, #0
90012840:	d040      	beq.n	900128c4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
90012842:	1d28      	adds	r0, r5, #4
90012844:	f7ff ffe5 	bl	90012812 <_ZNK8touchgfx4Rect7isEmptyEv>
90012848:	b988      	cbnz	r0, 9001286e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
9001284a:	4620      	mov	r0, r4
9001284c:	f7ff ffe1 	bl	90012812 <_ZNK8touchgfx4Rect7isEmptyEv>
90012850:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90012854:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90012858:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
9001285c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
90012860:	b138      	cbz	r0, 90012872 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
90012862:	8022      	strh	r2, [r4, #0]
90012864:	8063      	strh	r3, [r4, #2]
90012866:	f8a4 e004 	strh.w	lr, [r4, #4]
9001286a:	f8a4 c006 	strh.w	ip, [r4, #6]
9001286e:	69ad      	ldr	r5, [r5, #24]
90012870:	e7e5      	b.n	9001283e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
90012872:	f9b4 0000 	ldrsh.w	r0, [r4]
90012876:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
9001287a:	4290      	cmp	r0, r2
9001287c:	4607      	mov	r7, r0
9001287e:	f8b4 8004 	ldrh.w	r8, [r4, #4]
90012882:	460e      	mov	r6, r1
90012884:	bfa8      	it	ge
90012886:	4617      	movge	r7, r2
90012888:	4299      	cmp	r1, r3
9001288a:	4472      	add	r2, lr
9001288c:	f8b4 e006 	ldrh.w	lr, [r4, #6]
90012890:	bfa8      	it	ge
90012892:	461e      	movge	r6, r3
90012894:	4440      	add	r0, r8
90012896:	4471      	add	r1, lr
90012898:	4463      	add	r3, ip
9001289a:	b200      	sxth	r0, r0
9001289c:	8027      	strh	r7, [r4, #0]
9001289e:	b212      	sxth	r2, r2
900128a0:	8066      	strh	r6, [r4, #2]
900128a2:	b209      	sxth	r1, r1
900128a4:	b21b      	sxth	r3, r3
900128a6:	4290      	cmp	r0, r2
900128a8:	bfac      	ite	ge
900128aa:	ebc7 0200 	rsbge	r2, r7, r0
900128ae:	ebc7 0202 	rsblt	r2, r7, r2
900128b2:	4299      	cmp	r1, r3
900128b4:	bfac      	ite	ge
900128b6:	ebc6 0301 	rsbge	r3, r6, r1
900128ba:	ebc6 0303 	rsblt	r3, r6, r3
900128be:	80a2      	strh	r2, [r4, #4]
900128c0:	80e3      	strh	r3, [r4, #6]
900128c2:	e7d4      	b.n	9001286e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
900128c4:	4620      	mov	r0, r4
900128c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900128ca <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
900128ca:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
900128ce:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
900128d2:	b383      	cbz	r3, 90012936 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
900128d4:	6a84      	ldr	r4, [r0, #40]	@ 0x28
900128d6:	b374      	cbz	r4, 90012936 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
900128d8:	f9b1 5000 	ldrsh.w	r5, [r1]
900128dc:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
900128e0:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
900128e4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
900128e8:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
900128ec:	b303      	cbz	r3, 90012930 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
900128ee:	4668      	mov	r0, sp
900128f0:	1d21      	adds	r1, r4, #4
900128f2:	f8ad 5000 	strh.w	r5, [sp]
900128f6:	f8ad 6002 	strh.w	r6, [sp, #2]
900128fa:	f8ad 7004 	strh.w	r7, [sp, #4]
900128fe:	f8ad 8006 	strh.w	r8, [sp, #6]
90012902:	f7ff ff43 	bl	9001278c <_ZN8touchgfx4RectaNERKS0_>
90012906:	4668      	mov	r0, sp
90012908:	f7ff ff83 	bl	90012812 <_ZNK8touchgfx4Rect7isEmptyEv>
9001290c:	b980      	cbnz	r0, 90012930 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
9001290e:	f8bd 3000 	ldrh.w	r3, [sp]
90012912:	4669      	mov	r1, sp
90012914:	88a2      	ldrh	r2, [r4, #4]
90012916:	4620      	mov	r0, r4
90012918:	1a9b      	subs	r3, r3, r2
9001291a:	88e2      	ldrh	r2, [r4, #6]
9001291c:	f8ad 3000 	strh.w	r3, [sp]
90012920:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90012924:	1a9b      	subs	r3, r3, r2
90012926:	f8ad 3002 	strh.w	r3, [sp, #2]
9001292a:	6823      	ldr	r3, [r4, #0]
9001292c:	689b      	ldr	r3, [r3, #8]
9001292e:	4798      	blx	r3
90012930:	69a4      	ldr	r4, [r4, #24]
90012932:	2c00      	cmp	r4, #0
90012934:	d1d8      	bne.n	900128e8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
90012936:	b002      	add	sp, #8
90012938:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9001293c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
9001293c:	b573      	push	{r0, r1, r4, r5, r6, lr}
9001293e:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
90012942:	460d      	mov	r5, r1
90012944:	4616      	mov	r6, r2
90012946:	b323      	cbz	r3, 90012992 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90012948:	6a84      	ldr	r4, [r0, #40]	@ 0x28
9001294a:	b314      	cbz	r4, 90012992 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
9001294c:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
90012950:	b1eb      	cbz	r3, 9001298e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
90012952:	6828      	ldr	r0, [r5, #0]
90012954:	466b      	mov	r3, sp
90012956:	6869      	ldr	r1, [r5, #4]
90012958:	c303      	stmia	r3!, {r0, r1}
9001295a:	4668      	mov	r0, sp
9001295c:	1d21      	adds	r1, r4, #4
9001295e:	f7ff ff15 	bl	9001278c <_ZN8touchgfx4RectaNERKS0_>
90012962:	4668      	mov	r0, sp
90012964:	f7ff ff55 	bl	90012812 <_ZNK8touchgfx4Rect7isEmptyEv>
90012968:	b988      	cbnz	r0, 9001298e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
9001296a:	f8bd 3000 	ldrh.w	r3, [sp]
9001296e:	4669      	mov	r1, sp
90012970:	88a2      	ldrh	r2, [r4, #4]
90012972:	4620      	mov	r0, r4
90012974:	1a9b      	subs	r3, r3, r2
90012976:	88e2      	ldrh	r2, [r4, #6]
90012978:	f8ad 3000 	strh.w	r3, [sp]
9001297c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90012980:	1a9b      	subs	r3, r3, r2
90012982:	4632      	mov	r2, r6
90012984:	f8ad 3002 	strh.w	r3, [sp, #2]
90012988:	6823      	ldr	r3, [r4, #0]
9001298a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
9001298c:	4798      	blx	r3
9001298e:	69a4      	ldr	r4, [r4, #24]
90012990:	e7db      	b.n	9001294a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
90012992:	b002      	add	sp, #8
90012994:	bd70      	pop	{r4, r5, r6, pc}

90012996 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
90012996:	6803      	ldr	r3, [r0, #0]
90012998:	b513      	push	{r0, r1, r4, lr}
9001299a:	f8d3 40b4 	ldr.w	r4, [r3, #180]	@ 0xb4
9001299e:	2300      	movs	r3, #0
900129a0:	e9cd 3300 	strd	r3, r3, [sp]
900129a4:	466b      	mov	r3, sp
900129a6:	47a0      	blx	r4
900129a8:	b002      	add	sp, #8
900129aa:	bd10      	pop	{r4, pc}

900129ac <_ZN8touchgfx3HAL16flushFrameBufferEv>:
900129ac:	2301      	movs	r3, #1
900129ae:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
900129b2:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
900129b6:	4770      	bx	lr

900129b8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
900129b8:	2301      	movs	r3, #1
900129ba:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
900129be:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
900129c2:	4770      	bx	lr

900129c4 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
900129c4:	6843      	ldr	r3, [r0, #4]
900129c6:	2201      	movs	r2, #1
900129c8:	725a      	strb	r2, [r3, #9]
900129ca:	6840      	ldr	r0, [r0, #4]
900129cc:	6803      	ldr	r3, [r0, #0]
900129ce:	691b      	ldr	r3, [r3, #16]
900129d0:	4718      	bx	r3

900129d2 <_ZN8touchgfx3HAL8flushDMAEv>:
900129d2:	6840      	ldr	r0, [r0, #4]
900129d4:	6803      	ldr	r3, [r0, #0]
900129d6:	689b      	ldr	r3, [r3, #8]
900129d8:	4718      	bx	r3

900129da <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
900129da:	b530      	push	{r4, r5, lr}
900129dc:	b08b      	sub	sp, #44	@ 0x2c
900129de:	6804      	ldr	r4, [r0, #0]
900129e0:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
900129e4:	9509      	str	r5, [sp, #36]	@ 0x24
900129e6:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
900129ea:	9508      	str	r5, [sp, #32]
900129ec:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
900129f0:	9507      	str	r5, [sp, #28]
900129f2:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
900129f6:	9506      	str	r5, [sp, #24]
900129f8:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
900129fc:	9505      	str	r5, [sp, #20]
900129fe:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
90012a02:	9504      	str	r5, [sp, #16]
90012a04:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
90012a08:	9503      	str	r5, [sp, #12]
90012a0a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
90012a0e:	9502      	str	r5, [sp, #8]
90012a10:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
90012a14:	e9cd 3500 	strd	r3, r5, [sp]
90012a18:	4613      	mov	r3, r2
90012a1a:	6c24      	ldr	r4, [r4, #64]	@ 0x40
90012a1c:	2200      	movs	r2, #0
90012a1e:	47a0      	blx	r4
90012a20:	b00b      	add	sp, #44	@ 0x2c
90012a22:	bd30      	pop	{r4, r5, pc}

90012a24 <_ZN8touchgfx3HAL10beginFrameEv>:
90012a24:	4b04      	ldr	r3, [pc, #16]	@ (90012a38 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
90012a26:	781b      	ldrb	r3, [r3, #0]
90012a28:	b123      	cbz	r3, 90012a34 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
90012a2a:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
90012a2e:	f080 0001 	eor.w	r0, r0, #1
90012a32:	4770      	bx	lr
90012a34:	2001      	movs	r0, #1
90012a36:	4770      	bx	lr
90012a38:	24021c0a 	.word	0x24021c0a

90012a3c <_ZN8touchgfx3HAL8endFrameEv>:
90012a3c:	b510      	push	{r4, lr}
90012a3e:	4604      	mov	r4, r0
90012a40:	6840      	ldr	r0, [r0, #4]
90012a42:	6803      	ldr	r3, [r0, #0]
90012a44:	689b      	ldr	r3, [r3, #8]
90012a46:	4798      	blx	r3
90012a48:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
90012a4c:	b113      	cbz	r3, 90012a54 <_ZN8touchgfx3HAL8endFrameEv+0x18>
90012a4e:	2301      	movs	r3, #1
90012a50:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
90012a54:	bd10      	pop	{r4, pc}

90012a56 <_ZN8touchgfx3HAL10initializeEv>:
90012a56:	b510      	push	{r4, lr}
90012a58:	4604      	mov	r4, r0
90012a5a:	f7ef fc39 	bl	900022d0 <_ZN8touchgfx10OSWrappers10initializeEv>
90012a5e:	f7ee f90b 	bl	90000c78 <_ZN8touchgfx4GPIO4initEv>
90012a62:	6860      	ldr	r0, [r4, #4]
90012a64:	6803      	ldr	r3, [r0, #0]
90012a66:	68db      	ldr	r3, [r3, #12]
90012a68:	4798      	blx	r3
90012a6a:	68e0      	ldr	r0, [r4, #12]
90012a6c:	6803      	ldr	r3, [r0, #0]
90012a6e:	689b      	ldr	r3, [r3, #8]
90012a70:	4798      	blx	r3
90012a72:	6823      	ldr	r3, [r4, #0]
90012a74:	4620      	mov	r0, r4
90012a76:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
90012a78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90012a7c:	4718      	bx	r3
	...

90012a80 <_ZN8touchgfx3HAL4tickEv>:
90012a80:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90012a82:	6803      	ldr	r3, [r0, #0]
90012a84:	4604      	mov	r4, r0
90012a86:	4d62      	ldr	r5, [pc, #392]	@ (90012c10 <_ZN8touchgfx3HAL4tickEv+0x190>)
90012a88:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
90012a8c:	4798      	blx	r3
90012a8e:	2800      	cmp	r0, #0
90012a90:	f000 809e 	beq.w	90012bd0 <_ZN8touchgfx3HAL4tickEv+0x150>
90012a94:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
90012a98:	2b02      	cmp	r3, #2
90012a9a:	d002      	beq.n	90012aa2 <_ZN8touchgfx3HAL4tickEv+0x22>
90012a9c:	2001      	movs	r0, #1
90012a9e:	f7ee f903 	bl	90000ca8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90012aa2:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
90012aa6:	2600      	movs	r6, #0
90012aa8:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
90012aac:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
90012ab0:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
90012ab4:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
90012ab8:	b133      	cbz	r3, 90012ac8 <_ZN8touchgfx3HAL4tickEv+0x48>
90012aba:	6823      	ldr	r3, [r4, #0]
90012abc:	4620      	mov	r0, r4
90012abe:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
90012ac2:	4798      	blx	r3
90012ac4:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
90012ac8:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
90012acc:	2601      	movs	r6, #1
90012ace:	6862      	ldr	r2, [r4, #4]
90012ad0:	f083 0301 	eor.w	r3, r3, #1
90012ad4:	702e      	strb	r6, [r5, #0]
90012ad6:	7253      	strb	r3, [r2, #9]
90012ad8:	f006 fb02 	bl	900190e0 <_ZN8touchgfx11Application11getInstanceEv>
90012adc:	6803      	ldr	r3, [r0, #0]
90012ade:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90012ae0:	4798      	blx	r3
90012ae2:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
90012ae6:	b90b      	cbnz	r3, 90012aec <_ZN8touchgfx3HAL4tickEv+0x6c>
90012ae8:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
90012aec:	f006 faf8 	bl	900190e0 <_ZN8touchgfx11Application11getInstanceEv>
90012af0:	6803      	ldr	r3, [r0, #0]
90012af2:	695b      	ldr	r3, [r3, #20]
90012af4:	4798      	blx	r3
90012af6:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
90012af8:	6803      	ldr	r3, [r0, #0]
90012afa:	691b      	ldr	r3, [r3, #16]
90012afc:	4798      	blx	r3
90012afe:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
90012b02:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
90012b06:	3b01      	subs	r3, #1
90012b08:	b2db      	uxtb	r3, r3
90012b0a:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
90012b0e:	b10a      	cbz	r2, 90012b14 <_ZN8touchgfx3HAL4tickEv+0x94>
90012b10:	2b00      	cmp	r3, #0
90012b12:	d1eb      	bne.n	90012aec <_ZN8touchgfx3HAL4tickEv+0x6c>
90012b14:	4a3f      	ldr	r2, [pc, #252]	@ (90012c14 <_ZN8touchgfx3HAL4tickEv+0x194>)
90012b16:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
90012b1a:	7813      	ldrb	r3, [r2, #0]
90012b1c:	3301      	adds	r3, #1
90012b1e:	b25b      	sxtb	r3, r3
90012b20:	4299      	cmp	r1, r3
90012b22:	7013      	strb	r3, [r2, #0]
90012b24:	dc10      	bgt.n	90012b48 <_ZN8touchgfx3HAL4tickEv+0xc8>
90012b26:	2300      	movs	r3, #0
90012b28:	68e0      	ldr	r0, [r4, #12]
90012b2a:	a902      	add	r1, sp, #8
90012b2c:	7013      	strb	r3, [r2, #0]
90012b2e:	aa03      	add	r2, sp, #12
90012b30:	6803      	ldr	r3, [r0, #0]
90012b32:	68db      	ldr	r3, [r3, #12]
90012b34:	4798      	blx	r3
90012b36:	6823      	ldr	r3, [r4, #0]
90012b38:	2800      	cmp	r0, #0
90012b3a:	d059      	beq.n	90012bf0 <_ZN8touchgfx3HAL4tickEv+0x170>
90012b3c:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
90012b40:	4620      	mov	r0, r4
90012b42:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
90012b46:	4798      	blx	r3
90012b48:	2300      	movs	r3, #0
90012b4a:	6960      	ldr	r0, [r4, #20]
90012b4c:	f88d 3007 	strb.w	r3, [sp, #7]
90012b50:	b158      	cbz	r0, 90012b6a <_ZN8touchgfx3HAL4tickEv+0xea>
90012b52:	6803      	ldr	r3, [r0, #0]
90012b54:	f10d 0107 	add.w	r1, sp, #7
90012b58:	68db      	ldr	r3, [r3, #12]
90012b5a:	4798      	blx	r3
90012b5c:	b128      	cbz	r0, 90012b6a <_ZN8touchgfx3HAL4tickEv+0xea>
90012b5e:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
90012b60:	f89d 1007 	ldrb.w	r1, [sp, #7]
90012b64:	6803      	ldr	r3, [r0, #0]
90012b66:	68db      	ldr	r3, [r3, #12]
90012b68:	4798      	blx	r3
90012b6a:	f104 001c 	add.w	r0, r4, #28
90012b6e:	f018 fb3f 	bl	9002b1f0 <_ZN8touchgfx8Gestures4tickEv>
90012b72:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
90012b76:	b30b      	cbz	r3, 90012bbc <_ZN8touchgfx3HAL4tickEv+0x13c>
90012b78:	6920      	ldr	r0, [r4, #16]
90012b7a:	6803      	ldr	r3, [r0, #0]
90012b7c:	691b      	ldr	r3, [r3, #16]
90012b7e:	4798      	blx	r3
90012b80:	6f63      	ldr	r3, [r4, #116]	@ 0x74
90012b82:	4606      	mov	r6, r0
90012b84:	b903      	cbnz	r3, 90012b88 <_ZN8touchgfx3HAL4tickEv+0x108>
90012b86:	6760      	str	r0, [r4, #116]	@ 0x74
90012b88:	6f63      	ldr	r3, [r4, #116]	@ 0x74
90012b8a:	4a23      	ldr	r2, [pc, #140]	@ (90012c18 <_ZN8touchgfx3HAL4tickEv+0x198>)
90012b8c:	1af3      	subs	r3, r6, r3
90012b8e:	4293      	cmp	r3, r2
90012b90:	d914      	bls.n	90012bbc <_ZN8touchgfx3HAL4tickEv+0x13c>
90012b92:	6920      	ldr	r0, [r4, #16]
90012b94:	6803      	ldr	r3, [r0, #0]
90012b96:	699b      	ldr	r3, [r3, #24]
90012b98:	4798      	blx	r3
90012b9a:	6f63      	ldr	r3, [r4, #116]	@ 0x74
90012b9c:	2264      	movs	r2, #100	@ 0x64
90012b9e:	1af3      	subs	r3, r6, r3
90012ba0:	fbb3 f3f2 	udiv	r3, r3, r2
90012ba4:	fbb0 f0f3 	udiv	r0, r0, r3
90012ba8:	2800      	cmp	r0, #0
90012baa:	dc26      	bgt.n	90012bfa <_ZN8touchgfx3HAL4tickEv+0x17a>
90012bac:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
90012bb0:	6920      	ldr	r0, [r4, #16]
90012bb2:	2100      	movs	r1, #0
90012bb4:	6803      	ldr	r3, [r0, #0]
90012bb6:	69db      	ldr	r3, [r3, #28]
90012bb8:	4798      	blx	r3
90012bba:	6766      	str	r6, [r4, #116]	@ 0x74
90012bbc:	6823      	ldr	r3, [r4, #0]
90012bbe:	4620      	mov	r0, r4
90012bc0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
90012bc4:	4798      	blx	r3
90012bc6:	f006 fa8b 	bl	900190e0 <_ZN8touchgfx11Application11getInstanceEv>
90012bca:	6803      	ldr	r3, [r0, #0]
90012bcc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90012bce:	4798      	blx	r3
90012bd0:	6823      	ldr	r3, [r4, #0]
90012bd2:	4620      	mov	r0, r4
90012bd4:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
90012bd8:	4798      	blx	r3
90012bda:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
90012bde:	2b02      	cmp	r3, #2
90012be0:	d002      	beq.n	90012be8 <_ZN8touchgfx3HAL4tickEv+0x168>
90012be2:	2001      	movs	r0, #1
90012be4:	f7ee f87c 	bl	90000ce0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90012be8:	2300      	movs	r3, #0
90012bea:	702b      	strb	r3, [r5, #0]
90012bec:	b004      	add	sp, #16
90012bee:	bd70      	pop	{r4, r5, r6, pc}
90012bf0:	f8d3 30d0 	ldr.w	r3, [r3, #208]	@ 0xd0
90012bf4:	4620      	mov	r0, r4
90012bf6:	4798      	blx	r3
90012bf8:	e7a6      	b.n	90012b48 <_ZN8touchgfx3HAL4tickEv+0xc8>
90012bfa:	2863      	cmp	r0, #99	@ 0x63
90012bfc:	bfcb      	itete	gt
90012bfe:	2300      	movgt	r3, #0
90012c00:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
90012c04:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
90012c08:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
90012c0c:	e7d0      	b.n	90012bb0 <_ZN8touchgfx3HAL4tickEv+0x130>
90012c0e:	bf00      	nop
90012c10:	24021c10 	.word	0x24021c10
90012c14:	24021c11 	.word	0x24021c11
90012c18:	05f5e100 	.word	0x05f5e100

90012c1c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
90012c1c:	b510      	push	{r4, lr}
90012c1e:	4604      	mov	r4, r0
90012c20:	f7ef fb88 	bl	90002334 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
90012c24:	2200      	movs	r2, #0
90012c26:	6863      	ldr	r3, [r4, #4]
90012c28:	729a      	strb	r2, [r3, #10]
90012c2a:	bd10      	pop	{r4, pc}

90012c2c <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
90012c2c:	65c1      	str	r1, [r0, #92]	@ 0x5c
90012c2e:	301c      	adds	r0, #28
90012c30:	f018 badc 	b.w	9002b1ec <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

90012c34 <_ZN8touchgfx3HAL5touchEll>:
90012c34:	b530      	push	{r4, r5, lr}
90012c36:	b087      	sub	sp, #28
90012c38:	4604      	mov	r4, r0
90012c3a:	a804      	add	r0, sp, #16
90012c3c:	e9cd 1204 	strd	r1, r2, [sp, #16]
90012c40:	f006 f818 	bl	90018c74 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
90012c44:	9b04      	ldr	r3, [sp, #16]
90012c46:	a906      	add	r1, sp, #24
90012c48:	a803      	add	r0, sp, #12
90012c4a:	f8ad 300c 	strh.w	r3, [sp, #12]
90012c4e:	9b05      	ldr	r3, [sp, #20]
90012c50:	f821 3d0a 	strh.w	r3, [r1, #-10]!
90012c54:	f006 f860 	bl	90018d18 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
90012c58:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
90012c5c:	f104 001c 	add.w	r0, r4, #28
90012c60:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90012c64:	f8bd 300e 	ldrh.w	r3, [sp, #14]
90012c68:	b189      	cbz	r1, 90012c8e <_ZN8touchgfx3HAL5touchEll+0x5a>
90012c6a:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
90012c6e:	9300      	str	r3, [sp, #0]
90012c70:	4613      	mov	r3, r2
90012c72:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
90012c76:	462a      	mov	r2, r5
90012c78:	f018 fac8 	bl	9002b20c <_ZN8touchgfx8Gestures17registerDragEventEtttt>
90012c7c:	b128      	cbz	r0, 90012c8a <_ZN8touchgfx3HAL5touchEll+0x56>
90012c7e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90012c82:	6623      	str	r3, [r4, #96]	@ 0x60
90012c84:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90012c88:	6663      	str	r3, [r4, #100]	@ 0x64
90012c8a:	b007      	add	sp, #28
90012c8c:	bd30      	pop	{r4, r5, pc}
90012c8e:	f018 fafd 	bl	9002b28c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
90012c92:	2301      	movs	r3, #1
90012c94:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
90012c98:	e7f1      	b.n	90012c7e <_ZN8touchgfx3HAL5touchEll+0x4a>

90012c9a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
90012c9a:	b510      	push	{r4, lr}
90012c9c:	2b00      	cmp	r3, #0
90012c9e:	d046      	beq.n	90012d2e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90012ca0:	ea81 0002 	eor.w	r0, r1, r2
90012ca4:	07c4      	lsls	r4, r0, #31
90012ca6:	d508      	bpl.n	90012cba <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
90012ca8:	440b      	add	r3, r1
90012caa:	3a01      	subs	r2, #1
90012cac:	428b      	cmp	r3, r1
90012cae:	d93e      	bls.n	90012d2e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90012cb0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
90012cb4:	f801 0b01 	strb.w	r0, [r1], #1
90012cb8:	e7f8      	b.n	90012cac <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
90012cba:	07d0      	lsls	r0, r2, #31
90012cbc:	bf42      	ittt	mi
90012cbe:	f812 0b01 	ldrbmi.w	r0, [r2], #1
90012cc2:	f103 33ff 	addmi.w	r3, r3, #4294967295
90012cc6:	f801 0b01 	strbmi.w	r0, [r1], #1
90012cca:	2b01      	cmp	r3, #1
90012ccc:	d911      	bls.n	90012cf2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90012cce:	ea81 0402 	eor.w	r4, r1, r2
90012cd2:	4610      	mov	r0, r2
90012cd4:	07a4      	lsls	r4, r4, #30
90012cd6:	d022      	beq.n	90012d1e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
90012cd8:	f023 0401 	bic.w	r4, r3, #1
90012cdc:	440c      	add	r4, r1
90012cde:	428c      	cmp	r4, r1
90012ce0:	4602      	mov	r2, r0
90012ce2:	d904      	bls.n	90012cee <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
90012ce4:	8812      	ldrh	r2, [r2, #0]
90012ce6:	3002      	adds	r0, #2
90012ce8:	f821 2b02 	strh.w	r2, [r1], #2
90012cec:	e7f7      	b.n	90012cde <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
90012cee:	f003 0301 	and.w	r3, r3, #1
90012cf2:	f023 0003 	bic.w	r0, r3, #3
90012cf6:	4408      	add	r0, r1
90012cf8:	4288      	cmp	r0, r1
90012cfa:	4614      	mov	r4, r2
90012cfc:	d904      	bls.n	90012d08 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
90012cfe:	6824      	ldr	r4, [r4, #0]
90012d00:	3204      	adds	r2, #4
90012d02:	f841 4b04 	str.w	r4, [r1], #4
90012d06:	e7f7      	b.n	90012cf8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
90012d08:	f003 0303 	and.w	r3, r3, #3
90012d0c:	3a01      	subs	r2, #1
90012d0e:	440b      	add	r3, r1
90012d10:	428b      	cmp	r3, r1
90012d12:	d90c      	bls.n	90012d2e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90012d14:	f812 0f01 	ldrb.w	r0, [r2, #1]!
90012d18:	f801 0b01 	strb.w	r0, [r1], #1
90012d1c:	e7f8      	b.n	90012d10 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
90012d1e:	0790      	lsls	r0, r2, #30
90012d20:	d0e7      	beq.n	90012cf2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90012d22:	f832 0b02 	ldrh.w	r0, [r2], #2
90012d26:	3b02      	subs	r3, #2
90012d28:	f821 0b02 	strh.w	r0, [r1], #2
90012d2c:	e7e1      	b.n	90012cf2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90012d2e:	2001      	movs	r0, #1
90012d30:	bd10      	pop	{r4, pc}

90012d32 <_ZN8touchgfx3HAL7noTouchEv>:
90012d32:	b510      	push	{r4, lr}
90012d34:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
90012d38:	4604      	mov	r4, r0
90012d3a:	b153      	cbz	r3, 90012d52 <_ZN8touchgfx3HAL7noTouchEv+0x20>
90012d3c:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
90012d40:	2101      	movs	r1, #1
90012d42:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
90012d46:	301c      	adds	r0, #28
90012d48:	f018 faa0 	bl	9002b28c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
90012d4c:	2300      	movs	r3, #0
90012d4e:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
90012d52:	bd10      	pop	{r4, pc}

90012d54 <_ZN8touchgfx8Drawable5setXYEss>:
90012d54:	b570      	push	{r4, r5, r6, lr}
90012d56:	6803      	ldr	r3, [r0, #0]
90012d58:	4604      	mov	r4, r0
90012d5a:	4615      	mov	r5, r2
90012d5c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90012d5e:	4798      	blx	r3
90012d60:	6823      	ldr	r3, [r4, #0]
90012d62:	4629      	mov	r1, r5
90012d64:	4620      	mov	r0, r4
90012d66:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90012d68:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90012d6c:	4718      	bx	r3
	...

90012d70 <_ZN8touchgfx3HAL3lcdEv>:
90012d70:	4b04      	ldr	r3, [pc, #16]	@ (90012d84 <_ZN8touchgfx3HAL3lcdEv+0x14>)
90012d72:	681b      	ldr	r3, [r3, #0]
90012d74:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90012d78:	b10a      	cbz	r2, 90012d7e <_ZN8touchgfx3HAL3lcdEv+0xe>
90012d7a:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90012d7c:	b900      	cbnz	r0, 90012d80 <_ZN8touchgfx3HAL3lcdEv+0x10>
90012d7e:	6898      	ldr	r0, [r3, #8]
90012d80:	4770      	bx	lr
90012d82:	bf00      	nop
90012d84:	24021c0c 	.word	0x24021c0c

90012d88 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
90012d88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90012d8c:	b085      	sub	sp, #20
90012d8e:	4604      	mov	r4, r0
90012d90:	2000      	movs	r0, #0
90012d92:	4699      	mov	r9, r3
90012d94:	ad04      	add	r5, sp, #16
90012d96:	460f      	mov	r7, r1
90012d98:	4690      	mov	r8, r2
90012d9a:	f845 0d04 	str.w	r0, [r5, #-4]!
90012d9e:	69a0      	ldr	r0, [r4, #24]
90012da0:	6806      	ldr	r6, [r0, #0]
90012da2:	9501      	str	r5, [sp, #4]
90012da4:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
90012da8:	9500      	str	r5, [sp, #0]
90012daa:	6835      	ldr	r5, [r6, #0]
90012dac:	47a8      	blx	r5
90012dae:	4d10      	ldr	r5, [pc, #64]	@ (90012df0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
90012db0:	4606      	mov	r6, r0
90012db2:	f8a5 9000 	strh.w	r9, [r5]
90012db6:	f7ff ffdb 	bl	90012d70 <_ZN8touchgfx3HAL3lcdEv>
90012dba:	6803      	ldr	r3, [r0, #0]
90012dbc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012dbe:	4798      	blx	r3
90012dc0:	b128      	cbz	r0, 90012dce <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
90012dc2:	2801      	cmp	r0, #1
90012dc4:	d00b      	beq.n	90012dde <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
90012dc6:	4630      	mov	r0, r6
90012dc8:	b005      	add	sp, #20
90012dca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90012dce:	882b      	ldrh	r3, [r5, #0]
90012dd0:	fb08 7203 	mla	r2, r8, r3, r7
90012dd4:	9b03      	ldr	r3, [sp, #12]
90012dd6:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
90012dda:	63e3      	str	r3, [r4, #60]	@ 0x3c
90012ddc:	e7f3      	b.n	90012dc6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90012dde:	882a      	ldrh	r2, [r5, #0]
90012de0:	9b03      	ldr	r3, [sp, #12]
90012de2:	fb08 7202 	mla	r2, r8, r2, r7
90012de6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90012dea:	1a9a      	subs	r2, r3, r2
90012dec:	63e2      	str	r2, [r4, #60]	@ 0x3c
90012dee:	e7ea      	b.n	90012dc6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90012df0:	24021c06 	.word	0x24021c06

90012df4 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs>:
90012df4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90012df6:	4b15      	ldr	r3, [pc, #84]	@ (90012e4c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x58>)
90012df8:	460f      	mov	r7, r1
90012dfa:	f890 407d 	ldrb.w	r4, [r0, #125]	@ 0x7d
90012dfe:	4606      	mov	r6, r0
90012e00:	881b      	ldrh	r3, [r3, #0]
90012e02:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90012e04:	fb93 f4f4 	sdiv	r4, r3, r4
90012e08:	f7ff ffb2 	bl	90012d70 <_ZN8touchgfx3HAL3lcdEv>
90012e0c:	6803      	ldr	r3, [r0, #0]
90012e0e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012e10:	4798      	blx	r3
90012e12:	2801      	cmp	r0, #1
90012e14:	d00b      	beq.n	90012e2e <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x3a>
90012e16:	d303      	bcc.n	90012e20 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x2c>
90012e18:	2802      	cmp	r0, #2
90012e1a:	d010      	beq.n	90012e3e <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x4a>
90012e1c:	63f5      	str	r5, [r6, #60]	@ 0x3c
90012e1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90012e20:	4b0b      	ldr	r3, [pc, #44]	@ (90012e50 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
90012e22:	437c      	muls	r4, r7
90012e24:	8819      	ldrh	r1, [r3, #0]
90012e26:	434c      	muls	r4, r1
90012e28:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
90012e2c:	e7f6      	b.n	90012e1c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
90012e2e:	4b08      	ldr	r3, [pc, #32]	@ (90012e50 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
90012e30:	437c      	muls	r4, r7
90012e32:	8819      	ldrh	r1, [r3, #0]
90012e34:	434c      	muls	r4, r1
90012e36:	eb04 0444 	add.w	r4, r4, r4, lsl #1
90012e3a:	1b2d      	subs	r5, r5, r4
90012e3c:	e7ee      	b.n	90012e1c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
90012e3e:	4b04      	ldr	r3, [pc, #16]	@ (90012e50 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
90012e40:	437c      	muls	r4, r7
90012e42:	8819      	ldrh	r1, [r3, #0]
90012e44:	434c      	muls	r4, r1
90012e46:	eba5 0584 	sub.w	r5, r5, r4, lsl #2
90012e4a:	e7e7      	b.n	90012e1c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
90012e4c:	24021c08 	.word	0x24021c08
90012e50:	24021c06 	.word	0x24021c06

90012e54 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
90012e54:	b5f0      	push	{r4, r5, r6, r7, lr}
90012e56:	b08b      	sub	sp, #44	@ 0x2c
90012e58:	4617      	mov	r7, r2
90012e5a:	4604      	mov	r4, r0
90012e5c:	460e      	mov	r6, r1
90012e5e:	461d      	mov	r5, r3
90012e60:	f7ff ff86 	bl	90012d70 <_ZN8touchgfx3HAL3lcdEv>
90012e64:	6803      	ldr	r3, [r0, #0]
90012e66:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012e68:	4798      	blx	r3
90012e6a:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
90012e6e:	9007      	str	r0, [sp, #28]
90012e70:	4631      	mov	r1, r6
90012e72:	6822      	ldr	r2, [r4, #0]
90012e74:	e9cd 0308 	strd	r0, r3, [sp, #32]
90012e78:	4b0c      	ldr	r3, [pc, #48]	@ (90012eac <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
90012e7a:	4620      	mov	r0, r4
90012e7c:	881b      	ldrh	r3, [r3, #0]
90012e7e:	9306      	str	r3, [sp, #24]
90012e80:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90012e84:	9305      	str	r3, [sp, #20]
90012e86:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
90012e8a:	9304      	str	r3, [sp, #16]
90012e8c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90012e90:	9303      	str	r3, [sp, #12]
90012e92:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90012e96:	9302      	str	r3, [sp, #8]
90012e98:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90012e9c:	e9cd 5300 	strd	r5, r3, [sp]
90012ea0:	463b      	mov	r3, r7
90012ea2:	6c15      	ldr	r5, [r2, #64]	@ 0x40
90012ea4:	2200      	movs	r2, #0
90012ea6:	47a8      	blx	r5
90012ea8:	b00b      	add	sp, #44	@ 0x2c
90012eaa:	bdf0      	pop	{r4, r5, r6, r7, pc}
90012eac:	24021c06 	.word	0x24021c06

90012eb0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
90012eb0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90012eb4:	4698      	mov	r8, r3
90012eb6:	6803      	ldr	r3, [r0, #0]
90012eb8:	b08b      	sub	sp, #44	@ 0x2c
90012eba:	4617      	mov	r7, r2
90012ebc:	6c1d      	ldr	r5, [r3, #64]	@ 0x40
90012ebe:	460e      	mov	r6, r1
90012ec0:	4b13      	ldr	r3, [pc, #76]	@ (90012f10 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
90012ec2:	4604      	mov	r4, r0
90012ec4:	f8b3 9000 	ldrh.w	r9, [r3]
90012ec8:	f7ff ff52 	bl	90012d70 <_ZN8touchgfx3HAL3lcdEv>
90012ecc:	6803      	ldr	r3, [r0, #0]
90012ece:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012ed0:	4798      	blx	r3
90012ed2:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
90012ed6:	2200      	movs	r2, #0
90012ed8:	4631      	mov	r1, r6
90012eda:	e9cd 0308 	strd	r0, r3, [sp, #32]
90012ede:	2302      	movs	r3, #2
90012ee0:	4620      	mov	r0, r4
90012ee2:	e9cd 9306 	strd	r9, r3, [sp, #24]
90012ee6:	2301      	movs	r3, #1
90012ee8:	9305      	str	r3, [sp, #20]
90012eea:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
90012eee:	9304      	str	r3, [sp, #16]
90012ef0:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
90012ef4:	9303      	str	r3, [sp, #12]
90012ef6:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90012efa:	9302      	str	r3, [sp, #8]
90012efc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90012f00:	e9cd 8300 	strd	r8, r3, [sp]
90012f04:	463b      	mov	r3, r7
90012f06:	47a8      	blx	r5
90012f08:	b00b      	add	sp, #44	@ 0x2c
90012f0a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90012f0e:	bf00      	nop
90012f10:	24021c06 	.word	0x24021c06

90012f14 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
90012f14:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90012f18:	4698      	mov	r8, r3
90012f1a:	6803      	ldr	r3, [r0, #0]
90012f1c:	b087      	sub	sp, #28
90012f1e:	460e      	mov	r6, r1
90012f20:	6ddd      	ldr	r5, [r3, #92]	@ 0x5c
90012f22:	4617      	mov	r7, r2
90012f24:	4b0f      	ldr	r3, [pc, #60]	@ (90012f64 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
90012f26:	4604      	mov	r4, r0
90012f28:	f8b3 9000 	ldrh.w	r9, [r3]
90012f2c:	f7ff ff20 	bl	90012d70 <_ZN8touchgfx3HAL3lcdEv>
90012f30:	6803      	ldr	r3, [r0, #0]
90012f32:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012f34:	4798      	blx	r3
90012f36:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
90012f3a:	463a      	mov	r2, r7
90012f3c:	4631      	mov	r1, r6
90012f3e:	f8cd 900c 	str.w	r9, [sp, #12]
90012f42:	e9cd 0304 	strd	r0, r3, [sp, #16]
90012f46:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
90012f4a:	4620      	mov	r0, r4
90012f4c:	9302      	str	r3, [sp, #8]
90012f4e:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
90012f52:	9301      	str	r3, [sp, #4]
90012f54:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90012f58:	9300      	str	r3, [sp, #0]
90012f5a:	4643      	mov	r3, r8
90012f5c:	47a8      	blx	r5
90012f5e:	b007      	add	sp, #28
90012f60:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90012f64:	24021c06 	.word	0x24021c06

90012f68 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
90012f68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012f6c:	4604      	mov	r4, r0
90012f6e:	b08f      	sub	sp, #60	@ 0x3c
90012f70:	4610      	mov	r0, r2
90012f72:	460d      	mov	r5, r1
90012f74:	4691      	mov	r9, r2
90012f76:	461e      	mov	r6, r3
90012f78:	f009 fe14 	bl	9001cba4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90012f7c:	2800      	cmp	r0, #0
90012f7e:	f000 809d 	beq.w	900130bc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
90012f82:	6823      	ldr	r3, [r4, #0]
90012f84:	4620      	mov	r0, r4
90012f86:	f8df b198 	ldr.w	fp, [pc, #408]	@ 90013120 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
90012f8a:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
90012f8e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012f90:	4798      	blx	r3
90012f92:	6823      	ldr	r3, [r4, #0]
90012f94:	4620      	mov	r0, r4
90012f96:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 90013124 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
90012f9a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90012f9c:	4798      	blx	r3
90012f9e:	f8bb 3000 	ldrh.w	r3, [fp]
90012fa2:	4f5c      	ldr	r7, [pc, #368]	@ (90013114 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90012fa4:	9301      	str	r3, [sp, #4]
90012fa6:	f8ba 3000 	ldrh.w	r3, [sl]
90012faa:	f828 9d1c 	strh.w	r9, [r8, #-28]!
90012fae:	4640      	mov	r0, r8
90012fb0:	9302      	str	r3, [sp, #8]
90012fb2:	883b      	ldrh	r3, [r7, #0]
90012fb4:	9303      	str	r3, [sp, #12]
90012fb6:	4b58      	ldr	r3, [pc, #352]	@ (90013118 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90012fb8:	881a      	ldrh	r2, [r3, #0]
90012fba:	9305      	str	r3, [sp, #20]
90012fbc:	9204      	str	r2, [sp, #16]
90012fbe:	f009 fe85 	bl	9001cccc <_ZNK8touchgfx6Bitmap8getWidthEv>
90012fc2:	8038      	strh	r0, [r7, #0]
90012fc4:	4640      	mov	r0, r8
90012fc6:	f009 feb5 	bl	9001cd34 <_ZNK8touchgfx6Bitmap9getHeightEv>
90012fca:	9b05      	ldr	r3, [sp, #20]
90012fcc:	b280      	uxth	r0, r0
90012fce:	8018      	strh	r0, [r3, #0]
90012fd0:	4b52      	ldr	r3, [pc, #328]	@ (9001311c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
90012fd2:	781b      	ldrb	r3, [r3, #0]
90012fd4:	2b00      	cmp	r3, #0
90012fd6:	d174      	bne.n	900130c2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
90012fd8:	883b      	ldrh	r3, [r7, #0]
90012fda:	f8aa 0000 	strh.w	r0, [sl]
90012fde:	f8ab 3000 	strh.w	r3, [fp]
90012fe2:	4648      	mov	r0, r9
90012fe4:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
90012fe8:	f009 fddc 	bl	9001cba4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90012fec:	2200      	movs	r2, #0
90012fee:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
90012ff2:	4611      	mov	r1, r2
90012ff4:	4628      	mov	r0, r5
90012ff6:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
90012ffa:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
90012ffe:	f7ff fea9 	bl	90012d54 <_ZN8touchgfx8Drawable5setXYEss>
90013002:	2301      	movs	r3, #1
90013004:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
90013008:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
9001300c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90013010:	2b00      	cmp	r3, #0
90013012:	dd5c      	ble.n	900130ce <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
90013014:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90013018:	2b00      	cmp	r3, #0
9001301a:	dd58      	ble.n	900130ce <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
9001301c:	462a      	mov	r2, r5
9001301e:	ab0a      	add	r3, sp, #40	@ 0x28
90013020:	f852 0f04 	ldr.w	r0, [r2, #4]!
90013024:	6851      	ldr	r1, [r2, #4]
90013026:	c303      	stmia	r3!, {r0, r1}
90013028:	4631      	mov	r1, r6
9001302a:	a80a      	add	r0, sp, #40	@ 0x28
9001302c:	f7ff fbae 	bl	9001278c <_ZN8touchgfx4RectaNERKS0_>
90013030:	4b38      	ldr	r3, [pc, #224]	@ (90013114 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90013032:	2100      	movs	r1, #0
90013034:	f9b3 2000 	ldrsh.w	r2, [r3]
90013038:	4b37      	ldr	r3, [pc, #220]	@ (90013118 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
9001303a:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
9001303e:	aa0a      	add	r2, sp, #40	@ 0x28
90013040:	f9b3 3000 	ldrsh.w	r3, [r3]
90013044:	910c      	str	r1, [sp, #48]	@ 0x30
90013046:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
9001304a:	ab08      	add	r3, sp, #32
9001304c:	e892 0003 	ldmia.w	r2, {r0, r1}
90013050:	e883 0003 	stmia.w	r3, {r0, r1}
90013054:	4618      	mov	r0, r3
90013056:	a90c      	add	r1, sp, #48	@ 0x30
90013058:	f7ff fb98 	bl	9001278c <_ZN8touchgfx4RectaNERKS0_>
9001305c:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
9001305e:	2b00      	cmp	r3, #0
90013060:	d13c      	bne.n	900130dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
90013062:	2000      	movs	r0, #0
90013064:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
90013068:	2600      	movs	r6, #0
9001306a:	696b      	ldr	r3, [r5, #20]
9001306c:	a908      	add	r1, sp, #32
9001306e:	682a      	ldr	r2, [r5, #0]
90013070:	4628      	mov	r0, r5
90013072:	9305      	str	r3, [sp, #20]
90013074:	616e      	str	r6, [r5, #20]
90013076:	6892      	ldr	r2, [r2, #8]
90013078:	4790      	blx	r2
9001307a:	9b05      	ldr	r3, [sp, #20]
9001307c:	4652      	mov	r2, sl
9001307e:	4649      	mov	r1, r9
90013080:	616b      	str	r3, [r5, #20]
90013082:	4628      	mov	r0, r5
90013084:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
90013088:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
9001308c:	f7ff fe62 	bl	90012d54 <_ZN8touchgfx8Drawable5setXYEss>
90013090:	9a01      	ldr	r2, [sp, #4]
90013092:	4b23      	ldr	r3, [pc, #140]	@ (90013120 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
90013094:	4620      	mov	r0, r4
90013096:	801a      	strh	r2, [r3, #0]
90013098:	9a02      	ldr	r2, [sp, #8]
9001309a:	4b22      	ldr	r3, [pc, #136]	@ (90013124 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
9001309c:	801a      	strh	r2, [r3, #0]
9001309e:	9a03      	ldr	r2, [sp, #12]
900130a0:	4b1c      	ldr	r3, [pc, #112]	@ (90013114 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
900130a2:	801a      	strh	r2, [r3, #0]
900130a4:	4b1c      	ldr	r3, [pc, #112]	@ (90013118 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
900130a6:	9a04      	ldr	r2, [sp, #16]
900130a8:	801a      	strh	r2, [r3, #0]
900130aa:	6823      	ldr	r3, [r4, #0]
900130ac:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
900130b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900130b2:	4798      	blx	r3
900130b4:	6823      	ldr	r3, [r4, #0]
900130b6:	4620      	mov	r0, r4
900130b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900130ba:	4798      	blx	r3
900130bc:	b00f      	add	sp, #60	@ 0x3c
900130be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900130c2:	883b      	ldrh	r3, [r7, #0]
900130c4:	f8ab 0000 	strh.w	r0, [fp]
900130c8:	f8aa 3000 	strh.w	r3, [sl]
900130cc:	e789      	b.n	90012fe2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
900130ce:	462a      	mov	r2, r5
900130d0:	ab0a      	add	r3, sp, #40	@ 0x28
900130d2:	f852 0f04 	ldr.w	r0, [r2, #4]!
900130d6:	6851      	ldr	r1, [r2, #4]
900130d8:	c303      	stmia	r3!, {r0, r1}
900130da:	e7a9      	b.n	90013030 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
900130dc:	a807      	add	r0, sp, #28
900130de:	f009 ff6b 	bl	9001cfb8 <_ZNK8touchgfx6Bitmap9getFormatEv>
900130e2:	4606      	mov	r6, r0
900130e4:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
900130e6:	6803      	ldr	r3, [r0, #0]
900130e8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900130ea:	4798      	blx	r3
900130ec:	4286      	cmp	r6, r0
900130ee:	d1b8      	bne.n	90013062 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
900130f0:	f7ff fe3e 	bl	90012d70 <_ZN8touchgfx3HAL3lcdEv>
900130f4:	6803      	ldr	r3, [r0, #0]
900130f6:	4606      	mov	r6, r0
900130f8:	a807      	add	r0, sp, #28
900130fa:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
900130fc:	9305      	str	r3, [sp, #20]
900130fe:	f009 ff5b 	bl	9001cfb8 <_ZNK8touchgfx6Bitmap9getFormatEv>
90013102:	9b05      	ldr	r3, [sp, #20]
90013104:	4601      	mov	r1, r0
90013106:	4630      	mov	r0, r6
90013108:	4798      	blx	r3
9001310a:	f080 0001 	eor.w	r0, r0, #1
9001310e:	b2c0      	uxtb	r0, r0
90013110:	e7a8      	b.n	90013064 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
90013112:	bf00      	nop
90013114:	24021c00 	.word	0x24021c00
90013118:	24021c02 	.word	0x24021c02
9001311c:	24021c04 	.word	0x24021c04
90013120:	24021c06 	.word	0x24021c06
90013124:	24021c08 	.word	0x24021c08

90013128 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
90013128:	4b07      	ldr	r3, [pc, #28]	@ (90013148 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
9001312a:	b510      	push	{r4, lr}
9001312c:	781b      	ldrb	r3, [r3, #0]
9001312e:	4604      	mov	r4, r0
90013130:	b13b      	cbz	r3, 90013142 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90013132:	6803      	ldr	r3, [r0, #0]
90013134:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90013136:	4798      	blx	r3
90013138:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9001313a:	4283      	cmp	r3, r0
9001313c:	d101      	bne.n	90013142 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
9001313e:	6c20      	ldr	r0, [r4, #64]	@ 0x40
90013140:	bd10      	pop	{r4, pc}
90013142:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
90013144:	e7fc      	b.n	90013140 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
90013146:	bf00      	nop
90013148:	24021c0a 	.word	0x24021c0a

9001314c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
9001314c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013150:	461d      	mov	r5, r3
90013152:	b08a      	sub	sp, #40	@ 0x28
90013154:	f44f 6380 	mov.w	r3, #1024	@ 0x400
90013158:	4690      	mov	r8, r2
9001315a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
9001315e:	2400      	movs	r4, #0
90013160:	4607      	mov	r7, r0
90013162:	fb06 8505 	mla	r5, r6, r5, r8
90013166:	9404      	str	r4, [sp, #16]
90013168:	f88d 4020 	strb.w	r4, [sp, #32]
9001316c:	e9cd 3101 	strd	r3, r1, [sp, #4]
90013170:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90013174:	f8ad 3018 	strh.w	r3, [sp, #24]
90013178:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
9001317c:	f8ad 301a 	strh.w	r3, [sp, #26]
90013180:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90013184:	f8ad 301c 	strh.w	r3, [sp, #28]
90013188:	f7ff ffce 	bl	90013128 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
9001318c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90013190:	6878      	ldr	r0, [r7, #4]
90013192:	f8ad 601e 	strh.w	r6, [sp, #30]
90013196:	a901      	add	r1, sp, #4
90013198:	9505      	str	r5, [sp, #20]
9001319a:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
9001319e:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
900131a2:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
900131a6:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
900131aa:	6803      	ldr	r3, [r0, #0]
900131ac:	685b      	ldr	r3, [r3, #4]
900131ae:	4798      	blx	r3
900131b0:	b00a      	add	sp, #40	@ 0x28
900131b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900131b6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
900131b6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900131ba:	b08b      	sub	sp, #44	@ 0x2c
900131bc:	2400      	movs	r4, #0
900131be:	4691      	mov	r9, r2
900131c0:	461d      	mov	r5, r3
900131c2:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
900131c6:	f44f 6300 	mov.w	r3, #2048	@ 0x800
900131ca:	4688      	mov	r8, r1
900131cc:	4607      	mov	r7, r0
900131ce:	9404      	str	r4, [sp, #16]
900131d0:	fb06 9505 	mla	r5, r6, r5, r9
900131d4:	e9cd 3401 	strd	r3, r4, [sp, #4]
900131d8:	f7ff ffa6 	bl	90013128 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900131dc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
900131e0:	eb00 0545 	add.w	r5, r0, r5, lsl #1
900131e4:	6878      	ldr	r0, [r7, #4]
900131e6:	f8ad 3018 	strh.w	r3, [sp, #24]
900131ea:	a901      	add	r1, sp, #4
900131ec:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
900131f0:	9505      	str	r5, [sp, #20]
900131f2:	f8ad 301a 	strh.w	r3, [sp, #26]
900131f6:	f8ad 401c 	strh.w	r4, [sp, #28]
900131fa:	f8ad 601e 	strh.w	r6, [sp, #30]
900131fe:	f8cd 8010 	str.w	r8, [sp, #16]
90013202:	f8ad 4020 	strh.w	r4, [sp, #32]
90013206:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
9001320a:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
9001320e:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
90013212:	6803      	ldr	r3, [r0, #0]
90013214:	685b      	ldr	r3, [r3, #4]
90013216:	4798      	blx	r3
90013218:	b00b      	add	sp, #44	@ 0x2c
9001321a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

90013220 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
90013220:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013224:	b08a      	sub	sp, #40	@ 0x28
90013226:	4698      	mov	r8, r3
90013228:	2300      	movs	r3, #0
9001322a:	4606      	mov	r6, r0
9001322c:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
90013230:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
90013234:	2d0b      	cmp	r5, #11
90013236:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
9001323a:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
9001323e:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
90013242:	9304      	str	r3, [sp, #16]
90013244:	d137      	bne.n	900132b6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
90013246:	2380      	movs	r3, #128	@ 0x80
90013248:	f88d 0020 	strb.w	r0, [sp, #32]
9001324c:	4630      	mov	r0, r6
9001324e:	9203      	str	r2, [sp, #12]
90013250:	e9cd 3101 	strd	r3, r1, [sp, #4]
90013254:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90013258:	f8ad 3018 	strh.w	r3, [sp, #24]
9001325c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90013260:	f8ad 301a 	strh.w	r3, [sp, #26]
90013264:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90013268:	f8ad 301c 	strh.w	r3, [sp, #28]
9001326c:	f7ff ff5c 	bl	90013128 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90013270:	2c0b      	cmp	r4, #11
90013272:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
90013276:	f8ad 701e 	strh.w	r7, [sp, #30]
9001327a:	bf94      	ite	ls
9001327c:	4b19      	ldrls	r3, [pc, #100]	@ (900132e4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
9001327e:	2100      	movhi	r1, #0
90013280:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
90013284:	bf98      	it	ls
90013286:	5d19      	ldrbls	r1, [r3, r4]
90013288:	fb02 8307 	mla	r3, r2, r7, r8
9001328c:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90013290:	10c9      	asrs	r1, r1, #3
90013292:	fb01 0003 	mla	r0, r1, r3, r0
90013296:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
9001329a:	a901      	add	r1, sp, #4
9001329c:	9005      	str	r0, [sp, #20]
9001329e:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
900132a2:	2300      	movs	r3, #0
900132a4:	6870      	ldr	r0, [r6, #4]
900132a6:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
900132aa:	6803      	ldr	r3, [r0, #0]
900132ac:	685b      	ldr	r3, [r3, #4]
900132ae:	4798      	blx	r3
900132b0:	b00a      	add	sp, #40	@ 0x28
900132b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900132b6:	2d02      	cmp	r5, #2
900132b8:	d109      	bne.n	900132ce <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
900132ba:	28ff      	cmp	r0, #255	@ 0xff
900132bc:	d105      	bne.n	900132ca <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
900132be:	f1bc 0f00 	cmp.w	ip, #0
900132c2:	bf14      	ite	ne
900132c4:	2340      	movne	r3, #64	@ 0x40
900132c6:	2320      	moveq	r3, #32
900132c8:	e7be      	b.n	90013248 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
900132ca:	2340      	movs	r3, #64	@ 0x40
900132cc:	e7bc      	b.n	90013248 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
900132ce:	28ff      	cmp	r0, #255	@ 0xff
900132d0:	d105      	bne.n	900132de <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
900132d2:	f1bc 0f00 	cmp.w	ip, #0
900132d6:	bf14      	ite	ne
900132d8:	2304      	movne	r3, #4
900132da:	2301      	moveq	r3, #1
900132dc:	e7b4      	b.n	90013248 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
900132de:	2304      	movs	r3, #4
900132e0:	e7b2      	b.n	90013248 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
900132e2:	bf00      	nop
900132e4:	90031980 	.word	0x90031980

900132e8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
900132e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900132ec:	b08b      	sub	sp, #44	@ 0x2c
900132ee:	461d      	mov	r5, r3
900132f0:	2400      	movs	r4, #0
900132f2:	4688      	mov	r8, r1
900132f4:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
900132f8:	4693      	mov	fp, r2
900132fa:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
900132fe:	4607      	mov	r7, r0
90013300:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90013304:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
90013308:	9404      	str	r4, [sp, #16]
9001330a:	bf14      	ite	ne
9001330c:	2308      	movne	r3, #8
9001330e:	2302      	moveq	r3, #2
90013310:	fb05 b50a 	mla	r5, r5, sl, fp
90013314:	e9cd 3401 	strd	r3, r4, [sp, #4]
90013318:	f7ff ff06 	bl	90013128 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
9001331c:	2e0b      	cmp	r6, #11
9001331e:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
90013322:	a901      	add	r1, sp, #4
90013324:	bf98      	it	ls
90013326:	4b13      	ldrls	r3, [pc, #76]	@ (90013374 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
90013328:	f8ad a01e 	strh.w	sl, [sp, #30]
9001332c:	bf98      	it	ls
9001332e:	5d9c      	ldrbls	r4, [r3, r6]
90013330:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
90013334:	10e4      	asrs	r4, r4, #3
90013336:	f8cd 8010 	str.w	r8, [sp, #16]
9001333a:	f8ad 3018 	strh.w	r3, [sp, #24]
9001333e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
90013342:	fb04 0405 	mla	r4, r4, r5, r0
90013346:	6878      	ldr	r0, [r7, #4]
90013348:	f8ad 301a 	strh.w	r3, [sp, #26]
9001334c:	2300      	movs	r3, #0
9001334e:	9405      	str	r4, [sp, #20]
90013350:	f8ad 301c 	strh.w	r3, [sp, #28]
90013354:	f88d 9020 	strb.w	r9, [sp, #32]
90013358:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
9001335c:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
90013360:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
90013364:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
90013368:	6803      	ldr	r3, [r0, #0]
9001336a:	685b      	ldr	r3, [r3, #4]
9001336c:	4798      	blx	r3
9001336e:	b00b      	add	sp, #44	@ 0x2c
90013370:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013374:	90031980 	.word	0x90031980

90013378 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
90013378:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001337c:	461e      	mov	r6, r3
9001337e:	4b0a      	ldr	r3, [pc, #40]	@ (900133a8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
90013380:	460f      	mov	r7, r1
90013382:	4690      	mov	r8, r2
90013384:	881d      	ldrh	r5, [r3, #0]
90013386:	f7ff fcf3 	bl	90012d70 <_ZN8touchgfx3HAL3lcdEv>
9001338a:	6803      	ldr	r3, [r0, #0]
9001338c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001338e:	4798      	blx	r3
90013390:	280b      	cmp	r0, #11
90013392:	bf96      	itet	ls
90013394:	4b05      	ldrls	r3, [pc, #20]	@ (900133ac <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
90013396:	2400      	movhi	r4, #0
90013398:	5c1c      	ldrbls	r4, [r3, r0]
9001339a:	fb08 7005 	mla	r0, r8, r5, r7
9001339e:	10e4      	asrs	r4, r4, #3
900133a0:	fb04 6000 	mla	r0, r4, r0, r6
900133a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900133a8:	24021c06 	.word	0x24021c06
900133ac:	90031980 	.word	0x90031980

900133b0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
900133b0:	b5f0      	push	{r4, r5, r6, r7, lr}
900133b2:	b08b      	sub	sp, #44	@ 0x2c
900133b4:	461f      	mov	r7, r3
900133b6:	4604      	mov	r4, r0
900133b8:	4616      	mov	r6, r2
900133ba:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
900133be:	2500      	movs	r5, #0
900133c0:	e9cd 3101 	strd	r3, r1, [sp, #4]
900133c4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
900133c8:	9504      	str	r5, [sp, #16]
900133ca:	f8ad 3018 	strh.w	r3, [sp, #24]
900133ce:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
900133d2:	f8ad 301a 	strh.w	r3, [sp, #26]
900133d6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
900133da:	f8ad 301c 	strh.w	r3, [sp, #28]
900133de:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
900133e2:	f88d 3020 	strb.w	r3, [sp, #32]
900133e6:	f7ff fe9f 	bl	90013128 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900133ea:	463a      	mov	r2, r7
900133ec:	4631      	mov	r1, r6
900133ee:	4603      	mov	r3, r0
900133f0:	4620      	mov	r0, r4
900133f2:	f7ff ffc1 	bl	90013378 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
900133f6:	4b0e      	ldr	r3, [pc, #56]	@ (90013430 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
900133f8:	9005      	str	r0, [sp, #20]
900133fa:	881b      	ldrh	r3, [r3, #0]
900133fc:	f8ad 301e 	strh.w	r3, [sp, #30]
90013400:	f7ff fcb6 	bl	90012d70 <_ZN8touchgfx3HAL3lcdEv>
90013404:	6803      	ldr	r3, [r0, #0]
90013406:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90013408:	4798      	blx	r3
9001340a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
9001340c:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
90013410:	a901      	add	r1, sp, #4
90013412:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
90013416:	9304      	str	r3, [sp, #16]
90013418:	6860      	ldr	r0, [r4, #4]
9001341a:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
9001341e:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
90013422:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
90013426:	6803      	ldr	r3, [r0, #0]
90013428:	685b      	ldr	r3, [r3, #4]
9001342a:	4798      	blx	r3
9001342c:	b00b      	add	sp, #44	@ 0x2c
9001342e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90013430:	24021c06 	.word	0x24021c06

90013434 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
90013434:	b5f0      	push	{r4, r5, r6, r7, lr}
90013436:	b08d      	sub	sp, #52	@ 0x34
90013438:	2501      	movs	r5, #1
9001343a:	4604      	mov	r4, r0
9001343c:	466b      	mov	r3, sp
9001343e:	9503      	str	r5, [sp, #12]
90013440:	e883 0006 	stmia.w	r3, {r1, r2}
90013444:	2300      	movs	r3, #0
90013446:	f8bd 6000 	ldrh.w	r6, [sp]
9001344a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
9001344e:	9306      	str	r3, [sp, #24]
90013450:	6803      	ldr	r3, [r0, #0]
90013452:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90013454:	4798      	blx	r3
90013456:	463a      	mov	r2, r7
90013458:	4631      	mov	r1, r6
9001345a:	4603      	mov	r3, r0
9001345c:	4620      	mov	r0, r4
9001345e:	f7ff ff8b 	bl	90013378 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90013462:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90013464:	9004      	str	r0, [sp, #16]
90013466:	9307      	str	r3, [sp, #28]
90013468:	f8bd 3004 	ldrh.w	r3, [sp, #4]
9001346c:	f8ad 3020 	strh.w	r3, [sp, #32]
90013470:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90013474:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
90013478:	4b0e      	ldr	r3, [pc, #56]	@ (900134b4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
9001347a:	881b      	ldrh	r3, [r3, #0]
9001347c:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
90013480:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
90013484:	f7ff fc74 	bl	90012d70 <_ZN8touchgfx3HAL3lcdEv>
90013488:	6803      	ldr	r3, [r0, #0]
9001348a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001348c:	4798      	blx	r3
9001348e:	23ff      	movs	r3, #255	@ 0xff
90013490:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
90013494:	a903      	add	r1, sp, #12
90013496:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
9001349a:	6860      	ldr	r0, [r4, #4]
9001349c:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
900134a0:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
900134a4:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
900134a8:	6803      	ldr	r3, [r0, #0]
900134aa:	685b      	ldr	r3, [r3, #4]
900134ac:	4798      	blx	r3
900134ae:	6c60      	ldr	r0, [r4, #68]	@ 0x44
900134b0:	b00d      	add	sp, #52	@ 0x34
900134b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
900134b4:	24021c06 	.word	0x24021c06

900134b8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
900134b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900134bc:	b08c      	sub	sp, #48	@ 0x30
900134be:	461e      	mov	r6, r3
900134c0:	2300      	movs	r3, #0
900134c2:	4604      	mov	r4, r0
900134c4:	466d      	mov	r5, sp
900134c6:	9306      	str	r3, [sp, #24]
900134c8:	6803      	ldr	r3, [r0, #0]
900134ca:	e885 0006 	stmia.w	r5, {r1, r2}
900134ce:	2501      	movs	r5, #1
900134d0:	f8bd 7000 	ldrh.w	r7, [sp]
900134d4:	f8bd 8002 	ldrh.w	r8, [sp, #2]
900134d8:	9503      	str	r5, [sp, #12]
900134da:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
900134dc:	4798      	blx	r3
900134de:	4642      	mov	r2, r8
900134e0:	4639      	mov	r1, r7
900134e2:	4603      	mov	r3, r0
900134e4:	4620      	mov	r0, r4
900134e6:	f7ff ff47 	bl	90013378 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
900134ea:	f8bd 3004 	ldrh.w	r3, [sp, #4]
900134ee:	9004      	str	r0, [sp, #16]
900134f0:	f8ad 3020 	strh.w	r3, [sp, #32]
900134f4:	f8bd 3006 	ldrh.w	r3, [sp, #6]
900134f8:	9607      	str	r6, [sp, #28]
900134fa:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
900134fe:	4b10      	ldr	r3, [pc, #64]	@ (90013540 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
90013500:	881b      	ldrh	r3, [r3, #0]
90013502:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
90013506:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90013508:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
9001350c:	f7ff fc30 	bl	90012d70 <_ZN8touchgfx3HAL3lcdEv>
90013510:	6803      	ldr	r3, [r0, #0]
90013512:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90013514:	4798      	blx	r3
90013516:	23ff      	movs	r3, #255	@ 0xff
90013518:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
9001351c:	a903      	add	r1, sp, #12
9001351e:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
90013522:	6860      	ldr	r0, [r4, #4]
90013524:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
90013528:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
9001352c:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
90013530:	6803      	ldr	r3, [r0, #0]
90013532:	685b      	ldr	r3, [r3, #4]
90013534:	4798      	blx	r3
90013536:	4630      	mov	r0, r6
90013538:	b00c      	add	sp, #48	@ 0x30
9001353a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001353e:	bf00      	nop
90013540:	24021c06 	.word	0x24021c06

90013544 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
90013544:	b5f0      	push	{r4, r5, r6, r7, lr}
90013546:	b085      	sub	sp, #20
90013548:	4605      	mov	r5, r0
9001354a:	ac02      	add	r4, sp, #8
9001354c:	e884 0006 	stmia.w	r4, {r1, r2}
90013550:	f8bd 6008 	ldrh.w	r6, [sp, #8]
90013554:	f8bd 700a 	ldrh.w	r7, [sp, #10]
90013558:	f7ff fde6 	bl	90013128 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
9001355c:	4631      	mov	r1, r6
9001355e:	4603      	mov	r3, r0
90013560:	463a      	mov	r2, r7
90013562:	4628      	mov	r0, r5
90013564:	f7ff ff08 	bl	90013378 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90013568:	4a05      	ldr	r2, [pc, #20]	@ (90013580 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
9001356a:	682b      	ldr	r3, [r5, #0]
9001356c:	8812      	ldrh	r2, [r2, #0]
9001356e:	9200      	str	r2, [sp, #0]
90013570:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
90013572:	4603      	mov	r3, r0
90013574:	4628      	mov	r0, r5
90013576:	e894 0006 	ldmia.w	r4, {r1, r2}
9001357a:	47b0      	blx	r6
9001357c:	b005      	add	sp, #20
9001357e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90013580:	24021c06 	.word	0x24021c06

90013584 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
90013584:	b570      	push	{r4, r5, r6, lr}
90013586:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
9001358a:	4604      	mov	r4, r0
9001358c:	b19b      	cbz	r3, 900135b6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
9001358e:	2002      	movs	r0, #2
90013590:	f7ed fbc2 	bl	90000d18 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
90013594:	2300      	movs	r3, #0
90013596:	4620      	mov	r0, r4
90013598:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
9001359c:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
900135a0:	6823      	ldr	r3, [r4, #0]
900135a2:	f8d3 50c8 	ldr.w	r5, [r3, #200]	@ 0xc8
900135a6:	f7ff fdbf 	bl	90013128 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900135aa:	4601      	mov	r1, r0
900135ac:	4620      	mov	r0, r4
900135ae:	462b      	mov	r3, r5
900135b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900135b4:	4718      	bx	r3
900135b6:	bd70      	pop	{r4, r5, r6, pc}

900135b8 <_ZN8touchgfx3HAL12setMCUActiveEb>:
900135b8:	b570      	push	{r4, r5, r6, lr}
900135ba:	4605      	mov	r5, r0
900135bc:	460c      	mov	r4, r1
900135be:	2003      	movs	r0, #3
900135c0:	b149      	cbz	r1, 900135d6 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
900135c2:	f7ed fb71 	bl	90000ca8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
900135c6:	6928      	ldr	r0, [r5, #16]
900135c8:	b168      	cbz	r0, 900135e6 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
900135ca:	6803      	ldr	r3, [r0, #0]
900135cc:	2101      	movs	r1, #1
900135ce:	695b      	ldr	r3, [r3, #20]
900135d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900135d4:	4718      	bx	r3
900135d6:	f7ed fb83 	bl	90000ce0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
900135da:	6928      	ldr	r0, [r5, #16]
900135dc:	b118      	cbz	r0, 900135e6 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
900135de:	6803      	ldr	r3, [r0, #0]
900135e0:	4621      	mov	r1, r4
900135e2:	695b      	ldr	r3, [r3, #20]
900135e4:	e7f4      	b.n	900135d0 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
900135e6:	bd70      	pop	{r4, r5, r6, pc}

900135e8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
900135e8:	b538      	push	{r3, r4, r5, lr}
900135ea:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
900135ee:	4604      	mov	r4, r0
900135f0:	460d      	mov	r5, r1
900135f2:	428b      	cmp	r3, r1
900135f4:	d006      	beq.n	90013604 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
900135f6:	6803      	ldr	r3, [r0, #0]
900135f8:	b929      	cbnz	r1, 90013606 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
900135fa:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
900135fe:	4798      	blx	r3
90013600:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
90013604:	bd38      	pop	{r3, r4, r5, pc}
90013606:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
9001360a:	e7f8      	b.n	900135fe <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

9001360c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
9001360c:	4b0c      	ldr	r3, [pc, #48]	@ (90013640 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x34>)
9001360e:	b510      	push	{r4, lr}
90013610:	781b      	ldrb	r3, [r3, #0]
90013612:	4604      	mov	r4, r0
90013614:	b953      	cbnz	r3, 9001362c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
90013616:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
9001361a:	b93b      	cbnz	r3, 9001362c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
9001361c:	6840      	ldr	r0, [r0, #4]
9001361e:	f000 f919 	bl	90013854 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
90013622:	b118      	cbz	r0, 9001362c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
90013624:	6862      	ldr	r2, [r4, #4]
90013626:	7a53      	ldrb	r3, [r2, #9]
90013628:	2b00      	cmp	r3, #0
9001362a:	d0fc      	beq.n	90013626 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1a>
9001362c:	f7ee fe7a 	bl	90002324 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90013630:	4620      	mov	r0, r4
90013632:	2100      	movs	r1, #0
90013634:	f7ff ffd8 	bl	900135e8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90013638:	4620      	mov	r0, r4
9001363a:	f7ff fd75 	bl	90013128 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
9001363e:	bd10      	pop	{r4, pc}
90013640:	24021c0a 	.word	0x24021c0a

90013644 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
90013644:	b570      	push	{r4, r5, r6, lr}
90013646:	4604      	mov	r4, r0
90013648:	6803      	ldr	r3, [r0, #0]
9001364a:	b919      	cbnz	r1, 90013654 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
9001364c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001364e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013652:	4718      	bx	r3
90013654:	2200      	movs	r2, #0
90013656:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
9001365a:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
9001365e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90013660:	4798      	blx	r3
90013662:	6863      	ldr	r3, [r4, #4]
90013664:	2101      	movs	r1, #1
90013666:	4605      	mov	r5, r0
90013668:	4620      	mov	r0, r4
9001366a:	7299      	strb	r1, [r3, #10]
9001366c:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
90013670:	f7ff ffba 	bl	900135e8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90013674:	4628      	mov	r0, r5
90013676:	bd70      	pop	{r4, r5, r6, pc}

90013678 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
90013678:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
9001367c:	1a13      	subs	r3, r2, r0
9001367e:	4258      	negs	r0, r3
90013680:	4158      	adcs	r0, r3
90013682:	4770      	bx	lr

90013684 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
90013684:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
90013688:	1a9b      	subs	r3, r3, r2
9001368a:	2b00      	cmp	r3, #0
9001368c:	bfdc      	itt	le
9001368e:	6882      	ldrle	r2, [r0, #8]
90013690:	189b      	addle	r3, r3, r2
90013692:	2b01      	cmp	r3, #1
90013694:	bfcc      	ite	gt
90013696:	2000      	movgt	r0, #0
90013698:	2001      	movle	r0, #1
9001369a:	4770      	bx	lr

9001369c <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
9001369c:	6902      	ldr	r2, [r0, #16]
9001369e:	6843      	ldr	r3, [r0, #4]
900136a0:	2024      	movs	r0, #36	@ 0x24
900136a2:	fb00 3002 	mla	r0, r0, r2, r3
900136a6:	4770      	bx	lr

900136a8 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
900136a8:	6803      	ldr	r3, [r0, #0]
900136aa:	691b      	ldr	r3, [r3, #16]
900136ac:	4718      	bx	r3

900136ae <_ZN8touchgfx13DMA_Interface7executeEv>:
900136ae:	2301      	movs	r3, #1
900136b0:	b570      	push	{r4, r5, r6, lr}
900136b2:	7203      	strb	r3, [r0, #8]
900136b4:	4604      	mov	r4, r0
900136b6:	6840      	ldr	r0, [r0, #4]
900136b8:	6803      	ldr	r3, [r0, #0]
900136ba:	699b      	ldr	r3, [r3, #24]
900136bc:	4798      	blx	r3
900136be:	6803      	ldr	r3, [r0, #0]
900136c0:	4605      	mov	r5, r0
900136c2:	2b40      	cmp	r3, #64	@ 0x40
900136c4:	d00c      	beq.n	900136e0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900136c6:	d810      	bhi.n	900136ea <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
900136c8:	2b04      	cmp	r3, #4
900136ca:	d01d      	beq.n	90013708 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
900136cc:	d804      	bhi.n	900136d8 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
900136ce:	2b01      	cmp	r3, #1
900136d0:	d006      	beq.n	900136e0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900136d2:	2b02      	cmp	r3, #2
900136d4:	d02c      	beq.n	90013730 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
900136d6:	bd70      	pop	{r4, r5, r6, pc}
900136d8:	2b08      	cmp	r3, #8
900136da:	d01d      	beq.n	90013718 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
900136dc:	2b20      	cmp	r3, #32
900136de:	d1fa      	bne.n	900136d6 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
900136e0:	6823      	ldr	r3, [r4, #0]
900136e2:	4620      	mov	r0, r4
900136e4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900136e6:	4798      	blx	r3
900136e8:	e013      	b.n	90013712 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
900136ea:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
900136ee:	d0f7      	beq.n	900136e0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900136f0:	d804      	bhi.n	900136fc <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
900136f2:	2b80      	cmp	r3, #128	@ 0x80
900136f4:	d0f4      	beq.n	900136e0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900136f6:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
900136fa:	e7f0      	b.n	900136de <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
900136fc:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
90013700:	d0ee      	beq.n	900136e0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90013702:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
90013706:	e7e5      	b.n	900136d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
90013708:	6823      	ldr	r3, [r4, #0]
9001370a:	7f01      	ldrb	r1, [r0, #28]
9001370c:	4620      	mov	r0, r4
9001370e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90013710:	4798      	blx	r3
90013712:	6823      	ldr	r3, [r4, #0]
90013714:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90013716:	e006      	b.n	90013726 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
90013718:	6823      	ldr	r3, [r4, #0]
9001371a:	7f01      	ldrb	r1, [r0, #28]
9001371c:	4620      	mov	r0, r4
9001371e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90013720:	4798      	blx	r3
90013722:	6823      	ldr	r3, [r4, #0]
90013724:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90013726:	4629      	mov	r1, r5
90013728:	4620      	mov	r0, r4
9001372a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001372e:	4718      	bx	r3
90013730:	6823      	ldr	r3, [r4, #0]
90013732:	4620      	mov	r0, r4
90013734:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90013736:	4798      	blx	r3
90013738:	e7f3      	b.n	90013722 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

9001373a <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
9001373a:	4770      	bx	lr

9001373c <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
9001373c:	4770      	bx	lr

9001373e <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
9001373e:	4770      	bx	lr

90013740 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
90013740:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
90013744:	b510      	push	{r4, lr}
90013746:	1ad2      	subs	r2, r2, r3
90013748:	2a00      	cmp	r2, #0
9001374a:	bfdc      	itt	le
9001374c:	6884      	ldrle	r4, [r0, #8]
9001374e:	1912      	addle	r2, r2, r4
90013750:	2a01      	cmp	r2, #1
90013752:	dd16      	ble.n	90013782 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
90013754:	6842      	ldr	r2, [r0, #4]
90013756:	2424      	movs	r4, #36	@ 0x24
90013758:	fb04 2303 	mla	r3, r4, r3, r2
9001375c:	f101 0220 	add.w	r2, r1, #32
90013760:	f851 4b04 	ldr.w	r4, [r1], #4
90013764:	4291      	cmp	r1, r2
90013766:	f843 4b04 	str.w	r4, [r3], #4
9001376a:	d1f9      	bne.n	90013760 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
9001376c:	780a      	ldrb	r2, [r1, #0]
9001376e:	701a      	strb	r2, [r3, #0]
90013770:	68c3      	ldr	r3, [r0, #12]
90013772:	6882      	ldr	r2, [r0, #8]
90013774:	f3bf 8f5b 	dmb	ish
90013778:	3301      	adds	r3, #1
9001377a:	429a      	cmp	r2, r3
9001377c:	bfd8      	it	le
9001377e:	1a9b      	suble	r3, r3, r2
90013780:	60c3      	str	r3, [r0, #12]
90013782:	bd10      	pop	{r4, pc}

90013784 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
90013784:	6903      	ldr	r3, [r0, #16]
90013786:	6882      	ldr	r2, [r0, #8]
90013788:	f3bf 8f5b 	dmb	ish
9001378c:	3301      	adds	r3, #1
9001378e:	429a      	cmp	r2, r3
90013790:	bfd8      	it	le
90013792:	1a9b      	suble	r3, r3, r2
90013794:	6103      	str	r3, [r0, #16]
90013796:	4770      	bx	lr

90013798 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
90013798:	b570      	push	{r4, r5, r6, lr}
9001379a:	4604      	mov	r4, r0
9001379c:	460e      	mov	r6, r1
9001379e:	6860      	ldr	r0, [r4, #4]
900137a0:	6803      	ldr	r3, [r0, #0]
900137a2:	685b      	ldr	r3, [r3, #4]
900137a4:	4798      	blx	r3
900137a6:	2800      	cmp	r0, #0
900137a8:	d1f9      	bne.n	9001379e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
900137aa:	4d0d      	ldr	r5, [pc, #52]	@ (900137e0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
900137ac:	6828      	ldr	r0, [r5, #0]
900137ae:	6803      	ldr	r3, [r0, #0]
900137b0:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
900137b4:	4798      	blx	r3
900137b6:	f7ee fdc3 	bl	90002340 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
900137ba:	6828      	ldr	r0, [r5, #0]
900137bc:	2101      	movs	r1, #1
900137be:	f7ff ff13 	bl	900135e8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
900137c2:	6860      	ldr	r0, [r4, #4]
900137c4:	4631      	mov	r1, r6
900137c6:	6803      	ldr	r3, [r0, #0]
900137c8:	689b      	ldr	r3, [r3, #8]
900137ca:	4798      	blx	r3
900137cc:	6823      	ldr	r3, [r4, #0]
900137ce:	4620      	mov	r0, r4
900137d0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900137d2:	4798      	blx	r3
900137d4:	6828      	ldr	r0, [r5, #0]
900137d6:	6803      	ldr	r3, [r0, #0]
900137d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900137dc:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
900137de:	4718      	bx	r3
900137e0:	24021c0c 	.word	0x24021c0c

900137e4 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
900137e4:	b508      	push	{r3, lr}
900137e6:	f7ee fd9d 	bl	90002324 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
900137ea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
900137ee:	f7ee bda1 	b.w	90002334 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

900137f2 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
900137f2:	b510      	push	{r4, lr}
900137f4:	4604      	mov	r4, r0
900137f6:	2114      	movs	r1, #20
900137f8:	f019 fa60 	bl	9002ccbc <_ZdlPvj>
900137fc:	4620      	mov	r0, r4
900137fe:	bd10      	pop	{r4, pc}

90013800 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
90013800:	b570      	push	{r4, r5, r6, lr}
90013802:	4604      	mov	r4, r0
90013804:	6840      	ldr	r0, [r0, #4]
90013806:	6803      	ldr	r3, [r0, #0]
90013808:	681b      	ldr	r3, [r3, #0]
9001380a:	4798      	blx	r3
9001380c:	4605      	mov	r5, r0
9001380e:	b930      	cbnz	r0, 9001381e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90013810:	7a23      	ldrb	r3, [r4, #8]
90013812:	b123      	cbz	r3, 9001381e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90013814:	6860      	ldr	r0, [r4, #4]
90013816:	6803      	ldr	r3, [r0, #0]
90013818:	695b      	ldr	r3, [r3, #20]
9001381a:	4798      	blx	r3
9001381c:	7225      	strb	r5, [r4, #8]
9001381e:	6860      	ldr	r0, [r4, #4]
90013820:	6803      	ldr	r3, [r0, #0]
90013822:	681b      	ldr	r3, [r3, #0]
90013824:	4798      	blx	r3
90013826:	b928      	cbnz	r0, 90013834 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
90013828:	6823      	ldr	r3, [r4, #0]
9001382a:	4620      	mov	r0, r4
9001382c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9001382e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013832:	4718      	bx	r3
90013834:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013838:	f7ee bd8a 	b.w	90002350 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

9001383c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
9001383c:	b510      	push	{r4, lr}
9001383e:	6082      	str	r2, [r0, #8]
90013840:	2200      	movs	r2, #0
90013842:	4c03      	ldr	r4, [pc, #12]	@ (90013850 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
90013844:	e9c0 2203 	strd	r2, r2, [r0, #12]
90013848:	e9c0 4100 	strd	r4, r1, [r0]
9001384c:	bd10      	pop	{r4, pc}
9001384e:	bf00      	nop
90013850:	90031994 	.word	0x90031994

90013854 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
90013854:	6840      	ldr	r0, [r0, #4]
90013856:	6803      	ldr	r3, [r0, #0]
90013858:	681b      	ldr	r3, [r3, #0]
9001385a:	4718      	bx	r3
9001385c:	0000      	movs	r0, r0
	...

90013860 <_ZN8touchgfxL10applyNoiseEiihhh>:
90013860:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
90013864:	fb80 0101 	smull	r0, r1, r0, r1
90013868:	4f21      	ldr	r7, [pc, #132]	@ (900138f0 <_ZN8touchgfxL10applyNoiseEiihhh+0x90>)
9001386a:	461c      	mov	r4, r3
9001386c:	4616      	mov	r6, r2
9001386e:	fba0 bc07 	umull	fp, ip, r0, r7
90013872:	f89d 5018 	ldrb.w	r5, [sp, #24]
90013876:	fb07 cc01 	mla	ip, r7, r1, ip
9001387a:	fbab 010b 	umull	r0, r1, fp, fp
9001387e:	fb0b f70c 	mul.w	r7, fp, ip
90013882:	fb00 f30c 	mul.w	r3, r0, ip
90013886:	eb01 0147 	add.w	r1, r1, r7, lsl #1
9001388a:	fb0b 3301 	mla	r3, fp, r1, r3
9001388e:	fba0 010b 	umull	r0, r1, r0, fp
90013892:	4419      	add	r1, r3
90013894:	a314      	add	r3, pc, #80	@ (adr r3, 900138e8 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
90013896:	e9d3 2300 	ldrd	r2, r3, [r3]
9001389a:	f7ec ff35 	bl	90000708 <__aeabi_ldivmod>
9001389e:	2ef7      	cmp	r6, #247	@ 0xf7
900138a0:	b290      	uxth	r0, r2
900138a2:	bf9e      	ittt	ls
900138a4:	f002 0207 	andls.w	r2, r2, #7
900138a8:	18b6      	addls	r6, r6, r2
900138aa:	b2f6      	uxtbls	r6, r6
900138ac:	2cfb      	cmp	r4, #251	@ 0xfb
900138ae:	bf9e      	ittt	ls
900138b0:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
900138b4:	18e4      	addls	r4, r4, r3
900138b6:	b2e4      	uxtbls	r4, r4
900138b8:	2df7      	cmp	r5, #247	@ 0xf7
900138ba:	bf98      	it	ls
900138bc:	f3c0 1042 	ubfxls	r0, r0, #5, #3
900138c0:	ea4f 04c4 	mov.w	r4, r4, lsl #3
900138c4:	bf98      	it	ls
900138c6:	182d      	addls	r5, r5, r0
900138c8:	480a      	ldr	r0, [pc, #40]	@ (900138f4 <_ZN8touchgfxL10applyNoiseEiihhh+0x94>)
900138ca:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
900138ce:	ea00 2006 	and.w	r0, r0, r6, lsl #8
900138d2:	bf98      	it	ls
900138d4:	b2ed      	uxtbls	r5, r5
900138d6:	4304      	orrs	r4, r0
900138d8:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
900138dc:	b280      	uxth	r0, r0
900138de:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
900138e2:	bf00      	nop
900138e4:	f3af 8000 	nop.w
900138e8:	797a8d77 	.word	0x797a8d77
900138ec:	00000000 	.word	0x00000000
900138f0:	00ec4ba7 	.word	0x00ec4ba7
900138f4:	fffff800 	.word	0xfffff800

900138f8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
900138f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900138fc:	eb01 0442 	add.w	r4, r1, r2, lsl #1
90013900:	4605      	mov	r5, r0
90013902:	ed2d 8b02 	vpush	{d8}
90013906:	b087      	sub	sp, #28
90013908:	7c41      	ldrb	r1, [r0, #17]
9001390a:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
9001390e:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
90013912:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
90013916:	2900      	cmp	r1, #0
90013918:	f000 809a 	beq.w	90013a50 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
9001391c:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
90013920:	ed90 7a08 	vldr	s14, [r0, #32]
90013924:	454a      	cmp	r2, r9
90013926:	68c0      	ldr	r0, [r0, #12]
90013928:	db25      	blt.n	90013976 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
9001392a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9001392e:	f640 72fc 	movw	r2, #4092	@ 0xffc
90013932:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013936:	bfc8      	it	gt
90013938:	2200      	movgt	r2, #0
9001393a:	5882      	ldr	r2, [r0, r2]
9001393c:	2100      	movs	r1, #0
9001393e:	ea4f 2812 	mov.w	r8, r2, lsr #8
90013942:	7c2d      	ldrb	r5, [r5, #16]
90013944:	0950      	lsrs	r0, r2, #5
90013946:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
9001394a:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
9001394e:	eb04 0746 	add.w	r7, r4, r6, lsl #1
90013952:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90013956:	2d00      	cmp	r5, #0
90013958:	d044      	beq.n	900139e4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
9001395a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001395e:	d141      	bne.n	900139e4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
90013960:	bb61      	cbnz	r1, 900139bc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
90013962:	ea4e 0000 	orr.w	r0, lr, r0
90013966:	ea4c 0500 	orr.w	r5, ip, r0
9001396a:	42bc      	cmp	r4, r7
9001396c:	f080 8214 	bcs.w	90013d98 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90013970:	f824 5b02 	strh.w	r5, [r4], #2
90013974:	e7f9      	b.n	9001396a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
90013976:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
9001397a:	454f      	cmp	r7, r9
9001397c:	dc08      	bgt.n	90013990 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
9001397e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90013982:	f640 72fc 	movw	r2, #4092	@ 0xffc
90013986:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001398a:	bfd8      	it	le
9001398c:	2200      	movle	r2, #0
9001398e:	e7d4      	b.n	9001393a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
90013990:	eba9 0202 	sub.w	r2, r9, r2
90013994:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90013998:	ee07 2a90 	vmov	s15, r2
9001399c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900139a0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900139a4:	ee67 7a87 	vmul.f32	s15, s15, s14
900139a8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
900139ac:	ee17 2a90 	vmov	r2, s15
900139b0:	bfd8      	it	le
900139b2:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
900139b6:	0092      	lsls	r2, r2, #2
900139b8:	5882      	ldr	r2, [r0, r2]
900139ba:	e7c0      	b.n	9001393e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
900139bc:	b2d5      	uxtb	r5, r2
900139be:	f3c2 4a07 	ubfx	sl, r2, #16, #8
900139c2:	fa5f f888 	uxtb.w	r8, r8
900139c6:	461e      	mov	r6, r3
900139c8:	42bc      	cmp	r4, r7
900139ca:	f080 81e5 	bcs.w	90013d98 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900139ce:	4630      	mov	r0, r6
900139d0:	9500      	str	r5, [sp, #0]
900139d2:	4643      	mov	r3, r8
900139d4:	4652      	mov	r2, sl
900139d6:	4649      	mov	r1, r9
900139d8:	3601      	adds	r6, #1
900139da:	f7ff ff41 	bl	90013860 <_ZN8touchgfxL10applyNoiseEiihhh>
900139de:	f824 0b02 	strh.w	r0, [r4], #2
900139e2:	e7f1      	b.n	900139c8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
900139e4:	0e12      	lsrs	r2, r2, #24
900139e6:	26ff      	movs	r6, #255	@ 0xff
900139e8:	fb02 f20a 	mul.w	r2, r2, sl
900139ec:	1c53      	adds	r3, r2, #1
900139ee:	eb03 2222 	add.w	r2, r3, r2, asr #8
900139f2:	1212      	asrs	r2, r2, #8
900139f4:	fb02 f50c 	mul.w	r5, r2, ip
900139f8:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 90013dac <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
900139fc:	fb02 f10e 	mul.w	r1, r2, lr
90013a00:	4350      	muls	r0, r2
90013a02:	43d2      	mvns	r2, r2
90013a04:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
90013a08:	42bc      	cmp	r4, r7
90013a0a:	f080 81c5 	bcs.w	90013d98 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90013a0e:	f8b4 e000 	ldrh.w	lr, [r4]
90013a12:	ea0e 030c 	and.w	r3, lr, ip
90013a16:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
90013a1a:	f00e 0e1f 	and.w	lr, lr, #31
90013a1e:	fb02 1303 	mla	r3, r2, r3, r1
90013a22:	fb02 0808 	mla	r8, r2, r8, r0
90013a26:	fb02 5e0e 	mla	lr, r2, lr, r5
90013a2a:	fb93 f3f6 	sdiv	r3, r3, r6
90013a2e:	fb98 f8f6 	sdiv	r8, r8, r6
90013a32:	fb9e fef6 	sdiv	lr, lr, r6
90013a36:	ea03 030c 	and.w	r3, r3, ip
90013a3a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90013a3e:	f00e 0e1f 	and.w	lr, lr, #31
90013a42:	ea43 0308 	orr.w	r3, r3, r8
90013a46:	ea43 030e 	orr.w	r3, r3, lr
90013a4a:	f824 3b02 	strh.w	r3, [r4], #2
90013a4e:	e7db      	b.n	90013a08 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
90013a50:	7c82      	ldrb	r2, [r0, #18]
90013a52:	2a00      	cmp	r2, #0
90013a54:	d04f      	beq.n	90013af6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
90013a56:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
90013a5a:	ee07 2a90 	vmov	s15, r2
90013a5e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90013a62:	ee07 3a10 	vmov	s14, r3
90013a66:	461f      	mov	r7, r3
90013a68:	eef8 6ac7 	vcvt.f32.s32	s13, s14
90013a6c:	eef4 6ae7 	vcmpe.f32	s13, s15
90013a70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013a74:	f200 8095 	bhi.w	90013ba2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
90013a78:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90013a7c:	f640 71fc 	movw	r1, #4092	@ 0xffc
90013a80:	68ea      	ldr	r2, [r5, #12]
90013a82:	f895 c010 	ldrb.w	ip, [r5, #16]
90013a86:	ee37 7a87 	vadd.f32	s14, s15, s14
90013a8a:	ee37 7a66 	vsub.f32	s14, s14, s13
90013a8e:	ee06 6a90 	vmov	s13, r6
90013a92:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90013a96:	eeb4 7ae6 	vcmpe.f32	s14, s13
90013a9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013a9e:	bf4a      	itet	mi
90013aa0:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
90013aa4:	9602      	strpl	r6, [sp, #8]
90013aa6:	ed8d 7a02 	vstrmi	s14, [sp, #8]
90013aaa:	ed95 7a08 	vldr	s14, [r5, #32]
90013aae:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90013ab2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013ab6:	bfc8      	it	gt
90013ab8:	2100      	movgt	r1, #0
90013aba:	5852      	ldr	r2, [r2, r1]
90013abc:	9902      	ldr	r1, [sp, #8]
90013abe:	ea4f 2b12 	mov.w	fp, r2, lsr #8
90013ac2:	eb04 0141 	add.w	r1, r4, r1, lsl #1
90013ac6:	0950      	lsrs	r0, r2, #5
90013ac8:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
90013acc:	9103      	str	r1, [sp, #12]
90013ace:	f3c2 01c4 	ubfx	r1, r2, #3, #5
90013ad2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90013ad6:	f1bc 0f00 	cmp.w	ip, #0
90013ada:	d024      	beq.n	90013b26 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
90013adc:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90013ae0:	d121      	bne.n	90013b26 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
90013ae2:	ea4b 0b00 	orr.w	fp, fp, r0
90013ae6:	ea41 010b 	orr.w	r1, r1, fp
90013aea:	9a03      	ldr	r2, [sp, #12]
90013aec:	4294      	cmp	r4, r2
90013aee:	d255      	bcs.n	90013b9c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
90013af0:	f824 1b02 	strh.w	r1, [r4], #2
90013af4:	e7f9      	b.n	90013aea <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
90013af6:	ee07 9a10 	vmov	s14, r9
90013afa:	edd0 7a06 	vldr	s15, [r0, #24]
90013afe:	edd0 6a05 	vldr	s13, [r0, #20]
90013b02:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90013b06:	ee37 7a67 	vsub.f32	s14, s14, s15
90013b0a:	eec7 7a26 	vdiv.f32	s15, s14, s13
90013b0e:	ed90 7a08 	vldr	s14, [r0, #32]
90013b12:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90013b16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013b1a:	bf44      	itt	mi
90013b1c:	ed90 7a07 	vldrmi	s14, [r0, #28]
90013b20:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
90013b24:	e79d      	b.n	90013a62 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
90013b26:	0e12      	lsrs	r2, r2, #24
90013b28:	f8df 8280 	ldr.w	r8, [pc, #640]	@ 90013dac <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
90013b2c:	f04f 0eff 	mov.w	lr, #255	@ 0xff
90013b30:	fb02 f20a 	mul.w	r2, r2, sl
90013b34:	f102 0c01 	add.w	ip, r2, #1
90013b38:	eb0c 2222 	add.w	r2, ip, r2, asr #8
90013b3c:	1212      	asrs	r2, r2, #8
90013b3e:	4350      	muls	r0, r2
90013b40:	4351      	muls	r1, r2
90013b42:	fb02 fb0b 	mul.w	fp, r2, fp
90013b46:	43d2      	mvns	r2, r2
90013b48:	9004      	str	r0, [sp, #16]
90013b4a:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
90013b4e:	9105      	str	r1, [sp, #20]
90013b50:	9903      	ldr	r1, [sp, #12]
90013b52:	428c      	cmp	r4, r1
90013b54:	d222      	bcs.n	90013b9c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
90013b56:	8820      	ldrh	r0, [r4, #0]
90013b58:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
90013b5c:	ea00 0c08 	and.w	ip, r0, r8
90013b60:	460f      	mov	r7, r1
90013b62:	9904      	ldr	r1, [sp, #16]
90013b64:	fb02 bc0c 	mla	ip, r2, ip, fp
90013b68:	fb02 1107 	mla	r1, r2, r7, r1
90013b6c:	fb9c fcfe 	sdiv	ip, ip, lr
90013b70:	fb91 f1fe 	sdiv	r1, r1, lr
90013b74:	ea0c 0c08 	and.w	ip, ip, r8
90013b78:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90013b7c:	ea4c 0101 	orr.w	r1, ip, r1
90013b80:	f000 0c1f 	and.w	ip, r0, #31
90013b84:	9805      	ldr	r0, [sp, #20]
90013b86:	fb02 0c0c 	mla	ip, r2, ip, r0
90013b8a:	fb9c fcfe 	sdiv	ip, ip, lr
90013b8e:	f00c 0c1f 	and.w	ip, ip, #31
90013b92:	ea41 010c 	orr.w	r1, r1, ip
90013b96:	f824 1b02 	strh.w	r1, [r4], #2
90013b9a:	e7d9      	b.n	90013b50 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
90013b9c:	9a02      	ldr	r2, [sp, #8]
90013b9e:	441a      	add	r2, r3
90013ba0:	4617      	mov	r7, r2
90013ba2:	441e      	add	r6, r3
90013ba4:	b236      	sxth	r6, r6
90013ba6:	42be      	cmp	r6, r7
90013ba8:	f340 80f6 	ble.w	90013d98 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90013bac:	ed95 7a07 	vldr	s14, [r5, #28]
90013bb0:	ee06 7a90 	vmov	s13, r7
90013bb4:	ee37 7a87 	vadd.f32	s14, s15, s14
90013bb8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90013bbc:	eeb4 7ae6 	vcmpe.f32	s14, s13
90013bc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013bc4:	f340 80b2 	ble.w	90013d2c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x434>
90013bc8:	ee06 6a10 	vmov	s12, r6
90013bcc:	ee76 7ae7 	vsub.f32	s15, s13, s15
90013bd0:	ed9f 8a74 	vldr	s16, [pc, #464]	@ 90013da4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4ac>
90013bd4:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
90013bd8:	7c2b      	ldrb	r3, [r5, #16]
90013bda:	eeb4 7ac6 	vcmpe.f32	s14, s12
90013bde:	ed9f 6a72 	vldr	s12, [pc, #456]	@ 90013da8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
90013be2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013be6:	bfd6      	itet	le
90013be8:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
90013bec:	46b0      	movgt	r8, r6
90013bee:	ee17 8a10 	vmovle	r8, s14
90013bf2:	ed95 7a08 	vldr	s14, [r5, #32]
90013bf6:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90013bfa:	eba8 0707 	sub.w	r7, r8, r7
90013bfe:	eb04 0747 	add.w	r7, r4, r7, lsl #1
90013c02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013c06:	fe38 8a06 	vselgt.f32	s16, s16, s12
90013c0a:	eea7 8a27 	vfma.f32	s16, s14, s15
90013c0e:	b1db      	cbz	r3, 90013c48 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x350>
90013c10:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90013c14:	d118      	bne.n	90013c48 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x350>
90013c16:	42bc      	cmp	r4, r7
90013c18:	d262      	bcs.n	90013ce0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3e8>
90013c1a:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90013c1e:	68eb      	ldr	r3, [r5, #12]
90013c20:	4649      	mov	r1, r9
90013c22:	ee17 0a90 	vmov	r0, s15
90013c26:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
90013c2a:	b2d3      	uxtb	r3, r2
90013c2c:	9300      	str	r3, [sp, #0]
90013c2e:	f3c2 2307 	ubfx	r3, r2, #8, #8
90013c32:	f3c2 4207 	ubfx	r2, r2, #16, #8
90013c36:	f7ff fe13 	bl	90013860 <_ZN8touchgfxL10applyNoiseEiihhh>
90013c3a:	f824 0b02 	strh.w	r0, [r4], #2
90013c3e:	edd5 7a08 	vldr	s15, [r5, #32]
90013c42:	ee38 8a27 	vadd.f32	s16, s16, s15
90013c46:	e7e6      	b.n	90013c16 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x31e>
90013c48:	f8df b160 	ldr.w	fp, [pc, #352]	@ 90013dac <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
90013c4c:	f04f 09ff 	mov.w	r9, #255	@ 0xff
90013c50:	42bc      	cmp	r4, r7
90013c52:	d245      	bcs.n	90013ce0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3e8>
90013c54:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90013c58:	68eb      	ldr	r3, [r5, #12]
90013c5a:	f8b4 e000 	ldrh.w	lr, [r4]
90013c5e:	ee17 2a90 	vmov	r2, s15
90013c62:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
90013c66:	0e13      	lsrs	r3, r2, #24
90013c68:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
90013c6c:	fb03 f30a 	mul.w	r3, r3, sl
90013c70:	b289      	uxth	r1, r1
90013c72:	1c58      	adds	r0, r3, #1
90013c74:	eb00 2023 	add.w	r0, r0, r3, asr #8
90013c78:	ea0e 030b 	and.w	r3, lr, fp
90013c7c:	1200      	asrs	r0, r0, #8
90013c7e:	ea6f 0c00 	mvn.w	ip, r0
90013c82:	fa5f fc8c 	uxtb.w	ip, ip
90013c86:	fb0c f303 	mul.w	r3, ip, r3
90013c8a:	fb00 3101 	mla	r1, r0, r1, r3
90013c8e:	fb91 f1f9 	sdiv	r1, r1, r9
90013c92:	ea01 030b 	and.w	r3, r1, fp
90013c96:	9302      	str	r3, [sp, #8]
90013c98:	0953      	lsrs	r3, r2, #5
90013c9a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90013c9e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90013ca2:	4619      	mov	r1, r3
90013ca4:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
90013ca8:	f00e 0e1f 	and.w	lr, lr, #31
90013cac:	fb0c f303 	mul.w	r3, ip, r3
90013cb0:	fb0c fc0e 	mul.w	ip, ip, lr
90013cb4:	fb00 3301 	mla	r3, r0, r1, r3
90013cb8:	9902      	ldr	r1, [sp, #8]
90013cba:	fb00 c002 	mla	r0, r0, r2, ip
90013cbe:	fb93 f3f9 	sdiv	r3, r3, r9
90013cc2:	fb90 f0f9 	sdiv	r0, r0, r9
90013cc6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90013cca:	f000 001f 	and.w	r0, r0, #31
90013cce:	4319      	orrs	r1, r3
90013cd0:	4301      	orrs	r1, r0
90013cd2:	f824 1b02 	strh.w	r1, [r4], #2
90013cd6:	edd5 7a08 	vldr	s15, [r5, #32]
90013cda:	ee38 8a27 	vadd.f32	s16, s16, s15
90013cde:	e7b7      	b.n	90013c50 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x358>
90013ce0:	4546      	cmp	r6, r8
90013ce2:	dd59      	ble.n	90013d98 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90013ce4:	edd5 7a08 	vldr	s15, [r5, #32]
90013ce8:	f640 73fc 	movw	r3, #4092	@ 0xffc
90013cec:	68ea      	ldr	r2, [r5, #12]
90013cee:	eba6 0608 	sub.w	r6, r6, r8
90013cf2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90013cf6:	7c29      	ldrb	r1, [r5, #16]
90013cf8:	eb04 0646 	add.w	r6, r4, r6, lsl #1
90013cfc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013d00:	bfd8      	it	le
90013d02:	2300      	movle	r3, #0
90013d04:	58d2      	ldr	r2, [r2, r3]
90013d06:	0a10      	lsrs	r0, r2, #8
90013d08:	f3c2 07c4 	ubfx	r7, r2, #3, #5
90013d0c:	0953      	lsrs	r3, r2, #5
90013d0e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90013d12:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90013d16:	b159      	cbz	r1, 90013d30 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x438>
90013d18:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90013d1c:	d108      	bne.n	90013d30 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x438>
90013d1e:	4318      	orrs	r0, r3
90013d20:	4338      	orrs	r0, r7
90013d22:	42b4      	cmp	r4, r6
90013d24:	d238      	bcs.n	90013d98 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90013d26:	f824 0b02 	strh.w	r0, [r4], #2
90013d2a:	e7fa      	b.n	90013d22 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42a>
90013d2c:	46b8      	mov	r8, r7
90013d2e:	e7d9      	b.n	90013ce4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ec>
90013d30:	0e12      	lsrs	r2, r2, #24
90013d32:	f8df c078 	ldr.w	ip, [pc, #120]	@ 90013dac <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
90013d36:	fb02 f10a 	mul.w	r1, r2, sl
90013d3a:	1c4a      	adds	r2, r1, #1
90013d3c:	eb02 2221 	add.w	r2, r2, r1, asr #8
90013d40:	1212      	asrs	r2, r2, #8
90013d42:	fb02 f507 	mul.w	r5, r2, r7
90013d46:	27ff      	movs	r7, #255	@ 0xff
90013d48:	4350      	muls	r0, r2
90013d4a:	4353      	muls	r3, r2
90013d4c:	43d2      	mvns	r2, r2
90013d4e:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
90013d52:	42b4      	cmp	r4, r6
90013d54:	d220      	bcs.n	90013d98 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90013d56:	f8b4 e000 	ldrh.w	lr, [r4]
90013d5a:	ea0e 010c 	and.w	r1, lr, ip
90013d5e:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
90013d62:	f00e 0e1f 	and.w	lr, lr, #31
90013d66:	fb02 0101 	mla	r1, r2, r1, r0
90013d6a:	fb02 3808 	mla	r8, r2, r8, r3
90013d6e:	fb02 5e0e 	mla	lr, r2, lr, r5
90013d72:	fb91 f1f7 	sdiv	r1, r1, r7
90013d76:	fb98 f8f7 	sdiv	r8, r8, r7
90013d7a:	fb9e fef7 	sdiv	lr, lr, r7
90013d7e:	ea01 010c 	and.w	r1, r1, ip
90013d82:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90013d86:	f00e 0e1f 	and.w	lr, lr, #31
90013d8a:	ea41 0108 	orr.w	r1, r1, r8
90013d8e:	ea41 010e 	orr.w	r1, r1, lr
90013d92:	f824 1b02 	strh.w	r1, [r4], #2
90013d96:	e7dc      	b.n	90013d52 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x45a>
90013d98:	b007      	add	sp, #28
90013d9a:	ecbd 8b02 	vpop	{d8}
90013d9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013da2:	bf00      	nop
90013da4:	00000000 	.word	0x00000000
90013da8:	447ffffe 	.word	0x447ffffe
90013dac:	fffff800 	.word	0xfffff800

90013db0 <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
90013db0:	4770      	bx	lr

90013db2 <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
90013db2:	4770      	bx	lr

90013db4 <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
90013db4:	b510      	push	{r4, lr}
90013db6:	4604      	mov	r4, r0
90013db8:	2124      	movs	r1, #36	@ 0x24
90013dba:	f018 ff7f 	bl	9002ccbc <_ZdlPvj>
90013dbe:	4620      	mov	r0, r4
90013dc0:	bd10      	pop	{r4, pc}
	...

90013dc4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90013dc4:	094a      	lsrs	r2, r1, #5
90013dc6:	4b06      	ldr	r3, [pc, #24]	@ (90013de0 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
90013dc8:	60c1      	str	r1, [r0, #12]
90013dca:	ea03 2311 	and.w	r3, r3, r1, lsr #8
90013dce:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90013dd2:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90013dd6:	4313      	orrs	r3, r2
90013dd8:	4319      	orrs	r1, r3
90013dda:	8201      	strh	r1, [r0, #16]
90013ddc:	4770      	bx	lr
90013dde:	bf00      	nop
90013de0:	fffff800 	.word	0xfffff800

90013de4 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90013de4:	f1a0 0008 	sub.w	r0, r0, #8
90013de8:	e7ec      	b.n	90013dc4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
90013dea:	bf00      	nop

90013dec <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
90013dec:	b508      	push	{r3, lr}
90013dee:	4b05      	ldr	r3, [pc, #20]	@ (90013e04 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
90013df0:	6818      	ldr	r0, [r3, #0]
90013df2:	6803      	ldr	r3, [r0, #0]
90013df4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
90013df8:	4798      	blx	r3
90013dfa:	1e43      	subs	r3, r0, #1
90013dfc:	4258      	negs	r0, r3
90013dfe:	4158      	adcs	r0, r3
90013e00:	bd08      	pop	{r3, pc}
90013e02:	bf00      	nop
90013e04:	24021c0c 	.word	0x24021c0c

90013e08 <_ZN8touchgfx13PainterRGB565D1Ev>:
90013e08:	4770      	bx	lr

90013e0a <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
90013e0a:	3808      	subs	r0, #8
90013e0c:	4770      	bx	lr

90013e0e <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
90013e0e:	b430      	push	{r4, r5}
90013e10:	eb01 0442 	add.w	r4, r1, r2, lsl #1
90013e14:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
90013e18:	8a02      	ldrh	r2, [r0, #16]
90013e1a:	f89d 3010 	ldrb.w	r3, [sp, #16]
90013e1e:	4629      	mov	r1, r5
90013e20:	9202      	str	r2, [sp, #8]
90013e22:	68c2      	ldr	r2, [r0, #12]
90013e24:	4620      	mov	r0, r4
90013e26:	bc30      	pop	{r4, r5}
90013e28:	f7ee bd86 	b.w	90002938 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

90013e2c <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
90013e2c:	f7ee bd60 	b.w	900028f0 <_ZN8touchgfx5paint8tearDownEv>

90013e30 <_ZN8touchgfx13PainterRGB565D0Ev>:
90013e30:	b510      	push	{r4, lr}
90013e32:	4604      	mov	r4, r0
90013e34:	2114      	movs	r1, #20
90013e36:	f018 ff41 	bl	9002ccbc <_ZdlPvj>
90013e3a:	4620      	mov	r0, r4
90013e3c:	bd10      	pop	{r4, pc}

90013e3e <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
90013e3e:	f1a0 0008 	sub.w	r0, r0, #8
90013e42:	e7f5      	b.n	90013e30 <_ZN8touchgfx13PainterRGB565D0Ev>

90013e44 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
90013e44:	2300      	movs	r3, #0
90013e46:	84c3      	strh	r3, [r0, #38]	@ 0x26
90013e48:	8503      	strh	r3, [r0, #40]	@ 0x28
90013e4a:	8543      	strh	r3, [r0, #42]	@ 0x2a
90013e4c:	8583      	strh	r3, [r0, #44]	@ 0x2c
90013e4e:	6980      	ldr	r0, [r0, #24]
90013e50:	b110      	cbz	r0, 90013e58 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
90013e52:	6803      	ldr	r3, [r0, #0]
90013e54:	691b      	ldr	r3, [r3, #16]
90013e56:	4718      	bx	r3
90013e58:	4770      	bx	lr

90013e5a <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
90013e5a:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
90013e5e:	4770      	bx	lr

90013e60 <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
90013e60:	b538      	push	{r3, r4, r5, lr}
90013e62:	0e0b      	lsrs	r3, r1, #24
90013e64:	4604      	mov	r4, r0
90013e66:	460d      	mov	r5, r1
90013e68:	7783      	strb	r3, [r0, #30]
90013e6a:	6803      	ldr	r3, [r0, #0]
90013e6c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90013e6e:	4798      	blx	r3
90013e70:	6803      	ldr	r3, [r0, #0]
90013e72:	4629      	mov	r1, r5
90013e74:	689b      	ldr	r3, [r3, #8]
90013e76:	4798      	blx	r3
90013e78:	6823      	ldr	r3, [r4, #0]
90013e7a:	4620      	mov	r0, r4
90013e7c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90013e7e:	4798      	blx	r3
90013e80:	61a0      	str	r0, [r4, #24]
90013e82:	bd38      	pop	{r3, r4, r5, pc}

90013e84 <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
90013e84:	7741      	strb	r1, [r0, #29]
90013e86:	4770      	bx	lr

90013e88 <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
90013e88:	b530      	push	{r4, r5, lr}
90013e8a:	460d      	mov	r5, r1
90013e8c:	f100 0434 	add.w	r4, r0, #52	@ 0x34
90013e90:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
90013e92:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90013e94:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
90013e96:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90013e98:	682b      	ldr	r3, [r5, #0]
90013e9a:	6023      	str	r3, [r4, #0]
90013e9c:	bd30      	pop	{r4, r5, pc}

90013e9e <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
90013e9e:	b538      	push	{r3, r4, r5, lr}
90013ea0:	4604      	mov	r4, r0
90013ea2:	1d03      	adds	r3, r0, #4
90013ea4:	6808      	ldr	r0, [r1, #0]
90013ea6:	2500      	movs	r5, #0
90013ea8:	6849      	ldr	r1, [r1, #4]
90013eaa:	c303      	stmia	r3!, {r0, r1}
90013eac:	6813      	ldr	r3, [r2, #0]
90013eae:	f104 0034 	add.w	r0, r4, #52	@ 0x34
90013eb2:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
90013eb6:	6853      	ldr	r3, [r2, #4]
90013eb8:	61a5      	str	r5, [r4, #24]
90013eba:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
90013ebe:	f006 fe7d 	bl	9001abbc <_ZN8touchgfx9Matrix3x35resetEv>
90013ec2:	23ff      	movs	r3, #255	@ 0xff
90013ec4:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
90013ec8:	7763      	strb	r3, [r4, #29]
90013eca:	77a3      	strb	r3, [r4, #30]
90013ecc:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
90013ed0:	6323      	str	r3, [r4, #48]	@ 0x30
90013ed2:	2301      	movs	r3, #1
90013ed4:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
90013ed8:	bd38      	pop	{r3, r4, r5, pc}
	...

90013edc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
90013edc:	ee70 7a41 	vsub.f32	s15, s0, s2
90013ee0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90013ee4:	eef5 7a40 	vcmp.f32	s15, #0.0
90013ee8:	4605      	mov	r5, r0
90013eea:	ed2d 8b0a 	vpush	{d8-d12}
90013eee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013ef2:	b087      	sub	sp, #28
90013ef4:	eef0 9a40 	vmov.f32	s19, s0
90013ef8:	6802      	ldr	r2, [r0, #0]
90013efa:	eeb0 aa60 	vmov.f32	s20, s1
90013efe:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
90013f02:	eeb0 9a41 	vmov.f32	s18, s2
90013f06:	9f19      	ldr	r7, [sp, #100]	@ 0x64
90013f08:	eef0 8a61 	vmov.f32	s17, s3
90013f0c:	eeb0 ca42 	vmov.f32	s24, s4
90013f10:	eef0 ca62 	vmov.f32	s25, s5
90013f14:	d112      	bne.n	90013f3c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
90013f16:	ee70 7ae1 	vsub.f32	s15, s1, s3
90013f1a:	eef5 7a40 	vcmp.f32	s15, #0.0
90013f1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013f22:	d10b      	bne.n	90013f3c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
90013f24:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
90013f28:	6a92      	ldr	r2, [r2, #40]	@ 0x28
90013f2a:	3901      	subs	r1, #1
90013f2c:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
90013f30:	b007      	add	sp, #28
90013f32:	ecbd 8b0a 	vpop	{d8-d12}
90013f36:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
90013f3a:	4710      	bx	r2
90013f3c:	23ff      	movs	r3, #255	@ 0xff
90013f3e:	4628      	mov	r0, r5
90013f40:	f105 0834 	add.w	r8, r5, #52	@ 0x34
90013f44:	f8df 92c4 	ldr.w	r9, [pc, #708]	@ 9001420c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x330>
90013f48:	77ab      	strb	r3, [r5, #30]
90013f4a:	6b93      	ldr	r3, [r2, #56]	@ 0x38
90013f4c:	4798      	blx	r3
90013f4e:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
90013f52:	eeb0 0a69 	vmov.f32	s0, s19
90013f56:	4604      	mov	r4, r0
90013f58:	80c3      	strh	r3, [r0, #6]
90013f5a:	eef0 0a4a 	vmov.f32	s1, s20
90013f5e:	4640      	mov	r0, r8
90013f60:	f006 fedb 	bl	9001ad1a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90013f64:	eeb0 ba40 	vmov.f32	s22, s0
90013f68:	ed8d 0a00 	vstr	s0, [sp]
90013f6c:	eeb0 0a49 	vmov.f32	s0, s18
90013f70:	eef0 ba60 	vmov.f32	s23, s1
90013f74:	edcd 0a01 	vstr	s1, [sp, #4]
90013f78:	4640      	mov	r0, r8
90013f7a:	eef0 0a68 	vmov.f32	s1, s17
90013f7e:	f006 fecc 	bl	9001ad1a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90013f82:	eeb4 ba40 	vcmp.f32	s22, s0
90013f86:	eeb0 8a40 	vmov.f32	s16, s0
90013f8a:	ed8d 0a02 	vstr	s0, [sp, #8]
90013f8e:	eef0 aa60 	vmov.f32	s21, s1
90013f92:	edcd 0a03 	vstr	s1, [sp, #12]
90013f96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013f9a:	eef4 ba60 	vcmp.f32	s23, s1
90013f9e:	bf0c      	ite	eq
90013fa0:	2301      	moveq	r3, #1
90013fa2:	2300      	movne	r3, #0
90013fa4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013fa8:	eeb4 ba40 	vcmp.f32	s22, s0
90013fac:	7463      	strb	r3, [r4, #17]
90013fae:	bf0c      	ite	eq
90013fb0:	2301      	moveq	r3, #1
90013fb2:	2300      	movne	r3, #0
90013fb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013fb8:	74a3      	strb	r3, [r4, #18]
90013fba:	d031      	beq.n	90014020 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x144>
90013fbc:	eef4 ba60 	vcmp.f32	s23, s1
90013fc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013fc4:	d02c      	beq.n	90014020 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x144>
90013fc6:	ee39 9a69 	vsub.f32	s18, s18, s19
90013fca:	4640      	mov	r0, r8
90013fcc:	ee78 8aca 	vsub.f32	s17, s17, s20
90013fd0:	eef0 0a4a 	vmov.f32	s1, s20
90013fd4:	ee89 7a0c 	vdiv.f32	s14, s18, s24
90013fd8:	eec8 7aac 	vdiv.f32	s15, s17, s25
90013fdc:	eeb0 0a69 	vmov.f32	s0, s19
90013fe0:	eeec 0a87 	vfma.f32	s1, s25, s14
90013fe4:	eea7 0acc 	vfms.f32	s0, s15, s24
90013fe8:	f006 fe97 	bl	9001ad1a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90013fec:	f899 3000 	ldrb.w	r3, [r9]
90013ff0:	edcd 0a05 	vstr	s1, [sp, #20]
90013ff4:	ee70 0aeb 	vsub.f32	s1, s1, s23
90013ff8:	2b01      	cmp	r3, #1
90013ffa:	bf08      	it	eq
90013ffc:	eef1 7a60 	vnegeq.f32	s15, s1
90014000:	ed8d 0a04 	vstr	s0, [sp, #16]
90014004:	ee30 0a4b 	vsub.f32	s0, s0, s22
90014008:	bf04      	itt	eq
9001400a:	eef0 0a40 	vmoveq.f32	s1, s0
9001400e:	eeb0 0a67 	vmoveq.f32	s0, s15
90014012:	eeb5 0a40 	vcmp.f32	s0, #0.0
90014016:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001401a:	d135      	bne.n	90014088 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ac>
9001401c:	2301      	movs	r3, #1
9001401e:	74a3      	strb	r3, [r4, #18]
90014020:	f899 2000 	ldrb.w	r2, [r9]
90014024:	7c63      	ldrb	r3, [r4, #17]
90014026:	2a01      	cmp	r2, #1
90014028:	f040 80a3 	bne.w	90014172 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x296>
9001402c:	2b00      	cmp	r3, #0
9001402e:	d073      	beq.n	90014118 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x23c>
90014030:	ee3a 7aeb 	vsub.f32	s14, s21, s23
90014034:	eddf 6a73 	vldr	s13, [pc, #460]	@ 90014204 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
90014038:	eef4 baea 	vcmpe.f32	s23, s21
9001403c:	eec6 7a87 	vdiv.f32	s15, s13, s14
90014040:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014044:	edc4 7a08 	vstr	s15, [r4, #32]
90014048:	eefd 7aea 	vcvt.s32.f32	s15, s21
9001404c:	ee17 3a90 	vmov	r3, s15
90014050:	eefd 7aeb 	vcvt.s32.f32	s15, s23
90014054:	b21a      	sxth	r2, r3
90014056:	ee17 3a90 	vmov	r3, s15
9001405a:	bf48      	it	mi
9001405c:	8162      	strhmi	r2, [r4, #10]
9001405e:	b21b      	sxth	r3, r3
90014060:	bf56      	itet	pl
90014062:	8122      	strhpl	r2, [r4, #8]
90014064:	8123      	strhmi	r3, [r4, #8]
90014066:	8163      	strhpl	r3, [r4, #10]
90014068:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
9001406c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90014070:	1a9b      	subs	r3, r3, r2
90014072:	ee07 3a90 	vmov	s15, r3
90014076:	2300      	movs	r3, #0
90014078:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001407c:	7463      	strb	r3, [r4, #17]
9001407e:	2301      	movs	r3, #1
90014080:	edc4 7a07 	vstr	s15, [r4, #28]
90014084:	74a3      	strb	r3, [r4, #18]
90014086:	e03f      	b.n	90014108 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90014088:	ee80 7a80 	vdiv.f32	s14, s1, s0
9001408c:	eeb5 7a40 	vcmp.f32	s14, #0.0
90014090:	ed84 7a05 	vstr	s14, [r4, #20]
90014094:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014098:	d102      	bne.n	900140a0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1c4>
9001409a:	2301      	movs	r3, #1
9001409c:	7463      	strb	r3, [r4, #17]
9001409e:	e7bf      	b.n	90014020 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x144>
900140a0:	2b01      	cmp	r3, #1
900140a2:	ee38 8a4b 	vsub.f32	s16, s16, s22
900140a6:	ee7a aaeb 	vsub.f32	s21, s21, s23
900140aa:	bf0b      	itete	eq
900140ac:	f9b4 2006 	ldrsheq.w	r2, [r4, #6]
900140b0:	eef0 7a6b 	vmovne.f32	s15, s23
900140b4:	ee07 2a90 	vmoveq	s15, r2
900140b8:	eeeb 7a47 	vfmsne.f32	s15, s22, s14
900140bc:	bf02      	ittt	eq
900140be:	eef8 7ae7 	vcvteq.f32.s32	s15, s15
900140c2:	ee77 7acb 	vsubeq.f32	s15, s15, s22
900140c6:	eeeb 7ac7 	vfmseq.f32	s15, s23, s14
900140ca:	2b01      	cmp	r3, #1
900140cc:	edc4 7a06 	vstr	s15, [r4, #24]
900140d0:	bf02      	ittt	eq
900140d2:	eef1 7a48 	vnegeq.f32	s15, s16
900140d6:	eeb0 8a6a 	vmoveq.f32	s16, s21
900140da:	eef0 aa67 	vmoveq.f32	s21, s15
900140de:	eeca 7a87 	vdiv.f32	s15, s21, s14
900140e2:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 90014208 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x32c>
900140e6:	ee38 8a67 	vsub.f32	s16, s16, s15
900140ea:	eec7 7a08 	vdiv.f32	s15, s14, s16
900140ee:	ed84 8a07 	vstr	s16, [r4, #28]
900140f2:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
900140f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900140fa:	edc4 7a08 	vstr	s15, [r4, #32]
900140fe:	d503      	bpl.n	90014108 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90014100:	eeb1 8a48 	vneg.f32	s16, s16
90014104:	ed84 8a07 	vstr	s16, [r4, #28]
90014108:	60e7      	str	r7, [r4, #12]
9001410a:	7426      	strb	r6, [r4, #16]
9001410c:	61ac      	str	r4, [r5, #24]
9001410e:	b007      	add	sp, #28
90014110:	ecbd 8b0a 	vpop	{d8-d12}
90014114:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90014118:	7ca3      	ldrb	r3, [r4, #18]
9001411a:	2b00      	cmp	r3, #0
9001411c:	d0f4      	beq.n	90014108 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
9001411e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90014122:	eddf 6a38 	vldr	s13, [pc, #224]	@ 90014204 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
90014126:	ee00 3a10 	vmov	s0, r3
9001412a:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
9001412e:	ee30 8a48 	vsub.f32	s16, s0, s16
90014132:	ee30 0a4b 	vsub.f32	s0, s0, s22
90014136:	ee38 7a40 	vsub.f32	s14, s16, s0
9001413a:	eeb4 8ac0 	vcmpe.f32	s16, s0
9001413e:	eec6 7a87 	vdiv.f32	s15, s13, s14
90014142:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014146:	edc4 7a08 	vstr	s15, [r4, #32]
9001414a:	eefd 7ac8 	vcvt.s32.f32	s15, s16
9001414e:	ee17 3a90 	vmov	r3, s15
90014152:	eefd 7ac0 	vcvt.s32.f32	s15, s0
90014156:	b21a      	sxth	r2, r3
90014158:	ee17 3a90 	vmov	r3, s15
9001415c:	bfc8      	it	gt
9001415e:	8162      	strhgt	r2, [r4, #10]
90014160:	b21b      	sxth	r3, r3
90014162:	bfd6      	itet	le
90014164:	8122      	strhle	r2, [r4, #8]
90014166:	8123      	strhgt	r3, [r4, #8]
90014168:	8163      	strhle	r3, [r4, #10]
9001416a:	2301      	movs	r3, #1
9001416c:	7463      	strb	r3, [r4, #17]
9001416e:	2300      	movs	r3, #0
90014170:	e788      	b.n	90014084 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a8>
90014172:	b1e3      	cbz	r3, 900141ae <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2d2>
90014174:	ee3a 7aeb 	vsub.f32	s14, s21, s23
90014178:	eddf 6a22 	vldr	s13, [pc, #136]	@ 90014204 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
9001417c:	eef4 baea 	vcmpe.f32	s23, s21
90014180:	eec6 7a87 	vdiv.f32	s15, s13, s14
90014184:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014188:	edc4 7a08 	vstr	s15, [r4, #32]
9001418c:	eefd 7aea 	vcvt.s32.f32	s15, s21
90014190:	ee17 3a90 	vmov	r3, s15
90014194:	eefd 7aeb 	vcvt.s32.f32	s15, s23
90014198:	b21a      	sxth	r2, r3
9001419a:	ee17 3a90 	vmov	r3, s15
9001419e:	bf48      	it	mi
900141a0:	8162      	strhmi	r2, [r4, #10]
900141a2:	b21b      	sxth	r3, r3
900141a4:	bf56      	itet	pl
900141a6:	8122      	strhpl	r2, [r4, #8]
900141a8:	8123      	strhmi	r3, [r4, #8]
900141aa:	8163      	strhpl	r3, [r4, #10]
900141ac:	e7ac      	b.n	90014108 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
900141ae:	7ca3      	ldrb	r3, [r4, #18]
900141b0:	2b00      	cmp	r3, #0
900141b2:	d0a9      	beq.n	90014108 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
900141b4:	ee38 7a4b 	vsub.f32	s14, s16, s22
900141b8:	eddf 6a12 	vldr	s13, [pc, #72]	@ 90014204 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
900141bc:	eeb4 bac8 	vcmpe.f32	s22, s16
900141c0:	eec6 7a87 	vdiv.f32	s15, s13, s14
900141c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900141c8:	edc4 7a08 	vstr	s15, [r4, #32]
900141cc:	eefd 7ac8 	vcvt.s32.f32	s15, s16
900141d0:	ee17 3a90 	vmov	r3, s15
900141d4:	eefd 7acb 	vcvt.s32.f32	s15, s22
900141d8:	b21a      	sxth	r2, r3
900141da:	ee17 3a90 	vmov	r3, s15
900141de:	bf48      	it	mi
900141e0:	8162      	strhmi	r2, [r4, #10]
900141e2:	b21b      	sxth	r3, r3
900141e4:	bf56      	itet	pl
900141e6:	8122      	strhpl	r2, [r4, #8]
900141e8:	8123      	strhmi	r3, [r4, #8]
900141ea:	8163      	strhpl	r3, [r4, #10]
900141ec:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
900141f0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
900141f4:	1a9b      	subs	r3, r3, r2
900141f6:	ee07 3a90 	vmov	s15, r3
900141fa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900141fe:	edc4 7a07 	vstr	s15, [r4, #28]
90014202:	e781      	b.n	90014108 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90014204:	447ffffe 	.word	0x447ffffe
90014208:	44800000 	.word	0x44800000
9001420c:	24021c04 	.word	0x24021c04

90014210 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
90014210:	b510      	push	{r4, lr}
90014212:	ed2d 8b02 	vpush	{d8}
90014216:	eef0 8a62 	vmov.f32	s17, s5
9001421a:	2100      	movs	r1, #0
9001421c:	4604      	mov	r4, r0
9001421e:	eeb0 8a42 	vmov.f32	s16, s4
90014222:	f018 fabd 	bl	9002c7a0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
90014226:	eef0 7a68 	vmov.f32	s15, s17
9001422a:	6823      	ldr	r3, [r4, #0]
9001422c:	4620      	mov	r0, r4
9001422e:	689b      	ldr	r3, [r3, #8]
90014230:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90014234:	ee17 2a90 	vmov	r2, s15
90014238:	eef0 7a48 	vmov.f32	s15, s16
9001423c:	ecbd 8b02 	vpop	{d8}
90014240:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90014244:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90014248:	ee17 1a90 	vmov	r1, s15
9001424c:	4718      	bx	r3

9001424e <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
9001424e:	b510      	push	{r4, lr}
90014250:	ed2d 8b02 	vpush	{d8}
90014254:	eef0 8a63 	vmov.f32	s17, s7
90014258:	2100      	movs	r1, #0
9001425a:	4604      	mov	r4, r0
9001425c:	eeb0 8a43 	vmov.f32	s16, s6
90014260:	f018 fb60 	bl	9002c924 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
90014264:	eef0 7a68 	vmov.f32	s15, s17
90014268:	6823      	ldr	r3, [r4, #0]
9001426a:	4620      	mov	r0, r4
9001426c:	689b      	ldr	r3, [r3, #8]
9001426e:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90014272:	ee17 2a90 	vmov	r2, s15
90014276:	eef0 7a48 	vmov.f32	s15, s16
9001427a:	ecbd 8b02 	vpop	{d8}
9001427e:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90014282:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90014286:	ee17 1a90 	vmov	r1, s15
9001428a:	4718      	bx	r3

9001428c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
9001428c:	b513      	push	{r0, r1, r4, lr}
9001428e:	4604      	mov	r4, r0
90014290:	6f40      	ldr	r0, [r0, #116]	@ 0x74
90014292:	f006 fd42 	bl	9001ad1a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90014296:	eef0 7a60 	vmov.f32	s15, s1
9001429a:	4620      	mov	r0, r4
9001429c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900142a0:	ee17 2a90 	vmov	r2, s15
900142a4:	eef0 7a40 	vmov.f32	s15, s0
900142a8:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900142ac:	ee17 1a90 	vmov	r1, s15
900142b0:	b002      	add	sp, #8
900142b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900142b6:	f018 b9cd 	b.w	9002c654 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

900142ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
900142ba:	b513      	push	{r0, r1, r4, lr}
900142bc:	4604      	mov	r4, r0
900142be:	6f40      	ldr	r0, [r0, #116]	@ 0x74
900142c0:	f006 fd2b 	bl	9001ad1a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900142c4:	eef0 7a60 	vmov.f32	s15, s1
900142c8:	4620      	mov	r0, r4
900142ca:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900142ce:	ee17 2a90 	vmov	r2, s15
900142d2:	eef0 7a40 	vmov.f32	s15, s0
900142d6:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900142da:	ee17 1a90 	vmov	r1, s15
900142de:	b002      	add	sp, #8
900142e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900142e4:	f018 ba03 	b.w	9002c6ee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

900142e8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
900142e8:	b5f0      	push	{r4, r5, r6, r7, lr}
900142ea:	2400      	movs	r4, #0
900142ec:	9f07      	ldr	r7, [sp, #28]
900142ee:	f04f 0e01 	mov.w	lr, #1
900142f2:	4626      	mov	r6, r4
900142f4:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
900142f8:	4463      	add	r3, ip
900142fa:	4563      	cmp	r3, ip
900142fc:	d02d      	beq.n	9001435a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
900142fe:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
90014302:	2d06      	cmp	r5, #6
90014304:	d8f9      	bhi.n	900142fa <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90014306:	fa0e f505 	lsl.w	r5, lr, r5
9001430a:	f015 0f66 	tst.w	r5, #102	@ 0x66
9001430e:	d10d      	bne.n	9001432c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
90014310:	f015 0f10 	tst.w	r5, #16
90014314:	d117      	bne.n	90014346 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
90014316:	072d      	lsls	r5, r5, #28
90014318:	d5ef      	bpl.n	900142fa <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
9001431a:	3801      	subs	r0, #1
9001431c:	b91e      	cbnz	r6, 90014326 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
9001431e:	eb07 0580 	add.w	r5, r7, r0, lsl #2
90014322:	682d      	ldr	r5, [r5, #0]
90014324:	600d      	str	r5, [r1, #0]
90014326:	b96c      	cbnz	r4, 90014344 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90014328:	2601      	movs	r6, #1
9001432a:	e7e6      	b.n	900142fa <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
9001432c:	b926      	cbnz	r6, 90014338 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
9001432e:	eb07 0380 	add.w	r3, r7, r0, lsl #2
90014332:	f853 3c08 	ldr.w	r3, [r3, #-8]
90014336:	600b      	str	r3, [r1, #0]
90014338:	b924      	cbnz	r4, 90014344 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
9001433a:	eb07 0080 	add.w	r0, r7, r0, lsl #2
9001433e:	f850 3c04 	ldr.w	r3, [r0, #-4]
90014342:	6013      	str	r3, [r2, #0]
90014344:	bdf0      	pop	{r4, r5, r6, r7, pc}
90014346:	3801      	subs	r0, #1
90014348:	b91c      	cbnz	r4, 90014352 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
9001434a:	eb07 0480 	add.w	r4, r7, r0, lsl #2
9001434e:	6824      	ldr	r4, [r4, #0]
90014350:	6014      	str	r4, [r2, #0]
90014352:	2e00      	cmp	r6, #0
90014354:	d1f6      	bne.n	90014344 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90014356:	2401      	movs	r4, #1
90014358:	e7cf      	b.n	900142fa <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
9001435a:	b90e      	cbnz	r6, 90014360 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
9001435c:	2300      	movs	r3, #0
9001435e:	600b      	str	r3, [r1, #0]
90014360:	2c00      	cmp	r4, #0
90014362:	d1ef      	bne.n	90014344 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90014364:	2300      	movs	r3, #0
90014366:	e7ec      	b.n	90014342 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

90014368 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
90014368:	b538      	push	{r3, r4, r5, lr}
9001436a:	ed2d 8b0a 	vpush	{d8-d12}
9001436e:	eef0 ba40 	vmov.f32	s23, s0
90014372:	4604      	mov	r4, r0
90014374:	eeb0 ca60 	vmov.f32	s24, s1
90014378:	460d      	mov	r5, r1
9001437a:	eef0 aa41 	vmov.f32	s21, s2
9001437e:	eeb0 ba61 	vmov.f32	s22, s3
90014382:	eeb0 9a42 	vmov.f32	s18, s4
90014386:	eef0 9a62 	vmov.f32	s19, s5
9001438a:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
9001438e:	ee7b 8a29 	vadd.f32	s17, s22, s19
90014392:	ee3a 8a89 	vadd.f32	s16, s21, s18
90014396:	ee68 8a8a 	vmul.f32	s17, s17, s20
9001439a:	ee28 8a0a 	vmul.f32	s16, s16, s20
9001439e:	ee3c 0a68 	vsub.f32	s0, s24, s17
900143a2:	ee7b 7ac8 	vsub.f32	s15, s23, s16
900143a6:	ee20 0a00 	vmul.f32	s0, s0, s0
900143aa:	eea7 0aa7 	vfma.f32	s0, s15, s15
900143ae:	f018 fcaf 	bl	9002cd10 <sqrtf>
900143b2:	eeb5 0a40 	vcmp.f32	s0, #0.0
900143b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900143ba:	d12e      	bne.n	9001441a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
900143bc:	ee79 7a6a 	vsub.f32	s15, s18, s21
900143c0:	ee39 7acb 	vsub.f32	s14, s19, s22
900143c4:	eeb0 8a6a 	vmov.f32	s16, s21
900143c8:	eef0 8a4b 	vmov.f32	s17, s22
900143cc:	eea7 8a8a 	vfma.f32	s16, s15, s20
900143d0:	eee7 8a0a 	vfma.f32	s17, s14, s20
900143d4:	eea7 8a0a 	vfma.f32	s16, s14, s20
900143d8:	eee7 8aca 	vfms.f32	s17, s15, s20
900143dc:	2d02      	cmp	r5, #2
900143de:	dc2f      	bgt.n	90014440 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
900143e0:	3501      	adds	r5, #1
900143e2:	eef0 1a4b 	vmov.f32	s3, s22
900143e6:	eeb0 1a6a 	vmov.f32	s2, s21
900143ea:	4620      	mov	r0, r4
900143ec:	4629      	mov	r1, r5
900143ee:	eef0 2a68 	vmov.f32	s5, s17
900143f2:	eeb0 2a48 	vmov.f32	s4, s16
900143f6:	eef0 0a4c 	vmov.f32	s1, s24
900143fa:	eeb0 0a6b 	vmov.f32	s0, s23
900143fe:	f7ff ffb3 	bl	90014368 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
90014402:	eef0 0a68 	vmov.f32	s1, s17
90014406:	eeb0 0a48 	vmov.f32	s0, s16
9001440a:	4620      	mov	r0, r4
9001440c:	f7ff ff55 	bl	900142ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90014410:	eeb0 ba68 	vmov.f32	s22, s17
90014414:	eef0 aa48 	vmov.f32	s21, s16
90014418:	e7b9      	b.n	9001438e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
9001441a:	ee38 8a6b 	vsub.f32	s16, s16, s23
9001441e:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
90014422:	ee78 8acc 	vsub.f32	s17, s17, s24
90014426:	ee28 7a27 	vmul.f32	s14, s16, s15
9001442a:	ee68 7aa7 	vmul.f32	s15, s17, s15
9001442e:	ee87 8a00 	vdiv.f32	s16, s14, s0
90014432:	eec7 8a80 	vdiv.f32	s17, s15, s0
90014436:	ee3b 8a88 	vadd.f32	s16, s23, s16
9001443a:	ee7c 8a28 	vadd.f32	s17, s24, s17
9001443e:	e7cd      	b.n	900143dc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
90014440:	eef0 0a68 	vmov.f32	s1, s17
90014444:	4620      	mov	r0, r4
90014446:	eeb0 0a48 	vmov.f32	s0, s16
9001444a:	f7ff ff36 	bl	900142ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001444e:	ecbd 8b0a 	vpop	{d8-d12}
90014452:	bd38      	pop	{r3, r4, r5, pc}

90014454 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
90014454:	b510      	push	{r4, lr}
90014456:	ed2d 8b0a 	vpush	{d8-d12}
9001445a:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
9001445e:	4604      	mov	r4, r0
90014460:	eeb0 ca40 	vmov.f32	s24, s0
90014464:	2b02      	cmp	r3, #2
90014466:	eeb0 9a60 	vmov.f32	s18, s1
9001446a:	eef0 9a41 	vmov.f32	s19, s2
9001446e:	eef0 8a61 	vmov.f32	s17, s3
90014472:	eeb0 ba42 	vmov.f32	s22, s4
90014476:	eef0 ba62 	vmov.f32	s23, s5
9001447a:	eeb0 aa43 	vmov.f32	s20, s6
9001447e:	eef0 aa63 	vmov.f32	s21, s7
90014482:	eeb0 8a44 	vmov.f32	s16, s8
90014486:	eef0 ca64 	vmov.f32	s25, s9
9001448a:	d12c      	bne.n	900144e6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
9001448c:	eef0 0a62 	vmov.f32	s1, s5
90014490:	eeb0 0a42 	vmov.f32	s0, s4
90014494:	f7ff ff11 	bl	900142ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90014498:	ee79 9acb 	vsub.f32	s19, s19, s22
9001449c:	ee7a caec 	vsub.f32	s25, s21, s25
900144a0:	ee78 8aeb 	vsub.f32	s17, s17, s23
900144a4:	ee3a 8a48 	vsub.f32	s16, s20, s16
900144a8:	ee69 9aac 	vmul.f32	s19, s19, s25
900144ac:	ee28 8a88 	vmul.f32	s16, s17, s16
900144b0:	eef4 9ac8 	vcmpe.f32	s19, s16
900144b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900144b8:	db0f      	blt.n	900144da <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
900144ba:	2101      	movs	r1, #1
900144bc:	eef0 2a6a 	vmov.f32	s5, s21
900144c0:	eeb0 2a4a 	vmov.f32	s4, s20
900144c4:	4620      	mov	r0, r4
900144c6:	eef0 1a6b 	vmov.f32	s3, s23
900144ca:	eeb0 1a4b 	vmov.f32	s2, s22
900144ce:	eef0 0a49 	vmov.f32	s1, s18
900144d2:	eeb0 0a4c 	vmov.f32	s0, s24
900144d6:	f7ff ff47 	bl	90014368 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
900144da:	eef0 0a6a 	vmov.f32	s1, s21
900144de:	4620      	mov	r0, r4
900144e0:	eeb0 0a4a 	vmov.f32	s0, s20
900144e4:	e035      	b.n	90014552 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
900144e6:	2b01      	cmp	r3, #1
900144e8:	d138      	bne.n	9001455c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
900144ea:	ee31 4ae2 	vsub.f32	s8, s3, s5
900144ee:	ee33 6a48 	vsub.f32	s12, s6, s16
900144f2:	ee71 7a42 	vsub.f32	s15, s2, s4
900144f6:	ee73 6ae4 	vsub.f32	s13, s7, s9
900144fa:	ee26 7a44 	vnmul.f32	s14, s12, s8
900144fe:	eea7 7aa6 	vfma.f32	s14, s15, s13
90014502:	eeb5 7a40 	vcmp.f32	s14, #0.0
90014506:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001450a:	d027      	beq.n	9001455c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
9001450c:	ee28 8a63 	vnmul.f32	s16, s16, s7
90014510:	ee61 8ac2 	vnmul.f32	s17, s3, s4
90014514:	eea4 8a83 	vfma.f32	s16, s9, s6
90014518:	eee1 8a22 	vfma.f32	s17, s2, s5
9001451c:	ee68 7a67 	vnmul.f32	s15, s16, s15
90014520:	ee28 8a44 	vnmul.f32	s16, s16, s8
90014524:	eee6 7a28 	vfma.f32	s15, s12, s17
90014528:	eea6 8aa8 	vfma.f32	s16, s13, s17
9001452c:	ee87 0a87 	vdiv.f32	s0, s15, s14
90014530:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
90014534:	eec8 0a07 	vdiv.f32	s1, s16, s14
90014538:	ee3c ca40 	vsub.f32	s24, s24, s0
9001453c:	ee39 9a60 	vsub.f32	s18, s18, s1
90014540:	ee29 9a09 	vmul.f32	s18, s18, s18
90014544:	eeac 9a0c 	vfma.f32	s18, s24, s24
90014548:	eef4 7ac9 	vcmpe.f32	s15, s18
9001454c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014550:	db04      	blt.n	9001455c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
90014552:	f7ff feb2 	bl	900142ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90014556:	ecbd 8b0a 	vpop	{d8-d12}
9001455a:	bd10      	pop	{r4, pc}
9001455c:	eef0 0a6b 	vmov.f32	s1, s23
90014560:	4620      	mov	r0, r4
90014562:	eeb0 0a4b 	vmov.f32	s0, s22
90014566:	f7ff fea8 	bl	900142ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001456a:	e7b6      	b.n	900144da <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

9001456c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
9001456c:	b510      	push	{r4, lr}
9001456e:	ed2d 8b0c 	vpush	{d8-d13}
90014572:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
90014576:	4604      	mov	r4, r0
90014578:	eeb0 9a40 	vmov.f32	s18, s0
9001457c:	eef0 9a60 	vmov.f32	s19, s1
90014580:	eef0 aa41 	vmov.f32	s21, s2
90014584:	eeb0 ba61 	vmov.f32	s22, s3
90014588:	b933      	cbnz	r3, 90014598 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
9001458a:	f7ff fe96 	bl	900142ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001458e:	eef0 0a4b 	vmov.f32	s1, s22
90014592:	eeb0 0a6a 	vmov.f32	s0, s21
90014596:	e015      	b.n	900145c4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
90014598:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
9001459c:	2b02      	cmp	r3, #2
9001459e:	ee71 8a40 	vsub.f32	s17, s2, s0
900145a2:	ee31 8ae0 	vsub.f32	s16, s3, s1
900145a6:	ee68 8aa7 	vmul.f32	s17, s17, s15
900145aa:	ee28 8a27 	vmul.f32	s16, s16, s15
900145ae:	d10f      	bne.n	900145d0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
900145b0:	ee70 0ae8 	vsub.f32	s1, s1, s17
900145b4:	ee30 0a08 	vadd.f32	s0, s0, s16
900145b8:	f7ff fe7f 	bl	900142ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900145bc:	ee7b 0a68 	vsub.f32	s1, s22, s17
900145c0:	ee3a 0a88 	vadd.f32	s0, s21, s16
900145c4:	4620      	mov	r0, r4
900145c6:	f7ff fe78 	bl	900142ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900145ca:	ecbd 8b0c 	vpop	{d8-d13}
900145ce:	bd10      	pop	{r4, pc}
900145d0:	f7ff fe73 	bl	900142ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900145d4:	eef0 0a69 	vmov.f32	s1, s19
900145d8:	eeb0 0a49 	vmov.f32	s0, s18
900145dc:	eddf 7a4b 	vldr	s15, [pc, #300]	@ 9001470c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
900145e0:	eeb1 aa68 	vneg.f32	s20, s17
900145e4:	eddf ba4a 	vldr	s23, [pc, #296]	@ 90014710 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
900145e8:	eee8 0a27 	vfma.f32	s1, s16, s15
900145ec:	4620      	mov	r0, r4
900145ee:	eea8 0aa7 	vfma.f32	s0, s17, s15
900145f2:	ed9f ca48 	vldr	s24, [pc, #288]	@ 90014714 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
900145f6:	eddf ca48 	vldr	s25, [pc, #288]	@ 90014718 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
900145fa:	ed9f da48 	vldr	s26, [pc, #288]	@ 9001471c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
900145fe:	eeea 0a2b 	vfma.f32	s1, s20, s23
90014602:	eea8 0a2b 	vfma.f32	s0, s16, s23
90014606:	f7ff fe58 	bl	900142ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001460a:	eef0 0a69 	vmov.f32	s1, s19
9001460e:	eeb0 0a49 	vmov.f32	s0, s18
90014612:	eddf 7a43 	vldr	s15, [pc, #268]	@ 90014720 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
90014616:	4620      	mov	r0, r4
90014618:	eee8 0a27 	vfma.f32	s1, s16, s15
9001461c:	eea8 0aa7 	vfma.f32	s0, s17, s15
90014620:	eeea 0a0c 	vfma.f32	s1, s20, s24
90014624:	eea8 0a0c 	vfma.f32	s0, s16, s24
90014628:	f7ff fe47 	bl	900142ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001462c:	eef0 0a69 	vmov.f32	s1, s19
90014630:	eeb0 0a49 	vmov.f32	s0, s18
90014634:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 90014724 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
90014638:	4620      	mov	r0, r4
9001463a:	eee8 0a27 	vfma.f32	s1, s16, s15
9001463e:	eea8 0aa7 	vfma.f32	s0, s17, s15
90014642:	eeea 0a2c 	vfma.f32	s1, s20, s25
90014646:	eea8 0a2c 	vfma.f32	s0, s16, s25
9001464a:	f7ff fe36 	bl	900142ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001464e:	eef0 0a69 	vmov.f32	s1, s19
90014652:	eeb0 0a49 	vmov.f32	s0, s18
90014656:	eddf 7a34 	vldr	s15, [pc, #208]	@ 90014728 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
9001465a:	4620      	mov	r0, r4
9001465c:	eee8 0a27 	vfma.f32	s1, s16, s15
90014660:	eea8 0aa7 	vfma.f32	s0, s17, s15
90014664:	eeea 0a0d 	vfma.f32	s1, s20, s26
90014668:	eea8 0a0d 	vfma.f32	s0, s16, s26
9001466c:	f7ff fe25 	bl	900142ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90014670:	ee79 0a88 	vadd.f32	s1, s19, s16
90014674:	ee39 0a28 	vadd.f32	s0, s18, s17
90014678:	4620      	mov	r0, r4
9001467a:	ee70 0ae8 	vsub.f32	s1, s1, s17
9001467e:	ee30 0a08 	vadd.f32	s0, s0, s16
90014682:	f7ff fe1a 	bl	900142ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90014686:	eef0 0a69 	vmov.f32	s1, s19
9001468a:	eeb0 0a49 	vmov.f32	s0, s18
9001468e:	eddf 7a27 	vldr	s15, [pc, #156]	@ 9001472c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
90014692:	4620      	mov	r0, r4
90014694:	eee8 0a27 	vfma.f32	s1, s16, s15
90014698:	eea8 0aa7 	vfma.f32	s0, s17, s15
9001469c:	eeea 0a0d 	vfma.f32	s1, s20, s26
900146a0:	eea8 0a0d 	vfma.f32	s0, s16, s26
900146a4:	f7ff fe09 	bl	900142ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900146a8:	eef0 0a69 	vmov.f32	s1, s19
900146ac:	eeb0 0a49 	vmov.f32	s0, s18
900146b0:	eddf 7a1f 	vldr	s15, [pc, #124]	@ 90014730 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
900146b4:	4620      	mov	r0, r4
900146b6:	eee8 0a27 	vfma.f32	s1, s16, s15
900146ba:	eea8 0aa7 	vfma.f32	s0, s17, s15
900146be:	eeea 0a2c 	vfma.f32	s1, s20, s25
900146c2:	eea8 0a2c 	vfma.f32	s0, s16, s25
900146c6:	f7ff fdf8 	bl	900142ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900146ca:	eef0 0a69 	vmov.f32	s1, s19
900146ce:	eeb0 0a49 	vmov.f32	s0, s18
900146d2:	eddf 7a18 	vldr	s15, [pc, #96]	@ 90014734 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
900146d6:	4620      	mov	r0, r4
900146d8:	eee8 0a27 	vfma.f32	s1, s16, s15
900146dc:	eea8 0aa7 	vfma.f32	s0, s17, s15
900146e0:	eeea 0a0c 	vfma.f32	s1, s20, s24
900146e4:	eea8 0a0c 	vfma.f32	s0, s16, s24
900146e8:	f7ff fde7 	bl	900142ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900146ec:	eef0 0a69 	vmov.f32	s1, s19
900146f0:	eeb0 0a49 	vmov.f32	s0, s18
900146f4:	eddf 7a10 	vldr	s15, [pc, #64]	@ 90014738 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
900146f8:	4620      	mov	r0, r4
900146fa:	eee8 0a27 	vfma.f32	s1, s16, s15
900146fe:	eea8 0aa7 	vfma.f32	s0, s17, s15
90014702:	eeea 0a2b 	vfma.f32	s1, s20, s23
90014706:	eea8 0a2b 	vfma.f32	s0, s16, s23
9001470a:	e73e      	b.n	9001458a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
9001470c:	3d23d70a 	.word	0x3d23d70a
90014710:	3e8f5c29 	.word	0x3e8f5c29
90014714:	3f19999a 	.word	0x3f19999a
90014718:	3f4ccccd 	.word	0x3f4ccccd
9001471c:	3f75c28f 	.word	0x3f75c28f
90014720:	3e4ccccd 	.word	0x3e4ccccd
90014724:	3ecccccd 	.word	0x3ecccccd
90014728:	3f3851ec 	.word	0x3f3851ec
9001472c:	3fa3d70a 	.word	0x3fa3d70a
90014730:	3fcccccd 	.word	0x3fcccccd
90014734:	3fe66666 	.word	0x3fe66666
90014738:	3ffae148 	.word	0x3ffae148

9001473c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
9001473c:	b570      	push	{r4, r5, r6, lr}
9001473e:	ed2d 8b06 	vpush	{d8-d10}
90014742:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
90014746:	eef0 aa40 	vmov.f32	s21, s0
9001474a:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
9001474e:	4604      	mov	r4, r0
90014750:	ee30 8ac8 	vsub.f32	s16, s1, s16
90014754:	ee30 9a49 	vsub.f32	s18, s0, s18
90014758:	eeb0 aa60 	vmov.f32	s20, s1
9001475c:	ee28 0a08 	vmul.f32	s0, s16, s16
90014760:	eea9 0a09 	vfma.f32	s0, s18, s18
90014764:	f018 fad4 	bl	9002cd10 <sqrtf>
90014768:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
9001476c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014770:	dd36      	ble.n	900147e0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
90014772:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
90014776:	2600      	movs	r6, #0
90014778:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
9001477c:	eec0 6a27 	vdiv.f32	s13, s0, s15
90014780:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
90014784:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
90014788:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
9001478c:	eec8 8a26 	vdiv.f32	s17, s16, s13
90014790:	ee89 8a26 	vdiv.f32	s16, s18, s13
90014794:	ee70 9a28 	vadd.f32	s19, s0, s17
90014798:	ee78 8aaa 	vadd.f32	s17, s17, s21
9001479c:	ee30 9ac8 	vsub.f32	s18, s1, s16
900147a0:	ee3a 8a48 	vsub.f32	s16, s20, s16
900147a4:	b1fd      	cbz	r5, 900147e6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
900147a6:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
900147aa:	eef0 0a49 	vmov.f32	s1, s18
900147ae:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
900147b2:	eeb0 0a69 	vmov.f32	s0, s19
900147b6:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
900147ba:	4620      	mov	r0, r4
900147bc:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
900147c0:	f7ff fd64 	bl	9001428c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
900147c4:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
900147c8:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
900147cc:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
900147d0:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
900147d4:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
900147d8:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
900147dc:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
900147e0:	ecbd 8b06 	vpop	{d8-d10}
900147e4:	bd70      	pop	{r4, r5, r6, pc}
900147e6:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
900147ea:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
900147ee:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
900147f2:	b16b      	cbz	r3, 90014810 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
900147f4:	eef0 1a49 	vmov.f32	s3, s18
900147f8:	4620      	mov	r0, r4
900147fa:	eeb0 1a69 	vmov.f32	s2, s19
900147fe:	eef0 0a62 	vmov.f32	s1, s5
90014802:	eeb0 0a42 	vmov.f32	s0, s4
90014806:	f7ff feb1 	bl	9001456c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
9001480a:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
9001480e:	e7db      	b.n	900147c8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
90014810:	eef0 4a48 	vmov.f32	s9, s16
90014814:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
90014818:	eeb0 4a68 	vmov.f32	s8, s17
9001481c:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
90014820:	eef0 3a49 	vmov.f32	s7, s18
90014824:	4620      	mov	r0, r4
90014826:	eeb0 3a69 	vmov.f32	s6, s19
9001482a:	f7ff fe13 	bl	90014454 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
9001482e:	e7cb      	b.n	900147c8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

90014830 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
90014830:	ee07 2a90 	vmov	s15, r2
90014834:	ee07 1a10 	vmov	s14, r1
90014838:	eef8 0ae7 	vcvt.f32.s32	s1, s15
9001483c:	eddf 7a04 	vldr	s15, [pc, #16]	@ 90014850 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
90014840:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
90014844:	ee60 0aa7 	vmul.f32	s1, s1, s15
90014848:	ee20 0a27 	vmul.f32	s0, s0, s15
9001484c:	f7ff bf76 	b.w	9001473c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90014850:	3d000000 	.word	0x3d000000

90014854 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
90014854:	b538      	push	{r3, r4, r5, lr}
90014856:	ed2d 8b02 	vpush	{d8}
9001485a:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
9001485e:	4604      	mov	r4, r0
90014860:	b31d      	cbz	r5, 900148aa <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
90014862:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
90014866:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
9001486a:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
9001486e:	ee78 8a67 	vsub.f32	s17, s16, s15
90014872:	ee38 8a27 	vadd.f32	s16, s16, s15
90014876:	eef0 0a68 	vmov.f32	s1, s17
9001487a:	f7ff fd07 	bl	9001428c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
9001487e:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
90014882:	eef0 1a48 	vmov.f32	s3, s16
90014886:	4620      	mov	r0, r4
90014888:	eeb0 0a41 	vmov.f32	s0, s2
9001488c:	eef0 0a68 	vmov.f32	s1, s17
90014890:	f7ff fe6c 	bl	9001456c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
90014894:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
90014898:	eef0 1a68 	vmov.f32	s3, s17
9001489c:	4620      	mov	r0, r4
9001489e:	eef0 0a48 	vmov.f32	s1, s16
900148a2:	eeb0 0a41 	vmov.f32	s0, s2
900148a6:	f7ff fe61 	bl	9001456c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
900148aa:	4628      	mov	r0, r5
900148ac:	ecbd 8b02 	vpop	{d8}
900148b0:	bd38      	pop	{r3, r4, r5, pc}

900148b2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
900148b2:	b510      	push	{r4, lr}
900148b4:	ed2d 8b02 	vpush	{d8}
900148b8:	4604      	mov	r4, r0
900148ba:	eeb0 8a40 	vmov.f32	s16, s0
900148be:	eef0 8a60 	vmov.f32	s17, s1
900148c2:	f7ff ffc7 	bl	90014854 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
900148c6:	b9d0      	cbnz	r0, 900148fe <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
900148c8:	4620      	mov	r0, r4
900148ca:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
900148ce:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
900148d2:	eef0 0a68 	vmov.f32	s1, s17
900148d6:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
900148da:	eeb0 0a48 	vmov.f32	s0, s16
900148de:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
900148e2:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
900148e6:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
900148ea:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
900148ee:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
900148f2:	f7ff fdaf 	bl	90014454 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
900148f6:	2001      	movs	r0, #1
900148f8:	ecbd 8b02 	vpop	{d8}
900148fc:	bd10      	pop	{r4, pc}
900148fe:	2000      	movs	r0, #0
90014900:	e7fa      	b.n	900148f8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

90014902 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
90014902:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
90014906:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
9001490a:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
9001490e:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
90014912:	f7ff be2b 	b.w	9001456c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

90014918 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
90014918:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001491c:	b089      	sub	sp, #36	@ 0x24
9001491e:	461c      	mov	r4, r3
90014920:	4682      	mov	sl, r0
90014922:	4615      	mov	r5, r2
90014924:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90014928:	f10d 0820 	add.w	r8, sp, #32
9001492c:	9e15      	ldr	r6, [sp, #84]	@ 0x54
9001492e:	9304      	str	r3, [sp, #16]
90014930:	2300      	movs	r3, #0
90014932:	9105      	str	r1, [sp, #20]
90014934:	9306      	str	r3, [sp, #24]
90014936:	f848 3d04 	str.w	r3, [r8, #-4]!
9001493a:	9b04      	ldr	r3, [sp, #16]
9001493c:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
90014940:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
90014944:	9b05      	ldr	r3, [sp, #20]
90014946:	429d      	cmp	r5, r3
90014948:	d96d      	bls.n	90014a26 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
9001494a:	3d01      	subs	r5, #1
9001494c:	f819 3005 	ldrb.w	r3, [r9, r5]
90014950:	2b06      	cmp	r3, #6
90014952:	d8f7      	bhi.n	90014944 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
90014954:	a201      	add	r2, pc, #4	@ (adr r2, 9001495c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
90014956:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
9001495a:	bf00      	nop
9001495c:	9001497b 	.word	0x9001497b
90014960:	90014945 	.word	0x90014945
90014964:	90014979 	.word	0x90014979
90014968:	9001499d 	.word	0x9001499d
9001496c:	9001499d 	.word	0x9001499d
90014970:	900149a1 	.word	0x900149a1
90014974:	900149e1 	.word	0x900149e1
90014978:	3c02      	subs	r4, #2
9001497a:	4650      	mov	r0, sl
9001497c:	9400      	str	r4, [sp, #0]
9001497e:	462b      	mov	r3, r5
90014980:	4642      	mov	r2, r8
90014982:	a906      	add	r1, sp, #24
90014984:	e9cd 9701 	strd	r9, r7, [sp, #4]
90014988:	f7ff fcae 	bl	900142e8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
9001498c:	eddd 0a07 	vldr	s1, [sp, #28]
90014990:	ed9d 0a06 	vldr	s0, [sp, #24]
90014994:	4630      	mov	r0, r6
90014996:	f7ff fed1 	bl	9001473c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
9001499a:	e7d3      	b.n	90014944 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
9001499c:	3c01      	subs	r4, #1
9001499e:	e7ec      	b.n	9001497a <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
900149a0:	f1a4 0b04 	sub.w	fp, r4, #4
900149a4:	3c02      	subs	r4, #2
900149a6:	4650      	mov	r0, sl
900149a8:	462b      	mov	r3, r5
900149aa:	eb07 0484 	add.w	r4, r7, r4, lsl #2
900149ae:	f8cd b000 	str.w	fp, [sp]
900149b2:	4642      	mov	r2, r8
900149b4:	a906      	add	r1, sp, #24
900149b6:	e9cd 9701 	strd	r9, r7, [sp, #4]
900149ba:	f7ff fc95 	bl	900142e8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
900149be:	eddd 2a07 	vldr	s5, [sp, #28]
900149c2:	ed9d 2a06 	vldr	s4, [sp, #24]
900149c6:	4630      	mov	r0, r6
900149c8:	ed54 1a01 	vldr	s3, [r4, #-4]
900149cc:	ed14 1a02 	vldr	s2, [r4, #-8]
900149d0:	edd4 0a01 	vldr	s1, [r4, #4]
900149d4:	ed94 0a00 	vldr	s0, [r4]
900149d8:	f7ff fc1a 	bl	90014210 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
900149dc:	465c      	mov	r4, fp
900149de:	e7b1      	b.n	90014944 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
900149e0:	f1a4 0b06 	sub.w	fp, r4, #6
900149e4:	3c02      	subs	r4, #2
900149e6:	4650      	mov	r0, sl
900149e8:	462b      	mov	r3, r5
900149ea:	eb07 0484 	add.w	r4, r7, r4, lsl #2
900149ee:	f8cd b000 	str.w	fp, [sp]
900149f2:	4642      	mov	r2, r8
900149f4:	a906      	add	r1, sp, #24
900149f6:	e9cd 9701 	strd	r9, r7, [sp, #4]
900149fa:	f7ff fc75 	bl	900142e8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
900149fe:	eddd 3a07 	vldr	s7, [sp, #28]
90014a02:	ed9d 3a06 	vldr	s6, [sp, #24]
90014a06:	4630      	mov	r0, r6
90014a08:	ed54 2a03 	vldr	s5, [r4, #-12]
90014a0c:	ed14 2a04 	vldr	s4, [r4, #-16]
90014a10:	ed54 1a01 	vldr	s3, [r4, #-4]
90014a14:	ed14 1a02 	vldr	s2, [r4, #-8]
90014a18:	edd4 0a01 	vldr	s1, [r4, #4]
90014a1c:	ed94 0a00 	vldr	s0, [r4]
90014a20:	f7ff fc15 	bl	9001424e <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
90014a24:	e7da      	b.n	900149dc <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
90014a26:	9b04      	ldr	r3, [sp, #16]
90014a28:	b113      	cbz	r3, 90014a30 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
90014a2a:	4630      	mov	r0, r6
90014a2c:	f7ff ff69 	bl	90014902 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
90014a30:	b009      	add	sp, #36	@ 0x24
90014a32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014a36:	bf00      	nop

90014a38 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
90014a38:	eef0 7a60 	vmov.f32	s15, s1
90014a3c:	6803      	ldr	r3, [r0, #0]
90014a3e:	689b      	ldr	r3, [r3, #8]
90014a40:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90014a44:	ee17 2a90 	vmov	r2, s15
90014a48:	eef0 7a40 	vmov.f32	s15, s0
90014a4c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90014a50:	ee17 1a90 	vmov	r1, s15
90014a54:	4718      	bx	r3
	...

90014a58 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
90014a58:	4b04      	ldr	r3, [pc, #16]	@ (90014a6c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
90014a5a:	b510      	push	{r4, lr}
90014a5c:	4604      	mov	r4, r0
90014a5e:	f840 3b14 	str.w	r3, [r0], #20
90014a62:	f001 ffb3 	bl	900169cc <_ZN8touchgfx7OutlineD1Ev>
90014a66:	4620      	mov	r0, r4
90014a68:	bd10      	pop	{r4, pc}
90014a6a:	bf00      	nop
90014a6c:	90032470 	.word	0x90032470

90014a70 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
90014a70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014a74:	ed2d 8b04 	vpush	{d8-d9}
90014a78:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
90014a7c:	b0b5      	sub	sp, #212	@ 0xd4
90014a7e:	4605      	mov	r5, r0
90014a80:	468b      	mov	fp, r1
90014a82:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90014a86:	9206      	str	r2, [sp, #24]
90014a88:	461e      	mov	r6, r3
90014a8a:	2400      	movs	r4, #0
90014a8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014a90:	f240 814f 	bls.w	90014d32 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
90014a94:	23ff      	movs	r3, #255	@ 0xff
90014a96:	1d02      	adds	r2, r0, #4
90014a98:	ed9f 9aa7 	vldr	s18, [pc, #668]	@ 90014d38 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
90014a9c:	f04f 0800 	mov.w	r8, #0
90014aa0:	9300      	str	r3, [sp, #0]
90014aa2:	af08      	add	r7, sp, #32
90014aa4:	6981      	ldr	r1, [r0, #24]
90014aa6:	a808      	add	r0, sp, #32
90014aa8:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
90014aaa:	eef0 9a49 	vmov.f32	s19, s18
90014aae:	f017 fc85 	bl	9002c3bc <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
90014ab2:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
90014ab6:	4ba1      	ldr	r3, [pc, #644]	@ (90014d3c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
90014ab8:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
90014abc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90014ac0:	2201      	movs	r2, #1
90014ac2:	9308      	str	r3, [sp, #32]
90014ac4:	f105 0334 	add.w	r3, r5, #52	@ 0x34
90014ac8:	edd5 6a08 	vldr	s13, [r5, #32]
90014acc:	eeb0 8a49 	vmov.f32	s16, s18
90014ad0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014ad4:	9325      	str	r3, [sp, #148]	@ 0x94
90014ad6:	f04f 0300 	mov.w	r3, #0
90014ada:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
90014ade:	7f6a      	ldrb	r2, [r5, #29]
90014ae0:	eef0 8a49 	vmov.f32	s17, s18
90014ae4:	bf48      	it	mi
90014ae6:	eef1 7a67 	vnegmi.f32	s15, s15
90014aea:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
90014aee:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
90014af2:	46c1      	mov	r9, r8
90014af4:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
90014af8:	f04f 0a01 	mov.w	sl, #1
90014afc:	ee67 7a87 	vmul.f32	s15, s15, s14
90014b00:	7fab      	ldrb	r3, [r5, #30]
90014b02:	942a      	str	r4, [sp, #168]	@ 0xa8
90014b04:	435a      	muls	r2, r3
90014b06:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
90014b0a:	ee26 7aa7 	vmul.f32	s14, s13, s15
90014b0e:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
90014b12:	1c53      	adds	r3, r2, #1
90014b14:	942b      	str	r4, [sp, #172]	@ 0xac
90014b16:	942c      	str	r4, [sp, #176]	@ 0xb0
90014b18:	ee27 7a26 	vmul.f32	s14, s14, s13
90014b1c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90014b20:	942d      	str	r4, [sp, #180]	@ 0xb4
90014b22:	942e      	str	r4, [sp, #184]	@ 0xb8
90014b24:	f3c3 2307 	ubfx	r3, r3, #8, #8
90014b28:	ee67 7a27 	vmul.f32	s15, s14, s15
90014b2c:	942f      	str	r4, [sp, #188]	@ 0xbc
90014b2e:	9430      	str	r4, [sp, #192]	@ 0xc0
90014b30:	9431      	str	r4, [sp, #196]	@ 0xc4
90014b32:	9432      	str	r4, [sp, #200]	@ 0xc8
90014b34:	9433      	str	r4, [sp, #204]	@ 0xcc
90014b36:	4644      	mov	r4, r8
90014b38:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
90014b3c:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
90014b40:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
90014b44:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
90014b48:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
90014b4c:	9b06      	ldr	r3, [sp, #24]
90014b4e:	454b      	cmp	r3, r9
90014b50:	f000 80cc 	beq.w	90014cec <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
90014b54:	f109 0301 	add.w	r3, r9, #1
90014b58:	9305      	str	r3, [sp, #20]
90014b5a:	f81b 3009 	ldrb.w	r3, [fp, r9]
90014b5e:	2b06      	cmp	r3, #6
90014b60:	d839      	bhi.n	90014bd6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90014b62:	e8df f003 	tbb	[pc, r3]
90014b66:	3b04      	.short	0x3b04
90014b68:	817c6f60 	.word	0x817c6f60
90014b6c:	a0          	.byte	0xa0
90014b6d:	00          	.byte	0x00
90014b6e:	45c1      	cmp	r9, r8
90014b70:	d92b      	bls.n	90014bca <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
90014b72:	eef0 0a49 	vmov.f32	s1, s18
90014b76:	4638      	mov	r0, r7
90014b78:	eeb0 0a69 	vmov.f32	s0, s19
90014b7c:	f7ff fdde 	bl	9001473c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90014b80:	4638      	mov	r0, r7
90014b82:	f7ff fe67 	bl	90014854 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
90014b86:	4681      	mov	r9, r0
90014b88:	b9f8      	cbnz	r0, 90014bca <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
90014b8a:	eef0 0a49 	vmov.f32	s1, s18
90014b8e:	4638      	mov	r0, r7
90014b90:	eeb0 0a69 	vmov.f32	s0, s19
90014b94:	f7ff fe8d 	bl	900148b2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
90014b98:	4628      	mov	r0, r5
90014b9a:	4623      	mov	r3, r4
90014b9c:	9a05      	ldr	r2, [sp, #20]
90014b9e:	4641      	mov	r1, r8
90014ba0:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
90014ba4:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
90014ba8:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
90014bac:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
90014bb0:	e9cd 9702 	strd	r9, r7, [sp, #8]
90014bb4:	e9cd b600 	strd	fp, r6, [sp]
90014bb8:	f7ff feae 	bl	90014918 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
90014bbc:	eef0 0a49 	vmov.f32	s1, s18
90014bc0:	eeb0 0a69 	vmov.f32	s0, s19
90014bc4:	4638      	mov	r0, r7
90014bc6:	f7ff fe74 	bl	900148b2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
90014bca:	eeb0 8a49 	vmov.f32	s16, s18
90014bce:	f8dd 8014 	ldr.w	r8, [sp, #20]
90014bd2:	eef0 8a69 	vmov.f32	s17, s19
90014bd6:	f8dd 9014 	ldr.w	r9, [sp, #20]
90014bda:	e7b7      	b.n	90014b4c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
90014bdc:	45c1      	cmp	r9, r8
90014bde:	d90d      	bls.n	90014bfc <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
90014be0:	4638      	mov	r0, r7
90014be2:	f7ff fe37 	bl	90014854 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
90014be6:	b948      	cbnz	r0, 90014bfc <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
90014be8:	4623      	mov	r3, r4
90014bea:	464a      	mov	r2, r9
90014bec:	4641      	mov	r1, r8
90014bee:	4628      	mov	r0, r5
90014bf0:	e9cd a702 	strd	sl, r7, [sp, #8]
90014bf4:	e9cd b600 	strd	fp, r6, [sp]
90014bf8:	f7ff fe8e 	bl	90014918 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
90014bfc:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90014c00:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
90014c04:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
90014c08:	3402      	adds	r4, #2
90014c0a:	edd3 8a00 	vldr	s17, [r3]
90014c0e:	46c8      	mov	r8, r9
90014c10:	ed93 8a01 	vldr	s16, [r3, #4]
90014c14:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
90014c18:	eef0 9a68 	vmov.f32	s19, s17
90014c1c:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
90014c20:	eeb0 9a48 	vmov.f32	s18, s16
90014c24:	e7d7      	b.n	90014bd6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90014c26:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90014c2a:	4638      	mov	r0, r7
90014c2c:	3402      	adds	r4, #2
90014c2e:	edd3 8a00 	vldr	s17, [r3]
90014c32:	ed93 8a01 	vldr	s16, [r3, #4]
90014c36:	eeb0 0a68 	vmov.f32	s0, s17
90014c3a:	eef0 0a48 	vmov.f32	s1, s16
90014c3e:	f7ff fd7d 	bl	9001473c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90014c42:	e7c8      	b.n	90014bd6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90014c44:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90014c48:	edd3 8a00 	vldr	s17, [r3]
90014c4c:	eef0 0a48 	vmov.f32	s1, s16
90014c50:	4638      	mov	r0, r7
90014c52:	eeb0 0a68 	vmov.f32	s0, s17
90014c56:	3401      	adds	r4, #1
90014c58:	f7ff fd70 	bl	9001473c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90014c5c:	e7bb      	b.n	90014bd6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90014c5e:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90014c62:	ed93 8a00 	vldr	s16, [r3]
90014c66:	e7f1      	b.n	90014c4c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
90014c68:	00a3      	lsls	r3, r4, #2
90014c6a:	eef0 0a48 	vmov.f32	s1, s16
90014c6e:	eeb0 0a68 	vmov.f32	s0, s17
90014c72:	4638      	mov	r0, r7
90014c74:	f103 0208 	add.w	r2, r3, #8
90014c78:	f103 090c 	add.w	r9, r3, #12
90014c7c:	4433      	add	r3, r6
90014c7e:	3404      	adds	r4, #4
90014c80:	4432      	add	r2, r6
90014c82:	44b1      	add	r9, r6
90014c84:	edd3 1a01 	vldr	s3, [r3, #4]
90014c88:	ed92 2a00 	vldr	s4, [r2]
90014c8c:	edd9 2a00 	vldr	s5, [r9]
90014c90:	ed93 1a00 	vldr	s2, [r3]
90014c94:	9207      	str	r2, [sp, #28]
90014c96:	f7ff fabb 	bl	90014210 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
90014c9a:	9a07      	ldr	r2, [sp, #28]
90014c9c:	ed99 8a00 	vldr	s16, [r9]
90014ca0:	edd2 8a00 	vldr	s17, [r2]
90014ca4:	e797      	b.n	90014bd6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90014ca6:	00a3      	lsls	r3, r4, #2
90014ca8:	eef0 0a48 	vmov.f32	s1, s16
90014cac:	eeb0 0a68 	vmov.f32	s0, s17
90014cb0:	4638      	mov	r0, r7
90014cb2:	f103 0210 	add.w	r2, r3, #16
90014cb6:	f103 0914 	add.w	r9, r3, #20
90014cba:	4433      	add	r3, r6
90014cbc:	3406      	adds	r4, #6
90014cbe:	4432      	add	r2, r6
90014cc0:	44b1      	add	r9, r6
90014cc2:	edd3 2a03 	vldr	s5, [r3, #12]
90014cc6:	ed92 3a00 	vldr	s6, [r2]
90014cca:	edd9 3a00 	vldr	s7, [r9]
90014cce:	ed93 2a02 	vldr	s4, [r3, #8]
90014cd2:	edd3 1a01 	vldr	s3, [r3, #4]
90014cd6:	ed93 1a00 	vldr	s2, [r3]
90014cda:	9207      	str	r2, [sp, #28]
90014cdc:	f7ff fab7 	bl	9001424e <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
90014ce0:	9a07      	ldr	r2, [sp, #28]
90014ce2:	ed99 8a00 	vldr	s16, [r9]
90014ce6:	edd2 8a00 	vldr	s17, [r2]
90014cea:	e774      	b.n	90014bd6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90014cec:	9b06      	ldr	r3, [sp, #24]
90014cee:	af08      	add	r7, sp, #32
90014cf0:	4543      	cmp	r3, r8
90014cf2:	d90f      	bls.n	90014d14 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
90014cf4:	4638      	mov	r0, r7
90014cf6:	f7ff fdad 	bl	90014854 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
90014cfa:	b958      	cbnz	r0, 90014d14 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
90014cfc:	2301      	movs	r3, #1
90014cfe:	9703      	str	r7, [sp, #12]
90014d00:	f8cd b000 	str.w	fp, [sp]
90014d04:	4641      	mov	r1, r8
90014d06:	9a06      	ldr	r2, [sp, #24]
90014d08:	4628      	mov	r0, r5
90014d0a:	e9cd 6301 	strd	r6, r3, [sp, #4]
90014d0e:	4623      	mov	r3, r4
90014d10:	f7ff fe02 	bl	90014918 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
90014d14:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
90014d18:	4638      	mov	r0, r7
90014d1a:	f017 fbe3 	bl	9002c4e4 <_ZN8touchgfx6Canvas6renderEh>
90014d1e:	4604      	mov	r4, r0
90014d20:	4638      	mov	r0, r7
90014d22:	f7ff fe99 	bl	90014a58 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
90014d26:	4620      	mov	r0, r4
90014d28:	b035      	add	sp, #212	@ 0xd4
90014d2a:	ecbd 8b04 	vpop	{d8-d9}
90014d2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014d32:	2401      	movs	r4, #1
90014d34:	e7f7      	b.n	90014d26 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
90014d36:	bf00      	nop
90014d38:	00000000 	.word	0x00000000
90014d3c:	90031a10 	.word	0x90031a10

90014d40 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
90014d40:	b510      	push	{r4, lr}
90014d42:	4604      	mov	r4, r0
90014d44:	f7ff fe88 	bl	90014a58 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
90014d48:	21b0      	movs	r1, #176	@ 0xb0
90014d4a:	4620      	mov	r0, r4
90014d4c:	f017 ffb6 	bl	9002ccbc <_ZdlPvj>
90014d50:	4620      	mov	r0, r4
90014d52:	bd10      	pop	{r4, pc}

90014d54 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
90014d54:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90014d58:	4698      	mov	r8, r3
90014d5a:	23ff      	movs	r3, #255	@ 0xff
90014d5c:	4607      	mov	r7, r0
90014d5e:	4689      	mov	r9, r1
90014d60:	4692      	mov	sl, r2
90014d62:	1d02      	adds	r2, r0, #4
90014d64:	f107 0534 	add.w	r5, r7, #52	@ 0x34
90014d68:	2400      	movs	r4, #0
90014d6a:	44ca      	add	sl, r9
90014d6c:	ed2d 8b06 	vpush	{d8-d10}
90014d70:	b0aa      	sub	sp, #168	@ 0xa8
90014d72:	ed9f 8a81 	vldr	s16, [pc, #516]	@ 90014f78 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
90014d76:	9300      	str	r3, [sp, #0]
90014d78:	eef0 8a48 	vmov.f32	s17, s16
90014d7c:	6981      	ldr	r1, [r0, #24]
90014d7e:	a80d      	add	r0, sp, #52	@ 0x34
90014d80:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
90014d82:	f017 fb1b 	bl	9002c3bc <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
90014d86:	7f3b      	ldrb	r3, [r7, #28]
90014d88:	eddf 0a7b 	vldr	s1, [pc, #492]	@ 90014f78 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
90014d8c:	4628      	mov	r0, r5
90014d8e:	1e5a      	subs	r2, r3, #1
90014d90:	eeb0 0a60 	vmov.f32	s0, s1
90014d94:	4253      	negs	r3, r2
90014d96:	4153      	adcs	r3, r2
90014d98:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
90014d9c:	f005 ffbd 	bl	9001ad1a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90014da0:	eeb0 9a40 	vmov.f32	s18, s0
90014da4:	eef0 9a60 	vmov.f32	s19, s1
90014da8:	45ca      	cmp	sl, r9
90014daa:	f000 80cd 	beq.w	90014f48 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
90014dae:	f819 3b01 	ldrb.w	r3, [r9], #1
90014db2:	2b06      	cmp	r3, #6
90014db4:	d8f8      	bhi.n	90014da8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90014db6:	e8df f003 	tbb	[pc, r3]
90014dba:	0804      	.short	0x0804
90014dbc:	58533f2a 	.word	0x58533f2a
90014dc0:	8a          	.byte	0x8a
90014dc1:	00          	.byte	0x00
90014dc2:	a80d      	add	r0, sp, #52	@ 0x34
90014dc4:	f017 fb6c 	bl	9002c4a0 <_ZN8touchgfx6Canvas5closeEv>
90014dc8:	e7ee      	b.n	90014da8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90014dca:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90014dce:	4628      	mov	r0, r5
90014dd0:	ed93 8a01 	vldr	s16, [r3, #4]
90014dd4:	edd3 8a00 	vldr	s17, [r3]
90014dd8:	eef0 0a48 	vmov.f32	s1, s16
90014ddc:	eeb0 0a68 	vmov.f32	s0, s17
90014de0:	f005 ff9b 	bl	9001ad1a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90014de4:	a80d      	add	r0, sp, #52	@ 0x34
90014de6:	eef0 7a60 	vmov.f32	s15, s1
90014dea:	eeb0 9a40 	vmov.f32	s18, s0
90014dee:	eef0 9a60 	vmov.f32	s19, s1
90014df2:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90014df6:	ee17 2a90 	vmov	r2, s15
90014dfa:	eef0 7a40 	vmov.f32	s15, s0
90014dfe:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90014e02:	ee17 1a90 	vmov	r1, s15
90014e06:	f017 fc25 	bl	9002c654 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
90014e0a:	3402      	adds	r4, #2
90014e0c:	e7cc      	b.n	90014da8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90014e0e:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90014e12:	4628      	mov	r0, r5
90014e14:	edd3 8a00 	vldr	s17, [r3]
90014e18:	ed93 8a01 	vldr	s16, [r3, #4]
90014e1c:	eeb0 0a68 	vmov.f32	s0, s17
90014e20:	eef0 0a48 	vmov.f32	s1, s16
90014e24:	f005 ff79 	bl	9001ad1a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90014e28:	a80d      	add	r0, sp, #52	@ 0x34
90014e2a:	eeb0 9a40 	vmov.f32	s18, s0
90014e2e:	eef0 9a60 	vmov.f32	s19, s1
90014e32:	f7ff fe01 	bl	90014a38 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90014e36:	e7e8      	b.n	90014e0a <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
90014e38:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90014e3c:	edd3 8a00 	vldr	s17, [r3]
90014e40:	eef0 0a48 	vmov.f32	s1, s16
90014e44:	4628      	mov	r0, r5
90014e46:	eeb0 0a68 	vmov.f32	s0, s17
90014e4a:	3401      	adds	r4, #1
90014e4c:	f005 ff65 	bl	9001ad1a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90014e50:	a80d      	add	r0, sp, #52	@ 0x34
90014e52:	eef0 9a60 	vmov.f32	s19, s1
90014e56:	eeb0 9a40 	vmov.f32	s18, s0
90014e5a:	f7ff fded 	bl	90014a38 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90014e5e:	e7a3      	b.n	90014da8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90014e60:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90014e64:	ed93 8a00 	vldr	s16, [r3]
90014e68:	e7ea      	b.n	90014e40 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
90014e6a:	1ca3      	adds	r3, r4, #2
90014e6c:	4628      	mov	r0, r5
90014e6e:	3404      	adds	r4, #4
90014e70:	eb08 0383 	add.w	r3, r8, r3, lsl #2
90014e74:	ed53 0a01 	vldr	s1, [r3, #-4]
90014e78:	ed13 0a02 	vldr	s0, [r3, #-8]
90014e7c:	edd3 8a00 	vldr	s17, [r3]
90014e80:	ed93 8a01 	vldr	s16, [r3, #4]
90014e84:	f005 ff49 	bl	9001ad1a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90014e88:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
90014e8c:	eeb0 0a68 	vmov.f32	s0, s17
90014e90:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
90014e94:	eef0 0a48 	vmov.f32	s1, s16
90014e98:	4628      	mov	r0, r5
90014e9a:	f005 ff3e 	bl	9001ad1a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90014e9e:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
90014ea2:	eef0 2a60 	vmov.f32	s5, s1
90014ea6:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
90014eaa:	eeb0 2a40 	vmov.f32	s4, s0
90014eae:	a80d      	add	r0, sp, #52	@ 0x34
90014eb0:	eeb0 aa40 	vmov.f32	s20, s0
90014eb4:	eef0 aa60 	vmov.f32	s21, s1
90014eb8:	eeb0 0a49 	vmov.f32	s0, s18
90014ebc:	eef0 0a69 	vmov.f32	s1, s19
90014ec0:	f7ff f9a6 	bl	90014210 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
90014ec4:	eef0 9a6a 	vmov.f32	s19, s21
90014ec8:	eeb0 9a4a 	vmov.f32	s18, s20
90014ecc:	e76c      	b.n	90014da8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90014ece:	1d26      	adds	r6, r4, #4
90014ed0:	4628      	mov	r0, r5
90014ed2:	3406      	adds	r4, #6
90014ed4:	eb08 0686 	add.w	r6, r8, r6, lsl #2
90014ed8:	ed56 0a03 	vldr	s1, [r6, #-12]
90014edc:	ed16 0a04 	vldr	s0, [r6, #-16]
90014ee0:	edd6 8a00 	vldr	s17, [r6]
90014ee4:	ed96 8a01 	vldr	s16, [r6, #4]
90014ee8:	f005 ff17 	bl	9001ad1a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90014eec:	ed8d 0a07 	vstr	s0, [sp, #28]
90014ef0:	4628      	mov	r0, r5
90014ef2:	ed16 0a02 	vldr	s0, [r6, #-8]
90014ef6:	edcd 0a08 	vstr	s1, [sp, #32]
90014efa:	ed56 0a01 	vldr	s1, [r6, #-4]
90014efe:	f005 ff0c 	bl	9001ad1a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90014f02:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
90014f06:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
90014f0a:	eeb0 0a68 	vmov.f32	s0, s17
90014f0e:	eef0 0a48 	vmov.f32	s1, s16
90014f12:	4628      	mov	r0, r5
90014f14:	f005 ff01 	bl	9001ad1a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90014f18:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
90014f1c:	eeb0 3a40 	vmov.f32	s6, s0
90014f20:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
90014f24:	eef0 3a60 	vmov.f32	s7, s1
90014f28:	eddd 1a08 	vldr	s3, [sp, #32]
90014f2c:	eeb0 aa40 	vmov.f32	s20, s0
90014f30:	ed9d 1a07 	vldr	s2, [sp, #28]
90014f34:	eef0 aa60 	vmov.f32	s21, s1
90014f38:	a80d      	add	r0, sp, #52	@ 0x34
90014f3a:	eef0 0a69 	vmov.f32	s1, s19
90014f3e:	eeb0 0a49 	vmov.f32	s0, s18
90014f42:	f7ff f984 	bl	9001424e <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
90014f46:	e7bd      	b.n	90014ec4 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
90014f48:	7f7b      	ldrb	r3, [r7, #29]
90014f4a:	a80d      	add	r0, sp, #52	@ 0x34
90014f4c:	7fb9      	ldrb	r1, [r7, #30]
90014f4e:	4359      	muls	r1, r3
90014f50:	1c4b      	adds	r3, r1, #1
90014f52:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90014f56:	f3c1 2107 	ubfx	r1, r1, #8, #8
90014f5a:	f017 fac3 	bl	9002c4e4 <_ZN8touchgfx6Canvas6renderEh>
90014f5e:	4b07      	ldr	r3, [pc, #28]	@ (90014f7c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
90014f60:	4604      	mov	r4, r0
90014f62:	a812      	add	r0, sp, #72	@ 0x48
90014f64:	930d      	str	r3, [sp, #52]	@ 0x34
90014f66:	f001 fd31 	bl	900169cc <_ZN8touchgfx7OutlineD1Ev>
90014f6a:	4620      	mov	r0, r4
90014f6c:	b02a      	add	sp, #168	@ 0xa8
90014f6e:	ecbd 8b06 	vpop	{d8-d10}
90014f72:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90014f76:	bf00      	nop
90014f78:	00000000 	.word	0x00000000
90014f7c:	90032470 	.word	0x90032470

90014f80 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
90014f80:	b410      	push	{r4}
90014f82:	7f04      	ldrb	r4, [r0, #28]
90014f84:	b11c      	cbz	r4, 90014f8e <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
90014f86:	f85d 4b04 	ldr.w	r4, [sp], #4
90014f8a:	f7ff bee3 	b.w	90014d54 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
90014f8e:	f85d 4b04 	ldr.w	r4, [sp], #4
90014f92:	f7ff bd6d 	b.w	90014a70 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>
	...

90014f98 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
90014f98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014f9c:	4691      	mov	r9, r2
90014f9e:	4602      	mov	r2, r0
90014fa0:	b085      	sub	sp, #20
90014fa2:	4605      	mov	r5, r0
90014fa4:	f852 0f26 	ldr.w	r0, [r2, #38]!
90014fa8:	4688      	mov	r8, r1
90014faa:	469a      	mov	sl, r3
90014fac:	ab02      	add	r3, sp, #8
90014fae:	6851      	ldr	r1, [r2, #4]
90014fb0:	af02      	add	r7, sp, #8
90014fb2:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
90014fb6:	c303      	stmia	r3!, {r0, r1}
90014fb8:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90014fbc:	2b00      	cmp	r3, #0
90014fbe:	dd08      	ble.n	90014fd2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
90014fc0:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
90014fc4:	2c00      	cmp	r4, #0
90014fc6:	dd04      	ble.n	90014fd2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
90014fc8:	4a2e      	ldr	r2, [pc, #184]	@ (90015084 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xec>)
90014fca:	7812      	ldrb	r2, [r2, #0]
90014fcc:	b122      	cbz	r2, 90014fd8 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x40>
90014fce:	2a01      	cmp	r2, #1
90014fd0:	d02d      	beq.n	9001502e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x96>
90014fd2:	b005      	add	sp, #20
90014fd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014fd8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90014fdc:	441c      	add	r4, r3
90014fde:	b2a4      	uxth	r4, r4
90014fe0:	b226      	sxth	r6, r4
90014fe2:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
90014fe6:	42b3      	cmp	r3, r6
90014fe8:	daf3      	bge.n	90014fd2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
90014fea:	4653      	mov	r3, sl
90014fec:	464a      	mov	r2, r9
90014fee:	4641      	mov	r1, r8
90014ff0:	4628      	mov	r0, r5
90014ff2:	e9cd b700 	strd	fp, r7, [sp]
90014ff6:	f7ff ffc3 	bl	90014f80 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
90014ffa:	b940      	cbnz	r0, 9001500e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
90014ffc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90015000:	2b01      	cmp	r3, #1
90015002:	d004      	beq.n	9001500e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
90015004:	3301      	adds	r3, #1
90015006:	105b      	asrs	r3, r3, #1
90015008:	f8ad 300e 	strh.w	r3, [sp, #14]
9001500c:	e7ed      	b.n	90014fea <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x52>
9001500e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
90015012:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90015016:	4413      	add	r3, r2
90015018:	b29b      	uxth	r3, r3
9001501a:	441a      	add	r2, r3
9001501c:	f8ad 300a 	strh.w	r3, [sp, #10]
90015020:	b212      	sxth	r2, r2
90015022:	4296      	cmp	r6, r2
90015024:	dadd      	bge.n	90014fe2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
90015026:	1ae3      	subs	r3, r4, r3
90015028:	f8ad 300e 	strh.w	r3, [sp, #14]
9001502c:	e7d9      	b.n	90014fe2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
9001502e:	f8bd 4008 	ldrh.w	r4, [sp, #8]
90015032:	441c      	add	r4, r3
90015034:	b2a4      	uxth	r4, r4
90015036:	b226      	sxth	r6, r4
90015038:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
9001503c:	42b3      	cmp	r3, r6
9001503e:	dac8      	bge.n	90014fd2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
90015040:	4653      	mov	r3, sl
90015042:	464a      	mov	r2, r9
90015044:	4641      	mov	r1, r8
90015046:	4628      	mov	r0, r5
90015048:	e9cd b700 	strd	fp, r7, [sp]
9001504c:	f7ff ff98 	bl	90014f80 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
90015050:	b940      	cbnz	r0, 90015064 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
90015052:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90015056:	2b01      	cmp	r3, #1
90015058:	d004      	beq.n	90015064 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
9001505a:	3301      	adds	r3, #1
9001505c:	105b      	asrs	r3, r3, #1
9001505e:	f8ad 300c 	strh.w	r3, [sp, #12]
90015062:	e7ed      	b.n	90015040 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa8>
90015064:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90015068:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001506c:	4413      	add	r3, r2
9001506e:	b29b      	uxth	r3, r3
90015070:	441a      	add	r2, r3
90015072:	f8ad 3008 	strh.w	r3, [sp, #8]
90015076:	b212      	sxth	r2, r2
90015078:	4296      	cmp	r6, r2
9001507a:	dadd      	bge.n	90015038 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
9001507c:	1ae3      	subs	r3, r4, r3
9001507e:	f8ad 300c 	strh.w	r3, [sp, #12]
90015082:	e7d9      	b.n	90015038 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
90015084:	24021c04 	.word	0x24021c04

90015088 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
90015088:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
9001508a:	6803      	ldr	r3, [r0, #0]
9001508c:	460d      	mov	r5, r1
9001508e:	4604      	mov	r4, r0
90015090:	4601      	mov	r1, r0
90015092:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90015094:	a802      	add	r0, sp, #8
90015096:	4798      	blx	r3
90015098:	6828      	ldr	r0, [r5, #0]
9001509a:	6869      	ldr	r1, [r5, #4]
9001509c:	466b      	mov	r3, sp
9001509e:	c303      	stmia	r3!, {r0, r1}
900150a0:	4668      	mov	r0, sp
900150a2:	4619      	mov	r1, r3
900150a4:	f7fd fb72 	bl	9001278c <_ZN8touchgfx4RectaNERKS0_>
900150a8:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
900150aa:	b188      	cbz	r0, 900150d0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900150ac:	6803      	ldr	r3, [r0, #0]
900150ae:	1d21      	adds	r1, r4, #4
900150b0:	68db      	ldr	r3, [r3, #12]
900150b2:	4798      	blx	r3
900150b4:	b160      	cbz	r0, 900150d0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900150b6:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
900150ba:	2b00      	cmp	r3, #0
900150bc:	dd08      	ble.n	900150d0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900150be:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
900150c2:	2d00      	cmp	r5, #0
900150c4:	dd04      	ble.n	900150d0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900150c6:	4a2b      	ldr	r2, [pc, #172]	@ (90015174 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
900150c8:	7812      	ldrb	r2, [r2, #0]
900150ca:	b11a      	cbz	r2, 900150d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
900150cc:	2a01      	cmp	r2, #1
900150ce:	d029      	beq.n	90015124 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
900150d0:	b004      	add	sp, #16
900150d2:	bd70      	pop	{r4, r5, r6, pc}
900150d4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900150d8:	441d      	add	r5, r3
900150da:	b2ad      	uxth	r5, r5
900150dc:	b22e      	sxth	r6, r5
900150de:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
900150e2:	42b3      	cmp	r3, r6
900150e4:	daf4      	bge.n	900150d0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900150e6:	6823      	ldr	r3, [r4, #0]
900150e8:	4669      	mov	r1, sp
900150ea:	4620      	mov	r0, r4
900150ec:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
900150ee:	4798      	blx	r3
900150f0:	b940      	cbnz	r0, 90015104 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
900150f2:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
900150f6:	2b01      	cmp	r3, #1
900150f8:	d004      	beq.n	90015104 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
900150fa:	3301      	adds	r3, #1
900150fc:	105b      	asrs	r3, r3, #1
900150fe:	f8ad 3006 	strh.w	r3, [sp, #6]
90015102:	e7f0      	b.n	900150e6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
90015104:	f8bd 2006 	ldrh.w	r2, [sp, #6]
90015108:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001510c:	4413      	add	r3, r2
9001510e:	b29b      	uxth	r3, r3
90015110:	441a      	add	r2, r3
90015112:	f8ad 3002 	strh.w	r3, [sp, #2]
90015116:	b212      	sxth	r2, r2
90015118:	4296      	cmp	r6, r2
9001511a:	dae0      	bge.n	900150de <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
9001511c:	1aeb      	subs	r3, r5, r3
9001511e:	f8ad 3006 	strh.w	r3, [sp, #6]
90015122:	e7dc      	b.n	900150de <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90015124:	f8bd 5000 	ldrh.w	r5, [sp]
90015128:	441d      	add	r5, r3
9001512a:	b2ad      	uxth	r5, r5
9001512c:	b22e      	sxth	r6, r5
9001512e:	f9bd 3000 	ldrsh.w	r3, [sp]
90015132:	42b3      	cmp	r3, r6
90015134:	dacc      	bge.n	900150d0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90015136:	6823      	ldr	r3, [r4, #0]
90015138:	4669      	mov	r1, sp
9001513a:	4620      	mov	r0, r4
9001513c:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
9001513e:	4798      	blx	r3
90015140:	b940      	cbnz	r0, 90015154 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
90015142:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90015146:	2b01      	cmp	r3, #1
90015148:	d004      	beq.n	90015154 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
9001514a:	3301      	adds	r3, #1
9001514c:	105b      	asrs	r3, r3, #1
9001514e:	f8ad 3004 	strh.w	r3, [sp, #4]
90015152:	e7f0      	b.n	90015136 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
90015154:	f8bd 2004 	ldrh.w	r2, [sp, #4]
90015158:	f8bd 3000 	ldrh.w	r3, [sp]
9001515c:	4413      	add	r3, r2
9001515e:	b29b      	uxth	r3, r3
90015160:	441a      	add	r2, r3
90015162:	f8ad 3000 	strh.w	r3, [sp]
90015166:	b212      	sxth	r2, r2
90015168:	4296      	cmp	r6, r2
9001516a:	dae0      	bge.n	9001512e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
9001516c:	1aeb      	subs	r3, r5, r3
9001516e:	f8ad 3004 	strh.w	r3, [sp, #4]
90015172:	e7dc      	b.n	9001512e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
90015174:	24021c04 	.word	0x24021c04

90015178 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
90015178:	b51f      	push	{r0, r1, r2, r3, r4, lr}
9001517a:	6803      	ldr	r3, [r0, #0]
9001517c:	4604      	mov	r4, r0
9001517e:	4601      	mov	r1, r0
90015180:	4668      	mov	r0, sp
90015182:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90015184:	4798      	blx	r3
90015186:	2100      	movs	r1, #0
90015188:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
9001518c:	4668      	mov	r0, sp
9001518e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90015192:	9102      	str	r1, [sp, #8]
90015194:	a902      	add	r1, sp, #8
90015196:	f8ad 200c 	strh.w	r2, [sp, #12]
9001519a:	f8ad 300e 	strh.w	r3, [sp, #14]
9001519e:	f7fd faf5 	bl	9001278c <_ZN8touchgfx4RectaNERKS0_>
900151a2:	6823      	ldr	r3, [r4, #0]
900151a4:	4669      	mov	r1, sp
900151a6:	4620      	mov	r0, r4
900151a8:	691b      	ldr	r3, [r3, #16]
900151aa:	4798      	blx	r3
900151ac:	b004      	add	sp, #16
900151ae:	bd10      	pop	{r4, pc}

900151b0 <_ZN8touchgfx12CanvasWidgetC1Ev>:
900151b0:	2101      	movs	r1, #1
900151b2:	2200      	movs	r2, #0
900151b4:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
900151b8:	490a      	ldr	r1, [pc, #40]	@ (900151e4 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
900151ba:	8082      	strh	r2, [r0, #4]
900151bc:	6001      	str	r1, [r0, #0]
900151be:	21ff      	movs	r1, #255	@ 0xff
900151c0:	80c2      	strh	r2, [r0, #6]
900151c2:	8102      	strh	r2, [r0, #8]
900151c4:	8142      	strh	r2, [r0, #10]
900151c6:	8182      	strh	r2, [r0, #12]
900151c8:	81c2      	strh	r2, [r0, #14]
900151ca:	8202      	strh	r2, [r0, #16]
900151cc:	8242      	strh	r2, [r0, #18]
900151ce:	61c2      	str	r2, [r0, #28]
900151d0:	8402      	strh	r2, [r0, #32]
900151d2:	8442      	strh	r2, [r0, #34]	@ 0x22
900151d4:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
900151d8:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
900151dc:	6282      	str	r2, [r0, #40]	@ 0x28
900151de:	e9c0 2205 	strd	r2, r2, [r0, #20]
900151e2:	4770      	bx	lr
900151e4:	90031a70 	.word	0x90031a70

900151e8 <_ZNK8touchgfx5Image17invalidateContentEv>:
900151e8:	b508      	push	{r3, lr}
900151ea:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
900151ee:	b10b      	cbz	r3, 900151f4 <_ZNK8touchgfx5Image17invalidateContentEv+0xc>
900151f0:	f7ed fe02 	bl	90002df8 <_ZNK8touchgfx8Drawable17invalidateContentEv>
900151f4:	bd08      	pop	{r3, pc}

900151f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
900151f6:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
900151fa:	4770      	bx	lr

900151fc <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
900151fc:	f890 0029 	ldrb.w	r0, [r0, #41]	@ 0x29
90015200:	4770      	bx	lr

90015202 <_ZN8touchgfx13ScalableImageD1Ev>:
90015202:	4770      	bx	lr

90015204 <_ZN8touchgfx13ScalableImageD0Ev>:
90015204:	b510      	push	{r4, lr}
90015206:	4604      	mov	r4, r0
90015208:	212c      	movs	r1, #44	@ 0x2c
9001520a:	f017 fd57 	bl	9002ccbc <_ZdlPvj>
9001520e:	4620      	mov	r0, r4
90015210:	bd10      	pop	{r4, pc}

90015212 <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
90015212:	b5f0      	push	{r4, r5, r6, r7, lr}
90015214:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
90015218:	b085      	sub	sp, #20
9001521a:	4604      	mov	r4, r0
9001521c:	460d      	mov	r5, r1
9001521e:	2bff      	cmp	r3, #255	@ 0xff
90015220:	d128      	bne.n	90015274 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
90015222:	f101 0626 	add.w	r6, r1, #38	@ 0x26
90015226:	4668      	mov	r0, sp
90015228:	4631      	mov	r1, r6
9001522a:	f007 fdb7 	bl	9001cd9c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001522e:	f9bd 7004 	ldrsh.w	r7, [sp, #4]
90015232:	4630      	mov	r0, r6
90015234:	f007 fd4a 	bl	9001cccc <_ZNK8touchgfx6Bitmap8getWidthEv>
90015238:	4287      	cmp	r7, r0
9001523a:	d11b      	bne.n	90015274 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
9001523c:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
90015240:	4630      	mov	r0, r6
90015242:	f007 fd77 	bl	9001cd34 <_ZNK8touchgfx6Bitmap9getHeightEv>
90015246:	4287      	cmp	r7, r0
90015248:	d114      	bne.n	90015274 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
9001524a:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
9001524e:	2100      	movs	r1, #0
90015250:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
90015254:	f8ad 300e 	strh.w	r3, [sp, #14]
90015258:	466b      	mov	r3, sp
9001525a:	9102      	str	r1, [sp, #8]
9001525c:	f8ad 200c 	strh.w	r2, [sp, #12]
90015260:	cb03      	ldmia	r3!, {r0, r1}
90015262:	6020      	str	r0, [r4, #0]
90015264:	4620      	mov	r0, r4
90015266:	6061      	str	r1, [r4, #4]
90015268:	4619      	mov	r1, r3
9001526a:	f7fd fa8f 	bl	9001278c <_ZN8touchgfx4RectaNERKS0_>
9001526e:	4620      	mov	r0, r4
90015270:	b005      	add	sp, #20
90015272:	bdf0      	pop	{r4, r5, r6, r7, pc}
90015274:	2300      	movs	r3, #0
90015276:	8023      	strh	r3, [r4, #0]
90015278:	8063      	strh	r3, [r4, #2]
9001527a:	80a3      	strh	r3, [r4, #4]
9001527c:	80e3      	strh	r3, [r4, #6]
9001527e:	e7f6      	b.n	9001526e <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x5c>

90015280 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
90015280:	b538      	push	{r3, r4, r5, lr}
90015282:	2300      	movs	r3, #0
90015284:	2501      	movs	r5, #1
90015286:	4604      	mov	r4, r0
90015288:	8083      	strh	r3, [r0, #4]
9001528a:	80c3      	strh	r3, [r0, #6]
9001528c:	8103      	strh	r3, [r0, #8]
9001528e:	8143      	strh	r3, [r0, #10]
90015290:	8183      	strh	r3, [r0, #12]
90015292:	81c3      	strh	r3, [r0, #14]
90015294:	8203      	strh	r3, [r0, #16]
90015296:	8243      	strh	r3, [r0, #18]
90015298:	61c3      	str	r3, [r0, #28]
9001529a:	8403      	strh	r3, [r0, #32]
9001529c:	8443      	strh	r3, [r0, #34]	@ 0x22
9001529e:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
900152a2:	f880 5025 	strb.w	r5, [r0, #37]	@ 0x25
900152a6:	e9c0 3305 	strd	r3, r3, [r0, #20]
900152aa:	4b07      	ldr	r3, [pc, #28]	@ (900152c8 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
900152ac:	6003      	str	r3, [r0, #0]
900152ae:	880b      	ldrh	r3, [r1, #0]
900152b0:	84c3      	strh	r3, [r0, #38]	@ 0x26
900152b2:	23ff      	movs	r3, #255	@ 0xff
900152b4:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
900152b8:	f000 ff58 	bl	9001616c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
900152bc:	4b03      	ldr	r3, [pc, #12]	@ (900152cc <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
900152be:	f884 5029 	strb.w	r5, [r4, #41]	@ 0x29
900152c2:	4620      	mov	r0, r4
900152c4:	6023      	str	r3, [r4, #0]
900152c6:	bd38      	pop	{r3, r4, r5, pc}
900152c8:	90031cbc 	.word	0x90031cbc
900152cc:	90031ae8 	.word	0x90031ae8

900152d0 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
900152d0:	4603      	mov	r3, r0
900152d2:	3026      	adds	r0, #38	@ 0x26
900152d4:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
900152d8:	b90b      	cbnz	r3, 900152de <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
900152da:	f005 bdcb 	b.w	9001ae74 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
900152de:	f005 bdd9 	b.w	9001ae94 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

900152e4 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
900152e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900152e8:	4604      	mov	r4, r0
900152ea:	b0b3      	sub	sp, #204	@ 0xcc
900152ec:	469b      	mov	fp, r3
900152ee:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
900152f2:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
900152f6:	2500      	movs	r5, #0
900152f8:	f8ad 0048 	strh.w	r0, [sp, #72]	@ 0x48
900152fc:	f8ad 304a 	strh.w	r3, [sp, #74]	@ 0x4a
90015300:	ab11      	add	r3, sp, #68	@ 0x44
90015302:	9206      	str	r2, [sp, #24]
90015304:	4618      	mov	r0, r3
90015306:	9511      	str	r5, [sp, #68]	@ 0x44
90015308:	9307      	str	r3, [sp, #28]
9001530a:	ad13      	add	r5, sp, #76	@ 0x4c
9001530c:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	@ 0xf0
90015310:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	@ 0xf8
90015314:	f7fd fa3a 	bl	9001278c <_ZN8touchgfx4RectaNERKS0_>
90015318:	9b07      	ldr	r3, [sp, #28]
9001531a:	e893 0003 	ldmia.w	r3, {r0, r1}
9001531e:	e885 0003 	stmia.w	r5, {r0, r1}
90015322:	6821      	ldr	r1, [r4, #0]
90015324:	4620      	mov	r0, r4
90015326:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
90015328:	4629      	mov	r1, r5
9001532a:	47b0      	blx	r6
9001532c:	4621      	mov	r1, r4
9001532e:	a815      	add	r0, sp, #84	@ 0x54
90015330:	1d26      	adds	r6, r4, #4
90015332:	f005 f951 	bl	9001a5d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90015336:	a815      	add	r0, sp, #84	@ 0x54
90015338:	f003 fd1c 	bl	90018d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001533c:	9b07      	ldr	r3, [sp, #28]
9001533e:	4631      	mov	r1, r6
90015340:	4618      	mov	r0, r3
90015342:	f003 fd5b 	bl	90018dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90015346:	4628      	mov	r0, r5
90015348:	f104 0526 	add.w	r5, r4, #38	@ 0x26
9001534c:	f003 fd12 	bl	90018d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90015350:	4628      	mov	r0, r5
90015352:	f007 fdad 	bl	9001ceb0 <_ZNK8touchgfx6Bitmap7getDataEv>
90015356:	9007      	str	r0, [sp, #28]
90015358:	2800      	cmp	r0, #0
9001535a:	f000 80ce 	beq.w	900154fa <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x216>
9001535e:	f8db 200c 	ldr.w	r2, [fp, #12]
90015362:	a809      	add	r0, sp, #36	@ 0x24
90015364:	f8db 1000 	ldr.w	r1, [fp]
90015368:	920c      	str	r2, [sp, #48]	@ 0x30
9001536a:	f8da 2000 	ldr.w	r2, [sl]
9001536e:	9109      	str	r1, [sp, #36]	@ 0x24
90015370:	920d      	str	r2, [sp, #52]	@ 0x34
90015372:	f8da 2004 	ldr.w	r2, [sl, #4]
90015376:	f8db 1004 	ldr.w	r1, [fp, #4]
9001537a:	920e      	str	r2, [sp, #56]	@ 0x38
9001537c:	f8da 2008 	ldr.w	r2, [sl, #8]
90015380:	910a      	str	r1, [sp, #40]	@ 0x28
90015382:	920f      	str	r2, [sp, #60]	@ 0x3c
90015384:	f8db 1008 	ldr.w	r1, [fp, #8]
90015388:	f8da 200c 	ldr.w	r2, [sl, #12]
9001538c:	910b      	str	r1, [sp, #44]	@ 0x2c
9001538e:	a90d      	add	r1, sp, #52	@ 0x34
90015390:	9210      	str	r2, [sp, #64]	@ 0x40
90015392:	4632      	mov	r2, r6
90015394:	f003 fd16 	bl	90018dc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90015398:	4632      	mov	r2, r6
9001539a:	a90e      	add	r1, sp, #56	@ 0x38
9001539c:	a80a      	add	r0, sp, #40	@ 0x28
9001539e:	f003 fd11 	bl	90018dc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
900153a2:	4632      	mov	r2, r6
900153a4:	a90f      	add	r1, sp, #60	@ 0x3c
900153a6:	a80b      	add	r0, sp, #44	@ 0x2c
900153a8:	f003 fd0c 	bl	90018dc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
900153ac:	4632      	mov	r2, r6
900153ae:	a910      	add	r1, sp, #64	@ 0x40
900153b0:	a80c      	add	r0, sp, #48	@ 0x30
900153b2:	f003 fd07 	bl	90018dc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
900153b6:	eddd 7a0d 	vldr	s15, [sp, #52]	@ 0x34
900153ba:	ed97 3a00 	vldr	s6, [r7]
900153be:	eef0 6a67 	vmov.f32	s13, s15
900153c2:	eddd 7a0a 	vldr	s15, [sp, #40]	@ 0x28
900153c6:	edd7 4a01 	vldr	s9, [r7, #4]
900153ca:	eeb0 7a67 	vmov.f32	s14, s15
900153ce:	eddd 7a0e 	vldr	s15, [sp, #56]	@ 0x38
900153d2:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
900153d6:	ed99 2a00 	vldr	s4, [r9]
900153da:	eeb0 6a67 	vmov.f32	s12, s15
900153de:	eddd 7a0b 	vldr	s15, [sp, #44]	@ 0x2c
900153e2:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
900153e6:	edd8 2a00 	vldr	s5, [r8]
900153ea:	edd9 3a01 	vldr	s7, [r9, #4]
900153ee:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
900153f2:	ed98 4a01 	vldr	s8, [r8, #4]
900153f6:	ed99 5a02 	vldr	s10, [r9, #8]
900153fa:	edd8 5a02 	vldr	s11, [r8, #8]
900153fe:	ee16 6a10 	vmov	r6, s12
90015402:	eeb0 6a67 	vmov.f32	s12, s15
90015406:	eddd 7a0f 	vldr	s15, [sp, #60]	@ 0x3c
9001540a:	f8d9 e00c 	ldr.w	lr, [r9, #12]
9001540e:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90015412:	f8d8 c00c 	ldr.w	ip, [r8, #12]
90015416:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
9001541a:	ed8d 2a20 	vstr	s4, [sp, #128]	@ 0x80
9001541e:	ee16 0a10 	vmov	r0, s12
90015422:	eeb0 6a67 	vmov.f32	s12, s15
90015426:	eddd 7a0c 	vldr	s15, [sp, #48]	@ 0x30
9001542a:	edcd 2a21 	vstr	s5, [sp, #132]	@ 0x84
9001542e:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90015432:	ed8d 3a22 	vstr	s6, [sp, #136]	@ 0x88
90015436:	ed8d 7a23 	vstr	s14, [sp, #140]	@ 0x8c
9001543a:	edcd 3a25 	vstr	s7, [sp, #148]	@ 0x94
9001543e:	ee16 1a10 	vmov	r1, s12
90015442:	eeb0 6a67 	vmov.f32	s12, s15
90015446:	eddd 7a10 	vldr	s15, [sp, #64]	@ 0x40
9001544a:	ed8d 4a26 	vstr	s8, [sp, #152]	@ 0x98
9001544e:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90015452:	edcd 4a27 	vstr	s9, [sp, #156]	@ 0x9c
90015456:	f8d7 a008 	ldr.w	sl, [r7, #8]
9001545a:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
9001545e:	68ff      	ldr	r7, [r7, #12]
90015460:	ee16 2a10 	vmov	r2, s12
90015464:	ed9d 6a09 	vldr	s12, [sp, #36]	@ 0x24
90015468:	9624      	str	r6, [sp, #144]	@ 0x90
9001546a:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
9001546e:	e9cd 0128 	strd	r0, r1, [sp, #160]	@ 0xa0
90015472:	ed8d 6a1e 	vstr	s12, [sp, #120]	@ 0x78
90015476:	4628      	mov	r0, r5
90015478:	ed8d 5a2a 	vstr	s10, [sp, #168]	@ 0xa8
9001547c:	9b06      	ldr	r3, [sp, #24]
9001547e:	922d      	str	r2, [sp, #180]	@ 0xb4
90015480:	4a1f      	ldr	r2, [pc, #124]	@ (90015500 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21c>)
90015482:	9317      	str	r3, [sp, #92]	@ 0x5c
90015484:	8812      	ldrh	r2, [r2, #0]
90015486:	9b07      	ldr	r3, [sp, #28]
90015488:	9218      	str	r2, [sp, #96]	@ 0x60
9001548a:	9319      	str	r3, [sp, #100]	@ 0x64
9001548c:	edcd 5a2b 	vstr	s11, [sp, #172]	@ 0xac
90015490:	edcd 7a2e 	vstr	s15, [sp, #184]	@ 0xb8
90015494:	f8cd e0bc 	str.w	lr, [sp, #188]	@ 0xbc
90015498:	f8cd c0c0 	str.w	ip, [sp, #192]	@ 0xc0
9001549c:	f8cd a0b0 	str.w	sl, [sp, #176]	@ 0xb0
900154a0:	9731      	str	r7, [sp, #196]	@ 0xc4
900154a2:	f007 fd35 	bl	9001cf10 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
900154a6:	901a      	str	r0, [sp, #104]	@ 0x68
900154a8:	4628      	mov	r0, r5
900154aa:	f007 fc0f 	bl	9001cccc <_ZNK8touchgfx6Bitmap8getWidthEv>
900154ae:	901b      	str	r0, [sp, #108]	@ 0x6c
900154b0:	4628      	mov	r0, r5
900154b2:	f007 fc3f 	bl	9001cd34 <_ZNK8touchgfx6Bitmap9getHeightEv>
900154b6:	901c      	str	r0, [sp, #112]	@ 0x70
900154b8:	4628      	mov	r0, r5
900154ba:	f007 fc07 	bl	9001cccc <_ZNK8touchgfx6Bitmap8getWidthEv>
900154be:	4b11      	ldr	r3, [pc, #68]	@ (90015504 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
900154c0:	901d      	str	r0, [sp, #116]	@ 0x74
900154c2:	681b      	ldr	r3, [r3, #0]
900154c4:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900154c8:	b10a      	cbz	r2, 900154ce <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
900154ca:	6cdd      	ldr	r5, [r3, #76]	@ 0x4c
900154cc:	b905      	cbnz	r5, 900154d0 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ec>
900154ce:	689d      	ldr	r5, [r3, #8]
900154d0:	682b      	ldr	r3, [r5, #0]
900154d2:	4620      	mov	r0, r4
900154d4:	6c1e      	ldr	r6, [r3, #64]	@ 0x40
900154d6:	f7ff fefb 	bl	900152d0 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
900154da:	f64f 73ff 	movw	r3, #65535	@ 0xffff
900154de:	aa1e      	add	r2, sp, #120	@ 0x78
900154e0:	a917      	add	r1, sp, #92	@ 0x5c
900154e2:	9304      	str	r3, [sp, #16]
900154e4:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
900154e8:	e9cd 0302 	strd	r0, r3, [sp, #8]
900154ec:	ab13      	add	r3, sp, #76	@ 0x4c
900154ee:	4628      	mov	r0, r5
900154f0:	9301      	str	r3, [sp, #4]
900154f2:	ab15      	add	r3, sp, #84	@ 0x54
900154f4:	9300      	str	r3, [sp, #0]
900154f6:	ab19      	add	r3, sp, #100	@ 0x64
900154f8:	47b0      	blx	r6
900154fa:	b033      	add	sp, #204	@ 0xcc
900154fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015500:	24021c06 	.word	0x24021c06
90015504:	24021c0c 	.word	0x24021c0c

90015508 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
90015508:	b570      	push	{r4, r5, r6, lr}
9001550a:	ed2d 8b04 	vpush	{d8-d9}
9001550e:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
90015512:	b098      	sub	sp, #96	@ 0x60
90015514:	4604      	mov	r4, r0
90015516:	460e      	mov	r6, r1
90015518:	2b00      	cmp	r3, #0
9001551a:	d065      	beq.n	900155e8 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
9001551c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90015520:	f100 0526 	add.w	r5, r0, #38	@ 0x26
90015524:	ed9f 8a37 	vldr	s16, [pc, #220]	@ 90015604 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
90015528:	ee09 3a10 	vmov	s18, r3
9001552c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90015530:	4628      	mov	r0, r5
90015532:	ee08 3a90 	vmov	s17, r3
90015536:	4b34      	ldr	r3, [pc, #208]	@ (90015608 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
90015538:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
9001553c:	930c      	str	r3, [sp, #48]	@ 0x30
9001553e:	eef8 8ae8 	vcvt.f32.s32	s17, s17
90015542:	930d      	str	r3, [sp, #52]	@ 0x34
90015544:	930e      	str	r3, [sp, #56]	@ 0x38
90015546:	ee39 9a08 	vadd.f32	s18, s18, s16
9001554a:	930f      	str	r3, [sp, #60]	@ 0x3c
9001554c:	f007 fbbe 	bl	9001cccc <_ZNK8touchgfx6Bitmap8getWidthEv>
90015550:	ee07 0a90 	vmov	s15, r0
90015554:	4628      	mov	r0, r5
90015556:	ee78 8a88 	vadd.f32	s17, s17, s16
9001555a:	eef8 9ae7 	vcvt.f32.s32	s19, s15
9001555e:	f007 fbe9 	bl	9001cd34 <_ZNK8touchgfx6Bitmap9getHeightEv>
90015562:	4b2a      	ldr	r3, [pc, #168]	@ (9001560c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
90015564:	ee07 0a90 	vmov	s15, r0
90015568:	781b      	ldrb	r3, [r3, #0]
9001556a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9001556e:	eef0 7a48 	vmov.f32	s15, s16
90015572:	2b01      	cmp	r3, #1
90015574:	d13c      	bne.n	900155f0 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
90015576:	eef0 6a69 	vmov.f32	s13, s19
9001557a:	ee19 3a90 	vmov	r3, s19
9001557e:	eeb0 6a47 	vmov.f32	s12, s14
90015582:	eef0 5a47 	vmov.f32	s11, s14
90015586:	eef0 9a48 	vmov.f32	s19, s16
9001558a:	eeb0 7a48 	vmov.f32	s14, s16
9001558e:	9314      	str	r3, [sp, #80]	@ 0x50
90015590:	ab14      	add	r3, sp, #80	@ 0x50
90015592:	2200      	movs	r2, #0
90015594:	4631      	mov	r1, r6
90015596:	9303      	str	r3, [sp, #12]
90015598:	ab10      	add	r3, sp, #64	@ 0x40
9001559a:	4620      	mov	r0, r4
9001559c:	edcd 7a04 	vstr	s15, [sp, #16]
900155a0:	9302      	str	r3, [sp, #8]
900155a2:	ab0c      	add	r3, sp, #48	@ 0x30
900155a4:	ed8d 9a05 	vstr	s18, [sp, #20]
900155a8:	9301      	str	r3, [sp, #4]
900155aa:	ab08      	add	r3, sp, #32
900155ac:	ed8d 9a06 	vstr	s18, [sp, #24]
900155b0:	9300      	str	r3, [sp, #0]
900155b2:	ab04      	add	r3, sp, #16
900155b4:	edcd 7a07 	vstr	s15, [sp, #28]
900155b8:	edcd 7a08 	vstr	s15, [sp, #32]
900155bc:	edcd 7a09 	vstr	s15, [sp, #36]	@ 0x24
900155c0:	edcd 8a0a 	vstr	s17, [sp, #40]	@ 0x28
900155c4:	edcd 8a0b 	vstr	s17, [sp, #44]	@ 0x2c
900155c8:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
900155cc:	edcd 9a11 	vstr	s19, [sp, #68]	@ 0x44
900155d0:	edcd 5a12 	vstr	s11, [sp, #72]	@ 0x48
900155d4:	ed8d 6a13 	vstr	s12, [sp, #76]	@ 0x4c
900155d8:	edcd 7a15 	vstr	s15, [sp, #84]	@ 0x54
900155dc:	ed8d 7a16 	vstr	s14, [sp, #88]	@ 0x58
900155e0:	edcd 6a17 	vstr	s13, [sp, #92]	@ 0x5c
900155e4:	f7ff fe7e 	bl	900152e4 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
900155e8:	b018      	add	sp, #96	@ 0x60
900155ea:	ecbd 8b04 	vpop	{d8-d9}
900155ee:	bd70      	pop	{r4, r5, r6, pc}
900155f0:	eef0 6a47 	vmov.f32	s13, s14
900155f4:	ee18 3a10 	vmov	r3, s16
900155f8:	eef0 5a69 	vmov.f32	s11, s19
900155fc:	eeb0 6a48 	vmov.f32	s12, s16
90015600:	e7c5      	b.n	9001558e <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
90015602:	bf00      	nop
90015604:	00000000 	.word	0x00000000
90015608:	42c80000 	.word	0x42c80000
9001560c:	24021c04 	.word	0x24021c04

90015610 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
90015610:	2000      	movs	r0, #0
90015612:	4770      	bx	lr

90015614 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
90015614:	4b07      	ldr	r3, [pc, #28]	@ (90015634 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
90015616:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90015618:	881b      	ldrh	r3, [r3, #0]
9001561a:	4293      	cmp	r3, r2
9001561c:	bf81      	itttt	hi
9001561e:	4b06      	ldrhi	r3, [pc, #24]	@ (90015638 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
90015620:	681b      	ldrhi	r3, [r3, #0]
90015622:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
90015626:	7858      	ldrbhi	r0, [r3, #1]
90015628:	bf8c      	ite	hi
9001562a:	f000 0003 	andhi.w	r0, r0, #3
9001562e:	2000      	movls	r0, #0
90015630:	4770      	bx	lr
90015632:	bf00      	nop
90015634:	24021c68 	.word	0x24021c68
90015638:	24021c64 	.word	0x24021c64

9001563c <_ZN8touchgfx8TextAreaD1Ev>:
9001563c:	4770      	bx	lr
	...

90015640 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
90015640:	4b11      	ldr	r3, [pc, #68]	@ (90015688 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
90015642:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90015646:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
90015648:	4604      	mov	r4, r0
9001564a:	881b      	ldrh	r3, [r3, #0]
9001564c:	428b      	cmp	r3, r1
9001564e:	d918      	bls.n	90015682 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
90015650:	6803      	ldr	r3, [r0, #0]
90015652:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
90015654:	4b0d      	ldr	r3, [pc, #52]	@ (9001568c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
90015656:	6818      	ldr	r0, [r3, #0]
90015658:	f7f1 fa02 	bl	90006a60 <_ZNK8touchgfx5Texts7getTextEt>
9001565c:	6823      	ldr	r3, [r4, #0]
9001565e:	4606      	mov	r6, r0
90015660:	4620      	mov	r0, r4
90015662:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90015664:	4798      	blx	r3
90015666:	6823      	ldr	r3, [r4, #0]
90015668:	4607      	mov	r7, r0
9001566a:	4620      	mov	r0, r4
9001566c:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90015670:	4798      	blx	r3
90015672:	463a      	mov	r2, r7
90015674:	4603      	mov	r3, r0
90015676:	4631      	mov	r1, r6
90015678:	4620      	mov	r0, r4
9001567a:	46ac      	mov	ip, r5
9001567c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90015680:	4760      	bx	ip
90015682:	2000      	movs	r0, #0
90015684:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90015688:	24021c68 	.word	0x24021c68
9001568c:	24021c70 	.word	0x24021c70

90015690 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
90015690:	4b18      	ldr	r3, [pc, #96]	@ (900156f4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
90015692:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
90015696:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
90015698:	4604      	mov	r4, r0
9001569a:	881b      	ldrh	r3, [r3, #0]
9001569c:	428b      	cmp	r3, r1
9001569e:	d926      	bls.n	900156ee <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
900156a0:	4b15      	ldr	r3, [pc, #84]	@ (900156f8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
900156a2:	681b      	ldr	r3, [r3, #0]
900156a4:	eb03 0241 	add.w	r2, r3, r1, lsl #1
900156a8:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
900156ac:	4b13      	ldr	r3, [pc, #76]	@ (900156fc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
900156ae:	7855      	ldrb	r5, [r2, #1]
900156b0:	681b      	ldr	r3, [r3, #0]
900156b2:	f3c5 0581 	ubfx	r5, r5, #2, #2
900156b6:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
900156ba:	6833      	ldr	r3, [r6, #0]
900156bc:	69df      	ldr	r7, [r3, #28]
900156be:	4b10      	ldr	r3, [pc, #64]	@ (90015700 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
900156c0:	6818      	ldr	r0, [r3, #0]
900156c2:	f7f1 f9cd 	bl	90006a60 <_ZNK8touchgfx5Texts7getTextEt>
900156c6:	6823      	ldr	r3, [r4, #0]
900156c8:	4680      	mov	r8, r0
900156ca:	4620      	mov	r0, r4
900156cc:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
900156ce:	4798      	blx	r3
900156d0:	6823      	ldr	r3, [r4, #0]
900156d2:	4681      	mov	r9, r0
900156d4:	4620      	mov	r0, r4
900156d6:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
900156da:	4798      	blx	r3
900156dc:	464b      	mov	r3, r9
900156de:	9000      	str	r0, [sp, #0]
900156e0:	4642      	mov	r2, r8
900156e2:	4629      	mov	r1, r5
900156e4:	4630      	mov	r0, r6
900156e6:	47b8      	blx	r7
900156e8:	b003      	add	sp, #12
900156ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900156ee:	2000      	movs	r0, #0
900156f0:	e7fa      	b.n	900156e8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
900156f2:	bf00      	nop
900156f4:	24021c68 	.word	0x24021c68
900156f8:	24021c64 	.word	0x24021c64
900156fc:	24021c6c 	.word	0x24021c6c
90015700:	24021c70 	.word	0x24021c70

90015704 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
90015704:	b40e      	push	{r1, r2, r3}
90015706:	4b30      	ldr	r3, [pc, #192]	@ (900157c8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
90015708:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001570c:	881a      	ldrh	r2, [r3, #0]
9001570e:	b09d      	sub	sp, #116	@ 0x74
90015710:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
90015712:	4604      	mov	r4, r0
90015714:	429a      	cmp	r2, r3
90015716:	d954      	bls.n	900157c2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
90015718:	aa26      	add	r2, sp, #152	@ 0x98
9001571a:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 900157cc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
9001571e:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 900157d0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
90015722:	9202      	str	r2, [sp, #8]
90015724:	f8d9 2000 	ldr.w	r2, [r9]
90015728:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
9001572c:	f8d8 3000 	ldr.w	r3, [r8]
90015730:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90015734:	682b      	ldr	r3, [r5, #0]
90015736:	4628      	mov	r0, r5
90015738:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001573a:	4798      	blx	r3
9001573c:	4606      	mov	r6, r0
9001573e:	b207      	sxth	r7, r0
90015740:	a803      	add	r0, sp, #12
90015742:	f005 ff08 	bl	9001b556 <_ZN8touchgfx12TextProviderC1Ev>
90015746:	682b      	ldr	r3, [r5, #0]
90015748:	4628      	mov	r0, r5
9001574a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001574c:	4798      	blx	r3
9001574e:	682b      	ldr	r3, [r5, #0]
90015750:	4682      	mov	sl, r0
90015752:	4628      	mov	r0, r5
90015754:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90015756:	4798      	blx	r3
90015758:	4653      	mov	r3, sl
9001575a:	9000      	str	r0, [sp, #0]
9001575c:	a803      	add	r0, sp, #12
9001575e:	9a02      	ldr	r2, [sp, #8]
90015760:	9925      	ldr	r1, [sp, #148]	@ 0x94
90015762:	f005 ff53 	bl	9001b60c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90015766:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
90015768:	f8d9 3000 	ldr.w	r3, [r9]
9001576c:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
90015770:	8925      	ldrh	r5, [r4, #8]
90015772:	eb03 0142 	add.w	r1, r3, r2, lsl #1
90015776:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
9001577a:	eba5 050c 	sub.w	r5, r5, ip
9001577e:	784a      	ldrb	r2, [r1, #1]
90015780:	f8d8 3000 	ldr.w	r3, [r8]
90015784:	b22d      	sxth	r5, r5
90015786:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
9001578a:	f3c2 0281 	ubfx	r2, r2, #2, #2
9001578e:	9500      	str	r5, [sp, #0]
90015790:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
90015794:	a803      	add	r0, sp, #12
90015796:	f002 fff3 	bl	90018780 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
9001579a:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
9001579e:	b203      	sxth	r3, r0
900157a0:	18b9      	adds	r1, r7, r2
900157a2:	2900      	cmp	r1, #0
900157a4:	dd0b      	ble.n	900157be <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
900157a6:	3b01      	subs	r3, #1
900157a8:	fb13 f302 	smulbb	r3, r3, r2
900157ac:	fb16 3300 	smlabb	r3, r6, r0, r3
900157b0:	b21f      	sxth	r7, r3
900157b2:	4638      	mov	r0, r7
900157b4:	b01d      	add	sp, #116	@ 0x74
900157b6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900157ba:	b003      	add	sp, #12
900157bc:	4770      	bx	lr
900157be:	2b00      	cmp	r3, #0
900157c0:	dcf7      	bgt.n	900157b2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
900157c2:	2700      	movs	r7, #0
900157c4:	e7f5      	b.n	900157b2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
900157c6:	bf00      	nop
900157c8:	24021c68 	.word	0x24021c68
900157cc:	24021c64 	.word	0x24021c64
900157d0:	24021c6c 	.word	0x24021c6c

900157d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
900157d4:	4bbd      	ldr	r3, [pc, #756]	@ (90015acc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
900157d6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900157da:	460c      	mov	r4, r1
900157dc:	881b      	ldrh	r3, [r3, #0]
900157de:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
900157e0:	b0a9      	sub	sp, #164	@ 0xa4
900157e2:	4680      	mov	r8, r0
900157e4:	428b      	cmp	r3, r1
900157e6:	d809      	bhi.n	900157fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
900157e8:	2300      	movs	r3, #0
900157ea:	f04f 32ff 	mov.w	r2, #4294967295
900157ee:	6083      	str	r3, [r0, #8]
900157f0:	e9c0 3200 	strd	r3, r2, [r0]
900157f4:	4640      	mov	r0, r8
900157f6:	b029      	add	sp, #164	@ 0xa4
900157f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900157fc:	4eb4      	ldr	r6, [pc, #720]	@ (90015ad0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
900157fe:	6833      	ldr	r3, [r6, #0]
90015800:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
90015804:	4bb3      	ldr	r3, [pc, #716]	@ (90015ad4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
90015806:	681b      	ldr	r3, [r3, #0]
90015808:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
9001580c:	4bb2      	ldr	r3, [pc, #712]	@ (90015ad8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
9001580e:	6818      	ldr	r0, [r3, #0]
90015810:	f7f1 f926 	bl	90006a60 <_ZNK8touchgfx5Texts7getTextEt>
90015814:	682b      	ldr	r3, [r5, #0]
90015816:	4681      	mov	r9, r0
90015818:	4628      	mov	r0, r5
9001581a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001581c:	4798      	blx	r3
9001581e:	8ea7      	ldrh	r7, [r4, #52]	@ 0x34
90015820:	b203      	sxth	r3, r0
90015822:	4682      	mov	sl, r0
90015824:	4407      	add	r7, r0
90015826:	a80f      	add	r0, sp, #60	@ 0x3c
90015828:	9304      	str	r3, [sp, #16]
9001582a:	b2bb      	uxth	r3, r7
9001582c:	9303      	str	r3, [sp, #12]
9001582e:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
90015832:	2b00      	cmp	r3, #0
90015834:	f040 80a5 	bne.w	90015982 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
90015838:	f005 fe8d 	bl	9001b556 <_ZN8touchgfx12TextProviderC1Ev>
9001583c:	682b      	ldr	r3, [r5, #0]
9001583e:	4628      	mov	r0, r5
90015840:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90015842:	4798      	blx	r3
90015844:	682b      	ldr	r3, [r5, #0]
90015846:	4606      	mov	r6, r0
90015848:	4628      	mov	r0, r5
9001584a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001584c:	4798      	blx	r3
9001584e:	6823      	ldr	r3, [r4, #0]
90015850:	4607      	mov	r7, r0
90015852:	4620      	mov	r0, r4
90015854:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90015856:	4798      	blx	r3
90015858:	6823      	ldr	r3, [r4, #0]
9001585a:	4683      	mov	fp, r0
9001585c:	4620      	mov	r0, r4
9001585e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90015862:	4798      	blx	r3
90015864:	463b      	mov	r3, r7
90015866:	4649      	mov	r1, r9
90015868:	4632      	mov	r2, r6
9001586a:	2600      	movs	r6, #0
9001586c:	e9cd b000 	strd	fp, r0, [sp]
90015870:	a80f      	add	r0, sp, #60	@ 0x3c
90015872:	4637      	mov	r7, r6
90015874:	f005 fedf 	bl	9001b636 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90015878:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
9001587c:	f8df b250 	ldr.w	fp, [pc, #592]	@ 90015ad0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
90015880:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
90015884:	bf0c      	ite	eq
90015886:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
9001588a:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
9001588e:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
90015890:	4629      	mov	r1, r5
90015892:	f8db 3000 	ldr.w	r3, [fp]
90015896:	a80f      	add	r0, sp, #60	@ 0x3c
90015898:	3701      	adds	r7, #1
9001589a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
9001589e:	f647 72ff 	movw	r2, #32767	@ 0x7fff
900158a2:	b2bf      	uxth	r7, r7
900158a4:	785b      	ldrb	r3, [r3, #1]
900158a6:	f3c3 0381 	ubfx	r3, r3, #2, #2
900158aa:	f002 fc70 	bl	9001818e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
900158ae:	9b03      	ldr	r3, [sp, #12]
900158b0:	4286      	cmp	r6, r0
900158b2:	eba9 0903 	sub.w	r9, r9, r3
900158b6:	bfb8      	it	lt
900158b8:	4606      	movlt	r6, r0
900158ba:	a80f      	add	r0, sp, #60	@ 0x3c
900158bc:	fa0f f989 	sxth.w	r9, r9
900158c0:	b236      	sxth	r6, r6
900158c2:	f005 fe6f 	bl	9001b5a4 <_ZN8touchgfx12TextProvider11endOfStringEv>
900158c6:	b918      	cbnz	r0, 900158d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
900158c8:	7a2b      	ldrb	r3, [r5, #8]
900158ca:	444b      	add	r3, r9
900158cc:	2b00      	cmp	r3, #0
900158ce:	dcde      	bgt.n	9001588e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
900158d0:	9b03      	ldr	r3, [sp, #12]
900158d2:	4620      	mov	r0, r4
900158d4:	9a04      	ldr	r2, [sp, #16]
900158d6:	fb13 f707 	smulbb	r7, r3, r7
900158da:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
900158dc:	f895 9009 	ldrb.w	r9, [r5, #9]
900158e0:	1aff      	subs	r7, r7, r3
900158e2:	b2bf      	uxth	r7, r7
900158e4:	b23b      	sxth	r3, r7
900158e6:	429a      	cmp	r2, r3
900158e8:	bfa8      	it	ge
900158ea:	4657      	movge	r7, sl
900158ec:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
900158f0:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
900158f4:	6823      	ldr	r3, [r4, #0]
900158f6:	444f      	add	r7, r9
900158f8:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
900158fa:	bf08      	it	eq
900158fc:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
90015900:	fa1f f987 	uxth.w	r9, r7
90015904:	bf18      	it	ne
90015906:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
9001590a:	4798      	blx	r3
9001590c:	2801      	cmp	r0, #1
9001590e:	fa0f f789 	sxth.w	r7, r9
90015912:	b2b3      	uxth	r3, r6
90015914:	f000 80e2 	beq.w	90015adc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
90015918:	2802      	cmp	r0, #2
9001591a:	f894 6037 	ldrb.w	r6, [r4, #55]	@ 0x37
9001591e:	f000 80e3 	beq.w	90015ae8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
90015922:	7aea      	ldrb	r2, [r5, #11]
90015924:	b236      	sxth	r6, r6
90015926:	7b2d      	ldrb	r5, [r5, #12]
90015928:	1ab6      	subs	r6, r6, r2
9001592a:	442a      	add	r2, r5
9001592c:	fa1f fa86 	uxth.w	sl, r6
90015930:	4413      	add	r3, r2
90015932:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
90015936:	fa0f fb8a 	sxth.w	fp, sl
9001593a:	b29b      	uxth	r3, r3
9001593c:	2a02      	cmp	r2, #2
9001593e:	b21e      	sxth	r6, r3
90015940:	f000 80d6 	beq.w	90015af0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
90015944:	2a03      	cmp	r2, #3
90015946:	f000 80de 	beq.w	90015b06 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
9001594a:	2a01      	cmp	r2, #1
9001594c:	f040 80e6 	bne.w	90015b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
90015950:	8925      	ldrh	r5, [r4, #8]
90015952:	4633      	mov	r3, r6
90015954:	463e      	mov	r6, r7
90015956:	eba5 0909 	sub.w	r9, r5, r9
9001595a:	461f      	mov	r7, r3
9001595c:	465d      	mov	r5, fp
9001595e:	fa0f fb89 	sxth.w	fp, r9
90015962:	4b5d      	ldr	r3, [pc, #372]	@ (90015ad8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
90015964:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
90015966:	6818      	ldr	r0, [r3, #0]
90015968:	f7f1 f87a 	bl	90006a60 <_ZNK8touchgfx5Texts7getTextEt>
9001596c:	f8a8 b000 	strh.w	fp, [r8]
90015970:	f8a8 5002 	strh.w	r5, [r8, #2]
90015974:	f8a8 6004 	strh.w	r6, [r8, #4]
90015978:	f8a8 7006 	strh.w	r7, [r8, #6]
9001597c:	f8c8 0008 	str.w	r0, [r8, #8]
90015980:	e738      	b.n	900157f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
90015982:	f005 fde8 	bl	9001b556 <_ZN8touchgfx12TextProviderC1Ev>
90015986:	682b      	ldr	r3, [r5, #0]
90015988:	4628      	mov	r0, r5
9001598a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001598c:	4798      	blx	r3
9001598e:	682b      	ldr	r3, [r5, #0]
90015990:	4607      	mov	r7, r0
90015992:	4628      	mov	r0, r5
90015994:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90015996:	4798      	blx	r3
90015998:	6823      	ldr	r3, [r4, #0]
9001599a:	4683      	mov	fp, r0
9001599c:	4620      	mov	r0, r4
9001599e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
900159a0:	4798      	blx	r3
900159a2:	6822      	ldr	r2, [r4, #0]
900159a4:	9005      	str	r0, [sp, #20]
900159a6:	4620      	mov	r0, r4
900159a8:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
900159ac:	4790      	blx	r2
900159ae:	9b05      	ldr	r3, [sp, #20]
900159b0:	463a      	mov	r2, r7
900159b2:	4649      	mov	r1, r9
900159b4:	9001      	str	r0, [sp, #4]
900159b6:	a80f      	add	r0, sp, #60	@ 0x3c
900159b8:	9300      	str	r3, [sp, #0]
900159ba:	465b      	mov	r3, fp
900159bc:	f005 fe3b 	bl	9001b636 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
900159c0:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
900159c4:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
900159c8:	af0f      	add	r7, sp, #60	@ 0x3c
900159ca:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
900159ce:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
900159d2:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
900159d4:	bf0a      	itet	eq
900159d6:	464a      	moveq	r2, r9
900159d8:	461a      	movne	r2, r3
900159da:	4699      	moveq	r9, r3
900159dc:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
900159e0:	f894 0039 	ldrb.w	r0, [r4, #57]	@ 0x39
900159e4:	1ad2      	subs	r2, r2, r3
900159e6:	6833      	ldr	r3, [r6, #0]
900159e8:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	@ 0x34
900159ec:	eb03 0341 	add.w	r3, r3, r1, lsl #1
900159f0:	7859      	ldrb	r1, [r3, #1]
900159f2:	2300      	movs	r3, #0
900159f4:	9707      	str	r7, [sp, #28]
900159f6:	f3c1 0181 	ubfx	r1, r1, #2, #2
900159fa:	f8ad 3018 	strh.w	r3, [sp, #24]
900159fe:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
90015a02:	f88d 1020 	strb.w	r1, [sp, #32]
90015a06:	9509      	str	r5, [sp, #36]	@ 0x24
90015a08:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90015a0c:	f8ad 902a 	strh.w	r9, [sp, #42]	@ 0x2a
90015a10:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
90015a14:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90015a18:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
90015a1c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90015a20:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
90015a24:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90015a28:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
90015a2c:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
90015a30:	b350      	cbz	r0, 90015a88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90015a32:	682b      	ldr	r3, [r5, #0]
90015a34:	4628      	mov	r0, r5
90015a36:	695b      	ldr	r3, [r3, #20]
90015a38:	4798      	blx	r3
90015a3a:	4607      	mov	r7, r0
90015a3c:	b320      	cbz	r0, 90015a88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90015a3e:	9809      	ldr	r0, [sp, #36]	@ 0x24
90015a40:	4639      	mov	r1, r7
90015a42:	6803      	ldr	r3, [r0, #0]
90015a44:	68db      	ldr	r3, [r3, #12]
90015a46:	4798      	blx	r3
90015a48:	4606      	mov	r6, r0
90015a4a:	b1e8      	cbz	r0, 90015a88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90015a4c:	7b43      	ldrb	r3, [r0, #13]
90015a4e:	7a82      	ldrb	r2, [r0, #10]
90015a50:	005b      	lsls	r3, r3, #1
90015a52:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90015a56:	4313      	orrs	r3, r2
90015a58:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
90015a5c:	f89d 3021 	ldrb.w	r3, [sp, #33]	@ 0x21
90015a60:	2b06      	cmp	r3, #6
90015a62:	d111      	bne.n	90015a88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90015a64:	9809      	ldr	r0, [sp, #36]	@ 0x24
90015a66:	4632      	mov	r2, r6
90015a68:	4639      	mov	r1, r7
90015a6a:	6803      	ldr	r3, [r0, #0]
90015a6c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90015a6e:	4798      	blx	r3
90015a70:	7b73      	ldrb	r3, [r6, #13]
90015a72:	005b      	lsls	r3, r3, #1
90015a74:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90015a78:	7ab3      	ldrb	r3, [r6, #10]
90015a7a:	4313      	orrs	r3, r2
90015a7c:	4418      	add	r0, r3
90015a7e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90015a82:	4418      	add	r0, r3
90015a84:	f8ad 0038 	strh.w	r0, [sp, #56]	@ 0x38
90015a88:	2600      	movs	r6, #0
90015a8a:	4637      	mov	r7, r6
90015a8c:	a806      	add	r0, sp, #24
90015a8e:	3701      	adds	r7, #1
90015a90:	f002 fd73 	bl	9001857a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90015a94:	f8bd 0036 	ldrh.w	r0, [sp, #54]	@ 0x36
90015a98:	9b03      	ldr	r3, [sp, #12]
90015a9a:	b2bf      	uxth	r7, r7
90015a9c:	4286      	cmp	r6, r0
90015a9e:	eba9 0903 	sub.w	r9, r9, r3
90015aa2:	f8bd 3018 	ldrh.w	r3, [sp, #24]
90015aa6:	bfb8      	it	lt
90015aa8:	4606      	movlt	r6, r0
90015aaa:	fa0f f989 	sxth.w	r9, r9
90015aae:	b236      	sxth	r6, r6
90015ab0:	2b00      	cmp	r3, #0
90015ab2:	f43f af0d 	beq.w	900158d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90015ab6:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
90015aba:	2b00      	cmp	r3, #0
90015abc:	f47f af08 	bne.w	900158d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90015ac0:	7a2b      	ldrb	r3, [r5, #8]
90015ac2:	444b      	add	r3, r9
90015ac4:	2b00      	cmp	r3, #0
90015ac6:	dce1      	bgt.n	90015a8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
90015ac8:	e702      	b.n	900158d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90015aca:	bf00      	nop
90015acc:	24021c68 	.word	0x24021c68
90015ad0:	24021c64 	.word	0x24021c64
90015ad4:	24021c6c 	.word	0x24021c6c
90015ad8:	24021c70 	.word	0x24021c70
90015adc:	ebaa 0606 	sub.w	r6, sl, r6
90015ae0:	2002      	movs	r0, #2
90015ae2:	fb96 f6f0 	sdiv	r6, r6, r0
90015ae6:	e71c      	b.n	90015922 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
90015ae8:	441e      	add	r6, r3
90015aea:	ebaa 0606 	sub.w	r6, sl, r6
90015aee:	e718      	b.n	90015922 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
90015af0:	8925      	ldrh	r5, [r4, #8]
90015af2:	1aed      	subs	r5, r5, r3
90015af4:	eba5 050a 	sub.w	r5, r5, sl
90015af8:	fa0f fb85 	sxth.w	fp, r5
90015afc:	8965      	ldrh	r5, [r4, #10]
90015afe:	eba5 0509 	sub.w	r5, r5, r9
90015b02:	b22d      	sxth	r5, r5
90015b04:	e72d      	b.n	90015962 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
90015b06:	8965      	ldrh	r5, [r4, #10]
90015b08:	f04f 0b00 	mov.w	fp, #0
90015b0c:	1aed      	subs	r5, r5, r3
90015b0e:	4633      	mov	r3, r6
90015b10:	463e      	mov	r6, r7
90015b12:	eba5 050a 	sub.w	r5, r5, sl
90015b16:	461f      	mov	r7, r3
90015b18:	b22d      	sxth	r5, r5
90015b1a:	e722      	b.n	90015962 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
90015b1c:	2500      	movs	r5, #0
90015b1e:	e720      	b.n	90015962 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

90015b20 <_ZN8touchgfx8TextAreaD0Ev>:
90015b20:	b510      	push	{r4, lr}
90015b22:	4604      	mov	r4, r0
90015b24:	2148      	movs	r1, #72	@ 0x48
90015b26:	f017 f8c9 	bl	9002ccbc <_ZdlPvj>
90015b2a:	4620      	mov	r0, r4
90015b2c:	bd10      	pop	{r4, pc}
	...

90015b30 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
90015b30:	b513      	push	{r0, r1, r4, lr}
90015b32:	f890 3036 	ldrb.w	r3, [r0, #54]	@ 0x36
90015b36:	4604      	mov	r4, r0
90015b38:	b1fb      	cbz	r3, 90015b7a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90015b3a:	4b16      	ldr	r3, [pc, #88]	@ (90015b94 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
90015b3c:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
90015b3e:	881b      	ldrh	r3, [r3, #0]
90015b40:	428b      	cmp	r3, r1
90015b42:	d91a      	bls.n	90015b7a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90015b44:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90015b48:	2b00      	cmp	r3, #0
90015b4a:	dd16      	ble.n	90015b7a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90015b4c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90015b50:	2b00      	cmp	r3, #0
90015b52:	dd12      	ble.n	90015b7a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90015b54:	4b10      	ldr	r3, [pc, #64]	@ (90015b98 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
90015b56:	6818      	ldr	r0, [r3, #0]
90015b58:	f7f0 ff82 	bl	90006a60 <_ZNK8touchgfx5Texts7getTextEt>
90015b5c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
90015b60:	6822      	ldr	r2, [r4, #0]
90015b62:	2b00      	cmp	r3, #0
90015b64:	db06      	blt.n	90015b74 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
90015b66:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
90015b6a:	2b00      	cmp	r3, #0
90015b6c:	db02      	blt.n	90015b74 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
90015b6e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90015b70:	4298      	cmp	r0, r3
90015b72:	d004      	beq.n	90015b7e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
90015b74:	6953      	ldr	r3, [r2, #20]
90015b76:	4620      	mov	r0, r4
90015b78:	4798      	blx	r3
90015b7a:	b002      	add	sp, #8
90015b7c:	bd10      	pop	{r4, pc}
90015b7e:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
90015b82:	466b      	mov	r3, sp
90015b84:	6912      	ldr	r2, [r2, #16]
90015b86:	c903      	ldmia	r1, {r0, r1}
90015b88:	e883 0003 	stmia.w	r3, {r0, r1}
90015b8c:	4619      	mov	r1, r3
90015b8e:	4620      	mov	r0, r4
90015b90:	4790      	blx	r2
90015b92:	e7f2      	b.n	90015b7a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90015b94:	24021c68 	.word	0x24021c68
90015b98:	24021c70 	.word	0x24021c70

90015b9c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
90015b9c:	4b45      	ldr	r3, [pc, #276]	@ (90015cb4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
90015b9e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90015ba2:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90015ba4:	b08e      	sub	sp, #56	@ 0x38
90015ba6:	881b      	ldrh	r3, [r3, #0]
90015ba8:	4604      	mov	r4, r0
90015baa:	4293      	cmp	r3, r2
90015bac:	d97e      	bls.n	90015cac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90015bae:	6808      	ldr	r0, [r1, #0]
90015bb0:	ab05      	add	r3, sp, #20
90015bb2:	6849      	ldr	r1, [r1, #4]
90015bb4:	4d40      	ldr	r5, [pc, #256]	@ (90015cb8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
90015bb6:	c303      	stmia	r3!, {r0, r1}
90015bb8:	4611      	mov	r1, r2
90015bba:	6828      	ldr	r0, [r5, #0]
90015bbc:	f7f0 ff50 	bl	90006a60 <_ZNK8touchgfx5Texts7getTextEt>
90015bc0:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
90015bc4:	2b00      	cmp	r3, #0
90015bc6:	db11      	blt.n	90015bec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90015bc8:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
90015bcc:	2b00      	cmp	r3, #0
90015bce:	db0d      	blt.n	90015bec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90015bd0:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90015bd2:	4298      	cmp	r0, r3
90015bd4:	d10a      	bne.n	90015bec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90015bd6:	f104 023c 	add.w	r2, r4, #60	@ 0x3c
90015bda:	ab09      	add	r3, sp, #36	@ 0x24
90015bdc:	e892 0003 	ldmia.w	r2, {r0, r1}
90015be0:	e883 0003 	stmia.w	r3, {r0, r1}
90015be4:	4619      	mov	r1, r3
90015be6:	a805      	add	r0, sp, #20
90015be8:	f7fc fdd0 	bl	9001278c <_ZN8touchgfx4RectaNERKS0_>
90015bec:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90015bf0:	2b00      	cmp	r3, #0
90015bf2:	dd5b      	ble.n	90015cac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90015bf4:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
90015bf8:	2b00      	cmp	r3, #0
90015bfa:	dd57      	ble.n	90015cac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90015bfc:	4f2f      	ldr	r7, [pc, #188]	@ (90015cbc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
90015bfe:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
90015c00:	683b      	ldr	r3, [r7, #0]
90015c02:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90015c06:	4b2e      	ldr	r3, [pc, #184]	@ (90015cc0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
90015c08:	681b      	ldr	r3, [r3, #0]
90015c0a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90015c0e:	2e00      	cmp	r6, #0
90015c10:	d04c      	beq.n	90015cac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90015c12:	6823      	ldr	r3, [r4, #0]
90015c14:	4620      	mov	r0, r4
90015c16:	f894 8036 	ldrb.w	r8, [r4, #54]	@ 0x36
90015c1a:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
90015c1c:	4798      	blx	r3
90015c1e:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
90015c20:	683b      	ldr	r3, [r7, #0]
90015c22:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	@ 0x34
90015c26:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90015c2a:	f894 e038 	ldrb.w	lr, [r4, #56]	@ 0x38
90015c2e:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
90015c32:	785b      	ldrb	r3, [r3, #1]
90015c34:	f894 7037 	ldrb.w	r7, [r4, #55]	@ 0x37
90015c38:	f3c3 0381 	ubfx	r3, r3, #2, #2
90015c3c:	6b21      	ldr	r1, [r4, #48]	@ 0x30
90015c3e:	9609      	str	r6, [sp, #36]	@ 0x24
90015c40:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
90015c44:	4b1f      	ldr	r3, [pc, #124]	@ (90015cc4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
90015c46:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
90015c4a:	681b      	ldr	r3, [r3, #0]
90015c4c:	f88d e02a 	strb.w	lr, [sp, #42]	@ 0x2a
90015c50:	910b      	str	r1, [sp, #44]	@ 0x2c
90015c52:	f8ad c030 	strh.w	ip, [sp, #48]	@ 0x30
90015c56:	f88d 8032 	strb.w	r8, [sp, #50]	@ 0x32
90015c5a:	f88d 7033 	strb.w	r7, [sp, #51]	@ 0x33
90015c5e:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
90015c62:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90015c66:	b10a      	cbz	r2, 90015c6c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
90015c68:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
90015c6a:	b906      	cbnz	r6, 90015c6e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
90015c6c:	689e      	ldr	r6, [r3, #8]
90015c6e:	af07      	add	r7, sp, #28
90015c70:	4621      	mov	r1, r4
90015c72:	4638      	mov	r0, r7
90015c74:	f004 fcb0 	bl	9001a5d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90015c78:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
90015c7a:	6828      	ldr	r0, [r5, #0]
90015c7c:	f7f0 fef0 	bl	90006a60 <_ZNK8touchgfx5Texts7getTextEt>
90015c80:	6823      	ldr	r3, [r4, #0]
90015c82:	4605      	mov	r5, r0
90015c84:	4620      	mov	r0, r4
90015c86:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90015c88:	4798      	blx	r3
90015c8a:	6823      	ldr	r3, [r4, #0]
90015c8c:	4680      	mov	r8, r0
90015c8e:	4620      	mov	r0, r4
90015c90:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90015c94:	4798      	blx	r3
90015c96:	ab09      	add	r3, sp, #36	@ 0x24
90015c98:	9501      	str	r5, [sp, #4]
90015c9a:	9300      	str	r3, [sp, #0]
90015c9c:	ab05      	add	r3, sp, #20
90015c9e:	e9cd 8002 	strd	r8, r0, [sp, #8]
90015ca2:	4630      	mov	r0, r6
90015ca4:	e897 0006 	ldmia.w	r7, {r1, r2}
90015ca8:	f7f0 fe8a 	bl	900069c0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90015cac:	b00e      	add	sp, #56	@ 0x38
90015cae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90015cb2:	bf00      	nop
90015cb4:	24021c68 	.word	0x24021c68
90015cb8:	24021c70 	.word	0x24021c70
90015cbc:	24021c64 	.word	0x24021c64
90015cc0:	24021c6c 	.word	0x24021c6c
90015cc4:	24021c0c 	.word	0x24021c0c

90015cc8 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
90015cc8:	b570      	push	{r4, r5, r6, lr}
90015cca:	6803      	ldr	r3, [r0, #0]
90015ccc:	4604      	mov	r4, r0
90015cce:	4615      	mov	r5, r2
90015cd0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90015cd2:	4798      	blx	r3
90015cd4:	6823      	ldr	r3, [r4, #0]
90015cd6:	4629      	mov	r1, r5
90015cd8:	4620      	mov	r0, r4
90015cda:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90015cdc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90015ce0:	4718      	bx	r3
	...

90015ce4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
90015ce4:	b538      	push	{r3, r4, r5, lr}
90015ce6:	4b0e      	ldr	r3, [pc, #56]	@ (90015d20 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
90015ce8:	4604      	mov	r4, r0
90015cea:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90015cec:	881b      	ldrh	r3, [r3, #0]
90015cee:	429a      	cmp	r2, r3
90015cf0:	d214      	bcs.n	90015d1c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
90015cf2:	6803      	ldr	r3, [r0, #0]
90015cf4:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
90015cf6:	4798      	blx	r3
90015cf8:	6823      	ldr	r3, [r4, #0]
90015cfa:	4605      	mov	r5, r0
90015cfc:	4620      	mov	r0, r4
90015cfe:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
90015d00:	4798      	blx	r3
90015d02:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
90015d06:	b22d      	sxth	r5, r5
90015d08:	4601      	mov	r1, r0
90015d0a:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
90015d0e:	bf06      	itte	eq
90015d10:	4602      	moveq	r2, r0
90015d12:	4629      	moveq	r1, r5
90015d14:	462a      	movne	r2, r5
90015d16:	4620      	mov	r0, r4
90015d18:	f7ff ffd6 	bl	90015cc8 <_ZN8touchgfx8Drawable14setWidthHeightEss>
90015d1c:	bd38      	pop	{r3, r4, r5, pc}
90015d1e:	bf00      	nop
90015d20:	24021c68 	.word	0x24021c68

90015d24 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
90015d24:	b530      	push	{r4, r5, lr}
90015d26:	888b      	ldrh	r3, [r1, #4]
90015d28:	b085      	sub	sp, #20
90015d2a:	4604      	mov	r4, r0
90015d2c:	8583      	strh	r3, [r0, #44]	@ 0x2c
90015d2e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90015d32:	b923      	cbnz	r3, 90015d3e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90015d34:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90015d38:	b90b      	cbnz	r3, 90015d3e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90015d3a:	f7ff ffd3 	bl	90015ce4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
90015d3e:	6823      	ldr	r3, [r4, #0]
90015d40:	466d      	mov	r5, sp
90015d42:	4621      	mov	r1, r4
90015d44:	343c      	adds	r4, #60	@ 0x3c
90015d46:	4628      	mov	r0, r5
90015d48:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90015d4c:	4798      	blx	r3
90015d4e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90015d52:	e884 0007 	stmia.w	r4, {r0, r1, r2}
90015d56:	b005      	add	sp, #20
90015d58:	bd30      	pop	{r4, r5, pc}

90015d5a <_ZNK8touchgfx3Box12getSolidRectEv>:
90015d5a:	2300      	movs	r3, #0
90015d5c:	8083      	strh	r3, [r0, #4]
90015d5e:	80c3      	strh	r3, [r0, #6]
90015d60:	8003      	strh	r3, [r0, #0]
90015d62:	8043      	strh	r3, [r0, #2]
90015d64:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
90015d68:	2bff      	cmp	r3, #255	@ 0xff
90015d6a:	bf01      	itttt	eq
90015d6c:	890b      	ldrheq	r3, [r1, #8]
90015d6e:	8083      	strheq	r3, [r0, #4]
90015d70:	894b      	ldrheq	r3, [r1, #10]
90015d72:	80c3      	strheq	r3, [r0, #6]
90015d74:	4770      	bx	lr
	...

90015d78 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
90015d78:	b537      	push	{r0, r1, r2, r4, r5, lr}
90015d7a:	4604      	mov	r4, r0
90015d7c:	466b      	mov	r3, sp
90015d7e:	6808      	ldr	r0, [r1, #0]
90015d80:	6849      	ldr	r1, [r1, #4]
90015d82:	c303      	stmia	r3!, {r0, r1}
90015d84:	6823      	ldr	r3, [r4, #0]
90015d86:	4669      	mov	r1, sp
90015d88:	4620      	mov	r0, r4
90015d8a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90015d8c:	4798      	blx	r3
90015d8e:	4b08      	ldr	r3, [pc, #32]	@ (90015db0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
90015d90:	681b      	ldr	r3, [r3, #0]
90015d92:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90015d96:	b10a      	cbz	r2, 90015d9c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
90015d98:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90015d9a:	b900      	cbnz	r0, 90015d9e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
90015d9c:	6898      	ldr	r0, [r3, #8]
90015d9e:	6803      	ldr	r3, [r0, #0]
90015da0:	4669      	mov	r1, sp
90015da2:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
90015da4:	6a1d      	ldr	r5, [r3, #32]
90015da6:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
90015daa:	47a8      	blx	r5
90015dac:	b003      	add	sp, #12
90015dae:	bd30      	pop	{r4, r5, pc}
90015db0:	24021c0c 	.word	0x24021c0c

90015db4 <_ZN8touchgfx3BoxD1Ev>:
90015db4:	4770      	bx	lr

90015db6 <_ZN8touchgfx3BoxD0Ev>:
90015db6:	b510      	push	{r4, lr}
90015db8:	4604      	mov	r4, r0
90015dba:	212c      	movs	r1, #44	@ 0x2c
90015dbc:	f016 ff7e 	bl	9002ccbc <_ZdlPvj>
90015dc0:	4620      	mov	r0, r4
90015dc2:	bd10      	pop	{r4, pc}

90015dc4 <_ZNK8touchgfx3Box17invalidateContentEv>:
90015dc4:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
90015dc8:	b12a      	cbz	r2, 90015dd6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
90015dca:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90015dce:	b112      	cbz	r2, 90015dd6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
90015dd0:	6803      	ldr	r3, [r0, #0]
90015dd2:	695b      	ldr	r3, [r3, #20]
90015dd4:	4718      	bx	r3
90015dd6:	4770      	bx	lr

90015dd8 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
90015dd8:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
90015ddc:	4770      	bx	lr

90015dde <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
90015dde:	b570      	push	{r4, r5, r6, lr}
90015de0:	880b      	ldrh	r3, [r1, #0]
90015de2:	4605      	mov	r5, r0
90015de4:	4604      	mov	r4, r0
90015de6:	85c3      	strh	r3, [r0, #46]	@ 0x2e
90015de8:	8813      	ldrh	r3, [r2, #0]
90015dea:	f825 3f30 	strh.w	r3, [r5, #48]!
90015dee:	4628      	mov	r0, r5
90015df0:	f006 ff6c 	bl	9001cccc <_ZNK8touchgfx6Bitmap8getWidthEv>
90015df4:	4606      	mov	r6, r0
90015df6:	4628      	mov	r0, r5
90015df8:	f006 ff9c 	bl	9001cd34 <_ZNK8touchgfx6Bitmap9getHeightEv>
90015dfc:	6823      	ldr	r3, [r4, #0]
90015dfe:	4605      	mov	r5, r0
90015e00:	4631      	mov	r1, r6
90015e02:	4620      	mov	r0, r4
90015e04:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90015e06:	4798      	blx	r3
90015e08:	6823      	ldr	r3, [r4, #0]
90015e0a:	4629      	mov	r1, r5
90015e0c:	4620      	mov	r0, r4
90015e0e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90015e10:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90015e14:	4718      	bx	r3

90015e16 <_ZN8touchgfx14AbstractButton13executeActionEv>:
90015e16:	b510      	push	{r4, lr}
90015e18:	4604      	mov	r4, r0
90015e1a:	6a80      	ldr	r0, [r0, #40]	@ 0x28
90015e1c:	b150      	cbz	r0, 90015e34 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
90015e1e:	6803      	ldr	r3, [r0, #0]
90015e20:	68db      	ldr	r3, [r3, #12]
90015e22:	4798      	blx	r3
90015e24:	b130      	cbz	r0, 90015e34 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
90015e26:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
90015e28:	4621      	mov	r1, r4
90015e2a:	6803      	ldr	r3, [r0, #0]
90015e2c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90015e30:	689b      	ldr	r3, [r3, #8]
90015e32:	4718      	bx	r3
90015e34:	bd10      	pop	{r4, pc}

90015e36 <_ZNK8touchgfx6Button12getSolidRectEv>:
90015e36:	b510      	push	{r4, lr}
90015e38:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
90015e3c:	4604      	mov	r4, r0
90015e3e:	2bff      	cmp	r3, #255	@ 0xff
90015e40:	d006      	beq.n	90015e50 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
90015e42:	2300      	movs	r3, #0
90015e44:	8003      	strh	r3, [r0, #0]
90015e46:	8043      	strh	r3, [r0, #2]
90015e48:	8083      	strh	r3, [r0, #4]
90015e4a:	80c3      	strh	r3, [r0, #6]
90015e4c:	4620      	mov	r0, r4
90015e4e:	bd10      	pop	{r4, pc}
90015e50:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
90015e54:	b11b      	cbz	r3, 90015e5e <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
90015e56:	3130      	adds	r1, #48	@ 0x30
90015e58:	f006 ffa0 	bl	9001cd9c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90015e5c:	e7f6      	b.n	90015e4c <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
90015e5e:	312e      	adds	r1, #46	@ 0x2e
90015e60:	e7fa      	b.n	90015e58 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

90015e64 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
90015e64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90015e68:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
90015e6c:	b08a      	sub	sp, #40	@ 0x28
90015e6e:	4604      	mov	r4, r0
90015e70:	4688      	mov	r8, r1
90015e72:	2b00      	cmp	r3, #0
90015e74:	d066      	beq.n	90015f44 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
90015e76:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
90015e78:	a805      	add	r0, sp, #20
90015e7a:	f8ad 3014 	strh.w	r3, [sp, #20]
90015e7e:	f006 ff25 	bl	9001cccc <_ZNK8touchgfx6Bitmap8getWidthEv>
90015e82:	4607      	mov	r7, r0
90015e84:	a805      	add	r0, sp, #20
90015e86:	f006 ff55 	bl	9001cd34 <_ZNK8touchgfx6Bitmap9getHeightEv>
90015e8a:	f9b8 6000 	ldrsh.w	r6, [r8]
90015e8e:	f8b8 2004 	ldrh.w	r2, [r8, #4]
90015e92:	2300      	movs	r3, #0
90015e94:	4432      	add	r2, r6
90015e96:	9306      	str	r3, [sp, #24]
90015e98:	b292      	uxth	r2, r2
90015e9a:	fa0f fc82 	sxth.w	ip, r2
90015e9e:	459c      	cmp	ip, r3
90015ea0:	dd52      	ble.n	90015f48 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90015ea2:	42b7      	cmp	r7, r6
90015ea4:	dd50      	ble.n	90015f48 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90015ea6:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
90015eaa:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90015eae:	442b      	add	r3, r5
90015eb0:	b29b      	uxth	r3, r3
90015eb2:	b219      	sxth	r1, r3
90015eb4:	2900      	cmp	r1, #0
90015eb6:	dd47      	ble.n	90015f48 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90015eb8:	42a8      	cmp	r0, r5
90015eba:	dd45      	ble.n	90015f48 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90015ebc:	4567      	cmp	r7, ip
90015ebe:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
90015ec2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90015ec6:	bfb8      	it	lt
90015ec8:	b2ba      	uxthlt	r2, r7
90015eca:	4288      	cmp	r0, r1
90015ecc:	f8ad 6018 	strh.w	r6, [sp, #24]
90015ed0:	bfb8      	it	lt
90015ed2:	b283      	uxthlt	r3, r0
90015ed4:	1b92      	subs	r2, r2, r6
90015ed6:	f8ad 501a 	strh.w	r5, [sp, #26]
90015eda:	1b5b      	subs	r3, r3, r5
90015edc:	f8ad 201c 	strh.w	r2, [sp, #28]
90015ee0:	f8ad 301e 	strh.w	r3, [sp, #30]
90015ee4:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90015ee8:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90015eec:	429a      	cmp	r2, r3
90015eee:	d026      	beq.n	90015f3e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90015ef0:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
90015ef4:	2b00      	cmp	r3, #0
90015ef6:	dd22      	ble.n	90015f3e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90015ef8:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90015efc:	2b00      	cmp	r3, #0
90015efe:	dd1e      	ble.n	90015f3e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90015f00:	2300      	movs	r3, #0
90015f02:	a908      	add	r1, sp, #32
90015f04:	4620      	mov	r0, r4
90015f06:	e9cd 3308 	strd	r3, r3, [sp, #32]
90015f0a:	6823      	ldr	r3, [r4, #0]
90015f0c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90015f0e:	4798      	blx	r3
90015f10:	4b0f      	ldr	r3, [pc, #60]	@ (90015f50 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
90015f12:	681b      	ldr	r3, [r3, #0]
90015f14:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90015f18:	b10a      	cbz	r2, 90015f1e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
90015f1a:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90015f1c:	b900      	cbnz	r0, 90015f20 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
90015f1e:	6898      	ldr	r0, [r3, #8]
90015f20:	2501      	movs	r5, #1
90015f22:	6801      	ldr	r1, [r0, #0]
90015f24:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
90015f28:	9502      	str	r5, [sp, #8]
90015f2a:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
90015f2e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
90015f32:	9401      	str	r4, [sp, #4]
90015f34:	ac06      	add	r4, sp, #24
90015f36:	9400      	str	r4, [sp, #0]
90015f38:	688c      	ldr	r4, [r1, #8]
90015f3a:	a905      	add	r1, sp, #20
90015f3c:	47a0      	blx	r4
90015f3e:	b00a      	add	sp, #40	@ 0x28
90015f40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90015f44:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
90015f46:	e797      	b.n	90015e78 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
90015f48:	2300      	movs	r3, #0
90015f4a:	9307      	str	r3, [sp, #28]
90015f4c:	e7ca      	b.n	90015ee4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
90015f4e:	bf00      	nop
90015f50:	24021c0c 	.word	0x24021c0c

90015f54 <_ZNK8touchgfx6Button17invalidateContentEv>:
90015f54:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
90015f58:	b12a      	cbz	r2, 90015f66 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
90015f5a:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90015f5e:	b112      	cbz	r2, 90015f66 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
90015f60:	6803      	ldr	r3, [r0, #0]
90015f62:	695b      	ldr	r3, [r3, #20]
90015f64:	4718      	bx	r3
90015f66:	4770      	bx	lr

90015f68 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
90015f68:	4b30      	ldr	r3, [pc, #192]	@ (9001602c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
90015f6a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90015f6e:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90015f70:	b08d      	sub	sp, #52	@ 0x34
90015f72:	881b      	ldrh	r3, [r3, #0]
90015f74:	4604      	mov	r4, r0
90015f76:	460f      	mov	r7, r1
90015f78:	4293      	cmp	r3, r2
90015f7a:	d954      	bls.n	90016026 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
90015f7c:	4b2c      	ldr	r3, [pc, #176]	@ (90016030 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
90015f7e:	6819      	ldr	r1, [r3, #0]
90015f80:	eb01 0342 	add.w	r3, r1, r2, lsl #1
90015f84:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
90015f88:	4a2a      	ldr	r2, [pc, #168]	@ (90016034 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
90015f8a:	6812      	ldr	r2, [r2, #0]
90015f8c:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
90015f90:	2900      	cmp	r1, #0
90015f92:	d048      	beq.n	90016026 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
90015f94:	785a      	ldrb	r2, [r3, #1]
90015f96:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
90015f9a:	f3c2 0801 	ubfx	r8, r2, #0, #2
90015f9e:	f3c2 0281 	ubfx	r2, r2, #2, #2
90015fa2:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
90015fa6:	4b24      	ldr	r3, [pc, #144]	@ (90016038 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
90015fa8:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
90015fac:	681a      	ldr	r2, [r3, #0]
90015fae:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
90015fb2:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
90015fb6:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
90015fba:	6b26      	ldr	r6, [r4, #48]	@ 0x30
90015fbc:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
90015fc0:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
90015fc4:	9107      	str	r1, [sp, #28]
90015fc6:	f88d 8020 	strb.w	r8, [sp, #32]
90015fca:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
90015fce:	9609      	str	r6, [sp, #36]	@ 0x24
90015fd0:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
90015fd4:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
90015fd8:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
90015fdc:	b10b      	cbz	r3, 90015fe2 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
90015fde:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
90015fe0:	b905      	cbnz	r5, 90015fe4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
90015fe2:	6895      	ldr	r5, [r2, #8]
90015fe4:	ae05      	add	r6, sp, #20
90015fe6:	4621      	mov	r1, r4
90015fe8:	4630      	mov	r0, r6
90015fea:	f004 faf5 	bl	9001a5d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90015fee:	4b13      	ldr	r3, [pc, #76]	@ (9001603c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
90015ff0:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
90015ff2:	6818      	ldr	r0, [r3, #0]
90015ff4:	f7f0 fd34 	bl	90006a60 <_ZNK8touchgfx5Texts7getTextEt>
90015ff8:	6823      	ldr	r3, [r4, #0]
90015ffa:	4680      	mov	r8, r0
90015ffc:	4620      	mov	r0, r4
90015ffe:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90016000:	4798      	blx	r3
90016002:	6823      	ldr	r3, [r4, #0]
90016004:	4681      	mov	r9, r0
90016006:	4620      	mov	r0, r4
90016008:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
9001600c:	4798      	blx	r3
9001600e:	ab07      	add	r3, sp, #28
90016010:	f8cd 8004 	str.w	r8, [sp, #4]
90016014:	9300      	str	r3, [sp, #0]
90016016:	463b      	mov	r3, r7
90016018:	e9cd 9002 	strd	r9, r0, [sp, #8]
9001601c:	4628      	mov	r0, r5
9001601e:	e896 0006 	ldmia.w	r6, {r1, r2}
90016022:	f7f0 fccd 	bl	900069c0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90016026:	b00d      	add	sp, #52	@ 0x34
90016028:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001602c:	24021c68 	.word	0x24021c68
90016030:	24021c64 	.word	0x24021c64
90016034:	24021c6c 	.word	0x24021c6c
90016038:	24021c0c 	.word	0x24021c0c
9001603c:	24021c70 	.word	0x24021c70

90016040 <_ZN8touchgfx13BoxWithBorderD1Ev>:
90016040:	4770      	bx	lr

90016042 <_ZN8touchgfx13BoxWithBorderD0Ev>:
90016042:	b510      	push	{r4, lr}
90016044:	4604      	mov	r4, r0
90016046:	2134      	movs	r1, #52	@ 0x34
90016048:	f016 fe38 	bl	9002ccbc <_ZdlPvj>
9001604c:	4620      	mov	r0, r4
9001604e:	bd10      	pop	{r4, pc}

90016050 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
90016050:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90016054:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
90016056:	4604      	mov	r4, r0
90016058:	460e      	mov	r6, r1
9001605a:	b08e      	sub	sp, #56	@ 0x38
9001605c:	b218      	sxth	r0, r3
9001605e:	8921      	ldrh	r1, [r4, #8]
90016060:	005b      	lsls	r3, r3, #1
90016062:	8962      	ldrh	r2, [r4, #10]
90016064:	f8ad 0000 	strh.w	r0, [sp]
90016068:	b29b      	uxth	r3, r3
9001606a:	f8ad 0002 	strh.w	r0, [sp, #2]
9001606e:	1ac9      	subs	r1, r1, r3
90016070:	1ad3      	subs	r3, r2, r3
90016072:	b209      	sxth	r1, r1
90016074:	b21b      	sxth	r3, r3
90016076:	2900      	cmp	r1, #0
90016078:	f8ad 1004 	strh.w	r1, [sp, #4]
9001607c:	f8ad 3006 	strh.w	r3, [sp, #6]
90016080:	dd5e      	ble.n	90016140 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
90016082:	2b00      	cmp	r3, #0
90016084:	dd5c      	ble.n	90016140 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
90016086:	6830      	ldr	r0, [r6, #0]
90016088:	ab02      	add	r3, sp, #8
9001608a:	6871      	ldr	r1, [r6, #4]
9001608c:	c303      	stmia	r3!, {r0, r1}
9001608e:	4669      	mov	r1, sp
90016090:	a802      	add	r0, sp, #8
90016092:	f7fc fb7b 	bl	9001278c <_ZN8touchgfx4RectaNERKS0_>
90016096:	4620      	mov	r0, r4
90016098:	a902      	add	r1, sp, #8
9001609a:	f7ff fe6d 	bl	90015d78 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
9001609e:	8e20      	ldrh	r0, [r4, #48]	@ 0x30
900160a0:	2800      	cmp	r0, #0
900160a2:	d05f      	beq.n	90016164 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
900160a4:	8963      	ldrh	r3, [r4, #10]
900160a6:	b202      	sxth	r2, r0
900160a8:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
900160ac:	2500      	movs	r5, #0
900160ae:	1a1f      	subs	r7, r3, r0
900160b0:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
900160b4:	f8ad 101c 	strh.w	r1, [sp, #28]
900160b8:	b21b      	sxth	r3, r3
900160ba:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
900160be:	f8ad 1024 	strh.w	r1, [sp, #36]	@ 0x24
900160c2:	af04      	add	r7, sp, #16
900160c4:	1a09      	subs	r1, r1, r0
900160c6:	9506      	str	r5, [sp, #24]
900160c8:	f8ad 201e 	strh.w	r2, [sp, #30]
900160cc:	f8ad 5020 	strh.w	r5, [sp, #32]
900160d0:	f8ad 2026 	strh.w	r2, [sp, #38]	@ 0x26
900160d4:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
900160d8:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
900160dc:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
900160e0:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
900160e4:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
900160e8:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
900160ec:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
900160f0:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
900160f4:	ab06      	add	r3, sp, #24
900160f6:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
900160fa:	e893 0003 	ldmia.w	r3, {r0, r1}
900160fe:	e887 0003 	stmia.w	r7, {r0, r1}
90016102:	4631      	mov	r1, r6
90016104:	4638      	mov	r0, r7
90016106:	f7fc fb41 	bl	9001278c <_ZN8touchgfx4RectaNERKS0_>
9001610a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
9001610e:	2b00      	cmp	r3, #0
90016110:	dd12      	ble.n	90016138 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
90016112:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90016116:	2b00      	cmp	r3, #0
90016118:	dd0e      	ble.n	90016138 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
9001611a:	6823      	ldr	r3, [r4, #0]
9001611c:	4639      	mov	r1, r7
9001611e:	4620      	mov	r0, r4
90016120:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90016122:	4798      	blx	r3
90016124:	f7fc fe24 	bl	90012d70 <_ZN8touchgfx3HAL3lcdEv>
90016128:	6803      	ldr	r3, [r0, #0]
9001612a:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9001612c:	4639      	mov	r1, r7
9001612e:	f8d3 8020 	ldr.w	r8, [r3, #32]
90016132:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
90016136:	47c0      	blx	r8
90016138:	3501      	adds	r5, #1
9001613a:	2d04      	cmp	r5, #4
9001613c:	d1da      	bne.n	900160f4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
9001613e:	e011      	b.n	90016164 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
90016140:	6830      	ldr	r0, [r6, #0]
90016142:	ab06      	add	r3, sp, #24
90016144:	6871      	ldr	r1, [r6, #4]
90016146:	c303      	stmia	r3!, {r0, r1}
90016148:	6823      	ldr	r3, [r4, #0]
9001614a:	a906      	add	r1, sp, #24
9001614c:	4620      	mov	r0, r4
9001614e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90016150:	4798      	blx	r3
90016152:	f7fc fe0d 	bl	90012d70 <_ZN8touchgfx3HAL3lcdEv>
90016156:	6803      	ldr	r3, [r0, #0]
90016158:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9001615a:	a906      	add	r1, sp, #24
9001615c:	6a1d      	ldr	r5, [r3, #32]
9001615e:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
90016162:	47a8      	blx	r5
90016164:	b00e      	add	sp, #56	@ 0x38
90016166:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9001616a <_ZN8touchgfx5ImageD1Ev>:
9001616a:	4770      	bx	lr

9001616c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
9001616c:	b570      	push	{r4, r5, r6, lr}
9001616e:	880b      	ldrh	r3, [r1, #0]
90016170:	460d      	mov	r5, r1
90016172:	4604      	mov	r4, r0
90016174:	84c3      	strh	r3, [r0, #38]	@ 0x26
90016176:	4608      	mov	r0, r1
90016178:	f006 fda8 	bl	9001cccc <_ZNK8touchgfx6Bitmap8getWidthEv>
9001617c:	4606      	mov	r6, r0
9001617e:	4628      	mov	r0, r5
90016180:	f006 fdd8 	bl	9001cd34 <_ZNK8touchgfx6Bitmap9getHeightEv>
90016184:	6823      	ldr	r3, [r4, #0]
90016186:	4605      	mov	r5, r0
90016188:	4631      	mov	r1, r6
9001618a:	4620      	mov	r0, r4
9001618c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001618e:	4798      	blx	r3
90016190:	6823      	ldr	r3, [r4, #0]
90016192:	4629      	mov	r1, r5
90016194:	4620      	mov	r0, r4
90016196:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90016198:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001619c:	4718      	bx	r3

9001619e <_ZN8touchgfx5ImageD0Ev>:
9001619e:	b510      	push	{r4, lr}
900161a0:	4604      	mov	r4, r0
900161a2:	212c      	movs	r1, #44	@ 0x2c
900161a4:	f016 fd8a 	bl	9002ccbc <_ZdlPvj>
900161a8:	4620      	mov	r0, r4
900161aa:	bd10      	pop	{r4, pc}

900161ac <_ZNK8touchgfx5Image12getSolidRectEv>:
900161ac:	b510      	push	{r4, lr}
900161ae:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
900161b2:	4604      	mov	r4, r0
900161b4:	2bff      	cmp	r3, #255	@ 0xff
900161b6:	d006      	beq.n	900161c6 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
900161b8:	2300      	movs	r3, #0
900161ba:	8003      	strh	r3, [r0, #0]
900161bc:	8043      	strh	r3, [r0, #2]
900161be:	8083      	strh	r3, [r0, #4]
900161c0:	80c3      	strh	r3, [r0, #6]
900161c2:	4620      	mov	r0, r4
900161c4:	bd10      	pop	{r4, pc}
900161c6:	3126      	adds	r1, #38	@ 0x26
900161c8:	f006 fde8 	bl	9001cd9c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
900161cc:	e7f9      	b.n	900161c2 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>
	...

900161d0 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
900161d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900161d4:	4604      	mov	r4, r0
900161d6:	b088      	sub	sp, #32
900161d8:	2500      	movs	r5, #0
900161da:	460f      	mov	r7, r1
900161dc:	f854 3b26 	ldr.w	r3, [r4], #38
900161e0:	a904      	add	r1, sp, #16
900161e2:	4606      	mov	r6, r0
900161e4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900161e6:	e9cd 5504 	strd	r5, r5, [sp, #16]
900161ea:	4798      	blx	r3
900161ec:	4620      	mov	r0, r4
900161ee:	f006 fd6d 	bl	9001cccc <_ZNK8touchgfx6Bitmap8getWidthEv>
900161f2:	4680      	mov	r8, r0
900161f4:	4620      	mov	r0, r4
900161f6:	f006 fd9d 	bl	9001cd34 <_ZNK8touchgfx6Bitmap9getHeightEv>
900161fa:	9506      	str	r5, [sp, #24]
900161fc:	ad06      	add	r5, sp, #24
900161fe:	f8ad 001e 	strh.w	r0, [sp, #30]
90016202:	4639      	mov	r1, r7
90016204:	f8ad 801c 	strh.w	r8, [sp, #28]
90016208:	4628      	mov	r0, r5
9001620a:	f7fc fabf 	bl	9001278c <_ZN8touchgfx4RectaNERKS0_>
9001620e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
90016212:	2b00      	cmp	r3, #0
90016214:	dd19      	ble.n	9001624a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
90016216:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
9001621a:	2b00      	cmp	r3, #0
9001621c:	dd15      	ble.n	9001624a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
9001621e:	4b0c      	ldr	r3, [pc, #48]	@ (90016250 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
90016220:	681b      	ldr	r3, [r3, #0]
90016222:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90016226:	b10a      	cbz	r2, 9001622c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
90016228:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
9001622a:	b900      	cbnz	r0, 9001622e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
9001622c:	6898      	ldr	r0, [r3, #8]
9001622e:	2701      	movs	r7, #1
90016230:	6801      	ldr	r1, [r0, #0]
90016232:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90016236:	9702      	str	r7, [sp, #8]
90016238:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
9001623c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90016240:	e9cd 5600 	strd	r5, r6, [sp]
90016244:	688d      	ldr	r5, [r1, #8]
90016246:	4621      	mov	r1, r4
90016248:	47a8      	blx	r5
9001624a:	b008      	add	sp, #32
9001624c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90016250:	24021c0c 	.word	0x24021c0c

90016254 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
90016254:	4770      	bx	lr

90016256 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
90016256:	b510      	push	{r4, lr}
90016258:	4604      	mov	r4, r0
9001625a:	2148      	movs	r1, #72	@ 0x48
9001625c:	f016 fd2e 	bl	9002ccbc <_ZdlPvj>
90016260:	4620      	mov	r0, r4
90016262:	bd10      	pop	{r4, pc}

90016264 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
90016264:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90016268:	b08d      	sub	sp, #52	@ 0x34
9001626a:	4604      	mov	r4, r0
9001626c:	460f      	mov	r7, r1
9001626e:	f7ff fdf9 	bl	90015e64 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
90016272:	4a55      	ldr	r2, [pc, #340]	@ (900163c8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
90016274:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90016276:	8812      	ldrh	r2, [r2, #0]
90016278:	429a      	cmp	r2, r3
9001627a:	f240 8082 	bls.w	90016382 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
9001627e:	4d53      	ldr	r5, [pc, #332]	@ (900163cc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
90016280:	682a      	ldr	r2, [r5, #0]
90016282:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
90016286:	4b52      	ldr	r3, [pc, #328]	@ (900163d0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
90016288:	681b      	ldr	r3, [r3, #0]
9001628a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
9001628e:	2200      	movs	r2, #0
90016290:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	@ 0x46
90016294:	e9cd 2203 	strd	r2, r2, [sp, #12]
90016298:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
9001629c:	2a03      	cmp	r2, #3
9001629e:	d811      	bhi.n	900162c4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
900162a0:	e8df f002 	tbb	[pc, r2]
900162a4:	89727902 	.word	0x89727902
900162a8:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
900162ac:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
900162b0:	1ad2      	subs	r2, r2, r3
900162b2:	2002      	movs	r0, #2
900162b4:	f8ad 1010 	strh.w	r1, [sp, #16]
900162b8:	f8ad 3012 	strh.w	r3, [sp, #18]
900162bc:	fb92 f2f0 	sdiv	r2, r2, r0
900162c0:	f8ad 200e 	strh.w	r2, [sp, #14]
900162c4:	f10d 080c 	add.w	r8, sp, #12
900162c8:	f10d 0914 	add.w	r9, sp, #20
900162cc:	e898 0003 	ldmia.w	r8, {r0, r1}
900162d0:	e889 0003 	stmia.w	r9, {r0, r1}
900162d4:	4639      	mov	r1, r7
900162d6:	4648      	mov	r0, r9
900162d8:	f7fc fa58 	bl	9001278c <_ZN8touchgfx4RectaNERKS0_>
900162dc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
900162e0:	2b00      	cmp	r3, #0
900162e2:	dd4e      	ble.n	90016382 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
900162e4:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
900162e8:	2b00      	cmp	r3, #0
900162ea:	dd4a      	ble.n	90016382 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
900162ec:	f8bd 3014 	ldrh.w	r3, [sp, #20]
900162f0:	4641      	mov	r1, r8
900162f2:	f8bd 200c 	ldrh.w	r2, [sp, #12]
900162f6:	4620      	mov	r0, r4
900162f8:	1a9b      	subs	r3, r3, r2
900162fa:	f8bd 200e 	ldrh.w	r2, [sp, #14]
900162fe:	f8ad 3014 	strh.w	r3, [sp, #20]
90016302:	f8bd 3016 	ldrh.w	r3, [sp, #22]
90016306:	1a9b      	subs	r3, r3, r2
90016308:	f8ad 3016 	strh.w	r3, [sp, #22]
9001630c:	6823      	ldr	r3, [r4, #0]
9001630e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90016310:	4798      	blx	r3
90016312:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
90016316:	2b00      	cmp	r3, #0
90016318:	d053      	beq.n	900163c2 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
9001631a:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9001631c:	8f21      	ldrh	r1, [r4, #56]	@ 0x38
9001631e:	682b      	ldr	r3, [r5, #0]
90016320:	f894 0032 	ldrb.w	r0, [r4, #50]	@ 0x32
90016324:	eb03 0341 	add.w	r3, r3, r1, lsl #1
90016328:	f894 4044 	ldrb.w	r4, [r4, #68]	@ 0x44
9001632c:	785b      	ldrb	r3, [r3, #1]
9001632e:	9209      	str	r2, [sp, #36]	@ 0x24
90016330:	f3c3 0501 	ubfx	r5, r3, #0, #2
90016334:	f3c3 0381 	ubfx	r3, r3, #2, #2
90016338:	9607      	str	r6, [sp, #28]
9001633a:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
9001633e:	2300      	movs	r3, #0
90016340:	f88d 5020 	strb.w	r5, [sp, #32]
90016344:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
90016348:	f88d 302b 	strb.w	r3, [sp, #43]	@ 0x2b
9001634c:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
90016350:	4b20      	ldr	r3, [pc, #128]	@ (900163d4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
90016352:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90016356:	681b      	ldr	r3, [r3, #0]
90016358:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
9001635c:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90016360:	b10a      	cbz	r2, 90016366 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
90016362:	6cdc      	ldr	r4, [r3, #76]	@ 0x4c
90016364:	b904      	cbnz	r4, 90016368 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
90016366:	689c      	ldr	r4, [r3, #8]
90016368:	4b1b      	ldr	r3, [pc, #108]	@ (900163d8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
9001636a:	6818      	ldr	r0, [r3, #0]
9001636c:	f7f0 fb78 	bl	90006a60 <_ZNK8touchgfx5Texts7getTextEt>
90016370:	ab07      	add	r3, sp, #28
90016372:	9001      	str	r0, [sp, #4]
90016374:	4620      	mov	r0, r4
90016376:	9300      	str	r3, [sp, #0]
90016378:	464b      	mov	r3, r9
9001637a:	e898 0006 	ldmia.w	r8, {r1, r2}
9001637e:	f7f0 fb1f 	bl	900069c0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90016382:	b00d      	add	sp, #52	@ 0x34
90016384:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90016388:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
9001638c:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90016390:	1ad2      	subs	r2, r2, r3
90016392:	3201      	adds	r2, #1
90016394:	e78d      	b.n	900162b2 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
90016396:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
9001639a:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
9001639e:	1ad2      	subs	r2, r2, r3
900163a0:	3201      	adds	r2, #1
900163a2:	2002      	movs	r0, #2
900163a4:	f8ad 3010 	strh.w	r3, [sp, #16]
900163a8:	f8ad 1012 	strh.w	r1, [sp, #18]
900163ac:	fb92 f2f0 	sdiv	r2, r2, r0
900163b0:	f8ad 200c 	strh.w	r2, [sp, #12]
900163b4:	e786      	b.n	900162c4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
900163b6:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
900163ba:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
900163be:	1ad2      	subs	r2, r2, r3
900163c0:	e7ef      	b.n	900163a2 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
900163c2:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
900163c4:	e7aa      	b.n	9001631c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
900163c6:	bf00      	nop
900163c8:	24021c68 	.word	0x24021c68
900163cc:	24021c64 	.word	0x24021c64
900163d0:	24021c6c 	.word	0x24021c6c
900163d4:	24021c0c 	.word	0x24021c0c
900163d8:	24021c70 	.word	0x24021c70

900163dc <_ZN8touchgfx15ButtonWithLabelC1Ev>:
900163dc:	2101      	movs	r1, #1
900163de:	2200      	movs	r2, #0
900163e0:	b510      	push	{r4, lr}
900163e2:	4c13      	ldr	r4, [pc, #76]	@ (90016430 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
900163e4:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
900163e8:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
900163ec:	f64f 71ff 	movw	r1, #65535	@ 0xffff
900163f0:	6004      	str	r4, [r0, #0]
900163f2:	4c10      	ldr	r4, [pc, #64]	@ (90016434 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
900163f4:	8082      	strh	r2, [r0, #4]
900163f6:	80c2      	strh	r2, [r0, #6]
900163f8:	8102      	strh	r2, [r0, #8]
900163fa:	8142      	strh	r2, [r0, #10]
900163fc:	8182      	strh	r2, [r0, #12]
900163fe:	81c2      	strh	r2, [r0, #14]
90016400:	8202      	strh	r2, [r0, #16]
90016402:	8242      	strh	r2, [r0, #18]
90016404:	61c2      	str	r2, [r0, #28]
90016406:	8402      	strh	r2, [r0, #32]
90016408:	8442      	strh	r2, [r0, #34]	@ 0x22
9001640a:	6282      	str	r2, [r0, #40]	@ 0x28
9001640c:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
90016410:	85c1      	strh	r1, [r0, #46]	@ 0x2e
90016412:	8601      	strh	r1, [r0, #48]	@ 0x30
90016414:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
90016418:	6344      	str	r4, [r0, #52]	@ 0x34
9001641a:	8701      	strh	r1, [r0, #56]	@ 0x38
9001641c:	f880 2044 	strb.w	r2, [r0, #68]	@ 0x44
90016420:	f8a0 2046 	strh.w	r2, [r0, #70]	@ 0x46
90016424:	e9c0 2205 	strd	r2, r2, [r0, #20]
90016428:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
9001642c:	bd10      	pop	{r4, pc}
9001642e:	bf00      	nop
90016430:	90031d28 	.word	0x90031d28
90016434:	900307dc 	.word	0x900307dc

90016438 <_ZNK8touchgfx6QRCode13drawBitRGB565EPhbi>:
90016438:	eb01 0343 	add.w	r3, r1, r3, lsl #1
9001643c:	b12a      	cbz	r2, 9001644a <_ZNK8touchgfx6QRCode13drawBitRGB565EPhbi+0x12>
9001643e:	8fc2      	ldrh	r2, [r0, #62]	@ 0x3e
90016440:	4299      	cmp	r1, r3
90016442:	d205      	bcs.n	90016450 <_ZNK8touchgfx6QRCode13drawBitRGB565EPhbi+0x18>
90016444:	f821 2b02 	strh.w	r2, [r1], #2
90016448:	e7fa      	b.n	90016440 <_ZNK8touchgfx6QRCode13drawBitRGB565EPhbi+0x8>
9001644a:	f8b0 2040 	ldrh.w	r2, [r0, #64]	@ 0x40
9001644e:	e7f7      	b.n	90016440 <_ZNK8touchgfx6QRCode13drawBitRGB565EPhbi+0x8>
90016450:	4608      	mov	r0, r1
90016452:	4770      	bx	lr

90016454 <_ZNK8touchgfx6QRCode18drawBitRGB565BlendEPhbi>:
90016454:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90016458:	eb01 0343 	add.w	r3, r1, r3, lsl #1
9001645c:	2a00      	cmp	r2, #0
9001645e:	d03e      	beq.n	900164de <_ZNK8touchgfx6QRCode18drawBitRGB565BlendEPhbi+0x8a>
90016460:	f8b0 c042 	ldrh.w	ip, [r0, #66]	@ 0x42
90016464:	f8b0 7046 	ldrh.w	r7, [r0, #70]	@ 0x46
90016468:	f8b0 604a 	ldrh.w	r6, [r0, #74]	@ 0x4a
9001646c:	4299      	cmp	r1, r3
9001646e:	d23d      	bcs.n	900164ec <_ZNK8touchgfx6QRCode18drawBitRGB565BlendEPhbi+0x98>
90016470:	f8b1 8000 	ldrh.w	r8, [r1]
90016474:	f890 5055 	ldrb.w	r5, [r0, #85]	@ 0x55
90016478:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001647c:	ea4f 02e8 	mov.w	r2, r8, asr #3
90016480:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
90016484:	ea4f 08c8 	mov.w	r8, r8, lsl #3
90016488:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
9001648c:	ea4e 1e5e 	orr.w	lr, lr, lr, lsr #5
90016490:	fa5f f888 	uxtb.w	r8, r8
90016494:	fb0e ce05 	mla	lr, lr, r5, ip
90016498:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
9001649c:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
900164a0:	fa1f f48e 	uxth.w	r4, lr
900164a4:	fb02 7205 	mla	r2, r2, r5, r7
900164a8:	fb08 6505 	mla	r5, r8, r5, r6
900164ac:	f104 0e01 	add.w	lr, r4, #1
900164b0:	b292      	uxth	r2, r2
900164b2:	b2ad      	uxth	r5, r5
900164b4:	eb0e 2414 	add.w	r4, lr, r4, lsr #8
900164b8:	f404 4e78 	and.w	lr, r4, #63488	@ 0xf800
900164bc:	1c6c      	adds	r4, r5, #1
900164be:	eb04 2415 	add.w	r4, r4, r5, lsr #8
900164c2:	1c55      	adds	r5, r2, #1
900164c4:	eb05 2212 	add.w	r2, r5, r2, lsr #8
900164c8:	f3c4 24c4 	ubfx	r4, r4, #11, #5
900164cc:	0952      	lsrs	r2, r2, #5
900164ce:	ea44 040e 	orr.w	r4, r4, lr
900164d2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900164d6:	4322      	orrs	r2, r4
900164d8:	f821 2b02 	strh.w	r2, [r1], #2
900164dc:	e7c6      	b.n	9001646c <_ZNK8touchgfx6QRCode18drawBitRGB565BlendEPhbi+0x18>
900164de:	f8b0 c044 	ldrh.w	ip, [r0, #68]	@ 0x44
900164e2:	f8b0 7048 	ldrh.w	r7, [r0, #72]	@ 0x48
900164e6:	f8b0 604c 	ldrh.w	r6, [r0, #76]	@ 0x4c
900164ea:	e7bf      	b.n	9001646c <_ZNK8touchgfx6QRCode18drawBitRGB565BlendEPhbi+0x18>
900164ec:	4608      	mov	r0, r1
900164ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900164f2 <_ZNK8touchgfx6QRCode13drawBitRGB888EPhbi>:
900164f2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
900164f6:	b510      	push	{r4, lr}
900164f8:	440b      	add	r3, r1
900164fa:	b172      	cbz	r2, 9001651a <_ZNK8touchgfx6QRCode13drawBitRGB888EPhbi+0x28>
900164fc:	f890 204e 	ldrb.w	r2, [r0, #78]	@ 0x4e
90016500:	f890 404f 	ldrb.w	r4, [r0, #79]	@ 0x4f
90016504:	f890 0050 	ldrb.w	r0, [r0, #80]	@ 0x50
90016508:	4299      	cmp	r1, r3
9001650a:	d20d      	bcs.n	90016528 <_ZNK8touchgfx6QRCode13drawBitRGB888EPhbi+0x36>
9001650c:	7008      	strb	r0, [r1, #0]
9001650e:	3103      	adds	r1, #3
90016510:	f801 4c02 	strb.w	r4, [r1, #-2]
90016514:	f801 2c01 	strb.w	r2, [r1, #-1]
90016518:	e7f6      	b.n	90016508 <_ZNK8touchgfx6QRCode13drawBitRGB888EPhbi+0x16>
9001651a:	f890 2051 	ldrb.w	r2, [r0, #81]	@ 0x51
9001651e:	f890 4052 	ldrb.w	r4, [r0, #82]	@ 0x52
90016522:	f890 0053 	ldrb.w	r0, [r0, #83]	@ 0x53
90016526:	e7ef      	b.n	90016508 <_ZNK8touchgfx6QRCode13drawBitRGB888EPhbi+0x16>
90016528:	4608      	mov	r0, r1
9001652a:	bd10      	pop	{r4, pc}

9001652c <_ZNK8touchgfx6QRCode18drawBitRGB888BlendEPhbi>:
9001652c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
90016530:	b5f0      	push	{r4, r5, r6, r7, lr}
90016532:	440b      	add	r3, r1
90016534:	4604      	mov	r4, r0
90016536:	b39a      	cbz	r2, 900165a0 <_ZNK8touchgfx6QRCode18drawBitRGB888BlendEPhbi+0x74>
90016538:	f8b0 5042 	ldrh.w	r5, [r0, #66]	@ 0x42
9001653c:	f8b0 6046 	ldrh.w	r6, [r0, #70]	@ 0x46
90016540:	f8b0 704a 	ldrh.w	r7, [r0, #74]	@ 0x4a
90016544:	4608      	mov	r0, r1
90016546:	4283      	cmp	r3, r0
90016548:	f100 0203 	add.w	r2, r0, #3
9001654c:	d92f      	bls.n	900165ae <_ZNK8touchgfx6QRCode18drawBitRGB888BlendEPhbi+0x82>
9001654e:	f894 1055 	ldrb.w	r1, [r4, #85]	@ 0x55
90016552:	f812 0c03 	ldrb.w	r0, [r2, #-3]
90016556:	fb00 7101 	mla	r1, r0, r1, r7
9001655a:	b289      	uxth	r1, r1
9001655c:	1c48      	adds	r0, r1, #1
9001655e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
90016562:	f812 0c02 	ldrb.w	r0, [r2, #-2]
90016566:	1209      	asrs	r1, r1, #8
90016568:	f802 1c03 	strb.w	r1, [r2, #-3]
9001656c:	f894 1055 	ldrb.w	r1, [r4, #85]	@ 0x55
90016570:	fb00 6101 	mla	r1, r0, r1, r6
90016574:	b289      	uxth	r1, r1
90016576:	1c48      	adds	r0, r1, #1
90016578:	eb00 2111 	add.w	r1, r0, r1, lsr #8
9001657c:	f812 0c01 	ldrb.w	r0, [r2, #-1]
90016580:	1209      	asrs	r1, r1, #8
90016582:	f802 1c02 	strb.w	r1, [r2, #-2]
90016586:	f894 1055 	ldrb.w	r1, [r4, #85]	@ 0x55
9001658a:	fb00 5101 	mla	r1, r0, r1, r5
9001658e:	b289      	uxth	r1, r1
90016590:	1c48      	adds	r0, r1, #1
90016592:	eb00 2111 	add.w	r1, r0, r1, lsr #8
90016596:	4610      	mov	r0, r2
90016598:	1209      	asrs	r1, r1, #8
9001659a:	f802 1c01 	strb.w	r1, [r2, #-1]
9001659e:	e7d2      	b.n	90016546 <_ZNK8touchgfx6QRCode18drawBitRGB888BlendEPhbi+0x1a>
900165a0:	f8b0 5044 	ldrh.w	r5, [r0, #68]	@ 0x44
900165a4:	f8b0 6048 	ldrh.w	r6, [r0, #72]	@ 0x48
900165a8:	f8b0 704c 	ldrh.w	r7, [r0, #76]	@ 0x4c
900165ac:	e7ca      	b.n	90016544 <_ZNK8touchgfx6QRCode18drawBitRGB888BlendEPhbi+0x18>
900165ae:	bdf0      	pop	{r4, r5, r6, r7, pc}

900165b0 <_ZNK8touchgfx6QRCode15drawBitARGB8888EPhbi>:
900165b0:	b530      	push	{r4, r5, lr}
900165b2:	eb01 0383 	add.w	r3, r1, r3, lsl #2
900165b6:	b18a      	cbz	r2, 900165dc <_ZNK8touchgfx6QRCode15drawBitARGB8888EPhbi+0x2c>
900165b8:	f890 204e 	ldrb.w	r2, [r0, #78]	@ 0x4e
900165bc:	f890 404f 	ldrb.w	r4, [r0, #79]	@ 0x4f
900165c0:	f890 0050 	ldrb.w	r0, [r0, #80]	@ 0x50
900165c4:	25ff      	movs	r5, #255	@ 0xff
900165c6:	4299      	cmp	r1, r3
900165c8:	d20f      	bcs.n	900165ea <_ZNK8touchgfx6QRCode15drawBitARGB8888EPhbi+0x3a>
900165ca:	7008      	strb	r0, [r1, #0]
900165cc:	3104      	adds	r1, #4
900165ce:	f801 4c03 	strb.w	r4, [r1, #-3]
900165d2:	f801 2c02 	strb.w	r2, [r1, #-2]
900165d6:	f801 5c01 	strb.w	r5, [r1, #-1]
900165da:	e7f4      	b.n	900165c6 <_ZNK8touchgfx6QRCode15drawBitARGB8888EPhbi+0x16>
900165dc:	f890 2051 	ldrb.w	r2, [r0, #81]	@ 0x51
900165e0:	f890 4052 	ldrb.w	r4, [r0, #82]	@ 0x52
900165e4:	f890 0053 	ldrb.w	r0, [r0, #83]	@ 0x53
900165e8:	e7ec      	b.n	900165c4 <_ZNK8touchgfx6QRCode15drawBitARGB8888EPhbi+0x14>
900165ea:	4608      	mov	r0, r1
900165ec:	bd30      	pop	{r4, r5, pc}

900165ee <_ZNK8touchgfx6QRCode20drawBitARGB8888BlendEPhbi>:
900165ee:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900165f2:	eb01 0383 	add.w	r3, r1, r3, lsl #2
900165f6:	b1f2      	cbz	r2, 90016636 <_ZNK8touchgfx6QRCode20drawBitARGB8888BlendEPhbi+0x48>
900165f8:	f8b0 c042 	ldrh.w	ip, [r0, #66]	@ 0x42
900165fc:	f8b0 6046 	ldrh.w	r6, [r0, #70]	@ 0x46
90016600:	f8b0 704a 	ldrh.w	r7, [r0, #74]	@ 0x4a
90016604:	4299      	cmp	r1, r3
90016606:	d257      	bcs.n	900166b8 <_ZNK8touchgfx6QRCode20drawBitARGB8888BlendEPhbi+0xca>
90016608:	f851 4b04 	ldr.w	r4, [r1], #4
9001660c:	ea5f 6814 	movs.w	r8, r4, lsr #24
90016610:	d123      	bne.n	9001665a <_ZNK8touchgfx6QRCode20drawBitARGB8888BlendEPhbi+0x6c>
90016612:	b1ba      	cbz	r2, 90016644 <_ZNK8touchgfx6QRCode20drawBitARGB8888BlendEPhbi+0x56>
90016614:	f890 4050 	ldrb.w	r4, [r0, #80]	@ 0x50
90016618:	f801 4c04 	strb.w	r4, [r1, #-4]
9001661c:	f890 404f 	ldrb.w	r4, [r0, #79]	@ 0x4f
90016620:	f801 4c03 	strb.w	r4, [r1, #-3]
90016624:	f890 404e 	ldrb.w	r4, [r0, #78]	@ 0x4e
90016628:	f801 4c02 	strb.w	r4, [r1, #-2]
9001662c:	f890 4054 	ldrb.w	r4, [r0, #84]	@ 0x54
90016630:	f801 4c01 	strb.w	r4, [r1, #-1]
90016634:	e7e6      	b.n	90016604 <_ZNK8touchgfx6QRCode20drawBitARGB8888BlendEPhbi+0x16>
90016636:	f8b0 c044 	ldrh.w	ip, [r0, #68]	@ 0x44
9001663a:	f8b0 6048 	ldrh.w	r6, [r0, #72]	@ 0x48
9001663e:	f8b0 704c 	ldrh.w	r7, [r0, #76]	@ 0x4c
90016642:	e7df      	b.n	90016604 <_ZNK8touchgfx6QRCode20drawBitARGB8888BlendEPhbi+0x16>
90016644:	f890 4053 	ldrb.w	r4, [r0, #83]	@ 0x53
90016648:	f801 4c04 	strb.w	r4, [r1, #-4]
9001664c:	f890 4052 	ldrb.w	r4, [r0, #82]	@ 0x52
90016650:	f801 4c03 	strb.w	r4, [r1, #-3]
90016654:	f890 4051 	ldrb.w	r4, [r0, #81]	@ 0x51
90016658:	e7e6      	b.n	90016628 <_ZNK8touchgfx6QRCode20drawBitARGB8888BlendEPhbi+0x3a>
9001665a:	f890 e054 	ldrb.w	lr, [r0, #84]	@ 0x54
9001665e:	fb0e f908 	mul.w	r9, lr, r8
90016662:	44c6      	add	lr, r8
90016664:	f109 0501 	add.w	r5, r9, #1
90016668:	eb05 2529 	add.w	r5, r5, r9, asr #8
9001666c:	122d      	asrs	r5, r5, #8
9001666e:	eba8 0805 	sub.w	r8, r8, r5
90016672:	ebae 0e05 	sub.w	lr, lr, r5
90016676:	f3c4 4507 	ubfx	r5, r4, #16, #8
9001667a:	fa5f fe8e 	uxtb.w	lr, lr
9001667e:	fb08 c505 	mla	r5, r8, r5, ip
90016682:	fbb5 f5fe 	udiv	r5, r5, lr
90016686:	042d      	lsls	r5, r5, #16
90016688:	f405 097f 	and.w	r9, r5, #16711680	@ 0xff0000
9001668c:	b2e5      	uxtb	r5, r4
9001668e:	f3c4 2407 	ubfx	r4, r4, #8, #8
90016692:	fb08 7505 	mla	r5, r8, r5, r7
90016696:	fb08 6404 	mla	r4, r8, r4, r6
9001669a:	fbb5 f5fe 	udiv	r5, r5, lr
9001669e:	fbb4 f4fe 	udiv	r4, r4, lr
900166a2:	b2ed      	uxtb	r5, r5
900166a4:	0224      	lsls	r4, r4, #8
900166a6:	ea45 650e 	orr.w	r5, r5, lr, lsl #24
900166aa:	b2a4      	uxth	r4, r4
900166ac:	ea49 0505 	orr.w	r5, r9, r5
900166b0:	432c      	orrs	r4, r5
900166b2:	f841 4c04 	str.w	r4, [r1, #-4]
900166b6:	e7a5      	b.n	90016604 <_ZNK8touchgfx6QRCode20drawBitARGB8888BlendEPhbi+0x16>
900166b8:	4608      	mov	r0, r1
900166ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

900166be <_ZN8touchgfx6QRCodeD1Ev>:
900166be:	4770      	bx	lr

900166c0 <_ZN8touchgfx6QRCodeD0Ev>:
900166c0:	b510      	push	{r4, lr}
900166c2:	4604      	mov	r4, r0
900166c4:	2158      	movs	r1, #88	@ 0x58
900166c6:	f016 faf9 	bl	9002ccbc <_ZdlPvj>
900166ca:	4620      	mov	r0, r4
900166cc:	bd10      	pop	{r4, pc}

900166ce <_ZNK8touchgfx6QRCode12getSolidRectEv>:
900166ce:	f891 3054 	ldrb.w	r3, [r1, #84]	@ 0x54
900166d2:	2bff      	cmp	r3, #255	@ 0xff
900166d4:	b510      	push	{r4, lr}
900166d6:	d10d      	bne.n	900166f4 <_ZNK8touchgfx6QRCode12getSolidRectEv+0x26>
900166d8:	6a8b      	ldr	r3, [r1, #40]	@ 0x28
900166da:	b15b      	cbz	r3, 900166f4 <_ZNK8touchgfx6QRCode12getSolidRectEv+0x26>
900166dc:	781b      	ldrb	r3, [r3, #0]
900166de:	b14b      	cbz	r3, 900166f4 <_ZNK8touchgfx6QRCode12getSolidRectEv+0x26>
900166e0:	2300      	movs	r3, #0
900166e2:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
900166e6:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
900166ea:	8003      	strh	r3, [r0, #0]
900166ec:	8043      	strh	r3, [r0, #2]
900166ee:	8084      	strh	r4, [r0, #4]
900166f0:	80c2      	strh	r2, [r0, #6]
900166f2:	bd10      	pop	{r4, pc}
900166f4:	2300      	movs	r3, #0
900166f6:	8003      	strh	r3, [r0, #0]
900166f8:	8043      	strh	r3, [r0, #2]
900166fa:	8083      	strh	r3, [r0, #4]
900166fc:	80c3      	strh	r3, [r0, #6]
900166fe:	e7f8      	b.n	900166f2 <_ZNK8touchgfx6QRCode12getSolidRectEv+0x24>

90016700 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE>:
90016700:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016704:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90016706:	b087      	sub	sp, #28
90016708:	4604      	mov	r4, r0
9001670a:	460e      	mov	r6, r1
9001670c:	781b      	ldrb	r3, [r3, #0]
9001670e:	3b15      	subs	r3, #21
90016710:	2b9c      	cmp	r3, #156	@ 0x9c
90016712:	f200 80d5 	bhi.w	900168c0 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x1c0>
90016716:	f890 3054 	ldrb.w	r3, [r0, #84]	@ 0x54
9001671a:	2b00      	cmp	r3, #0
9001671c:	f000 80d0 	beq.w	900168c0 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x1c0>
90016720:	6808      	ldr	r0, [r1, #0]
90016722:	ab02      	add	r3, sp, #8
90016724:	6849      	ldr	r1, [r1, #4]
90016726:	f10d 0808 	add.w	r8, sp, #8
9001672a:	c303      	stmia	r3!, {r0, r1}
9001672c:	6823      	ldr	r3, [r4, #0]
9001672e:	4641      	mov	r1, r8
90016730:	4620      	mov	r0, r4
90016732:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90016734:	4798      	blx	r3
90016736:	f7fc fb1b 	bl	90012d70 <_ZN8touchgfx3HAL3lcdEv>
9001673a:	6803      	ldr	r3, [r0, #0]
9001673c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001673e:	4798      	blx	r3
90016740:	2818      	cmp	r0, #24
90016742:	d067      	beq.n	90016814 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x114>
90016744:	2820      	cmp	r0, #32
90016746:	d06a      	beq.n	9001681e <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x11e>
90016748:	2810      	cmp	r0, #16
9001674a:	f040 80b9 	bne.w	900168c0 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x1c0>
9001674e:	f894 2054 	ldrb.w	r2, [r4, #84]	@ 0x54
90016752:	4d5d      	ldr	r5, [pc, #372]	@ (900168c8 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x1c8>)
90016754:	4b5d      	ldr	r3, [pc, #372]	@ (900168cc <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x1cc>)
90016756:	2aff      	cmp	r2, #255	@ 0xff
90016758:	bf08      	it	eq
9001675a:	461d      	moveq	r5, r3
9001675c:	10c7      	asrs	r7, r0, #3
9001675e:	f7fc fb07 	bl	90012d70 <_ZN8touchgfx3HAL3lcdEv>
90016762:	6803      	ldr	r3, [r0, #0]
90016764:	f8df a180 	ldr.w	sl, [pc, #384]	@ 900168e8 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x1e8>
90016768:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001676a:	4798      	blx	r3
9001676c:	4b58      	ldr	r3, [pc, #352]	@ (900168d0 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x1d0>)
9001676e:	9000      	str	r0, [sp, #0]
90016770:	6818      	ldr	r0, [r3, #0]
90016772:	6803      	ldr	r3, [r0, #0]
90016774:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90016776:	4798      	blx	r3
90016778:	4b56      	ldr	r3, [pc, #344]	@ (900168d4 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x1d4>)
9001677a:	4681      	mov	r9, r0
9001677c:	781b      	ldrb	r3, [r3, #0]
9001677e:	2b01      	cmp	r3, #1
90016780:	d157      	bne.n	90016832 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x132>
90016782:	ab04      	add	r3, sp, #16
90016784:	e898 0003 	ldmia.w	r8, {r0, r1}
90016788:	e883 0003 	stmia.w	r3, {r0, r1}
9001678c:	4618      	mov	r0, r3
9001678e:	f002 faf1 	bl	90018d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90016792:	f8ba 3000 	ldrh.w	r3, [sl]
90016796:	f9bd 8012 	ldrsh.w	r8, [sp, #18]
9001679a:	f04f 0a00 	mov.w	sl, #0
9001679e:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
900167a2:	fb03 0808 	mla	r8, r3, r8, r0
900167a6:	fb07 9808 	mla	r8, r7, r8, r9
900167aa:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
900167ae:	4553      	cmp	r3, sl
900167b0:	f340 8081 	ble.w	900168b6 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x1b6>
900167b4:	8832      	ldrh	r2, [r6, #0]
900167b6:	4641      	mov	r1, r8
900167b8:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
900167bc:	4413      	add	r3, r2
900167be:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
900167c0:	f9b6 b006 	ldrsh.w	fp, [r6, #6]
900167c4:	b21b      	sxth	r3, r3
900167c6:	44cb      	add	fp, r9
900167c8:	3b01      	subs	r3, #1
900167ca:	eba3 030a 	sub.w	r3, r3, sl
900167ce:	fb93 f3f2 	sdiv	r3, r3, r2
900167d2:	9301      	str	r3, [sp, #4]
900167d4:	45d9      	cmp	r9, fp
900167d6:	da27      	bge.n	90016828 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x128>
900167d8:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
900167da:	9801      	ldr	r0, [sp, #4]
900167dc:	fb99 f3f7 	sdiv	r3, r9, r7
900167e0:	fb07 9213 	mls	r2, r7, r3, r9
900167e4:	1abf      	subs	r7, r7, r2
900167e6:	ebab 0209 	sub.w	r2, fp, r9
900167ea:	4297      	cmp	r7, r2
900167ec:	bfa8      	it	ge
900167ee:	4617      	movge	r7, r2
900167f0:	6b62      	ldr	r2, [r4, #52]	@ 0x34
900167f2:	fb02 0303 	mla	r3, r2, r3, r0
900167f6:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
900167f8:	4620      	mov	r0, r4
900167fa:	44b9      	add	r9, r7
900167fc:	eb02 02e3 	add.w	r2, r2, r3, asr #3
90016800:	f003 0307 	and.w	r3, r3, #7
90016804:	7852      	ldrb	r2, [r2, #1]
90016806:	411a      	asrs	r2, r3
90016808:	463b      	mov	r3, r7
9001680a:	f002 0201 	and.w	r2, r2, #1
9001680e:	47a8      	blx	r5
90016810:	4601      	mov	r1, r0
90016812:	e7df      	b.n	900167d4 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0xd4>
90016814:	f894 2054 	ldrb.w	r2, [r4, #84]	@ 0x54
90016818:	4d2f      	ldr	r5, [pc, #188]	@ (900168d8 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x1d8>)
9001681a:	4b30      	ldr	r3, [pc, #192]	@ (900168dc <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x1dc>)
9001681c:	e79b      	b.n	90016756 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x56>
9001681e:	f894 2054 	ldrb.w	r2, [r4, #84]	@ 0x54
90016822:	4d2f      	ldr	r5, [pc, #188]	@ (900168e0 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x1e0>)
90016824:	4b2f      	ldr	r3, [pc, #188]	@ (900168e4 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x1e4>)
90016826:	e796      	b.n	90016756 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x56>
90016828:	9b00      	ldr	r3, [sp, #0]
9001682a:	f10a 0a01 	add.w	sl, sl, #1
9001682e:	4498      	add	r8, r3
90016830:	e7bb      	b.n	900167aa <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0xaa>
90016832:	f8ba 3000 	ldrh.w	r3, [sl]
90016836:	f04f 0a00 	mov.w	sl, #0
9001683a:	f9bd 800a 	ldrsh.w	r8, [sp, #10]
9001683e:	f9bd 0008 	ldrsh.w	r0, [sp, #8]
90016842:	fb03 0808 	mla	r8, r3, r8, r0
90016846:	fb07 9808 	mla	r8, r7, r8, r9
9001684a:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
9001684e:	4553      	cmp	r3, sl
90016850:	dd31      	ble.n	900168b6 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x1b6>
90016852:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
90016856:	4641      	mov	r1, r8
90016858:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9001685a:	4453      	add	r3, sl
9001685c:	f9b6 9000 	ldrsh.w	r9, [r6]
90016860:	f9b6 b004 	ldrsh.w	fp, [r6, #4]
90016864:	fb93 f3f2 	sdiv	r3, r3, r2
90016868:	44cb      	add	fp, r9
9001686a:	9301      	str	r3, [sp, #4]
9001686c:	45d9      	cmp	r9, fp
9001686e:	da1d      	bge.n	900168ac <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x1ac>
90016870:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
90016872:	9801      	ldr	r0, [sp, #4]
90016874:	fb99 f2f7 	sdiv	r2, r9, r7
90016878:	fb07 9312 	mls	r3, r7, r2, r9
9001687c:	1aff      	subs	r7, r7, r3
9001687e:	ebab 0309 	sub.w	r3, fp, r9
90016882:	429f      	cmp	r7, r3
90016884:	bfa8      	it	ge
90016886:	461f      	movge	r7, r3
90016888:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9001688a:	fb03 2300 	mla	r3, r3, r0, r2
9001688e:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
90016890:	4620      	mov	r0, r4
90016892:	44b9      	add	r9, r7
90016894:	eb02 02e3 	add.w	r2, r2, r3, asr #3
90016898:	f003 0307 	and.w	r3, r3, #7
9001689c:	7852      	ldrb	r2, [r2, #1]
9001689e:	411a      	asrs	r2, r3
900168a0:	463b      	mov	r3, r7
900168a2:	f002 0201 	and.w	r2, r2, #1
900168a6:	47a8      	blx	r5
900168a8:	4601      	mov	r1, r0
900168aa:	e7df      	b.n	9001686c <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x16c>
900168ac:	9b00      	ldr	r3, [sp, #0]
900168ae:	f10a 0a01 	add.w	sl, sl, #1
900168b2:	4498      	add	r8, r3
900168b4:	e7c9      	b.n	9001684a <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x14a>
900168b6:	4b06      	ldr	r3, [pc, #24]	@ (900168d0 <_ZNK8touchgfx6QRCode4drawERKNS_4RectE+0x1d0>)
900168b8:	6818      	ldr	r0, [r3, #0]
900168ba:	6803      	ldr	r3, [r0, #0]
900168bc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900168be:	4798      	blx	r3
900168c0:	b007      	add	sp, #28
900168c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900168c6:	bf00      	nop
900168c8:	90016455 	.word	0x90016455
900168cc:	90016439 	.word	0x90016439
900168d0:	24021c0c 	.word	0x24021c0c
900168d4:	24021c04 	.word	0x24021c04
900168d8:	9001652d 	.word	0x9001652d
900168dc:	900164f3 	.word	0x900164f3
900168e0:	900165ef 	.word	0x900165ef
900168e4:	900165b1 	.word	0x900165b1
900168e8:	24021c06 	.word	0x24021c06

900168ec <_ZN8touchgfx6QRCodeC1Ev>:
900168ec:	2200      	movs	r2, #0
900168ee:	2101      	movs	r1, #1
900168f0:	b510      	push	{r4, lr}
900168f2:	4c1c      	ldr	r4, [pc, #112]	@ (90016964 <_ZN8touchgfx6QRCodeC1Ev+0x78>)
900168f4:	8082      	strh	r2, [r0, #4]
900168f6:	80c2      	strh	r2, [r0, #6]
900168f8:	8102      	strh	r2, [r0, #8]
900168fa:	8142      	strh	r2, [r0, #10]
900168fc:	8182      	strh	r2, [r0, #12]
900168fe:	81c2      	strh	r2, [r0, #14]
90016900:	8202      	strh	r2, [r0, #16]
90016902:	8242      	strh	r2, [r0, #18]
90016904:	61c2      	str	r2, [r0, #28]
90016906:	8402      	strh	r2, [r0, #32]
90016908:	8442      	strh	r2, [r0, #34]	@ 0x22
9001690a:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
9001690e:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
90016912:	6004      	str	r4, [r0, #0]
90016914:	f64f 6401 	movw	r4, #65025	@ 0xfe01
90016918:	f880 1030 	strb.w	r1, [r0, #48]	@ 0x30
9001691c:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
90016920:	87c2      	strh	r2, [r0, #62]	@ 0x3e
90016922:	f8a0 2042 	strh.w	r2, [r0, #66]	@ 0x42
90016926:	f8a0 2046 	strh.w	r2, [r0, #70]	@ 0x46
9001692a:	f8a0 204a 	strh.w	r2, [r0, #74]	@ 0x4a
9001692e:	f8a0 204e 	strh.w	r2, [r0, #78]	@ 0x4e
90016932:	f8a0 4044 	strh.w	r4, [r0, #68]	@ 0x44
90016936:	f8a0 4048 	strh.w	r4, [r0, #72]	@ 0x48
9001693a:	f8a0 404c 	strh.w	r4, [r0, #76]	@ 0x4c
9001693e:	e9c0 210d 	strd	r2, r1, [r0, #52]	@ 0x34
90016942:	e9c0 2205 	strd	r2, r2, [r0, #20]
90016946:	f64f 71ff 	movw	r1, #65535	@ 0xffff
9001694a:	e9c0 220a 	strd	r2, r2, [r0, #40]	@ 0x28
9001694e:	f44f 427f 	mov.w	r2, #65280	@ 0xff00
90016952:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
90016956:	f8a0 2050 	strh.w	r2, [r0, #80]	@ 0x50
9001695a:	f8a0 1052 	strh.w	r1, [r0, #82]	@ 0x52
9001695e:	f880 1054 	strb.w	r1, [r0, #84]	@ 0x54
90016962:	bd10      	pop	{r4, pc}
90016964:	90031d9c 	.word	0x90031d9c

90016968 <_ZN8touchgfx6QRCode21convertStringToQRCodeEPKc>:
90016968:	b51f      	push	{r0, r1, r2, r3, r4, lr}
9001696a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
9001696c:	460c      	mov	r4, r1
9001696e:	b1b3      	cbz	r3, 9001699e <_ZN8touchgfx6QRCode21convertStringToQRCodeEPKc+0x36>
90016970:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90016972:	b1a3      	cbz	r3, 9001699e <_ZN8touchgfx6QRCode21convertStringToQRCodeEPKc+0x36>
90016974:	2200      	movs	r2, #0
90016976:	f04f 31ff 	mov.w	r1, #4294967295
9001697a:	f04f 0c01 	mov.w	ip, #1
9001697e:	701a      	strb	r2, [r3, #0]
90016980:	f890 2030 	ldrb.w	r2, [r0, #48]	@ 0x30
90016984:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
90016988:	e9cd 1c02 	strd	r1, ip, [sp, #8]
9001698c:	e9cd 2200 	strd	r2, r2, [sp]
90016990:	e9d0 210a 	ldrd	r2, r1, [r0, #40]	@ 0x28
90016994:	4620      	mov	r0, r4
90016996:	f015 fbb9 	bl	9002c10c <qrcodegen_encodeText>
9001699a:	b004      	add	sp, #16
9001699c:	bd10      	pop	{r4, pc}
9001699e:	4618      	mov	r0, r3
900169a0:	e7fb      	b.n	9001699a <_ZN8touchgfx6QRCode21convertStringToQRCodeEPKc+0x32>

900169a2 <_ZN8touchgfx6QRCode20updateWidthAndHeightEv>:
900169a2:	b510      	push	{r4, lr}
900169a4:	e9d0 130d 	ldrd	r1, r3, [r0, #52]	@ 0x34
900169a8:	4604      	mov	r4, r0
900169aa:	fb11 f103 	smulbb	r1, r1, r3
900169ae:	6803      	ldr	r3, [r0, #0]
900169b0:	b209      	sxth	r1, r1
900169b2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900169b4:	4798      	blx	r3
900169b6:	4620      	mov	r0, r4
900169b8:	e9d4 130d 	ldrd	r1, r3, [r4, #52]	@ 0x34
900169bc:	fb11 f103 	smulbb	r1, r1, r3
900169c0:	6823      	ldr	r3, [r4, #0]
900169c2:	b209      	sxth	r1, r1
900169c4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900169c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900169ca:	4718      	bx	r3

900169cc <_ZN8touchgfx7OutlineD1Ev>:
900169cc:	4770      	bx	lr

900169ce <_ZN8touchgfx7OutlineD0Ev>:
900169ce:	b510      	push	{r4, lr}
900169d0:	4604      	mov	r4, r0
900169d2:	2130      	movs	r1, #48	@ 0x30
900169d4:	f016 f972 	bl	9002ccbc <_ZdlPvj>
900169d8:	4620      	mov	r0, r4
900169da:	bd10      	pop	{r4, pc}

900169dc <_ZN8touchgfx7Outline5resetEv>:
900169dc:	b510      	push	{r4, lr}
900169de:	4604      	mov	r4, r0
900169e0:	f000 fe72 	bl	900176c8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
900169e4:	60e0      	str	r0, [r4, #12]
900169e6:	f000 fe75 	bl	900176d4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
900169ea:	68e3      	ldr	r3, [r4, #12]
900169ec:	08c0      	lsrs	r0, r0, #3
900169ee:	2200      	movs	r2, #0
900169f0:	f647 71ff 	movw	r1, #32767	@ 0x7fff
900169f4:	6123      	str	r3, [r4, #16]
900169f6:	3801      	subs	r0, #1
900169f8:	60a2      	str	r2, [r4, #8]
900169fa:	6060      	str	r0, [r4, #4]
900169fc:	8019      	strh	r1, [r3, #0]
900169fe:	8059      	strh	r1, [r3, #2]
90016a00:	809a      	strh	r2, [r3, #4]
90016a02:	80da      	strh	r2, [r3, #6]
90016a04:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90016a06:	f023 0301 	bic.w	r3, r3, #1
90016a0a:	f043 0302 	orr.w	r3, r3, #2
90016a0e:	6263      	str	r3, [r4, #36]	@ 0x24
90016a10:	bd10      	pop	{r4, pc}
	...

90016a14 <_ZN8touchgfx7OutlineC1Ev>:
90016a14:	4b0a      	ldr	r3, [pc, #40]	@ (90016a40 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
90016a16:	b510      	push	{r4, lr}
90016a18:	6003      	str	r3, [r0, #0]
90016a1a:	2300      	movs	r3, #0
90016a1c:	4604      	mov	r4, r0
90016a1e:	6243      	str	r3, [r0, #36]	@ 0x24
90016a20:	e9c0 3301 	strd	r3, r3, [r0, #4]
90016a24:	e9c0 3303 	strd	r3, r3, [r0, #12]
90016a28:	e9c0 3305 	strd	r3, r3, [r0, #20]
90016a2c:	e9c0 3307 	strd	r3, r3, [r0, #28]
90016a30:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
90016a34:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
90016a38:	f7ff ffd0 	bl	900169dc <_ZN8touchgfx7Outline5resetEv>
90016a3c:	4620      	mov	r0, r4
90016a3e:	bd10      	pop	{r4, pc}
90016a40:	90031e04 	.word	0x90031e04

90016a44 <_ZN8touchgfx7Outline10renderLineEiiii>:
90016a44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016a48:	b093      	sub	sp, #76	@ 0x4c
90016a4a:	1156      	asrs	r6, r2, #5
90016a4c:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
90016a4e:	9305      	str	r3, [sp, #20]
90016a50:	1153      	asrs	r3, r2, #5
90016a52:	f004 051f 	and.w	r5, r4, #31
90016a56:	9303      	str	r3, [sp, #12]
90016a58:	1163      	asrs	r3, r4, #5
90016a5a:	9504      	str	r5, [sp, #16]
90016a5c:	1165      	asrs	r5, r4, #5
90016a5e:	9306      	str	r3, [sp, #24]
90016a60:	f002 031f 	and.w	r3, r2, #31
90016a64:	42ae      	cmp	r6, r5
90016a66:	f040 80f4 	bne.w	90016c52 <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
90016a6a:	9c04      	ldr	r4, [sp, #16]
90016a6c:	9a05      	ldr	r2, [sp, #20]
90016a6e:	42a3      	cmp	r3, r4
90016a70:	ea4f 1e62 	mov.w	lr, r2, asr #5
90016a74:	6902      	ldr	r2, [r0, #16]
90016a76:	d125      	bne.n	90016ac4 <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
90016a78:	f9b2 3000 	ldrsh.w	r3, [r2]
90016a7c:	459e      	cmp	lr, r3
90016a7e:	d103      	bne.n	90016a88 <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
90016a80:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90016a84:	429e      	cmp	r6, r3
90016a86:	d035      	beq.n	90016af4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90016a88:	88d1      	ldrh	r1, [r2, #6]
90016a8a:	8893      	ldrh	r3, [r2, #4]
90016a8c:	430b      	orrs	r3, r1
90016a8e:	d010      	beq.n	90016ab2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90016a90:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90016a94:	2b00      	cmp	r3, #0
90016a96:	db0c      	blt.n	90016ab2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90016a98:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
90016a9a:	428b      	cmp	r3, r1
90016a9c:	da09      	bge.n	90016ab2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90016a9e:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90016aa2:	428b      	cmp	r3, r1
90016aa4:	f103 0301 	add.w	r3, r3, #1
90016aa8:	bf38      	it	cc
90016aaa:	3208      	addcc	r2, #8
90016aac:	6083      	str	r3, [r0, #8]
90016aae:	bf38      	it	cc
90016ab0:	6102      	strcc	r2, [r0, #16]
90016ab2:	6903      	ldr	r3, [r0, #16]
90016ab4:	9a03      	ldr	r2, [sp, #12]
90016ab6:	f8a3 e000 	strh.w	lr, [r3]
90016aba:	805a      	strh	r2, [r3, #2]
90016abc:	2200      	movs	r2, #0
90016abe:	809a      	strh	r2, [r3, #4]
90016ac0:	80da      	strh	r2, [r3, #6]
90016ac2:	e017      	b.n	90016af4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90016ac4:	9c05      	ldr	r4, [sp, #20]
90016ac6:	114e      	asrs	r6, r1, #5
90016ac8:	f001 0c1f 	and.w	ip, r1, #31
90016acc:	f8b2 8004 	ldrh.w	r8, [r2, #4]
90016ad0:	f004 041f 	and.w	r4, r4, #31
90016ad4:	4576      	cmp	r6, lr
90016ad6:	f8b2 a006 	ldrh.w	sl, [r2, #6]
90016ada:	9402      	str	r4, [sp, #8]
90016adc:	9c04      	ldr	r4, [sp, #16]
90016ade:	eba4 0403 	sub.w	r4, r4, r3
90016ae2:	d10a      	bne.n	90016afa <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
90016ae4:	9b02      	ldr	r3, [sp, #8]
90016ae6:	44a0      	add	r8, r4
90016ae8:	449c      	add	ip, r3
90016aea:	f8a2 8004 	strh.w	r8, [r2, #4]
90016aee:	fb04 a40c 	mla	r4, r4, ip, sl
90016af2:	80d4      	strh	r4, [r2, #6]
90016af4:	b013      	add	sp, #76	@ 0x4c
90016af6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016afa:	9d05      	ldr	r5, [sp, #20]
90016afc:	1a69      	subs	r1, r5, r1
90016afe:	bf51      	iteee	pl
90016b00:	f1cc 0520 	rsbpl	r5, ip, #32
90016b04:	fb04 f40c 	mulmi.w	r4, r4, ip
90016b08:	4249      	negmi	r1, r1
90016b0a:	2500      	movmi	r5, #0
90016b0c:	bf5d      	ittte	pl
90016b0e:	436c      	mulpl	r4, r5
90016b10:	2520      	movpl	r5, #32
90016b12:	f04f 0901 	movpl.w	r9, #1
90016b16:	f04f 39ff 	movmi.w	r9, #4294967295
90016b1a:	9501      	str	r5, [sp, #4]
90016b1c:	9f01      	ldr	r7, [sp, #4]
90016b1e:	444e      	add	r6, r9
90016b20:	fb94 f5f1 	sdiv	r5, r4, r1
90016b24:	fb01 4415 	mls	r4, r1, r5, r4
90016b28:	44bc      	add	ip, r7
90016b2a:	2c00      	cmp	r4, #0
90016b2c:	bfbc      	itt	lt
90016b2e:	f105 35ff 	addlt.w	r5, r5, #4294967295
90016b32:	1864      	addlt	r4, r4, r1
90016b34:	44a8      	add	r8, r5
90016b36:	fb05 ac0c 	mla	ip, r5, ip, sl
90016b3a:	f8a2 8004 	strh.w	r8, [r2, #4]
90016b3e:	f8a2 c006 	strh.w	ip, [r2, #6]
90016b42:	f8d0 c010 	ldr.w	ip, [r0, #16]
90016b46:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90016b4a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
90016b4e:	ea58 0202 	orrs.w	r2, r8, r2
90016b52:	d011      	beq.n	90016b78 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90016b54:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90016b58:	f1b8 0f00 	cmp.w	r8, #0
90016b5c:	db0c      	blt.n	90016b78 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90016b5e:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
90016b60:	4590      	cmp	r8, r2
90016b62:	da09      	bge.n	90016b78 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90016b64:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
90016b68:	4590      	cmp	r8, r2
90016b6a:	bf3c      	itt	cc
90016b6c:	f10c 0208 	addcc.w	r2, ip, #8
90016b70:	6102      	strcc	r2, [r0, #16]
90016b72:	f108 0201 	add.w	r2, r8, #1
90016b76:	6082      	str	r2, [r0, #8]
90016b78:	f8d0 c010 	ldr.w	ip, [r0, #16]
90016b7c:	2700      	movs	r7, #0
90016b7e:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90016b82:	45b6      	cmp	lr, r6
90016b84:	f8ac 6000 	strh.w	r6, [ip]
90016b88:	442b      	add	r3, r5
90016b8a:	f8ac 2002 	strh.w	r2, [ip, #2]
90016b8e:	f8ac 7004 	strh.w	r7, [ip, #4]
90016b92:	f8ac 7006 	strh.w	r7, [ip, #6]
90016b96:	d04b      	beq.n	90016c30 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
90016b98:	9f04      	ldr	r7, [sp, #16]
90016b9a:	1a64      	subs	r4, r4, r1
90016b9c:	f04f 0a00 	mov.w	sl, #0
90016ba0:	1aff      	subs	r7, r7, r3
90016ba2:	443d      	add	r5, r7
90016ba4:	016d      	lsls	r5, r5, #5
90016ba6:	fb95 f8f1 	sdiv	r8, r5, r1
90016baa:	fb01 5518 	mls	r5, r1, r8, r5
90016bae:	2d00      	cmp	r5, #0
90016bb0:	bfbc      	itt	lt
90016bb2:	f108 38ff 	addlt.w	r8, r8, #4294967295
90016bb6:	186d      	addlt	r5, r5, r1
90016bb8:	f108 0701 	add.w	r7, r8, #1
90016bbc:	9703      	str	r7, [sp, #12]
90016bbe:	f8d0 c010 	ldr.w	ip, [r0, #16]
90016bc2:	1964      	adds	r4, r4, r5
90016bc4:	444e      	add	r6, r9
90016bc6:	bf54      	ite	pl
90016bc8:	9f03      	ldrpl	r7, [sp, #12]
90016bca:	4647      	movmi	r7, r8
90016bcc:	f8bc b004 	ldrh.w	fp, [ip, #4]
90016bd0:	bf58      	it	pl
90016bd2:	1a64      	subpl	r4, r4, r1
90016bd4:	443b      	add	r3, r7
90016bd6:	44bb      	add	fp, r7
90016bd8:	f8ac b004 	strh.w	fp, [ip, #4]
90016bdc:	f8bc b006 	ldrh.w	fp, [ip, #6]
90016be0:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90016be4:	f8ac b006 	strh.w	fp, [ip, #6]
90016be8:	f8d0 c010 	ldr.w	ip, [r0, #16]
90016bec:	f8bc b006 	ldrh.w	fp, [ip, #6]
90016bf0:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90016bf4:	ea5b 0707 	orrs.w	r7, fp, r7
90016bf8:	d011      	beq.n	90016c1e <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90016bfa:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90016bfe:	f1bb 0f00 	cmp.w	fp, #0
90016c02:	db0c      	blt.n	90016c1e <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90016c04:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90016c06:	45bb      	cmp	fp, r7
90016c08:	da09      	bge.n	90016c1e <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90016c0a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90016c0e:	45bb      	cmp	fp, r7
90016c10:	bf3c      	itt	cc
90016c12:	f10c 0708 	addcc.w	r7, ip, #8
90016c16:	6107      	strcc	r7, [r0, #16]
90016c18:	f10b 0701 	add.w	r7, fp, #1
90016c1c:	6087      	str	r7, [r0, #8]
90016c1e:	6907      	ldr	r7, [r0, #16]
90016c20:	45b6      	cmp	lr, r6
90016c22:	803e      	strh	r6, [r7, #0]
90016c24:	807a      	strh	r2, [r7, #2]
90016c26:	f8a7 a004 	strh.w	sl, [r7, #4]
90016c2a:	f8a7 a006 	strh.w	sl, [r7, #6]
90016c2e:	d1c6      	bne.n	90016bbe <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
90016c30:	9a04      	ldr	r2, [sp, #16]
90016c32:	1ad3      	subs	r3, r2, r3
90016c34:	6902      	ldr	r2, [r0, #16]
90016c36:	8891      	ldrh	r1, [r2, #4]
90016c38:	88d6      	ldrh	r6, [r2, #6]
90016c3a:	4419      	add	r1, r3
90016c3c:	8091      	strh	r1, [r2, #4]
90016c3e:	9902      	ldr	r1, [sp, #8]
90016c40:	f101 0c20 	add.w	ip, r1, #32
90016c44:	9901      	ldr	r1, [sp, #4]
90016c46:	ebac 0c01 	sub.w	ip, ip, r1
90016c4a:	fb03 630c 	mla	r3, r3, ip, r6
90016c4e:	80d3      	strh	r3, [r2, #6]
90016c50:	e750      	b.n	90016af4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90016c52:	9d05      	ldr	r5, [sp, #20]
90016c54:	1aa2      	subs	r2, r4, r2
90016c56:	eba5 0501 	sub.w	r5, r5, r1
90016c5a:	9202      	str	r2, [sp, #8]
90016c5c:	9508      	str	r5, [sp, #32]
90016c5e:	f140 8128 	bpl.w	90016eb2 <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
90016c62:	9a03      	ldr	r2, [sp, #12]
90016c64:	2a00      	cmp	r2, #0
90016c66:	f6ff af45 	blt.w	90016af4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90016c6a:	9a02      	ldr	r2, [sp, #8]
90016c6c:	f04f 34ff 	mov.w	r4, #4294967295
90016c70:	4252      	negs	r2, r2
90016c72:	940b      	str	r4, [sp, #44]	@ 0x2c
90016c74:	2400      	movs	r4, #0
90016c76:	9202      	str	r2, [sp, #8]
90016c78:	9a06      	ldr	r2, [sp, #24]
90016c7a:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
90016c7e:	9206      	str	r2, [sp, #24]
90016c80:	462a      	mov	r2, r5
90016c82:	435a      	muls	r2, r3
90016c84:	9401      	str	r4, [sp, #4]
90016c86:	9c02      	ldr	r4, [sp, #8]
90016c88:	9d02      	ldr	r5, [sp, #8]
90016c8a:	fb92 f4f4 	sdiv	r4, r2, r4
90016c8e:	fb05 2214 	mls	r2, r5, r4, r2
90016c92:	2a00      	cmp	r2, #0
90016c94:	9207      	str	r2, [sp, #28]
90016c96:	bfbc      	itt	lt
90016c98:	1952      	addlt	r2, r2, r5
90016c9a:	f104 34ff 	addlt.w	r4, r4, #4294967295
90016c9e:	6905      	ldr	r5, [r0, #16]
90016ca0:	bfb8      	it	lt
90016ca2:	9207      	strlt	r2, [sp, #28]
90016ca4:	eb04 0901 	add.w	r9, r4, r1
90016ca8:	9a01      	ldr	r2, [sp, #4]
90016caa:	ea4f 1669 	mov.w	r6, r9, asr #5
90016cae:	429a      	cmp	r2, r3
90016cb0:	f040 8111 	bne.w	90016ed6 <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
90016cb4:	f9b5 3000 	ldrsh.w	r3, [r5]
90016cb8:	429e      	cmp	r6, r3
90016cba:	d104      	bne.n	90016cc6 <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
90016cbc:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90016cc0:	9a03      	ldr	r2, [sp, #12]
90016cc2:	429a      	cmp	r2, r3
90016cc4:	d01b      	beq.n	90016cfe <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90016cc6:	88ea      	ldrh	r2, [r5, #6]
90016cc8:	88ab      	ldrh	r3, [r5, #4]
90016cca:	4313      	orrs	r3, r2
90016ccc:	d010      	beq.n	90016cf0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90016cce:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90016cd2:	2a00      	cmp	r2, #0
90016cd4:	db0c      	blt.n	90016cf0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90016cd6:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90016cd8:	429a      	cmp	r2, r3
90016cda:	da09      	bge.n	90016cf0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90016cdc:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
90016ce0:	429a      	cmp	r2, r3
90016ce2:	f102 0201 	add.w	r2, r2, #1
90016ce6:	bf38      	it	cc
90016ce8:	3508      	addcc	r5, #8
90016cea:	6082      	str	r2, [r0, #8]
90016cec:	bf38      	it	cc
90016cee:	6105      	strcc	r5, [r0, #16]
90016cf0:	6903      	ldr	r3, [r0, #16]
90016cf2:	9a03      	ldr	r2, [sp, #12]
90016cf4:	801e      	strh	r6, [r3, #0]
90016cf6:	805a      	strh	r2, [r3, #2]
90016cf8:	2200      	movs	r2, #0
90016cfa:	809a      	strh	r2, [r3, #4]
90016cfc:	80da      	strh	r2, [r3, #6]
90016cfe:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90016d00:	9a03      	ldr	r2, [sp, #12]
90016d02:	6901      	ldr	r1, [r0, #16]
90016d04:	441a      	add	r2, r3
90016d06:	f9b1 3000 	ldrsh.w	r3, [r1]
90016d0a:	42b3      	cmp	r3, r6
90016d0c:	d103      	bne.n	90016d16 <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
90016d0e:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90016d12:	429a      	cmp	r2, r3
90016d14:	d01a      	beq.n	90016d4c <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
90016d16:	88cc      	ldrh	r4, [r1, #6]
90016d18:	888b      	ldrh	r3, [r1, #4]
90016d1a:	4323      	orrs	r3, r4
90016d1c:	d010      	beq.n	90016d40 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90016d1e:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90016d22:	2c00      	cmp	r4, #0
90016d24:	db0c      	blt.n	90016d40 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90016d26:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90016d28:	429c      	cmp	r4, r3
90016d2a:	da09      	bge.n	90016d40 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90016d2c:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90016d30:	429c      	cmp	r4, r3
90016d32:	f104 0401 	add.w	r4, r4, #1
90016d36:	bf38      	it	cc
90016d38:	3108      	addcc	r1, #8
90016d3a:	6084      	str	r4, [r0, #8]
90016d3c:	bf38      	it	cc
90016d3e:	6101      	strcc	r1, [r0, #16]
90016d40:	6903      	ldr	r3, [r0, #16]
90016d42:	2100      	movs	r1, #0
90016d44:	801e      	strh	r6, [r3, #0]
90016d46:	805a      	strh	r2, [r3, #2]
90016d48:	8099      	strh	r1, [r3, #4]
90016d4a:	80d9      	strh	r1, [r3, #6]
90016d4c:	9b06      	ldr	r3, [sp, #24]
90016d4e:	4293      	cmp	r3, r2
90016d50:	f000 8082 	beq.w	90016e58 <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
90016d54:	9b08      	ldr	r3, [sp, #32]
90016d56:	9902      	ldr	r1, [sp, #8]
90016d58:	015b      	lsls	r3, r3, #5
90016d5a:	9c02      	ldr	r4, [sp, #8]
90016d5c:	fb93 f1f1 	sdiv	r1, r3, r1
90016d60:	fb04 3311 	mls	r3, r4, r1, r3
90016d64:	9103      	str	r1, [sp, #12]
90016d66:	2b00      	cmp	r3, #0
90016d68:	9308      	str	r3, [sp, #32]
90016d6a:	da04      	bge.n	90016d76 <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
90016d6c:	1e4b      	subs	r3, r1, #1
90016d6e:	9303      	str	r3, [sp, #12]
90016d70:	9b08      	ldr	r3, [sp, #32]
90016d72:	4423      	add	r3, r4
90016d74:	9308      	str	r3, [sp, #32]
90016d76:	9b07      	ldr	r3, [sp, #28]
90016d78:	464f      	mov	r7, r9
90016d7a:	9902      	ldr	r1, [sp, #8]
90016d7c:	2600      	movs	r6, #0
90016d7e:	1a5b      	subs	r3, r3, r1
90016d80:	9307      	str	r3, [sp, #28]
90016d82:	9b01      	ldr	r3, [sp, #4]
90016d84:	f1c3 0320 	rsb	r3, r3, #32
90016d88:	930e      	str	r3, [sp, #56]	@ 0x38
90016d8a:	990e      	ldr	r1, [sp, #56]	@ 0x38
90016d8c:	9b01      	ldr	r3, [sp, #4]
90016d8e:	1a5b      	subs	r3, r3, r1
90016d90:	930a      	str	r3, [sp, #40]	@ 0x28
90016d92:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
90016d96:	185b      	adds	r3, r3, r1
90016d98:	bf58      	it	pl
90016d9a:	9902      	ldrpl	r1, [sp, #8]
90016d9c:	9307      	str	r3, [sp, #28]
90016d9e:	bf57      	itett	pl
90016da0:	1a5b      	subpl	r3, r3, r1
90016da2:	9903      	ldrmi	r1, [sp, #12]
90016da4:	9307      	strpl	r3, [sp, #28]
90016da6:	9b03      	ldrpl	r3, [sp, #12]
90016da8:	bf58      	it	pl
90016daa:	1c59      	addpl	r1, r3, #1
90016dac:	2a00      	cmp	r2, #0
90016dae:	4489      	add	r9, r1
90016db0:	ea4f 1a69 	mov.w	sl, r9, asr #5
90016db4:	db2e      	blt.n	90016e14 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90016db6:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90016db8:	4293      	cmp	r3, r2
90016dba:	dd2b      	ble.n	90016e14 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90016dbc:	9c01      	ldr	r4, [sp, #4]
90016dbe:	6905      	ldr	r5, [r0, #16]
90016dc0:	46a0      	mov	r8, r4
90016dc2:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90016dc4:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
90016dc8:	45a0      	cmp	r8, r4
90016dca:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
90016dce:	f040 814c 	bne.w	9001706a <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
90016dd2:	f9b5 1000 	ldrsh.w	r1, [r5]
90016dd6:	4551      	cmp	r1, sl
90016dd8:	d103      	bne.n	90016de2 <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
90016dda:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90016dde:	4291      	cmp	r1, r2
90016de0:	d018      	beq.n	90016e14 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90016de2:	ea5c 010e 	orrs.w	r1, ip, lr
90016de6:	d00f      	beq.n	90016e08 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90016de8:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90016dec:	2900      	cmp	r1, #0
90016dee:	db0b      	blt.n	90016e08 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90016df0:	428b      	cmp	r3, r1
90016df2:	dd09      	ble.n	90016e08 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90016df4:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
90016df8:	4299      	cmp	r1, r3
90016dfa:	f101 0101 	add.w	r1, r1, #1
90016dfe:	bf38      	it	cc
90016e00:	3508      	addcc	r5, #8
90016e02:	6081      	str	r1, [r0, #8]
90016e04:	bf38      	it	cc
90016e06:	6105      	strcc	r5, [r0, #16]
90016e08:	6903      	ldr	r3, [r0, #16]
90016e0a:	f8a3 a000 	strh.w	sl, [r3]
90016e0e:	805a      	strh	r2, [r3, #2]
90016e10:	809e      	strh	r6, [r3, #4]
90016e12:	80de      	strh	r6, [r3, #6]
90016e14:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90016e16:	6901      	ldr	r1, [r0, #16]
90016e18:	441a      	add	r2, r3
90016e1a:	88cc      	ldrh	r4, [r1, #6]
90016e1c:	888b      	ldrh	r3, [r1, #4]
90016e1e:	4323      	orrs	r3, r4
90016e20:	d010      	beq.n	90016e44 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90016e22:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90016e26:	2c00      	cmp	r4, #0
90016e28:	db0c      	blt.n	90016e44 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90016e2a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90016e2c:	429c      	cmp	r4, r3
90016e2e:	da09      	bge.n	90016e44 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90016e30:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90016e34:	429c      	cmp	r4, r3
90016e36:	f104 0401 	add.w	r4, r4, #1
90016e3a:	bf38      	it	cc
90016e3c:	3108      	addcc	r1, #8
90016e3e:	6084      	str	r4, [r0, #8]
90016e40:	bf38      	it	cc
90016e42:	6101      	strcc	r1, [r0, #16]
90016e44:	6903      	ldr	r3, [r0, #16]
90016e46:	464f      	mov	r7, r9
90016e48:	f8a3 a000 	strh.w	sl, [r3]
90016e4c:	805a      	strh	r2, [r3, #2]
90016e4e:	809e      	strh	r6, [r3, #4]
90016e50:	80de      	strh	r6, [r3, #6]
90016e52:	9b06      	ldr	r3, [sp, #24]
90016e54:	4293      	cmp	r3, r2
90016e56:	d19c      	bne.n	90016d92 <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
90016e58:	9b01      	ldr	r3, [sp, #4]
90016e5a:	6907      	ldr	r7, [r0, #16]
90016e5c:	f1c3 0620 	rsb	r6, r3, #32
90016e60:	9b05      	ldr	r3, [sp, #20]
90016e62:	ea4f 1e63 	mov.w	lr, r3, asr #5
90016e66:	9b04      	ldr	r3, [sp, #16]
90016e68:	429e      	cmp	r6, r3
90016e6a:	f040 81c7 	bne.w	900171fc <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
90016e6e:	f9b7 3000 	ldrsh.w	r3, [r7]
90016e72:	459e      	cmp	lr, r3
90016e74:	d104      	bne.n	90016e80 <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
90016e76:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90016e7a:	429a      	cmp	r2, r3
90016e7c:	f43f ae3a 	beq.w	90016af4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90016e80:	88f9      	ldrh	r1, [r7, #6]
90016e82:	88bb      	ldrh	r3, [r7, #4]
90016e84:	430b      	orrs	r3, r1
90016e86:	d010      	beq.n	90016eaa <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90016e88:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90016e8c:	2b00      	cmp	r3, #0
90016e8e:	db0c      	blt.n	90016eaa <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90016e90:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
90016e92:	428b      	cmp	r3, r1
90016e94:	da09      	bge.n	90016eaa <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90016e96:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90016e9a:	428b      	cmp	r3, r1
90016e9c:	f103 0301 	add.w	r3, r3, #1
90016ea0:	bf38      	it	cc
90016ea2:	3708      	addcc	r7, #8
90016ea4:	6083      	str	r3, [r0, #8]
90016ea6:	bf38      	it	cc
90016ea8:	6107      	strcc	r7, [r0, #16]
90016eaa:	6903      	ldr	r3, [r0, #16]
90016eac:	f8a3 e000 	strh.w	lr, [r3]
90016eb0:	e603      	b.n	90016aba <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
90016eb2:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
90016eb4:	9c03      	ldr	r4, [sp, #12]
90016eb6:	42a2      	cmp	r2, r4
90016eb8:	f6ff ae1c 	blt.w	90016af4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90016ebc:	9c06      	ldr	r4, [sp, #24]
90016ebe:	42a2      	cmp	r2, r4
90016ec0:	9c08      	ldr	r4, [sp, #32]
90016ec2:	bfbc      	itt	lt
90016ec4:	3201      	addlt	r2, #1
90016ec6:	9206      	strlt	r2, [sp, #24]
90016ec8:	f1c3 0220 	rsb	r2, r3, #32
90016ecc:	4362      	muls	r2, r4
90016ece:	2401      	movs	r4, #1
90016ed0:	940b      	str	r4, [sp, #44]	@ 0x2c
90016ed2:	2420      	movs	r4, #32
90016ed4:	e6d6      	b.n	90016c84 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
90016ed6:	ea4f 1861 	mov.w	r8, r1, asr #5
90016eda:	f009 021f 	and.w	r2, r9, #31
90016ede:	f001 011f 	and.w	r1, r1, #31
90016ee2:	f8b5 e004 	ldrh.w	lr, [r5, #4]
90016ee6:	920c      	str	r2, [sp, #48]	@ 0x30
90016ee8:	45b0      	cmp	r8, r6
90016eea:	9a01      	ldr	r2, [sp, #4]
90016eec:	f8b5 a006 	ldrh.w	sl, [r5, #6]
90016ef0:	eba2 0203 	sub.w	r2, r2, r3
90016ef4:	d108      	bne.n	90016f08 <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
90016ef6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90016ef8:	4496      	add	lr, r2
90016efa:	4419      	add	r1, r3
90016efc:	f8a5 e004 	strh.w	lr, [r5, #4]
90016f00:	fb02 a101 	mla	r1, r2, r1, sl
90016f04:	80e9      	strh	r1, [r5, #6]
90016f06:	e6fa      	b.n	90016cfe <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90016f08:	2c00      	cmp	r4, #0
90016f0a:	f2c0 80a7 	blt.w	9001705c <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
90016f0e:	2701      	movs	r7, #1
90016f10:	f1c1 0c20 	rsb	ip, r1, #32
90016f14:	970a      	str	r7, [sp, #40]	@ 0x28
90016f16:	2720      	movs	r7, #32
90016f18:	fb02 f20c 	mul.w	r2, r2, ip
90016f1c:	9709      	str	r7, [sp, #36]	@ 0x24
90016f1e:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90016f20:	fb92 fcf4 	sdiv	ip, r2, r4
90016f24:	fb04 221c 	mls	r2, r4, ip, r2
90016f28:	4439      	add	r1, r7
90016f2a:	2a00      	cmp	r2, #0
90016f2c:	bfbc      	itt	lt
90016f2e:	f10c 3cff 	addlt.w	ip, ip, #4294967295
90016f32:	1912      	addlt	r2, r2, r4
90016f34:	fb0c a101 	mla	r1, ip, r1, sl
90016f38:	44e6      	add	lr, ip
90016f3a:	80e9      	strh	r1, [r5, #6]
90016f3c:	990a      	ldr	r1, [sp, #40]	@ 0x28
90016f3e:	f8a5 e004 	strh.w	lr, [r5, #4]
90016f42:	eb08 0501 	add.w	r5, r8, r1
90016f46:	6901      	ldr	r1, [r0, #16]
90016f48:	f8b1 8006 	ldrh.w	r8, [r1, #6]
90016f4c:	f8b1 e004 	ldrh.w	lr, [r1, #4]
90016f50:	ea58 070e 	orrs.w	r7, r8, lr
90016f54:	d010      	beq.n	90016f78 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90016f56:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
90016f5a:	f1be 0f00 	cmp.w	lr, #0
90016f5e:	db0b      	blt.n	90016f78 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90016f60:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90016f62:	45be      	cmp	lr, r7
90016f64:	da08      	bge.n	90016f78 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90016f66:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90016f6a:	45be      	cmp	lr, r7
90016f6c:	bf3c      	itt	cc
90016f6e:	3108      	addcc	r1, #8
90016f70:	6101      	strcc	r1, [r0, #16]
90016f72:	f10e 0101 	add.w	r1, lr, #1
90016f76:	6081      	str	r1, [r0, #8]
90016f78:	6901      	ldr	r1, [r0, #16]
90016f7a:	f04f 0e00 	mov.w	lr, #0
90016f7e:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
90016f82:	42ae      	cmp	r6, r5
90016f84:	800d      	strh	r5, [r1, #0]
90016f86:	4463      	add	r3, ip
90016f88:	f8a1 8002 	strh.w	r8, [r1, #2]
90016f8c:	f8a1 e004 	strh.w	lr, [r1, #4]
90016f90:	f8a1 e006 	strh.w	lr, [r1, #6]
90016f94:	d053      	beq.n	9001703e <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
90016f96:	9901      	ldr	r1, [sp, #4]
90016f98:	1b12      	subs	r2, r2, r4
90016f9a:	1ac9      	subs	r1, r1, r3
90016f9c:	4461      	add	r1, ip
90016f9e:	0149      	lsls	r1, r1, #5
90016fa0:	fb91 fef4 	sdiv	lr, r1, r4
90016fa4:	fb04 111e 	mls	r1, r4, lr, r1
90016fa8:	2900      	cmp	r1, #0
90016faa:	bfbc      	itt	lt
90016fac:	f10e 3eff 	addlt.w	lr, lr, #4294967295
90016fb0:	1909      	addlt	r1, r1, r4
90016fb2:	f10e 0701 	add.w	r7, lr, #1
90016fb6:	970d      	str	r7, [sp, #52]	@ 0x34
90016fb8:	f8d0 a010 	ldr.w	sl, [r0, #16]
90016fbc:	1852      	adds	r2, r2, r1
90016fbe:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90016fc0:	bf54      	ite	pl
90016fc2:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
90016fc6:	46f4      	movmi	ip, lr
90016fc8:	f8ba b004 	ldrh.w	fp, [sl, #4]
90016fcc:	bf58      	it	pl
90016fce:	1b12      	subpl	r2, r2, r4
90016fd0:	4463      	add	r3, ip
90016fd2:	443d      	add	r5, r7
90016fd4:	44e3      	add	fp, ip
90016fd6:	f8aa b004 	strh.w	fp, [sl, #4]
90016fda:	f8ba b006 	ldrh.w	fp, [sl, #6]
90016fde:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
90016fe2:	f8aa b006 	strh.w	fp, [sl, #6]
90016fe6:	f8d0 c010 	ldr.w	ip, [r0, #16]
90016fea:	f8bc b006 	ldrh.w	fp, [ip, #6]
90016fee:	f8bc a004 	ldrh.w	sl, [ip, #4]
90016ff2:	ea5b 070a 	orrs.w	r7, fp, sl
90016ff6:	d014      	beq.n	90017022 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90016ff8:	f9bc a002 	ldrsh.w	sl, [ip, #2]
90016ffc:	f1ba 0f00 	cmp.w	sl, #0
90017000:	db0f      	blt.n	90017022 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90017002:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90017004:	45ba      	cmp	sl, r7
90017006:	da0c      	bge.n	90017022 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90017008:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
9001700c:	45ba      	cmp	sl, r7
9001700e:	f10a 0a01 	add.w	sl, sl, #1
90017012:	bf38      	it	cc
90017014:	f10c 0c08 	addcc.w	ip, ip, #8
90017018:	f8c0 a008 	str.w	sl, [r0, #8]
9001701c:	bf38      	it	cc
9001701e:	f8c0 c010 	strcc.w	ip, [r0, #16]
90017022:	f8d0 c010 	ldr.w	ip, [r0, #16]
90017026:	f04f 0700 	mov.w	r7, #0
9001702a:	42ae      	cmp	r6, r5
9001702c:	f8ac 5000 	strh.w	r5, [ip]
90017030:	f8ac 8002 	strh.w	r8, [ip, #2]
90017034:	f8ac 7004 	strh.w	r7, [ip, #4]
90017038:	f8ac 7006 	strh.w	r7, [ip, #6]
9001703c:	d1bc      	bne.n	90016fb8 <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
9001703e:	6904      	ldr	r4, [r0, #16]
90017040:	9a01      	ldr	r2, [sp, #4]
90017042:	990c      	ldr	r1, [sp, #48]	@ 0x30
90017044:	1ad3      	subs	r3, r2, r3
90017046:	88a2      	ldrh	r2, [r4, #4]
90017048:	3120      	adds	r1, #32
9001704a:	441a      	add	r2, r3
9001704c:	80a2      	strh	r2, [r4, #4]
9001704e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90017050:	1a89      	subs	r1, r1, r2
90017052:	88e2      	ldrh	r2, [r4, #6]
90017054:	fb03 2301 	mla	r3, r3, r1, r2
90017058:	80e3      	strh	r3, [r4, #6]
9001705a:	e650      	b.n	90016cfe <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
9001705c:	f04f 37ff 	mov.w	r7, #4294967295
90017060:	434a      	muls	r2, r1
90017062:	4264      	negs	r4, r4
90017064:	970a      	str	r7, [sp, #40]	@ 0x28
90017066:	2700      	movs	r7, #0
90017068:	e758      	b.n	90016f1c <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
9001706a:	ea4f 1867 	mov.w	r8, r7, asr #5
9001706e:	f009 031f 	and.w	r3, r9, #31
90017072:	f007 071f 	and.w	r7, r7, #31
90017076:	fa1f fc8c 	uxth.w	ip, ip
9001707a:	45d0      	cmp	r8, sl
9001707c:	930f      	str	r3, [sp, #60]	@ 0x3c
9001707e:	fa1f fe8e 	uxth.w	lr, lr
90017082:	d10a      	bne.n	9001709a <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
90017084:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90017086:	449c      	add	ip, r3
90017088:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001708a:	441f      	add	r7, r3
9001708c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001708e:	f8a5 c004 	strh.w	ip, [r5, #4]
90017092:	fb03 e707 	mla	r7, r3, r7, lr
90017096:	80ef      	strh	r7, [r5, #6]
90017098:	e6bc      	b.n	90016e14 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
9001709a:	2900      	cmp	r1, #0
9001709c:	f2c0 80a6 	blt.w	900171ec <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
900170a0:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
900170a2:	f1c7 0320 	rsb	r3, r7, #32
900170a6:	4363      	muls	r3, r4
900170a8:	2401      	movs	r4, #1
900170aa:	940d      	str	r4, [sp, #52]	@ 0x34
900170ac:	2420      	movs	r4, #32
900170ae:	940c      	str	r4, [sp, #48]	@ 0x30
900170b0:	fb93 f4f1 	sdiv	r4, r3, r1
900170b4:	fb01 3b14 	mls	fp, r1, r4, r3
900170b8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900170ba:	f1bb 0f00 	cmp.w	fp, #0
900170be:	441f      	add	r7, r3
900170c0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900170c2:	bfbc      	itt	lt
900170c4:	f104 34ff 	addlt.w	r4, r4, #4294967295
900170c8:	448b      	addlt	fp, r1
900170ca:	fb04 e707 	mla	r7, r4, r7, lr
900170ce:	44a4      	add	ip, r4
900170d0:	80ef      	strh	r7, [r5, #6]
900170d2:	f8a5 c004 	strh.w	ip, [r5, #4]
900170d6:	eb08 0503 	add.w	r5, r8, r3
900170da:	f8d0 c010 	ldr.w	ip, [r0, #16]
900170de:	f8bc e006 	ldrh.w	lr, [ip, #6]
900170e2:	f8bc 7004 	ldrh.w	r7, [ip, #4]
900170e6:	ea5e 0307 	orrs.w	r3, lr, r7
900170ea:	d011      	beq.n	90017110 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
900170ec:	f9bc e002 	ldrsh.w	lr, [ip, #2]
900170f0:	f1be 0f00 	cmp.w	lr, #0
900170f4:	db0c      	blt.n	90017110 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
900170f6:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
900170f8:	45be      	cmp	lr, r7
900170fa:	da09      	bge.n	90017110 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
900170fc:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90017100:	45be      	cmp	lr, r7
90017102:	bf3c      	itt	cc
90017104:	f10c 0708 	addcc.w	r7, ip, #8
90017108:	6107      	strcc	r7, [r0, #16]
9001710a:	f10e 0701 	add.w	r7, lr, #1
9001710e:	6087      	str	r7, [r0, #8]
90017110:	6907      	ldr	r7, [r0, #16]
90017112:	b213      	sxth	r3, r2
90017114:	4555      	cmp	r5, sl
90017116:	9310      	str	r3, [sp, #64]	@ 0x40
90017118:	807b      	strh	r3, [r7, #2]
9001711a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001711c:	803d      	strh	r5, [r7, #0]
9001711e:	80be      	strh	r6, [r7, #4]
90017120:	eb04 0c03 	add.w	ip, r4, r3
90017124:	80fe      	strh	r6, [r7, #6]
90017126:	d050      	beq.n	900171ca <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
90017128:	9b01      	ldr	r3, [sp, #4]
9001712a:	eba3 070c 	sub.w	r7, r3, ip
9001712e:	ebab 0301 	sub.w	r3, fp, r1
90017132:	443c      	add	r4, r7
90017134:	9309      	str	r3, [sp, #36]	@ 0x24
90017136:	0164      	lsls	r4, r4, #5
90017138:	fb94 f8f1 	sdiv	r8, r4, r1
9001713c:	fb01 4418 	mls	r4, r1, r8, r4
90017140:	2c00      	cmp	r4, #0
90017142:	bfbc      	itt	lt
90017144:	f108 38ff 	addlt.w	r8, r8, #4294967295
90017148:	1864      	addlt	r4, r4, r1
9001714a:	f108 0701 	add.w	r7, r8, #1
9001714e:	9711      	str	r7, [sp, #68]	@ 0x44
90017150:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90017152:	f8d0 e010 	ldr.w	lr, [r0, #16]
90017156:	191b      	adds	r3, r3, r4
90017158:	f8be b004 	ldrh.w	fp, [lr, #4]
9001715c:	bf54      	ite	pl
9001715e:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
90017160:	4647      	movmi	r7, r8
90017162:	9309      	str	r3, [sp, #36]	@ 0x24
90017164:	bf58      	it	pl
90017166:	1a5b      	subpl	r3, r3, r1
90017168:	44bb      	add	fp, r7
9001716a:	44bc      	add	ip, r7
9001716c:	bf58      	it	pl
9001716e:	9309      	strpl	r3, [sp, #36]	@ 0x24
90017170:	f8ae b004 	strh.w	fp, [lr, #4]
90017174:	f8be b006 	ldrh.w	fp, [lr, #6]
90017178:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
9001717c:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
9001717e:	f8ae b006 	strh.w	fp, [lr, #6]
90017182:	443d      	add	r5, r7
90017184:	f8d0 e010 	ldr.w	lr, [r0, #16]
90017188:	f8be b006 	ldrh.w	fp, [lr, #6]
9001718c:	f8be 7004 	ldrh.w	r7, [lr, #4]
90017190:	ea5b 0307 	orrs.w	r3, fp, r7
90017194:	d011      	beq.n	900171ba <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90017196:	f9be b002 	ldrsh.w	fp, [lr, #2]
9001719a:	f1bb 0f00 	cmp.w	fp, #0
9001719e:	db0c      	blt.n	900171ba <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
900171a0:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
900171a2:	45bb      	cmp	fp, r7
900171a4:	da09      	bge.n	900171ba <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
900171a6:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
900171aa:	45bb      	cmp	fp, r7
900171ac:	bf3c      	itt	cc
900171ae:	f10e 0708 	addcc.w	r7, lr, #8
900171b2:	6107      	strcc	r7, [r0, #16]
900171b4:	f10b 0701 	add.w	r7, fp, #1
900171b8:	6087      	str	r7, [r0, #8]
900171ba:	6907      	ldr	r7, [r0, #16]
900171bc:	4555      	cmp	r5, sl
900171be:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900171c0:	803d      	strh	r5, [r7, #0]
900171c2:	807b      	strh	r3, [r7, #2]
900171c4:	80be      	strh	r6, [r7, #4]
900171c6:	80fe      	strh	r6, [r7, #6]
900171c8:	d1c2      	bne.n	90017150 <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
900171ca:	9b01      	ldr	r3, [sp, #4]
900171cc:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
900171ce:	eba3 0c0c 	sub.w	ip, r3, ip
900171d2:	6903      	ldr	r3, [r0, #16]
900171d4:	3720      	adds	r7, #32
900171d6:	8899      	ldrh	r1, [r3, #4]
900171d8:	4461      	add	r1, ip
900171da:	8099      	strh	r1, [r3, #4]
900171dc:	990c      	ldr	r1, [sp, #48]	@ 0x30
900171de:	1a7f      	subs	r7, r7, r1
900171e0:	88d9      	ldrh	r1, [r3, #6]
900171e2:	fb0c 1c07 	mla	ip, ip, r7, r1
900171e6:	f8a3 c006 	strh.w	ip, [r3, #6]
900171ea:	e613      	b.n	90016e14 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
900171ec:	f04f 34ff 	mov.w	r4, #4294967295
900171f0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900171f2:	4249      	negs	r1, r1
900171f4:	940d      	str	r4, [sp, #52]	@ 0x34
900171f6:	2400      	movs	r4, #0
900171f8:	437b      	muls	r3, r7
900171fa:	e758      	b.n	900170ae <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
900171fc:	9905      	ldr	r1, [sp, #20]
900171fe:	ea4f 1b69 	mov.w	fp, r9, asr #5
90017202:	f009 0c1f 	and.w	ip, r9, #31
90017206:	f8b7 8004 	ldrh.w	r8, [r7, #4]
9001720a:	f001 011f 	and.w	r1, r1, #31
9001720e:	45f3      	cmp	fp, lr
90017210:	f8b7 a006 	ldrh.w	sl, [r7, #6]
90017214:	9102      	str	r1, [sp, #8]
90017216:	9904      	ldr	r1, [sp, #16]
90017218:	eba1 0406 	sub.w	r4, r1, r6
9001721c:	d108      	bne.n	90017230 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
9001721e:	9b02      	ldr	r3, [sp, #8]
90017220:	44a0      	add	r8, r4
90017222:	449c      	add	ip, r3
90017224:	f8a7 8004 	strh.w	r8, [r7, #4]
90017228:	fb04 a40c 	mla	r4, r4, ip, sl
9001722c:	80fc      	strh	r4, [r7, #6]
9001722e:	e461      	b.n	90016af4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90017230:	9905      	ldr	r1, [sp, #20]
90017232:	ebb1 0109 	subs.w	r1, r1, r9
90017236:	bf51      	iteee	pl
90017238:	f1cc 0520 	rsbpl	r5, ip, #32
9001723c:	fb04 f40c 	mulmi.w	r4, r4, ip
90017240:	4249      	negmi	r1, r1
90017242:	2500      	movmi	r5, #0
90017244:	bf5d      	ittte	pl
90017246:	436c      	mulpl	r4, r5
90017248:	2520      	movpl	r5, #32
9001724a:	f04f 0901 	movpl.w	r9, #1
9001724e:	f04f 39ff 	movmi.w	r9, #4294967295
90017252:	9501      	str	r5, [sp, #4]
90017254:	9b01      	ldr	r3, [sp, #4]
90017256:	fb94 f5f1 	sdiv	r5, r4, r1
9001725a:	fb01 4415 	mls	r4, r1, r5, r4
9001725e:	449c      	add	ip, r3
90017260:	eb0b 0309 	add.w	r3, fp, r9
90017264:	2c00      	cmp	r4, #0
90017266:	bfbc      	itt	lt
90017268:	f105 35ff 	addlt.w	r5, r5, #4294967295
9001726c:	1864      	addlt	r4, r4, r1
9001726e:	44a8      	add	r8, r5
90017270:	fb05 ac0c 	mla	ip, r5, ip, sl
90017274:	f8a7 8004 	strh.w	r8, [r7, #4]
90017278:	f8a7 c006 	strh.w	ip, [r7, #6]
9001727c:	f8d0 c010 	ldr.w	ip, [r0, #16]
90017280:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90017284:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90017288:	ea58 0707 	orrs.w	r7, r8, r7
9001728c:	d011      	beq.n	900172b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
9001728e:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90017292:	f1b8 0f00 	cmp.w	r8, #0
90017296:	db0c      	blt.n	900172b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90017298:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
9001729a:	45b8      	cmp	r8, r7
9001729c:	da09      	bge.n	900172b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
9001729e:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
900172a2:	45b8      	cmp	r8, r7
900172a4:	bf3c      	itt	cc
900172a6:	f10c 0708 	addcc.w	r7, ip, #8
900172aa:	6107      	strcc	r7, [r0, #16]
900172ac:	f108 0701 	add.w	r7, r8, #1
900172b0:	6087      	str	r7, [r0, #8]
900172b2:	6907      	ldr	r7, [r0, #16]
900172b4:	f04f 0c00 	mov.w	ip, #0
900172b8:	b212      	sxth	r2, r2
900172ba:	459e      	cmp	lr, r3
900172bc:	803b      	strh	r3, [r7, #0]
900172be:	442e      	add	r6, r5
900172c0:	807a      	strh	r2, [r7, #2]
900172c2:	f8a7 c004 	strh.w	ip, [r7, #4]
900172c6:	f8a7 c006 	strh.w	ip, [r7, #6]
900172ca:	d04b      	beq.n	90017364 <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
900172cc:	9f04      	ldr	r7, [sp, #16]
900172ce:	1a64      	subs	r4, r4, r1
900172d0:	f04f 0a00 	mov.w	sl, #0
900172d4:	1bbf      	subs	r7, r7, r6
900172d6:	443d      	add	r5, r7
900172d8:	016d      	lsls	r5, r5, #5
900172da:	fb95 f8f1 	sdiv	r8, r5, r1
900172de:	fb01 5518 	mls	r5, r1, r8, r5
900172e2:	4565      	cmp	r5, ip
900172e4:	bfbc      	itt	lt
900172e6:	f108 38ff 	addlt.w	r8, r8, #4294967295
900172ea:	186d      	addlt	r5, r5, r1
900172ec:	f108 0701 	add.w	r7, r8, #1
900172f0:	9703      	str	r7, [sp, #12]
900172f2:	f8d0 c010 	ldr.w	ip, [r0, #16]
900172f6:	1964      	adds	r4, r4, r5
900172f8:	444b      	add	r3, r9
900172fa:	bf54      	ite	pl
900172fc:	9f03      	ldrpl	r7, [sp, #12]
900172fe:	4647      	movmi	r7, r8
90017300:	f8bc b004 	ldrh.w	fp, [ip, #4]
90017304:	bf58      	it	pl
90017306:	1a64      	subpl	r4, r4, r1
90017308:	443e      	add	r6, r7
9001730a:	44bb      	add	fp, r7
9001730c:	f8ac b004 	strh.w	fp, [ip, #4]
90017310:	f8bc b006 	ldrh.w	fp, [ip, #6]
90017314:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90017318:	f8ac b006 	strh.w	fp, [ip, #6]
9001731c:	f8d0 c010 	ldr.w	ip, [r0, #16]
90017320:	f8bc b006 	ldrh.w	fp, [ip, #6]
90017324:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90017328:	ea5b 0707 	orrs.w	r7, fp, r7
9001732c:	d011      	beq.n	90017352 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
9001732e:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90017332:	f1bb 0f00 	cmp.w	fp, #0
90017336:	db0c      	blt.n	90017352 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90017338:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
9001733a:	45bb      	cmp	fp, r7
9001733c:	da09      	bge.n	90017352 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
9001733e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90017342:	45bb      	cmp	fp, r7
90017344:	bf3c      	itt	cc
90017346:	f10c 0708 	addcc.w	r7, ip, #8
9001734a:	6107      	strcc	r7, [r0, #16]
9001734c:	f10b 0701 	add.w	r7, fp, #1
90017350:	6087      	str	r7, [r0, #8]
90017352:	6907      	ldr	r7, [r0, #16]
90017354:	459e      	cmp	lr, r3
90017356:	803b      	strh	r3, [r7, #0]
90017358:	807a      	strh	r2, [r7, #2]
9001735a:	f8a7 a004 	strh.w	sl, [r7, #4]
9001735e:	f8a7 a006 	strh.w	sl, [r7, #6]
90017362:	d1c6      	bne.n	900172f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
90017364:	9b04      	ldr	r3, [sp, #16]
90017366:	1b9e      	subs	r6, r3, r6
90017368:	6903      	ldr	r3, [r0, #16]
9001736a:	889a      	ldrh	r2, [r3, #4]
9001736c:	4432      	add	r2, r6
9001736e:	809a      	strh	r2, [r3, #4]
90017370:	9a02      	ldr	r2, [sp, #8]
90017372:	f102 0c20 	add.w	ip, r2, #32
90017376:	9a01      	ldr	r2, [sp, #4]
90017378:	ebac 0c02 	sub.w	ip, ip, r2
9001737c:	88da      	ldrh	r2, [r3, #6]
9001737e:	fb06 260c 	mla	r6, r6, ip, r2
90017382:	80de      	strh	r6, [r3, #6]
90017384:	f7ff bbb6 	b.w	90016af4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

90017388 <_ZN8touchgfx7Outline6lineToEii>:
90017388:	6a43      	ldr	r3, [r0, #36]	@ 0x24
9001738a:	079b      	lsls	r3, r3, #30
9001738c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9001738e:	460e      	mov	r6, r1
90017390:	4615      	mov	r5, r2
90017392:	d511      	bpl.n	900173b8 <_ZN8touchgfx7Outline6lineToEii+0x30>
90017394:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
90017398:	ea86 0701 	eor.w	r7, r6, r1
9001739c:	ea85 0302 	eor.w	r3, r5, r2
900173a0:	433b      	orrs	r3, r7
900173a2:	d009      	beq.n	900173b8 <_ZN8touchgfx7Outline6lineToEii+0x30>
900173a4:	4633      	mov	r3, r6
900173a6:	9500      	str	r5, [sp, #0]
900173a8:	f7ff fb4c 	bl	90016a44 <_ZN8touchgfx7Outline10renderLineEiiii>
900173ac:	6a43      	ldr	r3, [r0, #36]	@ 0x24
900173ae:	f043 0301 	orr.w	r3, r3, #1
900173b2:	e9c0 6505 	strd	r6, r5, [r0, #20]
900173b6:	6243      	str	r3, [r0, #36]	@ 0x24
900173b8:	b003      	add	sp, #12
900173ba:	bdf0      	pop	{r4, r5, r6, r7, pc}

900173bc <_ZN8touchgfx7Outline6moveToEii>:
900173bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900173be:	6a43      	ldr	r3, [r0, #36]	@ 0x24
900173c0:	4615      	mov	r5, r2
900173c2:	4604      	mov	r4, r0
900173c4:	460e      	mov	r6, r1
900173c6:	079a      	lsls	r2, r3, #30
900173c8:	d401      	bmi.n	900173ce <_ZN8touchgfx7Outline6moveToEii+0x12>
900173ca:	f7ff fb07 	bl	900169dc <_ZN8touchgfx7Outline5resetEv>
900173ce:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900173d0:	07db      	lsls	r3, r3, #31
900173d2:	d504      	bpl.n	900173de <_ZN8touchgfx7Outline6moveToEii+0x22>
900173d4:	4620      	mov	r0, r4
900173d6:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
900173da:	f7ff ffd5 	bl	90017388 <_ZN8touchgfx7Outline6lineToEii>
900173de:	6923      	ldr	r3, [r4, #16]
900173e0:	1170      	asrs	r0, r6, #5
900173e2:	1169      	asrs	r1, r5, #5
900173e4:	f9b3 2000 	ldrsh.w	r2, [r3]
900173e8:	4290      	cmp	r0, r2
900173ea:	d103      	bne.n	900173f4 <_ZN8touchgfx7Outline6moveToEii+0x38>
900173ec:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
900173f0:	4291      	cmp	r1, r2
900173f2:	d01a      	beq.n	9001742a <_ZN8touchgfx7Outline6moveToEii+0x6e>
900173f4:	88df      	ldrh	r7, [r3, #6]
900173f6:	889a      	ldrh	r2, [r3, #4]
900173f8:	433a      	orrs	r2, r7
900173fa:	d010      	beq.n	9001741e <_ZN8touchgfx7Outline6moveToEii+0x62>
900173fc:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90017400:	2a00      	cmp	r2, #0
90017402:	db0c      	blt.n	9001741e <_ZN8touchgfx7Outline6moveToEii+0x62>
90017404:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
90017406:	42ba      	cmp	r2, r7
90017408:	da09      	bge.n	9001741e <_ZN8touchgfx7Outline6moveToEii+0x62>
9001740a:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
9001740e:	42ba      	cmp	r2, r7
90017410:	f102 0201 	add.w	r2, r2, #1
90017414:	bf38      	it	cc
90017416:	3308      	addcc	r3, #8
90017418:	60a2      	str	r2, [r4, #8]
9001741a:	bf38      	it	cc
9001741c:	6123      	strcc	r3, [r4, #16]
9001741e:	6923      	ldr	r3, [r4, #16]
90017420:	2200      	movs	r2, #0
90017422:	8018      	strh	r0, [r3, #0]
90017424:	8059      	strh	r1, [r3, #2]
90017426:	809a      	strh	r2, [r3, #4]
90017428:	80da      	strh	r2, [r3, #6]
9001742a:	6166      	str	r6, [r4, #20]
9001742c:	6225      	str	r5, [r4, #32]
9001742e:	e9c4 5606 	strd	r5, r6, [r4, #24]
90017432:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90017434 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
90017434:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90017438:	b0d0      	sub	sp, #320	@ 0x140
9001743a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
9001743e:	466c      	mov	r4, sp
90017440:	4627      	mov	r7, r4
90017442:	1a0d      	subs	r5, r1, r0
90017444:	f100 0308 	add.w	r3, r0, #8
90017448:	2d48      	cmp	r5, #72	@ 0x48
9001744a:	f340 80d5 	ble.w	900175f8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
9001744e:	112d      	asrs	r5, r5, #4
90017450:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
90017454:	f9b0 9000 	ldrsh.w	r9, [r0]
90017458:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
9001745c:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
90017460:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90017464:	6816      	ldr	r6, [r2, #0]
90017466:	6006      	str	r6, [r0, #0]
90017468:	6856      	ldr	r6, [r2, #4]
9001746a:	6046      	str	r6, [r0, #4]
9001746c:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90017470:	f8a2 8002 	strh.w	r8, [r2, #2]
90017474:	f8a2 e004 	strh.w	lr, [r2, #4]
90017478:	f8a2 c006 	strh.w	ip, [r2, #6]
9001747c:	f1a1 0208 	sub.w	r2, r1, #8
90017480:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90017484:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
90017488:	4565      	cmp	r5, ip
9001748a:	db06      	blt.n	9001749a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
9001748c:	d119      	bne.n	900174c2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
9001748e:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
90017492:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
90017496:	42ae      	cmp	r6, r5
90017498:	dd13      	ble.n	900174c2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
9001749a:	460e      	mov	r6, r1
9001749c:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
900174a0:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
900174a4:	f856 5d08 	ldr.w	r5, [r6, #-8]!
900174a8:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
900174ac:	601d      	str	r5, [r3, #0]
900174ae:	6875      	ldr	r5, [r6, #4]
900174b0:	605d      	str	r5, [r3, #4]
900174b2:	f821 9c08 	strh.w	r9, [r1, #-8]
900174b6:	f821 cc06 	strh.w	ip, [r1, #-6]
900174ba:	f821 8c04 	strh.w	r8, [r1, #-4]
900174be:	f821 ec02 	strh.w	lr, [r1, #-2]
900174c2:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
900174c6:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
900174ca:	42ae      	cmp	r6, r5
900174cc:	db06      	blt.n	900174dc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
900174ce:	d116      	bne.n	900174fe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
900174d0:	f9b0 c000 	ldrsh.w	ip, [r0]
900174d4:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
900174d8:	45ac      	cmp	ip, r5
900174da:	da10      	bge.n	900174fe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
900174dc:	681d      	ldr	r5, [r3, #0]
900174de:	f9b0 8000 	ldrsh.w	r8, [r0]
900174e2:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
900174e6:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
900174ea:	6005      	str	r5, [r0, #0]
900174ec:	685d      	ldr	r5, [r3, #4]
900174ee:	f8a0 8008 	strh.w	r8, [r0, #8]
900174f2:	6045      	str	r5, [r0, #4]
900174f4:	8146      	strh	r6, [r0, #10]
900174f6:	f8a0 e00c 	strh.w	lr, [r0, #12]
900174fa:	f8a0 c00e 	strh.w	ip, [r0, #14]
900174fe:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90017502:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
90017506:	4565      	cmp	r5, ip
90017508:	db06      	blt.n	90017518 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
9001750a:	d119      	bne.n	90017540 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
9001750c:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
90017510:	f9b0 5000 	ldrsh.w	r5, [r0]
90017514:	42ae      	cmp	r6, r5
90017516:	da13      	bge.n	90017540 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90017518:	460e      	mov	r6, r1
9001751a:	f9b0 9000 	ldrsh.w	r9, [r0]
9001751e:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
90017522:	f856 5d08 	ldr.w	r5, [r6, #-8]!
90017526:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
9001752a:	6005      	str	r5, [r0, #0]
9001752c:	6875      	ldr	r5, [r6, #4]
9001752e:	6045      	str	r5, [r0, #4]
90017530:	f821 9c08 	strh.w	r9, [r1, #-8]
90017534:	f821 cc06 	strh.w	ip, [r1, #-6]
90017538:	f821 8c04 	strh.w	r8, [r1, #-4]
9001753c:	f821 ec02 	strh.w	lr, [r1, #-2]
90017540:	3308      	adds	r3, #8
90017542:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
90017546:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
9001754a:	45e6      	cmp	lr, ip
9001754c:	dbf8      	blt.n	90017540 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
9001754e:	d105      	bne.n	9001755c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90017550:	f9b3 6000 	ldrsh.w	r6, [r3]
90017554:	f9b0 5000 	ldrsh.w	r5, [r0]
90017558:	42ae      	cmp	r6, r5
9001755a:	dbf1      	blt.n	90017540 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
9001755c:	4615      	mov	r5, r2
9001755e:	3a08      	subs	r2, #8
90017560:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
90017564:	45b4      	cmp	ip, r6
90017566:	dbf9      	blt.n	9001755c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90017568:	d105      	bne.n	90017576 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
9001756a:	f9b0 8000 	ldrsh.w	r8, [r0]
9001756e:	f9b2 6000 	ldrsh.w	r6, [r2]
90017572:	45b0      	cmp	r8, r6
90017574:	dbf2      	blt.n	9001755c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90017576:	4293      	cmp	r3, r2
90017578:	f1a5 0608 	sub.w	r6, r5, #8
9001757c:	d816      	bhi.n	900175ac <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
9001757e:	f8d6 c000 	ldr.w	ip, [r6]
90017582:	f9b3 a000 	ldrsh.w	sl, [r3]
90017586:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
9001758a:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
9001758e:	f8c3 c000 	str.w	ip, [r3]
90017592:	f8d6 c004 	ldr.w	ip, [r6, #4]
90017596:	f8c3 c004 	str.w	ip, [r3, #4]
9001759a:	f825 ac08 	strh.w	sl, [r5, #-8]
9001759e:	f825 ec06 	strh.w	lr, [r5, #-6]
900175a2:	f825 9c04 	strh.w	r9, [r5, #-4]
900175a6:	f825 8c02 	strh.w	r8, [r5, #-2]
900175aa:	e7c9      	b.n	90017540 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900175ac:	f8d6 e000 	ldr.w	lr, [r6]
900175b0:	f9b0 a000 	ldrsh.w	sl, [r0]
900175b4:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
900175b8:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
900175bc:	f8c0 e000 	str.w	lr, [r0]
900175c0:	f8d6 e004 	ldr.w	lr, [r6, #4]
900175c4:	1a16      	subs	r6, r2, r0
900175c6:	f8c0 e004 	str.w	lr, [r0, #4]
900175ca:	f825 ac08 	strh.w	sl, [r5, #-8]
900175ce:	f825 cc06 	strh.w	ip, [r5, #-6]
900175d2:	f825 9c04 	strh.w	r9, [r5, #-4]
900175d6:	f825 8c02 	strh.w	r8, [r5, #-2]
900175da:	1acd      	subs	r5, r1, r3
900175dc:	10ed      	asrs	r5, r5, #3
900175de:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
900175e2:	bfb5      	itete	lt
900175e4:	e9c4 0200 	strdlt	r0, r2, [r4]
900175e8:	e9c4 3100 	strdge	r3, r1, [r4]
900175ec:	460a      	movlt	r2, r1
900175ee:	4603      	movge	r3, r0
900175f0:	3408      	adds	r4, #8
900175f2:	4618      	mov	r0, r3
900175f4:	4611      	mov	r1, r2
900175f6:	e724      	b.n	90017442 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
900175f8:	4299      	cmp	r1, r3
900175fa:	d927      	bls.n	9001764c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
900175fc:	f1a3 0210 	sub.w	r2, r3, #16
90017600:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
90017604:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
90017608:	45ac      	cmp	ip, r5
9001760a:	db06      	blt.n	9001761a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
9001760c:	d11c      	bne.n	90017648 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
9001760e:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
90017612:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
90017616:	42ae      	cmp	r6, r5
90017618:	da16      	bge.n	90017648 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
9001761a:	4615      	mov	r5, r2
9001761c:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
90017620:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
90017624:	3a08      	subs	r2, #8
90017626:	f855 6f08 	ldr.w	r6, [r5, #8]!
9001762a:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
9001762e:	6196      	str	r6, [r2, #24]
90017630:	42a8      	cmp	r0, r5
90017632:	686e      	ldr	r6, [r5, #4]
90017634:	f8a2 9010 	strh.w	r9, [r2, #16]
90017638:	61d6      	str	r6, [r2, #28]
9001763a:	f8a2 c012 	strh.w	ip, [r2, #18]
9001763e:	f8a2 8014 	strh.w	r8, [r2, #20]
90017642:	f8a2 e016 	strh.w	lr, [r2, #22]
90017646:	d1db      	bne.n	90017600 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
90017648:	3308      	adds	r3, #8
9001764a:	e7d5      	b.n	900175f8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
9001764c:	42bc      	cmp	r4, r7
9001764e:	d903      	bls.n	90017658 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
90017650:	e954 0102 	ldrd	r0, r1, [r4, #-8]
90017654:	3c08      	subs	r4, #8
90017656:	e6f4      	b.n	90017442 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
90017658:	b050      	add	sp, #320	@ 0x140
9001765a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

9001765e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
9001765e:	b510      	push	{r4, lr}
90017660:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90017662:	4604      	mov	r4, r0
90017664:	07da      	lsls	r2, r3, #31
90017666:	d507      	bpl.n	90017678 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
90017668:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
9001766c:	f7ff fe8c 	bl	90017388 <_ZN8touchgfx7Outline6lineToEii>
90017670:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90017672:	f023 0301 	bic.w	r3, r3, #1
90017676:	6243      	str	r3, [r0, #36]	@ 0x24
90017678:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9001767a:	079b      	lsls	r3, r3, #30
9001767c:	d521      	bpl.n	900176c2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
9001767e:	6923      	ldr	r3, [r4, #16]
90017680:	88d9      	ldrh	r1, [r3, #6]
90017682:	889a      	ldrh	r2, [r3, #4]
90017684:	430a      	orrs	r2, r1
90017686:	d010      	beq.n	900176aa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90017688:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
9001768c:	2a00      	cmp	r2, #0
9001768e:	db0c      	blt.n	900176aa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90017690:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90017692:	428a      	cmp	r2, r1
90017694:	da09      	bge.n	900176aa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90017696:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
9001769a:	4291      	cmp	r1, r2
9001769c:	f102 0201 	add.w	r2, r2, #1
900176a0:	bf88      	it	hi
900176a2:	3308      	addhi	r3, #8
900176a4:	60a2      	str	r2, [r4, #8]
900176a6:	bf88      	it	hi
900176a8:	6123      	strhi	r3, [r4, #16]
900176aa:	68a1      	ldr	r1, [r4, #8]
900176ac:	b129      	cbz	r1, 900176ba <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
900176ae:	6863      	ldr	r3, [r4, #4]
900176b0:	4299      	cmp	r1, r3
900176b2:	d802      	bhi.n	900176ba <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
900176b4:	68e0      	ldr	r0, [r4, #12]
900176b6:	f7ff febd 	bl	90017434 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
900176ba:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900176bc:	f023 0302 	bic.w	r3, r3, #2
900176c0:	6263      	str	r3, [r4, #36]	@ 0x24
900176c2:	68e0      	ldr	r0, [r4, #12]
900176c4:	bd10      	pop	{r4, pc}
	...

900176c8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
900176c8:	4b01      	ldr	r3, [pc, #4]	@ (900176d0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
900176ca:	6818      	ldr	r0, [r3, #0]
900176cc:	4770      	bx	lr
900176ce:	bf00      	nop
900176d0:	24021c14 	.word	0x24021c14

900176d4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
900176d4:	4b01      	ldr	r3, [pc, #4]	@ (900176dc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
900176d6:	6818      	ldr	r0, [r3, #0]
900176d8:	4770      	bx	lr
900176da:	bf00      	nop
900176dc:	24021c18 	.word	0x24021c18

900176e0 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
900176e0:	b510      	push	{r4, lr}
900176e2:	6803      	ldr	r3, [r0, #0]
900176e4:	460c      	mov	r4, r1
900176e6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900176e8:	4798      	blx	r3
900176ea:	1b03      	subs	r3, r0, r4
900176ec:	4258      	negs	r0, r3
900176ee:	4158      	adcs	r0, r3
900176f0:	bd10      	pop	{r4, pc}
	...

900176f4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
900176f4:	4b01      	ldr	r3, [pc, #4]	@ (900176fc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
900176f6:	6019      	str	r1, [r3, #0]
900176f8:	4770      	bx	lr
900176fa:	bf00      	nop
900176fc:	24021c1c 	.word	0x24021c1c

90017700 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90017700:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017704:	4696      	mov	lr, r2
90017706:	b097      	sub	sp, #92	@ 0x5c
90017708:	4605      	mov	r5, r0
9001770a:	4614      	mov	r4, r2
9001770c:	460e      	mov	r6, r1
9001770e:	461f      	mov	r7, r3
90017710:	f10d 0c1c 	add.w	ip, sp, #28
90017714:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
90017718:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
9001771c:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
90017720:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90017724:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90017728:	f8de 3000 	ldr.w	r3, [lr]
9001772c:	f104 0e14 	add.w	lr, r4, #20
90017730:	f8cc 3000 	str.w	r3, [ip]
90017734:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90017738:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
9001773c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90017740:	f8de 3000 	ldr.w	r3, [lr]
90017744:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
90017748:	f8cc 3000 	str.w	r3, [ip]
9001774c:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
90017750:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90017754:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90017758:	f8de 3000 	ldr.w	r3, [lr]
9001775c:	4631      	mov	r1, r6
9001775e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90017760:	4628      	mov	r0, r5
90017762:	f8cc 3000 	str.w	r3, [ip]
90017766:	682b      	ldr	r3, [r5, #0]
90017768:	9201      	str	r2, [sp, #4]
9001776a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
9001776c:	f8cd 8008 	str.w	r8, [sp, #8]
90017770:	9200      	str	r2, [sp, #0]
90017772:	aa07      	add	r2, sp, #28
90017774:	e9cd 9a03 	strd	r9, sl, [sp, #12]
90017778:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
9001777c:	463b      	mov	r3, r7
9001777e:	47d8      	blx	fp
90017780:	46a6      	mov	lr, r4
90017782:	f10d 0c1c 	add.w	ip, sp, #28
90017786:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
9001778a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
9001778e:	f8de 3000 	ldr.w	r3, [lr]
90017792:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
90017796:	343c      	adds	r4, #60	@ 0x3c
90017798:	f8cc 3000 	str.w	r3, [ip]
9001779c:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
900177a0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900177a4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900177a8:	f8de 3000 	ldr.w	r3, [lr]
900177ac:	f8cc 3000 	str.w	r3, [ip]
900177b0:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
900177b4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
900177b6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900177ba:	6823      	ldr	r3, [r4, #0]
900177bc:	4631      	mov	r1, r6
900177be:	4628      	mov	r0, r5
900177c0:	f8cc 3000 	str.w	r3, [ip]
900177c4:	682b      	ldr	r3, [r5, #0]
900177c6:	e9cd 9a03 	strd	r9, sl, [sp, #12]
900177ca:	9a21      	ldr	r2, [sp, #132]	@ 0x84
900177cc:	f8cd 8008 	str.w	r8, [sp, #8]
900177d0:	9201      	str	r2, [sp, #4]
900177d2:	9a20      	ldr	r2, [sp, #128]	@ 0x80
900177d4:	9200      	str	r2, [sp, #0]
900177d6:	aa07      	add	r2, sp, #28
900177d8:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
900177da:	463b      	mov	r3, r7
900177dc:	47a0      	blx	r4
900177de:	b017      	add	sp, #92	@ 0x5c
900177e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900177e4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
900177e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900177e8:	b08d      	sub	sp, #52	@ 0x34
900177ea:	4688      	mov	r8, r1
900177ec:	f8d3 c000 	ldr.w	ip, [r3]
900177f0:	9916      	ldr	r1, [sp, #88]	@ 0x58
900177f2:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
900177f6:	680f      	ldr	r7, [r1, #0]
900177f8:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
900177fc:	eba7 070c 	sub.w	r7, r7, ip
90017800:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
90017804:	edd3 6a07 	vldr	s13, [r3, #28]
90017808:	42bc      	cmp	r4, r7
9001780a:	9918      	ldr	r1, [sp, #96]	@ 0x60
9001780c:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
90017810:	bfa8      	it	ge
90017812:	463c      	movge	r4, r7
90017814:	f9b1 9000 	ldrsh.w	r9, [r1]
90017818:	f9ba 1000 	ldrsh.w	r1, [sl]
9001781c:	ee07 4a90 	vmov	s15, r4
90017820:	eb09 0e0c 	add.w	lr, r9, ip
90017824:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
90017828:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
9001782c:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
90017830:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
90017834:	4571      	cmp	r1, lr
90017836:	ee25 4a04 	vmul.f32	s8, s10, s8
9001783a:	ee65 4a24 	vmul.f32	s9, s10, s9
9001783e:	ee25 5a27 	vmul.f32	s10, s10, s15
90017842:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
90017846:	ee71 0aa4 	vadd.f32	s1, s3, s9
9001784a:	ee32 1a05 	vadd.f32	s2, s4, s10
9001784e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
90017852:	ee36 0a84 	vadd.f32	s0, s13, s8
90017856:	ee61 1a87 	vmul.f32	s3, s3, s14
9001785a:	ee22 2a07 	vmul.f32	s4, s4, s14
9001785e:	f340 808c 	ble.w	9001797a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
90017862:	eba1 060e 	sub.w	r6, r1, lr
90017866:	fb96 f5f4 	sdiv	r5, r6, r4
9001786a:	ee07 5a10 	vmov	s14, r5
9001786e:	2d00      	cmp	r5, #0
90017870:	fb04 6615 	mls	r6, r4, r5, r6
90017874:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90017878:	eea7 0a04 	vfma.f32	s0, s14, s8
9001787c:	eee7 0a24 	vfma.f32	s1, s14, s9
90017880:	eea7 1a05 	vfma.f32	s2, s14, s10
90017884:	dd12      	ble.n	900178ac <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
90017886:	ee70 6a44 	vsub.f32	s13, s0, s8
9001788a:	ee70 1ae4 	vsub.f32	s3, s1, s9
9001788e:	ee31 2a45 	vsub.f32	s4, s2, s10
90017892:	eef5 6a40 	vcmp.f32	s13, #0.0
90017896:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001789a:	bf14      	ite	ne
9001789c:	ee87 7aa6 	vdivne.f32	s14, s15, s13
900178a0:	eeb0 7a67 	vmoveq.f32	s14, s15
900178a4:	ee61 1a87 	vmul.f32	s3, s3, s14
900178a8:	ee22 2a07 	vmul.f32	s4, s4, s14
900178ac:	fb05 f204 	mul.w	r2, r5, r4
900178b0:	1abf      	subs	r7, r7, r2
900178b2:	4494      	add	ip, r2
900178b4:	f8ba 2004 	ldrh.w	r2, [sl, #4]
900178b8:	4411      	add	r1, r2
900178ba:	eb09 020c 	add.w	r2, r9, ip
900178be:	b209      	sxth	r1, r1
900178c0:	443a      	add	r2, r7
900178c2:	428a      	cmp	r2, r1
900178c4:	bfc4      	itt	gt
900178c6:	eba1 0209 	subgt.w	r2, r1, r9
900178ca:	eba2 070c 	subgt.w	r7, r2, ip
900178ce:	2f00      	cmp	r7, #0
900178d0:	dd50      	ble.n	90017974 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
900178d2:	fb97 f1f4 	sdiv	r1, r7, r4
900178d6:	fb04 7211 	mls	r2, r4, r1, r7
900178da:	b90a      	cbnz	r2, 900178e0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
900178dc:	3901      	subs	r1, #1
900178de:	4622      	mov	r2, r4
900178e0:	eec7 3a80 	vdiv.f32	s7, s15, s0
900178e4:	6840      	ldr	r0, [r0, #4]
900178e6:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
900178ea:	44b6      	add	lr, r6
900178ec:	f8d0 a000 	ldr.w	sl, [r0]
900178f0:	2900      	cmp	r1, #0
900178f2:	bfcc      	ite	gt
900178f4:	46a1      	movgt	r9, r4
900178f6:	4691      	movle	r9, r2
900178f8:	900b      	str	r0, [sp, #44]	@ 0x2c
900178fa:	9817      	ldr	r0, [sp, #92]	@ 0x5c
900178fc:	fb04 e505 	mla	r5, r4, r5, lr
90017900:	eef0 6a42 	vmov.f32	s13, s4
90017904:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
90017908:	9008      	str	r0, [sp, #32]
9001790a:	eeb0 7a61 	vmov.f32	s14, s3
9001790e:	9818      	ldr	r0, [sp, #96]	@ 0x60
90017910:	695b      	ldr	r3, [r3, #20]
90017912:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90017916:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
9001791a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
9001791e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90017920:	445b      	add	r3, fp
90017922:	9307      	str	r3, [sp, #28]
90017924:	ee16 3a90 	vmov	r3, s13
90017928:	e9cd 8505 	strd	r8, r5, [sp, #20]
9001792c:	ee60 2aa3 	vmul.f32	s5, s1, s7
90017930:	ee21 3a23 	vmul.f32	s6, s2, s7
90017934:	ee72 7ae1 	vsub.f32	s15, s5, s3
90017938:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
9001793c:	ee17 7a90 	vmov	r7, s15
90017940:	ee73 7a42 	vsub.f32	s15, s6, s4
90017944:	fb97 f7f4 	sdiv	r7, r7, r4
90017948:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
9001794c:	ee17 ca90 	vmov	ip, s15
90017950:	fb9c fcf4 	sdiv	ip, ip, r4
90017954:	fb0c 3306 	mla	r3, ip, r6, r3
90017958:	9302      	str	r3, [sp, #8]
9001795a:	ee17 3a10 	vmov	r3, s14
9001795e:	e9cd 7c03 	strd	r7, ip, [sp, #12]
90017962:	fb07 3706 	mla	r7, r7, r6, r3
90017966:	eba9 0306 	sub.w	r3, r9, r6
9001796a:	e9cd 4700 	strd	r4, r7, [sp]
9001796e:	f8da 4008 	ldr.w	r4, [sl, #8]
90017972:	47a0      	blx	r4
90017974:	b00d      	add	sp, #52	@ 0x34
90017976:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001797a:	2500      	movs	r5, #0
9001797c:	462e      	mov	r6, r5
9001797e:	e799      	b.n	900178b4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

90017980 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90017980:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017984:	b0db      	sub	sp, #364	@ 0x16c
90017986:	461d      	mov	r5, r3
90017988:	4614      	mov	r4, r2
9001798a:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
9001798e:	910f      	str	r1, [sp, #60]	@ 0x3c
90017990:	4629      	mov	r1, r5
90017992:	930a      	str	r3, [sp, #40]	@ 0x28
90017994:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
90017998:	9009      	str	r0, [sp, #36]	@ 0x24
9001799a:	930b      	str	r3, [sp, #44]	@ 0x2c
9001799c:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
900179a0:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
900179a4:	9310      	str	r3, [sp, #64]	@ 0x40
900179a6:	6803      	ldr	r3, [r0, #0]
900179a8:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
900179aa:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
900179ae:	47b8      	blx	r7
900179b0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900179b2:	6058      	str	r0, [r3, #4]
900179b4:	2800      	cmp	r0, #0
900179b6:	f000 83a1 	beq.w	900180fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900179ba:	682b      	ldr	r3, [r5, #0]
900179bc:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
900179c0:	ed94 7a02 	vldr	s14, [r4, #8]
900179c4:	9314      	str	r3, [sp, #80]	@ 0x50
900179c6:	686b      	ldr	r3, [r5, #4]
900179c8:	eeb4 7ae7 	vcmpe.f32	s14, s15
900179cc:	9315      	str	r3, [sp, #84]	@ 0x54
900179ce:	4bc1      	ldr	r3, [pc, #772]	@ (90017cd4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
900179d0:	7819      	ldrb	r1, [r3, #0]
900179d2:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
900179d6:	2900      	cmp	r1, #0
900179d8:	bf16      	itet	ne
900179da:	4619      	movne	r1, r3
900179dc:	4611      	moveq	r1, r2
900179de:	4613      	movne	r3, r2
900179e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900179e4:	9116      	str	r1, [sp, #88]	@ 0x58
900179e6:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
900179ea:	f240 8387 	bls.w	900180fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900179ee:	ed94 7a07 	vldr	s14, [r4, #28]
900179f2:	eeb4 7ae7 	vcmpe.f32	s14, s15
900179f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900179fa:	f240 837f 	bls.w	900180fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900179fe:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
90017a02:	eeb4 7ae7 	vcmpe.f32	s14, s15
90017a06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90017a0a:	f240 8377 	bls.w	900180fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90017a0e:	6822      	ldr	r2, [r4, #0]
90017a10:	4bb1      	ldr	r3, [pc, #708]	@ (90017cd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
90017a12:	429a      	cmp	r2, r3
90017a14:	f2c0 8372 	blt.w	900180fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90017a18:	49b0      	ldr	r1, [pc, #704]	@ (90017cdc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
90017a1a:	6963      	ldr	r3, [r4, #20]
90017a1c:	428a      	cmp	r2, r1
90017a1e:	f300 836d 	bgt.w	900180fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90017a22:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
90017a26:	48ae      	ldr	r0, [pc, #696]	@ (90017ce0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
90017a28:	33ff      	adds	r3, #255	@ 0xff
90017a2a:	4283      	cmp	r3, r0
90017a2c:	f200 8366 	bhi.w	900180fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90017a30:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90017a32:	4dac      	ldr	r5, [pc, #688]	@ (90017ce4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
90017a34:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
90017a38:	33ff      	adds	r3, #255	@ 0xff
90017a3a:	42ab      	cmp	r3, r5
90017a3c:	f200 835e 	bhi.w	900180fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90017a40:	6862      	ldr	r2, [r4, #4]
90017a42:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
90017a46:	33ff      	adds	r3, #255	@ 0xff
90017a48:	4283      	cmp	r3, r0
90017a4a:	f200 8357 	bhi.w	900180fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90017a4e:	69a1      	ldr	r1, [r4, #24]
90017a50:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
90017a54:	33ff      	adds	r3, #255	@ 0xff
90017a56:	4283      	cmp	r3, r0
90017a58:	f200 8350 	bhi.w	900180fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90017a5c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90017a5e:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
90017a62:	30ff      	adds	r0, #255	@ 0xff
90017a64:	42a8      	cmp	r0, r5
90017a66:	f200 8349 	bhi.w	900180fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90017a6a:	428a      	cmp	r2, r1
90017a6c:	f280 8110 	bge.w	90017c90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
90017a70:	429a      	cmp	r2, r3
90017a72:	f300 8119 	bgt.w	90017ca8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
90017a76:	4299      	cmp	r1, r3
90017a78:	f280 811d 	bge.w	90017cb6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
90017a7c:	2502      	movs	r5, #2
90017a7e:	2701      	movs	r7, #1
90017a80:	46a9      	mov	r9, r5
90017a82:	46b8      	mov	r8, r7
90017a84:	f04f 0a00 	mov.w	sl, #0
90017a88:	4621      	mov	r1, r4
90017a8a:	a849      	add	r0, sp, #292	@ 0x124
90017a8c:	f004 fadc 	bl	9001c048 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
90017a90:	4622      	mov	r2, r4
90017a92:	4653      	mov	r3, sl
90017a94:	a949      	add	r1, sp, #292	@ 0x124
90017a96:	f8cd 9000 	str.w	r9, [sp]
90017a9a:	a819      	add	r0, sp, #100	@ 0x64
90017a9c:	f004 fc04 	bl	9001c2a8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90017aa0:	4622      	mov	r2, r4
90017aa2:	4653      	mov	r3, sl
90017aa4:	a949      	add	r1, sp, #292	@ 0x124
90017aa6:	f8cd 8000 	str.w	r8, [sp]
90017aaa:	a829      	add	r0, sp, #164	@ 0xa4
90017aac:	f004 fbfc 	bl	9001c2a8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90017ab0:	4643      	mov	r3, r8
90017ab2:	4622      	mov	r2, r4
90017ab4:	a949      	add	r1, sp, #292	@ 0x124
90017ab6:	f8cd 9000 	str.w	r9, [sp]
90017aba:	a839      	add	r0, sp, #228	@ 0xe4
90017abc:	f004 fbf4 	bl	9001c2a8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90017ac0:	42af      	cmp	r7, r5
90017ac2:	af12      	add	r7, sp, #72	@ 0x48
90017ac4:	bfb7      	itett	lt
90017ac6:	2300      	movlt	r3, #0
90017ac8:	2301      	movge	r3, #1
90017aca:	ad29      	addlt	r5, sp, #164	@ 0xa4
90017acc:	ac19      	addlt	r4, sp, #100	@ 0x64
90017ace:	bfb1      	iteee	lt
90017ad0:	930e      	strlt	r3, [sp, #56]	@ 0x38
90017ad2:	ad19      	addge	r5, sp, #100	@ 0x64
90017ad4:	930e      	strge	r3, [sp, #56]	@ 0x38
90017ad6:	ac29      	addge	r4, sp, #164	@ 0xa4
90017ad8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90017ada:	e893 0003 	ldmia.w	r3, {r0, r1}
90017ade:	e887 0003 	stmia.w	r7, {r0, r1}
90017ae2:	b928      	cbnz	r0, 90017af0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
90017ae4:	4b80      	ldr	r3, [pc, #512]	@ (90017ce8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
90017ae6:	6818      	ldr	r0, [r3, #0]
90017ae8:	6803      	ldr	r3, [r0, #0]
90017aea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90017aec:	4798      	blx	r3
90017aee:	6038      	str	r0, [r7, #0]
90017af0:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90017af2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90017af6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90017afa:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
90017afc:	930c      	str	r3, [sp, #48]	@ 0x30
90017afe:	990c      	ldr	r1, [sp, #48]	@ 0x30
90017b00:	6963      	ldr	r3, [r4, #20]
90017b02:	440b      	add	r3, r1
90017b04:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90017b08:	4408      	add	r0, r1
90017b0a:	b200      	sxth	r0, r0
90017b0c:	4283      	cmp	r3, r0
90017b0e:	900d      	str	r0, [sp, #52]	@ 0x34
90017b10:	f280 80dd 	bge.w	90017cce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
90017b14:	428b      	cmp	r3, r1
90017b16:	da08      	bge.n	90017b2a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90017b18:	2a00      	cmp	r2, #0
90017b1a:	dd06      	ble.n	90017b2a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90017b1c:	1acb      	subs	r3, r1, r3
90017b1e:	429a      	cmp	r2, r3
90017b20:	f2c0 80e4 	blt.w	90017cec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
90017b24:	2b00      	cmp	r3, #0
90017b26:	f300 80e2 	bgt.w	90017cee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
90017b2a:	6967      	ldr	r7, [r4, #20]
90017b2c:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
90017b30:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90017b32:	443b      	add	r3, r7
90017b34:	461f      	mov	r7, r3
90017b36:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90017b38:	1bdf      	subs	r7, r3, r7
90017b3a:	4297      	cmp	r7, r2
90017b3c:	bfa8      	it	ge
90017b3e:	4617      	movge	r7, r2
90017b40:	2f00      	cmp	r7, #0
90017b42:	f340 8166 	ble.w	90017e12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
90017b46:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90017b48:	6829      	ldr	r1, [r5, #0]
90017b4a:	f9b3 2000 	ldrsh.w	r2, [r3]
90017b4e:	f9bb 3000 	ldrsh.w	r3, [fp]
90017b52:	4411      	add	r1, r2
90017b54:	6820      	ldr	r0, [r4, #0]
90017b56:	4299      	cmp	r1, r3
90017b58:	dd1a      	ble.n	90017b90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90017b5a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90017b5e:	4402      	add	r2, r0
90017b60:	440b      	add	r3, r1
90017b62:	b21b      	sxth	r3, r3
90017b64:	429a      	cmp	r2, r3
90017b66:	dc13      	bgt.n	90017b90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90017b68:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90017b6a:	a912      	add	r1, sp, #72	@ 0x48
90017b6c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90017b6e:	9809      	ldr	r0, [sp, #36]	@ 0x24
90017b70:	681b      	ldr	r3, [r3, #0]
90017b72:	9206      	str	r2, [sp, #24]
90017b74:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90017b76:	9500      	str	r5, [sp, #0]
90017b78:	9205      	str	r2, [sp, #20]
90017b7a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90017b7c:	e9cd b203 	strd	fp, r2, [sp, #12]
90017b80:	9a64      	ldr	r2, [sp, #400]	@ 0x190
90017b82:	e9cd 8201 	strd	r8, r2, [sp, #4]
90017b86:	aa49      	add	r2, sp, #292	@ 0x124
90017b88:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
90017b8c:	4623      	mov	r3, r4
90017b8e:	47c8      	blx	r9
90017b90:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
90017b94:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
90017b98:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
90017b9c:	ee37 7a27 	vadd.f32	s14, s14, s15
90017ba0:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
90017ba4:	68a1      	ldr	r1, [r4, #8]
90017ba6:	ee77 7aa6 	vadd.f32	s15, s15, s13
90017baa:	ed94 6a08 	vldr	s12, [r4, #32]
90017bae:	edd4 6a07 	vldr	s13, [r4, #28]
90017bb2:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90017bb6:	ee76 6a86 	vadd.f32	s13, s13, s12
90017bba:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90017bbe:	e9d4 2300 	ldrd	r2, r3, [r4]
90017bc2:	edc4 6a07 	vstr	s13, [r4, #28]
90017bc6:	441a      	add	r2, r3
90017bc8:	6963      	ldr	r3, [r4, #20]
90017bca:	3301      	adds	r3, #1
90017bcc:	6022      	str	r2, [r4, #0]
90017bce:	6163      	str	r3, [r4, #20]
90017bd0:	69a3      	ldr	r3, [r4, #24]
90017bd2:	3b01      	subs	r3, #1
90017bd4:	61a3      	str	r3, [r4, #24]
90017bd6:	6923      	ldr	r3, [r4, #16]
90017bd8:	440b      	add	r3, r1
90017bda:	68e1      	ldr	r1, [r4, #12]
90017bdc:	428b      	cmp	r3, r1
90017bde:	6123      	str	r3, [r4, #16]
90017be0:	db15      	blt.n	90017c0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
90017be2:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
90017be6:	3201      	adds	r2, #1
90017be8:	1a5b      	subs	r3, r3, r1
90017bea:	ee76 6a26 	vadd.f32	s13, s12, s13
90017bee:	6022      	str	r2, [r4, #0]
90017bf0:	6123      	str	r3, [r4, #16]
90017bf2:	edc4 6a07 	vstr	s13, [r4, #28]
90017bf6:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
90017bfa:	ee36 7a87 	vadd.f32	s14, s13, s14
90017bfe:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90017c02:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
90017c06:	ee77 7a27 	vadd.f32	s15, s14, s15
90017c0a:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90017c0e:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
90017c12:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
90017c16:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
90017c1a:	ee37 7a27 	vadd.f32	s14, s14, s15
90017c1e:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
90017c22:	68a9      	ldr	r1, [r5, #8]
90017c24:	ee77 7aa6 	vadd.f32	s15, s15, s13
90017c28:	ed95 6a08 	vldr	s12, [r5, #32]
90017c2c:	edd5 6a07 	vldr	s13, [r5, #28]
90017c30:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90017c34:	ee76 6a86 	vadd.f32	s13, s13, s12
90017c38:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90017c3c:	e9d5 2300 	ldrd	r2, r3, [r5]
90017c40:	edc5 6a07 	vstr	s13, [r5, #28]
90017c44:	441a      	add	r2, r3
90017c46:	696b      	ldr	r3, [r5, #20]
90017c48:	3301      	adds	r3, #1
90017c4a:	602a      	str	r2, [r5, #0]
90017c4c:	616b      	str	r3, [r5, #20]
90017c4e:	69ab      	ldr	r3, [r5, #24]
90017c50:	3b01      	subs	r3, #1
90017c52:	61ab      	str	r3, [r5, #24]
90017c54:	692b      	ldr	r3, [r5, #16]
90017c56:	440b      	add	r3, r1
90017c58:	68e9      	ldr	r1, [r5, #12]
90017c5a:	428b      	cmp	r3, r1
90017c5c:	612b      	str	r3, [r5, #16]
90017c5e:	db15      	blt.n	90017c8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
90017c60:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
90017c64:	3201      	adds	r2, #1
90017c66:	1a5b      	subs	r3, r3, r1
90017c68:	ee76 6a26 	vadd.f32	s13, s12, s13
90017c6c:	602a      	str	r2, [r5, #0]
90017c6e:	612b      	str	r3, [r5, #16]
90017c70:	edc5 6a07 	vstr	s13, [r5, #28]
90017c74:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
90017c78:	ee36 7a87 	vadd.f32	s14, s13, s14
90017c7c:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90017c80:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
90017c84:	ee77 7a27 	vadd.f32	s15, s14, s15
90017c88:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90017c8c:	3f01      	subs	r7, #1
90017c8e:	e757      	b.n	90017b40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
90017c90:	4299      	cmp	r1, r3
90017c92:	dc13      	bgt.n	90017cbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
90017c94:	429a      	cmp	r2, r3
90017c96:	da14      	bge.n	90017cc2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
90017c98:	2502      	movs	r5, #2
90017c9a:	2703      	movs	r7, #3
90017c9c:	f04f 0800 	mov.w	r8, #0
90017ca0:	46a9      	mov	r9, r5
90017ca2:	f04f 0a01 	mov.w	sl, #1
90017ca6:	e6ef      	b.n	90017a88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90017ca8:	2501      	movs	r5, #1
90017caa:	2700      	movs	r7, #0
90017cac:	46a9      	mov	r9, r5
90017cae:	46b8      	mov	r8, r7
90017cb0:	f04f 0a02 	mov.w	sl, #2
90017cb4:	e6e8      	b.n	90017a88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90017cb6:	2501      	movs	r5, #1
90017cb8:	2702      	movs	r7, #2
90017cba:	e6e1      	b.n	90017a80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
90017cbc:	2500      	movs	r5, #0
90017cbe:	2701      	movs	r7, #1
90017cc0:	e7f4      	b.n	90017cac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
90017cc2:	2702      	movs	r7, #2
90017cc4:	2503      	movs	r5, #3
90017cc6:	f04f 0900 	mov.w	r9, #0
90017cca:	46b8      	mov	r8, r7
90017ccc:	e7e9      	b.n	90017ca2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
90017cce:	4613      	mov	r3, r2
90017cd0:	e728      	b.n	90017b24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
90017cd2:	bf00      	nop
90017cd4:	24021c04 	.word	0x24021c04
90017cd8:	fffd8f01 	.word	0xfffd8f01
90017cdc:	00027100 	.word	0x00027100
90017ce0:	0004e1ff 	.word	0x0004e1ff
90017ce4:	0004e1fe 	.word	0x0004e1fe
90017ce8:	24021c0c 	.word	0x24021c0c
90017cec:	4613      	mov	r3, r2
90017cee:	992b      	ldr	r1, [sp, #172]	@ 0xac
90017cf0:	469e      	mov	lr, r3
90017cf2:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
90017cf4:	469c      	mov	ip, r3
90017cf6:	9111      	str	r1, [sp, #68]	@ 0x44
90017cf8:	f04f 0900 	mov.w	r9, #0
90017cfc:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
90017d00:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
90017d04:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
90017d08:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
90017d0c:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
90017d10:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
90017d14:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
90017d18:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
90017d1c:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
90017d20:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
90017d24:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
90017d28:	f1bc 0f00 	cmp.w	ip, #0
90017d2c:	d147      	bne.n	90017dbe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
90017d2e:	eb03 0c07 	add.w	ip, r3, r7
90017d32:	1ad7      	subs	r7, r2, r3
90017d34:	f1b9 0f00 	cmp.w	r9, #0
90017d38:	d009      	beq.n	90017d4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
90017d3a:	9029      	str	r0, [sp, #164]	@ 0xa4
90017d3c:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
90017d40:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
90017d44:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
90017d48:	912d      	str	r1, [sp, #180]	@ 0xb4
90017d4a:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
90017d4e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
90017d50:	f04f 0800 	mov.w	r8, #0
90017d54:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
90017d58:	9111      	str	r1, [sp, #68]	@ 0x44
90017d5a:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
90017d5e:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
90017d62:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
90017d66:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
90017d6a:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
90017d6e:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
90017d72:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
90017d76:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
90017d7a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
90017d7e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
90017d82:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
90017d86:	f1be 0f00 	cmp.w	lr, #0
90017d8a:	d031      	beq.n	90017df0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
90017d8c:	9e11      	ldr	r6, [sp, #68]	@ 0x44
90017d8e:	4450      	add	r0, sl
90017d90:	ee76 6aa4 	vadd.f32	s13, s13, s9
90017d94:	4431      	add	r1, r6
90017d96:	ee37 7a04 	vadd.f32	s14, s14, s8
90017d9a:	ee77 7aa3 	vadd.f32	s15, s15, s7
90017d9e:	4549      	cmp	r1, r9
90017da0:	db08      	blt.n	90017db4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
90017da2:	ee77 7a85 	vadd.f32	s15, s15, s10
90017da6:	3001      	adds	r0, #1
90017da8:	ee76 6aa5 	vadd.f32	s13, s13, s11
90017dac:	eba1 0109 	sub.w	r1, r1, r9
90017db0:	ee37 7a06 	vadd.f32	s14, s14, s12
90017db4:	f10e 3eff 	add.w	lr, lr, #4294967295
90017db8:	f04f 0801 	mov.w	r8, #1
90017dbc:	e7e3      	b.n	90017d86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
90017dbe:	9e11      	ldr	r6, [sp, #68]	@ 0x44
90017dc0:	4450      	add	r0, sl
90017dc2:	ee37 7a24 	vadd.f32	s14, s14, s9
90017dc6:	4431      	add	r1, r6
90017dc8:	ee77 7a84 	vadd.f32	s15, s15, s8
90017dcc:	ee76 6aa3 	vadd.f32	s13, s13, s7
90017dd0:	4541      	cmp	r1, r8
90017dd2:	db08      	blt.n	90017de6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
90017dd4:	ee76 6a85 	vadd.f32	s13, s13, s10
90017dd8:	3001      	adds	r0, #1
90017dda:	ee37 7a25 	vadd.f32	s14, s14, s11
90017dde:	eba1 0108 	sub.w	r1, r1, r8
90017de2:	ee77 7a86 	vadd.f32	s15, s15, s12
90017de6:	f10c 3cff 	add.w	ip, ip, #4294967295
90017dea:	f04f 0901 	mov.w	r9, #1
90017dee:	e79b      	b.n	90017d28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
90017df0:	449c      	add	ip, r3
90017df2:	1aff      	subs	r7, r7, r3
90017df4:	f1b8 0f00 	cmp.w	r8, #0
90017df8:	d009      	beq.n	90017e0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
90017dfa:	9019      	str	r0, [sp, #100]	@ 0x64
90017dfc:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
90017e00:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
90017e04:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
90017e08:	911d      	str	r1, [sp, #116]	@ 0x74
90017e0a:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
90017e0e:	1ad2      	subs	r2, r2, r3
90017e10:	e68b      	b.n	90017b2a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90017e12:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90017e14:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
90017e16:	2b00      	cmp	r3, #0
90017e18:	f000 80d1 	beq.w	90017fbe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
90017e1c:	ad19      	add	r5, sp, #100	@ 0x64
90017e1e:	ac39      	add	r4, sp, #228	@ 0xe4
90017e20:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90017e22:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90017e26:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90017e2a:	930c      	str	r3, [sp, #48]	@ 0x30
90017e2c:	990c      	ldr	r1, [sp, #48]	@ 0x30
90017e2e:	6963      	ldr	r3, [r4, #20]
90017e30:	440b      	add	r3, r1
90017e32:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90017e36:	4408      	add	r0, r1
90017e38:	b200      	sxth	r0, r0
90017e3a:	4283      	cmp	r3, r0
90017e3c:	900d      	str	r0, [sp, #52]	@ 0x34
90017e3e:	f280 80c1 	bge.w	90017fc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
90017e42:	428b      	cmp	r3, r1
90017e44:	da08      	bge.n	90017e58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90017e46:	2a00      	cmp	r2, #0
90017e48:	dd06      	ble.n	90017e58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90017e4a:	1acb      	subs	r3, r1, r3
90017e4c:	429a      	cmp	r2, r3
90017e4e:	f2c0 80bb 	blt.w	90017fc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
90017e52:	2b00      	cmp	r3, #0
90017e54:	f300 80b9 	bgt.w	90017fca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
90017e58:	6967      	ldr	r7, [r4, #20]
90017e5a:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
90017e5e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90017e60:	443b      	add	r3, r7
90017e62:	461f      	mov	r7, r3
90017e64:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90017e66:	1bdf      	subs	r7, r3, r7
90017e68:	4297      	cmp	r7, r2
90017e6a:	bfa8      	it	ge
90017e6c:	4617      	movge	r7, r2
90017e6e:	2f00      	cmp	r7, #0
90017e70:	f340 813c 	ble.w	900180ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
90017e74:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90017e76:	6829      	ldr	r1, [r5, #0]
90017e78:	f9b3 2000 	ldrsh.w	r2, [r3]
90017e7c:	f9bb 3000 	ldrsh.w	r3, [fp]
90017e80:	4411      	add	r1, r2
90017e82:	6820      	ldr	r0, [r4, #0]
90017e84:	4299      	cmp	r1, r3
90017e86:	dd1a      	ble.n	90017ebe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90017e88:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90017e8c:	4402      	add	r2, r0
90017e8e:	440b      	add	r3, r1
90017e90:	b21b      	sxth	r3, r3
90017e92:	429a      	cmp	r2, r3
90017e94:	dc13      	bgt.n	90017ebe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90017e96:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90017e98:	a912      	add	r1, sp, #72	@ 0x48
90017e9a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90017e9c:	9809      	ldr	r0, [sp, #36]	@ 0x24
90017e9e:	681b      	ldr	r3, [r3, #0]
90017ea0:	9206      	str	r2, [sp, #24]
90017ea2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90017ea4:	9500      	str	r5, [sp, #0]
90017ea6:	9205      	str	r2, [sp, #20]
90017ea8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90017eaa:	e9cd b203 	strd	fp, r2, [sp, #12]
90017eae:	9a64      	ldr	r2, [sp, #400]	@ 0x190
90017eb0:	e9cd 8201 	strd	r8, r2, [sp, #4]
90017eb4:	aa49      	add	r2, sp, #292	@ 0x124
90017eb6:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
90017eba:	4623      	mov	r3, r4
90017ebc:	47c8      	blx	r9
90017ebe:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
90017ec2:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
90017ec6:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
90017eca:	ee37 7a27 	vadd.f32	s14, s14, s15
90017ece:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
90017ed2:	68a1      	ldr	r1, [r4, #8]
90017ed4:	ee77 7aa6 	vadd.f32	s15, s15, s13
90017ed8:	ed94 6a08 	vldr	s12, [r4, #32]
90017edc:	edd4 6a07 	vldr	s13, [r4, #28]
90017ee0:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90017ee4:	ee76 6a86 	vadd.f32	s13, s13, s12
90017ee8:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90017eec:	e9d4 2300 	ldrd	r2, r3, [r4]
90017ef0:	edc4 6a07 	vstr	s13, [r4, #28]
90017ef4:	441a      	add	r2, r3
90017ef6:	6963      	ldr	r3, [r4, #20]
90017ef8:	3301      	adds	r3, #1
90017efa:	6022      	str	r2, [r4, #0]
90017efc:	6163      	str	r3, [r4, #20]
90017efe:	69a3      	ldr	r3, [r4, #24]
90017f00:	3b01      	subs	r3, #1
90017f02:	61a3      	str	r3, [r4, #24]
90017f04:	6923      	ldr	r3, [r4, #16]
90017f06:	440b      	add	r3, r1
90017f08:	68e1      	ldr	r1, [r4, #12]
90017f0a:	428b      	cmp	r3, r1
90017f0c:	6123      	str	r3, [r4, #16]
90017f0e:	db15      	blt.n	90017f3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
90017f10:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
90017f14:	3201      	adds	r2, #1
90017f16:	1a5b      	subs	r3, r3, r1
90017f18:	ee76 6a26 	vadd.f32	s13, s12, s13
90017f1c:	6022      	str	r2, [r4, #0]
90017f1e:	6123      	str	r3, [r4, #16]
90017f20:	edc4 6a07 	vstr	s13, [r4, #28]
90017f24:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
90017f28:	ee36 7a87 	vadd.f32	s14, s13, s14
90017f2c:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90017f30:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
90017f34:	ee77 7a27 	vadd.f32	s15, s14, s15
90017f38:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90017f3c:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
90017f40:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
90017f44:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
90017f48:	ee37 7a27 	vadd.f32	s14, s14, s15
90017f4c:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
90017f50:	68a9      	ldr	r1, [r5, #8]
90017f52:	ee77 7aa6 	vadd.f32	s15, s15, s13
90017f56:	ed95 6a08 	vldr	s12, [r5, #32]
90017f5a:	edd5 6a07 	vldr	s13, [r5, #28]
90017f5e:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90017f62:	ee76 6a86 	vadd.f32	s13, s13, s12
90017f66:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90017f6a:	e9d5 2300 	ldrd	r2, r3, [r5]
90017f6e:	edc5 6a07 	vstr	s13, [r5, #28]
90017f72:	441a      	add	r2, r3
90017f74:	696b      	ldr	r3, [r5, #20]
90017f76:	3301      	adds	r3, #1
90017f78:	602a      	str	r2, [r5, #0]
90017f7a:	616b      	str	r3, [r5, #20]
90017f7c:	69ab      	ldr	r3, [r5, #24]
90017f7e:	3b01      	subs	r3, #1
90017f80:	61ab      	str	r3, [r5, #24]
90017f82:	692b      	ldr	r3, [r5, #16]
90017f84:	440b      	add	r3, r1
90017f86:	68e9      	ldr	r1, [r5, #12]
90017f88:	428b      	cmp	r3, r1
90017f8a:	612b      	str	r3, [r5, #16]
90017f8c:	db15      	blt.n	90017fba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
90017f8e:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
90017f92:	3201      	adds	r2, #1
90017f94:	1a5b      	subs	r3, r3, r1
90017f96:	ee76 6a26 	vadd.f32	s13, s12, s13
90017f9a:	602a      	str	r2, [r5, #0]
90017f9c:	612b      	str	r3, [r5, #16]
90017f9e:	edc5 6a07 	vstr	s13, [r5, #28]
90017fa2:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
90017fa6:	ee36 7a87 	vadd.f32	s14, s13, s14
90017faa:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90017fae:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
90017fb2:	ee77 7a27 	vadd.f32	s15, s14, s15
90017fb6:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90017fba:	3f01      	subs	r7, #1
90017fbc:	e757      	b.n	90017e6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
90017fbe:	ad39      	add	r5, sp, #228	@ 0xe4
90017fc0:	ac19      	add	r4, sp, #100	@ 0x64
90017fc2:	e72d      	b.n	90017e20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
90017fc4:	4613      	mov	r3, r2
90017fc6:	e744      	b.n	90017e52 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
90017fc8:	4613      	mov	r3, r2
90017fca:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
90017fcc:	469e      	mov	lr, r3
90017fce:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
90017fd2:	461f      	mov	r7, r3
90017fd4:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
90017fd8:	f04f 0900 	mov.w	r9, #0
90017fdc:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
90017fe0:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
90017fe4:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
90017fe8:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
90017fec:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
90017ff0:	993d      	ldr	r1, [sp, #244]	@ 0xf4
90017ff2:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
90017ff6:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
90017ffa:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
90017ffe:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
90018002:	960e      	str	r6, [sp, #56]	@ 0x38
90018004:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
90018008:	2f00      	cmp	r7, #0
9001800a:	d146      	bne.n	9001809a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
9001800c:	449c      	add	ip, r3
9001800e:	1ad7      	subs	r7, r2, r3
90018010:	f1b9 0f00 	cmp.w	r9, #0
90018014:	d009      	beq.n	9001802a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
90018016:	9039      	str	r0, [sp, #228]	@ 0xe4
90018018:	913d      	str	r1, [sp, #244]	@ 0xf4
9001801a:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
9001801e:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
90018022:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
90018026:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
9001802a:	991b      	ldr	r1, [sp, #108]	@ 0x6c
9001802c:	f04f 0800 	mov.w	r8, #0
90018030:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
90018034:	910e      	str	r1, [sp, #56]	@ 0x38
90018036:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
9001803a:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
9001803e:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
90018042:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
90018046:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
9001804a:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
9001804e:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
90018052:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
90018056:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
9001805a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
9001805e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
90018062:	f1be 0f00 	cmp.w	lr, #0
90018066:	d030      	beq.n	900180ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
90018068:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
9001806a:	4450      	add	r0, sl
9001806c:	ee76 6aa4 	vadd.f32	s13, s13, s9
90018070:	4431      	add	r1, r6
90018072:	ee37 7a04 	vadd.f32	s14, s14, s8
90018076:	ee77 7aa3 	vadd.f32	s15, s15, s7
9001807a:	4549      	cmp	r1, r9
9001807c:	db08      	blt.n	90018090 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
9001807e:	ee77 7a85 	vadd.f32	s15, s15, s10
90018082:	3001      	adds	r0, #1
90018084:	ee76 6aa5 	vadd.f32	s13, s13, s11
90018088:	eba1 0109 	sub.w	r1, r1, r9
9001808c:	ee37 7a06 	vadd.f32	s14, s14, s12
90018090:	f10e 3eff 	add.w	lr, lr, #4294967295
90018094:	f04f 0801 	mov.w	r8, #1
90018098:	e7e3      	b.n	90018062 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
9001809a:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
9001809c:	4450      	add	r0, sl
9001809e:	ee37 7a24 	vadd.f32	s14, s14, s9
900180a2:	4431      	add	r1, r6
900180a4:	ee77 7a84 	vadd.f32	s15, s15, s8
900180a8:	ee76 6aa3 	vadd.f32	s13, s13, s7
900180ac:	4541      	cmp	r1, r8
900180ae:	db08      	blt.n	900180c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
900180b0:	ee76 6a85 	vadd.f32	s13, s13, s10
900180b4:	3001      	adds	r0, #1
900180b6:	ee37 7a25 	vadd.f32	s14, s14, s11
900180ba:	eba1 0108 	sub.w	r1, r1, r8
900180be:	ee77 7a86 	vadd.f32	s15, s15, s12
900180c2:	3f01      	subs	r7, #1
900180c4:	f04f 0901 	mov.w	r9, #1
900180c8:	e79e      	b.n	90018008 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
900180ca:	449c      	add	ip, r3
900180cc:	1aff      	subs	r7, r7, r3
900180ce:	f1b8 0f00 	cmp.w	r8, #0
900180d2:	d009      	beq.n	900180e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
900180d4:	9019      	str	r0, [sp, #100]	@ 0x64
900180d6:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
900180da:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
900180de:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
900180e2:	911d      	str	r1, [sp, #116]	@ 0x74
900180e4:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
900180e8:	1ad2      	subs	r2, r2, r3
900180ea:	e6b5      	b.n	90017e58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
900180ec:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900180ee:	681b      	ldr	r3, [r3, #0]
900180f0:	b923      	cbnz	r3, 900180fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900180f2:	4b04      	ldr	r3, [pc, #16]	@ (90018104 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
900180f4:	6818      	ldr	r0, [r3, #0]
900180f6:	6803      	ldr	r3, [r0, #0]
900180f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900180fa:	4798      	blx	r3
900180fc:	b05b      	add	sp, #364	@ 0x16c
900180fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018102:	bf00      	nop
90018104:	24021c0c 	.word	0x24021c0c

90018108 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
90018108:	b570      	push	{r4, r5, r6, lr}
9001810a:	4604      	mov	r4, r0
9001810c:	2500      	movs	r5, #0
9001810e:	9805      	ldr	r0, [sp, #20]
90018110:	f89d 601c 	ldrb.w	r6, [sp, #28]
90018114:	6061      	str	r1, [r4, #4]
90018116:	8263      	strh	r3, [r4, #18]
90018118:	f89d 1010 	ldrb.w	r1, [sp, #16]
9001811c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90018120:	8025      	strh	r5, [r4, #0]
90018122:	7221      	strb	r1, [r4, #8]
90018124:	7266      	strb	r6, [r4, #9]
90018126:	60e0      	str	r0, [r4, #12]
90018128:	8222      	strh	r2, [r4, #16]
9001812a:	82a3      	strh	r3, [r4, #20]
9001812c:	82e5      	strh	r5, [r4, #22]
9001812e:	8325      	strh	r5, [r4, #24]
90018130:	8365      	strh	r5, [r4, #26]
90018132:	83a5      	strh	r5, [r4, #28]
90018134:	83e5      	strh	r5, [r4, #30]
90018136:	8425      	strh	r5, [r4, #32]
90018138:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
9001813c:	b32e      	cbz	r6, 9001818a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
9001813e:	6803      	ldr	r3, [r0, #0]
90018140:	695b      	ldr	r3, [r3, #20]
90018142:	4798      	blx	r3
90018144:	4606      	mov	r6, r0
90018146:	b300      	cbz	r0, 9001818a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90018148:	68e0      	ldr	r0, [r4, #12]
9001814a:	4631      	mov	r1, r6
9001814c:	6803      	ldr	r3, [r0, #0]
9001814e:	68db      	ldr	r3, [r3, #12]
90018150:	4798      	blx	r3
90018152:	4605      	mov	r5, r0
90018154:	b1c8      	cbz	r0, 9001818a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90018156:	7b43      	ldrb	r3, [r0, #13]
90018158:	7a82      	ldrb	r2, [r0, #10]
9001815a:	005b      	lsls	r3, r3, #1
9001815c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90018160:	4313      	orrs	r3, r2
90018162:	8423      	strh	r3, [r4, #32]
90018164:	7a63      	ldrb	r3, [r4, #9]
90018166:	2b06      	cmp	r3, #6
90018168:	d10f      	bne.n	9001818a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
9001816a:	68e0      	ldr	r0, [r4, #12]
9001816c:	462a      	mov	r2, r5
9001816e:	4631      	mov	r1, r6
90018170:	6803      	ldr	r3, [r0, #0]
90018172:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90018174:	4798      	blx	r3
90018176:	7b6b      	ldrb	r3, [r5, #13]
90018178:	005b      	lsls	r3, r3, #1
9001817a:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001817e:	7aab      	ldrb	r3, [r5, #10]
90018180:	4313      	orrs	r3, r2
90018182:	4418      	add	r0, r3
90018184:	8c23      	ldrh	r3, [r4, #32]
90018186:	4418      	add	r0, r3
90018188:	8420      	strh	r0, [r4, #32]
9001818a:	4620      	mov	r0, r4
9001818c:	bd70      	pop	{r4, r5, r6, pc}

9001818e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
9001818e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018192:	2400      	movs	r4, #0
90018194:	b085      	sub	sp, #20
90018196:	4681      	mov	r9, r0
90018198:	4688      	mov	r8, r1
9001819a:	4692      	mov	sl, r2
9001819c:	469b      	mov	fp, r3
9001819e:	4627      	mov	r7, r4
900181a0:	4625      	mov	r5, r4
900181a2:	4626      	mov	r6, r4
900181a4:	4554      	cmp	r4, sl
900181a6:	da2a      	bge.n	900181fe <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
900181a8:	2300      	movs	r3, #0
900181aa:	9303      	str	r3, [sp, #12]
900181ac:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
900181b0:	429d      	cmp	r5, r3
900181b2:	d004      	beq.n	900181be <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
900181b4:	f242 030b 	movw	r3, #8203	@ 0x200b
900181b8:	429d      	cmp	r5, r3
900181ba:	bf18      	it	ne
900181bc:	462f      	movne	r7, r5
900181be:	ab03      	add	r3, sp, #12
900181c0:	4642      	mov	r2, r8
900181c2:	4659      	mov	r1, fp
900181c4:	4648      	mov	r0, r9
900181c6:	f003 fd55 	bl	9001bc74 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900181ca:	4605      	mov	r5, r0
900181cc:	b1b8      	cbz	r0, 900181fe <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
900181ce:	280a      	cmp	r0, #10
900181d0:	d015      	beq.n	900181fe <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
900181d2:	9a03      	ldr	r2, [sp, #12]
900181d4:	b18a      	cbz	r2, 900181fa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
900181d6:	7b50      	ldrb	r0, [r2, #13]
900181d8:	4639      	mov	r1, r7
900181da:	7a93      	ldrb	r3, [r2, #10]
900181dc:	0040      	lsls	r0, r0, #1
900181de:	8895      	ldrh	r5, [r2, #4]
900181e0:	f400 7080 	and.w	r0, r0, #256	@ 0x100
900181e4:	4303      	orrs	r3, r0
900181e6:	4640      	mov	r0, r8
900181e8:	9301      	str	r3, [sp, #4]
900181ea:	f8d8 3000 	ldr.w	r3, [r8]
900181ee:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900181f0:	4798      	blx	r3
900181f2:	9b01      	ldr	r3, [sp, #4]
900181f4:	4418      	add	r0, r3
900181f6:	4406      	add	r6, r0
900181f8:	b2b6      	uxth	r6, r6
900181fa:	3401      	adds	r4, #1
900181fc:	e7d2      	b.n	900181a4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
900181fe:	4630      	mov	r0, r6
90018200:	b005      	add	sp, #20
90018202:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90018206 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
90018206:	2a02      	cmp	r2, #2
90018208:	b530      	push	{r4, r5, lr}
9001820a:	d011      	beq.n	90018230 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
9001820c:	2a03      	cmp	r2, #3
9001820e:	d01c      	beq.n	9001824a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
90018210:	2a01      	cmp	r2, #1
90018212:	d10c      	bne.n	9001822e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
90018214:	888b      	ldrh	r3, [r1, #4]
90018216:	8801      	ldrh	r1, [r0, #0]
90018218:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
9001821c:	1a5b      	subs	r3, r3, r1
9001821e:	8844      	ldrh	r4, [r0, #2]
90018220:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90018224:	1a9b      	subs	r3, r3, r2
90018226:	8004      	strh	r4, [r0, #0]
90018228:	8081      	strh	r1, [r0, #4]
9001822a:	8043      	strh	r3, [r0, #2]
9001822c:	80c2      	strh	r2, [r0, #6]
9001822e:	bd30      	pop	{r4, r5, pc}
90018230:	88cb      	ldrh	r3, [r1, #6]
90018232:	8842      	ldrh	r2, [r0, #2]
90018234:	1a9b      	subs	r3, r3, r2
90018236:	88c2      	ldrh	r2, [r0, #6]
90018238:	1a9b      	subs	r3, r3, r2
9001823a:	888a      	ldrh	r2, [r1, #4]
9001823c:	8801      	ldrh	r1, [r0, #0]
9001823e:	8043      	strh	r3, [r0, #2]
90018240:	1a52      	subs	r2, r2, r1
90018242:	8881      	ldrh	r1, [r0, #4]
90018244:	1a52      	subs	r2, r2, r1
90018246:	8002      	strh	r2, [r0, #0]
90018248:	e7f1      	b.n	9001822e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
9001824a:	88cb      	ldrh	r3, [r1, #6]
9001824c:	8841      	ldrh	r1, [r0, #2]
9001824e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
90018252:	1a5b      	subs	r3, r3, r1
90018254:	f9b0 5000 	ldrsh.w	r5, [r0]
90018258:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
9001825c:	1a9b      	subs	r3, r3, r2
9001825e:	8045      	strh	r5, [r0, #2]
90018260:	8082      	strh	r2, [r0, #4]
90018262:	8003      	strh	r3, [r0, #0]
90018264:	80c4      	strh	r4, [r0, #6]
90018266:	e7e2      	b.n	9001822e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

90018268 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
90018268:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001826c:	b09f      	sub	sp, #124	@ 0x7c
9001826e:	920f      	str	r2, [sp, #60]	@ 0x3c
90018270:	9312      	str	r3, [sp, #72]	@ 0x48
90018272:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90018274:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90018276:	8812      	ldrh	r2, [r2, #0]
90018278:	889b      	ldrh	r3, [r3, #4]
9001827a:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
9001827c:	4413      	add	r3, r2
9001827e:	900e      	str	r0, [sp, #56]	@ 0x38
90018280:	6828      	ldr	r0, [r5, #0]
90018282:	b21b      	sxth	r3, r3
90018284:	9117      	str	r1, [sp, #92]	@ 0x5c
90018286:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
9001828a:	9311      	str	r3, [sp, #68]	@ 0x44
9001828c:	6803      	ldr	r3, [r0, #0]
9001828e:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
90018292:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90018294:	4798      	blx	r3
90018296:	682b      	ldr	r3, [r5, #0]
90018298:	9013      	str	r0, [sp, #76]	@ 0x4c
9001829a:	7b1a      	ldrb	r2, [r3, #12]
9001829c:	7adb      	ldrb	r3, [r3, #11]
9001829e:	9215      	str	r2, [sp, #84]	@ 0x54
900182a0:	9316      	str	r3, [sp, #88]	@ 0x58
900182a2:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
900182a6:	2c00      	cmp	r4, #0
900182a8:	d067      	beq.n	9001837a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
900182aa:	7c2b      	ldrb	r3, [r5, #16]
900182ac:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
900182ae:	2b06      	cmp	r3, #6
900182b0:	bf14      	ite	ne
900182b2:	2301      	movne	r3, #1
900182b4:	2302      	moveq	r3, #2
900182b6:	4413      	add	r3, r2
900182b8:	f04f 0900 	mov.w	r9, #0
900182bc:	9310      	str	r3, [sp, #64]	@ 0x40
900182be:	464c      	mov	r4, r9
900182c0:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
900182c4:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
900182c8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900182ca:	9a10      	ldr	r2, [sp, #64]	@ 0x40
900182cc:	4293      	cmp	r3, r2
900182ce:	f280 808b 	bge.w	900183e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
900182d2:	2300      	movs	r3, #0
900182d4:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
900182d8:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
900182dc:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
900182e0:	429c      	cmp	r4, r3
900182e2:	d006      	beq.n	900182f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
900182e4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900182e6:	f242 020b 	movw	r2, #8203	@ 0x200b
900182ea:	4294      	cmp	r4, r2
900182ec:	bf18      	it	ne
900182ee:	4623      	movne	r3, r4
900182f0:	930c      	str	r3, [sp, #48]	@ 0x30
900182f2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900182f4:	992d      	ldr	r1, [sp, #180]	@ 0xb4
900182f6:	682a      	ldr	r2, [r5, #0]
900182f8:	428b      	cmp	r3, r1
900182fa:	db40      	blt.n	9001837e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
900182fc:	6813      	ldr	r3, [r2, #0]
900182fe:	4610      	mov	r0, r2
90018300:	695b      	ldr	r3, [r3, #20]
90018302:	4798      	blx	r3
90018304:	4604      	mov	r4, r0
90018306:	6828      	ldr	r0, [r5, #0]
90018308:	aa1d      	add	r2, sp, #116	@ 0x74
9001830a:	4621      	mov	r1, r4
9001830c:	6803      	ldr	r3, [r0, #0]
9001830e:	689f      	ldr	r7, [r3, #8]
90018310:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
90018314:	47b8      	blx	r7
90018316:	901c      	str	r0, [sp, #112]	@ 0x70
90018318:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
9001831c:	429c      	cmp	r4, r3
9001831e:	f000 80eb 	beq.w	900184f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90018322:	f242 030b 	movw	r3, #8203	@ 0x200b
90018326:	429c      	cmp	r4, r3
90018328:	f000 80e6 	beq.w	900184f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001832c:	2c00      	cmp	r4, #0
9001832e:	f000 810d 	beq.w	9001854c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
90018332:	2c0a      	cmp	r4, #10
90018334:	d05e      	beq.n	900183f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
90018336:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
90018338:	b36a      	cbz	r2, 90018396 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
9001833a:	8894      	ldrh	r4, [r2, #4]
9001833c:	f1bb 0f00 	cmp.w	fp, #0
90018340:	d03a      	beq.n	900183b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
90018342:	f892 900d 	ldrb.w	r9, [r2, #13]
90018346:	f1bb 0f01 	cmp.w	fp, #1
9001834a:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001834e:	f409 7380 	and.w	r3, r9, #256	@ 0x100
90018352:	f892 900a 	ldrb.w	r9, [r2, #10]
90018356:	ea49 0903 	orr.w	r9, r9, r3
9001835a:	d133      	bne.n	900183c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
9001835c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001835e:	eba6 0609 	sub.w	r6, r6, r9
90018362:	2b00      	cmp	r3, #0
90018364:	d14d      	bne.n	90018402 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
90018366:	9a15      	ldr	r2, [sp, #84]	@ 0x54
90018368:	eb09 0306 	add.w	r3, r9, r6
9001836c:	4413      	add	r3, r2
9001836e:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90018370:	f9b2 2000 	ldrsh.w	r2, [r2]
90018374:	4293      	cmp	r3, r2
90018376:	da4e      	bge.n	90018416 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
90018378:	e036      	b.n	900183e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
9001837a:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
9001837c:	e79c      	b.n	900182b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
9001837e:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
90018382:	4659      	mov	r1, fp
90018384:	982c      	ldr	r0, [sp, #176]	@ 0xb0
90018386:	9301      	str	r3, [sp, #4]
90018388:	ab1d      	add	r3, sp, #116	@ 0x74
9001838a:	9300      	str	r3, [sp, #0]
9001838c:	ab1c      	add	r3, sp, #112	@ 0x70
9001838e:	f003 fcba 	bl	9001bd06 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
90018392:	4604      	mov	r4, r0
90018394:	e7c0      	b.n	90018318 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
90018396:	6828      	ldr	r0, [r5, #0]
90018398:	6803      	ldr	r3, [r0, #0]
9001839a:	691b      	ldr	r3, [r3, #16]
9001839c:	4798      	blx	r3
9001839e:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
900183a2:	4298      	cmp	r0, r3
900183a4:	f000 80a8 	beq.w	900184f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900183a8:	f242 030b 	movw	r3, #8203	@ 0x200b
900183ac:	4298      	cmp	r0, r3
900183ae:	f000 80a3 	beq.w	900184f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900183b2:	f1bb 0f00 	cmp.w	fp, #0
900183b6:	d100      	bne.n	900183ba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
900183b8:	444e      	add	r6, r9
900183ba:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
900183bc:	2a00      	cmp	r2, #0
900183be:	d1c0      	bne.n	90018342 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
900183c0:	4691      	mov	r9, r2
900183c2:	e099      	b.n	900184f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900183c4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900183c6:	2b00      	cmp	r3, #0
900183c8:	f000 80c2 	beq.w	90018550 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e8>
900183cc:	f1bb 0f00 	cmp.w	fp, #0
900183d0:	d117      	bne.n	90018402 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
900183d2:	6828      	ldr	r0, [r5, #0]
900183d4:	990c      	ldr	r1, [sp, #48]	@ 0x30
900183d6:	6803      	ldr	r3, [r0, #0]
900183d8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900183da:	4798      	blx	r3
900183dc:	4406      	add	r6, r0
900183de:	9b16      	ldr	r3, [sp, #88]	@ 0x58
900183e0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
900183e2:	1af3      	subs	r3, r6, r3
900183e4:	4293      	cmp	r3, r2
900183e6:	dd16      	ble.n	90018416 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
900183e8:	2c00      	cmp	r4, #0
900183ea:	f000 80af 	beq.w	9001854c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
900183ee:	2c0a      	cmp	r4, #10
900183f0:	f040 809d 	bne.w	9001852e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
900183f4:	240a      	movs	r4, #10
900183f6:	fab4 f084 	clz	r0, r4
900183fa:	0940      	lsrs	r0, r0, #5
900183fc:	b01f      	add	sp, #124	@ 0x7c
900183fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018402:	6828      	ldr	r0, [r5, #0]
90018404:	990c      	ldr	r1, [sp, #48]	@ 0x30
90018406:	6803      	ldr	r3, [r0, #0]
90018408:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001840a:	4798      	blx	r3
9001840c:	f1bb 0f01 	cmp.w	fp, #1
90018410:	eba6 0600 	sub.w	r6, r6, r0
90018414:	d0a7      	beq.n	90018366 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
90018416:	981c      	ldr	r0, [sp, #112]	@ 0x70
90018418:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
9001841a:	f990 1009 	ldrsb.w	r1, [r0, #9]
9001841e:	f9b3 8000 	ldrsh.w	r8, [r3]
90018422:	7b43      	ldrb	r3, [r0, #13]
90018424:	4431      	add	r1, r6
90018426:	015b      	lsls	r3, r3, #5
90018428:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001842c:	7983      	ldrb	r3, [r0, #6]
9001842e:	4313      	orrs	r3, r2
90018430:	440b      	add	r3, r1
90018432:	4543      	cmp	r3, r8
90018434:	db60      	blt.n	900184f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90018436:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90018438:	4299      	cmp	r1, r3
9001843a:	da5d      	bge.n	900184f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001843c:	6828      	ldr	r0, [r5, #0]
9001843e:	45b0      	cmp	r8, r6
90018440:	6803      	ldr	r3, [r0, #0]
90018442:	bfcc      	ite	gt
90018444:	eba8 0806 	subgt.w	r8, r8, r6
90018448:	f04f 0800 	movle.w	r8, #0
9001844c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001844e:	bfc8      	it	gt
90018450:	fa1f f888 	uxthgt.w	r8, r8
90018454:	4798      	blx	r3
90018456:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
90018458:	7b53      	ldrb	r3, [r2, #13]
9001845a:	00d9      	lsls	r1, r3, #3
9001845c:	f401 7780 	and.w	r7, r1, #256	@ 0x100
90018460:	7a11      	ldrb	r1, [r2, #8]
90018462:	4339      	orrs	r1, r7
90018464:	065f      	lsls	r7, r3, #25
90018466:	9f12      	ldr	r7, [sp, #72]	@ 0x48
90018468:	bf48      	it	mi
9001846a:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
9001846e:	4407      	add	r7, r0
90018470:	bf48      	it	mi
90018472:	b209      	sxthmi	r1, r1
90018474:	1a7f      	subs	r7, r7, r1
90018476:	9929      	ldr	r1, [sp, #164]	@ 0xa4
90018478:	b2bf      	uxth	r7, r7
9001847a:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
9001847e:	fa0f fa87 	sxth.w	sl, r7
90018482:	4551      	cmp	r1, sl
90018484:	dd3c      	ble.n	90018500 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
90018486:	011b      	lsls	r3, r3, #4
90018488:	79d0      	ldrb	r0, [r2, #7]
9001848a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
9001848e:	4303      	orrs	r3, r0
90018490:	449a      	add	sl, r3
90018492:	4551      	cmp	r1, sl
90018494:	dc30      	bgt.n	900184f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90018496:	1bcf      	subs	r7, r1, r7
90018498:	468a      	mov	sl, r1
9001849a:	b23f      	sxth	r7, r7
9001849c:	9219      	str	r2, [sp, #100]	@ 0x64
9001849e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
900184a0:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
900184a2:	6828      	ldr	r0, [r5, #0]
900184a4:	2a00      	cmp	r2, #0
900184a6:	d12d      	bne.n	90018504 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
900184a8:	9318      	str	r3, [sp, #96]	@ 0x60
900184aa:	b2bf      	uxth	r7, r7
900184ac:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900184ae:	6819      	ldr	r1, [r3, #0]
900184b0:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
900184b2:	6801      	ldr	r1, [r0, #0]
900184b4:	9314      	str	r3, [sp, #80]	@ 0x50
900184b6:	6c09      	ldr	r1, [r1, #64]	@ 0x40
900184b8:	4788      	blx	r1
900184ba:	79a9      	ldrb	r1, [r5, #6]
900184bc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900184be:	910b      	str	r1, [sp, #44]	@ 0x2c
900184c0:	7ba9      	ldrb	r1, [r5, #14]
900184c2:	9a19      	ldr	r2, [sp, #100]	@ 0x64
900184c4:	910a      	str	r1, [sp, #40]	@ 0x28
900184c6:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
900184ca:	9109      	str	r1, [sp, #36]	@ 0x24
900184cc:	68a9      	ldr	r1, [r5, #8]
900184ce:	9306      	str	r3, [sp, #24]
900184d0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900184d2:	9205      	str	r2, [sp, #20]
900184d4:	9304      	str	r3, [sp, #16]
900184d6:	f8cd a004 	str.w	sl, [sp, #4]
900184da:	e9cd 8702 	strd	r8, r7, [sp, #8]
900184de:	44b0      	add	r8, r6
900184e0:	9f14      	ldr	r7, [sp, #80]	@ 0x50
900184e2:	fa0f f388 	sxth.w	r3, r8
900184e6:	9300      	str	r3, [sp, #0]
900184e8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900184ea:	e9cd 0107 	strd	r0, r1, [sp, #28]
900184ee:	9917      	ldr	r1, [sp, #92]	@ 0x5c
900184f0:	681a      	ldr	r2, [r3, #0]
900184f2:	980e      	ldr	r0, [sp, #56]	@ 0x38
900184f4:	685b      	ldr	r3, [r3, #4]
900184f6:	47b8      	blx	r7
900184f8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900184fa:	3301      	adds	r3, #1
900184fc:	930d      	str	r3, [sp, #52]	@ 0x34
900184fe:	e6e3      	b.n	900182c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
90018500:	2700      	movs	r7, #0
90018502:	e7cb      	b.n	9001849c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
90018504:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90018506:	f8d2 c008 	ldr.w	ip, [r2, #8]
9001850a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001850c:	f8dc 1000 	ldr.w	r1, [ip]
90018510:	e9cd 6204 	strd	r6, r2, [sp, #16]
90018514:	79aa      	ldrb	r2, [r5, #6]
90018516:	9203      	str	r2, [sp, #12]
90018518:	7baa      	ldrb	r2, [r5, #14]
9001851a:	9202      	str	r2, [sp, #8]
9001851c:	68aa      	ldr	r2, [r5, #8]
9001851e:	e9cd 0200 	strd	r0, r2, [sp]
90018522:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90018524:	4660      	mov	r0, ip
90018526:	688f      	ldr	r7, [r1, #8]
90018528:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001852a:	47b8      	blx	r7
9001852c:	e7e4      	b.n	900184f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001852e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90018530:	3501      	adds	r5, #1
90018532:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
90018534:	429d      	cmp	r5, r3
90018536:	f6bf af5e 	bge.w	900183f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
9001853a:	4659      	mov	r1, fp
9001853c:	982c      	ldr	r0, [sp, #176]	@ 0xb0
9001853e:	f7ee f9ed 	bl	9000691c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90018542:	4604      	mov	r4, r0
90018544:	b110      	cbz	r0, 9001854c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
90018546:	280a      	cmp	r0, #10
90018548:	d1f2      	bne.n	90018530 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c8>
9001854a:	e753      	b.n	900183f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
9001854c:	2400      	movs	r4, #0
9001854e:	e752      	b.n	900183f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
90018550:	f1bb 0f00 	cmp.w	fp, #0
90018554:	f43f af43 	beq.w	900183de <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
90018558:	e75d      	b.n	90018416 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

9001855a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
9001855a:	b530      	push	{r4, r5, lr}
9001855c:	8ac4      	ldrh	r4, [r0, #22]
9001855e:	8b45      	ldrh	r5, [r0, #26]
90018560:	8343      	strh	r3, [r0, #26]
90018562:	442c      	add	r4, r5
90018564:	1ae4      	subs	r4, r4, r3
90018566:	8b83      	ldrh	r3, [r0, #28]
90018568:	82c4      	strh	r4, [r0, #22]
9001856a:	8b04      	ldrh	r4, [r0, #24]
9001856c:	4422      	add	r2, r4
9001856e:	440c      	add	r4, r1
90018570:	1a59      	subs	r1, r3, r1
90018572:	83c2      	strh	r2, [r0, #30]
90018574:	8304      	strh	r4, [r0, #24]
90018576:	8381      	strh	r1, [r0, #28]
90018578:	bd30      	pop	{r4, r5, pc}

9001857a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
9001857a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001857e:	4604      	mov	r4, r0
90018580:	8a47      	ldrh	r7, [r0, #18]
90018582:	68c0      	ldr	r0, [r0, #12]
90018584:	b085      	sub	sp, #20
90018586:	6803      	ldr	r3, [r0, #0]
90018588:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001858a:	4798      	blx	r3
9001858c:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
90018590:	7a63      	ldrb	r3, [r4, #9]
90018592:	eb06 0640 	add.w	r6, r6, r0, lsl #1
90018596:	3b01      	subs	r3, #1
90018598:	42b7      	cmp	r7, r6
9001859a:	bfac      	ite	ge
9001859c:	f04f 0900 	movge.w	r9, #0
900185a0:	f04f 0901 	movlt.w	r9, #1
900185a4:	2b05      	cmp	r3, #5
900185a6:	d804      	bhi.n	900185b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
900185a8:	e8df f003 	tbb	[pc, r3]
900185ac:	470f0854 	.word	0x470f0854
900185b0:	4c4c      	.short	0x4c4c
900185b2:	2500      	movs	r5, #0
900185b4:	46a9      	mov	r9, r5
900185b6:	462e      	mov	r6, r5
900185b8:	462f      	mov	r7, r5
900185ba:	e00e      	b.n	900185da <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
900185bc:	42b7      	cmp	r7, r6
900185be:	f04f 0500 	mov.w	r5, #0
900185c2:	bfb4      	ite	lt
900185c4:	2600      	movlt	r6, #0
900185c6:	2601      	movge	r6, #1
900185c8:	e7f6      	b.n	900185b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
900185ca:	42b7      	cmp	r7, r6
900185cc:	464d      	mov	r5, r9
900185ce:	f04f 0900 	mov.w	r9, #0
900185d2:	bfb4      	ite	lt
900185d4:	2600      	movlt	r6, #0
900185d6:	2601      	movge	r6, #1
900185d8:	464f      	mov	r7, r9
900185da:	f04f 0800 	mov.w	r8, #0
900185de:	f8a4 8016 	strh.w	r8, [r4, #22]
900185e2:	f8a4 8018 	strh.w	r8, [r4, #24]
900185e6:	f8cd 8004 	str.w	r8, [sp, #4]
900185ea:	2300      	movs	r3, #0
900185ec:	9303      	str	r3, [sp, #12]
900185ee:	8823      	ldrh	r3, [r4, #0]
900185f0:	2b20      	cmp	r3, #32
900185f2:	d033      	beq.n	9001865c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
900185f4:	f242 010b 	movw	r1, #8203	@ 0x200b
900185f8:	1a5a      	subs	r2, r3, r1
900185fa:	f1d2 0a00 	rsbs	sl, r2, #0
900185fe:	eb4a 0a02 	adc.w	sl, sl, r2
90018602:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
90018606:	4293      	cmp	r3, r2
90018608:	d008      	beq.n	9001861c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
9001860a:	428b      	cmp	r3, r1
9001860c:	9a01      	ldr	r2, [sp, #4]
9001860e:	bf0e      	itee	eq
90018610:	f04f 0a01 	moveq.w	sl, #1
90018614:	461a      	movne	r2, r3
90018616:	f04f 0a00 	movne.w	sl, #0
9001861a:	9201      	str	r2, [sp, #4]
9001861c:	ab03      	add	r3, sp, #12
9001861e:	68e2      	ldr	r2, [r4, #12]
90018620:	7a21      	ldrb	r1, [r4, #8]
90018622:	6860      	ldr	r0, [r4, #4]
90018624:	f003 fb26 	bl	9001bc74 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90018628:	8020      	strh	r0, [r4, #0]
9001862a:	b9d8      	cbnz	r0, 90018664 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
9001862c:	8ba2      	ldrh	r2, [r4, #28]
9001862e:	2300      	movs	r3, #0
90018630:	4611      	mov	r1, r2
90018632:	4620      	mov	r0, r4
90018634:	f7ff ff91 	bl	9001855a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90018638:	e06e      	b.n	90018718 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
9001863a:	2500      	movs	r5, #0
9001863c:	2701      	movs	r7, #1
9001863e:	46a9      	mov	r9, r5
90018640:	462e      	mov	r6, r5
90018642:	e7ca      	b.n	900185da <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90018644:	42b7      	cmp	r7, r6
90018646:	f04f 0500 	mov.w	r5, #0
9001864a:	bfb4      	ite	lt
9001864c:	2700      	movlt	r7, #0
9001864e:	2701      	movge	r7, #1
90018650:	462e      	mov	r6, r5
90018652:	e7c2      	b.n	900185da <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90018654:	2500      	movs	r5, #0
90018656:	2601      	movs	r6, #1
90018658:	46a9      	mov	r9, r5
9001865a:	e7ad      	b.n	900185b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
9001865c:	9301      	str	r3, [sp, #4]
9001865e:	f04f 0a01 	mov.w	sl, #1
90018662:	e7db      	b.n	9001861c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
90018664:	8b63      	ldrh	r3, [r4, #26]
90018666:	280a      	cmp	r0, #10
90018668:	f103 0301 	add.w	r3, r3, #1
9001866c:	8363      	strh	r3, [r4, #26]
9001866e:	d0dd      	beq.n	9001862c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
90018670:	9a03      	ldr	r2, [sp, #12]
90018672:	bb62      	cbnz	r2, 900186ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
90018674:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90018678:	4298      	cmp	r0, r3
9001867a:	d003      	beq.n	90018684 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
9001867c:	f242 030b 	movw	r3, #8203	@ 0x200b
90018680:	4298      	cmp	r0, r3
90018682:	d1b2      	bne.n	900185ea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90018684:	8823      	ldrh	r3, [r4, #0]
90018686:	8ba1      	ldrh	r1, [r4, #28]
90018688:	2b20      	cmp	r3, #32
9001868a:	d003      	beq.n	90018694 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
9001868c:	f242 000b 	movw	r0, #8203	@ 0x200b
90018690:	4283      	cmp	r3, r0
90018692:	d131      	bne.n	900186f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
90018694:	f1ba 0f00 	cmp.w	sl, #0
90018698:	bf0a      	itet	eq
9001869a:	4688      	moveq	r8, r1
9001869c:	4650      	movne	r0, sl
9001869e:	2001      	moveq	r0, #1
900186a0:	440a      	add	r2, r1
900186a2:	8b23      	ldrh	r3, [r4, #24]
900186a4:	f8b4 c010 	ldrh.w	ip, [r4, #16]
900186a8:	b292      	uxth	r2, r2
900186aa:	83a2      	strh	r2, [r4, #28]
900186ac:	4413      	add	r3, r2
900186ae:	f1b9 0f00 	cmp.w	r9, #0
900186b2:	d102      	bne.n	900186ba <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
900186b4:	2d00      	cmp	r5, #0
900186b6:	d042      	beq.n	9001873e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
900186b8:	b300      	cbz	r0, 900186fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
900186ba:	8c21      	ldrh	r1, [r4, #32]
900186bc:	4419      	add	r1, r3
900186be:	458c      	cmp	ip, r1
900186c0:	da37      	bge.n	90018732 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
900186c2:	8ae1      	ldrh	r1, [r4, #22]
900186c4:	2900      	cmp	r1, #0
900186c6:	d034      	beq.n	90018732 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
900186c8:	4563      	cmp	r3, ip
900186ca:	dd8e      	ble.n	900185ea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900186cc:	e01d      	b.n	9001870a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
900186ce:	8893      	ldrh	r3, [r2, #4]
900186d0:	9901      	ldr	r1, [sp, #4]
900186d2:	8023      	strh	r3, [r4, #0]
900186d4:	f892 b00d 	ldrb.w	fp, [r2, #13]
900186d8:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
900186dc:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
900186e0:	f892 b00a 	ldrb.w	fp, [r2, #10]
900186e4:	ea4b 0b00 	orr.w	fp, fp, r0
900186e8:	68e0      	ldr	r0, [r4, #12]
900186ea:	6803      	ldr	r3, [r0, #0]
900186ec:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900186ee:	4798      	blx	r3
900186f0:	eb0b 0200 	add.w	r2, fp, r0
900186f4:	b292      	uxth	r2, r2
900186f6:	e7c5      	b.n	90018684 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
900186f8:	2000      	movs	r0, #0
900186fa:	e7d1      	b.n	900186a0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
900186fc:	4563      	cmp	r3, ip
900186fe:	f77f af74 	ble.w	900185ea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90018702:	8ae3      	ldrh	r3, [r4, #22]
90018704:	2b00      	cmp	r3, #0
90018706:	f43f af70 	beq.w	900185ea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001870a:	2301      	movs	r3, #1
9001870c:	8c22      	ldrh	r2, [r4, #32]
9001870e:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
90018712:	8be3      	ldrh	r3, [r4, #30]
90018714:	4413      	add	r3, r2
90018716:	83e3      	strh	r3, [r4, #30]
90018718:	68e0      	ldr	r0, [r4, #12]
9001871a:	6803      	ldr	r3, [r0, #0]
9001871c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001871e:	4798      	blx	r3
90018720:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
90018724:	4418      	add	r0, r3
90018726:	8a63      	ldrh	r3, [r4, #18]
90018728:	1a18      	subs	r0, r3, r0
9001872a:	8260      	strh	r0, [r4, #18]
9001872c:	b005      	add	sp, #20
9001872e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018732:	2300      	movs	r3, #0
90018734:	4611      	mov	r1, r2
90018736:	4620      	mov	r0, r4
90018738:	f7ff ff0f 	bl	9001855a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
9001873c:	e755      	b.n	900185ea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001873e:	4563      	cmp	r3, ip
90018740:	dd14      	ble.n	9001876c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
90018742:	b117      	cbz	r7, 9001874a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
90018744:	2301      	movs	r3, #1
90018746:	460a      	mov	r2, r1
90018748:	e772      	b.n	90018630 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
9001874a:	2e00      	cmp	r6, #0
9001874c:	f43f af4d 	beq.w	900185ea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90018750:	2800      	cmp	r0, #0
90018752:	f47f af4a 	bne.w	900185ea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90018756:	f1ba 0f00 	cmp.w	sl, #0
9001875a:	d002      	beq.n	90018762 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
9001875c:	2301      	movs	r3, #1
9001875e:	4642      	mov	r2, r8
90018760:	e767      	b.n	90018632 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
90018762:	8ae3      	ldrh	r3, [r4, #22]
90018764:	2b00      	cmp	r3, #0
90018766:	f43f af40 	beq.w	900185ea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001876a:	e7d5      	b.n	90018718 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
9001876c:	2800      	cmp	r0, #0
9001876e:	f47f af3c 	bne.w	900185ea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90018772:	f1ba 0f00 	cmp.w	sl, #0
90018776:	f43f af38 	beq.w	900185ea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001877a:	2301      	movs	r3, #1
9001877c:	4642      	mov	r2, r8
9001877e:	e7da      	b.n	90018736 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

90018780 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
90018780:	b5f0      	push	{r4, r5, r6, r7, lr}
90018782:	4605      	mov	r5, r0
90018784:	b08f      	sub	sp, #60	@ 0x3c
90018786:	4617      	mov	r7, r2
90018788:	461c      	mov	r4, r3
9001878a:	460e      	mov	r6, r1
9001878c:	b1d1      	cbz	r1, 900187c4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
9001878e:	681b      	ldr	r3, [r3, #0]
90018790:	4620      	mov	r0, r4
90018792:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90018794:	4798      	blx	r3
90018796:	4240      	negs	r0, r0
90018798:	9603      	str	r6, [sp, #12]
9001879a:	f64f 73ff 	movw	r3, #65535	@ 0xffff
9001879e:	b200      	sxth	r0, r0
900187a0:	9700      	str	r7, [sp, #0]
900187a2:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
900187a6:	4629      	mov	r1, r5
900187a8:	e9cd 4001 	strd	r4, r0, [sp, #4]
900187ac:	2401      	movs	r4, #1
900187ae:	a805      	add	r0, sp, #20
900187b0:	f7ff fcaa 	bl	90018108 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
900187b4:	a805      	add	r0, sp, #20
900187b6:	f7ff fee0 	bl	9001857a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
900187ba:	f8bd 3014 	ldrh.w	r3, [sp, #20]
900187be:	b163      	cbz	r3, 900187da <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
900187c0:	3401      	adds	r4, #1
900187c2:	e7f7      	b.n	900187b4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
900187c4:	2401      	movs	r4, #1
900187c6:	f003 fb21 	bl	9001be0c <_ZN8touchgfx12TextProvider11getNextCharEv>
900187ca:	280a      	cmp	r0, #10
900187cc:	4628      	mov	r0, r5
900187ce:	bf08      	it	eq
900187d0:	3401      	addeq	r4, #1
900187d2:	f003 fb1b 	bl	9001be0c <_ZN8touchgfx12TextProvider11getNextCharEv>
900187d6:	2800      	cmp	r0, #0
900187d8:	d1f7      	bne.n	900187ca <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
900187da:	b2a0      	uxth	r0, r4
900187dc:	b00f      	add	sp, #60	@ 0x3c
900187de:	bdf0      	pop	{r4, r5, r6, r7, pc}

900187e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
900187e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900187e4:	b0e3      	sub	sp, #396	@ 0x18c
900187e6:	461c      	mov	r4, r3
900187e8:	4683      	mov	fp, r0
900187ea:	4688      	mov	r8, r1
900187ec:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
900187ee:	2b00      	cmp	r3, #0
900187f0:	f000 8112 	beq.w	90018a18 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900187f4:	6823      	ldr	r3, [r4, #0]
900187f6:	2b00      	cmp	r3, #0
900187f8:	f000 810e 	beq.w	90018a18 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900187fc:	7ba3      	ldrb	r3, [r4, #14]
900187fe:	2b00      	cmp	r3, #0
90018800:	f000 810a 	beq.w	90018a18 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90018804:	ad0a      	add	r5, sp, #40	@ 0x28
90018806:	6810      	ldr	r0, [r2, #0]
90018808:	6851      	ldr	r1, [r2, #4]
9001880a:	462b      	mov	r3, r5
9001880c:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
90018810:	c303      	stmia	r3!, {r0, r1}
90018812:	2100      	movs	r1, #0
90018814:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90018818:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
9001881c:	4628      	mov	r0, r5
9001881e:	910c      	str	r1, [sp, #48]	@ 0x30
90018820:	a90c      	add	r1, sp, #48	@ 0x30
90018822:	79a2      	ldrb	r2, [r4, #6]
90018824:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90018828:	f7ff fced 	bl	90018206 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
9001882c:	a90c      	add	r1, sp, #48	@ 0x30
9001882e:	79a2      	ldrb	r2, [r4, #6]
90018830:	4608      	mov	r0, r1
90018832:	f7ff fce8 	bl	90018206 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
90018836:	a817      	add	r0, sp, #92	@ 0x5c
90018838:	f002 fe8d 	bl	9001b556 <_ZN8touchgfx12TextProviderC1Ev>
9001883c:	6820      	ldr	r0, [r4, #0]
9001883e:	6803      	ldr	r3, [r0, #0]
90018840:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90018842:	4798      	blx	r3
90018844:	4606      	mov	r6, r0
90018846:	6820      	ldr	r0, [r4, #0]
90018848:	6803      	ldr	r3, [r0, #0]
9001884a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001884c:	4798      	blx	r3
9001884e:	4633      	mov	r3, r6
90018850:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
90018852:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
90018854:	9000      	str	r0, [sp, #0]
90018856:	a817      	add	r0, sp, #92	@ 0x5c
90018858:	f002 fed8 	bl	9001b60c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001885c:	6820      	ldr	r0, [r4, #0]
9001885e:	f894 a004 	ldrb.w	sl, [r4, #4]
90018862:	6803      	ldr	r3, [r0, #0]
90018864:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90018866:	4798      	blx	r3
90018868:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
9001886c:	6823      	ldr	r3, [r4, #0]
9001886e:	4607      	mov	r7, r0
90018870:	4406      	add	r6, r0
90018872:	a830      	add	r0, sp, #192	@ 0xc0
90018874:	f893 9009 	ldrb.w	r9, [r3, #9]
90018878:	f002 fe6d 	bl	9001b556 <_ZN8touchgfx12TextProviderC1Ev>
9001887c:	7c23      	ldrb	r3, [r4, #16]
9001887e:	b17b      	cbz	r3, 900188a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
90018880:	6820      	ldr	r0, [r4, #0]
90018882:	6803      	ldr	r3, [r0, #0]
90018884:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90018886:	4798      	blx	r3
90018888:	9009      	str	r0, [sp, #36]	@ 0x24
9001888a:	6820      	ldr	r0, [r4, #0]
9001888c:	6802      	ldr	r2, [r0, #0]
9001888e:	6d12      	ldr	r2, [r2, #80]	@ 0x50
90018890:	4790      	blx	r2
90018892:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90018894:	9000      	str	r0, [sp, #0]
90018896:	a830      	add	r0, sp, #192	@ 0xc0
90018898:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
9001889a:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
9001889c:	f002 feb6 	bl	9001b60c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900188a0:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
900188a4:	a80e      	add	r0, sp, #56	@ 0x38
900188a6:	7be2      	ldrb	r2, [r4, #15]
900188a8:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
900188ac:	1a8a      	subs	r2, r1, r2
900188ae:	7c21      	ldrb	r1, [r4, #16]
900188b0:	9103      	str	r1, [sp, #12]
900188b2:	b292      	uxth	r2, r2
900188b4:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
900188b8:	9102      	str	r1, [sp, #8]
900188ba:	6821      	ldr	r1, [r4, #0]
900188bc:	9101      	str	r1, [sp, #4]
900188be:	7961      	ldrb	r1, [r4, #5]
900188c0:	9100      	str	r1, [sp, #0]
900188c2:	a930      	add	r1, sp, #192	@ 0xc0
900188c4:	f7ff fc20 	bl	90018108 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
900188c8:	2e00      	cmp	r6, #0
900188ca:	dc5b      	bgt.n	90018984 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
900188cc:	af17      	add	r7, sp, #92	@ 0x5c
900188ce:	f04f 0900 	mov.w	r9, #0
900188d2:	7c23      	ldrb	r3, [r4, #16]
900188d4:	2b00      	cmp	r3, #0
900188d6:	f000 80b1 	beq.w	90018a3c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
900188da:	a80e      	add	r0, sp, #56	@ 0x38
900188dc:	f7ff fe4d 	bl	9001857a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
900188e0:	f1ba 0f00 	cmp.w	sl, #0
900188e4:	f000 80a5 	beq.w	90018a32 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
900188e8:	7c23      	ldrb	r3, [r4, #16]
900188ea:	2264      	movs	r2, #100	@ 0x64
900188ec:	4639      	mov	r1, r7
900188ee:	a849      	add	r0, sp, #292	@ 0x124
900188f0:	9309      	str	r3, [sp, #36]	@ 0x24
900188f2:	f015 f95c 	bl	9002dbae <memcpy>
900188f6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900188f8:	2b00      	cmp	r3, #0
900188fa:	f000 80a7 	beq.w	90018a4c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
900188fe:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
90018902:	7922      	ldrb	r2, [r4, #4]
90018904:	2a01      	cmp	r2, #1
90018906:	f040 808a 	bne.w	90018a1e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
9001890a:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
9001890e:	1ac0      	subs	r0, r0, r3
90018910:	2302      	movs	r3, #2
90018912:	fb90 f0f3 	sdiv	r0, r0, r3
90018916:	b200      	sxth	r0, r0
90018918:	7c23      	ldrb	r3, [r4, #16]
9001891a:	2b00      	cmp	r3, #0
9001891c:	f000 808b 	beq.w	90018a36 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
90018920:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
90018924:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
90018928:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9001892c:	e9cd 2105 	strd	r2, r1, [sp, #20]
90018930:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
90018934:	2100      	movs	r1, #0
90018936:	4410      	add	r0, r2
90018938:	4642      	mov	r2, r8
9001893a:	b200      	sxth	r0, r0
9001893c:	e9cd 9703 	strd	r9, r7, [sp, #12]
90018940:	9000      	str	r0, [sp, #0]
90018942:	4658      	mov	r0, fp
90018944:	e9cd 5401 	strd	r5, r4, [sp, #4]
90018948:	f7ff fc8e 	bl	90018268 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
9001894c:	2800      	cmp	r0, #0
9001894e:	d163      	bne.n	90018a18 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90018950:	b2b2      	uxth	r2, r6
90018952:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90018956:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
9001895a:	4413      	add	r3, r2
9001895c:	1a8a      	subs	r2, r1, r2
9001895e:	b21b      	sxth	r3, r3
90018960:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
90018964:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
90018968:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001896c:	2a00      	cmp	r2, #0
9001896e:	d153      	bne.n	90018a18 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90018970:	6822      	ldr	r2, [r4, #0]
90018972:	8869      	ldrh	r1, [r5, #2]
90018974:	7a12      	ldrb	r2, [r2, #8]
90018976:	1a9b      	subs	r3, r3, r2
90018978:	88ea      	ldrh	r2, [r5, #6]
9001897a:	440a      	add	r2, r1
9001897c:	b212      	sxth	r2, r2
9001897e:	4293      	cmp	r3, r2
90018980:	dda7      	ble.n	900188d2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
90018982:	e049      	b.n	90018a18 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90018984:	7c23      	ldrb	r3, [r4, #16]
90018986:	444f      	add	r7, r9
90018988:	b1c3      	cbz	r3, 900189bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
9001898a:	f64f 79ff 	movw	r9, #65535	@ 0xffff
9001898e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90018992:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90018996:	443b      	add	r3, r7
90018998:	4293      	cmp	r3, r2
9001899a:	da97      	bge.n	900188cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
9001899c:	a80e      	add	r0, sp, #56	@ 0x38
9001899e:	f7ff fdec 	bl	9001857a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
900189a2:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
900189a6:	3b01      	subs	r3, #1
900189a8:	b29b      	uxth	r3, r3
900189aa:	454b      	cmp	r3, r9
900189ac:	9309      	str	r3, [sp, #36]	@ 0x24
900189ae:	d021      	beq.n	900189f4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
900189b0:	7961      	ldrb	r1, [r4, #5]
900189b2:	a817      	add	r0, sp, #92	@ 0x5c
900189b4:	f7ed ffb2 	bl	9000691c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
900189b8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900189ba:	e7f4      	b.n	900189a6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
900189bc:	fa1f f986 	uxth.w	r9, r6
900189c0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
900189c4:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
900189c8:	443b      	add	r3, r7
900189ca:	4293      	cmp	r3, r2
900189cc:	f6bf af7e 	bge.w	900188cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
900189d0:	a817      	add	r0, sp, #92	@ 0x5c
900189d2:	f003 fa1b 	bl	9001be0c <_ZN8touchgfx12TextProvider11getNextCharEv>
900189d6:	b1f8      	cbz	r0, 90018a18 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900189d8:	280a      	cmp	r0, #10
900189da:	d1f1      	bne.n	900189c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
900189dc:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
900189e0:	444b      	add	r3, r9
900189e2:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
900189e6:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
900189ea:	eba3 0309 	sub.w	r3, r3, r9
900189ee:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
900189f2:	e7e5      	b.n	900189c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
900189f4:	b2b3      	uxth	r3, r6
900189f6:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
900189fa:	441a      	add	r2, r3
900189fc:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
90018a00:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
90018a04:	1ad3      	subs	r3, r2, r3
90018a06:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90018a0a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90018a0e:	b11b      	cbz	r3, 90018a18 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90018a10:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
90018a14:	2b00      	cmp	r3, #0
90018a16:	d0ba      	beq.n	9001898e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
90018a18:	b063      	add	sp, #396	@ 0x18c
90018a1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018a1e:	2a02      	cmp	r2, #2
90018a20:	d105      	bne.n	90018a2e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
90018a22:	7be2      	ldrb	r2, [r4, #15]
90018a24:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
90018a28:	1a80      	subs	r0, r0, r2
90018a2a:	1ac0      	subs	r0, r0, r3
90018a2c:	e773      	b.n	90018916 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
90018a2e:	2000      	movs	r0, #0
90018a30:	e772      	b.n	90018918 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
90018a32:	7be0      	ldrb	r0, [r4, #15]
90018a34:	e770      	b.n	90018918 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
90018a36:	f647 72ff 	movw	r2, #32767	@ 0x7fff
90018a3a:	e773      	b.n	90018924 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
90018a3c:	f1ba 0f00 	cmp.w	sl, #0
90018a40:	d0f7      	beq.n	90018a32 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
90018a42:	2264      	movs	r2, #100	@ 0x64
90018a44:	4639      	mov	r1, r7
90018a46:	a849      	add	r0, sp, #292	@ 0x124
90018a48:	f015 f8b1 	bl	9002dbae <memcpy>
90018a4c:	2300      	movs	r3, #0
90018a4e:	f647 72ff 	movw	r2, #32767	@ 0x7fff
90018a52:	6821      	ldr	r1, [r4, #0]
90018a54:	a849      	add	r0, sp, #292	@ 0x124
90018a56:	f7ff fb9a 	bl	9001818e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90018a5a:	b203      	sxth	r3, r0
90018a5c:	e751      	b.n	90018902 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

90018a5e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
90018a5e:	2b03      	cmp	r3, #3
90018a60:	d818      	bhi.n	90018a94 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
90018a62:	e8df f003 	tbb	[pc, r3]
90018a66:	0602      	.short	0x0602
90018a68:	130d      	.short	0x130d
90018a6a:	f9b0 2000 	ldrsh.w	r2, [r0]
90018a6e:	1850      	adds	r0, r2, r1
90018a70:	4770      	bx	lr
90018a72:	8803      	ldrh	r3, [r0, #0]
90018a74:	8880      	ldrh	r0, [r0, #4]
90018a76:	4418      	add	r0, r3
90018a78:	b200      	sxth	r0, r0
90018a7a:	1a80      	subs	r0, r0, r2
90018a7c:	3801      	subs	r0, #1
90018a7e:	4770      	bx	lr
90018a80:	8803      	ldrh	r3, [r0, #0]
90018a82:	8880      	ldrh	r0, [r0, #4]
90018a84:	4418      	add	r0, r3
90018a86:	b200      	sxth	r0, r0
90018a88:	1a40      	subs	r0, r0, r1
90018a8a:	e7f7      	b.n	90018a7c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
90018a8c:	f9b0 0000 	ldrsh.w	r0, [r0]
90018a90:	4410      	add	r0, r2
90018a92:	4770      	bx	lr
90018a94:	2000      	movs	r0, #0
90018a96:	4770      	bx	lr

90018a98 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
90018a98:	2b03      	cmp	r3, #3
90018a9a:	d817      	bhi.n	90018acc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
90018a9c:	e8df f003 	tbb	[pc, r3]
90018aa0:	10090602 	.word	0x10090602
90018aa4:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90018aa8:	1850      	adds	r0, r2, r1
90018aaa:	4770      	bx	lr
90018aac:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90018ab0:	e7fa      	b.n	90018aa8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
90018ab2:	8843      	ldrh	r3, [r0, #2]
90018ab4:	88c0      	ldrh	r0, [r0, #6]
90018ab6:	4418      	add	r0, r3
90018ab8:	b200      	sxth	r0, r0
90018aba:	1a80      	subs	r0, r0, r2
90018abc:	3801      	subs	r0, #1
90018abe:	4770      	bx	lr
90018ac0:	8843      	ldrh	r3, [r0, #2]
90018ac2:	88c0      	ldrh	r0, [r0, #6]
90018ac4:	4418      	add	r0, r3
90018ac6:	b200      	sxth	r0, r0
90018ac8:	1a40      	subs	r0, r0, r1
90018aca:	e7f7      	b.n	90018abc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
90018acc:	2000      	movs	r0, #0
90018ace:	4770      	bx	lr

90018ad0 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
90018ad0:	4b01      	ldr	r3, [pc, #4]	@ (90018ad8 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
90018ad2:	2200      	movs	r2, #0
90018ad4:	601a      	str	r2, [r3, #0]
90018ad6:	4770      	bx	lr
90018ad8:	24021c1c 	.word	0x24021c1c

90018adc <_ZN8touchgfx16TouchCalibration4clzuEm>:
90018adc:	4603      	mov	r3, r0
90018ade:	b1c8      	cbz	r0, 90018b14 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
90018ae0:	0c02      	lsrs	r2, r0, #16
90018ae2:	0412      	lsls	r2, r2, #16
90018ae4:	b9a2      	cbnz	r2, 90018b10 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
90018ae6:	0403      	lsls	r3, r0, #16
90018ae8:	2010      	movs	r0, #16
90018aea:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
90018aee:	bf04      	itt	eq
90018af0:	021b      	lsleq	r3, r3, #8
90018af2:	3008      	addeq	r0, #8
90018af4:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
90018af8:	bf04      	itt	eq
90018afa:	011b      	lsleq	r3, r3, #4
90018afc:	3004      	addeq	r0, #4
90018afe:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
90018b02:	bf04      	itt	eq
90018b04:	009b      	lsleq	r3, r3, #2
90018b06:	3002      	addeq	r0, #2
90018b08:	2b00      	cmp	r3, #0
90018b0a:	db04      	blt.n	90018b16 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
90018b0c:	3001      	adds	r0, #1
90018b0e:	4770      	bx	lr
90018b10:	2000      	movs	r0, #0
90018b12:	e7ea      	b.n	90018aea <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
90018b14:	2020      	movs	r0, #32
90018b16:	4770      	bx	lr

90018b18 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
90018b18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018b1c:	b087      	sub	sp, #28
90018b1e:	460d      	mov	r5, r1
90018b20:	4616      	mov	r6, r2
90018b22:	4698      	mov	r8, r3
90018b24:	4601      	mov	r1, r0
90018b26:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
90018b2a:	b120      	cbz	r0, 90018b36 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90018b2c:	b11a      	cbz	r2, 90018b36 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90018b2e:	2d1f      	cmp	r5, #31
90018b30:	d801      	bhi.n	90018b36 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90018b32:	2b1f      	cmp	r3, #31
90018b34:	d904      	bls.n	90018b40 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
90018b36:	2000      	movs	r0, #0
90018b38:	6038      	str	r0, [r7, #0]
90018b3a:	b007      	add	sp, #28
90018b3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018b40:	b97d      	cbnz	r5, 90018b62 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
90018b42:	b143      	cbz	r3, 90018b56 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
90018b44:	4602      	mov	r2, r0
90018b46:	462b      	mov	r3, r5
90018b48:	4641      	mov	r1, r8
90018b4a:	4630      	mov	r0, r6
90018b4c:	e9cd 4700 	strd	r4, r7, [sp]
90018b50:	f7ff ffe2 	bl	90018b18 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90018b54:	e7f1      	b.n	90018b3a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90018b56:	f04f 33ff 	mov.w	r3, #4294967295
90018b5a:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
90018b5e:	603b      	str	r3, [r7, #0]
90018b60:	e7eb      	b.n	90018b3a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90018b62:	fa32 fa05 	lsrs.w	sl, r2, r5
90018b66:	d106      	bne.n	90018b76 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
90018b68:	4346      	muls	r6, r0
90018b6a:	fbb6 f0f4 	udiv	r0, r6, r4
90018b6e:	fb04 6610 	mls	r6, r4, r0, r6
90018b72:	603e      	str	r6, [r7, #0]
90018b74:	e7e1      	b.n	90018b3a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90018b76:	2201      	movs	r2, #1
90018b78:	fa00 fb05 	lsl.w	fp, r0, r5
90018b7c:	40aa      	lsls	r2, r5
90018b7e:	fbbb f9f4 	udiv	r9, fp, r4
90018b82:	3a01      	subs	r2, #1
90018b84:	fb0a f309 	mul.w	r3, sl, r9
90018b88:	fb04 b919 	mls	r9, r4, r9, fp
90018b8c:	4016      	ands	r6, r2
90018b8e:	9303      	str	r3, [sp, #12]
90018b90:	4630      	mov	r0, r6
90018b92:	f7ff ffa3 	bl	90018adc <_ZN8touchgfx16TouchCalibration4clzuEm>
90018b96:	462b      	mov	r3, r5
90018b98:	460a      	mov	r2, r1
90018b9a:	4601      	mov	r1, r0
90018b9c:	4630      	mov	r0, r6
90018b9e:	e9cd 4700 	strd	r4, r7, [sp]
90018ba2:	f7ff ffb9 	bl	90018b18 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90018ba6:	4606      	mov	r6, r0
90018ba8:	4648      	mov	r0, r9
90018baa:	eb05 0108 	add.w	r1, r5, r8
90018bae:	f7ff ff95 	bl	90018adc <_ZN8touchgfx16TouchCalibration4clzuEm>
90018bb2:	ab05      	add	r3, sp, #20
90018bb4:	464a      	mov	r2, r9
90018bb6:	e9cd 4300 	strd	r4, r3, [sp]
90018bba:	4603      	mov	r3, r0
90018bbc:	4650      	mov	r0, sl
90018bbe:	f7ff ffab 	bl	90018b18 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90018bc2:	6839      	ldr	r1, [r7, #0]
90018bc4:	9a05      	ldr	r2, [sp, #20]
90018bc6:	9b03      	ldr	r3, [sp, #12]
90018bc8:	4411      	add	r1, r2
90018bca:	fbb1 f2f4 	udiv	r2, r1, r4
90018bce:	18d3      	adds	r3, r2, r3
90018bd0:	fb04 1412 	mls	r4, r4, r2, r1
90018bd4:	441e      	add	r6, r3
90018bd6:	603c      	str	r4, [r7, #0]
90018bd8:	4430      	add	r0, r6
90018bda:	e7ae      	b.n	90018b3a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

90018bdc <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
90018bdc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90018be0:	b085      	sub	sp, #20
90018be2:	f1b0 0900 	subs.w	r9, r0, #0
90018be6:	461d      	mov	r5, r3
90018be8:	4617      	mov	r7, r2
90018bea:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90018bec:	bfbb      	ittet	lt
90018bee:	f1c9 0900 	rsblt	r9, r9, #0
90018bf2:	f04f 36ff 	movlt.w	r6, #4294967295
90018bf6:	2601      	movge	r6, #1
90018bf8:	6823      	ldrlt	r3, [r4, #0]
90018bfa:	bfbc      	itt	lt
90018bfc:	425b      	neglt	r3, r3
90018bfe:	6023      	strlt	r3, [r4, #0]
90018c00:	2a00      	cmp	r2, #0
90018c02:	da04      	bge.n	90018c0e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
90018c04:	6823      	ldr	r3, [r4, #0]
90018c06:	4257      	negs	r7, r2
90018c08:	4276      	negs	r6, r6
90018c0a:	425b      	negs	r3, r3
90018c0c:	6023      	str	r3, [r4, #0]
90018c0e:	2d00      	cmp	r5, #0
90018c10:	4638      	mov	r0, r7
90018c12:	bfba      	itte	lt
90018c14:	426d      	neglt	r5, r5
90018c16:	f04f 38ff 	movlt.w	r8, #4294967295
90018c1a:	f04f 0801 	movge.w	r8, #1
90018c1e:	f7ff ff5d 	bl	90018adc <_ZN8touchgfx16TouchCalibration4clzuEm>
90018c22:	ab03      	add	r3, sp, #12
90018c24:	463a      	mov	r2, r7
90018c26:	e9cd 5300 	strd	r5, r3, [sp]
90018c2a:	4603      	mov	r3, r0
90018c2c:	4648      	mov	r0, r9
90018c2e:	f7ff ff73 	bl	90018b18 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90018c32:	6823      	ldr	r3, [r4, #0]
90018c34:	9a03      	ldr	r2, [sp, #12]
90018c36:	4546      	cmp	r6, r8
90018c38:	441a      	add	r2, r3
90018c3a:	fb92 f3f5 	sdiv	r3, r2, r5
90018c3e:	4418      	add	r0, r3
90018c40:	fb05 2313 	mls	r3, r5, r3, r2
90018c44:	bf18      	it	ne
90018c46:	4240      	negne	r0, r0
90018c48:	1c72      	adds	r2, r6, #1
90018c4a:	6023      	str	r3, [r4, #0]
90018c4c:	d105      	bne.n	90018c5a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
90018c4e:	2b00      	cmp	r3, #0
90018c50:	f1c3 0200 	rsb	r2, r3, #0
90018c54:	db0b      	blt.n	90018c6e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
90018c56:	6022      	str	r2, [r4, #0]
90018c58:	e006      	b.n	90018c68 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90018c5a:	2e01      	cmp	r6, #1
90018c5c:	d104      	bne.n	90018c68 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90018c5e:	2b00      	cmp	r3, #0
90018c60:	da02      	bge.n	90018c68 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90018c62:	442b      	add	r3, r5
90018c64:	3801      	subs	r0, #1
90018c66:	6023      	str	r3, [r4, #0]
90018c68:	b005      	add	sp, #20
90018c6a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90018c6e:	3801      	subs	r0, #1
90018c70:	1b52      	subs	r2, r2, r5
90018c72:	e7f0      	b.n	90018c56 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

90018c74 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
90018c74:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90018c78:	4c1c      	ldr	r4, [pc, #112]	@ (90018cec <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
90018c7a:	4605      	mov	r5, r0
90018c7c:	6807      	ldr	r7, [r0, #0]
90018c7e:	69a3      	ldr	r3, [r4, #24]
90018c80:	b92b      	cbnz	r3, 90018c8e <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
90018c82:	6840      	ldr	r0, [r0, #4]
90018c84:	e9c5 7000 	strd	r7, r0, [r5]
90018c88:	b004      	add	sp, #16
90018c8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90018c8e:	f04f 0802 	mov.w	r8, #2
90018c92:	68a2      	ldr	r2, [r4, #8]
90018c94:	ae04      	add	r6, sp, #16
90018c96:	6820      	ldr	r0, [r4, #0]
90018c98:	fb93 f1f8 	sdiv	r1, r3, r8
90018c9c:	440a      	add	r2, r1
90018c9e:	69e1      	ldr	r1, [r4, #28]
90018ca0:	f846 2d04 	str.w	r2, [r6, #-4]!
90018ca4:	463a      	mov	r2, r7
90018ca6:	9600      	str	r6, [sp, #0]
90018ca8:	f7ff ff98 	bl	90018bdc <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90018cac:	69a3      	ldr	r3, [r4, #24]
90018cae:	4607      	mov	r7, r0
90018cb0:	686a      	ldr	r2, [r5, #4]
90018cb2:	6a21      	ldr	r1, [r4, #32]
90018cb4:	9600      	str	r6, [sp, #0]
90018cb6:	6860      	ldr	r0, [r4, #4]
90018cb8:	f7ff ff90 	bl	90018bdc <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90018cbc:	69a3      	ldr	r3, [r4, #24]
90018cbe:	6962      	ldr	r2, [r4, #20]
90018cc0:	4407      	add	r7, r0
90018cc2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90018cc4:	9600      	str	r6, [sp, #0]
90018cc6:	68e0      	ldr	r0, [r4, #12]
90018cc8:	fb93 f8f8 	sdiv	r8, r3, r8
90018ccc:	4442      	add	r2, r8
90018cce:	9203      	str	r2, [sp, #12]
90018cd0:	682a      	ldr	r2, [r5, #0]
90018cd2:	f7ff ff83 	bl	90018bdc <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90018cd6:	4680      	mov	r8, r0
90018cd8:	9600      	str	r6, [sp, #0]
90018cda:	69a3      	ldr	r3, [r4, #24]
90018cdc:	686a      	ldr	r2, [r5, #4]
90018cde:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
90018ce0:	6920      	ldr	r0, [r4, #16]
90018ce2:	f7ff ff7b 	bl	90018bdc <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90018ce6:	4440      	add	r0, r8
90018ce8:	e7cc      	b.n	90018c84 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
90018cea:	bf00      	nop
90018cec:	24021c20 	.word	0x24021c20

90018cf0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
90018cf0:	4b07      	ldr	r3, [pc, #28]	@ (90018d10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
90018cf2:	781b      	ldrb	r3, [r3, #0]
90018cf4:	2b01      	cmp	r3, #1
90018cf6:	d109      	bne.n	90018d0c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
90018cf8:	f9b1 3000 	ldrsh.w	r3, [r1]
90018cfc:	f9b0 2000 	ldrsh.w	r2, [r0]
90018d00:	8003      	strh	r3, [r0, #0]
90018d02:	4b04      	ldr	r3, [pc, #16]	@ (90018d14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
90018d04:	881b      	ldrh	r3, [r3, #0]
90018d06:	3b01      	subs	r3, #1
90018d08:	1a9b      	subs	r3, r3, r2
90018d0a:	800b      	strh	r3, [r1, #0]
90018d0c:	4770      	bx	lr
90018d0e:	bf00      	nop
90018d10:	24021c04 	.word	0x24021c04
90018d14:	24021c00 	.word	0x24021c00

90018d18 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
90018d18:	4b07      	ldr	r3, [pc, #28]	@ (90018d38 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
90018d1a:	b510      	push	{r4, lr}
90018d1c:	781b      	ldrb	r3, [r3, #0]
90018d1e:	2b01      	cmp	r3, #1
90018d20:	d108      	bne.n	90018d34 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
90018d22:	4b06      	ldr	r3, [pc, #24]	@ (90018d3c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
90018d24:	880c      	ldrh	r4, [r1, #0]
90018d26:	881b      	ldrh	r3, [r3, #0]
90018d28:	f9b0 2000 	ldrsh.w	r2, [r0]
90018d2c:	3b01      	subs	r3, #1
90018d2e:	1b1b      	subs	r3, r3, r4
90018d30:	8003      	strh	r3, [r0, #0]
90018d32:	800a      	strh	r2, [r1, #0]
90018d34:	bd10      	pop	{r4, pc}
90018d36:	bf00      	nop
90018d38:	24021c04 	.word	0x24021c04
90018d3c:	24021c00 	.word	0x24021c00

90018d40 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
90018d40:	4b0a      	ldr	r3, [pc, #40]	@ (90018d6c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
90018d42:	b510      	push	{r4, lr}
90018d44:	781b      	ldrb	r3, [r3, #0]
90018d46:	2b01      	cmp	r3, #1
90018d48:	d10e      	bne.n	90018d68 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
90018d4a:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90018d4e:	8843      	ldrh	r3, [r0, #2]
90018d50:	f9b0 4000 	ldrsh.w	r4, [r0]
90018d54:	18ca      	adds	r2, r1, r3
90018d56:	4b06      	ldr	r3, [pc, #24]	@ (90018d70 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
90018d58:	8044      	strh	r4, [r0, #2]
90018d5a:	881b      	ldrh	r3, [r3, #0]
90018d5c:	1a9b      	subs	r3, r3, r2
90018d5e:	8003      	strh	r3, [r0, #0]
90018d60:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90018d64:	8081      	strh	r1, [r0, #4]
90018d66:	80c3      	strh	r3, [r0, #6]
90018d68:	bd10      	pop	{r4, pc}
90018d6a:	bf00      	nop
90018d6c:	24021c04 	.word	0x24021c04
90018d70:	24021c00 	.word	0x24021c00

90018d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
90018d74:	4b08      	ldr	r3, [pc, #32]	@ (90018d98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
90018d76:	781b      	ldrb	r3, [r3, #0]
90018d78:	2b01      	cmp	r3, #1
90018d7a:	d10c      	bne.n	90018d96 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
90018d7c:	8803      	ldrh	r3, [r0, #0]
90018d7e:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
90018d82:	8842      	ldrh	r2, [r0, #2]
90018d84:	8002      	strh	r2, [r0, #0]
90018d86:	185a      	adds	r2, r3, r1
90018d88:	4b04      	ldr	r3, [pc, #16]	@ (90018d9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
90018d8a:	881b      	ldrh	r3, [r3, #0]
90018d8c:	1a9b      	subs	r3, r3, r2
90018d8e:	8043      	strh	r3, [r0, #2]
90018d90:	88c3      	ldrh	r3, [r0, #6]
90018d92:	80c1      	strh	r1, [r0, #6]
90018d94:	8083      	strh	r3, [r0, #4]
90018d96:	4770      	bx	lr
90018d98:	24021c04 	.word	0x24021c04
90018d9c:	24021c00 	.word	0x24021c00

90018da0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
90018da0:	4b07      	ldr	r3, [pc, #28]	@ (90018dc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
90018da2:	b510      	push	{r4, lr}
90018da4:	781b      	ldrb	r3, [r3, #0]
90018da6:	2b01      	cmp	r3, #1
90018da8:	d108      	bne.n	90018dbc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
90018daa:	f9b1 3000 	ldrsh.w	r3, [r1]
90018dae:	f9b0 4000 	ldrsh.w	r4, [r0]
90018db2:	8003      	strh	r3, [r0, #0]
90018db4:	8893      	ldrh	r3, [r2, #4]
90018db6:	3b01      	subs	r3, #1
90018db8:	1b1b      	subs	r3, r3, r4
90018dba:	800b      	strh	r3, [r1, #0]
90018dbc:	bd10      	pop	{r4, pc}
90018dbe:	bf00      	nop
90018dc0:	24021c04 	.word	0x24021c04

90018dc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
90018dc4:	4b0b      	ldr	r3, [pc, #44]	@ (90018df4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
90018dc6:	781b      	ldrb	r3, [r3, #0]
90018dc8:	2b01      	cmp	r3, #1
90018dca:	d111      	bne.n	90018df0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
90018dcc:	680b      	ldr	r3, [r1, #0]
90018dce:	ed90 7a00 	vldr	s14, [r0]
90018dd2:	6003      	str	r3, [r0, #0]
90018dd4:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
90018dd8:	eddf 6a07 	vldr	s13, [pc, #28]	@ 90018df8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
90018ddc:	ee07 3a90 	vmov	s15, r3
90018de0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018de4:	ee77 7ae6 	vsub.f32	s15, s15, s13
90018de8:	ee77 7ac7 	vsub.f32	s15, s15, s14
90018dec:	edc1 7a00 	vstr	s15, [r1]
90018df0:	4770      	bx	lr
90018df2:	bf00      	nop
90018df4:	24021c04 	.word	0x24021c04
90018df8:	38d1b717 	.word	0x38d1b717

90018dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
90018dfc:	4b0a      	ldr	r3, [pc, #40]	@ (90018e28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
90018dfe:	460a      	mov	r2, r1
90018e00:	b510      	push	{r4, lr}
90018e02:	781b      	ldrb	r3, [r3, #0]
90018e04:	2b01      	cmp	r3, #1
90018e06:	d10d      	bne.n	90018e24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
90018e08:	8881      	ldrh	r1, [r0, #4]
90018e0a:	8803      	ldrh	r3, [r0, #0]
90018e0c:	440b      	add	r3, r1
90018e0e:	4601      	mov	r1, r0
90018e10:	3b01      	subs	r3, #1
90018e12:	f821 3b02 	strh.w	r3, [r1], #2
90018e16:	f7ff ffc3 	bl	90018da0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
90018e1a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90018e1e:	88c2      	ldrh	r2, [r0, #6]
90018e20:	80c3      	strh	r3, [r0, #6]
90018e22:	8082      	strh	r2, [r0, #4]
90018e24:	bd10      	pop	{r4, pc}
90018e26:	bf00      	nop
90018e28:	24021c04 	.word	0x24021c04

90018e2c <_ZN8touchgfx11Application19changeToStartScreenEv>:
90018e2c:	4770      	bx	lr
	...

90018e30 <_ZN8touchgfx11Application13requestRedrawEv>:
90018e30:	4b06      	ldr	r3, [pc, #24]	@ (90018e4c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
90018e32:	2100      	movs	r1, #0
90018e34:	f9b3 2000 	ldrsh.w	r2, [r3]
90018e38:	4b05      	ldr	r3, [pc, #20]	@ (90018e50 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
90018e3a:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
90018e3e:	f9b3 3000 	ldrsh.w	r3, [r3]
90018e42:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
90018e46:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
90018e4a:	4770      	bx	lr
90018e4c:	24021c00 	.word	0x24021c00
90018e50:	24021c02 	.word	0x24021c02

90018e54 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
90018e54:	4b03      	ldr	r3, [pc, #12]	@ (90018e64 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
90018e56:	6818      	ldr	r0, [r3, #0]
90018e58:	b110      	cbz	r0, 90018e60 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
90018e5a:	6803      	ldr	r3, [r0, #0]
90018e5c:	699b      	ldr	r3, [r3, #24]
90018e5e:	4718      	bx	r3
90018e60:	4770      	bx	lr
90018e62:	bf00      	nop
90018e64:	24021c50 	.word	0x24021c50

90018e68 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
90018e68:	4770      	bx	lr
	...

90018e6c <_ZN8touchgfx11Application4drawEv>:
90018e6c:	4b09      	ldr	r3, [pc, #36]	@ (90018e94 <_ZN8touchgfx11Application4drawEv+0x28>)
90018e6e:	b507      	push	{r0, r1, r2, lr}
90018e70:	f9b3 2000 	ldrsh.w	r2, [r3]
90018e74:	2100      	movs	r1, #0
90018e76:	4b08      	ldr	r3, [pc, #32]	@ (90018e98 <_ZN8touchgfx11Application4drawEv+0x2c>)
90018e78:	9100      	str	r1, [sp, #0]
90018e7a:	4669      	mov	r1, sp
90018e7c:	f9b3 3000 	ldrsh.w	r3, [r3]
90018e80:	f8ad 2004 	strh.w	r2, [sp, #4]
90018e84:	f8ad 3006 	strh.w	r3, [sp, #6]
90018e88:	6803      	ldr	r3, [r0, #0]
90018e8a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90018e8c:	4798      	blx	r3
90018e8e:	b003      	add	sp, #12
90018e90:	f85d fb04 	ldr.w	pc, [sp], #4
90018e94:	24021c00 	.word	0x24021c00
90018e98:	24021c02 	.word	0x24021c02

90018e9c <_ZN8touchgfx11Application10invalidateEv>:
90018e9c:	4b09      	ldr	r3, [pc, #36]	@ (90018ec4 <_ZN8touchgfx11Application10invalidateEv+0x28>)
90018e9e:	b082      	sub	sp, #8
90018ea0:	2100      	movs	r1, #0
90018ea2:	f9b3 2000 	ldrsh.w	r2, [r3]
90018ea6:	4b08      	ldr	r3, [pc, #32]	@ (90018ec8 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
90018ea8:	f8ad 2004 	strh.w	r2, [sp, #4]
90018eac:	aa02      	add	r2, sp, #8
90018eae:	f9b3 3000 	ldrsh.w	r3, [r3]
90018eb2:	9100      	str	r1, [sp, #0]
90018eb4:	f8ad 3006 	strh.w	r3, [sp, #6]
90018eb8:	6803      	ldr	r3, [r0, #0]
90018eba:	e912 0006 	ldmdb	r2, {r1, r2}
90018ebe:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90018ec0:	b002      	add	sp, #8
90018ec2:	4718      	bx	r3
90018ec4:	24021c00 	.word	0x24021c00
90018ec8:	24021c02 	.word	0x24021c02

90018ecc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
90018ecc:	4b03      	ldr	r3, [pc, #12]	@ (90018edc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
90018ece:	6818      	ldr	r0, [r3, #0]
90018ed0:	b110      	cbz	r0, 90018ed8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
90018ed2:	6803      	ldr	r3, [r0, #0]
90018ed4:	69db      	ldr	r3, [r3, #28]
90018ed6:	4718      	bx	r3
90018ed8:	4770      	bx	lr
90018eda:	bf00      	nop
90018edc:	24021c50 	.word	0x24021c50

90018ee0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
90018ee0:	4b03      	ldr	r3, [pc, #12]	@ (90018ef0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
90018ee2:	6818      	ldr	r0, [r3, #0]
90018ee4:	b110      	cbz	r0, 90018eec <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
90018ee6:	6803      	ldr	r3, [r0, #0]
90018ee8:	6a1b      	ldr	r3, [r3, #32]
90018eea:	4718      	bx	r3
90018eec:	4770      	bx	lr
90018eee:	bf00      	nop
90018ef0:	24021c50 	.word	0x24021c50

90018ef4 <_ZN8touchgfx11Application16clearCachedAreasEv>:
90018ef4:	2300      	movs	r3, #0
90018ef6:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
90018efa:	4770      	bx	lr

90018efc <_ZN8touchgfx11Application14handleKeyEventEh>:
90018efc:	4b03      	ldr	r3, [pc, #12]	@ (90018f0c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
90018efe:	6818      	ldr	r0, [r3, #0]
90018f00:	b110      	cbz	r0, 90018f08 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
90018f02:	6803      	ldr	r3, [r0, #0]
90018f04:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90018f06:	4718      	bx	r3
90018f08:	4770      	bx	lr
90018f0a:	bf00      	nop
90018f0c:	24021c50 	.word	0x24021c50

90018f10 <_ZN8touchgfx11ApplicationD1Ev>:
90018f10:	4770      	bx	lr

90018f12 <_ZN8touchgfx11ApplicationD0Ev>:
90018f12:	b510      	push	{r4, lr}
90018f14:	4604      	mov	r4, r0
90018f16:	f44f 719e 	mov.w	r1, #316	@ 0x13c
90018f1a:	f013 fecf 	bl	9002ccbc <_ZdlPvj>
90018f1e:	4620      	mov	r0, r4
90018f20:	bd10      	pop	{r4, pc}

90018f22 <_ZNK8touchgfx4Rect9intersectERKS0_>:
90018f22:	b510      	push	{r4, lr}
90018f24:	f9b1 4000 	ldrsh.w	r4, [r1]
90018f28:	888a      	ldrh	r2, [r1, #4]
90018f2a:	f9b0 3000 	ldrsh.w	r3, [r0]
90018f2e:	4422      	add	r2, r4
90018f30:	b212      	sxth	r2, r2
90018f32:	4293      	cmp	r3, r2
90018f34:	da15      	bge.n	90018f62 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90018f36:	8882      	ldrh	r2, [r0, #4]
90018f38:	4413      	add	r3, r2
90018f3a:	b21b      	sxth	r3, r3
90018f3c:	429c      	cmp	r4, r3
90018f3e:	da10      	bge.n	90018f62 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90018f40:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90018f44:	88c9      	ldrh	r1, [r1, #6]
90018f46:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90018f4a:	4419      	add	r1, r3
90018f4c:	b209      	sxth	r1, r1
90018f4e:	428a      	cmp	r2, r1
90018f50:	da07      	bge.n	90018f62 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90018f52:	88c0      	ldrh	r0, [r0, #6]
90018f54:	4410      	add	r0, r2
90018f56:	b200      	sxth	r0, r0
90018f58:	4283      	cmp	r3, r0
90018f5a:	bfac      	ite	ge
90018f5c:	2000      	movge	r0, #0
90018f5e:	2001      	movlt	r0, #1
90018f60:	bd10      	pop	{r4, pc}
90018f62:	2000      	movs	r0, #0
90018f64:	e7fc      	b.n	90018f60 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

90018f66 <_ZN8touchgfx4Rect10restrictToEss>:
90018f66:	f9b0 3000 	ldrsh.w	r3, [r0]
90018f6a:	2b00      	cmp	r3, #0
90018f6c:	b510      	push	{r4, lr}
90018f6e:	da04      	bge.n	90018f7a <_ZN8touchgfx4Rect10restrictToEss+0x14>
90018f70:	8884      	ldrh	r4, [r0, #4]
90018f72:	4423      	add	r3, r4
90018f74:	8083      	strh	r3, [r0, #4]
90018f76:	2300      	movs	r3, #0
90018f78:	8003      	strh	r3, [r0, #0]
90018f7a:	f9b0 4000 	ldrsh.w	r4, [r0]
90018f7e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90018f82:	1b09      	subs	r1, r1, r4
90018f84:	428b      	cmp	r3, r1
90018f86:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90018f8a:	bfc8      	it	gt
90018f8c:	8081      	strhgt	r1, [r0, #4]
90018f8e:	2b00      	cmp	r3, #0
90018f90:	da04      	bge.n	90018f9c <_ZN8touchgfx4Rect10restrictToEss+0x36>
90018f92:	88c1      	ldrh	r1, [r0, #6]
90018f94:	440b      	add	r3, r1
90018f96:	80c3      	strh	r3, [r0, #6]
90018f98:	2300      	movs	r3, #0
90018f9a:	8043      	strh	r3, [r0, #2]
90018f9c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90018fa0:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
90018fa4:	1a52      	subs	r2, r2, r1
90018fa6:	4293      	cmp	r3, r2
90018fa8:	bfc8      	it	gt
90018faa:	80c2      	strhgt	r2, [r0, #6]
90018fac:	bd10      	pop	{r4, pc}
	...

90018fb0 <_ZN8touchgfx11Application4drawERNS_4RectE>:
90018fb0:	4b10      	ldr	r3, [pc, #64]	@ (90018ff4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
90018fb2:	b510      	push	{r4, lr}
90018fb4:	460c      	mov	r4, r1
90018fb6:	f9b3 2000 	ldrsh.w	r2, [r3]
90018fba:	4b0f      	ldr	r3, [pc, #60]	@ (90018ff8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
90018fbc:	4620      	mov	r0, r4
90018fbe:	f9b3 1000 	ldrsh.w	r1, [r3]
90018fc2:	f7ff ffd0 	bl	90018f66 <_ZN8touchgfx4Rect10restrictToEss>
90018fc6:	4b0d      	ldr	r3, [pc, #52]	@ (90018ffc <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
90018fc8:	6818      	ldr	r0, [r3, #0]
90018fca:	b190      	cbz	r0, 90018ff2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
90018fcc:	6803      	ldr	r3, [r0, #0]
90018fce:	4621      	mov	r1, r4
90018fd0:	689b      	ldr	r3, [r3, #8]
90018fd2:	4798      	blx	r3
90018fd4:	4b0a      	ldr	r3, [pc, #40]	@ (90019000 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
90018fd6:	6818      	ldr	r0, [r3, #0]
90018fd8:	b118      	cbz	r0, 90018fe2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
90018fda:	6803      	ldr	r3, [r0, #0]
90018fdc:	4621      	mov	r1, r4
90018fde:	689b      	ldr	r3, [r3, #8]
90018fe0:	4798      	blx	r3
90018fe2:	4b08      	ldr	r3, [pc, #32]	@ (90019004 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
90018fe4:	4621      	mov	r1, r4
90018fe6:	6818      	ldr	r0, [r3, #0]
90018fe8:	6803      	ldr	r3, [r0, #0]
90018fea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90018fee:	69db      	ldr	r3, [r3, #28]
90018ff0:	4718      	bx	r3
90018ff2:	bd10      	pop	{r4, pc}
90018ff4:	24021c02 	.word	0x24021c02
90018ff8:	24021c00 	.word	0x24021c00
90018ffc:	24021c50 	.word	0x24021c50
90019000:	24021c4c 	.word	0x24021c4c
90019004:	24021c0c 	.word	0x24021c0c

90019008 <_ZNK8touchgfx4Rect8includesERKS0_>:
90019008:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001900a:	4606      	mov	r6, r0
9001900c:	4608      	mov	r0, r1
9001900e:	460f      	mov	r7, r1
90019010:	f7f9 fbff 	bl	90012812 <_ZNK8touchgfx4Rect7isEmptyEv>
90019014:	b9e8      	cbnz	r0, 90019052 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90019016:	f9b7 5000 	ldrsh.w	r5, [r7]
9001901a:	f9b6 4000 	ldrsh.w	r4, [r6]
9001901e:	42a5      	cmp	r5, r4
90019020:	db17      	blt.n	90019052 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90019022:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
90019026:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
9001902a:	429a      	cmp	r2, r3
9001902c:	db11      	blt.n	90019052 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
9001902e:	88b9      	ldrh	r1, [r7, #4]
90019030:	440d      	add	r5, r1
90019032:	88b1      	ldrh	r1, [r6, #4]
90019034:	440c      	add	r4, r1
90019036:	b22d      	sxth	r5, r5
90019038:	b224      	sxth	r4, r4
9001903a:	42a5      	cmp	r5, r4
9001903c:	dc09      	bgt.n	90019052 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
9001903e:	88f8      	ldrh	r0, [r7, #6]
90019040:	4410      	add	r0, r2
90019042:	88f2      	ldrh	r2, [r6, #6]
90019044:	4413      	add	r3, r2
90019046:	b200      	sxth	r0, r0
90019048:	b21b      	sxth	r3, r3
9001904a:	4298      	cmp	r0, r3
9001904c:	bfcc      	ite	gt
9001904e:	2000      	movgt	r0, #0
90019050:	2001      	movle	r0, #1
90019052:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90019054 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
90019054:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90019056:	4604      	mov	r4, r0
90019058:	4608      	mov	r0, r1
9001905a:	460d      	mov	r5, r1
9001905c:	f7f9 fbd9 	bl	90012812 <_ZNK8touchgfx4Rect7isEmptyEv>
90019060:	b978      	cbnz	r0, 90019082 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
90019062:	4620      	mov	r0, r4
90019064:	f7f9 fbd5 	bl	90012812 <_ZNK8touchgfx4Rect7isEmptyEv>
90019068:	f9b5 6000 	ldrsh.w	r6, [r5]
9001906c:	b150      	cbz	r0, 90019084 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
9001906e:	8026      	strh	r6, [r4, #0]
90019070:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90019074:	8063      	strh	r3, [r4, #2]
90019076:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
9001907a:	80a3      	strh	r3, [r4, #4]
9001907c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90019080:	80e3      	strh	r3, [r4, #6]
90019082:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90019084:	f9b4 1000 	ldrsh.w	r1, [r4]
90019088:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
9001908c:	42b1      	cmp	r1, r6
9001908e:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
90019092:	f8b5 c004 	ldrh.w	ip, [r5, #4]
90019096:	460f      	mov	r7, r1
90019098:	88ed      	ldrh	r5, [r5, #6]
9001909a:	bfa8      	it	ge
9001909c:	4637      	movge	r7, r6
9001909e:	4293      	cmp	r3, r2
900190a0:	4618      	mov	r0, r3
900190a2:	4466      	add	r6, ip
900190a4:	f8b4 c004 	ldrh.w	ip, [r4, #4]
900190a8:	bfa8      	it	ge
900190aa:	4610      	movge	r0, r2
900190ac:	442a      	add	r2, r5
900190ae:	88e5      	ldrh	r5, [r4, #6]
900190b0:	4461      	add	r1, ip
900190b2:	b236      	sxth	r6, r6
900190b4:	8027      	strh	r7, [r4, #0]
900190b6:	442b      	add	r3, r5
900190b8:	b209      	sxth	r1, r1
900190ba:	b212      	sxth	r2, r2
900190bc:	8060      	strh	r0, [r4, #2]
900190be:	b21b      	sxth	r3, r3
900190c0:	428e      	cmp	r6, r1
900190c2:	bfac      	ite	ge
900190c4:	ebc7 0106 	rsbge	r1, r7, r6
900190c8:	ebc7 0101 	rsblt	r1, r7, r1
900190cc:	429a      	cmp	r2, r3
900190ce:	bfac      	ite	ge
900190d0:	ebc0 0202 	rsbge	r2, r0, r2
900190d4:	ebc0 0203 	rsblt	r2, r0, r3
900190d8:	80a1      	strh	r1, [r4, #4]
900190da:	80e2      	strh	r2, [r4, #6]
900190dc:	e7d1      	b.n	90019082 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

900190e0 <_ZN8touchgfx11Application11getInstanceEv>:
900190e0:	4b01      	ldr	r3, [pc, #4]	@ (900190e8 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
900190e2:	6818      	ldr	r0, [r3, #0]
900190e4:	4770      	bx	lr
900190e6:	bf00      	nop
900190e8:	24021c60 	.word	0x24021c60

900190ec <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
900190ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900190ee:	4b10      	ldr	r3, [pc, #64]	@ (90019130 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
900190f0:	4605      	mov	r5, r0
900190f2:	781b      	ldrb	r3, [r3, #0]
900190f4:	b1d3      	cbz	r3, 9001912c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
900190f6:	4b0f      	ldr	r3, [pc, #60]	@ (90019134 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
900190f8:	f100 06ee 	add.w	r6, r0, #238	@ 0xee
900190fc:	4f0e      	ldr	r7, [pc, #56]	@ (90019138 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
900190fe:	881c      	ldrh	r4, [r3, #0]
90019100:	f8b5 312e 	ldrh.w	r3, [r5, #302]	@ 0x12e
90019104:	42a3      	cmp	r3, r4
90019106:	d90e      	bls.n	90019126 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
90019108:	683b      	ldr	r3, [r7, #0]
9001910a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
9001910e:	b10a      	cbz	r2, 90019114 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
90019110:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90019112:	b900      	cbnz	r0, 90019116 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
90019114:	6898      	ldr	r0, [r3, #8]
90019116:	6803      	ldr	r3, [r0, #0]
90019118:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
9001911c:	3401      	adds	r4, #1
9001911e:	69db      	ldr	r3, [r3, #28]
90019120:	4798      	blx	r3
90019122:	b2a4      	uxth	r4, r4
90019124:	e7ec      	b.n	90019100 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
90019126:	2300      	movs	r3, #0
90019128:	f8a5 312e 	strh.w	r3, [r5, #302]	@ 0x12e
9001912c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001912e:	bf00      	nop
90019130:	24021c0a 	.word	0x24021c0a
90019134:	24000088 	.word	0x24000088
90019138:	24021c0c 	.word	0x24021c0c

9001913c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
9001913c:	2300      	movs	r3, #0
9001913e:	b510      	push	{r4, lr}
90019140:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
90019144:	4604      	mov	r4, r0
90019146:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
9001914a:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
9001914e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
90019152:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
90019156:	429a      	cmp	r2, r3
90019158:	d90e      	bls.n	90019178 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
9001915a:	18e2      	adds	r2, r4, r3
9001915c:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
90019160:	b122      	cbz	r2, 9001916c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
90019162:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
90019166:	6803      	ldr	r3, [r0, #0]
90019168:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001916a:	4798      	blx	r3
9001916c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
90019170:	3301      	adds	r3, #1
90019172:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
90019176:	e7ea      	b.n	9001914e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
90019178:	bd10      	pop	{r4, pc}

9001917a <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
9001917a:	2300      	movs	r3, #0
9001917c:	f100 0284 	add.w	r2, r0, #132	@ 0x84
90019180:	30a4      	adds	r0, #164	@ 0xa4
90019182:	f820 3c24 	strh.w	r3, [r0, #-36]
90019186:	f802 3b01 	strb.w	r3, [r2], #1
9001918a:	4282      	cmp	r2, r0
9001918c:	d1fb      	bne.n	90019186 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
9001918e:	4770      	bx	lr

90019190 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
90019190:	b570      	push	{r4, r5, r6, lr}
90019192:	4c0b      	ldr	r4, [pc, #44]	@ (900191c0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
90019194:	4605      	mov	r5, r0
90019196:	460e      	mov	r6, r1
90019198:	6820      	ldr	r0, [r4, #0]
9001919a:	b110      	cbz	r0, 900191a2 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
9001919c:	6803      	ldr	r3, [r0, #0]
9001919e:	695b      	ldr	r3, [r3, #20]
900191a0:	4798      	blx	r3
900191a2:	1d28      	adds	r0, r5, #4
900191a4:	f7ff ffe9 	bl	9001917a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
900191a8:	6026      	str	r6, [r4, #0]
900191aa:	6833      	ldr	r3, [r6, #0]
900191ac:	4630      	mov	r0, r6
900191ae:	68db      	ldr	r3, [r3, #12]
900191b0:	4798      	blx	r3
900191b2:	682b      	ldr	r3, [r5, #0]
900191b4:	4628      	mov	r0, r5
900191b6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900191b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900191bc:	4718      	bx	r3
900191be:	bf00      	nop
900191c0:	24021c50 	.word	0x24021c50

900191c4 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
900191c4:	2300      	movs	r3, #0
900191c6:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
900191ca:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
900191ce:	461a      	mov	r2, r3
900191d0:	b5f0      	push	{r4, r5, r6, r7, lr}
900191d2:	461c      	mov	r4, r3
900191d4:	461d      	mov	r5, r3
900191d6:	459c      	cmp	ip, r3
900191d8:	dd1a      	ble.n	90019210 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
900191da:	18c6      	adds	r6, r0, r3
900191dc:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
900191e0:	b16e      	cbz	r6, 900191fe <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
900191e2:	429a      	cmp	r2, r3
900191e4:	d008      	beq.n	900191f8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
900191e6:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
900191ea:	fa1f fe82 	uxth.w	lr, r2
900191ee:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
900191f2:	1887      	adds	r7, r0, r2
900191f4:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
900191f8:	3201      	adds	r2, #1
900191fa:	3301      	adds	r3, #1
900191fc:	e7eb      	b.n	900191d6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
900191fe:	4299      	cmp	r1, r3
90019200:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
90019204:	bfa8      	it	ge
90019206:	3501      	addge	r5, #1
90019208:	429e      	cmp	r6, r3
9001920a:	bfc8      	it	gt
9001920c:	3401      	addgt	r4, #1
9001920e:	e7f4      	b.n	900191fa <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
90019210:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
90019214:	1b49      	subs	r1, r1, r5
90019216:	1b1b      	subs	r3, r3, r4
90019218:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
9001921c:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
90019220:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
90019224:	4293      	cmp	r3, r2
90019226:	dd03      	ble.n	90019230 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
90019228:	3b01      	subs	r3, #1
9001922a:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
9001922e:	e7f7      	b.n	90019220 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
90019230:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

90019234 <_ZN8touchgfx11Application15handleTickEventEv>:
90019234:	b570      	push	{r4, r5, r6, lr}
90019236:	4d16      	ldr	r5, [pc, #88]	@ (90019290 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
90019238:	4604      	mov	r4, r0
9001923a:	6828      	ldr	r0, [r5, #0]
9001923c:	b140      	cbz	r0, 90019250 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
9001923e:	7a03      	ldrb	r3, [r0, #8]
90019240:	b933      	cbnz	r3, 90019250 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
90019242:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
90019246:	6803      	ldr	r3, [r0, #0]
90019248:	689b      	ldr	r3, [r3, #8]
9001924a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001924e:	4718      	bx	r3
90019250:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
90019254:	4e0f      	ldr	r6, [pc, #60]	@ (90019294 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
90019256:	b973      	cbnz	r3, 90019276 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90019258:	b168      	cbz	r0, 90019276 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
9001925a:	7a03      	ldrb	r3, [r0, #8]
9001925c:	b15b      	cbz	r3, 90019276 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
9001925e:	6830      	ldr	r0, [r6, #0]
90019260:	b110      	cbz	r0, 90019268 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
90019262:	6803      	ldr	r3, [r0, #0]
90019264:	691b      	ldr	r3, [r3, #16]
90019266:	4798      	blx	r3
90019268:	6828      	ldr	r0, [r5, #0]
9001926a:	6803      	ldr	r3, [r0, #0]
9001926c:	68db      	ldr	r3, [r3, #12]
9001926e:	4798      	blx	r3
90019270:	2301      	movs	r3, #1
90019272:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
90019276:	3404      	adds	r4, #4
90019278:	4620      	mov	r0, r4
9001927a:	f7ff ff5f 	bl	9001913c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
9001927e:	4620      	mov	r0, r4
90019280:	f7ff ffa0 	bl	900191c4 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
90019284:	6830      	ldr	r0, [r6, #0]
90019286:	b110      	cbz	r0, 9001928e <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
90019288:	6803      	ldr	r3, [r0, #0]
9001928a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9001928c:	e7dd      	b.n	9001924a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
9001928e:	bd70      	pop	{r4, r5, r6, pc}
90019290:	24021c54 	.word	0x24021c54
90019294:	24021c50 	.word	0x24021c50

90019298 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
90019298:	4603      	mov	r3, r0
9001929a:	f100 0140 	add.w	r1, r0, #64	@ 0x40
9001929e:	2200      	movs	r2, #0
900192a0:	801a      	strh	r2, [r3, #0]
900192a2:	3308      	adds	r3, #8
900192a4:	f823 2c06 	strh.w	r2, [r3, #-6]
900192a8:	f823 2c04 	strh.w	r2, [r3, #-4]
900192ac:	f823 2c02 	strh.w	r2, [r3, #-2]
900192b0:	428b      	cmp	r3, r1
900192b2:	d1f5      	bne.n	900192a0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
900192b4:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
900192b8:	4770      	bx	lr
	...

900192bc <_ZN8touchgfx11ApplicationC1Ev>:
900192bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900192be:	4b1d      	ldr	r3, [pc, #116]	@ (90019334 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
900192c0:	4606      	mov	r6, r0
900192c2:	4604      	mov	r4, r0
900192c4:	2500      	movs	r5, #0
900192c6:	f846 3b04 	str.w	r3, [r6], #4
900192ca:	22a8      	movs	r2, #168	@ 0xa8
900192cc:	2100      	movs	r1, #0
900192ce:	4630      	mov	r0, r6
900192d0:	f014 fb20 	bl	9002d914 <memset>
900192d4:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
900192d8:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
900192dc:	4f16      	ldr	r7, [pc, #88]	@ (90019338 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
900192de:	f7ff ffdb 	bl	90019298 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
900192e2:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
900192e6:	f7ff ffd7 	bl	90019298 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
900192ea:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
900192ee:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
900192f2:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
900192f6:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
900192fa:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
900192fe:	490f      	ldr	r1, [pc, #60]	@ (9001933c <_ZN8touchgfx11ApplicationC1Ev+0x80>)
90019300:	480f      	ldr	r0, [pc, #60]	@ (90019340 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
90019302:	f011 ff01 	bl	9002b108 <CRC_Lock>
90019306:	4b0f      	ldr	r3, [pc, #60]	@ (90019344 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
90019308:	b158      	cbz	r0, 90019322 <_ZN8touchgfx11ApplicationC1Ev+0x66>
9001930a:	801d      	strh	r5, [r3, #0]
9001930c:	2300      	movs	r3, #0
9001930e:	4a0e      	ldr	r2, [pc, #56]	@ (90019348 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
90019310:	4630      	mov	r0, r6
90019312:	6013      	str	r3, [r2, #0]
90019314:	4a0d      	ldr	r2, [pc, #52]	@ (9001934c <_ZN8touchgfx11ApplicationC1Ev+0x90>)
90019316:	603b      	str	r3, [r7, #0]
90019318:	6013      	str	r3, [r2, #0]
9001931a:	f7ff ff2e 	bl	9001917a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
9001931e:	4620      	mov	r0, r4
90019320:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90019322:	f44f 6280 	mov.w	r2, #1024	@ 0x400
90019326:	2002      	movs	r0, #2
90019328:	801a      	strh	r2, [r3, #0]
9001932a:	6038      	str	r0, [r7, #0]
9001932c:	f001 ff66 	bl	9001b1fc <_ZN8touchgfx6Screen4drawEv>
90019330:	e7ec      	b.n	9001930c <_ZN8touchgfx11ApplicationC1Ev+0x50>
90019332:	bf00      	nop
90019334:	90031e14 	.word	0x90031e14
90019338:	24021c50 	.word	0x24021c50
9001933c:	b5e8b5cd 	.word	0xb5e8b5cd
90019340:	f407a5c2 	.word	0xf407a5c2
90019344:	24000088 	.word	0x24000088
90019348:	24021c60 	.word	0x24021c60
9001934c:	24021c54 	.word	0x24021c54

90019350 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
90019350:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
90019354:	3b01      	subs	r3, #1
90019356:	b29b      	uxth	r3, r3
90019358:	428b      	cmp	r3, r1
9001935a:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
9001935e:	b510      	push	{r4, lr}
90019360:	d908      	bls.n	90019374 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
90019362:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
90019366:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
9001936a:	681a      	ldr	r2, [r3, #0]
9001936c:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
90019370:	685a      	ldr	r2, [r3, #4]
90019372:	6062      	str	r2, [r4, #4]
90019374:	bd10      	pop	{r4, pc}
	...

90019378 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
90019378:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001937c:	b08f      	sub	sp, #60	@ 0x3c
9001937e:	4b92      	ldr	r3, [pc, #584]	@ (900195c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x250>)
90019380:	4683      	mov	fp, r0
90019382:	ac0a      	add	r4, sp, #40	@ 0x28
90019384:	e884 0006 	stmia.w	r4, {r1, r2}
90019388:	f9b3 2000 	ldrsh.w	r2, [r3]
9001938c:	4620      	mov	r0, r4
9001938e:	4b8f      	ldr	r3, [pc, #572]	@ (900195cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x254>)
90019390:	f9b3 1000 	ldrsh.w	r1, [r3]
90019394:	f7ff fde7 	bl	90018f66 <_ZN8touchgfx4Rect10restrictToEss>
90019398:	4620      	mov	r0, r4
9001939a:	f7f9 fa3a 	bl	90012812 <_ZNK8touchgfx4Rect7isEmptyEv>
9001939e:	2800      	cmp	r0, #0
900193a0:	d170      	bne.n	90019484 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
900193a2:	4b8b      	ldr	r3, [pc, #556]	@ (900195d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
900193a4:	681b      	ldr	r3, [r3, #0]
900193a6:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
900193aa:	2b02      	cmp	r3, #2
900193ac:	d06a      	beq.n	90019484 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
900193ae:	9403      	str	r4, [sp, #12]
900193b0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
900193b4:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
900193b8:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
900193bc:	9301      	str	r3, [sp, #4]
900193be:	35a4      	adds	r5, #164	@ 0xa4
900193c0:	b15c      	cbz	r4, 900193da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
900193c2:	4629      	mov	r1, r5
900193c4:	9803      	ldr	r0, [sp, #12]
900193c6:	f7ff fe1f 	bl	90019008 <_ZNK8touchgfx4Rect8includesERKS0_>
900193ca:	3c01      	subs	r4, #1
900193cc:	b118      	cbz	r0, 900193d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
900193ce:	b2a1      	uxth	r1, r4
900193d0:	9801      	ldr	r0, [sp, #4]
900193d2:	f7ff ffbd 	bl	90019350 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900193d6:	3d08      	subs	r5, #8
900193d8:	e7f2      	b.n	900193c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
900193da:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
900193de:	f10a 33ff 	add.w	r3, sl, #4294967295
900193e2:	f8cd a010 	str.w	sl, [sp, #16]
900193e6:	9302      	str	r3, [sp, #8]
900193e8:	ea4f 03ca 	mov.w	r3, sl, lsl #3
900193ec:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
900193f0:	9306      	str	r3, [sp, #24]
900193f2:	445c      	add	r4, fp
900193f4:	2500      	movs	r5, #0
900193f6:	4626      	mov	r6, r4
900193f8:	f8cd a014 	str.w	sl, [sp, #20]
900193fc:	462f      	mov	r7, r5
900193fe:	9b05      	ldr	r3, [sp, #20]
90019400:	2b00      	cmp	r3, #0
90019402:	d073      	beq.n	900194ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x174>
90019404:	9903      	ldr	r1, [sp, #12]
90019406:	4630      	mov	r0, r6
90019408:	f7ff fd8b 	bl	90018f22 <_ZNK8touchgfx4Rect9intersectERKS0_>
9001940c:	b350      	cbz	r0, 90019464 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
9001940e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
90019412:	f9b6 c000 	ldrsh.w	ip, [r6]
90019416:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
9001941a:	45e6      	cmp	lr, ip
9001941c:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
90019420:	db33      	blt.n	9001948a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
90019422:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
90019426:	88b3      	ldrh	r3, [r6, #4]
90019428:	4472      	add	r2, lr
9001942a:	4463      	add	r3, ip
9001942c:	b212      	sxth	r2, r2
9001942e:	b21b      	sxth	r3, r3
90019430:	429a      	cmp	r2, r3
90019432:	dc2a      	bgt.n	9001948a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
90019434:	fa1f f289 	uxth.w	r2, r9
90019438:	88f3      	ldrh	r3, [r6, #6]
9001943a:	45c8      	cmp	r8, r9
9001943c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
90019440:	4413      	add	r3, r2
90019442:	fa1f fc88 	uxth.w	ip, r8
90019446:	b29b      	uxth	r3, r3
90019448:	fa0f fe83 	sxth.w	lr, r3
9001944c:	db0f      	blt.n	9001946e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf6>
9001944e:	eba3 030c 	sub.w	r3, r3, ip
90019452:	1ac9      	subs	r1, r1, r3
90019454:	b209      	sxth	r1, r1
90019456:	2900      	cmp	r1, #0
90019458:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
9001945c:	dd12      	ble.n	90019484 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
9001945e:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
90019462:	4605      	mov	r5, r0
90019464:	9b05      	ldr	r3, [sp, #20]
90019466:	3e08      	subs	r6, #8
90019468:	3b01      	subs	r3, #1
9001946a:	9305      	str	r3, [sp, #20]
9001946c:	e7c7      	b.n	900193fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x86>
9001946e:	4461      	add	r1, ip
90019470:	b209      	sxth	r1, r1
90019472:	4571      	cmp	r1, lr
90019474:	dc38      	bgt.n	900194e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
90019476:	eba2 020c 	sub.w	r2, r2, ip
9001947a:	b212      	sxth	r2, r2
9001947c:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
90019480:	2a00      	cmp	r2, #0
90019482:	dcee      	bgt.n	90019462 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
90019484:	b00f      	add	sp, #60	@ 0x3c
90019486:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001948a:	45c8      	cmp	r8, r9
9001948c:	db2c      	blt.n	900194e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
9001948e:	88f3      	ldrh	r3, [r6, #6]
90019490:	4499      	add	r9, r3
90019492:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
90019496:	4498      	add	r8, r3
90019498:	fa0f f989 	sxth.w	r9, r9
9001949c:	fa0f f888 	sxth.w	r8, r8
900194a0:	45c1      	cmp	r9, r8
900194a2:	db21      	blt.n	900194e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
900194a4:	fa1f f28c 	uxth.w	r2, ip
900194a8:	88b3      	ldrh	r3, [r6, #4]
900194aa:	45e6      	cmp	lr, ip
900194ac:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
900194b0:	4413      	add	r3, r2
900194b2:	fa1f f88e 	uxth.w	r8, lr
900194b6:	b29b      	uxth	r3, r3
900194b8:	fa0f f983 	sxth.w	r9, r3
900194bc:	db0a      	blt.n	900194d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15c>
900194be:	eba3 0308 	sub.w	r3, r3, r8
900194c2:	1ac9      	subs	r1, r1, r3
900194c4:	b209      	sxth	r1, r1
900194c6:	2900      	cmp	r1, #0
900194c8:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
900194cc:	ddda      	ble.n	90019484 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
900194ce:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
900194d2:	e7c6      	b.n	90019462 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
900194d4:	4441      	add	r1, r8
900194d6:	b209      	sxth	r1, r1
900194d8:	4549      	cmp	r1, r9
900194da:	dc05      	bgt.n	900194e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
900194dc:	eba2 0208 	sub.w	r2, r2, r8
900194e0:	b212      	sxth	r2, r2
900194e2:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
900194e6:	e7cb      	b.n	90019480 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x108>
900194e8:	4607      	mov	r7, r0
900194ea:	e7bb      	b.n	90019464 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
900194ec:	2d00      	cmp	r5, #0
900194ee:	d181      	bne.n	900193f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7c>
900194f0:	2f00      	cmp	r7, #0
900194f2:	f000 81df 	beq.w	900198b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
900194f6:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
900194fa:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
900194fe:	b2b3      	uxth	r3, r6
90019500:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
90019504:	9305      	str	r3, [sp, #20]
90019506:	9a05      	ldr	r2, [sp, #20]
90019508:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
9001950c:	4413      	add	r3, r2
9001950e:	b2ba      	uxth	r2, r7
90019510:	4492      	add	sl, r2
90019512:	b29b      	uxth	r3, r3
90019514:	fa1f fa8a 	uxth.w	sl, sl
90019518:	fa0f f883 	sxth.w	r8, r3
9001951c:	fa0f f98a 	sxth.w	r9, sl
90019520:	e9cd 2307 	strd	r2, r3, [sp, #28]
90019524:	9b04      	ldr	r3, [sp, #16]
90019526:	2b00      	cmp	r3, #0
90019528:	d054      	beq.n	900195d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>
9001952a:	9903      	ldr	r1, [sp, #12]
9001952c:	4620      	mov	r0, r4
9001952e:	f7ff fcf8 	bl	90018f22 <_ZNK8touchgfx4Rect9intersectERKS0_>
90019532:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
90019536:	b1c0      	cbz	r0, 9001956a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
90019538:	f9b4 e000 	ldrsh.w	lr, [r4]
9001953c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
90019540:	4576      	cmp	r6, lr
90019542:	dc22      	bgt.n	9001958a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
90019544:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90019548:	44f4      	add	ip, lr
9001954a:	fa0f fc8c 	sxth.w	ip, ip
9001954e:	45e0      	cmp	r8, ip
90019550:	db1b      	blt.n	9001958a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
90019552:	428f      	cmp	r7, r1
90019554:	fa1f fc81 	uxth.w	ip, r1
90019558:	88e1      	ldrh	r1, [r4, #6]
9001955a:	dc0d      	bgt.n	90019578 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x200>
9001955c:	ebaa 0c0c 	sub.w	ip, sl, ip
90019560:	f8a4 9002 	strh.w	r9, [r4, #2]
90019564:	eba1 010c 	sub.w	r1, r1, ip
90019568:	80e1      	strh	r1, [r4, #6]
9001956a:	4628      	mov	r0, r5
9001956c:	9904      	ldr	r1, [sp, #16]
9001956e:	3c08      	subs	r4, #8
90019570:	4605      	mov	r5, r0
90019572:	3901      	subs	r1, #1
90019574:	9104      	str	r1, [sp, #16]
90019576:	e7d3      	b.n	90019520 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a8>
90019578:	4461      	add	r1, ip
9001957a:	b209      	sxth	r1, r1
9001957c:	4549      	cmp	r1, r9
9001957e:	dcf5      	bgt.n	9001956c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
90019580:	eba2 0c0c 	sub.w	ip, r2, ip
90019584:	f8a4 c006 	strh.w	ip, [r4, #6]
90019588:	e7ef      	b.n	9001956a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
9001958a:	428f      	cmp	r7, r1
9001958c:	dcee      	bgt.n	9001956c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
9001958e:	f8b4 c006 	ldrh.w	ip, [r4, #6]
90019592:	4461      	add	r1, ip
90019594:	b209      	sxth	r1, r1
90019596:	4589      	cmp	r9, r1
90019598:	dbe8      	blt.n	9001956c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
9001959a:	4576      	cmp	r6, lr
9001959c:	fa1f fc8e 	uxth.w	ip, lr
900195a0:	88a1      	ldrh	r1, [r4, #4]
900195a2:	dc07      	bgt.n	900195b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x23c>
900195a4:	eba3 0c0c 	sub.w	ip, r3, ip
900195a8:	f8a4 8000 	strh.w	r8, [r4]
900195ac:	eba1 010c 	sub.w	r1, r1, ip
900195b0:	80a1      	strh	r1, [r4, #4]
900195b2:	e7da      	b.n	9001956a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
900195b4:	4461      	add	r1, ip
900195b6:	b209      	sxth	r1, r1
900195b8:	4588      	cmp	r8, r1
900195ba:	dbd7      	blt.n	9001956c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
900195bc:	9905      	ldr	r1, [sp, #20]
900195be:	eba1 0c0c 	sub.w	ip, r1, ip
900195c2:	f8a4 c004 	strh.w	ip, [r4, #4]
900195c6:	e7d0      	b.n	9001956a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
900195c8:	24021c02 	.word	0x24021c02
900195cc:	24021c00 	.word	0x24021c00
900195d0:	24021c0c 	.word	0x24021c0c
900195d4:	2d00      	cmp	r5, #0
900195d6:	f000 816d 	beq.w	900198b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
900195da:	9b06      	ldr	r3, [sp, #24]
900195dc:	445b      	add	r3, fp
900195de:	461c      	mov	r4, r3
900195e0:	9b02      	ldr	r3, [sp, #8]
900195e2:	3301      	adds	r3, #1
900195e4:	f000 8166 	beq.w	900198b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
900195e8:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
900195ec:	9803      	ldr	r0, [sp, #12]
900195ee:	4629      	mov	r1, r5
900195f0:	f7ff fd0a 	bl	90019008 <_ZNK8touchgfx4Rect8includesERKS0_>
900195f4:	b120      	cbz	r0, 90019600 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x288>
900195f6:	f8bd 1008 	ldrh.w	r1, [sp, #8]
900195fa:	9801      	ldr	r0, [sp, #4]
900195fc:	f7ff fea8 	bl	90019350 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90019600:	9903      	ldr	r1, [sp, #12]
90019602:	4628      	mov	r0, r5
90019604:	f7ff fc8d 	bl	90018f22 <_ZNK8touchgfx4Rect9intersectERKS0_>
90019608:	2800      	cmp	r0, #0
9001960a:	f000 809c 	beq.w	90019746 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
9001960e:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
90019612:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90019616:	fa1f f189 	uxth.w	r1, r9
9001961a:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
9001961e:	9309      	str	r3, [sp, #36]	@ 0x24
90019620:	eb01 0c03 	add.w	ip, r1, r3
90019624:	b283      	uxth	r3, r0
90019626:	4548      	cmp	r0, r9
90019628:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
9001962c:	fa1f fa8c 	uxth.w	sl, ip
90019630:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
90019634:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
90019638:	eb03 050c 	add.w	r5, r3, ip
9001963c:	b2ad      	uxth	r5, r5
9001963e:	9505      	str	r5, [sp, #20]
90019640:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
90019644:	9504      	str	r5, [sp, #16]
90019646:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
9001964a:	f340 8099 	ble.w	90019780 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
9001964e:	1a5b      	subs	r3, r3, r1
90019650:	4596      	cmp	lr, r2
90019652:	fa0f f08a 	sxth.w	r0, sl
90019656:	b29b      	uxth	r3, r3
90019658:	b21e      	sxth	r6, r3
9001965a:	dd2e      	ble.n	900196ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x342>
9001965c:	9f02      	ldr	r7, [sp, #8]
9001965e:	fa1f fe8e 	uxth.w	lr, lr
90019662:	b292      	uxth	r2, r2
90019664:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
90019668:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
9001966c:	9f04      	ldr	r7, [sp, #16]
9001966e:	ebae 0102 	sub.w	r1, lr, r2
90019672:	44a6      	add	lr, r4
90019674:	1a3f      	subs	r7, r7, r0
90019676:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
9001967a:	b289      	uxth	r1, r1
9001967c:	4402      	add	r2, r0
9001967e:	fa0f fe8e 	sxth.w	lr, lr
90019682:	b20d      	sxth	r5, r1
90019684:	b212      	sxth	r2, r2
90019686:	436f      	muls	r7, r5
90019688:	ebae 0202 	sub.w	r2, lr, r2
9001968c:	4372      	muls	r2, r6
9001968e:	4297      	cmp	r7, r2
90019690:	db09      	blt.n	900196a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32e>
90019692:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
90019696:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
9001969a:	449c      	add	ip, r3
9001969c:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
900196a0:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
900196a4:	e684      	b.n	900193b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
900196a6:	4421      	add	r1, r4
900196a8:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
900196ac:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
900196b0:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
900196b4:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
900196b8:	e67a      	b.n	900193b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
900196ba:	9f04      	ldr	r7, [sp, #16]
900196bc:	42b8      	cmp	r0, r7
900196be:	da27      	bge.n	90019710 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x398>
900196c0:	9902      	ldr	r1, [sp, #8]
900196c2:	1a3f      	subs	r7, r7, r0
900196c4:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
900196c8:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
900196cc:	eb05 010e 	add.w	r1, r5, lr
900196d0:	fa1f f881 	uxth.w	r8, r1
900196d4:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
900196d8:	4411      	add	r1, r2
900196da:	fa0f f988 	sxth.w	r9, r8
900196de:	eba2 020e 	sub.w	r2, r2, lr
900196e2:	eba1 0108 	sub.w	r1, r1, r8
900196e6:	4372      	muls	r2, r6
900196e8:	b289      	uxth	r1, r1
900196ea:	fa0f f881 	sxth.w	r8, r1
900196ee:	fb08 f707 	mul.w	r7, r8, r7
900196f2:	42ba      	cmp	r2, r7
900196f4:	dc06      	bgt.n	90019704 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38c>
900196f6:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
900196fa:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
900196fe:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
90019702:	e7ca      	b.n	9001969a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
90019704:	4429      	add	r1, r5
90019706:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
9001970a:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
9001970e:	e64f      	b.n	900193b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
90019710:	9805      	ldr	r0, [sp, #20]
90019712:	2d06      	cmp	r5, #6
90019714:	ebaa 0000 	sub.w	r0, sl, r0
90019718:	b280      	uxth	r0, r0
9001971a:	fa0f fe80 	sxth.w	lr, r0
9001971e:	d817      	bhi.n	90019750 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d8>
90019720:	9b04      	ldr	r3, [sp, #16]
90019722:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
90019726:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
9001972a:	1c6b      	adds	r3, r5, #1
9001972c:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
90019730:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
90019734:	9b01      	ldr	r3, [sp, #4]
90019736:	9801      	ldr	r0, [sp, #4]
90019738:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
9001973c:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90019740:	805a      	strh	r2, [r3, #2]
90019742:	809e      	strh	r6, [r3, #4]
90019744:	80d9      	strh	r1, [r3, #6]
90019746:	9b02      	ldr	r3, [sp, #8]
90019748:	3c08      	subs	r4, #8
9001974a:	3b01      	subs	r3, #1
9001974c:	9302      	str	r3, [sp, #8]
9001974e:	e747      	b.n	900195e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x268>
90019750:	9a02      	ldr	r2, [sp, #8]
90019752:	45b6      	cmp	lr, r6
90019754:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90019758:	db0d      	blt.n	90019776 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fe>
9001975a:	449c      	add	ip, r3
9001975c:	445a      	add	r2, fp
9001975e:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
90019762:	fa1f fc8c 	uxth.w	ip, ip
90019766:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
9001976a:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
9001976e:	448c      	add	ip, r1
90019770:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
90019774:	e61c      	b.n	900193b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
90019776:	445a      	add	r2, fp
90019778:	4484      	add	ip, r0
9001977a:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
9001977e:	e78f      	b.n	900196a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
90019780:	fa1f f18e 	uxth.w	r1, lr
90019784:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
90019788:	b293      	uxth	r3, r2
9001978a:	4596      	cmp	lr, r2
9001978c:	eb01 0806 	add.w	r8, r1, r6
90019790:	9306      	str	r3, [sp, #24]
90019792:	fa1f f888 	uxth.w	r8, r8
90019796:	9f06      	ldr	r7, [sp, #24]
90019798:	fa0f f388 	sxth.w	r3, r8
9001979c:	9307      	str	r3, [sp, #28]
9001979e:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
900197a2:	443b      	add	r3, r7
900197a4:	b29b      	uxth	r3, r3
900197a6:	9308      	str	r3, [sp, #32]
900197a8:	da24      	bge.n	900197f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
900197aa:	9905      	ldr	r1, [sp, #20]
900197ac:	eba3 0308 	sub.w	r3, r3, r8
900197b0:	eba2 020e 	sub.w	r2, r2, lr
900197b4:	eba9 0000 	sub.w	r0, r9, r0
900197b8:	ebaa 0401 	sub.w	r4, sl, r1
900197bc:	b29b      	uxth	r3, r3
900197be:	b2a4      	uxth	r4, r4
900197c0:	b219      	sxth	r1, r3
900197c2:	b225      	sxth	r5, r4
900197c4:	4348      	muls	r0, r1
900197c6:	436a      	muls	r2, r5
900197c8:	4282      	cmp	r2, r0
900197ca:	9a02      	ldr	r2, [sp, #8]
900197cc:	ea4f 02c2 	mov.w	r2, r2, lsl #3
900197d0:	445a      	add	r2, fp
900197d2:	dc06      	bgt.n	900197e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
900197d4:	9b07      	ldr	r3, [sp, #28]
900197d6:	44a4      	add	ip, r4
900197d8:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
900197dc:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
900197e0:	e75e      	b.n	900196a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
900197e2:	9904      	ldr	r1, [sp, #16]
900197e4:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
900197e8:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
900197ec:	4433      	add	r3, r6
900197ee:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
900197f2:	e5dd      	b.n	900193b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
900197f4:	9f06      	ldr	r7, [sp, #24]
900197f6:	9b04      	ldr	r3, [sp, #16]
900197f8:	1bc9      	subs	r1, r1, r7
900197fa:	fa0f f78a 	sxth.w	r7, sl
900197fe:	b289      	uxth	r1, r1
90019800:	429f      	cmp	r7, r3
90019802:	fa0f fe81 	sxth.w	lr, r1
90019806:	dd23      	ble.n	90019850 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d8>
90019808:	9a05      	ldr	r2, [sp, #20]
9001980a:	eba9 0000 	sub.w	r0, r9, r0
9001980e:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
90019812:	ebaa 0202 	sub.w	r2, sl, r2
90019816:	9d07      	ldr	r5, [sp, #28]
90019818:	fb0e f000 	mul.w	r0, lr, r0
9001981c:	b292      	uxth	r2, r2
9001981e:	eba5 0a03 	sub.w	sl, r5, r3
90019822:	9b02      	ldr	r3, [sp, #8]
90019824:	b214      	sxth	r4, r2
90019826:	00db      	lsls	r3, r3, #3
90019828:	fb04 fa0a 	mul.w	sl, r4, sl
9001982c:	445b      	add	r3, fp
9001982e:	4550      	cmp	r0, sl
90019830:	db03      	blt.n	9001983a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
90019832:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
90019836:	4494      	add	ip, r2
90019838:	e732      	b.n	900196a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
9001983a:	9a04      	ldr	r2, [sp, #16]
9001983c:	4431      	add	r1, r6
9001983e:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
90019842:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
90019846:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
9001984a:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
9001984e:	e75c      	b.n	9001970a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x392>
90019850:	9b08      	ldr	r3, [sp, #32]
90019852:	2d06      	cmp	r5, #6
90019854:	eba3 0308 	sub.w	r3, r3, r8
90019858:	b29b      	uxth	r3, r3
9001985a:	b218      	sxth	r0, r3
9001985c:	d813      	bhi.n	90019886 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50e>
9001985e:	9b07      	ldr	r3, [sp, #28]
90019860:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
90019864:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
90019868:	1c6b      	adds	r3, r5, #1
9001986a:	9901      	ldr	r1, [sp, #4]
9001986c:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
90019870:	9b01      	ldr	r3, [sp, #4]
90019872:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
90019876:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
9001987a:	805a      	strh	r2, [r3, #2]
9001987c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001987e:	f8a3 e006 	strh.w	lr, [r3, #6]
90019882:	809a      	strh	r2, [r3, #4]
90019884:	e75f      	b.n	90019746 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
90019886:	9c02      	ldr	r4, [sp, #8]
90019888:	4570      	cmp	r0, lr
9001988a:	ea4f 04c4 	mov.w	r4, r4, lsl #3
9001988e:	db0d      	blt.n	900198ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x534>
90019890:	4431      	add	r1, r6
90019892:	9b06      	ldr	r3, [sp, #24]
90019894:	445c      	add	r4, fp
90019896:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
9001989a:	b289      	uxth	r1, r1
9001989c:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
900198a0:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
900198a4:	4419      	add	r1, r3
900198a6:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
900198aa:	e581      	b.n	900193b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
900198ac:	445c      	add	r4, fp
900198ae:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
900198b2:	e79b      	b.n	900197ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
900198b4:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
900198b8:	f64f 76ff 	movw	r6, #65535	@ 0xffff
900198bc:	1e65      	subs	r5, r4, #1
900198be:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
900198c2:	b2ad      	uxth	r5, r5
900198c4:	42b5      	cmp	r5, r6
900198c6:	d044      	beq.n	90019952 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5da>
900198c8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
900198cc:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
900198d0:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
900198d4:	4282      	cmp	r2, r0
900198d6:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
900198da:	d11f      	bne.n	9001991c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
900198dc:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
900198e0:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
900198e4:	459c      	cmp	ip, r3
900198e6:	d119      	bne.n	9001991c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
900198e8:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
900198ec:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
900198f0:	19d8      	adds	r0, r3, r7
900198f2:	b200      	sxth	r0, r0
900198f4:	4288      	cmp	r0, r1
900198f6:	d109      	bne.n	9001990c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
900198f8:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
900198fc:	4413      	add	r3, r2
900198fe:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
90019902:	4629      	mov	r1, r5
90019904:	9801      	ldr	r0, [sp, #4]
90019906:	f7ff fd23 	bl	90019350 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001990a:	e003      	b.n	90019914 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
9001990c:	4411      	add	r1, r2
9001990e:	b209      	sxth	r1, r1
90019910:	42b9      	cmp	r1, r7
90019912:	d0f3      	beq.n	900198fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
90019914:	3d01      	subs	r5, #1
90019916:	3c08      	subs	r4, #8
90019918:	b2ad      	uxth	r5, r5
9001991a:	e7d3      	b.n	900198c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54c>
9001991c:	42b9      	cmp	r1, r7
9001991e:	d1f9      	bne.n	90019914 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
90019920:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
90019924:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90019928:	4299      	cmp	r1, r3
9001992a:	d1f3      	bne.n	90019914 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
9001992c:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
90019930:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
90019934:	181f      	adds	r7, r3, r0
90019936:	b23f      	sxth	r7, r7
90019938:	42ba      	cmp	r2, r7
9001993a:	d105      	bne.n	90019948 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5d0>
9001993c:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
90019940:	440b      	add	r3, r1
90019942:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90019946:	e7dc      	b.n	90019902 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58a>
90019948:	440a      	add	r2, r1
9001994a:	b212      	sxth	r2, r2
9001994c:	4290      	cmp	r0, r2
9001994e:	d1e1      	bne.n	90019914 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
90019950:	e7f6      	b.n	90019940 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c8>
90019952:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
90019956:	2e07      	cmp	r6, #7
90019958:	ea4f 04c6 	mov.w	r4, r6, lsl #3
9001995c:	d812      	bhi.n	90019984 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60c>
9001995e:	1c75      	adds	r5, r6, #1
90019960:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
90019964:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
90019968:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
9001996c:	9d01      	ldr	r5, [sp, #4]
9001996e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
90019972:	442c      	add	r4, r5
90019974:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
90019978:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
9001997c:	8061      	strh	r1, [r4, #2]
9001997e:	80a2      	strh	r2, [r4, #4]
90019980:	80e3      	strh	r3, [r4, #6]
90019982:	e57f      	b.n	90019484 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
90019984:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
90019988:	3e01      	subs	r6, #1
9001998a:	445c      	add	r4, fp
9001998c:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
90019990:	f04f 37ff 	mov.w	r7, #4294967295
90019994:	2500      	movs	r5, #0
90019996:	9305      	str	r3, [sp, #20]
90019998:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
9001999c:	1e72      	subs	r2, r6, #1
9001999e:	9302      	str	r3, [sp, #8]
900199a0:	4691      	mov	r9, r2
900199a2:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
900199a6:	9304      	str	r3, [sp, #16]
900199a8:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
900199ac:	f1b9 3fff 	cmp.w	r9, #4294967295
900199b0:	6818      	ldr	r0, [r3, #0]
900199b2:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
900199b6:	9207      	str	r2, [sp, #28]
900199b8:	bf16      	itet	ne
900199ba:	9905      	ldrne	r1, [sp, #20]
900199bc:	f8dd e00c 	ldreq.w	lr, [sp, #12]
900199c0:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
900199c4:	9306      	str	r3, [sp, #24]
900199c6:	f8be 1006 	ldrh.w	r1, [lr, #6]
900199ca:	f8be 8004 	ldrh.w	r8, [lr, #4]
900199ce:	fb18 f801 	smulbb	r8, r8, r1
900199d2:	6859      	ldr	r1, [r3, #4]
900199d4:	e8ac 0003 	stmia.w	ip!, {r0, r1}
900199d8:	4671      	mov	r1, lr
900199da:	a80c      	add	r0, sp, #48	@ 0x30
900199dc:	f7ff fb3a 	bl	90019054 <_ZN8touchgfx4Rect11expandToFitERKS0_>
900199e0:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
900199e4:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
900199e8:	f04f 0c08 	mov.w	ip, #8
900199ec:	9b04      	ldr	r3, [sp, #16]
900199ee:	9a02      	ldr	r2, [sp, #8]
900199f0:	fb10 f001 	smulbb	r0, r0, r1
900199f4:	fb02 8803 	mla	r8, r2, r3, r8
900199f8:	eba0 0108 	sub.w	r1, r0, r8
900199fc:	fb90 f0fc 	sdiv	r0, r0, ip
90019a00:	4288      	cmp	r0, r1
90019a02:	dc20      	bgt.n	90019a46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6ce>
90019a04:	4551      	cmp	r1, sl
90019a06:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
90019a0a:	da03      	bge.n	90019a14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x69c>
90019a0c:	b1d9      	cbz	r1, 90019a46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6ce>
90019a0e:	468a      	mov	sl, r1
90019a10:	464f      	mov	r7, r9
90019a12:	4635      	mov	r5, r6
90019a14:	f109 39ff 	add.w	r9, r9, #4294967295
90019a18:	f119 0f02 	cmn.w	r9, #2
90019a1c:	d1c6      	bne.n	900199ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x634>
90019a1e:	4616      	mov	r6, r2
90019a20:	3201      	adds	r2, #1
90019a22:	f1a4 0408 	sub.w	r4, r4, #8
90019a26:	d1b7      	bne.n	90019998 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x620>
90019a28:	9b01      	ldr	r3, [sp, #4]
90019a2a:	b2ac      	uxth	r4, r5
90019a2c:	00ed      	lsls	r5, r5, #3
90019a2e:	1958      	adds	r0, r3, r5
90019a30:	1c7b      	adds	r3, r7, #1
90019a32:	d10b      	bne.n	90019a4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d4>
90019a34:	4601      	mov	r1, r0
90019a36:	9803      	ldr	r0, [sp, #12]
90019a38:	f7ff fb0c 	bl	90019054 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90019a3c:	4621      	mov	r1, r4
90019a3e:	9801      	ldr	r0, [sp, #4]
90019a40:	f7ff fc86 	bl	90019350 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90019a44:	e4b4      	b.n	900193b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
90019a46:	464f      	mov	r7, r9
90019a48:	4635      	mov	r5, r6
90019a4a:	e7ed      	b.n	90019a28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b0>
90019a4c:	9b01      	ldr	r3, [sp, #4]
90019a4e:	00ff      	lsls	r7, r7, #3
90019a50:	445d      	add	r5, fp
90019a52:	19d9      	adds	r1, r3, r7
90019a54:	445f      	add	r7, fp
90019a56:	f7ff fafd 	bl	90019054 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90019a5a:	9b03      	ldr	r3, [sp, #12]
90019a5c:	cb03      	ldmia	r3!, {r0, r1}
90019a5e:	9b03      	ldr	r3, [sp, #12]
90019a60:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
90019a64:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
90019a68:	f855 0fac 	ldr.w	r0, [r5, #172]!
90019a6c:	6869      	ldr	r1, [r5, #4]
90019a6e:	c303      	stmia	r3!, {r0, r1}
90019a70:	e7e4      	b.n	90019a3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
90019a72:	bf00      	nop

90019a74 <_ZN8touchgfx11Application15drawCachedAreasEv>:
90019a74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019a78:	f500 7698 	add.w	r6, r0, #304	@ 0x130
90019a7c:	b0a1      	sub	sp, #132	@ 0x84
90019a7e:	4604      	mov	r4, r0
90019a80:	4630      	mov	r0, r6
90019a82:	f7f8 fec6 	bl	90012812 <_ZNK8touchgfx4Rect7isEmptyEv>
90019a86:	4605      	mov	r5, r0
90019a88:	b948      	cbnz	r0, 90019a9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
90019a8a:	6823      	ldr	r3, [r4, #0]
90019a8c:	4620      	mov	r0, r4
90019a8e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90019a90:	e896 0006 	ldmia.w	r6, {r1, r2}
90019a94:	4798      	blx	r3
90019a96:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
90019a9a:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
90019a9e:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90019aa2:	2b00      	cmp	r3, #0
90019aa4:	d149      	bne.n	90019b3a <_ZN8touchgfx11Application15drawCachedAreasEv+0xc6>
90019aa6:	4bb2      	ldr	r3, [pc, #712]	@ (90019d70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
90019aa8:	681b      	ldr	r3, [r3, #0]
90019aaa:	f893 7048 	ldrb.w	r7, [r3, #72]	@ 0x48
90019aae:	1ebb      	subs	r3, r7, #2
90019ab0:	425f      	negs	r7, r3
90019ab2:	415f      	adcs	r7, r3
90019ab4:	4baf      	ldr	r3, [pc, #700]	@ (90019d74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x300>)
90019ab6:	681b      	ldr	r3, [r3, #0]
90019ab8:	2b00      	cmp	r3, #0
90019aba:	d040      	beq.n	90019b3e <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
90019abc:	4dae      	ldr	r5, [pc, #696]	@ (90019d78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x304>)
90019abe:	4628      	mov	r0, r5
90019ac0:	f7f8 fea7 	bl	90012812 <_ZNK8touchgfx4Rect7isEmptyEv>
90019ac4:	4606      	mov	r6, r0
90019ac6:	2800      	cmp	r0, #0
90019ac8:	d139      	bne.n	90019b3e <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
90019aca:	4628      	mov	r0, r5
90019acc:	f7ff f938 	bl	90018d40 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90019ad0:	6823      	ldr	r3, [r4, #0]
90019ad2:	6829      	ldr	r1, [r5, #0]
90019ad4:	4620      	mov	r0, r4
90019ad6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90019ad8:	686a      	ldr	r2, [r5, #4]
90019ada:	4798      	blx	r3
90019adc:	802e      	strh	r6, [r5, #0]
90019ade:	806e      	strh	r6, [r5, #2]
90019ae0:	80ae      	strh	r6, [r5, #4]
90019ae2:	80ee      	strh	r6, [r5, #6]
90019ae4:	af0f      	add	r7, sp, #60	@ 0x3c
90019ae6:	4ea5      	ldr	r6, [pc, #660]	@ (90019d7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x308>)
90019ae8:	4638      	mov	r0, r7
90019aea:	f7ff fbd5 	bl	90019298 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90019aee:	8835      	ldrh	r5, [r6, #0]
90019af0:	f8b4 c0ec 	ldrh.w	ip, [r4, #236]	@ 0xec
90019af4:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
90019af8:	462b      	mov	r3, r5
90019afa:	4563      	cmp	r3, ip
90019afc:	d224      	bcs.n	90019b48 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
90019afe:	f8bd 107c 	ldrh.w	r1, [sp, #124]	@ 0x7c
90019b02:	2907      	cmp	r1, #7
90019b04:	d816      	bhi.n	90019b34 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
90019b06:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
90019b0a:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
90019b0e:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
90019b12:	f9b2 8004 	ldrsh.w	r8, [r2, #4]
90019b16:	f9b2 e006 	ldrsh.w	lr, [r2, #6]
90019b1a:	1c4a      	adds	r2, r1, #1
90019b1c:	f8ad 207c 	strh.w	r2, [sp, #124]	@ 0x7c
90019b20:	eb07 02c1 	add.w	r2, r7, r1, lsl #3
90019b24:	f827 9031 	strh.w	r9, [r7, r1, lsl #3]
90019b28:	f8a2 a002 	strh.w	sl, [r2, #2]
90019b2c:	f8a2 8004 	strh.w	r8, [r2, #4]
90019b30:	f8a2 e006 	strh.w	lr, [r2, #6]
90019b34:	3301      	adds	r3, #1
90019b36:	b29b      	uxth	r3, r3
90019b38:	e7df      	b.n	90019afa <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
90019b3a:	2701      	movs	r7, #1
90019b3c:	e7ba      	b.n	90019ab4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40>
90019b3e:	2f00      	cmp	r7, #0
90019b40:	d1d0      	bne.n	90019ae4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x70>
90019b42:	b021      	add	sp, #132	@ 0x84
90019b44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90019b48:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
90019b4c:	42ab      	cmp	r3, r5
90019b4e:	d90c      	bls.n	90019b6a <_ZN8touchgfx11Application15drawCachedAreasEv+0xf6>
90019b50:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
90019b54:	6822      	ldr	r2, [r4, #0]
90019b56:	3501      	adds	r5, #1
90019b58:	4620      	mov	r0, r4
90019b5a:	6c17      	ldr	r7, [r2, #64]	@ 0x40
90019b5c:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
90019b60:	b2ad      	uxth	r5, r5
90019b62:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
90019b66:	47b8      	blx	r7
90019b68:	e7ee      	b.n	90019b48 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
90019b6a:	4d81      	ldr	r5, [pc, #516]	@ (90019d70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
90019b6c:	6828      	ldr	r0, [r5, #0]
90019b6e:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
90019b72:	2b01      	cmp	r3, #1
90019b74:	f040 813d 	bne.w	90019df2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x37e>
90019b78:	4a81      	ldr	r2, [pc, #516]	@ (90019d80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>)
90019b7a:	8833      	ldrh	r3, [r6, #0]
90019b7c:	7812      	ldrb	r2, [r2, #0]
90019b7e:	f8b4 00ec 	ldrh.w	r0, [r4, #236]	@ 0xec
90019b82:	2a01      	cmp	r2, #1
90019b84:	d014      	beq.n	90019bb0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
90019b86:	eb04 02c3 	add.w	r2, r4, r3, lsl #3
90019b8a:	f04f 0900 	mov.w	r9, #0
90019b8e:	32ae      	adds	r2, #174	@ 0xae
90019b90:	4283      	cmp	r3, r0
90019b92:	f102 0208 	add.w	r2, r2, #8
90019b96:	f280 8083 	bge.w	90019ca0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
90019b9a:	f832 1c04 	ldrh.w	r1, [r2, #-4]
90019b9e:	3301      	adds	r3, #1
90019ba0:	f832 7c08 	ldrh.w	r7, [r2, #-8]
90019ba4:	4439      	add	r1, r7
90019ba6:	b209      	sxth	r1, r1
90019ba8:	4589      	cmp	r9, r1
90019baa:	bfb8      	it	lt
90019bac:	4689      	movlt	r9, r1
90019bae:	e7ef      	b.n	90019b90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11c>
90019bb0:	4f74      	ldr	r7, [pc, #464]	@ (90019d84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>)
90019bb2:	883a      	ldrh	r2, [r7, #0]
90019bb4:	4693      	mov	fp, r2
90019bb6:	4283      	cmp	r3, r0
90019bb8:	da08      	bge.n	90019bcc <_ZN8touchgfx11Application15drawCachedAreasEv+0x158>
90019bba:	eb04 01c3 	add.w	r1, r4, r3, lsl #3
90019bbe:	3301      	adds	r3, #1
90019bc0:	f9b1 10ac 	ldrsh.w	r1, [r1, #172]	@ 0xac
90019bc4:	458b      	cmp	fp, r1
90019bc6:	bfa8      	it	ge
90019bc8:	468b      	movge	fp, r1
90019bca:	e7f4      	b.n	90019bb6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x142>
90019bcc:	2a0f      	cmp	r2, #15
90019bce:	f04f 0300 	mov.w	r3, #0
90019bd2:	f8df 91b4 	ldr.w	r9, [pc, #436]	@ 90019d88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
90019bd6:	bf8c      	ite	hi
90019bd8:	ea4f 08d2 	movhi.w	r8, r2, lsr #3
90019bdc:	f04f 0801 	movls.w	r8, #1
90019be0:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
90019be4:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90019be8:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
90019bec:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90019bf0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90019bf4:	6828      	ldr	r0, [r5, #0]
90019bf6:	455b      	cmp	r3, fp
90019bf8:	f340 80c8 	ble.w	90019d8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90019bfc:	6803      	ldr	r3, [r0, #0]
90019bfe:	f8b7 a000 	ldrh.w	sl, [r7]
90019c02:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90019c06:	4798      	blx	r3
90019c08:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
90019c0c:	ebaa 0000 	sub.w	r0, sl, r0
90019c10:	682b      	ldr	r3, [r5, #0]
90019c12:	ebac 0e08 	sub.w	lr, ip, r8
90019c16:	b280      	uxth	r0, r0
90019c18:	f893 107c 	ldrb.w	r1, [r3, #124]	@ 0x7c
90019c1c:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
90019c20:	4570      	cmp	r0, lr
90019c22:	dd05      	ble.n	90019c30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1bc>
90019c24:	4558      	cmp	r0, fp
90019c26:	dd03      	ble.n	90019c30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1bc>
90019c28:	b901      	cbnz	r1, 90019c2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b8>
90019c2a:	b392      	cbz	r2, 90019c92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x21e>
90019c2c:	4658      	mov	r0, fp
90019c2e:	e006      	b.n	90019c3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ca>
90019c30:	2900      	cmp	r1, #0
90019c32:	d1fb      	bne.n	90019c2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b8>
90019c34:	2a00      	cmp	r2, #0
90019c36:	d1f9      	bne.n	90019c2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b8>
90019c38:	4558      	cmp	r0, fp
90019c3a:	bfb8      	it	lt
90019c3c:	4658      	movlt	r0, fp
90019c3e:	f9b9 3000 	ldrsh.w	r3, [r9]
90019c42:	2200      	movs	r2, #0
90019c44:	f8ad 002c 	strh.w	r0, [sp, #44]	@ 0x2c
90019c48:	ebac 0000 	sub.w	r0, ip, r0
90019c4c:	f8b6 a000 	ldrh.w	sl, [r6]
90019c50:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
90019c54:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
90019c58:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90019c5c:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90019c60:	4553      	cmp	r3, sl
90019c62:	ddc5      	ble.n	90019bf0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
90019c64:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
90019c68:	ab0d      	add	r3, sp, #52	@ 0x34
90019c6a:	f852 0fac 	ldr.w	r0, [r2, #172]!
90019c6e:	6851      	ldr	r1, [r2, #4]
90019c70:	c303      	stmia	r3!, {r0, r1}
90019c72:	a80d      	add	r0, sp, #52	@ 0x34
90019c74:	a90b      	add	r1, sp, #44	@ 0x2c
90019c76:	f7f8 fd89 	bl	9001278c <_ZN8touchgfx4RectaNERKS0_>
90019c7a:	a80d      	add	r0, sp, #52	@ 0x34
90019c7c:	f7f8 fdc9 	bl	90012812 <_ZNK8touchgfx4Rect7isEmptyEv>
90019c80:	b920      	cbnz	r0, 90019c8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x218>
90019c82:	6823      	ldr	r3, [r4, #0]
90019c84:	a90d      	add	r1, sp, #52	@ 0x34
90019c86:	4620      	mov	r0, r4
90019c88:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90019c8a:	4798      	blx	r3
90019c8c:	f10a 0a01 	add.w	sl, sl, #1
90019c90:	e7e4      	b.n	90019c5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x1e8>
90019c92:	681a      	ldr	r2, [r3, #0]
90019c94:	2101      	movs	r1, #1
90019c96:	4618      	mov	r0, r3
90019c98:	f8d2 20a4 	ldr.w	r2, [r2, #164]	@ 0xa4
90019c9c:	4790      	blx	r2
90019c9e:	e7a7      	b.n	90019bf0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
90019ca0:	4b39      	ldr	r3, [pc, #228]	@ (90019d88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>)
90019ca2:	f8df 80e0 	ldr.w	r8, [pc, #224]	@ 90019d84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>
90019ca6:	881f      	ldrh	r7, [r3, #0]
90019ca8:	2300      	movs	r3, #0
90019caa:	2f0f      	cmp	r7, #15
90019cac:	bf8c      	ite	hi
90019cae:	08ff      	lsrhi	r7, r7, #3
90019cb0:	2701      	movls	r7, #1
90019cb2:	e9cd 330b 	strd	r3, r3, [sp, #44]	@ 0x2c
90019cb6:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90019cba:	f8bd 202e 	ldrh.w	r2, [sp, #46]	@ 0x2e
90019cbe:	6828      	ldr	r0, [r5, #0]
90019cc0:	4413      	add	r3, r2
90019cc2:	b21b      	sxth	r3, r3
90019cc4:	454b      	cmp	r3, r9
90019cc6:	da61      	bge.n	90019d8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90019cc8:	6803      	ldr	r3, [r0, #0]
90019cca:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90019cce:	4798      	blx	r3
90019cd0:	f8bd e02e 	ldrh.w	lr, [sp, #46]	@ 0x2e
90019cd4:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90019cd8:	682a      	ldr	r2, [r5, #0]
90019cda:	4473      	add	r3, lr
90019cdc:	f892 c07c 	ldrb.w	ip, [r2, #124]	@ 0x7c
90019ce0:	b21b      	sxth	r3, r3
90019ce2:	f892 106a 	ldrb.w	r1, [r2, #106]	@ 0x6a
90019ce6:	eb03 0e07 	add.w	lr, r3, r7
90019cea:	4570      	cmp	r0, lr
90019cec:	da0d      	bge.n	90019d0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x296>
90019cee:	4548      	cmp	r0, r9
90019cf0:	da0b      	bge.n	90019d0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x296>
90019cf2:	f1bc 0f00 	cmp.w	ip, #0
90019cf6:	d138      	bne.n	90019d6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
90019cf8:	2900      	cmp	r1, #0
90019cfa:	d136      	bne.n	90019d6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
90019cfc:	6813      	ldr	r3, [r2, #0]
90019cfe:	2101      	movs	r1, #1
90019d00:	4610      	mov	r0, r2
90019d02:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
90019d06:	4798      	blx	r3
90019d08:	e7d5      	b.n	90019cb6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x242>
90019d0a:	f1bc 0f00 	cmp.w	ip, #0
90019d0e:	d12c      	bne.n	90019d6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
90019d10:	bb59      	cbnz	r1, 90019d6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
90019d12:	4548      	cmp	r0, r9
90019d14:	bfa8      	it	ge
90019d16:	4648      	movge	r0, r9
90019d18:	f9b8 2000 	ldrsh.w	r2, [r8]
90019d1c:	2100      	movs	r1, #0
90019d1e:	1ac0      	subs	r0, r0, r3
90019d20:	f8b6 a000 	ldrh.w	sl, [r6]
90019d24:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
90019d28:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90019d2c:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
90019d30:	f8ad 0032 	strh.w	r0, [sp, #50]	@ 0x32
90019d34:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90019d38:	4553      	cmp	r3, sl
90019d3a:	ddbc      	ble.n	90019cb6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x242>
90019d3c:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
90019d40:	ab0d      	add	r3, sp, #52	@ 0x34
90019d42:	f852 0fac 	ldr.w	r0, [r2, #172]!
90019d46:	6851      	ldr	r1, [r2, #4]
90019d48:	c303      	stmia	r3!, {r0, r1}
90019d4a:	a80d      	add	r0, sp, #52	@ 0x34
90019d4c:	a90b      	add	r1, sp, #44	@ 0x2c
90019d4e:	f7f8 fd1d 	bl	9001278c <_ZN8touchgfx4RectaNERKS0_>
90019d52:	a80d      	add	r0, sp, #52	@ 0x34
90019d54:	f7f8 fd5d 	bl	90012812 <_ZNK8touchgfx4Rect7isEmptyEv>
90019d58:	b920      	cbnz	r0, 90019d64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f0>
90019d5a:	6823      	ldr	r3, [r4, #0]
90019d5c:	a90d      	add	r1, sp, #52	@ 0x34
90019d5e:	4620      	mov	r0, r4
90019d60:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90019d62:	4798      	blx	r3
90019d64:	f10a 0a01 	add.w	sl, sl, #1
90019d68:	e7e4      	b.n	90019d34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c0>
90019d6a:	4648      	mov	r0, r9
90019d6c:	e7d4      	b.n	90019d18 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a4>
90019d6e:	bf00      	nop
90019d70:	24021c0c 	.word	0x24021c0c
90019d74:	24021c4c 	.word	0x24021c4c
90019d78:	24021c58 	.word	0x24021c58
90019d7c:	24000088 	.word	0x24000088
90019d80:	24021c04 	.word	0x24021c04
90019d84:	24021c00 	.word	0x24021c00
90019d88:	24021c02 	.word	0x24021c02
90019d8c:	6828      	ldr	r0, [r5, #0]
90019d8e:	6803      	ldr	r3, [r0, #0]
90019d90:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90019d92:	4798      	blx	r3
90019d94:	4ba4      	ldr	r3, [pc, #656]	@ (9001a028 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b4>)
90019d96:	781b      	ldrb	r3, [r3, #0]
90019d98:	2b00      	cmp	r3, #0
90019d9a:	f43f aed2 	beq.w	90019b42 <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
90019d9e:	2300      	movs	r3, #0
90019da0:	f8bd 607c 	ldrh.w	r6, [sp, #124]	@ 0x7c
90019da4:	a80f      	add	r0, sp, #60	@ 0x3c
90019da6:	f104 05ee 	add.w	r5, r4, #238	@ 0xee
90019daa:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
90019dae:	4b9f      	ldr	r3, [pc, #636]	@ (9001a02c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b8>)
90019db0:	881b      	ldrh	r3, [r3, #0]
90019db2:	42b3      	cmp	r3, r6
90019db4:	f4bf aec5 	bcs.w	90019b42 <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
90019db8:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
90019dbc:	2907      	cmp	r1, #7
90019dbe:	d815      	bhi.n	90019dec <_ZN8touchgfx11Application15drawCachedAreasEv+0x378>
90019dc0:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
90019dc4:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
90019dc8:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
90019dcc:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
90019dd0:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
90019dd4:	1c4a      	adds	r2, r1, #1
90019dd6:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
90019dda:	eb05 02c1 	add.w	r2, r5, r1, lsl #3
90019dde:	f825 8031 	strh.w	r8, [r5, r1, lsl #3]
90019de2:	f8a2 e002 	strh.w	lr, [r2, #2]
90019de6:	f8a2 c004 	strh.w	ip, [r2, #4]
90019dea:	80d7      	strh	r7, [r2, #6]
90019dec:	3301      	adds	r3, #1
90019dee:	b29b      	uxth	r3, r3
90019df0:	e7df      	b.n	90019db2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33e>
90019df2:	2b02      	cmp	r3, #2
90019df4:	f040 80ce 	bne.w	90019f94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
90019df8:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
90019dfc:	f890 b07d 	ldrb.w	fp, [r0, #125]	@ 0x7d
90019e00:	9308      	str	r3, [sp, #32]
90019e02:	f8b0 307e 	ldrh.w	r3, [r0, #126]	@ 0x7e
90019e06:	f10b 37ff 	add.w	r7, fp, #4294967295
90019e0a:	9307      	str	r3, [sp, #28]
90019e0c:	b2bf      	uxth	r7, r7
90019e0e:	6803      	ldr	r3, [r0, #0]
90019e10:	fa0f f887 	sxth.w	r8, r7
90019e14:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90019e18:	4798      	blx	r3
90019e1a:	4b85      	ldr	r3, [pc, #532]	@ (9001a030 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5bc>)
90019e1c:	4682      	mov	sl, r0
90019e1e:	2000      	movs	r0, #0
90019e20:	881b      	ldrh	r3, [r3, #0]
90019e22:	9302      	str	r3, [sp, #8]
90019e24:	4b83      	ldr	r3, [pc, #524]	@ (9001a034 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c0>)
90019e26:	881e      	ldrh	r6, [r3, #0]
90019e28:	4b83      	ldr	r3, [pc, #524]	@ (9001a038 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
90019e2a:	781b      	ldrb	r3, [r3, #0]
90019e2c:	2b01      	cmp	r3, #1
90019e2e:	bf1e      	ittt	ne
90019e30:	9b02      	ldrne	r3, [sp, #8]
90019e32:	9602      	strne	r6, [sp, #8]
90019e34:	461e      	movne	r6, r3
90019e36:	f7e6 ff37 	bl	90000ca8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90019e3a:	fb96 fbfb 	sdiv	fp, r6, fp
90019e3e:	fb0b f808 	mul.w	r8, fp, r8
90019e42:	45c2      	cmp	sl, r8
90019e44:	da0c      	bge.n	90019e60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ec>
90019e46:	6828      	ldr	r0, [r5, #0]
90019e48:	210a      	movs	r1, #10
90019e4a:	6803      	ldr	r3, [r0, #0]
90019e4c:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
90019e50:	4798      	blx	r3
90019e52:	6828      	ldr	r0, [r5, #0]
90019e54:	6803      	ldr	r3, [r0, #0]
90019e56:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90019e5a:	4798      	blx	r3
90019e5c:	4682      	mov	sl, r0
90019e5e:	e7f0      	b.n	90019e42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ce>
90019e60:	2000      	movs	r0, #0
90019e62:	f04f 0800 	mov.w	r8, #0
90019e66:	f7e6 ff3b 	bl	90000ce0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90019e6a:	fa1f f38b 	uxth.w	r3, fp
90019e6e:	4645      	mov	r5, r8
90019e70:	fb17 f703 	smulbb	r7, r7, r3
90019e74:	9304      	str	r3, [sp, #16]
90019e76:	b2bb      	uxth	r3, r7
90019e78:	4f70      	ldr	r7, [pc, #448]	@ (9001a03c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c8>)
90019e7a:	9305      	str	r3, [sp, #20]
90019e7c:	0973      	lsrs	r3, r6, #5
90019e7e:	9306      	str	r3, [sp, #24]
90019e80:	42b5      	cmp	r5, r6
90019e82:	d087      	beq.n	90019d94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
90019e84:	6838      	ldr	r0, [r7, #0]
90019e86:	6803      	ldr	r3, [r0, #0]
90019e88:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90019e8c:	4798      	blx	r3
90019e8e:	4582      	cmp	sl, r0
90019e90:	4681      	mov	r9, r0
90019e92:	d907      	bls.n	90019ea4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x430>
90019e94:	f1b8 0f00 	cmp.w	r8, #0
90019e98:	d007      	beq.n	90019eaa <_ZN8touchgfx11Application15drawCachedAreasEv+0x436>
90019e9a:	6838      	ldr	r0, [r7, #0]
90019e9c:	6803      	ldr	r3, [r0, #0]
90019e9e:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
90019ea2:	e776      	b.n	90019d92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
90019ea4:	f1b8 0f00 	cmp.w	r8, #0
90019ea8:	d003      	beq.n	90019eb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x43e>
90019eaa:	454d      	cmp	r5, r9
90019eac:	d3f5      	bcc.n	90019e9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x426>
90019eae:	f04f 0801 	mov.w	r8, #1
90019eb2:	9a04      	ldr	r2, [sp, #16]
90019eb4:	fb95 f3fb 	sdiv	r3, r5, fp
90019eb8:	9303      	str	r3, [sp, #12]
90019eba:	3301      	adds	r3, #1
90019ebc:	fb13 f302 	smulbb	r3, r3, r2
90019ec0:	b299      	uxth	r1, r3
90019ec2:	f1b8 0f00 	cmp.w	r8, #0
90019ec6:	d04d      	beq.n	90019f64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f0>
90019ec8:	eb09 030b 	add.w	r3, r9, fp
90019ecc:	42b3      	cmp	r3, r6
90019ece:	bfa8      	it	ge
90019ed0:	4633      	movge	r3, r6
90019ed2:	b29b      	uxth	r3, r3
90019ed4:	9807      	ldr	r0, [sp, #28]
90019ed6:	428b      	cmp	r3, r1
90019ed8:	bf94      	ite	ls
90019eda:	ebc5 0203 	rsbls	r2, r5, r3
90019ede:	ebc5 0201 	rsbhi	r2, r5, r1
90019ee2:	4282      	cmp	r2, r0
90019ee4:	bfa8      	it	ge
90019ee6:	4602      	movge	r2, r0
90019ee8:	9808      	ldr	r0, [sp, #32]
90019eea:	fa1f fa82 	uxth.w	sl, r2
90019eee:	4582      	cmp	sl, r0
90019ef0:	d205      	bcs.n	90019efe <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
90019ef2:	fa15 f082 	uxtah	r0, r5, r2
90019ef6:	4286      	cmp	r6, r0
90019ef8:	d001      	beq.n	90019efe <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
90019efa:	4299      	cmp	r1, r3
90019efc:	d23f      	bcs.n	90019f7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x50a>
90019efe:	2001      	movs	r0, #1
90019f00:	9209      	str	r2, [sp, #36]	@ 0x24
90019f02:	f7e6 fed1 	bl	90000ca8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90019f06:	6838      	ldr	r0, [r7, #0]
90019f08:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
90019f0c:	6803      	ldr	r3, [r0, #0]
90019f0e:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
90019f12:	4798      	blx	r3
90019f14:	4b48      	ldr	r3, [pc, #288]	@ (9001a038 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
90019f16:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90019f18:	2000      	movs	r0, #0
90019f1a:	781b      	ldrb	r3, [r3, #0]
90019f1c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
90019f20:	b212      	sxth	r2, r2
90019f22:	2b01      	cmp	r3, #1
90019f24:	d122      	bne.n	90019f6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f8>
90019f26:	1b73      	subs	r3, r6, r5
90019f28:	f8ad 0036 	strh.w	r0, [sp, #54]	@ 0x36
90019f2c:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
90019f30:	eba3 030a 	sub.w	r3, r3, sl
90019f34:	f8ad 103a 	strh.w	r1, [sp, #58]	@ 0x3a
90019f38:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
90019f3c:	6823      	ldr	r3, [r4, #0]
90019f3e:	a90d      	add	r1, sp, #52	@ 0x34
90019f40:	4620      	mov	r0, r4
90019f42:	4455      	add	r5, sl
90019f44:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90019f46:	4798      	blx	r3
90019f48:	6838      	ldr	r0, [r7, #0]
90019f4a:	9b03      	ldr	r3, [sp, #12]
90019f4c:	b2ad      	uxth	r5, r5
90019f4e:	4259      	negs	r1, r3
90019f50:	6803      	ldr	r3, [r0, #0]
90019f52:	b209      	sxth	r1, r1
90019f54:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
90019f58:	4798      	blx	r3
90019f5a:	2001      	movs	r0, #1
90019f5c:	f7e6 fec0 	bl	90000ce0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90019f60:	46ca      	mov	sl, r9
90019f62:	e78d      	b.n	90019e80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40c>
90019f64:	9b05      	ldr	r3, [sp, #20]
90019f66:	eba9 0303 	sub.w	r3, r9, r3
90019f6a:	e7b2      	b.n	90019ed2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
90019f6c:	f8ad 0034 	strh.w	r0, [sp, #52]	@ 0x34
90019f70:	f8ad 5036 	strh.w	r5, [sp, #54]	@ 0x36
90019f74:	f8ad 1038 	strh.w	r1, [sp, #56]	@ 0x38
90019f78:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
90019f7c:	e7de      	b.n	90019f3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x4c8>
90019f7e:	6838      	ldr	r0, [r7, #0]
90019f80:	6803      	ldr	r3, [r0, #0]
90019f82:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90019f84:	4798      	blx	r3
90019f86:	6838      	ldr	r0, [r7, #0]
90019f88:	9906      	ldr	r1, [sp, #24]
90019f8a:	6803      	ldr	r3, [r0, #0]
90019f8c:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
90019f90:	4798      	blx	r3
90019f92:	e7e5      	b.n	90019f60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ec>
90019f94:	2b03      	cmp	r3, #3
90019f96:	f040 8133 	bne.w	9001a200 <_ZN8touchgfx11Application15drawCachedAreasEv+0x78c>
90019f9a:	4b27      	ldr	r3, [pc, #156]	@ (9001a038 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
90019f9c:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
90019fa0:	f9b0 9082 	ldrsh.w	r9, [r0, #130]	@ 0x82
90019fa4:	781b      	ldrb	r3, [r3, #0]
90019fa6:	2b01      	cmp	r3, #1
90019fa8:	f000 8095 	beq.w	9001a0d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x662>
90019fac:	8832      	ldrh	r2, [r6, #0]
90019fae:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
90019fb2:	3201      	adds	r2, #1
90019fb4:	b292      	uxth	r2, r2
90019fb6:	2900      	cmp	r1, #0
90019fb8:	f43f aeec 	beq.w	90019d94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
90019fbc:	f8b4 50b2 	ldrh.w	r5, [r4, #178]	@ 0xb2
90019fc0:	4694      	mov	ip, r2
90019fc2:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	@ 0xae
90019fc6:	f04f 0800 	mov.w	r8, #0
90019fca:	441d      	add	r5, r3
90019fcc:	b22d      	sxth	r5, r5
90019fce:	fa1f f38c 	uxth.w	r3, ip
90019fd2:	ea4f 07c8 	mov.w	r7, r8, lsl #3
90019fd6:	4299      	cmp	r1, r3
90019fd8:	f240 80bc 	bls.w	9001a154 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e0>
90019fdc:	4427      	add	r7, r4
90019fde:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
90019fe2:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
90019fe6:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
90019fea:	4283      	cmp	r3, r0
90019fec:	f340 809e 	ble.w	9001a12c <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b8>
90019ff0:	f8be 50b2 	ldrh.w	r5, [lr, #178]	@ 0xb2
90019ff4:	46e0      	mov	r8, ip
90019ff6:	4405      	add	r5, r0
90019ff8:	b22d      	sxth	r5, r5
90019ffa:	429d      	cmp	r5, r3
90019ffc:	bfa8      	it	ge
90019ffe:	461d      	movge	r5, r3
9001a000:	f10c 0c01 	add.w	ip, ip, #1
9001a004:	e7e3      	b.n	90019fce <_ZN8touchgfx11Application15drawCachedAreasEv+0x55a>
9001a006:	d10a      	bne.n	9001a01e <_ZN8touchgfx11Application15drawCachedAreasEv+0x5aa>
9001a008:	4562      	cmp	r2, ip
9001a00a:	f9b7 00b2 	ldrsh.w	r0, [r7, #178]	@ 0xb2
9001a00e:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
9001a012:	bfb8      	it	lt
9001a014:	4662      	movlt	r2, ip
9001a016:	4288      	cmp	r0, r1
9001a018:	bfb8      	it	lt
9001a01a:	4698      	movlt	r8, r3
9001a01c:	e084      	b.n	9001a128 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b4>
9001a01e:	428a      	cmp	r2, r1
9001a020:	bfb8      	it	lt
9001a022:	460a      	movlt	r2, r1
9001a024:	e080      	b.n	9001a128 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b4>
9001a026:	bf00      	nop
9001a028:	24021c0a 	.word	0x24021c0a
9001a02c:	24000088 	.word	0x24000088
9001a030:	24021c02 	.word	0x24021c02
9001a034:	24021c00 	.word	0x24021c00
9001a038:	24021c04 	.word	0x24021c04
9001a03c:	24021c0c 	.word	0x24021c0c
9001a040:	19e1      	adds	r1, r4, r7
9001a042:	ab0d      	add	r3, sp, #52	@ 0x34
9001a044:	f851 0fac 	ldr.w	r0, [r1, #172]!
9001a048:	6849      	ldr	r1, [r1, #4]
9001a04a:	c303      	stmia	r3!, {r0, r1}
9001a04c:	f9bd 3038 	ldrsh.w	r3, [sp, #56]	@ 0x38
9001a050:	a80d      	add	r0, sp, #52	@ 0x34
9001a052:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
9001a056:	454b      	cmp	r3, r9
9001a058:	440b      	add	r3, r1
9001a05a:	bfb8      	it	lt
9001a05c:	f9bd 2034 	ldrshlt.w	r2, [sp, #52]	@ 0x34
9001a060:	1a9b      	subs	r3, r3, r2
9001a062:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
9001a066:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
9001a06a:	f7fe fe83 	bl	90018d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001a06e:	a80d      	add	r0, sp, #52	@ 0x34
9001a070:	f7f8 fbcf 	bl	90012812 <_ZNK8touchgfx4Rect7isEmptyEv>
9001a074:	bb78      	cbnz	r0, 9001a0d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x662>
9001a076:	f9bd c03a 	ldrsh.w	ip, [sp, #58]	@ 0x3a
9001a07a:	4427      	add	r7, r4
9001a07c:	6828      	ldr	r0, [r5, #0]
9001a07e:	45cc      	cmp	ip, r9
9001a080:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
9001a084:	f8d0 e000 	ldr.w	lr, [r0]
9001a088:	bfd8      	it	le
9001a08a:	fa1f fc8c 	uxthle.w	ip, ip
9001a08e:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
9001a092:	bfc8      	it	gt
9001a094:	fa1f fc89 	uxthgt.w	ip, r9
9001a098:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
9001a09c:	f8cd c000 	str.w	ip, [sp]
9001a0a0:	f8de b094 	ldr.w	fp, [lr, #148]	@ 0x94
9001a0a4:	47d8      	blx	fp
9001a0a6:	4683      	mov	fp, r0
9001a0a8:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
9001a0ac:	a80d      	add	r0, sp, #52	@ 0x34
9001a0ae:	f7fe fe47 	bl	90018d40 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
9001a0b2:	6823      	ldr	r3, [r4, #0]
9001a0b4:	4620      	mov	r0, r4
9001a0b6:	a90d      	add	r1, sp, #52	@ 0x34
9001a0b8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
9001a0ba:	4798      	blx	r3
9001a0bc:	f8b7 00b0 	ldrh.w	r0, [r7, #176]	@ 0xb0
9001a0c0:	eba0 000b 	sub.w	r0, r0, fp
9001a0c4:	b200      	sxth	r0, r0
9001a0c6:	f8a7 00b0 	strh.w	r0, [r7, #176]	@ 0xb0
9001a0ca:	b920      	cbnz	r0, 9001a0d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x662>
9001a0cc:	fa1f f188 	uxth.w	r1, r8
9001a0d0:	4650      	mov	r0, sl
9001a0d2:	f7ff f93d 	bl	90019350 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001a0d6:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
9001a0da:	f1bb 0f00 	cmp.w	fp, #0
9001a0de:	f43f ae59 	beq.w	90019d94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
9001a0e2:	8833      	ldrh	r3, [r6, #0]
9001a0e4:	f04f 0800 	mov.w	r8, #0
9001a0e8:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
9001a0ec:	3301      	adds	r3, #1
9001a0ee:	b29b      	uxth	r3, r3
9001a0f0:	b299      	uxth	r1, r3
9001a0f2:	ea4f 07c8 	mov.w	r7, r8, lsl #3
9001a0f6:	458b      	cmp	fp, r1
9001a0f8:	d9a2      	bls.n	9001a040 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5cc>
9001a0fa:	4427      	add	r7, r4
9001a0fc:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
9001a100:	f8b7 10b0 	ldrh.w	r1, [r7, #176]	@ 0xb0
9001a104:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	@ 0xac
9001a108:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
9001a10c:	4408      	add	r0, r1
9001a10e:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
9001a112:	4461      	add	r1, ip
9001a114:	b200      	sxth	r0, r0
9001a116:	b209      	sxth	r1, r1
9001a118:	4288      	cmp	r0, r1
9001a11a:	f6bf af74 	bge.w	9001a006 <_ZN8touchgfx11Application15drawCachedAreasEv+0x592>
9001a11e:	4584      	cmp	ip, r0
9001a120:	4662      	mov	r2, ip
9001a122:	4698      	mov	r8, r3
9001a124:	bfb8      	it	lt
9001a126:	4602      	movlt	r2, r0
9001a128:	3301      	adds	r3, #1
9001a12a:	e7e1      	b.n	9001a0f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x67c>
9001a12c:	d10e      	bne.n	9001a14c <_ZN8touchgfx11Application15drawCachedAreasEv+0x6d8>
9001a12e:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
9001a132:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
9001a136:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
9001a13a:	4473      	add	r3, lr
9001a13c:	b21b      	sxth	r3, r3
9001a13e:	429d      	cmp	r5, r3
9001a140:	bfa8      	it	ge
9001a142:	461d      	movge	r5, r3
9001a144:	4287      	cmp	r7, r0
9001a146:	bfb8      	it	lt
9001a148:	46e0      	movlt	r8, ip
9001a14a:	e759      	b.n	9001a000 <_ZN8touchgfx11Application15drawCachedAreasEv+0x58c>
9001a14c:	4285      	cmp	r5, r0
9001a14e:	bfa8      	it	ge
9001a150:	4605      	movge	r5, r0
9001a152:	e755      	b.n	9001a000 <_ZN8touchgfx11Application15drawCachedAreasEv+0x58c>
9001a154:	eb0a 0007 	add.w	r0, sl, r7
9001a158:	4427      	add	r7, r4
9001a15a:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
9001a15e:	45cb      	cmp	fp, r9
9001a160:	bfbc      	itt	lt
9001a162:	f8b7 50ae 	ldrhlt.w	r5, [r7, #174]	@ 0xae
9001a166:	445d      	addlt	r5, fp
9001a168:	e9cd 2102 	strd	r2, r1, [sp, #8]
9001a16c:	bfb8      	it	lt
9001a16e:	b22d      	sxthlt	r5, r5
9001a170:	f7f8 fb4f 	bl	90012812 <_ZNK8touchgfx4Rect7isEmptyEv>
9001a174:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
9001a178:	2800      	cmp	r0, #0
9001a17a:	f47f af1c 	bne.w	90019fb6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x542>
9001a17e:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
9001a182:	fa1f fb8b 	uxth.w	fp, fp
9001a186:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
9001a18a:	1aad      	subs	r5, r5, r2
9001a18c:	4829      	ldr	r0, [pc, #164]	@ (9001a234 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7c0>)
9001a18e:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
9001a192:	454d      	cmp	r5, r9
9001a194:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
9001a198:	6800      	ldr	r0, [r0, #0]
9001a19a:	bfa8      	it	ge
9001a19c:	464d      	movge	r5, r9
9001a19e:	f8ad 1034 	strh.w	r1, [sp, #52]	@ 0x34
9001a1a2:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
9001a1a6:	b289      	uxth	r1, r1
9001a1a8:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
9001a1ac:	b2ad      	uxth	r5, r5
9001a1ae:	f8d0 c000 	ldr.w	ip, [r0]
9001a1b2:	b292      	uxth	r2, r2
9001a1b4:	455d      	cmp	r5, fp
9001a1b6:	bf94      	ite	ls
9001a1b8:	9500      	strls	r5, [sp, #0]
9001a1ba:	f8cd b000 	strhi.w	fp, [sp]
9001a1be:	b29b      	uxth	r3, r3
9001a1c0:	f8dc 5094 	ldr.w	r5, [ip, #148]	@ 0x94
9001a1c4:	47a8      	blx	r5
9001a1c6:	6823      	ldr	r3, [r4, #0]
9001a1c8:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
9001a1cc:	a90d      	add	r1, sp, #52	@ 0x34
9001a1ce:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
9001a1d0:	4620      	mov	r0, r4
9001a1d2:	4798      	blx	r3
9001a1d4:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
9001a1d8:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
9001a1dc:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
9001a1e0:	1a5b      	subs	r3, r3, r1
9001a1e2:	440a      	add	r2, r1
9001a1e4:	b21b      	sxth	r3, r3
9001a1e6:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
9001a1ea:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
9001a1ee:	2b00      	cmp	r3, #0
9001a1f0:	f47f aedc 	bne.w	90019fac <_ZN8touchgfx11Application15drawCachedAreasEv+0x538>
9001a1f4:	fa1f f188 	uxth.w	r1, r8
9001a1f8:	4650      	mov	r0, sl
9001a1fa:	f7ff f8a9 	bl	90019350 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001a1fe:	e6d5      	b.n	90019fac <_ZN8touchgfx11Application15drawCachedAreasEv+0x538>
9001a200:	8835      	ldrh	r5, [r6, #0]
9001a202:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
9001a206:	42ab      	cmp	r3, r5
9001a208:	f67f adc4 	bls.w	90019d94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
9001a20c:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
9001a210:	ab0d      	add	r3, sp, #52	@ 0x34
9001a212:	f852 0fac 	ldr.w	r0, [r2, #172]!
9001a216:	6851      	ldr	r1, [r2, #4]
9001a218:	c303      	stmia	r3!, {r0, r1}
9001a21a:	a80d      	add	r0, sp, #52	@ 0x34
9001a21c:	f7f8 faf9 	bl	90012812 <_ZNK8touchgfx4Rect7isEmptyEv>
9001a220:	b920      	cbnz	r0, 9001a22c <_ZN8touchgfx11Application15drawCachedAreasEv+0x7b8>
9001a222:	6823      	ldr	r3, [r4, #0]
9001a224:	a90d      	add	r1, sp, #52	@ 0x34
9001a226:	4620      	mov	r0, r4
9001a228:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
9001a22a:	4798      	blx	r3
9001a22c:	3501      	adds	r5, #1
9001a22e:	b2ad      	uxth	r5, r5
9001a230:	e7e7      	b.n	9001a202 <_ZN8touchgfx11Application15drawCachedAreasEv+0x78e>
9001a232:	bf00      	nop
9001a234:	24021c0c 	.word	0x24021c0c

9001a238 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
9001a238:	4b03      	ldr	r3, [pc, #12]	@ (9001a248 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
9001a23a:	2200      	movs	r2, #0
9001a23c:	801a      	strh	r2, [r3, #0]
9001a23e:	805a      	strh	r2, [r3, #2]
9001a240:	809a      	strh	r2, [r3, #4]
9001a242:	80da      	strh	r2, [r3, #6]
9001a244:	4770      	bx	lr
9001a246:	bf00      	nop
9001a248:	24021c58 	.word	0x24021c58

9001a24c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
9001a24c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a250:	b09d      	sub	sp, #116	@ 0x74
9001a252:	4606      	mov	r6, r0
9001a254:	4614      	mov	r4, r2
9001a256:	468a      	mov	sl, r1
9001a258:	a803      	add	r0, sp, #12
9001a25a:	461d      	mov	r5, r3
9001a25c:	f001 f97b 	bl	9001b556 <_ZN8touchgfx12TextProviderC1Ev>
9001a260:	6833      	ldr	r3, [r6, #0]
9001a262:	4630      	mov	r0, r6
9001a264:	f242 0b0b 	movw	fp, #8203	@ 0x200b
9001a268:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001a26a:	4798      	blx	r3
9001a26c:	6833      	ldr	r3, [r6, #0]
9001a26e:	4607      	mov	r7, r0
9001a270:	4630      	mov	r0, r6
9001a272:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001a274:	4798      	blx	r3
9001a276:	462a      	mov	r2, r5
9001a278:	2500      	movs	r5, #0
9001a27a:	4621      	mov	r1, r4
9001a27c:	9000      	str	r0, [sp, #0]
9001a27e:	463b      	mov	r3, r7
9001a280:	462c      	mov	r4, r5
9001a282:	46a9      	mov	r9, r5
9001a284:	46a8      	mov	r8, r5
9001a286:	a803      	add	r0, sp, #12
9001a288:	f001 f9c0 	bl	9001b60c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001a28c:	2300      	movs	r3, #0
9001a28e:	9302      	str	r3, [sp, #8]
9001a290:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
9001a294:	429c      	cmp	r4, r3
9001a296:	d002      	beq.n	9001a29e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
9001a298:	455c      	cmp	r4, fp
9001a29a:	bf18      	it	ne
9001a29c:	4625      	movne	r5, r4
9001a29e:	ab02      	add	r3, sp, #8
9001a2a0:	4632      	mov	r2, r6
9001a2a2:	4651      	mov	r1, sl
9001a2a4:	a803      	add	r0, sp, #12
9001a2a6:	f001 fce5 	bl	9001bc74 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001a2aa:	4604      	mov	r4, r0
9001a2ac:	b108      	cbz	r0, 9001a2b2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
9001a2ae:	280a      	cmp	r0, #10
9001a2b0:	d10a      	bne.n	9001a2c8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
9001a2b2:	45c1      	cmp	r9, r8
9001a2b4:	bf38      	it	cc
9001a2b6:	46c1      	movcc	r9, r8
9001a2b8:	f04f 0800 	mov.w	r8, #0
9001a2bc:	2c00      	cmp	r4, #0
9001a2be:	d1e5      	bne.n	9001a28c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
9001a2c0:	4648      	mov	r0, r9
9001a2c2:	b01d      	add	sp, #116	@ 0x74
9001a2c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a2c8:	9a02      	ldr	r2, [sp, #8]
9001a2ca:	2a00      	cmp	r2, #0
9001a2cc:	d0de      	beq.n	9001a28c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
9001a2ce:	7b57      	ldrb	r7, [r2, #13]
9001a2d0:	4629      	mov	r1, r5
9001a2d2:	6833      	ldr	r3, [r6, #0]
9001a2d4:	007f      	lsls	r7, r7, #1
9001a2d6:	8894      	ldrh	r4, [r2, #4]
9001a2d8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001a2da:	f407 7080 	and.w	r0, r7, #256	@ 0x100
9001a2de:	7a97      	ldrb	r7, [r2, #10]
9001a2e0:	4307      	orrs	r7, r0
9001a2e2:	4630      	mov	r0, r6
9001a2e4:	4798      	blx	r3
9001a2e6:	4438      	add	r0, r7
9001a2e8:	4480      	add	r8, r0
9001a2ea:	fa1f f888 	uxth.w	r8, r8
9001a2ee:	e7e5      	b.n	9001a2bc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

9001a2f0 <_ZNK8touchgfx4Font12getCharWidthEt>:
9001a2f0:	b508      	push	{r3, lr}
9001a2f2:	6803      	ldr	r3, [r0, #0]
9001a2f4:	68db      	ldr	r3, [r3, #12]
9001a2f6:	4798      	blx	r3
9001a2f8:	b128      	cbz	r0, 9001a306 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
9001a2fa:	7b43      	ldrb	r3, [r0, #13]
9001a2fc:	7a80      	ldrb	r0, [r0, #10]
9001a2fe:	005b      	lsls	r3, r3, #1
9001a300:	f403 7380 	and.w	r3, r3, #256	@ 0x100
9001a304:	4318      	orrs	r0, r3
9001a306:	bd08      	pop	{r3, pc}

9001a308 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
9001a308:	b40e      	push	{r1, r2, r3}
9001a30a:	b5f0      	push	{r4, r5, r6, r7, lr}
9001a30c:	b09e      	sub	sp, #120	@ 0x78
9001a30e:	4605      	mov	r5, r0
9001a310:	ab23      	add	r3, sp, #140	@ 0x8c
9001a312:	a805      	add	r0, sp, #20
9001a314:	f853 4b04 	ldr.w	r4, [r3], #4
9001a318:	9303      	str	r3, [sp, #12]
9001a31a:	f001 f91c 	bl	9001b556 <_ZN8touchgfx12TextProviderC1Ev>
9001a31e:	682b      	ldr	r3, [r5, #0]
9001a320:	4628      	mov	r0, r5
9001a322:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001a324:	4798      	blx	r3
9001a326:	682b      	ldr	r3, [r5, #0]
9001a328:	4606      	mov	r6, r0
9001a32a:	4628      	mov	r0, r5
9001a32c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001a32e:	4798      	blx	r3
9001a330:	4633      	mov	r3, r6
9001a332:	4621      	mov	r1, r4
9001a334:	ae1e      	add	r6, sp, #120	@ 0x78
9001a336:	2400      	movs	r4, #0
9001a338:	9000      	str	r0, [sp, #0]
9001a33a:	9a03      	ldr	r2, [sp, #12]
9001a33c:	a805      	add	r0, sp, #20
9001a33e:	f001 f965 	bl	9001b60c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001a342:	f846 4d68 	str.w	r4, [r6, #-104]!
9001a346:	462a      	mov	r2, r5
9001a348:	4633      	mov	r3, r6
9001a34a:	4621      	mov	r1, r4
9001a34c:	a805      	add	r0, sp, #20
9001a34e:	f001 fc91 	bl	9001bc74 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001a352:	b300      	cbz	r0, 9001a396 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
9001a354:	280a      	cmp	r0, #10
9001a356:	d01a      	beq.n	9001a38e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
9001a358:	9f04      	ldr	r7, [sp, #16]
9001a35a:	b1c7      	cbz	r7, 9001a38e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
9001a35c:	7b78      	ldrb	r0, [r7, #13]
9001a35e:	7a3b      	ldrb	r3, [r7, #8]
9001a360:	00c1      	lsls	r1, r0, #3
9001a362:	88ea      	ldrh	r2, [r5, #6]
9001a364:	f401 7180 	and.w	r1, r1, #256	@ 0x100
9001a368:	4319      	orrs	r1, r3
9001a36a:	0643      	lsls	r3, r0, #25
9001a36c:	ea4f 1000 	mov.w	r0, r0, lsl #4
9001a370:	bf48      	it	mi
9001a372:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
9001a376:	f400 7080 	and.w	r0, r0, #256	@ 0x100
9001a37a:	bf48      	it	mi
9001a37c:	b219      	sxthmi	r1, r3
9001a37e:	79fb      	ldrb	r3, [r7, #7]
9001a380:	4303      	orrs	r3, r0
9001a382:	4413      	add	r3, r2
9001a384:	1a5b      	subs	r3, r3, r1
9001a386:	b21b      	sxth	r3, r3
9001a388:	429c      	cmp	r4, r3
9001a38a:	bfb8      	it	lt
9001a38c:	461c      	movlt	r4, r3
9001a38e:	4633      	mov	r3, r6
9001a390:	462a      	mov	r2, r5
9001a392:	2100      	movs	r1, #0
9001a394:	e7da      	b.n	9001a34c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
9001a396:	b2a0      	uxth	r0, r4
9001a398:	b01e      	add	sp, #120	@ 0x78
9001a39a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9001a39e:	b003      	add	sp, #12
9001a3a0:	4770      	bx	lr

9001a3a2 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
9001a3a2:	7a43      	ldrb	r3, [r0, #9]
9001a3a4:	8880      	ldrh	r0, [r0, #4]
9001a3a6:	4418      	add	r0, r3
9001a3a8:	b280      	uxth	r0, r0
9001a3aa:	4770      	bx	lr

9001a3ac <_ZNK8touchgfx4Font13getFontHeightEv>:
9001a3ac:	6803      	ldr	r3, [r0, #0]
9001a3ae:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001a3b0:	4718      	bx	r3

9001a3b2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
9001a3b2:	b40e      	push	{r1, r2, r3}
9001a3b4:	b570      	push	{r4, r5, r6, lr}
9001a3b6:	b09d      	sub	sp, #116	@ 0x74
9001a3b8:	4604      	mov	r4, r0
9001a3ba:	ab21      	add	r3, sp, #132	@ 0x84
9001a3bc:	a803      	add	r0, sp, #12
9001a3be:	f853 5b04 	ldr.w	r5, [r3], #4
9001a3c2:	9302      	str	r3, [sp, #8]
9001a3c4:	f001 f8c7 	bl	9001b556 <_ZN8touchgfx12TextProviderC1Ev>
9001a3c8:	6823      	ldr	r3, [r4, #0]
9001a3ca:	4620      	mov	r0, r4
9001a3cc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001a3ce:	4798      	blx	r3
9001a3d0:	6823      	ldr	r3, [r4, #0]
9001a3d2:	4606      	mov	r6, r0
9001a3d4:	4620      	mov	r0, r4
9001a3d6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001a3d8:	2401      	movs	r4, #1
9001a3da:	4798      	blx	r3
9001a3dc:	4633      	mov	r3, r6
9001a3de:	9000      	str	r0, [sp, #0]
9001a3e0:	4629      	mov	r1, r5
9001a3e2:	9a02      	ldr	r2, [sp, #8]
9001a3e4:	a803      	add	r0, sp, #12
9001a3e6:	f001 f911 	bl	9001b60c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001a3ea:	a803      	add	r0, sp, #12
9001a3ec:	f001 fd0e 	bl	9001be0c <_ZN8touchgfx12TextProvider11getNextCharEv>
9001a3f0:	b2a3      	uxth	r3, r4
9001a3f2:	b138      	cbz	r0, 9001a404 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
9001a3f4:	280a      	cmp	r0, #10
9001a3f6:	a803      	add	r0, sp, #12
9001a3f8:	bf04      	itt	eq
9001a3fa:	3301      	addeq	r3, #1
9001a3fc:	b21c      	sxtheq	r4, r3
9001a3fe:	f001 fd05 	bl	9001be0c <_ZN8touchgfx12TextProvider11getNextCharEv>
9001a402:	e7f5      	b.n	9001a3f0 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
9001a404:	4618      	mov	r0, r3
9001a406:	b01d      	add	sp, #116	@ 0x74
9001a408:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001a40c:	b003      	add	sp, #12
9001a40e:	4770      	bx	lr

9001a410 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
9001a410:	b40e      	push	{r1, r2, r3}
9001a412:	b5f0      	push	{r4, r5, r6, r7, lr}
9001a414:	b09e      	sub	sp, #120	@ 0x78
9001a416:	4604      	mov	r4, r0
9001a418:	ab23      	add	r3, sp, #140	@ 0x8c
9001a41a:	a805      	add	r0, sp, #20
9001a41c:	f853 5b04 	ldr.w	r5, [r3], #4
9001a420:	9303      	str	r3, [sp, #12]
9001a422:	f001 f898 	bl	9001b556 <_ZN8touchgfx12TextProviderC1Ev>
9001a426:	6823      	ldr	r3, [r4, #0]
9001a428:	4620      	mov	r0, r4
9001a42a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001a42c:	4798      	blx	r3
9001a42e:	6823      	ldr	r3, [r4, #0]
9001a430:	4606      	mov	r6, r0
9001a432:	4620      	mov	r0, r4
9001a434:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001a436:	4798      	blx	r3
9001a438:	4633      	mov	r3, r6
9001a43a:	4629      	mov	r1, r5
9001a43c:	9000      	str	r0, [sp, #0]
9001a43e:	9a03      	ldr	r2, [sp, #12]
9001a440:	a805      	add	r0, sp, #20
9001a442:	f001 f8e3 	bl	9001b60c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001a446:	ad1e      	add	r5, sp, #120	@ 0x78
9001a448:	2100      	movs	r1, #0
9001a44a:	f647 76ff 	movw	r6, #32767	@ 0x7fff
9001a44e:	4622      	mov	r2, r4
9001a450:	a805      	add	r0, sp, #20
9001a452:	f845 1d68 	str.w	r1, [r5, #-104]!
9001a456:	462b      	mov	r3, r5
9001a458:	f001 fc0c 	bl	9001bc74 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001a45c:	b1d8      	cbz	r0, 9001a496 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
9001a45e:	280a      	cmp	r0, #10
9001a460:	d012      	beq.n	9001a488 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
9001a462:	9804      	ldr	r0, [sp, #16]
9001a464:	b180      	cbz	r0, 9001a488 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
9001a466:	7b47      	ldrb	r7, [r0, #13]
9001a468:	88e2      	ldrh	r2, [r4, #6]
9001a46a:	00fb      	lsls	r3, r7, #3
9001a46c:	f403 7180 	and.w	r1, r3, #256	@ 0x100
9001a470:	7a03      	ldrb	r3, [r0, #8]
9001a472:	430b      	orrs	r3, r1
9001a474:	0679      	lsls	r1, r7, #25
9001a476:	bf44      	itt	mi
9001a478:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001a47c:	b21b      	sxthmi	r3, r3
9001a47e:	1ad3      	subs	r3, r2, r3
9001a480:	b21b      	sxth	r3, r3
9001a482:	429e      	cmp	r6, r3
9001a484:	bfa8      	it	ge
9001a486:	461e      	movge	r6, r3
9001a488:	462b      	mov	r3, r5
9001a48a:	4622      	mov	r2, r4
9001a48c:	2100      	movs	r1, #0
9001a48e:	a805      	add	r0, sp, #20
9001a490:	f001 fbf0 	bl	9001bc74 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001a494:	e7e2      	b.n	9001a45c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
9001a496:	4630      	mov	r0, r6
9001a498:	b01e      	add	sp, #120	@ 0x78
9001a49a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9001a49e:	b003      	add	sp, #12
9001a4a0:	4770      	bx	lr

9001a4a2 <_ZNK8touchgfx8Drawable10invalidateEv>:
9001a4a2:	b513      	push	{r0, r1, r4, lr}
9001a4a4:	6803      	ldr	r3, [r0, #0]
9001a4a6:	2400      	movs	r4, #0
9001a4a8:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
9001a4ac:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9001a4b0:	f8ad 1004 	strh.w	r1, [sp, #4]
9001a4b4:	4669      	mov	r1, sp
9001a4b6:	691b      	ldr	r3, [r3, #16]
9001a4b8:	9400      	str	r4, [sp, #0]
9001a4ba:	f8ad 2006 	strh.w	r2, [sp, #6]
9001a4be:	4798      	blx	r3
9001a4c0:	b002      	add	sp, #8
9001a4c2:	bd10      	pop	{r4, pc}

9001a4c4 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
9001a4c4:	b538      	push	{r3, r4, r5, lr}
9001a4c6:	680b      	ldr	r3, [r1, #0]
9001a4c8:	460c      	mov	r4, r1
9001a4ca:	4605      	mov	r5, r0
9001a4cc:	68db      	ldr	r3, [r3, #12]
9001a4ce:	4798      	blx	r3
9001a4d0:	6823      	ldr	r3, [r4, #0]
9001a4d2:	4620      	mov	r0, r4
9001a4d4:	4629      	mov	r1, r5
9001a4d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001a4d8:	4798      	blx	r3
9001a4da:	4628      	mov	r0, r5
9001a4dc:	bd38      	pop	{r3, r4, r5, pc}

9001a4de <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
9001a4de:	b410      	push	{r4}
9001a4e0:	880a      	ldrh	r2, [r1, #0]
9001a4e2:	8884      	ldrh	r4, [r0, #4]
9001a4e4:	4422      	add	r2, r4
9001a4e6:	800a      	strh	r2, [r1, #0]
9001a4e8:	884a      	ldrh	r2, [r1, #2]
9001a4ea:	88c4      	ldrh	r4, [r0, #6]
9001a4ec:	4422      	add	r2, r4
9001a4ee:	804a      	strh	r2, [r1, #2]
9001a4f0:	6940      	ldr	r0, [r0, #20]
9001a4f2:	b120      	cbz	r0, 9001a4fe <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
9001a4f4:	6803      	ldr	r3, [r0, #0]
9001a4f6:	f85d 4b04 	ldr.w	r4, [sp], #4
9001a4fa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001a4fc:	4718      	bx	r3
9001a4fe:	f85d 4b04 	ldr.w	r4, [sp], #4
9001a502:	4770      	bx	lr

9001a504 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
9001a504:	b570      	push	{r4, r5, r6, lr}
9001a506:	8882      	ldrh	r2, [r0, #4]
9001a508:	460c      	mov	r4, r1
9001a50a:	880b      	ldrh	r3, [r1, #0]
9001a50c:	4605      	mov	r5, r0
9001a50e:	4413      	add	r3, r2
9001a510:	800b      	strh	r3, [r1, #0]
9001a512:	884b      	ldrh	r3, [r1, #2]
9001a514:	88c2      	ldrh	r2, [r0, #6]
9001a516:	4413      	add	r3, r2
9001a518:	804b      	strh	r3, [r1, #2]
9001a51a:	1d01      	adds	r1, r0, #4
9001a51c:	4620      	mov	r0, r4
9001a51e:	f7f8 f935 	bl	9001278c <_ZN8touchgfx4RectaNERKS0_>
9001a522:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9001a526:	2b00      	cmp	r3, #0
9001a528:	dd0b      	ble.n	9001a542 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001a52a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9001a52e:	2b00      	cmp	r3, #0
9001a530:	dd07      	ble.n	9001a542 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001a532:	6968      	ldr	r0, [r5, #20]
9001a534:	b128      	cbz	r0, 9001a542 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001a536:	6803      	ldr	r3, [r0, #0]
9001a538:	4621      	mov	r1, r4
9001a53a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001a53c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001a540:	4718      	bx	r3
9001a542:	bd70      	pop	{r4, r5, r6, pc}

9001a544 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
9001a544:	b570      	push	{r4, r5, r6, lr}
9001a546:	8882      	ldrh	r2, [r0, #4]
9001a548:	460c      	mov	r4, r1
9001a54a:	880b      	ldrh	r3, [r1, #0]
9001a54c:	4605      	mov	r5, r0
9001a54e:	4413      	add	r3, r2
9001a550:	800b      	strh	r3, [r1, #0]
9001a552:	884b      	ldrh	r3, [r1, #2]
9001a554:	88c2      	ldrh	r2, [r0, #6]
9001a556:	4413      	add	r3, r2
9001a558:	804b      	strh	r3, [r1, #2]
9001a55a:	1d01      	adds	r1, r0, #4
9001a55c:	4620      	mov	r0, r4
9001a55e:	f7f8 f915 	bl	9001278c <_ZN8touchgfx4RectaNERKS0_>
9001a562:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9001a566:	2b00      	cmp	r3, #0
9001a568:	dd19      	ble.n	9001a59e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
9001a56a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9001a56e:	2b00      	cmp	r3, #0
9001a570:	dd15      	ble.n	9001a59e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
9001a572:	6968      	ldr	r0, [r5, #20]
9001a574:	b128      	cbz	r0, 9001a582 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
9001a576:	6803      	ldr	r3, [r0, #0]
9001a578:	4621      	mov	r1, r4
9001a57a:	691b      	ldr	r3, [r3, #16]
9001a57c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001a580:	4718      	bx	r3
9001a582:	4b07      	ldr	r3, [pc, #28]	@ (9001a5a0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
9001a584:	681b      	ldr	r3, [r3, #0]
9001a586:	3304      	adds	r3, #4
9001a588:	429d      	cmp	r5, r3
9001a58a:	d108      	bne.n	9001a59e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
9001a58c:	f7fe fda8 	bl	900190e0 <_ZN8touchgfx11Application11getInstanceEv>
9001a590:	6803      	ldr	r3, [r0, #0]
9001a592:	6821      	ldr	r1, [r4, #0]
9001a594:	6862      	ldr	r2, [r4, #4]
9001a596:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
9001a598:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001a59c:	4718      	bx	r3
9001a59e:	bd70      	pop	{r4, r5, r6, pc}
9001a5a0:	24021c50 	.word	0x24021c50

9001a5a4 <_ZN8touchgfx8Drawable12moveRelativeEss>:
9001a5a4:	b570      	push	{r4, r5, r6, lr}
9001a5a6:	4604      	mov	r4, r0
9001a5a8:	4616      	mov	r6, r2
9001a5aa:	460d      	mov	r5, r1
9001a5ac:	b901      	cbnz	r1, 9001a5b0 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
9001a5ae:	b192      	cbz	r2, 9001a5d6 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
9001a5b0:	6823      	ldr	r3, [r4, #0]
9001a5b2:	4620      	mov	r0, r4
9001a5b4:	699b      	ldr	r3, [r3, #24]
9001a5b6:	4798      	blx	r3
9001a5b8:	88e2      	ldrh	r2, [r4, #6]
9001a5ba:	88a1      	ldrh	r1, [r4, #4]
9001a5bc:	4620      	mov	r0, r4
9001a5be:	4432      	add	r2, r6
9001a5c0:	4429      	add	r1, r5
9001a5c2:	b212      	sxth	r2, r2
9001a5c4:	b209      	sxth	r1, r1
9001a5c6:	f7f8 fbc5 	bl	90012d54 <_ZN8touchgfx8Drawable5setXYEss>
9001a5ca:	6823      	ldr	r3, [r4, #0]
9001a5cc:	4620      	mov	r0, r4
9001a5ce:	699b      	ldr	r3, [r3, #24]
9001a5d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001a5d4:	4718      	bx	r3
9001a5d6:	bd70      	pop	{r4, r5, r6, pc}

9001a5d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
9001a5d8:	b510      	push	{r4, lr}
9001a5da:	2300      	movs	r3, #0
9001a5dc:	4604      	mov	r4, r0
9001a5de:	4608      	mov	r0, r1
9001a5e0:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
9001a5e4:	8023      	strh	r3, [r4, #0]
9001a5e6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9001a5ea:	8063      	strh	r3, [r4, #2]
9001a5ec:	6803      	ldr	r3, [r0, #0]
9001a5ee:	80a1      	strh	r1, [r4, #4]
9001a5f0:	4621      	mov	r1, r4
9001a5f2:	80e2      	strh	r2, [r4, #6]
9001a5f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001a5f6:	4798      	blx	r3
9001a5f8:	4620      	mov	r0, r4
9001a5fa:	bd10      	pop	{r4, pc}

9001a5fc <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
9001a5fc:	4770      	bx	lr

9001a5fe <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
9001a5fe:	b510      	push	{r4, lr}
9001a600:	4604      	mov	r4, r0
9001a602:	211c      	movs	r1, #28
9001a604:	f012 fb5a 	bl	9002ccbc <_ZdlPvj>
9001a608:	4620      	mov	r0, r4
9001a60a:	bd10      	pop	{r4, pc}

9001a60c <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
9001a60c:	4a04      	ldr	r2, [pc, #16]	@ (9001a620 <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
9001a60e:	6002      	str	r2, [r0, #0]
9001a610:	2200      	movs	r2, #0
9001a612:	e9c0 2201 	strd	r2, r2, [r0, #4]
9001a616:	e9c0 2203 	strd	r2, r2, [r0, #12]
9001a61a:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001a61e:	4770      	bx	lr
9001a620:	90031e68 	.word	0x90031e68

9001a624 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
9001a624:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a628:	4604      	mov	r4, r0
9001a62a:	b087      	sub	sp, #28
9001a62c:	8b45      	ldrh	r5, [r0, #26]
9001a62e:	f8b2 c000 	ldrh.w	ip, [r2]
9001a632:	9105      	str	r1, [sp, #20]
9001a634:	1c68      	adds	r0, r5, #1
9001a636:	68e1      	ldr	r1, [r4, #12]
9001a638:	9203      	str	r2, [sp, #12]
9001a63a:	b280      	uxth	r0, r0
9001a63c:	eb01 0185 	add.w	r1, r1, r5, lsl #2
9001a640:	f01c 0501 	ands.w	r5, ip, #1
9001a644:	f9b3 2000 	ldrsh.w	r2, [r3]
9001a648:	9502      	str	r5, [sp, #8]
9001a64a:	d07d      	beq.n	9001a748 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x124>
9001a64c:	ee07 2a90 	vmov	s15, r2
9001a650:	8360      	strh	r0, [r4, #26]
9001a652:	f04f 0e00 	mov.w	lr, #0
9001a656:	eef8 6ae7 	vcvt.f32.s32	s13, s15
9001a65a:	ee06 ea10 	vmov	s12, lr
9001a65e:	edc1 6a00 	vstr	s13, [r1]
9001a662:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
9001a666:	8b61      	ldrh	r1, [r4, #26]
9001a668:	ee07 2a10 	vmov	s14, r2
9001a66c:	68e2      	ldr	r2, [r4, #12]
9001a66e:	1c48      	adds	r0, r1, #1
9001a670:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a674:	eb02 0281 	add.w	r2, r2, r1, lsl #2
9001a678:	8360      	strh	r0, [r4, #26]
9001a67a:	ed82 7a00 	vstr	s14, [r2]
9001a67e:	8b21      	ldrh	r1, [r4, #24]
9001a680:	2501      	movs	r5, #1
9001a682:	68a2      	ldr	r2, [r4, #8]
9001a684:	3304      	adds	r3, #4
9001a686:	1c48      	adds	r0, r1, #1
9001a688:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
9001a68c:	9300      	str	r3, [sp, #0]
9001a68e:	46aa      	mov	sl, r5
9001a690:	8320      	strh	r0, [r4, #24]
9001a692:	462e      	mov	r6, r5
9001a694:	5455      	strb	r5, [r2, r1]
9001a696:	2200      	movs	r2, #0
9001a698:	ee07 2a90 	vmov	s15, r2
9001a69c:	4613      	mov	r3, r2
9001a69e:	4611      	mov	r1, r2
9001a6a0:	9201      	str	r2, [sp, #4]
9001a6a2:	f8b4 8018 	ldrh.w	r8, [r4, #24]
9001a6a6:	9805      	ldr	r0, [sp, #20]
9001a6a8:	f108 0701 	add.w	r7, r8, #1
9001a6ac:	f8d4 b008 	ldr.w	fp, [r4, #8]
9001a6b0:	42a8      	cmp	r0, r5
9001a6b2:	b2bf      	uxth	r7, r7
9001a6b4:	eb0b 0908 	add.w	r9, fp, r8
9001a6b8:	f340 80db 	ble.w	9001a872 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x24e>
9001a6bc:	fa4c f906 	asr.w	r9, ip, r6
9001a6c0:	f009 0901 	and.w	r9, r9, #1
9001a6c4:	fa5f f389 	uxtb.w	r3, r9
9001a6c8:	9304      	str	r3, [sp, #16]
9001a6ca:	9b00      	ldr	r3, [sp, #0]
9001a6cc:	f9b3 1000 	ldrsh.w	r1, [r3]
9001a6d0:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9001a6d4:	f1b9 0f00 	cmp.w	r9, #0
9001a6d8:	d07d      	beq.n	9001a7d6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1b2>
9001a6da:	ee05 1a10 	vmov	s10, r1
9001a6de:	8327      	strh	r7, [r4, #24]
9001a6e0:	eef8 4ac5 	vcvt.f32.s32	s9, s10
9001a6e4:	ee05 3a10 	vmov	s10, r3
9001a6e8:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
9001a6ec:	f1ba 0f00 	cmp.w	sl, #0
9001a6f0:	d050      	beq.n	9001a794 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x170>
9001a6f2:	f04f 0002 	mov.w	r0, #2
9001a6f6:	f80b 0008 	strb.w	r0, [fp, r8]
9001a6fa:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001a6fe:	68e7      	ldr	r7, [r4, #12]
9001a700:	f108 0901 	add.w	r9, r8, #1
9001a704:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001a708:	f8a4 901a 	strh.w	r9, [r4, #26]
9001a70c:	edc7 4a00 	vstr	s9, [r7]
9001a710:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001a714:	68e7      	ldr	r7, [r4, #12]
9001a716:	f108 0901 	add.w	r9, r8, #1
9001a71a:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001a71e:	f8a4 901a 	strh.w	r9, [r4, #26]
9001a722:	ed87 5a00 	vstr	s10, [r7]
9001a726:	3601      	adds	r6, #1
9001a728:	2e10      	cmp	r6, #16
9001a72a:	d106      	bne.n	9001a73a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x116>
9001a72c:	9e01      	ldr	r6, [sp, #4]
9001a72e:	9803      	ldr	r0, [sp, #12]
9001a730:	3601      	adds	r6, #1
9001a732:	9601      	str	r6, [sp, #4]
9001a734:	f830 c016 	ldrh.w	ip, [r0, r6, lsl #1]
9001a738:	2600      	movs	r6, #0
9001a73a:	9800      	ldr	r0, [sp, #0]
9001a73c:	3501      	adds	r5, #1
9001a73e:	f8dd a010 	ldr.w	sl, [sp, #16]
9001a742:	3004      	adds	r0, #4
9001a744:	9000      	str	r0, [sp, #0]
9001a746:	e7ac      	b.n	9001a6a2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x7e>
9001a748:	ee06 2a10 	vmov	s12, r2
9001a74c:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
9001a750:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
9001a754:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
9001a758:	ee16 5a10 	vmov	r5, s12
9001a75c:	442a      	add	r2, r5
9001a75e:	ee06 2a90 	vmov	s13, r2
9001a762:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
9001a766:	8360      	strh	r0, [r4, #26]
9001a768:	4472      	add	r2, lr
9001a76a:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001a76e:	ee07 2a10 	vmov	s14, r2
9001a772:	ee66 6aa7 	vmul.f32	s13, s13, s15
9001a776:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a77a:	edc1 6a00 	vstr	s13, [r1]
9001a77e:	8b61      	ldrh	r1, [r4, #26]
9001a780:	ee27 7a27 	vmul.f32	s14, s14, s15
9001a784:	68e2      	ldr	r2, [r4, #12]
9001a786:	1c48      	adds	r0, r1, #1
9001a788:	eb02 0281 	add.w	r2, r2, r1, lsl #2
9001a78c:	8360      	strh	r0, [r4, #26]
9001a78e:	ed82 7a00 	vstr	s14, [r2]
9001a792:	e774      	b.n	9001a67e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x5a>
9001a794:	f04f 0005 	mov.w	r0, #5
9001a798:	eeb8 4ae7 	vcvt.f32.s32	s8, s15
9001a79c:	f80b 0008 	strb.w	r0, [fp, r8]
9001a7a0:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001a7a4:	68e7      	ldr	r7, [r4, #12]
9001a7a6:	f108 0901 	add.w	r9, r8, #1
9001a7aa:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001a7ae:	f8a4 901a 	strh.w	r9, [r4, #26]
9001a7b2:	ed87 4a00 	vstr	s8, [r7]
9001a7b6:	ee04 2a10 	vmov	s8, r2
9001a7ba:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001a7be:	68e7      	ldr	r7, [r4, #12]
9001a7c0:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
9001a7c4:	f108 0901 	add.w	r9, r8, #1
9001a7c8:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001a7cc:	f8a4 901a 	strh.w	r9, [r4, #26]
9001a7d0:	ed87 4a00 	vstr	s8, [r7]
9001a7d4:	e791      	b.n	9001a6fa <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xd6>
9001a7d6:	f1ba 0f00 	cmp.w	sl, #0
9001a7da:	d146      	bne.n	9001a86a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x246>
9001a7dc:	f04f 0005 	mov.w	r0, #5
9001a7e0:	8327      	strh	r7, [r4, #24]
9001a7e2:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
9001a7e6:	f80b 0008 	strb.w	r0, [fp, r8]
9001a7ea:	ee17 0a90 	vmov	r0, s15
9001a7ee:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001a7f2:	68e7      	ldr	r7, [r4, #12]
9001a7f4:	4408      	add	r0, r1
9001a7f6:	f108 0901 	add.w	r9, r8, #1
9001a7fa:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001a7fe:	ee07 0a90 	vmov	s15, r0
9001a802:	f8a4 901a 	strh.w	r9, [r4, #26]
9001a806:	ed87 5a00 	vstr	s10, [r7]
9001a80a:	ee05 2a10 	vmov	s10, r2
9001a80e:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001a812:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001a816:	68e7      	ldr	r7, [r4, #12]
9001a818:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
9001a81c:	f108 0901 	add.w	r9, r8, #1
9001a820:	441a      	add	r2, r3
9001a822:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001a826:	ee67 7aa5 	vmul.f32	s15, s15, s11
9001a82a:	f8a4 901a 	strh.w	r9, [r4, #26]
9001a82e:	ed87 5a00 	vstr	s10, [r7]
9001a832:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001a836:	68e7      	ldr	r7, [r4, #12]
9001a838:	f108 0901 	add.w	r9, r8, #1
9001a83c:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001a840:	f8a4 901a 	strh.w	r9, [r4, #26]
9001a844:	edc7 7a00 	vstr	s15, [r7]
9001a848:	ee07 2a90 	vmov	s15, r2
9001a84c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001a850:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001a854:	68e7      	ldr	r7, [r4, #12]
9001a856:	f108 0901 	add.w	r9, r8, #1
9001a85a:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001a85e:	ee67 7aa5 	vmul.f32	s15, s15, s11
9001a862:	f8a4 901a 	strh.w	r9, [r4, #26]
9001a866:	edc7 7a00 	vstr	s15, [r7]
9001a86a:	461a      	mov	r2, r3
9001a86c:	ee07 1a90 	vmov	s15, r1
9001a870:	e759      	b.n	9001a726 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
9001a872:	f1ba 0f00 	cmp.w	sl, #0
9001a876:	d045      	beq.n	9001a904 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
9001a878:	ee05 1a90 	vmov	s11, r1
9001a87c:	eef8 5ae5 	vcvt.f32.s32	s11, s11
9001a880:	eef4 5a66 	vcmp.f32	s11, s13
9001a884:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001a888:	d108      	bne.n	9001a89c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x278>
9001a88a:	ee05 3a90 	vmov	s11, r3
9001a88e:	eef8 5ae5 	vcvt.f32.s32	s11, s11
9001a892:	eef4 5a47 	vcmp.f32	s11, s14
9001a896:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001a89a:	d033      	beq.n	9001a904 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
9001a89c:	9b02      	ldr	r3, [sp, #8]
9001a89e:	8327      	strh	r7, [r4, #24]
9001a8a0:	b1b3      	cbz	r3, 9001a8d0 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2ac>
9001a8a2:	2302      	movs	r3, #2
9001a8a4:	f889 3000 	strb.w	r3, [r9]
9001a8a8:	8b62      	ldrh	r2, [r4, #26]
9001a8aa:	68e3      	ldr	r3, [r4, #12]
9001a8ac:	1c51      	adds	r1, r2, #1
9001a8ae:	eb03 0382 	add.w	r3, r3, r2, lsl #2
9001a8b2:	8361      	strh	r1, [r4, #26]
9001a8b4:	edc3 6a00 	vstr	s13, [r3]
9001a8b8:	8b62      	ldrh	r2, [r4, #26]
9001a8ba:	68e3      	ldr	r3, [r4, #12]
9001a8bc:	1c51      	adds	r1, r2, #1
9001a8be:	eb03 0382 	add.w	r3, r3, r2, lsl #2
9001a8c2:	8361      	strh	r1, [r4, #26]
9001a8c4:	ed83 7a00 	vstr	s14, [r3]
9001a8c8:	9800      	ldr	r0, [sp, #0]
9001a8ca:	b007      	add	sp, #28
9001a8cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a8d0:	2305      	movs	r3, #5
9001a8d2:	f889 3000 	strb.w	r3, [r9]
9001a8d6:	8b62      	ldrh	r2, [r4, #26]
9001a8d8:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9001a8dc:	68e3      	ldr	r3, [r4, #12]
9001a8de:	ee07 ea90 	vmov	s15, lr
9001a8e2:	1c51      	adds	r1, r2, #1
9001a8e4:	eb03 0382 	add.w	r3, r3, r2, lsl #2
9001a8e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001a8ec:	8361      	strh	r1, [r4, #26]
9001a8ee:	ed83 6a00 	vstr	s12, [r3]
9001a8f2:	8b62      	ldrh	r2, [r4, #26]
9001a8f4:	68e3      	ldr	r3, [r4, #12]
9001a8f6:	1c51      	adds	r1, r2, #1
9001a8f8:	eb03 0382 	add.w	r3, r3, r2, lsl #2
9001a8fc:	8361      	strh	r1, [r4, #26]
9001a8fe:	edc3 7a00 	vstr	s15, [r3]
9001a902:	e7d1      	b.n	9001a8a8 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
9001a904:	ee05 2a90 	vmov	s11, r2
9001a908:	2305      	movs	r3, #5
9001a90a:	9902      	ldr	r1, [sp, #8]
9001a90c:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
9001a910:	8327      	strh	r7, [r4, #24]
9001a912:	eef8 5ae5 	vcvt.f32.s32	s11, s11
9001a916:	f889 3000 	strb.w	r3, [r9]
9001a91a:	b181      	cbz	r1, 9001a93e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x31a>
9001a91c:	8b62      	ldrh	r2, [r4, #26]
9001a91e:	68e3      	ldr	r3, [r4, #12]
9001a920:	1c51      	adds	r1, r2, #1
9001a922:	eb03 0382 	add.w	r3, r3, r2, lsl #2
9001a926:	8361      	strh	r1, [r4, #26]
9001a928:	ed83 5a00 	vstr	s10, [r3]
9001a92c:	8b62      	ldrh	r2, [r4, #26]
9001a92e:	68e3      	ldr	r3, [r4, #12]
9001a930:	1c51      	adds	r1, r2, #1
9001a932:	eb03 0382 	add.w	r3, r3, r2, lsl #2
9001a936:	8361      	strh	r1, [r4, #26]
9001a938:	edc3 5a00 	vstr	s11, [r3]
9001a93c:	e7b4      	b.n	9001a8a8 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
9001a93e:	8b65      	ldrh	r5, [r4, #26]
9001a940:	ee17 0a90 	vmov	r0, s15
9001a944:	68e1      	ldr	r1, [r4, #12]
9001a946:	4472      	add	r2, lr
9001a948:	1c6e      	adds	r6, r5, #1
9001a94a:	eb01 0185 	add.w	r1, r1, r5, lsl #2
9001a94e:	8366      	strh	r6, [r4, #26]
9001a950:	ed81 5a00 	vstr	s10, [r1]
9001a954:	8b65      	ldrh	r5, [r4, #26]
9001a956:	68e1      	ldr	r1, [r4, #12]
9001a958:	1c6e      	adds	r6, r5, #1
9001a95a:	eb01 0185 	add.w	r1, r1, r5, lsl #2
9001a95e:	8366      	strh	r6, [r4, #26]
9001a960:	edc1 5a00 	vstr	s11, [r1]
9001a964:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
9001a968:	8b65      	ldrh	r5, [r4, #26]
9001a96a:	68e1      	ldr	r1, [r4, #12]
9001a96c:	1c6e      	adds	r6, r5, #1
9001a96e:	eb01 0185 	add.w	r1, r1, r5, lsl #2
9001a972:	ee16 5a10 	vmov	r5, s12
9001a976:	8366      	strh	r6, [r4, #26]
9001a978:	4428      	add	r0, r5
9001a97a:	ee07 0a90 	vmov	s15, r0
9001a97e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001a982:	ee67 7aa5 	vmul.f32	s15, s15, s11
9001a986:	edc1 7a00 	vstr	s15, [r1]
9001a98a:	ee07 2a90 	vmov	s15, r2
9001a98e:	8b61      	ldrh	r1, [r4, #26]
9001a990:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001a994:	68e5      	ldr	r5, [r4, #12]
9001a996:	1c4e      	adds	r6, r1, #1
9001a998:	eb05 0181 	add.w	r1, r5, r1, lsl #2
9001a99c:	ee67 7aa5 	vmul.f32	s15, s15, s11
9001a9a0:	8366      	strh	r6, [r4, #26]
9001a9a2:	edc1 7a00 	vstr	s15, [r1]
9001a9a6:	8b22      	ldrh	r2, [r4, #24]
9001a9a8:	68a1      	ldr	r1, [r4, #8]
9001a9aa:	1c55      	adds	r5, r2, #1
9001a9ac:	8325      	strh	r5, [r4, #24]
9001a9ae:	548b      	strb	r3, [r1, r2]
9001a9b0:	e791      	b.n	9001a8d6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2b2>
	...

9001a9b4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
9001a9b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001a9b8:	4604      	mov	r4, r0
9001a9ba:	b08e      	sub	sp, #56	@ 0x38
9001a9bc:	4699      	mov	r9, r3
9001a9be:	4688      	mov	r8, r1
9001a9c0:	4615      	mov	r5, r2
9001a9c2:	9e16      	ldr	r6, [sp, #88]	@ 0x58
9001a9c4:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
9001a9c8:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
9001a9ca:	f7e8 fd9d 	bl	90003508 <_ZN8touchgfx14VectorRenderer11getInstanceEv>
9001a9ce:	6060      	str	r0, [r4, #4]
9001a9d0:	f1b9 0f00 	cmp.w	r9, #0
9001a9d4:	f000 80e8 	beq.w	9001aba8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
9001a9d8:	2800      	cmp	r0, #0
9001a9da:	f000 80e5 	beq.w	9001aba8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
9001a9de:	a805      	add	r0, sp, #20
9001a9e0:	f000 f8f9 	bl	9001abd6 <_ZN8touchgfx9Matrix3x3C1Ev>
9001a9e4:	6833      	ldr	r3, [r6, #0]
9001a9e6:	4630      	mov	r0, r6
9001a9e8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
9001a9ea:	4798      	blx	r3
9001a9ec:	a805      	add	r0, sp, #20
9001a9ee:	eef0 0a40 	vmov.f32	s1, s0
9001a9f2:	f000 f8f4 	bl	9001abde <_ZN8touchgfx9Matrix3x35scaleEff>
9001a9f6:	6860      	ldr	r0, [r4, #4]
9001a9f8:	f1ba 0f03 	cmp.w	sl, #3
9001a9fc:	d83b      	bhi.n	9001aa76 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
9001a9fe:	e8df f00a 	tbb	[pc, sl]
9001aa02:	1002      	.short	0x1002
9001aa04:	9f71      	.short	0x9f71
9001aa06:	6803      	ldr	r3, [r0, #0]
9001aa08:	462a      	mov	r2, r5
9001aa0a:	4641      	mov	r1, r8
9001aa0c:	689b      	ldr	r3, [r3, #8]
9001aa0e:	4798      	blx	r3
9001aa10:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
9001aa14:	eef8 0ae7 	vcvt.f32.s32	s1, s15
9001aa18:	ee07 7a90 	vmov	s15, r7
9001aa1c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
9001aa20:	e026      	b.n	9001aa70 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
9001aa22:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
9001aa26:	f8b8 3004 	ldrh.w	r3, [r8, #4]
9001aa2a:	8869      	ldrh	r1, [r5, #2]
9001aa2c:	1a9b      	subs	r3, r3, r2
9001aa2e:	f8ad 2010 	strh.w	r2, [sp, #16]
9001aa32:	aa03      	add	r2, sp, #12
9001aa34:	1a5b      	subs	r3, r3, r1
9001aa36:	4641      	mov	r1, r8
9001aa38:	f8ad 300c 	strh.w	r3, [sp, #12]
9001aa3c:	882b      	ldrh	r3, [r5, #0]
9001aa3e:	f8ad 300e 	strh.w	r3, [sp, #14]
9001aa42:	88ab      	ldrh	r3, [r5, #4]
9001aa44:	f8ad 3012 	strh.w	r3, [sp, #18]
9001aa48:	6803      	ldr	r3, [r0, #0]
9001aa4a:	689b      	ldr	r3, [r3, #8]
9001aa4c:	4798      	blx	r3
9001aa4e:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 9001abb0 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
9001aa52:	a805      	add	r0, sp, #20
9001aa54:	f000 f8e8 	bl	9001ac28 <_ZN8touchgfx9Matrix3x36rotateEf>
9001aa58:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
9001aa5c:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
9001aa5e:	ee07 7a90 	vmov	s15, r7
9001aa62:	1a9b      	subs	r3, r3, r2
9001aa64:	eef8 0ae7 	vcvt.f32.s32	s1, s15
9001aa68:	ee00 3a10 	vmov	s0, r3
9001aa6c:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
9001aa70:	a805      	add	r0, sp, #20
9001aa72:	f000 f927 	bl	9001acc4 <_ZN8touchgfx9Matrix3x39translateEff>
9001aa76:	6860      	ldr	r0, [r4, #4]
9001aa78:	a905      	add	r1, sp, #20
9001aa7a:	2500      	movs	r5, #0
9001aa7c:	f109 0602 	add.w	r6, r9, #2
9001aa80:	6803      	ldr	r3, [r0, #0]
9001aa82:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
9001aa84:	4798      	blx	r3
9001aa86:	6860      	ldr	r0, [r4, #4]
9001aa88:	9917      	ldr	r1, [sp, #92]	@ 0x5c
9001aa8a:	6803      	ldr	r3, [r0, #0]
9001aa8c:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
9001aa90:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001aa92:	4798      	blx	r3
9001aa94:	6860      	ldr	r0, [r4, #4]
9001aa96:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
9001aa9a:	6803      	ldr	r3, [r0, #0]
9001aa9c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001aa9e:	4798      	blx	r3
9001aaa0:	6860      	ldr	r0, [r4, #4]
9001aaa2:	2101      	movs	r1, #1
9001aaa4:	6803      	ldr	r3, [r0, #0]
9001aaa6:	68db      	ldr	r3, [r3, #12]
9001aaa8:	4798      	blx	r3
9001aaaa:	f8b9 7000 	ldrh.w	r7, [r9]
9001aaae:	f104 0310 	add.w	r3, r4, #16
9001aab2:	61a5      	str	r5, [r4, #24]
9001aab4:	f104 0208 	add.w	r2, r4, #8
9001aab8:	f104 0114 	add.w	r1, r4, #20
9001aabc:	f104 000c 	add.w	r0, r4, #12
9001aac0:	f7eb fff6 	bl	90006ab0 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
9001aac4:	42af      	cmp	r7, r5
9001aac6:	dd60      	ble.n	9001ab8a <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
9001aac8:	8831      	ldrh	r1, [r6, #0]
9001aaca:	1cb2      	adds	r2, r6, #2
9001aacc:	4620      	mov	r0, r4
9001aace:	3501      	adds	r5, #1
9001aad0:	f101 030f 	add.w	r3, r1, #15
9001aad4:	f3c3 1307 	ubfx	r3, r3, #4, #8
9001aad8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001aadc:	f7ff fda2 	bl	9001a624 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
9001aae0:	4606      	mov	r6, r0
9001aae2:	e7ef      	b.n	9001aac4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
9001aae4:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
9001aae8:	f8b8 3004 	ldrh.w	r3, [r8, #4]
9001aaec:	8829      	ldrh	r1, [r5, #0]
9001aaee:	1a9b      	subs	r3, r3, r2
9001aaf0:	f8ad 2010 	strh.w	r2, [sp, #16]
9001aaf4:	aa03      	add	r2, sp, #12
9001aaf6:	1a5b      	subs	r3, r3, r1
9001aaf8:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
9001aafc:	886d      	ldrh	r5, [r5, #2]
9001aafe:	f8ad 300c 	strh.w	r3, [sp, #12]
9001ab02:	f8b8 3006 	ldrh.w	r3, [r8, #6]
9001ab06:	f8ad 1012 	strh.w	r1, [sp, #18]
9001ab0a:	1a5b      	subs	r3, r3, r1
9001ab0c:	4641      	mov	r1, r8
9001ab0e:	1b5b      	subs	r3, r3, r5
9001ab10:	f8ad 300e 	strh.w	r3, [sp, #14]
9001ab14:	6803      	ldr	r3, [r0, #0]
9001ab16:	689b      	ldr	r3, [r3, #8]
9001ab18:	4798      	blx	r3
9001ab1a:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 9001abb4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
9001ab1e:	a805      	add	r0, sp, #20
9001ab20:	f000 f882 	bl	9001ac28 <_ZN8touchgfx9Matrix3x36rotateEf>
9001ab24:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
9001ab28:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
9001ab2a:	1a9b      	subs	r3, r3, r2
9001ab2c:	ee00 3a90 	vmov	s1, r3
9001ab30:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
9001ab34:	1bdb      	subs	r3, r3, r7
9001ab36:	eef8 0ae0 	vcvt.f32.s32	s1, s1
9001ab3a:	ee00 3a10 	vmov	s0, r3
9001ab3e:	e795      	b.n	9001aa6c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
9001ab40:	886b      	ldrh	r3, [r5, #2]
9001ab42:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
9001ab46:	f8ad 300c 	strh.w	r3, [sp, #12]
9001ab4a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
9001ab4e:	8829      	ldrh	r1, [r5, #0]
9001ab50:	1a9b      	subs	r3, r3, r2
9001ab52:	f8ad 2012 	strh.w	r2, [sp, #18]
9001ab56:	aa03      	add	r2, sp, #12
9001ab58:	1a5b      	subs	r3, r3, r1
9001ab5a:	4641      	mov	r1, r8
9001ab5c:	f8ad 300e 	strh.w	r3, [sp, #14]
9001ab60:	88eb      	ldrh	r3, [r5, #6]
9001ab62:	f8ad 3010 	strh.w	r3, [sp, #16]
9001ab66:	6803      	ldr	r3, [r0, #0]
9001ab68:	689b      	ldr	r3, [r3, #8]
9001ab6a:	4798      	blx	r3
9001ab6c:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 9001abb8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
9001ab70:	a805      	add	r0, sp, #20
9001ab72:	f000 f859 	bl	9001ac28 <_ZN8touchgfx9Matrix3x36rotateEf>
9001ab76:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
9001ab7a:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
9001ab7e:	1bdb      	subs	r3, r3, r7
9001ab80:	ee00 3a90 	vmov	s1, r3
9001ab84:	eef8 0ae0 	vcvt.f32.s32	s1, s1
9001ab88:	e748      	b.n	9001aa1c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
9001ab8a:	6860      	ldr	r0, [r4, #4]
9001ab8c:	2100      	movs	r1, #0
9001ab8e:	8b22      	ldrh	r2, [r4, #24]
9001ab90:	6803      	ldr	r3, [r0, #0]
9001ab92:	9101      	str	r1, [sp, #4]
9001ab94:	8b61      	ldrh	r1, [r4, #26]
9001ab96:	9100      	str	r1, [sp, #0]
9001ab98:	6a1d      	ldr	r5, [r3, #32]
9001ab9a:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
9001ab9e:	47a8      	blx	r5
9001aba0:	6860      	ldr	r0, [r4, #4]
9001aba2:	6803      	ldr	r3, [r0, #0]
9001aba4:	69db      	ldr	r3, [r3, #28]
9001aba6:	4798      	blx	r3
9001aba8:	b00e      	add	sp, #56	@ 0x38
9001abaa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001abae:	bf00      	nop
9001abb0:	42b40000 	.word	0x42b40000
9001abb4:	43340000 	.word	0x43340000
9001abb8:	43870000 	.word	0x43870000

9001abbc <_ZN8touchgfx9Matrix3x35resetEv>:
9001abbc:	2300      	movs	r3, #0
9001abbe:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
9001abc2:	6043      	str	r3, [r0, #4]
9001abc4:	6002      	str	r2, [r0, #0]
9001abc6:	6083      	str	r3, [r0, #8]
9001abc8:	60c3      	str	r3, [r0, #12]
9001abca:	6102      	str	r2, [r0, #16]
9001abcc:	6143      	str	r3, [r0, #20]
9001abce:	6183      	str	r3, [r0, #24]
9001abd0:	61c3      	str	r3, [r0, #28]
9001abd2:	6202      	str	r2, [r0, #32]
9001abd4:	4770      	bx	lr

9001abd6 <_ZN8touchgfx9Matrix3x3C1Ev>:
9001abd6:	b508      	push	{r3, lr}
9001abd8:	f7ff fff0 	bl	9001abbc <_ZN8touchgfx9Matrix3x35resetEv>
9001abdc:	bd08      	pop	{r3, pc}

9001abde <_ZN8touchgfx9Matrix3x35scaleEff>:
9001abde:	edd0 7a00 	vldr	s15, [r0]
9001abe2:	ee67 7a80 	vmul.f32	s15, s15, s0
9001abe6:	edc0 7a00 	vstr	s15, [r0]
9001abea:	edd0 7a01 	vldr	s15, [r0, #4]
9001abee:	ee67 7a80 	vmul.f32	s15, s15, s0
9001abf2:	edc0 7a01 	vstr	s15, [r0, #4]
9001abf6:	edd0 7a02 	vldr	s15, [r0, #8]
9001abfa:	ee27 0a80 	vmul.f32	s0, s15, s0
9001abfe:	edd0 7a03 	vldr	s15, [r0, #12]
9001ac02:	ee67 7aa0 	vmul.f32	s15, s15, s1
9001ac06:	ed80 0a02 	vstr	s0, [r0, #8]
9001ac0a:	edc0 7a03 	vstr	s15, [r0, #12]
9001ac0e:	edd0 7a04 	vldr	s15, [r0, #16]
9001ac12:	ee67 7aa0 	vmul.f32	s15, s15, s1
9001ac16:	edc0 7a04 	vstr	s15, [r0, #16]
9001ac1a:	edd0 7a05 	vldr	s15, [r0, #20]
9001ac1e:	ee67 0aa0 	vmul.f32	s1, s15, s1
9001ac22:	edc0 0a05 	vstr	s1, [r0, #20]
9001ac26:	4770      	bx	lr

9001ac28 <_ZN8touchgfx9Matrix3x36rotateEf>:
9001ac28:	eddf 7a24 	vldr	s15, [pc, #144]	@ 9001acbc <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
9001ac2c:	ee20 0a27 	vmul.f32	s0, s0, s15
9001ac30:	eddf 7a23 	vldr	s15, [pc, #140]	@ 9001acc0 <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
9001ac34:	b510      	push	{r4, lr}
9001ac36:	ed2d 8b02 	vpush	{d8}
9001ac3a:	eec0 8a27 	vdiv.f32	s17, s0, s15
9001ac3e:	4604      	mov	r4, r0
9001ac40:	eeb0 0a68 	vmov.f32	s0, s17
9001ac44:	f012 f970 	bl	9002cf28 <cosf>
9001ac48:	eeb0 8a40 	vmov.f32	s16, s0
9001ac4c:	eeb0 0a68 	vmov.f32	s0, s17
9001ac50:	f012 f8a6 	bl	9002cda0 <sinf>
9001ac54:	edd4 6a03 	vldr	s13, [r4, #12]
9001ac58:	edd4 4a00 	vldr	s9, [r4]
9001ac5c:	ee60 7a66 	vnmul.f32	s15, s0, s13
9001ac60:	ed94 7a04 	vldr	s14, [r4, #16]
9001ac64:	ed94 5a01 	vldr	s10, [r4, #4]
9001ac68:	ee66 6a88 	vmul.f32	s13, s13, s16
9001ac6c:	edd4 5a02 	vldr	s11, [r4, #8]
9001ac70:	eee8 7a24 	vfma.f32	s15, s16, s9
9001ac74:	eee0 6a24 	vfma.f32	s13, s0, s9
9001ac78:	edc4 7a00 	vstr	s15, [r4]
9001ac7c:	ee60 7a47 	vnmul.f32	s15, s0, s14
9001ac80:	ee27 7a08 	vmul.f32	s14, s14, s16
9001ac84:	edc4 6a03 	vstr	s13, [r4, #12]
9001ac88:	eee8 7a05 	vfma.f32	s15, s16, s10
9001ac8c:	eea0 7a05 	vfma.f32	s14, s0, s10
9001ac90:	edc4 7a01 	vstr	s15, [r4, #4]
9001ac94:	edd4 7a05 	vldr	s15, [r4, #20]
9001ac98:	ed84 7a04 	vstr	s14, [r4, #16]
9001ac9c:	ee20 6a67 	vnmul.f32	s12, s0, s15
9001aca0:	ee67 7a88 	vmul.f32	s15, s15, s16
9001aca4:	eea8 6a25 	vfma.f32	s12, s16, s11
9001aca8:	eee0 7a25 	vfma.f32	s15, s0, s11
9001acac:	ecbd 8b02 	vpop	{d8}
9001acb0:	ed84 6a02 	vstr	s12, [r4, #8]
9001acb4:	edc4 7a05 	vstr	s15, [r4, #20]
9001acb8:	bd10      	pop	{r4, pc}
9001acba:	bf00      	nop
9001acbc:	40490fdb 	.word	0x40490fdb
9001acc0:	43340000 	.word	0x43340000

9001acc4 <_ZN8touchgfx9Matrix3x39translateEff>:
9001acc4:	ed90 6a06 	vldr	s12, [r0, #24]
9001acc8:	edd0 7a00 	vldr	s15, [r0]
9001accc:	edd0 6a07 	vldr	s13, [r0, #28]
9001acd0:	eee6 7a00 	vfma.f32	s15, s12, s0
9001acd4:	ed90 7a08 	vldr	s14, [r0, #32]
9001acd8:	edc0 7a00 	vstr	s15, [r0]
9001acdc:	edd0 7a01 	vldr	s15, [r0, #4]
9001ace0:	eee6 7a80 	vfma.f32	s15, s13, s0
9001ace4:	edc0 7a01 	vstr	s15, [r0, #4]
9001ace8:	edd0 7a02 	vldr	s15, [r0, #8]
9001acec:	eee7 7a00 	vfma.f32	s15, s14, s0
9001acf0:	edc0 7a02 	vstr	s15, [r0, #8]
9001acf4:	edd0 7a03 	vldr	s15, [r0, #12]
9001acf8:	eee6 7a20 	vfma.f32	s15, s12, s1
9001acfc:	edc0 7a03 	vstr	s15, [r0, #12]
9001ad00:	edd0 7a04 	vldr	s15, [r0, #16]
9001ad04:	eee6 7aa0 	vfma.f32	s15, s13, s1
9001ad08:	edc0 7a04 	vstr	s15, [r0, #16]
9001ad0c:	edd0 7a05 	vldr	s15, [r0, #20]
9001ad10:	eee7 7a20 	vfma.f32	s15, s14, s1
9001ad14:	edc0 7a05 	vstr	s15, [r0, #20]
9001ad18:	4770      	bx	lr

9001ad1a <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
9001ad1a:	edd0 6a01 	vldr	s13, [r0, #4]
9001ad1e:	b084      	sub	sp, #16
9001ad20:	edd0 7a04 	vldr	s15, [r0, #16]
9001ad24:	ed90 7a03 	vldr	s14, [r0, #12]
9001ad28:	ee60 7aa7 	vmul.f32	s15, s1, s15
9001ad2c:	ee60 0aa6 	vmul.f32	s1, s1, s13
9001ad30:	edd0 6a00 	vldr	s13, [r0]
9001ad34:	eee7 7a00 	vfma.f32	s15, s14, s0
9001ad38:	ed90 7a05 	vldr	s14, [r0, #20]
9001ad3c:	eee6 0a80 	vfma.f32	s1, s13, s0
9001ad40:	ed90 0a02 	vldr	s0, [r0, #8]
9001ad44:	ee30 0a80 	vadd.f32	s0, s1, s0
9001ad48:	ee77 0a87 	vadd.f32	s1, s15, s14
9001ad4c:	b004      	add	sp, #16
9001ad4e:	4770      	bx	lr

9001ad50 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
9001ad50:	b530      	push	{r4, r5, lr}
9001ad52:	8083      	strh	r3, [r0, #4]
9001ad54:	f8bd 300c 	ldrh.w	r3, [sp, #12]
9001ad58:	f89d 5018 	ldrb.w	r5, [sp, #24]
9001ad5c:	80c3      	strh	r3, [r0, #6]
9001ad5e:	f89d 3010 	ldrb.w	r3, [sp, #16]
9001ad62:	6141      	str	r1, [r0, #20]
9001ad64:	7203      	strb	r3, [r0, #8]
9001ad66:	f89d 3014 	ldrb.w	r3, [sp, #20]
9001ad6a:	8302      	strh	r2, [r0, #24]
9001ad6c:	7243      	strb	r3, [r0, #9]
9001ad6e:	7a83      	ldrb	r3, [r0, #10]
9001ad70:	f365 0306 	bfi	r3, r5, #0, #7
9001ad74:	f89d 501c 	ldrb.w	r5, [sp, #28]
9001ad78:	f365 13c7 	bfi	r3, r5, #7, #1
9001ad7c:	7283      	strb	r3, [r0, #10]
9001ad7e:	f89d 3020 	ldrb.w	r3, [sp, #32]
9001ad82:	72c3      	strb	r3, [r0, #11]
9001ad84:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
9001ad88:	7303      	strb	r3, [r0, #12]
9001ad8a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001ad8e:	81c3      	strh	r3, [r0, #14]
9001ad90:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
9001ad94:	8203      	strh	r3, [r0, #16]
9001ad96:	4b01      	ldr	r3, [pc, #4]	@ (9001ad9c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
9001ad98:	6003      	str	r3, [r0, #0]
9001ad9a:	bd30      	pop	{r4, r5, pc}
9001ad9c:	90031e7c 	.word	0x90031e7c

9001ada0 <_ZNK8touchgfx9ConstFont4findEt>:
9001ada0:	b5f0      	push	{r4, r5, r6, r7, lr}
9001ada2:	6944      	ldr	r4, [r0, #20]
9001ada4:	b3bc      	cbz	r4, 9001ae16 <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001ada6:	88a3      	ldrh	r3, [r4, #4]
9001ada8:	8b02      	ldrh	r2, [r0, #24]
9001adaa:	1acb      	subs	r3, r1, r3
9001adac:	f102 32ff 	add.w	r2, r2, #4294967295
9001adb0:	d431      	bmi.n	9001ae16 <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001adb2:	4293      	cmp	r3, r2
9001adb4:	dd0c      	ble.n	9001add0 <_ZNK8touchgfx9ConstFont4findEt+0x30>
9001adb6:	230e      	movs	r3, #14
9001adb8:	fb03 4302 	mla	r3, r3, r2, r4
9001adbc:	889b      	ldrh	r3, [r3, #4]
9001adbe:	1a5b      	subs	r3, r3, r1
9001adc0:	1ad3      	subs	r3, r2, r3
9001adc2:	429a      	cmp	r2, r3
9001adc4:	db27      	blt.n	9001ae16 <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001adc6:	2b00      	cmp	r3, #0
9001adc8:	bfbc      	itt	lt
9001adca:	2302      	movlt	r3, #2
9001adcc:	fb92 f3f3 	sdivlt	r3, r2, r3
9001add0:	2500      	movs	r5, #0
9001add2:	260e      	movs	r6, #14
9001add4:	4295      	cmp	r5, r2
9001add6:	dc1e      	bgt.n	9001ae16 <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001add8:	fb06 4003 	mla	r0, r6, r3, r4
9001addc:	8887      	ldrh	r7, [r0, #4]
9001adde:	42b9      	cmp	r1, r7
9001ade0:	d01a      	beq.n	9001ae18 <_ZNK8touchgfx9ConstFont4findEt+0x78>
9001ade2:	d20d      	bcs.n	9001ae00 <_ZNK8touchgfx9ConstFont4findEt+0x60>
9001ade4:	1e5a      	subs	r2, r3, #1
9001ade6:	4295      	cmp	r5, r2
9001ade8:	dc15      	bgt.n	9001ae16 <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001adea:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
9001adee:	1a5b      	subs	r3, r3, r1
9001adf0:	1ad3      	subs	r3, r2, r3
9001adf2:	429a      	cmp	r2, r3
9001adf4:	db0f      	blt.n	9001ae16 <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001adf6:	429d      	cmp	r5, r3
9001adf8:	ddec      	ble.n	9001add4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
9001adfa:	1953      	adds	r3, r2, r5
9001adfc:	105b      	asrs	r3, r3, #1
9001adfe:	e7e9      	b.n	9001add4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
9001ae00:	1c5d      	adds	r5, r3, #1
9001ae02:	42aa      	cmp	r2, r5
9001ae04:	db07      	blt.n	9001ae16 <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001ae06:	8a43      	ldrh	r3, [r0, #18]
9001ae08:	1acb      	subs	r3, r1, r3
9001ae0a:	442b      	add	r3, r5
9001ae0c:	429d      	cmp	r5, r3
9001ae0e:	dc02      	bgt.n	9001ae16 <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001ae10:	429a      	cmp	r2, r3
9001ae12:	dadf      	bge.n	9001add4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
9001ae14:	e7f1      	b.n	9001adfa <_ZNK8touchgfx9ConstFont4findEt+0x5a>
9001ae16:	2000      	movs	r0, #0
9001ae18:	bdf0      	pop	{r4, r5, r6, r7, pc}

9001ae1a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
9001ae1a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001ae1c:	4604      	mov	r4, r0
9001ae1e:	4617      	mov	r7, r2
9001ae20:	461e      	mov	r6, r3
9001ae22:	b911      	cbnz	r1, 9001ae2a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
9001ae24:	2500      	movs	r5, #0
9001ae26:	4628      	mov	r0, r5
9001ae28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001ae2a:	290a      	cmp	r1, #10
9001ae2c:	d0fa      	beq.n	9001ae24 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001ae2e:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
9001ae32:	4291      	cmp	r1, r2
9001ae34:	d0f6      	beq.n	9001ae24 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001ae36:	f242 020b 	movw	r2, #8203	@ 0x200b
9001ae3a:	4291      	cmp	r1, r2
9001ae3c:	d0f2      	beq.n	9001ae24 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001ae3e:	f7ff ffaf 	bl	9001ada0 <_ZNK8touchgfx9ConstFont4findEt>
9001ae42:	4605      	mov	r5, r0
9001ae44:	b950      	cbnz	r0, 9001ae5c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
9001ae46:	6823      	ldr	r3, [r4, #0]
9001ae48:	4620      	mov	r0, r4
9001ae4a:	691b      	ldr	r3, [r3, #16]
9001ae4c:	4798      	blx	r3
9001ae4e:	4601      	mov	r1, r0
9001ae50:	4620      	mov	r0, r4
9001ae52:	f7ff ffa5 	bl	9001ada0 <_ZNK8touchgfx9ConstFont4findEt>
9001ae56:	4605      	mov	r5, r0
9001ae58:	2800      	cmp	r0, #0
9001ae5a:	d0e3      	beq.n	9001ae24 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001ae5c:	6823      	ldr	r3, [r4, #0]
9001ae5e:	4629      	mov	r1, r5
9001ae60:	4620      	mov	r0, r4
9001ae62:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
9001ae64:	4798      	blx	r3
9001ae66:	6038      	str	r0, [r7, #0]
9001ae68:	6823      	ldr	r3, [r4, #0]
9001ae6a:	4620      	mov	r0, r4
9001ae6c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001ae6e:	4798      	blx	r3
9001ae70:	7030      	strb	r0, [r6, #0]
9001ae72:	e7d8      	b.n	9001ae26 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

9001ae74 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
9001ae74:	b538      	push	{r3, r4, r5, lr}
9001ae76:	4605      	mov	r5, r0
9001ae78:	f002 f89e 	bl	9001cfb8 <_ZNK8touchgfx6Bitmap9getFormatEv>
9001ae7c:	4604      	mov	r4, r0
9001ae7e:	4628      	mov	r0, r5
9001ae80:	f001 ffde 	bl	9001ce40 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001ae84:	2800      	cmp	r0, #0
9001ae86:	bf14      	ite	ne
9001ae88:	2002      	movne	r0, #2
9001ae8a:	2000      	moveq	r0, #0
9001ae8c:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
9001ae90:	b280      	uxth	r0, r0
9001ae92:	bd38      	pop	{r3, r4, r5, pc}

9001ae94 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
9001ae94:	b538      	push	{r3, r4, r5, lr}
9001ae96:	4605      	mov	r5, r0
9001ae98:	f002 f88e 	bl	9001cfb8 <_ZNK8touchgfx6Bitmap9getFormatEv>
9001ae9c:	4604      	mov	r4, r0
9001ae9e:	4628      	mov	r0, r5
9001aea0:	f001 ffce 	bl	9001ce40 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001aea4:	2800      	cmp	r0, #0
9001aea6:	bf14      	ite	ne
9001aea8:	2002      	movne	r0, #2
9001aeaa:	2000      	moveq	r0, #0
9001aeac:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
9001aeb0:	f040 0001 	orr.w	r0, r0, #1
9001aeb4:	b280      	uxth	r0, r0
9001aeb6:	bd38      	pop	{r3, r4, r5, pc}

9001aeb8 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
9001aeb8:	2000      	movs	r0, #0
9001aeba:	4770      	bx	lr

9001aebc <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
9001aebc:	2001      	movs	r0, #1
9001aebe:	4770      	bx	lr

9001aec0 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
9001aec0:	2002      	movs	r0, #2
9001aec2:	4770      	bx	lr

9001aec4 <_ZN8touchgfx6ScreenD1Ev>:
9001aec4:	4770      	bx	lr

9001aec6 <_ZN8touchgfx6Screen11setupScreenEv>:
9001aec6:	4770      	bx	lr

9001aec8 <_ZN8touchgfx12GestureEventD1Ev>:
9001aec8:	4770      	bx	lr

9001aeca <_ZN8touchgfx9DragEventD1Ev>:
9001aeca:	4770      	bx	lr

9001aecc <_ZN8touchgfx10ClickEventD1Ev>:
9001aecc:	4770      	bx	lr

9001aece <_ZN8touchgfx10ClickEventD0Ev>:
9001aece:	b510      	push	{r4, lr}
9001aed0:	4604      	mov	r4, r0
9001aed2:	210c      	movs	r1, #12
9001aed4:	f011 fef2 	bl	9002ccbc <_ZdlPvj>
9001aed8:	4620      	mov	r0, r4
9001aeda:	bd10      	pop	{r4, pc}

9001aedc <_ZN8touchgfx9DragEventD0Ev>:
9001aedc:	b510      	push	{r4, lr}
9001aede:	4604      	mov	r4, r0
9001aee0:	2110      	movs	r1, #16
9001aee2:	f011 feeb 	bl	9002ccbc <_ZdlPvj>
9001aee6:	4620      	mov	r0, r4
9001aee8:	bd10      	pop	{r4, pc}

9001aeea <_ZN8touchgfx12GestureEventD0Ev>:
9001aeea:	b510      	push	{r4, lr}
9001aeec:	4604      	mov	r4, r0
9001aeee:	210c      	movs	r1, #12
9001aef0:	f011 fee4 	bl	9002ccbc <_ZdlPvj>
9001aef4:	4620      	mov	r0, r4
9001aef6:	bd10      	pop	{r4, pc}

9001aef8 <_ZN8touchgfx6ScreenD0Ev>:
9001aef8:	b510      	push	{r4, lr}
9001aefa:	4604      	mov	r4, r0
9001aefc:	213c      	movs	r1, #60	@ 0x3c
9001aefe:	f011 fedd 	bl	9002ccbc <_ZdlPvj>
9001af02:	4620      	mov	r0, r4
9001af04:	bd10      	pop	{r4, pc}
	...

9001af08 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
9001af08:	b530      	push	{r4, r5, lr}
9001af0a:	460d      	mov	r5, r1
9001af0c:	6b01      	ldr	r1, [r0, #48]	@ 0x30
9001af0e:	b087      	sub	sp, #28
9001af10:	4604      	mov	r4, r0
9001af12:	b301      	cbz	r1, 9001af56 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
9001af14:	a801      	add	r0, sp, #4
9001af16:	f7ff fb5f 	bl	9001a5d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001af1a:	892a      	ldrh	r2, [r5, #8]
9001af1c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
9001af20:	7928      	ldrb	r0, [r5, #4]
9001af22:	1ad2      	subs	r2, r2, r3
9001af24:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
9001af26:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
9001af2a:	441a      	add	r2, r3
9001af2c:	896b      	ldrh	r3, [r5, #10]
9001af2e:	f8bd 5006 	ldrh.w	r5, [sp, #6]
9001af32:	f88d 0010 	strb.w	r0, [sp, #16]
9001af36:	1b5b      	subs	r3, r3, r5
9001af38:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
9001af3a:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9001af3c:	442b      	add	r3, r5
9001af3e:	4d07      	ldr	r5, [pc, #28]	@ (9001af5c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
9001af40:	f8ad 1012 	strh.w	r1, [sp, #18]
9001af44:	a903      	add	r1, sp, #12
9001af46:	9503      	str	r5, [sp, #12]
9001af48:	f8ad 2014 	strh.w	r2, [sp, #20]
9001af4c:	f8ad 3016 	strh.w	r3, [sp, #22]
9001af50:	6803      	ldr	r3, [r0, #0]
9001af52:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
9001af54:	4798      	blx	r3
9001af56:	b007      	add	sp, #28
9001af58:	bd30      	pop	{r4, r5, pc}
9001af5a:	bf00      	nop
9001af5c:	90031f0c 	.word	0x90031f0c

9001af60 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
9001af60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001af64:	6b03      	ldr	r3, [r0, #48]	@ 0x30
9001af66:	b08a      	sub	sp, #40	@ 0x28
9001af68:	4604      	mov	r4, r0
9001af6a:	460d      	mov	r5, r1
9001af6c:	b113      	cbz	r3, 9001af74 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
9001af6e:	790b      	ldrb	r3, [r1, #4]
9001af70:	2b00      	cmp	r3, #0
9001af72:	d044      	beq.n	9001affe <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001af74:	f104 0804 	add.w	r8, r4, #4
9001af78:	a803      	add	r0, sp, #12
9001af7a:	4641      	mov	r1, r8
9001af7c:	f7ff fb2c 	bl	9001a5d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001af80:	792b      	ldrb	r3, [r5, #4]
9001af82:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
9001af86:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
9001af8a:	b983      	cbnz	r3, 9001afae <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
9001af8c:	f104 0336 	add.w	r3, r4, #54	@ 0x36
9001af90:	892a      	ldrh	r2, [r5, #8]
9001af92:	88e9      	ldrh	r1, [r5, #6]
9001af94:	4640      	mov	r0, r8
9001af96:	1b92      	subs	r2, r2, r6
9001af98:	9301      	str	r3, [sp, #4]
9001af9a:	1bc9      	subs	r1, r1, r7
9001af9c:	f104 0334 	add.w	r3, r4, #52	@ 0x34
9001afa0:	b212      	sxth	r2, r2
9001afa2:	9300      	str	r3, [sp, #0]
9001afa4:	b209      	sxth	r1, r1
9001afa6:	f104 0330 	add.w	r3, r4, #48	@ 0x30
9001afaa:	f7f7 fb0d 	bl	900125c8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
9001afae:	6b21      	ldr	r1, [r4, #48]	@ 0x30
9001afb0:	b329      	cbz	r1, 9001affe <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001afb2:	a805      	add	r0, sp, #20
9001afb4:	f7ff fb10 	bl	9001a5d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001afb8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
9001afbc:	792b      	ldrb	r3, [r5, #4]
9001afbe:	a907      	add	r1, sp, #28
9001afc0:	1abf      	subs	r7, r7, r2
9001afc2:	88ea      	ldrh	r2, [r5, #6]
9001afc4:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9001afc6:	4417      	add	r7, r2
9001afc8:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
9001afca:	f88d 3020 	strb.w	r3, [sp, #32]
9001afce:	4417      	add	r7, r2
9001afd0:	f8bd 2016 	ldrh.w	r2, [sp, #22]
9001afd4:	1ab6      	subs	r6, r6, r2
9001afd6:	892a      	ldrh	r2, [r5, #8]
9001afd8:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
9001afdc:	4416      	add	r6, r2
9001afde:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
9001afe0:	4416      	add	r6, r2
9001afe2:	4a08      	ldr	r2, [pc, #32]	@ (9001b004 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
9001afe4:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
9001afe8:	2600      	movs	r6, #0
9001afea:	9207      	str	r2, [sp, #28]
9001afec:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
9001aff0:	6803      	ldr	r3, [r0, #0]
9001aff2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001aff4:	4798      	blx	r3
9001aff6:	792b      	ldrb	r3, [r5, #4]
9001aff8:	b10b      	cbz	r3, 9001affe <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001affa:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
9001affe:	b00a      	add	sp, #40	@ 0x28
9001b000:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001b004:	90031ee4 	.word	0x90031ee4

9001b008 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
9001b008:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001b00c:	460c      	mov	r4, r1
9001b00e:	6b01      	ldr	r1, [r0, #48]	@ 0x30
9001b010:	b088      	sub	sp, #32
9001b012:	4605      	mov	r5, r0
9001b014:	2900      	cmp	r1, #0
9001b016:	d06d      	beq.n	9001b0f4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
9001b018:	4668      	mov	r0, sp
9001b01a:	f7ff fadd 	bl	9001a5d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001b01e:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
9001b020:	88e3      	ldrh	r3, [r4, #6]
9001b022:	f9bd 8000 	ldrsh.w	r8, [sp]
9001b026:	440b      	add	r3, r1
9001b028:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
9001b02c:	b21b      	sxth	r3, r3
9001b02e:	4543      	cmp	r3, r8
9001b030:	db31      	blt.n	9001b096 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001b032:	f8bd c004 	ldrh.w	ip, [sp, #4]
9001b036:	44c4      	add	ip, r8
9001b038:	fa0f fc8c 	sxth.w	ip, ip
9001b03c:	4563      	cmp	r3, ip
9001b03e:	da2a      	bge.n	9001b096 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001b040:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
9001b042:	8926      	ldrh	r6, [r4, #8]
9001b044:	4416      	add	r6, r2
9001b046:	b236      	sxth	r6, r6
9001b048:	42be      	cmp	r6, r7
9001b04a:	db24      	blt.n	9001b096 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001b04c:	f8bd 0006 	ldrh.w	r0, [sp, #6]
9001b050:	4438      	add	r0, r7
9001b052:	b200      	sxth	r0, r0
9001b054:	4286      	cmp	r6, r0
9001b056:	da1e      	bge.n	9001b096 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001b058:	8963      	ldrh	r3, [r4, #10]
9001b05a:	4419      	add	r1, r3
9001b05c:	b209      	sxth	r1, r1
9001b05e:	4541      	cmp	r1, r8
9001b060:	db08      	blt.n	9001b074 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001b062:	4561      	cmp	r1, ip
9001b064:	da06      	bge.n	9001b074 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001b066:	89a3      	ldrh	r3, [r4, #12]
9001b068:	441a      	add	r2, r3
9001b06a:	b212      	sxth	r2, r2
9001b06c:	42ba      	cmp	r2, r7
9001b06e:	db01      	blt.n	9001b074 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001b070:	4282      	cmp	r2, r0
9001b072:	db10      	blt.n	9001b096 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001b074:	4b21      	ldr	r3, [pc, #132]	@ (9001b0fc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
9001b076:	a904      	add	r1, sp, #16
9001b078:	6b28      	ldr	r0, [r5, #48]	@ 0x30
9001b07a:	9304      	str	r3, [sp, #16]
9001b07c:	2302      	movs	r3, #2
9001b07e:	f88d 3014 	strb.w	r3, [sp, #20]
9001b082:	2300      	movs	r3, #0
9001b084:	f8ad 3016 	strh.w	r3, [sp, #22]
9001b088:	f8ad 3018 	strh.w	r3, [sp, #24]
9001b08c:	f8ad 301a 	strh.w	r3, [sp, #26]
9001b090:	6803      	ldr	r3, [r0, #0]
9001b092:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001b094:	4798      	blx	r3
9001b096:	1d29      	adds	r1, r5, #4
9001b098:	a802      	add	r0, sp, #8
9001b09a:	f7ff fa9d 	bl	9001a5d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001b09e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001b0a2:	88e0      	ldrh	r0, [r4, #6]
9001b0a4:	eba3 0808 	sub.w	r8, r3, r8
9001b0a8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001b0ac:	7921      	ldrb	r1, [r4, #4]
9001b0ae:	fa1f f888 	uxth.w	r8, r8
9001b0b2:	1bdf      	subs	r7, r3, r7
9001b0b4:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
9001b0b8:	b2bb      	uxth	r3, r7
9001b0ba:	4440      	add	r0, r8
9001b0bc:	8922      	ldrh	r2, [r4, #8]
9001b0be:	8967      	ldrh	r7, [r4, #10]
9001b0c0:	4460      	add	r0, ip
9001b0c2:	89a4      	ldrh	r4, [r4, #12]
9001b0c4:	441a      	add	r2, r3
9001b0c6:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
9001b0c8:	44b8      	add	r8, r7
9001b0ca:	4423      	add	r3, r4
9001b0cc:	f8ad 0016 	strh.w	r0, [sp, #22]
9001b0d0:	4432      	add	r2, r6
9001b0d2:	44e0      	add	r8, ip
9001b0d4:	4433      	add	r3, r6
9001b0d6:	4c0a      	ldr	r4, [pc, #40]	@ (9001b100 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
9001b0d8:	6b28      	ldr	r0, [r5, #48]	@ 0x30
9001b0da:	f88d 1014 	strb.w	r1, [sp, #20]
9001b0de:	a904      	add	r1, sp, #16
9001b0e0:	9404      	str	r4, [sp, #16]
9001b0e2:	f8ad 2018 	strh.w	r2, [sp, #24]
9001b0e6:	f8ad 801a 	strh.w	r8, [sp, #26]
9001b0ea:	f8ad 301c 	strh.w	r3, [sp, #28]
9001b0ee:	6803      	ldr	r3, [r0, #0]
9001b0f0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001b0f2:	4798      	blx	r3
9001b0f4:	b008      	add	sp, #32
9001b0f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001b0fa:	bf00      	nop
9001b0fc:	90031ee4 	.word	0x90031ee4
9001b100:	90031ef8 	.word	0x90031ef8

9001b104 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
9001b104:	b537      	push	{r0, r1, r2, r4, r5, lr}
9001b106:	4604      	mov	r4, r0
9001b108:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
9001b10c:	3201      	adds	r2, #1
9001b10e:	d112      	bne.n	9001b136 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
9001b110:	2500      	movs	r5, #0
9001b112:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
9001b116:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9001b11a:	6803      	ldr	r3, [r0, #0]
9001b11c:	9500      	str	r5, [sp, #0]
9001b11e:	466d      	mov	r5, sp
9001b120:	f8ad 1004 	strh.w	r1, [sp, #4]
9001b124:	f8ad 2006 	strh.w	r2, [sp, #6]
9001b128:	4629      	mov	r1, r5
9001b12a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001b12c:	4798      	blx	r3
9001b12e:	e895 0003 	ldmia.w	r5, {r0, r1}
9001b132:	e884 0003 	stmia.w	r4, {r0, r1}
9001b136:	4620      	mov	r0, r4
9001b138:	b003      	add	sp, #12
9001b13a:	bd30      	pop	{r4, r5, pc}

9001b13c <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
9001b13c:	b513      	push	{r0, r1, r4, lr}
9001b13e:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
9001b142:	4604      	mov	r4, r0
9001b144:	3301      	adds	r3, #1
9001b146:	d109      	bne.n	9001b15c <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
9001b148:	4601      	mov	r1, r0
9001b14a:	4668      	mov	r0, sp
9001b14c:	f7ff fa44 	bl	9001a5d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001b150:	f8bd 3000 	ldrh.w	r3, [sp]
9001b154:	8423      	strh	r3, [r4, #32]
9001b156:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001b15a:	8463      	strh	r3, [r4, #34]	@ 0x22
9001b15c:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
9001b160:	b002      	add	sp, #8
9001b162:	bd10      	pop	{r4, pc}

9001b164 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
9001b164:	b513      	push	{r0, r1, r4, lr}
9001b166:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
9001b16a:	4604      	mov	r4, r0
9001b16c:	3301      	adds	r3, #1
9001b16e:	d109      	bne.n	9001b184 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
9001b170:	4601      	mov	r1, r0
9001b172:	4668      	mov	r0, sp
9001b174:	f7ff fa30 	bl	9001a5d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001b178:	f8bd 3000 	ldrh.w	r3, [sp]
9001b17c:	8423      	strh	r3, [r4, #32]
9001b17e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001b182:	8463      	strh	r3, [r4, #34]	@ 0x22
9001b184:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
9001b188:	b002      	add	sp, #8
9001b18a:	bd10      	pop	{r4, pc}

9001b18c <_ZN8touchgfx6ScreenC1Ev>:
9001b18c:	b570      	push	{r4, r5, r6, lr}
9001b18e:	4b17      	ldr	r3, [pc, #92]	@ (9001b1ec <_ZN8touchgfx6ScreenC1Ev+0x60>)
9001b190:	4605      	mov	r5, r0
9001b192:	4a17      	ldr	r2, [pc, #92]	@ (9001b1f0 <_ZN8touchgfx6ScreenC1Ev+0x64>)
9001b194:	2101      	movs	r1, #1
9001b196:	f845 3b04 	str.w	r3, [r5], #4
9001b19a:	2300      	movs	r3, #0
9001b19c:	6042      	str	r2, [r0, #4]
9001b19e:	4604      	mov	r4, r0
9001b1a0:	8103      	strh	r3, [r0, #8]
9001b1a2:	8143      	strh	r3, [r0, #10]
9001b1a4:	8183      	strh	r3, [r0, #12]
9001b1a6:	81c3      	strh	r3, [r0, #14]
9001b1a8:	8203      	strh	r3, [r0, #16]
9001b1aa:	8243      	strh	r3, [r0, #18]
9001b1ac:	8283      	strh	r3, [r0, #20]
9001b1ae:	82c3      	strh	r3, [r0, #22]
9001b1b0:	6203      	str	r3, [r0, #32]
9001b1b2:	8483      	strh	r3, [r0, #36]	@ 0x24
9001b1b4:	84c3      	strh	r3, [r0, #38]	@ 0x26
9001b1b6:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
9001b1ba:	6343      	str	r3, [r0, #52]	@ 0x34
9001b1bc:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
9001b1c0:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
9001b1c4:	e9c0 3306 	strd	r3, r3, [r0, #24]
9001b1c8:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
9001b1cc:	4b09      	ldr	r3, [pc, #36]	@ (9001b1f4 <_ZN8touchgfx6ScreenC1Ev+0x68>)
9001b1ce:	4628      	mov	r0, r5
9001b1d0:	f9b3 6000 	ldrsh.w	r6, [r3]
9001b1d4:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9001b1d6:	4a08      	ldr	r2, [pc, #32]	@ (9001b1f8 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
9001b1d8:	f9b2 1000 	ldrsh.w	r1, [r2]
9001b1dc:	4798      	blx	r3
9001b1de:	6863      	ldr	r3, [r4, #4]
9001b1e0:	4628      	mov	r0, r5
9001b1e2:	4631      	mov	r1, r6
9001b1e4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001b1e6:	4798      	blx	r3
9001b1e8:	4620      	mov	r0, r4
9001b1ea:	bd70      	pop	{r4, r5, r6, pc}
9001b1ec:	90031f20 	.word	0x90031f20
9001b1f0:	900318f8 	.word	0x900318f8
9001b1f4:	24021c02 	.word	0x24021c02
9001b1f8:	24021c00 	.word	0x24021c00

9001b1fc <_ZN8touchgfx6Screen4drawEv>:
9001b1fc:	4b09      	ldr	r3, [pc, #36]	@ (9001b224 <_ZN8touchgfx6Screen4drawEv+0x28>)
9001b1fe:	b507      	push	{r0, r1, r2, lr}
9001b200:	f9b3 2000 	ldrsh.w	r2, [r3]
9001b204:	2100      	movs	r1, #0
9001b206:	4b08      	ldr	r3, [pc, #32]	@ (9001b228 <_ZN8touchgfx6Screen4drawEv+0x2c>)
9001b208:	9100      	str	r1, [sp, #0]
9001b20a:	4669      	mov	r1, sp
9001b20c:	f9b3 3000 	ldrsh.w	r3, [r3]
9001b210:	f8ad 2004 	strh.w	r2, [sp, #4]
9001b214:	f8ad 3006 	strh.w	r3, [sp, #6]
9001b218:	6803      	ldr	r3, [r0, #0]
9001b21a:	689b      	ldr	r3, [r3, #8]
9001b21c:	4798      	blx	r3
9001b21e:	b003      	add	sp, #12
9001b220:	f85d fb04 	ldr.w	pc, [sp], #4
9001b224:	24021c00 	.word	0x24021c00
9001b228:	24021c02 	.word	0x24021c02

9001b22c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
9001b22c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b230:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
9001b234:	b089      	sub	sp, #36	@ 0x24
9001b236:	4680      	mov	r8, r0
9001b238:	460c      	mov	r4, r1
9001b23a:	2b00      	cmp	r3, #0
9001b23c:	4615      	mov	r5, r2
9001b23e:	dd0e      	ble.n	9001b25e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001b240:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
9001b244:	2b00      	cmp	r3, #0
9001b246:	dd0a      	ble.n	9001b25e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001b248:	4628      	mov	r0, r5
9001b24a:	f7ff ff5b 	bl	9001b104 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001b24e:	4621      	mov	r1, r4
9001b250:	f7fd fe67 	bl	90018f22 <_ZNK8touchgfx4Rect9intersectERKS0_>
9001b254:	69eb      	ldr	r3, [r5, #28]
9001b256:	b928      	cbnz	r0, 9001b264 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
9001b258:	461d      	mov	r5, r3
9001b25a:	2b00      	cmp	r3, #0
9001b25c:	d1f4      	bne.n	9001b248 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
9001b25e:	b009      	add	sp, #36	@ 0x24
9001b260:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b264:	ae04      	add	r6, sp, #16
9001b266:	2b00      	cmp	r3, #0
9001b268:	f000 80b5 	beq.w	9001b3d6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
9001b26c:	682b      	ldr	r3, [r5, #0]
9001b26e:	4629      	mov	r1, r5
9001b270:	a802      	add	r0, sp, #8
9001b272:	68db      	ldr	r3, [r3, #12]
9001b274:	4798      	blx	r3
9001b276:	4628      	mov	r0, r5
9001b278:	f7ff ff60 	bl	9001b13c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
9001b27c:	f8bd 7008 	ldrh.w	r7, [sp, #8]
9001b280:	4407      	add	r7, r0
9001b282:	4628      	mov	r0, r5
9001b284:	f7ff ff6e 	bl	9001b164 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
9001b288:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001b28c:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
9001b290:	b23f      	sxth	r7, r7
9001b292:	4418      	add	r0, r3
9001b294:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
9001b298:	4621      	mov	r1, r4
9001b29a:	f8ad 2014 	strh.w	r2, [sp, #20]
9001b29e:	f8ad 0012 	strh.w	r0, [sp, #18]
9001b2a2:	4630      	mov	r0, r6
9001b2a4:	f8ad 3016 	strh.w	r3, [sp, #22]
9001b2a8:	f8ad 7010 	strh.w	r7, [sp, #16]
9001b2ac:	f7f7 fa6e 	bl	9001278c <_ZN8touchgfx4RectaNERKS0_>
9001b2b0:	4628      	mov	r0, r5
9001b2b2:	f7ff ff27 	bl	9001b104 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001b2b6:	ab06      	add	r3, sp, #24
9001b2b8:	4602      	mov	r2, r0
9001b2ba:	e896 0003 	ldmia.w	r6, {r0, r1}
9001b2be:	e883 0003 	stmia.w	r3, {r0, r1}
9001b2c2:	4611      	mov	r1, r2
9001b2c4:	4618      	mov	r0, r3
9001b2c6:	f7f7 fa61 	bl	9001278c <_ZN8touchgfx4RectaNERKS0_>
9001b2ca:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
9001b2ce:	f9b4 1000 	ldrsh.w	r1, [r4]
9001b2d2:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
9001b2d6:	4299      	cmp	r1, r3
9001b2d8:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
9001b2dc:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
9001b2e0:	d10b      	bne.n	9001b2fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001b2e2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001b2e6:	4552      	cmp	r2, sl
9001b2e8:	d107      	bne.n	9001b2fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001b2ea:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
9001b2ee:	455a      	cmp	r2, fp
9001b2f0:	d103      	bne.n	9001b2fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001b2f2:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
9001b2f6:	454a      	cmp	r2, r9
9001b2f8:	d06d      	beq.n	9001b3d6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
9001b2fa:	f1bb 0f00 	cmp.w	fp, #0
9001b2fe:	dd65      	ble.n	9001b3cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
9001b300:	f1b9 0f00 	cmp.w	r9, #0
9001b304:	dd62      	ble.n	9001b3cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
9001b306:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001b30a:	fa1f f08a 	uxth.w	r0, sl
9001b30e:	4552      	cmp	r2, sl
9001b310:	9000      	str	r0, [sp, #0]
9001b312:	da12      	bge.n	9001b33a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
9001b314:	9301      	str	r3, [sp, #4]
9001b316:	9b00      	ldr	r3, [sp, #0]
9001b318:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001b31c:	f8ad 2012 	strh.w	r2, [sp, #18]
9001b320:	1a9a      	subs	r2, r3, r2
9001b322:	f8ad 1010 	strh.w	r1, [sp, #16]
9001b326:	4631      	mov	r1, r6
9001b328:	f8ad 0014 	strh.w	r0, [sp, #20]
9001b32c:	4640      	mov	r0, r8
9001b32e:	f8ad 2016 	strh.w	r2, [sp, #22]
9001b332:	69ea      	ldr	r2, [r5, #28]
9001b334:	f7ff ff7a 	bl	9001b22c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001b338:	9b01      	ldr	r3, [sp, #4]
9001b33a:	f9b4 2000 	ldrsh.w	r2, [r4]
9001b33e:	b29f      	uxth	r7, r3
9001b340:	429a      	cmp	r2, r3
9001b342:	da0d      	bge.n	9001b360 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
9001b344:	f8ad 2010 	strh.w	r2, [sp, #16]
9001b348:	1aba      	subs	r2, r7, r2
9001b34a:	f8ad a012 	strh.w	sl, [sp, #18]
9001b34e:	4631      	mov	r1, r6
9001b350:	f8ad 2014 	strh.w	r2, [sp, #20]
9001b354:	4640      	mov	r0, r8
9001b356:	f8ad 9016 	strh.w	r9, [sp, #22]
9001b35a:	69ea      	ldr	r2, [r5, #28]
9001b35c:	f7ff ff66 	bl	9001b22c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001b360:	8822      	ldrh	r2, [r4, #0]
9001b362:	445f      	add	r7, fp
9001b364:	88a3      	ldrh	r3, [r4, #4]
9001b366:	b2bf      	uxth	r7, r7
9001b368:	4413      	add	r3, r2
9001b36a:	b23a      	sxth	r2, r7
9001b36c:	b29b      	uxth	r3, r3
9001b36e:	b219      	sxth	r1, r3
9001b370:	4291      	cmp	r1, r2
9001b372:	dd0d      	ble.n	9001b390 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
9001b374:	1bdb      	subs	r3, r3, r7
9001b376:	f8ad 2010 	strh.w	r2, [sp, #16]
9001b37a:	f8ad a012 	strh.w	sl, [sp, #18]
9001b37e:	4631      	mov	r1, r6
9001b380:	f8ad 3014 	strh.w	r3, [sp, #20]
9001b384:	4640      	mov	r0, r8
9001b386:	f8ad 9016 	strh.w	r9, [sp, #22]
9001b38a:	69ea      	ldr	r2, [r5, #28]
9001b38c:	f7ff ff4e 	bl	9001b22c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001b390:	88e2      	ldrh	r2, [r4, #6]
9001b392:	8863      	ldrh	r3, [r4, #2]
9001b394:	4413      	add	r3, r2
9001b396:	9a00      	ldr	r2, [sp, #0]
9001b398:	444a      	add	r2, r9
9001b39a:	b29b      	uxth	r3, r3
9001b39c:	fa1f f982 	uxth.w	r9, r2
9001b3a0:	b219      	sxth	r1, r3
9001b3a2:	fa0f f289 	sxth.w	r2, r9
9001b3a6:	428a      	cmp	r2, r1
9001b3a8:	da15      	bge.n	9001b3d6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
9001b3aa:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001b3ae:	eba3 0309 	sub.w	r3, r3, r9
9001b3b2:	f9b4 0000 	ldrsh.w	r0, [r4]
9001b3b6:	f8ad 1014 	strh.w	r1, [sp, #20]
9001b3ba:	4631      	mov	r1, r6
9001b3bc:	f8ad 0010 	strh.w	r0, [sp, #16]
9001b3c0:	f8ad 2012 	strh.w	r2, [sp, #18]
9001b3c4:	f8ad 3016 	strh.w	r3, [sp, #22]
9001b3c8:	69ea      	ldr	r2, [r5, #28]
9001b3ca:	e001      	b.n	9001b3d0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
9001b3cc:	69ea      	ldr	r2, [r5, #28]
9001b3ce:	4621      	mov	r1, r4
9001b3d0:	4640      	mov	r0, r8
9001b3d2:	f7ff ff2b 	bl	9001b22c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001b3d6:	4628      	mov	r0, r5
9001b3d8:	f7ff fe94 	bl	9001b104 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001b3dc:	6861      	ldr	r1, [r4, #4]
9001b3de:	4602      	mov	r2, r0
9001b3e0:	4633      	mov	r3, r6
9001b3e2:	6820      	ldr	r0, [r4, #0]
9001b3e4:	c303      	stmia	r3!, {r0, r1}
9001b3e6:	4611      	mov	r1, r2
9001b3e8:	4630      	mov	r0, r6
9001b3ea:	f7f7 f9cf 	bl	9001278c <_ZN8touchgfx4RectaNERKS0_>
9001b3ee:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
9001b3f2:	2b00      	cmp	r3, #0
9001b3f4:	f77f af33 	ble.w	9001b25e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001b3f8:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
9001b3fc:	2b00      	cmp	r3, #0
9001b3fe:	f77f af2e 	ble.w	9001b25e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001b402:	4628      	mov	r0, r5
9001b404:	f7ff fe9a 	bl	9001b13c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
9001b408:	f8bd 3010 	ldrh.w	r3, [sp, #16]
9001b40c:	1a18      	subs	r0, r3, r0
9001b40e:	f8ad 0010 	strh.w	r0, [sp, #16]
9001b412:	4628      	mov	r0, r5
9001b414:	f7ff fea6 	bl	9001b164 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
9001b418:	f8bd 3012 	ldrh.w	r3, [sp, #18]
9001b41c:	4631      	mov	r1, r6
9001b41e:	1a18      	subs	r0, r3, r0
9001b420:	f8ad 0012 	strh.w	r0, [sp, #18]
9001b424:	4628      	mov	r0, r5
9001b426:	682b      	ldr	r3, [r5, #0]
9001b428:	689b      	ldr	r3, [r3, #8]
9001b42a:	4798      	blx	r3
9001b42c:	e717      	b.n	9001b25e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

9001b42e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
9001b42e:	b570      	push	{r4, r5, r6, lr}
9001b430:	1d06      	adds	r6, r0, #4
9001b432:	b086      	sub	sp, #24
9001b434:	460c      	mov	r4, r1
9001b436:	2300      	movs	r3, #0
9001b438:	4631      	mov	r1, r6
9001b43a:	4605      	mov	r5, r0
9001b43c:	a802      	add	r0, sp, #8
9001b43e:	9301      	str	r3, [sp, #4]
9001b440:	f7ff f8ca 	bl	9001a5d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001b444:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001b448:	8822      	ldrh	r2, [r4, #0]
9001b44a:	f8bd 100a 	ldrh.w	r1, [sp, #10]
9001b44e:	1ad2      	subs	r2, r2, r3
9001b450:	8863      	ldrh	r3, [r4, #2]
9001b452:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001b456:	1a5b      	subs	r3, r3, r1
9001b458:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
9001b45c:	f8ad 2010 	strh.w	r2, [sp, #16]
9001b460:	aa01      	add	r2, sp, #4
9001b462:	f8ad 0014 	strh.w	r0, [sp, #20]
9001b466:	4630      	mov	r0, r6
9001b468:	f8ad 1016 	strh.w	r1, [sp, #22]
9001b46c:	a904      	add	r1, sp, #16
9001b46e:	f8ad 3012 	strh.w	r3, [sp, #18]
9001b472:	f7f7 fa63 	bl	9001293c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
9001b476:	9a01      	ldr	r2, [sp, #4]
9001b478:	b11a      	cbz	r2, 9001b482 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
9001b47a:	4621      	mov	r1, r4
9001b47c:	4628      	mov	r0, r5
9001b47e:	f7ff fed5 	bl	9001b22c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001b482:	b006      	add	sp, #24
9001b484:	bd70      	pop	{r4, r5, r6, pc}

9001b486 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
9001b486:	4602      	mov	r2, r0
9001b488:	b530      	push	{r4, r5, lr}
9001b48a:	4604      	mov	r4, r0
9001b48c:	b085      	sub	sp, #20
9001b48e:	f852 0f08 	ldr.w	r0, [r2, #8]!
9001b492:	460d      	mov	r5, r1
9001b494:	466b      	mov	r3, sp
9001b496:	6851      	ldr	r1, [r2, #4]
9001b498:	c303      	stmia	r3!, {r0, r1}
9001b49a:	4629      	mov	r1, r5
9001b49c:	4668      	mov	r0, sp
9001b49e:	f7f7 f975 	bl	9001278c <_ZN8touchgfx4RectaNERKS0_>
9001b4a2:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
9001b4a6:	b12b      	cbz	r3, 9001b4b4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
9001b4a8:	4669      	mov	r1, sp
9001b4aa:	4620      	mov	r0, r4
9001b4ac:	f7ff ffbf 	bl	9001b42e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
9001b4b0:	b005      	add	sp, #20
9001b4b2:	bd30      	pop	{r4, r5, pc}
9001b4b4:	3404      	adds	r4, #4
9001b4b6:	a802      	add	r0, sp, #8
9001b4b8:	4621      	mov	r1, r4
9001b4ba:	f7ff f88d 	bl	9001a5d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001b4be:	f8bd 3000 	ldrh.w	r3, [sp]
9001b4c2:	f8bd 2008 	ldrh.w	r2, [sp, #8]
9001b4c6:	4669      	mov	r1, sp
9001b4c8:	4620      	mov	r0, r4
9001b4ca:	1a9b      	subs	r3, r3, r2
9001b4cc:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001b4d0:	f8ad 3000 	strh.w	r3, [sp]
9001b4d4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001b4d8:	1a9b      	subs	r3, r3, r2
9001b4da:	f8ad 3002 	strh.w	r3, [sp, #2]
9001b4de:	f7f7 f9f4 	bl	900128ca <_ZNK8touchgfx9Container4drawERKNS_4RectE>
9001b4e2:	e7e5      	b.n	9001b4b0 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

9001b4e4 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
9001b4e4:	460b      	mov	r3, r1
9001b4e6:	680a      	ldr	r2, [r1, #0]
9001b4e8:	1d01      	adds	r1, r0, #4
9001b4ea:	6992      	ldr	r2, [r2, #24]
9001b4ec:	4618      	mov	r0, r3
9001b4ee:	4710      	bx	r2

9001b4f0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
9001b4f0:	4298      	cmp	r0, r3
9001b4f2:	d200      	bcs.n	9001b4f6 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
9001b4f4:	b913      	cbnz	r3, 9001b4fc <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
9001b4f6:	440a      	add	r2, r1
9001b4f8:	b210      	sxth	r0, r2
9001b4fa:	4770      	bx	lr
9001b4fc:	ee07 0a90 	vmov	s15, r0
9001b500:	eef8 6a67 	vcvt.f32.u32	s13, s15
9001b504:	ee07 3a90 	vmov	s15, r3
9001b508:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001b50c:	ee86 7aa7 	vdiv.f32	s14, s13, s15
9001b510:	ee07 2a90 	vmov	s15, r2
9001b514:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001b518:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
9001b51c:	ee07 1a90 	vmov	s15, r1
9001b520:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001b524:	ee37 7a66 	vsub.f32	s14, s14, s13
9001b528:	ee67 5a07 	vmul.f32	s11, s14, s14
9001b52c:	eee5 6a87 	vfma.f32	s13, s11, s14
9001b530:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
9001b534:	eee6 7a26 	vfma.f32	s15, s12, s13
9001b538:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001b53c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001b540:	bfcc      	ite	gt
9001b542:	ee77 7a87 	vaddgt.f32	s15, s15, s14
9001b546:	ee77 7ac7 	vsuble.f32	s15, s15, s14
9001b54a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
9001b54e:	ee17 3a90 	vmov	r3, s15
9001b552:	b218      	sxth	r0, r3
9001b554:	4770      	bx	lr

9001b556 <_ZN8touchgfx12TextProviderC1Ev>:
9001b556:	b538      	push	{r3, r4, r5, lr}
9001b558:	2500      	movs	r5, #0
9001b55a:	2302      	movs	r3, #2
9001b55c:	4604      	mov	r4, r0
9001b55e:	220e      	movs	r2, #14
9001b560:	7403      	strb	r3, [r0, #16]
9001b562:	4629      	mov	r1, r5
9001b564:	6145      	str	r5, [r0, #20]
9001b566:	7605      	strb	r5, [r0, #24]
9001b568:	83c5      	strh	r5, [r0, #30]
9001b56a:	8405      	strh	r5, [r0, #32]
9001b56c:	86c5      	strh	r5, [r0, #54]	@ 0x36
9001b56e:	8705      	strh	r5, [r0, #56]	@ 0x38
9001b570:	87c5      	strh	r5, [r0, #62]	@ 0x3e
9001b572:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
9001b576:	e9c0 5500 	strd	r5, r5, [r0]
9001b57a:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
9001b57e:	304c      	adds	r0, #76	@ 0x4c
9001b580:	f012 f9c8 	bl	9002d914 <memset>
9001b584:	2301      	movs	r3, #1
9001b586:	4620      	mov	r0, r4
9001b588:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
9001b58c:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
9001b590:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
9001b594:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
9001b598:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
9001b59c:	f7eb fa0e 	bl	900069bc <_ZN8touchgfx12TextProvider18initializeInternalEv>
9001b5a0:	4620      	mov	r0, r4
9001b5a2:	bd38      	pop	{r3, r4, r5, pc}

9001b5a4 <_ZN8touchgfx12TextProvider11endOfStringEv>:
9001b5a4:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
9001b5a6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001b5aa:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
9001b5ac:	fab0 f080 	clz	r0, r0
9001b5b0:	0940      	lsrs	r0, r0, #5
9001b5b2:	4770      	bx	lr

9001b5b4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
9001b5b4:	b530      	push	{r4, r5, lr}
9001b5b6:	2500      	movs	r5, #0
9001b5b8:	2401      	movs	r4, #1
9001b5ba:	6843      	ldr	r3, [r0, #4]
9001b5bc:	b913      	cbnz	r3, 9001b5c4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
9001b5be:	6803      	ldr	r3, [r0, #0]
9001b5c0:	b313      	cbz	r3, 9001b608 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
9001b5c2:	6043      	str	r3, [r0, #4]
9001b5c4:	7e03      	ldrb	r3, [r0, #24]
9001b5c6:	b143      	cbz	r3, 9001b5da <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
9001b5c8:	6943      	ldr	r3, [r0, #20]
9001b5ca:	b12b      	cbz	r3, 9001b5d8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
9001b5cc:	881a      	ldrh	r2, [r3, #0]
9001b5ce:	b11a      	cbz	r2, 9001b5d8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
9001b5d0:	1c9a      	adds	r2, r3, #2
9001b5d2:	6142      	str	r2, [r0, #20]
9001b5d4:	8818      	ldrh	r0, [r3, #0]
9001b5d6:	bd30      	pop	{r4, r5, pc}
9001b5d8:	7605      	strb	r5, [r0, #24]
9001b5da:	6843      	ldr	r3, [r0, #4]
9001b5dc:	8819      	ldrh	r1, [r3, #0]
9001b5de:	b199      	cbz	r1, 9001b608 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
9001b5e0:	1c9a      	adds	r2, r3, #2
9001b5e2:	2902      	cmp	r1, #2
9001b5e4:	6042      	str	r2, [r0, #4]
9001b5e6:	d1f5      	bne.n	9001b5d4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
9001b5e8:	7c03      	ldrb	r3, [r0, #16]
9001b5ea:	2b01      	cmp	r3, #1
9001b5ec:	d8e5      	bhi.n	9001b5ba <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001b5ee:	1c5a      	adds	r2, r3, #1
9001b5f0:	3302      	adds	r3, #2
9001b5f2:	7402      	strb	r2, [r0, #16]
9001b5f4:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
9001b5f8:	6143      	str	r3, [r0, #20]
9001b5fa:	2b00      	cmp	r3, #0
9001b5fc:	d0dd      	beq.n	9001b5ba <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001b5fe:	881b      	ldrh	r3, [r3, #0]
9001b600:	2b00      	cmp	r3, #0
9001b602:	d0da      	beq.n	9001b5ba <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001b604:	7604      	strb	r4, [r0, #24]
9001b606:	e7d8      	b.n	9001b5ba <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001b608:	2000      	movs	r0, #0
9001b60a:	e7e4      	b.n	9001b5d6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

9001b60c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
9001b60c:	6001      	str	r1, [r0, #0]
9001b60e:	2100      	movs	r1, #0
9001b610:	b430      	push	{r4, r5}
9001b612:	6041      	str	r1, [r0, #4]
9001b614:	6815      	ldr	r5, [r2, #0]
9001b616:	6085      	str	r5, [r0, #8]
9001b618:	6852      	ldr	r2, [r2, #4]
9001b61a:	6443      	str	r3, [r0, #68]	@ 0x44
9001b61c:	9b02      	ldr	r3, [sp, #8]
9001b61e:	60c2      	str	r2, [r0, #12]
9001b620:	7401      	strb	r1, [r0, #16]
9001b622:	6141      	str	r1, [r0, #20]
9001b624:	7601      	strb	r1, [r0, #24]
9001b626:	8701      	strh	r1, [r0, #56]	@ 0x38
9001b628:	8401      	strh	r1, [r0, #32]
9001b62a:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
9001b62e:	6483      	str	r3, [r0, #72]	@ 0x48
9001b630:	bc30      	pop	{r4, r5}
9001b632:	f7eb b9c3 	b.w	900069bc <_ZN8touchgfx12TextProvider18initializeInternalEv>

9001b636 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
9001b636:	b408      	push	{r3}
9001b638:	b510      	push	{r4, lr}
9001b63a:	b085      	sub	sp, #20
9001b63c:	ac07      	add	r4, sp, #28
9001b63e:	f854 3b04 	ldr.w	r3, [r4], #4
9001b642:	9300      	str	r3, [sp, #0]
9001b644:	4613      	mov	r3, r2
9001b646:	4622      	mov	r2, r4
9001b648:	9403      	str	r4, [sp, #12]
9001b64a:	f7ff ffdf 	bl	9001b60c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001b64e:	b005      	add	sp, #20
9001b650:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001b654:	b001      	add	sp, #4
9001b656:	4770      	bx	lr

9001b658 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
9001b658:	b5f0      	push	{r4, r5, r6, r7, lr}
9001b65a:	4605      	mov	r5, r0
9001b65c:	4608      	mov	r0, r1
9001b65e:	b1f1      	cbz	r1, 9001b69e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
9001b660:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
9001b664:	460b      	mov	r3, r1
9001b666:	f101 0708 	add.w	r7, r1, #8
9001b66a:	4622      	mov	r2, r4
9001b66c:	6818      	ldr	r0, [r3, #0]
9001b66e:	3308      	adds	r3, #8
9001b670:	f853 1c04 	ldr.w	r1, [r3, #-4]
9001b674:	4626      	mov	r6, r4
9001b676:	42bb      	cmp	r3, r7
9001b678:	c603      	stmia	r6!, {r0, r1}
9001b67a:	4634      	mov	r4, r6
9001b67c:	d1f6      	bne.n	9001b66c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
9001b67e:	6818      	ldr	r0, [r3, #0]
9001b680:	6030      	str	r0, [r6, #0]
9001b682:	4610      	mov	r0, r2
9001b684:	889b      	ldrh	r3, [r3, #4]
9001b686:	80b3      	strh	r3, [r6, #4]
9001b688:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
9001b68c:	015b      	lsls	r3, r3, #5
9001b68e:	f403 7180 	and.w	r1, r3, #256	@ 0x100
9001b692:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
9001b696:	430b      	orrs	r3, r1
9001b698:	425b      	negs	r3, r3
9001b69a:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
9001b69e:	bdf0      	pop	{r4, r5, r6, r7, pc}

9001b6a0 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
9001b6a0:	b538      	push	{r3, r4, r5, lr}
9001b6a2:	460c      	mov	r4, r1
9001b6a4:	6811      	ldr	r1, [r2, #0]
9001b6a6:	4610      	mov	r0, r2
9001b6a8:	68cd      	ldr	r5, [r1, #12]
9001b6aa:	4619      	mov	r1, r3
9001b6ac:	47a8      	blx	r5
9001b6ae:	2800      	cmp	r0, #0
9001b6b0:	bf08      	it	eq
9001b6b2:	4620      	moveq	r0, r4
9001b6b4:	bd38      	pop	{r3, r4, r5, pc}
	...

9001b6b8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
9001b6b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001b6bc:	468c      	mov	ip, r1
9001b6be:	4605      	mov	r5, r0
9001b6c0:	4614      	mov	r4, r2
9001b6c2:	b942      	cbnz	r2, 9001b6d6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
9001b6c4:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
9001b6c8:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
9001b6cc:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
9001b6d0:	4620      	mov	r0, r4
9001b6d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001b6d6:	7b50      	ldrb	r0, [r2, #13]
9001b6d8:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
9001b6dc:	8893      	ldrh	r3, [r2, #4]
9001b6de:	0106      	lsls	r6, r0, #4
9001b6e0:	f406 7280 	and.w	r2, r6, #256	@ 0x100
9001b6e4:	79e6      	ldrb	r6, [r4, #7]
9001b6e6:	4316      	orrs	r6, r2
9001b6e8:	185a      	adds	r2, r3, r1
9001b6ea:	b291      	uxth	r1, r2
9001b6ec:	b2b7      	uxth	r7, r6
9001b6ee:	291d      	cmp	r1, #29
9001b6f0:	d87f      	bhi.n	9001b7f2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
9001b6f2:	2201      	movs	r2, #1
9001b6f4:	10f6      	asrs	r6, r6, #3
9001b6f6:	408a      	lsls	r2, r1
9001b6f8:	498b      	ldr	r1, [pc, #556]	@ (9001b928 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x270>)
9001b6fa:	420a      	tst	r2, r1
9001b6fc:	d12e      	bne.n	9001b75c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
9001b6fe:	f412 7f60 	tst.w	r2, #896	@ 0x380
9001b702:	d076      	beq.n	9001b7f2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
9001b704:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
9001b708:	4623      	mov	r3, r4
9001b70a:	f104 0e08 	add.w	lr, r4, #8
9001b70e:	4614      	mov	r4, r2
9001b710:	6818      	ldr	r0, [r3, #0]
9001b712:	3308      	adds	r3, #8
9001b714:	f853 1c04 	ldr.w	r1, [r3, #-4]
9001b718:	4694      	mov	ip, r2
9001b71a:	4573      	cmp	r3, lr
9001b71c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
9001b720:	4662      	mov	r2, ip
9001b722:	d1f5      	bne.n	9001b710 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
9001b724:	6818      	ldr	r0, [r3, #0]
9001b726:	f8cc 0000 	str.w	r0, [ip]
9001b72a:	889b      	ldrh	r3, [r3, #4]
9001b72c:	f8ac 3004 	strh.w	r3, [ip, #4]
9001b730:	b2b3      	uxth	r3, r6
9001b732:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
9001b736:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
9001b73a:	1aca      	subs	r2, r1, r3
9001b73c:	1bcf      	subs	r7, r1, r7
9001b73e:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
9001b742:	b292      	uxth	r2, r2
9001b744:	1afb      	subs	r3, r7, r3
9001b746:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
9001b74a:	10d2      	asrs	r2, r2, #3
9001b74c:	f002 0260 	and.w	r2, r2, #96	@ 0x60
9001b750:	4302      	orrs	r2, r0
9001b752:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
9001b756:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
9001b75a:	e7b9      	b.n	9001b6d0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
9001b75c:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
9001b760:	4623      	mov	r3, r4
9001b762:	f104 0808 	add.w	r8, r4, #8
9001b766:	4614      	mov	r4, r2
9001b768:	6818      	ldr	r0, [r3, #0]
9001b76a:	3308      	adds	r3, #8
9001b76c:	f853 1c04 	ldr.w	r1, [r3, #-4]
9001b770:	4696      	mov	lr, r2
9001b772:	4543      	cmp	r3, r8
9001b774:	e8ae 0003 	stmia.w	lr!, {r0, r1}
9001b778:	4672      	mov	r2, lr
9001b77a:	d1f5      	bne.n	9001b768 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
9001b77c:	6818      	ldr	r0, [r3, #0]
9001b77e:	f8ce 0000 	str.w	r0, [lr]
9001b782:	889b      	ldrh	r3, [r3, #4]
9001b784:	f8ae 3004 	strh.w	r3, [lr, #4]
9001b788:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
9001b78a:	eb05 0343 	add.w	r3, r5, r3, lsl #1
9001b78e:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
9001b790:	f640 6333 	movw	r3, #3635	@ 0xe33
9001b794:	4299      	cmp	r1, r3
9001b796:	d111      	bne.n	9001b7bc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x104>
9001b798:	f8dc 3000 	ldr.w	r3, [ip]
9001b79c:	4660      	mov	r0, ip
9001b79e:	68db      	ldr	r3, [r3, #12]
9001b7a0:	4798      	blx	r3
9001b7a2:	7b41      	ldrb	r1, [r0, #13]
9001b7a4:	00cb      	lsls	r3, r1, #3
9001b7a6:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001b7aa:	7a03      	ldrb	r3, [r0, #8]
9001b7ac:	4313      	orrs	r3, r2
9001b7ae:	064a      	lsls	r2, r1, #25
9001b7b0:	bf44      	itt	mi
9001b7b2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001b7b6:	b21b      	sxthmi	r3, r3
9001b7b8:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
9001b7bc:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
9001b7c0:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
9001b7c4:	443b      	add	r3, r7
9001b7c6:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
9001b7ca:	4433      	add	r3, r6
9001b7cc:	b29b      	uxth	r3, r3
9001b7ce:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
9001b7d2:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
9001b7d6:	10db      	asrs	r3, r3, #3
9001b7d8:	f003 0360 	and.w	r3, r3, #96	@ 0x60
9001b7dc:	4313      	orrs	r3, r2
9001b7de:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
9001b7e2:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
9001b7e6:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
9001b7ea:	1a9b      	subs	r3, r3, r2
9001b7ec:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
9001b7f0:	e76e      	b.n	9001b6d0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
9001b7f2:	f023 0204 	bic.w	r2, r3, #4
9001b7f6:	f640 611b 	movw	r1, #3611	@ 0xe1b
9001b7fa:	428a      	cmp	r2, r1
9001b7fc:	d003      	beq.n	9001b806 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14e>
9001b7fe:	f640 621d 	movw	r2, #3613	@ 0xe1d
9001b802:	4293      	cmp	r3, r2
9001b804:	d138      	bne.n	9001b878 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1c0>
9001b806:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
9001b80a:	4622      	mov	r2, r4
9001b80c:	f104 0808 	add.w	r8, r4, #8
9001b810:	4634      	mov	r4, r6
9001b812:	6810      	ldr	r0, [r2, #0]
9001b814:	3208      	adds	r2, #8
9001b816:	f852 1c04 	ldr.w	r1, [r2, #-4]
9001b81a:	46b6      	mov	lr, r6
9001b81c:	4542      	cmp	r2, r8
9001b81e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
9001b822:	4676      	mov	r6, lr
9001b824:	d1f5      	bne.n	9001b812 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x15a>
9001b826:	6810      	ldr	r0, [r2, #0]
9001b828:	3b01      	subs	r3, #1
9001b82a:	4621      	mov	r1, r4
9001b82c:	f8ce 0000 	str.w	r0, [lr]
9001b830:	b29b      	uxth	r3, r3
9001b832:	8892      	ldrh	r2, [r2, #4]
9001b834:	4628      	mov	r0, r5
9001b836:	f8ae 2004 	strh.w	r2, [lr, #4]
9001b83a:	4662      	mov	r2, ip
9001b83c:	f7ff ff30 	bl	9001b6a0 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
9001b840:	7b41      	ldrb	r1, [r0, #13]
9001b842:	00cb      	lsls	r3, r1, #3
9001b844:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001b848:	7a03      	ldrb	r3, [r0, #8]
9001b84a:	0648      	lsls	r0, r1, #25
9001b84c:	ea43 0302 	orr.w	r3, r3, r2
9001b850:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
9001b854:	bf44      	itt	mi
9001b856:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001b85a:	b21b      	sxthmi	r3, r3
9001b85c:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
9001b860:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
9001b864:	005b      	lsls	r3, r3, #1
9001b866:	f403 7380 	and.w	r3, r3, #256	@ 0x100
9001b86a:	4313      	orrs	r3, r2
9001b86c:	115a      	asrs	r2, r3, #5
9001b86e:	eb02 0393 	add.w	r3, r2, r3, lsr #2
9001b872:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
9001b876:	e047      	b.n	9001b908 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x250>
9001b878:	00c2      	lsls	r2, r0, #3
9001b87a:	f402 7180 	and.w	r1, r2, #256	@ 0x100
9001b87e:	7a22      	ldrb	r2, [r4, #8]
9001b880:	430a      	orrs	r2, r1
9001b882:	0641      	lsls	r1, r0, #25
9001b884:	f640 6109 	movw	r1, #3593	@ 0xe09
9001b888:	bf44      	itt	mi
9001b88a:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
9001b88e:	b212      	sxthmi	r2, r2
9001b890:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
9001b894:	f023 0210 	bic.w	r2, r3, #16
9001b898:	428a      	cmp	r2, r1
9001b89a:	d003      	beq.n	9001b8a4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ec>
9001b89c:	f640 6213 	movw	r2, #3603	@ 0xe13
9001b8a0:	4293      	cmp	r3, r2
9001b8a2:	d13e      	bne.n	9001b922 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x26a>
9001b8a4:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
9001b8a8:	f104 0808 	add.w	r8, r4, #8
9001b8ac:	4696      	mov	lr, r2
9001b8ae:	6820      	ldr	r0, [r4, #0]
9001b8b0:	3408      	adds	r4, #8
9001b8b2:	f854 1c04 	ldr.w	r1, [r4, #-4]
9001b8b6:	4616      	mov	r6, r2
9001b8b8:	4544      	cmp	r4, r8
9001b8ba:	c603      	stmia	r6!, {r0, r1}
9001b8bc:	4632      	mov	r2, r6
9001b8be:	d1f6      	bne.n	9001b8ae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f6>
9001b8c0:	6820      	ldr	r0, [r4, #0]
9001b8c2:	6030      	str	r0, [r6, #0]
9001b8c4:	4628      	mov	r0, r5
9001b8c6:	88a1      	ldrh	r1, [r4, #4]
9001b8c8:	4674      	mov	r4, lr
9001b8ca:	80b1      	strh	r1, [r6, #4]
9001b8cc:	4671      	mov	r1, lr
9001b8ce:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
9001b8d2:	0076      	lsls	r6, r6, #1
9001b8d4:	f406 7280 	and.w	r2, r6, #256	@ 0x100
9001b8d8:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
9001b8dc:	4316      	orrs	r6, r2
9001b8de:	f640 6213 	movw	r2, #3603	@ 0xe13
9001b8e2:	4293      	cmp	r3, r2
9001b8e4:	4662      	mov	r2, ip
9001b8e6:	bf16      	itet	ne
9001b8e8:	f103 33ff 	addne.w	r3, r3, #4294967295
9001b8ec:	f640 630c 	movweq	r3, #3596	@ 0xe0c
9001b8f0:	b29b      	uxthne	r3, r3
9001b8f2:	f7ff fed5 	bl	9001b6a0 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
9001b8f6:	7b43      	ldrb	r3, [r0, #13]
9001b8f8:	7a82      	ldrb	r2, [r0, #10]
9001b8fa:	005b      	lsls	r3, r3, #1
9001b8fc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
9001b900:	4313      	orrs	r3, r2
9001b902:	1af6      	subs	r6, r6, r3
9001b904:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
9001b908:	7b61      	ldrb	r1, [r4, #13]
9001b90a:	00cb      	lsls	r3, r1, #3
9001b90c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001b910:	7a23      	ldrb	r3, [r4, #8]
9001b912:	4313      	orrs	r3, r2
9001b914:	064a      	lsls	r2, r1, #25
9001b916:	bf44      	itt	mi
9001b918:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001b91c:	b21b      	sxthmi	r3, r3
9001b91e:	1bdb      	subs	r3, r3, r7
9001b920:	e719      	b.n	9001b756 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
9001b922:	2300      	movs	r3, #0
9001b924:	e7a5      	b.n	9001b872 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
9001b926:	bf00      	nop
9001b928:	3fc00079 	.word	0x3fc00079

9001b92c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
9001b92c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001b930:	4604      	mov	r4, r0
9001b932:	b942      	cbnz	r2, 9001b946 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
9001b934:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001b938:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
9001b93c:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
9001b940:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
9001b944:	e047      	b.n	9001b9d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
9001b946:	7b51      	ldrb	r1, [r2, #13]
9001b948:	8893      	ldrh	r3, [r2, #4]
9001b94a:	010d      	lsls	r5, r1, #4
9001b94c:	f405 7080 	and.w	r0, r5, #256	@ 0x100
9001b950:	79d5      	ldrb	r5, [r2, #7]
9001b952:	4305      	orrs	r5, r0
9001b954:	2d04      	cmp	r5, #4
9001b956:	bfcc      	ite	gt
9001b958:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
9001b95c:	f04f 0e01 	movle.w	lr, #1
9001b960:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
9001b964:	f200 80ab 	bhi.w	9001babe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
9001b968:	f240 60e7 	movw	r0, #1767	@ 0x6e7
9001b96c:	4283      	cmp	r3, r0
9001b96e:	d216      	bcs.n	9001b99e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001b970:	f240 605b 	movw	r0, #1627	@ 0x65b
9001b974:	4283      	cmp	r3, r0
9001b976:	d859      	bhi.n	9001ba2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
9001b978:	f240 6057 	movw	r0, #1623	@ 0x657
9001b97c:	4283      	cmp	r3, r0
9001b97e:	d20e      	bcs.n	9001b99e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001b980:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
9001b984:	d24a      	bcs.n	9001ba1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
9001b986:	f240 604e 	movw	r0, #1614	@ 0x64e
9001b98a:	4283      	cmp	r3, r0
9001b98c:	d207      	bcs.n	9001b99e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001b98e:	f240 601a 	movw	r0, #1562	@ 0x61a
9001b992:	4283      	cmp	r3, r0
9001b994:	d02a      	beq.n	9001b9ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001b996:	d821      	bhi.n	9001b9dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
9001b998:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
9001b99c:	d35b      	bcc.n	9001ba56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001b99e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
9001b9a2:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
9001b9a6:	f040 80d0 	bne.w	9001bb4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
9001b9aa:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
9001b9ae:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
9001b9b2:	f040 80ca 	bne.w	9001bb4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
9001b9b6:	00cb      	lsls	r3, r1, #3
9001b9b8:	0649      	lsls	r1, r1, #25
9001b9ba:	f403 7080 	and.w	r0, r3, #256	@ 0x100
9001b9be:	7a13      	ldrb	r3, [r2, #8]
9001b9c0:	ea43 0300 	orr.w	r3, r3, r0
9001b9c4:	bf44      	itt	mi
9001b9c6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001b9ca:	b21b      	sxthmi	r3, r3
9001b9cc:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
9001b9d0:	1b5d      	subs	r5, r3, r5
9001b9d2:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
9001b9d6:	4610      	mov	r0, r2
9001b9d8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001b9dc:	f240 604b 	movw	r0, #1611	@ 0x64b
9001b9e0:	4283      	cmp	r3, r0
9001b9e2:	d338      	bcc.n	9001ba56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001b9e4:	f240 604c 	movw	r0, #1612	@ 0x64c
9001b9e8:	4283      	cmp	r3, r0
9001b9ea:	d9d8      	bls.n	9001b99e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001b9ec:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
9001b9f0:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
9001b9f4:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
9001b9f8:	f040 80f3 	bne.w	9001bbe2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
9001b9fc:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
9001ba00:	f040 80ef 	bne.w	9001bbe2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
9001ba04:	00cb      	lsls	r3, r1, #3
9001ba06:	064e      	lsls	r6, r1, #25
9001ba08:	f403 7080 	and.w	r0, r3, #256	@ 0x100
9001ba0c:	7a13      	ldrb	r3, [r2, #8]
9001ba0e:	ea43 0300 	orr.w	r3, r3, r0
9001ba12:	bf44      	itt	mi
9001ba14:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001ba18:	b21b      	sxthmi	r3, r3
9001ba1a:	e7d9      	b.n	9001b9d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
9001ba1c:	f240 6054 	movw	r0, #1620	@ 0x654
9001ba20:	4283      	cmp	r3, r0
9001ba22:	d8e3      	bhi.n	9001b9ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001ba24:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
9001ba28:	d9e0      	bls.n	9001b9ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001ba2a:	e7b8      	b.n	9001b99e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001ba2c:	f240 6074 	movw	r0, #1652	@ 0x674
9001ba30:	4283      	cmp	r3, r0
9001ba32:	d0b4      	beq.n	9001b99e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001ba34:	d82d      	bhi.n	9001ba92 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
9001ba36:	f240 605e 	movw	r0, #1630	@ 0x65e
9001ba3a:	4283      	cmp	r3, r0
9001ba3c:	d804      	bhi.n	9001ba48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
9001ba3e:	f240 605d 	movw	r0, #1629	@ 0x65d
9001ba42:	4283      	cmp	r3, r0
9001ba44:	d3d2      	bcc.n	9001b9ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001ba46:	e7aa      	b.n	9001b99e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001ba48:	f240 605f 	movw	r0, #1631	@ 0x65f
9001ba4c:	4283      	cmp	r3, r0
9001ba4e:	d0cd      	beq.n	9001b9ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001ba50:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
9001ba54:	d0a3      	beq.n	9001b99e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001ba56:	00cb      	lsls	r3, r1, #3
9001ba58:	0649      	lsls	r1, r1, #25
9001ba5a:	f403 7080 	and.w	r0, r3, #256	@ 0x100
9001ba5e:	7a13      	ldrb	r3, [r2, #8]
9001ba60:	ea43 0300 	orr.w	r3, r3, r0
9001ba64:	bf44      	itt	mi
9001ba66:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001ba6a:	b21b      	sxthmi	r3, r3
9001ba6c:	1b5d      	subs	r5, r3, r5
9001ba6e:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
9001ba72:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
9001ba76:	7b53      	ldrb	r3, [r2, #13]
9001ba78:	015b      	lsls	r3, r3, #5
9001ba7a:	f403 7180 	and.w	r1, r3, #256	@ 0x100
9001ba7e:	7993      	ldrb	r3, [r2, #6]
9001ba80:	430b      	orrs	r3, r1
9001ba82:	2105      	movs	r1, #5
9001ba84:	005b      	lsls	r3, r3, #1
9001ba86:	fb93 f3f1 	sdiv	r3, r3, r1
9001ba8a:	f992 1009 	ldrsb.w	r1, [r2, #9]
9001ba8e:	440b      	add	r3, r1
9001ba90:	e756      	b.n	9001b940 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
9001ba92:	f240 60e2 	movw	r0, #1762	@ 0x6e2
9001ba96:	4283      	cmp	r3, r0
9001ba98:	d809      	bhi.n	9001baae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
9001ba9a:	f240 60df 	movw	r0, #1759	@ 0x6df
9001ba9e:	4283      	cmp	r3, r0
9001baa0:	f4bf af7d 	bcs.w	9001b99e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001baa4:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
9001baa8:	2b05      	cmp	r3, #5
9001baaa:	d8d4      	bhi.n	9001ba56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001baac:	e777      	b.n	9001b99e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001baae:	f240 60e3 	movw	r0, #1763	@ 0x6e3
9001bab2:	4283      	cmp	r3, r0
9001bab4:	d09a      	beq.n	9001b9ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001bab6:	f240 60e4 	movw	r0, #1764	@ 0x6e4
9001baba:	4283      	cmp	r3, r0
9001babc:	e7ca      	b.n	9001ba54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
9001babe:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
9001bac2:	d22b      	bcs.n	9001bb1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
9001bac4:	f640 00ed 	movw	r0, #2285	@ 0x8ed
9001bac8:	4283      	cmp	r3, r0
9001baca:	d28f      	bcs.n	9001b9ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001bacc:	f640 00e5 	movw	r0, #2277	@ 0x8e5
9001bad0:	4283      	cmp	r3, r0
9001bad2:	d816      	bhi.n	9001bb02 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
9001bad4:	f640 00e4 	movw	r0, #2276	@ 0x8e4
9001bad8:	4283      	cmp	r3, r0
9001bada:	f4bf af60 	bcs.w	9001b99e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001bade:	f240 60ec 	movw	r0, #1772	@ 0x6ec
9001bae2:	4283      	cmp	r3, r0
9001bae4:	d80a      	bhi.n	9001bafc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
9001bae6:	f240 60eb 	movw	r0, #1771	@ 0x6eb
9001baea:	4283      	cmp	r3, r0
9001baec:	f4bf af57 	bcs.w	9001b99e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001baf0:	f240 60ea 	movw	r0, #1770	@ 0x6ea
9001baf4:	4283      	cmp	r3, r0
9001baf6:	f43f af79 	beq.w	9001b9ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001bafa:	e7ac      	b.n	9001ba56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001bafc:	f240 60ed 	movw	r0, #1773	@ 0x6ed
9001bb00:	e7f8      	b.n	9001baf4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
9001bb02:	f640 00e8 	movw	r0, #2280	@ 0x8e8
9001bb06:	4283      	cmp	r3, r0
9001bb08:	d802      	bhi.n	9001bb10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
9001bb0a:	f640 00e7 	movw	r0, #2279	@ 0x8e7
9001bb0e:	e798      	b.n	9001ba42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
9001bb10:	f640 00e9 	movw	r0, #2281	@ 0x8e9
9001bb14:	4283      	cmp	r3, r0
9001bb16:	f47f af42 	bne.w	9001b99e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001bb1a:	e767      	b.n	9001b9ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001bb1c:	f640 00f6 	movw	r0, #2294	@ 0x8f6
9001bb20:	4283      	cmp	r3, r0
9001bb22:	f43f af63 	beq.w	9001b9ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001bb26:	d802      	bhi.n	9001bb2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
9001bb28:	f640 00f2 	movw	r0, #2290	@ 0x8f2
9001bb2c:	e7f2      	b.n	9001bb14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
9001bb2e:	f640 00fa 	movw	r0, #2298	@ 0x8fa
9001bb32:	4283      	cmp	r3, r0
9001bb34:	d805      	bhi.n	9001bb42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
9001bb36:	f640 00f9 	movw	r0, #2297	@ 0x8f9
9001bb3a:	4283      	cmp	r3, r0
9001bb3c:	f4ff af2f 	bcc.w	9001b99e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001bb40:	e754      	b.n	9001b9ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001bb42:	f640 00fe 	movw	r0, #2302	@ 0x8fe
9001bb46:	4283      	cmp	r3, r0
9001bb48:	e7af      	b.n	9001baaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
9001bb4a:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
9001bb4e:	4617      	mov	r7, r2
9001bb50:	f102 0808 	add.w	r8, r2, #8
9001bb54:	4666      	mov	r6, ip
9001bb56:	6838      	ldr	r0, [r7, #0]
9001bb58:	3708      	adds	r7, #8
9001bb5a:	f857 1c04 	ldr.w	r1, [r7, #-4]
9001bb5e:	46e6      	mov	lr, ip
9001bb60:	4547      	cmp	r7, r8
9001bb62:	e8ae 0003 	stmia.w	lr!, {r0, r1}
9001bb66:	46f4      	mov	ip, lr
9001bb68:	d1f5      	bne.n	9001bb56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
9001bb6a:	6838      	ldr	r0, [r7, #0]
9001bb6c:	f8ce 0000 	str.w	r0, [lr]
9001bb70:	88b9      	ldrh	r1, [r7, #4]
9001bb72:	f8ae 1004 	strh.w	r1, [lr, #4]
9001bb76:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
9001bb7a:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
9001bb7e:	d009      	beq.n	9001bb94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
9001bb80:	7b51      	ldrb	r1, [r2, #13]
9001bb82:	7992      	ldrb	r2, [r2, #6]
9001bb84:	0149      	lsls	r1, r1, #5
9001bb86:	f401 7180 	and.w	r1, r1, #256	@ 0x100
9001bb8a:	4311      	orrs	r1, r2
9001bb8c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
9001bb90:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
9001bb94:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
9001bb98:	b2ad      	uxth	r5, r5
9001bb9a:	d00d      	beq.n	9001bbb8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
9001bb9c:	442b      	add	r3, r5
9001bb9e:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
9001bba2:	b29b      	uxth	r3, r3
9001bba4:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
9001bba8:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
9001bbac:	10db      	asrs	r3, r3, #3
9001bbae:	f003 0360 	and.w	r3, r3, #96	@ 0x60
9001bbb2:	4313      	orrs	r3, r2
9001bbb4:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
9001bbb8:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
9001bbbc:	00cb      	lsls	r3, r1, #3
9001bbbe:	064f      	lsls	r7, r1, #25
9001bbc0:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001bbc4:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
9001bbc8:	ea43 0302 	orr.w	r3, r3, r2
9001bbcc:	bf44      	itt	mi
9001bbce:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001bbd2:	b21b      	sxthmi	r3, r3
9001bbd4:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
9001bbd8:	1b5b      	subs	r3, r3, r5
9001bbda:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
9001bbde:	4632      	mov	r2, r6
9001bbe0:	e6f9      	b.n	9001b9d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
9001bbe2:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
9001bbe6:	4617      	mov	r7, r2
9001bbe8:	f102 0908 	add.w	r9, r2, #8
9001bbec:	4666      	mov	r6, ip
9001bbee:	6838      	ldr	r0, [r7, #0]
9001bbf0:	3708      	adds	r7, #8
9001bbf2:	f857 1c04 	ldr.w	r1, [r7, #-4]
9001bbf6:	46e0      	mov	r8, ip
9001bbf8:	454f      	cmp	r7, r9
9001bbfa:	e8a8 0003 	stmia.w	r8!, {r0, r1}
9001bbfe:	46c4      	mov	ip, r8
9001bc00:	d1f5      	bne.n	9001bbee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
9001bc02:	6838      	ldr	r0, [r7, #0]
9001bc04:	f8c8 0000 	str.w	r0, [r8]
9001bc08:	88b9      	ldrh	r1, [r7, #4]
9001bc0a:	f8a8 1004 	strh.w	r1, [r8, #4]
9001bc0e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
9001bc12:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
9001bc16:	d009      	beq.n	9001bc2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
9001bc18:	7b51      	ldrb	r1, [r2, #13]
9001bc1a:	7992      	ldrb	r2, [r2, #6]
9001bc1c:	0149      	lsls	r1, r1, #5
9001bc1e:	f401 7180 	and.w	r1, r1, #256	@ 0x100
9001bc22:	4311      	orrs	r1, r2
9001bc24:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
9001bc28:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
9001bc2c:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
9001bc30:	d00e      	beq.n	9001bc50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
9001bc32:	eba3 030e 	sub.w	r3, r3, lr
9001bc36:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
9001bc3a:	b29b      	uxth	r3, r3
9001bc3c:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
9001bc40:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
9001bc44:	10db      	asrs	r3, r3, #3
9001bc46:	f003 0360 	and.w	r3, r3, #96	@ 0x60
9001bc4a:	4313      	orrs	r3, r2
9001bc4c:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
9001bc50:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
9001bc54:	00cb      	lsls	r3, r1, #3
9001bc56:	0648      	lsls	r0, r1, #25
9001bc58:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001bc5c:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
9001bc60:	ea43 0302 	orr.w	r3, r3, r2
9001bc64:	bf44      	itt	mi
9001bc66:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001bc6a:	b21b      	sxthmi	r3, r3
9001bc6c:	1b5d      	subs	r5, r3, r5
9001bc6e:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
9001bc72:	e7b4      	b.n	9001bbde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

9001bc74 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
9001bc74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001bc78:	461e      	mov	r6, r3
9001bc7a:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
9001bc7c:	4604      	mov	r4, r0
9001bc7e:	4617      	mov	r7, r2
9001bc80:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001bc84:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
9001bc88:	f7ea fe48 	bl	9000691c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001bc8c:	4605      	mov	r5, r0
9001bc8e:	b918      	cbnz	r0, 9001bc98 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
9001bc90:	6030      	str	r0, [r6, #0]
9001bc92:	4628      	mov	r0, r5
9001bc94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001bc98:	683b      	ldr	r3, [r7, #0]
9001bc9a:	4601      	mov	r1, r0
9001bc9c:	4638      	mov	r0, r7
9001bc9e:	68db      	ldr	r3, [r3, #12]
9001bca0:	4798      	blx	r3
9001bca2:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
9001bca6:	4602      	mov	r2, r0
9001bca8:	6030      	str	r0, [r6, #0]
9001bcaa:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
9001bcae:	d213      	bcs.n	9001bcd8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
9001bcb0:	4643      	mov	r3, r8
9001bcb2:	4639      	mov	r1, r7
9001bcb4:	4620      	mov	r0, r4
9001bcb6:	f7ff fe39 	bl	9001b92c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
9001bcba:	6030      	str	r0, [r6, #0]
9001bcbc:	6833      	ldr	r3, [r6, #0]
9001bcbe:	b143      	cbz	r3, 9001bcd2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
9001bcc0:	7b5a      	ldrb	r2, [r3, #13]
9001bcc2:	7a9b      	ldrb	r3, [r3, #10]
9001bcc4:	0052      	lsls	r2, r2, #1
9001bcc6:	f402 7280 	and.w	r2, r2, #256	@ 0x100
9001bcca:	4313      	orrs	r3, r2
9001bccc:	bf0c      	ite	eq
9001bcce:	2301      	moveq	r3, #1
9001bcd0:	2300      	movne	r3, #0
9001bcd2:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
9001bcd6:	e7dc      	b.n	9001bc92 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
9001bcd8:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
9001bcdc:	b29b      	uxth	r3, r3
9001bcde:	2b7f      	cmp	r3, #127	@ 0x7f
9001bce0:	d804      	bhi.n	9001bcec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
9001bce2:	4639      	mov	r1, r7
9001bce4:	4620      	mov	r0, r4
9001bce6:	f7ff fce7 	bl	9001b6b8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
9001bcea:	e7e6      	b.n	9001bcba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
9001bcec:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
9001bcf0:	2b00      	cmp	r3, #0
9001bcf2:	d0e3      	beq.n	9001bcbc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
9001bcf4:	f640 1302 	movw	r3, #2306	@ 0x902
9001bcf8:	429d      	cmp	r5, r3
9001bcfa:	d1df      	bne.n	9001bcbc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
9001bcfc:	4601      	mov	r1, r0
9001bcfe:	4620      	mov	r0, r4
9001bd00:	f7ff fcaa 	bl	9001b658 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
9001bd04:	e7d9      	b.n	9001bcba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

9001bd06 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
9001bd06:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9001bd0a:	461e      	mov	r6, r3
9001bd0c:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
9001bd0e:	4604      	mov	r4, r0
9001bd10:	4617      	mov	r7, r2
9001bd12:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001bd16:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
9001bd1a:	f7ea fdff 	bl	9000691c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001bd1e:	4605      	mov	r5, r0
9001bd20:	b918      	cbnz	r0, 9001bd2a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
9001bd22:	6030      	str	r0, [r6, #0]
9001bd24:	4628      	mov	r0, r5
9001bd26:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9001bd2a:	683b      	ldr	r3, [r7, #0]
9001bd2c:	4601      	mov	r1, r0
9001bd2e:	4638      	mov	r0, r7
9001bd30:	f8d3 9008 	ldr.w	r9, [r3, #8]
9001bd34:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
9001bd38:	47c8      	blx	r9
9001bd3a:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
9001bd3e:	4602      	mov	r2, r0
9001bd40:	6030      	str	r0, [r6, #0]
9001bd42:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
9001bd46:	d213      	bcs.n	9001bd70 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
9001bd48:	4643      	mov	r3, r8
9001bd4a:	4639      	mov	r1, r7
9001bd4c:	4620      	mov	r0, r4
9001bd4e:	f7ff fded 	bl	9001b92c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
9001bd52:	6030      	str	r0, [r6, #0]
9001bd54:	6833      	ldr	r3, [r6, #0]
9001bd56:	b143      	cbz	r3, 9001bd6a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
9001bd58:	7b5a      	ldrb	r2, [r3, #13]
9001bd5a:	7a9b      	ldrb	r3, [r3, #10]
9001bd5c:	0052      	lsls	r2, r2, #1
9001bd5e:	f402 7280 	and.w	r2, r2, #256	@ 0x100
9001bd62:	4313      	orrs	r3, r2
9001bd64:	bf0c      	ite	eq
9001bd66:	2301      	moveq	r3, #1
9001bd68:	2300      	movne	r3, #0
9001bd6a:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
9001bd6e:	e7d9      	b.n	9001bd24 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
9001bd70:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
9001bd74:	b29b      	uxth	r3, r3
9001bd76:	2b7f      	cmp	r3, #127	@ 0x7f
9001bd78:	d804      	bhi.n	9001bd84 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
9001bd7a:	4639      	mov	r1, r7
9001bd7c:	4620      	mov	r0, r4
9001bd7e:	f7ff fc9b 	bl	9001b6b8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
9001bd82:	e7e6      	b.n	9001bd52 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
9001bd84:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
9001bd88:	2b00      	cmp	r3, #0
9001bd8a:	d0e3      	beq.n	9001bd54 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
9001bd8c:	f640 1302 	movw	r3, #2306	@ 0x902
9001bd90:	429d      	cmp	r5, r3
9001bd92:	d1df      	bne.n	9001bd54 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
9001bd94:	4601      	mov	r1, r0
9001bd96:	4620      	mov	r0, r4
9001bd98:	f7ff fc5e 	bl	9001b658 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
9001bd9c:	e7d9      	b.n	9001bd52 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

9001bd9e <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
9001bd9e:	b510      	push	{r4, lr}
9001bda0:	4604      	mov	r4, r0
9001bda2:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
9001bda6:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
9001bda8:	b1e1      	cbz	r1, 9001bde4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
9001bdaa:	2b0a      	cmp	r3, #10
9001bdac:	d02d      	beq.n	9001be0a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
9001bdae:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
9001bdb0:	3901      	subs	r1, #1
9001bdb2:	eb04 0042 	add.w	r0, r4, r2, lsl #1
9001bdb6:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
9001bdb8:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
9001bdbc:	1c51      	adds	r1, r2, #1
9001bdbe:	b289      	uxth	r1, r1
9001bdc0:	2901      	cmp	r1, #1
9001bdc2:	bf8a      	itet	hi
9001bdc4:	f102 32ff 	addhi.w	r2, r2, #4294967295
9001bdc8:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
9001bdca:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
9001bdcc:	1c5a      	adds	r2, r3, #1
9001bdce:	8722      	strh	r2, [r4, #56]	@ 0x38
9001bdd0:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
9001bdd2:	4413      	add	r3, r2
9001bdd4:	b29b      	uxth	r3, r3
9001bdd6:	2b09      	cmp	r3, #9
9001bdd8:	bf88      	it	hi
9001bdda:	3b0a      	subhi	r3, #10
9001bddc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001bde0:	8458      	strh	r0, [r3, #34]	@ 0x22
9001bde2:	e7de      	b.n	9001bda2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
9001bde4:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
9001bde6:	2b0a      	cmp	r3, #10
9001bde8:	d00f      	beq.n	9001be0a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
9001bdea:	4620      	mov	r0, r4
9001bdec:	f7ff fbe2 	bl	9001b5b4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
9001bdf0:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
9001bdf2:	1c5a      	adds	r2, r3, #1
9001bdf4:	8722      	strh	r2, [r4, #56]	@ 0x38
9001bdf6:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
9001bdf8:	4413      	add	r3, r2
9001bdfa:	b29b      	uxth	r3, r3
9001bdfc:	2b09      	cmp	r3, #9
9001bdfe:	bf88      	it	hi
9001be00:	3b0a      	subhi	r3, #10
9001be02:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001be06:	8458      	strh	r0, [r3, #34]	@ 0x22
9001be08:	e7ec      	b.n	9001bde4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
9001be0a:	bd10      	pop	{r4, pc}

9001be0c <_ZN8touchgfx12TextProvider11getNextCharEv>:
9001be0c:	b538      	push	{r3, r4, r5, lr}
9001be0e:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
9001be10:	4604      	mov	r4, r0
9001be12:	eb00 0243 	add.w	r2, r0, r3, lsl #1
9001be16:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
9001be18:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
9001be1a:	3a01      	subs	r2, #1
9001be1c:	8702      	strh	r2, [r0, #56]	@ 0x38
9001be1e:	1c5a      	adds	r2, r3, #1
9001be20:	b292      	uxth	r2, r2
9001be22:	2a09      	cmp	r2, #9
9001be24:	bf8a      	itet	hi
9001be26:	3b09      	subhi	r3, #9
9001be28:	86c2      	strhls	r2, [r0, #54]	@ 0x36
9001be2a:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
9001be2c:	f7ff ffb7 	bl	9001bd9e <_ZN8touchgfx12TextProvider15fillInputBufferEv>
9001be30:	8c23      	ldrh	r3, [r4, #32]
9001be32:	2b01      	cmp	r3, #1
9001be34:	bf9c      	itt	ls
9001be36:	3301      	addls	r3, #1
9001be38:	8423      	strhls	r3, [r4, #32]
9001be3a:	8be3      	ldrh	r3, [r4, #30]
9001be3c:	b90b      	cbnz	r3, 9001be42 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
9001be3e:	2302      	movs	r3, #2
9001be40:	83e3      	strh	r3, [r4, #30]
9001be42:	8be3      	ldrh	r3, [r4, #30]
9001be44:	4628      	mov	r0, r5
9001be46:	3b01      	subs	r3, #1
9001be48:	b29b      	uxth	r3, r3
9001be4a:	83e3      	strh	r3, [r4, #30]
9001be4c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001be50:	8365      	strh	r5, [r4, #26]
9001be52:	bd38      	pop	{r3, r4, r5, pc}

9001be54 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
9001be54:	428a      	cmp	r2, r1
9001be56:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001be5a:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
9001be5c:	d932      	bls.n	9001bec4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
9001be5e:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
9001be60:	1a54      	subs	r4, r2, r1
9001be62:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
9001be66:	19ee      	adds	r6, r5, r7
9001be68:	fa1f fe84 	uxth.w	lr, r4
9001be6c:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
9001be70:	3e01      	subs	r6, #1
9001be72:	b2b4      	uxth	r4, r6
9001be74:	eba4 090e 	sub.w	r9, r4, lr
9001be78:	fa1f f989 	uxth.w	r9, r9
9001be7c:	2c09      	cmp	r4, #9
9001be7e:	4626      	mov	r6, r4
9001be80:	bf88      	it	hi
9001be82:	f1a4 060a 	subhi.w	r6, r4, #10
9001be86:	f1bc 0f00 	cmp.w	ip, #0
9001be8a:	f104 34ff 	add.w	r4, r4, #4294967295
9001be8e:	bf08      	it	eq
9001be90:	f04f 0c02 	moveq.w	ip, #2
9001be94:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001be98:	b2a4      	uxth	r4, r4
9001be9a:	f10c 3cff 	add.w	ip, ip, #4294967295
9001be9e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
9001bea2:	454c      	cmp	r4, r9
9001bea4:	fa1f fc8c 	uxth.w	ip, ip
9001bea8:	eb00 064c 	add.w	r6, r0, ip, lsl #1
9001beac:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
9001beb0:	d1e4      	bne.n	9001be7c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
9001beb2:	eba5 050e 	sub.w	r5, r5, lr
9001beb6:	eb0e 0408 	add.w	r4, lr, r8
9001beba:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
9001bebe:	8705      	strh	r5, [r0, #56]	@ 0x38
9001bec0:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
9001bec4:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
9001bec6:	250a      	movs	r5, #10
9001bec8:	1a64      	subs	r4, r4, r1
9001beca:	4439      	add	r1, r7
9001becc:	b289      	uxth	r1, r1
9001bece:	8704      	strh	r4, [r0, #56]	@ 0x38
9001bed0:	2909      	cmp	r1, #9
9001bed2:	bf88      	it	hi
9001bed4:	390a      	subhi	r1, #10
9001bed6:	86c1      	strh	r1, [r0, #54]	@ 0x36
9001bed8:	b18a      	cbz	r2, 9001befe <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
9001beda:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
9001bedc:	3a01      	subs	r2, #1
9001bede:	3101      	adds	r1, #1
9001bee0:	b292      	uxth	r2, r2
9001bee2:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
9001bee6:	8701      	strh	r1, [r0, #56]	@ 0x38
9001bee8:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
9001beea:	b901      	cbnz	r1, 9001beee <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
9001beec:	86c5      	strh	r5, [r0, #54]	@ 0x36
9001beee:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
9001bef0:	3901      	subs	r1, #1
9001bef2:	b289      	uxth	r1, r1
9001bef4:	86c1      	strh	r1, [r0, #54]	@ 0x36
9001bef6:	eb00 0141 	add.w	r1, r0, r1, lsl #1
9001befa:	844c      	strh	r4, [r1, #34]	@ 0x22
9001befc:	e7ec      	b.n	9001bed8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
9001befe:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001bf02:	f7ff bf4c 	b.w	9001bd9e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

9001bf06 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
9001bf06:	b570      	push	{r4, r5, r6, lr}
9001bf08:	2500      	movs	r5, #0
9001bf0a:	4295      	cmp	r5, r2
9001bf0c:	d011      	beq.n	9001bf32 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
9001bf0e:	8bc4      	ldrh	r4, [r0, #30]
9001bf10:	f831 6b02 	ldrh.w	r6, [r1], #2
9001bf14:	4414      	add	r4, r2
9001bf16:	3c01      	subs	r4, #1
9001bf18:	1b64      	subs	r4, r4, r5
9001bf1a:	b2a4      	uxth	r4, r4
9001bf1c:	2c01      	cmp	r4, #1
9001bf1e:	bf88      	it	hi
9001bf20:	3c02      	subhi	r4, #2
9001bf22:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001bf26:	8b64      	ldrh	r4, [r4, #26]
9001bf28:	42b4      	cmp	r4, r6
9001bf2a:	d117      	bne.n	9001bf5c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
9001bf2c:	3501      	adds	r5, #1
9001bf2e:	b2ad      	uxth	r5, r5
9001bf30:	e7eb      	b.n	9001bf0a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
9001bf32:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001bf36:	2400      	movs	r4, #0
9001bf38:	4413      	add	r3, r2
9001bf3a:	b2a2      	uxth	r2, r4
9001bf3c:	429a      	cmp	r2, r3
9001bf3e:	da0f      	bge.n	9001bf60 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
9001bf40:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
9001bf42:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
9001bf46:	3401      	adds	r4, #1
9001bf48:	4432      	add	r2, r6
9001bf4a:	b292      	uxth	r2, r2
9001bf4c:	2a09      	cmp	r2, #9
9001bf4e:	bf88      	it	hi
9001bf50:	3a0a      	subhi	r2, #10
9001bf52:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001bf56:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
9001bf58:	42aa      	cmp	r2, r5
9001bf5a:	d0ee      	beq.n	9001bf3a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
9001bf5c:	2000      	movs	r0, #0
9001bf5e:	bd70      	pop	{r4, r5, r6, pc}
9001bf60:	2001      	movs	r0, #1
9001bf62:	e7fc      	b.n	9001bf5e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

9001bf64 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
9001bf64:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001bf68:	4605      	mov	r5, r0
9001bf6a:	4616      	mov	r6, r2
9001bf6c:	1c8c      	adds	r4, r1, #2
9001bf6e:	8809      	ldrh	r1, [r1, #0]
9001bf70:	ea4f 3a11 	mov.w	sl, r1, lsr #12
9001bf74:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
9001bf78:	42b3      	cmp	r3, r6
9001bf7a:	d124      	bne.n	9001bfc6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
9001bf7c:	f3c1 2903 	ubfx	r9, r1, #8, #4
9001bf80:	f3c1 1803 	ubfx	r8, r1, #4, #4
9001bf84:	f001 070f 	and.w	r7, r1, #15
9001bf88:	4652      	mov	r2, sl
9001bf8a:	f8cd 8000 	str.w	r8, [sp]
9001bf8e:	464b      	mov	r3, r9
9001bf90:	4621      	mov	r1, r4
9001bf92:	4628      	mov	r0, r5
9001bf94:	f7ff ffb7 	bl	9001bf06 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
9001bf98:	4683      	mov	fp, r0
9001bf9a:	b168      	cbz	r0, 9001bfb8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
9001bf9c:	eb0a 0109 	add.w	r1, sl, r9
9001bfa0:	463a      	mov	r2, r7
9001bfa2:	4628      	mov	r0, r5
9001bfa4:	4441      	add	r1, r8
9001bfa6:	eb04 0341 	add.w	r3, r4, r1, lsl #1
9001bfaa:	4649      	mov	r1, r9
9001bfac:	f7ff ff52 	bl	9001be54 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
9001bfb0:	4658      	mov	r0, fp
9001bfb2:	b003      	add	sp, #12
9001bfb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001bfb8:	eb07 010a 	add.w	r1, r7, sl
9001bfbc:	4449      	add	r1, r9
9001bfbe:	4441      	add	r1, r8
9001bfc0:	eb04 0141 	add.w	r1, r4, r1, lsl #1
9001bfc4:	e7d2      	b.n	9001bf6c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
9001bfc6:	f04f 0b00 	mov.w	fp, #0
9001bfca:	e7f1      	b.n	9001bfb0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

9001bfcc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
9001bfcc:	b570      	push	{r4, r5, r6, lr}
9001bfce:	8810      	ldrh	r0, [r2, #0]
9001bfd0:	4298      	cmp	r0, r3
9001bfd2:	d817      	bhi.n	9001c004 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001bfd4:	1e48      	subs	r0, r1, #1
9001bfd6:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
9001bfda:	4298      	cmp	r0, r3
9001bfdc:	d312      	bcc.n	9001c004 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001bfde:	2400      	movs	r4, #0
9001bfe0:	428c      	cmp	r4, r1
9001bfe2:	d20f      	bcs.n	9001c004 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001bfe4:	1860      	adds	r0, r4, r1
9001bfe6:	1040      	asrs	r0, r0, #1
9001bfe8:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
9001bfec:	0085      	lsls	r5, r0, #2
9001bfee:	42b3      	cmp	r3, r6
9001bff0:	d902      	bls.n	9001bff8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
9001bff2:	3001      	adds	r0, #1
9001bff4:	b284      	uxth	r4, r0
9001bff6:	e7f3      	b.n	9001bfe0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
9001bff8:	d201      	bcs.n	9001bffe <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
9001bffa:	b281      	uxth	r1, r0
9001bffc:	e7f0      	b.n	9001bfe0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
9001bffe:	442a      	add	r2, r5
9001c000:	8850      	ldrh	r0, [r2, #2]
9001c002:	bd70      	pop	{r4, r5, r6, pc}
9001c004:	2000      	movs	r0, #0
9001c006:	e7fc      	b.n	9001c002 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

9001c008 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
9001c008:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001c00c:	6c45      	ldr	r5, [r0, #68]	@ 0x44
9001c00e:	4604      	mov	r4, r0
9001c010:	260b      	movs	r6, #11
9001c012:	886f      	ldrh	r7, [r5, #2]
9001c014:	087f      	lsrs	r7, r7, #1
9001c016:	3e01      	subs	r6, #1
9001c018:	d013      	beq.n	9001c042 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
9001c01a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
9001c01c:	462a      	mov	r2, r5
9001c01e:	4639      	mov	r1, r7
9001c020:	4620      	mov	r0, r4
9001c022:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001c026:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
9001c02a:	4643      	mov	r3, r8
9001c02c:	f7ff ffce 	bl	9001bfcc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
9001c030:	b138      	cbz	r0, 9001c042 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
9001c032:	eb05 0140 	add.w	r1, r5, r0, lsl #1
9001c036:	4642      	mov	r2, r8
9001c038:	4620      	mov	r0, r4
9001c03a:	f7ff ff93 	bl	9001bf64 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
9001c03e:	2800      	cmp	r0, #0
9001c040:	d1e9      	bne.n	9001c016 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
9001c042:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

9001c048 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
9001c048:	b570      	push	{r4, r5, r6, lr}
9001c04a:	694a      	ldr	r2, [r1, #20]
9001c04c:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
9001c04e:	684b      	ldr	r3, [r1, #4]
9001c050:	1b54      	subs	r4, r2, r5
9001c052:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
9001c054:	f000 8106 	beq.w	9001c264 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
9001c058:	1b9b      	subs	r3, r3, r6
9001c05a:	d003      	beq.n	9001c064 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
9001c05c:	4363      	muls	r3, r4
9001c05e:	2210      	movs	r2, #16
9001c060:	fb93 f3f2 	sdiv	r3, r3, r2
9001c064:	680c      	ldr	r4, [r1, #0]
9001c066:	698a      	ldr	r2, [r1, #24]
9001c068:	1b65      	subs	r5, r4, r5
9001c06a:	f000 80fd 	beq.w	9001c268 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
9001c06e:	1b92      	subs	r2, r2, r6
9001c070:	d003      	beq.n	9001c07a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
9001c072:	436a      	muls	r2, r5
9001c074:	2410      	movs	r4, #16
9001c076:	fb92 f2f4 	sdiv	r2, r2, r4
9001c07a:	1a9b      	subs	r3, r3, r2
9001c07c:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 9001c2a4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
9001c080:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001c084:	460a      	mov	r2, r1
9001c086:	ee07 3a90 	vmov	s15, r3
9001c08a:	f100 040c 	add.w	r4, r0, #12
9001c08e:	4603      	mov	r3, r0
9001c090:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001c094:	ee67 7a84 	vmul.f32	s15, s15, s8
9001c098:	ee87 3a27 	vdiv.f32	s6, s14, s15
9001c09c:	eeb1 6a43 	vneg.f32	s12, s6
9001c0a0:	edd2 7a02 	vldr	s15, [r2, #8]
9001c0a4:	3214      	adds	r2, #20
9001c0a6:	eec7 6a27 	vdiv.f32	s13, s14, s15
9001c0aa:	ece3 6a01 	vstmia	r3!, {s13}
9001c0ae:	429c      	cmp	r4, r3
9001c0b0:	ed52 7a02 	vldr	s15, [r2, #-8]
9001c0b4:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001c0b8:	edc3 7a02 	vstr	s15, [r3, #8]
9001c0bc:	ed52 7a01 	vldr	s15, [r2, #-4]
9001c0c0:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001c0c4:	edc3 7a05 	vstr	s15, [r3, #20]
9001c0c8:	d1ea      	bne.n	9001c0a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
9001c0ca:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001c0cc:	698b      	ldr	r3, [r1, #24]
9001c0ce:	edd0 4a02 	vldr	s9, [r0, #8]
9001c0d2:	1a9b      	subs	r3, r3, r2
9001c0d4:	edd0 3a00 	vldr	s7, [r0]
9001c0d8:	edd0 6a01 	vldr	s13, [r0, #4]
9001c0dc:	ee07 3a90 	vmov	s15, r3
9001c0e0:	684b      	ldr	r3, [r1, #4]
9001c0e2:	ee76 6ae4 	vsub.f32	s13, s13, s9
9001c0e6:	ed90 5a05 	vldr	s10, [r0, #20]
9001c0ea:	1a9b      	subs	r3, r3, r2
9001c0ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001c0f0:	ee73 4ae4 	vsub.f32	s9, s7, s9
9001c0f4:	ed90 2a03 	vldr	s4, [r0, #12]
9001c0f8:	ee07 3a10 	vmov	s14, r3
9001c0fc:	edd0 5a04 	vldr	s11, [r0, #16]
9001c100:	ee67 7a84 	vmul.f32	s15, s15, s8
9001c104:	ed90 1a07 	vldr	s2, [r0, #28]
9001c108:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001c10c:	edd0 2a06 	vldr	s5, [r0, #24]
9001c110:	ee75 5ac5 	vsub.f32	s11, s11, s10
9001c114:	ee64 7ae7 	vnmul.f32	s15, s9, s15
9001c118:	ee27 7a04 	vmul.f32	s14, s14, s8
9001c11c:	ee32 5a45 	vsub.f32	s10, s4, s10
9001c120:	eee6 7a87 	vfma.f32	s15, s13, s14
9001c124:	ee67 7a83 	vmul.f32	s15, s15, s6
9001c128:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
9001c12c:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
9001c12e:	694a      	ldr	r2, [r1, #20]
9001c130:	1b13      	subs	r3, r2, r4
9001c132:	ee07 3a10 	vmov	s14, r3
9001c136:	680b      	ldr	r3, [r1, #0]
9001c138:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001c13c:	1b1b      	subs	r3, r3, r4
9001c13e:	ee27 7a04 	vmul.f32	s14, s14, s8
9001c142:	ee64 4ac7 	vnmul.f32	s9, s9, s14
9001c146:	ee07 3a10 	vmov	s14, r3
9001c14a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001c14e:	ee27 7a04 	vmul.f32	s14, s14, s8
9001c152:	eee6 4a87 	vfma.f32	s9, s13, s14
9001c156:	ee64 4a86 	vmul.f32	s9, s9, s12
9001c15a:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
9001c15e:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001c160:	698b      	ldr	r3, [r1, #24]
9001c162:	1a9b      	subs	r3, r3, r2
9001c164:	ee06 3a90 	vmov	s13, r3
9001c168:	684b      	ldr	r3, [r1, #4]
9001c16a:	1a9b      	subs	r3, r3, r2
9001c16c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001c170:	ee07 3a10 	vmov	s14, r3
9001c174:	ee66 6a84 	vmul.f32	s13, s13, s8
9001c178:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001c17c:	ee65 6a66 	vnmul.f32	s13, s10, s13
9001c180:	ee27 7a04 	vmul.f32	s14, s14, s8
9001c184:	eee5 6a87 	vfma.f32	s13, s11, s14
9001c188:	ee66 6a83 	vmul.f32	s13, s13, s6
9001c18c:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
9001c190:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
9001c192:	694a      	ldr	r2, [r1, #20]
9001c194:	1b13      	subs	r3, r2, r4
9001c196:	ee07 3a10 	vmov	s14, r3
9001c19a:	680b      	ldr	r3, [r1, #0]
9001c19c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001c1a0:	1b1b      	subs	r3, r3, r4
9001c1a2:	ee27 7a04 	vmul.f32	s14, s14, s8
9001c1a6:	ee25 5a47 	vnmul.f32	s10, s10, s14
9001c1aa:	ee07 3a10 	vmov	s14, r3
9001c1ae:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001c1b2:	ee27 7a04 	vmul.f32	s14, s14, s8
9001c1b6:	eea5 5a87 	vfma.f32	s10, s11, s14
9001c1ba:	edd0 5a08 	vldr	s11, [r0, #32]
9001c1be:	ee31 1a65 	vsub.f32	s2, s2, s11
9001c1c2:	ee72 5ae5 	vsub.f32	s11, s5, s11
9001c1c6:	ee25 5a06 	vmul.f32	s10, s10, s12
9001c1ca:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
9001c1ce:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001c1d0:	698b      	ldr	r3, [r1, #24]
9001c1d2:	1a9b      	subs	r3, r3, r2
9001c1d4:	ee07 3a10 	vmov	s14, r3
9001c1d8:	684b      	ldr	r3, [r1, #4]
9001c1da:	1a9b      	subs	r3, r3, r2
9001c1dc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001c1e0:	ee01 3a90 	vmov	s3, r3
9001c1e4:	ee27 7a04 	vmul.f32	s14, s14, s8
9001c1e8:	eef8 1ae1 	vcvt.f32.s32	s3, s3
9001c1ec:	ee25 7ac7 	vnmul.f32	s14, s11, s14
9001c1f0:	ee61 1a84 	vmul.f32	s3, s3, s8
9001c1f4:	eea1 7a21 	vfma.f32	s14, s2, s3
9001c1f8:	ee27 7a03 	vmul.f32	s14, s14, s6
9001c1fc:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
9001c200:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
9001c202:	694a      	ldr	r2, [r1, #20]
9001c204:	1b13      	subs	r3, r2, r4
9001c206:	ee03 3a10 	vmov	s6, r3
9001c20a:	680b      	ldr	r3, [r1, #0]
9001c20c:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001c210:	1b1b      	subs	r3, r3, r4
9001c212:	ee23 3a04 	vmul.f32	s6, s6, s8
9001c216:	ee65 5ac3 	vnmul.f32	s11, s11, s6
9001c21a:	ee03 3a10 	vmov	s6, r3
9001c21e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001c222:	ee23 4a04 	vmul.f32	s8, s6, s8
9001c226:	eee1 5a04 	vfma.f32	s11, s2, s8
9001c22a:	ee25 6a86 	vmul.f32	s12, s11, s12
9001c22e:	ee62 5a67 	vnmul.f32	s11, s4, s15
9001c232:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
9001c236:	eee3 5aa6 	vfma.f32	s11, s7, s13
9001c23a:	eef5 5ac0 	vcmpe.f32	s11, #0.0
9001c23e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001c242:	dd13      	ble.n	9001c26c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
9001c244:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001c248:	ee62 7ae7 	vnmul.f32	s15, s5, s15
9001c24c:	63c3      	str	r3, [r0, #60]	@ 0x3c
9001c24e:	eee3 7a87 	vfma.f32	s15, s7, s14
9001c252:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001c256:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001c25a:	dd15      	ble.n	9001c288 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
9001c25c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001c260:	6403      	str	r3, [r0, #64]	@ 0x40
9001c262:	bd70      	pop	{r4, r5, r6, pc}
9001c264:	4623      	mov	r3, r4
9001c266:	e6fd      	b.n	9001c064 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
9001c268:	462a      	mov	r2, r5
9001c26a:	e706      	b.n	9001c07a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
9001c26c:	d502      	bpl.n	9001c274 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
9001c26e:	f647 73ff 	movw	r3, #32767	@ 0x7fff
9001c272:	e7e9      	b.n	9001c248 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
9001c274:	ee22 2a64 	vnmul.f32	s4, s4, s9
9001c278:	eea3 2a85 	vfma.f32	s4, s7, s10
9001c27c:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
9001c280:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001c284:	dade      	bge.n	9001c244 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
9001c286:	e7f2      	b.n	9001c26e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
9001c288:	d502      	bpl.n	9001c290 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
9001c28a:	f647 73ff 	movw	r3, #32767	@ 0x7fff
9001c28e:	e7e7      	b.n	9001c260 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
9001c290:	ee62 4ae4 	vnmul.f32	s9, s5, s9
9001c294:	eee3 4a86 	vfma.f32	s9, s7, s12
9001c298:	eef5 4ac0 	vcmpe.f32	s9, #0.0
9001c29c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001c2a0:	dadc      	bge.n	9001c25c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
9001c2a2:	e7f2      	b.n	9001c28a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
9001c2a4:	3d800000 	.word	0x3d800000

9001c2a8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
9001c2a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001c2ac:	2714      	movs	r7, #20
9001c2ae:	435f      	muls	r7, r3
9001c2b0:	eb02 0c07 	add.w	ip, r2, r7
9001c2b4:	f8dc 5004 	ldr.w	r5, [ip, #4]
9001c2b8:	f115 0e0f 	adds.w	lr, r5, #15
9001c2bc:	f100 80a2 	bmi.w	9001c404 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
9001c2c0:	ea4f 1e2e 	mov.w	lr, lr, asr #4
9001c2c4:	9c08      	ldr	r4, [sp, #32]
9001c2c6:	2614      	movs	r6, #20
9001c2c8:	f8c0 e014 	str.w	lr, [r0, #20]
9001c2cc:	4366      	muls	r6, r4
9001c2ce:	eb02 0806 	add.w	r8, r2, r6
9001c2d2:	f8d8 5004 	ldr.w	r5, [r8, #4]
9001c2d6:	f115 040f 	adds.w	r4, r5, #15
9001c2da:	f100 809f 	bmi.w	9001c41c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
9001c2de:	1124      	asrs	r4, r4, #4
9001c2e0:	eba4 040e 	sub.w	r4, r4, lr
9001c2e4:	6184      	str	r4, [r0, #24]
9001c2e6:	2c00      	cmp	r4, #0
9001c2e8:	f000 808a 	beq.w	9001c400 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
9001c2ec:	f8dc 9004 	ldr.w	r9, [ip, #4]
9001c2f0:	f8d8 4004 	ldr.w	r4, [r8, #4]
9001c2f4:	5995      	ldr	r5, [r2, r6]
9001c2f6:	eba4 0809 	sub.w	r8, r4, r9
9001c2fa:	59d4      	ldr	r4, [r2, r7]
9001c2fc:	eba5 0a04 	sub.w	sl, r5, r4
9001c300:	ea4f 1608 	mov.w	r6, r8, lsl #4
9001c304:	ea4f 150a 	mov.w	r5, sl, lsl #4
9001c308:	fb0e fe05 	mul.w	lr, lr, r5
9001c30c:	fb0a ee19 	mls	lr, sl, r9, lr
9001c310:	fb08 e404 	mla	r4, r8, r4, lr
9001c314:	3c01      	subs	r4, #1
9001c316:	19a4      	adds	r4, r4, r6
9001c318:	f100 808c 	bmi.w	9001c434 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
9001c31c:	fb94 fef6 	sdiv	lr, r4, r6
9001c320:	fb06 441e 	mls	r4, r6, lr, r4
9001c324:	f8c0 e000 	str.w	lr, [r0]
9001c328:	6104      	str	r4, [r0, #16]
9001c32a:	2d00      	cmp	r5, #0
9001c32c:	f2c0 8095 	blt.w	9001c45a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
9001c330:	fb95 f4f6 	sdiv	r4, r5, r6
9001c334:	fb06 5514 	mls	r5, r6, r4, r5
9001c338:	6044      	str	r4, [r0, #4]
9001c33a:	6085      	str	r5, [r0, #8]
9001c33c:	60c6      	str	r6, [r0, #12]
9001c33e:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001c342:	f8dc 4004 	ldr.w	r4, [ip, #4]
9001c346:	6945      	ldr	r5, [r0, #20]
9001c348:	59d2      	ldr	r2, [r2, r7]
9001c34a:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
9001c34e:	eddf 6a4b 	vldr	s13, [pc, #300]	@ 9001c47c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
9001c352:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
9001c356:	ee07 4a10 	vmov	s14, r4
9001c35a:	6804      	ldr	r4, [r0, #0]
9001c35c:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
9001c360:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001c364:	ee07 2a90 	vmov	s15, r2
9001c368:	ee27 7a26 	vmul.f32	s14, s14, s13
9001c36c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001c370:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001c374:	edd3 6a00 	vldr	s13, [r3]
9001c378:	eee6 6a07 	vfma.f32	s13, s12, s14
9001c37c:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
9001c380:	eee6 6a27 	vfma.f32	s13, s12, s15
9001c384:	edc0 6a07 	vstr	s13, [r0, #28]
9001c388:	edd0 6a01 	vldr	s13, [r0, #4]
9001c38c:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
9001c390:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001c394:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
9001c398:	eea6 6aa5 	vfma.f32	s12, s13, s11
9001c39c:	ed80 6a08 	vstr	s12, [r0, #32]
9001c3a0:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
9001c3a2:	6242      	str	r2, [r0, #36]	@ 0x24
9001c3a4:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
9001c3a8:	ed93 6a03 	vldr	s12, [r3, #12]
9001c3ac:	eea5 6a87 	vfma.f32	s12, s11, s14
9001c3b0:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
9001c3b4:	eea5 6aa7 	vfma.f32	s12, s11, s15
9001c3b8:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
9001c3bc:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
9001c3c0:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
9001c3c4:	eea6 6aa5 	vfma.f32	s12, s13, s11
9001c3c8:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
9001c3cc:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001c3ce:	6302      	str	r2, [r0, #48]	@ 0x30
9001c3d0:	ed93 6a06 	vldr	s12, [r3, #24]
9001c3d4:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
9001c3d8:	eea5 6a87 	vfma.f32	s12, s11, s14
9001c3dc:	eeb0 7a46 	vmov.f32	s14, s12
9001c3e0:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
9001c3e4:	eea6 7a27 	vfma.f32	s14, s12, s15
9001c3e8:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
9001c3ec:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
9001c3f0:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
9001c3f4:	eee6 7a87 	vfma.f32	s15, s13, s14
9001c3f8:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
9001c3fc:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
9001c3fe:	63c3      	str	r3, [r0, #60]	@ 0x3c
9001c400:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001c404:	2410      	movs	r4, #16
9001c406:	f1c5 0501 	rsb	r5, r5, #1
9001c40a:	fb9e fef4 	sdiv	lr, lr, r4
9001c40e:	f015 050f 	ands.w	r5, r5, #15
9001c412:	bf18      	it	ne
9001c414:	2501      	movne	r5, #1
9001c416:	ebae 0e05 	sub.w	lr, lr, r5
9001c41a:	e753      	b.n	9001c2c4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
9001c41c:	f04f 0910 	mov.w	r9, #16
9001c420:	f1c5 0501 	rsb	r5, r5, #1
9001c424:	fb94 f4f9 	sdiv	r4, r4, r9
9001c428:	f015 050f 	ands.w	r5, r5, #15
9001c42c:	bf18      	it	ne
9001c42e:	2501      	movne	r5, #1
9001c430:	1b64      	subs	r4, r4, r5
9001c432:	e755      	b.n	9001c2e0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
9001c434:	4264      	negs	r4, r4
9001c436:	fb94 fef6 	sdiv	lr, r4, r6
9001c43a:	f1ce 0800 	rsb	r8, lr, #0
9001c43e:	fb06 441e 	mls	r4, r6, lr, r4
9001c442:	f8c0 8000 	str.w	r8, [r0]
9001c446:	6104      	str	r4, [r0, #16]
9001c448:	2c00      	cmp	r4, #0
9001c44a:	f43f af6e 	beq.w	9001c32a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
9001c44e:	ea6f 0e0e 	mvn.w	lr, lr
9001c452:	1b34      	subs	r4, r6, r4
9001c454:	f8c0 e000 	str.w	lr, [r0]
9001c458:	e766      	b.n	9001c328 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
9001c45a:	426d      	negs	r5, r5
9001c45c:	fb95 f4f6 	sdiv	r4, r5, r6
9001c460:	f1c4 0e00 	rsb	lr, r4, #0
9001c464:	fb06 5514 	mls	r5, r6, r4, r5
9001c468:	f8c0 e004 	str.w	lr, [r0, #4]
9001c46c:	6085      	str	r5, [r0, #8]
9001c46e:	2d00      	cmp	r5, #0
9001c470:	f43f af64 	beq.w	9001c33c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
9001c474:	43e4      	mvns	r4, r4
9001c476:	1b75      	subs	r5, r6, r5
9001c478:	6044      	str	r4, [r0, #4]
9001c47a:	e75e      	b.n	9001c33a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
9001c47c:	3d800000 	.word	0x3d800000

9001c480 <_ZN8touchgfx7Unicode6strlenEPKt>:
9001c480:	4602      	mov	r2, r0
9001c482:	b148      	cbz	r0, 9001c498 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
9001c484:	2300      	movs	r3, #0
9001c486:	b298      	uxth	r0, r3
9001c488:	3301      	adds	r3, #1
9001c48a:	eb02 0143 	add.w	r1, r2, r3, lsl #1
9001c48e:	f831 1c02 	ldrh.w	r1, [r1, #-2]
9001c492:	2900      	cmp	r1, #0
9001c494:	d1f7      	bne.n	9001c486 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
9001c496:	4770      	bx	lr
9001c498:	4770      	bx	lr

9001c49a <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
9001c49a:	b530      	push	{r4, r5, lr}
9001c49c:	4604      	mov	r4, r0
9001c49e:	b159      	cbz	r1, 9001c4b8 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
9001c4a0:	b148      	cbz	r0, 9001c4b6 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
9001c4a2:	2300      	movs	r3, #0
9001c4a4:	b298      	uxth	r0, r3
9001c4a6:	4282      	cmp	r2, r0
9001c4a8:	d905      	bls.n	9001c4b6 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
9001c4aa:	5ccd      	ldrb	r5, [r1, r3]
9001c4ac:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
9001c4b0:	3301      	adds	r3, #1
9001c4b2:	2d00      	cmp	r5, #0
9001c4b4:	d1f6      	bne.n	9001c4a4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
9001c4b6:	bd30      	pop	{r4, r5, pc}
9001c4b8:	4608      	mov	r0, r1
9001c4ba:	e7fc      	b.n	9001c4b6 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

9001c4bc <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
9001c4bc:	b5f0      	push	{r4, r5, r6, r7, lr}
9001c4be:	b08b      	sub	sp, #44	@ 0x2c
9001c4c0:	468c      	mov	ip, r1
9001c4c2:	4604      	mov	r4, r0
9001c4c4:	2100      	movs	r1, #0
9001c4c6:	261f      	movs	r6, #31
9001c4c8:	af01      	add	r7, sp, #4
9001c4ca:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
9001c4ce:	1e71      	subs	r1, r6, #1
9001c4d0:	fb94 fef3 	sdiv	lr, r4, r3
9001c4d4:	fb03 441e 	mls	r4, r3, lr, r4
9001c4d8:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
9001c4dc:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
9001c4e0:	b2ec      	uxtb	r4, r5
9001c4e2:	2d09      	cmp	r5, #9
9001c4e4:	bfd4      	ite	le
9001c4e6:	3430      	addle	r4, #48	@ 0x30
9001c4e8:	3457      	addgt	r4, #87	@ 0x57
9001c4ea:	b2e4      	uxtb	r4, r4
9001c4ec:	55bc      	strb	r4, [r7, r6]
9001c4ee:	4674      	mov	r4, lr
9001c4f0:	b974      	cbnz	r4, 9001c510 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
9001c4f2:	2800      	cmp	r0, #0
9001c4f4:	da05      	bge.n	9001c502 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
9001c4f6:	ab0a      	add	r3, sp, #40	@ 0x28
9001c4f8:	4419      	add	r1, r3
9001c4fa:	232d      	movs	r3, #45	@ 0x2d
9001c4fc:	f801 3c24 	strb.w	r3, [r1, #-36]
9001c500:	1eb1      	subs	r1, r6, #2
9001c502:	3101      	adds	r1, #1
9001c504:	4660      	mov	r0, ip
9001c506:	4439      	add	r1, r7
9001c508:	f7ff ffc7 	bl	9001c49a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
9001c50c:	b00b      	add	sp, #44	@ 0x2c
9001c50e:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001c510:	460e      	mov	r6, r1
9001c512:	e7dc      	b.n	9001c4ce <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

9001c514 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
9001c514:	b5f0      	push	{r4, r5, r6, r7, lr}
9001c516:	468c      	mov	ip, r1
9001c518:	b08b      	sub	sp, #44	@ 0x2c
9001c51a:	2100      	movs	r1, #0
9001c51c:	ae01      	add	r6, sp, #4
9001c51e:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
9001c522:	211f      	movs	r1, #31
9001c524:	fbb0 f7f3 	udiv	r7, r0, r3
9001c528:	fb03 0517 	mls	r5, r3, r7, r0
9001c52c:	4638      	mov	r0, r7
9001c52e:	b2ec      	uxtb	r4, r5
9001c530:	2d09      	cmp	r5, #9
9001c532:	bfd4      	ite	le
9001c534:	3430      	addle	r4, #48	@ 0x30
9001c536:	3457      	addgt	r4, #87	@ 0x57
9001c538:	b2e4      	uxtb	r4, r4
9001c53a:	558c      	strb	r4, [r1, r6]
9001c53c:	1e4c      	subs	r4, r1, #1
9001c53e:	b92f      	cbnz	r7, 9001c54c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
9001c540:	4431      	add	r1, r6
9001c542:	4660      	mov	r0, ip
9001c544:	f7ff ffa9 	bl	9001c49a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
9001c548:	b00b      	add	sp, #44	@ 0x2c
9001c54a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001c54c:	4621      	mov	r1, r4
9001c54e:	e7e9      	b.n	9001c524 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

9001c550 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
9001c550:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c554:	b085      	sub	sp, #20
9001c556:	4691      	mov	r9, r2
9001c558:	6802      	ldr	r2, [r0, #0]
9001c55a:	4688      	mov	r8, r1
9001c55c:	461c      	mov	r4, r3
9001c55e:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
9001c562:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
9001c566:	4683      	mov	fp, r0
9001c568:	4610      	mov	r0, r2
9001c56a:	9103      	str	r1, [sp, #12]
9001c56c:	9302      	str	r3, [sp, #8]
9001c56e:	9201      	str	r2, [sp, #4]
9001c570:	f7ff ff86 	bl	9001c480 <_ZN8touchgfx7Unicode6strlenEPKt>
9001c574:	f1b8 0f00 	cmp.w	r8, #0
9001c578:	bf0c      	ite	eq
9001c57a:	4684      	moveq	ip, r0
9001c57c:	f100 0c01 	addne.w	ip, r0, #1
9001c580:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
9001c584:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
9001c588:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001c58a:	fa1f fc8c 	uxth.w	ip, ip
9001c58e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001c590:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
9001c594:	9903      	ldr	r1, [sp, #12]
9001c596:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
9001c59a:	d041      	beq.n	9001c620 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
9001c59c:	d834      	bhi.n	9001c608 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
9001c59e:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
9001c5a2:	d059      	beq.n	9001c658 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
9001c5a4:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
9001c5a8:	d03a      	beq.n	9001c620 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
9001c5aa:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
9001c5ae:	d034      	beq.n	9001c61a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
9001c5b0:	2400      	movs	r4, #0
9001c5b2:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
9001c5b6:	3a01      	subs	r2, #1
9001c5b8:	b169      	cbz	r1, 9001c5d6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001c5ba:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001c5bc:	458c      	cmp	ip, r1
9001c5be:	da09      	bge.n	9001c5d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
9001c5c0:	eba1 010c 	sub.w	r1, r1, ip
9001c5c4:	b289      	uxth	r1, r1
9001c5c6:	b933      	cbnz	r3, 9001c5d6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001c5c8:	2e00      	cmp	r6, #0
9001c5ca:	d051      	beq.n	9001c670 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
9001c5cc:	2800      	cmp	r0, #0
9001c5ce:	d04f      	beq.n	9001c670 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
9001c5d0:	440c      	add	r4, r1
9001c5d2:	b2a4      	uxth	r4, r4
9001c5d4:	2100      	movs	r1, #0
9001c5d6:	682b      	ldr	r3, [r5, #0]
9001c5d8:	4293      	cmp	r3, r2
9001c5da:	da07      	bge.n	9001c5ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
9001c5dc:	f1b8 0f00 	cmp.w	r8, #0
9001c5e0:	d004      	beq.n	9001c5ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
9001c5e2:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
9001c5e6:	682b      	ldr	r3, [r5, #0]
9001c5e8:	3301      	adds	r3, #1
9001c5ea:	602b      	str	r3, [r5, #0]
9001c5ec:	2730      	movs	r7, #48	@ 0x30
9001c5ee:	2c00      	cmp	r4, #0
9001c5f0:	d04e      	beq.n	9001c690 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001c5f2:	682e      	ldr	r6, [r5, #0]
9001c5f4:	3c01      	subs	r4, #1
9001c5f6:	42b2      	cmp	r2, r6
9001c5f8:	b2a4      	uxth	r4, r4
9001c5fa:	dd49      	ble.n	9001c690 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001c5fc:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
9001c600:	682b      	ldr	r3, [r5, #0]
9001c602:	3301      	adds	r3, #1
9001c604:	602b      	str	r3, [r5, #0]
9001c606:	e7f2      	b.n	9001c5ee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
9001c608:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
9001c60c:	d01d      	beq.n	9001c64a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
9001c60e:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
9001c612:	d002      	beq.n	9001c61a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
9001c614:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
9001c618:	e7c9      	b.n	9001c5ae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
9001c61a:	4684      	mov	ip, r0
9001c61c:	f04f 0800 	mov.w	r8, #0
9001c620:	2c00      	cmp	r4, #0
9001c622:	d0c6      	beq.n	9001c5b2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001c624:	b947      	cbnz	r7, 9001c638 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
9001c626:	2801      	cmp	r0, #1
9001c628:	d106      	bne.n	9001c638 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
9001c62a:	8814      	ldrh	r4, [r2, #0]
9001c62c:	2c30      	cmp	r4, #48	@ 0x30
9001c62e:	bf02      	ittt	eq
9001c630:	3202      	addeq	r2, #2
9001c632:	4638      	moveq	r0, r7
9001c634:	f8cb 2000 	streq.w	r2, [fp]
9001c638:	45bc      	cmp	ip, r7
9001c63a:	da14      	bge.n	9001c666 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
9001c63c:	b2bf      	uxth	r7, r7
9001c63e:	eba7 040c 	sub.w	r4, r7, ip
9001c642:	46bc      	mov	ip, r7
9001c644:	b2a4      	uxth	r4, r4
9001c646:	2600      	movs	r6, #0
9001c648:	e7b3      	b.n	9001c5b2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001c64a:	4684      	mov	ip, r0
9001c64c:	b16c      	cbz	r4, 9001c66a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
9001c64e:	42b8      	cmp	r0, r7
9001c650:	dd00      	ble.n	9001c654 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
9001c652:	b2b8      	uxth	r0, r7
9001c654:	2400      	movs	r4, #0
9001c656:	e003      	b.n	9001c660 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
9001c658:	f04f 0c01 	mov.w	ip, #1
9001c65c:	2400      	movs	r4, #0
9001c65e:	4660      	mov	r0, ip
9001c660:	4626      	mov	r6, r4
9001c662:	46a0      	mov	r8, r4
9001c664:	e7a5      	b.n	9001c5b2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001c666:	2400      	movs	r4, #0
9001c668:	e7ed      	b.n	9001c646 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
9001c66a:	4626      	mov	r6, r4
9001c66c:	46a0      	mov	r8, r4
9001c66e:	e7a0      	b.n	9001c5b2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001c670:	2900      	cmp	r1, #0
9001c672:	d0b0      	beq.n	9001c5d6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001c674:	2720      	movs	r7, #32
9001c676:	682e      	ldr	r6, [r5, #0]
9001c678:	2900      	cmp	r1, #0
9001c67a:	d0ac      	beq.n	9001c5d6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001c67c:	3901      	subs	r1, #1
9001c67e:	4296      	cmp	r6, r2
9001c680:	b289      	uxth	r1, r1
9001c682:	daa7      	bge.n	9001c5d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
9001c684:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
9001c688:	682b      	ldr	r3, [r5, #0]
9001c68a:	3301      	adds	r3, #1
9001c68c:	602b      	str	r3, [r5, #0]
9001c68e:	e7f2      	b.n	9001c676 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
9001c690:	b188      	cbz	r0, 9001c6b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
9001c692:	682b      	ldr	r3, [r5, #0]
9001c694:	3801      	subs	r0, #1
9001c696:	429a      	cmp	r2, r3
9001c698:	b280      	uxth	r0, r0
9001c69a:	dd0c      	ble.n	9001c6b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
9001c69c:	f8db 3000 	ldr.w	r3, [fp]
9001c6a0:	1c9c      	adds	r4, r3, #2
9001c6a2:	f8cb 4000 	str.w	r4, [fp]
9001c6a6:	881c      	ldrh	r4, [r3, #0]
9001c6a8:	682b      	ldr	r3, [r5, #0]
9001c6aa:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
9001c6ae:	682b      	ldr	r3, [r5, #0]
9001c6b0:	3301      	adds	r3, #1
9001c6b2:	602b      	str	r3, [r5, #0]
9001c6b4:	e7ec      	b.n	9001c690 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001c6b6:	2620      	movs	r6, #32
9001c6b8:	b151      	cbz	r1, 9001c6d0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
9001c6ba:	6828      	ldr	r0, [r5, #0]
9001c6bc:	3901      	subs	r1, #1
9001c6be:	4282      	cmp	r2, r0
9001c6c0:	b289      	uxth	r1, r1
9001c6c2:	dd05      	ble.n	9001c6d0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
9001c6c4:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
9001c6c8:	682b      	ldr	r3, [r5, #0]
9001c6ca:	3301      	adds	r3, #1
9001c6cc:	602b      	str	r3, [r5, #0]
9001c6ce:	e7f3      	b.n	9001c6b8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
9001c6d0:	b005      	add	sp, #20
9001c6d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001c6d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
9001c6d6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001c6da:	2400      	movs	r4, #0
9001c6dc:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
9001c6e0:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
9001c6e4:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
9001c6e8:	8014      	strh	r4, [r2, #0]
9001c6ea:	701c      	strb	r4, [r3, #0]
9001c6ec:	f888 4000 	strb.w	r4, [r8]
9001c6f0:	f88c 4000 	strb.w	r4, [ip]
9001c6f4:	f88e 4000 	strb.w	r4, [lr]
9001c6f8:	703c      	strb	r4, [r7, #0]
9001c6fa:	6804      	ldr	r4, [r0, #0]
9001c6fc:	b1a4      	cbz	r4, 9001c728 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
9001c6fe:	8824      	ldrh	r4, [r4, #0]
9001c700:	f04f 0901 	mov.w	r9, #1
9001c704:	b314      	cbz	r4, 9001c74c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001c706:	2c2b      	cmp	r4, #43	@ 0x2b
9001c708:	d001      	beq.n	9001c70e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
9001c70a:	2c20      	cmp	r4, #32
9001c70c:	d110      	bne.n	9001c730 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
9001c70e:	8014      	strh	r4, [r2, #0]
9001c710:	6804      	ldr	r4, [r0, #0]
9001c712:	b10c      	cbz	r4, 9001c718 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
9001c714:	3402      	adds	r4, #2
9001c716:	6004      	str	r4, [r0, #0]
9001c718:	680c      	ldr	r4, [r1, #0]
9001c71a:	b10c      	cbz	r4, 9001c720 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
9001c71c:	3401      	adds	r4, #1
9001c71e:	600c      	str	r4, [r1, #0]
9001c720:	6804      	ldr	r4, [r0, #0]
9001c722:	b17c      	cbz	r4, 9001c744 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
9001c724:	8824      	ldrh	r4, [r4, #0]
9001c726:	e7ed      	b.n	9001c704 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
9001c728:	680c      	ldr	r4, [r1, #0]
9001c72a:	b17c      	cbz	r4, 9001c74c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001c72c:	7824      	ldrb	r4, [r4, #0]
9001c72e:	e7e7      	b.n	9001c700 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
9001c730:	2c2d      	cmp	r4, #45	@ 0x2d
9001c732:	d102      	bne.n	9001c73a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
9001c734:	f883 9000 	strb.w	r9, [r3]
9001c738:	e7ea      	b.n	9001c710 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
9001c73a:	2c23      	cmp	r4, #35	@ 0x23
9001c73c:	d107      	bne.n	9001c74e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
9001c73e:	f888 9000 	strb.w	r9, [r8]
9001c742:	e7e5      	b.n	9001c710 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
9001c744:	680c      	ldr	r4, [r1, #0]
9001c746:	b10c      	cbz	r4, 9001c74c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001c748:	7824      	ldrb	r4, [r4, #0]
9001c74a:	e7db      	b.n	9001c704 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
9001c74c:	2400      	movs	r4, #0
9001c74e:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
9001c752:	2b09      	cmp	r3, #9
9001c754:	d901      	bls.n	9001c75a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
9001c756:	2c2a      	cmp	r4, #42	@ 0x2a
9001c758:	d122      	bne.n	9001c7a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001c75a:	2301      	movs	r3, #1
9001c75c:	2c30      	cmp	r4, #48	@ 0x30
9001c75e:	f88e 3000 	strb.w	r3, [lr]
9001c762:	d10d      	bne.n	9001c780 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
9001c764:	f88c 3000 	strb.w	r3, [ip]
9001c768:	6803      	ldr	r3, [r0, #0]
9001c76a:	b10b      	cbz	r3, 9001c770 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
9001c76c:	3302      	adds	r3, #2
9001c76e:	6003      	str	r3, [r0, #0]
9001c770:	680b      	ldr	r3, [r1, #0]
9001c772:	b10b      	cbz	r3, 9001c778 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
9001c774:	3301      	adds	r3, #1
9001c776:	600b      	str	r3, [r1, #0]
9001c778:	6803      	ldr	r3, [r0, #0]
9001c77a:	2b00      	cmp	r3, #0
9001c77c:	d02f      	beq.n	9001c7de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
9001c77e:	881c      	ldrh	r4, [r3, #0]
9001c780:	2c2a      	cmp	r4, #42	@ 0x2a
9001c782:	d135      	bne.n	9001c7f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
9001c784:	f04f 33ff 	mov.w	r3, #4294967295
9001c788:	6033      	str	r3, [r6, #0]
9001c78a:	6803      	ldr	r3, [r0, #0]
9001c78c:	b10b      	cbz	r3, 9001c792 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
9001c78e:	3302      	adds	r3, #2
9001c790:	6003      	str	r3, [r0, #0]
9001c792:	680b      	ldr	r3, [r1, #0]
9001c794:	b10b      	cbz	r3, 9001c79a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
9001c796:	3301      	adds	r3, #1
9001c798:	600b      	str	r3, [r1, #0]
9001c79a:	6803      	ldr	r3, [r0, #0]
9001c79c:	b31b      	cbz	r3, 9001c7e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
9001c79e:	881c      	ldrh	r4, [r3, #0]
9001c7a0:	2c2e      	cmp	r4, #46	@ 0x2e
9001c7a2:	d11a      	bne.n	9001c7da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001c7a4:	2301      	movs	r3, #1
9001c7a6:	703b      	strb	r3, [r7, #0]
9001c7a8:	6803      	ldr	r3, [r0, #0]
9001c7aa:	b10b      	cbz	r3, 9001c7b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
9001c7ac:	3302      	adds	r3, #2
9001c7ae:	6003      	str	r3, [r0, #0]
9001c7b0:	680b      	ldr	r3, [r1, #0]
9001c7b2:	b10b      	cbz	r3, 9001c7b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
9001c7b4:	3301      	adds	r3, #1
9001c7b6:	600b      	str	r3, [r1, #0]
9001c7b8:	6803      	ldr	r3, [r0, #0]
9001c7ba:	2b00      	cmp	r3, #0
9001c7bc:	d036      	beq.n	9001c82c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
9001c7be:	881b      	ldrh	r3, [r3, #0]
9001c7c0:	2b2a      	cmp	r3, #42	@ 0x2a
9001c7c2:	d137      	bne.n	9001c834 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
9001c7c4:	f04f 33ff 	mov.w	r3, #4294967295
9001c7c8:	602b      	str	r3, [r5, #0]
9001c7ca:	6803      	ldr	r3, [r0, #0]
9001c7cc:	b10b      	cbz	r3, 9001c7d2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
9001c7ce:	3302      	adds	r3, #2
9001c7d0:	6003      	str	r3, [r0, #0]
9001c7d2:	680b      	ldr	r3, [r1, #0]
9001c7d4:	b10b      	cbz	r3, 9001c7da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001c7d6:	3301      	adds	r3, #1
9001c7d8:	600b      	str	r3, [r1, #0]
9001c7da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001c7de:	680c      	ldr	r4, [r1, #0]
9001c7e0:	b134      	cbz	r4, 9001c7f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
9001c7e2:	7824      	ldrb	r4, [r4, #0]
9001c7e4:	e7cc      	b.n	9001c780 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
9001c7e6:	680b      	ldr	r3, [r1, #0]
9001c7e8:	2b00      	cmp	r3, #0
9001c7ea:	d0f6      	beq.n	9001c7da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001c7ec:	781c      	ldrb	r4, [r3, #0]
9001c7ee:	e7d7      	b.n	9001c7a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001c7f0:	2300      	movs	r3, #0
9001c7f2:	220a      	movs	r2, #10
9001c7f4:	6033      	str	r3, [r6, #0]
9001c7f6:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
9001c7fa:	fa1f f38c 	uxth.w	r3, ip
9001c7fe:	2b09      	cmp	r3, #9
9001c800:	d8ce      	bhi.n	9001c7a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001c802:	6833      	ldr	r3, [r6, #0]
9001c804:	fb02 c303 	mla	r3, r2, r3, ip
9001c808:	6033      	str	r3, [r6, #0]
9001c80a:	6803      	ldr	r3, [r0, #0]
9001c80c:	b10b      	cbz	r3, 9001c812 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
9001c80e:	3302      	adds	r3, #2
9001c810:	6003      	str	r3, [r0, #0]
9001c812:	680b      	ldr	r3, [r1, #0]
9001c814:	b10b      	cbz	r3, 9001c81a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
9001c816:	3301      	adds	r3, #1
9001c818:	600b      	str	r3, [r1, #0]
9001c81a:	6803      	ldr	r3, [r0, #0]
9001c81c:	b10b      	cbz	r3, 9001c822 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
9001c81e:	881c      	ldrh	r4, [r3, #0]
9001c820:	e7e9      	b.n	9001c7f6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001c822:	680c      	ldr	r4, [r1, #0]
9001c824:	2c00      	cmp	r4, #0
9001c826:	d0e6      	beq.n	9001c7f6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001c828:	7824      	ldrb	r4, [r4, #0]
9001c82a:	e7e4      	b.n	9001c7f6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001c82c:	680b      	ldr	r3, [r1, #0]
9001c82e:	b10b      	cbz	r3, 9001c834 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
9001c830:	781b      	ldrb	r3, [r3, #0]
9001c832:	e7c5      	b.n	9001c7c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
9001c834:	2200      	movs	r2, #0
9001c836:	240a      	movs	r4, #10
9001c838:	602a      	str	r2, [r5, #0]
9001c83a:	3b30      	subs	r3, #48	@ 0x30
9001c83c:	682a      	ldr	r2, [r5, #0]
9001c83e:	b29e      	uxth	r6, r3
9001c840:	2e09      	cmp	r6, #9
9001c842:	d813      	bhi.n	9001c86c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
9001c844:	fb04 3302 	mla	r3, r4, r2, r3
9001c848:	602b      	str	r3, [r5, #0]
9001c84a:	6803      	ldr	r3, [r0, #0]
9001c84c:	b10b      	cbz	r3, 9001c852 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
9001c84e:	3302      	adds	r3, #2
9001c850:	6003      	str	r3, [r0, #0]
9001c852:	680b      	ldr	r3, [r1, #0]
9001c854:	b10b      	cbz	r3, 9001c85a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
9001c856:	3301      	adds	r3, #1
9001c858:	600b      	str	r3, [r1, #0]
9001c85a:	6803      	ldr	r3, [r0, #0]
9001c85c:	b10b      	cbz	r3, 9001c862 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
9001c85e:	881b      	ldrh	r3, [r3, #0]
9001c860:	e7eb      	b.n	9001c83a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001c862:	680b      	ldr	r3, [r1, #0]
9001c864:	2b00      	cmp	r3, #0
9001c866:	d0e8      	beq.n	9001c83a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001c868:	781b      	ldrb	r3, [r3, #0]
9001c86a:	e7e6      	b.n	9001c83a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001c86c:	2a06      	cmp	r2, #6
9001c86e:	bfa8      	it	ge
9001c870:	2206      	movge	r2, #6
9001c872:	602a      	str	r2, [r5, #0]
9001c874:	e7b1      	b.n	9001c7da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

9001c876 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
9001c876:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c87a:	b0a3      	sub	sp, #140	@ 0x8c
9001c87c:	2600      	movs	r6, #0
9001c87e:	4607      	mov	r7, r0
9001c880:	4688      	mov	r8, r1
9001c882:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
9001c886:	4631      	mov	r1, r6
9001c888:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
9001c88a:	4648      	mov	r0, r9
9001c88c:	960d      	str	r6, [sp, #52]	@ 0x34
9001c88e:	e9cd 3208 	strd	r3, r2, [sp, #32]
9001c892:	2242      	movs	r2, #66	@ 0x42
9001c894:	f011 f83e 	bl	9002d914 <memset>
9001c898:	b15f      	cbz	r7, 9001c8b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
9001c89a:	f108 3aff 	add.w	sl, r8, #4294967295
9001c89e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001c8a0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001c8a2:	b152      	cbz	r2, 9001c8ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
9001c8a4:	8812      	ldrh	r2, [r2, #0]
9001c8a6:	b10a      	cbz	r2, 9001c8ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
9001c8a8:	459a      	cmp	sl, r3
9001c8aa:	dc2e      	bgt.n	9001c90a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
9001c8ac:	2200      	movs	r2, #0
9001c8ae:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
9001c8b2:	4638      	mov	r0, r7
9001c8b4:	b023      	add	sp, #140	@ 0x8c
9001c8b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c8ba:	9a08      	ldr	r2, [sp, #32]
9001c8bc:	2a00      	cmp	r2, #0
9001c8be:	d0f5      	beq.n	9001c8ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
9001c8c0:	7812      	ldrb	r2, [r2, #0]
9001c8c2:	e7f0      	b.n	9001c8a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
9001c8c4:	2d00      	cmp	r5, #0
9001c8c6:	d0ea      	beq.n	9001c89e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001c8c8:	782a      	ldrb	r2, [r5, #0]
9001c8ca:	b142      	cbz	r2, 9001c8de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
9001c8cc:	2a25      	cmp	r2, #37	@ 0x25
9001c8ce:	d001      	beq.n	9001c8d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
9001c8d0:	459a      	cmp	sl, r3
9001c8d2:	dc08      	bgt.n	9001c8e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
9001c8d4:	f1bb 0f00 	cmp.w	fp, #0
9001c8d8:	d121      	bne.n	9001c91e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
9001c8da:	2d00      	cmp	r5, #0
9001c8dc:	d0df      	beq.n	9001c89e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001c8de:	782a      	ldrb	r2, [r5, #0]
9001c8e0:	f04f 0b00 	mov.w	fp, #0
9001c8e4:	e01d      	b.n	9001c922 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
9001c8e6:	f1bb 0f00 	cmp.w	fp, #0
9001c8ea:	d077      	beq.n	9001c9dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
9001c8ec:	f8bb 2000 	ldrh.w	r2, [fp]
9001c8f0:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
9001c8f4:	f1bb 0f00 	cmp.w	fp, #0
9001c8f8:	d002      	beq.n	9001c900 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
9001c8fa:	f10b 0202 	add.w	r2, fp, #2
9001c8fe:	9209      	str	r2, [sp, #36]	@ 0x24
9001c900:	b10d      	cbz	r5, 9001c906 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
9001c902:	3501      	adds	r5, #1
9001c904:	9508      	str	r5, [sp, #32]
9001c906:	3301      	adds	r3, #1
9001c908:	930d      	str	r3, [sp, #52]	@ 0x34
9001c90a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001c90c:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
9001c910:	f1bb 0f00 	cmp.w	fp, #0
9001c914:	d0d6      	beq.n	9001c8c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
9001c916:	f8bb 2000 	ldrh.w	r2, [fp]
9001c91a:	2a00      	cmp	r2, #0
9001c91c:	d1d6      	bne.n	9001c8cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
9001c91e:	f8bb 2000 	ldrh.w	r2, [fp]
9001c922:	2a00      	cmp	r2, #0
9001c924:	d0bb      	beq.n	9001c89e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001c926:	459a      	cmp	sl, r3
9001c928:	ddb9      	ble.n	9001c89e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001c92a:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
9001c92e:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
9001c932:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
9001c936:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
9001c93a:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
9001c93e:	960e      	str	r6, [sp, #56]	@ 0x38
9001c940:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
9001c944:	960f      	str	r6, [sp, #60]	@ 0x3c
9001c946:	f1bb 0f00 	cmp.w	fp, #0
9001c94a:	d002      	beq.n	9001c952 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
9001c94c:	f10b 0302 	add.w	r3, fp, #2
9001c950:	9309      	str	r3, [sp, #36]	@ 0x24
9001c952:	b10d      	cbz	r5, 9001c958 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
9001c954:	1c6b      	adds	r3, r5, #1
9001c956:	9308      	str	r3, [sp, #32]
9001c958:	ab0f      	add	r3, sp, #60	@ 0x3c
9001c95a:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
9001c95e:	a908      	add	r1, sp, #32
9001c960:	a809      	add	r0, sp, #36	@ 0x24
9001c962:	9305      	str	r3, [sp, #20]
9001c964:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
9001c968:	9304      	str	r3, [sp, #16]
9001c96a:	ab0e      	add	r3, sp, #56	@ 0x38
9001c96c:	9303      	str	r3, [sp, #12]
9001c96e:	ab0c      	add	r3, sp, #48	@ 0x30
9001c970:	9302      	str	r3, [sp, #8]
9001c972:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
9001c976:	9301      	str	r3, [sp, #4]
9001c978:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
9001c97c:	9300      	str	r3, [sp, #0]
9001c97e:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
9001c982:	f7ff fea8 	bl	9001c6d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
9001c986:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c988:	2b00      	cmp	r3, #0
9001c98a:	bfbf      	itttt	lt
9001c98c:	6823      	ldrlt	r3, [r4, #0]
9001c98e:	3404      	addlt	r4, #4
9001c990:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
9001c994:	930e      	strlt	r3, [sp, #56]	@ 0x38
9001c996:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001c998:	2b00      	cmp	r3, #0
9001c99a:	bfbe      	ittt	lt
9001c99c:	6823      	ldrlt	r3, [r4, #0]
9001c99e:	3404      	addlt	r4, #4
9001c9a0:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
9001c9a4:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001c9a8:	bfb8      	it	lt
9001c9aa:	930f      	strlt	r3, [sp, #60]	@ 0x3c
9001c9ac:	b1d9      	cbz	r1, 9001c9e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
9001c9ae:	880b      	ldrh	r3, [r1, #0]
9001c9b0:	2b69      	cmp	r3, #105	@ 0x69
9001c9b2:	d01f      	beq.n	9001c9f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001c9b4:	d82f      	bhi.n	9001ca16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
9001c9b6:	2b58      	cmp	r3, #88	@ 0x58
9001c9b8:	d01c      	beq.n	9001c9f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001c9ba:	d818      	bhi.n	9001c9ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
9001c9bc:	2b25      	cmp	r3, #37	@ 0x25
9001c9be:	d034      	beq.n	9001ca2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
9001c9c0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001c9c2:	e9cd 5b08 	strd	r5, fp, [sp, #32]
9001c9c6:	f1bb 0f00 	cmp.w	fp, #0
9001c9ca:	f000 80b7 	beq.w	9001cb3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
9001c9ce:	f8bb 5000 	ldrh.w	r5, [fp]
9001c9d2:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
9001c9d6:	3301      	adds	r3, #1
9001c9d8:	930d      	str	r3, [sp, #52]	@ 0x34
9001c9da:	e029      	b.n	9001ca30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
9001c9dc:	b10d      	cbz	r5, 9001c9e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
9001c9de:	782a      	ldrb	r2, [r5, #0]
9001c9e0:	e786      	b.n	9001c8f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
9001c9e2:	462a      	mov	r2, r5
9001c9e4:	e784      	b.n	9001c8f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
9001c9e6:	2a00      	cmp	r2, #0
9001c9e8:	d0ea      	beq.n	9001c9c0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001c9ea:	7813      	ldrb	r3, [r2, #0]
9001c9ec:	e7e0      	b.n	9001c9b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
9001c9ee:	3b63      	subs	r3, #99	@ 0x63
9001c9f0:	2b01      	cmp	r3, #1
9001c9f2:	d8e5      	bhi.n	9001c9c0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001c9f4:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
9001c9f8:	b329      	cbz	r1, 9001ca46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
9001c9fa:	880b      	ldrh	r3, [r1, #0]
9001c9fc:	2b69      	cmp	r3, #105	@ 0x69
9001c9fe:	d063      	beq.n	9001cac8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
9001ca00:	d825      	bhi.n	9001ca4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
9001ca02:	2b63      	cmp	r3, #99	@ 0x63
9001ca04:	d038      	beq.n	9001ca78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
9001ca06:	2b64      	cmp	r3, #100	@ 0x64
9001ca08:	d05e      	beq.n	9001cac8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
9001ca0a:	2b58      	cmp	r3, #88	@ 0x58
9001ca0c:	d07a      	beq.n	9001cb04 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
9001ca0e:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
9001ca12:	4625      	mov	r5, r4
9001ca14:	e036      	b.n	9001ca84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001ca16:	2b73      	cmp	r3, #115	@ 0x73
9001ca18:	d0ec      	beq.n	9001c9f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001ca1a:	d802      	bhi.n	9001ca22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
9001ca1c:	2b6f      	cmp	r3, #111	@ 0x6f
9001ca1e:	d1cf      	bne.n	9001c9c0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001ca20:	e7e8      	b.n	9001c9f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001ca22:	2b75      	cmp	r3, #117	@ 0x75
9001ca24:	d0e6      	beq.n	9001c9f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001ca26:	2b78      	cmp	r3, #120	@ 0x78
9001ca28:	e7f9      	b.n	9001ca1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
9001ca2a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001ca2c:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
9001ca30:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001ca32:	b10b      	cbz	r3, 9001ca38 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
9001ca34:	3302      	adds	r3, #2
9001ca36:	9309      	str	r3, [sp, #36]	@ 0x24
9001ca38:	9b08      	ldr	r3, [sp, #32]
9001ca3a:	2b00      	cmp	r3, #0
9001ca3c:	f43f af2f 	beq.w	9001c89e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001ca40:	3301      	adds	r3, #1
9001ca42:	9308      	str	r3, [sp, #32]
9001ca44:	e72b      	b.n	9001c89e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001ca46:	2a00      	cmp	r2, #0
9001ca48:	d0e1      	beq.n	9001ca0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001ca4a:	7813      	ldrb	r3, [r2, #0]
9001ca4c:	e7d6      	b.n	9001c9fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
9001ca4e:	2b73      	cmp	r3, #115	@ 0x73
9001ca50:	d036      	beq.n	9001cac0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
9001ca52:	d807      	bhi.n	9001ca64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
9001ca54:	2b6f      	cmp	r3, #111	@ 0x6f
9001ca56:	d1da      	bne.n	9001ca0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001ca58:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001ca5a:	1d25      	adds	r5, r4, #4
9001ca5c:	2308      	movs	r3, #8
9001ca5e:	eba8 0202 	sub.w	r2, r8, r2
9001ca62:	e049      	b.n	9001caf8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
9001ca64:	2b75      	cmp	r3, #117	@ 0x75
9001ca66:	d042      	beq.n	9001caee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
9001ca68:	2b78      	cmp	r3, #120	@ 0x78
9001ca6a:	d1d0      	bne.n	9001ca0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001ca6c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001ca6e:	1d25      	adds	r5, r4, #4
9001ca70:	2310      	movs	r3, #16
9001ca72:	eba8 0202 	sub.w	r2, r8, r2
9001ca76:	e03f      	b.n	9001caf8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
9001ca78:	6823      	ldr	r3, [r4, #0]
9001ca7a:	1d25      	adds	r5, r4, #4
9001ca7c:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
9001ca80:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
9001ca84:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001ca86:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
9001ca8a:	2b00      	cmp	r3, #0
9001ca8c:	d051      	beq.n	9001cb32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
9001ca8e:	881a      	ldrh	r2, [r3, #0]
9001ca90:	a80d      	add	r0, sp, #52	@ 0x34
9001ca92:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
9001ca96:	462c      	mov	r4, r5
9001ca98:	9005      	str	r0, [sp, #20]
9001ca9a:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
9001ca9e:	9004      	str	r0, [sp, #16]
9001caa0:	980e      	ldr	r0, [sp, #56]	@ 0x38
9001caa2:	9003      	str	r0, [sp, #12]
9001caa4:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
9001caa8:	9002      	str	r0, [sp, #8]
9001caaa:	980f      	ldr	r0, [sp, #60]	@ 0x3c
9001caac:	9001      	str	r0, [sp, #4]
9001caae:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
9001cab2:	e9cd 8706 	strd	r8, r7, [sp, #24]
9001cab6:	9000      	str	r0, [sp, #0]
9001cab8:	a810      	add	r0, sp, #64	@ 0x40
9001caba:	f7ff fd49 	bl	9001c550 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
9001cabe:	e7b7      	b.n	9001ca30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
9001cac0:	1d25      	adds	r5, r4, #4
9001cac2:	6823      	ldr	r3, [r4, #0]
9001cac4:	9310      	str	r3, [sp, #64]	@ 0x40
9001cac6:	e7dd      	b.n	9001ca84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001cac8:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001caca:	230a      	movs	r3, #10
9001cacc:	4649      	mov	r1, r9
9001cace:	6820      	ldr	r0, [r4, #0]
9001cad0:	eba8 0202 	sub.w	r2, r8, r2
9001cad4:	1d25      	adds	r5, r4, #4
9001cad6:	b292      	uxth	r2, r2
9001cad8:	f7ff fcf0 	bl	9001c4bc <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
9001cadc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
9001cae0:	2b2d      	cmp	r3, #45	@ 0x2d
9001cae2:	d1cf      	bne.n	9001ca84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001cae4:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001cae8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001caea:	3302      	adds	r3, #2
9001caec:	e7ea      	b.n	9001cac4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
9001caee:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001caf0:	1d25      	adds	r5, r4, #4
9001caf2:	230a      	movs	r3, #10
9001caf4:	eba8 0202 	sub.w	r2, r8, r2
9001caf8:	b292      	uxth	r2, r2
9001cafa:	4649      	mov	r1, r9
9001cafc:	6820      	ldr	r0, [r4, #0]
9001cafe:	f7ff fd09 	bl	9001c514 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
9001cb02:	e7bf      	b.n	9001ca84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001cb04:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001cb06:	2310      	movs	r3, #16
9001cb08:	4649      	mov	r1, r9
9001cb0a:	6820      	ldr	r0, [r4, #0]
9001cb0c:	eba8 0202 	sub.w	r2, r8, r2
9001cb10:	1d25      	adds	r5, r4, #4
9001cb12:	b292      	uxth	r2, r2
9001cb14:	f7ff fcfe 	bl	9001c514 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
9001cb18:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
9001cb1c:	f832 3f02 	ldrh.w	r3, [r2, #2]!
9001cb20:	2b00      	cmp	r3, #0
9001cb22:	d0af      	beq.n	9001ca84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001cb24:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
9001cb28:	2919      	cmp	r1, #25
9001cb2a:	d8f7      	bhi.n	9001cb1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
9001cb2c:	3b20      	subs	r3, #32
9001cb2e:	8013      	strh	r3, [r2, #0]
9001cb30:	e7f4      	b.n	9001cb1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
9001cb32:	9a08      	ldr	r2, [sp, #32]
9001cb34:	2a00      	cmp	r2, #0
9001cb36:	d0ab      	beq.n	9001ca90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
9001cb38:	7812      	ldrb	r2, [r2, #0]
9001cb3a:	e7a9      	b.n	9001ca90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
9001cb3c:	2d00      	cmp	r5, #0
9001cb3e:	f43f af48 	beq.w	9001c9d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
9001cb42:	782d      	ldrb	r5, [r5, #0]
9001cb44:	e745      	b.n	9001c9d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

9001cb46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
9001cb46:	b507      	push	{r0, r1, r2, lr}
9001cb48:	9300      	str	r3, [sp, #0]
9001cb4a:	4613      	mov	r3, r2
9001cb4c:	2200      	movs	r2, #0
9001cb4e:	f7ff fe92 	bl	9001c876 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
9001cb52:	b003      	add	sp, #12
9001cb54:	f85d fb04 	ldr.w	pc, [sp], #4

9001cb58 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
9001cb58:	b40c      	push	{r2, r3}
9001cb5a:	b507      	push	{r0, r1, r2, lr}
9001cb5c:	ab04      	add	r3, sp, #16
9001cb5e:	f853 2b04 	ldr.w	r2, [r3], #4
9001cb62:	9301      	str	r3, [sp, #4]
9001cb64:	f7ff ffef 	bl	9001cb46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
9001cb68:	b003      	add	sp, #12
9001cb6a:	f85d eb04 	ldr.w	lr, [sp], #4
9001cb6e:	b002      	add	sp, #8
9001cb70:	4770      	bx	lr
	...

9001cb74 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
9001cb74:	4b01      	ldr	r3, [pc, #4]	@ (9001cb7c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
9001cb76:	6018      	str	r0, [r3, #0]
9001cb78:	4770      	bx	lr
9001cb7a:	bf00      	nop
9001cb7c:	24021c74 	.word	0x24021c74

9001cb80 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
9001cb80:	4b06      	ldr	r3, [pc, #24]	@ (9001cb9c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
9001cb82:	881a      	ldrh	r2, [r3, #0]
9001cb84:	4282      	cmp	r2, r0
9001cb86:	d807      	bhi.n	9001cb98 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
9001cb88:	4b05      	ldr	r3, [pc, #20]	@ (9001cba0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
9001cb8a:	881b      	ldrh	r3, [r3, #0]
9001cb8c:	4413      	add	r3, r2
9001cb8e:	4298      	cmp	r0, r3
9001cb90:	bfac      	ite	ge
9001cb92:	2000      	movge	r0, #0
9001cb94:	2001      	movlt	r0, #1
9001cb96:	4770      	bx	lr
9001cb98:	2000      	movs	r0, #0
9001cb9a:	4770      	bx	lr
9001cb9c:	24021c94 	.word	0x24021c94
9001cba0:	24021c98 	.word	0x24021c98

9001cba4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
9001cba4:	b508      	push	{r3, lr}
9001cba6:	4601      	mov	r1, r0
9001cba8:	f7ff ffea 	bl	9001cb80 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
9001cbac:	b118      	cbz	r0, 9001cbb6 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
9001cbae:	4b02      	ldr	r3, [pc, #8]	@ (9001cbb8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
9001cbb0:	681b      	ldr	r3, [r3, #0]
9001cbb2:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
9001cbb6:	bd08      	pop	{r3, pc}
9001cbb8:	24021c78 	.word	0x24021c78

9001cbbc <_ZN8touchgfx6Bitmap10clearCacheEv>:
9001cbbc:	b5f0      	push	{r4, r5, r6, r7, lr}
9001cbbe:	4c24      	ldr	r4, [pc, #144]	@ (9001cc50 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
9001cbc0:	6823      	ldr	r3, [r4, #0]
9001cbc2:	2b00      	cmp	r3, #0
9001cbc4:	d042      	beq.n	9001cc4c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001cbc6:	4a23      	ldr	r2, [pc, #140]	@ (9001cc54 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
9001cbc8:	4d23      	ldr	r5, [pc, #140]	@ (9001cc58 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
9001cbca:	8811      	ldrh	r1, [r2, #0]
9001cbcc:	f8b5 c000 	ldrh.w	ip, [r5]
9001cbd0:	4822      	ldr	r0, [pc, #136]	@ (9001cc5c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
9001cbd2:	4461      	add	r1, ip
9001cbd4:	1c4a      	adds	r2, r1, #1
9001cbd6:	008f      	lsls	r7, r1, #2
9001cbd8:	f022 0201 	bic.w	r2, r2, #1
9001cbdc:	19de      	adds	r6, r3, r7
9001cbde:	0412      	lsls	r2, r2, #16
9001cbe0:	6006      	str	r6, [r0, #0]
9001cbe2:	4e1f      	ldr	r6, [pc, #124]	@ (9001cc60 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
9001cbe4:	0c12      	lsrs	r2, r2, #16
9001cbe6:	eb07 0742 	add.w	r7, r7, r2, lsl #1
9001cbea:	19da      	adds	r2, r3, r7
9001cbec:	6032      	str	r2, [r6, #0]
9001cbee:	220e      	movs	r2, #14
9001cbf0:	fb02 f20c 	mul.w	r2, r2, ip
9001cbf4:	3203      	adds	r2, #3
9001cbf6:	f022 0203 	bic.w	r2, r2, #3
9001cbfa:	443a      	add	r2, r7
9001cbfc:	4f19      	ldr	r7, [pc, #100]	@ (9001cc64 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
9001cbfe:	4413      	add	r3, r2
9001cc00:	603b      	str	r3, [r7, #0]
9001cc02:	2300      	movs	r3, #0
9001cc04:	4f18      	ldr	r7, [pc, #96]	@ (9001cc68 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
9001cc06:	469c      	mov	ip, r3
9001cc08:	803b      	strh	r3, [r7, #0]
9001cc0a:	4f18      	ldr	r7, [pc, #96]	@ (9001cc6c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
9001cc0c:	683f      	ldr	r7, [r7, #0]
9001cc0e:	1aba      	subs	r2, r7, r2
9001cc10:	4f17      	ldr	r7, [pc, #92]	@ (9001cc70 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
9001cc12:	603a      	str	r2, [r7, #0]
9001cc14:	f64f 77ff 	movw	r7, #65535	@ 0xffff
9001cc18:	4a16      	ldr	r2, [pc, #88]	@ (9001cc74 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
9001cc1a:	8013      	strh	r3, [r2, #0]
9001cc1c:	428b      	cmp	r3, r1
9001cc1e:	d10d      	bne.n	9001cc3c <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
9001cc20:	882d      	ldrh	r5, [r5, #0]
9001cc22:	2300      	movs	r3, #0
9001cc24:	6830      	ldr	r0, [r6, #0]
9001cc26:	240e      	movs	r4, #14
9001cc28:	429d      	cmp	r5, r3
9001cc2a:	d90f      	bls.n	9001cc4c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001cc2c:	fb04 0203 	mla	r2, r4, r3, r0
9001cc30:	3301      	adds	r3, #1
9001cc32:	7b11      	ldrb	r1, [r2, #12]
9001cc34:	f36f 1145 	bfc	r1, #5, #1
9001cc38:	7311      	strb	r1, [r2, #12]
9001cc3a:	e7f5      	b.n	9001cc28 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
9001cc3c:	6822      	ldr	r2, [r4, #0]
9001cc3e:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
9001cc42:	6802      	ldr	r2, [r0, #0]
9001cc44:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
9001cc48:	3301      	adds	r3, #1
9001cc4a:	e7e7      	b.n	9001cc1c <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
9001cc4c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001cc4e:	bf00      	nop
9001cc50:	24021c78 	.word	0x24021c78
9001cc54:	24021c94 	.word	0x24021c94
9001cc58:	24021c98 	.word	0x24021c98
9001cc5c:	24021c8c 	.word	0x24021c8c
9001cc60:	24021c7c 	.word	0x24021c7c
9001cc64:	24021c84 	.word	0x24021c84
9001cc68:	24021c96 	.word	0x24021c96
9001cc6c:	24021c80 	.word	0x24021c80
9001cc70:	24021c90 	.word	0x24021c90
9001cc74:	24021c88 	.word	0x24021c88

9001cc78 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
9001cc78:	4b06      	ldr	r3, [pc, #24]	@ (9001cc94 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
9001cc7a:	681b      	ldr	r3, [r3, #0]
9001cc7c:	b943      	cbnz	r3, 9001cc90 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001cc7e:	b139      	cbz	r1, 9001cc90 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001cc80:	4b05      	ldr	r3, [pc, #20]	@ (9001cc98 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
9001cc82:	801a      	strh	r2, [r3, #0]
9001cc84:	4b05      	ldr	r3, [pc, #20]	@ (9001cc9c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
9001cc86:	6019      	str	r1, [r3, #0]
9001cc88:	4b05      	ldr	r3, [pc, #20]	@ (9001cca0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
9001cc8a:	6018      	str	r0, [r3, #0]
9001cc8c:	f7ff bf96 	b.w	9001cbbc <_ZN8touchgfx6Bitmap10clearCacheEv>
9001cc90:	4770      	bx	lr
9001cc92:	bf00      	nop
9001cc94:	24021c84 	.word	0x24021c84
9001cc98:	24021c98 	.word	0x24021c98
9001cc9c:	24021c80 	.word	0x24021c80
9001cca0:	24021c78 	.word	0x24021c78

9001cca4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
9001cca4:	b470      	push	{r4, r5, r6}
9001cca6:	4c07      	ldr	r4, [pc, #28]	@ (9001ccc4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
9001cca8:	4605      	mov	r5, r0
9001ccaa:	4610      	mov	r0, r2
9001ccac:	9a03      	ldr	r2, [sp, #12]
9001ccae:	6826      	ldr	r6, [r4, #0]
9001ccb0:	b936      	cbnz	r6, 9001ccc0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
9001ccb2:	6025      	str	r5, [r4, #0]
9001ccb4:	4c04      	ldr	r4, [pc, #16]	@ (9001ccc8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
9001ccb6:	8021      	strh	r1, [r4, #0]
9001ccb8:	4619      	mov	r1, r3
9001ccba:	bc70      	pop	{r4, r5, r6}
9001ccbc:	f7ff bfdc 	b.w	9001cc78 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
9001ccc0:	bc70      	pop	{r4, r5, r6}
9001ccc2:	4770      	bx	lr
9001ccc4:	24021c9c 	.word	0x24021c9c
9001ccc8:	24021c94 	.word	0x24021c94

9001cccc <_ZNK8touchgfx6Bitmap8getWidthEv>:
9001cccc:	4a12      	ldr	r2, [pc, #72]	@ (9001cd18 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
9001ccce:	8803      	ldrh	r3, [r0, #0]
9001ccd0:	8812      	ldrh	r2, [r2, #0]
9001ccd2:	4293      	cmp	r3, r2
9001ccd4:	d207      	bcs.n	9001cce6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
9001ccd6:	4a11      	ldr	r2, [pc, #68]	@ (9001cd1c <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
9001ccd8:	2114      	movs	r1, #20
9001ccda:	6812      	ldr	r2, [r2, #0]
9001ccdc:	fb01 2303 	mla	r3, r1, r3, r2
9001cce0:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
9001cce4:	4770      	bx	lr
9001cce6:	490e      	ldr	r1, [pc, #56]	@ (9001cd20 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
9001cce8:	8809      	ldrh	r1, [r1, #0]
9001ccea:	4411      	add	r1, r2
9001ccec:	428b      	cmp	r3, r1
9001ccee:	da04      	bge.n	9001ccfa <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
9001ccf0:	1a9b      	subs	r3, r3, r2
9001ccf2:	4a0c      	ldr	r2, [pc, #48]	@ (9001cd24 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
9001ccf4:	210e      	movs	r1, #14
9001ccf6:	6812      	ldr	r2, [r2, #0]
9001ccf8:	e7f0      	b.n	9001ccdc <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
9001ccfa:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001ccfe:	4293      	cmp	r3, r2
9001cd00:	d108      	bne.n	9001cd14 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
9001cd02:	4b09      	ldr	r3, [pc, #36]	@ (9001cd28 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
9001cd04:	781b      	ldrb	r3, [r3, #0]
9001cd06:	b91b      	cbnz	r3, 9001cd10 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
9001cd08:	4b08      	ldr	r3, [pc, #32]	@ (9001cd2c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
9001cd0a:	f9b3 0000 	ldrsh.w	r0, [r3]
9001cd0e:	4770      	bx	lr
9001cd10:	4b07      	ldr	r3, [pc, #28]	@ (9001cd30 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
9001cd12:	e7fa      	b.n	9001cd0a <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
9001cd14:	2000      	movs	r0, #0
9001cd16:	4770      	bx	lr
9001cd18:	24021c94 	.word	0x24021c94
9001cd1c:	24021c9c 	.word	0x24021c9c
9001cd20:	24021c98 	.word	0x24021c98
9001cd24:	24021c7c 	.word	0x24021c7c
9001cd28:	24021c04 	.word	0x24021c04
9001cd2c:	24021c06 	.word	0x24021c06
9001cd30:	24021c08 	.word	0x24021c08

9001cd34 <_ZNK8touchgfx6Bitmap9getHeightEv>:
9001cd34:	4a12      	ldr	r2, [pc, #72]	@ (9001cd80 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
9001cd36:	8803      	ldrh	r3, [r0, #0]
9001cd38:	8812      	ldrh	r2, [r2, #0]
9001cd3a:	4293      	cmp	r3, r2
9001cd3c:	d207      	bcs.n	9001cd4e <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
9001cd3e:	4a11      	ldr	r2, [pc, #68]	@ (9001cd84 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
9001cd40:	2114      	movs	r1, #20
9001cd42:	6812      	ldr	r2, [r2, #0]
9001cd44:	fb01 2303 	mla	r3, r1, r3, r2
9001cd48:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
9001cd4c:	4770      	bx	lr
9001cd4e:	490e      	ldr	r1, [pc, #56]	@ (9001cd88 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
9001cd50:	8809      	ldrh	r1, [r1, #0]
9001cd52:	4411      	add	r1, r2
9001cd54:	428b      	cmp	r3, r1
9001cd56:	da04      	bge.n	9001cd62 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
9001cd58:	1a9b      	subs	r3, r3, r2
9001cd5a:	4a0c      	ldr	r2, [pc, #48]	@ (9001cd8c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
9001cd5c:	210e      	movs	r1, #14
9001cd5e:	6812      	ldr	r2, [r2, #0]
9001cd60:	e7f0      	b.n	9001cd44 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
9001cd62:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001cd66:	4293      	cmp	r3, r2
9001cd68:	d108      	bne.n	9001cd7c <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
9001cd6a:	4b09      	ldr	r3, [pc, #36]	@ (9001cd90 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
9001cd6c:	781b      	ldrb	r3, [r3, #0]
9001cd6e:	b91b      	cbnz	r3, 9001cd78 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
9001cd70:	4b08      	ldr	r3, [pc, #32]	@ (9001cd94 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
9001cd72:	f9b3 0000 	ldrsh.w	r0, [r3]
9001cd76:	4770      	bx	lr
9001cd78:	4b07      	ldr	r3, [pc, #28]	@ (9001cd98 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
9001cd7a:	e7fa      	b.n	9001cd72 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
9001cd7c:	2000      	movs	r0, #0
9001cd7e:	4770      	bx	lr
9001cd80:	24021c94 	.word	0x24021c94
9001cd84:	24021c9c 	.word	0x24021c9c
9001cd88:	24021c98 	.word	0x24021c98
9001cd8c:	24021c7c 	.word	0x24021c7c
9001cd90:	24021c04 	.word	0x24021c04
9001cd94:	24021c08 	.word	0x24021c08
9001cd98:	24021c06 	.word	0x24021c06

9001cd9c <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
9001cd9c:	4a22      	ldr	r2, [pc, #136]	@ (9001ce28 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
9001cd9e:	b530      	push	{r4, r5, lr}
9001cda0:	880b      	ldrh	r3, [r1, #0]
9001cda2:	8812      	ldrh	r2, [r2, #0]
9001cda4:	4293      	cmp	r3, r2
9001cda6:	d213      	bcs.n	9001cdd0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
9001cda8:	4a20      	ldr	r2, [pc, #128]	@ (9001ce2c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
9001cdaa:	2114      	movs	r1, #20
9001cdac:	6812      	ldr	r2, [r2, #0]
9001cdae:	fb01 2303 	mla	r3, r1, r3, r2
9001cdb2:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
9001cdb6:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
9001cdba:	8a1a      	ldrh	r2, [r3, #16]
9001cdbc:	8a5b      	ldrh	r3, [r3, #18]
9001cdbe:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001cdc2:	8004      	strh	r4, [r0, #0]
9001cdc4:	f3c3 030c 	ubfx	r3, r3, #0, #13
9001cdc8:	8041      	strh	r1, [r0, #2]
9001cdca:	8082      	strh	r2, [r0, #4]
9001cdcc:	80c3      	strh	r3, [r0, #6]
9001cdce:	e024      	b.n	9001ce1a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
9001cdd0:	4917      	ldr	r1, [pc, #92]	@ (9001ce30 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
9001cdd2:	8809      	ldrh	r1, [r1, #0]
9001cdd4:	4411      	add	r1, r2
9001cdd6:	428b      	cmp	r3, r1
9001cdd8:	da10      	bge.n	9001cdfc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
9001cdda:	1a9b      	subs	r3, r3, r2
9001cddc:	220e      	movs	r2, #14
9001cdde:	4353      	muls	r3, r2
9001cde0:	4a14      	ldr	r2, [pc, #80]	@ (9001ce34 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
9001cde2:	6811      	ldr	r1, [r2, #0]
9001cde4:	18ca      	adds	r2, r1, r3
9001cde6:	5ecd      	ldrsh	r5, [r1, r3]
9001cde8:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
9001cdec:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
9001cdf0:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
9001cdf4:	8005      	strh	r5, [r0, #0]
9001cdf6:	8044      	strh	r4, [r0, #2]
9001cdf8:	8081      	strh	r1, [r0, #4]
9001cdfa:	e7e7      	b.n	9001cdcc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
9001cdfc:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001ce00:	4293      	cmp	r3, r2
9001ce02:	d10b      	bne.n	9001ce1c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
9001ce04:	4b0c      	ldr	r3, [pc, #48]	@ (9001ce38 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
9001ce06:	f9b3 1000 	ldrsh.w	r1, [r3]
9001ce0a:	4b0c      	ldr	r3, [pc, #48]	@ (9001ce3c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
9001ce0c:	8081      	strh	r1, [r0, #4]
9001ce0e:	f9b3 2000 	ldrsh.w	r2, [r3]
9001ce12:	2300      	movs	r3, #0
9001ce14:	80c2      	strh	r2, [r0, #6]
9001ce16:	8003      	strh	r3, [r0, #0]
9001ce18:	8043      	strh	r3, [r0, #2]
9001ce1a:	bd30      	pop	{r4, r5, pc}
9001ce1c:	2300      	movs	r3, #0
9001ce1e:	8003      	strh	r3, [r0, #0]
9001ce20:	8043      	strh	r3, [r0, #2]
9001ce22:	8083      	strh	r3, [r0, #4]
9001ce24:	e7d2      	b.n	9001cdcc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
9001ce26:	bf00      	nop
9001ce28:	24021c94 	.word	0x24021c94
9001ce2c:	24021c9c 	.word	0x24021c9c
9001ce30:	24021c98 	.word	0x24021c98
9001ce34:	24021c7c 	.word	0x24021c7c
9001ce38:	24021c00 	.word	0x24021c00
9001ce3c:	24021c02 	.word	0x24021c02

9001ce40 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
9001ce40:	4a17      	ldr	r2, [pc, #92]	@ (9001cea0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
9001ce42:	8803      	ldrh	r3, [r0, #0]
9001ce44:	8812      	ldrh	r2, [r2, #0]
9001ce46:	4293      	cmp	r3, r2
9001ce48:	d213      	bcs.n	9001ce72 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
9001ce4a:	4a16      	ldr	r2, [pc, #88]	@ (9001cea4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
9001ce4c:	2114      	movs	r1, #20
9001ce4e:	6812      	ldr	r2, [r2, #0]
9001ce50:	fb01 2303 	mla	r3, r1, r3, r2
9001ce54:	8a1a      	ldrh	r2, [r3, #16]
9001ce56:	8919      	ldrh	r1, [r3, #8]
9001ce58:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001ce5c:	428a      	cmp	r2, r1
9001ce5e:	db1d      	blt.n	9001ce9c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001ce60:	8a58      	ldrh	r0, [r3, #18]
9001ce62:	f3c0 000c 	ubfx	r0, r0, #0, #13
9001ce66:	895b      	ldrh	r3, [r3, #10]
9001ce68:	4298      	cmp	r0, r3
9001ce6a:	bfac      	ite	ge
9001ce6c:	2000      	movge	r0, #0
9001ce6e:	2001      	movlt	r0, #1
9001ce70:	4770      	bx	lr
9001ce72:	490d      	ldr	r1, [pc, #52]	@ (9001cea8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
9001ce74:	8809      	ldrh	r1, [r1, #0]
9001ce76:	4411      	add	r1, r2
9001ce78:	428b      	cmp	r3, r1
9001ce7a:	da0d      	bge.n	9001ce98 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
9001ce7c:	1a9b      	subs	r3, r3, r2
9001ce7e:	4a0b      	ldr	r2, [pc, #44]	@ (9001ceac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
9001ce80:	210e      	movs	r1, #14
9001ce82:	6812      	ldr	r2, [r2, #0]
9001ce84:	fb01 2303 	mla	r3, r1, r3, r2
9001ce88:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
9001ce8c:	891a      	ldrh	r2, [r3, #8]
9001ce8e:	4291      	cmp	r1, r2
9001ce90:	db04      	blt.n	9001ce9c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001ce92:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
9001ce96:	e7e6      	b.n	9001ce66 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
9001ce98:	2000      	movs	r0, #0
9001ce9a:	4770      	bx	lr
9001ce9c:	2001      	movs	r0, #1
9001ce9e:	4770      	bx	lr
9001cea0:	24021c94 	.word	0x24021c94
9001cea4:	24021c9c 	.word	0x24021c9c
9001cea8:	24021c98 	.word	0x24021c98
9001ceac:	24021c7c 	.word	0x24021c7c

9001ceb0 <_ZNK8touchgfx6Bitmap7getDataEv>:
9001ceb0:	4a12      	ldr	r2, [pc, #72]	@ (9001cefc <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
9001ceb2:	8803      	ldrh	r3, [r0, #0]
9001ceb4:	8811      	ldrh	r1, [r2, #0]
9001ceb6:	428b      	cmp	r3, r1
9001ceb8:	d20b      	bcs.n	9001ced2 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
9001ceba:	4a11      	ldr	r2, [pc, #68]	@ (9001cf00 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001cebc:	6812      	ldr	r2, [r2, #0]
9001cebe:	b112      	cbz	r2, 9001cec6 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
9001cec0:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001cec4:	b9c0      	cbnz	r0, 9001cef8 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
9001cec6:	4a0f      	ldr	r2, [pc, #60]	@ (9001cf04 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
9001cec8:	6811      	ldr	r1, [r2, #0]
9001ceca:	2214      	movs	r2, #20
9001cecc:	4353      	muls	r3, r2
9001cece:	58c8      	ldr	r0, [r1, r3]
9001ced0:	4770      	bx	lr
9001ced2:	4a0d      	ldr	r2, [pc, #52]	@ (9001cf08 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
9001ced4:	8812      	ldrh	r2, [r2, #0]
9001ced6:	440a      	add	r2, r1
9001ced8:	4293      	cmp	r3, r2
9001ceda:	da04      	bge.n	9001cee6 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
9001cedc:	4a08      	ldr	r2, [pc, #32]	@ (9001cf00 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001cede:	6812      	ldr	r2, [r2, #0]
9001cee0:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001cee4:	4770      	bx	lr
9001cee6:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001ceea:	4293      	cmp	r3, r2
9001ceec:	d103      	bne.n	9001cef6 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
9001ceee:	4b07      	ldr	r3, [pc, #28]	@ (9001cf0c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
9001cef0:	681b      	ldr	r3, [r3, #0]
9001cef2:	6c58      	ldr	r0, [r3, #68]	@ 0x44
9001cef4:	4770      	bx	lr
9001cef6:	2000      	movs	r0, #0
9001cef8:	4770      	bx	lr
9001cefa:	bf00      	nop
9001cefc:	24021c94 	.word	0x24021c94
9001cf00:	24021c78 	.word	0x24021c78
9001cf04:	24021c9c 	.word	0x24021c9c
9001cf08:	24021c98 	.word	0x24021c98
9001cf0c:	24021c0c 	.word	0x24021c0c

9001cf10 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
9001cf10:	4b24      	ldr	r3, [pc, #144]	@ (9001cfa4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
9001cf12:	8802      	ldrh	r2, [r0, #0]
9001cf14:	8818      	ldrh	r0, [r3, #0]
9001cf16:	4282      	cmp	r2, r0
9001cf18:	d221      	bcs.n	9001cf5e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
9001cf1a:	4b23      	ldr	r3, [pc, #140]	@ (9001cfa8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
9001cf1c:	6819      	ldr	r1, [r3, #0]
9001cf1e:	2314      	movs	r3, #20
9001cf20:	fb03 1302 	mla	r3, r3, r2, r1
9001cf24:	6858      	ldr	r0, [r3, #4]
9001cf26:	2800      	cmp	r0, #0
9001cf28:	d03a      	beq.n	9001cfa0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001cf2a:	4920      	ldr	r1, [pc, #128]	@ (9001cfac <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001cf2c:	6809      	ldr	r1, [r1, #0]
9001cf2e:	2900      	cmp	r1, #0
9001cf30:	d036      	beq.n	9001cfa0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001cf32:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
9001cf36:	2900      	cmp	r1, #0
9001cf38:	d032      	beq.n	9001cfa0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001cf3a:	891a      	ldrh	r2, [r3, #8]
9001cf3c:	8958      	ldrh	r0, [r3, #10]
9001cf3e:	4350      	muls	r0, r2
9001cf40:	7c5a      	ldrb	r2, [r3, #17]
9001cf42:	7cdb      	ldrb	r3, [r3, #19]
9001cf44:	0952      	lsrs	r2, r2, #5
9001cf46:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001cf4a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9001cf4e:	2b0b      	cmp	r3, #11
9001cf50:	bf18      	it	ne
9001cf52:	0040      	lslne	r0, r0, #1
9001cf54:	3003      	adds	r0, #3
9001cf56:	f020 0003 	bic.w	r0, r0, #3
9001cf5a:	4408      	add	r0, r1
9001cf5c:	4770      	bx	lr
9001cf5e:	4b14      	ldr	r3, [pc, #80]	@ (9001cfb0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
9001cf60:	881b      	ldrh	r3, [r3, #0]
9001cf62:	4403      	add	r3, r0
9001cf64:	429a      	cmp	r2, r3
9001cf66:	da1a      	bge.n	9001cf9e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001cf68:	4b12      	ldr	r3, [pc, #72]	@ (9001cfb4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
9001cf6a:	1a10      	subs	r0, r2, r0
9001cf6c:	210e      	movs	r1, #14
9001cf6e:	681b      	ldr	r3, [r3, #0]
9001cf70:	fb01 3000 	mla	r0, r1, r0, r3
9001cf74:	7b03      	ldrb	r3, [r0, #12]
9001cf76:	f003 031f 	and.w	r3, r3, #31
9001cf7a:	2b0b      	cmp	r3, #11
9001cf7c:	d10b      	bne.n	9001cf96 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
9001cf7e:	8903      	ldrh	r3, [r0, #8]
9001cf80:	8940      	ldrh	r0, [r0, #10]
9001cf82:	4358      	muls	r0, r3
9001cf84:	4b09      	ldr	r3, [pc, #36]	@ (9001cfac <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001cf86:	3003      	adds	r0, #3
9001cf88:	6819      	ldr	r1, [r3, #0]
9001cf8a:	f020 0303 	bic.w	r3, r0, #3
9001cf8e:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
9001cf92:	4418      	add	r0, r3
9001cf94:	4770      	bx	lr
9001cf96:	2b0d      	cmp	r3, #13
9001cf98:	d101      	bne.n	9001cf9e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001cf9a:	300d      	adds	r0, #13
9001cf9c:	4770      	bx	lr
9001cf9e:	2000      	movs	r0, #0
9001cfa0:	4770      	bx	lr
9001cfa2:	bf00      	nop
9001cfa4:	24021c94 	.word	0x24021c94
9001cfa8:	24021c9c 	.word	0x24021c9c
9001cfac:	24021c78 	.word	0x24021c78
9001cfb0:	24021c98 	.word	0x24021c98
9001cfb4:	24021c7c 	.word	0x24021c7c

9001cfb8 <_ZNK8touchgfx6Bitmap9getFormatEv>:
9001cfb8:	4b1f      	ldr	r3, [pc, #124]	@ (9001d038 <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
9001cfba:	b510      	push	{r4, lr}
9001cfbc:	8802      	ldrh	r2, [r0, #0]
9001cfbe:	881b      	ldrh	r3, [r3, #0]
9001cfc0:	429a      	cmp	r2, r3
9001cfc2:	d21a      	bcs.n	9001cffa <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
9001cfc4:	4b1d      	ldr	r3, [pc, #116]	@ (9001d03c <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
9001cfc6:	2114      	movs	r1, #20
9001cfc8:	681b      	ldr	r3, [r3, #0]
9001cfca:	fb01 3102 	mla	r1, r1, r2, r3
9001cfce:	7c4b      	ldrb	r3, [r1, #17]
9001cfd0:	0958      	lsrs	r0, r3, #5
9001cfd2:	7ccb      	ldrb	r3, [r1, #19]
9001cfd4:	491a      	ldr	r1, [pc, #104]	@ (9001d040 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
9001cfd6:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001cfda:	6809      	ldr	r1, [r1, #0]
9001cfdc:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
9001cfe0:	b2d8      	uxtb	r0, r3
9001cfe2:	b149      	cbz	r1, 9001cff8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001cfe4:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
9001cfe8:	b132      	cbz	r2, 9001cff8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001cfea:	2b0e      	cmp	r3, #14
9001cfec:	d021      	beq.n	9001d032 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
9001cfee:	280f      	cmp	r0, #15
9001cff0:	d01d      	beq.n	9001d02e <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
9001cff2:	2810      	cmp	r0, #16
9001cff4:	bf08      	it	eq
9001cff6:	2002      	moveq	r0, #2
9001cff8:	bd10      	pop	{r4, pc}
9001cffa:	4912      	ldr	r1, [pc, #72]	@ (9001d044 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
9001cffc:	8809      	ldrh	r1, [r1, #0]
9001cffe:	4419      	add	r1, r3
9001d000:	428a      	cmp	r2, r1
9001d002:	da09      	bge.n	9001d018 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
9001d004:	1ad3      	subs	r3, r2, r3
9001d006:	4a10      	ldr	r2, [pc, #64]	@ (9001d048 <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
9001d008:	210e      	movs	r1, #14
9001d00a:	6812      	ldr	r2, [r2, #0]
9001d00c:	fb01 2303 	mla	r3, r1, r3, r2
9001d010:	7b18      	ldrb	r0, [r3, #12]
9001d012:	f000 001f 	and.w	r0, r0, #31
9001d016:	e7ef      	b.n	9001cff8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001d018:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
9001d01c:	429a      	cmp	r2, r3
9001d01e:	d108      	bne.n	9001d032 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
9001d020:	f7f5 fea6 	bl	90012d70 <_ZN8touchgfx3HAL3lcdEv>
9001d024:	6803      	ldr	r3, [r0, #0]
9001d026:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001d02a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001d02c:	4718      	bx	r3
9001d02e:	2001      	movs	r0, #1
9001d030:	e7e2      	b.n	9001cff8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001d032:	2000      	movs	r0, #0
9001d034:	e7e0      	b.n	9001cff8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001d036:	bf00      	nop
9001d038:	24021c94 	.word	0x24021c94
9001d03c:	24021c9c 	.word	0x24021c9c
9001d040:	24021c78 	.word	0x24021c78
9001d044:	24021c98 	.word	0x24021c98
9001d048:	24021c7c 	.word	0x24021c7c

9001d04c <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
9001d04c:	2010      	movs	r0, #16
9001d04e:	4770      	bx	lr

9001d050 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
9001d050:	4b02      	ldr	r3, [pc, #8]	@ (9001d05c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
9001d052:	8818      	ldrh	r0, [r3, #0]
9001d054:	0040      	lsls	r0, r0, #1
9001d056:	b280      	uxth	r0, r0
9001d058:	4770      	bx	lr
9001d05a:	bf00      	nop
9001d05c:	24021c06 	.word	0x24021c06

9001d060 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
9001d060:	2bff      	cmp	r3, #255	@ 0xff
9001d062:	d05e      	beq.n	9001d122 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
9001d064:	2a0b      	cmp	r2, #11
9001d066:	d058      	beq.n	9001d11a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
9001d068:	d80e      	bhi.n	9001d088 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
9001d06a:	2a03      	cmp	r2, #3
9001d06c:	d04d      	beq.n	9001d10a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
9001d06e:	d804      	bhi.n	9001d07a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
9001d070:	2a01      	cmp	r2, #1
9001d072:	d04c      	beq.n	9001d10e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
9001d074:	d94d      	bls.n	9001d112 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
9001d076:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
9001d078:	e031      	b.n	9001d0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001d07a:	2a09      	cmp	r2, #9
9001d07c:	d04d      	beq.n	9001d11a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
9001d07e:	d84a      	bhi.n	9001d116 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
9001d080:	2a08      	cmp	r2, #8
9001d082:	d048      	beq.n	9001d116 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
9001d084:	2300      	movs	r3, #0
9001d086:	e02a      	b.n	9001d0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001d088:	2a2f      	cmp	r2, #47	@ 0x2f
9001d08a:	d02c      	beq.n	9001d0e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
9001d08c:	d811      	bhi.n	9001d0b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
9001d08e:	2a2d      	cmp	r2, #45	@ 0x2d
9001d090:	d018      	beq.n	9001d0c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
9001d092:	d831      	bhi.n	9001d0f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
9001d094:	2a2c      	cmp	r2, #44	@ 0x2c
9001d096:	d1f5      	bne.n	9001d084 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001d098:	684a      	ldr	r2, [r1, #4]
9001d09a:	7813      	ldrb	r3, [r2, #0]
9001d09c:	7852      	ldrb	r2, [r2, #1]
9001d09e:	2a00      	cmp	r2, #0
9001d0a0:	d1f0      	bne.n	9001d084 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001d0a2:	2b01      	cmp	r3, #1
9001d0a4:	d01d      	beq.n	9001d0e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
9001d0a6:	2b00      	cmp	r3, #0
9001d0a8:	d02d      	beq.n	9001d106 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
9001d0aa:	2b02      	cmp	r3, #2
9001d0ac:	d1ea      	bne.n	9001d084 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001d0ae:	68c3      	ldr	r3, [r0, #12]
9001d0b0:	e015      	b.n	9001d0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001d0b2:	2a31      	cmp	r2, #49	@ 0x31
9001d0b4:	d004      	beq.n	9001d0c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
9001d0b6:	d332      	bcc.n	9001d11e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
9001d0b8:	2a32      	cmp	r2, #50	@ 0x32
9001d0ba:	d030      	beq.n	9001d11e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
9001d0bc:	2a33      	cmp	r2, #51	@ 0x33
9001d0be:	d1e1      	bne.n	9001d084 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001d0c0:	6f43      	ldr	r3, [r0, #116]	@ 0x74
9001d0c2:	e00c      	b.n	9001d0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001d0c4:	684a      	ldr	r2, [r1, #4]
9001d0c6:	7813      	ldrb	r3, [r2, #0]
9001d0c8:	7852      	ldrb	r2, [r2, #1]
9001d0ca:	2a00      	cmp	r2, #0
9001d0cc:	d1da      	bne.n	9001d084 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001d0ce:	2b01      	cmp	r3, #1
9001d0d0:	d004      	beq.n	9001d0dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
9001d0d2:	d30f      	bcc.n	9001d0f4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
9001d0d4:	2b02      	cmp	r3, #2
9001d0d6:	d1d5      	bne.n	9001d084 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001d0d8:	6943      	ldr	r3, [r0, #20]
9001d0da:	e000      	b.n	9001d0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001d0dc:	6a43      	ldr	r3, [r0, #36]	@ 0x24
9001d0de:	4618      	mov	r0, r3
9001d0e0:	4770      	bx	lr
9001d0e2:	69c3      	ldr	r3, [r0, #28]
9001d0e4:	e7fb      	b.n	9001d0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001d0e6:	684b      	ldr	r3, [r1, #4]
9001d0e8:	781a      	ldrb	r2, [r3, #0]
9001d0ea:	785b      	ldrb	r3, [r3, #1]
9001d0ec:	2b00      	cmp	r3, #0
9001d0ee:	d1c9      	bne.n	9001d084 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001d0f0:	2a00      	cmp	r2, #0
9001d0f2:	d1f4      	bne.n	9001d0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001d0f4:	6b43      	ldr	r3, [r0, #52]	@ 0x34
9001d0f6:	e7f2      	b.n	9001d0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001d0f8:	684b      	ldr	r3, [r1, #4]
9001d0fa:	781a      	ldrb	r2, [r3, #0]
9001d0fc:	785b      	ldrb	r3, [r3, #1]
9001d0fe:	2b00      	cmp	r3, #0
9001d100:	d1c0      	bne.n	9001d084 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001d102:	2a00      	cmp	r2, #0
9001d104:	d1eb      	bne.n	9001d0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001d106:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
9001d108:	e7e9      	b.n	9001d0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001d10a:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
9001d10c:	e7e7      	b.n	9001d0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001d10e:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9001d110:	e7e5      	b.n	9001d0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001d112:	6c43      	ldr	r3, [r0, #68]	@ 0x44
9001d114:	e7e3      	b.n	9001d0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001d116:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
9001d118:	e7e1      	b.n	9001d0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001d11a:	6e43      	ldr	r3, [r0, #100]	@ 0x64
9001d11c:	e7df      	b.n	9001d0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001d11e:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
9001d120:	e7dd      	b.n	9001d0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001d122:	2a0b      	cmp	r2, #11
9001d124:	d059      	beq.n	9001d1da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
9001d126:	d80e      	bhi.n	9001d146 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
9001d128:	2a03      	cmp	r2, #3
9001d12a:	d050      	beq.n	9001d1ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
9001d12c:	d804      	bhi.n	9001d138 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
9001d12e:	2a01      	cmp	r2, #1
9001d130:	d04f      	beq.n	9001d1d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
9001d132:	d950      	bls.n	9001d1d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
9001d134:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9001d136:	e7d2      	b.n	9001d0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001d138:	2a09      	cmp	r2, #9
9001d13a:	d04e      	beq.n	9001d1da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
9001d13c:	d801      	bhi.n	9001d142 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
9001d13e:	2a08      	cmp	r2, #8
9001d140:	d1a0      	bne.n	9001d084 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001d142:	6e03      	ldr	r3, [r0, #96]	@ 0x60
9001d144:	e7cb      	b.n	9001d0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001d146:	2a2f      	cmp	r2, #47	@ 0x2f
9001d148:	d02d      	beq.n	9001d1a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
9001d14a:	d811      	bhi.n	9001d170 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
9001d14c:	2a2d      	cmp	r2, #45	@ 0x2d
9001d14e:	d018      	beq.n	9001d182 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
9001d150:	d833      	bhi.n	9001d1ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
9001d152:	2a2c      	cmp	r2, #44	@ 0x2c
9001d154:	d196      	bne.n	9001d084 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001d156:	684a      	ldr	r2, [r1, #4]
9001d158:	7813      	ldrb	r3, [r2, #0]
9001d15a:	7852      	ldrb	r2, [r2, #1]
9001d15c:	2a00      	cmp	r2, #0
9001d15e:	d191      	bne.n	9001d084 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001d160:	2b01      	cmp	r3, #1
9001d162:	d01e      	beq.n	9001d1a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001d164:	2b00      	cmp	r3, #0
9001d166:	d030      	beq.n	9001d1ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
9001d168:	2b02      	cmp	r3, #2
9001d16a:	d18b      	bne.n	9001d084 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001d16c:	6903      	ldr	r3, [r0, #16]
9001d16e:	e7b6      	b.n	9001d0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001d170:	2a31      	cmp	r2, #49	@ 0x31
9001d172:	d004      	beq.n	9001d17e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
9001d174:	d333      	bcc.n	9001d1de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
9001d176:	2a32      	cmp	r2, #50	@ 0x32
9001d178:	d031      	beq.n	9001d1de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
9001d17a:	2a33      	cmp	r2, #51	@ 0x33
9001d17c:	d182      	bne.n	9001d084 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001d17e:	6f83      	ldr	r3, [r0, #120]	@ 0x78
9001d180:	e7ad      	b.n	9001d0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001d182:	684a      	ldr	r2, [r1, #4]
9001d184:	7813      	ldrb	r3, [r2, #0]
9001d186:	7852      	ldrb	r2, [r2, #1]
9001d188:	2a00      	cmp	r2, #0
9001d18a:	f47f af7b 	bne.w	9001d084 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001d18e:	2b01      	cmp	r3, #1
9001d190:	d005      	beq.n	9001d19e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
9001d192:	d310      	bcc.n	9001d1b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
9001d194:	2b02      	cmp	r3, #2
9001d196:	f47f af75 	bne.w	9001d084 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001d19a:	6983      	ldr	r3, [r0, #24]
9001d19c:	e79f      	b.n	9001d0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001d19e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9001d1a0:	e79d      	b.n	9001d0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001d1a2:	6a03      	ldr	r3, [r0, #32]
9001d1a4:	e79b      	b.n	9001d0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001d1a6:	684b      	ldr	r3, [r1, #4]
9001d1a8:	781a      	ldrb	r2, [r3, #0]
9001d1aa:	785b      	ldrb	r3, [r3, #1]
9001d1ac:	2b00      	cmp	r3, #0
9001d1ae:	f47f af69 	bne.w	9001d084 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001d1b2:	2a00      	cmp	r2, #0
9001d1b4:	d193      	bne.n	9001d0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001d1b6:	6b83      	ldr	r3, [r0, #56]	@ 0x38
9001d1b8:	e791      	b.n	9001d0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001d1ba:	684b      	ldr	r3, [r1, #4]
9001d1bc:	781a      	ldrb	r2, [r3, #0]
9001d1be:	785b      	ldrb	r3, [r3, #1]
9001d1c0:	2b00      	cmp	r3, #0
9001d1c2:	f47f af5f 	bne.w	9001d084 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001d1c6:	2a00      	cmp	r2, #0
9001d1c8:	d189      	bne.n	9001d0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001d1ca:	6b03      	ldr	r3, [r0, #48]	@ 0x30
9001d1cc:	e787      	b.n	9001d0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001d1ce:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9001d1d0:	e785      	b.n	9001d0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001d1d2:	6d83      	ldr	r3, [r0, #88]	@ 0x58
9001d1d4:	e783      	b.n	9001d0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001d1d6:	6c83      	ldr	r3, [r0, #72]	@ 0x48
9001d1d8:	e781      	b.n	9001d0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001d1da:	6e83      	ldr	r3, [r0, #104]	@ 0x68
9001d1dc:	e77f      	b.n	9001d0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001d1de:	6f03      	ldr	r3, [r0, #112]	@ 0x70
9001d1e0:	e77d      	b.n	9001d0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

9001d1e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d1e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d1e6:	b087      	sub	sp, #28
9001d1e8:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001d1ea:	9205      	str	r2, [sp, #20]
9001d1ec:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001d1f0:	9101      	str	r1, [sp, #4]
9001d1f2:	9202      	str	r2, [sp, #8]
9001d1f4:	6841      	ldr	r1, [r0, #4]
9001d1f6:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
9001d1fa:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001d1fe:	fb01 2404 	mla	r4, r1, r4, r2
9001d202:	6802      	ldr	r2, [r0, #0]
9001d204:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001d208:	f8de 2000 	ldr.w	r2, [lr]
9001d20c:	9203      	str	r2, [sp, #12]
9001d20e:	f8de 2004 	ldr.w	r2, [lr, #4]
9001d212:	3204      	adds	r2, #4
9001d214:	9204      	str	r2, [sp, #16]
9001d216:	9a02      	ldr	r2, [sp, #8]
9001d218:	43d6      	mvns	r6, r2
9001d21a:	b2f6      	uxtb	r6, r6
9001d21c:	9a01      	ldr	r2, [sp, #4]
9001d21e:	2a00      	cmp	r2, #0
9001d220:	dc03      	bgt.n	9001d22a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001d222:	9a05      	ldr	r2, [sp, #20]
9001d224:	2a00      	cmp	r2, #0
9001d226:	f340 8129 	ble.w	9001d47c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001d22a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001d22c:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001d230:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001d234:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001d236:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001d23a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001d23e:	2b00      	cmp	r3, #0
9001d240:	dd0e      	ble.n	9001d260 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001d242:	1408      	asrs	r0, r1, #16
9001d244:	d405      	bmi.n	9001d252 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001d246:	4560      	cmp	r0, ip
9001d248:	da03      	bge.n	9001d252 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001d24a:	1410      	asrs	r0, r2, #16
9001d24c:	d401      	bmi.n	9001d252 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001d24e:	42b8      	cmp	r0, r7
9001d250:	db07      	blt.n	9001d262 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001d252:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001d254:	3b01      	subs	r3, #1
9001d256:	3402      	adds	r4, #2
9001d258:	4401      	add	r1, r0
9001d25a:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001d25c:	4402      	add	r2, r0
9001d25e:	e7ee      	b.n	9001d23e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001d260:	d071      	beq.n	9001d346 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001d262:	1e58      	subs	r0, r3, #1
9001d264:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001d266:	fb05 1500 	mla	r5, r5, r0, r1
9001d26a:	142d      	asrs	r5, r5, #16
9001d26c:	d45f      	bmi.n	9001d32e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001d26e:	4565      	cmp	r5, ip
9001d270:	da5d      	bge.n	9001d32e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001d272:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001d274:	fb05 2000 	mla	r0, r5, r0, r2
9001d278:	1400      	asrs	r0, r0, #16
9001d27a:	d458      	bmi.n	9001d32e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001d27c:	42b8      	cmp	r0, r7
9001d27e:	da56      	bge.n	9001d32e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001d280:	4699      	mov	r9, r3
9001d282:	46a2      	mov	sl, r4
9001d284:	f8bd b008 	ldrh.w	fp, [sp, #8]
9001d288:	f1b9 0f00 	cmp.w	r9, #0
9001d28c:	dd57      	ble.n	9001d33e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
9001d28e:	ea4f 4c22 	mov.w	ip, r2, asr #16
9001d292:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001d296:	9803      	ldr	r0, [sp, #12]
9001d298:	140d      	asrs	r5, r1, #16
9001d29a:	f109 39ff 	add.w	r9, r9, #4294967295
9001d29e:	fb07 000c 	mla	r0, r7, ip, r0
9001d2a2:	5d40      	ldrb	r0, [r0, r5]
9001d2a4:	9d04      	ldr	r5, [sp, #16]
9001d2a6:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001d2aa:	f8ba 5000 	ldrh.w	r5, [sl]
9001d2ae:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001d2b2:	122f      	asrs	r7, r5, #8
9001d2b4:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001d2b8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001d2bc:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001d2c0:	00ed      	lsls	r5, r5, #3
9001d2c2:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
9001d2c6:	fb17 f706 	smulbb	r7, r7, r6
9001d2ca:	b2ed      	uxtb	r5, r5
9001d2cc:	fb18 f806 	smulbb	r8, r8, r6
9001d2d0:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001d2d4:	10c7      	asrs	r7, r0, #3
9001d2d6:	fb15 f506 	smulbb	r5, r5, r6
9001d2da:	00c0      	lsls	r0, r0, #3
9001d2dc:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001d2e0:	fa1f fc8c 	uxth.w	ip, ip
9001d2e4:	b2c0      	uxtb	r0, r0
9001d2e6:	fb07 870b 	mla	r7, r7, fp, r8
9001d2ea:	fb00 500b 	mla	r0, r0, fp, r5
9001d2ee:	f10c 0501 	add.w	r5, ip, #1
9001d2f2:	b2bf      	uxth	r7, r7
9001d2f4:	b280      	uxth	r0, r0
9001d2f6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001d2fa:	f107 0801 	add.w	r8, r7, #1
9001d2fe:	1c45      	adds	r5, r0, #1
9001d300:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001d304:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001d308:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001d30c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001d30e:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001d312:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001d316:	4401      	add	r1, r0
9001d318:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001d31c:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001d31e:	ea45 0c0c 	orr.w	ip, r5, ip
9001d322:	4402      	add	r2, r0
9001d324:	ea4c 0c08 	orr.w	ip, ip, r8
9001d328:	f82a cb02 	strh.w	ip, [sl], #2
9001d32c:	e7ac      	b.n	9001d288 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001d32e:	f04f 0800 	mov.w	r8, #0
9001d332:	f8bd a008 	ldrh.w	sl, [sp, #8]
9001d336:	eb03 0008 	add.w	r0, r3, r8
9001d33a:	2800      	cmp	r0, #0
9001d33c:	dc41      	bgt.n	9001d3c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9001d33e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d342:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d346:	9b01      	ldr	r3, [sp, #4]
9001d348:	2b00      	cmp	r3, #0
9001d34a:	f340 8097 	ble.w	9001d47c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001d34e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001d352:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d354:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d358:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d35c:	eef0 6a62 	vmov.f32	s13, s5
9001d360:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001d364:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d368:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001d36c:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
9001d370:	eef0 6a43 	vmov.f32	s13, s6
9001d374:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001d378:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
9001d37c:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d380:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d384:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d388:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d38c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d390:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d394:	ee12 2a90 	vmov	r2, s5
9001d398:	eef0 2a47 	vmov.f32	s5, s14
9001d39c:	fb92 f3f3 	sdiv	r3, r2, r3
9001d3a0:	ee13 2a10 	vmov	r2, s6
9001d3a4:	9313      	str	r3, [sp, #76]	@ 0x4c
9001d3a6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d3a8:	eeb0 3a67 	vmov.f32	s6, s15
9001d3ac:	fb92 f3f3 	sdiv	r3, r2, r3
9001d3b0:	9314      	str	r3, [sp, #80]	@ 0x50
9001d3b2:	9b01      	ldr	r3, [sp, #4]
9001d3b4:	9a05      	ldr	r2, [sp, #20]
9001d3b6:	3b01      	subs	r3, #1
9001d3b8:	9301      	str	r3, [sp, #4]
9001d3ba:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d3bc:	bf08      	it	eq
9001d3be:	4613      	moveq	r3, r2
9001d3c0:	e72c      	b.n	9001d21c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001d3c2:	140f      	asrs	r7, r1, #16
9001d3c4:	d453      	bmi.n	9001d46e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001d3c6:	f8de 5008 	ldr.w	r5, [lr, #8]
9001d3ca:	42bd      	cmp	r5, r7
9001d3cc:	dd4f      	ble.n	9001d46e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001d3ce:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001d3d2:	d44c      	bmi.n	9001d46e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001d3d4:	f8de 000c 	ldr.w	r0, [lr, #12]
9001d3d8:	4560      	cmp	r0, ip
9001d3da:	dd48      	ble.n	9001d46e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001d3dc:	9803      	ldr	r0, [sp, #12]
9001d3de:	b22d      	sxth	r5, r5
9001d3e0:	fb0c 0505 	mla	r5, ip, r5, r0
9001d3e4:	5de8      	ldrb	r0, [r5, r7]
9001d3e6:	9d04      	ldr	r5, [sp, #16]
9001d3e8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001d3ec:	f06f 0501 	mvn.w	r5, #1
9001d3f0:	fb05 fb08 	mul.w	fp, r5, r8
9001d3f4:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001d3f8:	f834 500b 	ldrh.w	r5, [r4, fp]
9001d3fc:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001d400:	122f      	asrs	r7, r5, #8
9001d402:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001d406:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001d40a:	00ed      	lsls	r5, r5, #3
9001d40c:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001d410:	fb17 f706 	smulbb	r7, r7, r6
9001d414:	b2ed      	uxtb	r5, r5
9001d416:	fb19 f906 	smulbb	r9, r9, r6
9001d41a:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001d41e:	10c7      	asrs	r7, r0, #3
9001d420:	fb15 f506 	smulbb	r5, r5, r6
9001d424:	00c0      	lsls	r0, r0, #3
9001d426:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001d42a:	fa1f fc8c 	uxth.w	ip, ip
9001d42e:	b2c0      	uxtb	r0, r0
9001d430:	fb07 970a 	mla	r7, r7, sl, r9
9001d434:	fb00 500a 	mla	r0, r0, sl, r5
9001d438:	f10c 0501 	add.w	r5, ip, #1
9001d43c:	b2bf      	uxth	r7, r7
9001d43e:	b280      	uxth	r0, r0
9001d440:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001d444:	f107 0901 	add.w	r9, r7, #1
9001d448:	1c45      	adds	r5, r0, #1
9001d44a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001d44e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001d452:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001d456:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001d45a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001d45e:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001d462:	ea45 0c0c 	orr.w	ip, r5, ip
9001d466:	ea4c 0c09 	orr.w	ip, ip, r9
9001d46a:	f824 c00b 	strh.w	ip, [r4, fp]
9001d46e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001d470:	f108 38ff 	add.w	r8, r8, #4294967295
9001d474:	4401      	add	r1, r0
9001d476:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001d478:	4402      	add	r2, r0
9001d47a:	e75c      	b.n	9001d336 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9001d47c:	b007      	add	sp, #28
9001d47e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001d482 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d482:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d486:	b085      	sub	sp, #20
9001d488:	4693      	mov	fp, r2
9001d48a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001d48e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001d490:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001d492:	6870      	ldr	r0, [r6, #4]
9001d494:	9100      	str	r1, [sp, #0]
9001d496:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001d49a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
9001d49e:	fb00 2404 	mla	r4, r0, r4, r2
9001d4a2:	6832      	ldr	r2, [r6, #0]
9001d4a4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001d4a8:	682a      	ldr	r2, [r5, #0]
9001d4aa:	9201      	str	r2, [sp, #4]
9001d4ac:	686a      	ldr	r2, [r5, #4]
9001d4ae:	3204      	adds	r2, #4
9001d4b0:	9202      	str	r2, [sp, #8]
9001d4b2:	9a00      	ldr	r2, [sp, #0]
9001d4b4:	2a00      	cmp	r2, #0
9001d4b6:	dc03      	bgt.n	9001d4c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001d4b8:	f1bb 0f00 	cmp.w	fp, #0
9001d4bc:	f340 80a0 	ble.w	9001d600 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001d4c0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001d4c2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001d4c6:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001d4ca:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001d4cc:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001d4d0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001d4d4:	2b00      	cmp	r3, #0
9001d4d6:	dd0c      	ble.n	9001d4f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001d4d8:	1406      	asrs	r6, r0, #16
9001d4da:	d405      	bmi.n	9001d4e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001d4dc:	454e      	cmp	r6, r9
9001d4de:	da03      	bge.n	9001d4e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001d4e0:	1416      	asrs	r6, r2, #16
9001d4e2:	d401      	bmi.n	9001d4e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001d4e4:	4546      	cmp	r6, r8
9001d4e6:	db05      	blt.n	9001d4f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001d4e8:	4470      	add	r0, lr
9001d4ea:	4462      	add	r2, ip
9001d4ec:	3b01      	subs	r3, #1
9001d4ee:	3402      	adds	r4, #2
9001d4f0:	e7f0      	b.n	9001d4d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001d4f2:	d00f      	beq.n	9001d514 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001d4f4:	1e5e      	subs	r6, r3, #1
9001d4f6:	fb0e 0706 	mla	r7, lr, r6, r0
9001d4fa:	143f      	asrs	r7, r7, #16
9001d4fc:	d541      	bpl.n	9001d582 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
9001d4fe:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001d502:	4698      	mov	r8, r3
9001d504:	9603      	str	r6, [sp, #12]
9001d506:	f1b8 0f00 	cmp.w	r8, #0
9001d50a:	dc59      	bgt.n	9001d5c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001d50c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d510:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d514:	9b00      	ldr	r3, [sp, #0]
9001d516:	2b00      	cmp	r3, #0
9001d518:	dd72      	ble.n	9001d600 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001d51a:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d51e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d520:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d524:	eeb0 6a62 	vmov.f32	s12, s5
9001d528:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d52c:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d530:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d534:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001d538:	eeb0 6a43 	vmov.f32	s12, s6
9001d53c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d540:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001d544:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d548:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d54c:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d550:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d554:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d558:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d55c:	ee12 2a90 	vmov	r2, s5
9001d560:	eef0 2a47 	vmov.f32	s5, s14
9001d564:	fb92 fef3 	sdiv	lr, r2, r3
9001d568:	ee13 2a10 	vmov	r2, s6
9001d56c:	eeb0 3a67 	vmov.f32	s6, s15
9001d570:	fb92 fcf3 	sdiv	ip, r2, r3
9001d574:	9b00      	ldr	r3, [sp, #0]
9001d576:	3b01      	subs	r3, #1
9001d578:	9300      	str	r3, [sp, #0]
9001d57a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d57c:	bf08      	it	eq
9001d57e:	465b      	moveq	r3, fp
9001d580:	e797      	b.n	9001d4b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001d582:	454f      	cmp	r7, r9
9001d584:	dabb      	bge.n	9001d4fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001d586:	fb0c 2606 	mla	r6, ip, r6, r2
9001d58a:	1436      	asrs	r6, r6, #16
9001d58c:	d4b7      	bmi.n	9001d4fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001d58e:	4546      	cmp	r6, r8
9001d590:	dab5      	bge.n	9001d4fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001d592:	461e      	mov	r6, r3
9001d594:	46a0      	mov	r8, r4
9001d596:	2e00      	cmp	r6, #0
9001d598:	ddb8      	ble.n	9001d50c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001d59a:	1417      	asrs	r7, r2, #16
9001d59c:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001d5a0:	9901      	ldr	r1, [sp, #4]
9001d5a2:	ea4f 4920 	mov.w	r9, r0, asr #16
9001d5a6:	4462      	add	r2, ip
9001d5a8:	4470      	add	r0, lr
9001d5aa:	fb0a 1707 	mla	r7, sl, r7, r1
9001d5ae:	9902      	ldr	r1, [sp, #8]
9001d5b0:	3e01      	subs	r6, #1
9001d5b2:	f817 7009 	ldrb.w	r7, [r7, r9]
9001d5b6:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001d5ba:	f828 7b02 	strh.w	r7, [r8], #2
9001d5be:	e7ea      	b.n	9001d596 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
9001d5c0:	ea5f 4920 	movs.w	r9, r0, asr #16
9001d5c4:	d417      	bmi.n	9001d5f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001d5c6:	68ae      	ldr	r6, [r5, #8]
9001d5c8:	454e      	cmp	r6, r9
9001d5ca:	dd14      	ble.n	9001d5f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001d5cc:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001d5d0:	d411      	bmi.n	9001d5f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001d5d2:	68ef      	ldr	r7, [r5, #12]
9001d5d4:	4557      	cmp	r7, sl
9001d5d6:	dd0e      	ble.n	9001d5f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001d5d8:	9f01      	ldr	r7, [sp, #4]
9001d5da:	b236      	sxth	r6, r6
9001d5dc:	f06f 0101 	mvn.w	r1, #1
9001d5e0:	fb0a 7606 	mla	r6, sl, r6, r7
9001d5e4:	9f02      	ldr	r7, [sp, #8]
9001d5e6:	f816 6009 	ldrb.w	r6, [r6, r9]
9001d5ea:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001d5ee:	fb01 f608 	mul.w	r6, r1, r8
9001d5f2:	9903      	ldr	r1, [sp, #12]
9001d5f4:	538f      	strh	r7, [r1, r6]
9001d5f6:	4470      	add	r0, lr
9001d5f8:	4462      	add	r2, ip
9001d5fa:	f108 38ff 	add.w	r8, r8, #4294967295
9001d5fe:	e782      	b.n	9001d506 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001d600:	b005      	add	sp, #20
9001d602:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001d606 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d606:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d60a:	b087      	sub	sp, #28
9001d60c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9001d60e:	9205      	str	r2, [sp, #20]
9001d610:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001d614:	9102      	str	r1, [sp, #8]
9001d616:	9203      	str	r2, [sp, #12]
9001d618:	6861      	ldr	r1, [r4, #4]
9001d61a:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
9001d61e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
9001d622:	fb01 2000 	mla	r0, r1, r0, r2
9001d626:	6822      	ldr	r2, [r4, #0]
9001d628:	eb02 0240 	add.w	r2, r2, r0, lsl #1
9001d62c:	9200      	str	r2, [sp, #0]
9001d62e:	f8dc 2000 	ldr.w	r2, [ip]
9001d632:	9204      	str	r2, [sp, #16]
9001d634:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001d638:	3204      	adds	r2, #4
9001d63a:	9201      	str	r2, [sp, #4]
9001d63c:	9a03      	ldr	r2, [sp, #12]
9001d63e:	43d5      	mvns	r5, r2
9001d640:	b2ed      	uxtb	r5, r5
9001d642:	9a02      	ldr	r2, [sp, #8]
9001d644:	2a00      	cmp	r2, #0
9001d646:	dc03      	bgt.n	9001d650 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001d648:	9a05      	ldr	r2, [sp, #20]
9001d64a:	2a00      	cmp	r2, #0
9001d64c:	f340 812c 	ble.w	9001d8a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001d650:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001d652:	f9bc e008 	ldrsh.w	lr, [ip, #8]
9001d656:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001d65a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001d65c:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
9001d660:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001d664:	2b00      	cmp	r3, #0
9001d666:	dd10      	ble.n	9001d68a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001d668:	140c      	asrs	r4, r1, #16
9001d66a:	d405      	bmi.n	9001d678 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001d66c:	4574      	cmp	r4, lr
9001d66e:	da03      	bge.n	9001d678 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001d670:	1414      	asrs	r4, r2, #16
9001d672:	d401      	bmi.n	9001d678 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001d674:	42bc      	cmp	r4, r7
9001d676:	db09      	blt.n	9001d68c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001d678:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001d67a:	3b01      	subs	r3, #1
9001d67c:	9800      	ldr	r0, [sp, #0]
9001d67e:	4421      	add	r1, r4
9001d680:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001d682:	3002      	adds	r0, #2
9001d684:	4422      	add	r2, r4
9001d686:	9000      	str	r0, [sp, #0]
9001d688:	e7ec      	b.n	9001d664 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001d68a:	d071      	beq.n	9001d770 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
9001d68c:	1e5c      	subs	r4, r3, #1
9001d68e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001d690:	fb06 1604 	mla	r6, r6, r4, r1
9001d694:	1436      	asrs	r6, r6, #16
9001d696:	d45d      	bmi.n	9001d754 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001d698:	4576      	cmp	r6, lr
9001d69a:	da5b      	bge.n	9001d754 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001d69c:	9e14      	ldr	r6, [sp, #80]	@ 0x50
9001d69e:	fb06 2404 	mla	r4, r6, r4, r2
9001d6a2:	1424      	asrs	r4, r4, #16
9001d6a4:	d456      	bmi.n	9001d754 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001d6a6:	42bc      	cmp	r4, r7
9001d6a8:	da54      	bge.n	9001d754 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001d6aa:	4698      	mov	r8, r3
9001d6ac:	f8dd 9000 	ldr.w	r9, [sp]
9001d6b0:	f8bd a00c 	ldrh.w	sl, [sp, #12]
9001d6b4:	f1b8 0f00 	cmp.w	r8, #0
9001d6b8:	dd54      	ble.n	9001d764 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001d6ba:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001d6be:	1414      	asrs	r4, r2, #16
9001d6c0:	9804      	ldr	r0, [sp, #16]
9001d6c2:	140e      	asrs	r6, r1, #16
9001d6c4:	f108 38ff 	add.w	r8, r8, #4294967295
9001d6c8:	fb07 0404 	mla	r4, r7, r4, r0
9001d6cc:	9801      	ldr	r0, [sp, #4]
9001d6ce:	f814 e006 	ldrb.w	lr, [r4, r6]
9001d6d2:	f8b9 4000 	ldrh.w	r4, [r9]
9001d6d6:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001d6da:	1227      	asrs	r7, r4, #8
9001d6dc:	eb00 0b0e 	add.w	fp, r0, lr
9001d6e0:	f810 e00e 	ldrb.w	lr, [r0, lr]
9001d6e4:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001d6e8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001d6ea:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001d6ee:	f89b b001 	ldrb.w	fp, [fp, #1]
9001d6f2:	4401      	add	r1, r0
9001d6f4:	fb16 f60a 	smulbb	r6, r6, sl
9001d6f8:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001d6fa:	fb1b fb0a 	smulbb	fp, fp, sl
9001d6fe:	fb07 6705 	mla	r7, r7, r5, r6
9001d702:	10e6      	asrs	r6, r4, #3
9001d704:	00e4      	lsls	r4, r4, #3
9001d706:	4402      	add	r2, r0
9001d708:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001d70c:	b2bf      	uxth	r7, r7
9001d70e:	b2e4      	uxtb	r4, r4
9001d710:	fb06 b605 	mla	r6, r6, r5, fp
9001d714:	fb14 f405 	smulbb	r4, r4, r5
9001d718:	b2b6      	uxth	r6, r6
9001d71a:	fb0e 4e0a 	mla	lr, lr, sl, r4
9001d71e:	1c7c      	adds	r4, r7, #1
9001d720:	f106 0b01 	add.w	fp, r6, #1
9001d724:	fa1f fe8e 	uxth.w	lr, lr
9001d728:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001d72c:	f10e 0401 	add.w	r4, lr, #1
9001d730:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001d734:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001d738:	eb04 241e 	add.w	r4, r4, lr, lsr #8
9001d73c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001d740:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001d744:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9001d748:	4327      	orrs	r7, r4
9001d74a:	ea47 070b 	orr.w	r7, r7, fp
9001d74e:	f829 7b02 	strh.w	r7, [r9], #2
9001d752:	e7af      	b.n	9001d6b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
9001d754:	f04f 0e00 	mov.w	lr, #0
9001d758:	f8bd 900c 	ldrh.w	r9, [sp, #12]
9001d75c:	eb03 040e 	add.w	r4, r3, lr
9001d760:	2c00      	cmp	r4, #0
9001d762:	dc43      	bgt.n	9001d7ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
9001d764:	9a00      	ldr	r2, [sp, #0]
9001d766:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d76a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001d76e:	9300      	str	r3, [sp, #0]
9001d770:	9b02      	ldr	r3, [sp, #8]
9001d772:	2b00      	cmp	r3, #0
9001d774:	f340 8098 	ble.w	9001d8a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001d778:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001d77c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d77e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d782:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d786:	eef0 6a62 	vmov.f32	s13, s5
9001d78a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001d78e:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d792:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001d796:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
9001d79a:	eef0 6a43 	vmov.f32	s13, s6
9001d79e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001d7a2:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
9001d7a6:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d7aa:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d7ae:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d7b2:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d7b6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d7ba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d7be:	ee12 2a90 	vmov	r2, s5
9001d7c2:	eef0 2a47 	vmov.f32	s5, s14
9001d7c6:	fb92 f3f3 	sdiv	r3, r2, r3
9001d7ca:	ee13 2a10 	vmov	r2, s6
9001d7ce:	9313      	str	r3, [sp, #76]	@ 0x4c
9001d7d0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d7d2:	eeb0 3a67 	vmov.f32	s6, s15
9001d7d6:	fb92 f3f3 	sdiv	r3, r2, r3
9001d7da:	9314      	str	r3, [sp, #80]	@ 0x50
9001d7dc:	9b02      	ldr	r3, [sp, #8]
9001d7de:	9a05      	ldr	r2, [sp, #20]
9001d7e0:	3b01      	subs	r3, #1
9001d7e2:	9302      	str	r3, [sp, #8]
9001d7e4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d7e6:	bf08      	it	eq
9001d7e8:	4613      	moveq	r3, r2
9001d7ea:	e72a      	b.n	9001d642 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001d7ec:	140f      	asrs	r7, r1, #16
9001d7ee:	d454      	bmi.n	9001d89a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001d7f0:	f8dc 6008 	ldr.w	r6, [ip, #8]
9001d7f4:	42be      	cmp	r6, r7
9001d7f6:	dd50      	ble.n	9001d89a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001d7f8:	ea5f 4822 	movs.w	r8, r2, asr #16
9001d7fc:	d44d      	bmi.n	9001d89a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001d7fe:	f8dc 400c 	ldr.w	r4, [ip, #12]
9001d802:	4544      	cmp	r4, r8
9001d804:	dd49      	ble.n	9001d89a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001d806:	9c04      	ldr	r4, [sp, #16]
9001d808:	b236      	sxth	r6, r6
9001d80a:	f06f 0001 	mvn.w	r0, #1
9001d80e:	fb08 4606 	mla	r6, r8, r6, r4
9001d812:	9c01      	ldr	r4, [sp, #4]
9001d814:	fb00 fa0e 	mul.w	sl, r0, lr
9001d818:	9800      	ldr	r0, [sp, #0]
9001d81a:	f816 8007 	ldrb.w	r8, [r6, r7]
9001d81e:	eb08 0848 	add.w	r8, r8, r8, lsl #1
9001d822:	eb04 0b08 	add.w	fp, r4, r8
9001d826:	f830 400a 	ldrh.w	r4, [r0, sl]
9001d82a:	9801      	ldr	r0, [sp, #4]
9001d82c:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001d830:	1227      	asrs	r7, r4, #8
9001d832:	f89b b001 	ldrb.w	fp, [fp, #1]
9001d836:	fb16 f609 	smulbb	r6, r6, r9
9001d83a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001d83e:	f810 8008 	ldrb.w	r8, [r0, r8]
9001d842:	fb1b fb09 	smulbb	fp, fp, r9
9001d846:	fb07 6705 	mla	r7, r7, r5, r6
9001d84a:	10e6      	asrs	r6, r4, #3
9001d84c:	00e4      	lsls	r4, r4, #3
9001d84e:	9800      	ldr	r0, [sp, #0]
9001d850:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001d854:	b2bf      	uxth	r7, r7
9001d856:	b2e4      	uxtb	r4, r4
9001d858:	fb06 b605 	mla	r6, r6, r5, fp
9001d85c:	fb14 f405 	smulbb	r4, r4, r5
9001d860:	b2b6      	uxth	r6, r6
9001d862:	fb08 4809 	mla	r8, r8, r9, r4
9001d866:	1c7c      	adds	r4, r7, #1
9001d868:	f106 0b01 	add.w	fp, r6, #1
9001d86c:	fa1f f888 	uxth.w	r8, r8
9001d870:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001d874:	f108 0401 	add.w	r4, r8, #1
9001d878:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001d87c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001d880:	eb04 2418 	add.w	r4, r4, r8, lsr #8
9001d884:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001d888:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001d88c:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9001d890:	4327      	orrs	r7, r4
9001d892:	ea47 070b 	orr.w	r7, r7, fp
9001d896:	f820 700a 	strh.w	r7, [r0, sl]
9001d89a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001d89c:	f10e 3eff 	add.w	lr, lr, #4294967295
9001d8a0:	4401      	add	r1, r0
9001d8a2:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001d8a4:	4402      	add	r2, r0
9001d8a6:	e759      	b.n	9001d75c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001d8a8:	b007      	add	sp, #28
9001d8aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001d8b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d8b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d8b4:	b085      	sub	sp, #20
9001d8b6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001d8ba:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001d8bc:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001d8be:	9203      	str	r2, [sp, #12]
9001d8c0:	6870      	ldr	r0, [r6, #4]
9001d8c2:	686f      	ldr	r7, [r5, #4]
9001d8c4:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
9001d8c8:	3704      	adds	r7, #4
9001d8ca:	9101      	str	r1, [sp, #4]
9001d8cc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001d8d0:	fb00 2404 	mla	r4, r0, r4, r2
9001d8d4:	6832      	ldr	r2, [r6, #0]
9001d8d6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001d8da:	682a      	ldr	r2, [r5, #0]
9001d8dc:	9202      	str	r2, [sp, #8]
9001d8de:	9a01      	ldr	r2, [sp, #4]
9001d8e0:	2a00      	cmp	r2, #0
9001d8e2:	dc03      	bgt.n	9001d8ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001d8e4:	9a03      	ldr	r2, [sp, #12]
9001d8e6:	2a00      	cmp	r2, #0
9001d8e8:	f340 80cc 	ble.w	9001da84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001d8ec:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001d8ee:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001d8f2:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001d8f6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001d8f8:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001d8fc:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001d900:	2b00      	cmp	r3, #0
9001d902:	dd0d      	ble.n	9001d920 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001d904:	1406      	asrs	r6, r0, #16
9001d906:	d405      	bmi.n	9001d914 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001d908:	454e      	cmp	r6, r9
9001d90a:	da03      	bge.n	9001d914 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001d90c:	1416      	asrs	r6, r2, #16
9001d90e:	d401      	bmi.n	9001d914 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001d910:	4546      	cmp	r6, r8
9001d912:	db06      	blt.n	9001d922 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001d914:	9e12      	ldr	r6, [sp, #72]	@ 0x48
9001d916:	4460      	add	r0, ip
9001d918:	3b01      	subs	r3, #1
9001d91a:	3402      	adds	r4, #2
9001d91c:	4432      	add	r2, r6
9001d91e:	e7ef      	b.n	9001d900 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
9001d920:	d00f      	beq.n	9001d942 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001d922:	1e5e      	subs	r6, r3, #1
9001d924:	fb0c 0e06 	mla	lr, ip, r6, r0
9001d928:	ea5f 4e2e 	movs.w	lr, lr, asr #16
9001d92c:	d543      	bpl.n	9001d9b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
9001d92e:	4698      	mov	r8, r3
9001d930:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
9001d934:	f1b8 0f00 	cmp.w	r8, #0
9001d938:	dc71      	bgt.n	9001da1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
9001d93a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d93e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d942:	9b01      	ldr	r3, [sp, #4]
9001d944:	2b00      	cmp	r3, #0
9001d946:	f340 809d 	ble.w	9001da84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001d94a:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d94e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d950:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d954:	eeb0 6a62 	vmov.f32	s12, s5
9001d958:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d95c:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d960:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d964:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001d968:	eeb0 6a43 	vmov.f32	s12, s6
9001d96c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d970:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001d974:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d978:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d97c:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d980:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d984:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d988:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d98c:	ee12 2a90 	vmov	r2, s5
9001d990:	eef0 2a47 	vmov.f32	s5, s14
9001d994:	fb92 fcf3 	sdiv	ip, r2, r3
9001d998:	ee13 2a10 	vmov	r2, s6
9001d99c:	eeb0 3a67 	vmov.f32	s6, s15
9001d9a0:	fb92 f3f3 	sdiv	r3, r2, r3
9001d9a4:	9312      	str	r3, [sp, #72]	@ 0x48
9001d9a6:	9b01      	ldr	r3, [sp, #4]
9001d9a8:	9a03      	ldr	r2, [sp, #12]
9001d9aa:	3b01      	subs	r3, #1
9001d9ac:	9301      	str	r3, [sp, #4]
9001d9ae:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d9b0:	bf08      	it	eq
9001d9b2:	4613      	moveq	r3, r2
9001d9b4:	e793      	b.n	9001d8de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
9001d9b6:	45ce      	cmp	lr, r9
9001d9b8:	dab9      	bge.n	9001d92e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001d9ba:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001d9bc:	fb01 2606 	mla	r6, r1, r6, r2
9001d9c0:	1436      	asrs	r6, r6, #16
9001d9c2:	d4b4      	bmi.n	9001d92e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001d9c4:	4546      	cmp	r6, r8
9001d9c6:	dab2      	bge.n	9001d92e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001d9c8:	4698      	mov	r8, r3
9001d9ca:	46a2      	mov	sl, r4
9001d9cc:	f1b8 0f00 	cmp.w	r8, #0
9001d9d0:	ddb3      	ble.n	9001d93a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001d9d2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001d9d6:	1416      	asrs	r6, r2, #16
9001d9d8:	9902      	ldr	r1, [sp, #8]
9001d9da:	ea4f 4e20 	mov.w	lr, r0, asr #16
9001d9de:	f108 38ff 	add.w	r8, r8, #4294967295
9001d9e2:	4460      	add	r0, ip
9001d9e4:	fb09 1606 	mla	r6, r9, r6, r1
9001d9e8:	4928      	ldr	r1, [pc, #160]	@ (9001da8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
9001d9ea:	f816 e00e 	ldrb.w	lr, [r6, lr]
9001d9ee:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001d9f2:	eb07 0b0e 	add.w	fp, r7, lr
9001d9f6:	f89b 6001 	ldrb.w	r6, [fp, #1]
9001d9fa:	f89b 9002 	ldrb.w	r9, [fp, #2]
9001d9fe:	00f6      	lsls	r6, r6, #3
9001da00:	ea01 2909 	and.w	r9, r1, r9, lsl #8
9001da04:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001da06:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001da0a:	440a      	add	r2, r1
9001da0c:	ea49 0606 	orr.w	r6, r9, r6
9001da10:	f817 900e 	ldrb.w	r9, [r7, lr]
9001da14:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
9001da18:	f82a 6b02 	strh.w	r6, [sl], #2
9001da1c:	e7d6      	b.n	9001d9cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001da1e:	ea5f 4920 	movs.w	r9, r0, asr #16
9001da22:	d429      	bmi.n	9001da78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001da24:	68ae      	ldr	r6, [r5, #8]
9001da26:	454e      	cmp	r6, r9
9001da28:	dd26      	ble.n	9001da78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001da2a:	ea5f 4b22 	movs.w	fp, r2, asr #16
9001da2e:	d423      	bmi.n	9001da78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001da30:	68e9      	ldr	r1, [r5, #12]
9001da32:	4559      	cmp	r1, fp
9001da34:	dd20      	ble.n	9001da78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001da36:	fa0f fe86 	sxth.w	lr, r6
9001da3a:	9902      	ldr	r1, [sp, #8]
9001da3c:	fb0b 1e0e 	mla	lr, fp, lr, r1
9001da40:	f06f 0101 	mvn.w	r1, #1
9001da44:	f81e e009 	ldrb.w	lr, [lr, r9]
9001da48:	fb01 f908 	mul.w	r9, r1, r8
9001da4c:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
9001da50:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001da54:	eb07 060e 	add.w	r6, r7, lr
9001da58:	f896 b002 	ldrb.w	fp, [r6, #2]
9001da5c:	7876      	ldrb	r6, [r6, #1]
9001da5e:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
9001da62:	00f6      	lsls	r6, r6, #3
9001da64:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001da68:	ea4b 0606 	orr.w	r6, fp, r6
9001da6c:	f817 b00e 	ldrb.w	fp, [r7, lr]
9001da70:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
9001da74:	f82a 6009 	strh.w	r6, [sl, r9]
9001da78:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001da7a:	4460      	add	r0, ip
9001da7c:	f108 38ff 	add.w	r8, r8, #4294967295
9001da80:	440a      	add	r2, r1
9001da82:	e757      	b.n	9001d934 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001da84:	b005      	add	sp, #20
9001da86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001da8a:	bf00      	nop
9001da8c:	fffff800 	.word	0xfffff800

9001da90 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001da90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001da94:	b087      	sub	sp, #28
9001da96:	468b      	mov	fp, r1
9001da98:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001da9c:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001da9e:	9204      	str	r2, [sp, #16]
9001daa0:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001daa4:	6841      	ldr	r1, [r0, #4]
9001daa6:	9205      	str	r2, [sp, #20]
9001daa8:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
9001daac:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001dab0:	fb01 2404 	mla	r4, r1, r4, r2
9001dab4:	6802      	ldr	r2, [r0, #0]
9001dab6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001daba:	f8dc 2000 	ldr.w	r2, [ip]
9001dabe:	9201      	str	r2, [sp, #4]
9001dac0:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001dac4:	3204      	adds	r2, #4
9001dac6:	9202      	str	r2, [sp, #8]
9001dac8:	f1bb 0f00 	cmp.w	fp, #0
9001dacc:	dc03      	bgt.n	9001dad6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
9001dace:	9a04      	ldr	r2, [sp, #16]
9001dad0:	2a00      	cmp	r2, #0
9001dad2:	f340 8138 	ble.w	9001dd46 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001dad6:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001dad8:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001dadc:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001dae0:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001dae2:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
9001dae6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001daea:	2b00      	cmp	r3, #0
9001daec:	dd0e      	ble.n	9001db0c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001daee:	1402      	asrs	r2, r0, #16
9001daf0:	d405      	bmi.n	9001dafe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001daf2:	42ba      	cmp	r2, r7
9001daf4:	da03      	bge.n	9001dafe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001daf6:	140a      	asrs	r2, r1, #16
9001daf8:	d401      	bmi.n	9001dafe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001dafa:	42b2      	cmp	r2, r6
9001dafc:	db07      	blt.n	9001db0e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001dafe:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001db00:	3b01      	subs	r3, #1
9001db02:	3402      	adds	r4, #2
9001db04:	4410      	add	r0, r2
9001db06:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001db08:	4411      	add	r1, r2
9001db0a:	e7ee      	b.n	9001daea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
9001db0c:	d019      	beq.n	9001db42 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001db0e:	1e5a      	subs	r2, r3, #1
9001db10:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001db12:	fb05 0502 	mla	r5, r5, r2, r0
9001db16:	142d      	asrs	r5, r5, #16
9001db18:	d409      	bmi.n	9001db2e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001db1a:	42bd      	cmp	r5, r7
9001db1c:	da07      	bge.n	9001db2e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001db1e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001db20:	fb05 1202 	mla	r2, r5, r2, r1
9001db24:	1412      	asrs	r2, r2, #16
9001db26:	d402      	bmi.n	9001db2e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001db28:	42b2      	cmp	r2, r6
9001db2a:	f2c0 80ac 	blt.w	9001dc86 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
9001db2e:	f04f 0e00 	mov.w	lr, #0
9001db32:	eb03 020e 	add.w	r2, r3, lr
9001db36:	2a00      	cmp	r2, #0
9001db38:	dc3e      	bgt.n	9001dbb8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001db3a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001db3e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001db42:	f1bb 0f00 	cmp.w	fp, #0
9001db46:	f340 80fe 	ble.w	9001dd46 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001db4a:	ee30 0a04 	vadd.f32	s0, s0, s8
9001db4e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001db50:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001db54:	f1bb 0b01 	subs.w	fp, fp, #1
9001db58:	eeb0 6a62 	vmov.f32	s12, s5
9001db5c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001db60:	ee31 1a05 	vadd.f32	s2, s2, s10
9001db64:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001db68:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001db6c:	eeb0 6a43 	vmov.f32	s12, s6
9001db70:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001db74:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001db78:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001db7c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001db80:	ee77 2a62 	vsub.f32	s5, s14, s5
9001db84:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001db88:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001db8c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001db90:	ee12 2a90 	vmov	r2, s5
9001db94:	eef0 2a47 	vmov.f32	s5, s14
9001db98:	fb92 f3f3 	sdiv	r3, r2, r3
9001db9c:	ee13 2a10 	vmov	r2, s6
9001dba0:	9313      	str	r3, [sp, #76]	@ 0x4c
9001dba2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001dba4:	eeb0 3a67 	vmov.f32	s6, s15
9001dba8:	fb92 f3f3 	sdiv	r3, r2, r3
9001dbac:	9a04      	ldr	r2, [sp, #16]
9001dbae:	9314      	str	r3, [sp, #80]	@ 0x50
9001dbb0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001dbb2:	bf08      	it	eq
9001dbb4:	4613      	moveq	r3, r2
9001dbb6:	e787      	b.n	9001dac8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001dbb8:	1406      	asrs	r6, r0, #16
9001dbba:	d45d      	bmi.n	9001dc78 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001dbbc:	f8dc 5008 	ldr.w	r5, [ip, #8]
9001dbc0:	42b5      	cmp	r5, r6
9001dbc2:	dd59      	ble.n	9001dc78 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001dbc4:	140f      	asrs	r7, r1, #16
9001dbc6:	d457      	bmi.n	9001dc78 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001dbc8:	f8dc 200c 	ldr.w	r2, [ip, #12]
9001dbcc:	42ba      	cmp	r2, r7
9001dbce:	dd53      	ble.n	9001dc78 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001dbd0:	9a01      	ldr	r2, [sp, #4]
9001dbd2:	b22d      	sxth	r5, r5
9001dbd4:	fb07 2505 	mla	r5, r7, r5, r2
9001dbd8:	5daa      	ldrb	r2, [r5, r6]
9001dbda:	9d02      	ldr	r5, [sp, #8]
9001dbdc:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001dbe0:	0e2e      	lsrs	r6, r5, #24
9001dbe2:	d049      	beq.n	9001dc78 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001dbe4:	f06f 0201 	mvn.w	r2, #1
9001dbe8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001dbec:	fb02 f20e 	mul.w	r2, r2, lr
9001dbf0:	f834 8002 	ldrh.w	r8, [r4, r2]
9001dbf4:	9203      	str	r2, [sp, #12]
9001dbf6:	9a05      	ldr	r2, [sp, #20]
9001dbf8:	ea4f 2728 	mov.w	r7, r8, asr #8
9001dbfc:	4356      	muls	r6, r2
9001dbfe:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001dc02:	1c72      	adds	r2, r6, #1
9001dc04:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001dc08:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001dc0c:	b2ed      	uxtb	r5, r5
9001dc0e:	1212      	asrs	r2, r2, #8
9001dc10:	fa1f f982 	uxth.w	r9, r2
9001dc14:	43d2      	mvns	r2, r2
9001dc16:	fb16 f609 	smulbb	r6, r6, r9
9001dc1a:	b2d2      	uxtb	r2, r2
9001dc1c:	fb15 f509 	smulbb	r5, r5, r9
9001dc20:	fb07 6702 	mla	r7, r7, r2, r6
9001dc24:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001dc28:	fb1a fa09 	smulbb	sl, sl, r9
9001dc2c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001dc30:	b2bf      	uxth	r7, r7
9001dc32:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001dc36:	fa5f f888 	uxtb.w	r8, r8
9001dc3a:	fb06 a602 	mla	r6, r6, r2, sl
9001dc3e:	fb08 5502 	mla	r5, r8, r2, r5
9001dc42:	1c7a      	adds	r2, r7, #1
9001dc44:	b2b6      	uxth	r6, r6
9001dc46:	b2ad      	uxth	r5, r5
9001dc48:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001dc4c:	9a03      	ldr	r2, [sp, #12]
9001dc4e:	f105 0a01 	add.w	sl, r5, #1
9001dc52:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001dc56:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001dc5a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001dc5e:	ea4a 0707 	orr.w	r7, sl, r7
9001dc62:	f106 0a01 	add.w	sl, r6, #1
9001dc66:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001dc6a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001dc6e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001dc72:	ea47 070a 	orr.w	r7, r7, sl
9001dc76:	52a7      	strh	r7, [r4, r2]
9001dc78:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001dc7a:	f10e 3eff 	add.w	lr, lr, #4294967295
9001dc7e:	4410      	add	r0, r2
9001dc80:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001dc82:	4411      	add	r1, r2
9001dc84:	e755      	b.n	9001db32 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001dc86:	f04f 0800 	mov.w	r8, #0
9001dc8a:	eba3 0208 	sub.w	r2, r3, r8
9001dc8e:	2a00      	cmp	r2, #0
9001dc90:	f77f af53 	ble.w	9001db3a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001dc94:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
9001dc98:	140a      	asrs	r2, r1, #16
9001dc9a:	9f01      	ldr	r7, [sp, #4]
9001dc9c:	1405      	asrs	r5, r0, #16
9001dc9e:	fb06 7202 	mla	r2, r6, r2, r7
9001dca2:	5d52      	ldrb	r2, [r2, r5]
9001dca4:	9d02      	ldr	r5, [sp, #8]
9001dca6:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001dcaa:	0e2e      	lsrs	r6, r5, #24
9001dcac:	d044      	beq.n	9001dd38 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
9001dcae:	9a05      	ldr	r2, [sp, #20]
9001dcb0:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001dcb4:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001dcb8:	4356      	muls	r6, r2
9001dcba:	ea4f 272e 	mov.w	r7, lr, asr #8
9001dcbe:	1c72      	adds	r2, r6, #1
9001dcc0:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001dcc4:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001dcc8:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001dccc:	b2ed      	uxtb	r5, r5
9001dcce:	1212      	asrs	r2, r2, #8
9001dcd0:	fa1f f982 	uxth.w	r9, r2
9001dcd4:	43d2      	mvns	r2, r2
9001dcd6:	fb16 f609 	smulbb	r6, r6, r9
9001dcda:	b2d2      	uxtb	r2, r2
9001dcdc:	fb15 f509 	smulbb	r5, r5, r9
9001dce0:	fb07 6702 	mla	r7, r7, r2, r6
9001dce4:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001dce8:	fb1a fa09 	smulbb	sl, sl, r9
9001dcec:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001dcf0:	b2bf      	uxth	r7, r7
9001dcf2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001dcf6:	fa5f fe8e 	uxtb.w	lr, lr
9001dcfa:	fb06 a602 	mla	r6, r6, r2, sl
9001dcfe:	fb0e 5502 	mla	r5, lr, r2, r5
9001dd02:	1c7a      	adds	r2, r7, #1
9001dd04:	b2b6      	uxth	r6, r6
9001dd06:	b2ad      	uxth	r5, r5
9001dd08:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001dd0c:	f105 0a01 	add.w	sl, r5, #1
9001dd10:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001dd14:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001dd18:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001dd1c:	ea4a 0707 	orr.w	r7, sl, r7
9001dd20:	f106 0a01 	add.w	sl, r6, #1
9001dd24:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001dd28:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001dd2c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001dd30:	ea47 070a 	orr.w	r7, r7, sl
9001dd34:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001dd38:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001dd3a:	f108 0801 	add.w	r8, r8, #1
9001dd3e:	4410      	add	r0, r2
9001dd40:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001dd42:	4411      	add	r1, r2
9001dd44:	e7a1      	b.n	9001dc8a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
9001dd46:	b007      	add	sp, #28
9001dd48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001dd4c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001dd4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001dd50:	b085      	sub	sp, #20
9001dd52:	468b      	mov	fp, r1
9001dd54:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001dd58:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001dd5a:	9203      	str	r2, [sp, #12]
9001dd5c:	6841      	ldr	r1, [r0, #4]
9001dd5e:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
9001dd62:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001dd66:	fb01 2404 	mla	r4, r1, r4, r2
9001dd6a:	6802      	ldr	r2, [r0, #0]
9001dd6c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001dd70:	f8de 2000 	ldr.w	r2, [lr]
9001dd74:	9200      	str	r2, [sp, #0]
9001dd76:	f8de 2004 	ldr.w	r2, [lr, #4]
9001dd7a:	3204      	adds	r2, #4
9001dd7c:	9201      	str	r2, [sp, #4]
9001dd7e:	f1bb 0f00 	cmp.w	fp, #0
9001dd82:	dc03      	bgt.n	9001dd8c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001dd84:	9a03      	ldr	r2, [sp, #12]
9001dd86:	2a00      	cmp	r2, #0
9001dd88:	f340 8153 	ble.w	9001e032 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001dd8c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001dd8e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001dd92:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001dd96:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001dd98:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001dd9c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001dda0:	2b00      	cmp	r3, #0
9001dda2:	dd0e      	ble.n	9001ddc2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001dda4:	1408      	asrs	r0, r1, #16
9001dda6:	d405      	bmi.n	9001ddb4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001dda8:	42b8      	cmp	r0, r7
9001ddaa:	da03      	bge.n	9001ddb4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001ddac:	1410      	asrs	r0, r2, #16
9001ddae:	d401      	bmi.n	9001ddb4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001ddb0:	42b0      	cmp	r0, r6
9001ddb2:	db07      	blt.n	9001ddc4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001ddb4:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001ddb6:	3b01      	subs	r3, #1
9001ddb8:	3402      	adds	r4, #2
9001ddba:	4401      	add	r1, r0
9001ddbc:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001ddbe:	4402      	add	r2, r0
9001ddc0:	e7ee      	b.n	9001dda0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001ddc2:	d017      	beq.n	9001ddf4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001ddc4:	1e58      	subs	r0, r3, #1
9001ddc6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001ddc8:	fb05 1500 	mla	r5, r5, r0, r1
9001ddcc:	142d      	asrs	r5, r5, #16
9001ddce:	d409      	bmi.n	9001dde4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001ddd0:	42bd      	cmp	r5, r7
9001ddd2:	da07      	bge.n	9001dde4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001ddd4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001ddd6:	fb05 2000 	mla	r0, r5, r0, r2
9001ddda:	1400      	asrs	r0, r0, #16
9001dddc:	d402      	bmi.n	9001dde4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001ddde:	42b0      	cmp	r0, r6
9001dde0:	f2c0 80bc 	blt.w	9001df5c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
9001dde4:	2600      	movs	r6, #0
9001dde6:	1998      	adds	r0, r3, r6
9001dde8:	2800      	cmp	r0, #0
9001ddea:	dc3e      	bgt.n	9001de6a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
9001ddec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ddf0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ddf4:	f1bb 0f00 	cmp.w	fp, #0
9001ddf8:	f340 811b 	ble.w	9001e032 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001ddfc:	ee30 0a04 	vadd.f32	s0, s0, s8
9001de00:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001de02:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001de06:	f1bb 0b01 	subs.w	fp, fp, #1
9001de0a:	eeb0 6a62 	vmov.f32	s12, s5
9001de0e:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001de12:	ee31 1a05 	vadd.f32	s2, s2, s10
9001de16:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001de1a:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001de1e:	eeb0 6a43 	vmov.f32	s12, s6
9001de22:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001de26:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001de2a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001de2e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001de32:	ee77 2a62 	vsub.f32	s5, s14, s5
9001de36:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001de3a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001de3e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001de42:	ee12 2a90 	vmov	r2, s5
9001de46:	eef0 2a47 	vmov.f32	s5, s14
9001de4a:	fb92 f3f3 	sdiv	r3, r2, r3
9001de4e:	ee13 2a10 	vmov	r2, s6
9001de52:	9311      	str	r3, [sp, #68]	@ 0x44
9001de54:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001de56:	eeb0 3a67 	vmov.f32	s6, s15
9001de5a:	fb92 f3f3 	sdiv	r3, r2, r3
9001de5e:	9a03      	ldr	r2, [sp, #12]
9001de60:	9312      	str	r3, [sp, #72]	@ 0x48
9001de62:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001de64:	bf08      	it	eq
9001de66:	4613      	moveq	r3, r2
9001de68:	e789      	b.n	9001dd7e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001de6a:	140f      	asrs	r7, r1, #16
9001de6c:	d426      	bmi.n	9001debc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001de6e:	f8de 5008 	ldr.w	r5, [lr, #8]
9001de72:	42bd      	cmp	r5, r7
9001de74:	dd22      	ble.n	9001debc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001de76:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001de7a:	d41f      	bmi.n	9001debc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001de7c:	f8de 000c 	ldr.w	r0, [lr, #12]
9001de80:	4560      	cmp	r0, ip
9001de82:	dd1b      	ble.n	9001debc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001de84:	9800      	ldr	r0, [sp, #0]
9001de86:	b22d      	sxth	r5, r5
9001de88:	fb0c 0505 	mla	r5, ip, r5, r0
9001de8c:	5de8      	ldrb	r0, [r5, r7]
9001de8e:	9d01      	ldr	r5, [sp, #4]
9001de90:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
9001de94:	0e07      	lsrs	r7, r0, #24
9001de96:	2fff      	cmp	r7, #255	@ 0xff
9001de98:	d116      	bne.n	9001dec8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001de9a:	f06f 0501 	mvn.w	r5, #1
9001de9e:	fb05 f706 	mul.w	r7, r5, r6
9001dea2:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
9001dea6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001deaa:	0945      	lsrs	r5, r0, #5
9001deac:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001deb0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001deb4:	ea4c 0505 	orr.w	r5, ip, r5
9001deb8:	4305      	orrs	r5, r0
9001deba:	53e5      	strh	r5, [r4, r7]
9001debc:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001debe:	3e01      	subs	r6, #1
9001dec0:	4401      	add	r1, r0
9001dec2:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001dec4:	4402      	add	r2, r0
9001dec6:	e78e      	b.n	9001dde6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001dec8:	b2fd      	uxtb	r5, r7
9001deca:	2f00      	cmp	r7, #0
9001decc:	d0f6      	beq.n	9001debc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001dece:	f06f 0701 	mvn.w	r7, #1
9001ded2:	fa1f f985 	uxth.w	r9, r5
9001ded6:	43ed      	mvns	r5, r5
9001ded8:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001dedc:	4377      	muls	r7, r6
9001dede:	fb1a fa09 	smulbb	sl, sl, r9
9001dee2:	b2ed      	uxtb	r5, r5
9001dee4:	f834 8007 	ldrh.w	r8, [r4, r7]
9001dee8:	9702      	str	r7, [sp, #8]
9001deea:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001deee:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001def2:	fb17 f709 	smulbb	r7, r7, r9
9001def6:	b2c0      	uxtb	r0, r0
9001def8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001defc:	fb10 f009 	smulbb	r0, r0, r9
9001df00:	fb0c 7c05 	mla	ip, ip, r5, r7
9001df04:	ea4f 07e8 	mov.w	r7, r8, asr #3
9001df08:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001df0c:	fa1f fc8c 	uxth.w	ip, ip
9001df10:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001df14:	fa5f f888 	uxtb.w	r8, r8
9001df18:	fb07 a705 	mla	r7, r7, r5, sl
9001df1c:	fb08 0005 	mla	r0, r8, r5, r0
9001df20:	f10c 0501 	add.w	r5, ip, #1
9001df24:	b2bf      	uxth	r7, r7
9001df26:	b280      	uxth	r0, r0
9001df28:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001df2c:	f100 0a01 	add.w	sl, r0, #1
9001df30:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001df34:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001df38:	9802      	ldr	r0, [sp, #8]
9001df3a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001df3e:	ea4a 0c0c 	orr.w	ip, sl, ip
9001df42:	f107 0a01 	add.w	sl, r7, #1
9001df46:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001df4a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001df4e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001df52:	ea4c 0c0a 	orr.w	ip, ip, sl
9001df56:	f824 c000 	strh.w	ip, [r4, r0]
9001df5a:	e7af      	b.n	9001debc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001df5c:	f04f 0800 	mov.w	r8, #0
9001df60:	eba3 0008 	sub.w	r0, r3, r8
9001df64:	2800      	cmp	r0, #0
9001df66:	f77f af41 	ble.w	9001ddec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001df6a:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001df6e:	1410      	asrs	r0, r2, #16
9001df70:	9f00      	ldr	r7, [sp, #0]
9001df72:	140d      	asrs	r5, r1, #16
9001df74:	fb06 7000 	mla	r0, r6, r0, r7
9001df78:	5d40      	ldrb	r0, [r0, r5]
9001df7a:	9d01      	ldr	r5, [sp, #4]
9001df7c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001df80:	0e2e      	lsrs	r6, r5, #24
9001df82:	2eff      	cmp	r6, #255	@ 0xff
9001df84:	d112      	bne.n	9001dfac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
9001df86:	482c      	ldr	r0, [pc, #176]	@ (9001e038 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
9001df88:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001df8c:	0968      	lsrs	r0, r5, #5
9001df8e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001df92:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001df96:	4330      	orrs	r0, r6
9001df98:	4328      	orrs	r0, r5
9001df9a:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
9001df9e:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001dfa0:	f108 0801 	add.w	r8, r8, #1
9001dfa4:	4401      	add	r1, r0
9001dfa6:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001dfa8:	4402      	add	r2, r0
9001dfaa:	e7d9      	b.n	9001df60 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001dfac:	b2f0      	uxtb	r0, r6
9001dfae:	2e00      	cmp	r6, #0
9001dfb0:	d0f5      	beq.n	9001df9e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001dfb2:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
9001dfb6:	fa1f f980 	uxth.w	r9, r0
9001dfba:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001dfbe:	43c0      	mvns	r0, r0
9001dfc0:	ea4f 272c 	mov.w	r7, ip, asr #8
9001dfc4:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001dfc8:	fb16 f609 	smulbb	r6, r6, r9
9001dfcc:	b2c0      	uxtb	r0, r0
9001dfce:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001dfd2:	b2ed      	uxtb	r5, r5
9001dfd4:	fb1a fa09 	smulbb	sl, sl, r9
9001dfd8:	fb07 6700 	mla	r7, r7, r0, r6
9001dfdc:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001dfe0:	fb15 f509 	smulbb	r5, r5, r9
9001dfe4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001dfe8:	b2bf      	uxth	r7, r7
9001dfea:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001dfee:	fa5f fc8c 	uxtb.w	ip, ip
9001dff2:	fb06 a600 	mla	r6, r6, r0, sl
9001dff6:	fb0c 5500 	mla	r5, ip, r0, r5
9001dffa:	1c78      	adds	r0, r7, #1
9001dffc:	b2b6      	uxth	r6, r6
9001dffe:	b2ad      	uxth	r5, r5
9001e000:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001e004:	f105 0a01 	add.w	sl, r5, #1
9001e008:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001e00c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001e010:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001e014:	ea4a 0707 	orr.w	r7, sl, r7
9001e018:	f106 0a01 	add.w	sl, r6, #1
9001e01c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001e020:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001e024:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001e028:	ea47 070a 	orr.w	r7, r7, sl
9001e02c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001e030:	e7b5      	b.n	9001df9e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001e032:	b005      	add	sp, #20
9001e034:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e038:	fffff800 	.word	0xfffff800

9001e03c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001e03c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e040:	b087      	sub	sp, #28
9001e042:	468b      	mov	fp, r1
9001e044:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001e048:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9001e04a:	9204      	str	r2, [sp, #16]
9001e04c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001e050:	6861      	ldr	r1, [r4, #4]
9001e052:	9205      	str	r2, [sp, #20]
9001e054:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
9001e058:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
9001e05c:	fb01 2000 	mla	r0, r1, r0, r2
9001e060:	6822      	ldr	r2, [r4, #0]
9001e062:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001e066:	f8de 2000 	ldr.w	r2, [lr]
9001e06a:	9201      	str	r2, [sp, #4]
9001e06c:	f8de 2004 	ldr.w	r2, [lr, #4]
9001e070:	9202      	str	r2, [sp, #8]
9001e072:	f1bb 0f00 	cmp.w	fp, #0
9001e076:	dc03      	bgt.n	9001e080 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
9001e078:	9a04      	ldr	r2, [sp, #16]
9001e07a:	2a00      	cmp	r2, #0
9001e07c:	f340 8142 	ble.w	9001e304 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001e080:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001e082:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001e086:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001e08a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001e08c:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001e090:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001e094:	2b00      	cmp	r3, #0
9001e096:	dd0e      	ble.n	9001e0b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001e098:	140c      	asrs	r4, r1, #16
9001e09a:	d405      	bmi.n	9001e0a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001e09c:	42bc      	cmp	r4, r7
9001e09e:	da03      	bge.n	9001e0a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001e0a0:	1414      	asrs	r4, r2, #16
9001e0a2:	d401      	bmi.n	9001e0a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001e0a4:	42b4      	cmp	r4, r6
9001e0a6:	db07      	blt.n	9001e0b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001e0a8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001e0aa:	3b01      	subs	r3, #1
9001e0ac:	3002      	adds	r0, #2
9001e0ae:	4421      	add	r1, r4
9001e0b0:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001e0b2:	4422      	add	r2, r4
9001e0b4:	e7ee      	b.n	9001e094 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9001e0b6:	d019      	beq.n	9001e0ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001e0b8:	1e5c      	subs	r4, r3, #1
9001e0ba:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001e0bc:	fb05 1504 	mla	r5, r5, r4, r1
9001e0c0:	142d      	asrs	r5, r5, #16
9001e0c2:	d409      	bmi.n	9001e0d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001e0c4:	42bd      	cmp	r5, r7
9001e0c6:	da07      	bge.n	9001e0d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001e0c8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001e0ca:	fb05 2404 	mla	r4, r5, r4, r2
9001e0ce:	1424      	asrs	r4, r4, #16
9001e0d0:	d402      	bmi.n	9001e0d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001e0d2:	42b4      	cmp	r4, r6
9001e0d4:	f2c0 80b1 	blt.w	9001e23a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9001e0d8:	f04f 0800 	mov.w	r8, #0
9001e0dc:	eb03 0408 	add.w	r4, r3, r8
9001e0e0:	2c00      	cmp	r4, #0
9001e0e2:	dc3e      	bgt.n	9001e162 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
9001e0e4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001e0e8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e0ec:	f1bb 0f00 	cmp.w	fp, #0
9001e0f0:	f340 8108 	ble.w	9001e304 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001e0f4:	ee30 0a04 	vadd.f32	s0, s0, s8
9001e0f8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001e0fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001e0fe:	f1bb 0b01 	subs.w	fp, fp, #1
9001e102:	eeb0 6a62 	vmov.f32	s12, s5
9001e106:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001e10a:	ee31 1a05 	vadd.f32	s2, s2, s10
9001e10e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001e112:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001e116:	eeb0 6a43 	vmov.f32	s12, s6
9001e11a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001e11e:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001e122:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001e126:	ee61 7a27 	vmul.f32	s15, s2, s15
9001e12a:	ee77 2a62 	vsub.f32	s5, s14, s5
9001e12e:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001e132:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001e136:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001e13a:	ee12 2a90 	vmov	r2, s5
9001e13e:	eef0 2a47 	vmov.f32	s5, s14
9001e142:	fb92 f3f3 	sdiv	r3, r2, r3
9001e146:	ee13 2a10 	vmov	r2, s6
9001e14a:	9313      	str	r3, [sp, #76]	@ 0x4c
9001e14c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001e14e:	eeb0 3a67 	vmov.f32	s6, s15
9001e152:	fb92 f3f3 	sdiv	r3, r2, r3
9001e156:	9a04      	ldr	r2, [sp, #16]
9001e158:	9314      	str	r3, [sp, #80]	@ 0x50
9001e15a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001e15c:	bf08      	it	eq
9001e15e:	4613      	moveq	r3, r2
9001e160:	e787      	b.n	9001e072 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
9001e162:	140e      	asrs	r6, r1, #16
9001e164:	d462      	bmi.n	9001e22c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001e166:	f8de 5008 	ldr.w	r5, [lr, #8]
9001e16a:	42b5      	cmp	r5, r6
9001e16c:	dd5e      	ble.n	9001e22c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001e16e:	1417      	asrs	r7, r2, #16
9001e170:	d45c      	bmi.n	9001e22c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001e172:	f8de 400c 	ldr.w	r4, [lr, #12]
9001e176:	42bc      	cmp	r4, r7
9001e178:	dd58      	ble.n	9001e22c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001e17a:	b22d      	sxth	r5, r5
9001e17c:	9c02      	ldr	r4, [sp, #8]
9001e17e:	fb07 6505 	mla	r5, r7, r5, r6
9001e182:	5d66      	ldrb	r6, [r4, r5]
9001e184:	2e00      	cmp	r6, #0
9001e186:	d051      	beq.n	9001e22c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001e188:	9c01      	ldr	r4, [sp, #4]
9001e18a:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
9001e18e:	f06f 0401 	mvn.w	r4, #1
9001e192:	fb04 f408 	mul.w	r4, r4, r8
9001e196:	ea4f 2c29 	mov.w	ip, r9, asr #8
9001e19a:	5b05      	ldrh	r5, [r0, r4]
9001e19c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001e1a0:	9403      	str	r4, [sp, #12]
9001e1a2:	9c05      	ldr	r4, [sp, #20]
9001e1a4:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001e1a8:	4366      	muls	r6, r4
9001e1aa:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001e1ae:	1c74      	adds	r4, r6, #1
9001e1b0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001e1b4:	122e      	asrs	r6, r5, #8
9001e1b6:	1224      	asrs	r4, r4, #8
9001e1b8:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001e1bc:	00ed      	lsls	r5, r5, #3
9001e1be:	b2a7      	uxth	r7, r4
9001e1c0:	43e4      	mvns	r4, r4
9001e1c2:	b2ed      	uxtb	r5, r5
9001e1c4:	b2e4      	uxtb	r4, r4
9001e1c6:	fb16 f604 	smulbb	r6, r6, r4
9001e1ca:	fb15 f504 	smulbb	r5, r5, r4
9001e1ce:	fb0c 6c07 	mla	ip, ip, r7, r6
9001e1d2:	ea4f 06e9 	mov.w	r6, r9, asr #3
9001e1d6:	fb1a fa04 	smulbb	sl, sl, r4
9001e1da:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001e1de:	fa1f fc8c 	uxth.w	ip, ip
9001e1e2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001e1e6:	fa5f f989 	uxtb.w	r9, r9
9001e1ea:	fb06 a607 	mla	r6, r6, r7, sl
9001e1ee:	f10c 0401 	add.w	r4, ip, #1
9001e1f2:	fb09 5507 	mla	r5, r9, r7, r5
9001e1f6:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001e1fa:	9c03      	ldr	r4, [sp, #12]
9001e1fc:	b2ad      	uxth	r5, r5
9001e1fe:	b2b6      	uxth	r6, r6
9001e200:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001e204:	f105 0a01 	add.w	sl, r5, #1
9001e208:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001e20c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001e210:	ea4a 0c0c 	orr.w	ip, sl, ip
9001e214:	f106 0a01 	add.w	sl, r6, #1
9001e218:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001e21c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001e220:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001e224:	ea4c 0c0a 	orr.w	ip, ip, sl
9001e228:	f820 c004 	strh.w	ip, [r0, r4]
9001e22c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001e22e:	f108 38ff 	add.w	r8, r8, #4294967295
9001e232:	4421      	add	r1, r4
9001e234:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001e236:	4422      	add	r2, r4
9001e238:	e750      	b.n	9001e0dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001e23a:	f04f 0900 	mov.w	r9, #0
9001e23e:	eba3 0409 	sub.w	r4, r3, r9
9001e242:	2c00      	cmp	r4, #0
9001e244:	f77f af4e 	ble.w	9001e0e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001e248:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001e24c:	140d      	asrs	r5, r1, #16
9001e24e:	1414      	asrs	r4, r2, #16
9001e250:	fb06 5404 	mla	r4, r6, r4, r5
9001e254:	9d02      	ldr	r5, [sp, #8]
9001e256:	5d2e      	ldrb	r6, [r5, r4]
9001e258:	2e00      	cmp	r6, #0
9001e25a:	d04c      	beq.n	9001e2f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
9001e25c:	9d01      	ldr	r5, [sp, #4]
9001e25e:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
9001e262:	9c05      	ldr	r4, [sp, #20]
9001e264:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001e268:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001e26c:	4366      	muls	r6, r4
9001e26e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001e272:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001e276:	1c74      	adds	r4, r6, #1
9001e278:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001e27c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001e280:	122e      	asrs	r6, r5, #8
9001e282:	1224      	asrs	r4, r4, #8
9001e284:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001e288:	00ed      	lsls	r5, r5, #3
9001e28a:	b2a7      	uxth	r7, r4
9001e28c:	43e4      	mvns	r4, r4
9001e28e:	b2ed      	uxtb	r5, r5
9001e290:	b2e4      	uxtb	r4, r4
9001e292:	fb16 f604 	smulbb	r6, r6, r4
9001e296:	fb15 f504 	smulbb	r5, r5, r4
9001e29a:	fb0c 6c07 	mla	ip, ip, r7, r6
9001e29e:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001e2a2:	fb1a fa04 	smulbb	sl, sl, r4
9001e2a6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001e2aa:	fa1f fc8c 	uxth.w	ip, ip
9001e2ae:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001e2b2:	fa5f f888 	uxtb.w	r8, r8
9001e2b6:	fb06 a607 	mla	r6, r6, r7, sl
9001e2ba:	f10c 0401 	add.w	r4, ip, #1
9001e2be:	fb08 5507 	mla	r5, r8, r7, r5
9001e2c2:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001e2c6:	b2ad      	uxth	r5, r5
9001e2c8:	b2b6      	uxth	r6, r6
9001e2ca:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001e2ce:	f105 0a01 	add.w	sl, r5, #1
9001e2d2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001e2d6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001e2da:	ea4a 0c0c 	orr.w	ip, sl, ip
9001e2de:	f106 0a01 	add.w	sl, r6, #1
9001e2e2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001e2e6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001e2ea:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001e2ee:	ea4c 0c0a 	orr.w	ip, ip, sl
9001e2f2:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001e2f6:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001e2f8:	f109 0901 	add.w	r9, r9, #1
9001e2fc:	4421      	add	r1, r4
9001e2fe:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001e300:	4422      	add	r2, r4
9001e302:	e79c      	b.n	9001e23e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
9001e304:	b007      	add	sp, #28
9001e306:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001e30a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001e30a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e30e:	b085      	sub	sp, #20
9001e310:	468b      	mov	fp, r1
9001e312:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001e316:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001e318:	9203      	str	r2, [sp, #12]
9001e31a:	6861      	ldr	r1, [r4, #4]
9001e31c:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
9001e320:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
9001e324:	fb01 2000 	mla	r0, r1, r0, r2
9001e328:	6822      	ldr	r2, [r4, #0]
9001e32a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001e32e:	f8d8 2000 	ldr.w	r2, [r8]
9001e332:	9200      	str	r2, [sp, #0]
9001e334:	f8d8 2004 	ldr.w	r2, [r8, #4]
9001e338:	9201      	str	r2, [sp, #4]
9001e33a:	f1bb 0f00 	cmp.w	fp, #0
9001e33e:	dc03      	bgt.n	9001e348 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001e340:	9a03      	ldr	r2, [sp, #12]
9001e342:	2a00      	cmp	r2, #0
9001e344:	f340 8146 	ble.w	9001e5d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001e348:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001e34a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001e34e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001e352:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001e354:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001e358:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001e35c:	2b00      	cmp	r3, #0
9001e35e:	dd0e      	ble.n	9001e37e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001e360:	140c      	asrs	r4, r1, #16
9001e362:	d405      	bmi.n	9001e370 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001e364:	42bc      	cmp	r4, r7
9001e366:	da03      	bge.n	9001e370 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001e368:	1414      	asrs	r4, r2, #16
9001e36a:	d401      	bmi.n	9001e370 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001e36c:	42b4      	cmp	r4, r6
9001e36e:	db07      	blt.n	9001e380 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001e370:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001e372:	3b01      	subs	r3, #1
9001e374:	3002      	adds	r0, #2
9001e376:	4421      	add	r1, r4
9001e378:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001e37a:	4422      	add	r2, r4
9001e37c:	e7ee      	b.n	9001e35c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001e37e:	d017      	beq.n	9001e3b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001e380:	1e5c      	subs	r4, r3, #1
9001e382:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001e384:	fb05 1504 	mla	r5, r5, r4, r1
9001e388:	142d      	asrs	r5, r5, #16
9001e38a:	d409      	bmi.n	9001e3a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001e38c:	42bd      	cmp	r5, r7
9001e38e:	da07      	bge.n	9001e3a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001e390:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001e392:	fb05 2404 	mla	r4, r5, r4, r2
9001e396:	1424      	asrs	r4, r4, #16
9001e398:	d402      	bmi.n	9001e3a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001e39a:	42b4      	cmp	r4, r6
9001e39c:	f2c0 80b3 	blt.w	9001e506 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
9001e3a0:	2600      	movs	r6, #0
9001e3a2:	199c      	adds	r4, r3, r6
9001e3a4:	2c00      	cmp	r4, #0
9001e3a6:	dc3e      	bgt.n	9001e426 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001e3a8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001e3ac:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e3b0:	f1bb 0f00 	cmp.w	fp, #0
9001e3b4:	f340 810e 	ble.w	9001e5d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001e3b8:	ee30 0a04 	vadd.f32	s0, s0, s8
9001e3bc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001e3be:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001e3c2:	f1bb 0b01 	subs.w	fp, fp, #1
9001e3c6:	eeb0 6a62 	vmov.f32	s12, s5
9001e3ca:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001e3ce:	ee31 1a05 	vadd.f32	s2, s2, s10
9001e3d2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001e3d6:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001e3da:	eeb0 6a43 	vmov.f32	s12, s6
9001e3de:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001e3e2:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001e3e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001e3ea:	ee61 7a27 	vmul.f32	s15, s2, s15
9001e3ee:	ee77 2a62 	vsub.f32	s5, s14, s5
9001e3f2:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001e3f6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001e3fa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001e3fe:	ee12 2a90 	vmov	r2, s5
9001e402:	eef0 2a47 	vmov.f32	s5, s14
9001e406:	fb92 f3f3 	sdiv	r3, r2, r3
9001e40a:	ee13 2a10 	vmov	r2, s6
9001e40e:	9311      	str	r3, [sp, #68]	@ 0x44
9001e410:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001e412:	eeb0 3a67 	vmov.f32	s6, s15
9001e416:	fb92 f3f3 	sdiv	r3, r2, r3
9001e41a:	9a03      	ldr	r2, [sp, #12]
9001e41c:	9312      	str	r3, [sp, #72]	@ 0x48
9001e41e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001e420:	bf08      	it	eq
9001e422:	4613      	moveq	r3, r2
9001e424:	e789      	b.n	9001e33a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001e426:	140f      	asrs	r7, r1, #16
9001e428:	d418      	bmi.n	9001e45c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001e42a:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001e42e:	42bd      	cmp	r5, r7
9001e430:	dd14      	ble.n	9001e45c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001e432:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001e436:	d411      	bmi.n	9001e45c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001e438:	f8d8 400c 	ldr.w	r4, [r8, #12]
9001e43c:	4564      	cmp	r4, ip
9001e43e:	dd0d      	ble.n	9001e45c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001e440:	b22d      	sxth	r5, r5
9001e442:	9c01      	ldr	r4, [sp, #4]
9001e444:	fb0c 7505 	mla	r5, ip, r5, r7
9001e448:	5d64      	ldrb	r4, [r4, r5]
9001e44a:	2cff      	cmp	r4, #255	@ 0xff
9001e44c:	d10c      	bne.n	9001e468 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001e44e:	9c00      	ldr	r4, [sp, #0]
9001e450:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
9001e454:	f06f 0401 	mvn.w	r4, #1
9001e458:	4374      	muls	r4, r6
9001e45a:	5305      	strh	r5, [r0, r4]
9001e45c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001e45e:	3e01      	subs	r6, #1
9001e460:	4421      	add	r1, r4
9001e462:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001e464:	4422      	add	r2, r4
9001e466:	e79c      	b.n	9001e3a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001e468:	2c00      	cmp	r4, #0
9001e46a:	d0f7      	beq.n	9001e45c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001e46c:	9f00      	ldr	r7, [sp, #0]
9001e46e:	fa1f fc84 	uxth.w	ip, r4
9001e472:	43e4      	mvns	r4, r4
9001e474:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
9001e478:	f06f 0501 	mvn.w	r5, #1
9001e47c:	b2e4      	uxtb	r4, r4
9001e47e:	4375      	muls	r5, r6
9001e480:	ea4f 2e29 	mov.w	lr, r9, asr #8
9001e484:	9502      	str	r5, [sp, #8]
9001e486:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001e48a:	5b45      	ldrh	r5, [r0, r5]
9001e48c:	122f      	asrs	r7, r5, #8
9001e48e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001e492:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001e496:	00ed      	lsls	r5, r5, #3
9001e498:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001e49c:	fb17 f704 	smulbb	r7, r7, r4
9001e4a0:	b2ed      	uxtb	r5, r5
9001e4a2:	fb1a fa04 	smulbb	sl, sl, r4
9001e4a6:	fb0e 7e0c 	mla	lr, lr, ip, r7
9001e4aa:	ea4f 07e9 	mov.w	r7, r9, asr #3
9001e4ae:	fb15 f504 	smulbb	r5, r5, r4
9001e4b2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001e4b6:	fa1f fe8e 	uxth.w	lr, lr
9001e4ba:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001e4be:	fa5f f989 	uxtb.w	r9, r9
9001e4c2:	fb07 a70c 	mla	r7, r7, ip, sl
9001e4c6:	f10e 0401 	add.w	r4, lr, #1
9001e4ca:	fb09 550c 	mla	r5, r9, ip, r5
9001e4ce:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
9001e4d2:	9c02      	ldr	r4, [sp, #8]
9001e4d4:	b2ad      	uxth	r5, r5
9001e4d6:	b2bf      	uxth	r7, r7
9001e4d8:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001e4dc:	f105 0a01 	add.w	sl, r5, #1
9001e4e0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001e4e4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001e4e8:	ea4a 0e0e 	orr.w	lr, sl, lr
9001e4ec:	f107 0a01 	add.w	sl, r7, #1
9001e4f0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001e4f4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001e4f8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001e4fc:	ea4e 0e0a 	orr.w	lr, lr, sl
9001e500:	f820 e004 	strh.w	lr, [r0, r4]
9001e504:	e7aa      	b.n	9001e45c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001e506:	f04f 0900 	mov.w	r9, #0
9001e50a:	eba3 0409 	sub.w	r4, r3, r9
9001e50e:	2c00      	cmp	r4, #0
9001e510:	f77f af4a 	ble.w	9001e3a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001e514:	1414      	asrs	r4, r2, #16
9001e516:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001e51a:	140d      	asrs	r5, r1, #16
9001e51c:	fb06 5504 	mla	r5, r6, r4, r5
9001e520:	9c01      	ldr	r4, [sp, #4]
9001e522:	5d64      	ldrb	r4, [r4, r5]
9001e524:	2cff      	cmp	r4, #255	@ 0xff
9001e526:	d10b      	bne.n	9001e540 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001e528:	9c00      	ldr	r4, [sp, #0]
9001e52a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
9001e52e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
9001e532:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001e534:	f109 0901 	add.w	r9, r9, #1
9001e538:	4421      	add	r1, r4
9001e53a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001e53c:	4422      	add	r2, r4
9001e53e:	e7e4      	b.n	9001e50a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9001e540:	2c00      	cmp	r4, #0
9001e542:	d0f6      	beq.n	9001e532 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001e544:	9e00      	ldr	r6, [sp, #0]
9001e546:	b2a7      	uxth	r7, r4
9001e548:	43e4      	mvns	r4, r4
9001e54a:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
9001e54e:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001e552:	b2e4      	uxtb	r4, r4
9001e554:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001e558:	122e      	asrs	r6, r5, #8
9001e55a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001e55e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001e562:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001e566:	00ed      	lsls	r5, r5, #3
9001e568:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001e56c:	fb16 f604 	smulbb	r6, r6, r4
9001e570:	b2ed      	uxtb	r5, r5
9001e572:	fb1a fa04 	smulbb	sl, sl, r4
9001e576:	fb0c 6c07 	mla	ip, ip, r7, r6
9001e57a:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001e57e:	fb15 f504 	smulbb	r5, r5, r4
9001e582:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001e586:	fa1f fc8c 	uxth.w	ip, ip
9001e58a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001e58e:	fa5f fe8e 	uxtb.w	lr, lr
9001e592:	fb06 a607 	mla	r6, r6, r7, sl
9001e596:	f10c 0401 	add.w	r4, ip, #1
9001e59a:	fb0e 5507 	mla	r5, lr, r7, r5
9001e59e:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001e5a2:	b2ad      	uxth	r5, r5
9001e5a4:	b2b6      	uxth	r6, r6
9001e5a6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001e5aa:	f105 0a01 	add.w	sl, r5, #1
9001e5ae:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001e5b2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001e5b6:	ea4a 0c0c 	orr.w	ip, sl, ip
9001e5ba:	f106 0a01 	add.w	sl, r6, #1
9001e5be:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001e5c2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001e5c6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001e5ca:	ea4c 0c0a 	orr.w	ip, ip, sl
9001e5ce:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001e5d2:	e7ae      	b.n	9001e532 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001e5d4:	b005      	add	sp, #20
9001e5d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001e5da <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001e5da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e5de:	b085      	sub	sp, #20
9001e5e0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001e5e2:	9203      	str	r2, [sp, #12]
9001e5e4:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
9001e5e8:	9100      	str	r1, [sp, #0]
9001e5ea:	9201      	str	r2, [sp, #4]
9001e5ec:	6841      	ldr	r1, [r0, #4]
9001e5ee:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
9001e5f2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001e5f6:	fb01 2404 	mla	r4, r1, r4, r2
9001e5fa:	6802      	ldr	r2, [r0, #0]
9001e5fc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001e600:	f8de 2000 	ldr.w	r2, [lr]
9001e604:	9202      	str	r2, [sp, #8]
9001e606:	9a01      	ldr	r2, [sp, #4]
9001e608:	43d6      	mvns	r6, r2
9001e60a:	b2f6      	uxtb	r6, r6
9001e60c:	9a00      	ldr	r2, [sp, #0]
9001e60e:	2a00      	cmp	r2, #0
9001e610:	dc03      	bgt.n	9001e61a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001e612:	9a03      	ldr	r2, [sp, #12]
9001e614:	2a00      	cmp	r2, #0
9001e616:	f340 8124 	ble.w	9001e862 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001e61a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001e61c:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001e620:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001e624:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001e626:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001e62a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001e62e:	2b00      	cmp	r3, #0
9001e630:	dd0e      	ble.n	9001e650 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001e632:	1408      	asrs	r0, r1, #16
9001e634:	d405      	bmi.n	9001e642 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001e636:	4560      	cmp	r0, ip
9001e638:	da03      	bge.n	9001e642 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001e63a:	1410      	asrs	r0, r2, #16
9001e63c:	d401      	bmi.n	9001e642 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001e63e:	42b8      	cmp	r0, r7
9001e640:	db07      	blt.n	9001e652 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001e642:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001e644:	3b01      	subs	r3, #1
9001e646:	3402      	adds	r4, #2
9001e648:	4401      	add	r1, r0
9001e64a:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001e64c:	4402      	add	r2, r0
9001e64e:	e7ee      	b.n	9001e62e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001e650:	d06e      	beq.n	9001e730 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001e652:	1e58      	subs	r0, r3, #1
9001e654:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001e656:	fb05 1500 	mla	r5, r5, r0, r1
9001e65a:	142d      	asrs	r5, r5, #16
9001e65c:	d45c      	bmi.n	9001e718 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001e65e:	4565      	cmp	r5, ip
9001e660:	da5a      	bge.n	9001e718 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001e662:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001e664:	fb05 2000 	mla	r0, r5, r0, r2
9001e668:	1400      	asrs	r0, r0, #16
9001e66a:	d455      	bmi.n	9001e718 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001e66c:	42b8      	cmp	r0, r7
9001e66e:	da53      	bge.n	9001e718 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001e670:	4699      	mov	r9, r3
9001e672:	46a2      	mov	sl, r4
9001e674:	f8bd b004 	ldrh.w	fp, [sp, #4]
9001e678:	f1b9 0f00 	cmp.w	r9, #0
9001e67c:	dd54      	ble.n	9001e728 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001e67e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001e682:	140d      	asrs	r5, r1, #16
9001e684:	1410      	asrs	r0, r2, #16
9001e686:	f109 39ff 	add.w	r9, r9, #4294967295
9001e68a:	fb07 5000 	mla	r0, r7, r0, r5
9001e68e:	9d02      	ldr	r5, [sp, #8]
9001e690:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001e694:	f8ba 5000 	ldrh.w	r5, [sl]
9001e698:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001e69c:	122f      	asrs	r7, r5, #8
9001e69e:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001e6a2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001e6a6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001e6aa:	00ed      	lsls	r5, r5, #3
9001e6ac:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
9001e6b0:	fb17 f706 	smulbb	r7, r7, r6
9001e6b4:	b2ed      	uxtb	r5, r5
9001e6b6:	fb18 f806 	smulbb	r8, r8, r6
9001e6ba:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001e6be:	10c7      	asrs	r7, r0, #3
9001e6c0:	fb15 f506 	smulbb	r5, r5, r6
9001e6c4:	00c0      	lsls	r0, r0, #3
9001e6c6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001e6ca:	fa1f fc8c 	uxth.w	ip, ip
9001e6ce:	b2c0      	uxtb	r0, r0
9001e6d0:	fb07 870b 	mla	r7, r7, fp, r8
9001e6d4:	fb00 500b 	mla	r0, r0, fp, r5
9001e6d8:	f10c 0501 	add.w	r5, ip, #1
9001e6dc:	b2bf      	uxth	r7, r7
9001e6de:	b280      	uxth	r0, r0
9001e6e0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001e6e4:	f107 0801 	add.w	r8, r7, #1
9001e6e8:	1c45      	adds	r5, r0, #1
9001e6ea:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001e6ee:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001e6f2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001e6f6:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001e6f8:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001e6fc:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001e700:	4401      	add	r1, r0
9001e702:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001e706:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001e708:	ea45 0c0c 	orr.w	ip, r5, ip
9001e70c:	4402      	add	r2, r0
9001e70e:	ea4c 0c08 	orr.w	ip, ip, r8
9001e712:	f82a cb02 	strh.w	ip, [sl], #2
9001e716:	e7af      	b.n	9001e678 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001e718:	f04f 0800 	mov.w	r8, #0
9001e71c:	f8bd a004 	ldrh.w	sl, [sp, #4]
9001e720:	eb03 0008 	add.w	r0, r3, r8
9001e724:	2800      	cmp	r0, #0
9001e726:	dc41      	bgt.n	9001e7ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
9001e728:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001e72c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e730:	9b00      	ldr	r3, [sp, #0]
9001e732:	2b00      	cmp	r3, #0
9001e734:	f340 8095 	ble.w	9001e862 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001e738:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001e73c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001e73e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001e742:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001e746:	eef0 6a62 	vmov.f32	s13, s5
9001e74a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001e74e:	ee31 1a05 	vadd.f32	s2, s2, s10
9001e752:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001e756:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
9001e75a:	eef0 6a43 	vmov.f32	s13, s6
9001e75e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001e762:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
9001e766:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001e76a:	ee61 7a27 	vmul.f32	s15, s2, s15
9001e76e:	ee77 2a62 	vsub.f32	s5, s14, s5
9001e772:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001e776:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001e77a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001e77e:	ee12 2a90 	vmov	r2, s5
9001e782:	eef0 2a47 	vmov.f32	s5, s14
9001e786:	fb92 f3f3 	sdiv	r3, r2, r3
9001e78a:	ee13 2a10 	vmov	r2, s6
9001e78e:	9311      	str	r3, [sp, #68]	@ 0x44
9001e790:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001e792:	eeb0 3a67 	vmov.f32	s6, s15
9001e796:	fb92 f3f3 	sdiv	r3, r2, r3
9001e79a:	9312      	str	r3, [sp, #72]	@ 0x48
9001e79c:	9b00      	ldr	r3, [sp, #0]
9001e79e:	9a03      	ldr	r2, [sp, #12]
9001e7a0:	3b01      	subs	r3, #1
9001e7a2:	9300      	str	r3, [sp, #0]
9001e7a4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001e7a6:	bf08      	it	eq
9001e7a8:	4613      	moveq	r3, r2
9001e7aa:	e72f      	b.n	9001e60c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001e7ac:	140f      	asrs	r7, r1, #16
9001e7ae:	d451      	bmi.n	9001e854 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001e7b0:	f8de 5008 	ldr.w	r5, [lr, #8]
9001e7b4:	42bd      	cmp	r5, r7
9001e7b6:	dd4d      	ble.n	9001e854 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001e7b8:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001e7bc:	d44a      	bmi.n	9001e854 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001e7be:	f8de 000c 	ldr.w	r0, [lr, #12]
9001e7c2:	4560      	cmp	r0, ip
9001e7c4:	dd46      	ble.n	9001e854 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001e7c6:	b22d      	sxth	r5, r5
9001e7c8:	9802      	ldr	r0, [sp, #8]
9001e7ca:	fb0c 7505 	mla	r5, ip, r5, r7
9001e7ce:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
9001e7d2:	f06f 0501 	mvn.w	r5, #1
9001e7d6:	fb05 fb08 	mul.w	fp, r5, r8
9001e7da:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001e7de:	f834 500b 	ldrh.w	r5, [r4, fp]
9001e7e2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001e7e6:	122f      	asrs	r7, r5, #8
9001e7e8:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001e7ec:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001e7f0:	00ed      	lsls	r5, r5, #3
9001e7f2:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001e7f6:	fb17 f706 	smulbb	r7, r7, r6
9001e7fa:	b2ed      	uxtb	r5, r5
9001e7fc:	fb19 f906 	smulbb	r9, r9, r6
9001e800:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001e804:	10c7      	asrs	r7, r0, #3
9001e806:	fb15 f506 	smulbb	r5, r5, r6
9001e80a:	00c0      	lsls	r0, r0, #3
9001e80c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001e810:	fa1f fc8c 	uxth.w	ip, ip
9001e814:	b2c0      	uxtb	r0, r0
9001e816:	fb07 970a 	mla	r7, r7, sl, r9
9001e81a:	fb00 500a 	mla	r0, r0, sl, r5
9001e81e:	f10c 0501 	add.w	r5, ip, #1
9001e822:	b2bf      	uxth	r7, r7
9001e824:	b280      	uxth	r0, r0
9001e826:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001e82a:	f107 0901 	add.w	r9, r7, #1
9001e82e:	1c45      	adds	r5, r0, #1
9001e830:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001e834:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001e838:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001e83c:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001e840:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001e844:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001e848:	ea45 0c0c 	orr.w	ip, r5, ip
9001e84c:	ea4c 0c09 	orr.w	ip, ip, r9
9001e850:	f824 c00b 	strh.w	ip, [r4, fp]
9001e854:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001e856:	f108 38ff 	add.w	r8, r8, #4294967295
9001e85a:	4401      	add	r1, r0
9001e85c:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001e85e:	4402      	add	r2, r0
9001e860:	e75e      	b.n	9001e720 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
9001e862:	b005      	add	sp, #20
9001e864:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001e868 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001e868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e86c:	b085      	sub	sp, #20
9001e86e:	4693      	mov	fp, r2
9001e870:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001e874:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001e876:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001e878:	6870      	ldr	r0, [r6, #4]
9001e87a:	9101      	str	r1, [sp, #4]
9001e87c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001e880:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
9001e884:	fb00 2404 	mla	r4, r0, r4, r2
9001e888:	6832      	ldr	r2, [r6, #0]
9001e88a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001e88e:	682a      	ldr	r2, [r5, #0]
9001e890:	9202      	str	r2, [sp, #8]
9001e892:	9a01      	ldr	r2, [sp, #4]
9001e894:	2a00      	cmp	r2, #0
9001e896:	dc03      	bgt.n	9001e8a0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001e898:	f1bb 0f00 	cmp.w	fp, #0
9001e89c:	f340 809a 	ble.w	9001e9d4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001e8a0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001e8a2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001e8a6:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001e8aa:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001e8ac:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001e8b0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001e8b4:	2b00      	cmp	r3, #0
9001e8b6:	dd0c      	ble.n	9001e8d2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
9001e8b8:	1406      	asrs	r6, r0, #16
9001e8ba:	d405      	bmi.n	9001e8c8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001e8bc:	454e      	cmp	r6, r9
9001e8be:	da03      	bge.n	9001e8c8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001e8c0:	1416      	asrs	r6, r2, #16
9001e8c2:	d401      	bmi.n	9001e8c8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001e8c4:	4546      	cmp	r6, r8
9001e8c6:	db05      	blt.n	9001e8d4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001e8c8:	4470      	add	r0, lr
9001e8ca:	4462      	add	r2, ip
9001e8cc:	3b01      	subs	r3, #1
9001e8ce:	3402      	adds	r4, #2
9001e8d0:	e7f0      	b.n	9001e8b4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001e8d2:	d00f      	beq.n	9001e8f4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001e8d4:	1e5e      	subs	r6, r3, #1
9001e8d6:	fb0e 0706 	mla	r7, lr, r6, r0
9001e8da:	143f      	asrs	r7, r7, #16
9001e8dc:	d541      	bpl.n	9001e962 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
9001e8de:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001e8e2:	4698      	mov	r8, r3
9001e8e4:	9603      	str	r6, [sp, #12]
9001e8e6:	f1b8 0f00 	cmp.w	r8, #0
9001e8ea:	dc56      	bgt.n	9001e99a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
9001e8ec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001e8f0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e8f4:	9b01      	ldr	r3, [sp, #4]
9001e8f6:	2b00      	cmp	r3, #0
9001e8f8:	dd6c      	ble.n	9001e9d4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001e8fa:	ee30 0a04 	vadd.f32	s0, s0, s8
9001e8fe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001e900:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001e904:	eeb0 6a62 	vmov.f32	s12, s5
9001e908:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001e90c:	ee31 1a05 	vadd.f32	s2, s2, s10
9001e910:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001e914:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001e918:	eeb0 6a43 	vmov.f32	s12, s6
9001e91c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001e920:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001e924:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001e928:	ee61 7a27 	vmul.f32	s15, s2, s15
9001e92c:	ee77 2a62 	vsub.f32	s5, s14, s5
9001e930:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001e934:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001e938:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001e93c:	ee12 2a90 	vmov	r2, s5
9001e940:	eef0 2a47 	vmov.f32	s5, s14
9001e944:	fb92 fef3 	sdiv	lr, r2, r3
9001e948:	ee13 2a10 	vmov	r2, s6
9001e94c:	eeb0 3a67 	vmov.f32	s6, s15
9001e950:	fb92 fcf3 	sdiv	ip, r2, r3
9001e954:	9b01      	ldr	r3, [sp, #4]
9001e956:	3b01      	subs	r3, #1
9001e958:	9301      	str	r3, [sp, #4]
9001e95a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001e95c:	bf08      	it	eq
9001e95e:	465b      	moveq	r3, fp
9001e960:	e797      	b.n	9001e892 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001e962:	454f      	cmp	r7, r9
9001e964:	dabb      	bge.n	9001e8de <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001e966:	fb0c 2606 	mla	r6, ip, r6, r2
9001e96a:	1436      	asrs	r6, r6, #16
9001e96c:	d4b7      	bmi.n	9001e8de <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001e96e:	4546      	cmp	r6, r8
9001e970:	dab5      	bge.n	9001e8de <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001e972:	461e      	mov	r6, r3
9001e974:	46a0      	mov	r8, r4
9001e976:	2e00      	cmp	r6, #0
9001e978:	ddb8      	ble.n	9001e8ec <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001e97a:	1417      	asrs	r7, r2, #16
9001e97c:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001e980:	ea4f 4920 	mov.w	r9, r0, asr #16
9001e984:	9902      	ldr	r1, [sp, #8]
9001e986:	4470      	add	r0, lr
9001e988:	4462      	add	r2, ip
9001e98a:	fb0a 9707 	mla	r7, sl, r7, r9
9001e98e:	3e01      	subs	r6, #1
9001e990:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001e994:	f828 7b02 	strh.w	r7, [r8], #2
9001e998:	e7ed      	b.n	9001e976 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
9001e99a:	ea5f 4920 	movs.w	r9, r0, asr #16
9001e99e:	d414      	bmi.n	9001e9ca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001e9a0:	68ae      	ldr	r6, [r5, #8]
9001e9a2:	454e      	cmp	r6, r9
9001e9a4:	dd11      	ble.n	9001e9ca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001e9a6:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001e9aa:	d40e      	bmi.n	9001e9ca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001e9ac:	68ef      	ldr	r7, [r5, #12]
9001e9ae:	4557      	cmp	r7, sl
9001e9b0:	dd0b      	ble.n	9001e9ca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001e9b2:	b236      	sxth	r6, r6
9001e9b4:	f06f 0101 	mvn.w	r1, #1
9001e9b8:	9f02      	ldr	r7, [sp, #8]
9001e9ba:	fb0a 9606 	mla	r6, sl, r6, r9
9001e9be:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001e9c2:	fb01 f608 	mul.w	r6, r1, r8
9001e9c6:	9903      	ldr	r1, [sp, #12]
9001e9c8:	538f      	strh	r7, [r1, r6]
9001e9ca:	4470      	add	r0, lr
9001e9cc:	4462      	add	r2, ip
9001e9ce:	f108 38ff 	add.w	r8, r8, #4294967295
9001e9d2:	e788      	b.n	9001e8e6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001e9d4:	b005      	add	sp, #20
9001e9d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001e9da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001e9da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e9de:	b087      	sub	sp, #28
9001e9e0:	468b      	mov	fp, r1
9001e9e2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001e9e6:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001e9e8:	9203      	str	r2, [sp, #12]
9001e9ea:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001e9ee:	6841      	ldr	r1, [r0, #4]
9001e9f0:	9204      	str	r2, [sp, #16]
9001e9f2:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
9001e9f6:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
9001e9fa:	fb01 2505 	mla	r5, r1, r5, r2
9001e9fe:	6802      	ldr	r2, [r0, #0]
9001ea00:	eb02 0545 	add.w	r5, r2, r5, lsl #1
9001ea04:	f8d9 2000 	ldr.w	r2, [r9]
9001ea08:	9201      	str	r2, [sp, #4]
9001ea0a:	f1bb 0f00 	cmp.w	fp, #0
9001ea0e:	dc03      	bgt.n	9001ea18 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001ea10:	9a03      	ldr	r2, [sp, #12]
9001ea12:	2a00      	cmp	r2, #0
9001ea14:	f340 8158 	ble.w	9001ecc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001ea18:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001ea1a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001ea1e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001ea22:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001ea24:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001ea28:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001ea2c:	2b00      	cmp	r3, #0
9001ea2e:	dd0e      	ble.n	9001ea4e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001ea30:	1402      	asrs	r2, r0, #16
9001ea32:	d405      	bmi.n	9001ea40 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001ea34:	42ba      	cmp	r2, r7
9001ea36:	da03      	bge.n	9001ea40 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001ea38:	140a      	asrs	r2, r1, #16
9001ea3a:	d401      	bmi.n	9001ea40 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001ea3c:	42b2      	cmp	r2, r6
9001ea3e:	db07      	blt.n	9001ea50 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001ea40:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001ea42:	3b01      	subs	r3, #1
9001ea44:	3502      	adds	r5, #2
9001ea46:	4410      	add	r0, r2
9001ea48:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001ea4a:	4411      	add	r1, r2
9001ea4c:	e7ee      	b.n	9001ea2c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001ea4e:	d017      	beq.n	9001ea80 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001ea50:	1e5a      	subs	r2, r3, #1
9001ea52:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001ea54:	fb04 0402 	mla	r4, r4, r2, r0
9001ea58:	1424      	asrs	r4, r4, #16
9001ea5a:	d409      	bmi.n	9001ea70 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001ea5c:	42bc      	cmp	r4, r7
9001ea5e:	da07      	bge.n	9001ea70 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001ea60:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001ea62:	fb04 1202 	mla	r2, r4, r2, r1
9001ea66:	1412      	asrs	r2, r2, #16
9001ea68:	d402      	bmi.n	9001ea70 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001ea6a:	42b2      	cmp	r2, r6
9001ea6c:	f2c0 80bf 	blt.w	9001ebee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001ea70:	2700      	movs	r7, #0
9001ea72:	19da      	adds	r2, r3, r7
9001ea74:	2a00      	cmp	r2, #0
9001ea76:	dc3e      	bgt.n	9001eaf6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001ea78:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ea7c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001ea80:	f1bb 0f00 	cmp.w	fp, #0
9001ea84:	f340 8120 	ble.w	9001ecc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001ea88:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ea8c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ea8e:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ea92:	f1bb 0b01 	subs.w	fp, fp, #1
9001ea96:	eeb0 6a62 	vmov.f32	s12, s5
9001ea9a:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001ea9e:	ee31 1a05 	vadd.f32	s2, s2, s10
9001eaa2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001eaa6:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001eaaa:	eeb0 6a43 	vmov.f32	s12, s6
9001eaae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001eab2:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001eab6:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001eaba:	ee61 7a27 	vmul.f32	s15, s2, s15
9001eabe:	ee77 2a62 	vsub.f32	s5, s14, s5
9001eac2:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001eac6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001eaca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001eace:	ee12 2a90 	vmov	r2, s5
9001ead2:	eef0 2a47 	vmov.f32	s5, s14
9001ead6:	fb92 f3f3 	sdiv	r3, r2, r3
9001eada:	ee13 2a10 	vmov	r2, s6
9001eade:	9313      	str	r3, [sp, #76]	@ 0x4c
9001eae0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001eae2:	eeb0 3a67 	vmov.f32	s6, s15
9001eae6:	fb92 f3f3 	sdiv	r3, r2, r3
9001eaea:	9a03      	ldr	r2, [sp, #12]
9001eaec:	9314      	str	r3, [sp, #80]	@ 0x50
9001eaee:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001eaf0:	bf08      	it	eq
9001eaf2:	4613      	moveq	r3, r2
9001eaf4:	e789      	b.n	9001ea0a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001eaf6:	1406      	asrs	r6, r0, #16
9001eaf8:	d42d      	bmi.n	9001eb56 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001eafa:	f8d9 4008 	ldr.w	r4, [r9, #8]
9001eafe:	42b4      	cmp	r4, r6
9001eb00:	dd29      	ble.n	9001eb56 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001eb02:	ea5f 4c21 	movs.w	ip, r1, asr #16
9001eb06:	d426      	bmi.n	9001eb56 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001eb08:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001eb0c:	4562      	cmp	r2, ip
9001eb0e:	dd22      	ble.n	9001eb56 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001eb10:	b224      	sxth	r4, r4
9001eb12:	9a01      	ldr	r2, [sp, #4]
9001eb14:	fb0c 6404 	mla	r4, ip, r4, r6
9001eb18:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
9001eb1c:	0e22      	lsrs	r2, r4, #24
9001eb1e:	d01a      	beq.n	9001eb56 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001eb20:	9e04      	ldr	r6, [sp, #16]
9001eb22:	4372      	muls	r2, r6
9001eb24:	1c56      	adds	r6, r2, #1
9001eb26:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001eb2a:	0a26      	lsrs	r6, r4, #8
9001eb2c:	1212      	asrs	r2, r2, #8
9001eb2e:	9605      	str	r6, [sp, #20]
9001eb30:	2aff      	cmp	r2, #255	@ 0xff
9001eb32:	d116      	bne.n	9001eb62 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
9001eb34:	f06f 0201 	mvn.w	r2, #1
9001eb38:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001eb3c:	fb02 fc07 	mul.w	ip, r2, r7
9001eb40:	0962      	lsrs	r2, r4, #5
9001eb42:	f026 0607 	bic.w	r6, r6, #7
9001eb46:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001eb4a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001eb4e:	4316      	orrs	r6, r2
9001eb50:	4326      	orrs	r6, r4
9001eb52:	f825 600c 	strh.w	r6, [r5, ip]
9001eb56:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001eb58:	3f01      	subs	r7, #1
9001eb5a:	4410      	add	r0, r2
9001eb5c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001eb5e:	4411      	add	r1, r2
9001eb60:	e787      	b.n	9001ea72 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001eb62:	f06f 0601 	mvn.w	r6, #1
9001eb66:	fa1f fa82 	uxth.w	sl, r2
9001eb6a:	f3c4 4c07 	ubfx	ip, r4, #16, #8
9001eb6e:	43d2      	mvns	r2, r2
9001eb70:	437e      	muls	r6, r7
9001eb72:	b2e4      	uxtb	r4, r4
9001eb74:	fb1c fc0a 	smulbb	ip, ip, sl
9001eb78:	b2d2      	uxtb	r2, r2
9001eb7a:	f835 8006 	ldrh.w	r8, [r5, r6]
9001eb7e:	fb14 f40a 	smulbb	r4, r4, sl
9001eb82:	9602      	str	r6, [sp, #8]
9001eb84:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001eb88:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001eb8c:	fb16 f60a 	smulbb	r6, r6, sl
9001eb90:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001eb94:	fb0e ce02 	mla	lr, lr, r2, ip
9001eb98:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001eb9c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001eba0:	fa1f fe8e 	uxth.w	lr, lr
9001eba4:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001eba8:	fa5f f888 	uxtb.w	r8, r8
9001ebac:	fb0c 6c02 	mla	ip, ip, r2, r6
9001ebb0:	fb08 4402 	mla	r4, r8, r2, r4
9001ebb4:	f10e 0201 	add.w	r2, lr, #1
9001ebb8:	fa1f fc8c 	uxth.w	ip, ip
9001ebbc:	b2a4      	uxth	r4, r4
9001ebbe:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001ebc2:	9a02      	ldr	r2, [sp, #8]
9001ebc4:	1c66      	adds	r6, r4, #1
9001ebc6:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001ebca:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001ebce:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001ebd2:	ea46 0e0e 	orr.w	lr, r6, lr
9001ebd6:	f10c 0601 	add.w	r6, ip, #1
9001ebda:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001ebde:	0976      	lsrs	r6, r6, #5
9001ebe0:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001ebe4:	ea4e 0e06 	orr.w	lr, lr, r6
9001ebe8:	f825 e002 	strh.w	lr, [r5, r2]
9001ebec:	e7b3      	b.n	9001eb56 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001ebee:	f04f 0800 	mov.w	r8, #0
9001ebf2:	eba3 0208 	sub.w	r2, r3, r8
9001ebf6:	2a00      	cmp	r2, #0
9001ebf8:	f77f af3e 	ble.w	9001ea78 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001ebfc:	1404      	asrs	r4, r0, #16
9001ebfe:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
9001ec02:	140a      	asrs	r2, r1, #16
9001ec04:	fb06 4202 	mla	r2, r6, r2, r4
9001ec08:	9c01      	ldr	r4, [sp, #4]
9001ec0a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
9001ec0e:	0e22      	lsrs	r2, r4, #24
9001ec10:	d015      	beq.n	9001ec3e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001ec12:	9e04      	ldr	r6, [sp, #16]
9001ec14:	4372      	muls	r2, r6
9001ec16:	1c56      	adds	r6, r2, #1
9001ec18:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001ec1c:	0a26      	lsrs	r6, r4, #8
9001ec1e:	1212      	asrs	r2, r2, #8
9001ec20:	2aff      	cmp	r2, #255	@ 0xff
9001ec22:	d113      	bne.n	9001ec4c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001ec24:	0962      	lsrs	r2, r4, #5
9001ec26:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001ec2a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001ec2e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001ec32:	f026 0607 	bic.w	r6, r6, #7
9001ec36:	4316      	orrs	r6, r2
9001ec38:	4326      	orrs	r6, r4
9001ec3a:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
9001ec3e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001ec40:	f108 0801 	add.w	r8, r8, #1
9001ec44:	4410      	add	r0, r2
9001ec46:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001ec48:	4411      	add	r1, r2
9001ec4a:	e7d2      	b.n	9001ebf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
9001ec4c:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
9001ec50:	fa1f fa82 	uxth.w	sl, r2
9001ec54:	f3c4 4707 	ubfx	r7, r4, #16, #8
9001ec58:	43d2      	mvns	r2, r2
9001ec5a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001ec5e:	fb17 f70a 	smulbb	r7, r7, sl
9001ec62:	b2d2      	uxtb	r2, r2
9001ec64:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001ec68:	b2e4      	uxtb	r4, r4
9001ec6a:	b2f6      	uxtb	r6, r6
9001ec6c:	fb0c 7c02 	mla	ip, ip, r2, r7
9001ec70:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001ec74:	fb14 f40a 	smulbb	r4, r4, sl
9001ec78:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001ec7c:	fa1f fc8c 	uxth.w	ip, ip
9001ec80:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001ec84:	fb16 f60a 	smulbb	r6, r6, sl
9001ec88:	fa5f fe8e 	uxtb.w	lr, lr
9001ec8c:	fb0e 4402 	mla	r4, lr, r2, r4
9001ec90:	fb07 6702 	mla	r7, r7, r2, r6
9001ec94:	f10c 0201 	add.w	r2, ip, #1
9001ec98:	b2a4      	uxth	r4, r4
9001ec9a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001ec9e:	1c66      	adds	r6, r4, #1
9001eca0:	b2bf      	uxth	r7, r7
9001eca2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001eca6:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001ecaa:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001ecae:	ea46 0c0c 	orr.w	ip, r6, ip
9001ecb2:	1c7e      	adds	r6, r7, #1
9001ecb4:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001ecb8:	0976      	lsrs	r6, r6, #5
9001ecba:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001ecbe:	ea4c 0c06 	orr.w	ip, ip, r6
9001ecc2:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
9001ecc6:	e7ba      	b.n	9001ec3e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001ecc8:	b007      	add	sp, #28
9001ecca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001ecd0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001ecd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ecd4:	b085      	sub	sp, #20
9001ecd6:	468b      	mov	fp, r1
9001ecd8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001ecdc:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001ecde:	9203      	str	r2, [sp, #12]
9001ece0:	6841      	ldr	r1, [r0, #4]
9001ece2:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
9001ece6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001ecea:	fb01 2404 	mla	r4, r1, r4, r2
9001ecee:	6802      	ldr	r2, [r0, #0]
9001ecf0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001ecf4:	f8d8 2000 	ldr.w	r2, [r8]
9001ecf8:	9201      	str	r2, [sp, #4]
9001ecfa:	f1bb 0f00 	cmp.w	fp, #0
9001ecfe:	dc03      	bgt.n	9001ed08 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001ed00:	9a03      	ldr	r2, [sp, #12]
9001ed02:	2a00      	cmp	r2, #0
9001ed04:	f340 814f 	ble.w	9001efa6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001ed08:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001ed0a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001ed0e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001ed12:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001ed14:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001ed18:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001ed1c:	2b00      	cmp	r3, #0
9001ed1e:	dd0e      	ble.n	9001ed3e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001ed20:	1408      	asrs	r0, r1, #16
9001ed22:	d405      	bmi.n	9001ed30 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001ed24:	42b8      	cmp	r0, r7
9001ed26:	da03      	bge.n	9001ed30 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001ed28:	1410      	asrs	r0, r2, #16
9001ed2a:	d401      	bmi.n	9001ed30 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001ed2c:	42b0      	cmp	r0, r6
9001ed2e:	db07      	blt.n	9001ed40 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001ed30:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001ed32:	3b01      	subs	r3, #1
9001ed34:	3402      	adds	r4, #2
9001ed36:	4401      	add	r1, r0
9001ed38:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001ed3a:	4402      	add	r2, r0
9001ed3c:	e7ee      	b.n	9001ed1c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001ed3e:	d017      	beq.n	9001ed70 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001ed40:	1e58      	subs	r0, r3, #1
9001ed42:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001ed44:	fb05 1500 	mla	r5, r5, r0, r1
9001ed48:	142d      	asrs	r5, r5, #16
9001ed4a:	d409      	bmi.n	9001ed60 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001ed4c:	42bd      	cmp	r5, r7
9001ed4e:	da07      	bge.n	9001ed60 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001ed50:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001ed52:	fb05 2000 	mla	r0, r5, r0, r2
9001ed56:	1400      	asrs	r0, r0, #16
9001ed58:	d402      	bmi.n	9001ed60 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001ed5a:	42b0      	cmp	r0, r6
9001ed5c:	f2c0 80ba 	blt.w	9001eed4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001ed60:	2600      	movs	r6, #0
9001ed62:	1998      	adds	r0, r3, r6
9001ed64:	2800      	cmp	r0, #0
9001ed66:	dc3e      	bgt.n	9001ede6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001ed68:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ed6c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ed70:	f1bb 0f00 	cmp.w	fp, #0
9001ed74:	f340 8117 	ble.w	9001efa6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001ed78:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ed7c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001ed7e:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ed82:	f1bb 0b01 	subs.w	fp, fp, #1
9001ed86:	eeb0 6a62 	vmov.f32	s12, s5
9001ed8a:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001ed8e:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ed92:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ed96:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001ed9a:	eeb0 6a43 	vmov.f32	s12, s6
9001ed9e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001eda2:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001eda6:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001edaa:	ee61 7a27 	vmul.f32	s15, s2, s15
9001edae:	ee77 2a62 	vsub.f32	s5, s14, s5
9001edb2:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001edb6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001edba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001edbe:	ee12 2a90 	vmov	r2, s5
9001edc2:	eef0 2a47 	vmov.f32	s5, s14
9001edc6:	fb92 f3f3 	sdiv	r3, r2, r3
9001edca:	ee13 2a10 	vmov	r2, s6
9001edce:	9311      	str	r3, [sp, #68]	@ 0x44
9001edd0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001edd2:	eeb0 3a67 	vmov.f32	s6, s15
9001edd6:	fb92 f3f3 	sdiv	r3, r2, r3
9001edda:	9a03      	ldr	r2, [sp, #12]
9001eddc:	9312      	str	r3, [sp, #72]	@ 0x48
9001edde:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001ede0:	bf08      	it	eq
9001ede2:	4613      	moveq	r3, r2
9001ede4:	e789      	b.n	9001ecfa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001ede6:	140f      	asrs	r7, r1, #16
9001ede8:	d424      	bmi.n	9001ee34 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001edea:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001edee:	42bd      	cmp	r5, r7
9001edf0:	dd20      	ble.n	9001ee34 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001edf2:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001edf6:	d41d      	bmi.n	9001ee34 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001edf8:	f8d8 000c 	ldr.w	r0, [r8, #12]
9001edfc:	4560      	cmp	r0, ip
9001edfe:	dd19      	ble.n	9001ee34 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001ee00:	b22d      	sxth	r5, r5
9001ee02:	9801      	ldr	r0, [sp, #4]
9001ee04:	fb0c 7505 	mla	r5, ip, r5, r7
9001ee08:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
9001ee0c:	0e07      	lsrs	r7, r0, #24
9001ee0e:	2fff      	cmp	r7, #255	@ 0xff
9001ee10:	d116      	bne.n	9001ee40 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001ee12:	f06f 0501 	mvn.w	r5, #1
9001ee16:	fb05 f706 	mul.w	r7, r5, r6
9001ee1a:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
9001ee1e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001ee22:	0945      	lsrs	r5, r0, #5
9001ee24:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001ee28:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001ee2c:	ea4c 0505 	orr.w	r5, ip, r5
9001ee30:	4305      	orrs	r5, r0
9001ee32:	53e5      	strh	r5, [r4, r7]
9001ee34:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001ee36:	3e01      	subs	r6, #1
9001ee38:	4401      	add	r1, r0
9001ee3a:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001ee3c:	4402      	add	r2, r0
9001ee3e:	e790      	b.n	9001ed62 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001ee40:	b2fd      	uxtb	r5, r7
9001ee42:	2f00      	cmp	r7, #0
9001ee44:	d0f6      	beq.n	9001ee34 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001ee46:	f06f 0701 	mvn.w	r7, #1
9001ee4a:	fa1f f985 	uxth.w	r9, r5
9001ee4e:	43ed      	mvns	r5, r5
9001ee50:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001ee54:	4377      	muls	r7, r6
9001ee56:	fb1a fa09 	smulbb	sl, sl, r9
9001ee5a:	b2ed      	uxtb	r5, r5
9001ee5c:	f834 e007 	ldrh.w	lr, [r4, r7]
9001ee60:	9702      	str	r7, [sp, #8]
9001ee62:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001ee66:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001ee6a:	fb17 f709 	smulbb	r7, r7, r9
9001ee6e:	b2c0      	uxtb	r0, r0
9001ee70:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001ee74:	fb10 f009 	smulbb	r0, r0, r9
9001ee78:	fb0c 7c05 	mla	ip, ip, r5, r7
9001ee7c:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001ee80:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001ee84:	fa1f fc8c 	uxth.w	ip, ip
9001ee88:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001ee8c:	fa5f fe8e 	uxtb.w	lr, lr
9001ee90:	fb07 a705 	mla	r7, r7, r5, sl
9001ee94:	fb0e 0005 	mla	r0, lr, r5, r0
9001ee98:	f10c 0501 	add.w	r5, ip, #1
9001ee9c:	b2bf      	uxth	r7, r7
9001ee9e:	b280      	uxth	r0, r0
9001eea0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001eea4:	f100 0a01 	add.w	sl, r0, #1
9001eea8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001eeac:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001eeb0:	9802      	ldr	r0, [sp, #8]
9001eeb2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001eeb6:	ea4a 0c0c 	orr.w	ip, sl, ip
9001eeba:	f107 0a01 	add.w	sl, r7, #1
9001eebe:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001eec2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001eec6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001eeca:	ea4c 0c0a 	orr.w	ip, ip, sl
9001eece:	f824 c000 	strh.w	ip, [r4, r0]
9001eed2:	e7af      	b.n	9001ee34 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001eed4:	f04f 0e00 	mov.w	lr, #0
9001eed8:	eba3 000e 	sub.w	r0, r3, lr
9001eedc:	2800      	cmp	r0, #0
9001eede:	f77f af43 	ble.w	9001ed68 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001eee2:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001eee6:	140d      	asrs	r5, r1, #16
9001eee8:	1410      	asrs	r0, r2, #16
9001eeea:	fb06 5000 	mla	r0, r6, r0, r5
9001eeee:	9d01      	ldr	r5, [sp, #4]
9001eef0:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001eef4:	0e2e      	lsrs	r6, r5, #24
9001eef6:	2eff      	cmp	r6, #255	@ 0xff
9001eef8:	d112      	bne.n	9001ef20 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
9001eefa:	482c      	ldr	r0, [pc, #176]	@ (9001efac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
9001eefc:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001ef00:	0968      	lsrs	r0, r5, #5
9001ef02:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001ef06:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001ef0a:	4330      	orrs	r0, r6
9001ef0c:	4328      	orrs	r0, r5
9001ef0e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
9001ef12:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001ef14:	f10e 0e01 	add.w	lr, lr, #1
9001ef18:	4401      	add	r1, r0
9001ef1a:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001ef1c:	4402      	add	r2, r0
9001ef1e:	e7db      	b.n	9001eed8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
9001ef20:	b2f0      	uxtb	r0, r6
9001ef22:	2e00      	cmp	r6, #0
9001ef24:	d0f5      	beq.n	9001ef12 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001ef26:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001ef2a:	fa1f f980 	uxth.w	r9, r0
9001ef2e:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001ef32:	43c0      	mvns	r0, r0
9001ef34:	ea4f 272c 	mov.w	r7, ip, asr #8
9001ef38:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001ef3c:	fb16 f609 	smulbb	r6, r6, r9
9001ef40:	b2c0      	uxtb	r0, r0
9001ef42:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001ef46:	b2ed      	uxtb	r5, r5
9001ef48:	fb1a fa09 	smulbb	sl, sl, r9
9001ef4c:	fb07 6700 	mla	r7, r7, r0, r6
9001ef50:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001ef54:	fb15 f509 	smulbb	r5, r5, r9
9001ef58:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001ef5c:	b2bf      	uxth	r7, r7
9001ef5e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001ef62:	fa5f fc8c 	uxtb.w	ip, ip
9001ef66:	fb06 a600 	mla	r6, r6, r0, sl
9001ef6a:	fb0c 5500 	mla	r5, ip, r0, r5
9001ef6e:	1c78      	adds	r0, r7, #1
9001ef70:	b2b6      	uxth	r6, r6
9001ef72:	b2ad      	uxth	r5, r5
9001ef74:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001ef78:	f105 0a01 	add.w	sl, r5, #1
9001ef7c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001ef80:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001ef84:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001ef88:	ea4a 0707 	orr.w	r7, sl, r7
9001ef8c:	f106 0a01 	add.w	sl, r6, #1
9001ef90:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001ef94:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001ef98:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001ef9c:	ea47 070a 	orr.w	r7, r7, sl
9001efa0:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
9001efa4:	e7b5      	b.n	9001ef12 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001efa6:	b005      	add	sp, #20
9001efa8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001efac:	fffff800 	.word	0xfffff800

9001efb0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001efb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001efb4:	b087      	sub	sp, #28
9001efb6:	468b      	mov	fp, r1
9001efb8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001efbc:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001efbe:	9203      	str	r2, [sp, #12]
9001efc0:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001efc4:	6841      	ldr	r1, [r0, #4]
9001efc6:	9204      	str	r2, [sp, #16]
9001efc8:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
9001efcc:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001efd0:	fb01 2404 	mla	r4, r1, r4, r2
9001efd4:	6802      	ldr	r2, [r0, #0]
9001efd6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001efda:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001efde:	3201      	adds	r2, #1
9001efe0:	f022 0201 	bic.w	r2, r2, #1
9001efe4:	9200      	str	r2, [sp, #0]
9001efe6:	f8d9 2000 	ldr.w	r2, [r9]
9001efea:	9201      	str	r2, [sp, #4]
9001efec:	f1bb 0f00 	cmp.w	fp, #0
9001eff0:	dc03      	bgt.n	9001effa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001eff2:	9a03      	ldr	r2, [sp, #12]
9001eff4:	2a00      	cmp	r2, #0
9001eff6:	f340 816a 	ble.w	9001f2ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001effa:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001effc:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001f000:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001f004:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001f006:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001f00a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001f00e:	2b00      	cmp	r3, #0
9001f010:	dd0e      	ble.n	9001f030 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001f012:	1402      	asrs	r2, r0, #16
9001f014:	d405      	bmi.n	9001f022 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001f016:	42ba      	cmp	r2, r7
9001f018:	da03      	bge.n	9001f022 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001f01a:	140a      	asrs	r2, r1, #16
9001f01c:	d401      	bmi.n	9001f022 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001f01e:	42b2      	cmp	r2, r6
9001f020:	db07      	blt.n	9001f032 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9001f022:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001f024:	3b01      	subs	r3, #1
9001f026:	3402      	adds	r4, #2
9001f028:	4410      	add	r0, r2
9001f02a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001f02c:	4411      	add	r1, r2
9001f02e:	e7ee      	b.n	9001f00e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001f030:	d017      	beq.n	9001f062 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001f032:	1e5a      	subs	r2, r3, #1
9001f034:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001f036:	fb05 0502 	mla	r5, r5, r2, r0
9001f03a:	142d      	asrs	r5, r5, #16
9001f03c:	d409      	bmi.n	9001f052 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001f03e:	42bd      	cmp	r5, r7
9001f040:	da07      	bge.n	9001f052 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001f042:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001f044:	fb05 1202 	mla	r2, r5, r2, r1
9001f048:	1412      	asrs	r2, r2, #16
9001f04a:	d402      	bmi.n	9001f052 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001f04c:	42b2      	cmp	r2, r6
9001f04e:	f2c0 80c8 	blt.w	9001f1e2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
9001f052:	2700      	movs	r7, #0
9001f054:	19da      	adds	r2, r3, r7
9001f056:	2a00      	cmp	r2, #0
9001f058:	dc3e      	bgt.n	9001f0d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001f05a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001f05e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001f062:	f1bb 0f00 	cmp.w	fp, #0
9001f066:	f340 8132 	ble.w	9001f2ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001f06a:	ee30 0a04 	vadd.f32	s0, s0, s8
9001f06e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001f070:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001f074:	f1bb 0b01 	subs.w	fp, fp, #1
9001f078:	eeb0 6a62 	vmov.f32	s12, s5
9001f07c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001f080:	ee31 1a05 	vadd.f32	s2, s2, s10
9001f084:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001f088:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001f08c:	eeb0 6a43 	vmov.f32	s12, s6
9001f090:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001f094:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001f098:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001f09c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001f0a0:	ee77 2a62 	vsub.f32	s5, s14, s5
9001f0a4:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001f0a8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001f0ac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001f0b0:	ee12 2a90 	vmov	r2, s5
9001f0b4:	eef0 2a47 	vmov.f32	s5, s14
9001f0b8:	fb92 f3f3 	sdiv	r3, r2, r3
9001f0bc:	ee13 2a10 	vmov	r2, s6
9001f0c0:	9313      	str	r3, [sp, #76]	@ 0x4c
9001f0c2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001f0c4:	eeb0 3a67 	vmov.f32	s6, s15
9001f0c8:	fb92 f3f3 	sdiv	r3, r2, r3
9001f0cc:	9a03      	ldr	r2, [sp, #12]
9001f0ce:	9314      	str	r3, [sp, #80]	@ 0x50
9001f0d0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001f0d2:	bf08      	it	eq
9001f0d4:	4613      	moveq	r3, r2
9001f0d6:	e789      	b.n	9001efec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001f0d8:	1405      	asrs	r5, r0, #16
9001f0da:	d436      	bmi.n	9001f14a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001f0dc:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001f0e0:	42aa      	cmp	r2, r5
9001f0e2:	dd32      	ble.n	9001f14a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001f0e4:	140e      	asrs	r6, r1, #16
9001f0e6:	d430      	bmi.n	9001f14a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001f0e8:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001f0ec:	42b2      	cmp	r2, r6
9001f0ee:	dd2c      	ble.n	9001f14a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001f0f0:	9a00      	ldr	r2, [sp, #0]
9001f0f2:	fb06 5502 	mla	r5, r6, r2, r5
9001f0f6:	9e01      	ldr	r6, [sp, #4]
9001f0f8:	086a      	lsrs	r2, r5, #1
9001f0fa:	5cb2      	ldrb	r2, [r6, r2]
9001f0fc:	07ee      	lsls	r6, r5, #31
9001f0fe:	bf54      	ite	pl
9001f100:	f002 020f 	andpl.w	r2, r2, #15
9001f104:	1112      	asrmi	r2, r2, #4
9001f106:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001f10a:	b2d2      	uxtb	r2, r2
9001f10c:	b1ea      	cbz	r2, 9001f14a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001f10e:	9d04      	ldr	r5, [sp, #16]
9001f110:	436a      	muls	r2, r5
9001f112:	1c55      	adds	r5, r2, #1
9001f114:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001f118:	4d6e      	ldr	r5, [pc, #440]	@ (9001f2d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001f11a:	1212      	asrs	r2, r2, #8
9001f11c:	682d      	ldr	r5, [r5, #0]
9001f11e:	2aff      	cmp	r2, #255	@ 0xff
9001f120:	ea4f 2615 	mov.w	r6, r5, lsr #8
9001f124:	9605      	str	r6, [sp, #20]
9001f126:	d116      	bne.n	9001f156 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
9001f128:	f06f 0201 	mvn.w	r2, #1
9001f12c:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001f130:	fb02 fc07 	mul.w	ip, r2, r7
9001f134:	096a      	lsrs	r2, r5, #5
9001f136:	f026 0607 	bic.w	r6, r6, #7
9001f13a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001f13e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001f142:	4316      	orrs	r6, r2
9001f144:	432e      	orrs	r6, r5
9001f146:	f824 600c 	strh.w	r6, [r4, ip]
9001f14a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001f14c:	3f01      	subs	r7, #1
9001f14e:	4410      	add	r0, r2
9001f150:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001f152:	4411      	add	r1, r2
9001f154:	e77e      	b.n	9001f054 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
9001f156:	f06f 0601 	mvn.w	r6, #1
9001f15a:	fa1f fa82 	uxth.w	sl, r2
9001f15e:	f3c5 4c07 	ubfx	ip, r5, #16, #8
9001f162:	43d2      	mvns	r2, r2
9001f164:	437e      	muls	r6, r7
9001f166:	b2ed      	uxtb	r5, r5
9001f168:	fb1c fc0a 	smulbb	ip, ip, sl
9001f16c:	b2d2      	uxtb	r2, r2
9001f16e:	f834 8006 	ldrh.w	r8, [r4, r6]
9001f172:	fb15 f50a 	smulbb	r5, r5, sl
9001f176:	9602      	str	r6, [sp, #8]
9001f178:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001f17c:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001f180:	fb16 f60a 	smulbb	r6, r6, sl
9001f184:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001f188:	fb0e ce02 	mla	lr, lr, r2, ip
9001f18c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001f190:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001f194:	fa1f fe8e 	uxth.w	lr, lr
9001f198:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001f19c:	fa5f f888 	uxtb.w	r8, r8
9001f1a0:	fb0c 6c02 	mla	ip, ip, r2, r6
9001f1a4:	fb08 5502 	mla	r5, r8, r2, r5
9001f1a8:	f10e 0201 	add.w	r2, lr, #1
9001f1ac:	fa1f fc8c 	uxth.w	ip, ip
9001f1b0:	b2ad      	uxth	r5, r5
9001f1b2:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001f1b6:	9a02      	ldr	r2, [sp, #8]
9001f1b8:	1c6e      	adds	r6, r5, #1
9001f1ba:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001f1be:	eb06 2615 	add.w	r6, r6, r5, lsr #8
9001f1c2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001f1c6:	ea46 0e0e 	orr.w	lr, r6, lr
9001f1ca:	f10c 0601 	add.w	r6, ip, #1
9001f1ce:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001f1d2:	0976      	lsrs	r6, r6, #5
9001f1d4:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001f1d8:	ea4e 0e06 	orr.w	lr, lr, r6
9001f1dc:	f824 e002 	strh.w	lr, [r4, r2]
9001f1e0:	e7b3      	b.n	9001f14a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001f1e2:	f04f 0800 	mov.w	r8, #0
9001f1e6:	eba3 0208 	sub.w	r2, r3, r8
9001f1ea:	2a00      	cmp	r2, #0
9001f1ec:	f77f af35 	ble.w	9001f05a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001f1f0:	1402      	asrs	r2, r0, #16
9001f1f2:	9e00      	ldr	r6, [sp, #0]
9001f1f4:	140d      	asrs	r5, r1, #16
9001f1f6:	fb06 2505 	mla	r5, r6, r5, r2
9001f1fa:	9e01      	ldr	r6, [sp, #4]
9001f1fc:	086a      	lsrs	r2, r5, #1
9001f1fe:	07ed      	lsls	r5, r5, #31
9001f200:	5cb2      	ldrb	r2, [r6, r2]
9001f202:	bf54      	ite	pl
9001f204:	f002 020f 	andpl.w	r2, r2, #15
9001f208:	1112      	asrmi	r2, r2, #4
9001f20a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001f20e:	b2d2      	uxtb	r2, r2
9001f210:	b1c2      	cbz	r2, 9001f244 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001f212:	9d04      	ldr	r5, [sp, #16]
9001f214:	436a      	muls	r2, r5
9001f216:	1c55      	adds	r5, r2, #1
9001f218:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001f21c:	4d2d      	ldr	r5, [pc, #180]	@ (9001f2d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001f21e:	1212      	asrs	r2, r2, #8
9001f220:	682e      	ldr	r6, [r5, #0]
9001f222:	2aff      	cmp	r2, #255	@ 0xff
9001f224:	ea4f 2516 	mov.w	r5, r6, lsr #8
9001f228:	d113      	bne.n	9001f252 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001f22a:	0972      	lsrs	r2, r6, #5
9001f22c:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
9001f230:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001f234:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001f238:	f025 0507 	bic.w	r5, r5, #7
9001f23c:	4315      	orrs	r5, r2
9001f23e:	4335      	orrs	r5, r6
9001f240:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
9001f244:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001f246:	f108 0801 	add.w	r8, r8, #1
9001f24a:	4410      	add	r0, r2
9001f24c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001f24e:	4411      	add	r1, r2
9001f250:	e7c9      	b.n	9001f1e6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001f252:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001f256:	fa1f fa82 	uxth.w	sl, r2
9001f25a:	f3c6 4707 	ubfx	r7, r6, #16, #8
9001f25e:	43d2      	mvns	r2, r2
9001f260:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001f264:	fb17 f70a 	smulbb	r7, r7, sl
9001f268:	b2d2      	uxtb	r2, r2
9001f26a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001f26e:	b2f6      	uxtb	r6, r6
9001f270:	b2ed      	uxtb	r5, r5
9001f272:	fb0c 7c02 	mla	ip, ip, r2, r7
9001f276:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001f27a:	fb16 f60a 	smulbb	r6, r6, sl
9001f27e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001f282:	fa1f fc8c 	uxth.w	ip, ip
9001f286:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001f28a:	fb15 f50a 	smulbb	r5, r5, sl
9001f28e:	fa5f fe8e 	uxtb.w	lr, lr
9001f292:	fb0e 6602 	mla	r6, lr, r2, r6
9001f296:	fb07 5702 	mla	r7, r7, r2, r5
9001f29a:	f10c 0201 	add.w	r2, ip, #1
9001f29e:	b2b6      	uxth	r6, r6
9001f2a0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001f2a4:	1c75      	adds	r5, r6, #1
9001f2a6:	b2bf      	uxth	r7, r7
9001f2a8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001f2ac:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001f2b0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001f2b4:	ea45 0c0c 	orr.w	ip, r5, ip
9001f2b8:	1c7d      	adds	r5, r7, #1
9001f2ba:	eb05 2517 	add.w	r5, r5, r7, lsr #8
9001f2be:	096d      	lsrs	r5, r5, #5
9001f2c0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001f2c4:	ea4c 0c05 	orr.w	ip, ip, r5
9001f2c8:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
9001f2cc:	e7ba      	b.n	9001f244 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001f2ce:	b007      	add	sp, #28
9001f2d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f2d4:	24021c1c 	.word	0x24021c1c

9001f2d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001f2d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f2dc:	b087      	sub	sp, #28
9001f2de:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001f2e2:	f8df 8308 	ldr.w	r8, [pc, #776]	@ 9001f5ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
9001f2e6:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001f2e8:	9101      	str	r1, [sp, #4]
9001f2ea:	9205      	str	r2, [sp, #20]
9001f2ec:	6841      	ldr	r1, [r0, #4]
9001f2ee:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
9001f2f2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001f2f6:	fb01 2404 	mla	r4, r1, r4, r2
9001f2fa:	6802      	ldr	r2, [r0, #0]
9001f2fc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001f300:	f8db 2008 	ldr.w	r2, [fp, #8]
9001f304:	3201      	adds	r2, #1
9001f306:	f022 0201 	bic.w	r2, r2, #1
9001f30a:	9202      	str	r2, [sp, #8]
9001f30c:	f8db 2000 	ldr.w	r2, [fp]
9001f310:	9203      	str	r2, [sp, #12]
9001f312:	9a01      	ldr	r2, [sp, #4]
9001f314:	2a00      	cmp	r2, #0
9001f316:	dc03      	bgt.n	9001f320 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001f318:	9a05      	ldr	r2, [sp, #20]
9001f31a:	2a00      	cmp	r2, #0
9001f31c:	f340 8162 	ble.w	9001f5e4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001f320:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001f322:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
9001f326:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001f32a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001f32c:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
9001f330:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001f334:	2b00      	cmp	r3, #0
9001f336:	dd0e      	ble.n	9001f356 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001f338:	1402      	asrs	r2, r0, #16
9001f33a:	d405      	bmi.n	9001f348 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001f33c:	42ba      	cmp	r2, r7
9001f33e:	da03      	bge.n	9001f348 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001f340:	140a      	asrs	r2, r1, #16
9001f342:	d401      	bmi.n	9001f348 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001f344:	42b2      	cmp	r2, r6
9001f346:	db07      	blt.n	9001f358 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001f348:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001f34a:	3b01      	subs	r3, #1
9001f34c:	3402      	adds	r4, #2
9001f34e:	4410      	add	r0, r2
9001f350:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001f352:	4411      	add	r1, r2
9001f354:	e7ee      	b.n	9001f334 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001f356:	d017      	beq.n	9001f388 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001f358:	1e5a      	subs	r2, r3, #1
9001f35a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001f35c:	fb05 0502 	mla	r5, r5, r2, r0
9001f360:	142d      	asrs	r5, r5, #16
9001f362:	d409      	bmi.n	9001f378 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001f364:	42bd      	cmp	r5, r7
9001f366:	da07      	bge.n	9001f378 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001f368:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001f36a:	fb05 1202 	mla	r2, r5, r2, r1
9001f36e:	1412      	asrs	r2, r2, #16
9001f370:	d402      	bmi.n	9001f378 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001f372:	42b2      	cmp	r2, r6
9001f374:	f2c0 80c3 	blt.w	9001f4fe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
9001f378:	2500      	movs	r5, #0
9001f37a:	195a      	adds	r2, r3, r5
9001f37c:	2a00      	cmp	r2, #0
9001f37e:	dc3f      	bgt.n	9001f400 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001f380:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001f384:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001f388:	9b01      	ldr	r3, [sp, #4]
9001f38a:	2b00      	cmp	r3, #0
9001f38c:	f340 812a 	ble.w	9001f5e4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001f390:	ee30 0a04 	vadd.f32	s0, s0, s8
9001f394:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001f396:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001f39a:	eeb0 6a62 	vmov.f32	s12, s5
9001f39e:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001f3a2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001f3a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001f3aa:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001f3ae:	eeb0 6a43 	vmov.f32	s12, s6
9001f3b2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001f3b6:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001f3ba:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001f3be:	ee61 7a27 	vmul.f32	s15, s2, s15
9001f3c2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001f3c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001f3ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001f3ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001f3d2:	ee12 2a90 	vmov	r2, s5
9001f3d6:	eef0 2a47 	vmov.f32	s5, s14
9001f3da:	fb92 f3f3 	sdiv	r3, r2, r3
9001f3de:	ee13 2a10 	vmov	r2, s6
9001f3e2:	9313      	str	r3, [sp, #76]	@ 0x4c
9001f3e4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001f3e6:	eeb0 3a67 	vmov.f32	s6, s15
9001f3ea:	fb92 f3f3 	sdiv	r3, r2, r3
9001f3ee:	9314      	str	r3, [sp, #80]	@ 0x50
9001f3f0:	9b01      	ldr	r3, [sp, #4]
9001f3f2:	9a05      	ldr	r2, [sp, #20]
9001f3f4:	3b01      	subs	r3, #1
9001f3f6:	9301      	str	r3, [sp, #4]
9001f3f8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001f3fa:	bf08      	it	eq
9001f3fc:	4613      	moveq	r3, r2
9001f3fe:	e788      	b.n	9001f312 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001f400:	1406      	asrs	r6, r0, #16
9001f402:	d42c      	bmi.n	9001f45e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001f404:	f8db 2008 	ldr.w	r2, [fp, #8]
9001f408:	42b2      	cmp	r2, r6
9001f40a:	dd28      	ble.n	9001f45e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001f40c:	140f      	asrs	r7, r1, #16
9001f40e:	d426      	bmi.n	9001f45e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001f410:	f8db 200c 	ldr.w	r2, [fp, #12]
9001f414:	42ba      	cmp	r2, r7
9001f416:	dd22      	ble.n	9001f45e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001f418:	9a02      	ldr	r2, [sp, #8]
9001f41a:	fb07 6602 	mla	r6, r7, r2, r6
9001f41e:	9f03      	ldr	r7, [sp, #12]
9001f420:	0872      	lsrs	r2, r6, #1
9001f422:	07f6      	lsls	r6, r6, #31
9001f424:	5cba      	ldrb	r2, [r7, r2]
9001f426:	bf54      	ite	pl
9001f428:	f002 020f 	andpl.w	r2, r2, #15
9001f42c:	1112      	asrmi	r2, r2, #4
9001f42e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001f432:	b2d2      	uxtb	r2, r2
9001f434:	2aff      	cmp	r2, #255	@ 0xff
9001f436:	d118      	bne.n	9001f46a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
9001f438:	f06f 0601 	mvn.w	r6, #1
9001f43c:	f8d8 2000 	ldr.w	r2, [r8]
9001f440:	fb06 f705 	mul.w	r7, r6, r5
9001f444:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
9001f448:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
9001f44c:	0956      	lsrs	r6, r2, #5
9001f44e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001f452:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001f456:	ea4c 0606 	orr.w	r6, ip, r6
9001f45a:	4316      	orrs	r6, r2
9001f45c:	53e6      	strh	r6, [r4, r7]
9001f45e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001f460:	3d01      	subs	r5, #1
9001f462:	4410      	add	r0, r2
9001f464:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001f466:	4411      	add	r1, r2
9001f468:	e787      	b.n	9001f37a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001f46a:	2a00      	cmp	r2, #0
9001f46c:	d0f7      	beq.n	9001f45e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001f46e:	f06f 0601 	mvn.w	r6, #1
9001f472:	f8d8 c000 	ldr.w	ip, [r8]
9001f476:	fa1f f982 	uxth.w	r9, r2
9001f47a:	43d2      	mvns	r2, r2
9001f47c:	436e      	muls	r6, r5
9001f47e:	f3cc 2a07 	ubfx	sl, ip, #8, #8
9001f482:	b2d2      	uxtb	r2, r2
9001f484:	f834 e006 	ldrh.w	lr, [r4, r6]
9001f488:	fb1a fa09 	smulbb	sl, sl, r9
9001f48c:	9604      	str	r6, [sp, #16]
9001f48e:	f3cc 4607 	ubfx	r6, ip, #16, #8
9001f492:	ea4f 272e 	mov.w	r7, lr, asr #8
9001f496:	fb16 f609 	smulbb	r6, r6, r9
9001f49a:	fa5f fc8c 	uxtb.w	ip, ip
9001f49e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001f4a2:	fb1c fc09 	smulbb	ip, ip, r9
9001f4a6:	fb07 6702 	mla	r7, r7, r2, r6
9001f4aa:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001f4ae:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001f4b2:	b2bf      	uxth	r7, r7
9001f4b4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001f4b8:	fa5f fe8e 	uxtb.w	lr, lr
9001f4bc:	fb06 a602 	mla	r6, r6, r2, sl
9001f4c0:	fb0e cc02 	mla	ip, lr, r2, ip
9001f4c4:	1c7a      	adds	r2, r7, #1
9001f4c6:	b2b6      	uxth	r6, r6
9001f4c8:	fa1f fc8c 	uxth.w	ip, ip
9001f4cc:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001f4d0:	9a04      	ldr	r2, [sp, #16]
9001f4d2:	f10c 0a01 	add.w	sl, ip, #1
9001f4d6:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001f4da:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
9001f4de:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001f4e2:	ea4a 0707 	orr.w	r7, sl, r7
9001f4e6:	f106 0a01 	add.w	sl, r6, #1
9001f4ea:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001f4ee:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001f4f2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001f4f6:	ea47 070a 	orr.w	r7, r7, sl
9001f4fa:	52a7      	strh	r7, [r4, r2]
9001f4fc:	e7af      	b.n	9001f45e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001f4fe:	f04f 0e00 	mov.w	lr, #0
9001f502:	eba3 020e 	sub.w	r2, r3, lr
9001f506:	2a00      	cmp	r2, #0
9001f508:	f77f af3a 	ble.w	9001f380 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001f50c:	1402      	asrs	r2, r0, #16
9001f50e:	9e02      	ldr	r6, [sp, #8]
9001f510:	140d      	asrs	r5, r1, #16
9001f512:	fb06 2505 	mla	r5, r6, r5, r2
9001f516:	9e03      	ldr	r6, [sp, #12]
9001f518:	086a      	lsrs	r2, r5, #1
9001f51a:	07ed      	lsls	r5, r5, #31
9001f51c:	5cb2      	ldrb	r2, [r6, r2]
9001f51e:	bf54      	ite	pl
9001f520:	f002 020f 	andpl.w	r2, r2, #15
9001f524:	1112      	asrmi	r2, r2, #4
9001f526:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001f52a:	b2d2      	uxtb	r2, r2
9001f52c:	2aff      	cmp	r2, #255	@ 0xff
9001f52e:	d115      	bne.n	9001f55c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
9001f530:	f8d8 5000 	ldr.w	r5, [r8]
9001f534:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
9001f538:	ea02 2615 	and.w	r6, r2, r5, lsr #8
9001f53c:	096a      	lsrs	r2, r5, #5
9001f53e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001f542:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001f546:	4332      	orrs	r2, r6
9001f548:	432a      	orrs	r2, r5
9001f54a:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
9001f54e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001f550:	f10e 0e01 	add.w	lr, lr, #1
9001f554:	4410      	add	r0, r2
9001f556:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001f558:	4411      	add	r1, r2
9001f55a:	e7d2      	b.n	9001f502 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001f55c:	2a00      	cmp	r2, #0
9001f55e:	d0f6      	beq.n	9001f54e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001f560:	f8d8 7000 	ldr.w	r7, [r8]
9001f564:	fa1f f982 	uxth.w	r9, r2
9001f568:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001f56c:	43d2      	mvns	r2, r2
9001f56e:	f3c7 4507 	ubfx	r5, r7, #16, #8
9001f572:	f3c7 2a07 	ubfx	sl, r7, #8, #8
9001f576:	ea4f 262c 	mov.w	r6, ip, asr #8
9001f57a:	fb15 f509 	smulbb	r5, r5, r9
9001f57e:	b2d2      	uxtb	r2, r2
9001f580:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001f584:	b2ff      	uxtb	r7, r7
9001f586:	fb1a fa09 	smulbb	sl, sl, r9
9001f58a:	fb06 5602 	mla	r6, r6, r2, r5
9001f58e:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001f592:	fb17 f709 	smulbb	r7, r7, r9
9001f596:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001f59a:	b2b6      	uxth	r6, r6
9001f59c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001f5a0:	fa5f fc8c 	uxtb.w	ip, ip
9001f5a4:	fb05 a502 	mla	r5, r5, r2, sl
9001f5a8:	fb0c 7702 	mla	r7, ip, r2, r7
9001f5ac:	1c72      	adds	r2, r6, #1
9001f5ae:	b2ad      	uxth	r5, r5
9001f5b0:	b2bf      	uxth	r7, r7
9001f5b2:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9001f5b6:	f107 0a01 	add.w	sl, r7, #1
9001f5ba:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001f5be:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001f5c2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001f5c6:	ea4a 0606 	orr.w	r6, sl, r6
9001f5ca:	f105 0a01 	add.w	sl, r5, #1
9001f5ce:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001f5d2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001f5d6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001f5da:	ea46 060a 	orr.w	r6, r6, sl
9001f5de:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
9001f5e2:	e7b4      	b.n	9001f54e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001f5e4:	b007      	add	sp, #28
9001f5e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f5ea:	bf00      	nop
9001f5ec:	24021c1c 	.word	0x24021c1c

9001f5f0 <_ZN8touchgfx8LCD16bppD1Ev>:
9001f5f0:	4770      	bx	lr

9001f5f2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
9001f5f2:	4770      	bx	lr

9001f5f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
9001f5f4:	4770      	bx	lr

9001f5f6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
9001f5f6:	4770      	bx	lr

9001f5f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
9001f5f8:	4770      	bx	lr

9001f5fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
9001f5fa:	4770      	bx	lr

9001f5fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
9001f5fc:	4770      	bx	lr

9001f5fe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
9001f5fe:	4770      	bx	lr

9001f600 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
9001f600:	4770      	bx	lr

9001f602 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001f602:	4770      	bx	lr

9001f604 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001f604:	4770      	bx	lr

9001f606 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001f606:	4770      	bx	lr

9001f608 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001f608:	4770      	bx	lr

9001f60a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001f60a:	4770      	bx	lr

9001f60c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001f60c:	4770      	bx	lr

9001f60e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001f60e:	4770      	bx	lr

9001f610 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001f610:	4770      	bx	lr

9001f612 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001f612:	4770      	bx	lr

9001f614 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001f614:	4770      	bx	lr

9001f616 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001f616:	4770      	bx	lr

9001f618 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
9001f618:	4770      	bx	lr

9001f61a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001f61a:	4770      	bx	lr

9001f61c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001f61c:	4770      	bx	lr

9001f61e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001f61e:	4770      	bx	lr

9001f620 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001f620:	4770      	bx	lr

9001f622 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001f622:	4770      	bx	lr

9001f624 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
9001f624:	4770      	bx	lr

9001f626 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
9001f626:	4770      	bx	lr

9001f628 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
9001f628:	4770      	bx	lr

9001f62a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001f62a:	4770      	bx	lr

9001f62c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001f62c:	4770      	bx	lr

9001f62e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001f62e:	4770      	bx	lr

9001f630 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001f630:	4770      	bx	lr

9001f632 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
9001f632:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001f636:	b088      	sub	sp, #32
9001f638:	4606      	mov	r6, r0
9001f63a:	4688      	mov	r8, r1
9001f63c:	4691      	mov	r9, r2
9001f63e:	ac08      	add	r4, sp, #32
9001f640:	f824 3d0c 	strh.w	r3, [r4, #-12]!
9001f644:	4620      	mov	r0, r4
9001f646:	f7fd fc33 	bl	9001ceb0 <_ZNK8touchgfx6Bitmap7getDataEv>
9001f64a:	6833      	ldr	r3, [r6, #0]
9001f64c:	4605      	mov	r5, r0
9001f64e:	4620      	mov	r0, r4
9001f650:	699f      	ldr	r7, [r3, #24]
9001f652:	f7fd fb3b 	bl	9001cccc <_ZNK8touchgfx6Bitmap8getWidthEv>
9001f656:	4682      	mov	sl, r0
9001f658:	4620      	mov	r0, r4
9001f65a:	f7fd fb6b 	bl	9001cd34 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001f65e:	9500      	str	r5, [sp, #0]
9001f660:	464b      	mov	r3, r9
9001f662:	4642      	mov	r2, r8
9001f664:	4631      	mov	r1, r6
9001f666:	e9cd a001 	strd	sl, r0, [sp, #4]
9001f66a:	a806      	add	r0, sp, #24
9001f66c:	47b8      	blx	r7
9001f66e:	4628      	mov	r0, r5
9001f670:	b008      	add	sp, #32
9001f672:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

9001f678 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
9001f678:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9001f67c:	2300      	movs	r3, #0
9001f67e:	9300      	str	r3, [sp, #0]
9001f680:	4b3d      	ldr	r3, [pc, #244]	@ (9001f778 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
9001f682:	781b      	ldrb	r3, [r3, #0]
9001f684:	2b00      	cmp	r3, #0
9001f686:	d137      	bne.n	9001f6f8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
9001f688:	4a3c      	ldr	r2, [pc, #240]	@ (9001f77c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001f68a:	f9b2 2000 	ldrsh.w	r2, [r2]
9001f68e:	f8ad 2004 	strh.w	r2, [sp, #4]
9001f692:	2b00      	cmp	r3, #0
9001f694:	d132      	bne.n	9001f6fc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
9001f696:	4b3a      	ldr	r3, [pc, #232]	@ (9001f780 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001f698:	f9b3 3000 	ldrsh.w	r3, [r3]
9001f69c:	ac02      	add	r4, sp, #8
9001f69e:	6808      	ldr	r0, [r1, #0]
9001f6a0:	f8ad 3006 	strh.w	r3, [sp, #6]
9001f6a4:	ab02      	add	r3, sp, #8
9001f6a6:	6849      	ldr	r1, [r1, #4]
9001f6a8:	4d36      	ldr	r5, [pc, #216]	@ (9001f784 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
9001f6aa:	c303      	stmia	r3!, {r0, r1}
9001f6ac:	4669      	mov	r1, sp
9001f6ae:	4620      	mov	r0, r4
9001f6b0:	f7f9 fba4 	bl	90018dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f6b4:	4668      	mov	r0, sp
9001f6b6:	f7f9 fb5d 	bl	90018d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f6ba:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001f6be:	f8bd 2000 	ldrh.w	r2, [sp]
9001f6c2:	462f      	mov	r7, r5
9001f6c4:	6828      	ldr	r0, [r5, #0]
9001f6c6:	4413      	add	r3, r2
9001f6c8:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001f6cc:	f8ad 3008 	strh.w	r3, [sp, #8]
9001f6d0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001f6d4:	4413      	add	r3, r2
9001f6d6:	f8ad 300a 	strh.w	r3, [sp, #10]
9001f6da:	6803      	ldr	r3, [r0, #0]
9001f6dc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001f6de:	4798      	blx	r3
9001f6e0:	f010 0f01 	tst.w	r0, #1
9001f6e4:	d00c      	beq.n	9001f700 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
9001f6e6:	6828      	ldr	r0, [r5, #0]
9001f6e8:	6803      	ldr	r3, [r0, #0]
9001f6ea:	e894 0006 	ldmia.w	r4, {r1, r2}
9001f6ee:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
9001f6f0:	4798      	blx	r3
9001f6f2:	b004      	add	sp, #16
9001f6f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001f6f8:	4a21      	ldr	r2, [pc, #132]	@ (9001f780 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001f6fa:	e7c6      	b.n	9001f68a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
9001f6fc:	4b1f      	ldr	r3, [pc, #124]	@ (9001f77c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001f6fe:	e7cb      	b.n	9001f698 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
9001f700:	6838      	ldr	r0, [r7, #0]
9001f702:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
9001f706:	6803      	ldr	r3, [r0, #0]
9001f708:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
9001f70c:	ea4f 0848 	mov.w	r8, r8, lsl #1
9001f710:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
9001f712:	4798      	blx	r3
9001f714:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
9001f718:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001f71c:	f8bd 6004 	ldrh.w	r6, [sp, #4]
9001f720:	fb16 3602 	smlabb	r6, r6, r2, r3
9001f724:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001f728:	6838      	ldr	r0, [r7, #0]
9001f72a:	6803      	ldr	r3, [r0, #0]
9001f72c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f72e:	4798      	blx	r3
9001f730:	4a12      	ldr	r2, [pc, #72]	@ (9001f77c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001f732:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
9001f736:	8813      	ldrh	r3, [r2, #0]
9001f738:	4691      	mov	r9, r2
9001f73a:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001f73e:	435d      	muls	r5, r3
9001f740:	fb03 1404 	mla	r4, r3, r4, r1
9001f744:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001f748:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001f74c:	6838      	ldr	r0, [r7, #0]
9001f74e:	42ac      	cmp	r4, r5
9001f750:	6803      	ldr	r3, [r0, #0]
9001f752:	d20e      	bcs.n	9001f772 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
9001f754:	f8d3 a038 	ldr.w	sl, [r3, #56]	@ 0x38
9001f758:	4632      	mov	r2, r6
9001f75a:	4643      	mov	r3, r8
9001f75c:	4621      	mov	r1, r4
9001f75e:	47d0      	blx	sl
9001f760:	f8b9 3000 	ldrh.w	r3, [r9]
9001f764:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001f768:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001f76c:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001f770:	e7ec      	b.n	9001f74c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
9001f772:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001f774:	4798      	blx	r3
9001f776:	e7bc      	b.n	9001f6f2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
9001f778:	24021c04 	.word	0x24021c04
9001f77c:	24021c06 	.word	0x24021c06
9001f780:	24021c08 	.word	0x24021c08
9001f784:	24021c0c 	.word	0x24021c0c

9001f788 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
9001f788:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f78c:	b08b      	sub	sp, #44	@ 0x2c
9001f78e:	460f      	mov	r7, r1
9001f790:	4616      	mov	r6, r2
9001f792:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
9001f796:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
9001f79a:	f1bb 0f00 	cmp.w	fp, #0
9001f79e:	d04a      	beq.n	9001f836 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001f7a0:	6810      	ldr	r0, [r2, #0]
9001f7a2:	ad06      	add	r5, sp, #24
9001f7a4:	6851      	ldr	r1, [r2, #4]
9001f7a6:	c503      	stmia	r5!, {r0, r1}
9001f7a8:	6818      	ldr	r0, [r3, #0]
9001f7aa:	ad08      	add	r5, sp, #32
9001f7ac:	6859      	ldr	r1, [r3, #4]
9001f7ae:	c503      	stmia	r5!, {r0, r1}
9001f7b0:	a806      	add	r0, sp, #24
9001f7b2:	f7f9 fadf 	bl	90018d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f7b6:	4631      	mov	r1, r6
9001f7b8:	a808      	add	r0, sp, #32
9001f7ba:	f7f9 fb1f 	bl	90018dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f7be:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9001f7c2:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
9001f7c6:	f8bd 601c 	ldrh.w	r6, [sp, #28]
9001f7ca:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
9001f7ce:	fb16 2103 	smlabb	r1, r6, r3, r2
9001f7d2:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
9001f7d6:	eb07 0641 	add.w	r6, r7, r1, lsl #1
9001f7da:	f8bd 1018 	ldrh.w	r1, [sp, #24]
9001f7de:	4f5f      	ldr	r7, [pc, #380]	@ (9001f95c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001f7e0:	440a      	add	r2, r1
9001f7e2:	6838      	ldr	r0, [r7, #0]
9001f7e4:	46b9      	mov	r9, r7
9001f7e6:	f8ad 2020 	strh.w	r2, [sp, #32]
9001f7ea:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001f7ee:	4413      	add	r3, r2
9001f7f0:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
9001f7f4:	6803      	ldr	r3, [r0, #0]
9001f7f6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001f7f8:	4798      	blx	r3
9001f7fa:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
9001f7fe:	d11d      	bne.n	9001f83c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
9001f800:	b9fc      	cbnz	r4, 9001f842 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001f802:	f010 0f01 	tst.w	r0, #1
9001f806:	d01c      	beq.n	9001f842 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001f808:	f8d9 0000 	ldr.w	r0, [r9]
9001f80c:	2700      	movs	r7, #0
9001f80e:	b2ad      	uxth	r5, r5
9001f810:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
9001f814:	6801      	ldr	r1, [r0, #0]
9001f816:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9001f81a:	f8cd b00c 	str.w	fp, [sp, #12]
9001f81e:	9501      	str	r5, [sp, #4]
9001f820:	e9cd 4704 	strd	r4, r7, [sp, #16]
9001f824:	f8bd 401c 	ldrh.w	r4, [sp, #28]
9001f828:	9402      	str	r4, [sp, #8]
9001f82a:	fa1f f488 	uxth.w	r4, r8
9001f82e:	9400      	str	r4, [sp, #0]
9001f830:	6c8c      	ldr	r4, [r1, #72]	@ 0x48
9001f832:	4631      	mov	r1, r6
9001f834:	47a0      	blx	r4
9001f836:	b00b      	add	sp, #44	@ 0x2c
9001f838:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f83c:	f010 0f04 	tst.w	r0, #4
9001f840:	e7e1      	b.n	9001f806 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
9001f842:	f8d9 0000 	ldr.w	r0, [r9]
9001f846:	ea4f 0748 	mov.w	r7, r8, lsl #1
9001f84a:	6803      	ldr	r3, [r0, #0]
9001f84c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f84e:	4798      	blx	r3
9001f850:	4b43      	ldr	r3, [pc, #268]	@ (9001f960 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
9001f852:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
9001f856:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
9001f85a:	881a      	ldrh	r2, [r3, #0]
9001f85c:	469a      	mov	sl, r3
9001f85e:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
9001f862:	fb05 f502 	mul.w	r5, r5, r2
9001f866:	fb02 1404 	mla	r4, r2, r4, r1
9001f86a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001f86e:	d059      	beq.n	9001f924 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
9001f870:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
9001f874:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001f878:	fa1f f28b 	uxth.w	r2, fp
9001f87c:	469e      	mov	lr, r3
9001f87e:	fa1f f989 	uxth.w	r9, r9
9001f882:	42ac      	cmp	r4, r5
9001f884:	d264      	bcs.n	9001f950 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001f886:	eb04 0a07 	add.w	sl, r4, r7
9001f88a:	4554      	cmp	r4, sl
9001f88c:	d23d      	bcs.n	9001f90a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
9001f88e:	8821      	ldrh	r1, [r4, #0]
9001f890:	f836 3b02 	ldrh.w	r3, [r6], #2
9001f894:	1208      	asrs	r0, r1, #8
9001f896:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001f89a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9001f89e:	ea4f 0be1 	mov.w	fp, r1, asr #3
9001f8a2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001f8a6:	00c9      	lsls	r1, r1, #3
9001f8a8:	fb10 f009 	smulbb	r0, r0, r9
9001f8ac:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9001f8b0:	b2c9      	uxtb	r1, r1
9001f8b2:	fb0c 0c02 	mla	ip, ip, r2, r0
9001f8b6:	10d8      	asrs	r0, r3, #3
9001f8b8:	fb1b fb09 	smulbb	fp, fp, r9
9001f8bc:	00db      	lsls	r3, r3, #3
9001f8be:	fa1f fc8c 	uxth.w	ip, ip
9001f8c2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9001f8c6:	fb11 f109 	smulbb	r1, r1, r9
9001f8ca:	b2db      	uxtb	r3, r3
9001f8cc:	fb00 b002 	mla	r0, r0, r2, fp
9001f8d0:	f10c 0b01 	add.w	fp, ip, #1
9001f8d4:	fb03 1302 	mla	r3, r3, r2, r1
9001f8d8:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
9001f8dc:	b29b      	uxth	r3, r3
9001f8de:	b280      	uxth	r0, r0
9001f8e0:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
9001f8e4:	f103 0c01 	add.w	ip, r3, #1
9001f8e8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001f8ec:	1c43      	adds	r3, r0, #1
9001f8ee:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001f8f2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001f8f6:	0940      	lsrs	r0, r0, #5
9001f8f8:	ea4c 0c0b 	orr.w	ip, ip, fp
9001f8fc:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001f900:	ea4c 0c00 	orr.w	ip, ip, r0
9001f904:	f824 cb02 	strh.w	ip, [r4], #2
9001f908:	e7bf      	b.n	9001f88a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
9001f90a:	f8be 3000 	ldrh.w	r3, [lr]
9001f90e:	eba3 0308 	sub.w	r3, r3, r8
9001f912:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001f916:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001f91a:	eba3 0308 	sub.w	r3, r3, r8
9001f91e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001f922:	e7ae      	b.n	9001f882 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
9001f924:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001f928:	f8d9 0000 	ldr.w	r0, [r9]
9001f92c:	42ac      	cmp	r4, r5
9001f92e:	6803      	ldr	r3, [r0, #0]
9001f930:	d20e      	bcs.n	9001f950 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001f932:	f8d3 8038 	ldr.w	r8, [r3, #56]	@ 0x38
9001f936:	4632      	mov	r2, r6
9001f938:	463b      	mov	r3, r7
9001f93a:	4621      	mov	r1, r4
9001f93c:	47c0      	blx	r8
9001f93e:	f8ba 3000 	ldrh.w	r3, [sl]
9001f942:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001f946:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001f94a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001f94e:	e7eb      	b.n	9001f928 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
9001f950:	4b02      	ldr	r3, [pc, #8]	@ (9001f95c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001f952:	6818      	ldr	r0, [r3, #0]
9001f954:	6803      	ldr	r3, [r0, #0]
9001f956:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001f958:	4798      	blx	r3
9001f95a:	e76c      	b.n	9001f836 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001f95c:	24021c0c 	.word	0x24021c0c
9001f960:	24021c06 	.word	0x24021c06

9001f964 <_ZN8touchgfx8LCD16bppD0Ev>:
9001f964:	b510      	push	{r4, lr}
9001f966:	4604      	mov	r4, r0
9001f968:	218c      	movs	r1, #140	@ 0x8c
9001f96a:	f00d f9a7 	bl	9002ccbc <_ZdlPvj>
9001f96e:	4620      	mov	r0, r4
9001f970:	bd10      	pop	{r4, pc}

9001f972 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
9001f972:	b510      	push	{r4, lr}
9001f974:	4604      	mov	r4, r0
9001f976:	2104      	movs	r1, #4
9001f978:	f00d f9a0 	bl	9002ccbc <_ZdlPvj>
9001f97c:	4620      	mov	r0, r4
9001f97e:	bd10      	pop	{r4, pc}

9001f980 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
9001f980:	b510      	push	{r4, lr}
9001f982:	4604      	mov	r4, r0
9001f984:	2104      	movs	r1, #4
9001f986:	f00d f999 	bl	9002ccbc <_ZdlPvj>
9001f98a:	4620      	mov	r0, r4
9001f98c:	bd10      	pop	{r4, pc}

9001f98e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
9001f98e:	b510      	push	{r4, lr}
9001f990:	4604      	mov	r4, r0
9001f992:	f640 0144 	movw	r1, #2116	@ 0x844
9001f996:	f00d f991 	bl	9002ccbc <_ZdlPvj>
9001f99a:	4620      	mov	r0, r4
9001f99c:	bd10      	pop	{r4, pc}

9001f99e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
9001f99e:	b510      	push	{r4, lr}
9001f9a0:	4604      	mov	r4, r0
9001f9a2:	f44f 7182 	mov.w	r1, #260	@ 0x104
9001f9a6:	f00d f989 	bl	9002ccbc <_ZdlPvj>
9001f9aa:	4620      	mov	r0, r4
9001f9ac:	bd10      	pop	{r4, pc}

9001f9ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001f9ae:	b510      	push	{r4, lr}
9001f9b0:	4604      	mov	r4, r0
9001f9b2:	2104      	movs	r1, #4
9001f9b4:	f00d f982 	bl	9002ccbc <_ZdlPvj>
9001f9b8:	4620      	mov	r0, r4
9001f9ba:	bd10      	pop	{r4, pc}

9001f9bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001f9bc:	b510      	push	{r4, lr}
9001f9be:	4604      	mov	r4, r0
9001f9c0:	2104      	movs	r1, #4
9001f9c2:	f00d f97b 	bl	9002ccbc <_ZdlPvj>
9001f9c6:	4620      	mov	r0, r4
9001f9c8:	bd10      	pop	{r4, pc}

9001f9ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001f9ca:	b510      	push	{r4, lr}
9001f9cc:	4604      	mov	r4, r0
9001f9ce:	2104      	movs	r1, #4
9001f9d0:	f00d f974 	bl	9002ccbc <_ZdlPvj>
9001f9d4:	4620      	mov	r0, r4
9001f9d6:	bd10      	pop	{r4, pc}

9001f9d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001f9d8:	b510      	push	{r4, lr}
9001f9da:	4604      	mov	r4, r0
9001f9dc:	2104      	movs	r1, #4
9001f9de:	f00d f96d 	bl	9002ccbc <_ZdlPvj>
9001f9e2:	4620      	mov	r0, r4
9001f9e4:	bd10      	pop	{r4, pc}

9001f9e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001f9e6:	b510      	push	{r4, lr}
9001f9e8:	4604      	mov	r4, r0
9001f9ea:	2104      	movs	r1, #4
9001f9ec:	f00d f966 	bl	9002ccbc <_ZdlPvj>
9001f9f0:	4620      	mov	r0, r4
9001f9f2:	bd10      	pop	{r4, pc}

9001f9f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
9001f9f4:	b510      	push	{r4, lr}
9001f9f6:	4604      	mov	r4, r0
9001f9f8:	2104      	movs	r1, #4
9001f9fa:	f00d f95f 	bl	9002ccbc <_ZdlPvj>
9001f9fe:	4620      	mov	r0, r4
9001fa00:	bd10      	pop	{r4, pc}

9001fa02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
9001fa02:	b510      	push	{r4, lr}
9001fa04:	4604      	mov	r4, r0
9001fa06:	2104      	movs	r1, #4
9001fa08:	f00d f958 	bl	9002ccbc <_ZdlPvj>
9001fa0c:	4620      	mov	r0, r4
9001fa0e:	bd10      	pop	{r4, pc}

9001fa10 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
9001fa10:	b510      	push	{r4, lr}
9001fa12:	4604      	mov	r4, r0
9001fa14:	2104      	movs	r1, #4
9001fa16:	f00d f951 	bl	9002ccbc <_ZdlPvj>
9001fa1a:	4620      	mov	r0, r4
9001fa1c:	bd10      	pop	{r4, pc}

9001fa1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001fa1e:	b510      	push	{r4, lr}
9001fa20:	4604      	mov	r4, r0
9001fa22:	2104      	movs	r1, #4
9001fa24:	f00d f94a 	bl	9002ccbc <_ZdlPvj>
9001fa28:	4620      	mov	r0, r4
9001fa2a:	bd10      	pop	{r4, pc}

9001fa2c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001fa2c:	b510      	push	{r4, lr}
9001fa2e:	4604      	mov	r4, r0
9001fa30:	2104      	movs	r1, #4
9001fa32:	f00d f943 	bl	9002ccbc <_ZdlPvj>
9001fa36:	4620      	mov	r0, r4
9001fa38:	bd10      	pop	{r4, pc}

9001fa3a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001fa3a:	b510      	push	{r4, lr}
9001fa3c:	4604      	mov	r4, r0
9001fa3e:	2104      	movs	r1, #4
9001fa40:	f00d f93c 	bl	9002ccbc <_ZdlPvj>
9001fa44:	4620      	mov	r0, r4
9001fa46:	bd10      	pop	{r4, pc}

9001fa48 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001fa48:	b510      	push	{r4, lr}
9001fa4a:	4604      	mov	r4, r0
9001fa4c:	2104      	movs	r1, #4
9001fa4e:	f00d f935 	bl	9002ccbc <_ZdlPvj>
9001fa52:	4620      	mov	r0, r4
9001fa54:	bd10      	pop	{r4, pc}

9001fa56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001fa56:	b510      	push	{r4, lr}
9001fa58:	4604      	mov	r4, r0
9001fa5a:	2104      	movs	r1, #4
9001fa5c:	f00d f92e 	bl	9002ccbc <_ZdlPvj>
9001fa60:	4620      	mov	r0, r4
9001fa62:	bd10      	pop	{r4, pc}

9001fa64 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001fa64:	b510      	push	{r4, lr}
9001fa66:	4604      	mov	r4, r0
9001fa68:	2104      	movs	r1, #4
9001fa6a:	f00d f927 	bl	9002ccbc <_ZdlPvj>
9001fa6e:	4620      	mov	r0, r4
9001fa70:	bd10      	pop	{r4, pc}

9001fa72 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001fa72:	b510      	push	{r4, lr}
9001fa74:	4604      	mov	r4, r0
9001fa76:	2104      	movs	r1, #4
9001fa78:	f00d f920 	bl	9002ccbc <_ZdlPvj>
9001fa7c:	4620      	mov	r0, r4
9001fa7e:	bd10      	pop	{r4, pc}

9001fa80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001fa80:	b510      	push	{r4, lr}
9001fa82:	4604      	mov	r4, r0
9001fa84:	2104      	movs	r1, #4
9001fa86:	f00d f919 	bl	9002ccbc <_ZdlPvj>
9001fa8a:	4620      	mov	r0, r4
9001fa8c:	bd10      	pop	{r4, pc}

9001fa8e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001fa8e:	b510      	push	{r4, lr}
9001fa90:	4604      	mov	r4, r0
9001fa92:	2104      	movs	r1, #4
9001fa94:	f00d f912 	bl	9002ccbc <_ZdlPvj>
9001fa98:	4620      	mov	r0, r4
9001fa9a:	bd10      	pop	{r4, pc}

9001fa9c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001fa9c:	b510      	push	{r4, lr}
9001fa9e:	4604      	mov	r4, r0
9001faa0:	2104      	movs	r1, #4
9001faa2:	f00d f90b 	bl	9002ccbc <_ZdlPvj>
9001faa6:	4620      	mov	r0, r4
9001faa8:	bd10      	pop	{r4, pc}

9001faaa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001faaa:	b510      	push	{r4, lr}
9001faac:	4604      	mov	r4, r0
9001faae:	2104      	movs	r1, #4
9001fab0:	f00d f904 	bl	9002ccbc <_ZdlPvj>
9001fab4:	4620      	mov	r0, r4
9001fab6:	bd10      	pop	{r4, pc}

9001fab8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
9001fab8:	b510      	push	{r4, lr}
9001faba:	4604      	mov	r4, r0
9001fabc:	2104      	movs	r1, #4
9001fabe:	f00d f8fd 	bl	9002ccbc <_ZdlPvj>
9001fac2:	4620      	mov	r0, r4
9001fac4:	bd10      	pop	{r4, pc}

9001fac6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001fac6:	b510      	push	{r4, lr}
9001fac8:	4604      	mov	r4, r0
9001faca:	2104      	movs	r1, #4
9001facc:	f00d f8f6 	bl	9002ccbc <_ZdlPvj>
9001fad0:	4620      	mov	r0, r4
9001fad2:	bd10      	pop	{r4, pc}

9001fad4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001fad4:	b510      	push	{r4, lr}
9001fad6:	4604      	mov	r4, r0
9001fad8:	2104      	movs	r1, #4
9001fada:	f00d f8ef 	bl	9002ccbc <_ZdlPvj>
9001fade:	4620      	mov	r0, r4
9001fae0:	bd10      	pop	{r4, pc}

9001fae2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001fae2:	b510      	push	{r4, lr}
9001fae4:	4604      	mov	r4, r0
9001fae6:	2104      	movs	r1, #4
9001fae8:	f00d f8e8 	bl	9002ccbc <_ZdlPvj>
9001faec:	4620      	mov	r0, r4
9001faee:	bd10      	pop	{r4, pc}

9001faf0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001faf0:	b510      	push	{r4, lr}
9001faf2:	4604      	mov	r4, r0
9001faf4:	2104      	movs	r1, #4
9001faf6:	f00d f8e1 	bl	9002ccbc <_ZdlPvj>
9001fafa:	4620      	mov	r0, r4
9001fafc:	bd10      	pop	{r4, pc}

9001fafe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
9001fafe:	b510      	push	{r4, lr}
9001fb00:	4604      	mov	r4, r0
9001fb02:	2104      	movs	r1, #4
9001fb04:	f00d f8da 	bl	9002ccbc <_ZdlPvj>
9001fb08:	4620      	mov	r0, r4
9001fb0a:	bd10      	pop	{r4, pc}

9001fb0c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
9001fb0c:	b510      	push	{r4, lr}
9001fb0e:	4604      	mov	r4, r0
9001fb10:	2104      	movs	r1, #4
9001fb12:	f00d f8d3 	bl	9002ccbc <_ZdlPvj>
9001fb16:	4620      	mov	r0, r4
9001fb18:	bd10      	pop	{r4, pc}

9001fb1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
9001fb1a:	b510      	push	{r4, lr}
9001fb1c:	4604      	mov	r4, r0
9001fb1e:	2104      	movs	r1, #4
9001fb20:	f00d f8cc 	bl	9002ccbc <_ZdlPvj>
9001fb24:	4620      	mov	r0, r4
9001fb26:	bd10      	pop	{r4, pc}

9001fb28 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
9001fb28:	b510      	push	{r4, lr}
9001fb2a:	4604      	mov	r4, r0
9001fb2c:	2104      	movs	r1, #4
9001fb2e:	f00d f8c5 	bl	9002ccbc <_ZdlPvj>
9001fb32:	4620      	mov	r0, r4
9001fb34:	bd10      	pop	{r4, pc}
	...

9001fb38 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
9001fb38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fb3c:	b08f      	sub	sp, #60	@ 0x3c
9001fb3e:	4616      	mov	r6, r2
9001fb40:	4682      	mov	sl, r0
9001fb42:	460d      	mov	r5, r1
9001fb44:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
9001fb48:	9205      	str	r2, [sp, #20]
9001fb4a:	2a00      	cmp	r2, #0
9001fb4c:	f000 82b7 	beq.w	900200be <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
9001fb50:	6830      	ldr	r0, [r6, #0]
9001fb52:	ac0a      	add	r4, sp, #40	@ 0x28
9001fb54:	6871      	ldr	r1, [r6, #4]
9001fb56:	c403      	stmia	r4!, {r0, r1}
9001fb58:	6818      	ldr	r0, [r3, #0]
9001fb5a:	ac0c      	add	r4, sp, #48	@ 0x30
9001fb5c:	6859      	ldr	r1, [r3, #4]
9001fb5e:	c403      	stmia	r4!, {r0, r1}
9001fb60:	a80a      	add	r0, sp, #40	@ 0x28
9001fb62:	f7f9 f907 	bl	90018d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fb66:	4631      	mov	r1, r6
9001fb68:	a80c      	add	r0, sp, #48	@ 0x30
9001fb6a:	f7f9 f947 	bl	90018dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001fb6e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9001fb72:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
9001fb76:	bfdb      	ittet	le
9001fb78:	b293      	uxthle	r3, r2
9001fb7a:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001fb7e:	2301      	movgt	r3, #1
9001fb80:	fb91 f3f3 	sdivle	r3, r1, r3
9001fb84:	9300      	str	r3, [sp, #0]
9001fb86:	f105 0308 	add.w	r3, r5, #8
9001fb8a:	9900      	ldr	r1, [sp, #0]
9001fb8c:	9306      	str	r3, [sp, #24]
9001fb8e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
9001fb92:	440b      	add	r3, r1
9001fb94:	3b01      	subs	r3, #1
9001fb96:	fb93 f3f1 	sdiv	r3, r3, r1
9001fb9a:	3b01      	subs	r3, #1
9001fb9c:	9906      	ldr	r1, [sp, #24]
9001fb9e:	b29b      	uxth	r3, r3
9001fba0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001fba4:	9900      	ldr	r1, [sp, #0]
9001fba6:	9307      	str	r3, [sp, #28]
9001fba8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9001fbac:	fb93 f0f1 	sdiv	r0, r3, r1
9001fbb0:	b284      	uxth	r4, r0
9001fbb2:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
9001fbb6:	9402      	str	r4, [sp, #8]
9001fbb8:	9d02      	ldr	r5, [sp, #8]
9001fbba:	9c00      	ldr	r4, [sp, #0]
9001fbbc:	fb05 3414 	mls	r4, r5, r4, r3
9001fbc0:	fb14 f402 	smulbb	r4, r4, r2
9001fbc4:	440c      	add	r4, r1
9001fbc6:	b2a4      	uxth	r4, r4
9001fbc8:	2d00      	cmp	r5, #0
9001fbca:	d06c      	beq.n	9001fca6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
9001fbcc:	1e6a      	subs	r2, r5, #1
9001fbce:	9806      	ldr	r0, [sp, #24]
9001fbd0:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
9001fbd4:	9a07      	ldr	r2, [sp, #28]
9001fbd6:	ba36      	rev	r6, r6
9001fbd8:	4416      	add	r6, r2
9001fbda:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
9001fbde:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
9001fbe2:	4411      	add	r1, r2
9001fbe4:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
9001fbe8:	f8df 932c 	ldr.w	r9, [pc, #812]	@ 9001ff18 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
9001fbec:	4413      	add	r3, r2
9001fbee:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
9001fbf2:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001fbf6:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001fbfa:	9301      	str	r3, [sp, #4]
9001fbfc:	4bc4      	ldr	r3, [pc, #784]	@ (9001ff10 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
9001fbfe:	6818      	ldr	r0, [r3, #0]
9001fc00:	6803      	ldr	r3, [r0, #0]
9001fc02:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001fc04:	4798      	blx	r3
9001fc06:	4bc3      	ldr	r3, [pc, #780]	@ (9001ff14 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
9001fc08:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9001fc0c:	881b      	ldrh	r3, [r3, #0]
9001fc0e:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
9001fc12:	fb03 2808 	mla	r8, r3, r8, r2
9001fc16:	f44f 7280 	mov.w	r2, #256	@ 0x100
9001fc1a:	436b      	muls	r3, r5
9001fc1c:	2500      	movs	r5, #0
9001fc1e:	eb00 0848 	add.w	r8, r0, r8, lsl #1
9001fc22:	4629      	mov	r1, r5
9001fc24:	eb08 0343 	add.w	r3, r8, r3, lsl #1
9001fc28:	9309      	str	r3, [sp, #36]	@ 0x24
9001fc2a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9001fc2e:	fb94 f3f3 	sdiv	r3, r4, r3
9001fc32:	9304      	str	r3, [sp, #16]
9001fc34:	f10a 0304 	add.w	r3, sl, #4
9001fc38:	4618      	mov	r0, r3
9001fc3a:	9308      	str	r3, [sp, #32]
9001fc3c:	f00d fe6a 	bl	9002d914 <memset>
9001fc40:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001fc42:	4543      	cmp	r3, r8
9001fc44:	f240 8236 	bls.w	900200b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
9001fc48:	2203      	movs	r2, #3
9001fc4a:	2107      	movs	r1, #7
9001fc4c:	200b      	movs	r0, #11
9001fc4e:	2c00      	cmp	r4, #0
9001fc50:	f000 8131 	beq.w	9001feb6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
9001fc54:	7833      	ldrb	r3, [r6, #0]
9001fc56:	b2db      	uxtb	r3, r3
9001fc58:	2bfe      	cmp	r3, #254	@ 0xfe
9001fc5a:	d126      	bne.n	9001fcaa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
9001fc5c:	f896 e001 	ldrb.w	lr, [r6, #1]
9001fc60:	3c01      	subs	r4, #1
9001fc62:	f896 c002 	ldrb.w	ip, [r6, #2]
9001fc66:	1d37      	adds	r7, r6, #4
9001fc68:	fa5f fe8e 	uxtb.w	lr, lr
9001fc6c:	f896 b003 	ldrb.w	fp, [r6, #3]
9001fc70:	fa5f fc8c 	uxtb.w	ip, ip
9001fc74:	f36e 0507 	bfi	r5, lr, #0, #8
9001fc78:	fa5f fb8b 	uxtb.w	fp, fp
9001fc7c:	b2a4      	uxth	r4, r4
9001fc7e:	f36c 250f 	bfi	r5, ip, #8, #8
9001fc82:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
9001fc86:	fb12 cc0b 	smlabb	ip, r2, fp, ip
9001fc8a:	f36b 4517 	bfi	r5, fp, #16, #8
9001fc8e:	fb11 cc0e 	smlabb	ip, r1, lr, ip
9001fc92:	0e2b      	lsrs	r3, r5, #24
9001fc94:	fb10 c303 	smlabb	r3, r0, r3, ip
9001fc98:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001fc9c:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001fca0:	605d      	str	r5, [r3, #4]
9001fca2:	463e      	mov	r6, r7
9001fca4:	e7d3      	b.n	9001fc4e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
9001fca6:	9e07      	ldr	r6, [sp, #28]
9001fca8:	e797      	b.n	9001fbda <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
9001fcaa:	2bff      	cmp	r3, #255	@ 0xff
9001fcac:	d127      	bne.n	9001fcfe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
9001fcae:	f896 c001 	ldrb.w	ip, [r6, #1]
9001fcb2:	3c01      	subs	r4, #1
9001fcb4:	78b3      	ldrb	r3, [r6, #2]
9001fcb6:	1d77      	adds	r7, r6, #5
9001fcb8:	fa5f fc8c 	uxtb.w	ip, ip
9001fcbc:	f896 e003 	ldrb.w	lr, [r6, #3]
9001fcc0:	b2db      	uxtb	r3, r3
9001fcc2:	f896 b004 	ldrb.w	fp, [r6, #4]
9001fcc6:	f36c 0507 	bfi	r5, ip, #0, #8
9001fcca:	fa5f fe8e 	uxtb.w	lr, lr
9001fcce:	fa5f fb8b 	uxtb.w	fp, fp
9001fcd2:	f363 250f 	bfi	r5, r3, #8, #8
9001fcd6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9001fcda:	b2a4      	uxth	r4, r4
9001fcdc:	fb12 330e 	smlabb	r3, r2, lr, r3
9001fce0:	f36e 4517 	bfi	r5, lr, #16, #8
9001fce4:	fb11 330c 	smlabb	r3, r1, ip, r3
9001fce8:	f36b 651f 	bfi	r5, fp, #24, #8
9001fcec:	fb10 3b0b 	smlabb	fp, r0, fp, r3
9001fcf0:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
9001fcf4:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
9001fcf8:	f8cb 5004 	str.w	r5, [fp, #4]
9001fcfc:	e7d1      	b.n	9001fca2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001fcfe:	ea5f 1ca3 	movs.w	ip, r3, asr #6
9001fd02:	f106 0701 	add.w	r7, r6, #1
9001fd06:	d107      	bne.n	9001fd18 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
9001fd08:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001fd0c:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001fd10:	685d      	ldr	r5, [r3, #4]
9001fd12:	3c01      	subs	r4, #1
9001fd14:	b2a4      	uxth	r4, r4
9001fd16:	e7c4      	b.n	9001fca2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001fd18:	f1bc 0f01 	cmp.w	ip, #1
9001fd1c:	d12c      	bne.n	9001fd78 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
9001fd1e:	f003 0e03 	and.w	lr, r3, #3
9001fd22:	f003 0c0c 	and.w	ip, r3, #12
9001fd26:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001fd2a:	f1ae 0e02 	sub.w	lr, lr, #2
9001fd2e:	f1ac 0c08 	sub.w	ip, ip, #8
9001fd32:	3b02      	subs	r3, #2
9001fd34:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
9001fd38:	fa5f fe8e 	uxtb.w	lr, lr
9001fd3c:	f36e 0507 	bfi	r5, lr, #0, #8
9001fd40:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001fd44:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
9001fd48:	f36c 250f 	bfi	r5, ip, #8, #8
9001fd4c:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
9001fd50:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001fd54:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
9001fd58:	b2db      	uxtb	r3, r3
9001fd5a:	fb12 cc03 	smlabb	ip, r2, r3, ip
9001fd5e:	f363 4517 	bfi	r5, r3, #16, #8
9001fd62:	fb11 cc0e 	smlabb	ip, r1, lr, ip
9001fd66:	0e2e      	lsrs	r6, r5, #24
9001fd68:	fb10 c606 	smlabb	r6, r0, r6, ip
9001fd6c:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
9001fd70:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
9001fd74:	6075      	str	r5, [r6, #4]
9001fd76:	e7cc      	b.n	9001fd12 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
9001fd78:	f1bc 0f02 	cmp.w	ip, #2
9001fd7c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001fd80:	d12a      	bne.n	9001fdd8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
9001fd82:	1cb7      	adds	r7, r6, #2
9001fd84:	7876      	ldrb	r6, [r6, #1]
9001fd86:	3b20      	subs	r3, #32
9001fd88:	b2f6      	uxtb	r6, r6
9001fd8a:	f006 0c0f 	and.w	ip, r6, #15
9001fd8e:	1136      	asrs	r6, r6, #4
9001fd90:	f1ac 0c08 	sub.w	ip, ip, #8
9001fd94:	3e08      	subs	r6, #8
9001fd96:	449c      	add	ip, r3
9001fd98:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
9001fd9c:	fa5f fc8c 	uxtb.w	ip, ip
9001fda0:	f36c 0507 	bfi	r5, ip, #0, #8
9001fda4:	f3c5 2e07 	ubfx	lr, r5, #8, #8
9001fda8:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
9001fdac:	4433      	add	r3, r6
9001fdae:	fa5f fe8e 	uxtb.w	lr, lr
9001fdb2:	f36e 250f 	bfi	r5, lr, #8, #8
9001fdb6:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
9001fdba:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001fdbe:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
9001fdc2:	b2db      	uxtb	r3, r3
9001fdc4:	fb12 ee03 	smlabb	lr, r2, r3, lr
9001fdc8:	f363 4517 	bfi	r5, r3, #16, #8
9001fdcc:	fb11 ee0c 	smlabb	lr, r1, ip, lr
9001fdd0:	0e2e      	lsrs	r6, r5, #24
9001fdd2:	fb10 e606 	smlabb	r6, r0, r6, lr
9001fdd6:	e7c9      	b.n	9001fd6c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
9001fdd8:	1c5e      	adds	r6, r3, #1
9001fdda:	42a6      	cmp	r6, r4
9001fddc:	dd4e      	ble.n	9001fe7c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
9001fdde:	1b36      	subs	r6, r6, r4
9001fde0:	2e00      	cmp	r6, #0
9001fde2:	dc4e      	bgt.n	9001fe82 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
9001fde4:	f8dd b004 	ldr.w	fp, [sp, #4]
9001fde8:	2400      	movs	r4, #0
9001fdea:	f1bb 0f00 	cmp.w	fp, #0
9001fdee:	f340 8122 	ble.w	90020036 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
9001fdf2:	1c7b      	adds	r3, r7, #1
9001fdf4:	9303      	str	r3, [sp, #12]
9001fdf6:	783b      	ldrb	r3, [r7, #0]
9001fdf8:	b2db      	uxtb	r3, r3
9001fdfa:	2bfe      	cmp	r3, #254	@ 0xfe
9001fdfc:	d160      	bne.n	9001fec0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
9001fdfe:	7879      	ldrb	r1, [r7, #1]
9001fe00:	1d3b      	adds	r3, r7, #4
9001fe02:	78ba      	ldrb	r2, [r7, #2]
9001fe04:	b2c9      	uxtb	r1, r1
9001fe06:	78f8      	ldrb	r0, [r7, #3]
9001fe08:	b2d2      	uxtb	r2, r2
9001fe0a:	9303      	str	r3, [sp, #12]
9001fe0c:	f361 0507 	bfi	r5, r1, #0, #8
9001fe10:	b2c0      	uxtb	r0, r0
9001fe12:	2303      	movs	r3, #3
9001fe14:	f362 250f 	bfi	r5, r2, #8, #8
9001fe18:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001fe1c:	fb13 2200 	smlabb	r2, r3, r0, r2
9001fe20:	f360 4517 	bfi	r5, r0, #16, #8
9001fe24:	2307      	movs	r3, #7
9001fe26:	0e2e      	lsrs	r6, r5, #24
9001fe28:	fb13 2101 	smlabb	r1, r3, r1, r2
9001fe2c:	230b      	movs	r3, #11
9001fe2e:	fb13 1306 	smlabb	r3, r3, r6, r1
9001fe32:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001fe36:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001fe3a:	605d      	str	r5, [r3, #4]
9001fe3c:	2601      	movs	r6, #1
9001fe3e:	4637      	mov	r7, r6
9001fe40:	0e2b      	lsrs	r3, r5, #24
9001fe42:	ebab 0b07 	sub.w	fp, fp, r7
9001fe46:	eba6 0607 	sub.w	r6, r6, r7
9001fe4a:	f040 80d3 	bne.w	9001fff4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
9001fe4e:	b18c      	cbz	r4, 9001fe74 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
9001fe50:	4648      	mov	r0, r9
9001fe52:	00a1      	lsls	r1, r4, #2
9001fe54:	f7e2 fd56 	bl	90002904 <_ZN8touchgfx5paint9flushLineEPmi>
9001fe58:	9b05      	ldr	r3, [sp, #20]
9001fe5a:	4622      	mov	r2, r4
9001fe5c:	4649      	mov	r1, r9
9001fe5e:	4640      	mov	r0, r8
9001fe60:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001fe64:	f7e2 fdbc 	bl	900029e0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001fe68:	4b2b      	ldr	r3, [pc, #172]	@ (9001ff18 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
9001fe6a:	4a2c      	ldr	r2, [pc, #176]	@ (9001ff1c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
9001fe6c:	4599      	cmp	r9, r3
9001fe6e:	bf08      	it	eq
9001fe70:	4613      	moveq	r3, r2
9001fe72:	4699      	mov	r9, r3
9001fe74:	eb08 0847 	add.w	r8, r8, r7, lsl #1
9001fe78:	2400      	movs	r4, #0
9001fe7a:	e0da      	b.n	90020032 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
9001fe7c:	1ba6      	subs	r6, r4, r6
9001fe7e:	b2b4      	uxth	r4, r6
9001fe80:	e70f      	b.n	9001fca2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001fe82:	9b01      	ldr	r3, [sp, #4]
9001fe84:	9a01      	ldr	r2, [sp, #4]
9001fe86:	42b3      	cmp	r3, r6
9001fe88:	bfa8      	it	ge
9001fe8a:	4633      	movge	r3, r6
9001fe8c:	0e2c      	lsrs	r4, r5, #24
9001fe8e:	eba2 0b03 	sub.w	fp, r2, r3
9001fe92:	eba6 0603 	sub.w	r6, r6, r3
9001fe96:	d00b      	beq.n	9001feb0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
9001fe98:	f1a9 0104 	sub.w	r1, r9, #4
9001fe9c:	461a      	mov	r2, r3
9001fe9e:	2a00      	cmp	r2, #0
9001fea0:	dc02      	bgt.n	9001fea8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
9001fea2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9001fea6:	e7a0      	b.n	9001fdea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001fea8:	f841 5f04 	str.w	r5, [r1, #4]!
9001feac:	3a01      	subs	r2, #1
9001feae:	e7f6      	b.n	9001fe9e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
9001feb0:	eb08 0843 	add.w	r8, r8, r3, lsl #1
9001feb4:	e799      	b.n	9001fdea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001feb6:	4637      	mov	r7, r6
9001feb8:	f8dd b004 	ldr.w	fp, [sp, #4]
9001febc:	4626      	mov	r6, r4
9001febe:	e794      	b.n	9001fdea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001fec0:	2bff      	cmp	r3, #255	@ 0xff
9001fec2:	d11d      	bne.n	9001ff00 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
9001fec4:	7878      	ldrb	r0, [r7, #1]
9001fec6:	1d7b      	adds	r3, r7, #5
9001fec8:	78ba      	ldrb	r2, [r7, #2]
9001feca:	b2c0      	uxtb	r0, r0
9001fecc:	78fe      	ldrb	r6, [r7, #3]
9001fece:	b2d2      	uxtb	r2, r2
9001fed0:	9303      	str	r3, [sp, #12]
9001fed2:	f360 0507 	bfi	r5, r0, #0, #8
9001fed6:	793b      	ldrb	r3, [r7, #4]
9001fed8:	b2f6      	uxtb	r6, r6
9001feda:	b2d9      	uxtb	r1, r3
9001fedc:	f362 250f 	bfi	r5, r2, #8, #8
9001fee0:	2303      	movs	r3, #3
9001fee2:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001fee6:	f366 4517 	bfi	r5, r6, #16, #8
9001feea:	fb13 2206 	smlabb	r2, r3, r6, r2
9001feee:	2307      	movs	r3, #7
9001fef0:	f361 651f 	bfi	r5, r1, #24, #8
9001fef4:	fb13 2000 	smlabb	r0, r3, r0, r2
9001fef8:	230b      	movs	r3, #11
9001fefa:	fb13 0301 	smlabb	r3, r3, r1, r0
9001fefe:	e798      	b.n	9001fe32 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
9001ff00:	119e      	asrs	r6, r3, #6
9001ff02:	d10d      	bne.n	9001ff20 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
9001ff04:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001ff08:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001ff0c:	685d      	ldr	r5, [r3, #4]
9001ff0e:	e795      	b.n	9001fe3c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
9001ff10:	24021c0c 	.word	0x24021c0c
9001ff14:	24021c06 	.word	0x24021c06
9001ff18:	24005b80 	.word	0x24005b80
9001ff1c:	24005c80 	.word	0x24005c80
9001ff20:	2e01      	cmp	r6, #1
9001ff22:	ea4f 6115 	mov.w	r1, r5, lsr #24
9001ff26:	d12b      	bne.n	9001ff80 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
9001ff28:	f003 0003 	and.w	r0, r3, #3
9001ff2c:	f003 020c 	and.w	r2, r3, #12
9001ff30:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001ff34:	3802      	subs	r0, #2
9001ff36:	3a08      	subs	r2, #8
9001ff38:	1e9f      	subs	r7, r3, #2
9001ff3a:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
9001ff3e:	b2c0      	uxtb	r0, r0
9001ff40:	f360 0507 	bfi	r5, r0, #0, #8
9001ff44:	eb02 2215 	add.w	r2, r2, r5, lsr #8
9001ff48:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
9001ff4c:	f362 250f 	bfi	r5, r2, #8, #8
9001ff50:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001ff54:	f3c5 4307 	ubfx	r3, r5, #16, #8
9001ff58:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
9001ff5c:	2703      	movs	r7, #3
9001ff5e:	b2db      	uxtb	r3, r3
9001ff60:	fb17 2203 	smlabb	r2, r7, r3, r2
9001ff64:	2707      	movs	r7, #7
9001ff66:	f363 4517 	bfi	r5, r3, #16, #8
9001ff6a:	230b      	movs	r3, #11
9001ff6c:	fb17 2000 	smlabb	r0, r7, r0, r2
9001ff70:	fb13 0101 	smlabb	r1, r3, r1, r0
9001ff74:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
9001ff78:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
9001ff7c:	604d      	str	r5, [r1, #4]
9001ff7e:	e75e      	b.n	9001fe3e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
9001ff80:	2e02      	cmp	r6, #2
9001ff82:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001ff86:	d12f      	bne.n	9001ffe8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
9001ff88:	7878      	ldrb	r0, [r7, #1]
9001ff8a:	1cba      	adds	r2, r7, #2
9001ff8c:	3b20      	subs	r3, #32
9001ff8e:	b2c0      	uxtb	r0, r0
9001ff90:	9203      	str	r2, [sp, #12]
9001ff92:	f000 020f 	and.w	r2, r0, #15
9001ff96:	1100      	asrs	r0, r0, #4
9001ff98:	3a08      	subs	r2, #8
9001ff9a:	3808      	subs	r0, #8
9001ff9c:	441a      	add	r2, r3
9001ff9e:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
9001ffa2:	b2d2      	uxtb	r2, r2
9001ffa4:	f362 0507 	bfi	r5, r2, #0, #8
9001ffa8:	f3c5 2607 	ubfx	r6, r5, #8, #8
9001ffac:	eb06 0683 	add.w	r6, r6, r3, lsl #2
9001ffb0:	4403      	add	r3, r0
9001ffb2:	b2f6      	uxtb	r6, r6
9001ffb4:	f366 250f 	bfi	r5, r6, #8, #8
9001ffb8:	eb06 0686 	add.w	r6, r6, r6, lsl #2
9001ffbc:	f3c5 4007 	ubfx	r0, r5, #16, #8
9001ffc0:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
9001ffc4:	2003      	movs	r0, #3
9001ffc6:	b2db      	uxtb	r3, r3
9001ffc8:	fb10 6603 	smlabb	r6, r0, r3, r6
9001ffcc:	2007      	movs	r0, #7
9001ffce:	f363 4517 	bfi	r5, r3, #16, #8
9001ffd2:	230b      	movs	r3, #11
9001ffd4:	fb10 6202 	smlabb	r2, r0, r2, r6
9001ffd8:	fb13 2101 	smlabb	r1, r3, r1, r2
9001ffdc:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
9001ffe0:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
9001ffe4:	604d      	str	r5, [r1, #4]
9001ffe6:	e729      	b.n	9001fe3c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
9001ffe8:	1c5e      	adds	r6, r3, #1
9001ffea:	465f      	mov	r7, fp
9001ffec:	45b3      	cmp	fp, r6
9001ffee:	bfa8      	it	ge
9001fff0:	4637      	movge	r7, r6
9001fff2:	e725      	b.n	9001fe40 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
9001fff4:	193b      	adds	r3, r7, r4
9001fff6:	2b40      	cmp	r3, #64	@ 0x40
9001fff8:	dd13      	ble.n	90020022 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
9001fffa:	4648      	mov	r0, r9
9001fffc:	00a1      	lsls	r1, r4, #2
9001fffe:	f7e2 fc81 	bl	90002904 <_ZN8touchgfx5paint9flushLineEPmi>
90020002:	4649      	mov	r1, r9
90020004:	9b05      	ldr	r3, [sp, #20]
90020006:	4622      	mov	r2, r4
90020008:	4640      	mov	r0, r8
9002000a:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9002000e:	f7e2 fce7 	bl	900029e0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
90020012:	4b2c      	ldr	r3, [pc, #176]	@ (900200c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
90020014:	2400      	movs	r4, #0
90020016:	4599      	cmp	r9, r3
90020018:	bf0c      	ite	eq
9002001a:	f8df 90b4 	ldreq.w	r9, [pc, #180]	@ 900200d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
9002001e:	f8df 90a4 	ldrne.w	r9, [pc, #164]	@ 900200c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
90020022:	eb09 0284 	add.w	r2, r9, r4, lsl #2
90020026:	463b      	mov	r3, r7
90020028:	3b01      	subs	r3, #1
9002002a:	f842 5b04 	str.w	r5, [r2], #4
9002002e:	d1fb      	bne.n	90020028 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
90020030:	443c      	add	r4, r7
90020032:	9f03      	ldr	r7, [sp, #12]
90020034:	e6d9      	b.n	9001fdea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
90020036:	b15c      	cbz	r4, 90020050 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
90020038:	00a1      	lsls	r1, r4, #2
9002003a:	4648      	mov	r0, r9
9002003c:	f7e2 fc62 	bl	90002904 <_ZN8touchgfx5paint9flushLineEPmi>
90020040:	4640      	mov	r0, r8
90020042:	eb08 0844 	add.w	r8, r8, r4, lsl #1
90020046:	9b05      	ldr	r3, [sp, #20]
90020048:	4622      	mov	r2, r4
9002004a:	4649      	mov	r1, r9
9002004c:	f7e2 fcc8 	bl	900029e0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
90020050:	4b1d      	ldr	r3, [pc, #116]	@ (900200c8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
90020052:	9a01      	ldr	r2, [sp, #4]
90020054:	881b      	ldrh	r3, [r3, #0]
90020056:	1a9b      	subs	r3, r3, r2
90020058:	eb08 0843 	add.w	r8, r8, r3, lsl #1
9002005c:	9b04      	ldr	r3, [sp, #16]
9002005e:	3301      	adds	r3, #1
90020060:	9304      	str	r3, [sp, #16]
90020062:	9a04      	ldr	r2, [sp, #16]
90020064:	9b00      	ldr	r3, [sp, #0]
90020066:	4293      	cmp	r3, r2
90020068:	d11d      	bne.n	900200a6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
9002006a:	9b02      	ldr	r3, [sp, #8]
9002006c:	2500      	movs	r5, #0
9002006e:	9a02      	ldr	r2, [sp, #8]
90020070:	f103 0b01 	add.w	fp, r3, #1
90020074:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
90020078:	9b06      	ldr	r3, [sp, #24]
9002007a:	4629      	mov	r1, r5
9002007c:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
90020080:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
90020084:	f44f 7280 	mov.w	r2, #256	@ 0x100
90020088:	1ba4      	subs	r4, r4, r6
9002008a:	9b07      	ldr	r3, [sp, #28]
9002008c:	ba3f      	rev	r7, r7
9002008e:	9808      	ldr	r0, [sp, #32]
90020090:	b2a4      	uxth	r4, r4
90020092:	441f      	add	r7, r3
90020094:	f00d fc3e 	bl	9002d914 <memset>
90020098:	f8cd b008 	str.w	fp, [sp, #8]
9002009c:	9504      	str	r5, [sp, #16]
9002009e:	f7e2 fc27 	bl	900028f0 <_ZN8touchgfx5paint8tearDownEv>
900200a2:	463e      	mov	r6, r7
900200a4:	e5cc      	b.n	9001fc40 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
900200a6:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
900200aa:	9b01      	ldr	r3, [sp, #4]
900200ac:	1ae4      	subs	r4, r4, r3
900200ae:	1ba4      	subs	r4, r4, r6
900200b0:	b2a4      	uxth	r4, r4
900200b2:	e7f4      	b.n	9002009e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
900200b4:	4b05      	ldr	r3, [pc, #20]	@ (900200cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
900200b6:	6818      	ldr	r0, [r3, #0]
900200b8:	6803      	ldr	r3, [r0, #0]
900200ba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900200bc:	4798      	blx	r3
900200be:	b00f      	add	sp, #60	@ 0x3c
900200c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900200c4:	24005b80 	.word	0x24005b80
900200c8:	24021c06 	.word	0x24021c06
900200cc:	24021c0c 	.word	0x24021c0c
900200d0:	24005c80 	.word	0x24005c80

900200d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
900200d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900200d8:	b08f      	sub	sp, #60	@ 0x3c
900200da:	461c      	mov	r4, r3
900200dc:	9205      	str	r2, [sp, #20]
900200de:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
900200e2:	9100      	str	r1, [sp, #0]
900200e4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900200e6:	9201      	str	r2, [sp, #4]
900200e8:	2a00      	cmp	r2, #0
900200ea:	f000 8116 	beq.w	9002031a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
900200ee:	6820      	ldr	r0, [r4, #0]
900200f0:	aa0a      	add	r2, sp, #40	@ 0x28
900200f2:	6861      	ldr	r1, [r4, #4]
900200f4:	c203      	stmia	r2!, {r0, r1}
900200f6:	6818      	ldr	r0, [r3, #0]
900200f8:	aa0c      	add	r2, sp, #48	@ 0x30
900200fa:	6859      	ldr	r1, [r3, #4]
900200fc:	c203      	stmia	r2!, {r0, r1}
900200fe:	a80a      	add	r0, sp, #40	@ 0x28
90020100:	f7f8 fe38 	bl	90018d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020104:	4621      	mov	r1, r4
90020106:	a80c      	add	r0, sp, #48	@ 0x30
90020108:	f7f8 fe78 	bl	90018dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002010c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
90020110:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
90020114:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
90020118:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
9002011c:	bfdb      	ittet	le
9002011e:	b2b3      	uxthle	r3, r6
90020120:	f44f 6280 	movle.w	r2, #1024	@ 0x400
90020124:	2301      	movgt	r3, #1
90020126:	fb92 f3f3 	sdivle	r3, r2, r3
9002012a:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9002012e:	441d      	add	r5, r3
90020130:	fb92 f1f3 	sdiv	r1, r2, r3
90020134:	fa1f fc81 	uxth.w	ip, r1
90020138:	3d01      	subs	r5, #1
9002013a:	fb0c 2413 	mls	r4, ip, r3, r2
9002013e:	4661      	mov	r1, ip
90020140:	fb14 f406 	smulbb	r4, r4, r6
90020144:	4404      	add	r4, r0
90020146:	fb95 f5f3 	sdiv	r5, r5, r3
9002014a:	b2a4      	uxth	r4, r4
9002014c:	b131      	cbz	r1, 9002015c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
9002014e:	9b05      	ldr	r3, [sp, #20]
90020150:	9900      	ldr	r1, [sp, #0]
90020152:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
90020156:	ba1b      	rev	r3, r3
90020158:	4419      	add	r1, r3
9002015a:	9100      	str	r1, [sp, #0]
9002015c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90020160:	b2ad      	uxth	r5, r5
90020162:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
90020166:	4418      	add	r0, r3
90020168:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9002016c:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
90020170:	00ad      	lsls	r5, r5, #2
90020172:	441a      	add	r2, r3
90020174:	4b6a      	ldr	r3, [pc, #424]	@ (90020320 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
90020176:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
9002017a:	6818      	ldr	r0, [r3, #0]
9002017c:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
90020180:	6803      	ldr	r3, [r0, #0]
90020182:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90020184:	4798      	blx	r3
90020186:	4967      	ldr	r1, [pc, #412]	@ (90020324 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
90020188:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9002018c:	2c00      	cmp	r4, #0
9002018e:	880b      	ldrh	r3, [r1, #0]
90020190:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
90020194:	bf0c      	ite	eq
90020196:	46c6      	moveq	lr, r8
90020198:	f04f 0e00 	movne.w	lr, #0
9002019c:	9109      	str	r1, [sp, #36]	@ 0x24
9002019e:	fb03 c202 	mla	r2, r3, r2, ip
900201a2:	f8bd 1004 	ldrh.w	r1, [sp, #4]
900201a6:	4373      	muls	r3, r6
900201a8:	fa1f fe8e 	uxth.w	lr, lr
900201ac:	eb00 0042 	add.w	r0, r0, r2, lsl #1
900201b0:	9103      	str	r1, [sp, #12]
900201b2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
900201b6:	9306      	str	r3, [sp, #24]
900201b8:	1d2b      	adds	r3, r5, #4
900201ba:	9307      	str	r3, [sp, #28]
900201bc:	9b01      	ldr	r3, [sp, #4]
900201be:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
900201c2:	2300      	movs	r3, #0
900201c4:	b292      	uxth	r2, r2
900201c6:	9302      	str	r3, [sp, #8]
900201c8:	9204      	str	r2, [sp, #16]
900201ca:	9a06      	ldr	r2, [sp, #24]
900201cc:	4282      	cmp	r2, r0
900201ce:	f240 809f 	bls.w	90020310 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
900201d2:	b963      	cbnz	r3, 900201ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
900201d4:	9b00      	ldr	r3, [sp, #0]
900201d6:	781a      	ldrb	r2, [r3, #0]
900201d8:	0993      	lsrs	r3, r2, #6
900201da:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
900201de:	9202      	str	r2, [sp, #8]
900201e0:	1e5a      	subs	r2, r3, #1
900201e2:	2a02      	cmp	r2, #2
900201e4:	d815      	bhi.n	90020212 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
900201e6:	9a00      	ldr	r2, [sp, #0]
900201e8:	b29b      	uxth	r3, r3
900201ea:	3201      	adds	r2, #1
900201ec:	9200      	str	r2, [sp, #0]
900201ee:	b1b4      	cbz	r4, 9002021e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
900201f0:	429c      	cmp	r4, r3
900201f2:	bf91      	iteee	ls
900201f4:	1b1c      	subls	r4, r3, r4
900201f6:	1ae4      	subhi	r4, r4, r3
900201f8:	4671      	movhi	r1, lr
900201fa:	f04f 0a00 	movhi.w	sl, #0
900201fe:	bf9b      	ittet	ls
90020200:	fa1f fa84 	uxthls.w	sl, r4
90020204:	2400      	movls	r4, #0
90020206:	b2a4      	uxthhi	r4, r4
90020208:	fa1f f188 	uxthls.w	r1, r8
9002020c:	4653      	mov	r3, sl
9002020e:	468e      	mov	lr, r1
90020210:	e7db      	b.n	900201ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
90020212:	9a00      	ldr	r2, [sp, #0]
90020214:	9b00      	ldr	r3, [sp, #0]
90020216:	3202      	adds	r2, #2
90020218:	785b      	ldrb	r3, [r3, #1]
9002021a:	9200      	str	r2, [sp, #0]
9002021c:	e7e7      	b.n	900201ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9002021e:	2202      	movs	r2, #2
90020220:	9907      	ldr	r1, [sp, #28]
90020222:	4573      	cmp	r3, lr
90020224:	4615      	mov	r5, r2
90020226:	9a02      	ldr	r2, [sp, #8]
90020228:	bf24      	itt	cs
9002022a:	eba3 0a0e 	subcs.w	sl, r3, lr
9002022e:	46f1      	movcs	r9, lr
90020230:	fb15 1202 	smlabb	r2, r5, r2, r1
90020234:	9905      	ldr	r1, [sp, #20]
90020236:	bf34      	ite	cc
90020238:	4699      	movcc	r9, r3
9002023a:	fa1f fa8a 	uxthcs.w	sl, sl
9002023e:	f831 c002 	ldrh.w	ip, [r1, r2]
90020242:	bf38      	it	cc
90020244:	ebae 0103 	subcc.w	r1, lr, r3
90020248:	9a01      	ldr	r2, [sp, #4]
9002024a:	bf2e      	itee	cs
9002024c:	4621      	movcs	r1, r4
9002024e:	b289      	uxthcc	r1, r1
90020250:	46a2      	movcc	sl, r4
90020252:	2aff      	cmp	r2, #255	@ 0xff
90020254:	ea4f 0949 	mov.w	r9, r9, lsl #1
90020258:	d105      	bne.n	90020266 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
9002025a:	4481      	add	r9, r0
9002025c:	4581      	cmp	r9, r0
9002025e:	d045      	beq.n	900202ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
90020260:	f820 cb02 	strh.w	ip, [r0], #2
90020264:	e7fa      	b.n	9002025c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
90020266:	ea4f 222c 	mov.w	r2, ip, asr #8
9002026a:	9d03      	ldr	r5, [sp, #12]
9002026c:	ea4f 0bec 	mov.w	fp, ip, asr #3
90020270:	4481      	add	r9, r0
90020272:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90020276:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
9002027a:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9002027e:	fa5f fc8c 	uxtb.w	ip, ip
90020282:	436a      	muls	r2, r5
90020284:	fb0b fb05 	mul.w	fp, fp, r5
90020288:	fb0c fc05 	mul.w	ip, ip, r5
9002028c:	9208      	str	r2, [sp, #32]
9002028e:	4581      	cmp	r9, r0
90020290:	d02c      	beq.n	900202ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
90020292:	8802      	ldrh	r2, [r0, #0]
90020294:	9d04      	ldr	r5, [sp, #16]
90020296:	1216      	asrs	r6, r2, #8
90020298:	9f04      	ldr	r7, [sp, #16]
9002029a:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9002029e:	fb16 f605 	smulbb	r6, r6, r5
900202a2:	9d08      	ldr	r5, [sp, #32]
900202a4:	442e      	add	r6, r5
900202a6:	10d5      	asrs	r5, r2, #3
900202a8:	00d2      	lsls	r2, r2, #3
900202aa:	b2b6      	uxth	r6, r6
900202ac:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
900202b0:	b2d2      	uxtb	r2, r2
900202b2:	fb15 f507 	smulbb	r5, r5, r7
900202b6:	fb12 f207 	smulbb	r2, r2, r7
900202ba:	1c77      	adds	r7, r6, #1
900202bc:	445d      	add	r5, fp
900202be:	4462      	add	r2, ip
900202c0:	eb07 2616 	add.w	r6, r7, r6, lsr #8
900202c4:	b2ad      	uxth	r5, r5
900202c6:	b292      	uxth	r2, r2
900202c8:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
900202cc:	1c57      	adds	r7, r2, #1
900202ce:	eb07 2212 	add.w	r2, r7, r2, lsr #8
900202d2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900202d6:	4316      	orrs	r6, r2
900202d8:	1c6a      	adds	r2, r5, #1
900202da:	eb02 2515 	add.w	r5, r2, r5, lsr #8
900202de:	096d      	lsrs	r5, r5, #5
900202e0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900202e4:	432e      	orrs	r6, r5
900202e6:	f820 6b02 	strh.w	r6, [r0], #2
900202ea:	e7d0      	b.n	9002028e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
900202ec:	4573      	cmp	r3, lr
900202ee:	d38d      	bcc.n	9002020c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
900202f0:	fa1f f188 	uxth.w	r1, r8
900202f4:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
900202f8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900202fa:	1a64      	subs	r4, r4, r1
900202fc:	881b      	ldrh	r3, [r3, #0]
900202fe:	b2a4      	uxth	r4, r4
90020300:	eba3 0308 	sub.w	r3, r3, r8
90020304:	2c00      	cmp	r4, #0
90020306:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9002030a:	bf18      	it	ne
9002030c:	2100      	movne	r1, #0
9002030e:	e77d      	b.n	9002020c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
90020310:	4b03      	ldr	r3, [pc, #12]	@ (90020320 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
90020312:	6818      	ldr	r0, [r3, #0]
90020314:	6803      	ldr	r3, [r0, #0]
90020316:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90020318:	4798      	blx	r3
9002031a:	b00f      	add	sp, #60	@ 0x3c
9002031c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020320:	24021c0c 	.word	0x24021c0c
90020324:	24021c06 	.word	0x24021c06

90020328 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
90020328:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002032c:	b09f      	sub	sp, #124	@ 0x7c
9002032e:	461d      	mov	r5, r3
90020330:	4604      	mov	r4, r0
90020332:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90020334:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
90020338:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
9002033c:	9209      	str	r2, [sp, #36]	@ 0x24
9002033e:	2a00      	cmp	r2, #0
90020340:	f000 81ed 	beq.w	9002071e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
90020344:	6828      	ldr	r0, [r5, #0]
90020346:	aa1a      	add	r2, sp, #104	@ 0x68
90020348:	6869      	ldr	r1, [r5, #4]
9002034a:	c203      	stmia	r2!, {r0, r1}
9002034c:	6818      	ldr	r0, [r3, #0]
9002034e:	aa1c      	add	r2, sp, #112	@ 0x70
90020350:	6859      	ldr	r1, [r3, #4]
90020352:	c203      	stmia	r2!, {r0, r1}
90020354:	a81a      	add	r0, sp, #104	@ 0x68
90020356:	f7f8 fd0d 	bl	90018d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002035a:	4629      	mov	r1, r5
9002035c:	a81c      	add	r0, sp, #112	@ 0x70
9002035e:	f7f8 fd4d 	bl	90018dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020362:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
90020366:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
9002036a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9002036e:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
90020372:	bfdb      	ittet	le
90020374:	b29a      	uxthle	r2, r3
90020376:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9002037a:	2201      	movgt	r2, #1
9002037c:	fb91 f2f2 	sdivle	r2, r1, r2
90020380:	9202      	str	r2, [sp, #8]
90020382:	9802      	ldr	r0, [sp, #8]
90020384:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
90020388:	9902      	ldr	r1, [sp, #8]
9002038a:	fb92 f0f0 	sdiv	r0, r2, r0
9002038e:	b280      	uxth	r0, r0
90020390:	4488      	add	r8, r1
90020392:	9010      	str	r0, [sp, #64]	@ 0x40
90020394:	f108 38ff 	add.w	r8, r8, #4294967295
90020398:	9802      	ldr	r0, [sp, #8]
9002039a:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9002039c:	fb05 2510 	mls	r5, r5, r0, r2
900203a0:	fb98 f8f1 	sdiv	r8, r8, r1
900203a4:	fb15 f503 	smulbb	r5, r5, r3
900203a8:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
900203ac:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
900203b0:	f108 0801 	add.w	r8, r8, #1
900203b4:	440d      	add	r5, r1
900203b6:	4419      	add	r1, r3
900203b8:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
900203bc:	fa1f f888 	uxth.w	r8, r8
900203c0:	441a      	add	r2, r3
900203c2:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
900203c6:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
900203ca:	b2ad      	uxth	r5, r5
900203cc:	9304      	str	r3, [sp, #16]
900203ce:	4b94      	ldr	r3, [pc, #592]	@ (90020620 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
900203d0:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
900203d4:	6818      	ldr	r0, [r3, #0]
900203d6:	6803      	ldr	r3, [r0, #0]
900203d8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900203da:	4798      	blx	r3
900203dc:	4b91      	ldr	r3, [pc, #580]	@ (90020624 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
900203de:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
900203e2:	2d00      	cmp	r5, #0
900203e4:	881a      	ldrh	r2, [r3, #0]
900203e6:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
900203ea:	fb02 f606 	mul.w	r6, r2, r6
900203ee:	fb02 7101 	mla	r1, r2, r1, r7
900203f2:	9318      	str	r3, [sp, #96]	@ 0x60
900203f4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
900203f8:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
900203fc:	f04f 0100 	mov.w	r1, #0
90020400:	eb00 0246 	add.w	r2, r0, r6, lsl #1
90020404:	930f      	str	r3, [sp, #60]	@ 0x3c
90020406:	4b88      	ldr	r3, [pc, #544]	@ (90020628 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
90020408:	920a      	str	r2, [sp, #40]	@ 0x28
9002040a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9002040c:	eba3 0304 	sub.w	r3, r3, r4
90020410:	910d      	str	r1, [sp, #52]	@ 0x34
90020412:	eb02 0888 	add.w	r8, r2, r8, lsl #2
90020416:	9319      	str	r3, [sp, #100]	@ 0x64
90020418:	f108 0204 	add.w	r2, r8, #4
9002041c:	9211      	str	r2, [sp, #68]	@ 0x44
9002041e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90020420:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
90020424:	9215      	str	r2, [sp, #84]	@ 0x54
90020426:	9a04      	ldr	r2, [sp, #16]
90020428:	bf18      	it	ne
9002042a:	2200      	movne	r2, #0
9002042c:	b292      	uxth	r2, r2
9002042e:	9910      	ldr	r1, [sp, #64]	@ 0x40
90020430:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90020432:	fa11 f383 	uxtah	r3, r1, r3
90020436:	9914      	ldr	r1, [sp, #80]	@ 0x50
90020438:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9002043c:	3304      	adds	r3, #4
9002043e:	9306      	str	r3, [sp, #24]
90020440:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90020442:	4283      	cmp	r3, r0
90020444:	f240 8166 	bls.w	90020714 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
90020448:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
9002044c:	f04f 0a01 	mov.w	sl, #1
90020450:	9902      	ldr	r1, [sp, #8]
90020452:	9e06      	ldr	r6, [sp, #24]
90020454:	46d3      	mov	fp, sl
90020456:	4657      	mov	r7, sl
90020458:	7836      	ldrb	r6, [r6, #0]
9002045a:	fbb5 f3f3 	udiv	r3, r5, r3
9002045e:	1acb      	subs	r3, r1, r3
90020460:	9612      	str	r6, [sp, #72]	@ 0x48
90020462:	3601      	adds	r6, #1
90020464:	b29b      	uxth	r3, r3
90020466:	9605      	str	r6, [sp, #20]
90020468:	9316      	str	r3, [sp, #88]	@ 0x58
9002046a:	9b06      	ldr	r3, [sp, #24]
9002046c:	7859      	ldrb	r1, [r3, #1]
9002046e:	789b      	ldrb	r3, [r3, #2]
90020470:	021b      	lsls	r3, r3, #8
90020472:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
90020476:	9906      	ldr	r1, [sp, #24]
90020478:	78c9      	ldrb	r1, [r1, #3]
9002047a:	430b      	orrs	r3, r1
9002047c:	9913      	ldr	r1, [sp, #76]	@ 0x4c
9002047e:	4419      	add	r1, r3
90020480:	1c4e      	adds	r6, r1, #1
90020482:	7849      	ldrb	r1, [r1, #1]
90020484:	9603      	str	r6, [sp, #12]
90020486:	0209      	lsls	r1, r1, #8
90020488:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9002048a:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
9002048e:	5cf3      	ldrb	r3, [r6, r3]
90020490:	4319      	orrs	r1, r3
90020492:	b28b      	uxth	r3, r1
90020494:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
90020498:	930c      	str	r3, [sp, #48]	@ 0x30
9002049a:	2300      	movs	r3, #0
9002049c:	9307      	str	r3, [sp, #28]
9002049e:	469c      	mov	ip, r3
900204a0:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
900204a4:	930e      	str	r3, [sp, #56]	@ 0x38
900204a6:	2d00      	cmp	r5, #0
900204a8:	d07e      	beq.n	900205a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
900204aa:	42af      	cmp	r7, r5
900204ac:	d26e      	bcs.n	9002058c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
900204ae:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900204b0:	1bed      	subs	r5, r5, r7
900204b2:	9201      	str	r2, [sp, #4]
900204b4:	4283      	cmp	r3, r0
900204b6:	b2ad      	uxth	r5, r5
900204b8:	d802      	bhi.n	900204c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
900204ba:	e073      	b.n	900205a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
900204bc:	2b00      	cmp	r3, #0
900204be:	d15f      	bne.n	90020580 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
900204c0:	9b03      	ldr	r3, [sp, #12]
900204c2:	f1cb 0207 	rsb	r2, fp, #7
900204c6:	785b      	ldrb	r3, [r3, #1]
900204c8:	4093      	lsls	r3, r2
900204ca:	005b      	lsls	r3, r3, #1
900204cc:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
900204d0:	9b03      	ldr	r3, [sp, #12]
900204d2:	781b      	ldrb	r3, [r3, #0]
900204d4:	fa43 f30b 	asr.w	r3, r3, fp
900204d8:	b2db      	uxtb	r3, r3
900204da:	4313      	orrs	r3, r2
900204dc:	f10b 0201 	add.w	r2, fp, #1
900204e0:	fa5f fb82 	uxtb.w	fp, r2
900204e4:	9a03      	ldr	r2, [sp, #12]
900204e6:	b29f      	uxth	r7, r3
900204e8:	f1bb 0f08 	cmp.w	fp, #8
900204ec:	bf13      	iteet	ne
900204ee:	3201      	addne	r2, #1
900204f0:	3202      	addeq	r2, #2
900204f2:	f04f 0b00 	moveq.w	fp, #0
900204f6:	9203      	strne	r2, [sp, #12]
900204f8:	bf08      	it	eq
900204fa:	9203      	streq	r2, [sp, #12]
900204fc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
900204fe:	42ba      	cmp	r2, r7
90020500:	d309      	bcc.n	90020516 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
90020502:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
90020506:	2301      	movs	r3, #1
90020508:	9a05      	ldr	r2, [sp, #20]
9002050a:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
9002050e:	d30e      	bcc.n	9002052e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
90020510:	469a      	mov	sl, r3
90020512:	2600      	movs	r6, #0
90020514:	e035      	b.n	90020582 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
90020516:	9b05      	ldr	r3, [sp, #20]
90020518:	429f      	cmp	r7, r3
9002051a:	d318      	bcc.n	9002054e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
9002051c:	eb04 030a 	add.w	r3, r4, sl
90020520:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
90020524:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
90020528:	f10a 0301 	add.w	r3, sl, #1
9002052c:	b29b      	uxth	r3, r3
9002052e:	9a05      	ldr	r2, [sp, #20]
90020530:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
90020534:	eb04 0282 	add.w	r2, r4, r2, lsl #2
90020538:	990c      	ldr	r1, [sp, #48]	@ 0x30
9002053a:	7116      	strb	r6, [r2, #4]
9002053c:	f10a 0601 	add.w	r6, sl, #1
90020540:	80d1      	strh	r1, [r2, #6]
90020542:	7156      	strb	r6, [r2, #5]
90020544:	9a05      	ldr	r2, [sp, #20]
90020546:	3201      	adds	r2, #1
90020548:	b292      	uxth	r2, r2
9002054a:	9205      	str	r2, [sp, #20]
9002054c:	e7e0      	b.n	90020510 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
9002054e:	eb04 0387 	add.w	r3, r4, r7, lsl #2
90020552:	463a      	mov	r2, r7
90020554:	795b      	ldrb	r3, [r3, #5]
90020556:	f603 0604 	addw	r6, r3, #2052	@ 0x804
9002055a:	4426      	add	r6, r4
9002055c:	9919      	ldr	r1, [sp, #100]	@ 0x64
9002055e:	eb01 0c06 	add.w	ip, r1, r6
90020562:	f1bc 0f00 	cmp.w	ip, #0
90020566:	dd07      	ble.n	90020578 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
90020568:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9002056c:	f892 c004 	ldrb.w	ip, [r2, #4]
90020570:	f806 cd01 	strb.w	ip, [r6, #-1]!
90020574:	88d2      	ldrh	r2, [r2, #6]
90020576:	e7f1      	b.n	9002055c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
90020578:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
9002057c:	b29b      	uxth	r3, r3
9002057e:	e7c3      	b.n	90020508 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
90020580:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
90020582:	970c      	str	r7, [sp, #48]	@ 0x30
90020584:	46b4      	mov	ip, r6
90020586:	9a01      	ldr	r2, [sp, #4]
90020588:	461f      	mov	r7, r3
9002058a:	e78c      	b.n	900204a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
9002058c:	1b7b      	subs	r3, r7, r5
9002058e:	eb0c 0605 	add.w	r6, ip, r5
90020592:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90020596:	b29b      	uxth	r3, r3
90020598:	b2b6      	uxth	r6, r6
9002059a:	9201      	str	r2, [sp, #4]
9002059c:	2500      	movs	r5, #0
9002059e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900205a0:	4282      	cmp	r2, r0
900205a2:	d88b      	bhi.n	900204bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
900205a4:	9a01      	ldr	r2, [sp, #4]
900205a6:	e74b      	b.n	90020440 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
900205a8:	4297      	cmp	r7, r2
900205aa:	d332      	bcc.n	90020612 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
900205ac:	1abb      	subs	r3, r7, r2
900205ae:	9208      	str	r2, [sp, #32]
900205b0:	9501      	str	r5, [sp, #4]
900205b2:	b29b      	uxth	r3, r3
900205b4:	9909      	ldr	r1, [sp, #36]	@ 0x24
900205b6:	29ff      	cmp	r1, #255	@ 0xff
900205b8:	9908      	ldr	r1, [sp, #32]
900205ba:	eb0c 0601 	add.w	r6, ip, r1
900205be:	d135      	bne.n	9002062c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
900205c0:	f1a0 0e02 	sub.w	lr, r0, #2
900205c4:	b2b6      	uxth	r6, r6
900205c6:	45b4      	cmp	ip, r6
900205c8:	f040 808c 	bne.w	900206e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
900205cc:	9908      	ldr	r1, [sp, #32]
900205ce:	4297      	cmp	r7, r2
900205d0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
900205d4:	d3e2      	bcc.n	9002059c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
900205d6:	9a18      	ldr	r2, [sp, #96]	@ 0x60
900205d8:	9904      	ldr	r1, [sp, #16]
900205da:	8812      	ldrh	r2, [r2, #0]
900205dc:	1a52      	subs	r2, r2, r1
900205de:	9916      	ldr	r1, [sp, #88]	@ 0x58
900205e0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
900205e4:	9a07      	ldr	r2, [sp, #28]
900205e6:	3201      	adds	r2, #1
900205e8:	428a      	cmp	r2, r1
900205ea:	9207      	str	r2, [sp, #28]
900205ec:	f040 8087 	bne.w	900206fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
900205f0:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
900205f4:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
900205f8:	9b04      	ldr	r3, [sp, #16]
900205fa:	1bed      	subs	r5, r5, r7
900205fc:	b2ad      	uxth	r5, r5
900205fe:	2d00      	cmp	r5, #0
90020600:	bf08      	it	eq
90020602:	461a      	moveq	r2, r3
90020604:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90020606:	bf18      	it	ne
90020608:	2200      	movne	r2, #0
9002060a:	3301      	adds	r3, #1
9002060c:	b292      	uxth	r2, r2
9002060e:	930d      	str	r3, [sp, #52]	@ 0x34
90020610:	e70d      	b.n	9002042e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
90020612:	1bd1      	subs	r1, r2, r7
90020614:	9708      	str	r7, [sp, #32]
90020616:	b28b      	uxth	r3, r1
90020618:	9301      	str	r3, [sp, #4]
9002061a:	462b      	mov	r3, r5
9002061c:	e7ca      	b.n	900205b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
9002061e:	bf00      	nop
90020620:	24021c0c 	.word	0x24021c0c
90020624:	24021c06 	.word	0x24021c06
90020628:	fffff7fb 	.word	0xfffff7fb
9002062c:	b2b6      	uxth	r6, r6
9002062e:	900b      	str	r0, [sp, #44]	@ 0x2c
90020630:	45b4      	cmp	ip, r6
90020632:	d0cb      	beq.n	900205cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
90020634:	f10c 0101 	add.w	r1, ip, #1
90020638:	44a4      	add	ip, r4
9002063a:	9117      	str	r1, [sp, #92]	@ 0x5c
9002063c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
90020640:	9911      	ldr	r1, [sp, #68]	@ 0x44
90020642:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
90020646:	990b      	ldr	r1, [sp, #44]	@ 0x2c
90020648:	ea4f 2825 	mov.w	r8, r5, asr #8
9002064c:	f8b1 c000 	ldrh.w	ip, [r1]
90020650:	990e      	ldr	r1, [sp, #56]	@ 0x38
90020652:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
90020656:	ea4f 2e2c 	mov.w	lr, ip, asr #8
9002065a:	ea4f 09ec 	mov.w	r9, ip, asr #3
9002065e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
90020662:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90020666:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9002066a:	fb1e fe01 	smulbb	lr, lr, r1
9002066e:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90020670:	fa5f fc8c 	uxtb.w	ip, ip
90020674:	fb08 e801 	mla	r8, r8, r1, lr
90020678:	ea4f 0ee5 	mov.w	lr, r5, asr #3
9002067c:	990e      	ldr	r1, [sp, #56]	@ 0x38
9002067e:	00ed      	lsls	r5, r5, #3
90020680:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
90020684:	fa1f f888 	uxth.w	r8, r8
90020688:	fb19 f901 	smulbb	r9, r9, r1
9002068c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9002068e:	b2ed      	uxtb	r5, r5
90020690:	fb0e 9e01 	mla	lr, lr, r1, r9
90020694:	990e      	ldr	r1, [sp, #56]	@ 0x38
90020696:	fb1c fc01 	smulbb	ip, ip, r1
9002069a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9002069c:	fa1f fe8e 	uxth.w	lr, lr
900206a0:	fb05 c501 	mla	r5, r5, r1, ip
900206a4:	f108 0c01 	add.w	ip, r8, #1
900206a8:	f10e 0901 	add.w	r9, lr, #1
900206ac:	990b      	ldr	r1, [sp, #44]	@ 0x2c
900206ae:	b2ad      	uxth	r5, r5
900206b0:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
900206b4:	f105 0c01 	add.w	ip, r5, #1
900206b8:	eb09 291e 	add.w	r9, r9, lr, lsr #8
900206bc:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
900206c0:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
900206c4:	ea4f 1959 	mov.w	r9, r9, lsr #5
900206c8:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
900206cc:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
900206d0:	ea4c 0808 	orr.w	r8, ip, r8
900206d4:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
900206d8:	ea48 0809 	orr.w	r8, r8, r9
900206dc:	f821 8b02 	strh.w	r8, [r1], #2
900206e0:	910b      	str	r1, [sp, #44]	@ 0x2c
900206e2:	e7a5      	b.n	90020630 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
900206e4:	f10c 0801 	add.w	r8, ip, #1
900206e8:	44a4      	add	ip, r4
900206ea:	9911      	ldr	r1, [sp, #68]	@ 0x44
900206ec:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
900206f0:	fa1f fc88 	uxth.w	ip, r8
900206f4:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
900206f8:	f82e 5f02 	strh.w	r5, [lr, #2]!
900206fc:	e763      	b.n	900205c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
900206fe:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90020702:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
90020706:	1aad      	subs	r5, r5, r2
90020708:	b2ad      	uxth	r5, r5
9002070a:	2d00      	cmp	r5, #0
9002070c:	bf18      	it	ne
9002070e:	2200      	movne	r2, #0
90020710:	9201      	str	r2, [sp, #4]
90020712:	e744      	b.n	9002059e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
90020714:	4b03      	ldr	r3, [pc, #12]	@ (90020724 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
90020716:	6818      	ldr	r0, [r3, #0]
90020718:	6803      	ldr	r3, [r0, #0]
9002071a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9002071c:	4798      	blx	r3
9002071e:	b01f      	add	sp, #124	@ 0x7c
90020720:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020724:	24021c0c 	.word	0x24021c0c

90020728 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
90020728:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002072c:	b093      	sub	sp, #76	@ 0x4c
9002072e:	4616      	mov	r6, r2
90020730:	460d      	mov	r5, r1
90020732:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
90020736:	9003      	str	r0, [sp, #12]
90020738:	9201      	str	r2, [sp, #4]
9002073a:	2a00      	cmp	r2, #0
9002073c:	f000 8303 	beq.w	90020d46 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x61e>
90020740:	6830      	ldr	r0, [r6, #0]
90020742:	ac0e      	add	r4, sp, #56	@ 0x38
90020744:	6871      	ldr	r1, [r6, #4]
90020746:	c403      	stmia	r4!, {r0, r1}
90020748:	6818      	ldr	r0, [r3, #0]
9002074a:	ac10      	add	r4, sp, #64	@ 0x40
9002074c:	6859      	ldr	r1, [r3, #4]
9002074e:	c403      	stmia	r4!, {r0, r1}
90020750:	a80e      	add	r0, sp, #56	@ 0x38
90020752:	f7f8 fb0f 	bl	90018d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020756:	4631      	mov	r1, r6
90020758:	a810      	add	r0, sp, #64	@ 0x40
9002075a:	f7f8 fb4f 	bl	90018dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002075e:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
90020762:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
90020766:	bfdb      	ittet	le
90020768:	b293      	uxthle	r3, r2
9002076a:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9002076e:	2301      	movgt	r3, #1
90020770:	fb91 f3f3 	sdivle	r3, r1, r3
90020774:	9304      	str	r3, [sp, #16]
90020776:	f105 0308 	add.w	r3, r5, #8
9002077a:	9904      	ldr	r1, [sp, #16]
9002077c:	9308      	str	r3, [sp, #32]
9002077e:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
90020782:	440b      	add	r3, r1
90020784:	3b01      	subs	r3, #1
90020786:	fb93 f3f1 	sdiv	r3, r3, r1
9002078a:	3b01      	subs	r3, #1
9002078c:	9908      	ldr	r1, [sp, #32]
9002078e:	b29b      	uxth	r3, r3
90020790:	eb01 0383 	add.w	r3, r1, r3, lsl #2
90020794:	9904      	ldr	r1, [sp, #16]
90020796:	9309      	str	r3, [sp, #36]	@ 0x24
90020798:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
9002079c:	fb93 f0f1 	sdiv	r0, r3, r1
900207a0:	b284      	uxth	r4, r0
900207a2:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
900207a6:	9405      	str	r4, [sp, #20]
900207a8:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
900207ac:	fb05 3914 	mls	r9, r5, r4, r3
900207b0:	fb19 f902 	smulbb	r9, r9, r2
900207b4:	4489      	add	r9, r1
900207b6:	fa1f f989 	uxth.w	r9, r9
900207ba:	2d00      	cmp	r5, #0
900207bc:	d05d      	beq.n	9002087a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
900207be:	1e6a      	subs	r2, r5, #1
900207c0:	9808      	ldr	r0, [sp, #32]
900207c2:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
900207c6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900207c8:	fa9a fa8a 	rev.w	sl, sl
900207cc:	4492      	add	sl, r2
900207ce:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
900207d2:	f04f 0600 	mov.w	r6, #0
900207d6:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
900207da:	4411      	add	r1, r2
900207dc:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
900207e0:	4413      	add	r3, r2
900207e2:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
900207e6:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
900207ea:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
900207ee:	9302      	str	r3, [sp, #8]
900207f0:	4bca      	ldr	r3, [pc, #808]	@ (90020b1c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
900207f2:	6818      	ldr	r0, [r3, #0]
900207f4:	6803      	ldr	r3, [r0, #0]
900207f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900207f8:	4798      	blx	r3
900207fa:	4bc9      	ldr	r3, [pc, #804]	@ (90020b20 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
900207fc:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
90020800:	2100      	movs	r1, #0
90020802:	881b      	ldrh	r3, [r3, #0]
90020804:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
90020808:	fb03 2404 	mla	r4, r3, r4, r2
9002080c:	2280      	movs	r2, #128	@ 0x80
9002080e:	436b      	muls	r3, r5
90020810:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90020814:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90020818:	930d      	str	r3, [sp, #52]	@ 0x34
9002081a:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
9002081e:	fb99 f3f3 	sdiv	r3, r9, r3
90020822:	9306      	str	r3, [sp, #24]
90020824:	9b01      	ldr	r3, [sp, #4]
90020826:	43db      	mvns	r3, r3
90020828:	b2db      	uxtb	r3, r3
9002082a:	930a      	str	r3, [sp, #40]	@ 0x28
9002082c:	9b03      	ldr	r3, [sp, #12]
9002082e:	3304      	adds	r3, #4
90020830:	4618      	mov	r0, r3
90020832:	930b      	str	r3, [sp, #44]	@ 0x2c
90020834:	f00d f86e 	bl	9002d914 <memset>
90020838:	4bba      	ldr	r3, [pc, #744]	@ (90020b24 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
9002083a:	9300      	str	r3, [sp, #0]
9002083c:	2300      	movs	r3, #0
9002083e:	9307      	str	r3, [sp, #28]
90020840:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90020842:	42a3      	cmp	r3, r4
90020844:	f240 827a 	bls.w	90020d3c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x614>
90020848:	f04f 0e07 	mov.w	lr, #7
9002084c:	f1b9 0f00 	cmp.w	r9, #0
90020850:	f000 8159 	beq.w	90020b06 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
90020854:	f89a 5000 	ldrb.w	r5, [sl]
90020858:	f10a 0701 	add.w	r7, sl, #1
9002085c:	b2ed      	uxtb	r5, r5
9002085e:	11aa      	asrs	r2, r5, #6
90020860:	d10e      	bne.n	90020880 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
90020862:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
90020866:	9b03      	ldr	r3, [sp, #12]
90020868:	eb03 0545 	add.w	r5, r3, r5, lsl #1
9002086c:	88ae      	ldrh	r6, [r5, #4]
9002086e:	f109 39ff 	add.w	r9, r9, #4294967295
90020872:	fa1f f989 	uxth.w	r9, r9
90020876:	46ba      	mov	sl, r7
90020878:	e7e8      	b.n	9002084c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
9002087a:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
9002087e:	e7a6      	b.n	900207ce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
90020880:	2a01      	cmp	r2, #1
90020882:	d129      	bne.n	900208d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
90020884:	f3c6 0304 	ubfx	r3, r6, #0, #5
90020888:	f005 0203 	and.w	r2, r5, #3
9002088c:	2103      	movs	r1, #3
9002088e:	3b02      	subs	r3, #2
90020890:	4413      	add	r3, r2
90020892:	f3c5 0281 	ubfx	r2, r5, #2, #2
90020896:	f3c5 1501 	ubfx	r5, r5, #4, #2
9002089a:	f003 031f 	and.w	r3, r3, #31
9002089e:	3a02      	subs	r2, #2
900208a0:	3d02      	subs	r5, #2
900208a2:	f363 0604 	bfi	r6, r3, #0, #5
900208a6:	eb02 1256 	add.w	r2, r2, r6, lsr #5
900208aa:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
900208ae:	f362 164a 	bfi	r6, r2, #5, #6
900208b2:	eb02 0282 	add.w	r2, r2, r2, lsl #2
900208b6:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
900208ba:	f005 051f 	and.w	r5, r5, #31
900208be:	fb11 2205 	smlabb	r2, r1, r5, r2
900208c2:	f365 26cf 	bfi	r6, r5, #11, #5
900208c6:	fb1e 2303 	smlabb	r3, lr, r3, r2
900208ca:	9a03      	ldr	r2, [sp, #12]
900208cc:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
900208d0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900208d4:	809e      	strh	r6, [r3, #4]
900208d6:	e7ca      	b.n	9002086e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
900208d8:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
900208dc:	2a02      	cmp	r2, #2
900208de:	b2ab      	uxth	r3, r5
900208e0:	d136      	bne.n	90020950 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
900208e2:	2101      	movs	r1, #1
900208e4:	fb12 1205 	smlabb	r2, r2, r5, r1
900208e8:	4492      	add	sl, r2
900208ea:	463a      	mov	r2, r7
900208ec:	4552      	cmp	r2, sl
900208ee:	d01c      	beq.n	9002092a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
900208f0:	4694      	mov	ip, r2
900208f2:	f04f 0b03 	mov.w	fp, #3
900208f6:	f81c 1b02 	ldrb.w	r1, [ip], #2
900208fa:	7852      	ldrb	r2, [r2, #1]
900208fc:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
90020900:	f3c1 1045 	ubfx	r0, r1, #5, #6
90020904:	ea4f 28d1 	mov.w	r8, r1, lsr #11
90020908:	f001 021f 	and.w	r2, r1, #31
9002090c:	460e      	mov	r6, r1
9002090e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90020912:	fb1b 0008 	smlabb	r0, fp, r8, r0
90020916:	fb1e 0002 	smlabb	r0, lr, r2, r0
9002091a:	9a03      	ldr	r2, [sp, #12]
9002091c:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
90020920:	eb02 0040 	add.w	r0, r2, r0, lsl #1
90020924:	4662      	mov	r2, ip
90020926:	8081      	strh	r1, [r0, #4]
90020928:	e7e0      	b.n	900208ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
9002092a:	4599      	cmp	r9, r3
9002092c:	d20b      	bcs.n	90020946 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
9002092e:	eba5 0509 	sub.w	r5, r5, r9
90020932:	eb07 0749 	add.w	r7, r7, r9, lsl #1
90020936:	2d00      	cmp	r5, #0
90020938:	f300 8208 	bgt.w	90020d4c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x624>
9002093c:	f8dd 8008 	ldr.w	r8, [sp, #8]
90020940:	2301      	movs	r3, #1
90020942:	9307      	str	r3, [sp, #28]
90020944:	e00c      	b.n	90020960 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
90020946:	eb07 0745 	add.w	r7, r7, r5, lsl #1
9002094a:	eba9 0903 	sub.w	r9, r9, r3
9002094e:	e790      	b.n	90020872 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
90020950:	4599      	cmp	r9, r3
90020952:	d2fa      	bcs.n	9002094a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
90020954:	eba5 0509 	sub.w	r5, r5, r9
90020958:	2d00      	cmp	r5, #0
9002095a:	dc1d      	bgt.n	90020998 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
9002095c:	f8dd 8008 	ldr.w	r8, [sp, #8]
90020960:	f04f 0b00 	mov.w	fp, #0
90020964:	f1b8 0f00 	cmp.w	r8, #0
90020968:	f340 81a0 	ble.w	90020cac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x584>
9002096c:	783b      	ldrb	r3, [r7, #0]
9002096e:	f107 0a01 	add.w	sl, r7, #1
90020972:	b2db      	uxtb	r3, r3
90020974:	119a      	asrs	r2, r3, #6
90020976:	f040 80d7 	bne.w	90020b28 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
9002097a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9002097e:	9a03      	ldr	r2, [sp, #12]
90020980:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90020984:	889e      	ldrh	r6, [r3, #4]
90020986:	9b01      	ldr	r3, [sp, #4]
90020988:	2bff      	cmp	r3, #255	@ 0xff
9002098a:	f040 81e8 	bne.w	90020d5e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x636>
9002098e:	8026      	strh	r6, [r4, #0]
90020990:	f108 38ff 	add.w	r8, r8, #4294967295
90020994:	3402      	adds	r4, #2
90020996:	e0be      	b.n	90020b16 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
90020998:	9b02      	ldr	r3, [sp, #8]
9002099a:	9a02      	ldr	r2, [sp, #8]
9002099c:	42ab      	cmp	r3, r5
9002099e:	bfa8      	it	ge
900209a0:	462b      	movge	r3, r5
900209a2:	eba2 0803 	sub.w	r8, r2, r3
900209a6:	9a07      	ldr	r2, [sp, #28]
900209a8:	1aed      	subs	r5, r5, r3
900209aa:	2a00      	cmp	r2, #0
900209ac:	d05a      	beq.n	90020a64 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
900209ae:	9a01      	ldr	r2, [sp, #4]
900209b0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900209b4:	2aff      	cmp	r2, #255	@ 0xff
900209b6:	d049      	beq.n	90020a4c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
900209b8:	f8bd e004 	ldrh.w	lr, [sp, #4]
900209bc:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
900209c0:	42a3      	cmp	r3, r4
900209c2:	f240 80a5 	bls.w	90020b10 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
900209c6:	46bc      	mov	ip, r7
900209c8:	8820      	ldrh	r0, [r4, #0]
900209ca:	f81c 2b02 	ldrb.w	r2, [ip], #2
900209ce:	ea4f 2a20 	mov.w	sl, r0, asr #8
900209d2:	7879      	ldrb	r1, [r7, #1]
900209d4:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
900209d8:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
900209dc:	fb1a fa09 	smulbb	sl, sl, r9
900209e0:	b212      	sxth	r2, r2
900209e2:	b291      	uxth	r1, r2
900209e4:	00d2      	lsls	r2, r2, #3
900209e6:	120f      	asrs	r7, r1, #8
900209e8:	10c9      	asrs	r1, r1, #3
900209ea:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
900209ee:	b2d2      	uxtb	r2, r2
900209f0:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
900209f4:	fb07 a70e 	mla	r7, r7, lr, sl
900209f8:	ea4f 0ae0 	mov.w	sl, r0, asr #3
900209fc:	00c0      	lsls	r0, r0, #3
900209fe:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
90020a02:	b2bf      	uxth	r7, r7
90020a04:	b2c0      	uxtb	r0, r0
90020a06:	fb1a fa09 	smulbb	sl, sl, r9
90020a0a:	fb10 f009 	smulbb	r0, r0, r9
90020a0e:	fb01 a10e 	mla	r1, r1, lr, sl
90020a12:	fb02 020e 	mla	r2, r2, lr, r0
90020a16:	1c78      	adds	r0, r7, #1
90020a18:	b289      	uxth	r1, r1
90020a1a:	b292      	uxth	r2, r2
90020a1c:	eb00 2717 	add.w	r7, r0, r7, lsr #8
90020a20:	f101 0a01 	add.w	sl, r1, #1
90020a24:	1c50      	adds	r0, r2, #1
90020a26:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
90020a2a:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
90020a2e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90020a32:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90020a36:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90020a3a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90020a3e:	4307      	orrs	r7, r0
90020a40:	ea47 070a 	orr.w	r7, r7, sl
90020a44:	f824 7b02 	strh.w	r7, [r4], #2
90020a48:	4667      	mov	r7, ip
90020a4a:	e7b9      	b.n	900209c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
90020a4c:	42a3      	cmp	r3, r4
90020a4e:	d95f      	bls.n	90020b10 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
90020a50:	463a      	mov	r2, r7
90020a52:	f812 1b02 	ldrb.w	r1, [r2], #2
90020a56:	7878      	ldrb	r0, [r7, #1]
90020a58:	4617      	mov	r7, r2
90020a5a:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
90020a5e:	f824 1b02 	strh.w	r1, [r4], #2
90020a62:	e7f3      	b.n	90020a4c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
90020a64:	9901      	ldr	r1, [sp, #4]
90020a66:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90020a6a:	b2b2      	uxth	r2, r6
90020a6c:	29ff      	cmp	r1, #255	@ 0xff
90020a6e:	d044      	beq.n	90020afa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
90020a70:	ea4f 2922 	mov.w	r9, r2, asr #8
90020a74:	f8bd 1004 	ldrh.w	r1, [sp, #4]
90020a78:	ea4f 0ee2 	mov.w	lr, r2, asr #3
90020a7c:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
90020a80:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
90020a84:	4608      	mov	r0, r1
90020a86:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
90020a8a:	fb09 f901 	mul.w	r9, r9, r1
90020a8e:	fb0e fe01 	mul.w	lr, lr, r1
90020a92:	00d1      	lsls	r1, r2, #3
90020a94:	b2c9      	uxtb	r1, r1
90020a96:	4341      	muls	r1, r0
90020a98:	429c      	cmp	r4, r3
90020a9a:	f4bf af61 	bcs.w	90020960 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
90020a9e:	8822      	ldrh	r2, [r4, #0]
90020aa0:	1210      	asrs	r0, r2, #8
90020aa2:	ea4f 0ce2 	mov.w	ip, r2, asr #3
90020aa6:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90020aaa:	00d2      	lsls	r2, r2, #3
90020aac:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
90020ab0:	fb00 900a 	mla	r0, r0, sl, r9
90020ab4:	b2d2      	uxtb	r2, r2
90020ab6:	fb0c ec0a 	mla	ip, ip, sl, lr
90020aba:	b280      	uxth	r0, r0
90020abc:	fb02 120a 	mla	r2, r2, sl, r1
90020ac0:	fa1f fc8c 	uxth.w	ip, ip
90020ac4:	b292      	uxth	r2, r2
90020ac6:	f100 0b01 	add.w	fp, r0, #1
90020aca:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
90020ace:	1c50      	adds	r0, r2, #1
90020ad0:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90020ad4:	f10c 0201 	add.w	r2, ip, #1
90020ad8:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
90020adc:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
90020ae0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90020ae4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90020ae8:	ea40 0b0b 	orr.w	fp, r0, fp
90020aec:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90020af0:	ea4b 0b0c 	orr.w	fp, fp, ip
90020af4:	f824 bb02 	strh.w	fp, [r4], #2
90020af8:	e7ce      	b.n	90020a98 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
90020afa:	429c      	cmp	r4, r3
90020afc:	f4bf af30 	bcs.w	90020960 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
90020b00:	f824 2b02 	strh.w	r2, [r4], #2
90020b04:	e7f9      	b.n	90020afa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
90020b06:	f8dd 8008 	ldr.w	r8, [sp, #8]
90020b0a:	4657      	mov	r7, sl
90020b0c:	464d      	mov	r5, r9
90020b0e:	e727      	b.n	90020960 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
90020b10:	2300      	movs	r3, #0
90020b12:	e716      	b.n	90020942 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
90020b14:	44bb      	add	fp, r7
90020b16:	4657      	mov	r7, sl
90020b18:	e724      	b.n	90020964 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
90020b1a:	bf00      	nop
90020b1c:	24021c0c 	.word	0x24021c0c
90020b20:	24021c06 	.word	0x24021c06
90020b24:	24005b80 	.word	0x24005b80
90020b28:	2a01      	cmp	r2, #1
90020b2a:	d12a      	bne.n	90020b82 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
90020b2c:	f3c6 0104 	ubfx	r1, r6, #0, #5
90020b30:	f003 0203 	and.w	r2, r3, #3
90020b34:	f3c3 0081 	ubfx	r0, r3, #2, #2
90020b38:	f3c3 1301 	ubfx	r3, r3, #4, #2
90020b3c:	3902      	subs	r1, #2
90020b3e:	3802      	subs	r0, #2
90020b40:	3b02      	subs	r3, #2
90020b42:	4411      	add	r1, r2
90020b44:	f001 011f 	and.w	r1, r1, #31
90020b48:	f361 0604 	bfi	r6, r1, #0, #5
90020b4c:	eb00 1056 	add.w	r0, r0, r6, lsr #5
90020b50:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
90020b54:	f360 164a 	bfi	r6, r0, #5, #6
90020b58:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90020b5c:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
90020b60:	f002 031f 	and.w	r3, r2, #31
90020b64:	2203      	movs	r2, #3
90020b66:	f363 26cf 	bfi	r6, r3, #11, #5
90020b6a:	fb12 0303 	smlabb	r3, r2, r3, r0
90020b6e:	2207      	movs	r2, #7
90020b70:	fb12 3301 	smlabb	r3, r2, r1, r3
90020b74:	9a03      	ldr	r2, [sp, #12]
90020b76:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
90020b7a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90020b7e:	809e      	strh	r6, [r3, #4]
90020b80:	e701      	b.n	90020986 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
90020b82:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
90020b86:	4647      	mov	r7, r8
90020b88:	45a8      	cmp	r8, r5
90020b8a:	bfa8      	it	ge
90020b8c:	462f      	movge	r7, r5
90020b8e:	2a02      	cmp	r2, #2
90020b90:	d154      	bne.n	90020c3c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
90020b92:	9b01      	ldr	r3, [sp, #4]
90020b94:	2bff      	cmp	r3, #255	@ 0xff
90020b96:	d01a      	beq.n	90020bce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
90020b98:	eb0b 0307 	add.w	r3, fp, r7
90020b9c:	2b40      	cmp	r3, #64	@ 0x40
90020b9e:	dd16      	ble.n	90020bce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
90020ba0:	ea4f 094b 	mov.w	r9, fp, lsl #1
90020ba4:	9800      	ldr	r0, [sp, #0]
90020ba6:	4649      	mov	r1, r9
90020ba8:	f7e1 feac 	bl	90002904 <_ZN8touchgfx5paint9flushLineEPmi>
90020bac:	465a      	mov	r2, fp
90020bae:	9b01      	ldr	r3, [sp, #4]
90020bb0:	4620      	mov	r0, r4
90020bb2:	9900      	ldr	r1, [sp, #0]
90020bb4:	444c      	add	r4, r9
90020bb6:	f7e1 feeb 	bl	90002990 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
90020bba:	9b00      	ldr	r3, [sp, #0]
90020bbc:	f04f 0b00 	mov.w	fp, #0
90020bc0:	461a      	mov	r2, r3
90020bc2:	4b6a      	ldr	r3, [pc, #424]	@ (90020d6c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
90020bc4:	429a      	cmp	r2, r3
90020bc6:	bf0c      	ite	eq
90020bc8:	4b69      	ldreq	r3, [pc, #420]	@ (90020d70 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
90020bca:	4b68      	ldrne	r3, [pc, #416]	@ (90020d6c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
90020bcc:	9300      	str	r3, [sp, #0]
90020bce:	4652      	mov	r2, sl
90020bd0:	2100      	movs	r1, #0
90020bd2:	42a9      	cmp	r1, r5
90020bd4:	da2c      	bge.n	90020c30 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
90020bd6:	4694      	mov	ip, r2
90020bd8:	f04f 0903 	mov.w	r9, #3
90020bdc:	42b9      	cmp	r1, r7
90020bde:	f81c 3b02 	ldrb.w	r3, [ip], #2
90020be2:	7852      	ldrb	r2, [r2, #1]
90020be4:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
90020be8:	f3c3 1045 	ubfx	r0, r3, #5, #6
90020bec:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
90020bf0:	f003 021f 	and.w	r2, r3, #31
90020bf4:	461e      	mov	r6, r3
90020bf6:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90020bfa:	fb19 000e 	smlabb	r0, r9, lr, r0
90020bfe:	f04f 0e07 	mov.w	lr, #7
90020c02:	fb1e 0002 	smlabb	r0, lr, r2, r0
90020c06:	9a03      	ldr	r2, [sp, #12]
90020c08:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
90020c0c:	eb02 0040 	add.w	r0, r2, r0, lsl #1
90020c10:	8083      	strh	r3, [r0, #4]
90020c12:	da0a      	bge.n	90020c2a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
90020c14:	9a01      	ldr	r2, [sp, #4]
90020c16:	2aff      	cmp	r2, #255	@ 0xff
90020c18:	bf13      	iteet	ne
90020c1a:	9a00      	ldrne	r2, [sp, #0]
90020c1c:	8023      	strheq	r3, [r4, #0]
90020c1e:	3402      	addeq	r4, #2
90020c20:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
90020c24:	bf18      	it	ne
90020c26:	f10b 0b01 	addne.w	fp, fp, #1
90020c2a:	3101      	adds	r1, #1
90020c2c:	4662      	mov	r2, ip
90020c2e:	e7d0      	b.n	90020bd2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
90020c30:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
90020c34:	eba8 0807 	sub.w	r8, r8, r7
90020c38:	1bed      	subs	r5, r5, r7
90020c3a:	e76c      	b.n	90020b16 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
90020c3c:	9b01      	ldr	r3, [sp, #4]
90020c3e:	eba8 0807 	sub.w	r8, r8, r7
90020c42:	1bed      	subs	r5, r5, r7
90020c44:	fa1f f986 	uxth.w	r9, r6
90020c48:	2bff      	cmp	r3, #255	@ 0xff
90020c4a:	d027      	beq.n	90020c9c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x574>
90020c4c:	eb0b 0307 	add.w	r3, fp, r7
90020c50:	2b40      	cmp	r3, #64	@ 0x40
90020c52:	dd18      	ble.n	90020c86 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x55e>
90020c54:	ea4f 034b 	mov.w	r3, fp, lsl #1
90020c58:	9800      	ldr	r0, [sp, #0]
90020c5a:	4619      	mov	r1, r3
90020c5c:	930c      	str	r3, [sp, #48]	@ 0x30
90020c5e:	f7e1 fe51 	bl	90002904 <_ZN8touchgfx5paint9flushLineEPmi>
90020c62:	465a      	mov	r2, fp
90020c64:	9b01      	ldr	r3, [sp, #4]
90020c66:	4620      	mov	r0, r4
90020c68:	9900      	ldr	r1, [sp, #0]
90020c6a:	f04f 0b00 	mov.w	fp, #0
90020c6e:	f7e1 fe8f 	bl	90002990 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
90020c72:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90020c74:	441c      	add	r4, r3
90020c76:	9b00      	ldr	r3, [sp, #0]
90020c78:	461a      	mov	r2, r3
90020c7a:	4b3c      	ldr	r3, [pc, #240]	@ (90020d6c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
90020c7c:	429a      	cmp	r2, r3
90020c7e:	bf0c      	ite	eq
90020c80:	4b3b      	ldreq	r3, [pc, #236]	@ (90020d70 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
90020c82:	4b3a      	ldrne	r3, [pc, #232]	@ (90020d6c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
90020c84:	9300      	str	r3, [sp, #0]
90020c86:	9b00      	ldr	r3, [sp, #0]
90020c88:	eb03 024b 	add.w	r2, r3, fp, lsl #1
90020c8c:	463b      	mov	r3, r7
90020c8e:	2b00      	cmp	r3, #0
90020c90:	f43f af40 	beq.w	90020b14 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
90020c94:	f822 9b02 	strh.w	r9, [r2], #2
90020c98:	3b01      	subs	r3, #1
90020c9a:	e7f8      	b.n	90020c8e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x566>
90020c9c:	eb04 0747 	add.w	r7, r4, r7, lsl #1
90020ca0:	42a7      	cmp	r7, r4
90020ca2:	f67f af38 	bls.w	90020b16 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
90020ca6:	f824 9b02 	strh.w	r9, [r4], #2
90020caa:	e7f9      	b.n	90020ca0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x578>
90020cac:	f1bb 0f00 	cmp.w	fp, #0
90020cb0:	d00c      	beq.n	90020ccc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a4>
90020cb2:	ea4f 084b 	mov.w	r8, fp, lsl #1
90020cb6:	9800      	ldr	r0, [sp, #0]
90020cb8:	4641      	mov	r1, r8
90020cba:	f7e1 fe23 	bl	90002904 <_ZN8touchgfx5paint9flushLineEPmi>
90020cbe:	4620      	mov	r0, r4
90020cc0:	4444      	add	r4, r8
90020cc2:	9b01      	ldr	r3, [sp, #4]
90020cc4:	465a      	mov	r2, fp
90020cc6:	9900      	ldr	r1, [sp, #0]
90020cc8:	f7e1 fe62 	bl	90002990 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
90020ccc:	4b29      	ldr	r3, [pc, #164]	@ (90020d74 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
90020cce:	9a02      	ldr	r2, [sp, #8]
90020cd0:	881b      	ldrh	r3, [r3, #0]
90020cd2:	1a9b      	subs	r3, r3, r2
90020cd4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90020cd8:	9b06      	ldr	r3, [sp, #24]
90020cda:	3301      	adds	r3, #1
90020cdc:	9306      	str	r3, [sp, #24]
90020cde:	9a06      	ldr	r2, [sp, #24]
90020ce0:	9b04      	ldr	r3, [sp, #16]
90020ce2:	4293      	cmp	r3, r2
90020ce4:	d120      	bne.n	90020d28 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x600>
90020ce6:	9b05      	ldr	r3, [sp, #20]
90020ce8:	2100      	movs	r1, #0
90020cea:	9a05      	ldr	r2, [sp, #20]
90020cec:	f04f 0600 	mov.w	r6, #0
90020cf0:	f103 0801 	add.w	r8, r3, #1
90020cf4:	9b08      	ldr	r3, [sp, #32]
90020cf6:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
90020cfa:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
90020cfe:	2280      	movs	r2, #128	@ 0x80
90020d00:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
90020d04:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90020d06:	ba3f      	rev	r7, r7
90020d08:	eba9 0905 	sub.w	r9, r9, r5
90020d0c:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90020d0e:	441f      	add	r7, r3
90020d10:	f00c fe00 	bl	9002d914 <memset>
90020d14:	fa1f f989 	uxth.w	r9, r9
90020d18:	2300      	movs	r3, #0
90020d1a:	f8cd 8014 	str.w	r8, [sp, #20]
90020d1e:	9306      	str	r3, [sp, #24]
90020d20:	f7e1 fde6 	bl	900028f0 <_ZN8touchgfx5paint8tearDownEv>
90020d24:	46ba      	mov	sl, r7
90020d26:	e58b      	b.n	90020840 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
90020d28:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
90020d2c:	9b02      	ldr	r3, [sp, #8]
90020d2e:	eba9 0903 	sub.w	r9, r9, r3
90020d32:	eba9 0505 	sub.w	r5, r9, r5
90020d36:	fa1f f985 	uxth.w	r9, r5
90020d3a:	e7f1      	b.n	90020d20 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5f8>
90020d3c:	4b0e      	ldr	r3, [pc, #56]	@ (90020d78 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
90020d3e:	6818      	ldr	r0, [r3, #0]
90020d40:	6803      	ldr	r3, [r0, #0]
90020d42:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90020d44:	4798      	blx	r3
90020d46:	b013      	add	sp, #76	@ 0x4c
90020d48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020d4c:	9b02      	ldr	r3, [sp, #8]
90020d4e:	9a02      	ldr	r2, [sp, #8]
90020d50:	42ab      	cmp	r3, r5
90020d52:	bfa8      	it	ge
90020d54:	462b      	movge	r3, r5
90020d56:	eba2 0803 	sub.w	r8, r2, r3
90020d5a:	1aed      	subs	r5, r5, r3
90020d5c:	e627      	b.n	900209ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
90020d5e:	f108 38ff 	add.w	r8, r8, #4294967295
90020d62:	fa1f f986 	uxth.w	r9, r6
90020d66:	2500      	movs	r5, #0
90020d68:	2701      	movs	r7, #1
90020d6a:	e76f      	b.n	90020c4c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x524>
90020d6c:	24005b80 	.word	0x24005b80
90020d70:	24005c80 	.word	0x24005c80
90020d74:	24021c06 	.word	0x24021c06
90020d78:	24021c0c 	.word	0x24021c0c

90020d7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
90020d7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020d80:	b08f      	sub	sp, #60	@ 0x3c
90020d82:	461c      	mov	r4, r3
90020d84:	460f      	mov	r7, r1
90020d86:	9203      	str	r2, [sp, #12]
90020d88:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
90020d8c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90020d8e:	9202      	str	r2, [sp, #8]
90020d90:	2a00      	cmp	r2, #0
90020d92:	f000 8128 	beq.w	90020fe6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
90020d96:	6820      	ldr	r0, [r4, #0]
90020d98:	aa0a      	add	r2, sp, #40	@ 0x28
90020d9a:	6861      	ldr	r1, [r4, #4]
90020d9c:	c203      	stmia	r2!, {r0, r1}
90020d9e:	6818      	ldr	r0, [r3, #0]
90020da0:	aa0c      	add	r2, sp, #48	@ 0x30
90020da2:	6859      	ldr	r1, [r3, #4]
90020da4:	c203      	stmia	r2!, {r0, r1}
90020da6:	a80a      	add	r0, sp, #40	@ 0x28
90020da8:	f7f7 ffe4 	bl	90018d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020dac:	4621      	mov	r1, r4
90020dae:	a80c      	add	r0, sp, #48	@ 0x30
90020db0:	f7f8 f824 	bl	90018dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020db4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
90020db8:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
90020dbc:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
90020dc0:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
90020dc4:	bfdb      	ittet	le
90020dc6:	b2b3      	uxthle	r3, r6
90020dc8:	f44f 6280 	movle.w	r2, #1024	@ 0x400
90020dcc:	2301      	movgt	r3, #1
90020dce:	fb92 f3f3 	sdivle	r3, r2, r3
90020dd2:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
90020dd6:	441d      	add	r5, r3
90020dd8:	fb92 f1f3 	sdiv	r1, r2, r3
90020ddc:	fa1f fc81 	uxth.w	ip, r1
90020de0:	3d01      	subs	r5, #1
90020de2:	fb0c 2413 	mls	r4, ip, r3, r2
90020de6:	4661      	mov	r1, ip
90020de8:	fb14 f406 	smulbb	r4, r4, r6
90020dec:	4404      	add	r4, r0
90020dee:	fb95 f5f3 	sdiv	r5, r5, r3
90020df2:	b2a4      	uxth	r4, r4
90020df4:	b121      	cbz	r1, 90020e00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
90020df6:	9b03      	ldr	r3, [sp, #12]
90020df8:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
90020dfc:	ba1b      	rev	r3, r3
90020dfe:	441f      	add	r7, r3
90020e00:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90020e04:	b2ad      	uxth	r5, r5
90020e06:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
90020e0a:	4418      	add	r0, r3
90020e0c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
90020e10:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
90020e14:	00ad      	lsls	r5, r5, #2
90020e16:	441a      	add	r2, r3
90020e18:	4b74      	ldr	r3, [pc, #464]	@ (90020fec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
90020e1a:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
90020e1e:	6818      	ldr	r0, [r3, #0]
90020e20:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
90020e24:	6803      	ldr	r3, [r0, #0]
90020e26:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90020e28:	4798      	blx	r3
90020e2a:	4a71      	ldr	r2, [pc, #452]	@ (90020ff0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
90020e2c:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
90020e30:	2c00      	cmp	r4, #0
90020e32:	8813      	ldrh	r3, [r2, #0]
90020e34:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
90020e38:	bf0c      	ite	eq
90020e3a:	46c8      	moveq	r8, r9
90020e3c:	f04f 0800 	movne.w	r8, #0
90020e40:	9209      	str	r2, [sp, #36]	@ 0x24
90020e42:	fb03 c101 	mla	r1, r3, r1, ip
90020e46:	4373      	muls	r3, r6
90020e48:	fa1f f888 	uxth.w	r8, r8
90020e4c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
90020e50:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90020e54:	9304      	str	r3, [sp, #16]
90020e56:	1d2b      	adds	r3, r5, #4
90020e58:	9305      	str	r3, [sp, #20]
90020e5a:	2300      	movs	r3, #0
90020e5c:	9301      	str	r3, [sp, #4]
90020e5e:	9a04      	ldr	r2, [sp, #16]
90020e60:	4282      	cmp	r2, r0
90020e62:	f240 80bb 	bls.w	90020fdc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
90020e66:	b95b      	cbnz	r3, 90020e80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
90020e68:	783a      	ldrb	r2, [r7, #0]
90020e6a:	0993      	lsrs	r3, r2, #6
90020e6c:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
90020e70:	9201      	str	r2, [sp, #4]
90020e72:	1e5a      	subs	r2, r3, #1
90020e74:	2a02      	cmp	r2, #2
90020e76:	bf8d      	iteet	hi
90020e78:	787b      	ldrbhi	r3, [r7, #1]
90020e7a:	3701      	addls	r7, #1
90020e7c:	b29b      	uxthls	r3, r3
90020e7e:	3702      	addhi	r7, #2
90020e80:	b184      	cbz	r4, 90020ea4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
90020e82:	429c      	cmp	r4, r3
90020e84:	bf91      	iteee	ls
90020e86:	1b1c      	subls	r4, r3, r4
90020e88:	1ae4      	subhi	r4, r4, r3
90020e8a:	46c4      	movhi	ip, r8
90020e8c:	f04f 0a00 	movhi.w	sl, #0
90020e90:	bf9b      	ittet	ls
90020e92:	fa1f fa84 	uxthls.w	sl, r4
90020e96:	2400      	movls	r4, #0
90020e98:	b2a4      	uxthhi	r4, r4
90020e9a:	fa1f fc89 	uxthls.w	ip, r9
90020e9e:	4653      	mov	r3, sl
90020ea0:	46e0      	mov	r8, ip
90020ea2:	e7dc      	b.n	90020e5e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
90020ea4:	2204      	movs	r2, #4
90020ea6:	9905      	ldr	r1, [sp, #20]
90020ea8:	4543      	cmp	r3, r8
90020eaa:	4615      	mov	r5, r2
90020eac:	9a01      	ldr	r2, [sp, #4]
90020eae:	bf24      	itt	cs
90020eb0:	eba3 0a08 	subcs.w	sl, r3, r8
90020eb4:	46c6      	movcs	lr, r8
90020eb6:	fb15 1202 	smlabb	r2, r5, r2, r1
90020eba:	9903      	ldr	r1, [sp, #12]
90020ebc:	bf3c      	itt	cc
90020ebe:	eba8 0c03 	subcc.w	ip, r8, r3
90020ec2:	469e      	movcc	lr, r3
90020ec4:	588a      	ldr	r2, [r1, r2]
90020ec6:	bf26      	itte	cs
90020ec8:	fa1f fa8a 	uxthcs.w	sl, sl
90020ecc:	46a4      	movcs	ip, r4
90020ece:	fa1f fc8c 	uxthcc.w	ip, ip
90020ed2:	ea4f 6112 	mov.w	r1, r2, lsr #24
90020ed6:	bf38      	it	cc
90020ed8:	46a2      	movcc	sl, r4
90020eda:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
90020ede:	2900      	cmp	r1, #0
90020ee0:	d066      	beq.n	90020fb0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
90020ee2:	29ff      	cmp	r1, #255	@ 0xff
90020ee4:	ea4f 2612 	mov.w	r6, r2, lsr #8
90020ee8:	d114      	bne.n	90020f14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
90020eea:	9d02      	ldr	r5, [sp, #8]
90020eec:	2dff      	cmp	r5, #255	@ 0xff
90020eee:	d111      	bne.n	90020f14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
90020ef0:	0951      	lsrs	r1, r2, #5
90020ef2:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
90020ef6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90020efa:	4486      	add	lr, r0
90020efc:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90020f00:	f026 0607 	bic.w	r6, r6, #7
90020f04:	430e      	orrs	r6, r1
90020f06:	4316      	orrs	r6, r2
90020f08:	b2b6      	uxth	r6, r6
90020f0a:	4586      	cmp	lr, r0
90020f0c:	d051      	beq.n	90020fb2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
90020f0e:	f820 6b02 	strh.w	r6, [r0], #2
90020f12:	e7fa      	b.n	90020f0a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
90020f14:	9d02      	ldr	r5, [sp, #8]
90020f16:	b2f6      	uxtb	r6, r6
90020f18:	4486      	add	lr, r0
90020f1a:	4369      	muls	r1, r5
90020f1c:	1c4d      	adds	r5, r1, #1
90020f1e:	eb05 2521 	add.w	r5, r5, r1, asr #8
90020f22:	f3c2 4107 	ubfx	r1, r2, #16, #8
90020f26:	b2d2      	uxtb	r2, r2
90020f28:	122d      	asrs	r5, r5, #8
90020f2a:	ea6f 0b05 	mvn.w	fp, r5
90020f2e:	b2ad      	uxth	r5, r5
90020f30:	fb11 f105 	smulbb	r1, r1, r5
90020f34:	fa5f fb8b 	uxtb.w	fp, fp
90020f38:	fb16 f605 	smulbb	r6, r6, r5
90020f3c:	fb12 f205 	smulbb	r2, r2, r5
90020f40:	b289      	uxth	r1, r1
90020f42:	b2b6      	uxth	r6, r6
90020f44:	b292      	uxth	r2, r2
90020f46:	9106      	str	r1, [sp, #24]
90020f48:	9607      	str	r6, [sp, #28]
90020f4a:	9208      	str	r2, [sp, #32]
90020f4c:	4586      	cmp	lr, r0
90020f4e:	d030      	beq.n	90020fb2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
90020f50:	8802      	ldrh	r2, [r0, #0]
90020f52:	9906      	ldr	r1, [sp, #24]
90020f54:	1216      	asrs	r6, r2, #8
90020f56:	10d5      	asrs	r5, r2, #3
90020f58:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
90020f5c:	00d2      	lsls	r2, r2, #3
90020f5e:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90020f62:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
90020f66:	b2d2      	uxtb	r2, r2
90020f68:	fb06 160b 	mla	r6, r6, fp, r1
90020f6c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
90020f70:	9907      	ldr	r1, [sp, #28]
90020f72:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90020f76:	b2b6      	uxth	r6, r6
90020f78:	fb05 150b 	mla	r5, r5, fp, r1
90020f7c:	9908      	ldr	r1, [sp, #32]
90020f7e:	fb02 120b 	mla	r2, r2, fp, r1
90020f82:	1c71      	adds	r1, r6, #1
90020f84:	b2ad      	uxth	r5, r5
90020f86:	b292      	uxth	r2, r2
90020f88:	eb01 2616 	add.w	r6, r1, r6, lsr #8
90020f8c:	1c51      	adds	r1, r2, #1
90020f8e:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
90020f92:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90020f96:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90020f9a:	4316      	orrs	r6, r2
90020f9c:	1c6a      	adds	r2, r5, #1
90020f9e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
90020fa2:	096d      	lsrs	r5, r5, #5
90020fa4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90020fa8:	432e      	orrs	r6, r5
90020faa:	f820 6b02 	strh.w	r6, [r0], #2
90020fae:	e7cd      	b.n	90020f4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
90020fb0:	4470      	add	r0, lr
90020fb2:	4543      	cmp	r3, r8
90020fb4:	f4ff af73 	bcc.w	90020e9e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
90020fb8:	fa1f fc89 	uxth.w	ip, r9
90020fbc:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
90020fc0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90020fc2:	eba4 040c 	sub.w	r4, r4, ip
90020fc6:	881b      	ldrh	r3, [r3, #0]
90020fc8:	b2a4      	uxth	r4, r4
90020fca:	eba3 0309 	sub.w	r3, r3, r9
90020fce:	2c00      	cmp	r4, #0
90020fd0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020fd4:	bf18      	it	ne
90020fd6:	f04f 0c00 	movne.w	ip, #0
90020fda:	e760      	b.n	90020e9e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
90020fdc:	4b03      	ldr	r3, [pc, #12]	@ (90020fec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
90020fde:	6818      	ldr	r0, [r3, #0]
90020fe0:	6803      	ldr	r3, [r0, #0]
90020fe2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90020fe4:	4798      	blx	r3
90020fe6:	b00f      	add	sp, #60	@ 0x3c
90020fe8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020fec:	24021c0c 	.word	0x24021c0c
90020ff0:	24021c06 	.word	0x24021c06

90020ff4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
90020ff4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020ff8:	b093      	sub	sp, #76	@ 0x4c
90020ffa:	461c      	mov	r4, r3
90020ffc:	9205      	str	r2, [sp, #20]
90020ffe:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
90021002:	9101      	str	r1, [sp, #4]
90021004:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90021006:	9202      	str	r2, [sp, #8]
90021008:	2a00      	cmp	r2, #0
9002100a:	f000 812e 	beq.w	9002126a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
9002100e:	6820      	ldr	r0, [r4, #0]
90021010:	aa0e      	add	r2, sp, #56	@ 0x38
90021012:	6861      	ldr	r1, [r4, #4]
90021014:	c203      	stmia	r2!, {r0, r1}
90021016:	6818      	ldr	r0, [r3, #0]
90021018:	aa10      	add	r2, sp, #64	@ 0x40
9002101a:	6859      	ldr	r1, [r3, #4]
9002101c:	c203      	stmia	r2!, {r0, r1}
9002101e:	a80e      	add	r0, sp, #56	@ 0x38
90021020:	f7f7 fea8 	bl	90018d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90021024:	4621      	mov	r1, r4
90021026:	a810      	add	r0, sp, #64	@ 0x40
90021028:	f7f7 fee8 	bl	90018dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002102c:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
90021030:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
90021034:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
90021038:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
9002103c:	bfdb      	ittet	le
9002103e:	b2b3      	uxthle	r3, r6
90021040:	f44f 6280 	movle.w	r2, #1024	@ 0x400
90021044:	2301      	movgt	r3, #1
90021046:	fb92 f3f3 	sdivle	r3, r2, r3
9002104a:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9002104e:	441d      	add	r5, r3
90021050:	fb92 f1f3 	sdiv	r1, r2, r3
90021054:	fa1f fc81 	uxth.w	ip, r1
90021058:	3d01      	subs	r5, #1
9002105a:	fb0c 2413 	mls	r4, ip, r3, r2
9002105e:	4661      	mov	r1, ip
90021060:	fb14 f406 	smulbb	r4, r4, r6
90021064:	4404      	add	r4, r0
90021066:	fb95 f5f3 	sdiv	r5, r5, r3
9002106a:	b2a4      	uxth	r4, r4
9002106c:	b131      	cbz	r1, 9002107c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
9002106e:	9b05      	ldr	r3, [sp, #20]
90021070:	9901      	ldr	r1, [sp, #4]
90021072:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
90021076:	ba1b      	rev	r3, r3
90021078:	4419      	add	r1, r3
9002107a:	9101      	str	r1, [sp, #4]
9002107c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90021080:	b2ad      	uxth	r5, r5
90021082:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
90021086:	4418      	add	r0, r3
90021088:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
9002108c:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
90021090:	00ad      	lsls	r5, r5, #2
90021092:	441a      	add	r2, r3
90021094:	4b76      	ldr	r3, [pc, #472]	@ (90021270 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
90021096:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
9002109a:	6818      	ldr	r0, [r3, #0]
9002109c:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
900210a0:	6803      	ldr	r3, [r0, #0]
900210a2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900210a4:	4798      	blx	r3
900210a6:	4973      	ldr	r1, [pc, #460]	@ (90021274 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
900210a8:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
900210ac:	2c00      	cmp	r4, #0
900210ae:	880b      	ldrh	r3, [r1, #0]
900210b0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
900210b4:	910d      	str	r1, [sp, #52]	@ 0x34
900210b6:	fb03 c202 	mla	r2, r3, r2, ip
900210ba:	bf08      	it	eq
900210bc:	46dc      	moveq	ip, fp
900210be:	fb03 f306 	mul.w	r3, r3, r6
900210c2:	bf18      	it	ne
900210c4:	f04f 0c00 	movne.w	ip, #0
900210c8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
900210cc:	f8bd 1008 	ldrh.w	r1, [sp, #8]
900210d0:	fa1f fc8c 	uxth.w	ip, ip
900210d4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
900210d8:	9106      	str	r1, [sp, #24]
900210da:	9308      	str	r3, [sp, #32]
900210dc:	1d2b      	adds	r3, r5, #4
900210de:	9309      	str	r3, [sp, #36]	@ 0x24
900210e0:	9b02      	ldr	r3, [sp, #8]
900210e2:	43da      	mvns	r2, r3
900210e4:	2300      	movs	r3, #0
900210e6:	b2d2      	uxtb	r2, r2
900210e8:	9303      	str	r3, [sp, #12]
900210ea:	9207      	str	r2, [sp, #28]
900210ec:	9a08      	ldr	r2, [sp, #32]
900210ee:	4282      	cmp	r2, r0
900210f0:	f240 80b6 	bls.w	90021260 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
900210f4:	b963      	cbnz	r3, 90021110 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
900210f6:	9b01      	ldr	r3, [sp, #4]
900210f8:	781a      	ldrb	r2, [r3, #0]
900210fa:	0993      	lsrs	r3, r2, #6
900210fc:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
90021100:	9203      	str	r2, [sp, #12]
90021102:	1e5a      	subs	r2, r3, #1
90021104:	2a02      	cmp	r2, #2
90021106:	d815      	bhi.n	90021134 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
90021108:	9a01      	ldr	r2, [sp, #4]
9002110a:	b29b      	uxth	r3, r3
9002110c:	3201      	adds	r2, #1
9002110e:	9201      	str	r2, [sp, #4]
90021110:	b1b4      	cbz	r4, 90021140 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
90021112:	429c      	cmp	r4, r3
90021114:	bf91      	iteee	ls
90021116:	1b1c      	subls	r4, r3, r4
90021118:	1ae4      	subhi	r4, r4, r3
9002111a:	4666      	movhi	r6, ip
9002111c:	f04f 0800 	movhi.w	r8, #0
90021120:	bf9b      	ittet	ls
90021122:	fa1f f884 	uxthls.w	r8, r4
90021126:	2400      	movls	r4, #0
90021128:	b2a4      	uxthhi	r4, r4
9002112a:	fa1f f68b 	uxthls.w	r6, fp
9002112e:	4643      	mov	r3, r8
90021130:	46b4      	mov	ip, r6
90021132:	e7db      	b.n	900210ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
90021134:	9a01      	ldr	r2, [sp, #4]
90021136:	9b01      	ldr	r3, [sp, #4]
90021138:	3202      	adds	r2, #2
9002113a:	785b      	ldrb	r3, [r3, #1]
9002113c:	9201      	str	r2, [sp, #4]
9002113e:	e7e7      	b.n	90021110 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
90021140:	2203      	movs	r2, #3
90021142:	9909      	ldr	r1, [sp, #36]	@ 0x24
90021144:	4563      	cmp	r3, ip
90021146:	4615      	mov	r5, r2
90021148:	9a03      	ldr	r2, [sp, #12]
9002114a:	bf2c      	ite	cs
9002114c:	eba3 080c 	subcs.w	r8, r3, ip
90021150:	ebac 0603 	subcc.w	r6, ip, r3
90021154:	fb15 1202 	smlabb	r2, r5, r2, r1
90021158:	9905      	ldr	r1, [sp, #20]
9002115a:	bf24      	itt	cs
9002115c:	fa1f f888 	uxthcs.w	r8, r8
90021160:	46e1      	movcs	r9, ip
90021162:	eb01 0502 	add.w	r5, r1, r2
90021166:	9902      	ldr	r1, [sp, #8]
90021168:	bf2f      	iteee	cs
9002116a:	4626      	movcs	r6, r4
9002116c:	b2b6      	uxthcc	r6, r6
9002116e:	4699      	movcc	r9, r3
90021170:	46a0      	movcc	r8, r4
90021172:	29ff      	cmp	r1, #255	@ 0xff
90021174:	d04a      	beq.n	9002120c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
90021176:	9f06      	ldr	r7, [sp, #24]
90021178:	46ca      	mov	sl, r9
9002117a:	78a9      	ldrb	r1, [r5, #2]
9002117c:	9004      	str	r0, [sp, #16]
9002117e:	4379      	muls	r1, r7
90021180:	910a      	str	r1, [sp, #40]	@ 0x28
90021182:	7869      	ldrb	r1, [r5, #1]
90021184:	4379      	muls	r1, r7
90021186:	910b      	str	r1, [sp, #44]	@ 0x2c
90021188:	9905      	ldr	r1, [sp, #20]
9002118a:	5c8a      	ldrb	r2, [r1, r2]
9002118c:	437a      	muls	r2, r7
9002118e:	920c      	str	r2, [sp, #48]	@ 0x30
90021190:	f1ba 0f00 	cmp.w	sl, #0
90021194:	d03d      	beq.n	90021212 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
90021196:	9a04      	ldr	r2, [sp, #16]
90021198:	f10a 3aff 	add.w	sl, sl, #4294967295
9002119c:	9f07      	ldr	r7, [sp, #28]
9002119e:	8812      	ldrh	r2, [r2, #0]
900211a0:	fa1f fa8a 	uxth.w	sl, sl
900211a4:	46be      	mov	lr, r7
900211a6:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
900211a8:	1215      	asrs	r5, r2, #8
900211aa:	10d1      	asrs	r1, r2, #3
900211ac:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900211b0:	00d2      	lsls	r2, r2, #3
900211b2:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
900211b6:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
900211ba:	b2d2      	uxtb	r2, r2
900211bc:	fb05 750e 	mla	r5, r5, lr, r7
900211c0:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
900211c4:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
900211c6:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
900211ca:	b2ad      	uxth	r5, r5
900211cc:	fb01 710e 	mla	r1, r1, lr, r7
900211d0:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
900211d2:	fb02 720e 	mla	r2, r2, lr, r7
900211d6:	f105 0e01 	add.w	lr, r5, #1
900211da:	b289      	uxth	r1, r1
900211dc:	b292      	uxth	r2, r2
900211de:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
900211e2:	f102 0e01 	add.w	lr, r2, #1
900211e6:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900211ea:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
900211ee:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900211f2:	4315      	orrs	r5, r2
900211f4:	1c4a      	adds	r2, r1, #1
900211f6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900211fa:	9a04      	ldr	r2, [sp, #16]
900211fc:	0949      	lsrs	r1, r1, #5
900211fe:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90021202:	430d      	orrs	r5, r1
90021204:	f822 5b02 	strh.w	r5, [r2], #2
90021208:	9204      	str	r2, [sp, #16]
9002120a:	e7c1      	b.n	90021190 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
9002120c:	4649      	mov	r1, r9
9002120e:	4686      	mov	lr, r0
90021210:	b999      	cbnz	r1, 9002123a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
90021212:	4563      	cmp	r3, ip
90021214:	eb00 0049 	add.w	r0, r0, r9, lsl #1
90021218:	d389      	bcc.n	9002112e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9002121a:	fa1f f68b 	uxth.w	r6, fp
9002121e:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
90021222:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90021224:	1ba4      	subs	r4, r4, r6
90021226:	881b      	ldrh	r3, [r3, #0]
90021228:	b2a4      	uxth	r4, r4
9002122a:	eba3 030b 	sub.w	r3, r3, fp
9002122e:	2c00      	cmp	r4, #0
90021230:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90021234:	bf18      	it	ne
90021236:	2600      	movne	r6, #0
90021238:	e779      	b.n	9002112e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9002123a:	78aa      	ldrb	r2, [r5, #2]
9002123c:	3901      	subs	r1, #1
9002123e:	4f0e      	ldr	r7, [pc, #56]	@ (90021278 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
90021240:	b289      	uxth	r1, r1
90021242:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
90021246:	786a      	ldrb	r2, [r5, #1]
90021248:	00d2      	lsls	r2, r2, #3
9002124a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002124e:	ea4a 0202 	orr.w	r2, sl, r2
90021252:	f895 a000 	ldrb.w	sl, [r5]
90021256:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
9002125a:	f82e 2b02 	strh.w	r2, [lr], #2
9002125e:	e7d7      	b.n	90021210 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
90021260:	4b03      	ldr	r3, [pc, #12]	@ (90021270 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
90021262:	6818      	ldr	r0, [r3, #0]
90021264:	6803      	ldr	r3, [r0, #0]
90021266:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90021268:	4798      	blx	r3
9002126a:	b013      	add	sp, #76	@ 0x4c
9002126c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021270:	24021c0c 	.word	0x24021c0c
90021274:	24021c06 	.word	0x24021c06
90021278:	fffff800 	.word	0xfffff800

9002127c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9002127c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021280:	b09d      	sub	sp, #116	@ 0x74
90021282:	461c      	mov	r4, r3
90021284:	4683      	mov	fp, r0
90021286:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90021288:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
9002128c:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
90021290:	920e      	str	r2, [sp, #56]	@ 0x38
90021292:	2a00      	cmp	r2, #0
90021294:	f000 81e4 	beq.w	90021660 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
90021298:	6820      	ldr	r0, [r4, #0]
9002129a:	aa18      	add	r2, sp, #96	@ 0x60
9002129c:	6861      	ldr	r1, [r4, #4]
9002129e:	c203      	stmia	r2!, {r0, r1}
900212a0:	6818      	ldr	r0, [r3, #0]
900212a2:	aa1a      	add	r2, sp, #104	@ 0x68
900212a4:	6859      	ldr	r1, [r3, #4]
900212a6:	c203      	stmia	r2!, {r0, r1}
900212a8:	a818      	add	r0, sp, #96	@ 0x60
900212aa:	f7f7 fd63 	bl	90018d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900212ae:	4621      	mov	r1, r4
900212b0:	a81a      	add	r0, sp, #104	@ 0x68
900212b2:	f7f7 fda3 	bl	90018dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900212b6:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
900212ba:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
900212be:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
900212c2:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
900212c6:	bfdb      	ittet	le
900212c8:	b29a      	uxthle	r2, r3
900212ca:	f44f 6180 	movle.w	r1, #1024	@ 0x400
900212ce:	2201      	movgt	r2, #1
900212d0:	fb91 f2f2 	sdivle	r2, r1, r2
900212d4:	9202      	str	r2, [sp, #8]
900212d6:	9802      	ldr	r0, [sp, #8]
900212d8:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
900212dc:	9902      	ldr	r1, [sp, #8]
900212de:	fb92 f0f0 	sdiv	r0, r2, r0
900212e2:	b280      	uxth	r0, r0
900212e4:	440c      	add	r4, r1
900212e6:	900f      	str	r0, [sp, #60]	@ 0x3c
900212e8:	3c01      	subs	r4, #1
900212ea:	9802      	ldr	r0, [sp, #8]
900212ec:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900212ee:	fb05 2510 	mls	r5, r5, r0, r2
900212f2:	fb94 f4f1 	sdiv	r4, r4, r1
900212f6:	fb15 f503 	smulbb	r5, r5, r3
900212fa:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
900212fe:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
90021302:	3401      	adds	r4, #1
90021304:	440d      	add	r5, r1
90021306:	4419      	add	r1, r3
90021308:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
9002130c:	b2a4      	uxth	r4, r4
9002130e:	441a      	add	r2, r3
90021310:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
90021314:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
90021318:	00a4      	lsls	r4, r4, #2
9002131a:	9306      	str	r3, [sp, #24]
9002131c:	b2ad      	uxth	r5, r5
9002131e:	4bb3      	ldr	r3, [pc, #716]	@ (900215ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
90021320:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
90021324:	6818      	ldr	r0, [r3, #0]
90021326:	6803      	ldr	r3, [r0, #0]
90021328:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002132a:	4798      	blx	r3
9002132c:	4bb0      	ldr	r3, [pc, #704]	@ (900215f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
9002132e:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
90021332:	2d00      	cmp	r5, #0
90021334:	881a      	ldrh	r2, [r3, #0]
90021336:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
9002133a:	fb02 f606 	mul.w	r6, r2, r6
9002133e:	fb02 7101 	mla	r1, r2, r1, r7
90021342:	9316      	str	r3, [sp, #88]	@ 0x58
90021344:	eb00 0841 	add.w	r8, r0, r1, lsl #1
90021348:	4baa      	ldr	r3, [pc, #680]	@ (900215f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
9002134a:	bf18      	it	ne
9002134c:	2100      	movne	r1, #0
9002134e:	eb08 0246 	add.w	r2, r8, r6, lsl #1
90021352:	eba3 030b 	sub.w	r3, r3, fp
90021356:	920a      	str	r2, [sp, #40]	@ 0x28
90021358:	f104 0204 	add.w	r2, r4, #4
9002135c:	9317      	str	r3, [sp, #92]	@ 0x5c
9002135e:	9213      	str	r2, [sp, #76]	@ 0x4c
90021360:	9a06      	ldr	r2, [sp, #24]
90021362:	bf08      	it	eq
90021364:	4611      	moveq	r1, r2
90021366:	2200      	movs	r2, #0
90021368:	b289      	uxth	r1, r1
9002136a:	920d      	str	r2, [sp, #52]	@ 0x34
9002136c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9002136e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90021370:	fa12 f383 	uxtah	r3, r2, r3
90021374:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90021376:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9002137a:	3304      	adds	r3, #4
9002137c:	9308      	str	r3, [sp, #32]
9002137e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90021380:	4543      	cmp	r3, r8
90021382:	f240 8168 	bls.w	90021656 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
90021386:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
9002138a:	f04f 0e01 	mov.w	lr, #1
9002138e:	9a02      	ldr	r2, [sp, #8]
90021390:	9808      	ldr	r0, [sp, #32]
90021392:	fbb5 f3f3 	udiv	r3, r5, r3
90021396:	1ad3      	subs	r3, r2, r3
90021398:	7800      	ldrb	r0, [r0, #0]
9002139a:	b29b      	uxth	r3, r3
9002139c:	9010      	str	r0, [sp, #64]	@ 0x40
9002139e:	3001      	adds	r0, #1
900213a0:	9314      	str	r3, [sp, #80]	@ 0x50
900213a2:	9b08      	ldr	r3, [sp, #32]
900213a4:	9007      	str	r0, [sp, #28]
900213a6:	785a      	ldrb	r2, [r3, #1]
900213a8:	789b      	ldrb	r3, [r3, #2]
900213aa:	021b      	lsls	r3, r3, #8
900213ac:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
900213b0:	9a08      	ldr	r2, [sp, #32]
900213b2:	78d2      	ldrb	r2, [r2, #3]
900213b4:	4313      	orrs	r3, r2
900213b6:	9a11      	ldr	r2, [sp, #68]	@ 0x44
900213b8:	441a      	add	r2, r3
900213ba:	1c50      	adds	r0, r2, #1
900213bc:	7852      	ldrb	r2, [r2, #1]
900213be:	9005      	str	r0, [sp, #20]
900213c0:	0212      	lsls	r2, r2, #8
900213c2:	9811      	ldr	r0, [sp, #68]	@ 0x44
900213c4:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
900213c8:	5cc3      	ldrb	r3, [r0, r3]
900213ca:	431a      	orrs	r2, r3
900213cc:	b293      	uxth	r3, r2
900213ce:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
900213d2:	930b      	str	r3, [sp, #44]	@ 0x2c
900213d4:	2300      	movs	r3, #0
900213d6:	9309      	str	r3, [sp, #36]	@ 0x24
900213d8:	2301      	movs	r3, #1
900213da:	9301      	str	r3, [sp, #4]
900213dc:	9304      	str	r3, [sp, #16]
900213de:	2300      	movs	r3, #0
900213e0:	9303      	str	r3, [sp, #12]
900213e2:	2d00      	cmp	r5, #0
900213e4:	d07d      	beq.n	900214e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
900213e6:	45ae      	cmp	lr, r5
900213e8:	d26c      	bcs.n	900214c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
900213ea:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900213ec:	eba5 050e 	sub.w	r5, r5, lr
900213f0:	460c      	mov	r4, r1
900213f2:	4543      	cmp	r3, r8
900213f4:	b2ad      	uxth	r5, r5
900213f6:	d802      	bhi.n	900213fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
900213f8:	e071      	b.n	900214de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
900213fa:	2b00      	cmp	r3, #0
900213fc:	d15d      	bne.n	900214ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
900213fe:	9b05      	ldr	r3, [sp, #20]
90021400:	9a04      	ldr	r2, [sp, #16]
90021402:	785b      	ldrb	r3, [r3, #1]
90021404:	f1c2 0207 	rsb	r2, r2, #7
90021408:	9904      	ldr	r1, [sp, #16]
9002140a:	4093      	lsls	r3, r2
9002140c:	005b      	lsls	r3, r3, #1
9002140e:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
90021412:	9b05      	ldr	r3, [sp, #20]
90021414:	781b      	ldrb	r3, [r3, #0]
90021416:	410b      	asrs	r3, r1
90021418:	3101      	adds	r1, #1
9002141a:	b2c9      	uxtb	r1, r1
9002141c:	b2db      	uxtb	r3, r3
9002141e:	2908      	cmp	r1, #8
90021420:	9104      	str	r1, [sp, #16]
90021422:	9905      	ldr	r1, [sp, #20]
90021424:	ea43 0302 	orr.w	r3, r3, r2
90021428:	bf0c      	ite	eq
9002142a:	3102      	addeq	r1, #2
9002142c:	3101      	addne	r1, #1
9002142e:	b29a      	uxth	r2, r3
90021430:	bf05      	ittet	eq
90021432:	9105      	streq	r1, [sp, #20]
90021434:	2100      	moveq	r1, #0
90021436:	9105      	strne	r1, [sp, #20]
90021438:	9104      	streq	r1, [sp, #16]
9002143a:	9910      	ldr	r1, [sp, #64]	@ 0x40
9002143c:	4291      	cmp	r1, r2
9002143e:	d30a      	bcc.n	90021456 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
90021440:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
90021444:	2301      	movs	r3, #1
90021446:	9907      	ldr	r1, [sp, #28]
90021448:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
9002144c:	d30f      	bcc.n	9002146e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
9002144e:	2100      	movs	r1, #0
90021450:	9301      	str	r3, [sp, #4]
90021452:	9103      	str	r1, [sp, #12]
90021454:	e032      	b.n	900214bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
90021456:	9b07      	ldr	r3, [sp, #28]
90021458:	429a      	cmp	r2, r3
9002145a:	d318      	bcc.n	9002148e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
9002145c:	9b01      	ldr	r3, [sp, #4]
9002145e:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
90021462:	445b      	add	r3, fp
90021464:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
90021468:	9b01      	ldr	r3, [sp, #4]
9002146a:	3301      	adds	r3, #1
9002146c:	b29b      	uxth	r3, r3
9002146e:	9907      	ldr	r1, [sp, #28]
90021470:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
90021474:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
90021478:	7108      	strb	r0, [r1, #4]
9002147a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9002147c:	80c8      	strh	r0, [r1, #6]
9002147e:	9801      	ldr	r0, [sp, #4]
90021480:	3001      	adds	r0, #1
90021482:	7148      	strb	r0, [r1, #5]
90021484:	9907      	ldr	r1, [sp, #28]
90021486:	3101      	adds	r1, #1
90021488:	b289      	uxth	r1, r1
9002148a:	9107      	str	r1, [sp, #28]
9002148c:	e7df      	b.n	9002144e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
9002148e:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
90021492:	4611      	mov	r1, r2
90021494:	795b      	ldrb	r3, [r3, #5]
90021496:	f603 0004 	addw	r0, r3, #2052	@ 0x804
9002149a:	4458      	add	r0, fp
9002149c:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
9002149e:	4406      	add	r6, r0
900214a0:	2e00      	cmp	r6, #0
900214a2:	dd06      	ble.n	900214b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
900214a4:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
900214a8:	790e      	ldrb	r6, [r1, #4]
900214aa:	f800 6d01 	strb.w	r6, [r0, #-1]!
900214ae:	88c9      	ldrh	r1, [r1, #6]
900214b0:	e7f4      	b.n	9002149c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
900214b2:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
900214b6:	b29b      	uxth	r3, r3
900214b8:	e7c5      	b.n	90021446 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
900214ba:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900214bc:	4621      	mov	r1, r4
900214be:	920b      	str	r2, [sp, #44]	@ 0x2c
900214c0:	469e      	mov	lr, r3
900214c2:	e78e      	b.n	900213e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
900214c4:	9a03      	ldr	r2, [sp, #12]
900214c6:	ebae 0305 	sub.w	r3, lr, r5
900214ca:	f8bd 4018 	ldrh.w	r4, [sp, #24]
900214ce:	442a      	add	r2, r5
900214d0:	b29b      	uxth	r3, r3
900214d2:	b292      	uxth	r2, r2
900214d4:	9203      	str	r2, [sp, #12]
900214d6:	2500      	movs	r5, #0
900214d8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900214da:	4542      	cmp	r2, r8
900214dc:	d88d      	bhi.n	900213fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
900214de:	4621      	mov	r1, r4
900214e0:	e74d      	b.n	9002137e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
900214e2:	458e      	cmp	lr, r1
900214e4:	f04f 0900 	mov.w	r9, #0
900214e8:	bf2b      	itete	cs
900214ea:	ebae 0301 	subcs.w	r3, lr, r1
900214ee:	eba1 040e 	subcc.w	r4, r1, lr
900214f2:	462c      	movcs	r4, r5
900214f4:	462b      	movcc	r3, r5
900214f6:	bf27      	ittee	cs
900214f8:	b29b      	uxthcs	r3, r3
900214fa:	910c      	strcs	r1, [sp, #48]	@ 0x30
900214fc:	b2a4      	uxthcc	r4, r4
900214fe:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
90021502:	9a03      	ldr	r2, [sp, #12]
90021504:	980c      	ldr	r0, [sp, #48]	@ 0x30
90021506:	444a      	add	r2, r9
90021508:	4548      	cmp	r0, r9
9002150a:	b292      	uxth	r2, r2
9002150c:	d074      	beq.n	900215f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
9002150e:	2004      	movs	r0, #4
90021510:	445a      	add	r2, fp
90021512:	4605      	mov	r5, r0
90021514:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
90021518:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9002151a:	fb15 0202 	smlabb	r2, r5, r2, r0
9002151e:	9812      	ldr	r0, [sp, #72]	@ 0x48
90021520:	5880      	ldr	r0, [r0, r2]
90021522:	ea5f 6a10 	movs.w	sl, r0, lsr #24
90021526:	d014      	beq.n	90021552 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
90021528:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9002152c:	ea4f 2510 	mov.w	r5, r0, lsr #8
90021530:	d112      	bne.n	90021558 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
90021532:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90021534:	2aff      	cmp	r2, #255	@ 0xff
90021536:	d10f      	bne.n	90021558 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
90021538:	0942      	lsrs	r2, r0, #5
9002153a:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
9002153e:	f3c0 00c4 	ubfx	r0, r0, #3, #5
90021542:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90021546:	f025 0507 	bic.w	r5, r5, #7
9002154a:	4315      	orrs	r5, r2
9002154c:	4305      	orrs	r5, r0
9002154e:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
90021552:	f109 0901 	add.w	r9, r9, #1
90021556:	e7d4      	b.n	90021502 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
90021558:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
9002155c:	b2ed      	uxtb	r5, r5
9002155e:	ea4f 06ec 	mov.w	r6, ip, asr #3
90021562:	ea4f 272c 	mov.w	r7, ip, asr #8
90021566:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
9002156a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9002156e:	f3c0 4607 	ubfx	r6, r0, #16, #8
90021572:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90021576:	9215      	str	r2, [sp, #84]	@ 0x54
90021578:	fa5f fc8c 	uxtb.w	ip, ip
9002157c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9002157e:	b2c0      	uxtb	r0, r0
90021580:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
90021584:	fb02 fa0a 	mul.w	sl, r2, sl
90021588:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
9002158c:	f10a 0201 	add.w	r2, sl, #1
90021590:	eb02 222a 	add.w	r2, r2, sl, asr #8
90021594:	1212      	asrs	r2, r2, #8
90021596:	fa1f fa82 	uxth.w	sl, r2
9002159a:	43d2      	mvns	r2, r2
9002159c:	fb16 f60a 	smulbb	r6, r6, sl
900215a0:	b2d2      	uxtb	r2, r2
900215a2:	fb10 f00a 	smulbb	r0, r0, sl
900215a6:	fb07 6702 	mla	r7, r7, r2, r6
900215aa:	9e15      	ldr	r6, [sp, #84]	@ 0x54
900215ac:	fb0c 0002 	mla	r0, ip, r2, r0
900215b0:	fb15 f50a 	smulbb	r5, r5, sl
900215b4:	b2bf      	uxth	r7, r7
900215b6:	b280      	uxth	r0, r0
900215b8:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
900215bc:	fb06 5602 	mla	r6, r6, r2, r5
900215c0:	1c7a      	adds	r2, r7, #1
900215c2:	1c45      	adds	r5, r0, #1
900215c4:	eb02 2717 	add.w	r7, r2, r7, lsr #8
900215c8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
900215cc:	b2b6      	uxth	r6, r6
900215ce:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
900215d2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
900215d6:	432f      	orrs	r7, r5
900215d8:	1c75      	adds	r5, r6, #1
900215da:	eb05 2516 	add.w	r5, r5, r6, lsr #8
900215de:	096d      	lsrs	r5, r5, #5
900215e0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900215e4:	432f      	orrs	r7, r5
900215e6:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
900215ea:	e7b2      	b.n	90021552 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
900215ec:	24021c0c 	.word	0x24021c0c
900215f0:	24021c06 	.word	0x24021c06
900215f4:	fffff7fb 	.word	0xfffff7fb
900215f8:	9203      	str	r2, [sp, #12]
900215fa:	458e      	cmp	lr, r1
900215fc:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
900215fe:	eb08 0842 	add.w	r8, r8, r2, lsl #1
90021602:	f4ff af68 	bcc.w	900214d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
90021606:	9a16      	ldr	r2, [sp, #88]	@ 0x58
90021608:	9906      	ldr	r1, [sp, #24]
9002160a:	8812      	ldrh	r2, [r2, #0]
9002160c:	1a52      	subs	r2, r2, r1
9002160e:	9914      	ldr	r1, [sp, #80]	@ 0x50
90021610:	eb08 0842 	add.w	r8, r8, r2, lsl #1
90021614:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90021616:	3201      	adds	r2, #1
90021618:	428a      	cmp	r2, r1
9002161a:	9209      	str	r2, [sp, #36]	@ 0x24
9002161c:	d111      	bne.n	90021642 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
9002161e:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
90021622:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
90021626:	9b06      	ldr	r3, [sp, #24]
90021628:	eba5 0509 	sub.w	r5, r5, r9
9002162c:	b2ad      	uxth	r5, r5
9002162e:	2d00      	cmp	r5, #0
90021630:	bf08      	it	eq
90021632:	4619      	moveq	r1, r3
90021634:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90021636:	bf18      	it	ne
90021638:	2100      	movne	r1, #0
9002163a:	3301      	adds	r3, #1
9002163c:	b289      	uxth	r1, r1
9002163e:	930d      	str	r3, [sp, #52]	@ 0x34
90021640:	e694      	b.n	9002136c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
90021642:	f8bd 4018 	ldrh.w	r4, [sp, #24]
90021646:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
9002164a:	1b2d      	subs	r5, r5, r4
9002164c:	b2ad      	uxth	r5, r5
9002164e:	2d00      	cmp	r5, #0
90021650:	bf18      	it	ne
90021652:	2400      	movne	r4, #0
90021654:	e740      	b.n	900214d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
90021656:	4b04      	ldr	r3, [pc, #16]	@ (90021668 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
90021658:	6818      	ldr	r0, [r3, #0]
9002165a:	6803      	ldr	r3, [r0, #0]
9002165c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9002165e:	4798      	blx	r3
90021660:	b01d      	add	sp, #116	@ 0x74
90021662:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021666:	bf00      	nop
90021668:	24021c0c 	.word	0x24021c0c

9002166c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9002166c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021670:	b09f      	sub	sp, #124	@ 0x7c
90021672:	461d      	mov	r5, r3
90021674:	4604      	mov	r4, r0
90021676:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90021678:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
9002167c:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
90021680:	920a      	str	r2, [sp, #40]	@ 0x28
90021682:	2a00      	cmp	r2, #0
90021684:	f000 81fe 	beq.w	90021a84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
90021688:	6828      	ldr	r0, [r5, #0]
9002168a:	aa1a      	add	r2, sp, #104	@ 0x68
9002168c:	6869      	ldr	r1, [r5, #4]
9002168e:	c203      	stmia	r2!, {r0, r1}
90021690:	6818      	ldr	r0, [r3, #0]
90021692:	aa1c      	add	r2, sp, #112	@ 0x70
90021694:	6859      	ldr	r1, [r3, #4]
90021696:	c203      	stmia	r2!, {r0, r1}
90021698:	a81a      	add	r0, sp, #104	@ 0x68
9002169a:	f7f7 fb6b 	bl	90018d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002169e:	4629      	mov	r1, r5
900216a0:	a81c      	add	r0, sp, #112	@ 0x70
900216a2:	f7f7 fbab 	bl	90018dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900216a6:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
900216aa:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
900216ae:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
900216b2:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
900216b6:	bfdb      	ittet	le
900216b8:	b29a      	uxthle	r2, r3
900216ba:	f44f 6180 	movle.w	r1, #1024	@ 0x400
900216be:	2201      	movgt	r2, #1
900216c0:	fb91 f2f2 	sdivle	r2, r1, r2
900216c4:	9201      	str	r2, [sp, #4]
900216c6:	9801      	ldr	r0, [sp, #4]
900216c8:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
900216cc:	9901      	ldr	r1, [sp, #4]
900216ce:	fb92 f0f0 	sdiv	r0, r2, r0
900216d2:	b280      	uxth	r0, r0
900216d4:	440e      	add	r6, r1
900216d6:	9010      	str	r0, [sp, #64]	@ 0x40
900216d8:	3e01      	subs	r6, #1
900216da:	9801      	ldr	r0, [sp, #4]
900216dc:	9d10      	ldr	r5, [sp, #64]	@ 0x40
900216de:	fb05 2510 	mls	r5, r5, r0, r2
900216e2:	fb96 f6f1 	sdiv	r6, r6, r1
900216e6:	fb15 f503 	smulbb	r5, r5, r3
900216ea:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
900216ee:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
900216f2:	3601      	adds	r6, #1
900216f4:	440d      	add	r5, r1
900216f6:	4419      	add	r1, r3
900216f8:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
900216fc:	b2b6      	uxth	r6, r6
900216fe:	441a      	add	r2, r3
90021700:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
90021704:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
90021708:	b2ad      	uxth	r5, r5
9002170a:	9304      	str	r3, [sp, #16]
9002170c:	4b96      	ldr	r3, [pc, #600]	@ (90021968 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
9002170e:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
90021712:	6818      	ldr	r0, [r3, #0]
90021714:	6803      	ldr	r3, [r0, #0]
90021716:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90021718:	4798      	blx	r3
9002171a:	4b94      	ldr	r3, [pc, #592]	@ (9002196c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
9002171c:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
90021720:	2d00      	cmp	r5, #0
90021722:	881a      	ldrh	r2, [r3, #0]
90021724:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
90021728:	fb02 f707 	mul.w	r7, r2, r7
9002172c:	fb02 c101 	mla	r1, r2, r1, ip
90021730:	9318      	str	r3, [sp, #96]	@ 0x60
90021732:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
90021736:	4b8e      	ldr	r3, [pc, #568]	@ (90021970 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
90021738:	bf18      	it	ne
9002173a:	2100      	movne	r1, #0
9002173c:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
90021740:	eba3 0304 	sub.w	r3, r3, r4
90021744:	920b      	str	r2, [sp, #44]	@ 0x2c
90021746:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90021748:	9319      	str	r3, [sp, #100]	@ 0x64
9002174a:	eb02 0686 	add.w	r6, r2, r6, lsl #2
9002174e:	f106 0204 	add.w	r2, r6, #4
90021752:	9206      	str	r2, [sp, #24]
90021754:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90021756:	ea6f 0202 	mvn.w	r2, r2
9002175a:	b2d2      	uxtb	r2, r2
9002175c:	9215      	str	r2, [sp, #84]	@ 0x54
9002175e:	9a04      	ldr	r2, [sp, #16]
90021760:	bf08      	it	eq
90021762:	4611      	moveq	r1, r2
90021764:	2200      	movs	r2, #0
90021766:	b289      	uxth	r1, r1
90021768:	920d      	str	r2, [sp, #52]	@ 0x34
9002176a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9002176c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9002176e:	fa12 f383 	uxtah	r3, r2, r3
90021772:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90021774:	eb02 0383 	add.w	r3, r2, r3, lsl #2
90021778:	3304      	adds	r3, #4
9002177a:	9307      	str	r3, [sp, #28]
9002177c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002177e:	455b      	cmp	r3, fp
90021780:	f240 817b 	bls.w	90021a7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
90021784:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
90021788:	f04f 0801 	mov.w	r8, #1
9002178c:	9a01      	ldr	r2, [sp, #4]
9002178e:	9807      	ldr	r0, [sp, #28]
90021790:	46c4      	mov	ip, r8
90021792:	f8cd 8008 	str.w	r8, [sp, #8]
90021796:	7800      	ldrb	r0, [r0, #0]
90021798:	fbb5 f3f3 	udiv	r3, r5, r3
9002179c:	1ad3      	subs	r3, r2, r3
9002179e:	9011      	str	r0, [sp, #68]	@ 0x44
900217a0:	3001      	adds	r0, #1
900217a2:	b29b      	uxth	r3, r3
900217a4:	9005      	str	r0, [sp, #20]
900217a6:	9316      	str	r3, [sp, #88]	@ 0x58
900217a8:	9b07      	ldr	r3, [sp, #28]
900217aa:	785a      	ldrb	r2, [r3, #1]
900217ac:	789b      	ldrb	r3, [r3, #2]
900217ae:	021b      	lsls	r3, r3, #8
900217b0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
900217b4:	9a07      	ldr	r2, [sp, #28]
900217b6:	78d2      	ldrb	r2, [r2, #3]
900217b8:	4313      	orrs	r3, r2
900217ba:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
900217bc:	441a      	add	r2, r3
900217be:	1c50      	adds	r0, r2, #1
900217c0:	7852      	ldrb	r2, [r2, #1]
900217c2:	9003      	str	r0, [sp, #12]
900217c4:	0212      	lsls	r2, r2, #8
900217c6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
900217c8:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
900217cc:	5cc3      	ldrb	r3, [r0, r3]
900217ce:	431a      	orrs	r2, r3
900217d0:	b293      	uxth	r3, r2
900217d2:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
900217d6:	930c      	str	r3, [sp, #48]	@ 0x30
900217d8:	2300      	movs	r3, #0
900217da:	9308      	str	r3, [sp, #32]
900217dc:	461a      	mov	r2, r3
900217de:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
900217e2:	930e      	str	r3, [sp, #56]	@ 0x38
900217e4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
900217e8:	930f      	str	r3, [sp, #60]	@ 0x3c
900217ea:	2d00      	cmp	r5, #0
900217ec:	d07d      	beq.n	900218ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
900217ee:	45ac      	cmp	ip, r5
900217f0:	d26d      	bcs.n	900218ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
900217f2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900217f4:	eba5 050c 	sub.w	r5, r5, ip
900217f8:	4608      	mov	r0, r1
900217fa:	455b      	cmp	r3, fp
900217fc:	b2ad      	uxth	r5, r5
900217fe:	d802      	bhi.n	90021806 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
90021800:	e071      	b.n	900218e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
90021802:	2b00      	cmp	r3, #0
90021804:	d15d      	bne.n	900218c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
90021806:	9b03      	ldr	r3, [sp, #12]
90021808:	9a02      	ldr	r2, [sp, #8]
9002180a:	785b      	ldrb	r3, [r3, #1]
9002180c:	f1c2 0207 	rsb	r2, r2, #7
90021810:	9902      	ldr	r1, [sp, #8]
90021812:	4093      	lsls	r3, r2
90021814:	005b      	lsls	r3, r3, #1
90021816:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9002181a:	9b03      	ldr	r3, [sp, #12]
9002181c:	781b      	ldrb	r3, [r3, #0]
9002181e:	410b      	asrs	r3, r1
90021820:	3101      	adds	r1, #1
90021822:	b2c9      	uxtb	r1, r1
90021824:	b2db      	uxtb	r3, r3
90021826:	2908      	cmp	r1, #8
90021828:	9102      	str	r1, [sp, #8]
9002182a:	9903      	ldr	r1, [sp, #12]
9002182c:	ea43 0302 	orr.w	r3, r3, r2
90021830:	bf0c      	ite	eq
90021832:	3102      	addeq	r1, #2
90021834:	3101      	addne	r1, #1
90021836:	b29a      	uxth	r2, r3
90021838:	bf05      	ittet	eq
9002183a:	9103      	streq	r1, [sp, #12]
9002183c:	2100      	moveq	r1, #0
9002183e:	9103      	strne	r1, [sp, #12]
90021840:	9102      	streq	r1, [sp, #8]
90021842:	9911      	ldr	r1, [sp, #68]	@ 0x44
90021844:	4291      	cmp	r1, r2
90021846:	d30a      	bcc.n	9002185e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
90021848:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
9002184c:	2301      	movs	r3, #1
9002184e:	9905      	ldr	r1, [sp, #20]
90021850:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
90021854:	d30f      	bcc.n	90021876 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
90021856:	2100      	movs	r1, #0
90021858:	4698      	mov	r8, r3
9002185a:	9100      	str	r1, [sp, #0]
9002185c:	e032      	b.n	900218c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
9002185e:	9b05      	ldr	r3, [sp, #20]
90021860:	429a      	cmp	r2, r3
90021862:	d318      	bcc.n	90021896 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
90021864:	eb04 0308 	add.w	r3, r4, r8
90021868:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
9002186c:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
90021870:	f108 0301 	add.w	r3, r8, #1
90021874:	b29b      	uxth	r3, r3
90021876:	9905      	ldr	r1, [sp, #20]
90021878:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
9002187c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
90021880:	710e      	strb	r6, [r1, #4]
90021882:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
90021884:	80ce      	strh	r6, [r1, #6]
90021886:	f108 0601 	add.w	r6, r8, #1
9002188a:	714e      	strb	r6, [r1, #5]
9002188c:	9905      	ldr	r1, [sp, #20]
9002188e:	3101      	adds	r1, #1
90021890:	b289      	uxth	r1, r1
90021892:	9105      	str	r1, [sp, #20]
90021894:	e7df      	b.n	90021856 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
90021896:	eb04 0382 	add.w	r3, r4, r2, lsl #2
9002189a:	4611      	mov	r1, r2
9002189c:	795b      	ldrb	r3, [r3, #5]
9002189e:	f603 0604 	addw	r6, r3, #2052	@ 0x804
900218a2:	4426      	add	r6, r4
900218a4:	9f19      	ldr	r7, [sp, #100]	@ 0x64
900218a6:	4437      	add	r7, r6
900218a8:	2f00      	cmp	r7, #0
900218aa:	dd06      	ble.n	900218ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
900218ac:	eb04 0181 	add.w	r1, r4, r1, lsl #2
900218b0:	790f      	ldrb	r7, [r1, #4]
900218b2:	f806 7d01 	strb.w	r7, [r6, #-1]!
900218b6:	88c9      	ldrh	r1, [r1, #6]
900218b8:	e7f4      	b.n	900218a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
900218ba:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
900218be:	b29b      	uxth	r3, r3
900218c0:	e7c5      	b.n	9002184e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
900218c2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
900218c4:	920c      	str	r2, [sp, #48]	@ 0x30
900218c6:	4601      	mov	r1, r0
900218c8:	9a00      	ldr	r2, [sp, #0]
900218ca:	469c      	mov	ip, r3
900218cc:	e78d      	b.n	900217ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
900218ce:	ebac 0305 	sub.w	r3, ip, r5
900218d2:	1957      	adds	r7, r2, r5
900218d4:	f8bd 0010 	ldrh.w	r0, [sp, #16]
900218d8:	b2ba      	uxth	r2, r7
900218da:	b29b      	uxth	r3, r3
900218dc:	9200      	str	r2, [sp, #0]
900218de:	2500      	movs	r5, #0
900218e0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900218e2:	455a      	cmp	r2, fp
900218e4:	d88d      	bhi.n	90021802 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
900218e6:	4601      	mov	r1, r0
900218e8:	e748      	b.n	9002177c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
900218ea:	458c      	cmp	ip, r1
900218ec:	bf27      	ittee	cs
900218ee:	ebac 0301 	subcs.w	r3, ip, r1
900218f2:	4628      	movcs	r0, r5
900218f4:	eba1 000c 	subcc.w	r0, r1, ip
900218f8:	462b      	movcc	r3, r5
900218fa:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
900218fc:	bf27      	ittee	cs
900218fe:	b29b      	uxthcs	r3, r3
90021900:	9109      	strcs	r1, [sp, #36]	@ 0x24
90021902:	b280      	uxthcc	r0, r0
90021904:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
90021908:	2dff      	cmp	r5, #255	@ 0xff
9002190a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
9002190c:	eb02 0705 	add.w	r7, r2, r5
90021910:	b2bd      	uxth	r5, r7
90021912:	9500      	str	r5, [sp, #0]
90021914:	d12e      	bne.n	90021974 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
90021916:	465e      	mov	r6, fp
90021918:	9d00      	ldr	r5, [sp, #0]
9002191a:	42aa      	cmp	r2, r5
9002191c:	f040 8083 	bne.w	90021a26 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
90021920:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90021922:	458c      	cmp	ip, r1
90021924:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
90021928:	d3d9      	bcc.n	900218de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
9002192a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
9002192c:	9904      	ldr	r1, [sp, #16]
9002192e:	8812      	ldrh	r2, [r2, #0]
90021930:	1a52      	subs	r2, r2, r1
90021932:	9916      	ldr	r1, [sp, #88]	@ 0x58
90021934:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
90021938:	9a08      	ldr	r2, [sp, #32]
9002193a:	3201      	adds	r2, #1
9002193c:	428a      	cmp	r2, r1
9002193e:	9208      	str	r2, [sp, #32]
90021940:	f040 8091 	bne.w	90021a66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
90021944:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
90021948:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
9002194c:	9b04      	ldr	r3, [sp, #16]
9002194e:	eba5 050c 	sub.w	r5, r5, ip
90021952:	b2ad      	uxth	r5, r5
90021954:	2d00      	cmp	r5, #0
90021956:	bf08      	it	eq
90021958:	4619      	moveq	r1, r3
9002195a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9002195c:	bf18      	it	ne
9002195e:	2100      	movne	r1, #0
90021960:	3301      	adds	r3, #1
90021962:	b289      	uxth	r1, r1
90021964:	930d      	str	r3, [sp, #52]	@ 0x34
90021966:	e700      	b.n	9002176a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
90021968:	24021c0c 	.word	0x24021c0c
9002196c:	24021c06 	.word	0x24021c06
90021970:	fffff7fb 	.word	0xfffff7fb
90021974:	46d9      	mov	r9, fp
90021976:	9d00      	ldr	r5, [sp, #0]
90021978:	42aa      	cmp	r2, r5
9002197a:	d0d1      	beq.n	90021920 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
9002197c:	1c55      	adds	r5, r2, #1
9002197e:	4422      	add	r2, r4
90021980:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
90021984:	9a06      	ldr	r2, [sp, #24]
90021986:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9002198a:	9517      	str	r5, [sp, #92]	@ 0x5c
9002198c:	4472      	add	r2, lr
9002198e:	9212      	str	r2, [sp, #72]	@ 0x48
90021990:	f8b9 2000 	ldrh.w	r2, [r9]
90021994:	9f12      	ldr	r7, [sp, #72]	@ 0x48
90021996:	1216      	asrs	r6, r2, #8
90021998:	f897 a002 	ldrb.w	sl, [r7, #2]
9002199c:	10d5      	asrs	r5, r2, #3
9002199e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
900219a0:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
900219a4:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
900219a8:	00d2      	lsls	r2, r2, #3
900219aa:	fb1a fa07 	smulbb	sl, sl, r7
900219ae:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
900219b2:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
900219b4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
900219b8:	b2d2      	uxtb	r2, r2
900219ba:	fb06 a607 	mla	r6, r6, r7, sl
900219be:	9f12      	ldr	r7, [sp, #72]	@ 0x48
900219c0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
900219c4:	f897 a001 	ldrb.w	sl, [r7, #1]
900219c8:	b2b6      	uxth	r6, r6
900219ca:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
900219cc:	fb1a fa07 	smulbb	sl, sl, r7
900219d0:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
900219d2:	fb05 a507 	mla	r5, r5, r7, sl
900219d6:	9f06      	ldr	r7, [sp, #24]
900219d8:	f106 0a01 	add.w	sl, r6, #1
900219dc:	f817 e00e 	ldrb.w	lr, [r7, lr]
900219e0:	b2ad      	uxth	r5, r5
900219e2:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
900219e4:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
900219e8:	f105 0a01 	add.w	sl, r5, #1
900219ec:	fb1e fe07 	smulbb	lr, lr, r7
900219f0:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
900219f2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
900219f6:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
900219fa:	fb02 e207 	mla	r2, r2, r7, lr
900219fe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90021a02:	b292      	uxth	r2, r2
90021a04:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90021a08:	f102 0e01 	add.w	lr, r2, #1
90021a0c:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
90021a10:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
90021a14:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
90021a18:	ea4e 0606 	orr.w	r6, lr, r6
90021a1c:	ea46 060a 	orr.w	r6, r6, sl
90021a20:	f829 6b02 	strh.w	r6, [r9], #2
90021a24:	e7a7      	b.n	90021976 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
90021a26:	f102 0e01 	add.w	lr, r2, #1
90021a2a:	4422      	add	r2, r4
90021a2c:	9f06      	ldr	r7, [sp, #24]
90021a2e:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
90021a32:	9a06      	ldr	r2, [sp, #24]
90021a34:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90021a38:	eb02 0a05 	add.w	sl, r2, r5
90021a3c:	4a13      	ldr	r2, [pc, #76]	@ (90021a8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
90021a3e:	f89a 9002 	ldrb.w	r9, [sl, #2]
90021a42:	ea02 2909 	and.w	r9, r2, r9, lsl #8
90021a46:	f89a 2001 	ldrb.w	r2, [sl, #1]
90021a4a:	00d2      	lsls	r2, r2, #3
90021a4c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90021a50:	ea49 0202 	orr.w	r2, r9, r2
90021a54:	f817 9005 	ldrb.w	r9, [r7, r5]
90021a58:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
90021a5c:	f826 2b02 	strh.w	r2, [r6], #2
90021a60:	fa1f f28e 	uxth.w	r2, lr
90021a64:	e758      	b.n	90021918 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
90021a66:	f8bd 0010 	ldrh.w	r0, [sp, #16]
90021a6a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
90021a6e:	1a2d      	subs	r5, r5, r0
90021a70:	b2ad      	uxth	r5, r5
90021a72:	2d00      	cmp	r5, #0
90021a74:	bf18      	it	ne
90021a76:	2000      	movne	r0, #0
90021a78:	e732      	b.n	900218e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
90021a7a:	4b05      	ldr	r3, [pc, #20]	@ (90021a90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
90021a7c:	6818      	ldr	r0, [r3, #0]
90021a7e:	6803      	ldr	r3, [r0, #0]
90021a80:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90021a82:	4798      	blx	r3
90021a84:	b01f      	add	sp, #124	@ 0x7c
90021a86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021a8a:	bf00      	nop
90021a8c:	fffff800 	.word	0xfffff800
90021a90:	24021c0c 	.word	0x24021c0c

90021a94 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
90021a94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021a98:	b091      	sub	sp, #68	@ 0x44
90021a9a:	469b      	mov	fp, r3
90021a9c:	4616      	mov	r6, r2
90021a9e:	f9b3 2000 	ldrsh.w	r2, [r3]
90021aa2:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
90021aa6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90021aaa:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
90021aae:	4604      	mov	r4, r0
90021ab0:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
90021ab4:	4640      	mov	r0, r8
90021ab6:	460d      	mov	r5, r1
90021ab8:	4659      	mov	r1, fp
90021aba:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90021abe:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
90021ac2:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
90021ac6:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
90021aca:	f7f0 fe5f 	bl	9001278c <_ZN8touchgfx4RectaNERKS0_>
90021ace:	4631      	mov	r1, r6
90021ad0:	4640      	mov	r0, r8
90021ad2:	f7f0 fe5b 	bl	9001278c <_ZN8touchgfx4RectaNERKS0_>
90021ad6:	4b74      	ldr	r3, [pc, #464]	@ (90021ca8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
90021ad8:	8818      	ldrh	r0, [r3, #0]
90021ada:	4b74      	ldr	r3, [pc, #464]	@ (90021cac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
90021adc:	b202      	sxth	r2, r0
90021ade:	8819      	ldrh	r1, [r3, #0]
90021ae0:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
90021ae4:	b20e      	sxth	r6, r1
90021ae6:	2b00      	cmp	r3, #0
90021ae8:	da07      	bge.n	90021afa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
90021aea:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
90021aee:	4463      	add	r3, ip
90021af0:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
90021af4:	2300      	movs	r3, #0
90021af6:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
90021afa:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
90021afe:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
90021b02:	1ad2      	subs	r2, r2, r3
90021b04:	4594      	cmp	ip, r2
90021b06:	bfc4      	itt	gt
90021b08:	1ac2      	subgt	r2, r0, r3
90021b0a:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
90021b0e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
90021b12:	2a00      	cmp	r2, #0
90021b14:	da07      	bge.n	90021b26 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
90021b16:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
90021b1a:	4462      	add	r2, ip
90021b1c:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
90021b20:	2200      	movs	r2, #0
90021b22:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
90021b26:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
90021b2a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
90021b2e:	eba6 060a 	sub.w	r6, r6, sl
90021b32:	42b2      	cmp	r2, r6
90021b34:	bfc4      	itt	gt
90021b36:	eba1 020a 	subgt.w	r2, r1, sl
90021b3a:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
90021b3e:	4a5c      	ldr	r2, [pc, #368]	@ (90021cb0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
90021b40:	7812      	ldrb	r2, [r2, #0]
90021b42:	b9a2      	cbnz	r2, 90021b6e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
90021b44:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
90021b48:	4286      	cmp	r6, r0
90021b4a:	4640      	mov	r0, r8
90021b4c:	9303      	str	r3, [sp, #12]
90021b4e:	bf14      	ite	ne
90021b50:	2600      	movne	r6, #0
90021b52:	2601      	moveq	r6, #1
90021b54:	f7f0 fe5d 	bl	90012812 <_ZNK8touchgfx4Rect7isEmptyEv>
90021b58:	9b03      	ldr	r3, [sp, #12]
90021b5a:	b160      	cbz	r0, 90021b76 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
90021b5c:	2300      	movs	r3, #0
90021b5e:	8023      	strh	r3, [r4, #0]
90021b60:	8063      	strh	r3, [r4, #2]
90021b62:	80a3      	strh	r3, [r4, #4]
90021b64:	4620      	mov	r0, r4
90021b66:	80e3      	strh	r3, [r4, #6]
90021b68:	b011      	add	sp, #68	@ 0x44
90021b6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021b6e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
90021b72:	428e      	cmp	r6, r1
90021b74:	e7e9      	b.n	90021b4a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
90021b76:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
90021b7a:	a90e      	add	r1, sp, #56	@ 0x38
90021b7c:	900e      	str	r0, [sp, #56]	@ 0x38
90021b7e:	a80c      	add	r0, sp, #48	@ 0x30
90021b80:	9205      	str	r2, [sp, #20]
90021b82:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
90021b86:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
90021b8a:	9206      	str	r2, [sp, #24]
90021b8c:	f8bb 2000 	ldrh.w	r2, [fp]
90021b90:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
90021b94:	1a9b      	subs	r3, r3, r2
90021b96:	b21b      	sxth	r3, r3
90021b98:	9303      	str	r3, [sp, #12]
90021b9a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90021b9e:	f8df b118 	ldr.w	fp, [pc, #280]	@ 90021cb8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
90021ba2:	ebaa 0a03 	sub.w	sl, sl, r3
90021ba6:	fa0f f38a 	sxth.w	r3, sl
90021baa:	9304      	str	r3, [sp, #16]
90021bac:	9b03      	ldr	r3, [sp, #12]
90021bae:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
90021bb2:	9b04      	ldr	r3, [sp, #16]
90021bb4:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90021bb8:	9b05      	ldr	r3, [sp, #20]
90021bba:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
90021bbe:	9b06      	ldr	r3, [sp, #24]
90021bc0:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90021bc4:	f7f7 f91a 	bl	90018dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90021bc8:	4640      	mov	r0, r8
90021bca:	f7f7 f8d3 	bl	90018d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90021bce:	a80e      	add	r0, sp, #56	@ 0x38
90021bd0:	f7f7 f8d0 	bl	90018d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90021bd4:	4b37      	ldr	r3, [pc, #220]	@ (90021cb4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
90021bd6:	4628      	mov	r0, r5
90021bd8:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
90021bdc:	881b      	ldrh	r3, [r3, #0]
90021bde:	9307      	str	r3, [sp, #28]
90021be0:	682b      	ldr	r3, [r5, #0]
90021be2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90021be4:	4798      	blx	r3
90021be6:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
90021bea:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
90021bee:	4681      	mov	r9, r0
90021bf0:	f8db 0000 	ldr.w	r0, [fp]
90021bf4:	fb1a 3305 	smlabb	r3, sl, r5, r3
90021bf8:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
90021bfa:	eb05 0543 	add.w	r5, r5, r3, lsl #1
90021bfe:	6803      	ldr	r3, [r0, #0]
90021c00:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90021c02:	4798      	blx	r3
90021c04:	4607      	mov	r7, r0
90021c06:	f8db 0000 	ldr.w	r0, [fp]
90021c0a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
90021c0e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
90021c12:	6803      	ldr	r3, [r0, #0]
90021c14:	9109      	str	r1, [sp, #36]	@ 0x24
90021c16:	9208      	str	r2, [sp, #32]
90021c18:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90021c1a:	4798      	blx	r3
90021c1c:	f010 0f01 	tst.w	r0, #1
90021c20:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
90021c24:	d012      	beq.n	90021c4c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
90021c26:	f8db 0000 	ldr.w	r0, [fp]
90021c2a:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
90021c2e:	6803      	ldr	r3, [r0, #0]
90021c30:	9200      	str	r2, [sp, #0]
90021c32:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
90021c34:	462b      	mov	r3, r5
90021c36:	e898 0006 	ldmia.w	r8, {r1, r2}
90021c3a:	47b0      	blx	r6
90021c3c:	9b03      	ldr	r3, [sp, #12]
90021c3e:	8023      	strh	r3, [r4, #0]
90021c40:	9b04      	ldr	r3, [sp, #16]
90021c42:	8063      	strh	r3, [r4, #2]
90021c44:	9b05      	ldr	r3, [sp, #20]
90021c46:	80a3      	strh	r3, [r4, #4]
90021c48:	9b06      	ldr	r3, [sp, #24]
90021c4a:	e78b      	b.n	90021b64 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
90021c4c:	fb09 f202 	mul.w	r2, r9, r2
90021c50:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
90021c54:	eb02 0141 	add.w	r1, r2, r1, lsl #1
90021c58:	440f      	add	r7, r1
90021c5a:	b166      	cbz	r6, 90021c76 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
90021c5c:	9a07      	ldr	r2, [sp, #28]
90021c5e:	4592      	cmp	sl, r2
90021c60:	d109      	bne.n	90021c76 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
90021c62:	f8db 0000 	ldr.w	r0, [fp]
90021c66:	fb09 f303 	mul.w	r3, r9, r3
90021c6a:	4629      	mov	r1, r5
90021c6c:	6802      	ldr	r2, [r0, #0]
90021c6e:	6b96      	ldr	r6, [r2, #56]	@ 0x38
90021c70:	463a      	mov	r2, r7
90021c72:	47b0      	blx	r6
90021c74:	e7e2      	b.n	90021c3c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
90021c76:	fb0a f303 	mul.w	r3, sl, r3
90021c7a:	ea4f 064a 	mov.w	r6, sl, lsl #1
90021c7e:	f8df b038 	ldr.w	fp, [pc, #56]	@ 90021cb8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
90021c82:	eb05 0843 	add.w	r8, r5, r3, lsl #1
90021c86:	4545      	cmp	r5, r8
90021c88:	d2d8      	bcs.n	90021c3c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
90021c8a:	f8db 0000 	ldr.w	r0, [fp]
90021c8e:	4629      	mov	r1, r5
90021c90:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
90021c94:	4435      	add	r5, r6
90021c96:	6802      	ldr	r2, [r0, #0]
90021c98:	005b      	lsls	r3, r3, #1
90021c9a:	f8d2 a038 	ldr.w	sl, [r2, #56]	@ 0x38
90021c9e:	463a      	mov	r2, r7
90021ca0:	47d0      	blx	sl
90021ca2:	444f      	add	r7, r9
90021ca4:	e7ef      	b.n	90021c86 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
90021ca6:	bf00      	nop
90021ca8:	24021c00 	.word	0x24021c00
90021cac:	24021c02 	.word	0x24021c02
90021cb0:	24021c04 	.word	0x24021c04
90021cb4:	24021c06 	.word	0x24021c06
90021cb8:	24021c0c 	.word	0x24021c0c

90021cbc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
90021cbc:	b5f0      	push	{r4, r5, r6, r7, lr}
90021cbe:	4606      	mov	r6, r0
90021cc0:	b087      	sub	sp, #28
90021cc2:	460c      	mov	r4, r1
90021cc4:	4617      	mov	r7, r2
90021cc6:	461d      	mov	r5, r3
90021cc8:	b333      	cbz	r3, 90021d18 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
90021cca:	4608      	mov	r0, r1
90021ccc:	f7f0 fda1 	bl	90012812 <_ZNK8touchgfx4Rect7isEmptyEv>
90021cd0:	bb10      	cbnz	r0, 90021d18 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
90021cd2:	6820      	ldr	r0, [r4, #0]
90021cd4:	ab04      	add	r3, sp, #16
90021cd6:	6861      	ldr	r1, [r4, #4]
90021cd8:	4c1b      	ldr	r4, [pc, #108]	@ (90021d48 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
90021cda:	c303      	stmia	r3!, {r0, r1}
90021cdc:	a804      	add	r0, sp, #16
90021cde:	f7f7 f849 	bl	90018d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90021ce2:	6820      	ldr	r0, [r4, #0]
90021ce4:	6803      	ldr	r3, [r0, #0]
90021ce6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90021ce8:	4798      	blx	r3
90021cea:	2dff      	cmp	r5, #255	@ 0xff
90021cec:	d016      	beq.n	90021d1c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
90021cee:	f010 0f08 	tst.w	r0, #8
90021cf2:	6820      	ldr	r0, [r4, #0]
90021cf4:	d015      	beq.n	90021d22 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
90021cf6:	2400      	movs	r4, #0
90021cf8:	6801      	ldr	r1, [r0, #0]
90021cfa:	f8bd 3012 	ldrh.w	r3, [sp, #18]
90021cfe:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90021d02:	e9cd 5402 	strd	r5, r4, [sp, #8]
90021d06:	f8bd 4016 	ldrh.w	r4, [sp, #22]
90021d0a:	9401      	str	r4, [sp, #4]
90021d0c:	f8bd 4014 	ldrh.w	r4, [sp, #20]
90021d10:	9400      	str	r4, [sp, #0]
90021d12:	6e4c      	ldr	r4, [r1, #100]	@ 0x64
90021d14:	4639      	mov	r1, r7
90021d16:	47a0      	blx	r4
90021d18:	b007      	add	sp, #28
90021d1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
90021d1c:	f010 0f02 	tst.w	r0, #2
90021d20:	e7e7      	b.n	90021cf2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
90021d22:	6803      	ldr	r3, [r0, #0]
90021d24:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90021d26:	4798      	blx	r3
90021d28:	4b08      	ldr	r3, [pc, #32]	@ (90021d4c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
90021d2a:	4601      	mov	r1, r0
90021d2c:	4630      	mov	r0, r6
90021d2e:	881a      	ldrh	r2, [r3, #0]
90021d30:	6833      	ldr	r3, [r6, #0]
90021d32:	e9cd 7500 	strd	r7, r5, [sp]
90021d36:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
90021d38:	ab04      	add	r3, sp, #16
90021d3a:	47a8      	blx	r5
90021d3c:	6820      	ldr	r0, [r4, #0]
90021d3e:	6803      	ldr	r3, [r0, #0]
90021d40:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90021d42:	4798      	blx	r3
90021d44:	e7e8      	b.n	90021d18 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
90021d46:	bf00      	nop
90021d48:	24021c0c 	.word	0x24021c0c
90021d4c:	24021c06 	.word	0x24021c06

90021d50 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
90021d50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90021d54:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
90021d58:	4688      	mov	r8, r1
90021d5a:	4614      	mov	r4, r2
90021d5c:	461d      	mov	r5, r3
90021d5e:	9e08      	ldr	r6, [sp, #32]
90021d60:	2f00      	cmp	r7, #0
90021d62:	f000 80ab 	beq.w	90021ebc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
90021d66:	4618      	mov	r0, r3
90021d68:	f7f0 fd53 	bl	90012812 <_ZNK8touchgfx4Rect7isEmptyEv>
90021d6c:	2800      	cmp	r0, #0
90021d6e:	f040 80a5 	bne.w	90021ebc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
90021d72:	f9b5 1000 	ldrsh.w	r1, [r5]
90021d76:	2fff      	cmp	r7, #255	@ 0xff
90021d78:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90021d7c:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
90021d80:	fb04 1303 	mla	r3, r4, r3, r1
90021d84:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
90021d88:	eba4 0200 	sub.w	r2, r4, r0
90021d8c:	eb08 0143 	add.w	r1, r8, r3, lsl #1
90021d90:	fb04 f505 	mul.w	r5, r4, r5
90021d94:	ea4f 2816 	mov.w	r8, r6, lsr #8
90021d98:	eb01 0545 	add.w	r5, r1, r5, lsl #1
90021d9c:	d04a      	beq.n	90021e34 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
90021d9e:	b2bc      	uxth	r4, r7
90021da0:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
90021da4:	f3c6 4e07 	ubfx	lr, r6, #16, #8
90021da8:	fa5f f788 	uxtb.w	r7, r8
90021dac:	b2f3      	uxtb	r3, r6
90021dae:	0040      	lsls	r0, r0, #1
90021db0:	fb0e fe04 	mul.w	lr, lr, r4
90021db4:	4367      	muls	r7, r4
90021db6:	ea4f 0842 	mov.w	r8, r2, lsl #1
90021dba:	4363      	muls	r3, r4
90021dbc:	fa1f fc8c 	uxth.w	ip, ip
90021dc0:	42a9      	cmp	r1, r5
90021dc2:	d27b      	bcs.n	90021ebc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
90021dc4:	eb01 0900 	add.w	r9, r1, r0
90021dc8:	4549      	cmp	r1, r9
90021dca:	d231      	bcs.n	90021e30 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
90021dcc:	880a      	ldrh	r2, [r1, #0]
90021dce:	1214      	asrs	r4, r2, #8
90021dd0:	10d6      	asrs	r6, r2, #3
90021dd2:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90021dd6:	00d2      	lsls	r2, r2, #3
90021dd8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90021ddc:	b2d2      	uxtb	r2, r2
90021dde:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90021de2:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90021de6:	fb14 f40c 	smulbb	r4, r4, ip
90021dea:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
90021dee:	fb12 f20c 	smulbb	r2, r2, ip
90021df2:	fb16 f60c 	smulbb	r6, r6, ip
90021df6:	4474      	add	r4, lr
90021df8:	441a      	add	r2, r3
90021dfa:	b2a4      	uxth	r4, r4
90021dfc:	443e      	add	r6, r7
90021dfe:	b292      	uxth	r2, r2
90021e00:	f104 0a01 	add.w	sl, r4, #1
90021e04:	b2b6      	uxth	r6, r6
90021e06:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
90021e0a:	f102 0a01 	add.w	sl, r2, #1
90021e0e:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
90021e12:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90021e16:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90021e1a:	4322      	orrs	r2, r4
90021e1c:	1c74      	adds	r4, r6, #1
90021e1e:	eb04 2616 	add.w	r6, r4, r6, lsr #8
90021e22:	0976      	lsrs	r6, r6, #5
90021e24:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
90021e28:	4332      	orrs	r2, r6
90021e2a:	f821 2b02 	strh.w	r2, [r1], #2
90021e2e:	e7cb      	b.n	90021dc8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
90021e30:	4441      	add	r1, r8
90021e32:	e7c5      	b.n	90021dc0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
90021e34:	0973      	lsrs	r3, r6, #5
90021e36:	4f22      	ldr	r7, [pc, #136]	@ (90021ec0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
90021e38:	f3c6 06c4 	ubfx	r6, r6, #3, #5
90021e3c:	ea08 0707 	and.w	r7, r8, r7
90021e40:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90021e44:	433b      	orrs	r3, r7
90021e46:	07e7      	lsls	r7, r4, #31
90021e48:	ea43 0306 	orr.w	r3, r3, r6
90021e4c:	b29b      	uxth	r3, r3
90021e4e:	d50b      	bpl.n	90021e68 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
90021e50:	0040      	lsls	r0, r0, #1
90021e52:	0052      	lsls	r2, r2, #1
90021e54:	42a9      	cmp	r1, r5
90021e56:	d231      	bcs.n	90021ebc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
90021e58:	180c      	adds	r4, r1, r0
90021e5a:	42a1      	cmp	r1, r4
90021e5c:	d202      	bcs.n	90021e64 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
90021e5e:	f821 3b02 	strh.w	r3, [r1], #2
90021e62:	e7fa      	b.n	90021e5a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
90021e64:	4411      	add	r1, r2
90021e66:	e7f5      	b.n	90021e54 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
90021e68:	078e      	lsls	r6, r1, #30
90021e6a:	d008      	beq.n	90021e7e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
90021e6c:	0066      	lsls	r6, r4, #1
90021e6e:	460a      	mov	r2, r1
90021e70:	42aa      	cmp	r2, r5
90021e72:	d202      	bcs.n	90021e7a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
90021e74:	8013      	strh	r3, [r2, #0]
90021e76:	4432      	add	r2, r6
90021e78:	e7fa      	b.n	90021e70 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
90021e7a:	3102      	adds	r1, #2
90021e7c:	3801      	subs	r0, #1
90021e7e:	07c2      	lsls	r2, r0, #31
90021e80:	d50b      	bpl.n	90021e9a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
90021e82:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
90021e86:	0066      	lsls	r6, r4, #1
90021e88:	3a01      	subs	r2, #1
90021e8a:	eb01 0242 	add.w	r2, r1, r2, lsl #1
90021e8e:	42aa      	cmp	r2, r5
90021e90:	d202      	bcs.n	90021e98 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
90021e92:	8013      	strh	r3, [r2, #0]
90021e94:	4432      	add	r2, r6
90021e96:	e7fa      	b.n	90021e8e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
90021e98:	3801      	subs	r0, #1
90021e9a:	b178      	cbz	r0, 90021ebc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
90021e9c:	1040      	asrs	r0, r0, #1
90021e9e:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
90021ea2:	0080      	lsls	r0, r0, #2
90021ea4:	0064      	lsls	r4, r4, #1
90021ea6:	42a9      	cmp	r1, r5
90021ea8:	d208      	bcs.n	90021ebc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
90021eaa:	180e      	adds	r6, r1, r0
90021eac:	460a      	mov	r2, r1
90021eae:	42b2      	cmp	r2, r6
90021eb0:	d202      	bcs.n	90021eb8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
90021eb2:	f842 3b04 	str.w	r3, [r2], #4
90021eb6:	e7fa      	b.n	90021eae <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
90021eb8:	4421      	add	r1, r4
90021eba:	e7f4      	b.n	90021ea6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
90021ebc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90021ec0:	00fff800 	.word	0x00fff800

90021ec4 <_ZN8touchgfx8LCD16bppC1Ev>:
90021ec4:	2200      	movs	r2, #0
90021ec6:	4912      	ldr	r1, [pc, #72]	@ (90021f10 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
90021ec8:	e9c0 2201 	strd	r2, r2, [r0, #4]
90021ecc:	6001      	str	r1, [r0, #0]
90021ece:	e9c0 2203 	strd	r2, r2, [r0, #12]
90021ed2:	e9c0 2205 	strd	r2, r2, [r0, #20]
90021ed6:	e9c0 2207 	strd	r2, r2, [r0, #28]
90021eda:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
90021ede:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
90021ee2:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
90021ee6:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
90021eea:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
90021eee:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
90021ef2:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
90021ef6:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
90021efa:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
90021efe:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
90021f02:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
90021f06:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
90021f0a:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
90021f0e:	4770      	bx	lr
90021f10:	900321f0 	.word	0x900321f0

90021f14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
90021f14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021f18:	b08d      	sub	sp, #52	@ 0x34
90021f1a:	460d      	mov	r5, r1
90021f1c:	4604      	mov	r4, r0
90021f1e:	4699      	mov	r9, r3
90021f20:	6808      	ldr	r0, [r1, #0]
90021f22:	ab08      	add	r3, sp, #32
90021f24:	6849      	ldr	r1, [r1, #4]
90021f26:	c303      	stmia	r3!, {r0, r1}
90021f28:	6810      	ldr	r0, [r2, #0]
90021f2a:	ab0a      	add	r3, sp, #40	@ 0x28
90021f2c:	6851      	ldr	r1, [r2, #4]
90021f2e:	c303      	stmia	r3!, {r0, r1}
90021f30:	a808      	add	r0, sp, #32
90021f32:	f7f6 ff1f 	bl	90018d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90021f36:	4629      	mov	r1, r5
90021f38:	a80a      	add	r0, sp, #40	@ 0x28
90021f3a:	4d67      	ldr	r5, [pc, #412]	@ (900220d8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
90021f3c:	f7f6 ff5e 	bl	90018dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90021f40:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
90021f44:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
90021f48:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
90021f4c:	6828      	ldr	r0, [r5, #0]
90021f4e:	fb11 2103 	smlabb	r1, r1, r3, r2
90021f52:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
90021f56:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
90021f5a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
90021f5e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
90021f62:	440a      	add	r2, r1
90021f64:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90021f68:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
90021f6c:	4413      	add	r3, r2
90021f6e:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
90021f72:	6803      	ldr	r3, [r0, #0]
90021f74:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90021f76:	4798      	blx	r3
90021f78:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90021f7c:	d119      	bne.n	90021fb2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
90021f7e:	f010 0f20 	tst.w	r0, #32
90021f82:	6828      	ldr	r0, [r5, #0]
90021f84:	d018      	beq.n	90021fb8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
90021f86:	2500      	movs	r5, #0
90021f88:	6801      	ldr	r1, [r0, #0]
90021f8a:	b2b6      	uxth	r6, r6
90021f8c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
90021f90:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
90021f94:	9601      	str	r6, [sp, #4]
90021f96:	e9cd 9503 	strd	r9, r5, [sp, #12]
90021f9a:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
90021f9e:	9502      	str	r5, [sp, #8]
90021fa0:	fa1f f588 	uxth.w	r5, r8
90021fa4:	9500      	str	r5, [sp, #0]
90021fa6:	6d4d      	ldr	r5, [r1, #84]	@ 0x54
90021fa8:	4621      	mov	r1, r4
90021faa:	47a8      	blx	r5
90021fac:	b00d      	add	sp, #52	@ 0x34
90021fae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021fb2:	f010 0f40 	tst.w	r0, #64	@ 0x40
90021fb6:	e7e4      	b.n	90021f82 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
90021fb8:	6803      	ldr	r3, [r0, #0]
90021fba:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90021fbc:	4798      	blx	r3
90021fbe:	4947      	ldr	r1, [pc, #284]	@ (900220dc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
90021fc0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
90021fc4:	880b      	ldrh	r3, [r1, #0]
90021fc6:	468a      	mov	sl, r1
90021fc8:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
90021fcc:	fb03 5202 	mla	r2, r3, r2, r5
90021fd0:	4373      	muls	r3, r6
90021fd2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90021fd6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90021fda:	9307      	str	r3, [sp, #28]
90021fdc:	ea4f 0348 	mov.w	r3, r8, lsl #1
90021fe0:	9306      	str	r3, [sp, #24]
90021fe2:	9b07      	ldr	r3, [sp, #28]
90021fe4:	4298      	cmp	r0, r3
90021fe6:	d270      	bcs.n	900220ca <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
90021fe8:	9b06      	ldr	r3, [sp, #24]
90021fea:	4621      	mov	r1, r4
90021fec:	eb00 0b03 	add.w	fp, r0, r3
90021ff0:	4558      	cmp	r0, fp
90021ff2:	d25d      	bcs.n	900220b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
90021ff4:	f851 4b04 	ldr.w	r4, [r1], #4
90021ff8:	0e23      	lsrs	r3, r4, #24
90021ffa:	d014      	beq.n	90022026 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
90021ffc:	2bff      	cmp	r3, #255	@ 0xff
90021ffe:	ea4f 2c14 	mov.w	ip, r4, lsr #8
90022002:	d112      	bne.n	9002202a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
90022004:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90022008:	d10f      	bne.n	9002202a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9002200a:	0963      	lsrs	r3, r4, #5
9002200c:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
90022010:	f3c4 04c4 	ubfx	r4, r4, #3, #5
90022014:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90022018:	f02c 0c07 	bic.w	ip, ip, #7
9002201c:	ea43 0c0c 	orr.w	ip, r3, ip
90022020:	ea4c 0404 	orr.w	r4, ip, r4
90022024:	8004      	strh	r4, [r0, #0]
90022026:	3002      	adds	r0, #2
90022028:	e7e2      	b.n	90021ff0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
9002202a:	fb09 f303 	mul.w	r3, r9, r3
9002202e:	8807      	ldrh	r7, [r0, #0]
90022030:	f3c4 4e07 	ubfx	lr, r4, #16, #8
90022034:	fa5f fc8c 	uxtb.w	ip, ip
90022038:	1c5a      	adds	r2, r3, #1
9002203a:	123e      	asrs	r6, r7, #8
9002203c:	10fd      	asrs	r5, r7, #3
9002203e:	eb02 2223 	add.w	r2, r2, r3, asr #8
90022042:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
90022046:	00ff      	lsls	r7, r7, #3
90022048:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9002204c:	1212      	asrs	r2, r2, #8
9002204e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
90022052:	b293      	uxth	r3, r2
90022054:	43d2      	mvns	r2, r2
90022056:	b2ff      	uxtb	r7, r7
90022058:	fb1e fe03 	smulbb	lr, lr, r3
9002205c:	b2d2      	uxtb	r2, r2
9002205e:	fb1c fc03 	smulbb	ip, ip, r3
90022062:	b2e4      	uxtb	r4, r4
90022064:	fb06 e602 	mla	r6, r6, r2, lr
90022068:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9002206c:	fb14 f403 	smulbb	r4, r4, r3
90022070:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
90022074:	b2b6      	uxth	r6, r6
90022076:	fb05 c502 	mla	r5, r5, r2, ip
9002207a:	fb07 4702 	mla	r7, r7, r2, r4
9002207e:	f106 0e01 	add.w	lr, r6, #1
90022082:	b2ad      	uxth	r5, r5
90022084:	b2bf      	uxth	r7, r7
90022086:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
9002208a:	f105 0c01 	add.w	ip, r5, #1
9002208e:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
90022092:	1c7e      	adds	r6, r7, #1
90022094:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90022098:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9002209c:	096d      	lsrs	r5, r5, #5
9002209e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
900220a2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900220a6:	ea46 060e 	orr.w	r6, r6, lr
900220aa:	432e      	orrs	r6, r5
900220ac:	8006      	strh	r6, [r0, #0]
900220ae:	e7ba      	b.n	90022026 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
900220b0:	f8ba 3000 	ldrh.w	r3, [sl]
900220b4:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
900220b8:	eba3 0308 	sub.w	r3, r3, r8
900220bc:	eba4 0408 	sub.w	r4, r4, r8
900220c0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900220c4:	eb01 0484 	add.w	r4, r1, r4, lsl #2
900220c8:	e78b      	b.n	90021fe2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
900220ca:	4b03      	ldr	r3, [pc, #12]	@ (900220d8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
900220cc:	6818      	ldr	r0, [r3, #0]
900220ce:	6803      	ldr	r3, [r0, #0]
900220d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900220d2:	4798      	blx	r3
900220d4:	e76a      	b.n	90021fac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
900220d6:	bf00      	nop
900220d8:	24021c0c 	.word	0x24021c0c
900220dc:	24021c06 	.word	0x24021c06

900220e0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
900220e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900220e4:	b085      	sub	sp, #20
900220e6:	6810      	ldr	r0, [r2, #0]
900220e8:	460c      	mov	r4, r1
900220ea:	6851      	ldr	r1, [r2, #4]
900220ec:	466d      	mov	r5, sp
900220ee:	4616      	mov	r6, r2
900220f0:	c503      	stmia	r5!, {r0, r1}
900220f2:	6818      	ldr	r0, [r3, #0]
900220f4:	6859      	ldr	r1, [r3, #4]
900220f6:	c503      	stmia	r5!, {r0, r1}
900220f8:	4668      	mov	r0, sp
900220fa:	4d2e      	ldr	r5, [pc, #184]	@ (900221b4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
900220fc:	f7f6 fe3a 	bl	90018d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90022100:	4631      	mov	r1, r6
90022102:	a802      	add	r0, sp, #8
90022104:	4e2c      	ldr	r6, [pc, #176]	@ (900221b8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
90022106:	f7f6 fe79 	bl	90018dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002210a:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
9002210e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
90022112:	f8bd 1004 	ldrh.w	r1, [sp, #4]
90022116:	6828      	ldr	r0, [r5, #0]
90022118:	fb11 2103 	smlabb	r1, r1, r3, r2
9002211c:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
90022120:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
90022124:	eb04 0481 	add.w	r4, r4, r1, lsl #2
90022128:	f8bd 1000 	ldrh.w	r1, [sp]
9002212c:	440a      	add	r2, r1
9002212e:	f8ad 2008 	strh.w	r2, [sp, #8]
90022132:	f8bd 2002 	ldrh.w	r2, [sp, #2]
90022136:	4413      	add	r3, r2
90022138:	f8ad 300a 	strh.w	r3, [sp, #10]
9002213c:	6803      	ldr	r3, [r0, #0]
9002213e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90022140:	4798      	blx	r3
90022142:	8833      	ldrh	r3, [r6, #0]
90022144:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
90022148:	ea4f 0c47 	mov.w	ip, r7, lsl #1
9002214c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
90022150:	f8df e068 	ldr.w	lr, [pc, #104]	@ 900221bc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
90022154:	fb03 1202 	mla	r2, r3, r2, r1
90022158:	fb08 f303 	mul.w	r3, r8, r3
9002215c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90022160:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90022164:	4298      	cmp	r0, r3
90022166:	d21d      	bcs.n	900221a4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
90022168:	eb00 080c 	add.w	r8, r0, ip
9002216c:	4540      	cmp	r0, r8
9002216e:	d20f      	bcs.n	90022190 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
90022170:	f854 1b04 	ldr.w	r1, [r4], #4
90022174:	ea4f 1951 	mov.w	r9, r1, lsr #5
90022178:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
9002217c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90022180:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90022184:	ea42 0209 	orr.w	r2, r2, r9
90022188:	430a      	orrs	r2, r1
9002218a:	f820 2b02 	strh.w	r2, [r0], #2
9002218e:	e7ed      	b.n	9002216c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
90022190:	8832      	ldrh	r2, [r6, #0]
90022192:	1bd2      	subs	r2, r2, r7
90022194:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90022198:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
9002219c:	1bd2      	subs	r2, r2, r7
9002219e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
900221a2:	e7df      	b.n	90022164 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
900221a4:	6828      	ldr	r0, [r5, #0]
900221a6:	6803      	ldr	r3, [r0, #0]
900221a8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900221aa:	4798      	blx	r3
900221ac:	b005      	add	sp, #20
900221ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900221b2:	bf00      	nop
900221b4:	24021c0c 	.word	0x24021c0c
900221b8:	24021c06 	.word	0x24021c06
900221bc:	fffff800 	.word	0xfffff800

900221c0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
900221c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900221c4:	b08e      	sub	sp, #56	@ 0x38
900221c6:	460e      	mov	r6, r1
900221c8:	4604      	mov	r4, r0
900221ca:	461d      	mov	r5, r3
900221cc:	6808      	ldr	r0, [r1, #0]
900221ce:	ab0a      	add	r3, sp, #40	@ 0x28
900221d0:	6849      	ldr	r1, [r1, #4]
900221d2:	f8df 81d4 	ldr.w	r8, [pc, #468]	@ 900223a8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
900221d6:	f8df 91d4 	ldr.w	r9, [pc, #468]	@ 900223ac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
900221da:	c303      	stmia	r3!, {r0, r1}
900221dc:	6810      	ldr	r0, [r2, #0]
900221de:	ab0c      	add	r3, sp, #48	@ 0x30
900221e0:	6851      	ldr	r1, [r2, #4]
900221e2:	c303      	stmia	r3!, {r0, r1}
900221e4:	a80a      	add	r0, sp, #40	@ 0x28
900221e6:	f7f6 fdc5 	bl	90018d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900221ea:	4631      	mov	r1, r6
900221ec:	a80c      	add	r0, sp, #48	@ 0x30
900221ee:	f7f6 fe05 	bl	90018dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900221f2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
900221f6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
900221fa:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
900221fe:	f8d8 0000 	ldr.w	r0, [r8]
90022202:	fb11 2103 	smlabb	r1, r1, r3, r2
90022206:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
9002220a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9002220e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90022212:	440c      	add	r4, r1
90022214:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
90022218:	440a      	add	r2, r1
9002221a:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
9002221e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
90022222:	4413      	add	r3, r2
90022224:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90022228:	6803      	ldr	r3, [r0, #0]
9002222a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9002222c:	4798      	blx	r3
9002222e:	2dff      	cmp	r5, #255	@ 0xff
90022230:	d124      	bne.n	9002227c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
90022232:	f010 0f01 	tst.w	r0, #1
90022236:	f8d8 0000 	ldr.w	r0, [r8]
9002223a:	d022      	beq.n	90022282 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
9002223c:	2100      	movs	r1, #0
9002223e:	f04f 0e01 	mov.w	lr, #1
90022242:	f8d0 c000 	ldr.w	ip, [r0]
90022246:	b2b6      	uxth	r6, r6
90022248:	f8cd e018 	str.w	lr, [sp, #24]
9002224c:	b2bf      	uxth	r7, r7
9002224e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90022252:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
90022256:	e9cd 1107 	strd	r1, r1, [sp, #28]
9002225a:	f8b9 e000 	ldrh.w	lr, [r9]
9002225e:	9503      	str	r5, [sp, #12]
90022260:	9601      	str	r6, [sp, #4]
90022262:	9700      	str	r7, [sp, #0]
90022264:	e9cd 1e04 	strd	r1, lr, [sp, #16]
90022268:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
9002226c:	9102      	str	r1, [sp, #8]
9002226e:	4621      	mov	r1, r4
90022270:	f8dc 5044 	ldr.w	r5, [ip, #68]	@ 0x44
90022274:	47a8      	blx	r5
90022276:	b00e      	add	sp, #56	@ 0x38
90022278:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002227c:	f010 0f04 	tst.w	r0, #4
90022280:	e7d9      	b.n	90022236 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
90022282:	6803      	ldr	r3, [r0, #0]
90022284:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90022286:	4798      	blx	r3
90022288:	f8b9 3000 	ldrh.w	r3, [r9]
9002228c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
90022290:	ea4f 0e47 	mov.w	lr, r7, lsl #1
90022294:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
90022298:	435e      	muls	r6, r3
9002229a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
9002229e:	2dff      	cmp	r5, #255	@ 0xff
900222a0:	fb03 1202 	mla	r2, r3, r2, r1
900222a4:	ebac 0c07 	sub.w	ip, ip, r7
900222a8:	eba3 0707 	sub.w	r7, r3, r7
900222ac:	eb00 0042 	add.w	r0, r0, r2, lsl #1
900222b0:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
900222b4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
900222b8:	ea4f 0747 	mov.w	r7, r7, lsl #1
900222bc:	d049      	beq.n	90022352 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
900222be:	43eb      	mvns	r3, r5
900222c0:	fa1f f985 	uxth.w	r9, r5
900222c4:	b2db      	uxtb	r3, r3
900222c6:	42b0      	cmp	r0, r6
900222c8:	d266      	bcs.n	90022398 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
900222ca:	eb00 0a0e 	add.w	sl, r0, lr
900222ce:	4550      	cmp	r0, sl
900222d0:	4621      	mov	r1, r4
900222d2:	f104 0403 	add.w	r4, r4, #3
900222d6:	d25b      	bcs.n	90022390 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
900222d8:	8802      	ldrh	r2, [r0, #0]
900222da:	f814 1c01 	ldrb.w	r1, [r4, #-1]
900222de:	ea4f 2822 	mov.w	r8, r2, asr #8
900222e2:	fb11 f109 	smulbb	r1, r1, r9
900222e6:	10d5      	asrs	r5, r2, #3
900222e8:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
900222ec:	00d2      	lsls	r2, r2, #3
900222ee:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
900222f2:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
900222f6:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
900222fa:	fb08 1803 	mla	r8, r8, r3, r1
900222fe:	f814 1c02 	ldrb.w	r1, [r4, #-2]
90022302:	b2d2      	uxtb	r2, r2
90022304:	fb11 f109 	smulbb	r1, r1, r9
90022308:	fa1f f888 	uxth.w	r8, r8
9002230c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90022310:	fb05 1503 	mla	r5, r5, r3, r1
90022314:	f814 1c03 	ldrb.w	r1, [r4, #-3]
90022318:	fb11 f109 	smulbb	r1, r1, r9
9002231c:	b2ad      	uxth	r5, r5
9002231e:	fb02 1203 	mla	r2, r2, r3, r1
90022322:	f108 0101 	add.w	r1, r8, #1
90022326:	b292      	uxth	r2, r2
90022328:	eb01 2818 	add.w	r8, r1, r8, lsr #8
9002232c:	1c51      	adds	r1, r2, #1
9002232e:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
90022332:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90022336:	1c69      	adds	r1, r5, #1
90022338:	eb01 2515 	add.w	r5, r1, r5, lsr #8
9002233c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90022340:	096d      	lsrs	r5, r5, #5
90022342:	ea42 0208 	orr.w	r2, r2, r8
90022346:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9002234a:	432a      	orrs	r2, r5
9002234c:	f820 2b02 	strh.w	r2, [r0], #2
90022350:	e7bd      	b.n	900222ce <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
90022352:	4a14      	ldr	r2, [pc, #80]	@ (900223a4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
90022354:	42b0      	cmp	r0, r6
90022356:	d21f      	bcs.n	90022398 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
90022358:	eb00 050e 	add.w	r5, r0, lr
9002235c:	42a8      	cmp	r0, r5
9002235e:	4621      	mov	r1, r4
90022360:	f104 0403 	add.w	r4, r4, #3
90022364:	d210      	bcs.n	90022388 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
90022366:	f814 3c02 	ldrb.w	r3, [r4, #-2]
9002236a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9002236e:	00db      	lsls	r3, r3, #3
90022370:	ea02 2101 	and.w	r1, r2, r1, lsl #8
90022374:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90022378:	430b      	orrs	r3, r1
9002237a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9002237e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
90022382:	f820 3b02 	strh.w	r3, [r0], #2
90022386:	e7e9      	b.n	9002235c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
90022388:	4438      	add	r0, r7
9002238a:	eb01 040c 	add.w	r4, r1, ip
9002238e:	e7e1      	b.n	90022354 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
90022390:	4438      	add	r0, r7
90022392:	eb01 040c 	add.w	r4, r1, ip
90022396:	e796      	b.n	900222c6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
90022398:	4b03      	ldr	r3, [pc, #12]	@ (900223a8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
9002239a:	6818      	ldr	r0, [r3, #0]
9002239c:	6803      	ldr	r3, [r0, #0]
9002239e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900223a0:	4798      	blx	r3
900223a2:	e768      	b.n	90022276 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
900223a4:	fffff800 	.word	0xfffff800
900223a8:	24021c0c 	.word	0x24021c0c
900223ac:	24021c06 	.word	0x24021c06

900223b0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
900223b0:	b4f0      	push	{r4, r5, r6, r7}
900223b2:	4616      	mov	r6, r2
900223b4:	461c      	mov	r4, r3
900223b6:	460d      	mov	r5, r1
900223b8:	9a04      	ldr	r2, [sp, #16]
900223ba:	2e01      	cmp	r6, #1
900223bc:	f89d 3014 	ldrb.w	r3, [sp, #20]
900223c0:	f89d 7018 	ldrb.w	r7, [sp, #24]
900223c4:	d012      	beq.n	900223ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
900223c6:	d303      	bcc.n	900223d0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
900223c8:	2e02      	cmp	r6, #2
900223ca:	d00a      	beq.n	900223e2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
900223cc:	bcf0      	pop	{r4, r5, r6, r7}
900223ce:	4770      	bx	lr
900223d0:	6805      	ldr	r5, [r0, #0]
900223d2:	e9cd 3704 	strd	r3, r7, [sp, #16]
900223d6:	68ed      	ldr	r5, [r5, #12]
900223d8:	4613      	mov	r3, r2
900223da:	4622      	mov	r2, r4
900223dc:	46ac      	mov	ip, r5
900223de:	bcf0      	pop	{r4, r5, r6, r7}
900223e0:	4760      	bx	ip
900223e2:	4621      	mov	r1, r4
900223e4:	4628      	mov	r0, r5
900223e6:	bcf0      	pop	{r4, r5, r6, r7}
900223e8:	f7ff bd94 	b.w	90021f14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
900223ec:	4621      	mov	r1, r4
900223ee:	4628      	mov	r0, r5
900223f0:	bcf0      	pop	{r4, r5, r6, r7}
900223f2:	f7ff bee5 	b.w	900221c0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

900223f8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
900223f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900223fc:	b093      	sub	sp, #76	@ 0x4c
900223fe:	4681      	mov	r9, r0
90022400:	4688      	mov	r8, r1
90022402:	6810      	ldr	r0, [r2, #0]
90022404:	6851      	ldr	r1, [r2, #4]
90022406:	ac0e      	add	r4, sp, #56	@ 0x38
90022408:	4616      	mov	r6, r2
9002240a:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
9002240e:	4f6b      	ldr	r7, [pc, #428]	@ (900225bc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
90022410:	c403      	stmia	r4!, {r0, r1}
90022412:	6818      	ldr	r0, [r3, #0]
90022414:	ac10      	add	r4, sp, #64	@ 0x40
90022416:	6859      	ldr	r1, [r3, #4]
90022418:	c403      	stmia	r4!, {r0, r1}
9002241a:	a80e      	add	r0, sp, #56	@ 0x38
9002241c:	f7f6 fcaa 	bl	90018d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90022420:	4631      	mov	r1, r6
90022422:	a810      	add	r0, sp, #64	@ 0x40
90022424:	4e66      	ldr	r6, [pc, #408]	@ (900225c0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
90022426:	f7f6 fce9 	bl	90018dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002242a:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
9002242e:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
90022432:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
90022436:	6830      	ldr	r0, [r6, #0]
90022438:	fb11 2103 	smlabb	r1, r1, r3, r2
9002243c:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
90022440:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
90022444:	4489      	add	r9, r1
90022446:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
9002244a:	440a      	add	r2, r1
9002244c:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
90022450:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
90022454:	4413      	add	r3, r2
90022456:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
9002245a:	6803      	ldr	r3, [r0, #0]
9002245c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9002245e:	4798      	blx	r3
90022460:	f010 0f80 	tst.w	r0, #128	@ 0x80
90022464:	6830      	ldr	r0, [r6, #0]
90022466:	d01d      	beq.n	900224a4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
90022468:	2200      	movs	r2, #0
9002246a:	6801      	ldr	r1, [r0, #0]
9002246c:	b2a4      	uxth	r4, r4
9002246e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90022472:	b2ad      	uxth	r5, r5
90022474:	e9cd 2208 	strd	r2, r2, [sp, #32]
90022478:	220b      	movs	r2, #11
9002247a:	9207      	str	r2, [sp, #28]
9002247c:	883a      	ldrh	r2, [r7, #0]
9002247e:	9502      	str	r5, [sp, #8]
90022480:	9206      	str	r2, [sp, #24]
90022482:	2201      	movs	r2, #1
90022484:	9401      	str	r4, [sp, #4]
90022486:	e9cd a204 	strd	sl, r2, [sp, #16]
9002248a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
9002248e:	9203      	str	r2, [sp, #12]
90022490:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
90022494:	9200      	str	r2, [sp, #0]
90022496:	4642      	mov	r2, r8
90022498:	6c0c      	ldr	r4, [r1, #64]	@ 0x40
9002249a:	4649      	mov	r1, r9
9002249c:	47a0      	blx	r4
9002249e:	b013      	add	sp, #76	@ 0x4c
900224a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900224a4:	6803      	ldr	r3, [r0, #0]
900224a6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900224a8:	4798      	blx	r3
900224aa:	883b      	ldrh	r3, [r7, #0]
900224ac:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
900224b0:	f04f 0e04 	mov.w	lr, #4
900224b4:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
900224b8:	435d      	muls	r5, r3
900224ba:	fb03 1202 	mla	r2, r3, r2, r1
900224be:	eb00 0042 	add.w	r0, r0, r2, lsl #1
900224c2:	eb00 0245 	add.w	r2, r0, r5, lsl #1
900224c6:	920c      	str	r2, [sp, #48]	@ 0x30
900224c8:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
900224cc:	1b12      	subs	r2, r2, r4
900224ce:	920d      	str	r2, [sp, #52]	@ 0x34
900224d0:	0062      	lsls	r2, r4, #1
900224d2:	1b1c      	subs	r4, r3, r4
900224d4:	920a      	str	r2, [sp, #40]	@ 0x28
900224d6:	0063      	lsls	r3, r4, #1
900224d8:	930b      	str	r3, [sp, #44]	@ 0x2c
900224da:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900224dc:	4298      	cmp	r0, r3
900224de:	d266      	bcs.n	900225ae <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
900224e0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900224e2:	eb00 0b03 	add.w	fp, r0, r3
900224e6:	4558      	cmp	r0, fp
900224e8:	d25c      	bcs.n	900225a4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
900224ea:	f819 3b01 	ldrb.w	r3, [r9], #1
900224ee:	fb1e e303 	smlabb	r3, lr, r3, lr
900224f2:	f858 2003 	ldr.w	r2, [r8, r3]
900224f6:	0e11      	lsrs	r1, r2, #24
900224f8:	d012      	beq.n	90022520 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
900224fa:	29ff      	cmp	r1, #255	@ 0xff
900224fc:	ea4f 2712 	mov.w	r7, r2, lsr #8
90022500:	d110      	bne.n	90022524 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
90022502:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90022506:	d10d      	bne.n	90022524 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
90022508:	0953      	lsrs	r3, r2, #5
9002250a:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
9002250e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90022512:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90022516:	f027 0707 	bic.w	r7, r7, #7
9002251a:	431f      	orrs	r7, r3
9002251c:	433a      	orrs	r2, r7
9002251e:	8002      	strh	r2, [r0, #0]
90022520:	3002      	adds	r0, #2
90022522:	e7e0      	b.n	900224e6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
90022524:	fb0a f101 	mul.w	r1, sl, r1
90022528:	8806      	ldrh	r6, [r0, #0]
9002252a:	f3c2 4c07 	ubfx	ip, r2, #16, #8
9002252e:	b2d2      	uxtb	r2, r2
90022530:	1c4b      	adds	r3, r1, #1
90022532:	1235      	asrs	r5, r6, #8
90022534:	10f4      	asrs	r4, r6, #3
90022536:	eb03 2321 	add.w	r3, r3, r1, asr #8
9002253a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9002253e:	00f6      	lsls	r6, r6, #3
90022540:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
90022544:	121b      	asrs	r3, r3, #8
90022546:	b2f6      	uxtb	r6, r6
90022548:	b299      	uxth	r1, r3
9002254a:	43db      	mvns	r3, r3
9002254c:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
90022550:	fb1c fc01 	smulbb	ip, ip, r1
90022554:	b2db      	uxtb	r3, r3
90022556:	fb12 f201 	smulbb	r2, r2, r1
9002255a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9002255e:	fb05 c503 	mla	r5, r5, r3, ip
90022562:	b2ff      	uxtb	r7, r7
90022564:	fb06 2203 	mla	r2, r6, r3, r2
90022568:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
9002256c:	fb17 f701 	smulbb	r7, r7, r1
90022570:	b2ad      	uxth	r5, r5
90022572:	b292      	uxth	r2, r2
90022574:	fb04 7403 	mla	r4, r4, r3, r7
90022578:	f105 0c01 	add.w	ip, r5, #1
9002257c:	1c57      	adds	r7, r2, #1
9002257e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90022582:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90022586:	b2a4      	uxth	r4, r4
90022588:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9002258c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90022590:	433d      	orrs	r5, r7
90022592:	1c67      	adds	r7, r4, #1
90022594:	eb07 2414 	add.w	r4, r7, r4, lsr #8
90022598:	0964      	lsrs	r4, r4, #5
9002259a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
9002259e:	4325      	orrs	r5, r4
900225a0:	8005      	strh	r5, [r0, #0]
900225a2:	e7bd      	b.n	90022520 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
900225a4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900225a6:	4418      	add	r0, r3
900225a8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900225aa:	4499      	add	r9, r3
900225ac:	e795      	b.n	900224da <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
900225ae:	4b04      	ldr	r3, [pc, #16]	@ (900225c0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
900225b0:	6818      	ldr	r0, [r3, #0]
900225b2:	6803      	ldr	r3, [r0, #0]
900225b4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900225b6:	4798      	blx	r3
900225b8:	e771      	b.n	9002249e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
900225ba:	bf00      	nop
900225bc:	24021c06 	.word	0x24021c06
900225c0:	24021c0c 	.word	0x24021c0c

900225c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
900225c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900225c8:	b087      	sub	sp, #28
900225ca:	4680      	mov	r8, r0
900225cc:	460d      	mov	r5, r1
900225ce:	4614      	mov	r4, r2
900225d0:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
900225d4:	2e00      	cmp	r6, #0
900225d6:	f000 80b9 	beq.w	9002274c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
900225da:	6810      	ldr	r0, [r2, #0]
900225dc:	af02      	add	r7, sp, #8
900225de:	6851      	ldr	r1, [r2, #4]
900225e0:	c703      	stmia	r7!, {r0, r1}
900225e2:	6818      	ldr	r0, [r3, #0]
900225e4:	af04      	add	r7, sp, #16
900225e6:	6859      	ldr	r1, [r3, #4]
900225e8:	c703      	stmia	r7!, {r0, r1}
900225ea:	a802      	add	r0, sp, #8
900225ec:	f7f6 fbc2 	bl	90018d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900225f0:	4621      	mov	r1, r4
900225f2:	a804      	add	r0, sp, #16
900225f4:	f7f6 fc02 	bl	90018dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900225f8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
900225fc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90022600:	f8bd 400c 	ldrh.w	r4, [sp, #12]
90022604:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
90022608:	fb14 2103 	smlabb	r1, r4, r3, r2
9002260c:	eb08 0401 	add.w	r4, r8, r1
90022610:	f8bd 1008 	ldrh.w	r1, [sp, #8]
90022614:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
90022618:	440a      	add	r2, r1
9002261a:	ea4f 0a48 	mov.w	sl, r8, lsl #1
9002261e:	f8ad 2010 	strh.w	r2, [sp, #16]
90022622:	f8bd 200a 	ldrh.w	r2, [sp, #10]
90022626:	4413      	add	r3, r2
90022628:	f8ad 3012 	strh.w	r3, [sp, #18]
9002262c:	4b49      	ldr	r3, [pc, #292]	@ (90022754 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9002262e:	6818      	ldr	r0, [r3, #0]
90022630:	6803      	ldr	r3, [r0, #0]
90022632:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90022634:	4798      	blx	r3
90022636:	4b48      	ldr	r3, [pc, #288]	@ (90022758 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
90022638:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
9002263c:	2eff      	cmp	r6, #255	@ 0xff
9002263e:	881a      	ldrh	r2, [r3, #0]
90022640:	f9bd c010 	ldrsh.w	ip, [sp, #16]
90022644:	fb02 c101 	mla	r1, r2, r1, ip
90022648:	fb02 f207 	mul.w	r2, r2, r7
9002264c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
90022650:	f105 0104 	add.w	r1, r5, #4
90022654:	461d      	mov	r5, r3
90022656:	d05a      	beq.n	9002270e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
90022658:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
9002265c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90022660:	b2b6      	uxth	r6, r6
90022662:	9301      	str	r3, [sp, #4]
90022664:	fa1f fe8e 	uxth.w	lr, lr
90022668:	4282      	cmp	r2, r0
9002266a:	d96a      	bls.n	90022742 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9002266c:	eb00 0b0a 	add.w	fp, r0, sl
90022670:	4583      	cmp	fp, r0
90022672:	d940      	bls.n	900226f6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
90022674:	8805      	ldrh	r5, [r0, #0]
90022676:	f814 3b01 	ldrb.w	r3, [r4], #1
9002267a:	122f      	asrs	r7, r5, #8
9002267c:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
90022680:	ea4f 09e5 	mov.w	r9, r5, asr #3
90022684:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90022688:	00ed      	lsls	r5, r5, #3
9002268a:	ea4f 2c23 	mov.w	ip, r3, asr #8
9002268e:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
90022692:	fb17 f70e 	smulbb	r7, r7, lr
90022696:	b2ed      	uxtb	r5, r5
90022698:	fb19 f90e 	smulbb	r9, r9, lr
9002269c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
900226a0:	fb15 f50e 	smulbb	r5, r5, lr
900226a4:	fb0c 7c06 	mla	ip, ip, r6, r7
900226a8:	10df      	asrs	r7, r3, #3
900226aa:	00db      	lsls	r3, r3, #3
900226ac:	fa1f fc8c 	uxth.w	ip, ip
900226b0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
900226b4:	b2db      	uxtb	r3, r3
900226b6:	fb07 9706 	mla	r7, r7, r6, r9
900226ba:	f10c 0901 	add.w	r9, ip, #1
900226be:	fb03 5306 	mla	r3, r3, r6, r5
900226c2:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
900226c6:	b29b      	uxth	r3, r3
900226c8:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
900226cc:	b2bf      	uxth	r7, r7
900226ce:	f103 0c01 	add.w	ip, r3, #1
900226d2:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
900226d6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
900226da:	ea4c 0c09 	orr.w	ip, ip, r9
900226de:	f107 0901 	add.w	r9, r7, #1
900226e2:	eb09 2717 	add.w	r7, r9, r7, lsr #8
900226e6:	097f      	lsrs	r7, r7, #5
900226e8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900226ec:	ea4c 0c07 	orr.w	ip, ip, r7
900226f0:	f820 cb02 	strh.w	ip, [r0], #2
900226f4:	e7bc      	b.n	90022670 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
900226f6:	9b01      	ldr	r3, [sp, #4]
900226f8:	881b      	ldrh	r3, [r3, #0]
900226fa:	eba3 0308 	sub.w	r3, r3, r8
900226fe:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90022702:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90022706:	eba3 0308 	sub.w	r3, r3, r8
9002270a:	441c      	add	r4, r3
9002270c:	e7ac      	b.n	90022668 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
9002270e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90022712:	4282      	cmp	r2, r0
90022714:	d915      	bls.n	90022742 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
90022716:	eb00 060a 	add.w	r6, r0, sl
9002271a:	4286      	cmp	r6, r0
9002271c:	d906      	bls.n	9002272c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
9002271e:	f814 3b01 	ldrb.w	r3, [r4], #1
90022722:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
90022726:	f820 3b02 	strh.w	r3, [r0], #2
9002272a:	e7f6      	b.n	9002271a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
9002272c:	882b      	ldrh	r3, [r5, #0]
9002272e:	eba3 0308 	sub.w	r3, r3, r8
90022732:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90022736:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9002273a:	eba3 0308 	sub.w	r3, r3, r8
9002273e:	441c      	add	r4, r3
90022740:	e7e7      	b.n	90022712 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
90022742:	4b04      	ldr	r3, [pc, #16]	@ (90022754 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
90022744:	6818      	ldr	r0, [r3, #0]
90022746:	6803      	ldr	r3, [r0, #0]
90022748:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9002274a:	4798      	blx	r3
9002274c:	b007      	add	sp, #28
9002274e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022752:	bf00      	nop
90022754:	24021c0c 	.word	0x24021c0c
90022758:	24021c06 	.word	0x24021c06

9002275c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
9002275c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022760:	b091      	sub	sp, #68	@ 0x44
90022762:	4680      	mov	r8, r0
90022764:	460f      	mov	r7, r1
90022766:	4614      	mov	r4, r2
90022768:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
9002276c:	2d00      	cmp	r5, #0
9002276e:	d051      	beq.n	90022814 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
90022770:	6810      	ldr	r0, [r2, #0]
90022772:	ae0c      	add	r6, sp, #48	@ 0x30
90022774:	6851      	ldr	r1, [r2, #4]
90022776:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 90022978 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
9002277a:	c603      	stmia	r6!, {r0, r1}
9002277c:	6818      	ldr	r0, [r3, #0]
9002277e:	ae0e      	add	r6, sp, #56	@ 0x38
90022780:	6859      	ldr	r1, [r3, #4]
90022782:	c603      	stmia	r6!, {r0, r1}
90022784:	a80c      	add	r0, sp, #48	@ 0x30
90022786:	f7f6 faf5 	bl	90018d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002278a:	4621      	mov	r1, r4
9002278c:	a80e      	add	r0, sp, #56	@ 0x38
9002278e:	f7f6 fb35 	bl	90018dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90022792:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
90022796:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
9002279a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
9002279e:	f8d9 0000 	ldr.w	r0, [r9]
900227a2:	fb11 2103 	smlabb	r1, r1, r3, r2
900227a6:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
900227aa:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
900227ae:	eb08 0401 	add.w	r4, r8, r1
900227b2:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
900227b6:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 9002297c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
900227ba:	440a      	add	r2, r1
900227bc:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
900227c0:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
900227c4:	4413      	add	r3, r2
900227c6:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
900227ca:	6803      	ldr	r3, [r0, #0]
900227cc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900227ce:	4798      	blx	r3
900227d0:	f010 0f80 	tst.w	r0, #128	@ 0x80
900227d4:	f8d9 0000 	ldr.w	r0, [r9]
900227d8:	d01f      	beq.n	9002281a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
900227da:	2200      	movs	r2, #0
900227dc:	6801      	ldr	r1, [r0, #0]
900227de:	b2b6      	uxth	r6, r6
900227e0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
900227e4:	e9cd 2208 	strd	r2, r2, [sp, #32]
900227e8:	220b      	movs	r2, #11
900227ea:	9207      	str	r2, [sp, #28]
900227ec:	f8b8 2000 	ldrh.w	r2, [r8]
900227f0:	9601      	str	r6, [sp, #4]
900227f2:	9206      	str	r2, [sp, #24]
900227f4:	2201      	movs	r2, #1
900227f6:	e9cd 5204 	strd	r5, r2, [sp, #16]
900227fa:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
900227fe:	9203      	str	r2, [sp, #12]
90022800:	fa1f f28a 	uxth.w	r2, sl
90022804:	9202      	str	r2, [sp, #8]
90022806:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
9002280a:	9200      	str	r2, [sp, #0]
9002280c:	463a      	mov	r2, r7
9002280e:	6c0d      	ldr	r5, [r1, #64]	@ 0x40
90022810:	4621      	mov	r1, r4
90022812:	47a8      	blx	r5
90022814:	b011      	add	sp, #68	@ 0x44
90022816:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002281a:	6803      	ldr	r3, [r0, #0]
9002281c:	ea4f 0946 	mov.w	r9, r6, lsl #1
90022820:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90022822:	4798      	blx	r3
90022824:	f8b8 2000 	ldrh.w	r2, [r8]
90022828:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
9002282c:	2dff      	cmp	r5, #255	@ 0xff
9002282e:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
90022832:	fb0a fa02 	mul.w	sl, sl, r2
90022836:	fb02 1303 	mla	r3, r2, r3, r1
9002283a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9002283e:	d062      	beq.n	90022906 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
90022840:	ea6f 0c05 	mvn.w	ip, r5
90022844:	eb00 034a 	add.w	r3, r0, sl, lsl #1
90022848:	b2ad      	uxth	r5, r5
9002284a:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
9002284e:	fa5f fc8c 	uxtb.w	ip, ip
90022852:	930a      	str	r3, [sp, #40]	@ 0x28
90022854:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022856:	4298      	cmp	r0, r3
90022858:	f080 8085 	bcs.w	90022966 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9002285c:	eb00 0b09 	add.w	fp, r0, r9
90022860:	4558      	cmp	r0, fp
90022862:	d246      	bcs.n	900228f2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
90022864:	f814 eb01 	ldrb.w	lr, [r4], #1
90022868:	2303      	movs	r3, #3
9002286a:	2204      	movs	r2, #4
9002286c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
90022870:	8803      	ldrh	r3, [r0, #0]
90022872:	eb07 0a0e 	add.w	sl, r7, lr
90022876:	1219      	asrs	r1, r3, #8
90022878:	10da      	asrs	r2, r3, #3
9002287a:	f817 e00e 	ldrb.w	lr, [r7, lr]
9002287e:	f89a 8002 	ldrb.w	r8, [sl, #2]
90022882:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90022886:	00db      	lsls	r3, r3, #3
90022888:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
9002288c:	fb18 f805 	smulbb	r8, r8, r5
90022890:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
90022894:	fb1e fe05 	smulbb	lr, lr, r5
90022898:	b2db      	uxtb	r3, r3
9002289a:	fb01 810c 	mla	r1, r1, ip, r8
9002289e:	f89a 8001 	ldrb.w	r8, [sl, #1]
900228a2:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
900228a6:	fb18 f805 	smulbb	r8, r8, r5
900228aa:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
900228ae:	b289      	uxth	r1, r1
900228b0:	fb02 820c 	mla	r2, r2, ip, r8
900228b4:	fb03 e30c 	mla	r3, r3, ip, lr
900228b8:	f101 0801 	add.w	r8, r1, #1
900228bc:	b292      	uxth	r2, r2
900228be:	b29b      	uxth	r3, r3
900228c0:	eb08 2111 	add.w	r1, r8, r1, lsr #8
900228c4:	f102 0801 	add.w	r8, r2, #1
900228c8:	f103 0e01 	add.w	lr, r3, #1
900228cc:	eb08 2812 	add.w	r8, r8, r2, lsr #8
900228d0:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
900228d4:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
900228d8:	ea4f 1858 	mov.w	r8, r8, lsr #5
900228dc:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
900228e0:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
900228e4:	ea4e 0101 	orr.w	r1, lr, r1
900228e8:	ea41 0108 	orr.w	r1, r1, r8
900228ec:	f820 1b02 	strh.w	r1, [r0], #2
900228f0:	e7b6      	b.n	90022860 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
900228f2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900228f4:	881b      	ldrh	r3, [r3, #0]
900228f6:	1b9b      	subs	r3, r3, r6
900228f8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900228fc:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
90022900:	1b9b      	subs	r3, r3, r6
90022902:	441c      	add	r4, r3
90022904:	e7a6      	b.n	90022854 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
90022906:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
9002290a:	2203      	movs	r2, #3
9002290c:	2504      	movs	r5, #4
9002290e:	4919      	ldr	r1, [pc, #100]	@ (90022974 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
90022910:	4550      	cmp	r0, sl
90022912:	d228      	bcs.n	90022966 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
90022914:	eb00 0c09 	add.w	ip, r0, r9
90022918:	4560      	cmp	r0, ip
9002291a:	4623      	mov	r3, r4
9002291c:	d219      	bcs.n	90022952 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
9002291e:	f893 e000 	ldrb.w	lr, [r3]
90022922:	3401      	adds	r4, #1
90022924:	fb12 5e0e 	smlabb	lr, r2, lr, r5
90022928:	eb07 0b0e 	add.w	fp, r7, lr
9002292c:	f817 e00e 	ldrb.w	lr, [r7, lr]
90022930:	f89b 3002 	ldrb.w	r3, [fp, #2]
90022934:	f89b b001 	ldrb.w	fp, [fp, #1]
90022938:	ea01 2303 	and.w	r3, r1, r3, lsl #8
9002293c:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
90022940:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
90022944:	ea43 030b 	orr.w	r3, r3, fp
90022948:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
9002294c:	f820 3b02 	strh.w	r3, [r0], #2
90022950:	e7e2      	b.n	90022918 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
90022952:	f8b8 3000 	ldrh.w	r3, [r8]
90022956:	1b9b      	subs	r3, r3, r6
90022958:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9002295c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
90022960:	1b9b      	subs	r3, r3, r6
90022962:	441c      	add	r4, r3
90022964:	e7d4      	b.n	90022910 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
90022966:	4b04      	ldr	r3, [pc, #16]	@ (90022978 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
90022968:	6818      	ldr	r0, [r3, #0]
9002296a:	6803      	ldr	r3, [r0, #0]
9002296c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9002296e:	4798      	blx	r3
90022970:	e750      	b.n	90022814 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
90022972:	bf00      	nop
90022974:	fffff800 	.word	0xfffff800
90022978:	24021c0c 	.word	0x24021c0c
9002297c:	24021c06 	.word	0x24021c06

90022980 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
90022980:	b4f0      	push	{r4, r5, r6, r7}
90022982:	460c      	mov	r4, r1
90022984:	4611      	mov	r1, r2
90022986:	f89d 5014 	ldrb.w	r5, [sp, #20]
9002298a:	461a      	mov	r2, r3
9002298c:	780f      	ldrb	r7, [r1, #0]
9002298e:	9b04      	ldr	r3, [sp, #16]
90022990:	2f01      	cmp	r7, #1
90022992:	784e      	ldrb	r6, [r1, #1]
90022994:	d038      	beq.n	90022a08 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
90022996:	d31f      	bcc.n	900229d8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
90022998:	2f02      	cmp	r7, #2
9002299a:	d14d      	bne.n	90022a38 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9002299c:	2e03      	cmp	r6, #3
9002299e:	d84b      	bhi.n	90022a38 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
900229a0:	e8df f006 	tbb	[pc, r6]
900229a4:	17140702 	.word	0x17140702
900229a8:	9504      	str	r5, [sp, #16]
900229aa:	4620      	mov	r0, r4
900229ac:	bcf0      	pop	{r4, r5, r6, r7}
900229ae:	f7ff be09 	b.w	900225c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
900229b2:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
900229b4:	2800      	cmp	r0, #0
900229b6:	d03f      	beq.n	90022a38 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
900229b8:	6806      	ldr	r6, [r0, #0]
900229ba:	e9cd 3504 	strd	r3, r5, [sp, #16]
900229be:	68b5      	ldr	r5, [r6, #8]
900229c0:	4613      	mov	r3, r2
900229c2:	46ac      	mov	ip, r5
900229c4:	460a      	mov	r2, r1
900229c6:	4621      	mov	r1, r4
900229c8:	bcf0      	pop	{r4, r5, r6, r7}
900229ca:	4760      	bx	ip
900229cc:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
900229d0:	e7f0      	b.n	900229b4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
900229d2:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
900229d6:	e7ed      	b.n	900229b4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
900229d8:	2e03      	cmp	r6, #3
900229da:	d82d      	bhi.n	90022a38 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
900229dc:	e8df f006 	tbb	[pc, r6]
900229e0:	110e0702 	.word	0x110e0702
900229e4:	9504      	str	r5, [sp, #16]
900229e6:	4620      	mov	r0, r4
900229e8:	bcf0      	pop	{r4, r5, r6, r7}
900229ea:	f7ff bd05 	b.w	900223f8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
900229ee:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
900229f0:	b310      	cbz	r0, 90022a38 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
900229f2:	6806      	ldr	r6, [r0, #0]
900229f4:	e9cd 3504 	strd	r3, r5, [sp, #16]
900229f8:	68f5      	ldr	r5, [r6, #12]
900229fa:	e7e1      	b.n	900229c0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
900229fc:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
90022a00:	e7f6      	b.n	900229f0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
90022a02:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
90022a06:	e7f3      	b.n	900229f0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
90022a08:	2e03      	cmp	r6, #3
90022a0a:	d815      	bhi.n	90022a38 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90022a0c:	e8df f006 	tbb	[pc, r6]
90022a10:	110e0702 	.word	0x110e0702
90022a14:	9504      	str	r5, [sp, #16]
90022a16:	4620      	mov	r0, r4
90022a18:	bcf0      	pop	{r4, r5, r6, r7}
90022a1a:	f7ff be9f 	b.w	9002275c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
90022a1e:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
90022a20:	b150      	cbz	r0, 90022a38 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90022a22:	6806      	ldr	r6, [r0, #0]
90022a24:	e9cd 3504 	strd	r3, r5, [sp, #16]
90022a28:	6935      	ldr	r5, [r6, #16]
90022a2a:	e7c9      	b.n	900229c0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
90022a2c:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
90022a30:	e7f6      	b.n	90022a20 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
90022a32:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
90022a36:	e7f3      	b.n	90022a20 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
90022a38:	bcf0      	pop	{r4, r5, r6, r7}
90022a3a:	4770      	bx	lr

90022a3c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
90022a3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022a40:	b087      	sub	sp, #28
90022a42:	4604      	mov	r4, r0
90022a44:	460e      	mov	r6, r1
90022a46:	6810      	ldr	r0, [r2, #0]
90022a48:	6851      	ldr	r1, [r2, #4]
90022a4a:	ad02      	add	r5, sp, #8
90022a4c:	4617      	mov	r7, r2
90022a4e:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
90022a52:	f8df 9230 	ldr.w	r9, [pc, #560]	@ 90022c84 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
90022a56:	c503      	stmia	r5!, {r0, r1}
90022a58:	6818      	ldr	r0, [r3, #0]
90022a5a:	ad04      	add	r5, sp, #16
90022a5c:	6859      	ldr	r1, [r3, #4]
90022a5e:	c503      	stmia	r5!, {r0, r1}
90022a60:	a802      	add	r0, sp, #8
90022a62:	f7f6 f987 	bl	90018d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90022a66:	4639      	mov	r1, r7
90022a68:	a804      	add	r0, sp, #16
90022a6a:	f7f6 f9c7 	bl	90018dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90022a6e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90022a72:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90022a76:	f8bd 100c 	ldrh.w	r1, [sp, #12]
90022a7a:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
90022a7e:	fb11 2103 	smlabb	r1, r1, r3, r2
90022a82:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
90022a86:	eb04 0441 	add.w	r4, r4, r1, lsl #1
90022a8a:	440e      	add	r6, r1
90022a8c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
90022a90:	440a      	add	r2, r1
90022a92:	f8ad 2010 	strh.w	r2, [sp, #16]
90022a96:	f8bd 200a 	ldrh.w	r2, [sp, #10]
90022a9a:	4413      	add	r3, r2
90022a9c:	f8ad 3012 	strh.w	r3, [sp, #18]
90022aa0:	4b77      	ldr	r3, [pc, #476]	@ (90022c80 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
90022aa2:	6818      	ldr	r0, [r3, #0]
90022aa4:	6803      	ldr	r3, [r0, #0]
90022aa6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90022aa8:	4798      	blx	r3
90022aaa:	f8b9 b000 	ldrh.w	fp, [r9]
90022aae:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90022ab2:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90022ab6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90022aba:	fb05 f50b 	mul.w	r5, r5, fp
90022abe:	fb0b 2303 	mla	r3, fp, r3, r2
90022ac2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90022ac6:	ea4f 0348 	mov.w	r3, r8, lsl #1
90022aca:	9300      	str	r3, [sp, #0]
90022acc:	d069      	beq.n	90022ba2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
90022ace:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
90022ad2:	4558      	cmp	r0, fp
90022ad4:	f080 80cc 	bcs.w	90022c70 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
90022ad8:	9b00      	ldr	r3, [sp, #0]
90022ada:	4631      	mov	r1, r6
90022adc:	18c3      	adds	r3, r0, r3
90022ade:	9301      	str	r3, [sp, #4]
90022ae0:	9b01      	ldr	r3, [sp, #4]
90022ae2:	4298      	cmp	r0, r3
90022ae4:	d24f      	bcs.n	90022b86 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
90022ae6:	f811 2b01 	ldrb.w	r2, [r1], #1
90022aea:	2a00      	cmp	r2, #0
90022aec:	d048      	beq.n	90022b80 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
90022aee:	fb0a f202 	mul.w	r2, sl, r2
90022af2:	1c53      	adds	r3, r2, #1
90022af4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90022af8:	121b      	asrs	r3, r3, #8
90022afa:	d041      	beq.n	90022b80 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
90022afc:	8802      	ldrh	r2, [r0, #0]
90022afe:	b29e      	uxth	r6, r3
90022b00:	f8b4 c000 	ldrh.w	ip, [r4]
90022b04:	43db      	mvns	r3, r3
90022b06:	1215      	asrs	r5, r2, #8
90022b08:	b2db      	uxtb	r3, r3
90022b0a:	ea4f 272c 	mov.w	r7, ip, asr #8
90022b0e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90022b12:	ea4f 0ee2 	mov.w	lr, r2, asr #3
90022b16:	fb15 f503 	smulbb	r5, r5, r3
90022b1a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90022b1e:	00d2      	lsls	r2, r2, #3
90022b20:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
90022b24:	fb07 5706 	mla	r7, r7, r6, r5
90022b28:	ea4f 05ec 	mov.w	r5, ip, asr #3
90022b2c:	b2d2      	uxtb	r2, r2
90022b2e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90022b32:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90022b36:	fb1e fe03 	smulbb	lr, lr, r3
90022b3a:	b2bf      	uxth	r7, r7
90022b3c:	fb12 f203 	smulbb	r2, r2, r3
90022b40:	fa5f fc8c 	uxtb.w	ip, ip
90022b44:	fb05 e506 	mla	r5, r5, r6, lr
90022b48:	f107 0e01 	add.w	lr, r7, #1
90022b4c:	fb0c 2c06 	mla	ip, ip, r6, r2
90022b50:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
90022b54:	fa1f fc8c 	uxth.w	ip, ip
90022b58:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
90022b5c:	b2ad      	uxth	r5, r5
90022b5e:	f10c 0701 	add.w	r7, ip, #1
90022b62:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90022b66:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90022b6a:	ea47 070e 	orr.w	r7, r7, lr
90022b6e:	f105 0e01 	add.w	lr, r5, #1
90022b72:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
90022b76:	096d      	lsrs	r5, r5, #5
90022b78:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90022b7c:	432f      	orrs	r7, r5
90022b7e:	8007      	strh	r7, [r0, #0]
90022b80:	3002      	adds	r0, #2
90022b82:	3402      	adds	r4, #2
90022b84:	e7ac      	b.n	90022ae0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
90022b86:	f8b9 3000 	ldrh.w	r3, [r9]
90022b8a:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
90022b8e:	eba3 0308 	sub.w	r3, r3, r8
90022b92:	eba6 0608 	sub.w	r6, r6, r8
90022b96:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90022b9a:	eb04 0446 	add.w	r4, r4, r6, lsl #1
90022b9e:	440e      	add	r6, r1
90022ba0:	e797      	b.n	90022ad2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
90022ba2:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90022ba6:	42a8      	cmp	r0, r5
90022ba8:	d262      	bcs.n	90022c70 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
90022baa:	9b00      	ldr	r3, [sp, #0]
90022bac:	4631      	mov	r1, r6
90022bae:	eb00 0b03 	add.w	fp, r0, r3
90022bb2:	4558      	cmp	r0, fp
90022bb4:	d24e      	bcs.n	90022c54 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
90022bb6:	f811 3b01 	ldrb.w	r3, [r1], #1
90022bba:	b12b      	cbz	r3, 90022bc8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
90022bbc:	2bff      	cmp	r3, #255	@ 0xff
90022bbe:	f8b4 e000 	ldrh.w	lr, [r4]
90022bc2:	d104      	bne.n	90022bce <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
90022bc4:	f8a0 e000 	strh.w	lr, [r0]
90022bc8:	3002      	adds	r0, #2
90022bca:	3402      	adds	r4, #2
90022bcc:	e7f1      	b.n	90022bb2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
90022bce:	8802      	ldrh	r2, [r0, #0]
90022bd0:	b29f      	uxth	r7, r3
90022bd2:	43db      	mvns	r3, r3
90022bd4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
90022bd8:	1216      	asrs	r6, r2, #8
90022bda:	b2db      	uxtb	r3, r3
90022bdc:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90022be0:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
90022be4:	ea4f 0ae2 	mov.w	sl, r2, asr #3
90022be8:	00d2      	lsls	r2, r2, #3
90022bea:	fb16 f603 	smulbb	r6, r6, r3
90022bee:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
90022bf2:	b2d2      	uxtb	r2, r2
90022bf4:	fb0c 6c07 	mla	ip, ip, r7, r6
90022bf8:	ea4f 06ee 	mov.w	r6, lr, asr #3
90022bfc:	fb1a fa03 	smulbb	sl, sl, r3
90022c00:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90022c04:	fa1f fc8c 	uxth.w	ip, ip
90022c08:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90022c0c:	fb12 f303 	smulbb	r3, r2, r3
90022c10:	fa5f fe8e 	uxtb.w	lr, lr
90022c14:	fb06 a607 	mla	r6, r6, r7, sl
90022c18:	f10c 0201 	add.w	r2, ip, #1
90022c1c:	fb0e 3307 	mla	r3, lr, r7, r3
90022c20:	b2b6      	uxth	r6, r6
90022c22:	b29b      	uxth	r3, r3
90022c24:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
90022c28:	f106 0a01 	add.w	sl, r6, #1
90022c2c:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
90022c30:	f103 0c01 	add.w	ip, r3, #1
90022c34:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
90022c38:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90022c3c:	0976      	lsrs	r6, r6, #5
90022c3e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90022c42:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
90022c46:	ea4c 0c02 	orr.w	ip, ip, r2
90022c4a:	ea4c 0c06 	orr.w	ip, ip, r6
90022c4e:	f8a0 c000 	strh.w	ip, [r0]
90022c52:	e7b9      	b.n	90022bc8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
90022c54:	f8b9 3000 	ldrh.w	r3, [r9]
90022c58:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
90022c5c:	eba3 0308 	sub.w	r3, r3, r8
90022c60:	eba6 0608 	sub.w	r6, r6, r8
90022c64:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90022c68:	eb04 0446 	add.w	r4, r4, r6, lsl #1
90022c6c:	440e      	add	r6, r1
90022c6e:	e79a      	b.n	90022ba6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
90022c70:	4b03      	ldr	r3, [pc, #12]	@ (90022c80 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
90022c72:	6818      	ldr	r0, [r3, #0]
90022c74:	6803      	ldr	r3, [r0, #0]
90022c76:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90022c78:	4798      	blx	r3
90022c7a:	b007      	add	sp, #28
90022c7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022c80:	24021c0c 	.word	0x24021c0c
90022c84:	24021c06 	.word	0x24021c06

90022c88 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
90022c88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022c8c:	b089      	sub	sp, #36	@ 0x24
90022c8e:	4607      	mov	r7, r0
90022c90:	4688      	mov	r8, r1
90022c92:	4692      	mov	sl, r2
90022c94:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
90022c98:	4699      	mov	r9, r3
90022c9a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90022c9c:	2e00      	cmp	r6, #0
90022c9e:	d048      	beq.n	90022d32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90022ca0:	4608      	mov	r0, r1
90022ca2:	f7fa f813 	bl	9001cccc <_ZNK8touchgfx6Bitmap8getWidthEv>
90022ca6:	4605      	mov	r5, r0
90022ca8:	4640      	mov	r0, r8
90022caa:	f7fa f843 	bl	9001cd34 <_ZNK8touchgfx6Bitmap9getHeightEv>
90022cae:	f8ad 000e 	strh.w	r0, [sp, #14]
90022cb2:	4640      	mov	r0, r8
90022cb4:	f8ad a008 	strh.w	sl, [sp, #8]
90022cb8:	f8ad 500c 	strh.w	r5, [sp, #12]
90022cbc:	f8ad 900a 	strh.w	r9, [sp, #10]
90022cc0:	f7fa f8f6 	bl	9001ceb0 <_ZNK8touchgfx6Bitmap7getDataEv>
90022cc4:	4605      	mov	r5, r0
90022cc6:	4640      	mov	r0, r8
90022cc8:	f7fa f922 	bl	9001cf10 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
90022ccc:	4682      	mov	sl, r0
90022cce:	4640      	mov	r0, r8
90022cd0:	f7fa f972 	bl	9001cfb8 <_ZNK8touchgfx6Bitmap9getFormatEv>
90022cd4:	2810      	cmp	r0, #16
90022cd6:	d82c      	bhi.n	90022d32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90022cd8:	e8df f010 	tbh	[pc, r0, lsl #1]
90022cdc:	00ba00ca 	.word	0x00ba00ca
90022ce0:	002b0011 	.word	0x002b0011
90022ce4:	002b002b 	.word	0x002b002b
90022ce8:	002b002b 	.word	0x002b002b
90022cec:	002b002b 	.word	0x002b002b
90022cf0:	00c1002b 	.word	0x00c1002b
90022cf4:	002b002b 	.word	0x002b002b
90022cf8:	002b0180 	.word	0x002b0180
90022cfc:	0173      	.short	0x0173
90022cfe:	4bbc      	ldr	r3, [pc, #752]	@ (90022ff0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
90022d00:	6818      	ldr	r0, [r3, #0]
90022d02:	6803      	ldr	r3, [r0, #0]
90022d04:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90022d06:	4798      	blx	r3
90022d08:	2eff      	cmp	r6, #255	@ 0xff
90022d0a:	d101      	bne.n	90022d10 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
90022d0c:	0683      	lsls	r3, r0, #26
90022d0e:	d506      	bpl.n	90022d1e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
90022d10:	4633      	mov	r3, r6
90022d12:	4622      	mov	r2, r4
90022d14:	a902      	add	r1, sp, #8
90022d16:	4628      	mov	r0, r5
90022d18:	f7ff f8fc 	bl	90021f14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90022d1c:	e009      	b.n	90022d32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90022d1e:	4640      	mov	r0, r8
90022d20:	f7fa f88e 	bl	9001ce40 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90022d24:	b940      	cbnz	r0, 90022d38 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
90022d26:	4623      	mov	r3, r4
90022d28:	aa02      	add	r2, sp, #8
90022d2a:	4629      	mov	r1, r5
90022d2c:	4638      	mov	r0, r7
90022d2e:	f7ff f9d7 	bl	900220e0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
90022d32:	b009      	add	sp, #36	@ 0x24
90022d34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022d38:	f10d 0918 	add.w	r9, sp, #24
90022d3c:	4641      	mov	r1, r8
90022d3e:	f10d 0810 	add.w	r8, sp, #16
90022d42:	4648      	mov	r0, r9
90022d44:	f7fa f82a 	bl	9001cd9c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90022d48:	e899 0003 	ldmia.w	r9, {r0, r1}
90022d4c:	e888 0003 	stmia.w	r8, {r0, r1}
90022d50:	4640      	mov	r0, r8
90022d52:	4621      	mov	r1, r4
90022d54:	f7ef fd1a 	bl	9001278c <_ZN8touchgfx4RectaNERKS0_>
90022d58:	4640      	mov	r0, r8
90022d5a:	f7ef fd5a 	bl	90012812 <_ZNK8touchgfx4Rect7isEmptyEv>
90022d5e:	2800      	cmp	r0, #0
90022d60:	d1d6      	bne.n	90022d10 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
90022d62:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90022d66:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90022d6a:	4293      	cmp	r3, r2
90022d6c:	dd12      	ble.n	90022d94 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
90022d6e:	1a9b      	subs	r3, r3, r2
90022d70:	f9b4 0000 	ldrsh.w	r0, [r4]
90022d74:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90022d78:	f8ad 0018 	strh.w	r0, [sp, #24]
90022d7c:	4628      	mov	r0, r5
90022d7e:	f8ad 201a 	strh.w	r2, [sp, #26]
90022d82:	464a      	mov	r2, r9
90022d84:	f8ad 101c 	strh.w	r1, [sp, #28]
90022d88:	a902      	add	r1, sp, #8
90022d8a:	f8ad 301e 	strh.w	r3, [sp, #30]
90022d8e:	4633      	mov	r3, r6
90022d90:	f7ff f8c0 	bl	90021f14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90022d94:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
90022d98:	f9b4 2000 	ldrsh.w	r2, [r4]
90022d9c:	4293      	cmp	r3, r2
90022d9e:	dd12      	ble.n	90022dc6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
90022da0:	1a9b      	subs	r3, r3, r2
90022da2:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
90022da6:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
90022daa:	f8ad 2018 	strh.w	r2, [sp, #24]
90022dae:	464a      	mov	r2, r9
90022db0:	f8ad 001a 	strh.w	r0, [sp, #26]
90022db4:	4628      	mov	r0, r5
90022db6:	f8ad 301c 	strh.w	r3, [sp, #28]
90022dba:	23ff      	movs	r3, #255	@ 0xff
90022dbc:	f8ad 101e 	strh.w	r1, [sp, #30]
90022dc0:	a902      	add	r1, sp, #8
90022dc2:	f7ff f8a7 	bl	90021f14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90022dc6:	4643      	mov	r3, r8
90022dc8:	aa02      	add	r2, sp, #8
90022dca:	4629      	mov	r1, r5
90022dcc:	4638      	mov	r0, r7
90022dce:	f7ff f987 	bl	900220e0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
90022dd2:	88a2      	ldrh	r2, [r4, #4]
90022dd4:	8823      	ldrh	r3, [r4, #0]
90022dd6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
90022dda:	4413      	add	r3, r2
90022ddc:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90022de0:	440a      	add	r2, r1
90022de2:	b29b      	uxth	r3, r3
90022de4:	b292      	uxth	r2, r2
90022de6:	b218      	sxth	r0, r3
90022de8:	b211      	sxth	r1, r2
90022dea:	4288      	cmp	r0, r1
90022dec:	dd12      	ble.n	90022e14 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
90022dee:	1a9b      	subs	r3, r3, r2
90022df0:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
90022df4:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
90022df8:	464a      	mov	r2, r9
90022dfa:	f8ad 1018 	strh.w	r1, [sp, #24]
90022dfe:	a902      	add	r1, sp, #8
90022e00:	f8ad 301c 	strh.w	r3, [sp, #28]
90022e04:	23ff      	movs	r3, #255	@ 0xff
90022e06:	f8ad 001e 	strh.w	r0, [sp, #30]
90022e0a:	4628      	mov	r0, r5
90022e0c:	f8ad 601a 	strh.w	r6, [sp, #26]
90022e10:	f7ff f880 	bl	90021f14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90022e14:	88e2      	ldrh	r2, [r4, #6]
90022e16:	8863      	ldrh	r3, [r4, #2]
90022e18:	f8bd 1016 	ldrh.w	r1, [sp, #22]
90022e1c:	4413      	add	r3, r2
90022e1e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
90022e22:	440a      	add	r2, r1
90022e24:	b29b      	uxth	r3, r3
90022e26:	b292      	uxth	r2, r2
90022e28:	b218      	sxth	r0, r3
90022e2a:	b211      	sxth	r1, r2
90022e2c:	4288      	cmp	r0, r1
90022e2e:	dd80      	ble.n	90022d32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90022e30:	1a9b      	subs	r3, r3, r2
90022e32:	f9b4 6000 	ldrsh.w	r6, [r4]
90022e36:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90022e3a:	464a      	mov	r2, r9
90022e3c:	f8ad 301e 	strh.w	r3, [sp, #30]
90022e40:	23ff      	movs	r3, #255	@ 0xff
90022e42:	f8ad 6018 	strh.w	r6, [sp, #24]
90022e46:	f8ad 101a 	strh.w	r1, [sp, #26]
90022e4a:	f8ad 001c 	strh.w	r0, [sp, #28]
90022e4e:	e761      	b.n	90022d14 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
90022e50:	4633      	mov	r3, r6
90022e52:	4622      	mov	r2, r4
90022e54:	a902      	add	r1, sp, #8
90022e56:	4628      	mov	r0, r5
90022e58:	f7ff f9b2 	bl	900221c0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
90022e5c:	e769      	b.n	90022d32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90022e5e:	e9cd 4600 	strd	r4, r6, [sp]
90022e62:	ab02      	add	r3, sp, #8
90022e64:	4652      	mov	r2, sl
90022e66:	4629      	mov	r1, r5
90022e68:	4638      	mov	r0, r7
90022e6a:	f7ff fd89 	bl	90022980 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
90022e6e:	e760      	b.n	90022d32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90022e70:	4640      	mov	r0, r8
90022e72:	f7f9 ffe5 	bl	9001ce40 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90022e76:	b948      	cbnz	r0, 90022e8c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
90022e78:	683b      	ldr	r3, [r7, #0]
90022e7a:	aa02      	add	r2, sp, #8
90022e7c:	4629      	mov	r1, r5
90022e7e:	e9cd 6000 	strd	r6, r0, [sp]
90022e82:	4638      	mov	r0, r7
90022e84:	68de      	ldr	r6, [r3, #12]
90022e86:	4623      	mov	r3, r4
90022e88:	47b0      	blx	r6
90022e8a:	e752      	b.n	90022d32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90022e8c:	f10d 0918 	add.w	r9, sp, #24
90022e90:	4641      	mov	r1, r8
90022e92:	f10d 0810 	add.w	r8, sp, #16
90022e96:	4648      	mov	r0, r9
90022e98:	f7f9 ff80 	bl	9001cd9c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90022e9c:	e899 0003 	ldmia.w	r9, {r0, r1}
90022ea0:	e888 0003 	stmia.w	r8, {r0, r1}
90022ea4:	4640      	mov	r0, r8
90022ea6:	4621      	mov	r1, r4
90022ea8:	f7ef fc70 	bl	9001278c <_ZN8touchgfx4RectaNERKS0_>
90022eac:	4640      	mov	r0, r8
90022eae:	f7ef fcb0 	bl	90012812 <_ZNK8touchgfx4Rect7isEmptyEv>
90022eb2:	b138      	cbz	r0, 90022ec4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
90022eb4:	4623      	mov	r3, r4
90022eb6:	9600      	str	r6, [sp, #0]
90022eb8:	aa02      	add	r2, sp, #8
90022eba:	4651      	mov	r1, sl
90022ebc:	4628      	mov	r0, r5
90022ebe:	f7ff fdbd 	bl	90022a3c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90022ec2:	e736      	b.n	90022d32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90022ec4:	683b      	ldr	r3, [r7, #0]
90022ec6:	aa02      	add	r2, sp, #8
90022ec8:	4629      	mov	r1, r5
90022eca:	e9cd 6000 	strd	r6, r0, [sp]
90022ece:	4638      	mov	r0, r7
90022ed0:	f8d3 b00c 	ldr.w	fp, [r3, #12]
90022ed4:	4643      	mov	r3, r8
90022ed6:	47d8      	blx	fp
90022ed8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90022edc:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90022ee0:	4293      	cmp	r3, r2
90022ee2:	dd13      	ble.n	90022f0c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
90022ee4:	f9b4 0000 	ldrsh.w	r0, [r4]
90022ee8:	1a9b      	subs	r3, r3, r2
90022eea:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90022eee:	f8ad 0018 	strh.w	r0, [sp, #24]
90022ef2:	4628      	mov	r0, r5
90022ef4:	f8ad 201a 	strh.w	r2, [sp, #26]
90022ef8:	aa02      	add	r2, sp, #8
90022efa:	f8ad 101c 	strh.w	r1, [sp, #28]
90022efe:	4651      	mov	r1, sl
90022f00:	f8ad 301e 	strh.w	r3, [sp, #30]
90022f04:	464b      	mov	r3, r9
90022f06:	9600      	str	r6, [sp, #0]
90022f08:	f7ff fd98 	bl	90022a3c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90022f0c:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
90022f10:	f9b4 2000 	ldrsh.w	r2, [r4]
90022f14:	4293      	cmp	r3, r2
90022f16:	dd13      	ble.n	90022f40 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
90022f18:	1a9b      	subs	r3, r3, r2
90022f1a:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
90022f1e:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
90022f22:	f8ad 2018 	strh.w	r2, [sp, #24]
90022f26:	aa02      	add	r2, sp, #8
90022f28:	f8ad 001a 	strh.w	r0, [sp, #26]
90022f2c:	4628      	mov	r0, r5
90022f2e:	f8ad 301c 	strh.w	r3, [sp, #28]
90022f32:	464b      	mov	r3, r9
90022f34:	f8ad 101e 	strh.w	r1, [sp, #30]
90022f38:	4651      	mov	r1, sl
90022f3a:	9600      	str	r6, [sp, #0]
90022f3c:	f7ff fd7e 	bl	90022a3c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90022f40:	88a2      	ldrh	r2, [r4, #4]
90022f42:	8823      	ldrh	r3, [r4, #0]
90022f44:	f8bd 1014 	ldrh.w	r1, [sp, #20]
90022f48:	4413      	add	r3, r2
90022f4a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90022f4e:	440a      	add	r2, r1
90022f50:	b29b      	uxth	r3, r3
90022f52:	b292      	uxth	r2, r2
90022f54:	b218      	sxth	r0, r3
90022f56:	b211      	sxth	r1, r2
90022f58:	4288      	cmp	r0, r1
90022f5a:	dd13      	ble.n	90022f84 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
90022f5c:	1a9b      	subs	r3, r3, r2
90022f5e:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
90022f62:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
90022f66:	aa02      	add	r2, sp, #8
90022f68:	f8ad 1018 	strh.w	r1, [sp, #24]
90022f6c:	4651      	mov	r1, sl
90022f6e:	f8ad 301c 	strh.w	r3, [sp, #28]
90022f72:	464b      	mov	r3, r9
90022f74:	f8ad 001e 	strh.w	r0, [sp, #30]
90022f78:	4628      	mov	r0, r5
90022f7a:	9600      	str	r6, [sp, #0]
90022f7c:	f8ad 701a 	strh.w	r7, [sp, #26]
90022f80:	f7ff fd5c 	bl	90022a3c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90022f84:	88e2      	ldrh	r2, [r4, #6]
90022f86:	8863      	ldrh	r3, [r4, #2]
90022f88:	f8bd 1016 	ldrh.w	r1, [sp, #22]
90022f8c:	4413      	add	r3, r2
90022f8e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
90022f92:	440a      	add	r2, r1
90022f94:	b29b      	uxth	r3, r3
90022f96:	b292      	uxth	r2, r2
90022f98:	b218      	sxth	r0, r3
90022f9a:	b211      	sxth	r1, r2
90022f9c:	4288      	cmp	r0, r1
90022f9e:	f77f aec8 	ble.w	90022d32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90022fa2:	f9b4 7000 	ldrsh.w	r7, [r4]
90022fa6:	1a9b      	subs	r3, r3, r2
90022fa8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90022fac:	f8ad 301e 	strh.w	r3, [sp, #30]
90022fb0:	464b      	mov	r3, r9
90022fb2:	f8ad 7018 	strh.w	r7, [sp, #24]
90022fb6:	f8ad 101a 	strh.w	r1, [sp, #26]
90022fba:	f8ad 001c 	strh.w	r0, [sp, #28]
90022fbe:	9600      	str	r6, [sp, #0]
90022fc0:	e77a      	b.n	90022eb8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
90022fc2:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
90022fc6:	2800      	cmp	r0, #0
90022fc8:	f43f aeb3 	beq.w	90022d32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90022fcc:	6803      	ldr	r3, [r0, #0]
90022fce:	9600      	str	r6, [sp, #0]
90022fd0:	68de      	ldr	r6, [r3, #12]
90022fd2:	4623      	mov	r3, r4
90022fd4:	aa02      	add	r2, sp, #8
90022fd6:	4629      	mov	r1, r5
90022fd8:	47b0      	blx	r6
90022fda:	e6aa      	b.n	90022d32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90022fdc:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
90022fe0:	2800      	cmp	r0, #0
90022fe2:	f43f aea6 	beq.w	90022d32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90022fe6:	6803      	ldr	r3, [r0, #0]
90022fe8:	9600      	str	r6, [sp, #0]
90022fea:	689e      	ldr	r6, [r3, #8]
90022fec:	e7f1      	b.n	90022fd2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
90022fee:	bf00      	nop
90022ff0:	24021c0c 	.word	0x24021c0c

90022ff4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
90022ff4:	b180      	cbz	r0, 90023018 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
90022ff6:	2903      	cmp	r1, #3
90022ff8:	d81c      	bhi.n	90023034 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
90022ffa:	e8df f001 	tbb	[pc, r1]
90022ffe:	1d02      	.short	0x1d02
90023000:	1f08      	.short	0x1f08
90023002:	4b10      	ldr	r3, [pc, #64]	@ (90023044 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
90023004:	8818      	ldrh	r0, [r3, #0]
90023006:	f3c0 000e 	ubfx	r0, r0, #0, #15
9002300a:	4240      	negs	r0, r0
9002300c:	4770      	bx	lr
9002300e:	4b0d      	ldr	r3, [pc, #52]	@ (90023044 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
90023010:	8818      	ldrh	r0, [r3, #0]
90023012:	f3c0 000e 	ubfx	r0, r0, #0, #15
90023016:	4770      	bx	lr
90023018:	2903      	cmp	r1, #3
9002301a:	d80b      	bhi.n	90023034 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
9002301c:	a301      	add	r3, pc, #4	@ (adr r3, 90023024 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
9002301e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
90023022:	bf00      	nop
90023024:	90023039 	.word	0x90023039
90023028:	9002300f 	.word	0x9002300f
9002302c:	9002303d 	.word	0x9002303d
90023030:	90023003 	.word	0x90023003
90023034:	2000      	movs	r0, #0
90023036:	4770      	bx	lr
90023038:	2001      	movs	r0, #1
9002303a:	4770      	bx	lr
9002303c:	f04f 30ff 	mov.w	r0, #4294967295
90023040:	4770      	bx	lr
90023042:	bf00      	nop
90023044:	24021c06 	.word	0x24021c06

90023048 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
90023048:	b180      	cbz	r0, 9002306c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
9002304a:	2903      	cmp	r1, #3
9002304c:	d81c      	bhi.n	90023088 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
9002304e:	e8df f001 	tbb	[pc, r1]
90023052:	021d      	.short	0x021d
90023054:	071f      	.short	0x071f
90023056:	4b10      	ldr	r3, [pc, #64]	@ (90023098 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
90023058:	8818      	ldrh	r0, [r3, #0]
9002305a:	f3c0 000e 	ubfx	r0, r0, #0, #15
9002305e:	4770      	bx	lr
90023060:	4b0d      	ldr	r3, [pc, #52]	@ (90023098 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
90023062:	8818      	ldrh	r0, [r3, #0]
90023064:	f3c0 000e 	ubfx	r0, r0, #0, #15
90023068:	4240      	negs	r0, r0
9002306a:	4770      	bx	lr
9002306c:	2903      	cmp	r1, #3
9002306e:	d80b      	bhi.n	90023088 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
90023070:	a301      	add	r3, pc, #4	@ (adr r3, 90023078 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
90023072:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
90023076:	bf00      	nop
90023078:	90023057 	.word	0x90023057
9002307c:	90023091 	.word	0x90023091
90023080:	90023061 	.word	0x90023061
90023084:	9002308d 	.word	0x9002308d
90023088:	2000      	movs	r0, #0
9002308a:	4770      	bx	lr
9002308c:	2001      	movs	r0, #1
9002308e:	4770      	bx	lr
90023090:	f04f 30ff 	mov.w	r0, #4294967295
90023094:	4770      	bx	lr
90023096:	bf00      	nop
90023098:	24021c06 	.word	0x24021c06

9002309c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
9002309c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900230a0:	b099      	sub	sp, #100	@ 0x64
900230a2:	910d      	str	r1, [sp, #52]	@ 0x34
900230a4:	a914      	add	r1, sp, #80	@ 0x50
900230a6:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
900230aa:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
900230ae:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
900230b2:	9f28      	ldr	r7, [sp, #160]	@ 0xa0
900230b4:	f8dd 90a8 	ldr.w	r9, [sp, #168]	@ 0xa8
900230b8:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
900230bc:	e881 000c 	stmia.w	r1, {r2, r3}
900230c0:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
900230c4:	930b      	str	r3, [sp, #44]	@ 0x2c
900230c6:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
900230ca:	9310      	str	r3, [sp, #64]	@ 0x40
900230cc:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
900230d0:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
900230d4:	9308      	str	r3, [sp, #32]
900230d6:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
900230da:	9309      	str	r3, [sp, #36]	@ 0x24
900230dc:	7b4b      	ldrb	r3, [r1, #13]
900230de:	ea4f 1843 	mov.w	r8, r3, lsl #5
900230e2:	f408 7080 	and.w	r0, r8, #256	@ 0x100
900230e6:	f891 8006 	ldrb.w	r8, [r1, #6]
900230ea:	ea58 0800 	orrs.w	r8, r8, r0
900230ee:	f000 81d0 	beq.w	90023492 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
900230f2:	011b      	lsls	r3, r3, #4
900230f4:	79c8      	ldrb	r0, [r1, #7]
900230f6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
900230fa:	4303      	orrs	r3, r0
900230fc:	930c      	str	r3, [sp, #48]	@ 0x30
900230fe:	f000 81c8 	beq.w	90023492 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
90023102:	f991 3009 	ldrsb.w	r3, [r1, #9]
90023106:	b29b      	uxth	r3, r3
90023108:	2d00      	cmp	r5, #0
9002310a:	f000 812d 	beq.w	90023368 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2cc>
9002310e:	1aed      	subs	r5, r5, r3
90023110:	b2ad      	uxth	r5, r5
90023112:	0429      	lsls	r1, r5, #16
90023114:	d502      	bpl.n	9002311c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
90023116:	1b64      	subs	r4, r4, r5
90023118:	2500      	movs	r5, #0
9002311a:	b224      	sxth	r4, r4
9002311c:	f9b2 0000 	ldrsh.w	r0, [r2]
90023120:	8891      	ldrh	r1, [r2, #4]
90023122:	4284      	cmp	r4, r0
90023124:	b283      	uxth	r3, r0
90023126:	bfb8      	it	lt
90023128:	18ed      	addlt	r5, r5, r3
9002312a:	440b      	add	r3, r1
9002312c:	b21b      	sxth	r3, r3
9002312e:	bfb8      	it	lt
90023130:	1b2c      	sublt	r4, r5, r4
90023132:	930a      	str	r3, [sp, #40]	@ 0x28
90023134:	bfb8      	it	lt
90023136:	b2a5      	uxthlt	r5, r4
90023138:	88d3      	ldrh	r3, [r2, #6]
9002313a:	bfb8      	it	lt
9002313c:	4604      	movlt	r4, r0
9002313e:	8852      	ldrh	r2, [r2, #2]
90023140:	a814      	add	r0, sp, #80	@ 0x50
90023142:	4621      	mov	r1, r4
90023144:	4413      	add	r3, r2
90023146:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90023148:	b21b      	sxth	r3, r3
9002314a:	930f      	str	r3, [sp, #60]	@ 0x3c
9002314c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002314e:	930e      	str	r3, [sp, #56]	@ 0x38
90023150:	4bb2      	ldr	r3, [pc, #712]	@ (9002341c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
90023152:	f893 b000 	ldrb.w	fp, [r3]
90023156:	4653      	mov	r3, sl
90023158:	f7f5 fc81 	bl	90018a5e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
9002315c:	4621      	mov	r1, r4
9002315e:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
90023162:	4653      	mov	r3, sl
90023164:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90023166:	a814      	add	r0, sp, #80	@ 0x50
90023168:	f7f5 fc96 	bl	90018a98 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
9002316c:	a918      	add	r1, sp, #96	@ 0x60
9002316e:	f821 0d02 	strh.w	r0, [r1, #-2]!
90023172:	a817      	add	r0, sp, #92	@ 0x5c
90023174:	f7f5 fdbc 	bl	90018cf0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
90023178:	f1ba 0f00 	cmp.w	sl, #0
9002317c:	f040 80f7 	bne.w	9002336e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d2>
90023180:	f1bb 0f01 	cmp.w	fp, #1
90023184:	f040 80fb 	bne.w	9002337e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
90023188:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9002318a:	2b00      	cmp	r3, #0
9002318c:	f040 81a9 	bne.w	900234e2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x446>
90023190:	fa1f f288 	uxth.w	r2, r8
90023194:	b905      	cbnz	r5, 90023198 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
90023196:	b15e      	cbz	r6, 900231b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x114>
90023198:	fb06 5302 	mla	r3, r6, r2, r5
9002319c:	9808      	ldr	r0, [sp, #32]
9002319e:	4631      	mov	r1, r6
900231a0:	4343      	muls	r3, r0
900231a2:	f003 0607 	and.w	r6, r3, #7
900231a6:	eb07 07d3 	add.w	r7, r7, r3, lsr #3
900231aa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900231ac:	1a5b      	subs	r3, r3, r1
900231ae:	930e      	str	r3, [sp, #56]	@ 0x38
900231b0:	f10b 31ff 	add.w	r1, fp, #4294967295
900231b4:	424b      	negs	r3, r1
900231b6:	414b      	adcs	r3, r1
900231b8:	4651      	mov	r1, sl
900231ba:	4618      	mov	r0, r3
900231bc:	930c      	str	r3, [sp, #48]	@ 0x30
900231be:	f7ff ff19 	bl	90022ff4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
900231c2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900231c4:	4683      	mov	fp, r0
900231c6:	4618      	mov	r0, r3
900231c8:	f7ff ff3e 	bl	90023048 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
900231cc:	990f      	ldr	r1, [sp, #60]	@ 0x3c
900231ce:	4603      	mov	r3, r0
900231d0:	980b      	ldr	r0, [sp, #44]	@ 0x2c
900231d2:	eba1 0a00 	sub.w	sl, r1, r0
900231d6:	990e      	ldr	r1, [sp, #56]	@ 0x38
900231d8:	458a      	cmp	sl, r1
900231da:	bfa8      	it	ge
900231dc:	468a      	movge	sl, r1
900231de:	f1ba 0f00 	cmp.w	sl, #0
900231e2:	f340 8156 	ble.w	90023492 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
900231e6:	1b64      	subs	r4, r4, r5
900231e8:	990a      	ldr	r1, [sp, #40]	@ 0x28
900231ea:	1b0c      	subs	r4, r1, r4
900231ec:	4544      	cmp	r4, r8
900231ee:	bfd4      	ite	le
900231f0:	ebc5 0504 	rsble	r5, r5, r4
900231f4:	ebc5 0508 	rsbgt	r5, r5, r8
900231f8:	2d00      	cmp	r5, #0
900231fa:	f340 814a 	ble.w	90023492 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
900231fe:	1b52      	subs	r2, r2, r5
90023200:	9908      	ldr	r1, [sp, #32]
90023202:	434a      	muls	r2, r1
90023204:	920e      	str	r2, [sp, #56]	@ 0x38
90023206:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90023208:	2a00      	cmp	r2, #0
9002320a:	f040 8176 	bne.w	900234fa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45e>
9002320e:	4a84      	ldr	r2, [pc, #528]	@ (90023420 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
90023210:	930a      	str	r3, [sp, #40]	@ 0x28
90023212:	6810      	ldr	r0, [r2, #0]
90023214:	6802      	ldr	r2, [r0, #0]
90023216:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
90023218:	4790      	blx	r2
9002321a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002321c:	9908      	ldr	r1, [sp, #32]
9002321e:	2201      	movs	r2, #1
90023220:	408a      	lsls	r2, r1
90023222:	4980      	ldr	r1, [pc, #512]	@ (90023424 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
90023224:	3a01      	subs	r2, #1
90023226:	880c      	ldrh	r4, [r1, #0]
90023228:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	@ 0x5c
9002322c:	b2d2      	uxtb	r2, r2
9002322e:	920c      	str	r2, [sp, #48]	@ 0x30
90023230:	f9bd 205e 	ldrsh.w	r2, [sp, #94]	@ 0x5e
90023234:	fb04 1202 	mla	r2, r4, r2, r1
90023238:	ea4f 2419 	mov.w	r4, r9, lsr #8
9002323c:	ea4f 1159 	mov.w	r1, r9, lsr #5
90023240:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90023244:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90023248:	920a      	str	r2, [sp, #40]	@ 0x28
9002324a:	f3c9 4207 	ubfx	r2, r9, #16, #8
9002324e:	9212      	str	r2, [sp, #72]	@ 0x48
90023250:	b2e2      	uxtb	r2, r4
90023252:	9211      	str	r2, [sp, #68]	@ 0x44
90023254:	fa5f f289 	uxtb.w	r2, r9
90023258:	f3c9 09c4 	ubfx	r9, r9, #3, #5
9002325c:	9210      	str	r2, [sp, #64]	@ 0x40
9002325e:	4a72      	ldr	r2, [pc, #456]	@ (90023428 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>)
90023260:	4022      	ands	r2, r4
90023262:	430a      	orrs	r2, r1
90023264:	ea4f 014b 	mov.w	r1, fp, lsl #1
90023268:	fb05 3b1b 	mls	fp, r5, fp, r3
9002326c:	ea42 0209 	orr.w	r2, r2, r9
90023270:	460b      	mov	r3, r1
90023272:	910b      	str	r1, [sp, #44]	@ 0x2c
90023274:	b292      	uxth	r2, r2
90023276:	436b      	muls	r3, r5
90023278:	920f      	str	r2, [sp, #60]	@ 0x3c
9002327a:	eb03 034b 	add.w	r3, r3, fp, lsl #1
9002327e:	783a      	ldrb	r2, [r7, #0]
90023280:	9313      	str	r3, [sp, #76]	@ 0x4c
90023282:	4132      	asrs	r2, r6
90023284:	b2d2      	uxtb	r2, r2
90023286:	f11a 3aff 	adds.w	sl, sl, #4294967295
9002328a:	f0c0 814a 	bcc.w	90023522 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x486>
9002328e:	46a9      	mov	r9, r5
90023290:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
90023294:	f119 39ff 	adds.w	r9, r9, #4294967295
90023298:	f0c0 8133 	bcc.w	90023502 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x466>
9002329c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002329e:	4013      	ands	r3, r2
900232a0:	d054      	beq.n	9002334c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2b0>
900232a2:	20ff      	movs	r0, #255	@ 0xff
900232a4:	990c      	ldr	r1, [sp, #48]	@ 0x30
900232a6:	fb90 f1f1 	sdiv	r1, r0, r1
900232aa:	434b      	muls	r3, r1
900232ac:	2bfe      	cmp	r3, #254	@ 0xfe
900232ae:	dd03      	ble.n	900232b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x21c>
900232b0:	9909      	ldr	r1, [sp, #36]	@ 0x24
900232b2:	4281      	cmp	r1, r0
900232b4:	f000 8123 	beq.w	900234fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x462>
900232b8:	9909      	ldr	r1, [sp, #36]	@ 0x24
900232ba:	f8b8 4000 	ldrh.w	r4, [r8]
900232be:	fb11 f303 	smulbb	r3, r1, r3
900232c2:	9812      	ldr	r0, [sp, #72]	@ 0x48
900232c4:	ea4f 0ce4 	mov.w	ip, r4, asr #3
900232c8:	b29b      	uxth	r3, r3
900232ca:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
900232ce:	1c59      	adds	r1, r3, #1
900232d0:	ea4c 1c9c 	orr.w	ip, ip, ip, lsr #6
900232d4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
900232d8:	1221      	asrs	r1, r4, #8
900232da:	f3c3 2307 	ubfx	r3, r3, #8, #8
900232de:	00e4      	lsls	r4, r4, #3
900232e0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
900232e4:	fa1f fe83 	uxth.w	lr, r3
900232e8:	43db      	mvns	r3, r3
900232ea:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
900232ee:	fb10 fb0e 	smulbb	fp, r0, lr
900232f2:	b2db      	uxtb	r3, r3
900232f4:	9811      	ldr	r0, [sp, #68]	@ 0x44
900232f6:	b2e4      	uxtb	r4, r4
900232f8:	fb01 b103 	mla	r1, r1, r3, fp
900232fc:	fb10 fb0e 	smulbb	fp, r0, lr
90023300:	9810      	ldr	r0, [sp, #64]	@ 0x40
90023302:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90023306:	fb10 fe0e 	smulbb	lr, r0, lr
9002330a:	b289      	uxth	r1, r1
9002330c:	fb0c bc03 	mla	ip, ip, r3, fp
90023310:	fb04 e403 	mla	r4, r4, r3, lr
90023314:	1c4b      	adds	r3, r1, #1
90023316:	fa1f fc8c 	uxth.w	ip, ip
9002331a:	b2a4      	uxth	r4, r4
9002331c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90023320:	f104 0b01 	add.w	fp, r4, #1
90023324:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90023328:	eb0b 2b14 	add.w	fp, fp, r4, lsr #8
9002332c:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
90023330:	ea4b 0101 	orr.w	r1, fp, r1
90023334:	f10c 0b01 	add.w	fp, ip, #1
90023338:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
9002333c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
90023340:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
90023344:	ea41 010b 	orr.w	r1, r1, fp
90023348:	f8a8 1000 	strh.w	r1, [r8]
9002334c:	9b08      	ldr	r3, [sp, #32]
9002334e:	441e      	add	r6, r3
90023350:	b2b6      	uxth	r6, r6
90023352:	2e07      	cmp	r6, #7
90023354:	bf98      	it	ls
90023356:	411a      	asrls	r2, r3
90023358:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002335a:	bf85      	ittet	hi
9002335c:	787a      	ldrbhi	r2, [r7, #1]
9002335e:	2600      	movhi	r6, #0
90023360:	b2d2      	uxtbls	r2, r2
90023362:	3701      	addhi	r7, #1
90023364:	4498      	add	r8, r3
90023366:	e795      	b.n	90023294 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f8>
90023368:	441c      	add	r4, r3
9002336a:	b224      	sxth	r4, r4
9002336c:	e6d6      	b.n	9002311c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
9002336e:	f1ba 0f01 	cmp.w	sl, #1
90023372:	f47f af09 	bne.w	90023188 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
90023376:	f1bb 0f01 	cmp.w	fp, #1
9002337a:	f47f af05 	bne.w	90023188 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
9002337e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90023380:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90023382:	1a99      	subs	r1, r3, r2
90023384:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90023386:	1b9b      	subs	r3, r3, r6
90023388:	4299      	cmp	r1, r3
9002338a:	bfa8      	it	ge
9002338c:	4619      	movge	r1, r3
9002338e:	2900      	cmp	r1, #0
90023390:	9112      	str	r1, [sp, #72]	@ 0x48
90023392:	dd7e      	ble.n	90023492 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
90023394:	4a22      	ldr	r2, [pc, #136]	@ (90023420 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
90023396:	6810      	ldr	r0, [r2, #0]
90023398:	9211      	str	r2, [sp, #68]	@ 0x44
9002339a:	6803      	ldr	r3, [r0, #0]
9002339c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9002339e:	4798      	blx	r3
900233a0:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
900233a4:	9912      	ldr	r1, [sp, #72]	@ 0x48
900233a6:	d006      	beq.n	900233b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31a>
900233a8:	9b08      	ldr	r3, [sp, #32]
900233aa:	2b04      	cmp	r3, #4
900233ac:	d133      	bne.n	90023416 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37a>
900233ae:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900233b0:	3300      	adds	r3, #0
900233b2:	bf18      	it	ne
900233b4:	2301      	movne	r3, #1
900233b6:	0582      	lsls	r2, r0, #22
900233b8:	fa1f fc88 	uxth.w	ip, r8
900233bc:	f140 80ba 	bpl.w	90023534 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x498>
900233c0:	9808      	ldr	r0, [sp, #32]
900233c2:	2808      	cmp	r0, #8
900233c4:	f040 80b6 	bne.w	90023534 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x498>
900233c8:	2b00      	cmp	r3, #0
900233ca:	d065      	beq.n	90023498 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3fc>
900233cc:	f10c 0c01 	add.w	ip, ip, #1
900233d0:	f02c 0301 	bic.w	r3, ip, #1
900233d4:	b29b      	uxth	r3, r3
900233d6:	bb4d      	cbnz	r5, 9002342c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
900233d8:	eb08 0004 	add.w	r0, r8, r4
900233dc:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900233de:	4290      	cmp	r0, r2
900233e0:	dc24      	bgt.n	9002342c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
900233e2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
900233e4:	b289      	uxth	r1, r1
900233e6:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
900233ea:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
900233ee:	6810      	ldr	r0, [r2, #0]
900233f0:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
900233f4:	6804      	ldr	r4, [r0, #0]
900233f6:	9506      	str	r5, [sp, #24]
900233f8:	f44f 7580 	mov.w	r5, #256	@ 0x100
900233fc:	9302      	str	r3, [sp, #8]
900233fe:	9505      	str	r5, [sp, #20]
90023400:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90023402:	e9cd 3100 	strd	r3, r1, [sp]
90023406:	e9cd 9503 	strd	r9, r5, [sp, #12]
9002340a:	4673      	mov	r3, lr
9002340c:	6da4      	ldr	r4, [r4, #88]	@ 0x58
9002340e:	fb06 710c 	mla	r1, r6, ip, r7
90023412:	47a0      	blx	r4
90023414:	e03d      	b.n	90023492 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
90023416:	2300      	movs	r3, #0
90023418:	e7cd      	b.n	900233b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31a>
9002341a:	bf00      	nop
9002341c:	24021c04 	.word	0x24021c04
90023420:	24021c0c 	.word	0x24021c0c
90023424:	24021c06 	.word	0x24021c06
90023428:	00fff800 	.word	0x00fff800
9002342c:	eba4 0e05 	sub.w	lr, r4, r5
90023430:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90023432:	eba2 0e0e 	sub.w	lr, r2, lr
90023436:	45c6      	cmp	lr, r8
90023438:	bfd4      	ite	le
9002343a:	ebc5 0e0e 	rsble	lr, r5, lr
9002343e:	ebc5 0e08 	rsbgt	lr, r5, r8
90023442:	f1be 0f00 	cmp.w	lr, #0
90023446:	d024      	beq.n	90023492 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
90023448:	07e8      	lsls	r0, r5, #31
9002344a:	f53f ae9d 	bmi.w	90023188 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
9002344e:	f01e 0001 	ands.w	r0, lr, #1
90023452:	f47f ae99 	bne.w	90023188 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
90023456:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90023458:	086d      	lsrs	r5, r5, #1
9002345a:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
9002345e:	f8bd 805e 	ldrh.w	r8, [sp, #94]	@ 0x5e
90023462:	6814      	ldr	r4, [r2, #0]
90023464:	b289      	uxth	r1, r1
90023466:	fb06 560c 	mla	r6, r6, ip, r5
9002346a:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
9002346e:	6825      	ldr	r5, [r4, #0]
90023470:	9006      	str	r0, [sp, #24]
90023472:	f44f 7080 	mov.w	r0, #256	@ 0x100
90023476:	9302      	str	r3, [sp, #8]
90023478:	fa1f f38e 	uxth.w	r3, lr
9002347c:	9005      	str	r0, [sp, #20]
9002347e:	9809      	ldr	r0, [sp, #36]	@ 0x24
90023480:	9101      	str	r1, [sp, #4]
90023482:	19b9      	adds	r1, r7, r6
90023484:	9300      	str	r3, [sp, #0]
90023486:	4643      	mov	r3, r8
90023488:	e9cd 9003 	strd	r9, r0, [sp, #12]
9002348c:	4620      	mov	r0, r4
9002348e:	6dad      	ldr	r5, [r5, #88]	@ 0x58
90023490:	47a8      	blx	r5
90023492:	b019      	add	sp, #100	@ 0x64
90023494:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023498:	4a28      	ldr	r2, [pc, #160]	@ (9002353c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x4a0>)
9002349a:	1b64      	subs	r4, r4, r5
9002349c:	fb06 5608 	mla	r6, r6, r8, r5
900234a0:	b289      	uxth	r1, r1
900234a2:	6810      	ldr	r0, [r2, #0]
900234a4:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
900234a8:	f8d0 a000 	ldr.w	sl, [r0]
900234ac:	9306      	str	r3, [sp, #24]
900234ae:	f44f 7300 	mov.w	r3, #512	@ 0x200
900234b2:	9101      	str	r1, [sp, #4]
900234b4:	19b9      	adds	r1, r7, r6
900234b6:	9305      	str	r3, [sp, #20]
900234b8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900234ba:	f8cd c008 	str.w	ip, [sp, #8]
900234be:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
900234c2:	e9cd 9303 	strd	r9, r3, [sp, #12]
900234c6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900234c8:	1b1c      	subs	r4, r3, r4
900234ca:	4673      	mov	r3, lr
900234cc:	4544      	cmp	r4, r8
900234ce:	bfd4      	ite	le
900234d0:	ebc5 0504 	rsble	r5, r5, r4
900234d4:	ebc5 0508 	rsbgt	r5, r5, r8
900234d8:	b2ad      	uxth	r5, r5
900234da:	9500      	str	r5, [sp, #0]
900234dc:	f8da 4058 	ldr.w	r4, [sl, #88]	@ 0x58
900234e0:	e797      	b.n	90023412 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
900234e2:	2208      	movs	r2, #8
900234e4:	9b08      	ldr	r3, [sp, #32]
900234e6:	fb92 f3f3 	sdiv	r3, r2, r3
900234ea:	1e5a      	subs	r2, r3, #1
900234ec:	4442      	add	r2, r8
900234ee:	fb92 f2f3 	sdiv	r2, r2, r3
900234f2:	fb12 f203 	smulbb	r2, r2, r3
900234f6:	b292      	uxth	r2, r2
900234f8:	e64c      	b.n	90023194 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
900234fa:	980d      	ldr	r0, [sp, #52]	@ 0x34
900234fc:	e68e      	b.n	9002321c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x180>
900234fe:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90023500:	e722      	b.n	90023348 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ac>
90023502:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90023504:	b143      	cbz	r3, 90023518 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x47c>
90023506:	441e      	add	r6, r3
90023508:	b2b6      	uxth	r6, r6
9002350a:	eb07 07d6 	add.w	r7, r7, r6, lsr #3
9002350e:	f006 0607 	and.w	r6, r6, #7
90023512:	783a      	ldrb	r2, [r7, #0]
90023514:	4132      	asrs	r2, r6
90023516:	b2d2      	uxtb	r2, r2
90023518:	990a      	ldr	r1, [sp, #40]	@ 0x28
9002351a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
9002351c:	4419      	add	r1, r3
9002351e:	910a      	str	r1, [sp, #40]	@ 0x28
90023520:	e6b1      	b.n	90023286 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ea>
90023522:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90023524:	2b00      	cmp	r3, #0
90023526:	d1b4      	bne.n	90023492 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
90023528:	4b04      	ldr	r3, [pc, #16]	@ (9002353c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x4a0>)
9002352a:	6818      	ldr	r0, [r3, #0]
9002352c:	6803      	ldr	r3, [r0, #0]
9002352e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90023530:	4798      	blx	r3
90023532:	e7ae      	b.n	90023492 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
90023534:	2b00      	cmp	r3, #0
90023536:	f47f af49 	bne.w	900233cc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x330>
9002353a:	e625      	b.n	90023188 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
9002353c:	24021c0c 	.word	0x24021c0c

90023540 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
90023540:	b538      	push	{r3, r4, r5, lr}
90023542:	4c15      	ldr	r4, [pc, #84]	@ (90023598 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
90023544:	4605      	mov	r5, r0
90023546:	7823      	ldrb	r3, [r4, #0]
90023548:	f3bf 8f5b 	dmb	ish
9002354c:	07da      	lsls	r2, r3, #31
9002354e:	d40b      	bmi.n	90023568 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
90023550:	4620      	mov	r0, r4
90023552:	f009 fbb5 	bl	9002ccc0 <__cxa_guard_acquire>
90023556:	b138      	cbz	r0, 90023568 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
90023558:	4620      	mov	r0, r4
9002355a:	f009 fbbd 	bl	9002ccd8 <__cxa_guard_release>
9002355e:	4a0f      	ldr	r2, [pc, #60]	@ (9002359c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
90023560:	490f      	ldr	r1, [pc, #60]	@ (900235a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
90023562:	4810      	ldr	r0, [pc, #64]	@ (900235a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
90023564:	f009 fba5 	bl	9002ccb2 <__aeabi_atexit>
90023568:	4c0f      	ldr	r4, [pc, #60]	@ (900235a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
9002356a:	7823      	ldrb	r3, [r4, #0]
9002356c:	f3bf 8f5b 	dmb	ish
90023570:	07db      	lsls	r3, r3, #31
90023572:	d40b      	bmi.n	9002358c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
90023574:	4620      	mov	r0, r4
90023576:	f009 fba3 	bl	9002ccc0 <__cxa_guard_acquire>
9002357a:	b138      	cbz	r0, 9002358c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
9002357c:	4620      	mov	r0, r4
9002357e:	f009 fbab 	bl	9002ccd8 <__cxa_guard_release>
90023582:	4a06      	ldr	r2, [pc, #24]	@ (9002359c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
90023584:	4909      	ldr	r1, [pc, #36]	@ (900235ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
90023586:	480a      	ldr	r0, [pc, #40]	@ (900235b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
90023588:	f009 fb93 	bl	9002ccb2 <__aeabi_atexit>
9002358c:	4b05      	ldr	r3, [pc, #20]	@ (900235a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
9002358e:	616b      	str	r3, [r5, #20]
90023590:	4b07      	ldr	r3, [pc, #28]	@ (900235b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
90023592:	61ab      	str	r3, [r5, #24]
90023594:	bd38      	pop	{r3, r4, r5, pc}
90023596:	bf00      	nop
90023598:	24021cf0 	.word	0x24021cf0
9002359c:	24000000 	.word	0x24000000
900235a0:	9001f62d 	.word	0x9001f62d
900235a4:	240000d4 	.word	0x240000d4
900235a8:	24021cf4 	.word	0x24021cf4
900235ac:	9001f62b 	.word	0x9001f62b
900235b0:	240000d8 	.word	0x240000d8

900235b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
900235b4:	b538      	push	{r3, r4, r5, lr}
900235b6:	4c15      	ldr	r4, [pc, #84]	@ (9002360c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
900235b8:	4605      	mov	r5, r0
900235ba:	7823      	ldrb	r3, [r4, #0]
900235bc:	f3bf 8f5b 	dmb	ish
900235c0:	07da      	lsls	r2, r3, #31
900235c2:	d40b      	bmi.n	900235dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
900235c4:	4620      	mov	r0, r4
900235c6:	f009 fb7b 	bl	9002ccc0 <__cxa_guard_acquire>
900235ca:	b138      	cbz	r0, 900235dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
900235cc:	4620      	mov	r0, r4
900235ce:	f009 fb83 	bl	9002ccd8 <__cxa_guard_release>
900235d2:	4a0f      	ldr	r2, [pc, #60]	@ (90023610 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
900235d4:	490f      	ldr	r1, [pc, #60]	@ (90023614 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
900235d6:	4810      	ldr	r0, [pc, #64]	@ (90023618 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
900235d8:	f009 fb6b 	bl	9002ccb2 <__aeabi_atexit>
900235dc:	4c0f      	ldr	r4, [pc, #60]	@ (9002361c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
900235de:	7823      	ldrb	r3, [r4, #0]
900235e0:	f3bf 8f5b 	dmb	ish
900235e4:	07db      	lsls	r3, r3, #31
900235e6:	d40b      	bmi.n	90023600 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
900235e8:	4620      	mov	r0, r4
900235ea:	f009 fb69 	bl	9002ccc0 <__cxa_guard_acquire>
900235ee:	b138      	cbz	r0, 90023600 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
900235f0:	4620      	mov	r0, r4
900235f2:	f009 fb71 	bl	9002ccd8 <__cxa_guard_release>
900235f6:	4a06      	ldr	r2, [pc, #24]	@ (90023610 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
900235f8:	4909      	ldr	r1, [pc, #36]	@ (90023620 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
900235fa:	480a      	ldr	r0, [pc, #40]	@ (90023624 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
900235fc:	f009 fb59 	bl	9002ccb2 <__aeabi_atexit>
90023600:	4b05      	ldr	r3, [pc, #20]	@ (90023618 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
90023602:	60eb      	str	r3, [r5, #12]
90023604:	4b07      	ldr	r3, [pc, #28]	@ (90023624 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
90023606:	612b      	str	r3, [r5, #16]
90023608:	bd38      	pop	{r3, r4, r5, pc}
9002360a:	bf00      	nop
9002360c:	24021cc8 	.word	0x24021cc8
90023610:	24000000 	.word	0x24000000
90023614:	9001f631 	.word	0x9001f631
90023618:	240000ac 	.word	0x240000ac
9002361c:	24021ccc 	.word	0x24021ccc
90023620:	9001f62f 	.word	0x9001f62f
90023624:	240000b0 	.word	0x240000b0

90023628 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
90023628:	b510      	push	{r4, lr}
9002362a:	4604      	mov	r4, r0
9002362c:	f7ff ff88 	bl	90023540 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
90023630:	4620      	mov	r0, r4
90023632:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90023636:	f7ff bfbd 	b.w	900235b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

9002363c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
9002363c:	b538      	push	{r3, r4, r5, lr}
9002363e:	4c15      	ldr	r4, [pc, #84]	@ (90023694 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
90023640:	4605      	mov	r5, r0
90023642:	7823      	ldrb	r3, [r4, #0]
90023644:	f3bf 8f5b 	dmb	ish
90023648:	07da      	lsls	r2, r3, #31
9002364a:	d40b      	bmi.n	90023664 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
9002364c:	4620      	mov	r0, r4
9002364e:	f009 fb37 	bl	9002ccc0 <__cxa_guard_acquire>
90023652:	b138      	cbz	r0, 90023664 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
90023654:	4620      	mov	r0, r4
90023656:	f009 fb3f 	bl	9002ccd8 <__cxa_guard_release>
9002365a:	4a0f      	ldr	r2, [pc, #60]	@ (90023698 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
9002365c:	490f      	ldr	r1, [pc, #60]	@ (9002369c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
9002365e:	4810      	ldr	r0, [pc, #64]	@ (900236a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
90023660:	f009 fb27 	bl	9002ccb2 <__aeabi_atexit>
90023664:	4c0f      	ldr	r4, [pc, #60]	@ (900236a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
90023666:	7823      	ldrb	r3, [r4, #0]
90023668:	f3bf 8f5b 	dmb	ish
9002366c:	07db      	lsls	r3, r3, #31
9002366e:	d40b      	bmi.n	90023688 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
90023670:	4620      	mov	r0, r4
90023672:	f009 fb25 	bl	9002ccc0 <__cxa_guard_acquire>
90023676:	b138      	cbz	r0, 90023688 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
90023678:	4620      	mov	r0, r4
9002367a:	f009 fb2d 	bl	9002ccd8 <__cxa_guard_release>
9002367e:	4a06      	ldr	r2, [pc, #24]	@ (90023698 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
90023680:	4909      	ldr	r1, [pc, #36]	@ (900236a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
90023682:	480a      	ldr	r0, [pc, #40]	@ (900236ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
90023684:	f009 fb15 	bl	9002ccb2 <__aeabi_atexit>
90023688:	4b05      	ldr	r3, [pc, #20]	@ (900236a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
9002368a:	626b      	str	r3, [r5, #36]	@ 0x24
9002368c:	4b07      	ldr	r3, [pc, #28]	@ (900236ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
9002368e:	62ab      	str	r3, [r5, #40]	@ 0x28
90023690:	bd38      	pop	{r3, r4, r5, pc}
90023692:	bf00      	nop
90023694:	24021cf8 	.word	0x24021cf8
90023698:	24000000 	.word	0x24000000
9002369c:	9001f625 	.word	0x9001f625
900236a0:	240000dc 	.word	0x240000dc
900236a4:	24021cfc 	.word	0x24021cfc
900236a8:	9001f623 	.word	0x9001f623
900236ac:	240000e0 	.word	0x240000e0

900236b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
900236b0:	b538      	push	{r3, r4, r5, lr}
900236b2:	4c15      	ldr	r4, [pc, #84]	@ (90023708 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
900236b4:	4605      	mov	r5, r0
900236b6:	7823      	ldrb	r3, [r4, #0]
900236b8:	f3bf 8f5b 	dmb	ish
900236bc:	07da      	lsls	r2, r3, #31
900236be:	d40b      	bmi.n	900236d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
900236c0:	4620      	mov	r0, r4
900236c2:	f009 fafd 	bl	9002ccc0 <__cxa_guard_acquire>
900236c6:	b138      	cbz	r0, 900236d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
900236c8:	4620      	mov	r0, r4
900236ca:	f009 fb05 	bl	9002ccd8 <__cxa_guard_release>
900236ce:	4a0f      	ldr	r2, [pc, #60]	@ (9002370c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
900236d0:	490f      	ldr	r1, [pc, #60]	@ (90023710 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
900236d2:	4810      	ldr	r0, [pc, #64]	@ (90023714 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
900236d4:	f009 faed 	bl	9002ccb2 <__aeabi_atexit>
900236d8:	4c0f      	ldr	r4, [pc, #60]	@ (90023718 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
900236da:	7823      	ldrb	r3, [r4, #0]
900236dc:	f3bf 8f5b 	dmb	ish
900236e0:	07db      	lsls	r3, r3, #31
900236e2:	d40b      	bmi.n	900236fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
900236e4:	4620      	mov	r0, r4
900236e6:	f009 faeb 	bl	9002ccc0 <__cxa_guard_acquire>
900236ea:	b138      	cbz	r0, 900236fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
900236ec:	4620      	mov	r0, r4
900236ee:	f009 faf3 	bl	9002ccd8 <__cxa_guard_release>
900236f2:	4a06      	ldr	r2, [pc, #24]	@ (9002370c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
900236f4:	4909      	ldr	r1, [pc, #36]	@ (9002371c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
900236f6:	480a      	ldr	r0, [pc, #40]	@ (90023720 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
900236f8:	f009 fadb 	bl	9002ccb2 <__aeabi_atexit>
900236fc:	4b05      	ldr	r3, [pc, #20]	@ (90023714 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
900236fe:	61eb      	str	r3, [r5, #28]
90023700:	4b07      	ldr	r3, [pc, #28]	@ (90023720 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
90023702:	622b      	str	r3, [r5, #32]
90023704:	bd38      	pop	{r3, r4, r5, pc}
90023706:	bf00      	nop
90023708:	24021cd0 	.word	0x24021cd0
9002370c:	24000000 	.word	0x24000000
90023710:	9001f629 	.word	0x9001f629
90023714:	240000b4 	.word	0x240000b4
90023718:	24021cd4 	.word	0x24021cd4
9002371c:	9001f627 	.word	0x9001f627
90023720:	240000b8 	.word	0x240000b8

90023724 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
90023724:	b510      	push	{r4, lr}
90023726:	4604      	mov	r4, r0
90023728:	f7ff ff88 	bl	9002363c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
9002372c:	4620      	mov	r0, r4
9002372e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90023732:	f7ff bfbd 	b.w	900236b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

90023738 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
90023738:	b538      	push	{r3, r4, r5, lr}
9002373a:	4c15      	ldr	r4, [pc, #84]	@ (90023790 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
9002373c:	4605      	mov	r5, r0
9002373e:	7823      	ldrb	r3, [r4, #0]
90023740:	f3bf 8f5b 	dmb	ish
90023744:	07da      	lsls	r2, r3, #31
90023746:	d40b      	bmi.n	90023760 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
90023748:	4620      	mov	r0, r4
9002374a:	f009 fab9 	bl	9002ccc0 <__cxa_guard_acquire>
9002374e:	b138      	cbz	r0, 90023760 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
90023750:	4620      	mov	r0, r4
90023752:	f009 fac1 	bl	9002ccd8 <__cxa_guard_release>
90023756:	4a0f      	ldr	r2, [pc, #60]	@ (90023794 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
90023758:	490f      	ldr	r1, [pc, #60]	@ (90023798 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
9002375a:	4810      	ldr	r0, [pc, #64]	@ (9002379c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
9002375c:	f009 faa9 	bl	9002ccb2 <__aeabi_atexit>
90023760:	4c0f      	ldr	r4, [pc, #60]	@ (900237a0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
90023762:	7823      	ldrb	r3, [r4, #0]
90023764:	f3bf 8f5b 	dmb	ish
90023768:	07db      	lsls	r3, r3, #31
9002376a:	d40b      	bmi.n	90023784 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
9002376c:	4620      	mov	r0, r4
9002376e:	f009 faa7 	bl	9002ccc0 <__cxa_guard_acquire>
90023772:	b138      	cbz	r0, 90023784 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
90023774:	4620      	mov	r0, r4
90023776:	f009 faaf 	bl	9002ccd8 <__cxa_guard_release>
9002377a:	4a06      	ldr	r2, [pc, #24]	@ (90023794 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
9002377c:	4909      	ldr	r1, [pc, #36]	@ (900237a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
9002377e:	480a      	ldr	r0, [pc, #40]	@ (900237a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
90023780:	f009 fa97 	bl	9002ccb2 <__aeabi_atexit>
90023784:	4b05      	ldr	r3, [pc, #20]	@ (9002379c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
90023786:	636b      	str	r3, [r5, #52]	@ 0x34
90023788:	4b07      	ldr	r3, [pc, #28]	@ (900237a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
9002378a:	63ab      	str	r3, [r5, #56]	@ 0x38
9002378c:	bd38      	pop	{r3, r4, r5, pc}
9002378e:	bf00      	nop
90023790:	24021d08 	.word	0x24021d08
90023794:	24000000 	.word	0x24000000
90023798:	9001f61d 	.word	0x9001f61d
9002379c:	240000ec 	.word	0x240000ec
900237a0:	24021d0c 	.word	0x24021d0c
900237a4:	9001f61b 	.word	0x9001f61b
900237a8:	240000f0 	.word	0x240000f0

900237ac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
900237ac:	b538      	push	{r3, r4, r5, lr}
900237ae:	4c15      	ldr	r4, [pc, #84]	@ (90023804 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
900237b0:	4605      	mov	r5, r0
900237b2:	7823      	ldrb	r3, [r4, #0]
900237b4:	f3bf 8f5b 	dmb	ish
900237b8:	07da      	lsls	r2, r3, #31
900237ba:	d40b      	bmi.n	900237d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
900237bc:	4620      	mov	r0, r4
900237be:	f009 fa7f 	bl	9002ccc0 <__cxa_guard_acquire>
900237c2:	b138      	cbz	r0, 900237d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
900237c4:	4620      	mov	r0, r4
900237c6:	f009 fa87 	bl	9002ccd8 <__cxa_guard_release>
900237ca:	4a0f      	ldr	r2, [pc, #60]	@ (90023808 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
900237cc:	490f      	ldr	r1, [pc, #60]	@ (9002380c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
900237ce:	4810      	ldr	r0, [pc, #64]	@ (90023810 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
900237d0:	f009 fa6f 	bl	9002ccb2 <__aeabi_atexit>
900237d4:	4c0f      	ldr	r4, [pc, #60]	@ (90023814 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
900237d6:	7823      	ldrb	r3, [r4, #0]
900237d8:	f3bf 8f5b 	dmb	ish
900237dc:	07db      	lsls	r3, r3, #31
900237de:	d40b      	bmi.n	900237f8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
900237e0:	4620      	mov	r0, r4
900237e2:	f009 fa6d 	bl	9002ccc0 <__cxa_guard_acquire>
900237e6:	b138      	cbz	r0, 900237f8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
900237e8:	4620      	mov	r0, r4
900237ea:	f009 fa75 	bl	9002ccd8 <__cxa_guard_release>
900237ee:	4a06      	ldr	r2, [pc, #24]	@ (90023808 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
900237f0:	4909      	ldr	r1, [pc, #36]	@ (90023818 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
900237f2:	480a      	ldr	r0, [pc, #40]	@ (9002381c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
900237f4:	f009 fa5d 	bl	9002ccb2 <__aeabi_atexit>
900237f8:	4b05      	ldr	r3, [pc, #20]	@ (90023810 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
900237fa:	62eb      	str	r3, [r5, #44]	@ 0x2c
900237fc:	4b07      	ldr	r3, [pc, #28]	@ (9002381c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
900237fe:	632b      	str	r3, [r5, #48]	@ 0x30
90023800:	bd38      	pop	{r3, r4, r5, pc}
90023802:	bf00      	nop
90023804:	24021cd8 	.word	0x24021cd8
90023808:	24000000 	.word	0x24000000
9002380c:	9001f621 	.word	0x9001f621
90023810:	240000bc 	.word	0x240000bc
90023814:	24021cdc 	.word	0x24021cdc
90023818:	9001f61f 	.word	0x9001f61f
9002381c:	240000c0 	.word	0x240000c0

90023820 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
90023820:	b510      	push	{r4, lr}
90023822:	4604      	mov	r4, r0
90023824:	f7ff ff88 	bl	90023738 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
90023828:	4620      	mov	r0, r4
9002382a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002382e:	f7ff bfbd 	b.w	900237ac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

90023834 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
90023834:	b538      	push	{r3, r4, r5, lr}
90023836:	4c15      	ldr	r4, [pc, #84]	@ (9002388c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
90023838:	4605      	mov	r5, r0
9002383a:	7823      	ldrb	r3, [r4, #0]
9002383c:	f3bf 8f5b 	dmb	ish
90023840:	07da      	lsls	r2, r3, #31
90023842:	d40b      	bmi.n	9002385c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
90023844:	4620      	mov	r0, r4
90023846:	f009 fa3b 	bl	9002ccc0 <__cxa_guard_acquire>
9002384a:	b138      	cbz	r0, 9002385c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
9002384c:	4620      	mov	r0, r4
9002384e:	f009 fa43 	bl	9002ccd8 <__cxa_guard_release>
90023852:	4a0f      	ldr	r2, [pc, #60]	@ (90023890 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
90023854:	490f      	ldr	r1, [pc, #60]	@ (90023894 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
90023856:	4810      	ldr	r0, [pc, #64]	@ (90023898 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
90023858:	f009 fa2b 	bl	9002ccb2 <__aeabi_atexit>
9002385c:	4c0f      	ldr	r4, [pc, #60]	@ (9002389c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
9002385e:	7823      	ldrb	r3, [r4, #0]
90023860:	f3bf 8f5b 	dmb	ish
90023864:	07db      	lsls	r3, r3, #31
90023866:	d40b      	bmi.n	90023880 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
90023868:	4620      	mov	r0, r4
9002386a:	f009 fa29 	bl	9002ccc0 <__cxa_guard_acquire>
9002386e:	b138      	cbz	r0, 90023880 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
90023870:	4620      	mov	r0, r4
90023872:	f009 fa31 	bl	9002ccd8 <__cxa_guard_release>
90023876:	4a06      	ldr	r2, [pc, #24]	@ (90023890 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
90023878:	4909      	ldr	r1, [pc, #36]	@ (900238a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
9002387a:	480a      	ldr	r0, [pc, #40]	@ (900238a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
9002387c:	f009 fa19 	bl	9002ccb2 <__aeabi_atexit>
90023880:	4b05      	ldr	r3, [pc, #20]	@ (90023898 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
90023882:	656b      	str	r3, [r5, #84]	@ 0x54
90023884:	4b07      	ldr	r3, [pc, #28]	@ (900238a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
90023886:	65ab      	str	r3, [r5, #88]	@ 0x58
90023888:	bd38      	pop	{r3, r4, r5, pc}
9002388a:	bf00      	nop
9002388c:	24021d10 	.word	0x24021d10
90023890:	24000000 	.word	0x24000000
90023894:	9001f60d 	.word	0x9001f60d
90023898:	240000f4 	.word	0x240000f4
9002389c:	24021d14 	.word	0x24021d14
900238a0:	9001f60b 	.word	0x9001f60b
900238a4:	240000f8 	.word	0x240000f8

900238a8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
900238a8:	b538      	push	{r3, r4, r5, lr}
900238aa:	4c15      	ldr	r4, [pc, #84]	@ (90023900 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
900238ac:	4605      	mov	r5, r0
900238ae:	7823      	ldrb	r3, [r4, #0]
900238b0:	f3bf 8f5b 	dmb	ish
900238b4:	07da      	lsls	r2, r3, #31
900238b6:	d40b      	bmi.n	900238d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
900238b8:	4620      	mov	r0, r4
900238ba:	f009 fa01 	bl	9002ccc0 <__cxa_guard_acquire>
900238be:	b138      	cbz	r0, 900238d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
900238c0:	4620      	mov	r0, r4
900238c2:	f009 fa09 	bl	9002ccd8 <__cxa_guard_release>
900238c6:	4a0f      	ldr	r2, [pc, #60]	@ (90023904 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
900238c8:	490f      	ldr	r1, [pc, #60]	@ (90023908 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
900238ca:	4810      	ldr	r0, [pc, #64]	@ (9002390c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
900238cc:	f009 f9f1 	bl	9002ccb2 <__aeabi_atexit>
900238d0:	4c0f      	ldr	r4, [pc, #60]	@ (90023910 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
900238d2:	7823      	ldrb	r3, [r4, #0]
900238d4:	f3bf 8f5b 	dmb	ish
900238d8:	07db      	lsls	r3, r3, #31
900238da:	d40b      	bmi.n	900238f4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
900238dc:	4620      	mov	r0, r4
900238de:	f009 f9ef 	bl	9002ccc0 <__cxa_guard_acquire>
900238e2:	b138      	cbz	r0, 900238f4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
900238e4:	4620      	mov	r0, r4
900238e6:	f009 f9f7 	bl	9002ccd8 <__cxa_guard_release>
900238ea:	4a06      	ldr	r2, [pc, #24]	@ (90023904 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
900238ec:	4909      	ldr	r1, [pc, #36]	@ (90023914 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
900238ee:	480a      	ldr	r0, [pc, #40]	@ (90023918 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
900238f0:	f009 f9df 	bl	9002ccb2 <__aeabi_atexit>
900238f4:	4b05      	ldr	r3, [pc, #20]	@ (9002390c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
900238f6:	64eb      	str	r3, [r5, #76]	@ 0x4c
900238f8:	4b07      	ldr	r3, [pc, #28]	@ (90023918 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
900238fa:	652b      	str	r3, [r5, #80]	@ 0x50
900238fc:	bd38      	pop	{r3, r4, r5, pc}
900238fe:	bf00      	nop
90023900:	24021d18 	.word	0x24021d18
90023904:	24000000 	.word	0x24000000
90023908:	9001f611 	.word	0x9001f611
9002390c:	240000fc 	.word	0x240000fc
90023910:	24021d1c 	.word	0x24021d1c
90023914:	9001f60f 	.word	0x9001f60f
90023918:	24000100 	.word	0x24000100

9002391c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
9002391c:	b538      	push	{r3, r4, r5, lr}
9002391e:	4c15      	ldr	r4, [pc, #84]	@ (90023974 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
90023920:	4605      	mov	r5, r0
90023922:	7823      	ldrb	r3, [r4, #0]
90023924:	f3bf 8f5b 	dmb	ish
90023928:	07da      	lsls	r2, r3, #31
9002392a:	d40b      	bmi.n	90023944 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
9002392c:	4620      	mov	r0, r4
9002392e:	f009 f9c7 	bl	9002ccc0 <__cxa_guard_acquire>
90023932:	b138      	cbz	r0, 90023944 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
90023934:	4620      	mov	r0, r4
90023936:	f009 f9cf 	bl	9002ccd8 <__cxa_guard_release>
9002393a:	4a0f      	ldr	r2, [pc, #60]	@ (90023978 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
9002393c:	490f      	ldr	r1, [pc, #60]	@ (9002397c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
9002393e:	4810      	ldr	r0, [pc, #64]	@ (90023980 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
90023940:	f009 f9b7 	bl	9002ccb2 <__aeabi_atexit>
90023944:	4c0f      	ldr	r4, [pc, #60]	@ (90023984 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
90023946:	7823      	ldrb	r3, [r4, #0]
90023948:	f3bf 8f5b 	dmb	ish
9002394c:	07db      	lsls	r3, r3, #31
9002394e:	d40b      	bmi.n	90023968 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
90023950:	4620      	mov	r0, r4
90023952:	f009 f9b5 	bl	9002ccc0 <__cxa_guard_acquire>
90023956:	b138      	cbz	r0, 90023968 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
90023958:	4620      	mov	r0, r4
9002395a:	f009 f9bd 	bl	9002ccd8 <__cxa_guard_release>
9002395e:	4a06      	ldr	r2, [pc, #24]	@ (90023978 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
90023960:	4909      	ldr	r1, [pc, #36]	@ (90023988 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
90023962:	480a      	ldr	r0, [pc, #40]	@ (9002398c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
90023964:	f009 f9a5 	bl	9002ccb2 <__aeabi_atexit>
90023968:	4b05      	ldr	r3, [pc, #20]	@ (90023980 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
9002396a:	646b      	str	r3, [r5, #68]	@ 0x44
9002396c:	4b07      	ldr	r3, [pc, #28]	@ (9002398c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
9002396e:	64ab      	str	r3, [r5, #72]	@ 0x48
90023970:	bd38      	pop	{r3, r4, r5, pc}
90023972:	bf00      	nop
90023974:	24021ce0 	.word	0x24021ce0
90023978:	24000000 	.word	0x24000000
9002397c:	9001f615 	.word	0x9001f615
90023980:	240000c4 	.word	0x240000c4
90023984:	24021ce4 	.word	0x24021ce4
90023988:	9001f613 	.word	0x9001f613
9002398c:	240000c8 	.word	0x240000c8

90023990 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
90023990:	b538      	push	{r3, r4, r5, lr}
90023992:	4c15      	ldr	r4, [pc, #84]	@ (900239e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
90023994:	4605      	mov	r5, r0
90023996:	7823      	ldrb	r3, [r4, #0]
90023998:	f3bf 8f5b 	dmb	ish
9002399c:	07da      	lsls	r2, r3, #31
9002399e:	d40b      	bmi.n	900239b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
900239a0:	4620      	mov	r0, r4
900239a2:	f009 f98d 	bl	9002ccc0 <__cxa_guard_acquire>
900239a6:	b138      	cbz	r0, 900239b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
900239a8:	4620      	mov	r0, r4
900239aa:	f009 f995 	bl	9002ccd8 <__cxa_guard_release>
900239ae:	4a0f      	ldr	r2, [pc, #60]	@ (900239ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
900239b0:	490f      	ldr	r1, [pc, #60]	@ (900239f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
900239b2:	4810      	ldr	r0, [pc, #64]	@ (900239f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
900239b4:	f009 f97d 	bl	9002ccb2 <__aeabi_atexit>
900239b8:	4c0f      	ldr	r4, [pc, #60]	@ (900239f8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
900239ba:	7823      	ldrb	r3, [r4, #0]
900239bc:	f3bf 8f5b 	dmb	ish
900239c0:	07db      	lsls	r3, r3, #31
900239c2:	d40b      	bmi.n	900239dc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
900239c4:	4620      	mov	r0, r4
900239c6:	f009 f97b 	bl	9002ccc0 <__cxa_guard_acquire>
900239ca:	b138      	cbz	r0, 900239dc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
900239cc:	4620      	mov	r0, r4
900239ce:	f009 f983 	bl	9002ccd8 <__cxa_guard_release>
900239d2:	4a06      	ldr	r2, [pc, #24]	@ (900239ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
900239d4:	4909      	ldr	r1, [pc, #36]	@ (900239fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
900239d6:	480a      	ldr	r0, [pc, #40]	@ (90023a00 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
900239d8:	f009 f96b 	bl	9002ccb2 <__aeabi_atexit>
900239dc:	4b05      	ldr	r3, [pc, #20]	@ (900239f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
900239de:	63eb      	str	r3, [r5, #60]	@ 0x3c
900239e0:	4b07      	ldr	r3, [pc, #28]	@ (90023a00 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
900239e2:	642b      	str	r3, [r5, #64]	@ 0x40
900239e4:	bd38      	pop	{r3, r4, r5, pc}
900239e6:	bf00      	nop
900239e8:	24021d00 	.word	0x24021d00
900239ec:	24000000 	.word	0x24000000
900239f0:	9001f619 	.word	0x9001f619
900239f4:	240000e4 	.word	0x240000e4
900239f8:	24021d04 	.word	0x24021d04
900239fc:	9001f617 	.word	0x9001f617
90023a00:	240000e8 	.word	0x240000e8

90023a04 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
90023a04:	b510      	push	{r4, lr}
90023a06:	4604      	mov	r4, r0
90023a08:	f7ff ff14 	bl	90023834 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
90023a0c:	4620      	mov	r0, r4
90023a0e:	f7ff ff85 	bl	9002391c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
90023a12:	4620      	mov	r0, r4
90023a14:	f7ff ff48 	bl	900238a8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
90023a18:	4620      	mov	r0, r4
90023a1a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90023a1e:	f7ff bfb7 	b.w	90023990 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

90023a24 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
90023a24:	b538      	push	{r3, r4, r5, lr}
90023a26:	4c15      	ldr	r4, [pc, #84]	@ (90023a7c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
90023a28:	4605      	mov	r5, r0
90023a2a:	7823      	ldrb	r3, [r4, #0]
90023a2c:	f3bf 8f5b 	dmb	ish
90023a30:	07da      	lsls	r2, r3, #31
90023a32:	d40b      	bmi.n	90023a4c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
90023a34:	4620      	mov	r0, r4
90023a36:	f009 f943 	bl	9002ccc0 <__cxa_guard_acquire>
90023a3a:	b138      	cbz	r0, 90023a4c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
90023a3c:	4620      	mov	r0, r4
90023a3e:	f009 f94b 	bl	9002ccd8 <__cxa_guard_release>
90023a42:	4a0f      	ldr	r2, [pc, #60]	@ (90023a80 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
90023a44:	490f      	ldr	r1, [pc, #60]	@ (90023a84 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
90023a46:	4810      	ldr	r0, [pc, #64]	@ (90023a88 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
90023a48:	f009 f933 	bl	9002ccb2 <__aeabi_atexit>
90023a4c:	4c0f      	ldr	r4, [pc, #60]	@ (90023a8c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
90023a4e:	7823      	ldrb	r3, [r4, #0]
90023a50:	f3bf 8f5b 	dmb	ish
90023a54:	07db      	lsls	r3, r3, #31
90023a56:	d40b      	bmi.n	90023a70 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
90023a58:	4620      	mov	r0, r4
90023a5a:	f009 f931 	bl	9002ccc0 <__cxa_guard_acquire>
90023a5e:	b138      	cbz	r0, 90023a70 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
90023a60:	4620      	mov	r0, r4
90023a62:	f009 f939 	bl	9002ccd8 <__cxa_guard_release>
90023a66:	4a06      	ldr	r2, [pc, #24]	@ (90023a80 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
90023a68:	4909      	ldr	r1, [pc, #36]	@ (90023a90 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
90023a6a:	480a      	ldr	r0, [pc, #40]	@ (90023a94 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
90023a6c:	f009 f921 	bl	9002ccb2 <__aeabi_atexit>
90023a70:	4b05      	ldr	r3, [pc, #20]	@ (90023a88 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
90023a72:	666b      	str	r3, [r5, #100]	@ 0x64
90023a74:	4b07      	ldr	r3, [pc, #28]	@ (90023a94 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
90023a76:	66ab      	str	r3, [r5, #104]	@ 0x68
90023a78:	bd38      	pop	{r3, r4, r5, pc}
90023a7a:	bf00      	nop
90023a7c:	24021ce8 	.word	0x24021ce8
90023a80:	24000000 	.word	0x24000000
90023a84:	9001f605 	.word	0x9001f605
90023a88:	240000cc 	.word	0x240000cc
90023a8c:	24021cec 	.word	0x24021cec
90023a90:	9001f603 	.word	0x9001f603
90023a94:	240000d0 	.word	0x240000d0

90023a98 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
90023a98:	b538      	push	{r3, r4, r5, lr}
90023a9a:	4c15      	ldr	r4, [pc, #84]	@ (90023af0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
90023a9c:	4605      	mov	r5, r0
90023a9e:	7823      	ldrb	r3, [r4, #0]
90023aa0:	f3bf 8f5b 	dmb	ish
90023aa4:	07da      	lsls	r2, r3, #31
90023aa6:	d40b      	bmi.n	90023ac0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
90023aa8:	4620      	mov	r0, r4
90023aaa:	f009 f909 	bl	9002ccc0 <__cxa_guard_acquire>
90023aae:	b138      	cbz	r0, 90023ac0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
90023ab0:	4620      	mov	r0, r4
90023ab2:	f009 f911 	bl	9002ccd8 <__cxa_guard_release>
90023ab6:	4a0f      	ldr	r2, [pc, #60]	@ (90023af4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
90023ab8:	490f      	ldr	r1, [pc, #60]	@ (90023af8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
90023aba:	4810      	ldr	r0, [pc, #64]	@ (90023afc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
90023abc:	f009 f8f9 	bl	9002ccb2 <__aeabi_atexit>
90023ac0:	4c0f      	ldr	r4, [pc, #60]	@ (90023b00 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
90023ac2:	7823      	ldrb	r3, [r4, #0]
90023ac4:	f3bf 8f5b 	dmb	ish
90023ac8:	07db      	lsls	r3, r3, #31
90023aca:	d40b      	bmi.n	90023ae4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
90023acc:	4620      	mov	r0, r4
90023ace:	f009 f8f7 	bl	9002ccc0 <__cxa_guard_acquire>
90023ad2:	b138      	cbz	r0, 90023ae4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
90023ad4:	4620      	mov	r0, r4
90023ad6:	f009 f8ff 	bl	9002ccd8 <__cxa_guard_release>
90023ada:	4a06      	ldr	r2, [pc, #24]	@ (90023af4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
90023adc:	4909      	ldr	r1, [pc, #36]	@ (90023b04 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
90023ade:	480a      	ldr	r0, [pc, #40]	@ (90023b08 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
90023ae0:	f009 f8e7 	bl	9002ccb2 <__aeabi_atexit>
90023ae4:	4b05      	ldr	r3, [pc, #20]	@ (90023afc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
90023ae6:	65eb      	str	r3, [r5, #92]	@ 0x5c
90023ae8:	4b07      	ldr	r3, [pc, #28]	@ (90023b08 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
90023aea:	662b      	str	r3, [r5, #96]	@ 0x60
90023aec:	bd38      	pop	{r3, r4, r5, pc}
90023aee:	bf00      	nop
90023af0:	24021cc0 	.word	0x24021cc0
90023af4:	24000000 	.word	0x24000000
90023af8:	9001f609 	.word	0x9001f609
90023afc:	240000a4 	.word	0x240000a4
90023b00:	24021cc4 	.word	0x24021cc4
90023b04:	9001f607 	.word	0x9001f607
90023b08:	240000a8 	.word	0x240000a8

90023b0c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
90023b0c:	b510      	push	{r4, lr}
90023b0e:	4604      	mov	r4, r0
90023b10:	f7ff ff88 	bl	90023a24 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
90023b14:	4620      	mov	r0, r4
90023b16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90023b1a:	f7ff bfbd 	b.w	90023a98 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

90023b20 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
90023b20:	b538      	push	{r3, r4, r5, lr}
90023b22:	4c15      	ldr	r4, [pc, #84]	@ (90023b78 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
90023b24:	4605      	mov	r5, r0
90023b26:	7823      	ldrb	r3, [r4, #0]
90023b28:	f3bf 8f5b 	dmb	ish
90023b2c:	07da      	lsls	r2, r3, #31
90023b2e:	d40b      	bmi.n	90023b48 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
90023b30:	4620      	mov	r0, r4
90023b32:	f009 f8c5 	bl	9002ccc0 <__cxa_guard_acquire>
90023b36:	b138      	cbz	r0, 90023b48 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
90023b38:	4620      	mov	r0, r4
90023b3a:	f009 f8cd 	bl	9002ccd8 <__cxa_guard_release>
90023b3e:	4a0f      	ldr	r2, [pc, #60]	@ (90023b7c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
90023b40:	490f      	ldr	r1, [pc, #60]	@ (90023b80 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
90023b42:	4810      	ldr	r0, [pc, #64]	@ (90023b84 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
90023b44:	f009 f8b5 	bl	9002ccb2 <__aeabi_atexit>
90023b48:	4c0f      	ldr	r4, [pc, #60]	@ (90023b88 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
90023b4a:	7823      	ldrb	r3, [r4, #0]
90023b4c:	f3bf 8f5b 	dmb	ish
90023b50:	07db      	lsls	r3, r3, #31
90023b52:	d40b      	bmi.n	90023b6c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
90023b54:	4620      	mov	r0, r4
90023b56:	f009 f8b3 	bl	9002ccc0 <__cxa_guard_acquire>
90023b5a:	b138      	cbz	r0, 90023b6c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
90023b5c:	4620      	mov	r0, r4
90023b5e:	f009 f8bb 	bl	9002ccd8 <__cxa_guard_release>
90023b62:	4a06      	ldr	r2, [pc, #24]	@ (90023b7c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
90023b64:	4909      	ldr	r1, [pc, #36]	@ (90023b8c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
90023b66:	480a      	ldr	r0, [pc, #40]	@ (90023b90 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
90023b68:	f009 f8a3 	bl	9002ccb2 <__aeabi_atexit>
90023b6c:	4b05      	ldr	r3, [pc, #20]	@ (90023b84 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
90023b6e:	676b      	str	r3, [r5, #116]	@ 0x74
90023b70:	4b07      	ldr	r3, [pc, #28]	@ (90023b90 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
90023b72:	67ab      	str	r3, [r5, #120]	@ 0x78
90023b74:	bd38      	pop	{r3, r4, r5, pc}
90023b76:	bf00      	nop
90023b78:	24021cb8 	.word	0x24021cb8
90023b7c:	24000000 	.word	0x24000000
90023b80:	9001f5fd 	.word	0x9001f5fd
90023b84:	2400009c 	.word	0x2400009c
90023b88:	24021cbc 	.word	0x24021cbc
90023b8c:	9001f5fb 	.word	0x9001f5fb
90023b90:	240000a0 	.word	0x240000a0

90023b94 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
90023b94:	b538      	push	{r3, r4, r5, lr}
90023b96:	4c15      	ldr	r4, [pc, #84]	@ (90023bec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
90023b98:	4605      	mov	r5, r0
90023b9a:	7823      	ldrb	r3, [r4, #0]
90023b9c:	f3bf 8f5b 	dmb	ish
90023ba0:	07da      	lsls	r2, r3, #31
90023ba2:	d40b      	bmi.n	90023bbc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
90023ba4:	4620      	mov	r0, r4
90023ba6:	f009 f88b 	bl	9002ccc0 <__cxa_guard_acquire>
90023baa:	b138      	cbz	r0, 90023bbc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
90023bac:	4620      	mov	r0, r4
90023bae:	f009 f893 	bl	9002ccd8 <__cxa_guard_release>
90023bb2:	4a0f      	ldr	r2, [pc, #60]	@ (90023bf0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
90023bb4:	490f      	ldr	r1, [pc, #60]	@ (90023bf4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
90023bb6:	4810      	ldr	r0, [pc, #64]	@ (90023bf8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
90023bb8:	f009 f87b 	bl	9002ccb2 <__aeabi_atexit>
90023bbc:	4c0f      	ldr	r4, [pc, #60]	@ (90023bfc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
90023bbe:	7823      	ldrb	r3, [r4, #0]
90023bc0:	f3bf 8f5b 	dmb	ish
90023bc4:	07db      	lsls	r3, r3, #31
90023bc6:	d40b      	bmi.n	90023be0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
90023bc8:	4620      	mov	r0, r4
90023bca:	f009 f879 	bl	9002ccc0 <__cxa_guard_acquire>
90023bce:	b138      	cbz	r0, 90023be0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
90023bd0:	4620      	mov	r0, r4
90023bd2:	f009 f881 	bl	9002ccd8 <__cxa_guard_release>
90023bd6:	4a06      	ldr	r2, [pc, #24]	@ (90023bf0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
90023bd8:	4909      	ldr	r1, [pc, #36]	@ (90023c00 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
90023bda:	480a      	ldr	r0, [pc, #40]	@ (90023c04 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
90023bdc:	f009 f869 	bl	9002ccb2 <__aeabi_atexit>
90023be0:	4b05      	ldr	r3, [pc, #20]	@ (90023bf8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
90023be2:	66eb      	str	r3, [r5, #108]	@ 0x6c
90023be4:	4b07      	ldr	r3, [pc, #28]	@ (90023c04 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
90023be6:	672b      	str	r3, [r5, #112]	@ 0x70
90023be8:	bd38      	pop	{r3, r4, r5, pc}
90023bea:	bf00      	nop
90023bec:	24021cb0 	.word	0x24021cb0
90023bf0:	24000000 	.word	0x24000000
90023bf4:	9001f601 	.word	0x9001f601
90023bf8:	24000094 	.word	0x24000094
90023bfc:	24021cb4 	.word	0x24021cb4
90023c00:	9001f5ff 	.word	0x9001f5ff
90023c04:	24000098 	.word	0x24000098

90023c08 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
90023c08:	b510      	push	{r4, lr}
90023c0a:	4604      	mov	r4, r0
90023c0c:	f7ff ff88 	bl	90023b20 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
90023c10:	4620      	mov	r0, r4
90023c12:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90023c16:	f7ff bfbd 	b.w	90023b94 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

90023c1a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
90023c1a:	b510      	push	{r4, lr}
90023c1c:	4604      	mov	r4, r0
90023c1e:	f7ff fff3 	bl	90023c08 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
90023c22:	4620      	mov	r0, r4
90023c24:	f7ff ff72 	bl	90023b0c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
90023c28:	4620      	mov	r0, r4
90023c2a:	f7ff fdf9 	bl	90023820 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
90023c2e:	4620      	mov	r0, r4
90023c30:	f7ff fcfa 	bl	90023628 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
90023c34:	4620      	mov	r0, r4
90023c36:	f7ff fd75 	bl	90023724 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
90023c3a:	4620      	mov	r0, r4
90023c3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90023c40:	f7ff bee0 	b.w	90023a04 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

90023c44 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
90023c44:	b538      	push	{r3, r4, r5, lr}
90023c46:	4c0b      	ldr	r4, [pc, #44]	@ (90023c74 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
90023c48:	4605      	mov	r5, r0
90023c4a:	7823      	ldrb	r3, [r4, #0]
90023c4c:	f3bf 8f5b 	dmb	ish
90023c50:	07db      	lsls	r3, r3, #31
90023c52:	d40b      	bmi.n	90023c6c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
90023c54:	4620      	mov	r0, r4
90023c56:	f009 f833 	bl	9002ccc0 <__cxa_guard_acquire>
90023c5a:	b138      	cbz	r0, 90023c6c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
90023c5c:	4620      	mov	r0, r4
90023c5e:	f009 f83b 	bl	9002ccd8 <__cxa_guard_release>
90023c62:	4a05      	ldr	r2, [pc, #20]	@ (90023c78 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
90023c64:	4905      	ldr	r1, [pc, #20]	@ (90023c7c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
90023c66:	4806      	ldr	r0, [pc, #24]	@ (90023c80 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
90023c68:	f009 f823 	bl	9002ccb2 <__aeabi_atexit>
90023c6c:	4b04      	ldr	r3, [pc, #16]	@ (90023c80 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
90023c6e:	67eb      	str	r3, [r5, #124]	@ 0x7c
90023c70:	bd38      	pop	{r3, r4, r5, pc}
90023c72:	bf00      	nop
90023c74:	24021ca4 	.word	0x24021ca4
90023c78:	24000000 	.word	0x24000000
90023c7c:	9001f5f9 	.word	0x9001f5f9
90023c80:	2400008c 	.word	0x2400008c

90023c84 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
90023c84:	b538      	push	{r3, r4, r5, lr}
90023c86:	4c0b      	ldr	r4, [pc, #44]	@ (90023cb4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
90023c88:	4605      	mov	r5, r0
90023c8a:	7823      	ldrb	r3, [r4, #0]
90023c8c:	f3bf 8f5b 	dmb	ish
90023c90:	07db      	lsls	r3, r3, #31
90023c92:	d40b      	bmi.n	90023cac <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
90023c94:	4620      	mov	r0, r4
90023c96:	f009 f813 	bl	9002ccc0 <__cxa_guard_acquire>
90023c9a:	b138      	cbz	r0, 90023cac <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
90023c9c:	4620      	mov	r0, r4
90023c9e:	f009 f81b 	bl	9002ccd8 <__cxa_guard_release>
90023ca2:	4a05      	ldr	r2, [pc, #20]	@ (90023cb8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
90023ca4:	4905      	ldr	r1, [pc, #20]	@ (90023cbc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
90023ca6:	4806      	ldr	r0, [pc, #24]	@ (90023cc0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
90023ca8:	f009 f803 	bl	9002ccb2 <__aeabi_atexit>
90023cac:	4b04      	ldr	r3, [pc, #16]	@ (90023cc0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
90023cae:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
90023cb2:	bd38      	pop	{r3, r4, r5, pc}
90023cb4:	24021ca8 	.word	0x24021ca8
90023cb8:	24000000 	.word	0x24000000
90023cbc:	9001f5f7 	.word	0x9001f5f7
90023cc0:	24000090 	.word	0x24000090

90023cc4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
90023cc4:	b570      	push	{r4, r5, r6, lr}
90023cc6:	4d0d      	ldr	r5, [pc, #52]	@ (90023cfc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
90023cc8:	4606      	mov	r6, r0
90023cca:	4c0d      	ldr	r4, [pc, #52]	@ (90023d00 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
90023ccc:	782b      	ldrb	r3, [r5, #0]
90023cce:	f3bf 8f5b 	dmb	ish
90023cd2:	f013 0f01 	tst.w	r3, #1
90023cd6:	d10d      	bne.n	90023cf4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
90023cd8:	4628      	mov	r0, r5
90023cda:	f008 fff1 	bl	9002ccc0 <__cxa_guard_acquire>
90023cde:	b148      	cbz	r0, 90023cf4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
90023ce0:	4b08      	ldr	r3, [pc, #32]	@ (90023d04 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
90023ce2:	4628      	mov	r0, r5
90023ce4:	6023      	str	r3, [r4, #0]
90023ce6:	f008 fff7 	bl	9002ccd8 <__cxa_guard_release>
90023cea:	4a07      	ldr	r2, [pc, #28]	@ (90023d08 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
90023cec:	4620      	mov	r0, r4
90023cee:	4907      	ldr	r1, [pc, #28]	@ (90023d0c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
90023cf0:	f008 ffdf 	bl	9002ccb2 <__aeabi_atexit>
90023cf4:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
90023cf8:	bd70      	pop	{r4, r5, r6, pc}
90023cfa:	bf00      	nop
90023cfc:	24021cac 	.word	0x24021cac
90023d00:	24021e24 	.word	0x24021e24
90023d04:	90031f8c 	.word	0x90031f8c
90023d08:	24000000 	.word	0x24000000
90023d0c:	9001f5f5 	.word	0x9001f5f5

90023d10 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
90023d10:	b510      	push	{r4, lr}
90023d12:	4604      	mov	r4, r0
90023d14:	f7ff ff96 	bl	90023c44 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
90023d18:	4620      	mov	r0, r4
90023d1a:	f7ff ffb3 	bl	90023c84 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
90023d1e:	4620      	mov	r0, r4
90023d20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90023d24:	f7ff bfce 	b.w	90023cc4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

90023d28 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
90023d28:	b570      	push	{r4, r5, r6, lr}
90023d2a:	4d0d      	ldr	r5, [pc, #52]	@ (90023d60 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
90023d2c:	4606      	mov	r6, r0
90023d2e:	4c0d      	ldr	r4, [pc, #52]	@ (90023d64 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
90023d30:	782b      	ldrb	r3, [r5, #0]
90023d32:	f3bf 8f5b 	dmb	ish
90023d36:	f013 0f01 	tst.w	r3, #1
90023d3a:	d10d      	bne.n	90023d58 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
90023d3c:	4628      	mov	r0, r5
90023d3e:	f008 ffbf 	bl	9002ccc0 <__cxa_guard_acquire>
90023d42:	b148      	cbz	r0, 90023d58 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
90023d44:	4b08      	ldr	r3, [pc, #32]	@ (90023d68 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
90023d46:	4628      	mov	r0, r5
90023d48:	6023      	str	r3, [r4, #0]
90023d4a:	f008 ffc5 	bl	9002ccd8 <__cxa_guard_release>
90023d4e:	4a07      	ldr	r2, [pc, #28]	@ (90023d6c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
90023d50:	4620      	mov	r0, r4
90023d52:	4907      	ldr	r1, [pc, #28]	@ (90023d70 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
90023d54:	f008 ffad 	bl	9002ccb2 <__aeabi_atexit>
90023d58:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
90023d5c:	bd70      	pop	{r4, r5, r6, pc}
90023d5e:	bf00      	nop
90023d60:	24021ca0 	.word	0x24021ca0
90023d64:	24021d20 	.word	0x24021d20
90023d68:	90031fa8 	.word	0x90031fa8
90023d6c:	24000000 	.word	0x24000000
90023d70:	9001f5f3 	.word	0x9001f5f3

90023d74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
90023d74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023d78:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
90023d7c:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
90023d80:	2d00      	cmp	r5, #0
90023d82:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
90023d86:	fb05 4c0e 	mla	ip, r5, lr, r4
90023d8a:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
90023d8e:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
90023d92:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
90023d96:	eb02 0a0c 	add.w	sl, r2, ip
90023d9a:	8808      	ldrh	r0, [r1, #0]
90023d9c:	f2c0 80b0 	blt.w	90023f00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
90023da0:	45ab      	cmp	fp, r5
90023da2:	f340 80ad 	ble.w	90023f00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
90023da6:	2c00      	cmp	r4, #0
90023da8:	f2c0 80a8 	blt.w	90023efc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
90023dac:	45a6      	cmp	lr, r4
90023dae:	f340 80a5 	ble.w	90023efc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
90023db2:	f812 200c 	ldrb.w	r2, [r2, ip]
90023db6:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
90023dba:	1c62      	adds	r2, r4, #1
90023dbc:	f100 80a3 	bmi.w	90023f06 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90023dc0:	4596      	cmp	lr, r2
90023dc2:	f340 80a0 	ble.w	90023f06 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90023dc6:	f1b9 0f00 	cmp.w	r9, #0
90023dca:	f000 809c 	beq.w	90023f06 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90023dce:	f89a 2001 	ldrb.w	r2, [sl, #1]
90023dd2:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
90023dd6:	3501      	adds	r5, #1
90023dd8:	f100 8099 	bmi.w	90023f0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90023ddc:	45ab      	cmp	fp, r5
90023dde:	f340 8096 	ble.w	90023f0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90023de2:	2f00      	cmp	r7, #0
90023de4:	f000 8093 	beq.w	90023f0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90023de8:	2c00      	cmp	r4, #0
90023dea:	f2c0 808e 	blt.w	90023f0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
90023dee:	45a6      	cmp	lr, r4
90023df0:	f340 808b 	ble.w	90023f0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
90023df4:	f81a 200e 	ldrb.w	r2, [sl, lr]
90023df8:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
90023dfc:	3401      	adds	r4, #1
90023dfe:	f100 8089 	bmi.w	90023f14 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90023e02:	45a6      	cmp	lr, r4
90023e04:	f340 8086 	ble.w	90023f14 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90023e08:	f1b9 0f00 	cmp.w	r9, #0
90023e0c:	f000 8082 	beq.w	90023f14 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90023e10:	44d6      	add	lr, sl
90023e12:	f89e 2001 	ldrb.w	r2, [lr, #1]
90023e16:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
90023e1a:	ea4f 4408 	mov.w	r4, r8, lsl #16
90023e1e:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
90023e22:	fb19 fe07 	smulbb	lr, r9, r7
90023e26:	f1c7 0210 	rsb	r2, r7, #16
90023e2a:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90023e2e:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
90023e32:	eba2 0209 	sub.w	r2, r2, r9
90023e36:	ea44 0808 	orr.w	r8, r4, r8
90023e3a:	ea4f 440c 	mov.w	r4, ip, lsl #16
90023e3e:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90023e42:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
90023e46:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90023e4a:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90023e4e:	ea44 0c0c 	orr.w	ip, r4, ip
90023e52:	ebce 0449 	rsb	r4, lr, r9, lsl #1
90023e56:	fb04 f40c 	mul.w	r4, r4, ip
90023e5a:	fb02 4808 	mla	r8, r2, r8, r4
90023e5e:	041a      	lsls	r2, r3, #16
90023e60:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90023e64:	b2b4      	uxth	r4, r6
90023e66:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90023e6a:	43f6      	mvns	r6, r6
90023e6c:	4313      	orrs	r3, r2
90023e6e:	042a      	lsls	r2, r5, #16
90023e70:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90023e74:	b2f6      	uxtb	r6, r6
90023e76:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90023e7a:	fb0e 8303 	mla	r3, lr, r3, r8
90023e7e:	432a      	orrs	r2, r5
90023e80:	fb07 3202 	mla	r2, r7, r2, r3
90023e84:	10c7      	asrs	r7, r0, #3
90023e86:	0d53      	lsrs	r3, r2, #21
90023e88:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90023e8c:	0952      	lsrs	r2, r2, #5
90023e8e:	fb17 f706 	smulbb	r7, r7, r6
90023e92:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90023e96:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90023e9a:	431a      	orrs	r2, r3
90023e9c:	b293      	uxth	r3, r2
90023e9e:	1202      	asrs	r2, r0, #8
90023ea0:	121d      	asrs	r5, r3, #8
90023ea2:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90023ea6:	00c0      	lsls	r0, r0, #3
90023ea8:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90023eac:	fb12 f206 	smulbb	r2, r2, r6
90023eb0:	b2c0      	uxtb	r0, r0
90023eb2:	fb05 2504 	mla	r5, r5, r4, r2
90023eb6:	10da      	asrs	r2, r3, #3
90023eb8:	fb10 f006 	smulbb	r0, r0, r6
90023ebc:	00db      	lsls	r3, r3, #3
90023ebe:	b2ad      	uxth	r5, r5
90023ec0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90023ec4:	b2db      	uxtb	r3, r3
90023ec6:	fb02 7204 	mla	r2, r2, r4, r7
90023eca:	fb03 0004 	mla	r0, r3, r4, r0
90023ece:	1c6b      	adds	r3, r5, #1
90023ed0:	b292      	uxth	r2, r2
90023ed2:	b280      	uxth	r0, r0
90023ed4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90023ed8:	1c43      	adds	r3, r0, #1
90023eda:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90023ede:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90023ee2:	1c50      	adds	r0, r2, #1
90023ee4:	eb00 2212 	add.w	r2, r0, r2, lsr #8
90023ee8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023eec:	0952      	lsrs	r2, r2, #5
90023eee:	432b      	orrs	r3, r5
90023ef0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90023ef4:	4313      	orrs	r3, r2
90023ef6:	800b      	strh	r3, [r1, #0]
90023ef8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023efc:	4680      	mov	r8, r0
90023efe:	e75c      	b.n	90023dba <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
90023f00:	4684      	mov	ip, r0
90023f02:	4680      	mov	r8, r0
90023f04:	e767      	b.n	90023dd6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
90023f06:	4684      	mov	ip, r0
90023f08:	e765      	b.n	90023dd6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
90023f0a:	4605      	mov	r5, r0
90023f0c:	e776      	b.n	90023dfc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
90023f0e:	4603      	mov	r3, r0
90023f10:	4605      	mov	r5, r0
90023f12:	e782      	b.n	90023e1a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
90023f14:	4603      	mov	r3, r0
90023f16:	e780      	b.n	90023e1a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

90023f18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023f18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023f1c:	b099      	sub	sp, #100	@ 0x64
90023f1e:	9215      	str	r2, [sp, #84]	@ 0x54
90023f20:	9309      	str	r3, [sp, #36]	@ 0x24
90023f22:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
90023f24:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
90023f28:	9016      	str	r0, [sp, #88]	@ 0x58
90023f2a:	930d      	str	r3, [sp, #52]	@ 0x34
90023f2c:	6850      	ldr	r0, [r2, #4]
90023f2e:	910c      	str	r1, [sp, #48]	@ 0x30
90023f30:	6812      	ldr	r2, [r2, #0]
90023f32:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
90023f36:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
90023f3a:	fb00 1303 	mla	r3, r0, r3, r1
90023f3e:	eb02 0843 	add.w	r8, r2, r3, lsl #1
90023f42:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90023f44:	681b      	ldr	r3, [r3, #0]
90023f46:	930b      	str	r3, [sp, #44]	@ 0x2c
90023f48:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90023f4a:	685e      	ldr	r6, [r3, #4]
90023f4c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90023f4e:	3604      	adds	r6, #4
90023f50:	43db      	mvns	r3, r3
90023f52:	b2db      	uxtb	r3, r3
90023f54:	930a      	str	r3, [sp, #40]	@ 0x28
90023f56:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90023f58:	2b00      	cmp	r3, #0
90023f5a:	dc03      	bgt.n	90023f64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90023f5c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
90023f5e:	2b00      	cmp	r3, #0
90023f60:	f340 8225 	ble.w	900243ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
90023f64:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90023f66:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023f6a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023f6e:	1e48      	subs	r0, r1, #1
90023f70:	1e57      	subs	r7, r2, #1
90023f72:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023f74:	2b00      	cmp	r3, #0
90023f76:	f340 80e3 	ble.w	90024140 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
90023f7a:	ea5f 4c2a 	movs.w	ip, sl, asr #16
90023f7e:	ea4f 4325 	mov.w	r3, r5, asr #16
90023f82:	d406      	bmi.n	90023f92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90023f84:	4584      	cmp	ip, r0
90023f86:	da04      	bge.n	90023f92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90023f88:	2b00      	cmp	r3, #0
90023f8a:	db02      	blt.n	90023f92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90023f8c:	42bb      	cmp	r3, r7
90023f8e:	f2c0 80d8 	blt.w	90024142 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
90023f92:	f11c 0c01 	adds.w	ip, ip, #1
90023f96:	f100 80c9 	bmi.w	9002412c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90023f9a:	4561      	cmp	r1, ip
90023f9c:	f2c0 80c6 	blt.w	9002412c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90023fa0:	3301      	adds	r3, #1
90023fa2:	f100 80c3 	bmi.w	9002412c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90023fa6:	429a      	cmp	r2, r3
90023fa8:	f2c0 80c0 	blt.w	9002412c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90023fac:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
90023fb0:	4647      	mov	r7, r8
90023fb2:	f1bb 0f00 	cmp.w	fp, #0
90023fb6:	f340 80e3 	ble.w	90024180 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
90023fba:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
90023fbc:	ea4f 4c25 	mov.w	ip, r5, asr #16
90023fc0:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90023fc2:	f3ca 3003 	ubfx	r0, sl, #12, #4
90023fc6:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90023fca:	ea5f 422a 	movs.w	r2, sl, asr #16
90023fce:	f3c5 3103 	ubfx	r1, r5, #12, #4
90023fd2:	689b      	ldr	r3, [r3, #8]
90023fd4:	f100 8121 	bmi.w	9002421a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90023fd8:	f103 39ff 	add.w	r9, r3, #4294967295
90023fdc:	454a      	cmp	r2, r9
90023fde:	f280 811c 	bge.w	9002421a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90023fe2:	f1bc 0f00 	cmp.w	ip, #0
90023fe6:	f2c0 8118 	blt.w	9002421a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90023fea:	f10e 39ff 	add.w	r9, lr, #4294967295
90023fee:	45cc      	cmp	ip, r9
90023ff0:	f280 8113 	bge.w	9002421a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90023ff4:	b21b      	sxth	r3, r3
90023ff6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90023ff8:	fb0c 2203 	mla	r2, ip, r3, r2
90023ffc:	eb04 0902 	add.w	r9, r4, r2
90024000:	5ca2      	ldrb	r2, [r4, r2]
90024002:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
90024006:	2800      	cmp	r0, #0
90024008:	f000 80fe 	beq.w	90024208 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
9002400c:	f899 2001 	ldrb.w	r2, [r9, #1]
90024010:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
90024014:	9211      	str	r2, [sp, #68]	@ 0x44
90024016:	b151      	cbz	r1, 9002402e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90024018:	eb09 0203 	add.w	r2, r9, r3
9002401c:	f819 3003 	ldrb.w	r3, [r9, r3]
90024020:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90024024:	930f      	str	r3, [sp, #60]	@ 0x3c
90024026:	7853      	ldrb	r3, [r2, #1]
90024028:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002402c:	9312      	str	r3, [sp, #72]	@ 0x48
9002402e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90024030:	fb10 f201 	smulbb	r2, r0, r1
90024034:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90024036:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9002403a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9002403e:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
90024042:	10d2      	asrs	r2, r2, #3
90024044:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90024048:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
9002404c:	ea4c 0c03 	orr.w	ip, ip, r3
90024050:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90024052:	041b      	lsls	r3, r3, #16
90024054:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90024058:	4323      	orrs	r3, r4
9002405a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
9002405c:	4353      	muls	r3, r2
9002405e:	fb09 330c 	mla	r3, r9, ip, r3
90024062:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
90024066:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
9002406a:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
9002406e:	ea4c 0e0e 	orr.w	lr, ip, lr
90024072:	f1c1 0c10 	rsb	ip, r1, #16
90024076:	ebac 0c00 	sub.w	ip, ip, r0
9002407a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9002407e:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
90024082:	fb0c 3c0e 	mla	ip, ip, lr, r3
90024086:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90024088:	0418      	lsls	r0, r3, #16
9002408a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9002408e:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90024092:	4318      	orrs	r0, r3
90024094:	fb02 c200 	mla	r2, r2, r0, ip
90024098:	8838      	ldrh	r0, [r7, #0]
9002409a:	0d53      	lsrs	r3, r2, #21
9002409c:	0952      	lsrs	r2, r2, #5
9002409e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900240a2:	1201      	asrs	r1, r0, #8
900240a4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900240a8:	ea4f 0ee0 	mov.w	lr, r0, asr #3
900240ac:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
900240b0:	00c0      	lsls	r0, r0, #3
900240b2:	431a      	orrs	r2, r3
900240b4:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
900240b8:	fb11 f104 	smulbb	r1, r1, r4
900240bc:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
900240c0:	b292      	uxth	r2, r2
900240c2:	fb1e fe04 	smulbb	lr, lr, r4
900240c6:	b2c0      	uxtb	r0, r0
900240c8:	ea4f 2c22 	mov.w	ip, r2, asr #8
900240cc:	fb10 f004 	smulbb	r0, r0, r4
900240d0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
900240d4:	fb0c 1c03 	mla	ip, ip, r3, r1
900240d8:	10d1      	asrs	r1, r2, #3
900240da:	00d2      	lsls	r2, r2, #3
900240dc:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
900240e0:	fa1f fc8c 	uxth.w	ip, ip
900240e4:	b2d2      	uxtb	r2, r2
900240e6:	fb01 e103 	mla	r1, r1, r3, lr
900240ea:	fb02 0303 	mla	r3, r2, r3, r0
900240ee:	b289      	uxth	r1, r1
900240f0:	b29a      	uxth	r2, r3
900240f2:	f10c 0301 	add.w	r3, ip, #1
900240f6:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
900240fa:	1c53      	adds	r3, r2, #1
900240fc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90024100:	1c4a      	adds	r2, r1, #1
90024102:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90024106:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9002410a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002410e:	0949      	lsrs	r1, r1, #5
90024110:	ea43 030c 	orr.w	r3, r3, ip
90024114:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90024118:	430b      	orrs	r3, r1
9002411a:	803b      	strh	r3, [r7, #0]
9002411c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
9002411e:	3702      	adds	r7, #2
90024120:	f10b 3bff 	add.w	fp, fp, #4294967295
90024124:	449a      	add	sl, r3
90024126:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90024128:	441d      	add	r5, r3
9002412a:	e742      	b.n	90023fb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9002412c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
9002412e:	f108 0802 	add.w	r8, r8, #2
90024132:	449a      	add	sl, r3
90024134:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90024136:	441d      	add	r5, r3
90024138:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002413a:	3b01      	subs	r3, #1
9002413c:	9309      	str	r3, [sp, #36]	@ 0x24
9002413e:	e718      	b.n	90023f72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
90024140:	d023      	beq.n	9002418a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90024142:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024144:	9825      	ldr	r0, [sp, #148]	@ 0x94
90024146:	3b01      	subs	r3, #1
90024148:	fb00 a003 	mla	r0, r0, r3, sl
9002414c:	1400      	asrs	r0, r0, #16
9002414e:	f53f af2d 	bmi.w	90023fac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90024152:	3901      	subs	r1, #1
90024154:	4288      	cmp	r0, r1
90024156:	f6bf af29 	bge.w	90023fac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9002415a:	9926      	ldr	r1, [sp, #152]	@ 0x98
9002415c:	fb01 5303 	mla	r3, r1, r3, r5
90024160:	141b      	asrs	r3, r3, #16
90024162:	f53f af23 	bmi.w	90023fac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90024166:	3a01      	subs	r2, #1
90024168:	4293      	cmp	r3, r2
9002416a:	f6bf af1f 	bge.w	90023fac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9002416e:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
90024172:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
90024176:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
9002417a:	f1be 0f00 	cmp.w	lr, #0
9002417e:	dc6c      	bgt.n	9002425a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90024180:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024182:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90024186:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9002418a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002418c:	2b00      	cmp	r3, #0
9002418e:	f340 810e 	ble.w	900243ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
90024192:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90024196:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90024198:	ee30 0a04 	vadd.f32	s0, s0, s8
9002419c:	ee70 0aa4 	vadd.f32	s1, s1, s9
900241a0:	eef0 6a62 	vmov.f32	s13, s5
900241a4:	eec7 7a00 	vdiv.f32	s15, s14, s0
900241a8:	ee31 1a05 	vadd.f32	s2, s2, s10
900241ac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900241b0:	ee16 aa90 	vmov	sl, s13
900241b4:	eef0 6a43 	vmov.f32	s13, s6
900241b8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900241bc:	ee16 5a90 	vmov	r5, s13
900241c0:	ee20 7aa7 	vmul.f32	s14, s1, s15
900241c4:	ee61 7a27 	vmul.f32	s15, s2, s15
900241c8:	ee77 2a62 	vsub.f32	s5, s14, s5
900241cc:	ee37 3ac3 	vsub.f32	s6, s15, s6
900241d0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900241d4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900241d8:	ee12 2a90 	vmov	r2, s5
900241dc:	eef0 2a47 	vmov.f32	s5, s14
900241e0:	fb92 f3f3 	sdiv	r3, r2, r3
900241e4:	ee13 2a10 	vmov	r2, s6
900241e8:	9325      	str	r3, [sp, #148]	@ 0x94
900241ea:	9b22      	ldr	r3, [sp, #136]	@ 0x88
900241ec:	eeb0 3a67 	vmov.f32	s6, s15
900241f0:	fb92 f3f3 	sdiv	r3, r2, r3
900241f4:	9326      	str	r3, [sp, #152]	@ 0x98
900241f6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900241f8:	9a15      	ldr	r2, [sp, #84]	@ 0x54
900241fa:	3b01      	subs	r3, #1
900241fc:	930c      	str	r3, [sp, #48]	@ 0x30
900241fe:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90024200:	bf08      	it	eq
90024202:	4613      	moveq	r3, r2
90024204:	9309      	str	r3, [sp, #36]	@ 0x24
90024206:	e6a6      	b.n	90023f56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90024208:	2900      	cmp	r1, #0
9002420a:	f43f af10 	beq.w	9002402e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9002420e:	f819 3003 	ldrb.w	r3, [r9, r3]
90024212:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90024216:	930f      	str	r3, [sp, #60]	@ 0x3c
90024218:	e709      	b.n	9002402e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9002421a:	f112 0901 	adds.w	r9, r2, #1
9002421e:	f53f af7d 	bmi.w	9002411c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90024222:	454b      	cmp	r3, r9
90024224:	f6ff af7a 	blt.w	9002411c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90024228:	f11c 0901 	adds.w	r9, ip, #1
9002422c:	f53f af76 	bmi.w	9002411c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90024230:	45ce      	cmp	lr, r9
90024232:	f6ff af73 	blt.w	9002411c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90024236:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90024238:	b21b      	sxth	r3, r3
9002423a:	9202      	str	r2, [sp, #8]
9002423c:	fa0f f28e 	sxth.w	r2, lr
90024240:	9300      	str	r3, [sp, #0]
90024242:	4633      	mov	r3, r6
90024244:	9201      	str	r2, [sp, #4]
90024246:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90024248:	e9cd 1405 	strd	r1, r4, [sp, #20]
9002424c:	e9cd c003 	strd	ip, r0, [sp, #12]
90024250:	4639      	mov	r1, r7
90024252:	9816      	ldr	r0, [sp, #88]	@ 0x58
90024254:	f7ff fd8e 	bl	90023d74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
90024258:	e760      	b.n	9002411c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9002425a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9002425c:	ea4f 422a 	mov.w	r2, sl, asr #16
90024260:	1429      	asrs	r1, r5, #16
90024262:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90024264:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90024268:	f3ca 3c03 	ubfx	ip, sl, #12, #4
9002426c:	f3c5 3003 	ubfx	r0, r5, #12, #4
90024270:	fb03 2101 	mla	r1, r3, r1, r2
90024274:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90024276:	440a      	add	r2, r1
90024278:	5c61      	ldrb	r1, [r4, r1]
9002427a:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
9002427e:	f1bc 0f00 	cmp.w	ip, #0
90024282:	f000 808c 	beq.w	9002439e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
90024286:	7857      	ldrb	r7, [r2, #1]
90024288:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
9002428c:	9413      	str	r4, [sp, #76]	@ 0x4c
9002428e:	b140      	cbz	r0, 900242a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90024290:	18d7      	adds	r7, r2, r3
90024292:	5cd3      	ldrb	r3, [r2, r3]
90024294:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90024298:	9310      	str	r3, [sp, #64]	@ 0x40
9002429a:	787b      	ldrb	r3, [r7, #1]
9002429c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900242a0:	9314      	str	r3, [sp, #80]	@ 0x50
900242a2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
900242a4:	fb1c f200 	smulbb	r2, ip, r0
900242a8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900242aa:	f10e 3eff 	add.w	lr, lr, #4294967295
900242ae:	041f      	lsls	r7, r3, #16
900242b0:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900242b4:	10d2      	asrs	r2, r2, #3
900242b6:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
900242ba:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
900242be:	431f      	orrs	r7, r3
900242c0:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
900242c4:	9317      	str	r3, [sp, #92]	@ 0x5c
900242c6:	9b14      	ldr	r3, [sp, #80]	@ 0x50
900242c8:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
900242ca:	041b      	lsls	r3, r3, #16
900242cc:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900242d0:	ea43 030b 	orr.w	r3, r3, fp
900242d4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
900242d8:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
900242dc:	4353      	muls	r3, r2
900242de:	fb04 3707 	mla	r7, r4, r7, r3
900242e2:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
900242e6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
900242e8:	ea43 0b01 	orr.w	fp, r3, r1
900242ec:	f1c0 0110 	rsb	r1, r0, #16
900242f0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900242f2:	eba1 0c0c 	sub.w	ip, r1, ip
900242f6:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
900242fa:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
900242fe:	fb0c 770b 	mla	r7, ip, fp, r7
90024302:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90024306:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
9002430a:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
9002430e:	ea4c 0c0b 	orr.w	ip, ip, fp
90024312:	fb02 770c 	mla	r7, r2, ip, r7
90024316:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90024318:	0d79      	lsrs	r1, r7, #21
9002431a:	8812      	ldrh	r2, [r2, #0]
9002431c:	097f      	lsrs	r7, r7, #5
9002431e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90024322:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90024326:	430f      	orrs	r7, r1
90024328:	1211      	asrs	r1, r2, #8
9002432a:	b2bb      	uxth	r3, r7
9002432c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90024330:	10d7      	asrs	r7, r2, #3
90024332:	fb11 f104 	smulbb	r1, r1, r4
90024336:	1218      	asrs	r0, r3, #8
90024338:	00d2      	lsls	r2, r2, #3
9002433a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9002433e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90024342:	fb17 f704 	smulbb	r7, r7, r4
90024346:	b2d2      	uxtb	r2, r2
90024348:	fb00 1009 	mla	r0, r0, r9, r1
9002434c:	10d9      	asrs	r1, r3, #3
9002434e:	fb12 f204 	smulbb	r2, r2, r4
90024352:	00db      	lsls	r3, r3, #3
90024354:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90024358:	b280      	uxth	r0, r0
9002435a:	b2db      	uxtb	r3, r3
9002435c:	fb01 7109 	mla	r1, r1, r9, r7
90024360:	fb03 2309 	mla	r3, r3, r9, r2
90024364:	1c42      	adds	r2, r0, #1
90024366:	b289      	uxth	r1, r1
90024368:	b29b      	uxth	r3, r3
9002436a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002436e:	1c4f      	adds	r7, r1, #1
90024370:	1c5a      	adds	r2, r3, #1
90024372:	eb07 2111 	add.w	r1, r7, r1, lsr #8
90024376:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
9002437a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
9002437e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90024380:	0949      	lsrs	r1, r1, #5
90024382:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90024386:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002438a:	4310      	orrs	r0, r2
9002438c:	4308      	orrs	r0, r1
9002438e:	f823 0b02 	strh.w	r0, [r3], #2
90024392:	930e      	str	r3, [sp, #56]	@ 0x38
90024394:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90024396:	449a      	add	sl, r3
90024398:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9002439a:	441d      	add	r5, r3
9002439c:	e6ed      	b.n	9002417a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
9002439e:	2800      	cmp	r0, #0
900243a0:	f43f af7f 	beq.w	900242a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900243a4:	5cd3      	ldrb	r3, [r2, r3]
900243a6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900243aa:	9310      	str	r3, [sp, #64]	@ 0x40
900243ac:	e779      	b.n	900242a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900243ae:	b019      	add	sp, #100	@ 0x64
900243b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900243b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
900243b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900243b8:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
900243bc:	f9bd e020 	ldrsh.w	lr, [sp, #32]
900243c0:	f1b8 0f00 	cmp.w	r8, #0
900243c4:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
900243c8:	fb08 470e 	mla	r7, r8, lr, r4
900243cc:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
900243d0:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
900243d4:	eb02 0907 	add.w	r9, r2, r7
900243d8:	8808      	ldrh	r0, [r1, #0]
900243da:	db67      	blt.n	900244ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
900243dc:	45c2      	cmp	sl, r8
900243de:	dd65      	ble.n	900244ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
900243e0:	2c00      	cmp	r4, #0
900243e2:	db61      	blt.n	900244a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
900243e4:	45a6      	cmp	lr, r4
900243e6:	dd5f      	ble.n	900244a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
900243e8:	5dd2      	ldrb	r2, [r2, r7]
900243ea:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
900243ee:	1c62      	adds	r2, r4, #1
900243f0:	d45f      	bmi.n	900244b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
900243f2:	4596      	cmp	lr, r2
900243f4:	dd5d      	ble.n	900244b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
900243f6:	2d00      	cmp	r5, #0
900243f8:	d05b      	beq.n	900244b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
900243fa:	f899 2001 	ldrb.w	r2, [r9, #1]
900243fe:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
90024402:	f118 0801 	adds.w	r8, r8, #1
90024406:	d458      	bmi.n	900244ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90024408:	45c2      	cmp	sl, r8
9002440a:	dd56      	ble.n	900244ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
9002440c:	2e00      	cmp	r6, #0
9002440e:	d054      	beq.n	900244ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90024410:	2c00      	cmp	r4, #0
90024412:	db50      	blt.n	900244b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
90024414:	45a6      	cmp	lr, r4
90024416:	dd4e      	ble.n	900244b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
90024418:	f819 200e 	ldrb.w	r2, [r9, lr]
9002441c:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
90024420:	3401      	adds	r4, #1
90024422:	d407      	bmi.n	90024434 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90024424:	45a6      	cmp	lr, r4
90024426:	dd05      	ble.n	90024434 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90024428:	b125      	cbz	r5, 90024434 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9002442a:	44ce      	add	lr, r9
9002442c:	f89e 0001 	ldrb.w	r0, [lr, #1]
90024430:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90024434:	fb15 f406 	smulbb	r4, r5, r6
90024438:	ea4f 430c 	mov.w	r3, ip, lsl #16
9002443c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90024440:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90024444:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90024448:	f3c4 04c7 	ubfx	r4, r4, #3, #8
9002444c:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90024450:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90024454:	ea43 0c0c 	orr.w	ip, r3, ip
90024458:	f1c6 0310 	rsb	r3, r6, #16
9002445c:	ea4e 0707 	orr.w	r7, lr, r7
90024460:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90024464:	1b5b      	subs	r3, r3, r5
90024466:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
9002446a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9002446e:	437d      	muls	r5, r7
90024470:	fb03 5c0c 	mla	ip, r3, ip, r5
90024474:	0403      	lsls	r3, r0, #16
90024476:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9002447a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9002447e:	4318      	orrs	r0, r3
90024480:	0413      	lsls	r3, r2, #16
90024482:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90024486:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9002448a:	fb04 c000 	mla	r0, r4, r0, ip
9002448e:	4313      	orrs	r3, r2
90024490:	fb06 0003 	mla	r0, r6, r3, r0
90024494:	0d43      	lsrs	r3, r0, #21
90024496:	0940      	lsrs	r0, r0, #5
90024498:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002449c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900244a0:	4318      	orrs	r0, r3
900244a2:	8008      	strh	r0, [r1, #0]
900244a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900244a8:	4684      	mov	ip, r0
900244aa:	e7a0      	b.n	900243ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
900244ac:	4607      	mov	r7, r0
900244ae:	4684      	mov	ip, r0
900244b0:	e7a7      	b.n	90024402 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
900244b2:	4607      	mov	r7, r0
900244b4:	e7a5      	b.n	90024402 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
900244b6:	4602      	mov	r2, r0
900244b8:	e7b2      	b.n	90024420 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
900244ba:	4602      	mov	r2, r0
900244bc:	e7ba      	b.n	90024434 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

900244be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900244be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900244c2:	b093      	sub	sp, #76	@ 0x4c
900244c4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
900244c8:	920f      	str	r2, [sp, #60]	@ 0x3c
900244ca:	9a21      	ldr	r2, [sp, #132]	@ 0x84
900244cc:	9010      	str	r0, [sp, #64]	@ 0x40
900244ce:	9108      	str	r1, [sp, #32]
900244d0:	6850      	ldr	r0, [r2, #4]
900244d2:	9306      	str	r3, [sp, #24]
900244d4:	6812      	ldr	r2, [r2, #0]
900244d6:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
900244da:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
900244de:	fb00 1303 	mla	r3, r0, r3, r1
900244e2:	eb02 0943 	add.w	r9, r2, r3, lsl #1
900244e6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900244e8:	681b      	ldr	r3, [r3, #0]
900244ea:	9307      	str	r3, [sp, #28]
900244ec:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900244ee:	685f      	ldr	r7, [r3, #4]
900244f0:	3704      	adds	r7, #4
900244f2:	9b08      	ldr	r3, [sp, #32]
900244f4:	2b00      	cmp	r3, #0
900244f6:	dc03      	bgt.n	90024500 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
900244f8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900244fa:	2b00      	cmp	r3, #0
900244fc:	f340 81b2 	ble.w	90024864 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
90024500:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024502:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024506:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002450a:	1e48      	subs	r0, r1, #1
9002450c:	f102 3cff 	add.w	ip, r2, #4294967295
90024510:	9b06      	ldr	r3, [sp, #24]
90024512:	2b00      	cmp	r3, #0
90024514:	f340 80a9 	ble.w	9002466a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90024518:	ea5f 4e24 	movs.w	lr, r4, asr #16
9002451c:	ea4f 4326 	mov.w	r3, r6, asr #16
90024520:	d406      	bmi.n	90024530 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90024522:	4586      	cmp	lr, r0
90024524:	da04      	bge.n	90024530 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90024526:	2b00      	cmp	r3, #0
90024528:	db02      	blt.n	90024530 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9002452a:	4563      	cmp	r3, ip
9002452c:	f2c0 809e 	blt.w	9002466c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
90024530:	f11e 0e01 	adds.w	lr, lr, #1
90024534:	f100 808f 	bmi.w	90024656 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90024538:	4571      	cmp	r1, lr
9002453a:	f2c0 808c 	blt.w	90024656 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9002453e:	3301      	adds	r3, #1
90024540:	f100 8089 	bmi.w	90024656 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90024544:	429a      	cmp	r2, r3
90024546:	f2c0 8086 	blt.w	90024656 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9002454a:	f8dd b018 	ldr.w	fp, [sp, #24]
9002454e:	46c8      	mov	r8, r9
90024550:	f1bb 0f00 	cmp.w	fp, #0
90024554:	f340 80a6 	ble.w	900246a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
90024558:	9a24      	ldr	r2, [sp, #144]	@ 0x90
9002455a:	ea4f 4c26 	mov.w	ip, r6, asr #16
9002455e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024560:	f3c4 3003 	ubfx	r0, r4, #12, #4
90024564:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90024568:	1422      	asrs	r2, r4, #16
9002456a:	f3c6 3103 	ubfx	r1, r6, #12, #4
9002456e:	689b      	ldr	r3, [r3, #8]
90024570:	f100 80e3 	bmi.w	9002473a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90024574:	f103 3aff 	add.w	sl, r3, #4294967295
90024578:	4552      	cmp	r2, sl
9002457a:	f280 80de 	bge.w	9002473a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9002457e:	f1bc 0f00 	cmp.w	ip, #0
90024582:	f2c0 80da 	blt.w	9002473a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90024586:	f10e 3aff 	add.w	sl, lr, #4294967295
9002458a:	45d4      	cmp	ip, sl
9002458c:	f280 80d5 	bge.w	9002473a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90024590:	b21b      	sxth	r3, r3
90024592:	9d07      	ldr	r5, [sp, #28]
90024594:	fb0c 2203 	mla	r2, ip, r3, r2
90024598:	eb05 0a02 	add.w	sl, r5, r2
9002459c:	5caa      	ldrb	r2, [r5, r2]
9002459e:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
900245a2:	2800      	cmp	r0, #0
900245a4:	f000 80c0 	beq.w	90024728 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
900245a8:	f89a 2001 	ldrb.w	r2, [sl, #1]
900245ac:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
900245b0:	920b      	str	r2, [sp, #44]	@ 0x2c
900245b2:	b151      	cbz	r1, 900245ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
900245b4:	eb0a 0203 	add.w	r2, sl, r3
900245b8:	f81a 3003 	ldrb.w	r3, [sl, r3]
900245bc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900245c0:	9309      	str	r3, [sp, #36]	@ 0x24
900245c2:	7853      	ldrb	r3, [r2, #1]
900245c4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900245c8:	930c      	str	r3, [sp, #48]	@ 0x30
900245ca:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900245cc:	fb10 f201 	smulbb	r2, r0, r1
900245d0:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
900245d2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
900245d6:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900245da:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
900245de:	10d2      	asrs	r2, r2, #3
900245e0:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
900245e4:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
900245e8:	ea4c 0c03 	orr.w	ip, ip, r3
900245ec:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900245ee:	041b      	lsls	r3, r3, #16
900245f0:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900245f4:	432b      	orrs	r3, r5
900245f6:	4353      	muls	r3, r2
900245f8:	fb0a 330c 	mla	r3, sl, ip, r3
900245fc:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
90024600:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90024604:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90024608:	ea4c 0e0e 	orr.w	lr, ip, lr
9002460c:	f1c1 0c10 	rsb	ip, r1, #16
90024610:	ebac 0c00 	sub.w	ip, ip, r0
90024614:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90024618:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
9002461c:	fb0c 3c0e 	mla	ip, ip, lr, r3
90024620:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024622:	0418      	lsls	r0, r3, #16
90024624:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90024628:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
9002462c:	4318      	orrs	r0, r3
9002462e:	fb02 c200 	mla	r2, r2, r0, ip
90024632:	0d53      	lsrs	r3, r2, #21
90024634:	0952      	lsrs	r2, r2, #5
90024636:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002463a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9002463e:	431a      	orrs	r2, r3
90024640:	f8a8 2000 	strh.w	r2, [r8]
90024644:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90024646:	f108 0802 	add.w	r8, r8, #2
9002464a:	f10b 3bff 	add.w	fp, fp, #4294967295
9002464e:	441c      	add	r4, r3
90024650:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024652:	441e      	add	r6, r3
90024654:	e77c      	b.n	90024550 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90024656:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90024658:	f109 0902 	add.w	r9, r9, #2
9002465c:	441c      	add	r4, r3
9002465e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024660:	441e      	add	r6, r3
90024662:	9b06      	ldr	r3, [sp, #24]
90024664:	3b01      	subs	r3, #1
90024666:	9306      	str	r3, [sp, #24]
90024668:	e752      	b.n	90024510 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9002466a:	d020      	beq.n	900246ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9002466c:	9b06      	ldr	r3, [sp, #24]
9002466e:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90024670:	3b01      	subs	r3, #1
90024672:	fb00 4003 	mla	r0, r0, r3, r4
90024676:	1400      	asrs	r0, r0, #16
90024678:	f53f af67 	bmi.w	9002454a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9002467c:	3901      	subs	r1, #1
9002467e:	4288      	cmp	r0, r1
90024680:	f6bf af63 	bge.w	9002454a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90024684:	9920      	ldr	r1, [sp, #128]	@ 0x80
90024686:	fb01 6303 	mla	r3, r1, r3, r6
9002468a:	141b      	asrs	r3, r3, #16
9002468c:	f53f af5d 	bmi.w	9002454a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90024690:	3a01      	subs	r2, #1
90024692:	4293      	cmp	r3, r2
90024694:	f6bf af59 	bge.w	9002454a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90024698:	f8dd 8018 	ldr.w	r8, [sp, #24]
9002469c:	46ca      	mov	sl, r9
9002469e:	f1b8 0f00 	cmp.w	r8, #0
900246a2:	dc67      	bgt.n	90024774 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
900246a4:	9b06      	ldr	r3, [sp, #24]
900246a6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
900246aa:	eb09 0945 	add.w	r9, r9, r5, lsl #1
900246ae:	9b08      	ldr	r3, [sp, #32]
900246b0:	2b00      	cmp	r3, #0
900246b2:	f340 80d7 	ble.w	90024864 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
900246b6:	ee30 0a04 	vadd.f32	s0, s0, s8
900246ba:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900246bc:	ee70 0aa4 	vadd.f32	s1, s1, s9
900246c0:	eeb0 6a62 	vmov.f32	s12, s5
900246c4:	eec6 7a80 	vdiv.f32	s15, s13, s0
900246c8:	ee31 1a05 	vadd.f32	s2, s2, s10
900246cc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
900246d0:	ee16 4a10 	vmov	r4, s12
900246d4:	eeb0 6a43 	vmov.f32	s12, s6
900246d8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
900246dc:	ee16 6a10 	vmov	r6, s12
900246e0:	ee20 7aa7 	vmul.f32	s14, s1, s15
900246e4:	ee61 7a27 	vmul.f32	s15, s2, s15
900246e8:	ee77 2a62 	vsub.f32	s5, s14, s5
900246ec:	ee37 3ac3 	vsub.f32	s6, s15, s6
900246f0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900246f4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900246f8:	ee12 2a90 	vmov	r2, s5
900246fc:	eef0 2a47 	vmov.f32	s5, s14
90024700:	fb92 f3f3 	sdiv	r3, r2, r3
90024704:	ee13 2a10 	vmov	r2, s6
90024708:	931f      	str	r3, [sp, #124]	@ 0x7c
9002470a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002470c:	eeb0 3a67 	vmov.f32	s6, s15
90024710:	fb92 f3f3 	sdiv	r3, r2, r3
90024714:	9320      	str	r3, [sp, #128]	@ 0x80
90024716:	9b08      	ldr	r3, [sp, #32]
90024718:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9002471a:	3b01      	subs	r3, #1
9002471c:	9308      	str	r3, [sp, #32]
9002471e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90024720:	bf08      	it	eq
90024722:	4613      	moveq	r3, r2
90024724:	9306      	str	r3, [sp, #24]
90024726:	e6e4      	b.n	900244f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
90024728:	2900      	cmp	r1, #0
9002472a:	f43f af4e 	beq.w	900245ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9002472e:	f81a 3003 	ldrb.w	r3, [sl, r3]
90024732:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90024736:	9309      	str	r3, [sp, #36]	@ 0x24
90024738:	e747      	b.n	900245ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9002473a:	f112 0a01 	adds.w	sl, r2, #1
9002473e:	d481      	bmi.n	90024644 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90024740:	4553      	cmp	r3, sl
90024742:	f6ff af7f 	blt.w	90024644 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90024746:	f11c 0a01 	adds.w	sl, ip, #1
9002474a:	f53f af7b 	bmi.w	90024644 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9002474e:	45d6      	cmp	lr, sl
90024750:	f6ff af78 	blt.w	90024644 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90024754:	b21b      	sxth	r3, r3
90024756:	e9cd 2c02 	strd	r2, ip, [sp, #8]
9002475a:	fa0f f28e 	sxth.w	r2, lr
9002475e:	9300      	str	r3, [sp, #0]
90024760:	463b      	mov	r3, r7
90024762:	9201      	str	r2, [sp, #4]
90024764:	9a07      	ldr	r2, [sp, #28]
90024766:	e9cd 0104 	strd	r0, r1, [sp, #16]
9002476a:	4641      	mov	r1, r8
9002476c:	9810      	ldr	r0, [sp, #64]	@ 0x40
9002476e:	f7ff fe21 	bl	900243b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
90024772:	e767      	b.n	90024644 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90024774:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024776:	1422      	asrs	r2, r4, #16
90024778:	1431      	asrs	r1, r6, #16
9002477a:	9d07      	ldr	r5, [sp, #28]
9002477c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90024780:	f3c4 3e03 	ubfx	lr, r4, #12, #4
90024784:	f3c6 3003 	ubfx	r0, r6, #12, #4
90024788:	fb03 2101 	mla	r1, r3, r1, r2
9002478c:	9a07      	ldr	r2, [sp, #28]
9002478e:	440a      	add	r2, r1
90024790:	5c69      	ldrb	r1, [r5, r1]
90024792:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
90024796:	f1be 0f00 	cmp.w	lr, #0
9002479a:	d05c      	beq.n	90024856 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
9002479c:	f892 c001 	ldrb.w	ip, [r2, #1]
900247a0:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
900247a4:	950d      	str	r5, [sp, #52]	@ 0x34
900247a6:	b150      	cbz	r0, 900247be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
900247a8:	eb02 0c03 	add.w	ip, r2, r3
900247ac:	5cd3      	ldrb	r3, [r2, r3]
900247ae:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900247b2:	930a      	str	r3, [sp, #40]	@ 0x28
900247b4:	f89c 3001 	ldrb.w	r3, [ip, #1]
900247b8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900247bc:	930e      	str	r3, [sp, #56]	@ 0x38
900247be:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900247c0:	fb1e f200 	smulbb	r2, lr, r0
900247c4:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900247c6:	f108 38ff 	add.w	r8, r8, #4294967295
900247ca:	ea4f 4c03 	mov.w	ip, r3, lsl #16
900247ce:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900247d2:	10d2      	asrs	r2, r2, #3
900247d4:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
900247d8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
900247dc:	ea4c 0c03 	orr.w	ip, ip, r3
900247e0:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
900247e4:	9311      	str	r3, [sp, #68]	@ 0x44
900247e6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900247e8:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900247ea:	041b      	lsls	r3, r3, #16
900247ec:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900247f0:	ea43 030b 	orr.w	r3, r3, fp
900247f4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
900247f8:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
900247fc:	4353      	muls	r3, r2
900247fe:	fb05 3c0c 	mla	ip, r5, ip, r3
90024802:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
90024806:	ea43 0b01 	orr.w	fp, r3, r1
9002480a:	f1c0 0110 	rsb	r1, r0, #16
9002480e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90024810:	eba1 0e0e 	sub.w	lr, r1, lr
90024814:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
90024818:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
9002481c:	fb0e cc0b 	mla	ip, lr, fp, ip
90024820:	ea4f 4b03 	mov.w	fp, r3, lsl #16
90024824:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
90024828:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
9002482c:	ea4b 0e0e 	orr.w	lr, fp, lr
90024830:	fb02 cc0e 	mla	ip, r2, lr, ip
90024834:	ea4f 535c 	mov.w	r3, ip, lsr #21
90024838:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
9002483c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90024840:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90024844:	ea43 0c0c 	orr.w	ip, r3, ip
90024848:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002484a:	441c      	add	r4, r3
9002484c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002484e:	f82a cb02 	strh.w	ip, [sl], #2
90024852:	441e      	add	r6, r3
90024854:	e723      	b.n	9002469e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90024856:	2800      	cmp	r0, #0
90024858:	d0b1      	beq.n	900247be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
9002485a:	5cd3      	ldrb	r3, [r2, r3]
9002485c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90024860:	930a      	str	r3, [sp, #40]	@ 0x28
90024862:	e7ac      	b.n	900247be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90024864:	b013      	add	sp, #76	@ 0x4c
90024866:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002486a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
9002486a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002486e:	880d      	ldrh	r5, [r1, #0]
90024870:	b087      	sub	sp, #28
90024872:	10ef      	asrs	r7, r5, #3
90024874:	9103      	str	r1, [sp, #12]
90024876:	ea4f 2a25 	mov.w	sl, r5, asr #8
9002487a:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
9002487e:	00ed      	lsls	r5, r5, #3
90024880:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90024884:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
90024888:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
9002488c:	b2ed      	uxtb	r5, r5
9002488e:	9701      	str	r7, [sp, #4]
90024890:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
90024894:	9502      	str	r5, [sp, #8]
90024896:	9d01      	ldr	r5, [sp, #4]
90024898:	9902      	ldr	r1, [sp, #8]
9002489a:	022d      	lsls	r5, r5, #8
9002489c:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
900248a0:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
900248a4:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
900248a8:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
900248ac:	430d      	orrs	r5, r1
900248ae:	fb06 0709 	mla	r7, r6, r9, r0
900248b2:	2e00      	cmp	r6, #0
900248b4:	9505      	str	r5, [sp, #20]
900248b6:	eb02 0c07 	add.w	ip, r2, r7
900248ba:	f2c0 80b6 	blt.w	90024a2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
900248be:	45b3      	cmp	fp, r6
900248c0:	f340 80b3 	ble.w	90024a2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
900248c4:	2800      	cmp	r0, #0
900248c6:	f2c0 80ae 	blt.w	90024a26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
900248ca:	4581      	cmp	r9, r0
900248cc:	f340 80ab 	ble.w	90024a26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
900248d0:	5dd7      	ldrb	r7, [r2, r7]
900248d2:	eb07 0747 	add.w	r7, r7, r7, lsl #1
900248d6:	441f      	add	r7, r3
900248d8:	1c42      	adds	r2, r0, #1
900248da:	f100 80a9 	bmi.w	90024a30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
900248de:	4591      	cmp	r9, r2
900248e0:	f340 80a6 	ble.w	90024a30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
900248e4:	2c00      	cmp	r4, #0
900248e6:	f000 80a3 	beq.w	90024a30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
900248ea:	f89c 5001 	ldrb.w	r5, [ip, #1]
900248ee:	eb05 0545 	add.w	r5, r5, r5, lsl #1
900248f2:	441d      	add	r5, r3
900248f4:	3601      	adds	r6, #1
900248f6:	f100 809f 	bmi.w	90024a38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
900248fa:	45b3      	cmp	fp, r6
900248fc:	f340 809c 	ble.w	90024a38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90024900:	f1be 0f00 	cmp.w	lr, #0
90024904:	f000 8098 	beq.w	90024a38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90024908:	2800      	cmp	r0, #0
9002490a:	f2c0 8093 	blt.w	90024a34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
9002490e:	4581      	cmp	r9, r0
90024910:	f340 8090 	ble.w	90024a34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
90024914:	f81c 6009 	ldrb.w	r6, [ip, r9]
90024918:	eb06 0646 	add.w	r6, r6, r6, lsl #1
9002491c:	441e      	add	r6, r3
9002491e:	3001      	adds	r0, #1
90024920:	f100 808d 	bmi.w	90024a3e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90024924:	4581      	cmp	r9, r0
90024926:	f340 808a 	ble.w	90024a3e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
9002492a:	2c00      	cmp	r4, #0
9002492c:	f000 8087 	beq.w	90024a3e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90024930:	44e1      	add	r9, ip
90024932:	f899 2001 	ldrb.w	r2, [r9, #1]
90024936:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002493a:	4413      	add	r3, r2
9002493c:	b2a4      	uxth	r4, r4
9002493e:	f897 c002 	ldrb.w	ip, [r7, #2]
90024942:	fa1f fe8e 	uxth.w	lr, lr
90024946:	9901      	ldr	r1, [sp, #4]
90024948:	fb04 fb0e 	mul.w	fp, r4, lr
9002494c:	0124      	lsls	r4, r4, #4
9002494e:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
90024952:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
90024956:	eba4 040b 	sub.w	r4, r4, fp
9002495a:	fa1f f08e 	uxth.w	r0, lr
9002495e:	b2a2      	uxth	r2, r4
90024960:	78ac      	ldrb	r4, [r5, #2]
90024962:	eba9 0900 	sub.w	r9, r9, r0
90024966:	fa1f fe88 	uxth.w	lr, r8
9002496a:	4354      	muls	r4, r2
9002496c:	ea6f 0808 	mvn.w	r8, r8
90024970:	fa1f f989 	uxth.w	r9, r9
90024974:	fa5f f888 	uxtb.w	r8, r8
90024978:	fb09 440c 	mla	r4, r9, ip, r4
9002497c:	f896 c002 	ldrb.w	ip, [r6, #2]
90024980:	fb1a fa08 	smulbb	sl, sl, r8
90024984:	fb00 440c 	mla	r4, r0, ip, r4
90024988:	f893 c002 	ldrb.w	ip, [r3, #2]
9002498c:	fb0b 4c0c 	mla	ip, fp, ip, r4
90024990:	787c      	ldrb	r4, [r7, #1]
90024992:	783f      	ldrb	r7, [r7, #0]
90024994:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90024998:	fb0c ac0e 	mla	ip, ip, lr, sl
9002499c:	f895 a001 	ldrb.w	sl, [r5, #1]
900249a0:	782d      	ldrb	r5, [r5, #0]
900249a2:	fb02 fa0a 	mul.w	sl, r2, sl
900249a6:	fa1f fc8c 	uxth.w	ip, ip
900249aa:	436a      	muls	r2, r5
900249ac:	7835      	ldrb	r5, [r6, #0]
900249ae:	fb09 aa04 	mla	sl, r9, r4, sl
900249b2:	7874      	ldrb	r4, [r6, #1]
900249b4:	fb09 2207 	mla	r2, r9, r7, r2
900249b8:	fb00 aa04 	mla	sl, r0, r4, sl
900249bc:	785c      	ldrb	r4, [r3, #1]
900249be:	fb00 2005 	mla	r0, r0, r5, r2
900249c2:	781b      	ldrb	r3, [r3, #0]
900249c4:	fb0b a404 	mla	r4, fp, r4, sl
900249c8:	fb11 fa08 	smulbb	sl, r1, r8
900249cc:	fb0b 0b03 	mla	fp, fp, r3, r0
900249d0:	9b02      	ldr	r3, [sp, #8]
900249d2:	f3c4 2407 	ubfx	r4, r4, #8, #8
900249d6:	fb13 f808 	smulbb	r8, r3, r8
900249da:	f3cb 2b07 	ubfx	fp, fp, #8, #8
900249de:	fb04 a40e 	mla	r4, r4, lr, sl
900249e2:	f10c 0301 	add.w	r3, ip, #1
900249e6:	fb0b 8e0e 	mla	lr, fp, lr, r8
900249ea:	b2a4      	uxth	r4, r4
900249ec:	fa1f fe8e 	uxth.w	lr, lr
900249f0:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
900249f4:	f104 0a01 	add.w	sl, r4, #1
900249f8:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
900249fc:	f10e 0c01 	add.w	ip, lr, #1
90024a00:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
90024a04:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90024a08:	0964      	lsrs	r4, r4, #5
90024a0a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90024a0e:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90024a12:	ea4c 0c03 	orr.w	ip, ip, r3
90024a16:	9b03      	ldr	r3, [sp, #12]
90024a18:	ea4c 0c04 	orr.w	ip, ip, r4
90024a1c:	f8a3 c000 	strh.w	ip, [r3]
90024a20:	b007      	add	sp, #28
90024a22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90024a26:	af05      	add	r7, sp, #20
90024a28:	e756      	b.n	900248d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
90024a2a:	ad05      	add	r5, sp, #20
90024a2c:	462f      	mov	r7, r5
90024a2e:	e761      	b.n	900248f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90024a30:	ad05      	add	r5, sp, #20
90024a32:	e75f      	b.n	900248f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90024a34:	ae05      	add	r6, sp, #20
90024a36:	e772      	b.n	9002491e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
90024a38:	ab05      	add	r3, sp, #20
90024a3a:	461e      	mov	r6, r3
90024a3c:	e77e      	b.n	9002493c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
90024a3e:	ab05      	add	r3, sp, #20
90024a40:	e77c      	b.n	9002493c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

90024a42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024a42:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024a46:	b095      	sub	sp, #84	@ 0x54
90024a48:	9212      	str	r2, [sp, #72]	@ 0x48
90024a4a:	9309      	str	r3, [sp, #36]	@ 0x24
90024a4c:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
90024a4e:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
90024a52:	9013      	str	r0, [sp, #76]	@ 0x4c
90024a54:	930f      	str	r3, [sp, #60]	@ 0x3c
90024a56:	6850      	ldr	r0, [r2, #4]
90024a58:	910e      	str	r1, [sp, #56]	@ 0x38
90024a5a:	6812      	ldr	r2, [r2, #0]
90024a5c:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
90024a60:	fb00 1303 	mla	r3, r0, r3, r1
90024a64:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90024a68:	930a      	str	r3, [sp, #40]	@ 0x28
90024a6a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90024a6c:	681b      	ldr	r3, [r3, #0]
90024a6e:	930d      	str	r3, [sp, #52]	@ 0x34
90024a70:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90024a72:	685c      	ldr	r4, [r3, #4]
90024a74:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90024a76:	3404      	adds	r4, #4
90024a78:	43db      	mvns	r3, r3
90024a7a:	b2db      	uxtb	r3, r3
90024a7c:	930b      	str	r3, [sp, #44]	@ 0x2c
90024a7e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90024a80:	2b00      	cmp	r3, #0
90024a82:	dc03      	bgt.n	90024a8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90024a84:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90024a86:	2b00      	cmp	r3, #0
90024a88:	f340 8255 	ble.w	90024f36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90024a8c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90024a8e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024a92:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024a96:	1e48      	subs	r0, r1, #1
90024a98:	1e55      	subs	r5, r2, #1
90024a9a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024a9c:	2b00      	cmp	r3, #0
90024a9e:	f340 80f9 	ble.w	90024c94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
90024aa2:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
90024aa4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024aa6:	1436      	asrs	r6, r6, #16
90024aa8:	ea4f 4323 	mov.w	r3, r3, asr #16
90024aac:	d406      	bmi.n	90024abc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90024aae:	4286      	cmp	r6, r0
90024ab0:	da04      	bge.n	90024abc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90024ab2:	2b00      	cmp	r3, #0
90024ab4:	db02      	blt.n	90024abc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90024ab6:	42ab      	cmp	r3, r5
90024ab8:	f2c0 80ed 	blt.w	90024c96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
90024abc:	3601      	adds	r6, #1
90024abe:	f100 80da 	bmi.w	90024c76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90024ac2:	42b1      	cmp	r1, r6
90024ac4:	f2c0 80d7 	blt.w	90024c76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90024ac8:	3301      	adds	r3, #1
90024aca:	f100 80d4 	bmi.w	90024c76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90024ace:	429a      	cmp	r2, r3
90024ad0:	f2c0 80d1 	blt.w	90024c76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90024ad4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024ad6:	9311      	str	r3, [sp, #68]	@ 0x44
90024ad8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90024ada:	930c      	str	r3, [sp, #48]	@ 0x30
90024adc:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90024ade:	2b00      	cmp	r3, #0
90024ae0:	f340 80fa 	ble.w	90024cd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
90024ae4:	9826      	ldr	r0, [sp, #152]	@ 0x98
90024ae6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024ae8:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90024aea:	68c6      	ldr	r6, [r0, #12]
90024aec:	141d      	asrs	r5, r3, #16
90024aee:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90024af0:	f3c2 3103 	ubfx	r1, r2, #12, #4
90024af4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90024af6:	9a26      	ldr	r2, [sp, #152]	@ 0x98
90024af8:	1400      	asrs	r0, r0, #16
90024afa:	f3c3 3303 	ubfx	r3, r3, #12, #4
90024afe:	6892      	ldr	r2, [r2, #8]
90024b00:	f100 813e 	bmi.w	90024d80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90024b04:	1e57      	subs	r7, r2, #1
90024b06:	42b8      	cmp	r0, r7
90024b08:	f280 813a 	bge.w	90024d80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90024b0c:	2d00      	cmp	r5, #0
90024b0e:	f2c0 8137 	blt.w	90024d80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90024b12:	1e77      	subs	r7, r6, #1
90024b14:	42bd      	cmp	r5, r7
90024b16:	f280 8133 	bge.w	90024d80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90024b1a:	b212      	sxth	r2, r2
90024b1c:	fb05 0002 	mla	r0, r5, r2, r0
90024b20:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90024b22:	f815 a000 	ldrb.w	sl, [r5, r0]
90024b26:	182e      	adds	r6, r5, r0
90024b28:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
90024b2c:	eb04 050a 	add.w	r5, r4, sl
90024b30:	2b00      	cmp	r3, #0
90024b32:	f000 8117 	beq.w	90024d64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
90024b36:	f896 c001 	ldrb.w	ip, [r6, #1]
90024b3a:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
90024b3e:	44a4      	add	ip, r4
90024b40:	2900      	cmp	r1, #0
90024b42:	f000 8117 	beq.w	90024d74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
90024b46:	18b0      	adds	r0, r6, r2
90024b48:	5cb2      	ldrb	r2, [r6, r2]
90024b4a:	7840      	ldrb	r0, [r0, #1]
90024b4c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90024b50:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90024b54:	4422      	add	r2, r4
90024b56:	4420      	add	r0, r4
90024b58:	b29b      	uxth	r3, r3
90024b5a:	f89c 7002 	ldrb.w	r7, [ip, #2]
90024b5e:	b289      	uxth	r1, r1
90024b60:	f895 b002 	ldrb.w	fp, [r5, #2]
90024b64:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
90024b66:	fb03 f901 	mul.w	r9, r3, r1
90024b6a:	011b      	lsls	r3, r3, #4
90024b6c:	f8b6 e000 	ldrh.w	lr, [r6]
90024b70:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90024b74:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
90024b78:	eba3 0309 	sub.w	r3, r3, r9
90024b7c:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
90024b80:	b289      	uxth	r1, r1
90024b82:	f814 a00a 	ldrb.w	sl, [r4, sl]
90024b86:	b29b      	uxth	r3, r3
90024b88:	eba8 0801 	sub.w	r8, r8, r1
90024b8c:	435f      	muls	r7, r3
90024b8e:	fa1f f888 	uxth.w	r8, r8
90024b92:	9310      	str	r3, [sp, #64]	@ 0x40
90024b94:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90024b96:	fb08 770b 	mla	r7, r8, fp, r7
90024b9a:	f892 b002 	ldrb.w	fp, [r2, #2]
90024b9e:	fb01 770b 	mla	r7, r1, fp, r7
90024ba2:	f890 b002 	ldrb.w	fp, [r0, #2]
90024ba6:	fb09 770b 	mla	r7, r9, fp, r7
90024baa:	ea4f 2b2e 	mov.w	fp, lr, asr #8
90024bae:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
90024bb2:	f3c7 2707 	ubfx	r7, r7, #8, #8
90024bb6:	fb1b fb03 	smulbb	fp, fp, r3
90024bba:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90024bbc:	fb07 b706 	mla	r7, r7, r6, fp
90024bc0:	f895 b001 	ldrb.w	fp, [r5, #1]
90024bc4:	f89c 5001 	ldrb.w	r5, [ip, #1]
90024bc8:	f89c c000 	ldrb.w	ip, [ip]
90024bcc:	b2bf      	uxth	r7, r7
90024bce:	435d      	muls	r5, r3
90024bd0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90024bd2:	fb08 550b 	mla	r5, r8, fp, r5
90024bd6:	f892 b001 	ldrb.w	fp, [r2, #1]
90024bda:	fb01 550b 	mla	r5, r1, fp, r5
90024bde:	f890 b001 	ldrb.w	fp, [r0, #1]
90024be2:	fb09 550b 	mla	r5, r9, fp, r5
90024be6:	ea4f 0bee 	mov.w	fp, lr, asr #3
90024bea:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90024bee:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
90024bf2:	f3c5 2507 	ubfx	r5, r5, #8, #8
90024bf6:	fa5f fe8e 	uxtb.w	lr, lr
90024bfa:	fb1b fb03 	smulbb	fp, fp, r3
90024bfe:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90024c00:	fb03 f30c 	mul.w	r3, r3, ip
90024c04:	f892 c000 	ldrb.w	ip, [r2]
90024c08:	fb05 b506 	mla	r5, r5, r6, fp
90024c0c:	fb08 330a 	mla	r3, r8, sl, r3
90024c10:	b2ad      	uxth	r5, r5
90024c12:	fb01 330c 	mla	r3, r1, ip, r3
90024c16:	f890 c000 	ldrb.w	ip, [r0]
90024c1a:	f105 0b01 	add.w	fp, r5, #1
90024c1e:	fb09 3c0c 	mla	ip, r9, ip, r3
90024c22:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90024c24:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90024c28:	fb1e fe03 	smulbb	lr, lr, r3
90024c2c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90024c30:	1c7b      	adds	r3, r7, #1
90024c32:	096d      	lsrs	r5, r5, #5
90024c34:	fb0c e606 	mla	r6, ip, r6, lr
90024c38:	eb03 2717 	add.w	r7, r3, r7, lsr #8
90024c3c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90024c40:	b2b6      	uxth	r6, r6
90024c42:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
90024c46:	1c77      	adds	r7, r6, #1
90024c48:	eb07 2716 	add.w	r7, r7, r6, lsr #8
90024c4c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90024c50:	431f      	orrs	r7, r3
90024c52:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90024c54:	433d      	orrs	r5, r7
90024c56:	801d      	strh	r5, [r3, #0]
90024c58:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90024c5a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90024c5c:	3302      	adds	r3, #2
90024c5e:	930c      	str	r3, [sp, #48]	@ 0x30
90024c60:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90024c62:	4413      	add	r3, r2
90024c64:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90024c66:	931f      	str	r3, [sp, #124]	@ 0x7c
90024c68:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024c6a:	4413      	add	r3, r2
90024c6c:	9320      	str	r3, [sp, #128]	@ 0x80
90024c6e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90024c70:	3b01      	subs	r3, #1
90024c72:	9311      	str	r3, [sp, #68]	@ 0x44
90024c74:	e732      	b.n	90024adc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90024c76:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90024c78:	9e21      	ldr	r6, [sp, #132]	@ 0x84
90024c7a:	4433      	add	r3, r6
90024c7c:	9e22      	ldr	r6, [sp, #136]	@ 0x88
90024c7e:	931f      	str	r3, [sp, #124]	@ 0x7c
90024c80:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024c82:	4433      	add	r3, r6
90024c84:	9320      	str	r3, [sp, #128]	@ 0x80
90024c86:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024c88:	3b01      	subs	r3, #1
90024c8a:	9309      	str	r3, [sp, #36]	@ 0x24
90024c8c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90024c8e:	3302      	adds	r3, #2
90024c90:	930a      	str	r3, [sp, #40]	@ 0x28
90024c92:	e702      	b.n	90024a9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90024c94:	d027      	beq.n	90024ce6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
90024c96:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024c98:	9821      	ldr	r0, [sp, #132]	@ 0x84
90024c9a:	3b01      	subs	r3, #1
90024c9c:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
90024c9e:	fb00 5003 	mla	r0, r0, r3, r5
90024ca2:	1400      	asrs	r0, r0, #16
90024ca4:	f53f af16 	bmi.w	90024ad4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90024ca8:	3901      	subs	r1, #1
90024caa:	4288      	cmp	r0, r1
90024cac:	f6bf af12 	bge.w	90024ad4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90024cb0:	9922      	ldr	r1, [sp, #136]	@ 0x88
90024cb2:	9820      	ldr	r0, [sp, #128]	@ 0x80
90024cb4:	fb01 0303 	mla	r3, r1, r3, r0
90024cb8:	141b      	asrs	r3, r3, #16
90024cba:	f53f af0b 	bmi.w	90024ad4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90024cbe:	3a01      	subs	r2, #1
90024cc0:	4293      	cmp	r3, r2
90024cc2:	f6bf af07 	bge.w	90024ad4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90024cc6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024cc8:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
90024ccc:	9311      	str	r3, [sp, #68]	@ 0x44
90024cce:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90024cd0:	930c      	str	r3, [sp, #48]	@ 0x30
90024cd2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90024cd4:	2b00      	cmp	r3, #0
90024cd6:	dc70      	bgt.n	90024dba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90024cd8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024cda:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90024cdc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90024ce0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90024ce4:	930a      	str	r3, [sp, #40]	@ 0x28
90024ce6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90024ce8:	2b00      	cmp	r3, #0
90024cea:	f340 8124 	ble.w	90024f36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90024cee:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90024cf2:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90024cf4:	ee30 0a04 	vadd.f32	s0, s0, s8
90024cf8:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024cfc:	eef0 6a62 	vmov.f32	s13, s5
90024d00:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024d04:	ee31 1a05 	vadd.f32	s2, s2, s10
90024d08:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024d0c:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
90024d10:	eef0 6a43 	vmov.f32	s13, s6
90024d14:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024d18:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
90024d1c:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024d20:	ee61 7a27 	vmul.f32	s15, s2, s15
90024d24:	ee77 2a62 	vsub.f32	s5, s14, s5
90024d28:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024d2c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024d30:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024d34:	ee12 2a90 	vmov	r2, s5
90024d38:	eef0 2a47 	vmov.f32	s5, s14
90024d3c:	fb92 f3f3 	sdiv	r3, r2, r3
90024d40:	ee13 2a10 	vmov	r2, s6
90024d44:	9321      	str	r3, [sp, #132]	@ 0x84
90024d46:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90024d48:	eeb0 3a67 	vmov.f32	s6, s15
90024d4c:	fb92 f3f3 	sdiv	r3, r2, r3
90024d50:	9322      	str	r3, [sp, #136]	@ 0x88
90024d52:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90024d54:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90024d56:	3b01      	subs	r3, #1
90024d58:	930e      	str	r3, [sp, #56]	@ 0x38
90024d5a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90024d5c:	bf08      	it	eq
90024d5e:	4613      	moveq	r3, r2
90024d60:	9309      	str	r3, [sp, #36]	@ 0x24
90024d62:	e68c      	b.n	90024a7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90024d64:	b149      	cbz	r1, 90024d7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
90024d66:	5cb2      	ldrb	r2, [r6, r2]
90024d68:	4628      	mov	r0, r5
90024d6a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90024d6e:	4422      	add	r2, r4
90024d70:	46ac      	mov	ip, r5
90024d72:	e6f1      	b.n	90024b58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90024d74:	4628      	mov	r0, r5
90024d76:	462a      	mov	r2, r5
90024d78:	e6ee      	b.n	90024b58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90024d7a:	4628      	mov	r0, r5
90024d7c:	462a      	mov	r2, r5
90024d7e:	e7f7      	b.n	90024d70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
90024d80:	1c47      	adds	r7, r0, #1
90024d82:	f53f af69 	bmi.w	90024c58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90024d86:	42ba      	cmp	r2, r7
90024d88:	f6ff af66 	blt.w	90024c58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90024d8c:	1c6f      	adds	r7, r5, #1
90024d8e:	f53f af63 	bmi.w	90024c58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90024d92:	42be      	cmp	r6, r7
90024d94:	f6ff af60 	blt.w	90024c58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90024d98:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
90024d9a:	b236      	sxth	r6, r6
90024d9c:	b212      	sxth	r2, r2
90024d9e:	9002      	str	r0, [sp, #8]
90024da0:	9601      	str	r6, [sp, #4]
90024da2:	9200      	str	r2, [sp, #0]
90024da4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90024da6:	e9cd 1705 	strd	r1, r7, [sp, #20]
90024daa:	e9cd 5303 	strd	r5, r3, [sp, #12]
90024dae:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
90024db2:	4623      	mov	r3, r4
90024db4:	f7ff fd59 	bl	9002486a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
90024db8:	e74e      	b.n	90024c58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90024dba:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90024dbc:	9820      	ldr	r0, [sp, #128]	@ 0x80
90024dbe:	f3c2 3103 	ubfx	r1, r2, #12, #4
90024dc2:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
90024dc4:	9a26      	ldr	r2, [sp, #152]	@ 0x98
90024dc6:	1400      	asrs	r0, r0, #16
90024dc8:	142d      	asrs	r5, r5, #16
90024dca:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90024dcc:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90024dd0:	f3c3 3303 	ubfx	r3, r3, #12, #4
90024dd4:	fb02 5000 	mla	r0, r2, r0, r5
90024dd8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90024dda:	f815 9000 	ldrb.w	r9, [r5, r0]
90024dde:	182e      	adds	r6, r5, r0
90024de0:	eb09 0949 	add.w	r9, r9, r9, lsl #1
90024de4:	eb04 0509 	add.w	r5, r4, r9
90024de8:	2b00      	cmp	r3, #0
90024dea:	f000 8096 	beq.w	90024f1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
90024dee:	7877      	ldrb	r7, [r6, #1]
90024df0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90024df4:	4427      	add	r7, r4
90024df6:	2900      	cmp	r1, #0
90024df8:	f000 8097 	beq.w	90024f2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
90024dfc:	18b0      	adds	r0, r6, r2
90024dfe:	5cb2      	ldrb	r2, [r6, r2]
90024e00:	7840      	ldrb	r0, [r0, #1]
90024e02:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90024e06:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90024e0a:	4422      	add	r2, r4
90024e0c:	4420      	add	r0, r4
90024e0e:	b29b      	uxth	r3, r3
90024e10:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
90024e12:	b289      	uxth	r1, r1
90024e14:	f895 b002 	ldrb.w	fp, [r5, #2]
90024e18:	f8b6 c000 	ldrh.w	ip, [r6]
90024e1c:	fb03 f801 	mul.w	r8, r3, r1
90024e20:	011b      	lsls	r3, r3, #4
90024e22:	78be      	ldrb	r6, [r7, #2]
90024e24:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
90024e28:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
90024e2c:	eba3 0308 	sub.w	r3, r3, r8
90024e30:	f814 9009 	ldrb.w	r9, [r4, r9]
90024e34:	b289      	uxth	r1, r1
90024e36:	b29b      	uxth	r3, r3
90024e38:	ebae 0e01 	sub.w	lr, lr, r1
90024e3c:	435e      	muls	r6, r3
90024e3e:	fa1f fe8e 	uxth.w	lr, lr
90024e42:	9310      	str	r3, [sp, #64]	@ 0x40
90024e44:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90024e46:	fb0e 660b 	mla	r6, lr, fp, r6
90024e4a:	f892 b002 	ldrb.w	fp, [r2, #2]
90024e4e:	fb01 660b 	mla	r6, r1, fp, r6
90024e52:	f890 b002 	ldrb.w	fp, [r0, #2]
90024e56:	fb08 660b 	mla	r6, r8, fp, r6
90024e5a:	ea4f 2b2c 	mov.w	fp, ip, asr #8
90024e5e:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
90024e62:	f3c6 2607 	ubfx	r6, r6, #8, #8
90024e66:	fb1b fb03 	smulbb	fp, fp, r3
90024e6a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90024e6c:	fb06 b60a 	mla	r6, r6, sl, fp
90024e70:	f895 b001 	ldrb.w	fp, [r5, #1]
90024e74:	787d      	ldrb	r5, [r7, #1]
90024e76:	783f      	ldrb	r7, [r7, #0]
90024e78:	b2b6      	uxth	r6, r6
90024e7a:	435d      	muls	r5, r3
90024e7c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90024e7e:	fb0e 550b 	mla	r5, lr, fp, r5
90024e82:	f892 b001 	ldrb.w	fp, [r2, #1]
90024e86:	fb01 550b 	mla	r5, r1, fp, r5
90024e8a:	f890 b001 	ldrb.w	fp, [r0, #1]
90024e8e:	fb08 550b 	mla	r5, r8, fp, r5
90024e92:	ea4f 0bec 	mov.w	fp, ip, asr #3
90024e96:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90024e9a:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
90024e9e:	f3c5 2507 	ubfx	r5, r5, #8, #8
90024ea2:	fa5f fc8c 	uxtb.w	ip, ip
90024ea6:	fb1b fb03 	smulbb	fp, fp, r3
90024eaa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90024eac:	437b      	muls	r3, r7
90024eae:	7817      	ldrb	r7, [r2, #0]
90024eb0:	fb05 b50a 	mla	r5, r5, sl, fp
90024eb4:	fb0e 3309 	mla	r3, lr, r9, r3
90024eb8:	b2ad      	uxth	r5, r5
90024eba:	fb01 3307 	mla	r3, r1, r7, r3
90024ebe:	7807      	ldrb	r7, [r0, #0]
90024ec0:	f105 0b01 	add.w	fp, r5, #1
90024ec4:	fb08 3707 	mla	r7, r8, r7, r3
90024ec8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90024eca:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90024ece:	fb1c fc03 	smulbb	ip, ip, r3
90024ed2:	f3c7 2707 	ubfx	r7, r7, #8, #8
90024ed6:	1c73      	adds	r3, r6, #1
90024ed8:	096d      	lsrs	r5, r5, #5
90024eda:	fb07 c70a 	mla	r7, r7, sl, ip
90024ede:	eb03 2616 	add.w	r6, r3, r6, lsr #8
90024ee2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90024ee6:	b2bf      	uxth	r7, r7
90024ee8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90024eea:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
90024eee:	1c7a      	adds	r2, r7, #1
90024ef0:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90024ef4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90024ef8:	4316      	orrs	r6, r2
90024efa:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90024efc:	432e      	orrs	r6, r5
90024efe:	f823 6b02 	strh.w	r6, [r3], #2
90024f02:	930c      	str	r3, [sp, #48]	@ 0x30
90024f04:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90024f06:	4413      	add	r3, r2
90024f08:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90024f0a:	931f      	str	r3, [sp, #124]	@ 0x7c
90024f0c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024f0e:	4413      	add	r3, r2
90024f10:	9320      	str	r3, [sp, #128]	@ 0x80
90024f12:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90024f14:	3b01      	subs	r3, #1
90024f16:	9311      	str	r3, [sp, #68]	@ 0x44
90024f18:	e6db      	b.n	90024cd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
90024f1a:	b149      	cbz	r1, 90024f30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
90024f1c:	5cb2      	ldrb	r2, [r6, r2]
90024f1e:	4628      	mov	r0, r5
90024f20:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90024f24:	4422      	add	r2, r4
90024f26:	462f      	mov	r7, r5
90024f28:	e771      	b.n	90024e0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
90024f2a:	4628      	mov	r0, r5
90024f2c:	462a      	mov	r2, r5
90024f2e:	e76e      	b.n	90024e0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
90024f30:	4628      	mov	r0, r5
90024f32:	462a      	mov	r2, r5
90024f34:	e7f7      	b.n	90024f26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90024f36:	b015      	add	sp, #84	@ 0x54
90024f38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90024f3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
90024f3c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024f40:	880f      	ldrh	r7, [r1, #0]
90024f42:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
90024f46:	023c      	lsls	r4, r7, #8
90024f48:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
90024f4c:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
90024f50:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
90024f54:	017c      	lsls	r4, r7, #5
90024f56:	00ff      	lsls	r7, r7, #3
90024f58:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
90024f5c:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
90024f60:	b2ff      	uxtb	r7, r7
90024f62:	ea4b 0404 	orr.w	r4, fp, r4
90024f66:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
90024f6a:	4327      	orrs	r7, r4
90024f6c:	fb05 ca0e 	mla	sl, r5, lr, ip
90024f70:	2d00      	cmp	r5, #0
90024f72:	9701      	str	r7, [sp, #4]
90024f74:	eb02 080a 	add.w	r8, r2, sl
90024f78:	db7e      	blt.n	90025078 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90024f7a:	45a9      	cmp	r9, r5
90024f7c:	dd7c      	ble.n	90025078 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90024f7e:	f1bc 0f00 	cmp.w	ip, #0
90024f82:	db77      	blt.n	90025074 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
90024f84:	45e6      	cmp	lr, ip
90024f86:	dd75      	ble.n	90025074 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
90024f88:	f812 700a 	ldrb.w	r7, [r2, sl]
90024f8c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90024f90:	441f      	add	r7, r3
90024f92:	f11c 0201 	adds.w	r2, ip, #1
90024f96:	d472      	bmi.n	9002507e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90024f98:	4596      	cmp	lr, r2
90024f9a:	dd70      	ble.n	9002507e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90024f9c:	2800      	cmp	r0, #0
90024f9e:	d06e      	beq.n	9002507e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90024fa0:	f898 4001 	ldrb.w	r4, [r8, #1]
90024fa4:	eb04 0444 	add.w	r4, r4, r4, lsl #1
90024fa8:	441c      	add	r4, r3
90024faa:	3501      	adds	r5, #1
90024fac:	d46b      	bmi.n	90025086 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90024fae:	45a9      	cmp	r9, r5
90024fb0:	dd69      	ble.n	90025086 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90024fb2:	2e00      	cmp	r6, #0
90024fb4:	d067      	beq.n	90025086 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90024fb6:	f1bc 0f00 	cmp.w	ip, #0
90024fba:	db62      	blt.n	90025082 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90024fbc:	45e6      	cmp	lr, ip
90024fbe:	dd60      	ble.n	90025082 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90024fc0:	f818 500e 	ldrb.w	r5, [r8, lr]
90024fc4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90024fc8:	441d      	add	r5, r3
90024fca:	f11c 0201 	adds.w	r2, ip, #1
90024fce:	d45d      	bmi.n	9002508c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90024fd0:	4596      	cmp	lr, r2
90024fd2:	dd5b      	ble.n	9002508c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90024fd4:	2800      	cmp	r0, #0
90024fd6:	d059      	beq.n	9002508c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90024fd8:	44c6      	add	lr, r8
90024fda:	f89e 2001 	ldrb.w	r2, [lr, #1]
90024fde:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90024fe2:	4413      	add	r3, r2
90024fe4:	b280      	uxth	r0, r0
90024fe6:	f897 e002 	ldrb.w	lr, [r7, #2]
90024fea:	b2b2      	uxth	r2, r6
90024fec:	f897 9000 	ldrb.w	r9, [r7]
90024ff0:	787f      	ldrb	r7, [r7, #1]
90024ff2:	fb00 f602 	mul.w	r6, r0, r2
90024ff6:	0100      	lsls	r0, r0, #4
90024ff8:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
90024ffc:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
90025000:	1b80      	subs	r0, r0, r6
90025002:	fa1f fc82 	uxth.w	ip, r2
90025006:	b282      	uxth	r2, r0
90025008:	78a0      	ldrb	r0, [r4, #2]
9002500a:	eba8 080c 	sub.w	r8, r8, ip
9002500e:	4350      	muls	r0, r2
90025010:	fa1f f888 	uxth.w	r8, r8
90025014:	fb08 0e0e 	mla	lr, r8, lr, r0
90025018:	78a8      	ldrb	r0, [r5, #2]
9002501a:	fb0c e000 	mla	r0, ip, r0, lr
9002501e:	f893 e002 	ldrb.w	lr, [r3, #2]
90025022:	fb06 0e0e 	mla	lr, r6, lr, r0
90025026:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
9002502a:	f894 e000 	ldrb.w	lr, [r4]
9002502e:	fb02 fe0e 	mul.w	lr, r2, lr
90025032:	fb08 e909 	mla	r9, r8, r9, lr
90025036:	f895 e000 	ldrb.w	lr, [r5]
9002503a:	fb0c 990e 	mla	r9, ip, lr, r9
9002503e:	f893 e000 	ldrb.w	lr, [r3]
90025042:	785b      	ldrb	r3, [r3, #1]
90025044:	fb06 9e0e 	mla	lr, r6, lr, r9
90025048:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9002504c:	ea4e 0e00 	orr.w	lr, lr, r0
90025050:	7860      	ldrb	r0, [r4, #1]
90025052:	4350      	muls	r0, r2
90025054:	786a      	ldrb	r2, [r5, #1]
90025056:	fb08 0007 	mla	r0, r8, r7, r0
9002505a:	fb0c 0202 	mla	r2, ip, r2, r0
9002505e:	fb06 2303 	mla	r3, r6, r3, r2
90025062:	095b      	lsrs	r3, r3, #5
90025064:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90025068:	ea4e 0303 	orr.w	r3, lr, r3
9002506c:	800b      	strh	r3, [r1, #0]
9002506e:	b003      	add	sp, #12
90025070:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90025074:	af01      	add	r7, sp, #4
90025076:	e78c      	b.n	90024f92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
90025078:	ac01      	add	r4, sp, #4
9002507a:	4627      	mov	r7, r4
9002507c:	e795      	b.n	90024faa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
9002507e:	ac01      	add	r4, sp, #4
90025080:	e793      	b.n	90024faa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
90025082:	ad01      	add	r5, sp, #4
90025084:	e7a1      	b.n	90024fca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
90025086:	ab01      	add	r3, sp, #4
90025088:	461d      	mov	r5, r3
9002508a:	e7ab      	b.n	90024fe4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
9002508c:	ab01      	add	r3, sp, #4
9002508e:	e7a9      	b.n	90024fe4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

90025090 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025090:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025094:	b08f      	sub	sp, #60	@ 0x3c
90025096:	920c      	str	r2, [sp, #48]	@ 0x30
90025098:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
9002509a:	900d      	str	r0, [sp, #52]	@ 0x34
9002509c:	910a      	str	r1, [sp, #40]	@ 0x28
9002509e:	6850      	ldr	r0, [r2, #4]
900250a0:	9306      	str	r3, [sp, #24]
900250a2:	6812      	ldr	r2, [r2, #0]
900250a4:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
900250a8:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
900250ac:	fb00 1303 	mla	r3, r0, r3, r1
900250b0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900250b4:	9307      	str	r3, [sp, #28]
900250b6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900250b8:	681b      	ldr	r3, [r3, #0]
900250ba:	9308      	str	r3, [sp, #32]
900250bc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900250be:	685c      	ldr	r4, [r3, #4]
900250c0:	3404      	adds	r4, #4
900250c2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900250c4:	2b00      	cmp	r3, #0
900250c6:	dc03      	bgt.n	900250d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
900250c8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900250ca:	2b00      	cmp	r3, #0
900250cc:	f340 81d5 	ble.w	9002547a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
900250d0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900250d2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900250d6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900250da:	1e48      	subs	r0, r1, #1
900250dc:	1e56      	subs	r6, r2, #1
900250de:	9b06      	ldr	r3, [sp, #24]
900250e0:	2b00      	cmp	r3, #0
900250e2:	f340 80b6 	ble.w	90025252 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900250e6:	ea5f 472b 	movs.w	r7, fp, asr #16
900250ea:	ea4f 4325 	mov.w	r3, r5, asr #16
900250ee:	d406      	bmi.n	900250fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
900250f0:	4287      	cmp	r7, r0
900250f2:	da04      	bge.n	900250fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
900250f4:	2b00      	cmp	r3, #0
900250f6:	db02      	blt.n	900250fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
900250f8:	42b3      	cmp	r3, r6
900250fa:	f2c0 80ab 	blt.w	90025254 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
900250fe:	3701      	adds	r7, #1
90025100:	f100 809c 	bmi.w	9002523c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90025104:	42b9      	cmp	r1, r7
90025106:	f2c0 8099 	blt.w	9002523c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9002510a:	3301      	adds	r3, #1
9002510c:	f100 8096 	bmi.w	9002523c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90025110:	429a      	cmp	r2, r3
90025112:	f2c0 8093 	blt.w	9002523c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90025116:	9b06      	ldr	r3, [sp, #24]
90025118:	930b      	str	r3, [sp, #44]	@ 0x2c
9002511a:	9b07      	ldr	r3, [sp, #28]
9002511c:	9309      	str	r3, [sp, #36]	@ 0x24
9002511e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90025120:	2b00      	cmp	r3, #0
90025122:	f340 80b4 	ble.w	9002528e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
90025126:	9820      	ldr	r0, [sp, #128]	@ 0x80
90025128:	142e      	asrs	r6, r5, #16
9002512a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
9002512c:	f3cb 3303 	ubfx	r3, fp, #12, #4
90025130:	68c7      	ldr	r7, [r0, #12]
90025132:	ea5f 402b 	movs.w	r0, fp, asr #16
90025136:	f3c5 3103 	ubfx	r1, r5, #12, #4
9002513a:	6892      	ldr	r2, [r2, #8]
9002513c:	f100 80fb 	bmi.w	90025336 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90025140:	f102 3cff 	add.w	ip, r2, #4294967295
90025144:	4560      	cmp	r0, ip
90025146:	f280 80f6 	bge.w	90025336 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
9002514a:	2e00      	cmp	r6, #0
9002514c:	f2c0 80f3 	blt.w	90025336 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90025150:	f107 3cff 	add.w	ip, r7, #4294967295
90025154:	4566      	cmp	r6, ip
90025156:	f280 80ee 	bge.w	90025336 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
9002515a:	b212      	sxth	r2, r2
9002515c:	fb06 0002 	mla	r0, r6, r2, r0
90025160:	9e08      	ldr	r6, [sp, #32]
90025162:	1837      	adds	r7, r6, r0
90025164:	5c30      	ldrb	r0, [r6, r0]
90025166:	eb00 0840 	add.w	r8, r0, r0, lsl #1
9002516a:	eb04 0c08 	add.w	ip, r4, r8
9002516e:	2b00      	cmp	r3, #0
90025170:	f000 80d3 	beq.w	9002531a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
90025174:	787e      	ldrb	r6, [r7, #1]
90025176:	eb06 0646 	add.w	r6, r6, r6, lsl #1
9002517a:	4426      	add	r6, r4
9002517c:	2900      	cmp	r1, #0
9002517e:	f000 80d4 	beq.w	9002532a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
90025182:	18b8      	adds	r0, r7, r2
90025184:	5cba      	ldrb	r2, [r7, r2]
90025186:	7840      	ldrb	r0, [r0, #1]
90025188:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002518c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90025190:	4422      	add	r2, r4
90025192:	4420      	add	r0, r4
90025194:	b29b      	uxth	r3, r3
90025196:	78b7      	ldrb	r7, [r6, #2]
90025198:	b289      	uxth	r1, r1
9002519a:	f89c a002 	ldrb.w	sl, [ip, #2]
9002519e:	f89c c001 	ldrb.w	ip, [ip, #1]
900251a2:	fb03 f901 	mul.w	r9, r3, r1
900251a6:	011b      	lsls	r3, r3, #4
900251a8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900251ac:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
900251b0:	eba3 0309 	sub.w	r3, r3, r9
900251b4:	b289      	uxth	r1, r1
900251b6:	b29b      	uxth	r3, r3
900251b8:	ebae 0e01 	sub.w	lr, lr, r1
900251bc:	435f      	muls	r7, r3
900251be:	fa1f fe8e 	uxth.w	lr, lr
900251c2:	fb0e 770a 	mla	r7, lr, sl, r7
900251c6:	f892 a002 	ldrb.w	sl, [r2, #2]
900251ca:	fb01 770a 	mla	r7, r1, sl, r7
900251ce:	f890 a002 	ldrb.w	sl, [r0, #2]
900251d2:	fb09 7a0a 	mla	sl, r9, sl, r7
900251d6:	f814 7008 	ldrb.w	r7, [r4, r8]
900251da:	f896 8000 	ldrb.w	r8, [r6]
900251de:	7876      	ldrb	r6, [r6, #1]
900251e0:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
900251e4:	fb03 f808 	mul.w	r8, r3, r8
900251e8:	4373      	muls	r3, r6
900251ea:	fb0e 8807 	mla	r8, lr, r7, r8
900251ee:	7817      	ldrb	r7, [r2, #0]
900251f0:	fb0e 330c 	mla	r3, lr, ip, r3
900251f4:	fb01 8807 	mla	r8, r1, r7, r8
900251f8:	7807      	ldrb	r7, [r0, #0]
900251fa:	fb09 8707 	mla	r7, r9, r7, r8
900251fe:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90025202:	ea47 070a 	orr.w	r7, r7, sl
90025206:	f892 a001 	ldrb.w	sl, [r2, #1]
9002520a:	fb01 310a 	mla	r1, r1, sl, r3
9002520e:	f890 a001 	ldrb.w	sl, [r0, #1]
90025212:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90025214:	fb09 1a0a 	mla	sl, r9, sl, r1
90025218:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9002521c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90025220:	ea47 070a 	orr.w	r7, r7, sl
90025224:	801f      	strh	r7, [r3, #0]
90025226:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90025228:	3302      	adds	r3, #2
9002522a:	9309      	str	r3, [sp, #36]	@ 0x24
9002522c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
9002522e:	449b      	add	fp, r3
90025230:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90025232:	441d      	add	r5, r3
90025234:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90025236:	3b01      	subs	r3, #1
90025238:	930b      	str	r3, [sp, #44]	@ 0x2c
9002523a:	e770      	b.n	9002511e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
9002523c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
9002523e:	449b      	add	fp, r3
90025240:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90025242:	441d      	add	r5, r3
90025244:	9b06      	ldr	r3, [sp, #24]
90025246:	3b01      	subs	r3, #1
90025248:	9306      	str	r3, [sp, #24]
9002524a:	9b07      	ldr	r3, [sp, #28]
9002524c:	3302      	adds	r3, #2
9002524e:	9307      	str	r3, [sp, #28]
90025250:	e745      	b.n	900250de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
90025252:	d023      	beq.n	9002529c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90025254:	9b06      	ldr	r3, [sp, #24]
90025256:	981b      	ldr	r0, [sp, #108]	@ 0x6c
90025258:	3b01      	subs	r3, #1
9002525a:	fb00 b003 	mla	r0, r0, r3, fp
9002525e:	1400      	asrs	r0, r0, #16
90025260:	f53f af59 	bmi.w	90025116 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90025264:	3901      	subs	r1, #1
90025266:	4288      	cmp	r0, r1
90025268:	f6bf af55 	bge.w	90025116 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9002526c:	991c      	ldr	r1, [sp, #112]	@ 0x70
9002526e:	fb01 5303 	mla	r3, r1, r3, r5
90025272:	141b      	asrs	r3, r3, #16
90025274:	f53f af4f 	bmi.w	90025116 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90025278:	3a01      	subs	r2, #1
9002527a:	4293      	cmp	r3, r2
9002527c:	f6bf af4b 	bge.w	90025116 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90025280:	9b06      	ldr	r3, [sp, #24]
90025282:	9309      	str	r3, [sp, #36]	@ 0x24
90025284:	9b07      	ldr	r3, [sp, #28]
90025286:	930b      	str	r3, [sp, #44]	@ 0x2c
90025288:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002528a:	2b00      	cmp	r3, #0
9002528c:	dc70      	bgt.n	90025370 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
9002528e:	9b06      	ldr	r3, [sp, #24]
90025290:	9a07      	ldr	r2, [sp, #28]
90025292:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90025296:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002529a:	9307      	str	r3, [sp, #28]
9002529c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002529e:	2b00      	cmp	r3, #0
900252a0:	f340 80eb 	ble.w	9002547a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
900252a4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900252a8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900252aa:	ee30 0a04 	vadd.f32	s0, s0, s8
900252ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
900252b2:	eef0 6a62 	vmov.f32	s13, s5
900252b6:	eec7 7a00 	vdiv.f32	s15, s14, s0
900252ba:	ee31 1a05 	vadd.f32	s2, s2, s10
900252be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900252c2:	ee16 ba90 	vmov	fp, s13
900252c6:	eef0 6a43 	vmov.f32	s13, s6
900252ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900252ce:	ee16 5a90 	vmov	r5, s13
900252d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
900252d6:	ee61 7a27 	vmul.f32	s15, s2, s15
900252da:	ee77 2a62 	vsub.f32	s5, s14, s5
900252de:	ee37 3ac3 	vsub.f32	s6, s15, s6
900252e2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900252e6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900252ea:	ee12 2a90 	vmov	r2, s5
900252ee:	eef0 2a47 	vmov.f32	s5, s14
900252f2:	fb92 f3f3 	sdiv	r3, r2, r3
900252f6:	ee13 2a10 	vmov	r2, s6
900252fa:	931b      	str	r3, [sp, #108]	@ 0x6c
900252fc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900252fe:	eeb0 3a67 	vmov.f32	s6, s15
90025302:	fb92 f3f3 	sdiv	r3, r2, r3
90025306:	931c      	str	r3, [sp, #112]	@ 0x70
90025308:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002530a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9002530c:	3b01      	subs	r3, #1
9002530e:	930a      	str	r3, [sp, #40]	@ 0x28
90025310:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90025312:	bf08      	it	eq
90025314:	4613      	moveq	r3, r2
90025316:	9306      	str	r3, [sp, #24]
90025318:	e6d3      	b.n	900250c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9002531a:	b149      	cbz	r1, 90025330 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
9002531c:	5cba      	ldrb	r2, [r7, r2]
9002531e:	4660      	mov	r0, ip
90025320:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90025324:	4422      	add	r2, r4
90025326:	4666      	mov	r6, ip
90025328:	e734      	b.n	90025194 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
9002532a:	4660      	mov	r0, ip
9002532c:	4662      	mov	r2, ip
9002532e:	e731      	b.n	90025194 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
90025330:	4660      	mov	r0, ip
90025332:	4662      	mov	r2, ip
90025334:	e7f7      	b.n	90025326 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
90025336:	f110 0c01 	adds.w	ip, r0, #1
9002533a:	f53f af74 	bmi.w	90025226 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9002533e:	4562      	cmp	r2, ip
90025340:	f6ff af71 	blt.w	90025226 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90025344:	f116 0c01 	adds.w	ip, r6, #1
90025348:	f53f af6d 	bmi.w	90025226 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9002534c:	4567      	cmp	r7, ip
9002534e:	f6ff af6a 	blt.w	90025226 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90025352:	b23f      	sxth	r7, r7
90025354:	b212      	sxth	r2, r2
90025356:	9701      	str	r7, [sp, #4]
90025358:	9200      	str	r2, [sp, #0]
9002535a:	e9cd 3104 	strd	r3, r1, [sp, #16]
9002535e:	e9cd 0602 	strd	r0, r6, [sp, #8]
90025362:	4623      	mov	r3, r4
90025364:	980d      	ldr	r0, [sp, #52]	@ 0x34
90025366:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9002536a:	f7ff fde7 	bl	90024f3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
9002536e:	e75a      	b.n	90025226 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90025370:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90025372:	ea4f 462b 	mov.w	r6, fp, asr #16
90025376:	1428      	asrs	r0, r5, #16
90025378:	f3cb 3303 	ubfx	r3, fp, #12, #4
9002537c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90025380:	f3c5 3103 	ubfx	r1, r5, #12, #4
90025384:	fb02 6000 	mla	r0, r2, r0, r6
90025388:	9e08      	ldr	r6, [sp, #32]
9002538a:	f816 8000 	ldrb.w	r8, [r6, r0]
9002538e:	1837      	adds	r7, r6, r0
90025390:	eb08 0848 	add.w	r8, r8, r8, lsl #1
90025394:	eb04 0c08 	add.w	ip, r4, r8
90025398:	2b00      	cmp	r3, #0
9002539a:	d060      	beq.n	9002545e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
9002539c:	787e      	ldrb	r6, [r7, #1]
9002539e:	eb06 0646 	add.w	r6, r6, r6, lsl #1
900253a2:	4426      	add	r6, r4
900253a4:	2900      	cmp	r1, #0
900253a6:	d062      	beq.n	9002546e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
900253a8:	18b8      	adds	r0, r7, r2
900253aa:	5cba      	ldrb	r2, [r7, r2]
900253ac:	7840      	ldrb	r0, [r0, #1]
900253ae:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900253b2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900253b6:	4422      	add	r2, r4
900253b8:	4420      	add	r0, r4
900253ba:	b29b      	uxth	r3, r3
900253bc:	78b7      	ldrb	r7, [r6, #2]
900253be:	b289      	uxth	r1, r1
900253c0:	f89c a002 	ldrb.w	sl, [ip, #2]
900253c4:	f89c c001 	ldrb.w	ip, [ip, #1]
900253c8:	fb03 f901 	mul.w	r9, r3, r1
900253cc:	011b      	lsls	r3, r3, #4
900253ce:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900253d2:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
900253d6:	eba3 0309 	sub.w	r3, r3, r9
900253da:	b289      	uxth	r1, r1
900253dc:	b29b      	uxth	r3, r3
900253de:	ebae 0e01 	sub.w	lr, lr, r1
900253e2:	435f      	muls	r7, r3
900253e4:	fa1f fe8e 	uxth.w	lr, lr
900253e8:	fb0e 770a 	mla	r7, lr, sl, r7
900253ec:	f892 a002 	ldrb.w	sl, [r2, #2]
900253f0:	fb01 770a 	mla	r7, r1, sl, r7
900253f4:	f890 a002 	ldrb.w	sl, [r0, #2]
900253f8:	fb09 7a0a 	mla	sl, r9, sl, r7
900253fc:	f814 7008 	ldrb.w	r7, [r4, r8]
90025400:	f896 8000 	ldrb.w	r8, [r6]
90025404:	7876      	ldrb	r6, [r6, #1]
90025406:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
9002540a:	fb03 f808 	mul.w	r8, r3, r8
9002540e:	4373      	muls	r3, r6
90025410:	7856      	ldrb	r6, [r2, #1]
90025412:	fb0e 8807 	mla	r8, lr, r7, r8
90025416:	7817      	ldrb	r7, [r2, #0]
90025418:	fb0e 330c 	mla	r3, lr, ip, r3
9002541c:	fb01 8807 	mla	r8, r1, r7, r8
90025420:	7807      	ldrb	r7, [r0, #0]
90025422:	fb01 3306 	mla	r3, r1, r6, r3
90025426:	fb09 8707 	mla	r7, r9, r7, r8
9002542a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9002542e:	ea47 070a 	orr.w	r7, r7, sl
90025432:	f890 a001 	ldrb.w	sl, [r0, #1]
90025436:	fb09 3a0a 	mla	sl, r9, sl, r3
9002543a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002543c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90025440:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90025444:	ea47 070a 	orr.w	r7, r7, sl
90025448:	f823 7b02 	strh.w	r7, [r3], #2
9002544c:	930b      	str	r3, [sp, #44]	@ 0x2c
9002544e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90025450:	449b      	add	fp, r3
90025452:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90025454:	441d      	add	r5, r3
90025456:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90025458:	3b01      	subs	r3, #1
9002545a:	9309      	str	r3, [sp, #36]	@ 0x24
9002545c:	e714      	b.n	90025288 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
9002545e:	b149      	cbz	r1, 90025474 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
90025460:	5cba      	ldrb	r2, [r7, r2]
90025462:	4660      	mov	r0, ip
90025464:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90025468:	4422      	add	r2, r4
9002546a:	4666      	mov	r6, ip
9002546c:	e7a5      	b.n	900253ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
9002546e:	4660      	mov	r0, ip
90025470:	4662      	mov	r2, ip
90025472:	e7a2      	b.n	900253ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
90025474:	4660      	mov	r0, ip
90025476:	4662      	mov	r2, ip
90025478:	e7f7      	b.n	9002546a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
9002547a:	b00f      	add	sp, #60	@ 0x3c
9002547c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90025480 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
90025480:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025484:	b085      	sub	sp, #20
90025486:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
9002548a:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
9002548e:	9102      	str	r1, [sp, #8]
90025490:	2c00      	cmp	r4, #0
90025492:	fb04 710c 	mla	r1, r4, ip, r7
90025496:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
9002549a:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
9002549e:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
900254a2:	eb02 0e01 	add.w	lr, r2, r1
900254a6:	f2c0 8122 	blt.w	900256ee <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
900254aa:	45a0      	cmp	r8, r4
900254ac:	f340 811f 	ble.w	900256ee <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
900254b0:	2f00      	cmp	r7, #0
900254b2:	f2c0 811a 	blt.w	900256ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
900254b6:	45bc      	cmp	ip, r7
900254b8:	f340 8117 	ble.w	900256ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
900254bc:	5c52      	ldrb	r2, [r2, r1]
900254be:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
900254c2:	1c7a      	adds	r2, r7, #1
900254c4:	f100 8116 	bmi.w	900256f4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
900254c8:	4594      	cmp	ip, r2
900254ca:	f340 8113 	ble.w	900256f4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
900254ce:	2e00      	cmp	r6, #0
900254d0:	f000 8112 	beq.w	900256f8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
900254d4:	f89e 2001 	ldrb.w	r2, [lr, #1]
900254d8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
900254dc:	3401      	adds	r4, #1
900254de:	f100 810f 	bmi.w	90025700 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
900254e2:	45a0      	cmp	r8, r4
900254e4:	f340 810c 	ble.w	90025700 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
900254e8:	2800      	cmp	r0, #0
900254ea:	f000 810c 	beq.w	90025706 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
900254ee:	2f00      	cmp	r7, #0
900254f0:	f2c0 8104 	blt.w	900256fc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
900254f4:	45bc      	cmp	ip, r7
900254f6:	f340 8101 	ble.w	900256fc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
900254fa:	f81e 200c 	ldrb.w	r2, [lr, ip]
900254fe:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
90025502:	3701      	adds	r7, #1
90025504:	f100 8102 	bmi.w	9002570c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90025508:	45bc      	cmp	ip, r7
9002550a:	f340 80ff 	ble.w	9002570c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
9002550e:	2e00      	cmp	r6, #0
90025510:	f000 80fe 	beq.w	90025710 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
90025514:	44f4      	add	ip, lr
90025516:	f89c 2001 	ldrb.w	r2, [ip, #1]
9002551a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
9002551e:	b2b6      	uxth	r6, r6
90025520:	b280      	uxth	r0, r0
90025522:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90025526:	fb00 fe06 	mul.w	lr, r0, r6
9002552a:	0136      	lsls	r6, r6, #4
9002552c:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90025530:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90025534:	eba6 070e 	sub.w	r7, r6, lr
90025538:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
9002553c:	ea4f 6914 	mov.w	r9, r4, lsr #24
90025540:	b280      	uxth	r0, r0
90025542:	b2bf      	uxth	r7, r7
90025544:	1a1b      	subs	r3, r3, r0
90025546:	ea4f 6812 	mov.w	r8, r2, lsr #24
9002554a:	fb0a f607 	mul.w	r6, sl, r7
9002554e:	b29b      	uxth	r3, r3
90025550:	fb0b 6603 	mla	r6, fp, r3, r6
90025554:	fb00 6609 	mla	r6, r0, r9, r6
90025558:	fb0e 6608 	mla	r6, lr, r8, r6
9002555c:	f3c6 2607 	ubfx	r6, r6, #8, #8
90025560:	9600      	str	r6, [sp, #0]
90025562:	2e00      	cmp	r6, #0
90025564:	f000 80be 	beq.w	900256e4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
90025568:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
9002556c:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
90025570:	9e02      	ldr	r6, [sp, #8]
90025572:	fb0b fc0c 	mul.w	ip, fp, ip
90025576:	fb0b f505 	mul.w	r5, fp, r5
9002557a:	8836      	ldrh	r6, [r6, #0]
9002557c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90025580:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90025584:	9501      	str	r5, [sp, #4]
90025586:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
9002558a:	44dc      	add	ip, fp
9002558c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025590:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
90025594:	9503      	str	r5, [sp, #12]
90025596:	9d01      	ldr	r5, [sp, #4]
90025598:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
9002559c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900255a0:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
900255a4:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900255a8:	fb0a fc0c 	mul.w	ip, sl, ip
900255ac:	ea4f 2b15 	mov.w	fp, r5, lsr #8
900255b0:	fb0a fa01 	mul.w	sl, sl, r1
900255b4:	ea4f 251c 	mov.w	r5, ip, lsr #8
900255b8:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900255bc:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
900255c0:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900255c4:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
900255c8:	4465      	add	r5, ip
900255ca:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900255ce:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
900255d2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900255d6:	fb09 fc0c 	mul.w	ip, r9, ip
900255da:	0a2d      	lsrs	r5, r5, #8
900255dc:	fb09 f904 	mul.w	r9, r9, r4
900255e0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900255e4:	ea4f 211c 	mov.w	r1, ip, lsr #8
900255e8:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900255ec:	f509 7480 	add.w	r4, r9, #256	@ 0x100
900255f0:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900255f4:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
900255f8:	437d      	muls	r5, r7
900255fa:	eb04 2919 	add.w	r9, r4, r9, lsr #8
900255fe:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90025602:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90025606:	4461      	add	r1, ip
90025608:	fb08 f404 	mul.w	r4, r8, r4
9002560c:	ea4f 2919 	mov.w	r9, r9, lsr #8
90025610:	fb08 f802 	mul.w	r8, r8, r2
90025614:	0a09      	lsrs	r1, r1, #8
90025616:	0a22      	lsrs	r2, r4, #8
90025618:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
9002561c:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90025620:	fb07 f70a 	mul.w	r7, r7, sl
90025624:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90025628:	4414      	add	r4, r2
9002562a:	f508 7280 	add.w	r2, r8, #256	@ 0x100
9002562e:	0a24      	lsrs	r4, r4, #8
90025630:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90025634:	9a03      	ldr	r2, [sp, #12]
90025636:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
9002563a:	fb02 5503 	mla	r5, r2, r3, r5
9002563e:	ea4f 2818 	mov.w	r8, r8, lsr #8
90025642:	9a00      	ldr	r2, [sp, #0]
90025644:	fb04 540e 	mla	r4, r4, lr, r5
90025648:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
9002564c:	1235      	asrs	r5, r6, #8
9002564e:	fb01 4100 	mla	r1, r1, r0, r4
90025652:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90025656:	0a09      	lsrs	r1, r1, #8
90025658:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
9002565c:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
90025660:	fb03 7101 	mla	r1, r3, r1, r7
90025664:	fb0e 1e08 	mla	lr, lr, r8, r1
90025668:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
9002566c:	fb00 e101 	mla	r1, r0, r1, lr
90025670:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
90025674:	b287      	uxth	r7, r0
90025676:	0a09      	lsrs	r1, r1, #8
90025678:	437a      	muls	r2, r7
9002567a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
9002567e:	1c53      	adds	r3, r2, #1
90025680:	4321      	orrs	r1, r4
90025682:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90025686:	0c0a      	lsrs	r2, r1, #16
90025688:	f3c1 2407 	ubfx	r4, r1, #8, #8
9002568c:	ea6f 2313 	mvn.w	r3, r3, lsr #8
90025690:	b2c8      	uxtb	r0, r1
90025692:	fb12 f207 	smulbb	r2, r2, r7
90025696:	fb14 f407 	smulbb	r4, r4, r7
9002569a:	b2db      	uxtb	r3, r3
9002569c:	fb10 f007 	smulbb	r0, r0, r7
900256a0:	fb05 2503 	mla	r5, r5, r3, r2
900256a4:	10f2      	asrs	r2, r6, #3
900256a6:	00f6      	lsls	r6, r6, #3
900256a8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
900256ac:	b2ad      	uxth	r5, r5
900256ae:	b2f6      	uxtb	r6, r6
900256b0:	fb02 4203 	mla	r2, r2, r3, r4
900256b4:	fb06 0303 	mla	r3, r6, r3, r0
900256b8:	b294      	uxth	r4, r2
900256ba:	b299      	uxth	r1, r3
900256bc:	1c6b      	adds	r3, r5, #1
900256be:	1c62      	adds	r2, r4, #1
900256c0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900256c4:	1c4b      	adds	r3, r1, #1
900256c6:	eb02 2214 	add.w	r2, r2, r4, lsr #8
900256ca:	eb03 2311 	add.w	r3, r3, r1, lsr #8
900256ce:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900256d2:	0952      	lsrs	r2, r2, #5
900256d4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900256d8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900256dc:	432b      	orrs	r3, r5
900256de:	4313      	orrs	r3, r2
900256e0:	9a02      	ldr	r2, [sp, #8]
900256e2:	8013      	strh	r3, [r2, #0]
900256e4:	b005      	add	sp, #20
900256e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900256ea:	2500      	movs	r5, #0
900256ec:	e6e9      	b.n	900254c2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
900256ee:	2100      	movs	r1, #0
900256f0:	460d      	mov	r5, r1
900256f2:	e6f3      	b.n	900254dc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
900256f4:	2100      	movs	r1, #0
900256f6:	e6f1      	b.n	900254dc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
900256f8:	4631      	mov	r1, r6
900256fa:	e6ef      	b.n	900254dc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
900256fc:	2400      	movs	r4, #0
900256fe:	e700      	b.n	90025502 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
90025700:	2200      	movs	r2, #0
90025702:	4614      	mov	r4, r2
90025704:	e70b      	b.n	9002551e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90025706:	4602      	mov	r2, r0
90025708:	4604      	mov	r4, r0
9002570a:	e708      	b.n	9002551e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
9002570c:	2200      	movs	r2, #0
9002570e:	e706      	b.n	9002551e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90025710:	4632      	mov	r2, r6
90025712:	e704      	b.n	9002551e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

90025714 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025714:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025718:	b09f      	sub	sp, #124	@ 0x7c
9002571a:	921b      	str	r2, [sp, #108]	@ 0x6c
9002571c:	9309      	str	r3, [sp, #36]	@ 0x24
9002571e:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
90025720:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
90025724:	901d      	str	r0, [sp, #116]	@ 0x74
90025726:	931c      	str	r3, [sp, #112]	@ 0x70
90025728:	6850      	ldr	r0, [r2, #4]
9002572a:	9119      	str	r1, [sp, #100]	@ 0x64
9002572c:	6812      	ldr	r2, [r2, #0]
9002572e:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
90025730:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
90025734:	fb00 1303 	mla	r3, r0, r3, r1
90025738:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002573c:	930c      	str	r3, [sp, #48]	@ 0x30
9002573e:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90025740:	681b      	ldr	r3, [r3, #0]
90025742:	9312      	str	r3, [sp, #72]	@ 0x48
90025744:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90025746:	685e      	ldr	r6, [r3, #4]
90025748:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
9002574c:	3604      	adds	r6, #4
9002574e:	930d      	str	r3, [sp, #52]	@ 0x34
90025750:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90025752:	2b00      	cmp	r3, #0
90025754:	dc03      	bgt.n	9002575e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90025756:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90025758:	2b00      	cmp	r3, #0
9002575a:	f340 8387 	ble.w	90025e6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
9002575e:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90025760:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025764:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90025768:	1e48      	subs	r0, r1, #1
9002576a:	1e57      	subs	r7, r2, #1
9002576c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002576e:	2b00      	cmp	r3, #0
90025770:	f340 8194 	ble.w	90025a9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
90025774:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90025776:	142b      	asrs	r3, r5, #16
90025778:	ea5f 4c24 	movs.w	ip, r4, asr #16
9002577c:	d406      	bmi.n	9002578c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002577e:	4584      	cmp	ip, r0
90025780:	da04      	bge.n	9002578c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90025782:	2b00      	cmp	r3, #0
90025784:	db02      	blt.n	9002578c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90025786:	42bb      	cmp	r3, r7
90025788:	f2c0 8189 	blt.w	90025a9e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9002578c:	f11c 0c01 	adds.w	ip, ip, #1
90025790:	f100 8177 	bmi.w	90025a82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90025794:	4561      	cmp	r1, ip
90025796:	f2c0 8174 	blt.w	90025a82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9002579a:	3301      	adds	r3, #1
9002579c:	f100 8171 	bmi.w	90025a82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900257a0:	429a      	cmp	r2, r3
900257a2:	f2c0 816e 	blt.w	90025a82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900257a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900257a8:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
900257aa:	931a      	str	r3, [sp, #104]	@ 0x68
900257ac:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
900257ae:	2b00      	cmp	r3, #0
900257b0:	f340 8193 	ble.w	90025ada <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
900257b4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900257b6:	ea4f 4c25 	mov.w	ip, r5, asr #16
900257ba:	f3c5 3103 	ubfx	r1, r5, #12, #4
900257be:	f3c3 3203 	ubfx	r2, r3, #12, #4
900257c2:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
900257c4:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
900257c8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900257ca:	141b      	asrs	r3, r3, #16
900257cc:	f100 81d6 	bmi.w	90025b7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
900257d0:	f100 38ff 	add.w	r8, r0, #4294967295
900257d4:	4543      	cmp	r3, r8
900257d6:	f280 81d1 	bge.w	90025b7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
900257da:	f1bc 0f00 	cmp.w	ip, #0
900257de:	f2c0 81cd 	blt.w	90025b7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
900257e2:	f10e 38ff 	add.w	r8, lr, #4294967295
900257e6:	45c4      	cmp	ip, r8
900257e8:	f280 81c8 	bge.w	90025b7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
900257ec:	b200      	sxth	r0, r0
900257ee:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900257f0:	fb0c 3300 	mla	r3, ip, r0, r3
900257f4:	eb04 0803 	add.w	r8, r4, r3
900257f8:	5ce3      	ldrb	r3, [r4, r3]
900257fa:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
900257fe:	ea4f 6e13 	mov.w	lr, r3, lsr #24
90025802:	2a00      	cmp	r2, #0
90025804:	f000 81af 	beq.w	90025b66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90025808:	f898 c001 	ldrb.w	ip, [r8, #1]
9002580c:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90025810:	940e      	str	r4, [sp, #56]	@ 0x38
90025812:	0e24      	lsrs	r4, r4, #24
90025814:	9415      	str	r4, [sp, #84]	@ 0x54
90025816:	b179      	cbz	r1, 90025838 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90025818:	eb08 0c00 	add.w	ip, r8, r0
9002581c:	f818 0000 	ldrb.w	r0, [r8, r0]
90025820:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90025824:	900a      	str	r0, [sp, #40]	@ 0x28
90025826:	0e00      	lsrs	r0, r0, #24
90025828:	9013      	str	r0, [sp, #76]	@ 0x4c
9002582a:	f89c 0001 	ldrb.w	r0, [ip, #1]
9002582e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90025832:	900f      	str	r0, [sp, #60]	@ 0x3c
90025834:	0e00      	lsrs	r0, r0, #24
90025836:	9016      	str	r0, [sp, #88]	@ 0x58
90025838:	b292      	uxth	r2, r2
9002583a:	9815      	ldr	r0, [sp, #84]	@ 0x54
9002583c:	b289      	uxth	r1, r1
9002583e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90025840:	fb02 f901 	mul.w	r9, r2, r1
90025844:	0112      	lsls	r2, r2, #4
90025846:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9002584a:	eba2 0809 	sub.w	r8, r2, r9
9002584e:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90025852:	b289      	uxth	r1, r1
90025854:	fa1f f888 	uxth.w	r8, r8
90025858:	1a52      	subs	r2, r2, r1
9002585a:	fb08 f000 	mul.w	r0, r8, r0
9002585e:	b292      	uxth	r2, r2
90025860:	fb02 000e 	mla	r0, r2, lr, r0
90025864:	fb01 0004 	mla	r0, r1, r4, r0
90025868:	9c16      	ldr	r4, [sp, #88]	@ 0x58
9002586a:	fb09 0004 	mla	r0, r9, r4, r0
9002586e:	f3c0 2007 	ubfx	r0, r0, #8, #8
90025872:	2800      	cmp	r0, #0
90025874:	f000 80fa 	beq.w	90025a6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025878:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
9002587c:	d01b      	beq.n	900258b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002587e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90025882:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90025886:	fb0e fa0a 	mul.w	sl, lr, sl
9002588a:	fb0e fe03 	mul.w	lr, lr, r3
9002588e:	ea4f 231a 	mov.w	r3, sl, lsr #8
90025892:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90025896:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
9002589a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
9002589e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900258a2:	4453      	add	r3, sl
900258a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900258a8:	0a1b      	lsrs	r3, r3, #8
900258aa:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900258ae:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900258b2:	ea43 030c 	orr.w	r3, r3, ip
900258b6:	9c15      	ldr	r4, [sp, #84]	@ 0x54
900258b8:	2cff      	cmp	r4, #255	@ 0xff
900258ba:	d021      	beq.n	90025900 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
900258bc:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900258be:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
900258c2:	9c15      	ldr	r4, [sp, #84]	@ 0x54
900258c4:	fb04 fb0b 	mul.w	fp, r4, fp
900258c8:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900258ca:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900258ce:	9c15      	ldr	r4, [sp, #84]	@ 0x54
900258d0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900258d4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900258d8:	fb04 fa0a 	mul.w	sl, r4, sl
900258dc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900258e0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900258e4:	44de      	add	lr, fp
900258e6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900258ea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900258ee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900258f2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900258f6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900258fa:	ea4e 040a 	orr.w	r4, lr, sl
900258fe:	940e      	str	r4, [sp, #56]	@ 0x38
90025900:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90025902:	2cff      	cmp	r4, #255	@ 0xff
90025904:	d021      	beq.n	9002594a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90025906:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90025908:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
9002590c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9002590e:	fb04 fb0b 	mul.w	fp, r4, fp
90025912:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90025914:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90025918:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9002591a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002591e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90025922:	fb04 fa0a 	mul.w	sl, r4, sl
90025926:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002592a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
9002592e:	44de      	add	lr, fp
90025930:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90025934:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025938:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002593c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025940:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025944:	ea4e 040a 	orr.w	r4, lr, sl
90025948:	940a      	str	r4, [sp, #40]	@ 0x28
9002594a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
9002594c:	2cff      	cmp	r4, #255	@ 0xff
9002594e:	d021      	beq.n	90025994 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
90025950:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90025952:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90025956:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90025958:	fb04 fb0b 	mul.w	fp, r4, fp
9002595c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
9002595e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90025962:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90025964:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90025968:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
9002596c:	fb04 fa0a 	mul.w	sl, r4, sl
90025970:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025974:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90025978:	44de      	add	lr, fp
9002597a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002597e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025982:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025986:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002598a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002598e:	ea4e 040a 	orr.w	r4, lr, sl
90025992:	940f      	str	r4, [sp, #60]	@ 0x3c
90025994:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90025996:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
9002599a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002599e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900259a2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
900259a4:	fb08 fc0c 	mul.w	ip, r8, ip
900259a8:	fb02 cc0e 	mla	ip, r2, lr, ip
900259ac:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
900259b0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
900259b2:	fb01 cc0e 	mla	ip, r1, lr, ip
900259b6:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
900259ba:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900259bc:	fb09 cc0e 	mla	ip, r9, lr, ip
900259c0:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
900259c4:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900259c6:	fb08 f80e 	mul.w	r8, r8, lr
900259ca:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900259ce:	fb02 8303 	mla	r3, r2, r3, r8
900259d2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900259d4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900259d8:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
900259dc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900259de:	fb01 330a 	mla	r3, r1, sl, r3
900259e2:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
900259e6:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
900259e8:	fb09 3901 	mla	r9, r9, r1, r3
900259ec:	883b      	ldrh	r3, [r7, #0]
900259ee:	4342      	muls	r2, r0
900259f0:	ea4f 2919 	mov.w	r9, r9, lsr #8
900259f4:	1c50      	adds	r0, r2, #1
900259f6:	1219      	asrs	r1, r3, #8
900259f8:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
900259fc:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90025a00:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90025a04:	ea4c 0c09 	orr.w	ip, ip, r9
90025a08:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90025a0c:	ea4f 421c 	mov.w	r2, ip, lsr #16
90025a10:	f3cc 2e07 	ubfx	lr, ip, #8, #8
90025a14:	b2c0      	uxtb	r0, r0
90025a16:	fb12 f204 	smulbb	r2, r2, r4
90025a1a:	fa5f fc8c 	uxtb.w	ip, ip
90025a1e:	fb1e fe04 	smulbb	lr, lr, r4
90025a22:	fb01 2100 	mla	r1, r1, r0, r2
90025a26:	10da      	asrs	r2, r3, #3
90025a28:	fb1c fc04 	smulbb	ip, ip, r4
90025a2c:	00db      	lsls	r3, r3, #3
90025a2e:	b289      	uxth	r1, r1
90025a30:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90025a34:	b2db      	uxtb	r3, r3
90025a36:	fb02 e200 	mla	r2, r2, r0, lr
90025a3a:	fb03 c300 	mla	r3, r3, r0, ip
90025a3e:	b292      	uxth	r2, r2
90025a40:	fa1f fc83 	uxth.w	ip, r3
90025a44:	1c4b      	adds	r3, r1, #1
90025a46:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90025a4a:	f10c 0301 	add.w	r3, ip, #1
90025a4e:	eb03 231c 	add.w	r3, r3, ip, lsr #8
90025a52:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90025a56:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90025a5a:	430b      	orrs	r3, r1
90025a5c:	1c51      	adds	r1, r2, #1
90025a5e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90025a62:	0952      	lsrs	r2, r2, #5
90025a64:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025a68:	4313      	orrs	r3, r2
90025a6a:	803b      	strh	r3, [r7, #0]
90025a6c:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
90025a6e:	3702      	adds	r7, #2
90025a70:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90025a72:	441a      	add	r2, r3
90025a74:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90025a76:	441d      	add	r5, r3
90025a78:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
90025a7a:	9229      	str	r2, [sp, #164]	@ 0xa4
90025a7c:	3b01      	subs	r3, #1
90025a7e:	931a      	str	r3, [sp, #104]	@ 0x68
90025a80:	e694      	b.n	900257ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90025a82:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
90025a84:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90025a86:	441c      	add	r4, r3
90025a88:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90025a8a:	441d      	add	r5, r3
90025a8c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90025a8e:	9429      	str	r4, [sp, #164]	@ 0xa4
90025a90:	3b01      	subs	r3, #1
90025a92:	9309      	str	r3, [sp, #36]	@ 0x24
90025a94:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90025a96:	3302      	adds	r3, #2
90025a98:	930c      	str	r3, [sp, #48]	@ 0x30
90025a9a:	e667      	b.n	9002576c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90025a9c:	d024      	beq.n	90025ae8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
90025a9e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90025aa0:	982b      	ldr	r0, [sp, #172]	@ 0xac
90025aa2:	3b01      	subs	r3, #1
90025aa4:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90025aa6:	fb00 4003 	mla	r0, r0, r3, r4
90025aaa:	1400      	asrs	r0, r0, #16
90025aac:	f53f ae7b 	bmi.w	900257a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90025ab0:	3901      	subs	r1, #1
90025ab2:	4288      	cmp	r0, r1
90025ab4:	f6bf ae77 	bge.w	900257a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90025ab8:	992c      	ldr	r1, [sp, #176]	@ 0xb0
90025aba:	fb01 5303 	mla	r3, r1, r3, r5
90025abe:	141b      	asrs	r3, r3, #16
90025ac0:	f53f ae71 	bmi.w	900257a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90025ac4:	3a01      	subs	r2, #1
90025ac6:	4293      	cmp	r3, r2
90025ac8:	f6bf ae6d 	bge.w	900257a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90025acc:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
90025ad0:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
90025ad4:	f1bb 0f00 	cmp.w	fp, #0
90025ad8:	dc70      	bgt.n	90025bbc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
90025ada:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90025adc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90025ae0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90025ae2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90025ae6:	930c      	str	r3, [sp, #48]	@ 0x30
90025ae8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90025aea:	2b00      	cmp	r3, #0
90025aec:	f340 81be 	ble.w	90025e6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
90025af0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90025af4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025af6:	ee30 0a04 	vadd.f32	s0, s0, s8
90025afa:	ee70 0aa4 	vadd.f32	s1, s1, s9
90025afe:	eef0 6a62 	vmov.f32	s13, s5
90025b02:	eec7 7a00 	vdiv.f32	s15, s14, s0
90025b06:	ee31 1a05 	vadd.f32	s2, s2, s10
90025b0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025b0e:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
90025b12:	eef0 6a43 	vmov.f32	s13, s6
90025b16:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025b1a:	ee16 5a90 	vmov	r5, s13
90025b1e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90025b22:	ee61 7a27 	vmul.f32	s15, s2, s15
90025b26:	ee77 2a62 	vsub.f32	s5, s14, s5
90025b2a:	ee37 3ac3 	vsub.f32	s6, s15, s6
90025b2e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90025b32:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025b36:	ee12 2a90 	vmov	r2, s5
90025b3a:	eef0 2a47 	vmov.f32	s5, s14
90025b3e:	fb92 f3f3 	sdiv	r3, r2, r3
90025b42:	ee13 2a10 	vmov	r2, s6
90025b46:	932b      	str	r3, [sp, #172]	@ 0xac
90025b48:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025b4a:	eeb0 3a67 	vmov.f32	s6, s15
90025b4e:	fb92 f3f3 	sdiv	r3, r2, r3
90025b52:	932c      	str	r3, [sp, #176]	@ 0xb0
90025b54:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90025b56:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
90025b58:	3b01      	subs	r3, #1
90025b5a:	9319      	str	r3, [sp, #100]	@ 0x64
90025b5c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025b5e:	bf08      	it	eq
90025b60:	4613      	moveq	r3, r2
90025b62:	9309      	str	r3, [sp, #36]	@ 0x24
90025b64:	e5f4      	b.n	90025750 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90025b66:	2900      	cmp	r1, #0
90025b68:	f43f ae66 	beq.w	90025838 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90025b6c:	f818 0000 	ldrb.w	r0, [r8, r0]
90025b70:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90025b74:	900a      	str	r0, [sp, #40]	@ 0x28
90025b76:	0e00      	lsrs	r0, r0, #24
90025b78:	9013      	str	r0, [sp, #76]	@ 0x4c
90025b7a:	e65d      	b.n	90025838 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90025b7c:	f113 0801 	adds.w	r8, r3, #1
90025b80:	f53f af74 	bmi.w	90025a6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025b84:	4540      	cmp	r0, r8
90025b86:	f6ff af71 	blt.w	90025a6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025b8a:	f11c 0801 	adds.w	r8, ip, #1
90025b8e:	f53f af6d 	bmi.w	90025a6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025b92:	45c6      	cmp	lr, r8
90025b94:	f6ff af6a 	blt.w	90025a6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025b98:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
90025b9a:	b200      	sxth	r0, r0
90025b9c:	9302      	str	r3, [sp, #8]
90025b9e:	fa0f f38e 	sxth.w	r3, lr
90025ba2:	9000      	str	r0, [sp, #0]
90025ba4:	9301      	str	r3, [sp, #4]
90025ba6:	4633      	mov	r3, r6
90025ba8:	981d      	ldr	r0, [sp, #116]	@ 0x74
90025baa:	e9cd 1405 	strd	r1, r4, [sp, #20]
90025bae:	e9cd c203 	strd	ip, r2, [sp, #12]
90025bb2:	4639      	mov	r1, r7
90025bb4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90025bb6:	f7ff fc63 	bl	90025480 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
90025bba:	e757      	b.n	90025a6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025bbc:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90025bbe:	f3c5 3003 	ubfx	r0, r5, #12, #4
90025bc2:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90025bc4:	f3c3 3203 	ubfx	r2, r3, #12, #4
90025bc8:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90025bca:	1427      	asrs	r7, r4, #16
90025bcc:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90025bce:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025bd2:	142b      	asrs	r3, r5, #16
90025bd4:	fb01 7303 	mla	r3, r1, r3, r7
90025bd8:	18e7      	adds	r7, r4, r3
90025bda:	5ce3      	ldrb	r3, [r4, r3]
90025bdc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90025be0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90025be4:	2a00      	cmp	r2, #0
90025be6:	f000 8137 	beq.w	90025e58 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
90025bea:	f897 e001 	ldrb.w	lr, [r7, #1]
90025bee:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
90025bf2:	9410      	str	r4, [sp, #64]	@ 0x40
90025bf4:	0e24      	lsrs	r4, r4, #24
90025bf6:	9417      	str	r4, [sp, #92]	@ 0x5c
90025bf8:	b170      	cbz	r0, 90025c18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90025bfa:	eb07 0e01 	add.w	lr, r7, r1
90025bfe:	5c79      	ldrb	r1, [r7, r1]
90025c00:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90025c04:	910b      	str	r1, [sp, #44]	@ 0x2c
90025c06:	0e09      	lsrs	r1, r1, #24
90025c08:	9114      	str	r1, [sp, #80]	@ 0x50
90025c0a:	f89e 1001 	ldrb.w	r1, [lr, #1]
90025c0e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90025c12:	9111      	str	r1, [sp, #68]	@ 0x44
90025c14:	0e09      	lsrs	r1, r1, #24
90025c16:	9118      	str	r1, [sp, #96]	@ 0x60
90025c18:	b292      	uxth	r2, r2
90025c1a:	9917      	ldr	r1, [sp, #92]	@ 0x5c
90025c1c:	b280      	uxth	r0, r0
90025c1e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90025c20:	fb02 f800 	mul.w	r8, r2, r0
90025c24:	0112      	lsls	r2, r2, #4
90025c26:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90025c2a:	eba2 0e08 	sub.w	lr, r2, r8
90025c2e:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90025c32:	b280      	uxth	r0, r0
90025c34:	fa1f fe8e 	uxth.w	lr, lr
90025c38:	1a12      	subs	r2, r2, r0
90025c3a:	fb0e f101 	mul.w	r1, lr, r1
90025c3e:	b292      	uxth	r2, r2
90025c40:	fb02 110c 	mla	r1, r2, ip, r1
90025c44:	fb00 1104 	mla	r1, r0, r4, r1
90025c48:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90025c4a:	fb08 1104 	mla	r1, r8, r4, r1
90025c4e:	f3c1 2107 	ubfx	r1, r1, #8, #8
90025c52:	2900      	cmp	r1, #0
90025c54:	f000 80f5 	beq.w	90025e42 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
90025c58:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90025c5c:	d019      	beq.n	90025c92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
90025c5e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90025c62:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90025c66:	fb0c fa0a 	mul.w	sl, ip, sl
90025c6a:	fb0c fc03 	mul.w	ip, ip, r3
90025c6e:	ea4f 231a 	mov.w	r3, sl, lsr #8
90025c72:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90025c76:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90025c7a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90025c7e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90025c82:	4453      	add	r3, sl
90025c84:	0a3f      	lsrs	r7, r7, #8
90025c86:	0a1b      	lsrs	r3, r3, #8
90025c88:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90025c8c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90025c90:	433b      	orrs	r3, r7
90025c92:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90025c94:	2cff      	cmp	r4, #255	@ 0xff
90025c96:	d020      	beq.n	90025cda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
90025c98:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90025c9a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90025c9e:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90025ca0:	4367      	muls	r7, r4
90025ca2:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90025ca4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90025ca8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90025cac:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90025cae:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90025cb2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025cb6:	fb04 fa0a 	mul.w	sl, r4, sl
90025cba:	44bc      	add	ip, r7
90025cbc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90025cc0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025cc4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90025cc8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025ccc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025cd0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025cd4:	ea4c 040a 	orr.w	r4, ip, sl
90025cd8:	9410      	str	r4, [sp, #64]	@ 0x40
90025cda:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90025cdc:	2cff      	cmp	r4, #255	@ 0xff
90025cde:	d020      	beq.n	90025d22 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
90025ce0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90025ce2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90025ce6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90025ce8:	4367      	muls	r7, r4
90025cea:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90025cec:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90025cf0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90025cf4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90025cf6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90025cfa:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025cfe:	fb04 fa0a 	mul.w	sl, r4, sl
90025d02:	44bc      	add	ip, r7
90025d04:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90025d08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025d0c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90025d10:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025d14:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025d18:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025d1c:	ea4c 040a 	orr.w	r4, ip, sl
90025d20:	940b      	str	r4, [sp, #44]	@ 0x2c
90025d22:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90025d24:	2cff      	cmp	r4, #255	@ 0xff
90025d26:	d020      	beq.n	90025d6a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
90025d28:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90025d2a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90025d2e:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90025d30:	4367      	muls	r7, r4
90025d32:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90025d34:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90025d38:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90025d3c:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90025d3e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90025d42:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025d46:	fb04 fa0a 	mul.w	sl, r4, sl
90025d4a:	44bc      	add	ip, r7
90025d4c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90025d50:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025d54:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90025d58:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025d5c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025d60:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025d64:	ea4c 040a 	orr.w	r4, ip, sl
90025d68:	9411      	str	r4, [sp, #68]	@ 0x44
90025d6a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90025d6c:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90025d70:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90025d74:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90025d78:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90025d7a:	fb0e f707 	mul.w	r7, lr, r7
90025d7e:	fb02 770c 	mla	r7, r2, ip, r7
90025d82:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90025d86:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90025d88:	fb00 770c 	mla	r7, r0, ip, r7
90025d8c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90025d90:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90025d92:	fb08 770c 	mla	r7, r8, ip, r7
90025d96:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
90025d9a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90025d9c:	fb0e fe0c 	mul.w	lr, lr, ip
90025da0:	0a3f      	lsrs	r7, r7, #8
90025da2:	fb02 e303 	mla	r3, r2, r3, lr
90025da6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90025da8:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90025dac:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90025db0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90025db2:	fb00 330a 	mla	r3, r0, sl, r3
90025db6:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
90025dba:	f8b9 0000 	ldrh.w	r0, [r9]
90025dbe:	fb08 3c0c 	mla	ip, r8, ip, r3
90025dc2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90025dc4:	1202      	asrs	r2, r0, #8
90025dc6:	434b      	muls	r3, r1
90025dc8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025dcc:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90025dd0:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90025dd4:	1c59      	adds	r1, r3, #1
90025dd6:	ea47 070c 	orr.w	r7, r7, ip
90025dda:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90025dde:	0c3b      	lsrs	r3, r7, #16
90025de0:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90025de4:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90025de8:	b2ff      	uxtb	r7, r7
90025dea:	fb13 f304 	smulbb	r3, r3, r4
90025dee:	b2c9      	uxtb	r1, r1
90025df0:	fb1c fc04 	smulbb	ip, ip, r4
90025df4:	fb02 3201 	mla	r2, r2, r1, r3
90025df8:	10c3      	asrs	r3, r0, #3
90025dfa:	fb17 f704 	smulbb	r7, r7, r4
90025dfe:	00c0      	lsls	r0, r0, #3
90025e00:	b292      	uxth	r2, r2
90025e02:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90025e06:	b2c0      	uxtb	r0, r0
90025e08:	fb03 c301 	mla	r3, r3, r1, ip
90025e0c:	f102 0c01 	add.w	ip, r2, #1
90025e10:	fb00 7001 	mla	r0, r0, r1, r7
90025e14:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
90025e18:	b280      	uxth	r0, r0
90025e1a:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
90025e1e:	b29b      	uxth	r3, r3
90025e20:	1c42      	adds	r2, r0, #1
90025e22:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90025e26:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90025e2a:	ea42 020c 	orr.w	r2, r2, ip
90025e2e:	f103 0c01 	add.w	ip, r3, #1
90025e32:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90025e36:	095b      	lsrs	r3, r3, #5
90025e38:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90025e3c:	431a      	orrs	r2, r3
90025e3e:	f8a9 2000 	strh.w	r2, [r9]
90025e42:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
90025e44:	f109 0902 	add.w	r9, r9, #2
90025e48:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90025e4a:	f10b 3bff 	add.w	fp, fp, #4294967295
90025e4e:	441a      	add	r2, r3
90025e50:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90025e52:	9229      	str	r2, [sp, #164]	@ 0xa4
90025e54:	441d      	add	r5, r3
90025e56:	e63d      	b.n	90025ad4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
90025e58:	2800      	cmp	r0, #0
90025e5a:	f43f aedd 	beq.w	90025c18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90025e5e:	5c79      	ldrb	r1, [r7, r1]
90025e60:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90025e64:	910b      	str	r1, [sp, #44]	@ 0x2c
90025e66:	0e09      	lsrs	r1, r1, #24
90025e68:	9114      	str	r1, [sp, #80]	@ 0x50
90025e6a:	e6d5      	b.n	90025c18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90025e6c:	b01f      	add	sp, #124	@ 0x7c
90025e6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90025e72 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
90025e72:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025e76:	b089      	sub	sp, #36	@ 0x24
90025e78:	9101      	str	r1, [sp, #4]
90025e7a:	9801      	ldr	r0, [sp, #4]
90025e7c:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
90025e80:	8800      	ldrh	r0, [r0, #0]
90025e82:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
90025e86:	1206      	asrs	r6, r0, #8
90025e88:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
90025e8c:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
90025e90:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
90025e94:	9602      	str	r6, [sp, #8]
90025e96:	10c6      	asrs	r6, r0, #3
90025e98:	00c0      	lsls	r0, r0, #3
90025e9a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90025e9e:	b2c0      	uxtb	r0, r0
90025ea0:	9603      	str	r6, [sp, #12]
90025ea2:	9004      	str	r0, [sp, #16]
90025ea4:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
90025ea8:	fb07 100c 	mla	r0, r7, ip, r1
90025eac:	2f00      	cmp	r7, #0
90025eae:	eb02 0e00 	add.w	lr, r2, r0
90025eb2:	f2c0 810a 	blt.w	900260ca <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90025eb6:	45b8      	cmp	r8, r7
90025eb8:	f340 8107 	ble.w	900260ca <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90025ebc:	2900      	cmp	r1, #0
90025ebe:	f2c0 8102 	blt.w	900260c6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90025ec2:	458c      	cmp	ip, r1
90025ec4:	f340 80ff 	ble.w	900260c6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90025ec8:	5c12      	ldrb	r2, [r2, r0]
90025eca:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90025ece:	1c4a      	adds	r2, r1, #1
90025ed0:	f100 80fe 	bmi.w	900260d0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90025ed4:	4594      	cmp	ip, r2
90025ed6:	f340 80fb 	ble.w	900260d0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90025eda:	2d00      	cmp	r5, #0
90025edc:	f000 80fa 	beq.w	900260d4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
90025ee0:	f89e 2001 	ldrb.w	r2, [lr, #1]
90025ee4:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90025ee8:	3701      	adds	r7, #1
90025eea:	f100 80f7 	bmi.w	900260dc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90025eee:	45b8      	cmp	r8, r7
90025ef0:	f340 80f4 	ble.w	900260dc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90025ef4:	2c00      	cmp	r4, #0
90025ef6:	f000 80f4 	beq.w	900260e2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
90025efa:	2900      	cmp	r1, #0
90025efc:	eb0e 020c 	add.w	r2, lr, ip
90025f00:	f2c0 80ea 	blt.w	900260d8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90025f04:	458c      	cmp	ip, r1
90025f06:	f340 80e7 	ble.w	900260d8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90025f0a:	f81e 700c 	ldrb.w	r7, [lr, ip]
90025f0e:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
90025f12:	3101      	adds	r1, #1
90025f14:	f100 80e8 	bmi.w	900260e8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90025f18:	458c      	cmp	ip, r1
90025f1a:	f340 80e5 	ble.w	900260e8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90025f1e:	2d00      	cmp	r5, #0
90025f20:	f000 80e4 	beq.w	900260ec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
90025f24:	7852      	ldrb	r2, [r2, #1]
90025f26:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90025f2a:	0e0b      	lsrs	r3, r1, #24
90025f2c:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
90025f30:	ea4f 6a10 	mov.w	sl, r0, lsr #24
90025f34:	9300      	str	r3, [sp, #0]
90025f36:	b2a4      	uxth	r4, r4
90025f38:	b2ab      	uxth	r3, r5
90025f3a:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
90025f3e:	ea4f 6b16 	mov.w	fp, r6, lsr #24
90025f42:	fb03 f904 	mul.w	r9, r3, r4
90025f46:	011b      	lsls	r3, r3, #4
90025f48:	fb0a f505 	mul.w	r5, sl, r5
90025f4c:	ea4f 6817 	mov.w	r8, r7, lsr #24
90025f50:	eba3 0e09 	sub.w	lr, r3, r9
90025f54:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
90025f58:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
90025f5c:	0a28      	lsrs	r0, r5, #8
90025f5e:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
90025f62:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90025f66:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
90025f6a:	fb0a f303 	mul.w	r3, sl, r3
90025f6e:	fb08 f707 	mul.w	r7, r8, r7
90025f72:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
90025f76:	4405      	add	r5, r0
90025f78:	fb08 fc0c 	mul.w	ip, r8, ip
90025f7c:	b2a4      	uxth	r4, r4
90025f7e:	0a2d      	lsrs	r5, r5, #8
90025f80:	fa1f fe8e 	uxth.w	lr, lr
90025f84:	1b12      	subs	r2, r2, r4
90025f86:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
90025f8a:	b292      	uxth	r2, r2
90025f8c:	9005      	str	r0, [sp, #20]
90025f8e:	f503 7080 	add.w	r0, r3, #256	@ 0x100
90025f92:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90025f96:	ea4f 201c 	mov.w	r0, ip, lsr #8
90025f9a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90025f9e:	0a1b      	lsrs	r3, r3, #8
90025fa0:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
90025fa4:	9306      	str	r3, [sp, #24]
90025fa6:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
90025faa:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
90025fae:	4460      	add	r0, ip
90025fb0:	fb0b f303 	mul.w	r3, fp, r3
90025fb4:	fb0b f606 	mul.w	r6, fp, r6
90025fb8:	0a00      	lsrs	r0, r0, #8
90025fba:	0a1d      	lsrs	r5, r3, #8
90025fbc:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
90025fc0:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
90025fc4:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90025fc8:	441d      	add	r5, r3
90025fca:	f506 7380 	add.w	r3, r6, #256	@ 0x100
90025fce:	eb03 2616 	add.w	r6, r3, r6, lsr #8
90025fd2:	f507 7380 	add.w	r3, r7, #256	@ 0x100
90025fd6:	0a2d      	lsrs	r5, r5, #8
90025fd8:	eb03 2317 	add.w	r3, r3, r7, lsr #8
90025fdc:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
90025fe0:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90025fe4:	0a36      	lsrs	r6, r6, #8
90025fe6:	0a1b      	lsrs	r3, r3, #8
90025fe8:	fb05 f50e 	mul.w	r5, r5, lr
90025fec:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
90025ff0:	9307      	str	r3, [sp, #28]
90025ff2:	0e0b      	lsrs	r3, r1, #24
90025ff4:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90025ff8:	fb0e f606 	mul.w	r6, lr, r6
90025ffc:	435f      	muls	r7, r3
90025ffe:	4359      	muls	r1, r3
90026000:	9b05      	ldr	r3, [sp, #20]
90026002:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026006:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002600a:	fb03 5502 	mla	r5, r3, r2, r5
9002600e:	9b06      	ldr	r3, [sp, #24]
90026010:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026014:	fb0e fe0b 	mul.w	lr, lr, fp
90026018:	44bc      	add	ip, r7
9002601a:	f501 7780 	add.w	r7, r1, #256	@ 0x100
9002601e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026022:	eb07 2111 	add.w	r1, r7, r1, lsr #8
90026026:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002602a:	0a09      	lsrs	r1, r1, #8
9002602c:	fb0c 5509 	mla	r5, ip, r9, r5
90026030:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90026034:	fb00 5504 	mla	r5, r0, r4, r5
90026038:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
9002603c:	9b07      	ldr	r3, [sp, #28]
9002603e:	fb02 6000 	mla	r0, r2, r0, r6
90026042:	0a2d      	lsrs	r5, r5, #8
90026044:	fb02 e20a 	mla	r2, r2, sl, lr
90026048:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002604c:	fb09 0001 	mla	r0, r9, r1, r0
90026050:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90026054:	fb04 0003 	mla	r0, r4, r3, r0
90026058:	9b00      	ldr	r3, [sp, #0]
9002605a:	fb04 2408 	mla	r4, r4, r8, r2
9002605e:	9a04      	ldr	r2, [sp, #16]
90026060:	0a00      	lsrs	r0, r0, #8
90026062:	fb09 4903 	mla	r9, r9, r3, r4
90026066:	9b02      	ldr	r3, [sp, #8]
90026068:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
9002606c:	ea6f 2929 	mvn.w	r9, r9, asr #8
90026070:	4305      	orrs	r5, r0
90026072:	fa5f f989 	uxtb.w	r9, r9
90026076:	fb03 f109 	mul.w	r1, r3, r9
9002607a:	9b03      	ldr	r3, [sp, #12]
9002607c:	fb03 f309 	mul.w	r3, r3, r9
90026080:	fb02 f909 	mul.w	r9, r2, r9
90026084:	1c4a      	adds	r2, r1, #1
90026086:	1c58      	adds	r0, r3, #1
90026088:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9002608c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90026090:	0c2a      	lsrs	r2, r5, #16
90026092:	0a2b      	lsrs	r3, r5, #8
90026094:	eb02 2211 	add.w	r2, r2, r1, lsr #8
90026098:	eb03 2310 	add.w	r3, r3, r0, lsr #8
9002609c:	0212      	lsls	r2, r2, #8
9002609e:	00db      	lsls	r3, r3, #3
900260a0:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
900260a4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900260a8:	4313      	orrs	r3, r2
900260aa:	f109 0201 	add.w	r2, r9, #1
900260ae:	eb02 2919 	add.w	r9, r2, r9, lsr #8
900260b2:	eb05 2519 	add.w	r5, r5, r9, lsr #8
900260b6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
900260ba:	431d      	orrs	r5, r3
900260bc:	9b01      	ldr	r3, [sp, #4]
900260be:	801d      	strh	r5, [r3, #0]
900260c0:	b009      	add	sp, #36	@ 0x24
900260c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900260c6:	2000      	movs	r0, #0
900260c8:	e701      	b.n	90025ece <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
900260ca:	2600      	movs	r6, #0
900260cc:	4630      	mov	r0, r6
900260ce:	e70b      	b.n	90025ee8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
900260d0:	2600      	movs	r6, #0
900260d2:	e709      	b.n	90025ee8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
900260d4:	462e      	mov	r6, r5
900260d6:	e707      	b.n	90025ee8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
900260d8:	2700      	movs	r7, #0
900260da:	e71a      	b.n	90025f12 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
900260dc:	2100      	movs	r1, #0
900260de:	460f      	mov	r7, r1
900260e0:	e723      	b.n	90025f2a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
900260e2:	4621      	mov	r1, r4
900260e4:	4627      	mov	r7, r4
900260e6:	e720      	b.n	90025f2a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
900260e8:	2100      	movs	r1, #0
900260ea:	e71e      	b.n	90025f2a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
900260ec:	4629      	mov	r1, r5
900260ee:	e71c      	b.n	90025f2a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

900260f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900260f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900260f4:	b09b      	sub	sp, #108	@ 0x6c
900260f6:	9218      	str	r2, [sp, #96]	@ 0x60
900260f8:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
900260fa:	9019      	str	r0, [sp, #100]	@ 0x64
900260fc:	9116      	str	r1, [sp, #88]	@ 0x58
900260fe:	6850      	ldr	r0, [r2, #4]
90026100:	9307      	str	r3, [sp, #28]
90026102:	6812      	ldr	r2, [r2, #0]
90026104:	9d26      	ldr	r5, [sp, #152]	@ 0x98
90026106:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
9002610a:	fb00 1303 	mla	r3, r0, r3, r1
9002610e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90026112:	930a      	str	r3, [sp, #40]	@ 0x28
90026114:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90026116:	681b      	ldr	r3, [r3, #0]
90026118:	930f      	str	r3, [sp, #60]	@ 0x3c
9002611a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
9002611c:	685e      	ldr	r6, [r3, #4]
9002611e:	3604      	adds	r6, #4
90026120:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90026122:	2b00      	cmp	r3, #0
90026124:	dc03      	bgt.n	9002612e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90026126:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90026128:	2b00      	cmp	r3, #0
9002612a:	f340 8373 	ble.w	90026814 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
9002612e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90026130:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026134:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90026138:	1e48      	subs	r0, r1, #1
9002613a:	1e57      	subs	r7, r2, #1
9002613c:	9b07      	ldr	r3, [sp, #28]
9002613e:	2b00      	cmp	r3, #0
90026140:	f340 818f 	ble.w	90026462 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
90026144:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90026146:	142b      	asrs	r3, r5, #16
90026148:	ea5f 4c24 	movs.w	ip, r4, asr #16
9002614c:	d406      	bmi.n	9002615c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9002614e:	4584      	cmp	ip, r0
90026150:	da04      	bge.n	9002615c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90026152:	2b00      	cmp	r3, #0
90026154:	db02      	blt.n	9002615c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90026156:	42bb      	cmp	r3, r7
90026158:	f2c0 8184 	blt.w	90026464 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
9002615c:	f11c 0c01 	adds.w	ip, ip, #1
90026160:	f100 8172 	bmi.w	90026448 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90026164:	4561      	cmp	r1, ip
90026166:	f2c0 816f 	blt.w	90026448 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002616a:	3301      	adds	r3, #1
9002616c:	f100 816c 	bmi.w	90026448 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90026170:	429a      	cmp	r2, r3
90026172:	f2c0 8169 	blt.w	90026448 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90026176:	9b07      	ldr	r3, [sp, #28]
90026178:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
9002617a:	9317      	str	r3, [sp, #92]	@ 0x5c
9002617c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
9002617e:	2b00      	cmp	r3, #0
90026180:	f340 818e 	ble.w	900264a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
90026184:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90026186:	ea4f 4c25 	mov.w	ip, r5, asr #16
9002618a:	f3c5 3003 	ubfx	r0, r5, #12, #4
9002618e:	f3c3 3203 	ubfx	r2, r3, #12, #4
90026192:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90026194:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
90026198:	9b25      	ldr	r3, [sp, #148]	@ 0x94
9002619a:	141b      	asrs	r3, r3, #16
9002619c:	f100 81d1 	bmi.w	90026542 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900261a0:	f101 38ff 	add.w	r8, r1, #4294967295
900261a4:	4543      	cmp	r3, r8
900261a6:	f280 81cc 	bge.w	90026542 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900261aa:	f1bc 0f00 	cmp.w	ip, #0
900261ae:	f2c0 81c8 	blt.w	90026542 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900261b2:	f10e 38ff 	add.w	r8, lr, #4294967295
900261b6:	45c4      	cmp	ip, r8
900261b8:	f280 81c3 	bge.w	90026542 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900261bc:	b209      	sxth	r1, r1
900261be:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
900261c0:	fb0c 3301 	mla	r3, ip, r1, r3
900261c4:	eb04 0803 	add.w	r8, r4, r3
900261c8:	5ce3      	ldrb	r3, [r4, r3]
900261ca:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
900261ce:	ea4f 6e13 	mov.w	lr, r3, lsr #24
900261d2:	2a00      	cmp	r2, #0
900261d4:	f000 81aa 	beq.w	9002652c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
900261d8:	f898 c001 	ldrb.w	ip, [r8, #1]
900261dc:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
900261e0:	940b      	str	r4, [sp, #44]	@ 0x2c
900261e2:	0e24      	lsrs	r4, r4, #24
900261e4:	9412      	str	r4, [sp, #72]	@ 0x48
900261e6:	b178      	cbz	r0, 90026208 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
900261e8:	eb08 0c01 	add.w	ip, r8, r1
900261ec:	f818 1001 	ldrb.w	r1, [r8, r1]
900261f0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900261f4:	9108      	str	r1, [sp, #32]
900261f6:	0e09      	lsrs	r1, r1, #24
900261f8:	9110      	str	r1, [sp, #64]	@ 0x40
900261fa:	f89c 1001 	ldrb.w	r1, [ip, #1]
900261fe:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90026202:	910c      	str	r1, [sp, #48]	@ 0x30
90026204:	0e09      	lsrs	r1, r1, #24
90026206:	9113      	str	r1, [sp, #76]	@ 0x4c
90026208:	b292      	uxth	r2, r2
9002620a:	9912      	ldr	r1, [sp, #72]	@ 0x48
9002620c:	b280      	uxth	r0, r0
9002620e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90026210:	fb02 f900 	mul.w	r9, r2, r0
90026214:	0112      	lsls	r2, r2, #4
90026216:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
9002621a:	eba2 0809 	sub.w	r8, r2, r9
9002621e:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90026222:	b280      	uxth	r0, r0
90026224:	fa1f f888 	uxth.w	r8, r8
90026228:	1a12      	subs	r2, r2, r0
9002622a:	fb08 f101 	mul.w	r1, r8, r1
9002622e:	b292      	uxth	r2, r2
90026230:	fb02 110e 	mla	r1, r2, lr, r1
90026234:	fb00 1104 	mla	r1, r0, r4, r1
90026238:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9002623a:	fb09 1104 	mla	r1, r9, r4, r1
9002623e:	f3c1 2107 	ubfx	r1, r1, #8, #8
90026242:	2900      	cmp	r1, #0
90026244:	f000 80f5 	beq.w	90026432 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90026248:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
9002624c:	d01b      	beq.n	90026286 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9002624e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90026252:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90026256:	fb0e fa0a 	mul.w	sl, lr, sl
9002625a:	fb0e fe03 	mul.w	lr, lr, r3
9002625e:	ea4f 231a 	mov.w	r3, sl, lsr #8
90026262:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90026266:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
9002626a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
9002626e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90026272:	4453      	add	r3, sl
90026274:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026278:	0a1b      	lsrs	r3, r3, #8
9002627a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
9002627e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90026282:	ea43 030c 	orr.w	r3, r3, ip
90026286:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90026288:	2cff      	cmp	r4, #255	@ 0xff
9002628a:	d021      	beq.n	900262d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9002628c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
9002628e:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90026292:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90026294:	fb04 fb0b 	mul.w	fp, r4, fp
90026298:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
9002629a:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
9002629e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900262a0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900262a4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900262a8:	fb04 fa0a 	mul.w	sl, r4, sl
900262ac:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900262b0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900262b4:	44de      	add	lr, fp
900262b6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900262ba:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900262be:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900262c2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900262c6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900262ca:	ea4e 040a 	orr.w	r4, lr, sl
900262ce:	940b      	str	r4, [sp, #44]	@ 0x2c
900262d0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900262d2:	2cff      	cmp	r4, #255	@ 0xff
900262d4:	d021      	beq.n	9002631a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
900262d6:	9c08      	ldr	r4, [sp, #32]
900262d8:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
900262dc:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900262de:	fb04 fb0b 	mul.w	fp, r4, fp
900262e2:	9c08      	ldr	r4, [sp, #32]
900262e4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900262e8:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900262ea:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900262ee:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900262f2:	fb04 fa0a 	mul.w	sl, r4, sl
900262f6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900262fa:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900262fe:	44de      	add	lr, fp
90026300:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90026304:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026308:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002630c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026310:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026314:	ea4e 040a 	orr.w	r4, lr, sl
90026318:	9408      	str	r4, [sp, #32]
9002631a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9002631c:	2cff      	cmp	r4, #255	@ 0xff
9002631e:	d021      	beq.n	90026364 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
90026320:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90026322:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90026326:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90026328:	fb04 fb0b 	mul.w	fp, r4, fp
9002632c:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
9002632e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90026332:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90026334:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026338:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
9002633c:	fb04 fa0a 	mul.w	sl, r4, sl
90026340:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026344:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90026348:	44de      	add	lr, fp
9002634a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002634e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026352:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026356:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002635a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002635e:	ea4e 040a 	orr.w	r4, lr, sl
90026362:	940c      	str	r4, [sp, #48]	@ 0x30
90026364:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90026366:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
9002636a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002636e:	43c9      	mvns	r1, r1
90026370:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90026374:	9c08      	ldr	r4, [sp, #32]
90026376:	fb08 fc0c 	mul.w	ip, r8, ip
9002637a:	fb02 cc0e 	mla	ip, r2, lr, ip
9002637e:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90026382:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90026384:	fb00 cc0e 	mla	ip, r0, lr, ip
90026388:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
9002638c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
9002638e:	fb09 cc0e 	mla	ip, r9, lr, ip
90026392:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
90026396:	fb08 f80e 	mul.w	r8, r8, lr
9002639a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002639e:	fa5f fe81 	uxtb.w	lr, r1
900263a2:	fb02 8303 	mla	r3, r2, r3, r8
900263a6:	9a08      	ldr	r2, [sp, #32]
900263a8:	f8b7 8000 	ldrh.w	r8, [r7]
900263ac:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900263b0:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
900263b4:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
900263b6:	ea4f 01c8 	mov.w	r1, r8, lsl #3
900263ba:	fb00 330a 	mla	r3, r0, sl, r3
900263be:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
900263c2:	ea4f 2228 	mov.w	r2, r8, asr #8
900263c6:	fb09 3900 	mla	r9, r9, r0, r3
900263ca:	ea4f 00e8 	mov.w	r0, r8, asr #3
900263ce:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
900263d2:	b2c9      	uxtb	r1, r1
900263d4:	ea4f 2919 	mov.w	r9, r9, lsr #8
900263d8:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900263dc:	fb02 f20e 	mul.w	r2, r2, lr
900263e0:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
900263e4:	fb00 f00e 	mul.w	r0, r0, lr
900263e8:	1c53      	adds	r3, r2, #1
900263ea:	fb01 f10e 	mul.w	r1, r1, lr
900263ee:	ea4c 0c09 	orr.w	ip, ip, r9
900263f2:	eb03 2212 	add.w	r2, r3, r2, lsr #8
900263f6:	ea4f 431c 	mov.w	r3, ip, lsr #16
900263fa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900263fe:	4a60      	ldr	r2, [pc, #384]	@ (90026580 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
90026400:	b2db      	uxtb	r3, r3
90026402:	ea02 2203 	and.w	r2, r2, r3, lsl #8
90026406:	1c43      	adds	r3, r0, #1
90026408:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9002640c:	ea4f 231c 	mov.w	r3, ip, lsr #8
90026410:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90026414:	00db      	lsls	r3, r3, #3
90026416:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002641a:	4313      	orrs	r3, r2
9002641c:	1c4a      	adds	r2, r1, #1
9002641e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90026422:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90026426:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
9002642a:	ea4c 0c03 	orr.w	ip, ip, r3
9002642e:	f8a7 c000 	strh.w	ip, [r7]
90026432:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90026434:	3702      	adds	r7, #2
90026436:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90026438:	441a      	add	r2, r3
9002643a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002643c:	441d      	add	r5, r3
9002643e:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90026440:	9225      	str	r2, [sp, #148]	@ 0x94
90026442:	3b01      	subs	r3, #1
90026444:	9317      	str	r3, [sp, #92]	@ 0x5c
90026446:	e699      	b.n	9002617c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90026448:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
9002644a:	9c25      	ldr	r4, [sp, #148]	@ 0x94
9002644c:	441c      	add	r4, r3
9002644e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90026450:	441d      	add	r5, r3
90026452:	9b07      	ldr	r3, [sp, #28]
90026454:	9425      	str	r4, [sp, #148]	@ 0x94
90026456:	3b01      	subs	r3, #1
90026458:	9307      	str	r3, [sp, #28]
9002645a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002645c:	3302      	adds	r3, #2
9002645e:	930a      	str	r3, [sp, #40]	@ 0x28
90026460:	e66c      	b.n	9002613c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90026462:	d024      	beq.n	900264ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
90026464:	9b07      	ldr	r3, [sp, #28]
90026466:	9827      	ldr	r0, [sp, #156]	@ 0x9c
90026468:	3b01      	subs	r3, #1
9002646a:	9c25      	ldr	r4, [sp, #148]	@ 0x94
9002646c:	fb00 4003 	mla	r0, r0, r3, r4
90026470:	1400      	asrs	r0, r0, #16
90026472:	f53f ae80 	bmi.w	90026176 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90026476:	3901      	subs	r1, #1
90026478:	4288      	cmp	r0, r1
9002647a:	f6bf ae7c 	bge.w	90026176 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9002647e:	9928      	ldr	r1, [sp, #160]	@ 0xa0
90026480:	fb01 5303 	mla	r3, r1, r3, r5
90026484:	141b      	asrs	r3, r3, #16
90026486:	f53f ae76 	bmi.w	90026176 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9002648a:	3a01      	subs	r2, #1
9002648c:	4293      	cmp	r3, r2
9002648e:	f6bf ae72 	bge.w	90026176 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90026492:	f8dd b01c 	ldr.w	fp, [sp, #28]
90026496:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
9002649a:	f1bb 0f00 	cmp.w	fp, #0
9002649e:	dc71      	bgt.n	90026584 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900264a0:	9b07      	ldr	r3, [sp, #28]
900264a2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900264a6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900264a8:	eb03 0344 	add.w	r3, r3, r4, lsl #1
900264ac:	930a      	str	r3, [sp, #40]	@ 0x28
900264ae:	9b16      	ldr	r3, [sp, #88]	@ 0x58
900264b0:	2b00      	cmp	r3, #0
900264b2:	f340 81af 	ble.w	90026814 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
900264b6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900264ba:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900264bc:	ee30 0a04 	vadd.f32	s0, s0, s8
900264c0:	ee70 0aa4 	vadd.f32	s1, s1, s9
900264c4:	eef0 6a62 	vmov.f32	s13, s5
900264c8:	eec7 7a00 	vdiv.f32	s15, s14, s0
900264cc:	ee31 1a05 	vadd.f32	s2, s2, s10
900264d0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900264d4:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
900264d8:	eef0 6a43 	vmov.f32	s13, s6
900264dc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900264e0:	ee16 5a90 	vmov	r5, s13
900264e4:	ee20 7aa7 	vmul.f32	s14, s1, s15
900264e8:	ee61 7a27 	vmul.f32	s15, s2, s15
900264ec:	ee77 2a62 	vsub.f32	s5, s14, s5
900264f0:	ee37 3ac3 	vsub.f32	s6, s15, s6
900264f4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900264f8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900264fc:	ee12 2a90 	vmov	r2, s5
90026500:	eef0 2a47 	vmov.f32	s5, s14
90026504:	fb92 f3f3 	sdiv	r3, r2, r3
90026508:	ee13 2a10 	vmov	r2, s6
9002650c:	9327      	str	r3, [sp, #156]	@ 0x9c
9002650e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026510:	eeb0 3a67 	vmov.f32	s6, s15
90026514:	fb92 f3f3 	sdiv	r3, r2, r3
90026518:	9328      	str	r3, [sp, #160]	@ 0xa0
9002651a:	9b16      	ldr	r3, [sp, #88]	@ 0x58
9002651c:	9a18      	ldr	r2, [sp, #96]	@ 0x60
9002651e:	3b01      	subs	r3, #1
90026520:	9316      	str	r3, [sp, #88]	@ 0x58
90026522:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026524:	bf08      	it	eq
90026526:	4613      	moveq	r3, r2
90026528:	9307      	str	r3, [sp, #28]
9002652a:	e5f9      	b.n	90026120 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9002652c:	2800      	cmp	r0, #0
9002652e:	f43f ae6b 	beq.w	90026208 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90026532:	f818 1001 	ldrb.w	r1, [r8, r1]
90026536:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002653a:	9108      	str	r1, [sp, #32]
9002653c:	0e09      	lsrs	r1, r1, #24
9002653e:	9110      	str	r1, [sp, #64]	@ 0x40
90026540:	e662      	b.n	90026208 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90026542:	f113 0801 	adds.w	r8, r3, #1
90026546:	f53f af74 	bmi.w	90026432 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9002654a:	4541      	cmp	r1, r8
9002654c:	f6ff af71 	blt.w	90026432 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90026550:	f11c 0801 	adds.w	r8, ip, #1
90026554:	f53f af6d 	bmi.w	90026432 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90026558:	45c6      	cmp	lr, r8
9002655a:	f6ff af6a 	blt.w	90026432 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9002655e:	b209      	sxth	r1, r1
90026560:	e9cd 3c02 	strd	r3, ip, [sp, #8]
90026564:	fa0f f38e 	sxth.w	r3, lr
90026568:	9100      	str	r1, [sp, #0]
9002656a:	4639      	mov	r1, r7
9002656c:	9301      	str	r3, [sp, #4]
9002656e:	4633      	mov	r3, r6
90026570:	e9cd 2004 	strd	r2, r0, [sp, #16]
90026574:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90026576:	9819      	ldr	r0, [sp, #100]	@ 0x64
90026578:	f7ff fc7b 	bl	90025e72 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
9002657c:	e759      	b.n	90026432 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9002657e:	bf00      	nop
90026580:	fffff800 	.word	0xfffff800
90026584:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90026586:	f3c5 3003 	ubfx	r0, r5, #12, #4
9002658a:	9c25      	ldr	r4, [sp, #148]	@ 0x94
9002658c:	f3c3 3203 	ubfx	r2, r3, #12, #4
90026590:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90026592:	1427      	asrs	r7, r4, #16
90026594:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90026596:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002659a:	142b      	asrs	r3, r5, #16
9002659c:	fb01 7303 	mla	r3, r1, r3, r7
900265a0:	18e7      	adds	r7, r4, r3
900265a2:	5ce3      	ldrb	r3, [r4, r3]
900265a4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
900265a8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
900265ac:	2a00      	cmp	r2, #0
900265ae:	f000 8127 	beq.w	90026800 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
900265b2:	f897 e001 	ldrb.w	lr, [r7, #1]
900265b6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
900265ba:	940d      	str	r4, [sp, #52]	@ 0x34
900265bc:	0e24      	lsrs	r4, r4, #24
900265be:	9414      	str	r4, [sp, #80]	@ 0x50
900265c0:	b170      	cbz	r0, 900265e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
900265c2:	eb07 0e01 	add.w	lr, r7, r1
900265c6:	5c79      	ldrb	r1, [r7, r1]
900265c8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900265cc:	9109      	str	r1, [sp, #36]	@ 0x24
900265ce:	0e09      	lsrs	r1, r1, #24
900265d0:	9111      	str	r1, [sp, #68]	@ 0x44
900265d2:	f89e 1001 	ldrb.w	r1, [lr, #1]
900265d6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900265da:	910e      	str	r1, [sp, #56]	@ 0x38
900265dc:	0e09      	lsrs	r1, r1, #24
900265de:	9115      	str	r1, [sp, #84]	@ 0x54
900265e0:	b292      	uxth	r2, r2
900265e2:	9c11      	ldr	r4, [sp, #68]	@ 0x44
900265e4:	b280      	uxth	r0, r0
900265e6:	fb02 f800 	mul.w	r8, r2, r0
900265ea:	0112      	lsls	r2, r2, #4
900265ec:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
900265f0:	eba2 0e08 	sub.w	lr, r2, r8
900265f4:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
900265f8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
900265fa:	b280      	uxth	r0, r0
900265fc:	fa1f fe8e 	uxth.w	lr, lr
90026600:	1a09      	subs	r1, r1, r0
90026602:	fb0e f202 	mul.w	r2, lr, r2
90026606:	b289      	uxth	r1, r1
90026608:	fb01 220c 	mla	r2, r1, ip, r2
9002660c:	fb00 2204 	mla	r2, r0, r4, r2
90026610:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90026612:	fb08 2204 	mla	r2, r8, r4, r2
90026616:	f3c2 2207 	ubfx	r2, r2, #8, #8
9002661a:	2a00      	cmp	r2, #0
9002661c:	f000 80e5 	beq.w	900267ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
90026620:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90026624:	d019      	beq.n	9002665a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
90026626:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
9002662a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002662e:	fb0c fa0a 	mul.w	sl, ip, sl
90026632:	fb0c fc03 	mul.w	ip, ip, r3
90026636:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002663a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
9002663e:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90026642:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90026646:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9002664a:	4453      	add	r3, sl
9002664c:	0a3f      	lsrs	r7, r7, #8
9002664e:	0a1b      	lsrs	r3, r3, #8
90026650:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90026654:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90026658:	433b      	orrs	r3, r7
9002665a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9002665c:	2cff      	cmp	r4, #255	@ 0xff
9002665e:	d020      	beq.n	900266a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
90026660:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90026662:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90026666:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90026668:	4367      	muls	r7, r4
9002666a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
9002666c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026670:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90026674:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90026676:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002667a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002667e:	fb04 fa0a 	mul.w	sl, r4, sl
90026682:	44bc      	add	ip, r7
90026684:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90026688:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002668c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90026690:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026694:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026698:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002669c:	ea4c 040a 	orr.w	r4, ip, sl
900266a0:	940d      	str	r4, [sp, #52]	@ 0x34
900266a2:	9c11      	ldr	r4, [sp, #68]	@ 0x44
900266a4:	2cff      	cmp	r4, #255	@ 0xff
900266a6:	d020      	beq.n	900266ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
900266a8:	9c09      	ldr	r4, [sp, #36]	@ 0x24
900266aa:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
900266ae:	9c11      	ldr	r4, [sp, #68]	@ 0x44
900266b0:	4367      	muls	r7, r4
900266b2:	9c09      	ldr	r4, [sp, #36]	@ 0x24
900266b4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900266b8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900266bc:	9c11      	ldr	r4, [sp, #68]	@ 0x44
900266be:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900266c2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900266c6:	fb04 fa0a 	mul.w	sl, r4, sl
900266ca:	44bc      	add	ip, r7
900266cc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900266d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900266d4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900266d8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900266dc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900266e0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900266e4:	ea4c 040a 	orr.w	r4, ip, sl
900266e8:	9409      	str	r4, [sp, #36]	@ 0x24
900266ea:	9c15      	ldr	r4, [sp, #84]	@ 0x54
900266ec:	2cff      	cmp	r4, #255	@ 0xff
900266ee:	d020      	beq.n	90026732 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
900266f0:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900266f2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
900266f6:	9c15      	ldr	r4, [sp, #84]	@ 0x54
900266f8:	4367      	muls	r7, r4
900266fa:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900266fc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026700:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90026704:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90026706:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002670a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002670e:	fb04 fa0a 	mul.w	sl, r4, sl
90026712:	44bc      	add	ip, r7
90026714:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90026718:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002671c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90026720:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026724:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026728:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002672c:	ea4c 040a 	orr.w	r4, ip, sl
90026730:	940e      	str	r4, [sp, #56]	@ 0x38
90026732:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90026734:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90026738:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002673c:	43d2      	mvns	r2, r2
9002673e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90026742:	9c09      	ldr	r4, [sp, #36]	@ 0x24
90026744:	b2d2      	uxtb	r2, r2
90026746:	fb0e f707 	mul.w	r7, lr, r7
9002674a:	fb01 770c 	mla	r7, r1, ip, r7
9002674e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90026752:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90026754:	fb00 770c 	mla	r7, r0, ip, r7
90026758:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
9002675c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
9002675e:	fb08 770c 	mla	r7, r8, ip, r7
90026762:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
90026766:	fb0e fe0c 	mul.w	lr, lr, ip
9002676a:	0a3f      	lsrs	r7, r7, #8
9002676c:	fb01 e303 	mla	r3, r1, r3, lr
90026770:	9909      	ldr	r1, [sp, #36]	@ 0x24
90026772:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90026776:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
9002677a:	990e      	ldr	r1, [sp, #56]	@ 0x38
9002677c:	fb00 330a 	mla	r3, r0, sl, r3
90026780:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
90026784:	fb08 3c0c 	mla	ip, r8, ip, r3
90026788:	f8b9 3000 	ldrh.w	r3, [r9]
9002678c:	1218      	asrs	r0, r3, #8
9002678e:	10d9      	asrs	r1, r3, #3
90026790:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026794:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90026798:	00db      	lsls	r3, r3, #3
9002679a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9002679e:	4350      	muls	r0, r2
900267a0:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900267a4:	b2db      	uxtb	r3, r3
900267a6:	4351      	muls	r1, r2
900267a8:	ea47 070c 	orr.w	r7, r7, ip
900267ac:	4353      	muls	r3, r2
900267ae:	1c42      	adds	r2, r0, #1
900267b0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900267b4:	0c3a      	lsrs	r2, r7, #16
900267b6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900267ba:	4a18      	ldr	r2, [pc, #96]	@ (9002681c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
900267bc:	b2c0      	uxtb	r0, r0
900267be:	ea02 2000 	and.w	r0, r2, r0, lsl #8
900267c2:	1c4a      	adds	r2, r1, #1
900267c4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900267c8:	0a3a      	lsrs	r2, r7, #8
900267ca:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900267ce:	00c9      	lsls	r1, r1, #3
900267d0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900267d4:	4301      	orrs	r1, r0
900267d6:	1c58      	adds	r0, r3, #1
900267d8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
900267dc:	eb07 2710 	add.w	r7, r7, r0, lsr #8
900267e0:	f3c7 00c4 	ubfx	r0, r7, #3, #5
900267e4:	4308      	orrs	r0, r1
900267e6:	f8a9 0000 	strh.w	r0, [r9]
900267ea:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
900267ec:	f109 0902 	add.w	r9, r9, #2
900267f0:	9a25      	ldr	r2, [sp, #148]	@ 0x94
900267f2:	f10b 3bff 	add.w	fp, fp, #4294967295
900267f6:	441a      	add	r2, r3
900267f8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900267fa:	9225      	str	r2, [sp, #148]	@ 0x94
900267fc:	441d      	add	r5, r3
900267fe:	e64c      	b.n	9002649a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90026800:	2800      	cmp	r0, #0
90026802:	f43f aeed 	beq.w	900265e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90026806:	5c79      	ldrb	r1, [r7, r1]
90026808:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002680c:	9109      	str	r1, [sp, #36]	@ 0x24
9002680e:	0e09      	lsrs	r1, r1, #24
90026810:	9111      	str	r1, [sp, #68]	@ 0x44
90026812:	e6e5      	b.n	900265e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90026814:	b01b      	add	sp, #108	@ 0x6c
90026816:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002681a:	bf00      	nop
9002681c:	fffff800 	.word	0xfffff800

90026820 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
90026820:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026824:	b085      	sub	sp, #20
90026826:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
9002682a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
9002682e:	2800      	cmp	r0, #0
90026830:	9103      	str	r1, [sp, #12]
90026832:	fb00 7406 	mla	r4, r0, r6, r7
90026836:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
9002683a:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
9002683e:	eb02 0544 	add.w	r5, r2, r4, lsl #1
90026842:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
90026846:	eb03 0904 	add.w	r9, r3, r4
9002684a:	9501      	str	r5, [sp, #4]
9002684c:	f2c0 8150 	blt.w	90026af0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90026850:	4583      	cmp	fp, r0
90026852:	f340 814d 	ble.w	90026af0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90026856:	2f00      	cmp	r7, #0
90026858:	f2c0 8146 	blt.w	90026ae8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
9002685c:	42be      	cmp	r6, r7
9002685e:	f340 8143 	ble.w	90026ae8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90026862:	f813 c004 	ldrb.w	ip, [r3, r4]
90026866:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
9002686a:	f64f 041f 	movw	r4, #63519	@ 0xf81f
9002686e:	ea4f 02ec 	mov.w	r2, ip, asr #3
90026872:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
90026876:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002687a:	4355      	muls	r5, r2
9002687c:	fb0c f203 	mul.w	r2, ip, r3
90026880:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90026884:	f605 0501 	addw	r5, r5, #2049	@ 0x801
90026888:	441d      	add	r5, r3
9002688a:	f102 0320 	add.w	r3, r2, #32
9002688e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90026892:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90026896:	0a1b      	lsrs	r3, r3, #8
90026898:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002689c:	431c      	orrs	r4, r3
9002689e:	1c7b      	adds	r3, r7, #1
900268a0:	f100 812b 	bmi.w	90026afa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
900268a4:	429e      	cmp	r6, r3
900268a6:	f340 8128 	ble.w	90026afa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
900268aa:	2900      	cmp	r1, #0
900268ac:	f000 8128 	beq.w	90026b00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
900268b0:	9a01      	ldr	r2, [sp, #4]
900268b2:	f899 3001 	ldrb.w	r3, [r9, #1]
900268b6:	8855      	ldrh	r5, [r2, #2]
900268b8:	ea4f 08e3 	mov.w	r8, r3, asr #3
900268bc:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
900268c0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900268c4:	fb08 f802 	mul.w	r8, r8, r2
900268c8:	f64f 021f 	movw	r2, #63519	@ 0xf81f
900268cc:	435d      	muls	r5, r3
900268ce:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
900268d2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900268d6:	44d0      	add	r8, sl
900268d8:	f105 0a20 	add.w	sl, r5, #32
900268dc:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
900268e0:	ea02 1258 	and.w	r2, r2, r8, lsr #5
900268e4:	0a2d      	lsrs	r5, r5, #8
900268e6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900268ea:	432a      	orrs	r2, r5
900268ec:	3001      	adds	r0, #1
900268ee:	f100 810d 	bmi.w	90026b0c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
900268f2:	4583      	cmp	fp, r0
900268f4:	f340 810a 	ble.w	90026b0c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
900268f8:	f1be 0f00 	cmp.w	lr, #0
900268fc:	f000 810b 	beq.w	90026b16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
90026900:	2f00      	cmp	r7, #0
90026902:	f2c0 8100 	blt.w	90026b06 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90026906:	42be      	cmp	r6, r7
90026908:	f340 80fd 	ble.w	90026b06 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
9002690c:	9801      	ldr	r0, [sp, #4]
9002690e:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
90026912:	f819 5006 	ldrb.w	r5, [r9, r6]
90026916:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
9002691a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9002691e:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
90026922:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90026926:	fb0a fa00 	mul.w	sl, sl, r0
9002692a:	fb05 f808 	mul.w	r8, r5, r8
9002692e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90026932:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
90026936:	4482      	add	sl, r0
90026938:	f108 0020 	add.w	r0, r8, #32
9002693c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90026940:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90026944:	0a00      	lsrs	r0, r0, #8
90026946:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002694a:	ea4b 0b00 	orr.w	fp, fp, r0
9002694e:	3701      	adds	r7, #1
90026950:	f100 80e6 	bmi.w	90026b20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90026954:	42be      	cmp	r6, r7
90026956:	f340 80e3 	ble.w	90026b20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
9002695a:	2900      	cmp	r1, #0
9002695c:	f000 80e3 	beq.w	90026b26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
90026960:	3601      	adds	r6, #1
90026962:	9801      	ldr	r0, [sp, #4]
90026964:	f819 7006 	ldrb.w	r7, [r9, r6]
90026968:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
9002696c:	ea4f 09e7 	mov.w	r9, r7, asr #3
90026970:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
90026974:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026978:	fb09 f906 	mul.w	r9, r9, r6
9002697c:	fb07 f800 	mul.w	r8, r7, r0
90026980:	f64f 001f 	movw	r0, #63519	@ 0xf81f
90026984:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90026988:	f609 0901 	addw	r9, r9, #2049	@ 0x801
9002698c:	44d1      	add	r9, sl
9002698e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
90026992:	f108 0020 	add.w	r0, r8, #32
90026996:	eb00 2018 	add.w	r0, r0, r8, lsr #8
9002699a:	0a00      	lsrs	r0, r0, #8
9002699c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900269a0:	4330      	orrs	r0, r6
900269a2:	b28e      	uxth	r6, r1
900269a4:	fa1f f98e 	uxth.w	r9, lr
900269a8:	ea4f 4a04 	mov.w	sl, r4, lsl #16
900269ac:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
900269b0:	fb06 f809 	mul.w	r8, r6, r9
900269b4:	0136      	lsls	r6, r6, #4
900269b6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900269ba:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
900269be:	9601      	str	r6, [sp, #4]
900269c0:	ea4a 0404 	orr.w	r4, sl, r4
900269c4:	ea4f 4a02 	mov.w	sl, r2, lsl #16
900269c8:	fa1f f689 	uxth.w	r6, r9
900269cc:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900269d0:	fb11 f90e 	smulbb	r9, r1, lr
900269d4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900269d8:	9602      	str	r6, [sp, #8]
900269da:	4626      	mov	r6, r4
900269dc:	f3c9 09c7 	ubfx	r9, r9, #3, #8
900269e0:	f1ce 0410 	rsb	r4, lr, #16
900269e4:	ea4a 0202 	orr.w	r2, sl, r2
900269e8:	ea4f 4a00 	mov.w	sl, r0, lsl #16
900269ec:	1a64      	subs	r4, r4, r1
900269ee:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
900269f2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900269f6:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900269fa:	434a      	muls	r2, r1
900269fc:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90026a00:	ea4a 0000 	orr.w	r0, sl, r0
90026a04:	9903      	ldr	r1, [sp, #12]
90026a06:	fb04 2406 	mla	r4, r4, r6, r2
90026a0a:	9e02      	ldr	r6, [sp, #8]
90026a0c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90026a10:	fb09 4200 	mla	r2, r9, r0, r4
90026a14:	ea4f 440b 	mov.w	r4, fp, lsl #16
90026a18:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90026a1c:	8808      	ldrh	r0, [r1, #0]
90026a1e:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90026a22:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
90026a26:	ea44 0b0b 	orr.w	fp, r4, fp
90026a2a:	9c01      	ldr	r4, [sp, #4]
90026a2c:	b289      	uxth	r1, r1
90026a2e:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
90026a32:	fb0e 2e0b 	mla	lr, lr, fp, r2
90026a36:	1ba4      	subs	r4, r4, r6
90026a38:	9e01      	ldr	r6, [sp, #4]
90026a3a:	ea4f 525e 	mov.w	r2, lr, lsr #21
90026a3e:	eba6 0608 	sub.w	r6, r6, r8
90026a42:	b2a4      	uxth	r4, r4
90026a44:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90026a48:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026a4c:	b2b6      	uxth	r6, r6
90026a4e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90026a52:	4373      	muls	r3, r6
90026a54:	ea42 0e0e 	orr.w	lr, r2, lr
90026a58:	fb0c 3304 	mla	r3, ip, r4, r3
90026a5c:	9c02      	ldr	r4, [sp, #8]
90026a5e:	fa1f f28e 	uxth.w	r2, lr
90026a62:	fb04 3505 	mla	r5, r4, r5, r3
90026a66:	10d4      	asrs	r4, r2, #3
90026a68:	fb08 5707 	mla	r7, r8, r7, r5
90026a6c:	1215      	asrs	r5, r2, #8
90026a6e:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
90026a72:	00d2      	lsls	r2, r2, #3
90026a74:	f3c7 2707 	ubfx	r7, r7, #8, #8
90026a78:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90026a7c:	b2d2      	uxtb	r2, r2
90026a7e:	434f      	muls	r7, r1
90026a80:	1c7b      	adds	r3, r7, #1
90026a82:	eb03 2717 	add.w	r7, r3, r7, lsr #8
90026a86:	1203      	asrs	r3, r0, #8
90026a88:	ea6f 2717 	mvn.w	r7, r7, lsr #8
90026a8c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90026a90:	b2ff      	uxtb	r7, r7
90026a92:	fb13 f307 	smulbb	r3, r3, r7
90026a96:	fb05 3501 	mla	r5, r5, r1, r3
90026a9a:	10c3      	asrs	r3, r0, #3
90026a9c:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90026aa0:	b2ad      	uxth	r5, r5
90026aa2:	fb13 f307 	smulbb	r3, r3, r7
90026aa6:	fb04 3401 	mla	r4, r4, r1, r3
90026aaa:	00c3      	lsls	r3, r0, #3
90026aac:	b2db      	uxtb	r3, r3
90026aae:	b2a4      	uxth	r4, r4
90026ab0:	fb13 f307 	smulbb	r3, r3, r7
90026ab4:	fb02 3101 	mla	r1, r2, r1, r3
90026ab8:	1c6b      	adds	r3, r5, #1
90026aba:	1c62      	adds	r2, r4, #1
90026abc:	b289      	uxth	r1, r1
90026abe:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90026ac2:	1c4b      	adds	r3, r1, #1
90026ac4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90026ac8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90026acc:	9a03      	ldr	r2, [sp, #12]
90026ace:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90026ad2:	0964      	lsrs	r4, r4, #5
90026ad4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90026ad8:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90026adc:	432b      	orrs	r3, r5
90026ade:	4323      	orrs	r3, r4
90026ae0:	8013      	strh	r3, [r2, #0]
90026ae2:	b005      	add	sp, #20
90026ae4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026ae8:	f04f 0c00 	mov.w	ip, #0
90026aec:	4664      	mov	r4, ip
90026aee:	e6d6      	b.n	9002689e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
90026af0:	2300      	movs	r3, #0
90026af2:	469c      	mov	ip, r3
90026af4:	461a      	mov	r2, r3
90026af6:	461c      	mov	r4, r3
90026af8:	e6f8      	b.n	900268ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90026afa:	2300      	movs	r3, #0
90026afc:	461a      	mov	r2, r3
90026afe:	e6f5      	b.n	900268ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90026b00:	460b      	mov	r3, r1
90026b02:	460a      	mov	r2, r1
90026b04:	e6f2      	b.n	900268ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90026b06:	2500      	movs	r5, #0
90026b08:	46ab      	mov	fp, r5
90026b0a:	e720      	b.n	9002694e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
90026b0c:	2700      	movs	r7, #0
90026b0e:	463d      	mov	r5, r7
90026b10:	4638      	mov	r0, r7
90026b12:	46bb      	mov	fp, r7
90026b14:	e745      	b.n	900269a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90026b16:	4677      	mov	r7, lr
90026b18:	4675      	mov	r5, lr
90026b1a:	4670      	mov	r0, lr
90026b1c:	46f3      	mov	fp, lr
90026b1e:	e740      	b.n	900269a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90026b20:	2700      	movs	r7, #0
90026b22:	4638      	mov	r0, r7
90026b24:	e73d      	b.n	900269a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90026b26:	460f      	mov	r7, r1
90026b28:	4608      	mov	r0, r1
90026b2a:	e73a      	b.n	900269a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

90026b2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90026b2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026b30:	b097      	sub	sp, #92	@ 0x5c
90026b32:	9214      	str	r2, [sp, #80]	@ 0x50
90026b34:	9308      	str	r3, [sp, #32]
90026b36:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90026b38:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
90026b3c:	9015      	str	r0, [sp, #84]	@ 0x54
90026b3e:	9312      	str	r3, [sp, #72]	@ 0x48
90026b40:	6850      	ldr	r0, [r2, #4]
90026b42:	9111      	str	r1, [sp, #68]	@ 0x44
90026b44:	6812      	ldr	r2, [r2, #0]
90026b46:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
90026b4a:	fb00 1303 	mla	r3, r0, r3, r1
90026b4e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90026b52:	9309      	str	r3, [sp, #36]	@ 0x24
90026b54:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90026b56:	681b      	ldr	r3, [r3, #0]
90026b58:	930b      	str	r3, [sp, #44]	@ 0x2c
90026b5a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90026b5c:	685b      	ldr	r3, [r3, #4]
90026b5e:	930c      	str	r3, [sp, #48]	@ 0x30
90026b60:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90026b64:	930a      	str	r3, [sp, #40]	@ 0x28
90026b66:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90026b68:	2b00      	cmp	r3, #0
90026b6a:	dc03      	bgt.n	90026b74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90026b6c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
90026b6e:	2b00      	cmp	r3, #0
90026b70:	f340 83cd 	ble.w	9002730e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90026b74:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90026b76:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026b7a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90026b7e:	1e48      	subs	r0, r1, #1
90026b80:	1e55      	subs	r5, r2, #1
90026b82:	9b08      	ldr	r3, [sp, #32]
90026b84:	2b00      	cmp	r3, #0
90026b86:	f340 81a5 	ble.w	90026ed4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
90026b8a:	9e21      	ldr	r6, [sp, #132]	@ 0x84
90026b8c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90026b8e:	1436      	asrs	r6, r6, #16
90026b90:	ea4f 4323 	mov.w	r3, r3, asr #16
90026b94:	d406      	bmi.n	90026ba4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90026b96:	4286      	cmp	r6, r0
90026b98:	da04      	bge.n	90026ba4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90026b9a:	2b00      	cmp	r3, #0
90026b9c:	db02      	blt.n	90026ba4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90026b9e:	42ab      	cmp	r3, r5
90026ba0:	f2c0 8199 	blt.w	90026ed6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90026ba4:	3601      	adds	r6, #1
90026ba6:	f100 8186 	bmi.w	90026eb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90026baa:	42b1      	cmp	r1, r6
90026bac:	f2c0 8183 	blt.w	90026eb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90026bb0:	3301      	adds	r3, #1
90026bb2:	f100 8180 	bmi.w	90026eb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90026bb6:	429a      	cmp	r2, r3
90026bb8:	f2c0 817d 	blt.w	90026eb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90026bbc:	9b08      	ldr	r3, [sp, #32]
90026bbe:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90026bc2:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90026bc4:	9313      	str	r3, [sp, #76]	@ 0x4c
90026bc6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90026bc8:	2b00      	cmp	r3, #0
90026bca:	f340 81a6 	ble.w	90026f1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90026bce:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90026bd0:	9d21      	ldr	r5, [sp, #132]	@ 0x84
90026bd2:	1418      	asrs	r0, r3, #16
90026bd4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90026bd6:	142d      	asrs	r5, r5, #16
90026bd8:	f3c3 3103 	ubfx	r1, r3, #12, #4
90026bdc:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90026bde:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90026be2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90026be4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90026be8:	f100 81fa 	bmi.w	90026fe0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90026bec:	f102 3eff 	add.w	lr, r2, #4294967295
90026bf0:	4575      	cmp	r5, lr
90026bf2:	f280 81f5 	bge.w	90026fe0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90026bf6:	2800      	cmp	r0, #0
90026bf8:	f2c0 81f2 	blt.w	90026fe0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90026bfc:	f103 3eff 	add.w	lr, r3, #4294967295
90026c00:	4570      	cmp	r0, lr
90026c02:	f280 81ed 	bge.w	90026fe0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90026c06:	b212      	sxth	r2, r2
90026c08:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90026c0a:	fa1f fe81 	uxth.w	lr, r1
90026c0e:	fb00 5002 	mla	r0, r0, r2, r5
90026c12:	ea4f 150e 	mov.w	r5, lr, lsl #4
90026c16:	eb03 0a00 	add.w	sl, r3, r0
90026c1a:	f813 9000 	ldrb.w	r9, [r3, r0]
90026c1e:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
90026c22:	f89a 8001 	ldrb.w	r8, [sl, #1]
90026c26:	b29b      	uxth	r3, r3
90026c28:	f1bc 0f00 	cmp.w	ip, #0
90026c2c:	f000 81bb 	beq.w	90026fa6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
90026c30:	f81a 4002 	ldrb.w	r4, [sl, r2]
90026c34:	eb0a 0b02 	add.w	fp, sl, r2
90026c38:	fa1f fa8c 	uxth.w	sl, ip
90026c3c:	940d      	str	r4, [sp, #52]	@ 0x34
90026c3e:	fb0a fe0e 	mul.w	lr, sl, lr
90026c42:	f89b 4001 	ldrb.w	r4, [fp, #1]
90026c46:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90026c4a:	eba5 050e 	sub.w	r5, r5, lr
90026c4e:	940e      	str	r4, [sp, #56]	@ 0x38
90026c50:	fa1f fa8a 	uxth.w	sl, sl
90026c54:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90026c56:	b2ad      	uxth	r5, r5
90026c58:	eba3 030a 	sub.w	r3, r3, sl
90026c5c:	fb08 f505 	mul.w	r5, r8, r5
90026c60:	b29b      	uxth	r3, r3
90026c62:	fb09 5303 	mla	r3, r9, r3, r5
90026c66:	fb0a 3304 	mla	r3, sl, r4, r3
90026c6a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90026c6c:	fb0e 3304 	mla	r3, lr, r4, r3
90026c70:	f3c3 2307 	ubfx	r3, r3, #8, #8
90026c74:	2b00      	cmp	r3, #0
90026c76:	f000 8111 	beq.w	90026e9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90026c7a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90026c7c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90026c80:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90026c84:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90026c88:	f000 8192 	beq.w	90026fb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
90026c8c:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90026c90:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90026c94:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026c98:	fb0a fe0e 	mul.w	lr, sl, lr
90026c9c:	fb09 f000 	mul.w	r0, r9, r0
90026ca0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90026ca4:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90026ca8:	f100 0b20 	add.w	fp, r0, #32
90026cac:	44ce      	add	lr, r9
90026cae:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
90026cb2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90026cb6:	ea4f 2919 	mov.w	r9, r9, lsr #8
90026cba:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90026cbe:	ea4e 0909 	orr.w	r9, lr, r9
90026cc2:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90026cc6:	8868      	ldrh	r0, [r5, #2]
90026cc8:	d019      	beq.n	90026cfe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
90026cca:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90026cce:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90026cd2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026cd6:	fb0a fe0e 	mul.w	lr, sl, lr
90026cda:	fb08 f800 	mul.w	r8, r8, r0
90026cde:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90026ce2:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90026ce6:	f108 0b20 	add.w	fp, r8, #32
90026cea:	4486      	add	lr, r0
90026cec:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90026cf0:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90026cf4:	0a00      	lsrs	r0, r0, #8
90026cf6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026cfa:	ea4e 0000 	orr.w	r0, lr, r0
90026cfe:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90026d02:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90026d06:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90026d0a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90026d0e:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90026d12:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90026d16:	ea4e 0909 	orr.w	r9, lr, r9
90026d1a:	ea4a 0000 	orr.w	r0, sl, r0
90026d1e:	f1bc 0f00 	cmp.w	ip, #0
90026d22:	f000 8147 	beq.w	90026fb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
90026d26:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
90026d2a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90026d2c:	3a01      	subs	r2, #1
90026d2e:	2cff      	cmp	r4, #255	@ 0xff
90026d30:	ea4f 0242 	mov.w	r2, r2, lsl #1
90026d34:	f102 0202 	add.w	r2, r2, #2
90026d38:	eb05 0e02 	add.w	lr, r5, r2
90026d3c:	5aaa      	ldrh	r2, [r5, r2]
90026d3e:	d018      	beq.n	90026d72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
90026d40:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
90026d44:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026d48:	ea4f 08e4 	mov.w	r8, r4, asr #3
90026d4c:	fb04 fa02 	mul.w	sl, r4, r2
90026d50:	fb08 f805 	mul.w	r8, r8, r5
90026d54:	f10a 0520 	add.w	r5, sl, #32
90026d58:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90026d5c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90026d60:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90026d64:	4442      	add	r2, r8
90026d66:	0a2d      	lsrs	r5, r5, #8
90026d68:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90026d6c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90026d70:	432a      	orrs	r2, r5
90026d72:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90026d74:	f8be 5002 	ldrh.w	r5, [lr, #2]
90026d78:	2cff      	cmp	r4, #255	@ 0xff
90026d7a:	d01a      	beq.n	90026db2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
90026d7c:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
90026d80:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90026d84:	ea4f 08e4 	mov.w	r8, r4, asr #3
90026d88:	fb04 fa05 	mul.w	sl, r4, r5
90026d8c:	fb08 f80e 	mul.w	r8, r8, lr
90026d90:	f10a 0e20 	add.w	lr, sl, #32
90026d94:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90026d98:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90026d9c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
90026da0:	4445      	add	r5, r8
90026da2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026da6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90026daa:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
90026dae:	ea45 050e 	orr.w	r5, r5, lr
90026db2:	fb1c fe01 	smulbb	lr, ip, r1
90026db6:	f1cc 0810 	rsb	r8, ip, #16
90026dba:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90026dbe:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90026dc2:	ea4f 0eee 	mov.w	lr, lr, asr #3
90026dc6:	eba8 0801 	sub.w	r8, r8, r1
90026dca:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90026dce:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90026dd2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90026dd6:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90026dda:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90026dde:	ea4a 0202 	orr.w	r2, sl, r2
90026de2:	4341      	muls	r1, r0
90026de4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90026de8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90026dec:	fb09 1108 	mla	r1, r9, r8, r1
90026df0:	ea4b 0505 	orr.w	r5, fp, r5
90026df4:	fb0c 1102 	mla	r1, ip, r2, r1
90026df8:	fb0e 1e05 	mla	lr, lr, r5, r1
90026dfc:	ea4f 525e 	mov.w	r2, lr, lsr #21
90026e00:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90026e04:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026e08:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90026e0c:	ea42 0e0e 	orr.w	lr, r2, lr
90026e10:	fa1f f28e 	uxth.w	r2, lr
90026e14:	2bff      	cmp	r3, #255	@ 0xff
90026e16:	d103      	bne.n	90026e20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90026e18:	9912      	ldr	r1, [sp, #72]	@ 0x48
90026e1a:	29ff      	cmp	r1, #255	@ 0xff
90026e1c:	f000 80de 	beq.w	90026fdc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
90026e20:	990a      	ldr	r1, [sp, #40]	@ 0x28
90026e22:	1215      	asrs	r5, r2, #8
90026e24:	8838      	ldrh	r0, [r7, #0]
90026e26:	434b      	muls	r3, r1
90026e28:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90026e2c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90026e2e:	f103 0c01 	add.w	ip, r3, #1
90026e32:	eb0c 2323 	add.w	r3, ip, r3, asr #8
90026e36:	ea6f 2323 	mvn.w	r3, r3, asr #8
90026e3a:	fa5f fc83 	uxtb.w	ip, r3
90026e3e:	1203      	asrs	r3, r0, #8
90026e40:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90026e44:	fb13 f30c 	smulbb	r3, r3, ip
90026e48:	fb05 3501 	mla	r5, r5, r1, r3
90026e4c:	10c3      	asrs	r3, r0, #3
90026e4e:	10d1      	asrs	r1, r2, #3
90026e50:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90026e54:	00d2      	lsls	r2, r2, #3
90026e56:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90026e5a:	b2ad      	uxth	r5, r5
90026e5c:	fb13 f30c 	smulbb	r3, r3, ip
90026e60:	b2d2      	uxtb	r2, r2
90026e62:	fb01 3104 	mla	r1, r1, r4, r3
90026e66:	00c3      	lsls	r3, r0, #3
90026e68:	b2db      	uxtb	r3, r3
90026e6a:	b289      	uxth	r1, r1
90026e6c:	fb13 f30c 	smulbb	r3, r3, ip
90026e70:	fb02 3304 	mla	r3, r2, r4, r3
90026e74:	b29a      	uxth	r2, r3
90026e76:	1c6b      	adds	r3, r5, #1
90026e78:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90026e7c:	1c53      	adds	r3, r2, #1
90026e7e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90026e82:	1c4a      	adds	r2, r1, #1
90026e84:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90026e88:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90026e8c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90026e90:	0949      	lsrs	r1, r1, #5
90026e92:	432b      	orrs	r3, r5
90026e94:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90026e98:	430b      	orrs	r3, r1
90026e9a:	803b      	strh	r3, [r7, #0]
90026e9c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90026e9e:	3702      	adds	r7, #2
90026ea0:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
90026ea2:	4413      	add	r3, r2
90026ea4:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90026ea6:	9321      	str	r3, [sp, #132]	@ 0x84
90026ea8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026eaa:	441a      	add	r2, r3
90026eac:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90026eae:	3b01      	subs	r3, #1
90026eb0:	9222      	str	r2, [sp, #136]	@ 0x88
90026eb2:	9313      	str	r3, [sp, #76]	@ 0x4c
90026eb4:	e687      	b.n	90026bc6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90026eb6:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90026eb8:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
90026eba:	9c22      	ldr	r4, [sp, #136]	@ 0x88
90026ebc:	4433      	add	r3, r6
90026ebe:	9321      	str	r3, [sp, #132]	@ 0x84
90026ec0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026ec2:	441c      	add	r4, r3
90026ec4:	9b08      	ldr	r3, [sp, #32]
90026ec6:	3b01      	subs	r3, #1
90026ec8:	9422      	str	r4, [sp, #136]	@ 0x88
90026eca:	9308      	str	r3, [sp, #32]
90026ecc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90026ece:	3302      	adds	r3, #2
90026ed0:	9309      	str	r3, [sp, #36]	@ 0x24
90026ed2:	e656      	b.n	90026b82 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
90026ed4:	d028      	beq.n	90026f28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
90026ed6:	9b08      	ldr	r3, [sp, #32]
90026ed8:	9823      	ldr	r0, [sp, #140]	@ 0x8c
90026eda:	3b01      	subs	r3, #1
90026edc:	9d21      	ldr	r5, [sp, #132]	@ 0x84
90026ede:	fb00 5003 	mla	r0, r0, r3, r5
90026ee2:	1400      	asrs	r0, r0, #16
90026ee4:	f53f ae6a 	bmi.w	90026bbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90026ee8:	3901      	subs	r1, #1
90026eea:	4288      	cmp	r0, r1
90026eec:	f6bf ae66 	bge.w	90026bbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90026ef0:	9924      	ldr	r1, [sp, #144]	@ 0x90
90026ef2:	9822      	ldr	r0, [sp, #136]	@ 0x88
90026ef4:	fb01 0303 	mla	r3, r1, r3, r0
90026ef8:	141b      	asrs	r3, r3, #16
90026efa:	f53f ae5f 	bmi.w	90026bbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90026efe:	3a01      	subs	r2, #1
90026f00:	4293      	cmp	r3, r2
90026f02:	f6bf ae5b 	bge.w	90026bbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90026f06:	9b08      	ldr	r3, [sp, #32]
90026f08:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90026f0c:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
90026f10:	9313      	str	r3, [sp, #76]	@ 0x4c
90026f12:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90026f14:	2b00      	cmp	r3, #0
90026f16:	f300 8082 	bgt.w	9002701e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
90026f1a:	9b08      	ldr	r3, [sp, #32]
90026f1c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90026f20:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90026f22:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90026f26:	9309      	str	r3, [sp, #36]	@ 0x24
90026f28:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90026f2a:	2b00      	cmp	r3, #0
90026f2c:	f340 81ef 	ble.w	9002730e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90026f30:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90026f34:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90026f36:	ee30 0a04 	vadd.f32	s0, s0, s8
90026f3a:	ee70 0aa4 	vadd.f32	s1, s1, s9
90026f3e:	eef0 6a62 	vmov.f32	s13, s5
90026f42:	eec7 7a00 	vdiv.f32	s15, s14, s0
90026f46:	ee31 1a05 	vadd.f32	s2, s2, s10
90026f4a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026f4e:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
90026f52:	eef0 6a43 	vmov.f32	s13, s6
90026f56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026f5a:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
90026f5e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90026f62:	ee61 7a27 	vmul.f32	s15, s2, s15
90026f66:	ee77 2a62 	vsub.f32	s5, s14, s5
90026f6a:	ee37 3ac3 	vsub.f32	s6, s15, s6
90026f6e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90026f72:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90026f76:	ee12 2a90 	vmov	r2, s5
90026f7a:	eef0 2a47 	vmov.f32	s5, s14
90026f7e:	fb92 f3f3 	sdiv	r3, r2, r3
90026f82:	ee13 2a10 	vmov	r2, s6
90026f86:	9323      	str	r3, [sp, #140]	@ 0x8c
90026f88:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90026f8a:	eeb0 3a67 	vmov.f32	s6, s15
90026f8e:	fb92 f3f3 	sdiv	r3, r2, r3
90026f92:	9324      	str	r3, [sp, #144]	@ 0x90
90026f94:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90026f96:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90026f98:	3b01      	subs	r3, #1
90026f9a:	9311      	str	r3, [sp, #68]	@ 0x44
90026f9c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90026f9e:	bf08      	it	eq
90026fa0:	4613      	moveq	r3, r2
90026fa2:	9308      	str	r3, [sp, #32]
90026fa4:	e5df      	b.n	90026b66 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90026fa6:	fb08 f505 	mul.w	r5, r8, r5
90026faa:	fb09 5303 	mla	r3, r9, r3, r5
90026fae:	e65f      	b.n	90026c70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
90026fb0:	4681      	mov	r9, r0
90026fb2:	e686      	b.n	90026cc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90026fb4:	f1c1 0210 	rsb	r2, r1, #16
90026fb8:	4341      	muls	r1, r0
90026fba:	fb09 1902 	mla	r9, r9, r2, r1
90026fbe:	ea4f 0949 	mov.w	r9, r9, lsl #1
90026fc2:	ea4f 5259 	mov.w	r2, r9, lsr #21
90026fc6:	ea4f 1959 	mov.w	r9, r9, lsr #5
90026fca:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026fce:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90026fd2:	ea42 0909 	orr.w	r9, r2, r9
90026fd6:	fa1f f289 	uxth.w	r2, r9
90026fda:	e71b      	b.n	90026e14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90026fdc:	803a      	strh	r2, [r7, #0]
90026fde:	e75d      	b.n	90026e9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90026fe0:	f115 0e01 	adds.w	lr, r5, #1
90026fe4:	f53f af5a 	bmi.w	90026e9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90026fe8:	4572      	cmp	r2, lr
90026fea:	f6ff af57 	blt.w	90026e9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90026fee:	f110 0e01 	adds.w	lr, r0, #1
90026ff2:	f53f af53 	bmi.w	90026e9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90026ff6:	4573      	cmp	r3, lr
90026ff8:	f6ff af50 	blt.w	90026e9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90026ffc:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90026ffe:	b21b      	sxth	r3, r3
90027000:	b212      	sxth	r2, r2
90027002:	9502      	str	r5, [sp, #8]
90027004:	9301      	str	r3, [sp, #4]
90027006:	9200      	str	r2, [sp, #0]
90027008:	e9cd 0103 	strd	r0, r1, [sp, #12]
9002700c:	e9cd c405 	strd	ip, r4, [sp, #20]
90027010:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
90027014:	4639      	mov	r1, r7
90027016:	9815      	ldr	r0, [sp, #84]	@ 0x54
90027018:	f7ff fc02 	bl	90026820 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
9002701c:	e73e      	b.n	90026e9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002701e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90027020:	f3c3 3203 	ubfx	r2, r3, #12, #4
90027024:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90027026:	f3c3 3503 	ubfx	r5, r3, #12, #4
9002702a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002702c:	fa1f fc82 	uxth.w	ip, r2
90027030:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90027034:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90027036:	ea4f 100c 	mov.w	r0, ip, lsl #4
9002703a:	141f      	asrs	r7, r3, #16
9002703c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
9002703e:	141b      	asrs	r3, r3, #16
90027040:	fb01 3707 	mla	r7, r1, r7, r3
90027044:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90027046:	eb03 0a07 	add.w	sl, r3, r7
9002704a:	f813 9007 	ldrb.w	r9, [r3, r7]
9002704e:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
90027052:	f89a 8001 	ldrb.w	r8, [sl, #1]
90027056:	b29b      	uxth	r3, r3
90027058:	2d00      	cmp	r5, #0
9002705a:	f000 813d 	beq.w	900272d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
9002705e:	f81a 4001 	ldrb.w	r4, [sl, r1]
90027062:	eb0a 0b01 	add.w	fp, sl, r1
90027066:	fa1f fa85 	uxth.w	sl, r5
9002706a:	940f      	str	r4, [sp, #60]	@ 0x3c
9002706c:	fb0a fc0c 	mul.w	ip, sl, ip
90027070:	f89b 4001 	ldrb.w	r4, [fp, #1]
90027074:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90027078:	eba0 000c 	sub.w	r0, r0, ip
9002707c:	9410      	str	r4, [sp, #64]	@ 0x40
9002707e:	fa1f fa8a 	uxth.w	sl, sl
90027082:	b280      	uxth	r0, r0
90027084:	eba3 030a 	sub.w	r3, r3, sl
90027088:	fb08 f000 	mul.w	r0, r8, r0
9002708c:	b29b      	uxth	r3, r3
9002708e:	fb09 0303 	mla	r3, r9, r3, r0
90027092:	980f      	ldr	r0, [sp, #60]	@ 0x3c
90027094:	fb0a 3300 	mla	r3, sl, r0, r3
90027098:	fb0c 3304 	mla	r3, ip, r4, r3
9002709c:	f3c3 2307 	ubfx	r3, r3, #8, #8
900270a0:	2b00      	cmp	r3, #0
900270a2:	f000 810b 	beq.w	900272bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
900270a6:	980b      	ldr	r0, [sp, #44]	@ 0x2c
900270a8:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
900270ac:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900270ae:	eb00 0047 	add.w	r0, r0, r7, lsl #1
900270b2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
900270b6:	f000 8114 	beq.w	900272e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
900270ba:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
900270be:	ea4f 0ae9 	mov.w	sl, r9, asr #3
900270c2:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900270c6:	fb0a fc0c 	mul.w	ip, sl, ip
900270ca:	fb09 f707 	mul.w	r7, r9, r7
900270ce:	ea06 195c 	and.w	r9, r6, ip, lsr #5
900270d2:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
900270d6:	f107 0b20 	add.w	fp, r7, #32
900270da:	44cc      	add	ip, r9
900270dc:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
900270e0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
900270e4:	ea4f 2919 	mov.w	r9, r9, lsr #8
900270e8:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
900270ec:	ea4c 0909 	orr.w	r9, ip, r9
900270f0:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
900270f4:	8847      	ldrh	r7, [r0, #2]
900270f6:	d019      	beq.n	9002712c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
900270f8:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
900270fc:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90027100:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90027104:	fb0a fc0c 	mul.w	ip, sl, ip
90027108:	fb08 f807 	mul.w	r8, r8, r7
9002710c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90027110:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90027114:	f108 0b20 	add.w	fp, r8, #32
90027118:	44bc      	add	ip, r7
9002711a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
9002711e:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90027122:	0a3f      	lsrs	r7, r7, #8
90027124:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90027128:	ea4c 0707 	orr.w	r7, ip, r7
9002712c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90027130:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90027134:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90027138:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
9002713c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90027140:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90027144:	ea4c 0909 	orr.w	r9, ip, r9
90027148:	ea4a 0707 	orr.w	r7, sl, r7
9002714c:	2d00      	cmp	r5, #0
9002714e:	f000 80ca 	beq.w	900272e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
90027152:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
90027156:	3901      	subs	r1, #1
90027158:	0049      	lsls	r1, r1, #1
9002715a:	3102      	adds	r1, #2
9002715c:	eb00 0c01 	add.w	ip, r0, r1
90027160:	5a41      	ldrh	r1, [r0, r1]
90027162:	980f      	ldr	r0, [sp, #60]	@ 0x3c
90027164:	28ff      	cmp	r0, #255	@ 0xff
90027166:	d019      	beq.n	9002719c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
90027168:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
9002716c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
9002716e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90027172:	ea4f 08e4 	mov.w	r8, r4, asr #3
90027176:	fb04 fa01 	mul.w	sl, r4, r1
9002717a:	fb08 f800 	mul.w	r8, r8, r0
9002717e:	f10a 0020 	add.w	r0, sl, #32
90027182:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90027186:	f608 0801 	addw	r8, r8, #2049	@ 0x801
9002718a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
9002718e:	4441      	add	r1, r8
90027190:	0a00      	lsrs	r0, r0, #8
90027192:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90027196:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002719a:	4301      	orrs	r1, r0
9002719c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
9002719e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
900271a2:	2cff      	cmp	r4, #255	@ 0xff
900271a4:	d01a      	beq.n	900271dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
900271a6:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
900271aa:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900271ae:	ea4f 08e4 	mov.w	r8, r4, asr #3
900271b2:	fb04 fa00 	mul.w	sl, r4, r0
900271b6:	fb08 f80c 	mul.w	r8, r8, ip
900271ba:	f10a 0c20 	add.w	ip, sl, #32
900271be:	ea06 1058 	and.w	r0, r6, r8, lsr #5
900271c2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900271c6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
900271ca:	4440      	add	r0, r8
900271cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900271d0:	ea06 1050 	and.w	r0, r6, r0, lsr #5
900271d4:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
900271d8:	ea40 000c 	orr.w	r0, r0, ip
900271dc:	fb15 fc02 	smulbb	ip, r5, r2
900271e0:	f1c5 0810 	rsb	r8, r5, #16
900271e4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
900271e8:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
900271ec:	ea4f 0cec 	mov.w	ip, ip, asr #3
900271f0:	eba8 0802 	sub.w	r8, r8, r2
900271f4:	ea4f 4b00 	mov.w	fp, r0, lsl #16
900271f8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900271fc:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90027200:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90027204:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90027208:	ea4a 0101 	orr.w	r1, sl, r1
9002720c:	437a      	muls	r2, r7
9002720e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90027212:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90027216:	fb09 2208 	mla	r2, r9, r8, r2
9002721a:	ea4b 0000 	orr.w	r0, fp, r0
9002721e:	fb05 2201 	mla	r2, r5, r1, r2
90027222:	fb0c 2200 	mla	r2, ip, r0, r2
90027226:	0d57      	lsrs	r7, r2, #21
90027228:	0952      	lsrs	r2, r2, #5
9002722a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
9002722e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90027232:	433a      	orrs	r2, r7
90027234:	2bff      	cmp	r3, #255	@ 0xff
90027236:	b292      	uxth	r2, r2
90027238:	d102      	bne.n	90027240 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
9002723a:	9912      	ldr	r1, [sp, #72]	@ 0x48
9002723c:	29ff      	cmp	r1, #255	@ 0xff
9002723e:	d063      	beq.n	90027308 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
90027240:	980a      	ldr	r0, [sp, #40]	@ 0x28
90027242:	1215      	asrs	r5, r2, #8
90027244:	f8be 1000 	ldrh.w	r1, [lr]
90027248:	4343      	muls	r3, r0
9002724a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
9002724c:	10cf      	asrs	r7, r1, #3
9002724e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90027252:	1c58      	adds	r0, r3, #1
90027254:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90027258:	eb00 2323 	add.w	r3, r0, r3, asr #8
9002725c:	1208      	asrs	r0, r1, #8
9002725e:	ea6f 2323 	mvn.w	r3, r3, asr #8
90027262:	00c9      	lsls	r1, r1, #3
90027264:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90027268:	b2db      	uxtb	r3, r3
9002726a:	b2c9      	uxtb	r1, r1
9002726c:	fb10 f003 	smulbb	r0, r0, r3
90027270:	fb11 f103 	smulbb	r1, r1, r3
90027274:	fb05 0504 	mla	r5, r5, r4, r0
90027278:	10d0      	asrs	r0, r2, #3
9002727a:	fb17 f703 	smulbb	r7, r7, r3
9002727e:	00d2      	lsls	r2, r2, #3
90027280:	b2ad      	uxth	r5, r5
90027282:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90027286:	b2d2      	uxtb	r2, r2
90027288:	fb00 7004 	mla	r0, r0, r4, r7
9002728c:	1c6b      	adds	r3, r5, #1
9002728e:	fb02 1204 	mla	r2, r2, r4, r1
90027292:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90027296:	b292      	uxth	r2, r2
90027298:	b280      	uxth	r0, r0
9002729a:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9002729e:	1c57      	adds	r7, r2, #1
900272a0:	eb07 2712 	add.w	r7, r7, r2, lsr #8
900272a4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900272a8:	433d      	orrs	r5, r7
900272aa:	1c47      	adds	r7, r0, #1
900272ac:	eb07 2710 	add.w	r7, r7, r0, lsr #8
900272b0:	097f      	lsrs	r7, r7, #5
900272b2:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900272b6:	433d      	orrs	r5, r7
900272b8:	f8ae 5000 	strh.w	r5, [lr]
900272bc:	9b21      	ldr	r3, [sp, #132]	@ 0x84
900272be:	f10e 0e02 	add.w	lr, lr, #2
900272c2:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
900272c4:	4413      	add	r3, r2
900272c6:	9a22      	ldr	r2, [sp, #136]	@ 0x88
900272c8:	9321      	str	r3, [sp, #132]	@ 0x84
900272ca:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900272cc:	441a      	add	r2, r3
900272ce:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
900272d0:	3b01      	subs	r3, #1
900272d2:	9222      	str	r2, [sp, #136]	@ 0x88
900272d4:	9313      	str	r3, [sp, #76]	@ 0x4c
900272d6:	e61c      	b.n	90026f12 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
900272d8:	fb08 f000 	mul.w	r0, r8, r0
900272dc:	fb09 0303 	mla	r3, r9, r3, r0
900272e0:	e6dc      	b.n	9002709c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
900272e2:	46b9      	mov	r9, r7
900272e4:	e704      	b.n	900270f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
900272e6:	f1c2 0110 	rsb	r1, r2, #16
900272ea:	437a      	muls	r2, r7
900272ec:	fb09 2901 	mla	r9, r9, r1, r2
900272f0:	ea4f 0949 	mov.w	r9, r9, lsl #1
900272f4:	ea4f 5059 	mov.w	r0, r9, lsr #21
900272f8:	ea4f 1259 	mov.w	r2, r9, lsr #5
900272fc:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90027300:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90027304:	4302      	orrs	r2, r0
90027306:	e795      	b.n	90027234 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
90027308:	f8ae 2000 	strh.w	r2, [lr]
9002730c:	e7d6      	b.n	900272bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
9002730e:	b017      	add	sp, #92	@ 0x5c
90027310:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90027314 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
90027314:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027318:	b085      	sub	sp, #20
9002731a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
9002731e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
90027322:	2800      	cmp	r0, #0
90027324:	9103      	str	r1, [sp, #12]
90027326:	fb00 7406 	mla	r4, r0, r6, r7
9002732a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
9002732e:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
90027332:	eb03 0544 	add.w	r5, r3, r4, lsl #1
90027336:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
9002733a:	eb02 0904 	add.w	r9, r2, r4
9002733e:	9501      	str	r5, [sp, #4]
90027340:	f2c0 8141 	blt.w	900275c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90027344:	4583      	cmp	fp, r0
90027346:	f340 813e 	ble.w	900275c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
9002734a:	2f00      	cmp	r7, #0
9002734c:	f2c0 8137 	blt.w	900275be <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90027350:	42be      	cmp	r6, r7
90027352:	f340 8134 	ble.w	900275be <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90027356:	f812 c004 	ldrb.w	ip, [r2, r4]
9002735a:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
9002735e:	f64f 041f 	movw	r4, #63519	@ 0xf81f
90027362:	ea4f 02ec 	mov.w	r2, ip, asr #3
90027366:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
9002736a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002736e:	4355      	muls	r5, r2
90027370:	fb0c f203 	mul.w	r2, ip, r3
90027374:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90027378:	f605 0501 	addw	r5, r5, #2049	@ 0x801
9002737c:	441d      	add	r5, r3
9002737e:	f102 0320 	add.w	r3, r2, #32
90027382:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90027386:	ea04 1455 	and.w	r4, r4, r5, lsr #5
9002738a:	0a1b      	lsrs	r3, r3, #8
9002738c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90027390:	431c      	orrs	r4, r3
90027392:	1c7b      	adds	r3, r7, #1
90027394:	f100 811c 	bmi.w	900275d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90027398:	429e      	cmp	r6, r3
9002739a:	f340 8119 	ble.w	900275d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
9002739e:	2900      	cmp	r1, #0
900273a0:	f000 8119 	beq.w	900275d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
900273a4:	9a01      	ldr	r2, [sp, #4]
900273a6:	f899 3001 	ldrb.w	r3, [r9, #1]
900273aa:	8855      	ldrh	r5, [r2, #2]
900273ac:	ea4f 08e3 	mov.w	r8, r3, asr #3
900273b0:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
900273b4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900273b8:	fb08 f802 	mul.w	r8, r8, r2
900273bc:	f64f 021f 	movw	r2, #63519	@ 0xf81f
900273c0:	435d      	muls	r5, r3
900273c2:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
900273c6:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900273ca:	44d0      	add	r8, sl
900273cc:	f105 0a20 	add.w	sl, r5, #32
900273d0:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
900273d4:	ea02 1258 	and.w	r2, r2, r8, lsr #5
900273d8:	0a2d      	lsrs	r5, r5, #8
900273da:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900273de:	432a      	orrs	r2, r5
900273e0:	3001      	adds	r0, #1
900273e2:	f100 80fe 	bmi.w	900275e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
900273e6:	4583      	cmp	fp, r0
900273e8:	f340 80fb 	ble.w	900275e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
900273ec:	f1be 0f00 	cmp.w	lr, #0
900273f0:	f000 80fc 	beq.w	900275ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
900273f4:	2f00      	cmp	r7, #0
900273f6:	f2c0 80f1 	blt.w	900275dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
900273fa:	42be      	cmp	r6, r7
900273fc:	f340 80ee 	ble.w	900275dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90027400:	9801      	ldr	r0, [sp, #4]
90027402:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
90027406:	f819 5006 	ldrb.w	r5, [r9, r6]
9002740a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
9002740e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90027412:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
90027416:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9002741a:	fb0a fa00 	mul.w	sl, sl, r0
9002741e:	fb05 f808 	mul.w	r8, r5, r8
90027422:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90027426:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
9002742a:	4482      	add	sl, r0
9002742c:	f108 0020 	add.w	r0, r8, #32
90027430:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90027434:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90027438:	0a00      	lsrs	r0, r0, #8
9002743a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002743e:	ea4b 0b00 	orr.w	fp, fp, r0
90027442:	3701      	adds	r7, #1
90027444:	f100 80d7 	bmi.w	900275f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90027448:	42be      	cmp	r6, r7
9002744a:	f340 80d4 	ble.w	900275f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
9002744e:	2900      	cmp	r1, #0
90027450:	f000 80d4 	beq.w	900275fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
90027454:	3601      	adds	r6, #1
90027456:	9801      	ldr	r0, [sp, #4]
90027458:	f819 7006 	ldrb.w	r7, [r9, r6]
9002745c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90027460:	ea4f 09e7 	mov.w	r9, r7, asr #3
90027464:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
90027468:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002746c:	fb09 f906 	mul.w	r9, r9, r6
90027470:	fb07 f800 	mul.w	r8, r7, r0
90027474:	f64f 001f 	movw	r0, #63519	@ 0xf81f
90027478:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
9002747c:	f609 0901 	addw	r9, r9, #2049	@ 0x801
90027480:	44d1      	add	r9, sl
90027482:	ea00 1659 	and.w	r6, r0, r9, lsr #5
90027486:	f108 0020 	add.w	r0, r8, #32
9002748a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
9002748e:	0a00      	lsrs	r0, r0, #8
90027490:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90027494:	4330      	orrs	r0, r6
90027496:	b28e      	uxth	r6, r1
90027498:	fa1f f98e 	uxth.w	r9, lr
9002749c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
900274a0:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
900274a4:	fb06 f809 	mul.w	r8, r6, r9
900274a8:	0136      	lsls	r6, r6, #4
900274aa:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900274ae:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
900274b2:	9601      	str	r6, [sp, #4]
900274b4:	ea4a 0404 	orr.w	r4, sl, r4
900274b8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
900274bc:	fa1f f689 	uxth.w	r6, r9
900274c0:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900274c4:	fb11 f90e 	smulbb	r9, r1, lr
900274c8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900274cc:	9602      	str	r6, [sp, #8]
900274ce:	4626      	mov	r6, r4
900274d0:	f3c9 09c7 	ubfx	r9, r9, #3, #8
900274d4:	f1ce 0410 	rsb	r4, lr, #16
900274d8:	ea4a 0202 	orr.w	r2, sl, r2
900274dc:	ea4f 4a00 	mov.w	sl, r0, lsl #16
900274e0:	1a64      	subs	r4, r4, r1
900274e2:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
900274e6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900274ea:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900274ee:	434a      	muls	r2, r1
900274f0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
900274f4:	ea4a 0000 	orr.w	r0, sl, r0
900274f8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
900274fc:	fb04 2406 	mla	r4, r4, r6, r2
90027500:	9903      	ldr	r1, [sp, #12]
90027502:	fb09 4200 	mla	r2, r9, r0, r4
90027506:	ea4f 440b 	mov.w	r4, fp, lsl #16
9002750a:	9801      	ldr	r0, [sp, #4]
9002750c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90027510:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90027514:	8809      	ldrh	r1, [r1, #0]
90027516:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
9002751a:	ea44 0b0b 	orr.w	fp, r4, fp
9002751e:	9c02      	ldr	r4, [sp, #8]
90027520:	1b00      	subs	r0, r0, r4
90027522:	9c01      	ldr	r4, [sp, #4]
90027524:	fb0e 2e0b 	mla	lr, lr, fp, r2
90027528:	eba4 0608 	sub.w	r6, r4, r8
9002752c:	b280      	uxth	r0, r0
9002752e:	ea4f 525e 	mov.w	r2, lr, lsr #21
90027532:	b2b6      	uxth	r6, r6
90027534:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90027538:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002753c:	4373      	muls	r3, r6
9002753e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90027542:	fb0c 3300 	mla	r3, ip, r0, r3
90027546:	9802      	ldr	r0, [sp, #8]
90027548:	ea42 0e0e 	orr.w	lr, r2, lr
9002754c:	fb00 3505 	mla	r5, r0, r5, r3
90027550:	120b      	asrs	r3, r1, #8
90027552:	10c8      	asrs	r0, r1, #3
90027554:	fb08 5707 	mla	r7, r8, r7, r5
90027558:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
9002755c:	00c9      	lsls	r1, r1, #3
9002755e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90027562:	ea6f 2727 	mvn.w	r7, r7, asr #8
90027566:	fa1f f28e 	uxth.w	r2, lr
9002756a:	b2c9      	uxtb	r1, r1
9002756c:	b2ff      	uxtb	r7, r7
9002756e:	437b      	muls	r3, r7
90027570:	4378      	muls	r0, r7
90027572:	434f      	muls	r7, r1
90027574:	1c59      	adds	r1, r3, #1
90027576:	eb01 2113 	add.w	r1, r1, r3, lsr #8
9002757a:	1213      	asrs	r3, r2, #8
9002757c:	f023 0307 	bic.w	r3, r3, #7
90027580:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90027584:	1c41      	adds	r1, r0, #1
90027586:	eb01 2010 	add.w	r0, r1, r0, lsr #8
9002758a:	10d1      	asrs	r1, r2, #3
9002758c:	021b      	lsls	r3, r3, #8
9002758e:	f021 0103 	bic.w	r1, r1, #3
90027592:	00d2      	lsls	r2, r2, #3
90027594:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
90027598:	eb01 2110 	add.w	r1, r1, r0, lsr #8
9002759c:	00c9      	lsls	r1, r1, #3
9002759e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900275a2:	430b      	orrs	r3, r1
900275a4:	1c79      	adds	r1, r7, #1
900275a6:	eb01 2717 	add.w	r7, r1, r7, lsr #8
900275aa:	eb02 2217 	add.w	r2, r2, r7, lsr #8
900275ae:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900275b2:	431a      	orrs	r2, r3
900275b4:	9b03      	ldr	r3, [sp, #12]
900275b6:	801a      	strh	r2, [r3, #0]
900275b8:	b005      	add	sp, #20
900275ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900275be:	f04f 0c00 	mov.w	ip, #0
900275c2:	4664      	mov	r4, ip
900275c4:	e6e5      	b.n	90027392 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
900275c6:	2300      	movs	r3, #0
900275c8:	469c      	mov	ip, r3
900275ca:	461a      	mov	r2, r3
900275cc:	461c      	mov	r4, r3
900275ce:	e707      	b.n	900273e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
900275d0:	2300      	movs	r3, #0
900275d2:	461a      	mov	r2, r3
900275d4:	e704      	b.n	900273e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
900275d6:	460b      	mov	r3, r1
900275d8:	460a      	mov	r2, r1
900275da:	e701      	b.n	900273e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
900275dc:	2500      	movs	r5, #0
900275de:	46ab      	mov	fp, r5
900275e0:	e72f      	b.n	90027442 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
900275e2:	2700      	movs	r7, #0
900275e4:	463d      	mov	r5, r7
900275e6:	4638      	mov	r0, r7
900275e8:	46bb      	mov	fp, r7
900275ea:	e754      	b.n	90027496 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
900275ec:	4677      	mov	r7, lr
900275ee:	4675      	mov	r5, lr
900275f0:	4670      	mov	r0, lr
900275f2:	46f3      	mov	fp, lr
900275f4:	e74f      	b.n	90027496 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
900275f6:	2700      	movs	r7, #0
900275f8:	4638      	mov	r0, r7
900275fa:	e74c      	b.n	90027496 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
900275fc:	460f      	mov	r7, r1
900275fe:	4608      	mov	r0, r1
90027600:	e749      	b.n	90027496 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

90027604 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90027604:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027608:	b093      	sub	sp, #76	@ 0x4c
9002760a:	9210      	str	r2, [sp, #64]	@ 0x40
9002760c:	9a21      	ldr	r2, [sp, #132]	@ 0x84
9002760e:	9011      	str	r0, [sp, #68]	@ 0x44
90027610:	910e      	str	r1, [sp, #56]	@ 0x38
90027612:	6850      	ldr	r0, [r2, #4]
90027614:	9306      	str	r3, [sp, #24]
90027616:	6812      	ldr	r2, [r2, #0]
90027618:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
9002761c:	fb00 1303 	mla	r3, r0, r3, r1
90027620:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90027624:	9307      	str	r3, [sp, #28]
90027626:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027628:	681b      	ldr	r3, [r3, #0]
9002762a:	9308      	str	r3, [sp, #32]
9002762c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002762e:	685b      	ldr	r3, [r3, #4]
90027630:	9309      	str	r3, [sp, #36]	@ 0x24
90027632:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90027634:	2b00      	cmp	r3, #0
90027636:	dc03      	bgt.n	90027640 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90027638:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9002763a:	2b00      	cmp	r3, #0
9002763c:	f340 83b6 	ble.w	90027dac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90027640:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027642:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90027646:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002764a:	1e48      	subs	r0, r1, #1
9002764c:	1e55      	subs	r5, r2, #1
9002764e:	9b06      	ldr	r3, [sp, #24]
90027650:	2b00      	cmp	r3, #0
90027652:	f340 8165 	ble.w	90027920 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90027656:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
90027658:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
9002765a:	1436      	asrs	r6, r6, #16
9002765c:	ea4f 4323 	mov.w	r3, r3, asr #16
90027660:	d406      	bmi.n	90027670 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90027662:	4286      	cmp	r6, r0
90027664:	da04      	bge.n	90027670 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90027666:	2b00      	cmp	r3, #0
90027668:	db02      	blt.n	90027670 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9002766a:	42ab      	cmp	r3, r5
9002766c:	f2c0 8159 	blt.w	90027922 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90027670:	3601      	adds	r6, #1
90027672:	f100 8146 	bmi.w	90027902 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90027676:	42b1      	cmp	r1, r6
90027678:	f2c0 8143 	blt.w	90027902 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
9002767c:	3301      	adds	r3, #1
9002767e:	f100 8140 	bmi.w	90027902 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90027682:	429a      	cmp	r2, r3
90027684:	f2c0 813d 	blt.w	90027902 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90027688:	9b06      	ldr	r3, [sp, #24]
9002768a:	f64f 061f 	movw	r6, #63519	@ 0xf81f
9002768e:	9f07      	ldr	r7, [sp, #28]
90027690:	930f      	str	r3, [sp, #60]	@ 0x3c
90027692:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90027694:	2b00      	cmp	r3, #0
90027696:	f340 8166 	ble.w	90027966 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
9002769a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
9002769c:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
9002769e:	1418      	asrs	r0, r3, #16
900276a0:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
900276a2:	142d      	asrs	r5, r5, #16
900276a4:	f3c3 3103 	ubfx	r1, r3, #12, #4
900276a8:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
900276aa:	f3c3 3c03 	ubfx	ip, r3, #12, #4
900276ae:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900276b0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
900276b4:	f100 81f0 	bmi.w	90027a98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900276b8:	f102 3eff 	add.w	lr, r2, #4294967295
900276bc:	4575      	cmp	r5, lr
900276be:	f280 81eb 	bge.w	90027a98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900276c2:	2800      	cmp	r0, #0
900276c4:	f2c0 81e8 	blt.w	90027a98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900276c8:	f103 3eff 	add.w	lr, r3, #4294967295
900276cc:	4570      	cmp	r0, lr
900276ce:	f280 81e3 	bge.w	90027a98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900276d2:	b212      	sxth	r2, r2
900276d4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900276d6:	fa1f fe81 	uxth.w	lr, r1
900276da:	fb00 5002 	mla	r0, r0, r2, r5
900276de:	ea4f 150e 	mov.w	r5, lr, lsl #4
900276e2:	eb03 0a00 	add.w	sl, r3, r0
900276e6:	f813 9000 	ldrb.w	r9, [r3, r0]
900276ea:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
900276ee:	f89a 8001 	ldrb.w	r8, [sl, #1]
900276f2:	b29b      	uxth	r3, r3
900276f4:	f1bc 0f00 	cmp.w	ip, #0
900276f8:	f000 817b 	beq.w	900279f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
900276fc:	f81a 4002 	ldrb.w	r4, [sl, r2]
90027700:	eb0a 0b02 	add.w	fp, sl, r2
90027704:	fa1f fa8c 	uxth.w	sl, ip
90027708:	940a      	str	r4, [sp, #40]	@ 0x28
9002770a:	fb0a fe0e 	mul.w	lr, sl, lr
9002770e:	f89b 4001 	ldrb.w	r4, [fp, #1]
90027712:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90027716:	eba5 050e 	sub.w	r5, r5, lr
9002771a:	940b      	str	r4, [sp, #44]	@ 0x2c
9002771c:	fa1f fa8a 	uxth.w	sl, sl
90027720:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90027722:	b2ad      	uxth	r5, r5
90027724:	eba3 030a 	sub.w	r3, r3, sl
90027728:	fb08 f505 	mul.w	r5, r8, r5
9002772c:	b29b      	uxth	r3, r3
9002772e:	fb09 5303 	mla	r3, r9, r3, r5
90027732:	fb0a 3304 	mla	r3, sl, r4, r3
90027736:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90027738:	fb0e 3304 	mla	r3, lr, r4, r3
9002773c:	f3c3 2307 	ubfx	r3, r3, #8, #8
90027740:	2b00      	cmp	r3, #0
90027742:	f000 80d1 	beq.w	900278e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90027746:	9c08      	ldr	r4, [sp, #32]
90027748:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
9002774c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90027750:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90027754:	f000 8152 	beq.w	900279fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90027758:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
9002775c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90027760:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90027764:	fb0a fe0e 	mul.w	lr, sl, lr
90027768:	fb09 f000 	mul.w	r0, r9, r0
9002776c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90027770:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90027774:	f100 0b20 	add.w	fp, r0, #32
90027778:	44ce      	add	lr, r9
9002777a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
9002777e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90027782:	ea4f 2919 	mov.w	r9, r9, lsr #8
90027786:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9002778a:	ea4e 0909 	orr.w	r9, lr, r9
9002778e:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90027792:	8868      	ldrh	r0, [r5, #2]
90027794:	d019      	beq.n	900277ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
90027796:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
9002779a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
9002779e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900277a2:	fb0a fe0e 	mul.w	lr, sl, lr
900277a6:	fb08 f800 	mul.w	r8, r8, r0
900277aa:	ea06 105e 	and.w	r0, r6, lr, lsr #5
900277ae:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
900277b2:	f108 0b20 	add.w	fp, r8, #32
900277b6:	4486      	add	lr, r0
900277b8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
900277bc:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900277c0:	0a00      	lsrs	r0, r0, #8
900277c2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900277c6:	ea4e 0000 	orr.w	r0, lr, r0
900277ca:	ea4f 4e09 	mov.w	lr, r9, lsl #16
900277ce:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
900277d2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
900277d6:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900277da:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
900277de:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900277e2:	ea4e 0909 	orr.w	r9, lr, r9
900277e6:	ea4a 0000 	orr.w	r0, sl, r0
900277ea:	f1bc 0f00 	cmp.w	ip, #0
900277ee:	f000 8107 	beq.w	90027a00 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
900277f2:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
900277f6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
900277f8:	3a01      	subs	r2, #1
900277fa:	2cff      	cmp	r4, #255	@ 0xff
900277fc:	ea4f 0242 	mov.w	r2, r2, lsl #1
90027800:	f102 0202 	add.w	r2, r2, #2
90027804:	eb05 0e02 	add.w	lr, r5, r2
90027808:	5aaa      	ldrh	r2, [r5, r2]
9002780a:	d018      	beq.n	9002783e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
9002780c:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
90027810:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90027814:	ea4f 08e4 	mov.w	r8, r4, asr #3
90027818:	fb04 fa02 	mul.w	sl, r4, r2
9002781c:	fb08 f805 	mul.w	r8, r8, r5
90027820:	f10a 0520 	add.w	r5, sl, #32
90027824:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90027828:	f608 0801 	addw	r8, r8, #2049	@ 0x801
9002782c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90027830:	4442      	add	r2, r8
90027832:	0a2d      	lsrs	r5, r5, #8
90027834:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90027838:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9002783c:	432a      	orrs	r2, r5
9002783e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90027840:	f8be 5002 	ldrh.w	r5, [lr, #2]
90027844:	2cff      	cmp	r4, #255	@ 0xff
90027846:	d01a      	beq.n	9002787e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90027848:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
9002784c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90027850:	ea4f 08e4 	mov.w	r8, r4, asr #3
90027854:	fb04 fa05 	mul.w	sl, r4, r5
90027858:	fb08 f80e 	mul.w	r8, r8, lr
9002785c:	f10a 0e20 	add.w	lr, sl, #32
90027860:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90027864:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90027868:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
9002786c:	4445      	add	r5, r8
9002786e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90027872:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90027876:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
9002787a:	ea45 050e 	orr.w	r5, r5, lr
9002787e:	fb1c fe01 	smulbb	lr, ip, r1
90027882:	f1cc 0810 	rsb	r8, ip, #16
90027886:	ea4f 4a02 	mov.w	sl, r2, lsl #16
9002788a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9002788e:	ea4f 0eee 	mov.w	lr, lr, asr #3
90027892:	eba8 0801 	sub.w	r8, r8, r1
90027896:	ea4f 4b05 	mov.w	fp, r5, lsl #16
9002789a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002789e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
900278a2:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
900278a6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
900278aa:	ea4a 0202 	orr.w	r2, sl, r2
900278ae:	4341      	muls	r1, r0
900278b0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
900278b4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900278b8:	fb09 1108 	mla	r1, r9, r8, r1
900278bc:	ea4b 0505 	orr.w	r5, fp, r5
900278c0:	fb0c 1102 	mla	r1, ip, r2, r1
900278c4:	fb0e 1e05 	mla	lr, lr, r5, r1
900278c8:	ea4f 525e 	mov.w	r2, lr, lsr #21
900278cc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
900278d0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900278d4:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
900278d8:	ea42 0e0e 	orr.w	lr, r2, lr
900278dc:	fa1f f28e 	uxth.w	r2, lr
900278e0:	2bff      	cmp	r3, #255	@ 0xff
900278e2:	f040 80a1 	bne.w	90027a28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
900278e6:	803a      	strh	r2, [r7, #0]
900278e8:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
900278ea:	3702      	adds	r7, #2
900278ec:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
900278ee:	4413      	add	r3, r2
900278f0:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
900278f2:	931d      	str	r3, [sp, #116]	@ 0x74
900278f4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900278f6:	441a      	add	r2, r3
900278f8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900278fa:	3b01      	subs	r3, #1
900278fc:	921e      	str	r2, [sp, #120]	@ 0x78
900278fe:	930f      	str	r3, [sp, #60]	@ 0x3c
90027900:	e6c7      	b.n	90027692 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90027902:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90027904:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
90027906:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
90027908:	4433      	add	r3, r6
9002790a:	931d      	str	r3, [sp, #116]	@ 0x74
9002790c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002790e:	441c      	add	r4, r3
90027910:	9b06      	ldr	r3, [sp, #24]
90027912:	3b01      	subs	r3, #1
90027914:	941e      	str	r4, [sp, #120]	@ 0x78
90027916:	9306      	str	r3, [sp, #24]
90027918:	9b07      	ldr	r3, [sp, #28]
9002791a:	3302      	adds	r3, #2
9002791c:	9307      	str	r3, [sp, #28]
9002791e:	e696      	b.n	9002764e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90027920:	d028      	beq.n	90027974 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90027922:	9b06      	ldr	r3, [sp, #24]
90027924:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90027926:	3b01      	subs	r3, #1
90027928:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
9002792a:	fb00 5003 	mla	r0, r0, r3, r5
9002792e:	1400      	asrs	r0, r0, #16
90027930:	f53f aeaa 	bmi.w	90027688 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90027934:	3901      	subs	r1, #1
90027936:	4288      	cmp	r0, r1
90027938:	f6bf aea6 	bge.w	90027688 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9002793c:	9920      	ldr	r1, [sp, #128]	@ 0x80
9002793e:	981e      	ldr	r0, [sp, #120]	@ 0x78
90027940:	fb01 0303 	mla	r3, r1, r3, r0
90027944:	141b      	asrs	r3, r3, #16
90027946:	f53f ae9f 	bmi.w	90027688 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9002794a:	3a01      	subs	r2, #1
9002794c:	4293      	cmp	r3, r2
9002794e:	f6bf ae9b 	bge.w	90027688 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90027952:	9b06      	ldr	r3, [sp, #24]
90027954:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90027958:	f8dd e01c 	ldr.w	lr, [sp, #28]
9002795c:	930f      	str	r3, [sp, #60]	@ 0x3c
9002795e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90027960:	2b00      	cmp	r3, #0
90027962:	f300 80b6 	bgt.w	90027ad2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
90027966:	9b06      	ldr	r3, [sp, #24]
90027968:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9002796c:	9b07      	ldr	r3, [sp, #28]
9002796e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90027972:	9307      	str	r3, [sp, #28]
90027974:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90027976:	2b00      	cmp	r3, #0
90027978:	f340 8218 	ble.w	90027dac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
9002797c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90027980:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90027982:	ee30 0a04 	vadd.f32	s0, s0, s8
90027986:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002798a:	eef0 6a62 	vmov.f32	s13, s5
9002798e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90027992:	ee31 1a05 	vadd.f32	s2, s2, s10
90027996:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002799a:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
9002799e:	eef0 6a43 	vmov.f32	s13, s6
900279a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900279a6:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
900279aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
900279ae:	ee61 7a27 	vmul.f32	s15, s2, s15
900279b2:	ee77 2a62 	vsub.f32	s5, s14, s5
900279b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
900279ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900279be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900279c2:	ee12 2a90 	vmov	r2, s5
900279c6:	eef0 2a47 	vmov.f32	s5, s14
900279ca:	fb92 f3f3 	sdiv	r3, r2, r3
900279ce:	ee13 2a10 	vmov	r2, s6
900279d2:	931f      	str	r3, [sp, #124]	@ 0x7c
900279d4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900279d6:	eeb0 3a67 	vmov.f32	s6, s15
900279da:	fb92 f3f3 	sdiv	r3, r2, r3
900279de:	9320      	str	r3, [sp, #128]	@ 0x80
900279e0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900279e2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
900279e4:	3b01      	subs	r3, #1
900279e6:	930e      	str	r3, [sp, #56]	@ 0x38
900279e8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900279ea:	bf08      	it	eq
900279ec:	4613      	moveq	r3, r2
900279ee:	9306      	str	r3, [sp, #24]
900279f0:	e61f      	b.n	90027632 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
900279f2:	fb08 f505 	mul.w	r5, r8, r5
900279f6:	fb09 5303 	mla	r3, r9, r3, r5
900279fa:	e69f      	b.n	9002773c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
900279fc:	4681      	mov	r9, r0
900279fe:	e6c6      	b.n	9002778e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
90027a00:	f1c1 0210 	rsb	r2, r1, #16
90027a04:	4341      	muls	r1, r0
90027a06:	fb09 1902 	mla	r9, r9, r2, r1
90027a0a:	ea4f 0949 	mov.w	r9, r9, lsl #1
90027a0e:	ea4f 5259 	mov.w	r2, r9, lsr #21
90027a12:	ea4f 1959 	mov.w	r9, r9, lsr #5
90027a16:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90027a1a:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90027a1e:	ea42 0909 	orr.w	r9, r2, r9
90027a22:	fa1f f289 	uxth.w	r2, r9
90027a26:	e75b      	b.n	900278e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
90027a28:	f8b7 c000 	ldrh.w	ip, [r7]
90027a2c:	43db      	mvns	r3, r3
90027a2e:	ea4f 202c 	mov.w	r0, ip, asr #8
90027a32:	fa5f fe83 	uxtb.w	lr, r3
90027a36:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90027a3a:	ea4f 05ec 	mov.w	r5, ip, asr #3
90027a3e:	ea4f 03cc 	mov.w	r3, ip, lsl #3
90027a42:	fb00 f00e 	mul.w	r0, r0, lr
90027a46:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90027a4a:	b2db      	uxtb	r3, r3
90027a4c:	1c41      	adds	r1, r0, #1
90027a4e:	fb05 f50e 	mul.w	r5, r5, lr
90027a52:	fb03 f30e 	mul.w	r3, r3, lr
90027a56:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90027a5a:	1211      	asrs	r1, r2, #8
90027a5c:	f021 0107 	bic.w	r1, r1, #7
90027a60:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90027a64:	48d3      	ldr	r0, [pc, #844]	@ (90027db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90027a66:	b2c9      	uxtb	r1, r1
90027a68:	ea00 2001 	and.w	r0, r0, r1, lsl #8
90027a6c:	1c69      	adds	r1, r5, #1
90027a6e:	eb01 2515 	add.w	r5, r1, r5, lsr #8
90027a72:	10d1      	asrs	r1, r2, #3
90027a74:	00d2      	lsls	r2, r2, #3
90027a76:	f021 0103 	bic.w	r1, r1, #3
90027a7a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
90027a7e:	00c9      	lsls	r1, r1, #3
90027a80:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90027a84:	4301      	orrs	r1, r0
90027a86:	1c58      	adds	r0, r3, #1
90027a88:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90027a8c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90027a90:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90027a94:	430a      	orrs	r2, r1
90027a96:	e726      	b.n	900278e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
90027a98:	f115 0e01 	adds.w	lr, r5, #1
90027a9c:	f53f af24 	bmi.w	900278e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90027aa0:	4572      	cmp	r2, lr
90027aa2:	f6ff af21 	blt.w	900278e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90027aa6:	f110 0e01 	adds.w	lr, r0, #1
90027aaa:	f53f af1d 	bmi.w	900278e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90027aae:	4573      	cmp	r3, lr
90027ab0:	f6ff af1a 	blt.w	900278e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90027ab4:	b21b      	sxth	r3, r3
90027ab6:	b212      	sxth	r2, r2
90027ab8:	9301      	str	r3, [sp, #4]
90027aba:	9200      	str	r2, [sp, #0]
90027abc:	e9cd 1c04 	strd	r1, ip, [sp, #16]
90027ac0:	e9cd 5002 	strd	r5, r0, [sp, #8]
90027ac4:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
90027ac8:	4639      	mov	r1, r7
90027aca:	9811      	ldr	r0, [sp, #68]	@ 0x44
90027acc:	f7ff fc22 	bl	90027314 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
90027ad0:	e70a      	b.n	900278e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90027ad2:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90027ad4:	f3c3 3203 	ubfx	r2, r3, #12, #4
90027ad8:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90027ada:	f3c3 3503 	ubfx	r5, r3, #12, #4
90027ade:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027ae0:	fa1f fc82 	uxth.w	ip, r2
90027ae4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90027ae8:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90027aea:	ea4f 100c 	mov.w	r0, ip, lsl #4
90027aee:	141f      	asrs	r7, r3, #16
90027af0:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90027af2:	141b      	asrs	r3, r3, #16
90027af4:	fb01 3707 	mla	r7, r1, r7, r3
90027af8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90027afa:	eb03 0a07 	add.w	sl, r3, r7
90027afe:	f813 9007 	ldrb.w	r9, [r3, r7]
90027b02:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
90027b06:	f89a 8001 	ldrb.w	r8, [sl, #1]
90027b0a:	b29b      	uxth	r3, r3
90027b0c:	2d00      	cmp	r5, #0
90027b0e:	f000 80fe 	beq.w	90027d0e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
90027b12:	f81a 4001 	ldrb.w	r4, [sl, r1]
90027b16:	eb0a 0b01 	add.w	fp, sl, r1
90027b1a:	fa1f fa85 	uxth.w	sl, r5
90027b1e:	940c      	str	r4, [sp, #48]	@ 0x30
90027b20:	fb0a fc0c 	mul.w	ip, sl, ip
90027b24:	f89b 4001 	ldrb.w	r4, [fp, #1]
90027b28:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90027b2c:	eba0 000c 	sub.w	r0, r0, ip
90027b30:	940d      	str	r4, [sp, #52]	@ 0x34
90027b32:	fa1f fa8a 	uxth.w	sl, sl
90027b36:	b280      	uxth	r0, r0
90027b38:	eba3 030a 	sub.w	r3, r3, sl
90027b3c:	fb08 f000 	mul.w	r0, r8, r0
90027b40:	b29b      	uxth	r3, r3
90027b42:	fb09 0303 	mla	r3, r9, r3, r0
90027b46:	980c      	ldr	r0, [sp, #48]	@ 0x30
90027b48:	fb0a 3300 	mla	r3, sl, r0, r3
90027b4c:	fb0c 3304 	mla	r3, ip, r4, r3
90027b50:	f3c3 2307 	ubfx	r3, r3, #8, #8
90027b54:	2b00      	cmp	r3, #0
90027b56:	f000 80cc 	beq.w	90027cf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90027b5a:	9808      	ldr	r0, [sp, #32]
90027b5c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90027b60:	9c08      	ldr	r4, [sp, #32]
90027b62:	eb00 0047 	add.w	r0, r0, r7, lsl #1
90027b66:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90027b6a:	f000 80d5 	beq.w	90027d18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90027b6e:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90027b72:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90027b76:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90027b7a:	fb0a fc0c 	mul.w	ip, sl, ip
90027b7e:	fb09 f707 	mul.w	r7, r9, r7
90027b82:	ea06 195c 	and.w	r9, r6, ip, lsr #5
90027b86:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90027b8a:	f107 0b20 	add.w	fp, r7, #32
90027b8e:	44cc      	add	ip, r9
90027b90:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90027b94:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90027b98:	ea4f 2919 	mov.w	r9, r9, lsr #8
90027b9c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90027ba0:	ea4c 0909 	orr.w	r9, ip, r9
90027ba4:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90027ba8:	8847      	ldrh	r7, [r0, #2]
90027baa:	d019      	beq.n	90027be0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
90027bac:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90027bb0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90027bb4:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90027bb8:	fb0a fc0c 	mul.w	ip, sl, ip
90027bbc:	fb08 f807 	mul.w	r8, r8, r7
90027bc0:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90027bc4:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90027bc8:	f108 0b20 	add.w	fp, r8, #32
90027bcc:	44bc      	add	ip, r7
90027bce:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90027bd2:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90027bd6:	0a3f      	lsrs	r7, r7, #8
90027bd8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90027bdc:	ea4c 0707 	orr.w	r7, ip, r7
90027be0:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90027be4:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90027be8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90027bec:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90027bf0:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90027bf4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90027bf8:	ea4c 0909 	orr.w	r9, ip, r9
90027bfc:	ea4a 0707 	orr.w	r7, sl, r7
90027c00:	2d00      	cmp	r5, #0
90027c02:	f000 808b 	beq.w	90027d1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
90027c06:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
90027c0a:	3901      	subs	r1, #1
90027c0c:	0049      	lsls	r1, r1, #1
90027c0e:	3102      	adds	r1, #2
90027c10:	eb00 0c01 	add.w	ip, r0, r1
90027c14:	5a41      	ldrh	r1, [r0, r1]
90027c16:	980c      	ldr	r0, [sp, #48]	@ 0x30
90027c18:	28ff      	cmp	r0, #255	@ 0xff
90027c1a:	d019      	beq.n	90027c50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
90027c1c:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
90027c20:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90027c22:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90027c26:	ea4f 08e4 	mov.w	r8, r4, asr #3
90027c2a:	fb04 fa01 	mul.w	sl, r4, r1
90027c2e:	fb08 f800 	mul.w	r8, r8, r0
90027c32:	f10a 0020 	add.w	r0, sl, #32
90027c36:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90027c3a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90027c3e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
90027c42:	4441      	add	r1, r8
90027c44:	0a00      	lsrs	r0, r0, #8
90027c46:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90027c4a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90027c4e:	4301      	orrs	r1, r0
90027c50:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90027c52:	f8bc 0002 	ldrh.w	r0, [ip, #2]
90027c56:	2cff      	cmp	r4, #255	@ 0xff
90027c58:	d01a      	beq.n	90027c90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
90027c5a:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
90027c5e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90027c62:	ea4f 08e4 	mov.w	r8, r4, asr #3
90027c66:	fb04 fa00 	mul.w	sl, r4, r0
90027c6a:	fb08 f80c 	mul.w	r8, r8, ip
90027c6e:	f10a 0c20 	add.w	ip, sl, #32
90027c72:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90027c76:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90027c7a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90027c7e:	4440      	add	r0, r8
90027c80:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027c84:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90027c88:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90027c8c:	ea40 000c 	orr.w	r0, r0, ip
90027c90:	fb15 fc02 	smulbb	ip, r5, r2
90027c94:	f1c5 0810 	rsb	r8, r5, #16
90027c98:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90027c9c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90027ca0:	ea4f 0cec 	mov.w	ip, ip, asr #3
90027ca4:	eba8 0802 	sub.w	r8, r8, r2
90027ca8:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90027cac:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90027cb0:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90027cb4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90027cb8:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90027cbc:	ea4a 0101 	orr.w	r1, sl, r1
90027cc0:	437a      	muls	r2, r7
90027cc2:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90027cc6:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90027cca:	fb09 2208 	mla	r2, r9, r8, r2
90027cce:	ea4b 0000 	orr.w	r0, fp, r0
90027cd2:	fb05 2201 	mla	r2, r5, r1, r2
90027cd6:	fb0c 2200 	mla	r2, ip, r0, r2
90027cda:	0d57      	lsrs	r7, r2, #21
90027cdc:	0952      	lsrs	r2, r2, #5
90027cde:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90027ce2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90027ce6:	433a      	orrs	r2, r7
90027ce8:	2bff      	cmp	r3, #255	@ 0xff
90027cea:	b292      	uxth	r2, r2
90027cec:	d127      	bne.n	90027d3e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
90027cee:	f8ae 2000 	strh.w	r2, [lr]
90027cf2:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90027cf4:	f10e 0e02 	add.w	lr, lr, #2
90027cf8:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
90027cfa:	4413      	add	r3, r2
90027cfc:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
90027cfe:	931d      	str	r3, [sp, #116]	@ 0x74
90027d00:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027d02:	441a      	add	r2, r3
90027d04:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90027d06:	3b01      	subs	r3, #1
90027d08:	921e      	str	r2, [sp, #120]	@ 0x78
90027d0a:	930f      	str	r3, [sp, #60]	@ 0x3c
90027d0c:	e627      	b.n	9002795e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90027d0e:	fb08 f000 	mul.w	r0, r8, r0
90027d12:	fb09 0303 	mla	r3, r9, r3, r0
90027d16:	e71b      	b.n	90027b50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
90027d18:	46b9      	mov	r9, r7
90027d1a:	e743      	b.n	90027ba4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
90027d1c:	f1c2 0110 	rsb	r1, r2, #16
90027d20:	437a      	muls	r2, r7
90027d22:	fb09 2901 	mla	r9, r9, r1, r2
90027d26:	ea4f 0949 	mov.w	r9, r9, lsl #1
90027d2a:	ea4f 5059 	mov.w	r0, r9, lsr #21
90027d2e:	ea4f 1259 	mov.w	r2, r9, lsr #5
90027d32:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90027d36:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90027d3a:	4302      	orrs	r2, r0
90027d3c:	e7d4      	b.n	90027ce8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
90027d3e:	f8be 7000 	ldrh.w	r7, [lr]
90027d42:	43db      	mvns	r3, r3
90027d44:	4c1b      	ldr	r4, [pc, #108]	@ (90027db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90027d46:	1238      	asrs	r0, r7, #8
90027d48:	fa5f fc83 	uxtb.w	ip, r3
90027d4c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90027d50:	10fd      	asrs	r5, r7, #3
90027d52:	00fb      	lsls	r3, r7, #3
90027d54:	fb00 f00c 	mul.w	r0, r0, ip
90027d58:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90027d5c:	b2db      	uxtb	r3, r3
90027d5e:	fb05 f10c 	mul.w	r1, r5, ip
90027d62:	1c45      	adds	r5, r0, #1
90027d64:	fb03 f30c 	mul.w	r3, r3, ip
90027d68:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90027d6c:	1215      	asrs	r5, r2, #8
90027d6e:	f025 0507 	bic.w	r5, r5, #7
90027d72:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90027d76:	1c4d      	adds	r5, r1, #1
90027d78:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90027d7c:	10d1      	asrs	r1, r2, #3
90027d7e:	b2c0      	uxtb	r0, r0
90027d80:	f021 0103 	bic.w	r1, r1, #3
90027d84:	00d2      	lsls	r2, r2, #3
90027d86:	ea04 2000 	and.w	r0, r4, r0, lsl #8
90027d8a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
90027d8e:	00c9      	lsls	r1, r1, #3
90027d90:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90027d94:	4308      	orrs	r0, r1
90027d96:	1c59      	adds	r1, r3, #1
90027d98:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90027d9c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90027da0:	f3c3 03c4 	ubfx	r3, r3, #3, #5
90027da4:	4318      	orrs	r0, r3
90027da6:	f8ae 0000 	strh.w	r0, [lr]
90027daa:	e7a2      	b.n	90027cf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90027dac:	b013      	add	sp, #76	@ 0x4c
90027dae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027db2:	bf00      	nop
90027db4:	fffff800 	.word	0xfffff800

90027db8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
90027db8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90027dbc:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
90027dc0:	f9bd a020 	ldrsh.w	sl, [sp, #32]
90027dc4:	fb05 4c03 	mla	ip, r5, r3, r4
90027dc8:	2d00      	cmp	r5, #0
90027dca:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
90027dce:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
90027dd2:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
90027dd6:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
90027dda:	8808      	ldrh	r0, [r1, #0]
90027ddc:	f2c0 80a7 	blt.w	90027f2e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90027de0:	45aa      	cmp	sl, r5
90027de2:	f340 80a4 	ble.w	90027f2e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90027de6:	2c00      	cmp	r4, #0
90027de8:	f2c0 809f 	blt.w	90027f2a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90027dec:	42a3      	cmp	r3, r4
90027dee:	f340 809c 	ble.w	90027f2a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90027df2:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
90027df6:	1c62      	adds	r2, r4, #1
90027df8:	f100 809c 	bmi.w	90027f34 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90027dfc:	4293      	cmp	r3, r2
90027dfe:	f340 8099 	ble.w	90027f34 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90027e02:	f1b9 0f00 	cmp.w	r9, #0
90027e06:	f000 8095 	beq.w	90027f34 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90027e0a:	f8be c002 	ldrh.w	ip, [lr, #2]
90027e0e:	3501      	adds	r5, #1
90027e10:	f100 8094 	bmi.w	90027f3c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90027e14:	45aa      	cmp	sl, r5
90027e16:	f340 8091 	ble.w	90027f3c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90027e1a:	2f00      	cmp	r7, #0
90027e1c:	f000 808e 	beq.w	90027f3c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90027e20:	2c00      	cmp	r4, #0
90027e22:	f2c0 8089 	blt.w	90027f38 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90027e26:	42a3      	cmp	r3, r4
90027e28:	f340 8086 	ble.w	90027f38 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90027e2c:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
90027e30:	3401      	adds	r4, #1
90027e32:	f100 8086 	bmi.w	90027f42 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90027e36:	42a3      	cmp	r3, r4
90027e38:	f340 8083 	ble.w	90027f42 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90027e3c:	f1b9 0f00 	cmp.w	r9, #0
90027e40:	d07f      	beq.n	90027f42 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90027e42:	3301      	adds	r3, #1
90027e44:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
90027e48:	ea4f 4408 	mov.w	r4, r8, lsl #16
90027e4c:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
90027e50:	fb19 fe07 	smulbb	lr, r9, r7
90027e54:	f1c7 0210 	rsb	r2, r7, #16
90027e58:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90027e5c:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
90027e60:	eba2 0209 	sub.w	r2, r2, r9
90027e64:	ea44 0808 	orr.w	r8, r4, r8
90027e68:	ea4f 440c 	mov.w	r4, ip, lsl #16
90027e6c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90027e70:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
90027e74:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90027e78:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90027e7c:	ea44 0c0c 	orr.w	ip, r4, ip
90027e80:	ebce 0449 	rsb	r4, lr, r9, lsl #1
90027e84:	fb04 f40c 	mul.w	r4, r4, ip
90027e88:	fb02 4808 	mla	r8, r2, r8, r4
90027e8c:	041a      	lsls	r2, r3, #16
90027e8e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90027e92:	b2b4      	uxth	r4, r6
90027e94:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90027e98:	43f6      	mvns	r6, r6
90027e9a:	4313      	orrs	r3, r2
90027e9c:	042a      	lsls	r2, r5, #16
90027e9e:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90027ea2:	b2f6      	uxtb	r6, r6
90027ea4:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90027ea8:	fb0e 8303 	mla	r3, lr, r3, r8
90027eac:	432a      	orrs	r2, r5
90027eae:	fb07 3202 	mla	r2, r7, r2, r3
90027eb2:	10c7      	asrs	r7, r0, #3
90027eb4:	0d53      	lsrs	r3, r2, #21
90027eb6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90027eba:	0952      	lsrs	r2, r2, #5
90027ebc:	fb17 f706 	smulbb	r7, r7, r6
90027ec0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90027ec4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90027ec8:	431a      	orrs	r2, r3
90027eca:	b293      	uxth	r3, r2
90027ecc:	1202      	asrs	r2, r0, #8
90027ece:	121d      	asrs	r5, r3, #8
90027ed0:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90027ed4:	00c0      	lsls	r0, r0, #3
90027ed6:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90027eda:	fb12 f206 	smulbb	r2, r2, r6
90027ede:	b2c0      	uxtb	r0, r0
90027ee0:	fb05 2504 	mla	r5, r5, r4, r2
90027ee4:	10da      	asrs	r2, r3, #3
90027ee6:	fb10 f006 	smulbb	r0, r0, r6
90027eea:	00db      	lsls	r3, r3, #3
90027eec:	b2ad      	uxth	r5, r5
90027eee:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90027ef2:	b2db      	uxtb	r3, r3
90027ef4:	fb02 7204 	mla	r2, r2, r4, r7
90027ef8:	fb03 0004 	mla	r0, r3, r4, r0
90027efc:	1c6b      	adds	r3, r5, #1
90027efe:	b292      	uxth	r2, r2
90027f00:	b280      	uxth	r0, r0
90027f02:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90027f06:	1c43      	adds	r3, r0, #1
90027f08:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90027f0c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90027f10:	1c50      	adds	r0, r2, #1
90027f12:	eb00 2212 	add.w	r2, r0, r2, lsr #8
90027f16:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90027f1a:	0952      	lsrs	r2, r2, #5
90027f1c:	432b      	orrs	r3, r5
90027f1e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90027f22:	4313      	orrs	r3, r2
90027f24:	800b      	strh	r3, [r1, #0]
90027f26:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90027f2a:	4680      	mov	r8, r0
90027f2c:	e763      	b.n	90027df6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
90027f2e:	4684      	mov	ip, r0
90027f30:	4680      	mov	r8, r0
90027f32:	e76c      	b.n	90027e0e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90027f34:	4684      	mov	ip, r0
90027f36:	e76a      	b.n	90027e0e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90027f38:	4605      	mov	r5, r0
90027f3a:	e779      	b.n	90027e30 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
90027f3c:	4603      	mov	r3, r0
90027f3e:	4605      	mov	r5, r0
90027f40:	e782      	b.n	90027e48 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
90027f42:	4603      	mov	r3, r0
90027f44:	e780      	b.n	90027e48 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

90027f46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90027f46:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027f4a:	b093      	sub	sp, #76	@ 0x4c
90027f4c:	461d      	mov	r5, r3
90027f4e:	9210      	str	r2, [sp, #64]	@ 0x40
90027f50:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90027f52:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
90027f56:	910a      	str	r1, [sp, #40]	@ 0x28
90027f58:	920b      	str	r2, [sp, #44]	@ 0x2c
90027f5a:	6859      	ldr	r1, [r3, #4]
90027f5c:	681b      	ldr	r3, [r3, #0]
90027f5e:	9011      	str	r0, [sp, #68]	@ 0x44
90027f60:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
90027f64:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90027f68:	fb01 2707 	mla	r7, r1, r7, r2
90027f6c:	eb03 0347 	add.w	r3, r3, r7, lsl #1
90027f70:	9307      	str	r3, [sp, #28]
90027f72:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027f74:	681b      	ldr	r3, [r3, #0]
90027f76:	9309      	str	r3, [sp, #36]	@ 0x24
90027f78:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90027f7a:	43db      	mvns	r3, r3
90027f7c:	b2db      	uxtb	r3, r3
90027f7e:	9308      	str	r3, [sp, #32]
90027f80:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90027f82:	2b00      	cmp	r3, #0
90027f84:	dc03      	bgt.n	90027f8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90027f86:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90027f88:	2b00      	cmp	r3, #0
90027f8a:	f340 8205 	ble.w	90028398 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90027f8e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027f90:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90027f94:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90027f98:	1e48      	subs	r0, r1, #1
90027f9a:	f102 3cff 	add.w	ip, r2, #4294967295
90027f9e:	2d00      	cmp	r5, #0
90027fa0:	f340 80da 	ble.w	90028158 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
90027fa4:	ea5f 4e24 	movs.w	lr, r4, asr #16
90027fa8:	ea4f 4326 	mov.w	r3, r6, asr #16
90027fac:	d406      	bmi.n	90027fbc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90027fae:	4586      	cmp	lr, r0
90027fb0:	da04      	bge.n	90027fbc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90027fb2:	2b00      	cmp	r3, #0
90027fb4:	db02      	blt.n	90027fbc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90027fb6:	4563      	cmp	r3, ip
90027fb8:	f2c0 80cf 	blt.w	9002815a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90027fbc:	f11e 0e01 	adds.w	lr, lr, #1
90027fc0:	f100 80c1 	bmi.w	90028146 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90027fc4:	4571      	cmp	r1, lr
90027fc6:	f2c0 80be 	blt.w	90028146 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90027fca:	3301      	adds	r3, #1
90027fcc:	f100 80bb 	bmi.w	90028146 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90027fd0:	429a      	cmp	r2, r3
90027fd2:	f2c0 80b8 	blt.w	90028146 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90027fd6:	46a9      	mov	r9, r5
90027fd8:	f8dd 801c 	ldr.w	r8, [sp, #28]
90027fdc:	f1b9 0f00 	cmp.w	r9, #0
90027fe0:	f340 80d8 	ble.w	90028194 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
90027fe4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027fe6:	1421      	asrs	r1, r4, #16
90027fe8:	ea4f 4026 	mov.w	r0, r6, asr #16
90027fec:	f3c4 3203 	ubfx	r2, r4, #12, #4
90027ff0:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90027ff4:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90027ff8:	f100 8112 	bmi.w	90028220 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90027ffc:	f10e 3aff 	add.w	sl, lr, #4294967295
90028000:	4551      	cmp	r1, sl
90028002:	f280 810d 	bge.w	90028220 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90028006:	2800      	cmp	r0, #0
90028008:	f2c0 810a 	blt.w	90028220 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
9002800c:	f103 3aff 	add.w	sl, r3, #4294967295
90028010:	4550      	cmp	r0, sl
90028012:	f280 8105 	bge.w	90028220 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90028016:	fa0f f38e 	sxth.w	r3, lr
9002801a:	fb00 1103 	mla	r1, r0, r3, r1
9002801e:	9809      	ldr	r0, [sp, #36]	@ 0x24
90028020:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
90028024:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
90028028:	f8ba 1002 	ldrh.w	r1, [sl, #2]
9002802c:	f1bc 0f00 	cmp.w	ip, #0
90028030:	d007      	beq.n	90028042 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
90028032:	005b      	lsls	r3, r3, #1
90028034:	eb0a 0003 	add.w	r0, sl, r3
90028038:	f83a 3003 	ldrh.w	r3, [sl, r3]
9002803c:	930c      	str	r3, [sp, #48]	@ 0x30
9002803e:	8843      	ldrh	r3, [r0, #2]
90028040:	930d      	str	r3, [sp, #52]	@ 0x34
90028042:	ea4f 400e 	mov.w	r0, lr, lsl #16
90028046:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
9002804a:	fb12 f30c 	smulbb	r3, r2, ip
9002804e:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90028052:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90028056:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
9002805a:	10db      	asrs	r3, r3, #3
9002805c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90028060:	ea40 000e 	orr.w	r0, r0, lr
90028064:	f1cc 0e10 	rsb	lr, ip, #16
90028068:	ea4a 0101 	orr.w	r1, sl, r1
9002806c:	9f08      	ldr	r7, [sp, #32]
9002806e:	ebae 0e02 	sub.w	lr, lr, r2
90028072:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90028076:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
9002807a:	4351      	muls	r1, r2
9002807c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9002807e:	fb0e 1e00 	mla	lr, lr, r0, r1
90028082:	990c      	ldr	r1, [sp, #48]	@ 0x30
90028084:	0410      	lsls	r0, r2, #16
90028086:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9002808a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
9002808e:	4310      	orrs	r0, r2
90028090:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90028092:	0412      	lsls	r2, r2, #16
90028094:	fb03 e000 	mla	r0, r3, r0, lr
90028098:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
9002809c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
900280a0:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900280a4:	ea42 020e 	orr.w	r2, r2, lr
900280a8:	fb03 0302 	mla	r3, r3, r2, r0
900280ac:	f8b8 0000 	ldrh.w	r0, [r8]
900280b0:	0d5a      	lsrs	r2, r3, #21
900280b2:	095b      	lsrs	r3, r3, #5
900280b4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900280b8:	1201      	asrs	r1, r0, #8
900280ba:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900280be:	ea4f 0ee0 	mov.w	lr, r0, asr #3
900280c2:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
900280c6:	00c0      	lsls	r0, r0, #3
900280c8:	4313      	orrs	r3, r2
900280ca:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
900280ce:	fb11 f107 	smulbb	r1, r1, r7
900280d2:	b2c0      	uxtb	r0, r0
900280d4:	b29b      	uxth	r3, r3
900280d6:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
900280da:	fb10 f007 	smulbb	r0, r0, r7
900280de:	fb1e fe07 	smulbb	lr, lr, r7
900280e2:	ea4f 2c23 	mov.w	ip, r3, asr #8
900280e6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
900280ea:	fb0c 1c02 	mla	ip, ip, r2, r1
900280ee:	10d9      	asrs	r1, r3, #3
900280f0:	00db      	lsls	r3, r3, #3
900280f2:	fa1f fc8c 	uxth.w	ip, ip
900280f6:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
900280fa:	b2db      	uxtb	r3, r3
900280fc:	fb01 e102 	mla	r1, r1, r2, lr
90028100:	fb03 0302 	mla	r3, r3, r2, r0
90028104:	b289      	uxth	r1, r1
90028106:	b29a      	uxth	r2, r3
90028108:	f10c 0301 	add.w	r3, ip, #1
9002810c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90028110:	1c53      	adds	r3, r2, #1
90028112:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90028116:	1c4a      	adds	r2, r1, #1
90028118:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9002811c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90028120:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90028124:	0949      	lsrs	r1, r1, #5
90028126:	ea43 030c 	orr.w	r3, r3, ip
9002812a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002812e:	430b      	orrs	r3, r1
90028130:	f8a8 3000 	strh.w	r3, [r8]
90028134:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90028136:	f108 0802 	add.w	r8, r8, #2
9002813a:	f109 39ff 	add.w	r9, r9, #4294967295
9002813e:	441c      	add	r4, r3
90028140:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90028142:	441e      	add	r6, r3
90028144:	e74a      	b.n	90027fdc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90028146:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90028148:	3d01      	subs	r5, #1
9002814a:	441c      	add	r4, r3
9002814c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002814e:	441e      	add	r6, r3
90028150:	9b07      	ldr	r3, [sp, #28]
90028152:	3302      	adds	r3, #2
90028154:	9307      	str	r3, [sp, #28]
90028156:	e722      	b.n	90027f9e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90028158:	d022      	beq.n	900281a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
9002815a:	1e6b      	subs	r3, r5, #1
9002815c:	981f      	ldr	r0, [sp, #124]	@ 0x7c
9002815e:	fb00 4003 	mla	r0, r0, r3, r4
90028162:	1400      	asrs	r0, r0, #16
90028164:	f53f af37 	bmi.w	90027fd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90028168:	3901      	subs	r1, #1
9002816a:	4288      	cmp	r0, r1
9002816c:	f6bf af33 	bge.w	90027fd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90028170:	9920      	ldr	r1, [sp, #128]	@ 0x80
90028172:	fb01 6303 	mla	r3, r1, r3, r6
90028176:	141b      	asrs	r3, r3, #16
90028178:	f53f af2d 	bmi.w	90027fd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002817c:	3a01      	subs	r2, #1
9002817e:	4293      	cmp	r3, r2
90028180:	f6bf af29 	bge.w	90027fd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90028184:	46a8      	mov	r8, r5
90028186:	f8dd 901c 	ldr.w	r9, [sp, #28]
9002818a:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
9002818e:	f1b8 0f00 	cmp.w	r8, #0
90028192:	dc60      	bgt.n	90028256 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
90028194:	9b07      	ldr	r3, [sp, #28]
90028196:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
9002819a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
9002819e:	9307      	str	r3, [sp, #28]
900281a0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900281a2:	2b00      	cmp	r3, #0
900281a4:	f340 80f8 	ble.w	90028398 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900281a8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900281ac:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900281ae:	ee30 0a04 	vadd.f32	s0, s0, s8
900281b2:	ee70 0aa4 	vadd.f32	s1, s1, s9
900281b6:	eef0 6a62 	vmov.f32	s13, s5
900281ba:	eec7 7a00 	vdiv.f32	s15, s14, s0
900281be:	ee31 1a05 	vadd.f32	s2, s2, s10
900281c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900281c6:	ee16 4a90 	vmov	r4, s13
900281ca:	eef0 6a43 	vmov.f32	s13, s6
900281ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900281d2:	ee16 6a90 	vmov	r6, s13
900281d6:	ee20 7aa7 	vmul.f32	s14, s1, s15
900281da:	ee61 7a27 	vmul.f32	s15, s2, s15
900281de:	ee77 2a62 	vsub.f32	s5, s14, s5
900281e2:	ee37 3ac3 	vsub.f32	s6, s15, s6
900281e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900281ea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900281ee:	ee12 2a90 	vmov	r2, s5
900281f2:	eef0 2a47 	vmov.f32	s5, s14
900281f6:	fb92 f3f3 	sdiv	r3, r2, r3
900281fa:	ee13 2a10 	vmov	r2, s6
900281fe:	931f      	str	r3, [sp, #124]	@ 0x7c
90028200:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90028202:	eeb0 3a67 	vmov.f32	s6, s15
90028206:	fb92 f3f3 	sdiv	r3, r2, r3
9002820a:	9320      	str	r3, [sp, #128]	@ 0x80
9002820c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002820e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90028210:	3b01      	subs	r3, #1
90028212:	930a      	str	r3, [sp, #40]	@ 0x28
90028214:	bf08      	it	eq
90028216:	4615      	moveq	r5, r2
90028218:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002821a:	bf18      	it	ne
9002821c:	461d      	movne	r5, r3
9002821e:	e6af      	b.n	90027f80 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90028220:	f111 0a01 	adds.w	sl, r1, #1
90028224:	d486      	bmi.n	90028134 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90028226:	45d6      	cmp	lr, sl
90028228:	db84      	blt.n	90028134 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002822a:	f110 0a01 	adds.w	sl, r0, #1
9002822e:	d481      	bmi.n	90028134 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90028230:	4553      	cmp	r3, sl
90028232:	f6ff af7f 	blt.w	90028134 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90028236:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
90028238:	b21b      	sxth	r3, r3
9002823a:	9101      	str	r1, [sp, #4]
9002823c:	4641      	mov	r1, r8
9002823e:	9300      	str	r3, [sp, #0]
90028240:	fa0f f38e 	sxth.w	r3, lr
90028244:	e9cd 0202 	strd	r0, r2, [sp, #8]
90028248:	e9cd c704 	strd	ip, r7, [sp, #16]
9002824c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002824e:	9811      	ldr	r0, [sp, #68]	@ 0x44
90028250:	f7ff fdb2 	bl	90027db8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
90028254:	e76e      	b.n	90028134 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90028256:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90028258:	1430      	asrs	r0, r6, #16
9002825a:	9f09      	ldr	r7, [sp, #36]	@ 0x24
9002825c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90028260:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90028264:	1423      	asrs	r3, r4, #16
90028266:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002826a:	fb01 3000 	mla	r0, r1, r0, r3
9002826e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90028270:	eb03 0340 	add.w	r3, r3, r0, lsl #1
90028274:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
90028278:	8858      	ldrh	r0, [r3, #2]
9002827a:	f1be 0f00 	cmp.w	lr, #0
9002827e:	d00b      	beq.n	90028298 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90028280:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
90028284:	3901      	subs	r1, #1
90028286:	0049      	lsls	r1, r1, #1
90028288:	3102      	adds	r1, #2
9002828a:	eb03 0b01 	add.w	fp, r3, r1
9002828e:	5a5b      	ldrh	r3, [r3, r1]
90028290:	930e      	str	r3, [sp, #56]	@ 0x38
90028292:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90028296:	930f      	str	r3, [sp, #60]	@ 0x3c
90028298:	ea4f 410c 	mov.w	r1, ip, lsl #16
9002829c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
900282a0:	fb12 f30e 	smulbb	r3, r2, lr
900282a4:	ea4f 4b00 	mov.w	fp, r0, lsl #16
900282a8:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
900282ac:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900282b0:	10db      	asrs	r3, r3, #3
900282b2:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900282b6:	ea41 010c 	orr.w	r1, r1, ip
900282ba:	f1ce 0c10 	rsb	ip, lr, #16
900282be:	ea4b 0000 	orr.w	r0, fp, r0
900282c2:	9f08      	ldr	r7, [sp, #32]
900282c4:	ebac 0c02 	sub.w	ip, ip, r2
900282c8:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900282cc:	f108 38ff 	add.w	r8, r8, #4294967295
900282d0:	4350      	muls	r0, r2
900282d2:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
900282d6:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900282d8:	fb0c 0c01 	mla	ip, ip, r1, r0
900282dc:	980e      	ldr	r0, [sp, #56]	@ 0x38
900282de:	ea4f 4b02 	mov.w	fp, r2, lsl #16
900282e2:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
900282e6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
900282e8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900282ec:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900282f0:	0412      	lsls	r2, r2, #16
900282f2:	ea4b 0101 	orr.w	r1, fp, r1
900282f6:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900282fa:	fb03 c101 	mla	r1, r3, r1, ip
900282fe:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90028302:	4302      	orrs	r2, r0
90028304:	fb03 1202 	mla	r2, r3, r2, r1
90028308:	ea4f 5b52 	mov.w	fp, r2, lsr #21
9002830c:	0952      	lsrs	r2, r2, #5
9002830e:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
90028312:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
90028316:	f8b9 2000 	ldrh.w	r2, [r9]
9002831a:	ea4b 0303 	orr.w	r3, fp, r3
9002831e:	1211      	asrs	r1, r2, #8
90028320:	ea4f 0ce2 	mov.w	ip, r2, asr #3
90028324:	b29b      	uxth	r3, r3
90028326:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9002832a:	00d2      	lsls	r2, r2, #3
9002832c:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
90028330:	fb11 f107 	smulbb	r1, r1, r7
90028334:	1218      	asrs	r0, r3, #8
90028336:	fb1c fc07 	smulbb	ip, ip, r7
9002833a:	b2d2      	uxtb	r2, r2
9002833c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90028340:	fb12 f207 	smulbb	r2, r2, r7
90028344:	fb00 100a 	mla	r0, r0, sl, r1
90028348:	10d9      	asrs	r1, r3, #3
9002834a:	00db      	lsls	r3, r3, #3
9002834c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90028350:	b280      	uxth	r0, r0
90028352:	b2db      	uxtb	r3, r3
90028354:	fb01 c10a 	mla	r1, r1, sl, ip
90028358:	fb03 230a 	mla	r3, r3, sl, r2
9002835c:	1c42      	adds	r2, r0, #1
9002835e:	b289      	uxth	r1, r1
90028360:	b29b      	uxth	r3, r3
90028362:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90028366:	f101 0c01 	add.w	ip, r1, #1
9002836a:	1c5a      	adds	r2, r3, #1
9002836c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90028370:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90028374:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90028378:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002837a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
9002837e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90028382:	441c      	add	r4, r3
90028384:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90028388:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002838a:	4310      	orrs	r0, r2
9002838c:	441e      	add	r6, r3
9002838e:	ea40 000c 	orr.w	r0, r0, ip
90028392:	f829 0b02 	strh.w	r0, [r9], #2
90028396:	e6fa      	b.n	9002818e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
90028398:	b013      	add	sp, #76	@ 0x4c
9002839a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002839e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
9002839e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900283a2:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
900283a6:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
900283aa:	fb0e 4703 	mla	r7, lr, r3, r4
900283ae:	f1be 0f00 	cmp.w	lr, #0
900283b2:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
900283b6:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
900283ba:	eb02 0847 	add.w	r8, r2, r7, lsl #1
900283be:	8808      	ldrh	r0, [r1, #0]
900283c0:	db60      	blt.n	90028484 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
900283c2:	45f1      	cmp	r9, lr
900283c4:	dd5e      	ble.n	90028484 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
900283c6:	2c00      	cmp	r4, #0
900283c8:	db5a      	blt.n	90028480 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
900283ca:	42a3      	cmp	r3, r4
900283cc:	dd58      	ble.n	90028480 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
900283ce:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
900283d2:	1c62      	adds	r2, r4, #1
900283d4:	d459      	bmi.n	9002848a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
900283d6:	4293      	cmp	r3, r2
900283d8:	dd57      	ble.n	9002848a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
900283da:	2d00      	cmp	r5, #0
900283dc:	d055      	beq.n	9002848a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
900283de:	f8b8 7002 	ldrh.w	r7, [r8, #2]
900283e2:	f11e 0e01 	adds.w	lr, lr, #1
900283e6:	d454      	bmi.n	90028492 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
900283e8:	45f1      	cmp	r9, lr
900283ea:	dd52      	ble.n	90028492 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
900283ec:	2e00      	cmp	r6, #0
900283ee:	d050      	beq.n	90028492 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
900283f0:	2c00      	cmp	r4, #0
900283f2:	db4c      	blt.n	9002848e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
900283f4:	42a3      	cmp	r3, r4
900283f6:	dd4a      	ble.n	9002848e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
900283f8:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
900283fc:	3401      	adds	r4, #1
900283fe:	d405      	bmi.n	9002840c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90028400:	42a3      	cmp	r3, r4
90028402:	dd03      	ble.n	9002840c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90028404:	b115      	cbz	r5, 9002840c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90028406:	3301      	adds	r3, #1
90028408:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
9002840c:	fb15 f406 	smulbb	r4, r5, r6
90028410:	ea4f 430c 	mov.w	r3, ip, lsl #16
90028414:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90028418:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
9002841c:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90028420:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90028424:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90028428:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
9002842c:	ea43 0c0c 	orr.w	ip, r3, ip
90028430:	f1c6 0310 	rsb	r3, r6, #16
90028434:	ea4e 0707 	orr.w	r7, lr, r7
90028438:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
9002843c:	1b5b      	subs	r3, r3, r5
9002843e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
90028442:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90028446:	437d      	muls	r5, r7
90028448:	fb03 5c0c 	mla	ip, r3, ip, r5
9002844c:	0403      	lsls	r3, r0, #16
9002844e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90028452:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90028456:	4318      	orrs	r0, r3
90028458:	0413      	lsls	r3, r2, #16
9002845a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9002845e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90028462:	fb04 c000 	mla	r0, r4, r0, ip
90028466:	4313      	orrs	r3, r2
90028468:	fb06 0003 	mla	r0, r6, r3, r0
9002846c:	0d43      	lsrs	r3, r0, #21
9002846e:	0940      	lsrs	r0, r0, #5
90028470:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90028474:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90028478:	4318      	orrs	r0, r3
9002847a:	8008      	strh	r0, [r1, #0]
9002847c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90028480:	4684      	mov	ip, r0
90028482:	e7a6      	b.n	900283d2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
90028484:	4607      	mov	r7, r0
90028486:	4684      	mov	ip, r0
90028488:	e7ab      	b.n	900283e2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
9002848a:	4607      	mov	r7, r0
9002848c:	e7a9      	b.n	900283e2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
9002848e:	4602      	mov	r2, r0
90028490:	e7b4      	b.n	900283fc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
90028492:	4602      	mov	r2, r0
90028494:	e7ba      	b.n	9002840c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

90028496 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90028496:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002849a:	b08f      	sub	sp, #60	@ 0x3c
9002849c:	461d      	mov	r5, r3
9002849e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
900284a0:	9107      	str	r1, [sp, #28]
900284a2:	920c      	str	r2, [sp, #48]	@ 0x30
900284a4:	6859      	ldr	r1, [r3, #4]
900284a6:	681b      	ldr	r3, [r3, #0]
900284a8:	900d      	str	r0, [sp, #52]	@ 0x34
900284aa:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
900284ae:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
900284b2:	fb01 2707 	mla	r7, r1, r7, r2
900284b6:	eb03 0747 	add.w	r7, r3, r7, lsl #1
900284ba:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900284bc:	f8d3 8000 	ldr.w	r8, [r3]
900284c0:	9b07      	ldr	r3, [sp, #28]
900284c2:	2b00      	cmp	r3, #0
900284c4:	dc03      	bgt.n	900284ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
900284c6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900284c8:	2b00      	cmp	r3, #0
900284ca:	f340 8182 	ble.w	900287d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
900284ce:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900284d0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900284d4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900284d8:	1e48      	subs	r0, r1, #1
900284da:	f102 3cff 	add.w	ip, r2, #4294967295
900284de:	2d00      	cmp	r5, #0
900284e0:	f340 809b 	ble.w	9002861a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
900284e4:	ea5f 4e24 	movs.w	lr, r4, asr #16
900284e8:	ea4f 4326 	mov.w	r3, r6, asr #16
900284ec:	d406      	bmi.n	900284fc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
900284ee:	4586      	cmp	lr, r0
900284f0:	da04      	bge.n	900284fc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
900284f2:	2b00      	cmp	r3, #0
900284f4:	db02      	blt.n	900284fc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
900284f6:	4563      	cmp	r3, ip
900284f8:	f2c0 8090 	blt.w	9002861c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900284fc:	f11e 0e01 	adds.w	lr, lr, #1
90028500:	f100 8084 	bmi.w	9002860c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90028504:	4571      	cmp	r1, lr
90028506:	f2c0 8081 	blt.w	9002860c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
9002850a:	3301      	adds	r3, #1
9002850c:	d47e      	bmi.n	9002860c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
9002850e:	429a      	cmp	r2, r3
90028510:	db7c      	blt.n	9002860c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90028512:	46aa      	mov	sl, r5
90028514:	46b9      	mov	r9, r7
90028516:	f1ba 0f00 	cmp.w	sl, #0
9002851a:	f340 8099 	ble.w	90028650 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
9002851e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90028520:	1421      	asrs	r1, r4, #16
90028522:	ea4f 4026 	mov.w	r0, r6, asr #16
90028526:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002852a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
9002852e:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90028532:	f100 80d1 	bmi.w	900286d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90028536:	f10e 3bff 	add.w	fp, lr, #4294967295
9002853a:	4559      	cmp	r1, fp
9002853c:	f280 80cc 	bge.w	900286d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90028540:	2800      	cmp	r0, #0
90028542:	f2c0 80c9 	blt.w	900286d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90028546:	f103 3bff 	add.w	fp, r3, #4294967295
9002854a:	4558      	cmp	r0, fp
9002854c:	f280 80c4 	bge.w	900286d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90028550:	fa0f fe8e 	sxth.w	lr, lr
90028554:	fb00 110e 	mla	r1, r0, lr, r1
90028558:	eb08 0041 	add.w	r0, r8, r1, lsl #1
9002855c:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
90028560:	8841      	ldrh	r1, [r0, #2]
90028562:	f1bc 0f00 	cmp.w	ip, #0
90028566:	d00b      	beq.n	90028580 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
90028568:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
9002856c:	3b01      	subs	r3, #1
9002856e:	005b      	lsls	r3, r3, #1
90028570:	3302      	adds	r3, #2
90028572:	eb00 0e03 	add.w	lr, r0, r3
90028576:	5ac3      	ldrh	r3, [r0, r3]
90028578:	9308      	str	r3, [sp, #32]
9002857a:	f8be 3002 	ldrh.w	r3, [lr, #2]
9002857e:	9309      	str	r3, [sp, #36]	@ 0x24
90028580:	ea4f 400b 	mov.w	r0, fp, lsl #16
90028584:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90028588:	fb12 f30c 	smulbb	r3, r2, ip
9002858c:	f1cc 0e10 	rsb	lr, ip, #16
90028590:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90028594:	10db      	asrs	r3, r3, #3
90028596:	ebae 0e02 	sub.w	lr, lr, r2
9002859a:	ea40 000b 	orr.w	r0, r0, fp
9002859e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
900285a2:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
900285a6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900285aa:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900285ae:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
900285b2:	ea4b 0101 	orr.w	r1, fp, r1
900285b6:	4351      	muls	r1, r2
900285b8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900285ba:	fb0e 1e00 	mla	lr, lr, r0, r1
900285be:	0410      	lsls	r0, r2, #16
900285c0:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900285c4:	9908      	ldr	r1, [sp, #32]
900285c6:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900285ca:	4310      	orrs	r0, r2
900285cc:	9a08      	ldr	r2, [sp, #32]
900285ce:	0412      	lsls	r2, r2, #16
900285d0:	fb03 e000 	mla	r0, r3, r0, lr
900285d4:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
900285d8:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
900285dc:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900285e0:	ea42 020e 	orr.w	r2, r2, lr
900285e4:	fb03 0302 	mla	r3, r3, r2, r0
900285e8:	0d5a      	lsrs	r2, r3, #21
900285ea:	095b      	lsrs	r3, r3, #5
900285ec:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900285f0:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900285f4:	4313      	orrs	r3, r2
900285f6:	f8a9 3000 	strh.w	r3, [r9]
900285fa:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
900285fc:	f109 0902 	add.w	r9, r9, #2
90028600:	f10a 3aff 	add.w	sl, sl, #4294967295
90028604:	441c      	add	r4, r3
90028606:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90028608:	441e      	add	r6, r3
9002860a:	e784      	b.n	90028516 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9002860c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
9002860e:	3d01      	subs	r5, #1
90028610:	3702      	adds	r7, #2
90028612:	441c      	add	r4, r3
90028614:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90028616:	441e      	add	r6, r3
90028618:	e761      	b.n	900284de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9002861a:	d01d      	beq.n	90028658 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002861c:	1e6b      	subs	r3, r5, #1
9002861e:	981b      	ldr	r0, [sp, #108]	@ 0x6c
90028620:	fb00 4003 	mla	r0, r0, r3, r4
90028624:	1400      	asrs	r0, r0, #16
90028626:	f53f af74 	bmi.w	90028512 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9002862a:	3901      	subs	r1, #1
9002862c:	4288      	cmp	r0, r1
9002862e:	f6bf af70 	bge.w	90028512 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90028632:	991c      	ldr	r1, [sp, #112]	@ 0x70
90028634:	fb01 6303 	mla	r3, r1, r3, r6
90028638:	141b      	asrs	r3, r3, #16
9002863a:	f53f af6a 	bmi.w	90028512 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9002863e:	3a01      	subs	r2, #1
90028640:	4293      	cmp	r3, r2
90028642:	f6bf af66 	bge.w	90028512 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90028646:	46a9      	mov	r9, r5
90028648:	46ba      	mov	sl, r7
9002864a:	f1b9 0f00 	cmp.w	r9, #0
9002864e:	dc5b      	bgt.n	90028708 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90028650:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90028654:	eb07 0745 	add.w	r7, r7, r5, lsl #1
90028658:	9b07      	ldr	r3, [sp, #28]
9002865a:	2b00      	cmp	r3, #0
9002865c:	f340 80b9 	ble.w	900287d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90028660:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90028664:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90028666:	ee30 0a04 	vadd.f32	s0, s0, s8
9002866a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002866e:	eef0 6a62 	vmov.f32	s13, s5
90028672:	eec7 7a00 	vdiv.f32	s15, s14, s0
90028676:	ee31 1a05 	vadd.f32	s2, s2, s10
9002867a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002867e:	ee16 4a90 	vmov	r4, s13
90028682:	eef0 6a43 	vmov.f32	s13, s6
90028686:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002868a:	ee16 6a90 	vmov	r6, s13
9002868e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90028692:	ee61 7a27 	vmul.f32	s15, s2, s15
90028696:	ee77 2a62 	vsub.f32	s5, s14, s5
9002869a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002869e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900286a2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900286a6:	ee12 2a90 	vmov	r2, s5
900286aa:	eef0 2a47 	vmov.f32	s5, s14
900286ae:	fb92 f3f3 	sdiv	r3, r2, r3
900286b2:	ee13 2a10 	vmov	r2, s6
900286b6:	931b      	str	r3, [sp, #108]	@ 0x6c
900286b8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900286ba:	eeb0 3a67 	vmov.f32	s6, s15
900286be:	fb92 f3f3 	sdiv	r3, r2, r3
900286c2:	931c      	str	r3, [sp, #112]	@ 0x70
900286c4:	9b07      	ldr	r3, [sp, #28]
900286c6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
900286c8:	3b01      	subs	r3, #1
900286ca:	9307      	str	r3, [sp, #28]
900286cc:	bf08      	it	eq
900286ce:	4615      	moveq	r5, r2
900286d0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900286d2:	bf18      	it	ne
900286d4:	461d      	movne	r5, r3
900286d6:	e6f3      	b.n	900284c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
900286d8:	f111 0b01 	adds.w	fp, r1, #1
900286dc:	d48d      	bmi.n	900285fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
900286de:	45de      	cmp	lr, fp
900286e0:	db8b      	blt.n	900285fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
900286e2:	f110 0b01 	adds.w	fp, r0, #1
900286e6:	d488      	bmi.n	900285fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
900286e8:	455b      	cmp	r3, fp
900286ea:	db86      	blt.n	900285fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
900286ec:	b21b      	sxth	r3, r3
900286ee:	e9cd 1001 	strd	r1, r0, [sp, #4]
900286f2:	e9cd 2c03 	strd	r2, ip, [sp, #12]
900286f6:	9300      	str	r3, [sp, #0]
900286f8:	4642      	mov	r2, r8
900286fa:	fa0f f38e 	sxth.w	r3, lr
900286fe:	4649      	mov	r1, r9
90028700:	980d      	ldr	r0, [sp, #52]	@ 0x34
90028702:	f7ff fe4c 	bl	9002839e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
90028706:	e778      	b.n	900285fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90028708:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002870a:	1420      	asrs	r0, r4, #16
9002870c:	1431      	asrs	r1, r6, #16
9002870e:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90028712:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90028716:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002871a:	fb03 0101 	mla	r1, r3, r1, r0
9002871e:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90028722:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
90028726:	8841      	ldrh	r1, [r0, #2]
90028728:	f1be 0f00 	cmp.w	lr, #0
9002872c:	d00b      	beq.n	90028746 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
9002872e:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
90028732:	3b01      	subs	r3, #1
90028734:	005b      	lsls	r3, r3, #1
90028736:	3302      	adds	r3, #2
90028738:	eb00 0b03 	add.w	fp, r0, r3
9002873c:	5ac3      	ldrh	r3, [r0, r3]
9002873e:	930a      	str	r3, [sp, #40]	@ 0x28
90028740:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90028744:	930b      	str	r3, [sp, #44]	@ 0x2c
90028746:	ea4f 400c 	mov.w	r0, ip, lsl #16
9002874a:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
9002874e:	fb12 f30e 	smulbb	r3, r2, lr
90028752:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90028756:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
9002875a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
9002875e:	10db      	asrs	r3, r3, #3
90028760:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90028764:	ea40 000c 	orr.w	r0, r0, ip
90028768:	f1ce 0c10 	rsb	ip, lr, #16
9002876c:	ea4b 0101 	orr.w	r1, fp, r1
90028770:	f109 39ff 	add.w	r9, r9, #4294967295
90028774:	ebac 0c02 	sub.w	ip, ip, r2
90028778:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
9002877c:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
90028780:	4351      	muls	r1, r2
90028782:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90028784:	fb0c 1c00 	mla	ip, ip, r0, r1
90028788:	990a      	ldr	r1, [sp, #40]	@ 0x28
9002878a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
9002878e:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
90028792:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90028794:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90028798:	0412      	lsls	r2, r2, #16
9002879a:	ea4b 0000 	orr.w	r0, fp, r0
9002879e:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
900287a2:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900287a6:	fb03 c000 	mla	r0, r3, r0, ip
900287aa:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
900287ae:	ea42 0b0b 	orr.w	fp, r2, fp
900287b2:	fb03 000b 	mla	r0, r3, fp, r0
900287b6:	0d43      	lsrs	r3, r0, #21
900287b8:	0940      	lsrs	r0, r0, #5
900287ba:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900287be:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900287c2:	4318      	orrs	r0, r3
900287c4:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
900287c6:	441c      	add	r4, r3
900287c8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900287ca:	f82a 0b02 	strh.w	r0, [sl], #2
900287ce:	441e      	add	r6, r3
900287d0:	e73b      	b.n	9002864a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
900287d2:	b00f      	add	sp, #60	@ 0x3c
900287d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900287d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
900287d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900287dc:	b085      	sub	sp, #20
900287de:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
900287e2:	9102      	str	r1, [sp, #8]
900287e4:	2c00      	cmp	r4, #0
900287e6:	fb04 7103 	mla	r1, r4, r3, r7
900287ea:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
900287ee:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
900287f2:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
900287f6:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
900287fa:	f2c0 811b 	blt.w	90028a34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
900287fe:	45a6      	cmp	lr, r4
90028800:	f340 8118 	ble.w	90028a34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90028804:	2f00      	cmp	r7, #0
90028806:	f2c0 8113 	blt.w	90028a30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
9002880a:	42bb      	cmp	r3, r7
9002880c:	f340 8110 	ble.w	90028a30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90028810:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90028814:	1c7a      	adds	r2, r7, #1
90028816:	f100 8110 	bmi.w	90028a3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
9002881a:	4293      	cmp	r3, r2
9002881c:	f340 810d 	ble.w	90028a3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90028820:	2e00      	cmp	r6, #0
90028822:	f000 810c 	beq.w	90028a3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
90028826:	f8dc 1004 	ldr.w	r1, [ip, #4]
9002882a:	3401      	adds	r4, #1
9002882c:	f100 810b 	bmi.w	90028a46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90028830:	45a6      	cmp	lr, r4
90028832:	f340 8108 	ble.w	90028a46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90028836:	2800      	cmp	r0, #0
90028838:	f000 8108 	beq.w	90028a4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
9002883c:	2f00      	cmp	r7, #0
9002883e:	f2c0 8100 	blt.w	90028a42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90028842:	42bb      	cmp	r3, r7
90028844:	f340 80fd 	ble.w	90028a42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90028848:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
9002884c:	3701      	adds	r7, #1
9002884e:	f100 8100 	bmi.w	90028a52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90028852:	42bb      	cmp	r3, r7
90028854:	f340 80fd 	ble.w	90028a52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90028858:	2e00      	cmp	r6, #0
9002885a:	f000 80fc 	beq.w	90028a56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
9002885e:	3301      	adds	r3, #1
90028860:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
90028864:	b2b6      	uxth	r6, r6
90028866:	b280      	uxth	r0, r0
90028868:	ea4f 6a11 	mov.w	sl, r1, lsr #24
9002886c:	fb00 fe06 	mul.w	lr, r0, r6
90028870:	0136      	lsls	r6, r6, #4
90028872:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90028876:	ebce 1000 	rsb	r0, lr, r0, lsl #4
9002887a:	eba6 070e 	sub.w	r7, r6, lr
9002887e:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
90028882:	ea4f 6914 	mov.w	r9, r4, lsr #24
90028886:	b280      	uxth	r0, r0
90028888:	b2bf      	uxth	r7, r7
9002888a:	1a1b      	subs	r3, r3, r0
9002888c:	ea4f 6812 	mov.w	r8, r2, lsr #24
90028890:	fb0a f607 	mul.w	r6, sl, r7
90028894:	b29b      	uxth	r3, r3
90028896:	fb0b 6603 	mla	r6, fp, r3, r6
9002889a:	fb00 6609 	mla	r6, r0, r9, r6
9002889e:	fb0e 6608 	mla	r6, lr, r8, r6
900288a2:	f3c6 2607 	ubfx	r6, r6, #8, #8
900288a6:	9600      	str	r6, [sp, #0]
900288a8:	2e00      	cmp	r6, #0
900288aa:	f000 80be 	beq.w	90028a2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
900288ae:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900288b2:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
900288b6:	9e02      	ldr	r6, [sp, #8]
900288b8:	fb0b fc0c 	mul.w	ip, fp, ip
900288bc:	fb0b f505 	mul.w	r5, fp, r5
900288c0:	8836      	ldrh	r6, [r6, #0]
900288c2:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
900288c6:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900288ca:	9501      	str	r5, [sp, #4]
900288cc:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
900288d0:	44dc      	add	ip, fp
900288d2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900288d6:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
900288da:	9503      	str	r5, [sp, #12]
900288dc:	9d01      	ldr	r5, [sp, #4]
900288de:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
900288e2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900288e6:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
900288ea:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900288ee:	fb0a fc0c 	mul.w	ip, sl, ip
900288f2:	ea4f 2b15 	mov.w	fp, r5, lsr #8
900288f6:	fb0a fa01 	mul.w	sl, sl, r1
900288fa:	ea4f 251c 	mov.w	r5, ip, lsr #8
900288fe:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90028902:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
90028906:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
9002890a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
9002890e:	4465      	add	r5, ip
90028910:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90028914:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90028918:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002891c:	fb09 fc0c 	mul.w	ip, r9, ip
90028920:	0a2d      	lsrs	r5, r5, #8
90028922:	fb09 f904 	mul.w	r9, r9, r4
90028926:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002892a:	ea4f 211c 	mov.w	r1, ip, lsr #8
9002892e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90028932:	f509 7480 	add.w	r4, r9, #256	@ 0x100
90028936:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
9002893a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
9002893e:	437d      	muls	r5, r7
90028940:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90028944:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90028948:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
9002894c:	4461      	add	r1, ip
9002894e:	fb08 f404 	mul.w	r4, r8, r4
90028952:	ea4f 2919 	mov.w	r9, r9, lsr #8
90028956:	fb08 f802 	mul.w	r8, r8, r2
9002895a:	0a09      	lsrs	r1, r1, #8
9002895c:	0a22      	lsrs	r2, r4, #8
9002895e:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
90028962:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90028966:	fb07 f70a 	mul.w	r7, r7, sl
9002896a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
9002896e:	4414      	add	r4, r2
90028970:	f508 7280 	add.w	r2, r8, #256	@ 0x100
90028974:	0a24      	lsrs	r4, r4, #8
90028976:	eb02 2818 	add.w	r8, r2, r8, lsr #8
9002897a:	9a03      	ldr	r2, [sp, #12]
9002897c:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
90028980:	fb02 5503 	mla	r5, r2, r3, r5
90028984:	ea4f 2818 	mov.w	r8, r8, lsr #8
90028988:	9a00      	ldr	r2, [sp, #0]
9002898a:	fb04 540e 	mla	r4, r4, lr, r5
9002898e:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
90028992:	1235      	asrs	r5, r6, #8
90028994:	fb01 4100 	mla	r1, r1, r0, r4
90028998:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9002899c:	0a09      	lsrs	r1, r1, #8
9002899e:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
900289a2:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
900289a6:	fb03 7101 	mla	r1, r3, r1, r7
900289aa:	fb0e 1e08 	mla	lr, lr, r8, r1
900289ae:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
900289b2:	fb00 e101 	mla	r1, r0, r1, lr
900289b6:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
900289ba:	b287      	uxth	r7, r0
900289bc:	0a09      	lsrs	r1, r1, #8
900289be:	437a      	muls	r2, r7
900289c0:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900289c4:	1c53      	adds	r3, r2, #1
900289c6:	4321      	orrs	r1, r4
900289c8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900289cc:	0c0a      	lsrs	r2, r1, #16
900289ce:	f3c1 2407 	ubfx	r4, r1, #8, #8
900289d2:	ea6f 2313 	mvn.w	r3, r3, lsr #8
900289d6:	b2c8      	uxtb	r0, r1
900289d8:	fb12 f207 	smulbb	r2, r2, r7
900289dc:	fb14 f407 	smulbb	r4, r4, r7
900289e0:	b2db      	uxtb	r3, r3
900289e2:	fb10 f007 	smulbb	r0, r0, r7
900289e6:	fb05 2503 	mla	r5, r5, r3, r2
900289ea:	10f2      	asrs	r2, r6, #3
900289ec:	00f6      	lsls	r6, r6, #3
900289ee:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
900289f2:	b2ad      	uxth	r5, r5
900289f4:	b2f6      	uxtb	r6, r6
900289f6:	fb02 4203 	mla	r2, r2, r3, r4
900289fa:	fb06 0303 	mla	r3, r6, r3, r0
900289fe:	b294      	uxth	r4, r2
90028a00:	b299      	uxth	r1, r3
90028a02:	1c6b      	adds	r3, r5, #1
90028a04:	1c62      	adds	r2, r4, #1
90028a06:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90028a0a:	1c4b      	adds	r3, r1, #1
90028a0c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90028a10:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90028a14:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90028a18:	0952      	lsrs	r2, r2, #5
90028a1a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90028a1e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90028a22:	432b      	orrs	r3, r5
90028a24:	4313      	orrs	r3, r2
90028a26:	9a02      	ldr	r2, [sp, #8]
90028a28:	8013      	strh	r3, [r2, #0]
90028a2a:	b005      	add	sp, #20
90028a2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028a30:	2500      	movs	r5, #0
90028a32:	e6ef      	b.n	90028814 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
90028a34:	2100      	movs	r1, #0
90028a36:	460d      	mov	r5, r1
90028a38:	e6f7      	b.n	9002882a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90028a3a:	2100      	movs	r1, #0
90028a3c:	e6f5      	b.n	9002882a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90028a3e:	4631      	mov	r1, r6
90028a40:	e6f3      	b.n	9002882a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90028a42:	2400      	movs	r4, #0
90028a44:	e702      	b.n	9002884c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
90028a46:	2200      	movs	r2, #0
90028a48:	4614      	mov	r4, r2
90028a4a:	e70b      	b.n	90028864 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90028a4c:	4602      	mov	r2, r0
90028a4e:	4604      	mov	r4, r0
90028a50:	e708      	b.n	90028864 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90028a52:	2200      	movs	r2, #0
90028a54:	e706      	b.n	90028864 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90028a56:	4632      	mov	r2, r6
90028a58:	e704      	b.n	90028864 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

90028a5a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90028a5a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028a5e:	b09d      	sub	sp, #116	@ 0x74
90028a60:	9219      	str	r2, [sp, #100]	@ 0x64
90028a62:	9307      	str	r3, [sp, #28]
90028a64:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
90028a66:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
90028a6a:	901b      	str	r0, [sp, #108]	@ 0x6c
90028a6c:	931a      	str	r3, [sp, #104]	@ 0x68
90028a6e:	6850      	ldr	r0, [r2, #4]
90028a70:	9117      	str	r1, [sp, #92]	@ 0x5c
90028a72:	6812      	ldr	r2, [r2, #0]
90028a74:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
90028a78:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
90028a7c:	fb00 1303 	mla	r3, r0, r3, r1
90028a80:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90028a84:	930a      	str	r3, [sp, #40]	@ 0x28
90028a86:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90028a88:	681b      	ldr	r3, [r3, #0]
90028a8a:	9310      	str	r3, [sp, #64]	@ 0x40
90028a8c:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
90028a90:	930b      	str	r3, [sp, #44]	@ 0x2c
90028a92:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90028a94:	2b00      	cmp	r3, #0
90028a96:	dc03      	bgt.n	90028aa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
90028a98:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90028a9a:	2b00      	cmp	r3, #0
90028a9c:	f340 8375 	ble.w	9002918a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90028aa0:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90028aa2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90028aa6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90028aaa:	1e48      	subs	r0, r1, #1
90028aac:	1e57      	subs	r7, r2, #1
90028aae:	9b07      	ldr	r3, [sp, #28]
90028ab0:	2b00      	cmp	r3, #0
90028ab2:	f340 818e 	ble.w	90028dd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90028ab6:	ea5f 4c24 	movs.w	ip, r4, asr #16
90028aba:	ea4f 4326 	mov.w	r3, r6, asr #16
90028abe:	d406      	bmi.n	90028ace <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90028ac0:	4584      	cmp	ip, r0
90028ac2:	da04      	bge.n	90028ace <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90028ac4:	2b00      	cmp	r3, #0
90028ac6:	db02      	blt.n	90028ace <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90028ac8:	42bb      	cmp	r3, r7
90028aca:	f2c0 8183 	blt.w	90028dd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
90028ace:	f11c 0c01 	adds.w	ip, ip, #1
90028ad2:	f100 8173 	bmi.w	90028dbc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90028ad6:	4561      	cmp	r1, ip
90028ad8:	f2c0 8170 	blt.w	90028dbc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90028adc:	3301      	adds	r3, #1
90028ade:	f100 816d 	bmi.w	90028dbc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90028ae2:	429a      	cmp	r2, r3
90028ae4:	f2c0 816a 	blt.w	90028dbc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90028ae8:	9b07      	ldr	r3, [sp, #28]
90028aea:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90028aec:	9318      	str	r3, [sp, #96]	@ 0x60
90028aee:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90028af0:	2b00      	cmp	r3, #0
90028af2:	f340 818c 	ble.w	90028e0e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
90028af6:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
90028af8:	ea4f 4c26 	mov.w	ip, r6, asr #16
90028afc:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90028afe:	f3c4 3003 	ubfx	r0, r4, #12, #4
90028b02:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90028b06:	1422      	asrs	r2, r4, #16
90028b08:	f3c6 3103 	ubfx	r1, r6, #12, #4
90028b0c:	689b      	ldr	r3, [r3, #8]
90028b0e:	f100 81cd 	bmi.w	90028eac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90028b12:	f103 38ff 	add.w	r8, r3, #4294967295
90028b16:	4542      	cmp	r2, r8
90028b18:	f280 81c8 	bge.w	90028eac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90028b1c:	f1bc 0f00 	cmp.w	ip, #0
90028b20:	f2c0 81c4 	blt.w	90028eac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90028b24:	f10e 38ff 	add.w	r8, lr, #4294967295
90028b28:	45c4      	cmp	ip, r8
90028b2a:	f280 81bf 	bge.w	90028eac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90028b2e:	b21b      	sxth	r3, r3
90028b30:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90028b32:	fb0c 2203 	mla	r2, ip, r3, r2
90028b36:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90028b3a:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90028b3e:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90028b42:	2800      	cmp	r0, #0
90028b44:	f000 81a9 	beq.w	90028e9a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
90028b48:	f8d8 5004 	ldr.w	r5, [r8, #4]
90028b4c:	950c      	str	r5, [sp, #48]	@ 0x30
90028b4e:	0e2d      	lsrs	r5, r5, #24
90028b50:	9513      	str	r5, [sp, #76]	@ 0x4c
90028b52:	b181      	cbz	r1, 90028b76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90028b54:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
90028b58:	3b01      	subs	r3, #1
90028b5a:	009b      	lsls	r3, r3, #2
90028b5c:	3304      	adds	r3, #4
90028b5e:	eb08 0c03 	add.w	ip, r8, r3
90028b62:	f858 3003 	ldr.w	r3, [r8, r3]
90028b66:	9308      	str	r3, [sp, #32]
90028b68:	0e1b      	lsrs	r3, r3, #24
90028b6a:	9311      	str	r3, [sp, #68]	@ 0x44
90028b6c:	f8dc 3004 	ldr.w	r3, [ip, #4]
90028b70:	930d      	str	r3, [sp, #52]	@ 0x34
90028b72:	0e1b      	lsrs	r3, r3, #24
90028b74:	9314      	str	r3, [sp, #80]	@ 0x50
90028b76:	b280      	uxth	r0, r0
90028b78:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90028b7a:	b289      	uxth	r1, r1
90028b7c:	fb00 f901 	mul.w	r9, r0, r1
90028b80:	0100      	lsls	r0, r0, #4
90028b82:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90028b86:	eba0 0809 	sub.w	r8, r0, r9
90028b8a:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
90028b8e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90028b90:	b289      	uxth	r1, r1
90028b92:	fa1f f888 	uxth.w	r8, r8
90028b96:	1a5b      	subs	r3, r3, r1
90028b98:	fb08 f000 	mul.w	r0, r8, r0
90028b9c:	b29b      	uxth	r3, r3
90028b9e:	fb03 000e 	mla	r0, r3, lr, r0
90028ba2:	fb01 0005 	mla	r0, r1, r5, r0
90028ba6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90028ba8:	fb09 0005 	mla	r0, r9, r5, r0
90028bac:	f3c0 2007 	ubfx	r0, r0, #8, #8
90028bb0:	2800      	cmp	r0, #0
90028bb2:	f000 80fa 	beq.w	90028daa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90028bb6:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90028bba:	d01b      	beq.n	90028bf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
90028bbc:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
90028bc0:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90028bc4:	fb0e fa0a 	mul.w	sl, lr, sl
90028bc8:	fb0e fe02 	mul.w	lr, lr, r2
90028bcc:	ea4f 221a 	mov.w	r2, sl, lsr #8
90028bd0:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90028bd4:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
90028bd8:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90028bdc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90028be0:	4452      	add	r2, sl
90028be2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028be6:	0a12      	lsrs	r2, r2, #8
90028be8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90028bec:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90028bf0:	ea42 020c 	orr.w	r2, r2, ip
90028bf4:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90028bf6:	2dff      	cmp	r5, #255	@ 0xff
90028bf8:	d021      	beq.n	90028c3e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
90028bfa:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90028bfc:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90028c00:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90028c02:	fb05 fb0b 	mul.w	fp, r5, fp
90028c06:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90028c08:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90028c0c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90028c0e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90028c12:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90028c16:	fb05 fa0a 	mul.w	sl, r5, sl
90028c1a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90028c1e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90028c22:	44de      	add	lr, fp
90028c24:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90028c28:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90028c2c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90028c30:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90028c34:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90028c38:	ea4e 050a 	orr.w	r5, lr, sl
90028c3c:	950c      	str	r5, [sp, #48]	@ 0x30
90028c3e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90028c40:	2dff      	cmp	r5, #255	@ 0xff
90028c42:	d021      	beq.n	90028c88 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
90028c44:	9d08      	ldr	r5, [sp, #32]
90028c46:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90028c4a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90028c4c:	fb05 fb0b 	mul.w	fp, r5, fp
90028c50:	9d08      	ldr	r5, [sp, #32]
90028c52:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90028c56:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90028c58:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90028c5c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90028c60:	fb05 fa0a 	mul.w	sl, r5, sl
90028c64:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90028c68:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90028c6c:	44de      	add	lr, fp
90028c6e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90028c72:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90028c76:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90028c7a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90028c7e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90028c82:	ea4e 050a 	orr.w	r5, lr, sl
90028c86:	9508      	str	r5, [sp, #32]
90028c88:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90028c8a:	2dff      	cmp	r5, #255	@ 0xff
90028c8c:	d021      	beq.n	90028cd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
90028c8e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90028c90:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90028c94:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90028c96:	fb05 fb0b 	mul.w	fp, r5, fp
90028c9a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90028c9c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90028ca0:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90028ca2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90028ca6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90028caa:	fb05 fa0a 	mul.w	sl, r5, sl
90028cae:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90028cb2:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90028cb6:	44de      	add	lr, fp
90028cb8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90028cbc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90028cc0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90028cc4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90028cc8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90028ccc:	ea4e 050a 	orr.w	r5, lr, sl
90028cd0:	950d      	str	r5, [sp, #52]	@ 0x34
90028cd2:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90028cd4:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
90028cd8:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90028cdc:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90028ce0:	9d08      	ldr	r5, [sp, #32]
90028ce2:	fb08 fc0c 	mul.w	ip, r8, ip
90028ce6:	fb03 cc0e 	mla	ip, r3, lr, ip
90028cea:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90028cee:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90028cf0:	fb01 cc0e 	mla	ip, r1, lr, ip
90028cf4:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90028cf8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90028cfa:	fb09 cc0e 	mla	ip, r9, lr, ip
90028cfe:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90028d02:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90028d04:	fb08 f80e 	mul.w	r8, r8, lr
90028d08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028d0c:	fb03 8202 	mla	r2, r3, r2, r8
90028d10:	9b08      	ldr	r3, [sp, #32]
90028d12:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90028d16:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
90028d1a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90028d1c:	fb01 220a 	mla	r2, r1, sl, r2
90028d20:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
90028d24:	883b      	ldrh	r3, [r7, #0]
90028d26:	fb09 2901 	mla	r9, r9, r1, r2
90028d2a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90028d2c:	1219      	asrs	r1, r3, #8
90028d2e:	4342      	muls	r2, r0
90028d30:	ea4f 2919 	mov.w	r9, r9, lsr #8
90028d34:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90028d38:	1c50      	adds	r0, r2, #1
90028d3a:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90028d3e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90028d42:	ea4c 0c09 	orr.w	ip, ip, r9
90028d46:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90028d4a:	ea4f 421c 	mov.w	r2, ip, lsr #16
90028d4e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
90028d52:	fa5f fc8c 	uxtb.w	ip, ip
90028d56:	fb12 f205 	smulbb	r2, r2, r5
90028d5a:	b2c0      	uxtb	r0, r0
90028d5c:	fb1c fc05 	smulbb	ip, ip, r5
90028d60:	fb01 2100 	mla	r1, r1, r0, r2
90028d64:	10da      	asrs	r2, r3, #3
90028d66:	fb1e fe05 	smulbb	lr, lr, r5
90028d6a:	00db      	lsls	r3, r3, #3
90028d6c:	b289      	uxth	r1, r1
90028d6e:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90028d72:	b2db      	uxtb	r3, r3
90028d74:	fb02 e200 	mla	r2, r2, r0, lr
90028d78:	fb03 c300 	mla	r3, r3, r0, ip
90028d7c:	b292      	uxth	r2, r2
90028d7e:	fa1f fc83 	uxth.w	ip, r3
90028d82:	1c4b      	adds	r3, r1, #1
90028d84:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90028d88:	f10c 0301 	add.w	r3, ip, #1
90028d8c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
90028d90:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90028d94:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90028d98:	430b      	orrs	r3, r1
90028d9a:	1c51      	adds	r1, r2, #1
90028d9c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90028da0:	0952      	lsrs	r2, r2, #5
90028da2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90028da6:	4313      	orrs	r3, r2
90028da8:	803b      	strh	r3, [r7, #0]
90028daa:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90028dac:	3702      	adds	r7, #2
90028dae:	441c      	add	r4, r3
90028db0:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90028db2:	441e      	add	r6, r3
90028db4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90028db6:	3b01      	subs	r3, #1
90028db8:	9318      	str	r3, [sp, #96]	@ 0x60
90028dba:	e698      	b.n	90028aee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90028dbc:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90028dbe:	441c      	add	r4, r3
90028dc0:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90028dc2:	441e      	add	r6, r3
90028dc4:	9b07      	ldr	r3, [sp, #28]
90028dc6:	3b01      	subs	r3, #1
90028dc8:	9307      	str	r3, [sp, #28]
90028dca:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90028dcc:	3302      	adds	r3, #2
90028dce:	930a      	str	r3, [sp, #40]	@ 0x28
90028dd0:	e66d      	b.n	90028aae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
90028dd2:	d023      	beq.n	90028e1c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
90028dd4:	9b07      	ldr	r3, [sp, #28]
90028dd6:	9829      	ldr	r0, [sp, #164]	@ 0xa4
90028dd8:	3b01      	subs	r3, #1
90028dda:	fb00 4003 	mla	r0, r0, r3, r4
90028dde:	1400      	asrs	r0, r0, #16
90028de0:	f53f ae82 	bmi.w	90028ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90028de4:	3901      	subs	r1, #1
90028de6:	4288      	cmp	r0, r1
90028de8:	f6bf ae7e 	bge.w	90028ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90028dec:	992a      	ldr	r1, [sp, #168]	@ 0xa8
90028dee:	fb01 6303 	mla	r3, r1, r3, r6
90028df2:	141b      	asrs	r3, r3, #16
90028df4:	f53f ae78 	bmi.w	90028ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90028df8:	3a01      	subs	r2, #1
90028dfa:	4293      	cmp	r3, r2
90028dfc:	f6bf ae74 	bge.w	90028ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90028e00:	f8dd b01c 	ldr.w	fp, [sp, #28]
90028e04:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
90028e08:	f1bb 0f00 	cmp.w	fp, #0
90028e0c:	dc6c      	bgt.n	90028ee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90028e0e:	9b07      	ldr	r3, [sp, #28]
90028e10:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90028e14:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90028e16:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90028e1a:	930a      	str	r3, [sp, #40]	@ 0x28
90028e1c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90028e1e:	2b00      	cmp	r3, #0
90028e20:	f340 81b3 	ble.w	9002918a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90028e24:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90028e28:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90028e2a:	ee30 0a04 	vadd.f32	s0, s0, s8
90028e2e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90028e32:	eef0 6a62 	vmov.f32	s13, s5
90028e36:	eec7 7a00 	vdiv.f32	s15, s14, s0
90028e3a:	ee31 1a05 	vadd.f32	s2, s2, s10
90028e3e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90028e42:	ee16 4a90 	vmov	r4, s13
90028e46:	eef0 6a43 	vmov.f32	s13, s6
90028e4a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90028e4e:	ee16 6a90 	vmov	r6, s13
90028e52:	ee20 7aa7 	vmul.f32	s14, s1, s15
90028e56:	ee61 7a27 	vmul.f32	s15, s2, s15
90028e5a:	ee77 2a62 	vsub.f32	s5, s14, s5
90028e5e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90028e62:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90028e66:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90028e6a:	ee12 2a90 	vmov	r2, s5
90028e6e:	eef0 2a47 	vmov.f32	s5, s14
90028e72:	fb92 f3f3 	sdiv	r3, r2, r3
90028e76:	ee13 2a10 	vmov	r2, s6
90028e7a:	9329      	str	r3, [sp, #164]	@ 0xa4
90028e7c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90028e7e:	eeb0 3a67 	vmov.f32	s6, s15
90028e82:	fb92 f3f3 	sdiv	r3, r2, r3
90028e86:	932a      	str	r3, [sp, #168]	@ 0xa8
90028e88:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90028e8a:	9a19      	ldr	r2, [sp, #100]	@ 0x64
90028e8c:	3b01      	subs	r3, #1
90028e8e:	9317      	str	r3, [sp, #92]	@ 0x5c
90028e90:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90028e92:	bf08      	it	eq
90028e94:	4613      	moveq	r3, r2
90028e96:	9307      	str	r3, [sp, #28]
90028e98:	e5fb      	b.n	90028a92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90028e9a:	2900      	cmp	r1, #0
90028e9c:	f43f ae6b 	beq.w	90028b76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90028ea0:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90028ea4:	9308      	str	r3, [sp, #32]
90028ea6:	0e1b      	lsrs	r3, r3, #24
90028ea8:	9311      	str	r3, [sp, #68]	@ 0x44
90028eaa:	e664      	b.n	90028b76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90028eac:	f112 0801 	adds.w	r8, r2, #1
90028eb0:	f53f af7b 	bmi.w	90028daa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90028eb4:	4543      	cmp	r3, r8
90028eb6:	f6ff af78 	blt.w	90028daa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90028eba:	f11c 0801 	adds.w	r8, ip, #1
90028ebe:	f53f af74 	bmi.w	90028daa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90028ec2:	45c6      	cmp	lr, r8
90028ec4:	f6ff af71 	blt.w	90028daa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90028ec8:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
90028eca:	b21b      	sxth	r3, r3
90028ecc:	9201      	str	r2, [sp, #4]
90028ece:	fa0f f28e 	sxth.w	r2, lr
90028ed2:	e9cd 1504 	strd	r1, r5, [sp, #16]
90028ed6:	e9cd c002 	strd	ip, r0, [sp, #8]
90028eda:	9200      	str	r2, [sp, #0]
90028edc:	4639      	mov	r1, r7
90028ede:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90028ee0:	981b      	ldr	r0, [sp, #108]	@ 0x6c
90028ee2:	f7ff fc79 	bl	900287d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
90028ee6:	e760      	b.n	90028daa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90028ee8:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90028eea:	1427      	asrs	r7, r4, #16
90028eec:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90028eee:	f3c4 3203 	ubfx	r2, r4, #12, #4
90028ef2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90028ef6:	1433      	asrs	r3, r6, #16
90028ef8:	f3c6 3003 	ubfx	r0, r6, #12, #4
90028efc:	fb01 7303 	mla	r3, r1, r3, r7
90028f00:	eb05 0783 	add.w	r7, r5, r3, lsl #2
90028f04:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90028f08:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90028f0c:	2a00      	cmp	r2, #0
90028f0e:	f000 8133 	beq.w	90029178 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
90028f12:	687d      	ldr	r5, [r7, #4]
90028f14:	950e      	str	r5, [sp, #56]	@ 0x38
90028f16:	0e2d      	lsrs	r5, r5, #24
90028f18:	9515      	str	r5, [sp, #84]	@ 0x54
90028f1a:	b178      	cbz	r0, 90028f3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90028f1c:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
90028f20:	3901      	subs	r1, #1
90028f22:	0089      	lsls	r1, r1, #2
90028f24:	3104      	adds	r1, #4
90028f26:	eb07 0e01 	add.w	lr, r7, r1
90028f2a:	5879      	ldr	r1, [r7, r1]
90028f2c:	9109      	str	r1, [sp, #36]	@ 0x24
90028f2e:	0e09      	lsrs	r1, r1, #24
90028f30:	9112      	str	r1, [sp, #72]	@ 0x48
90028f32:	f8de 1004 	ldr.w	r1, [lr, #4]
90028f36:	910f      	str	r1, [sp, #60]	@ 0x3c
90028f38:	0e09      	lsrs	r1, r1, #24
90028f3a:	9116      	str	r1, [sp, #88]	@ 0x58
90028f3c:	b292      	uxth	r2, r2
90028f3e:	9915      	ldr	r1, [sp, #84]	@ 0x54
90028f40:	b280      	uxth	r0, r0
90028f42:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90028f44:	fb02 f800 	mul.w	r8, r2, r0
90028f48:	0112      	lsls	r2, r2, #4
90028f4a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90028f4e:	eba2 0e08 	sub.w	lr, r2, r8
90028f52:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90028f56:	b280      	uxth	r0, r0
90028f58:	fa1f fe8e 	uxth.w	lr, lr
90028f5c:	1a12      	subs	r2, r2, r0
90028f5e:	fb0e f101 	mul.w	r1, lr, r1
90028f62:	b292      	uxth	r2, r2
90028f64:	fb02 110c 	mla	r1, r2, ip, r1
90028f68:	fb00 1105 	mla	r1, r0, r5, r1
90028f6c:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90028f6e:	fb08 1105 	mla	r1, r8, r5, r1
90028f72:	f3c1 2107 	ubfx	r1, r1, #8, #8
90028f76:	2900      	cmp	r1, #0
90028f78:	f000 80f5 	beq.w	90029166 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
90028f7c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90028f80:	d019      	beq.n	90028fb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
90028f82:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90028f86:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90028f8a:	fb0c fa0a 	mul.w	sl, ip, sl
90028f8e:	fb0c fc03 	mul.w	ip, ip, r3
90028f92:	ea4f 231a 	mov.w	r3, sl, lsr #8
90028f96:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90028f9a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90028f9e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90028fa2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90028fa6:	4453      	add	r3, sl
90028fa8:	0a3f      	lsrs	r7, r7, #8
90028faa:	0a1b      	lsrs	r3, r3, #8
90028fac:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90028fb0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90028fb4:	433b      	orrs	r3, r7
90028fb6:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90028fb8:	2dff      	cmp	r5, #255	@ 0xff
90028fba:	d020      	beq.n	90028ffe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
90028fbc:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90028fbe:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90028fc2:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90028fc4:	436f      	muls	r7, r5
90028fc6:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90028fc8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90028fcc:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90028fd0:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90028fd2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90028fd6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90028fda:	fb05 fa0a 	mul.w	sl, r5, sl
90028fde:	44bc      	add	ip, r7
90028fe0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90028fe4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028fe8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90028fec:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90028ff0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90028ff4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90028ff8:	ea4c 050a 	orr.w	r5, ip, sl
90028ffc:	950e      	str	r5, [sp, #56]	@ 0x38
90028ffe:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90029000:	2dff      	cmp	r5, #255	@ 0xff
90029002:	d020      	beq.n	90029046 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
90029004:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90029006:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
9002900a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9002900c:	436f      	muls	r7, r5
9002900e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90029010:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90029014:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90029018:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9002901a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002901e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90029022:	fb05 fa0a 	mul.w	sl, r5, sl
90029026:	44bc      	add	ip, r7
90029028:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
9002902c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90029030:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90029034:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90029038:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002903c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90029040:	ea4c 050a 	orr.w	r5, ip, sl
90029044:	9509      	str	r5, [sp, #36]	@ 0x24
90029046:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90029048:	2dff      	cmp	r5, #255	@ 0xff
9002904a:	d020      	beq.n	9002908e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
9002904c:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
9002904e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90029052:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90029054:	436f      	muls	r7, r5
90029056:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90029058:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002905c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90029060:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90029062:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90029066:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002906a:	fb05 fa0a 	mul.w	sl, r5, sl
9002906e:	44bc      	add	ip, r7
90029070:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90029074:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90029078:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9002907c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90029080:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90029084:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90029088:	ea4c 050a 	orr.w	r5, ip, sl
9002908c:	950f      	str	r5, [sp, #60]	@ 0x3c
9002908e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90029090:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90029094:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90029098:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
9002909c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
9002909e:	fb0e f707 	mul.w	r7, lr, r7
900290a2:	fb02 770c 	mla	r7, r2, ip, r7
900290a6:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900290aa:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900290ac:	fb00 770c 	mla	r7, r0, ip, r7
900290b0:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900290b4:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900290b6:	fb08 770c 	mla	r7, r8, ip, r7
900290ba:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
900290be:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900290c0:	fb0e fe0c 	mul.w	lr, lr, ip
900290c4:	0a3f      	lsrs	r7, r7, #8
900290c6:	fb02 e303 	mla	r3, r2, r3, lr
900290ca:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900290cc:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
900290d0:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
900290d4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900290d6:	fb00 330a 	mla	r3, r0, sl, r3
900290da:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
900290de:	f8b9 0000 	ldrh.w	r0, [r9]
900290e2:	fb08 3c0c 	mla	ip, r8, ip, r3
900290e6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900290e8:	1202      	asrs	r2, r0, #8
900290ea:	4359      	muls	r1, r3
900290ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900290f0:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
900290f4:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900290f8:	1c4b      	adds	r3, r1, #1
900290fa:	ea47 070c 	orr.w	r7, r7, ip
900290fe:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90029102:	0c3b      	lsrs	r3, r7, #16
90029104:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90029108:	f3c7 2c07 	ubfx	ip, r7, #8, #8
9002910c:	b2ff      	uxtb	r7, r7
9002910e:	fb13 f305 	smulbb	r3, r3, r5
90029112:	b2c9      	uxtb	r1, r1
90029114:	fb17 f705 	smulbb	r7, r7, r5
90029118:	fb02 3201 	mla	r2, r2, r1, r3
9002911c:	10c3      	asrs	r3, r0, #3
9002911e:	fb1c fc05 	smulbb	ip, ip, r5
90029122:	00c0      	lsls	r0, r0, #3
90029124:	b292      	uxth	r2, r2
90029126:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
9002912a:	b2c0      	uxtb	r0, r0
9002912c:	fb03 c301 	mla	r3, r3, r1, ip
90029130:	fb00 7001 	mla	r0, r0, r1, r7
90029134:	1c51      	adds	r1, r2, #1
90029136:	b29b      	uxth	r3, r3
90029138:	b280      	uxth	r0, r0
9002913a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9002913e:	f100 0c01 	add.w	ip, r0, #1
90029142:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
90029146:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
9002914a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9002914e:	ea4c 0202 	orr.w	r2, ip, r2
90029152:	f103 0c01 	add.w	ip, r3, #1
90029156:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
9002915a:	095b      	lsrs	r3, r3, #5
9002915c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90029160:	431a      	orrs	r2, r3
90029162:	f8a9 2000 	strh.w	r2, [r9]
90029166:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90029168:	f109 0902 	add.w	r9, r9, #2
9002916c:	f10b 3bff 	add.w	fp, fp, #4294967295
90029170:	441c      	add	r4, r3
90029172:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90029174:	441e      	add	r6, r3
90029176:	e647      	b.n	90028e08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
90029178:	2800      	cmp	r0, #0
9002917a:	f43f aedf 	beq.w	90028f3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
9002917e:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
90029182:	9109      	str	r1, [sp, #36]	@ 0x24
90029184:	0e09      	lsrs	r1, r1, #24
90029186:	9112      	str	r1, [sp, #72]	@ 0x48
90029188:	e6d8      	b.n	90028f3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
9002918a:	b01d      	add	sp, #116	@ 0x74
9002918c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90029190 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
90029190:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90029194:	b085      	sub	sp, #20
90029196:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
9002919a:	9102      	str	r1, [sp, #8]
9002919c:	2c00      	cmp	r4, #0
9002919e:	fb04 7103 	mla	r1, r4, r3, r7
900291a2:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
900291a6:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
900291aa:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
900291ae:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
900291b2:	f2c0 810c 	blt.w	900293ce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
900291b6:	45a6      	cmp	lr, r4
900291b8:	f340 8109 	ble.w	900293ce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
900291bc:	2f00      	cmp	r7, #0
900291be:	f2c0 8104 	blt.w	900293ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
900291c2:	42bb      	cmp	r3, r7
900291c4:	f340 8101 	ble.w	900293ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
900291c8:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
900291cc:	1c7a      	adds	r2, r7, #1
900291ce:	f100 8101 	bmi.w	900293d4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
900291d2:	4293      	cmp	r3, r2
900291d4:	f340 80fe 	ble.w	900293d4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
900291d8:	2e00      	cmp	r6, #0
900291da:	f000 80fd 	beq.w	900293d8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
900291de:	f8dc 1004 	ldr.w	r1, [ip, #4]
900291e2:	3401      	adds	r4, #1
900291e4:	f100 80fc 	bmi.w	900293e0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
900291e8:	45a6      	cmp	lr, r4
900291ea:	f340 80f9 	ble.w	900293e0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
900291ee:	2800      	cmp	r0, #0
900291f0:	f000 80f9 	beq.w	900293e6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
900291f4:	2f00      	cmp	r7, #0
900291f6:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
900291fa:	f2c0 80ef 	blt.w	900293dc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
900291fe:	42bb      	cmp	r3, r7
90029200:	f340 80ec 	ble.w	900293dc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90029204:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90029208:	3701      	adds	r7, #1
9002920a:	f100 80ef 	bmi.w	900293ec <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
9002920e:	42bb      	cmp	r3, r7
90029210:	f340 80ec 	ble.w	900293ec <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90029214:	2e00      	cmp	r6, #0
90029216:	f000 80eb 	beq.w	900293f0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
9002921a:	6852      	ldr	r2, [r2, #4]
9002921c:	b2b6      	uxth	r6, r6
9002921e:	b280      	uxth	r0, r0
90029220:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90029224:	fb00 fe06 	mul.w	lr, r0, r6
90029228:	0136      	lsls	r6, r6, #4
9002922a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
9002922e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90029232:	eba6 070e 	sub.w	r7, r6, lr
90029236:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
9002923a:	ea4f 6914 	mov.w	r9, r4, lsr #24
9002923e:	b280      	uxth	r0, r0
90029240:	b2bf      	uxth	r7, r7
90029242:	1a1b      	subs	r3, r3, r0
90029244:	ea4f 6812 	mov.w	r8, r2, lsr #24
90029248:	fb07 f60a 	mul.w	r6, r7, sl
9002924c:	b29b      	uxth	r3, r3
9002924e:	fb0b 6603 	mla	r6, fp, r3, r6
90029252:	fb00 6609 	mla	r6, r0, r9, r6
90029256:	fb0e 6608 	mla	r6, lr, r8, r6
9002925a:	f3c6 2607 	ubfx	r6, r6, #8, #8
9002925e:	9600      	str	r6, [sp, #0]
90029260:	2e00      	cmp	r6, #0
90029262:	f000 80af 	beq.w	900293c4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
90029266:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
9002926a:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
9002926e:	9e02      	ldr	r6, [sp, #8]
90029270:	fb0b fc0c 	mul.w	ip, fp, ip
90029274:	fb0b f505 	mul.w	r5, fp, r5
90029278:	8836      	ldrh	r6, [r6, #0]
9002927a:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
9002927e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90029282:	9501      	str	r5, [sp, #4]
90029284:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
90029288:	44dc      	add	ip, fp
9002928a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002928e:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
90029292:	9503      	str	r5, [sp, #12]
90029294:	9d01      	ldr	r5, [sp, #4]
90029296:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
9002929a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9002929e:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
900292a2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900292a6:	fb0a fc0c 	mul.w	ip, sl, ip
900292aa:	ea4f 2b15 	mov.w	fp, r5, lsr #8
900292ae:	fb0a fa01 	mul.w	sl, sl, r1
900292b2:	ea4f 251c 	mov.w	r5, ip, lsr #8
900292b6:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900292ba:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
900292be:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900292c2:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
900292c6:	4465      	add	r5, ip
900292c8:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900292cc:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
900292d0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900292d4:	fb09 fc0c 	mul.w	ip, r9, ip
900292d8:	0a2d      	lsrs	r5, r5, #8
900292da:	fb09 f904 	mul.w	r9, r9, r4
900292de:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900292e2:	ea4f 211c 	mov.w	r1, ip, lsr #8
900292e6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900292ea:	f509 7480 	add.w	r4, r9, #256	@ 0x100
900292ee:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900292f2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
900292f6:	437d      	muls	r5, r7
900292f8:	eb04 2919 	add.w	r9, r4, r9, lsr #8
900292fc:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90029300:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90029304:	4461      	add	r1, ip
90029306:	fb08 f404 	mul.w	r4, r8, r4
9002930a:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002930e:	fb08 f802 	mul.w	r8, r8, r2
90029312:	0a09      	lsrs	r1, r1, #8
90029314:	0a22      	lsrs	r2, r4, #8
90029316:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
9002931a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
9002931e:	fb07 f70a 	mul.w	r7, r7, sl
90029322:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90029326:	4414      	add	r4, r2
90029328:	f508 7280 	add.w	r2, r8, #256	@ 0x100
9002932c:	0a24      	lsrs	r4, r4, #8
9002932e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90029332:	9a03      	ldr	r2, [sp, #12]
90029334:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
90029338:	fb02 5503 	mla	r5, r2, r3, r5
9002933c:	ea4f 2818 	mov.w	r8, r8, lsr #8
90029340:	fb04 540e 	mla	r4, r4, lr, r5
90029344:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
90029348:	fb01 4100 	mla	r1, r1, r0, r4
9002934c:	0a09      	lsrs	r1, r1, #8
9002934e:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
90029352:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
90029356:	fb03 7101 	mla	r1, r3, r1, r7
9002935a:	9b00      	ldr	r3, [sp, #0]
9002935c:	fb0e 1e08 	mla	lr, lr, r8, r1
90029360:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
90029364:	43da      	mvns	r2, r3
90029366:	1233      	asrs	r3, r6, #8
90029368:	fb00 e101 	mla	r1, r0, r1, lr
9002936c:	10f0      	asrs	r0, r6, #3
9002936e:	b2d2      	uxtb	r2, r2
90029370:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90029374:	0a09      	lsrs	r1, r1, #8
90029376:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9002937a:	00f6      	lsls	r6, r6, #3
9002937c:	4353      	muls	r3, r2
9002937e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90029382:	4350      	muls	r0, r2
90029384:	b2f6      	uxtb	r6, r6
90029386:	4321      	orrs	r1, r4
90029388:	4356      	muls	r6, r2
9002938a:	1c5a      	adds	r2, r3, #1
9002938c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90029390:	0c0b      	lsrs	r3, r1, #16
90029392:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90029396:	1c42      	adds	r2, r0, #1
90029398:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002939c:	0a0a      	lsrs	r2, r1, #8
9002939e:	021b      	lsls	r3, r3, #8
900293a0:	eb02 2210 	add.w	r2, r2, r0, lsr #8
900293a4:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
900293a8:	00d2      	lsls	r2, r2, #3
900293aa:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900293ae:	4313      	orrs	r3, r2
900293b0:	1c72      	adds	r2, r6, #1
900293b2:	eb02 2616 	add.w	r6, r2, r6, lsr #8
900293b6:	eb01 2116 	add.w	r1, r1, r6, lsr #8
900293ba:	f3c1 01c4 	ubfx	r1, r1, #3, #5
900293be:	4319      	orrs	r1, r3
900293c0:	9b02      	ldr	r3, [sp, #8]
900293c2:	8019      	strh	r1, [r3, #0]
900293c4:	b005      	add	sp, #20
900293c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900293ca:	2500      	movs	r5, #0
900293cc:	e6fe      	b.n	900291cc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
900293ce:	2100      	movs	r1, #0
900293d0:	460d      	mov	r5, r1
900293d2:	e706      	b.n	900291e2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
900293d4:	2100      	movs	r1, #0
900293d6:	e704      	b.n	900291e2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
900293d8:	4631      	mov	r1, r6
900293da:	e702      	b.n	900291e2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
900293dc:	2400      	movs	r4, #0
900293de:	e713      	b.n	90029208 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
900293e0:	2200      	movs	r2, #0
900293e2:	4614      	mov	r4, r2
900293e4:	e71a      	b.n	9002921c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
900293e6:	4602      	mov	r2, r0
900293e8:	4604      	mov	r4, r0
900293ea:	e717      	b.n	9002921c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
900293ec:	2200      	movs	r2, #0
900293ee:	e715      	b.n	9002921c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
900293f0:	4632      	mov	r2, r6
900293f2:	e713      	b.n	9002921c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

900293f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900293f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900293f8:	b09b      	sub	sp, #108	@ 0x6c
900293fa:	9218      	str	r2, [sp, #96]	@ 0x60
900293fc:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
900293fe:	9019      	str	r0, [sp, #100]	@ 0x64
90029400:	9116      	str	r1, [sp, #88]	@ 0x58
90029402:	6850      	ldr	r0, [r2, #4]
90029404:	9307      	str	r3, [sp, #28]
90029406:	6812      	ldr	r2, [r2, #0]
90029408:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
9002940c:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
90029410:	fb00 1303 	mla	r3, r0, r3, r1
90029414:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90029418:	930a      	str	r3, [sp, #40]	@ 0x28
9002941a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
9002941c:	681b      	ldr	r3, [r3, #0]
9002941e:	930f      	str	r3, [sp, #60]	@ 0x3c
90029420:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90029422:	2b00      	cmp	r3, #0
90029424:	dc03      	bgt.n	9002942e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90029426:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90029428:	2b00      	cmp	r3, #0
9002942a:	f340 8387 	ble.w	90029b3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
9002942e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90029430:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90029434:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90029438:	1e48      	subs	r0, r1, #1
9002943a:	1e57      	subs	r7, r2, #1
9002943c:	9b07      	ldr	r3, [sp, #28]
9002943e:	2b00      	cmp	r3, #0
90029440:	f340 8166 	ble.w	90029710 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90029444:	ea5f 4c24 	movs.w	ip, r4, asr #16
90029448:	ea4f 4326 	mov.w	r3, r6, asr #16
9002944c:	d406      	bmi.n	9002945c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9002944e:	4584      	cmp	ip, r0
90029450:	da04      	bge.n	9002945c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90029452:	2b00      	cmp	r3, #0
90029454:	db02      	blt.n	9002945c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90029456:	42bb      	cmp	r3, r7
90029458:	f2c0 815b 	blt.w	90029712 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9002945c:	f11c 0c01 	adds.w	ip, ip, #1
90029460:	f100 814b 	bmi.w	900296fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90029464:	4561      	cmp	r1, ip
90029466:	f2c0 8148 	blt.w	900296fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
9002946a:	3301      	adds	r3, #1
9002946c:	f100 8145 	bmi.w	900296fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90029470:	429a      	cmp	r2, r3
90029472:	f2c0 8142 	blt.w	900296fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90029476:	9b07      	ldr	r3, [sp, #28]
90029478:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
9002947a:	9317      	str	r3, [sp, #92]	@ 0x5c
9002947c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
9002947e:	2b00      	cmp	r3, #0
90029480:	f340 8165 	ble.w	9002974e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90029484:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
90029486:	ea4f 4c26 	mov.w	ip, r6, asr #16
9002948a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
9002948c:	f3c4 3103 	ubfx	r1, r4, #12, #4
90029490:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90029494:	1422      	asrs	r2, r4, #16
90029496:	f3c6 3003 	ubfx	r0, r6, #12, #4
9002949a:	689b      	ldr	r3, [r3, #8]
9002949c:	f100 81d5 	bmi.w	9002984a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900294a0:	f103 38ff 	add.w	r8, r3, #4294967295
900294a4:	4542      	cmp	r2, r8
900294a6:	f280 81d0 	bge.w	9002984a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900294aa:	f1bc 0f00 	cmp.w	ip, #0
900294ae:	f2c0 81cc 	blt.w	9002984a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900294b2:	f10e 38ff 	add.w	r8, lr, #4294967295
900294b6:	45c4      	cmp	ip, r8
900294b8:	f280 81c7 	bge.w	9002984a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900294bc:	b21b      	sxth	r3, r3
900294be:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900294c0:	fb0c 2203 	mla	r2, ip, r3, r2
900294c4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
900294c8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
900294cc:	ea4f 6e12 	mov.w	lr, r2, lsr #24
900294d0:	2900      	cmp	r1, #0
900294d2:	f000 8182 	beq.w	900297da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
900294d6:	f8d8 5004 	ldr.w	r5, [r8, #4]
900294da:	950b      	str	r5, [sp, #44]	@ 0x2c
900294dc:	0e2d      	lsrs	r5, r5, #24
900294de:	9512      	str	r5, [sp, #72]	@ 0x48
900294e0:	b180      	cbz	r0, 90029504 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
900294e2:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
900294e6:	3b01      	subs	r3, #1
900294e8:	009b      	lsls	r3, r3, #2
900294ea:	3304      	adds	r3, #4
900294ec:	eb08 0c03 	add.w	ip, r8, r3
900294f0:	f858 3003 	ldr.w	r3, [r8, r3]
900294f4:	9308      	str	r3, [sp, #32]
900294f6:	0e1b      	lsrs	r3, r3, #24
900294f8:	9310      	str	r3, [sp, #64]	@ 0x40
900294fa:	f8dc 3004 	ldr.w	r3, [ip, #4]
900294fe:	930c      	str	r3, [sp, #48]	@ 0x30
90029500:	0e1b      	lsrs	r3, r3, #24
90029502:	9313      	str	r3, [sp, #76]	@ 0x4c
90029504:	b289      	uxth	r1, r1
90029506:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90029508:	b280      	uxth	r0, r0
9002950a:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9002950c:	fb01 f900 	mul.w	r9, r1, r0
90029510:	0109      	lsls	r1, r1, #4
90029512:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90029516:	eba1 0809 	sub.w	r8, r1, r9
9002951a:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
9002951e:	b280      	uxth	r0, r0
90029520:	fa1f f888 	uxth.w	r8, r8
90029524:	1a09      	subs	r1, r1, r0
90029526:	fb08 f303 	mul.w	r3, r8, r3
9002952a:	b289      	uxth	r1, r1
9002952c:	fb01 330e 	mla	r3, r1, lr, r3
90029530:	fb00 3305 	mla	r3, r0, r5, r3
90029534:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90029536:	fb09 3305 	mla	r3, r9, r5, r3
9002953a:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002953e:	2b00      	cmp	r3, #0
90029540:	f000 80d2 	beq.w	900296e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90029544:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90029548:	d01b      	beq.n	90029582 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
9002954a:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
9002954e:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90029552:	fb0e fa0a 	mul.w	sl, lr, sl
90029556:	fb0e fe02 	mul.w	lr, lr, r2
9002955a:	ea4f 221a 	mov.w	r2, sl, lsr #8
9002955e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90029562:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
90029566:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
9002956a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
9002956e:	4452      	add	r2, sl
90029570:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90029574:	0a12      	lsrs	r2, r2, #8
90029576:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
9002957a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
9002957e:	ea42 020c 	orr.w	r2, r2, ip
90029582:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90029584:	2dff      	cmp	r5, #255	@ 0xff
90029586:	d021      	beq.n	900295cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
90029588:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
9002958a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
9002958e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90029590:	fb05 fb0b 	mul.w	fp, r5, fp
90029594:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90029596:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
9002959a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9002959c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900295a0:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900295a4:	fb05 fa0a 	mul.w	sl, r5, sl
900295a8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900295ac:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900295b0:	44de      	add	lr, fp
900295b2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900295b6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900295ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900295be:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900295c2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900295c6:	ea4e 050a 	orr.w	r5, lr, sl
900295ca:	950b      	str	r5, [sp, #44]	@ 0x2c
900295cc:	9d10      	ldr	r5, [sp, #64]	@ 0x40
900295ce:	2dff      	cmp	r5, #255	@ 0xff
900295d0:	d021      	beq.n	90029616 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
900295d2:	9d08      	ldr	r5, [sp, #32]
900295d4:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
900295d8:	9d10      	ldr	r5, [sp, #64]	@ 0x40
900295da:	fb05 fb0b 	mul.w	fp, r5, fp
900295de:	9d08      	ldr	r5, [sp, #32]
900295e0:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
900295e4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
900295e6:	fb05 fa0e 	mul.w	sl, r5, lr
900295ea:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900295ee:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900295f2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900295f6:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900295fa:	44de      	add	lr, fp
900295fc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90029600:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90029604:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90029608:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002960c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90029610:	ea4e 050a 	orr.w	r5, lr, sl
90029614:	9508      	str	r5, [sp, #32]
90029616:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90029618:	2dff      	cmp	r5, #255	@ 0xff
9002961a:	d021      	beq.n	90029660 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
9002961c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
9002961e:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90029622:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90029624:	fb05 fb0b 	mul.w	fp, r5, fp
90029628:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
9002962a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
9002962e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90029630:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90029634:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90029638:	fb05 fa0a 	mul.w	sl, r5, sl
9002963c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90029640:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90029644:	44de      	add	lr, fp
90029646:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002964a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002964e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90029652:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90029656:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002965a:	ea4e 050a 	orr.w	r5, lr, sl
9002965e:	950c      	str	r5, [sp, #48]	@ 0x30
90029660:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90029662:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
90029666:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
9002966a:	2bff      	cmp	r3, #255	@ 0xff
9002966c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90029670:	9d08      	ldr	r5, [sp, #32]
90029672:	fb08 fc0c 	mul.w	ip, r8, ip
90029676:	fb01 cc0e 	mla	ip, r1, lr, ip
9002967a:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
9002967e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90029680:	fb00 cc0e 	mla	ip, r0, lr, ip
90029684:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90029688:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
9002968a:	fb09 cc0e 	mla	ip, r9, lr, ip
9002968e:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90029692:	fb08 f80e 	mul.w	r8, r8, lr
90029696:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002969a:	fb01 8202 	mla	r2, r1, r2, r8
9002969e:	9908      	ldr	r1, [sp, #32]
900296a0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900296a4:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
900296a8:	990c      	ldr	r1, [sp, #48]	@ 0x30
900296aa:	fb00 220a 	mla	r2, r0, sl, r2
900296ae:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
900296b2:	fb09 2900 	mla	r9, r9, r0, r2
900296b6:	ea4f 2919 	mov.w	r9, r9, lsr #8
900296ba:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
900296be:	ea4c 0c09 	orr.w	ip, ip, r9
900296c2:	ea4f 221c 	mov.w	r2, ip, lsr #8
900296c6:	f040 8091 	bne.w	900297ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
900296ca:	ea4f 135c 	mov.w	r3, ip, lsr #5
900296ce:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
900296d2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900296d6:	f022 0207 	bic.w	r2, r2, #7
900296da:	431a      	orrs	r2, r3
900296dc:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
900296e0:	ea4c 0c02 	orr.w	ip, ip, r2
900296e4:	f8a7 c000 	strh.w	ip, [r7]
900296e8:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
900296ea:	3702      	adds	r7, #2
900296ec:	441c      	add	r4, r3
900296ee:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900296f0:	441e      	add	r6, r3
900296f2:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
900296f4:	3b01      	subs	r3, #1
900296f6:	9317      	str	r3, [sp, #92]	@ 0x5c
900296f8:	e6c0      	b.n	9002947c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
900296fa:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
900296fc:	441c      	add	r4, r3
900296fe:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90029700:	441e      	add	r6, r3
90029702:	9b07      	ldr	r3, [sp, #28]
90029704:	3b01      	subs	r3, #1
90029706:	9307      	str	r3, [sp, #28]
90029708:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002970a:	3302      	adds	r3, #2
9002970c:	930a      	str	r3, [sp, #40]	@ 0x28
9002970e:	e695      	b.n	9002943c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90029710:	d024      	beq.n	9002975c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
90029712:	9b07      	ldr	r3, [sp, #28]
90029714:	9827      	ldr	r0, [sp, #156]	@ 0x9c
90029716:	3b01      	subs	r3, #1
90029718:	fb00 4003 	mla	r0, r0, r3, r4
9002971c:	1400      	asrs	r0, r0, #16
9002971e:	f53f aeaa 	bmi.w	90029476 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90029722:	3901      	subs	r1, #1
90029724:	4288      	cmp	r0, r1
90029726:	f6bf aea6 	bge.w	90029476 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9002972a:	9928      	ldr	r1, [sp, #160]	@ 0xa0
9002972c:	fb01 6303 	mla	r3, r1, r3, r6
90029730:	141b      	asrs	r3, r3, #16
90029732:	f53f aea0 	bmi.w	90029476 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90029736:	3a01      	subs	r2, #1
90029738:	4293      	cmp	r3, r2
9002973a:	f6bf ae9c 	bge.w	90029476 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9002973e:	f8dd b01c 	ldr.w	fp, [sp, #28]
90029742:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
90029746:	f1bb 0f00 	cmp.w	fp, #0
9002974a:	f300 809a 	bgt.w	90029882 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
9002974e:	9b07      	ldr	r3, [sp, #28]
90029750:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90029754:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90029756:	eb03 0345 	add.w	r3, r3, r5, lsl #1
9002975a:	930a      	str	r3, [sp, #40]	@ 0x28
9002975c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
9002975e:	2b00      	cmp	r3, #0
90029760:	f340 81ec 	ble.w	90029b3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90029764:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90029768:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002976a:	ee30 0a04 	vadd.f32	s0, s0, s8
9002976e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90029772:	eef0 6a62 	vmov.f32	s13, s5
90029776:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002977a:	ee31 1a05 	vadd.f32	s2, s2, s10
9002977e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90029782:	ee16 4a90 	vmov	r4, s13
90029786:	eef0 6a43 	vmov.f32	s13, s6
9002978a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002978e:	ee16 6a90 	vmov	r6, s13
90029792:	ee20 7aa7 	vmul.f32	s14, s1, s15
90029796:	ee61 7a27 	vmul.f32	s15, s2, s15
9002979a:	ee77 2a62 	vsub.f32	s5, s14, s5
9002979e:	ee37 3ac3 	vsub.f32	s6, s15, s6
900297a2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900297a6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900297aa:	ee12 2a90 	vmov	r2, s5
900297ae:	eef0 2a47 	vmov.f32	s5, s14
900297b2:	fb92 f3f3 	sdiv	r3, r2, r3
900297b6:	ee13 2a10 	vmov	r2, s6
900297ba:	9327      	str	r3, [sp, #156]	@ 0x9c
900297bc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900297be:	eeb0 3a67 	vmov.f32	s6, s15
900297c2:	fb92 f3f3 	sdiv	r3, r2, r3
900297c6:	9328      	str	r3, [sp, #160]	@ 0xa0
900297c8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
900297ca:	9a18      	ldr	r2, [sp, #96]	@ 0x60
900297cc:	3b01      	subs	r3, #1
900297ce:	9316      	str	r3, [sp, #88]	@ 0x58
900297d0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900297d2:	bf08      	it	eq
900297d4:	4613      	moveq	r3, r2
900297d6:	9307      	str	r3, [sp, #28]
900297d8:	e622      	b.n	90029420 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
900297da:	2800      	cmp	r0, #0
900297dc:	f43f ae92 	beq.w	90029504 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
900297e0:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
900297e4:	9308      	str	r3, [sp, #32]
900297e6:	0e1b      	lsrs	r3, r3, #24
900297e8:	9310      	str	r3, [sp, #64]	@ 0x40
900297ea:	e68b      	b.n	90029504 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
900297ec:	8839      	ldrh	r1, [r7, #0]
900297ee:	43db      	mvns	r3, r3
900297f0:	4dd4      	ldr	r5, [pc, #848]	@ (90029b44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
900297f2:	ea4f 2e21 	mov.w	lr, r1, asr #8
900297f6:	fa5f f883 	uxtb.w	r8, r3
900297fa:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
900297fe:	10c8      	asrs	r0, r1, #3
90029800:	00cb      	lsls	r3, r1, #3
90029802:	fb0e fe08 	mul.w	lr, lr, r8
90029806:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9002980a:	b2db      	uxtb	r3, r3
9002980c:	f10e 0101 	add.w	r1, lr, #1
90029810:	fb00 f008 	mul.w	r0, r0, r8
90029814:	fb03 f308 	mul.w	r3, r3, r8
90029818:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
9002981c:	ea4f 411c 	mov.w	r1, ip, lsr #16
90029820:	eb01 211e 	add.w	r1, r1, lr, lsr #8
90029824:	f100 0e01 	add.w	lr, r0, #1
90029828:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
9002982c:	b2c9      	uxtb	r1, r1
9002982e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90029832:	ea05 2101 	and.w	r1, r5, r1, lsl #8
90029836:	00d2      	lsls	r2, r2, #3
90029838:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002983c:	430a      	orrs	r2, r1
9002983e:	1c59      	adds	r1, r3, #1
90029840:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90029844:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90029848:	e748      	b.n	900296dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
9002984a:	f112 0801 	adds.w	r8, r2, #1
9002984e:	f53f af4b 	bmi.w	900296e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90029852:	4543      	cmp	r3, r8
90029854:	f6ff af48 	blt.w	900296e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90029858:	f11c 0801 	adds.w	r8, ip, #1
9002985c:	f53f af44 	bmi.w	900296e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90029860:	45c6      	cmp	lr, r8
90029862:	f6ff af41 	blt.w	900296e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90029866:	b21b      	sxth	r3, r3
90029868:	e9cd 2c01 	strd	r2, ip, [sp, #4]
9002986c:	fa0f f28e 	sxth.w	r2, lr
90029870:	e9cd 1003 	strd	r1, r0, [sp, #12]
90029874:	9200      	str	r2, [sp, #0]
90029876:	4639      	mov	r1, r7
90029878:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9002987a:	9819      	ldr	r0, [sp, #100]	@ 0x64
9002987c:	f7ff fc88 	bl	90029190 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
90029880:	e732      	b.n	900296e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90029882:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90029884:	1421      	asrs	r1, r4, #16
90029886:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90029888:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002988c:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
90029890:	1433      	asrs	r3, r6, #16
90029892:	f3c6 3003 	ubfx	r0, r6, #12, #4
90029896:	fb07 1303 	mla	r3, r7, r3, r1
9002989a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9002989c:	eb01 0183 	add.w	r1, r1, r3, lsl #2
900298a0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
900298a4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
900298a8:	2a00      	cmp	r2, #0
900298aa:	f000 8108 	beq.w	90029abe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
900298ae:	684d      	ldr	r5, [r1, #4]
900298b0:	950d      	str	r5, [sp, #52]	@ 0x34
900298b2:	0e2d      	lsrs	r5, r5, #24
900298b4:	9514      	str	r5, [sp, #80]	@ 0x50
900298b6:	b178      	cbz	r0, 900298d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
900298b8:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
900298bc:	3f01      	subs	r7, #1
900298be:	00bf      	lsls	r7, r7, #2
900298c0:	3704      	adds	r7, #4
900298c2:	eb01 0e07 	add.w	lr, r1, r7
900298c6:	59c9      	ldr	r1, [r1, r7]
900298c8:	9109      	str	r1, [sp, #36]	@ 0x24
900298ca:	0e09      	lsrs	r1, r1, #24
900298cc:	9111      	str	r1, [sp, #68]	@ 0x44
900298ce:	f8de 1004 	ldr.w	r1, [lr, #4]
900298d2:	910e      	str	r1, [sp, #56]	@ 0x38
900298d4:	0e09      	lsrs	r1, r1, #24
900298d6:	9115      	str	r1, [sp, #84]	@ 0x54
900298d8:	b292      	uxth	r2, r2
900298da:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900298dc:	b280      	uxth	r0, r0
900298de:	fb02 f900 	mul.w	r9, r2, r0
900298e2:	0112      	lsls	r2, r2, #4
900298e4:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
900298e8:	eba2 0e09 	sub.w	lr, r2, r9
900298ec:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
900298f0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
900298f2:	b280      	uxth	r0, r0
900298f4:	fa1f fe8e 	uxth.w	lr, lr
900298f8:	1a09      	subs	r1, r1, r0
900298fa:	fb0e f202 	mul.w	r2, lr, r2
900298fe:	b289      	uxth	r1, r1
90029900:	fb01 220c 	mla	r2, r1, ip, r2
90029904:	fb00 2205 	mla	r2, r0, r5, r2
90029908:	9d15      	ldr	r5, [sp, #84]	@ 0x54
9002990a:	fb09 2205 	mla	r2, r9, r5, r2
9002990e:	f3c2 2207 	ubfx	r2, r2, #8, #8
90029912:	2a00      	cmp	r2, #0
90029914:	f000 80ca 	beq.w	90029aac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90029918:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
9002991c:	d019      	beq.n	90029952 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
9002991e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90029922:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90029926:	fb0c fa0a 	mul.w	sl, ip, sl
9002992a:	fb0c fc03 	mul.w	ip, ip, r3
9002992e:	ea4f 231a 	mov.w	r3, sl, lsr #8
90029932:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90029936:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
9002993a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
9002993e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90029942:	4453      	add	r3, sl
90029944:	0a3f      	lsrs	r7, r7, #8
90029946:	0a1b      	lsrs	r3, r3, #8
90029948:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
9002994c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90029950:	433b      	orrs	r3, r7
90029952:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90029954:	2dff      	cmp	r5, #255	@ 0xff
90029956:	d020      	beq.n	9002999a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
90029958:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
9002995a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
9002995e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90029960:	436f      	muls	r7, r5
90029962:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90029964:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90029968:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
9002996c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9002996e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90029972:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90029976:	fb05 fa0a 	mul.w	sl, r5, sl
9002997a:	44bc      	add	ip, r7
9002997c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90029980:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90029984:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90029988:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002998c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90029990:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90029994:	ea4c 050a 	orr.w	r5, ip, sl
90029998:	950d      	str	r5, [sp, #52]	@ 0x34
9002999a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9002999c:	2dff      	cmp	r5, #255	@ 0xff
9002999e:	d020      	beq.n	900299e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
900299a0:	9d09      	ldr	r5, [sp, #36]	@ 0x24
900299a2:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900299a6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900299a8:	436f      	muls	r7, r5
900299aa:	9d09      	ldr	r5, [sp, #36]	@ 0x24
900299ac:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
900299b0:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900299b2:	fb05 fa0c 	mul.w	sl, r5, ip
900299b6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900299ba:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900299be:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900299c2:	44bc      	add	ip, r7
900299c4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900299c8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900299cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900299d0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900299d4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900299d8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900299dc:	ea4c 050a 	orr.w	r5, ip, sl
900299e0:	9509      	str	r5, [sp, #36]	@ 0x24
900299e2:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900299e4:	2dff      	cmp	r5, #255	@ 0xff
900299e6:	d020      	beq.n	90029a2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
900299e8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900299ea:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900299ee:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900299f0:	436f      	muls	r7, r5
900299f2:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900299f4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900299f8:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900299fc:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900299fe:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90029a02:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90029a06:	fb05 fa0a 	mul.w	sl, r5, sl
90029a0a:	44bc      	add	ip, r7
90029a0c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90029a10:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90029a14:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90029a18:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90029a1c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90029a20:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90029a24:	ea4c 050a 	orr.w	r5, ip, sl
90029a28:	950e      	str	r5, [sp, #56]	@ 0x38
90029a2a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90029a2c:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90029a30:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90029a34:	2aff      	cmp	r2, #255	@ 0xff
90029a36:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90029a3a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90029a3c:	fb0e f707 	mul.w	r7, lr, r7
90029a40:	fb01 770c 	mla	r7, r1, ip, r7
90029a44:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90029a48:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90029a4a:	fb00 770c 	mla	r7, r0, ip, r7
90029a4e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90029a52:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90029a54:	fb09 770c 	mla	r7, r9, ip, r7
90029a58:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
90029a5c:	fb0e fe0c 	mul.w	lr, lr, ip
90029a60:	ea4f 2717 	mov.w	r7, r7, lsr #8
90029a64:	fb01 e303 	mla	r3, r1, r3, lr
90029a68:	9909      	ldr	r1, [sp, #36]	@ 0x24
90029a6a:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90029a6e:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
90029a72:	990e      	ldr	r1, [sp, #56]	@ 0x38
90029a74:	fb00 330a 	mla	r3, r0, sl, r3
90029a78:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
90029a7c:	fb09 3c0c 	mla	ip, r9, ip, r3
90029a80:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90029a84:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90029a88:	ea47 070c 	orr.w	r7, r7, ip
90029a8c:	ea4f 2317 	mov.w	r3, r7, lsr #8
90029a90:	d11e      	bne.n	90029ad0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
90029a92:	097a      	lsrs	r2, r7, #5
90029a94:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
90029a98:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90029a9c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90029aa0:	f023 0307 	bic.w	r3, r3, #7
90029aa4:	4313      	orrs	r3, r2
90029aa6:	431f      	orrs	r7, r3
90029aa8:	f8a8 7000 	strh.w	r7, [r8]
90029aac:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90029aae:	f108 0802 	add.w	r8, r8, #2
90029ab2:	f10b 3bff 	add.w	fp, fp, #4294967295
90029ab6:	441c      	add	r4, r3
90029ab8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90029aba:	441e      	add	r6, r3
90029abc:	e643      	b.n	90029746 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90029abe:	2800      	cmp	r0, #0
90029ac0:	f43f af0a 	beq.w	900298d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90029ac4:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
90029ac8:	9109      	str	r1, [sp, #36]	@ 0x24
90029aca:	0e09      	lsrs	r1, r1, #24
90029acc:	9111      	str	r1, [sp, #68]	@ 0x44
90029ace:	e703      	b.n	900298d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90029ad0:	f8b8 1000 	ldrh.w	r1, [r8]
90029ad4:	43d2      	mvns	r2, r2
90029ad6:	ea4f 2c21 	mov.w	ip, r1, asr #8
90029ada:	fa5f fe82 	uxtb.w	lr, r2
90029ade:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90029ae2:	10c8      	asrs	r0, r1, #3
90029ae4:	00ca      	lsls	r2, r1, #3
90029ae6:	fb0c fc0e 	mul.w	ip, ip, lr
90029aea:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90029aee:	b2d2      	uxtb	r2, r2
90029af0:	f10c 0101 	add.w	r1, ip, #1
90029af4:	fb00 f00e 	mul.w	r0, r0, lr
90029af8:	fb02 f20e 	mul.w	r2, r2, lr
90029afc:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90029b00:	0c39      	lsrs	r1, r7, #16
90029b02:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90029b06:	490f      	ldr	r1, [pc, #60]	@ (90029b44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90029b08:	fa5f fc8c 	uxtb.w	ip, ip
90029b0c:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
90029b10:	1c41      	adds	r1, r0, #1
90029b12:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90029b16:	1c51      	adds	r1, r2, #1
90029b18:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90029b1c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90029b20:	00c0      	lsls	r0, r0, #3
90029b22:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90029b26:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90029b2a:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90029b2e:	ea4c 0c00 	orr.w	ip, ip, r0
90029b32:	ea47 0c0c 	orr.w	ip, r7, ip
90029b36:	f8a8 c000 	strh.w	ip, [r8]
90029b3a:	e7b7      	b.n	90029aac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90029b3c:	b01b      	add	sp, #108	@ 0x6c
90029b3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90029b42:	bf00      	nop
90029b44:	fffff800 	.word	0xfffff800

90029b48 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
90029b48:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90029b4c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
90029b50:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90029b54:	2d00      	cmp	r5, #0
90029b56:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
90029b5a:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
90029b5e:	fb05 0e03 	mla	lr, r5, r3, r0
90029b62:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
90029b66:	f2c0 808c 	blt.w	90029c82 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90029b6a:	45a9      	cmp	r9, r5
90029b6c:	f340 8089 	ble.w	90029c82 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90029b70:	2800      	cmp	r0, #0
90029b72:	f2c0 8084 	blt.w	90029c7e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90029b76:	4580      	cmp	r8, r0
90029b78:	f340 8081 	ble.w	90029c7e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90029b7c:	ea4f 045e 	mov.w	r4, lr, lsr #1
90029b80:	f01e 0f01 	tst.w	lr, #1
90029b84:	5d16      	ldrb	r6, [r2, r4]
90029b86:	bf0c      	ite	eq
90029b88:	f006 060f 	andeq.w	r6, r6, #15
90029b8c:	1136      	asrne	r6, r6, #4
90029b8e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
90029b92:	b2f6      	uxtb	r6, r6
90029b94:	1c44      	adds	r4, r0, #1
90029b96:	d477      	bmi.n	90029c88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90029b98:	45a0      	cmp	r8, r4
90029b9a:	dd75      	ble.n	90029c88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90029b9c:	2f00      	cmp	r7, #0
90029b9e:	d075      	beq.n	90029c8c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
90029ba0:	f10e 0a01 	add.w	sl, lr, #1
90029ba4:	ea4f 045a 	mov.w	r4, sl, lsr #1
90029ba8:	f01a 0f01 	tst.w	sl, #1
90029bac:	5d14      	ldrb	r4, [r2, r4]
90029bae:	bf0c      	ite	eq
90029bb0:	f004 040f 	andeq.w	r4, r4, #15
90029bb4:	1124      	asrne	r4, r4, #4
90029bb6:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90029bba:	b2e4      	uxtb	r4, r4
90029bbc:	3501      	adds	r5, #1
90029bbe:	d469      	bmi.n	90029c94 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90029bc0:	45a9      	cmp	r9, r5
90029bc2:	dd67      	ble.n	90029c94 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90029bc4:	f1bc 0f00 	cmp.w	ip, #0
90029bc8:	d067      	beq.n	90029c9a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
90029bca:	2800      	cmp	r0, #0
90029bcc:	db60      	blt.n	90029c90 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
90029bce:	4580      	cmp	r8, r0
90029bd0:	dd5e      	ble.n	90029c90 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
90029bd2:	eb03 090e 	add.w	r9, r3, lr
90029bd6:	ea4f 0559 	mov.w	r5, r9, lsr #1
90029bda:	f019 0f01 	tst.w	r9, #1
90029bde:	5d55      	ldrb	r5, [r2, r5]
90029be0:	bf0c      	ite	eq
90029be2:	f005 050f 	andeq.w	r5, r5, #15
90029be6:	112d      	asrne	r5, r5, #4
90029be8:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90029bec:	b2ed      	uxtb	r5, r5
90029bee:	3001      	adds	r0, #1
90029bf0:	d456      	bmi.n	90029ca0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
90029bf2:	4580      	cmp	r8, r0
90029bf4:	dd54      	ble.n	90029ca0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
90029bf6:	2f00      	cmp	r7, #0
90029bf8:	d054      	beq.n	90029ca4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
90029bfa:	3301      	adds	r3, #1
90029bfc:	449e      	add	lr, r3
90029bfe:	ea4f 035e 	mov.w	r3, lr, lsr #1
90029c02:	f01e 0f01 	tst.w	lr, #1
90029c06:	5cd0      	ldrb	r0, [r2, r3]
90029c08:	bf0c      	ite	eq
90029c0a:	f000 000f 	andeq.w	r0, r0, #15
90029c0e:	1100      	asrne	r0, r0, #4
90029c10:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90029c14:	b2c3      	uxtb	r3, r0
90029c16:	b2ba      	uxth	r2, r7
90029c18:	fa1f fc8c 	uxth.w	ip, ip
90029c1c:	fb02 f00c 	mul.w	r0, r2, ip
90029c20:	0112      	lsls	r2, r2, #4
90029c22:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
90029c26:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
90029c2a:	1a12      	subs	r2, r2, r0
90029c2c:	fa1f fc8c 	uxth.w	ip, ip
90029c30:	b292      	uxth	r2, r2
90029c32:	eba7 070c 	sub.w	r7, r7, ip
90029c36:	4362      	muls	r2, r4
90029c38:	b2bf      	uxth	r7, r7
90029c3a:	fb06 2207 	mla	r2, r6, r7, r2
90029c3e:	fb0c 2505 	mla	r5, ip, r5, r2
90029c42:	fb00 5303 	mla	r3, r0, r3, r5
90029c46:	f3c3 2307 	ubfx	r3, r3, #8, #8
90029c4a:	b1b3      	cbz	r3, 90029c7a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90029c4c:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
90029c50:	435a      	muls	r2, r3
90029c52:	1c53      	adds	r3, r2, #1
90029c54:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90029c58:	4a2d      	ldr	r2, [pc, #180]	@ (90029d10 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
90029c5a:	121b      	asrs	r3, r3, #8
90029c5c:	6812      	ldr	r2, [r2, #0]
90029c5e:	2bff      	cmp	r3, #255	@ 0xff
90029c60:	ea4f 2612 	mov.w	r6, r2, lsr #8
90029c64:	d120      	bne.n	90029ca8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
90029c66:	0950      	lsrs	r0, r2, #5
90029c68:	4b2a      	ldr	r3, [pc, #168]	@ (90029d14 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
90029c6a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90029c6e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90029c72:	4033      	ands	r3, r6
90029c74:	4318      	orrs	r0, r3
90029c76:	4302      	orrs	r2, r0
90029c78:	800a      	strh	r2, [r1, #0]
90029c7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90029c7e:	2600      	movs	r6, #0
90029c80:	e788      	b.n	90029b94 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
90029c82:	2400      	movs	r4, #0
90029c84:	4626      	mov	r6, r4
90029c86:	e799      	b.n	90029bbc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90029c88:	2400      	movs	r4, #0
90029c8a:	e797      	b.n	90029bbc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90029c8c:	463c      	mov	r4, r7
90029c8e:	e795      	b.n	90029bbc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90029c90:	2500      	movs	r5, #0
90029c92:	e7ac      	b.n	90029bee <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
90029c94:	2300      	movs	r3, #0
90029c96:	461d      	mov	r5, r3
90029c98:	e7bd      	b.n	90029c16 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90029c9a:	4663      	mov	r3, ip
90029c9c:	4665      	mov	r5, ip
90029c9e:	e7ba      	b.n	90029c16 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90029ca0:	2300      	movs	r3, #0
90029ca2:	e7b8      	b.n	90029c16 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90029ca4:	463b      	mov	r3, r7
90029ca6:	e7b6      	b.n	90029c16 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90029ca8:	880d      	ldrh	r5, [r1, #0]
90029caa:	b29f      	uxth	r7, r3
90029cac:	f3c2 4007 	ubfx	r0, r2, #16, #8
90029cb0:	43db      	mvns	r3, r3
90029cb2:	122c      	asrs	r4, r5, #8
90029cb4:	fb10 f007 	smulbb	r0, r0, r7
90029cb8:	b2db      	uxtb	r3, r3
90029cba:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90029cbe:	b2f6      	uxtb	r6, r6
90029cc0:	b2d2      	uxtb	r2, r2
90029cc2:	fb04 0403 	mla	r4, r4, r3, r0
90029cc6:	10e8      	asrs	r0, r5, #3
90029cc8:	fb12 f207 	smulbb	r2, r2, r7
90029ccc:	00ed      	lsls	r5, r5, #3
90029cce:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90029cd2:	b2a4      	uxth	r4, r4
90029cd4:	fb16 f607 	smulbb	r6, r6, r7
90029cd8:	b2ed      	uxtb	r5, r5
90029cda:	fb00 6603 	mla	r6, r0, r3, r6
90029cde:	fb05 2303 	mla	r3, r5, r3, r2
90029ce2:	b2b0      	uxth	r0, r6
90029ce4:	b29a      	uxth	r2, r3
90029ce6:	1c63      	adds	r3, r4, #1
90029ce8:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90029cec:	1c53      	adds	r3, r2, #1
90029cee:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90029cf2:	1c42      	adds	r2, r0, #1
90029cf4:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90029cf8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90029cfc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90029d00:	0940      	lsrs	r0, r0, #5
90029d02:	4323      	orrs	r3, r4
90029d04:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90029d08:	4303      	orrs	r3, r0
90029d0a:	800b      	strh	r3, [r1, #0]
90029d0c:	e7b5      	b.n	90029c7a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90029d0e:	bf00      	nop
90029d10:	24021c1c 	.word	0x24021c1c
90029d14:	00fff800 	.word	0x00fff800

90029d18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90029d18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90029d1c:	b097      	sub	sp, #92	@ 0x5c
90029d1e:	9214      	str	r2, [sp, #80]	@ 0x50
90029d20:	9309      	str	r3, [sp, #36]	@ 0x24
90029d22:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90029d24:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
90029d28:	9015      	str	r0, [sp, #84]	@ 0x54
90029d2a:	910d      	str	r1, [sp, #52]	@ 0x34
90029d2c:	6850      	ldr	r0, [r2, #4]
90029d2e:	930f      	str	r3, [sp, #60]	@ 0x3c
90029d30:	6812      	ldr	r2, [r2, #0]
90029d32:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
90029d36:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
90029d3a:	fb00 1303 	mla	r3, r0, r3, r1
90029d3e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90029d42:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90029d44:	689b      	ldr	r3, [r3, #8]
90029d46:	3301      	adds	r3, #1
90029d48:	f023 0301 	bic.w	r3, r3, #1
90029d4c:	930a      	str	r3, [sp, #40]	@ 0x28
90029d4e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90029d50:	681f      	ldr	r7, [r3, #0]
90029d52:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90029d54:	2b00      	cmp	r3, #0
90029d56:	dc03      	bgt.n	90029d60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90029d58:	9b14      	ldr	r3, [sp, #80]	@ 0x50
90029d5a:	2b00      	cmp	r3, #0
90029d5c:	f340 8289 	ble.w	9002a272 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
90029d60:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90029d62:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90029d66:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90029d6a:	1e48      	subs	r0, r1, #1
90029d6c:	f102 3cff 	add.w	ip, r2, #4294967295
90029d70:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90029d72:	2b00      	cmp	r3, #0
90029d74:	f340 80c5 	ble.w	90029f02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
90029d78:	ea5f 4e24 	movs.w	lr, r4, asr #16
90029d7c:	ea4f 4326 	mov.w	r3, r6, asr #16
90029d80:	d406      	bmi.n	90029d90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90029d82:	4586      	cmp	lr, r0
90029d84:	da04      	bge.n	90029d90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90029d86:	2b00      	cmp	r3, #0
90029d88:	db02      	blt.n	90029d90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90029d8a:	4563      	cmp	r3, ip
90029d8c:	f2c0 80ba 	blt.w	90029f04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90029d90:	f11e 0e01 	adds.w	lr, lr, #1
90029d94:	f100 80ab 	bmi.w	90029eee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90029d98:	4571      	cmp	r1, lr
90029d9a:	f2c0 80a8 	blt.w	90029eee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90029d9e:	3301      	adds	r3, #1
90029da0:	f100 80a5 	bmi.w	90029eee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90029da4:	429a      	cmp	r2, r3
90029da6:	f2c0 80a2 	blt.w	90029eee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90029daa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90029dac:	46c8      	mov	r8, r9
90029dae:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
90029db2:	930e      	str	r3, [sp, #56]	@ 0x38
90029db4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90029db6:	2b00      	cmp	r3, #0
90029db8:	f340 80c4 	ble.w	90029f44 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
90029dbc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90029dbe:	1430      	asrs	r0, r6, #16
90029dc0:	f3c4 3203 	ubfx	r2, r4, #12, #4
90029dc4:	f3c6 3103 	ubfx	r1, r6, #12, #4
90029dc8:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90029dcc:	1423      	asrs	r3, r4, #16
90029dce:	f100 814f 	bmi.w	9002a070 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90029dd2:	f10c 3bff 	add.w	fp, ip, #4294967295
90029dd6:	455b      	cmp	r3, fp
90029dd8:	f280 814a 	bge.w	9002a070 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90029ddc:	2800      	cmp	r0, #0
90029dde:	f2c0 8147 	blt.w	9002a070 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90029de2:	f10e 3bff 	add.w	fp, lr, #4294967295
90029de6:	4558      	cmp	r0, fp
90029de8:	f280 8142 	bge.w	9002a070 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90029dec:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
90029dee:	fb00 3305 	mla	r3, r0, r5, r3
90029df2:	0858      	lsrs	r0, r3, #1
90029df4:	07dd      	lsls	r5, r3, #31
90029df6:	f817 c000 	ldrb.w	ip, [r7, r0]
90029dfa:	bf54      	ite	pl
90029dfc:	f00c 0c0f 	andpl.w	ip, ip, #15
90029e00:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90029e04:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90029e08:	fa5f fc8c 	uxtb.w	ip, ip
90029e0c:	2a00      	cmp	r2, #0
90029e0e:	f000 80dd 	beq.w	90029fcc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
90029e12:	1c58      	adds	r0, r3, #1
90029e14:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90029e18:	07c0      	lsls	r0, r0, #31
90029e1a:	f817 e00e 	ldrb.w	lr, [r7, lr]
90029e1e:	bf54      	ite	pl
90029e20:	f00e 0e0f 	andpl.w	lr, lr, #15
90029e24:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90029e28:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90029e2c:	fa5f f08e 	uxtb.w	r0, lr
90029e30:	9010      	str	r0, [sp, #64]	@ 0x40
90029e32:	b1d9      	cbz	r1, 90029e6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90029e34:	4453      	add	r3, sl
90029e36:	0858      	lsrs	r0, r3, #1
90029e38:	07dd      	lsls	r5, r3, #31
90029e3a:	f103 0301 	add.w	r3, r3, #1
90029e3e:	5c38      	ldrb	r0, [r7, r0]
90029e40:	bf54      	ite	pl
90029e42:	f000 000f 	andpl.w	r0, r0, #15
90029e46:	1100      	asrmi	r0, r0, #4
90029e48:	07dd      	lsls	r5, r3, #31
90029e4a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90029e4e:	b2c0      	uxtb	r0, r0
90029e50:	900b      	str	r0, [sp, #44]	@ 0x2c
90029e52:	ea4f 0053 	mov.w	r0, r3, lsr #1
90029e56:	f817 e000 	ldrb.w	lr, [r7, r0]
90029e5a:	bf54      	ite	pl
90029e5c:	f00e 030f 	andpl.w	r3, lr, #15
90029e60:	ea4f 132e 	movmi.w	r3, lr, asr #4
90029e64:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90029e68:	b2db      	uxtb	r3, r3
90029e6a:	9311      	str	r3, [sp, #68]	@ 0x44
90029e6c:	b292      	uxth	r2, r2
90029e6e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90029e70:	b289      	uxth	r1, r1
90029e72:	fb02 f301 	mul.w	r3, r2, r1
90029e76:	0112      	lsls	r2, r2, #4
90029e78:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90029e7c:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
90029e80:	1ad2      	subs	r2, r2, r3
90029e82:	b289      	uxth	r1, r1
90029e84:	b292      	uxth	r2, r2
90029e86:	1a40      	subs	r0, r0, r1
90029e88:	436a      	muls	r2, r5
90029e8a:	b280      	uxth	r0, r0
90029e8c:	fb0c 2c00 	mla	ip, ip, r0, r2
90029e90:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90029e92:	fb01 c102 	mla	r1, r1, r2, ip
90029e96:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90029e98:	fb03 1302 	mla	r3, r3, r2, r1
90029e9c:	f3c3 2307 	ubfx	r3, r3, #8, #8
90029ea0:	b1db      	cbz	r3, 90029eda <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90029ea2:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90029ea4:	4353      	muls	r3, r2
90029ea6:	1c5a      	adds	r2, r3, #1
90029ea8:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90029eac:	4ac6      	ldr	r2, [pc, #792]	@ (9002a1c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90029eae:	121b      	asrs	r3, r3, #8
90029eb0:	6812      	ldr	r2, [r2, #0]
90029eb2:	2bff      	cmp	r3, #255	@ 0xff
90029eb4:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90029eb8:	f040 8099 	bne.w	90029fee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
90029ebc:	0953      	lsrs	r3, r2, #5
90029ebe:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
90029ec2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90029ec6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90029eca:	f02c 0c07 	bic.w	ip, ip, #7
90029ece:	ea43 0c0c 	orr.w	ip, r3, ip
90029ed2:	ea4c 0202 	orr.w	r2, ip, r2
90029ed6:	f8a8 2000 	strh.w	r2, [r8]
90029eda:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90029edc:	f108 0802 	add.w	r8, r8, #2
90029ee0:	441c      	add	r4, r3
90029ee2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90029ee4:	441e      	add	r6, r3
90029ee6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90029ee8:	3b01      	subs	r3, #1
90029eea:	930e      	str	r3, [sp, #56]	@ 0x38
90029eec:	e762      	b.n	90029db4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90029eee:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90029ef0:	f109 0902 	add.w	r9, r9, #2
90029ef4:	441c      	add	r4, r3
90029ef6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90029ef8:	441e      	add	r6, r3
90029efa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90029efc:	3b01      	subs	r3, #1
90029efe:	9309      	str	r3, [sp, #36]	@ 0x24
90029f00:	e736      	b.n	90029d70 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90029f02:	d024      	beq.n	90029f4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90029f04:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90029f06:	9823      	ldr	r0, [sp, #140]	@ 0x8c
90029f08:	3b01      	subs	r3, #1
90029f0a:	fb00 4003 	mla	r0, r0, r3, r4
90029f0e:	1400      	asrs	r0, r0, #16
90029f10:	f53f af4b 	bmi.w	90029daa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90029f14:	3901      	subs	r1, #1
90029f16:	4288      	cmp	r0, r1
90029f18:	f6bf af47 	bge.w	90029daa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90029f1c:	9924      	ldr	r1, [sp, #144]	@ 0x90
90029f1e:	fb01 6303 	mla	r3, r1, r3, r6
90029f22:	141b      	asrs	r3, r3, #16
90029f24:	f53f af41 	bmi.w	90029daa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90029f28:	3a01      	subs	r2, #1
90029f2a:	4293      	cmp	r3, r2
90029f2c:	f6bf af3d 	bge.w	90029daa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90029f30:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
90029f34:	46c8      	mov	r8, r9
90029f36:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
90029f3a:	930e      	str	r3, [sp, #56]	@ 0x38
90029f3c:	f1bb 0f00 	cmp.w	fp, #0
90029f40:	f300 80b7 	bgt.w	9002a0b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
90029f44:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90029f46:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90029f4a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90029f4e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90029f50:	2b00      	cmp	r3, #0
90029f52:	f340 818e 	ble.w	9002a272 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
90029f56:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90029f5a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90029f5c:	ee30 0a04 	vadd.f32	s0, s0, s8
90029f60:	ee70 0aa4 	vadd.f32	s1, s1, s9
90029f64:	eef0 6a62 	vmov.f32	s13, s5
90029f68:	eec7 7a00 	vdiv.f32	s15, s14, s0
90029f6c:	ee31 1a05 	vadd.f32	s2, s2, s10
90029f70:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90029f74:	ee16 4a90 	vmov	r4, s13
90029f78:	eef0 6a43 	vmov.f32	s13, s6
90029f7c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90029f80:	ee16 6a90 	vmov	r6, s13
90029f84:	ee20 7aa7 	vmul.f32	s14, s1, s15
90029f88:	ee61 7a27 	vmul.f32	s15, s2, s15
90029f8c:	ee77 2a62 	vsub.f32	s5, s14, s5
90029f90:	ee37 3ac3 	vsub.f32	s6, s15, s6
90029f94:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90029f98:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90029f9c:	ee12 2a90 	vmov	r2, s5
90029fa0:	eef0 2a47 	vmov.f32	s5, s14
90029fa4:	fb92 f3f3 	sdiv	r3, r2, r3
90029fa8:	ee13 2a10 	vmov	r2, s6
90029fac:	9323      	str	r3, [sp, #140]	@ 0x8c
90029fae:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90029fb0:	eeb0 3a67 	vmov.f32	s6, s15
90029fb4:	fb92 f3f3 	sdiv	r3, r2, r3
90029fb8:	9324      	str	r3, [sp, #144]	@ 0x90
90029fba:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90029fbc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90029fbe:	3b01      	subs	r3, #1
90029fc0:	930d      	str	r3, [sp, #52]	@ 0x34
90029fc2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90029fc4:	bf08      	it	eq
90029fc6:	4613      	moveq	r3, r2
90029fc8:	9309      	str	r3, [sp, #36]	@ 0x24
90029fca:	e6c2      	b.n	90029d52 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90029fcc:	2900      	cmp	r1, #0
90029fce:	f43f af4d 	beq.w	90029e6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90029fd2:	eb0a 0003 	add.w	r0, sl, r3
90029fd6:	0843      	lsrs	r3, r0, #1
90029fd8:	07c0      	lsls	r0, r0, #31
90029fda:	5cfb      	ldrb	r3, [r7, r3]
90029fdc:	bf54      	ite	pl
90029fde:	f003 030f 	andpl.w	r3, r3, #15
90029fe2:	111b      	asrmi	r3, r3, #4
90029fe4:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90029fe8:	b2db      	uxtb	r3, r3
90029fea:	930b      	str	r3, [sp, #44]	@ 0x2c
90029fec:	e73e      	b.n	90029e6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90029fee:	f8b8 e000 	ldrh.w	lr, [r8]
90029ff2:	fa1f fb83 	uxth.w	fp, r3
90029ff6:	f3c2 4107 	ubfx	r1, r2, #16, #8
90029ffa:	43db      	mvns	r3, r3
90029ffc:	ea4f 202e 	mov.w	r0, lr, asr #8
9002a000:	fb11 f10b 	smulbb	r1, r1, fp
9002a004:	b2db      	uxtb	r3, r3
9002a006:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9002a00a:	fa5f fc8c 	uxtb.w	ip, ip
9002a00e:	b2d2      	uxtb	r2, r2
9002a010:	fb00 1003 	mla	r0, r0, r3, r1
9002a014:	ea4f 01ee 	mov.w	r1, lr, asr #3
9002a018:	fb1c fc0b 	smulbb	ip, ip, fp
9002a01c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9002a020:	b280      	uxth	r0, r0
9002a022:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9002a026:	fb12 fb0b 	smulbb	fp, r2, fp
9002a02a:	fa5f fe8e 	uxtb.w	lr, lr
9002a02e:	fb01 cc03 	mla	ip, r1, r3, ip
9002a032:	fb0e bb03 	mla	fp, lr, r3, fp
9002a036:	1c43      	adds	r3, r0, #1
9002a038:	fa1f fc8c 	uxth.w	ip, ip
9002a03c:	fa1f fb8b 	uxth.w	fp, fp
9002a040:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9002a044:	f10c 0101 	add.w	r1, ip, #1
9002a048:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
9002a04c:	f10b 0001 	add.w	r0, fp, #1
9002a050:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
9002a054:	eb00 201b 	add.w	r0, r0, fp, lsr #8
9002a058:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
9002a05c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002a060:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
9002a064:	4318      	orrs	r0, r3
9002a066:	ea40 000c 	orr.w	r0, r0, ip
9002a06a:	f8a8 0000 	strh.w	r0, [r8]
9002a06e:	e734      	b.n	90029eda <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002a070:	f113 0b01 	adds.w	fp, r3, #1
9002a074:	f53f af31 	bmi.w	90029eda <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002a078:	45dc      	cmp	ip, fp
9002a07a:	f6ff af2e 	blt.w	90029eda <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002a07e:	f110 0b01 	adds.w	fp, r0, #1
9002a082:	f53f af2a 	bmi.w	90029eda <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002a086:	45de      	cmp	lr, fp
9002a088:	f6ff af27 	blt.w	90029eda <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002a08c:	9302      	str	r3, [sp, #8]
9002a08e:	fa0f f38e 	sxth.w	r3, lr
9002a092:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
9002a094:	9301      	str	r3, [sp, #4]
9002a096:	fa0f f38c 	sxth.w	r3, ip
9002a09a:	e9cd 0203 	strd	r0, r2, [sp, #12]
9002a09e:	e9cd 1505 	strd	r1, r5, [sp, #20]
9002a0a2:	9300      	str	r3, [sp, #0]
9002a0a4:	463a      	mov	r2, r7
9002a0a6:	4653      	mov	r3, sl
9002a0a8:	4641      	mov	r1, r8
9002a0aa:	9815      	ldr	r0, [sp, #84]	@ 0x54
9002a0ac:	f7ff fd4c 	bl	90029b48 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
9002a0b0:	e713      	b.n	90029eda <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002a0b2:	1422      	asrs	r2, r4, #16
9002a0b4:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
9002a0b6:	1433      	asrs	r3, r6, #16
9002a0b8:	f3c4 3103 	ubfx	r1, r4, #12, #4
9002a0bc:	f3c6 3003 	ubfx	r0, r6, #12, #4
9002a0c0:	fb05 2303 	mla	r3, r5, r3, r2
9002a0c4:	085a      	lsrs	r2, r3, #1
9002a0c6:	07dd      	lsls	r5, r3, #31
9002a0c8:	5cba      	ldrb	r2, [r7, r2]
9002a0ca:	bf54      	ite	pl
9002a0cc:	f002 020f 	andpl.w	r2, r2, #15
9002a0d0:	1112      	asrmi	r2, r2, #4
9002a0d2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9002a0d6:	b2d2      	uxtb	r2, r2
9002a0d8:	2900      	cmp	r1, #0
9002a0da:	d077      	beq.n	9002a1cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
9002a0dc:	f103 0e01 	add.w	lr, r3, #1
9002a0e0:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
9002a0e4:	f01e 0f01 	tst.w	lr, #1
9002a0e8:	f817 c00c 	ldrb.w	ip, [r7, ip]
9002a0ec:	bf0c      	ite	eq
9002a0ee:	f00c 0c0f 	andeq.w	ip, ip, #15
9002a0f2:	ea4f 1c2c 	movne.w	ip, ip, asr #4
9002a0f6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9002a0fa:	fa5f f58c 	uxtb.w	r5, ip
9002a0fe:	9512      	str	r5, [sp, #72]	@ 0x48
9002a100:	b308      	cbz	r0, 9002a146 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
9002a102:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
9002a104:	442b      	add	r3, r5
9002a106:	ea4f 0c53 	mov.w	ip, r3, lsr #1
9002a10a:	07dd      	lsls	r5, r3, #31
9002a10c:	f103 0301 	add.w	r3, r3, #1
9002a110:	f817 c00c 	ldrb.w	ip, [r7, ip]
9002a114:	bf54      	ite	pl
9002a116:	f00c 0c0f 	andpl.w	ip, ip, #15
9002a11a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
9002a11e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9002a122:	fa5f f58c 	uxtb.w	r5, ip
9002a126:	ea4f 0c53 	mov.w	ip, r3, lsr #1
9002a12a:	950c      	str	r5, [sp, #48]	@ 0x30
9002a12c:	07dd      	lsls	r5, r3, #31
9002a12e:	f817 c00c 	ldrb.w	ip, [r7, ip]
9002a132:	bf54      	ite	pl
9002a134:	f00c 0c0f 	andpl.w	ip, ip, #15
9002a138:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
9002a13c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9002a140:	fa5f f38c 	uxtb.w	r3, ip
9002a144:	9313      	str	r3, [sp, #76]	@ 0x4c
9002a146:	b289      	uxth	r1, r1
9002a148:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9002a14a:	b280      	uxth	r0, r0
9002a14c:	fb01 f300 	mul.w	r3, r1, r0
9002a150:	0109      	lsls	r1, r1, #4
9002a152:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
9002a156:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
9002a15a:	1ac9      	subs	r1, r1, r3
9002a15c:	b280      	uxth	r0, r0
9002a15e:	b289      	uxth	r1, r1
9002a160:	ebac 0c00 	sub.w	ip, ip, r0
9002a164:	4369      	muls	r1, r5
9002a166:	fa1f fc8c 	uxth.w	ip, ip
9002a16a:	fb02 120c 	mla	r2, r2, ip, r1
9002a16e:	990c      	ldr	r1, [sp, #48]	@ 0x30
9002a170:	fb00 2001 	mla	r0, r0, r1, r2
9002a174:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9002a176:	fb03 0302 	mla	r3, r3, r2, r0
9002a17a:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002a17e:	b1d3      	cbz	r3, 9002a1b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
9002a180:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9002a182:	4353      	muls	r3, r2
9002a184:	1c5a      	adds	r2, r3, #1
9002a186:	eb02 2313 	add.w	r3, r2, r3, lsr #8
9002a18a:	4a0f      	ldr	r2, [pc, #60]	@ (9002a1c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
9002a18c:	121b      	asrs	r3, r3, #8
9002a18e:	6812      	ldr	r2, [r2, #0]
9002a190:	2bff      	cmp	r3, #255	@ 0xff
9002a192:	ea4f 2c12 	mov.w	ip, r2, lsr #8
9002a196:	d12d      	bne.n	9002a1f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
9002a198:	0953      	lsrs	r3, r2, #5
9002a19a:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
9002a19e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002a1a2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002a1a6:	f02c 0c07 	bic.w	ip, ip, #7
9002a1aa:	ea43 0c0c 	orr.w	ip, r3, ip
9002a1ae:	ea4c 0202 	orr.w	r2, ip, r2
9002a1b2:	f8a8 2000 	strh.w	r2, [r8]
9002a1b6:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
9002a1b8:	f108 0802 	add.w	r8, r8, #2
9002a1bc:	f10b 3bff 	add.w	fp, fp, #4294967295
9002a1c0:	441c      	add	r4, r3
9002a1c2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002a1c4:	441e      	add	r6, r3
9002a1c6:	e6b9      	b.n	90029f3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
9002a1c8:	24021c1c 	.word	0x24021c1c
9002a1cc:	2800      	cmp	r0, #0
9002a1ce:	d0ba      	beq.n	9002a146 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
9002a1d0:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
9002a1d2:	442b      	add	r3, r5
9002a1d4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
9002a1d8:	07db      	lsls	r3, r3, #31
9002a1da:	f817 c00c 	ldrb.w	ip, [r7, ip]
9002a1de:	bf54      	ite	pl
9002a1e0:	f00c 0c0f 	andpl.w	ip, ip, #15
9002a1e4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
9002a1e8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9002a1ec:	fa5f f38c 	uxtb.w	r3, ip
9002a1f0:	930c      	str	r3, [sp, #48]	@ 0x30
9002a1f2:	e7a8      	b.n	9002a146 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
9002a1f4:	f8b8 e000 	ldrh.w	lr, [r8]
9002a1f8:	fa1f fa83 	uxth.w	sl, r3
9002a1fc:	f3c2 4107 	ubfx	r1, r2, #16, #8
9002a200:	43db      	mvns	r3, r3
9002a202:	ea4f 202e 	mov.w	r0, lr, asr #8
9002a206:	fb11 f10a 	smulbb	r1, r1, sl
9002a20a:	b2db      	uxtb	r3, r3
9002a20c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9002a210:	b2d2      	uxtb	r2, r2
9002a212:	fa5f fc8c 	uxtb.w	ip, ip
9002a216:	fb00 1003 	mla	r0, r0, r3, r1
9002a21a:	ea4f 01ee 	mov.w	r1, lr, asr #3
9002a21e:	fb12 f20a 	smulbb	r2, r2, sl
9002a222:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9002a226:	b280      	uxth	r0, r0
9002a228:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9002a22c:	fb1c fc0a 	smulbb	ip, ip, sl
9002a230:	fa5f fe8e 	uxtb.w	lr, lr
9002a234:	fb0e 2203 	mla	r2, lr, r3, r2
9002a238:	fb01 cc03 	mla	ip, r1, r3, ip
9002a23c:	1c43      	adds	r3, r0, #1
9002a23e:	b292      	uxth	r2, r2
9002a240:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9002a244:	1c51      	adds	r1, r2, #1
9002a246:	fa1f fc8c 	uxth.w	ip, ip
9002a24a:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
9002a24e:	eb01 2112 	add.w	r1, r1, r2, lsr #8
9002a252:	f3c1 21c4 	ubfx	r1, r1, #11, #5
9002a256:	4308      	orrs	r0, r1
9002a258:	f10c 0101 	add.w	r1, ip, #1
9002a25c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
9002a260:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
9002a264:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
9002a268:	ea40 000c 	orr.w	r0, r0, ip
9002a26c:	f8a8 0000 	strh.w	r0, [r8]
9002a270:	e7a1      	b.n	9002a1b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
9002a272:	b017      	add	sp, #92	@ 0x5c
9002a274:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002a278 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
9002a278:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002a27c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
9002a280:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
9002a284:	2d00      	cmp	r5, #0
9002a286:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
9002a28a:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
9002a28e:	fb05 0e03 	mla	lr, r5, r3, r0
9002a292:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
9002a296:	f2c0 80b0 	blt.w	9002a3fa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
9002a29a:	45a9      	cmp	r9, r5
9002a29c:	f340 80ad 	ble.w	9002a3fa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
9002a2a0:	2800      	cmp	r0, #0
9002a2a2:	f2c0 80a8 	blt.w	9002a3f6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
9002a2a6:	4580      	cmp	r8, r0
9002a2a8:	f340 80a5 	ble.w	9002a3f6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
9002a2ac:	ea4f 045e 	mov.w	r4, lr, lsr #1
9002a2b0:	f01e 0f01 	tst.w	lr, #1
9002a2b4:	5d16      	ldrb	r6, [r2, r4]
9002a2b6:	bf0c      	ite	eq
9002a2b8:	f006 060f 	andeq.w	r6, r6, #15
9002a2bc:	1136      	asrne	r6, r6, #4
9002a2be:	eb06 1606 	add.w	r6, r6, r6, lsl #4
9002a2c2:	b2f6      	uxtb	r6, r6
9002a2c4:	1c44      	adds	r4, r0, #1
9002a2c6:	f100 809b 	bmi.w	9002a400 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
9002a2ca:	45a0      	cmp	r8, r4
9002a2cc:	f340 8098 	ble.w	9002a400 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
9002a2d0:	2f00      	cmp	r7, #0
9002a2d2:	f000 8097 	beq.w	9002a404 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
9002a2d6:	f10e 0a01 	add.w	sl, lr, #1
9002a2da:	ea4f 045a 	mov.w	r4, sl, lsr #1
9002a2de:	f01a 0f01 	tst.w	sl, #1
9002a2e2:	5d14      	ldrb	r4, [r2, r4]
9002a2e4:	bf0c      	ite	eq
9002a2e6:	f004 040f 	andeq.w	r4, r4, #15
9002a2ea:	1124      	asrne	r4, r4, #4
9002a2ec:	eb04 1404 	add.w	r4, r4, r4, lsl #4
9002a2f0:	b2e4      	uxtb	r4, r4
9002a2f2:	3501      	adds	r5, #1
9002a2f4:	f100 808a 	bmi.w	9002a40c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
9002a2f8:	45a9      	cmp	r9, r5
9002a2fa:	f340 8087 	ble.w	9002a40c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
9002a2fe:	f1bc 0f00 	cmp.w	ip, #0
9002a302:	f000 8086 	beq.w	9002a412 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
9002a306:	2800      	cmp	r0, #0
9002a308:	db7e      	blt.n	9002a408 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
9002a30a:	4580      	cmp	r8, r0
9002a30c:	dd7c      	ble.n	9002a408 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
9002a30e:	eb03 090e 	add.w	r9, r3, lr
9002a312:	ea4f 0559 	mov.w	r5, r9, lsr #1
9002a316:	f019 0f01 	tst.w	r9, #1
9002a31a:	5d55      	ldrb	r5, [r2, r5]
9002a31c:	bf0c      	ite	eq
9002a31e:	f005 050f 	andeq.w	r5, r5, #15
9002a322:	112d      	asrne	r5, r5, #4
9002a324:	eb05 1505 	add.w	r5, r5, r5, lsl #4
9002a328:	b2ed      	uxtb	r5, r5
9002a32a:	3001      	adds	r0, #1
9002a32c:	d474      	bmi.n	9002a418 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
9002a32e:	4580      	cmp	r8, r0
9002a330:	dd72      	ble.n	9002a418 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
9002a332:	2f00      	cmp	r7, #0
9002a334:	d072      	beq.n	9002a41c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
9002a336:	3301      	adds	r3, #1
9002a338:	449e      	add	lr, r3
9002a33a:	ea4f 035e 	mov.w	r3, lr, lsr #1
9002a33e:	f01e 0f01 	tst.w	lr, #1
9002a342:	5cd0      	ldrb	r0, [r2, r3]
9002a344:	bf0c      	ite	eq
9002a346:	f000 000f 	andeq.w	r0, r0, #15
9002a34a:	1100      	asrne	r0, r0, #4
9002a34c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
9002a350:	b2c3      	uxtb	r3, r0
9002a352:	b2ba      	uxth	r2, r7
9002a354:	fa1f fc8c 	uxth.w	ip, ip
9002a358:	fb02 f00c 	mul.w	r0, r2, ip
9002a35c:	0112      	lsls	r2, r2, #4
9002a35e:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
9002a362:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
9002a366:	1a12      	subs	r2, r2, r0
9002a368:	fa1f fc8c 	uxth.w	ip, ip
9002a36c:	b292      	uxth	r2, r2
9002a36e:	eba7 070c 	sub.w	r7, r7, ip
9002a372:	4362      	muls	r2, r4
9002a374:	b2bf      	uxth	r7, r7
9002a376:	fb06 2207 	mla	r2, r6, r7, r2
9002a37a:	fb0c 2505 	mla	r5, ip, r5, r2
9002a37e:	fb00 5303 	mla	r3, r0, r3, r5
9002a382:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002a386:	b3a3      	cbz	r3, 9002a3f2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
9002a388:	4a25      	ldr	r2, [pc, #148]	@ (9002a420 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
9002a38a:	880e      	ldrh	r6, [r1, #0]
9002a38c:	6815      	ldr	r5, [r2, #0]
9002a38e:	b29a      	uxth	r2, r3
9002a390:	1234      	asrs	r4, r6, #8
9002a392:	43db      	mvns	r3, r3
9002a394:	f3c5 4007 	ubfx	r0, r5, #16, #8
9002a398:	f3c5 2707 	ubfx	r7, r5, #8, #8
9002a39c:	b2db      	uxtb	r3, r3
9002a39e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
9002a3a2:	fb10 f002 	smulbb	r0, r0, r2
9002a3a6:	b2ed      	uxtb	r5, r5
9002a3a8:	fb17 f702 	smulbb	r7, r7, r2
9002a3ac:	fb04 0403 	mla	r4, r4, r3, r0
9002a3b0:	10f0      	asrs	r0, r6, #3
9002a3b2:	fb15 f202 	smulbb	r2, r5, r2
9002a3b6:	00f6      	lsls	r6, r6, #3
9002a3b8:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9002a3bc:	b2a4      	uxth	r4, r4
9002a3be:	b2f6      	uxtb	r6, r6
9002a3c0:	fb00 7003 	mla	r0, r0, r3, r7
9002a3c4:	fb06 2303 	mla	r3, r6, r3, r2
9002a3c8:	b280      	uxth	r0, r0
9002a3ca:	b29a      	uxth	r2, r3
9002a3cc:	1c63      	adds	r3, r4, #1
9002a3ce:	eb03 2414 	add.w	r4, r3, r4, lsr #8
9002a3d2:	1c53      	adds	r3, r2, #1
9002a3d4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002a3d8:	1c42      	adds	r2, r0, #1
9002a3da:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
9002a3de:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002a3e2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002a3e6:	0940      	lsrs	r0, r0, #5
9002a3e8:	4323      	orrs	r3, r4
9002a3ea:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002a3ee:	4303      	orrs	r3, r0
9002a3f0:	800b      	strh	r3, [r1, #0]
9002a3f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002a3f6:	2600      	movs	r6, #0
9002a3f8:	e764      	b.n	9002a2c4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
9002a3fa:	2400      	movs	r4, #0
9002a3fc:	4626      	mov	r6, r4
9002a3fe:	e778      	b.n	9002a2f2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
9002a400:	2400      	movs	r4, #0
9002a402:	e776      	b.n	9002a2f2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
9002a404:	463c      	mov	r4, r7
9002a406:	e774      	b.n	9002a2f2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
9002a408:	2500      	movs	r5, #0
9002a40a:	e78e      	b.n	9002a32a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
9002a40c:	2300      	movs	r3, #0
9002a40e:	461d      	mov	r5, r3
9002a410:	e79f      	b.n	9002a352 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
9002a412:	4663      	mov	r3, ip
9002a414:	4665      	mov	r5, ip
9002a416:	e79c      	b.n	9002a352 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
9002a418:	2300      	movs	r3, #0
9002a41a:	e79a      	b.n	9002a352 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
9002a41c:	463b      	mov	r3, r7
9002a41e:	e798      	b.n	9002a352 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
9002a420:	24021c1c 	.word	0x24021c1c

9002a424 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002a424:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002a428:	b093      	sub	sp, #76	@ 0x4c
9002a42a:	461d      	mov	r5, r3
9002a42c:	920c      	str	r2, [sp, #48]	@ 0x30
9002a42e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
9002a430:	9011      	str	r0, [sp, #68]	@ 0x44
9002a432:	9107      	str	r1, [sp, #28]
9002a434:	6850      	ldr	r0, [r2, #4]
9002a436:	6812      	ldr	r2, [r2, #0]
9002a438:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
9002a43c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
9002a440:	fb00 1303 	mla	r3, r0, r3, r1
9002a444:	eb02 0943 	add.w	r9, r2, r3, lsl #1
9002a448:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002a44a:	689b      	ldr	r3, [r3, #8]
9002a44c:	3301      	adds	r3, #1
9002a44e:	f023 0301 	bic.w	r3, r3, #1
9002a452:	9306      	str	r3, [sp, #24]
9002a454:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002a456:	681f      	ldr	r7, [r3, #0]
9002a458:	9b07      	ldr	r3, [sp, #28]
9002a45a:	2b00      	cmp	r3, #0
9002a45c:	dc03      	bgt.n	9002a466 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
9002a45e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002a460:	2b00      	cmp	r3, #0
9002a462:	f340 8267 	ble.w	9002a934 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
9002a466:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002a468:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002a46c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002a470:	1e48      	subs	r0, r1, #1
9002a472:	f102 3cff 	add.w	ip, r2, #4294967295
9002a476:	2d00      	cmp	r5, #0
9002a478:	f340 80b7 	ble.w	9002a5ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
9002a47c:	ea5f 4e24 	movs.w	lr, r4, asr #16
9002a480:	ea4f 4326 	mov.w	r3, r6, asr #16
9002a484:	d406      	bmi.n	9002a494 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9002a486:	4586      	cmp	lr, r0
9002a488:	da04      	bge.n	9002a494 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9002a48a:	2b00      	cmp	r3, #0
9002a48c:	db02      	blt.n	9002a494 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9002a48e:	4563      	cmp	r3, ip
9002a490:	f2c0 80ac 	blt.w	9002a5ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9002a494:	f11e 0e01 	adds.w	lr, lr, #1
9002a498:	f100 809f 	bmi.w	9002a5da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
9002a49c:	4571      	cmp	r1, lr
9002a49e:	f2c0 809c 	blt.w	9002a5da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
9002a4a2:	3301      	adds	r3, #1
9002a4a4:	f100 8099 	bmi.w	9002a5da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
9002a4a8:	429a      	cmp	r2, r3
9002a4aa:	f2c0 8096 	blt.w	9002a5da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
9002a4ae:	46c8      	mov	r8, r9
9002a4b0:	f9bd a018 	ldrsh.w	sl, [sp, #24]
9002a4b4:	9509      	str	r5, [sp, #36]	@ 0x24
9002a4b6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002a4b8:	2b00      	cmp	r3, #0
9002a4ba:	f340 80b5 	ble.w	9002a628 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9002a4be:	f3c4 3303 	ubfx	r3, r4, #12, #4
9002a4c2:	1430      	asrs	r0, r6, #16
9002a4c4:	f3c6 3103 	ubfx	r1, r6, #12, #4
9002a4c8:	9308      	str	r3, [sp, #32]
9002a4ca:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002a4cc:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
9002a4d0:	1423      	asrs	r3, r4, #16
9002a4d2:	f100 813f 	bmi.w	9002a754 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
9002a4d6:	f10c 3bff 	add.w	fp, ip, #4294967295
9002a4da:	455b      	cmp	r3, fp
9002a4dc:	f280 813a 	bge.w	9002a754 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
9002a4e0:	2800      	cmp	r0, #0
9002a4e2:	f2c0 8137 	blt.w	9002a754 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
9002a4e6:	f10e 3bff 	add.w	fp, lr, #4294967295
9002a4ea:	4558      	cmp	r0, fp
9002a4ec:	f280 8132 	bge.w	9002a754 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
9002a4f0:	9a06      	ldr	r2, [sp, #24]
9002a4f2:	fb00 3302 	mla	r3, r0, r2, r3
9002a4f6:	0858      	lsrs	r0, r3, #1
9002a4f8:	07da      	lsls	r2, r3, #31
9002a4fa:	9a08      	ldr	r2, [sp, #32]
9002a4fc:	f817 c000 	ldrb.w	ip, [r7, r0]
9002a500:	bf54      	ite	pl
9002a502:	f00c 0c0f 	andpl.w	ip, ip, #15
9002a506:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
9002a50a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9002a50e:	fa5f fc8c 	uxtb.w	ip, ip
9002a512:	2a00      	cmp	r2, #0
9002a514:	f000 80cc 	beq.w	9002a6b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9002a518:	1c58      	adds	r0, r3, #1
9002a51a:	ea4f 0e50 	mov.w	lr, r0, lsr #1
9002a51e:	07c0      	lsls	r0, r0, #31
9002a520:	f817 e00e 	ldrb.w	lr, [r7, lr]
9002a524:	bf54      	ite	pl
9002a526:	f00e 0e0f 	andpl.w	lr, lr, #15
9002a52a:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
9002a52e:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
9002a532:	fa5f fe8e 	uxtb.w	lr, lr
9002a536:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
9002a53a:	b1b9      	cbz	r1, 9002a56c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
9002a53c:	4453      	add	r3, sl
9002a53e:	0858      	lsrs	r0, r3, #1
9002a540:	07da      	lsls	r2, r3, #31
9002a542:	5c38      	ldrb	r0, [r7, r0]
9002a544:	bf54      	ite	pl
9002a546:	f000 000f 	andpl.w	r0, r0, #15
9002a54a:	1100      	asrmi	r0, r0, #4
9002a54c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
9002a550:	b2c0      	uxtb	r0, r0
9002a552:	900a      	str	r0, [sp, #40]	@ 0x28
9002a554:	1c58      	adds	r0, r3, #1
9002a556:	0843      	lsrs	r3, r0, #1
9002a558:	07c2      	lsls	r2, r0, #31
9002a55a:	5cfb      	ldrb	r3, [r7, r3]
9002a55c:	bf54      	ite	pl
9002a55e:	f003 030f 	andpl.w	r3, r3, #15
9002a562:	111b      	asrmi	r3, r3, #4
9002a564:	eb03 1303 	add.w	r3, r3, r3, lsl #4
9002a568:	b2db      	uxtb	r3, r3
9002a56a:	930e      	str	r3, [sp, #56]	@ 0x38
9002a56c:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9002a570:	b289      	uxth	r1, r1
9002a572:	fb02 f301 	mul.w	r3, r2, r1
9002a576:	0112      	lsls	r2, r2, #4
9002a578:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
9002a57c:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
9002a580:	1ad2      	subs	r2, r2, r3
9002a582:	b289      	uxth	r1, r1
9002a584:	b292      	uxth	r2, r2
9002a586:	1a40      	subs	r0, r0, r1
9002a588:	fa1f fe80 	uxth.w	lr, r0
9002a58c:	980d      	ldr	r0, [sp, #52]	@ 0x34
9002a58e:	4342      	muls	r2, r0
9002a590:	fb0c 2c0e 	mla	ip, ip, lr, r2
9002a594:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9002a596:	fb01 c102 	mla	r1, r1, r2, ip
9002a59a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9002a59c:	fb03 1302 	mla	r3, r3, r2, r1
9002a5a0:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002a5a4:	2bff      	cmp	r3, #255	@ 0xff
9002a5a6:	f040 8094 	bne.w	9002a6d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
9002a5aa:	4bbf      	ldr	r3, [pc, #764]	@ (9002a8a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
9002a5ac:	681a      	ldr	r2, [r3, #0]
9002a5ae:	4bbf      	ldr	r3, [pc, #764]	@ (9002a8ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
9002a5b0:	0951      	lsrs	r1, r2, #5
9002a5b2:	ea03 2312 	and.w	r3, r3, r2, lsr #8
9002a5b6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002a5ba:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002a5be:	430b      	orrs	r3, r1
9002a5c0:	4313      	orrs	r3, r2
9002a5c2:	f8a8 3000 	strh.w	r3, [r8]
9002a5c6:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002a5c8:	f108 0802 	add.w	r8, r8, #2
9002a5cc:	441c      	add	r4, r3
9002a5ce:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002a5d0:	441e      	add	r6, r3
9002a5d2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002a5d4:	3b01      	subs	r3, #1
9002a5d6:	9309      	str	r3, [sp, #36]	@ 0x24
9002a5d8:	e76d      	b.n	9002a4b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002a5da:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002a5dc:	3d01      	subs	r5, #1
9002a5de:	f109 0902 	add.w	r9, r9, #2
9002a5e2:	441c      	add	r4, r3
9002a5e4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002a5e6:	441e      	add	r6, r3
9002a5e8:	e745      	b.n	9002a476 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9002a5ea:	d021      	beq.n	9002a630 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
9002a5ec:	1e6b      	subs	r3, r5, #1
9002a5ee:	981f      	ldr	r0, [sp, #124]	@ 0x7c
9002a5f0:	fb00 4003 	mla	r0, r0, r3, r4
9002a5f4:	1400      	asrs	r0, r0, #16
9002a5f6:	f53f af5a 	bmi.w	9002a4ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002a5fa:	3901      	subs	r1, #1
9002a5fc:	4288      	cmp	r0, r1
9002a5fe:	f6bf af56 	bge.w	9002a4ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002a602:	9920      	ldr	r1, [sp, #128]	@ 0x80
9002a604:	fb01 6303 	mla	r3, r1, r3, r6
9002a608:	141b      	asrs	r3, r3, #16
9002a60a:	f53f af50 	bmi.w	9002a4ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002a60e:	3a01      	subs	r2, #1
9002a610:	4293      	cmp	r3, r2
9002a612:	f6bf af4c 	bge.w	9002a4ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002a616:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
9002a61a:	46a8      	mov	r8, r5
9002a61c:	46ce      	mov	lr, r9
9002a61e:	9308      	str	r3, [sp, #32]
9002a620:	f1b8 0f00 	cmp.w	r8, #0
9002a624:	f300 80b6 	bgt.w	9002a794 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002a628:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
9002a62c:	eb09 0945 	add.w	r9, r9, r5, lsl #1
9002a630:	9b07      	ldr	r3, [sp, #28]
9002a632:	2b00      	cmp	r3, #0
9002a634:	f340 817e 	ble.w	9002a934 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
9002a638:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002a63c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002a63e:	ee30 0a04 	vadd.f32	s0, s0, s8
9002a642:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002a646:	eef0 6a62 	vmov.f32	s13, s5
9002a64a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002a64e:	ee31 1a05 	vadd.f32	s2, s2, s10
9002a652:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002a656:	ee16 4a90 	vmov	r4, s13
9002a65a:	eef0 6a43 	vmov.f32	s13, s6
9002a65e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002a662:	ee16 6a90 	vmov	r6, s13
9002a666:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002a66a:	ee61 7a27 	vmul.f32	s15, s2, s15
9002a66e:	ee77 2a62 	vsub.f32	s5, s14, s5
9002a672:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002a676:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002a67a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002a67e:	ee12 2a90 	vmov	r2, s5
9002a682:	eef0 2a47 	vmov.f32	s5, s14
9002a686:	fb92 f3f3 	sdiv	r3, r2, r3
9002a68a:	ee13 2a10 	vmov	r2, s6
9002a68e:	931f      	str	r3, [sp, #124]	@ 0x7c
9002a690:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002a692:	eeb0 3a67 	vmov.f32	s6, s15
9002a696:	fb92 f3f3 	sdiv	r3, r2, r3
9002a69a:	9320      	str	r3, [sp, #128]	@ 0x80
9002a69c:	9b07      	ldr	r3, [sp, #28]
9002a69e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9002a6a0:	3b01      	subs	r3, #1
9002a6a2:	9307      	str	r3, [sp, #28]
9002a6a4:	bf08      	it	eq
9002a6a6:	4615      	moveq	r5, r2
9002a6a8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002a6aa:	bf18      	it	ne
9002a6ac:	461d      	movne	r5, r3
9002a6ae:	e6d3      	b.n	9002a458 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
9002a6b0:	2900      	cmp	r1, #0
9002a6b2:	f43f af5b 	beq.w	9002a56c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
9002a6b6:	eb0a 0003 	add.w	r0, sl, r3
9002a6ba:	0843      	lsrs	r3, r0, #1
9002a6bc:	07c0      	lsls	r0, r0, #31
9002a6be:	5cfb      	ldrb	r3, [r7, r3]
9002a6c0:	bf54      	ite	pl
9002a6c2:	f003 030f 	andpl.w	r3, r3, #15
9002a6c6:	111b      	asrmi	r3, r3, #4
9002a6c8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
9002a6cc:	b2db      	uxtb	r3, r3
9002a6ce:	930a      	str	r3, [sp, #40]	@ 0x28
9002a6d0:	e74c      	b.n	9002a56c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
9002a6d2:	2b00      	cmp	r3, #0
9002a6d4:	f43f af77 	beq.w	9002a5c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002a6d8:	4a73      	ldr	r2, [pc, #460]	@ (9002a8a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
9002a6da:	fa1f fe83 	uxth.w	lr, r3
9002a6de:	f8b8 c000 	ldrh.w	ip, [r8]
9002a6e2:	43db      	mvns	r3, r3
9002a6e4:	6810      	ldr	r0, [r2, #0]
9002a6e6:	ea4f 212c 	mov.w	r1, ip, asr #8
9002a6ea:	f3c0 4207 	ubfx	r2, r0, #16, #8
9002a6ee:	b2db      	uxtb	r3, r3
9002a6f0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9002a6f4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
9002a6f8:	fb12 f20e 	smulbb	r2, r2, lr
9002a6fc:	b2c0      	uxtb	r0, r0
9002a6fe:	fb1b fb0e 	smulbb	fp, fp, lr
9002a702:	fb01 2103 	mla	r1, r1, r3, r2
9002a706:	ea4f 02ec 	mov.w	r2, ip, asr #3
9002a70a:	fb10 fe0e 	smulbb	lr, r0, lr
9002a70e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9002a712:	b289      	uxth	r1, r1
9002a714:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
9002a718:	fa5f fc8c 	uxtb.w	ip, ip
9002a71c:	fb02 b203 	mla	r2, r2, r3, fp
9002a720:	1c48      	adds	r0, r1, #1
9002a722:	fb0c e303 	mla	r3, ip, r3, lr
9002a726:	b292      	uxth	r2, r2
9002a728:	b29b      	uxth	r3, r3
9002a72a:	eb00 2111 	add.w	r1, r0, r1, lsr #8
9002a72e:	f102 0b01 	add.w	fp, r2, #1
9002a732:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
9002a736:	1c59      	adds	r1, r3, #1
9002a738:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
9002a73c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
9002a740:	0952      	lsrs	r2, r2, #5
9002a742:	f3c1 21c4 	ubfx	r1, r1, #11, #5
9002a746:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002a74a:	4301      	orrs	r1, r0
9002a74c:	4311      	orrs	r1, r2
9002a74e:	f8a8 1000 	strh.w	r1, [r8]
9002a752:	e738      	b.n	9002a5c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002a754:	f113 0b01 	adds.w	fp, r3, #1
9002a758:	f53f af35 	bmi.w	9002a5c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002a75c:	45dc      	cmp	ip, fp
9002a75e:	f6ff af32 	blt.w	9002a5c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002a762:	f110 0b01 	adds.w	fp, r0, #1
9002a766:	f53f af2e 	bmi.w	9002a5c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002a76a:	45de      	cmp	lr, fp
9002a76c:	f6ff af2b 	blt.w	9002a5c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002a770:	9302      	str	r3, [sp, #8]
9002a772:	fa0f f38e 	sxth.w	r3, lr
9002a776:	9a08      	ldr	r2, [sp, #32]
9002a778:	9301      	str	r3, [sp, #4]
9002a77a:	fa0f f38c 	sxth.w	r3, ip
9002a77e:	9105      	str	r1, [sp, #20]
9002a780:	4641      	mov	r1, r8
9002a782:	9300      	str	r3, [sp, #0]
9002a784:	4653      	mov	r3, sl
9002a786:	e9cd 0203 	strd	r0, r2, [sp, #12]
9002a78a:	463a      	mov	r2, r7
9002a78c:	9811      	ldr	r0, [sp, #68]	@ 0x44
9002a78e:	f7ff fd73 	bl	9002a278 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
9002a792:	e718      	b.n	9002a5c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002a794:	1422      	asrs	r2, r4, #16
9002a796:	9906      	ldr	r1, [sp, #24]
9002a798:	1433      	asrs	r3, r6, #16
9002a79a:	f3c4 3003 	ubfx	r0, r4, #12, #4
9002a79e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
9002a7a2:	fb01 2303 	mla	r3, r1, r3, r2
9002a7a6:	085a      	lsrs	r2, r3, #1
9002a7a8:	07d9      	lsls	r1, r3, #31
9002a7aa:	5cba      	ldrb	r2, [r7, r2]
9002a7ac:	bf54      	ite	pl
9002a7ae:	f002 020f 	andpl.w	r2, r2, #15
9002a7b2:	1112      	asrmi	r2, r2, #4
9002a7b4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9002a7b8:	b2d2      	uxtb	r2, r2
9002a7ba:	2800      	cmp	r0, #0
9002a7bc:	d063      	beq.n	9002a886 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
9002a7be:	f103 0a01 	add.w	sl, r3, #1
9002a7c2:	ea4f 015a 	mov.w	r1, sl, lsr #1
9002a7c6:	f01a 0f01 	tst.w	sl, #1
9002a7ca:	5c79      	ldrb	r1, [r7, r1]
9002a7cc:	bf0c      	ite	eq
9002a7ce:	f001 010f 	andeq.w	r1, r1, #15
9002a7d2:	1109      	asrne	r1, r1, #4
9002a7d4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9002a7d8:	b2c9      	uxtb	r1, r1
9002a7da:	910f      	str	r1, [sp, #60]	@ 0x3c
9002a7dc:	f1bc 0f00 	cmp.w	ip, #0
9002a7e0:	d01a      	beq.n	9002a818 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
9002a7e2:	9908      	ldr	r1, [sp, #32]
9002a7e4:	440b      	add	r3, r1
9002a7e6:	0859      	lsrs	r1, r3, #1
9002a7e8:	f013 0f01 	tst.w	r3, #1
9002a7ec:	f103 0301 	add.w	r3, r3, #1
9002a7f0:	5c79      	ldrb	r1, [r7, r1]
9002a7f2:	bf0c      	ite	eq
9002a7f4:	f001 010f 	andeq.w	r1, r1, #15
9002a7f8:	1109      	asrne	r1, r1, #4
9002a7fa:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9002a7fe:	b2c9      	uxtb	r1, r1
9002a800:	910b      	str	r1, [sp, #44]	@ 0x2c
9002a802:	0859      	lsrs	r1, r3, #1
9002a804:	07db      	lsls	r3, r3, #31
9002a806:	5c79      	ldrb	r1, [r7, r1]
9002a808:	bf54      	ite	pl
9002a80a:	f001 010f 	andpl.w	r1, r1, #15
9002a80e:	1109      	asrmi	r1, r1, #4
9002a810:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9002a814:	b2c9      	uxtb	r1, r1
9002a816:	9110      	str	r1, [sp, #64]	@ 0x40
9002a818:	b280      	uxth	r0, r0
9002a81a:	fa1f fc8c 	uxth.w	ip, ip
9002a81e:	fb00 f30c 	mul.w	r3, r0, ip
9002a822:	0100      	lsls	r0, r0, #4
9002a824:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
9002a828:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
9002a82c:	1ac0      	subs	r0, r0, r3
9002a82e:	fa1f fc8c 	uxth.w	ip, ip
9002a832:	b280      	uxth	r0, r0
9002a834:	eba1 010c 	sub.w	r1, r1, ip
9002a838:	fa1f fa81 	uxth.w	sl, r1
9002a83c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9002a83e:	4348      	muls	r0, r1
9002a840:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9002a842:	fb02 020a 	mla	r2, r2, sl, r0
9002a846:	fb0c 2c01 	mla	ip, ip, r1, r2
9002a84a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9002a84c:	fb03 c302 	mla	r3, r3, r2, ip
9002a850:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002a854:	2bff      	cmp	r3, #255	@ 0xff
9002a856:	d12b      	bne.n	9002a8b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
9002a858:	4b13      	ldr	r3, [pc, #76]	@ (9002a8a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
9002a85a:	681a      	ldr	r2, [r3, #0]
9002a85c:	4b13      	ldr	r3, [pc, #76]	@ (9002a8ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
9002a85e:	0951      	lsrs	r1, r2, #5
9002a860:	ea03 2312 	and.w	r3, r3, r2, lsr #8
9002a864:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002a868:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002a86c:	430b      	orrs	r3, r1
9002a86e:	4313      	orrs	r3, r2
9002a870:	f8ae 3000 	strh.w	r3, [lr]
9002a874:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002a876:	f10e 0e02 	add.w	lr, lr, #2
9002a87a:	f108 38ff 	add.w	r8, r8, #4294967295
9002a87e:	441c      	add	r4, r3
9002a880:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002a882:	441e      	add	r6, r3
9002a884:	e6cc      	b.n	9002a620 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
9002a886:	f1bc 0f00 	cmp.w	ip, #0
9002a88a:	d0c5      	beq.n	9002a818 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
9002a88c:	9908      	ldr	r1, [sp, #32]
9002a88e:	440b      	add	r3, r1
9002a890:	0859      	lsrs	r1, r3, #1
9002a892:	07db      	lsls	r3, r3, #31
9002a894:	5c79      	ldrb	r1, [r7, r1]
9002a896:	bf54      	ite	pl
9002a898:	f001 010f 	andpl.w	r1, r1, #15
9002a89c:	1109      	asrmi	r1, r1, #4
9002a89e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9002a8a2:	b2c9      	uxtb	r1, r1
9002a8a4:	910b      	str	r1, [sp, #44]	@ 0x2c
9002a8a6:	e7b7      	b.n	9002a818 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
9002a8a8:	24021c1c 	.word	0x24021c1c
9002a8ac:	fffff800 	.word	0xfffff800
9002a8b0:	2b00      	cmp	r3, #0
9002a8b2:	d0df      	beq.n	9002a874 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
9002a8b4:	4a21      	ldr	r2, [pc, #132]	@ (9002a93c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
9002a8b6:	fa1f fa83 	uxth.w	sl, r3
9002a8ba:	f8be c000 	ldrh.w	ip, [lr]
9002a8be:	43db      	mvns	r3, r3
9002a8c0:	6810      	ldr	r0, [r2, #0]
9002a8c2:	ea4f 212c 	mov.w	r1, ip, asr #8
9002a8c6:	f3c0 4207 	ubfx	r2, r0, #16, #8
9002a8ca:	b2db      	uxtb	r3, r3
9002a8cc:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9002a8d0:	f3c0 2b07 	ubfx	fp, r0, #8, #8
9002a8d4:	fb12 f20a 	smulbb	r2, r2, sl
9002a8d8:	b2c0      	uxtb	r0, r0
9002a8da:	fb1b fb0a 	smulbb	fp, fp, sl
9002a8de:	fb01 2103 	mla	r1, r1, r3, r2
9002a8e2:	ea4f 02ec 	mov.w	r2, ip, asr #3
9002a8e6:	fb10 f00a 	smulbb	r0, r0, sl
9002a8ea:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9002a8ee:	b289      	uxth	r1, r1
9002a8f0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
9002a8f4:	fa5f fc8c 	uxtb.w	ip, ip
9002a8f8:	fb02 b203 	mla	r2, r2, r3, fp
9002a8fc:	fb0c 0003 	mla	r0, ip, r3, r0
9002a900:	1c4b      	adds	r3, r1, #1
9002a902:	b292      	uxth	r2, r2
9002a904:	b280      	uxth	r0, r0
9002a906:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9002a90a:	f100 0b01 	add.w	fp, r0, #1
9002a90e:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
9002a912:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
9002a916:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
9002a91a:	ea4b 0101 	orr.w	r1, fp, r1
9002a91e:	f102 0b01 	add.w	fp, r2, #1
9002a922:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
9002a926:	0952      	lsrs	r2, r2, #5
9002a928:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002a92c:	4311      	orrs	r1, r2
9002a92e:	f8ae 1000 	strh.w	r1, [lr]
9002a932:	e79f      	b.n	9002a874 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
9002a934:	b013      	add	sp, #76	@ 0x4c
9002a936:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002a93a:	bf00      	nop
9002a93c:	24021c1c 	.word	0x24021c1c

9002a940 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
9002a940:	b570      	push	{r4, r5, r6, lr}
9002a942:	1208      	asrs	r0, r1, #8
9002a944:	f8bd 5010 	ldrh.w	r5, [sp, #16]
9002a948:	b29e      	uxth	r6, r3
9002a94a:	1213      	asrs	r3, r2, #8
9002a94c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9002a950:	10cc      	asrs	r4, r1, #3
9002a952:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
9002a956:	00c9      	lsls	r1, r1, #3
9002a958:	fb10 f006 	smulbb	r0, r0, r6
9002a95c:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
9002a960:	fb13 f305 	smulbb	r3, r3, r5
9002a964:	fb14 f406 	smulbb	r4, r4, r6
9002a968:	4418      	add	r0, r3
9002a96a:	10d3      	asrs	r3, r2, #3
9002a96c:	00d2      	lsls	r2, r2, #3
9002a96e:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
9002a972:	b280      	uxth	r0, r0
9002a974:	b2d2      	uxtb	r2, r2
9002a976:	fb13 f305 	smulbb	r3, r3, r5
9002a97a:	fb12 f205 	smulbb	r2, r2, r5
9002a97e:	441c      	add	r4, r3
9002a980:	b2cb      	uxtb	r3, r1
9002a982:	fb13 f306 	smulbb	r3, r3, r6
9002a986:	b2a4      	uxth	r4, r4
9002a988:	4413      	add	r3, r2
9002a98a:	1c42      	adds	r2, r0, #1
9002a98c:	b29b      	uxth	r3, r3
9002a98e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002a992:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
9002a996:	1c58      	adds	r0, r3, #1
9002a998:	eb00 2013 	add.w	r0, r0, r3, lsr #8
9002a99c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002a9a0:	4310      	orrs	r0, r2
9002a9a2:	1c62      	adds	r2, r4, #1
9002a9a4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
9002a9a8:	0964      	lsrs	r4, r4, #5
9002a9aa:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
9002a9ae:	4320      	orrs	r0, r4
9002a9b0:	bd70      	pop	{r4, r5, r6, pc}
	...

9002a9b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9002a9b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002a9b8:	b08f      	sub	sp, #60	@ 0x3c
9002a9ba:	461c      	mov	r4, r3
9002a9bc:	460d      	mov	r5, r1
9002a9be:	4616      	mov	r6, r2
9002a9c0:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
9002a9c4:	9004      	str	r0, [sp, #16]
9002a9c6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002a9c8:	2f00      	cmp	r7, #0
9002a9ca:	f000 80f6 	beq.w	9002abba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9002a9ce:	6820      	ldr	r0, [r4, #0]
9002a9d0:	aa0a      	add	r2, sp, #40	@ 0x28
9002a9d2:	6861      	ldr	r1, [r4, #4]
9002a9d4:	f04f 0802 	mov.w	r8, #2
9002a9d8:	3604      	adds	r6, #4
9002a9da:	c203      	stmia	r2!, {r0, r1}
9002a9dc:	6818      	ldr	r0, [r3, #0]
9002a9de:	aa0c      	add	r2, sp, #48	@ 0x30
9002a9e0:	6859      	ldr	r1, [r3, #4]
9002a9e2:	c203      	stmia	r2!, {r0, r1}
9002a9e4:	a80a      	add	r0, sp, #40	@ 0x28
9002a9e6:	f7ee f9c5 	bl	90018d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002a9ea:	4621      	mov	r1, r4
9002a9ec:	a80c      	add	r0, sp, #48	@ 0x30
9002a9ee:	f7ee fa05 	bl	90018dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002a9f2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9002a9f6:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
9002a9fa:	f002 0301 	and.w	r3, r2, #1
9002a9fe:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
9002aa02:	9306      	str	r3, [sp, #24]
9002aa04:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9002aa08:	f003 0101 	and.w	r1, r3, #1
9002aa0c:	9105      	str	r1, [sp, #20]
9002aa0e:	9805      	ldr	r0, [sp, #20]
9002aa10:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
9002aa14:	4403      	add	r3, r0
9002aa16:	fb01 2303 	mla	r3, r1, r3, r2
9002aa1a:	fb93 f3f8 	sdiv	r3, r3, r8
9002aa1e:	441d      	add	r5, r3
9002aa20:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9002aa24:	441a      	add	r2, r3
9002aa26:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9002aa2a:	4419      	add	r1, r3
9002aa2c:	4b64      	ldr	r3, [pc, #400]	@ (9002abc0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
9002aa2e:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
9002aa32:	6818      	ldr	r0, [r3, #0]
9002aa34:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
9002aa38:	6803      	ldr	r3, [r0, #0]
9002aa3a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002aa3c:	4798      	blx	r3
9002aa3e:	4a61      	ldr	r2, [pc, #388]	@ (9002abc4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
9002aa40:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
9002aa44:	2fff      	cmp	r7, #255	@ 0xff
9002aa46:	8813      	ldrh	r3, [r2, #0]
9002aa48:	4611      	mov	r1, r2
9002aa4a:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
9002aa4e:	fb03 fb0b 	mul.w	fp, r3, fp
9002aa52:	fb03 a404 	mla	r4, r3, r4, sl
9002aa56:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9002aa5a:	d06b      	beq.n	9002ab34 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
9002aa5c:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
9002aa60:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
9002aa64:	9303      	str	r3, [sp, #12]
9002aa66:	eb04 034b 	add.w	r3, r4, fp, lsl #1
9002aa6a:	e9cd 3207 	strd	r3, r2, [sp, #28]
9002aa6e:	9b07      	ldr	r3, [sp, #28]
9002aa70:	42a3      	cmp	r3, r4
9002aa72:	f240 809d 	bls.w	9002abb0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
9002aa76:	9b06      	ldr	r3, [sp, #24]
9002aa78:	2b00      	cmp	r3, #0
9002aa7a:	d039      	beq.n	9002aaf0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
9002aa7c:	782b      	ldrb	r3, [r5, #0]
9002aa7e:	f105 0801 	add.w	r8, r5, #1
9002aa82:	f109 3bff 	add.w	fp, r9, #4294967295
9002aa86:	8822      	ldrh	r2, [r4, #0]
9002aa88:	f003 030f 	and.w	r3, r3, #15
9002aa8c:	9804      	ldr	r0, [sp, #16]
9002aa8e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
9002aa92:	9b03      	ldr	r3, [sp, #12]
9002aa94:	9300      	str	r3, [sp, #0]
9002aa96:	463b      	mov	r3, r7
9002aa98:	f7ff ff52 	bl	9002a940 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
9002aa9c:	f824 0b02 	strh.w	r0, [r4], #2
9002aaa0:	f1bb 0f01 	cmp.w	fp, #1
9002aaa4:	46a2      	mov	sl, r4
9002aaa6:	f104 0404 	add.w	r4, r4, #4
9002aaaa:	dd24      	ble.n	9002aaf6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
9002aaac:	f898 3000 	ldrb.w	r3, [r8]
9002aab0:	f1ab 0b02 	sub.w	fp, fp, #2
9002aab4:	f834 2c04 	ldrh.w	r2, [r4, #-4]
9002aab8:	091b      	lsrs	r3, r3, #4
9002aaba:	9804      	ldr	r0, [sp, #16]
9002aabc:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
9002aac0:	9b03      	ldr	r3, [sp, #12]
9002aac2:	9300      	str	r3, [sp, #0]
9002aac4:	463b      	mov	r3, r7
9002aac6:	f7ff ff3b 	bl	9002a940 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
9002aaca:	f824 0c04 	strh.w	r0, [r4, #-4]
9002aace:	f818 3b01 	ldrb.w	r3, [r8], #1
9002aad2:	f834 2c02 	ldrh.w	r2, [r4, #-2]
9002aad6:	f003 030f 	and.w	r3, r3, #15
9002aada:	9804      	ldr	r0, [sp, #16]
9002aadc:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
9002aae0:	9b03      	ldr	r3, [sp, #12]
9002aae2:	9300      	str	r3, [sp, #0]
9002aae4:	463b      	mov	r3, r7
9002aae6:	f7ff ff2b 	bl	9002a940 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
9002aaea:	f824 0c02 	strh.w	r0, [r4, #-2]
9002aaee:	e7d7      	b.n	9002aaa0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
9002aaf0:	46a8      	mov	r8, r5
9002aaf2:	46cb      	mov	fp, r9
9002aaf4:	e7d4      	b.n	9002aaa0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
9002aaf6:	d10e      	bne.n	9002ab16 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
9002aaf8:	f898 3000 	ldrb.w	r3, [r8]
9002aafc:	f8ba 2000 	ldrh.w	r2, [sl]
9002ab00:	091b      	lsrs	r3, r3, #4
9002ab02:	9804      	ldr	r0, [sp, #16]
9002ab04:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
9002ab08:	9b03      	ldr	r3, [sp, #12]
9002ab0a:	9300      	str	r3, [sp, #0]
9002ab0c:	463b      	mov	r3, r7
9002ab0e:	f7ff ff17 	bl	9002a940 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
9002ab12:	f82a 0b02 	strh.w	r0, [sl], #2
9002ab16:	9b08      	ldr	r3, [sp, #32]
9002ab18:	9a05      	ldr	r2, [sp, #20]
9002ab1a:	881c      	ldrh	r4, [r3, #0]
9002ab1c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9002ab20:	eba4 0409 	sub.w	r4, r4, r9
9002ab24:	4413      	add	r3, r2
9002ab26:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002ab28:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
9002ab2c:	fb93 f3f2 	sdiv	r3, r3, r2
9002ab30:	441d      	add	r5, r3
9002ab32:	e79c      	b.n	9002aa6e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
9002ab34:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
9002ab38:	45a3      	cmp	fp, r4
9002ab3a:	d939      	bls.n	9002abb0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
9002ab3c:	9b06      	ldr	r3, [sp, #24]
9002ab3e:	b1fb      	cbz	r3, 9002ab80 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
9002ab40:	782b      	ldrb	r3, [r5, #0]
9002ab42:	1c6a      	adds	r2, r5, #1
9002ab44:	f109 30ff 	add.w	r0, r9, #4294967295
9002ab48:	3402      	adds	r4, #2
9002ab4a:	f003 030f 	and.w	r3, r3, #15
9002ab4e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002ab52:	f824 3c02 	strh.w	r3, [r4, #-2]
9002ab56:	2801      	cmp	r0, #1
9002ab58:	4623      	mov	r3, r4
9002ab5a:	f104 0404 	add.w	r4, r4, #4
9002ab5e:	dd12      	ble.n	9002ab86 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
9002ab60:	7813      	ldrb	r3, [r2, #0]
9002ab62:	3802      	subs	r0, #2
9002ab64:	091b      	lsrs	r3, r3, #4
9002ab66:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002ab6a:	f824 3c04 	strh.w	r3, [r4, #-4]
9002ab6e:	f812 3b01 	ldrb.w	r3, [r2], #1
9002ab72:	f003 030f 	and.w	r3, r3, #15
9002ab76:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002ab7a:	f824 3c02 	strh.w	r3, [r4, #-2]
9002ab7e:	e7ea      	b.n	9002ab56 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
9002ab80:	462a      	mov	r2, r5
9002ab82:	4648      	mov	r0, r9
9002ab84:	e7e7      	b.n	9002ab56 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
9002ab86:	d106      	bne.n	9002ab96 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
9002ab88:	7812      	ldrb	r2, [r2, #0]
9002ab8a:	3302      	adds	r3, #2
9002ab8c:	0912      	lsrs	r2, r2, #4
9002ab8e:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
9002ab92:	f823 2c02 	strh.w	r2, [r3, #-2]
9002ab96:	880c      	ldrh	r4, [r1, #0]
9002ab98:	9a05      	ldr	r2, [sp, #20]
9002ab9a:	eba4 0409 	sub.w	r4, r4, r9
9002ab9e:	eb03 0444 	add.w	r4, r3, r4, lsl #1
9002aba2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9002aba6:	4413      	add	r3, r2
9002aba8:	fb93 f3f8 	sdiv	r3, r3, r8
9002abac:	441d      	add	r5, r3
9002abae:	e7c3      	b.n	9002ab38 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
9002abb0:	4b03      	ldr	r3, [pc, #12]	@ (9002abc0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
9002abb2:	6818      	ldr	r0, [r3, #0]
9002abb4:	6803      	ldr	r3, [r0, #0]
9002abb6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9002abb8:	4798      	blx	r3
9002abba:	b00f      	add	sp, #60	@ 0x3c
9002abbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002abc0:	24021c0c 	.word	0x24021c0c
9002abc4:	24021c06 	.word	0x24021c06

9002abc8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
9002abc8:	b5f0      	push	{r4, r5, r6, r7, lr}
9002abca:	f89d 5014 	ldrb.w	r5, [sp, #20]
9002abce:	0a0f      	lsrs	r7, r1, #8
9002abd0:	2dff      	cmp	r5, #255	@ 0xff
9002abd2:	d10c      	bne.n	9002abee <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
9002abd4:	2bff      	cmp	r3, #255	@ 0xff
9002abd6:	d10a      	bne.n	9002abee <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
9002abd8:	0948      	lsrs	r0, r1, #5
9002abda:	4b25      	ldr	r3, [pc, #148]	@ (9002ac70 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
9002abdc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9002abe0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002abe4:	403b      	ands	r3, r7
9002abe6:	4318      	orrs	r0, r3
9002abe8:	4308      	orrs	r0, r1
9002abea:	b280      	uxth	r0, r0
9002abec:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002abee:	fb15 f503 	smulbb	r5, r5, r3
9002abf2:	1214      	asrs	r4, r2, #8
9002abf4:	10d6      	asrs	r6, r2, #3
9002abf6:	b2ab      	uxth	r3, r5
9002abf8:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
9002abfc:	00d0      	lsls	r0, r2, #3
9002abfe:	f3c1 4207 	ubfx	r2, r1, #16, #8
9002ac02:	1c5d      	adds	r5, r3, #1
9002ac04:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9002ac08:	b2c0      	uxtb	r0, r0
9002ac0a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9002ac0e:	eb05 2513 	add.w	r5, r5, r3, lsr #8
9002ac12:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9002ac16:	f3c5 2507 	ubfx	r5, r5, #8, #8
9002ac1a:	fa1f fc85 	uxth.w	ip, r5
9002ac1e:	43ed      	mvns	r5, r5
9002ac20:	fb12 f20c 	smulbb	r2, r2, ip
9002ac24:	b2eb      	uxtb	r3, r5
9002ac26:	b2fd      	uxtb	r5, r7
9002ac28:	fb04 2403 	mla	r4, r4, r3, r2
9002ac2c:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
9002ac30:	fb15 f50c 	smulbb	r5, r5, ip
9002ac34:	b2c8      	uxtb	r0, r1
9002ac36:	b2a4      	uxth	r4, r4
9002ac38:	fb10 f00c 	smulbb	r0, r0, ip
9002ac3c:	fb06 5503 	mla	r5, r6, r3, r5
9002ac40:	fb02 0003 	mla	r0, r2, r3, r0
9002ac44:	b2ad      	uxth	r5, r5
9002ac46:	b283      	uxth	r3, r0
9002ac48:	1c60      	adds	r0, r4, #1
9002ac4a:	eb00 2414 	add.w	r4, r0, r4, lsr #8
9002ac4e:	1c58      	adds	r0, r3, #1
9002ac50:	eb00 2013 	add.w	r0, r0, r3, lsr #8
9002ac54:	1c6b      	adds	r3, r5, #1
9002ac56:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
9002ac5a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002ac5e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002ac62:	096d      	lsrs	r5, r5, #5
9002ac64:	4320      	orrs	r0, r4
9002ac66:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9002ac6a:	4328      	orrs	r0, r5
9002ac6c:	e7be      	b.n	9002abec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
9002ac6e:	bf00      	nop
9002ac70:	00fff800 	.word	0x00fff800

9002ac74 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9002ac74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002ac78:	461c      	mov	r4, r3
9002ac7a:	b08d      	sub	sp, #52	@ 0x34
9002ac7c:	460d      	mov	r5, r1
9002ac7e:	4616      	mov	r6, r2
9002ac80:	9b16      	ldr	r3, [sp, #88]	@ 0x58
9002ac82:	4680      	mov	r8, r0
9002ac84:	6861      	ldr	r1, [r4, #4]
9002ac86:	aa08      	add	r2, sp, #32
9002ac88:	6820      	ldr	r0, [r4, #0]
9002ac8a:	f04f 0a02 	mov.w	sl, #2
9002ac8e:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
9002ac92:	3604      	adds	r6, #4
9002ac94:	c203      	stmia	r2!, {r0, r1}
9002ac96:	6818      	ldr	r0, [r3, #0]
9002ac98:	aa0a      	add	r2, sp, #40	@ 0x28
9002ac9a:	6859      	ldr	r1, [r3, #4]
9002ac9c:	c203      	stmia	r2!, {r0, r1}
9002ac9e:	a808      	add	r0, sp, #32
9002aca0:	f7ee f868 	bl	90018d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002aca4:	4621      	mov	r1, r4
9002aca6:	a80a      	add	r0, sp, #40	@ 0x28
9002aca8:	f7ee f8a8 	bl	90018dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002acac:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
9002acb0:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
9002acb4:	f002 0301 	and.w	r3, r2, #1
9002acb8:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
9002acbc:	9303      	str	r3, [sp, #12]
9002acbe:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
9002acc2:	f003 0101 	and.w	r1, r3, #1
9002acc6:	9102      	str	r1, [sp, #8]
9002acc8:	9802      	ldr	r0, [sp, #8]
9002acca:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
9002acce:	4403      	add	r3, r0
9002acd0:	fb01 2303 	mla	r3, r1, r3, r2
9002acd4:	fb93 f3fa 	sdiv	r3, r3, sl
9002acd8:	441d      	add	r5, r3
9002acda:	f8bd 3020 	ldrh.w	r3, [sp, #32]
9002acde:	441a      	add	r2, r3
9002ace0:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
9002ace4:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
9002ace8:	4419      	add	r1, r3
9002acea:	4a3e      	ldr	r2, [pc, #248]	@ (9002ade4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
9002acec:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
9002acf0:	6810      	ldr	r0, [r2, #0]
9002acf2:	9205      	str	r2, [sp, #20]
9002acf4:	6803      	ldr	r3, [r0, #0]
9002acf6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002acf8:	4798      	blx	r3
9002acfa:	4b3b      	ldr	r3, [pc, #236]	@ (9002ade8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
9002acfc:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
9002ad00:	8819      	ldrh	r1, [r3, #0]
9002ad02:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
9002ad06:	434f      	muls	r7, r1
9002ad08:	fb01 c404 	mla	r4, r1, r4, ip
9002ad0c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9002ad10:	eb04 0247 	add.w	r2, r4, r7, lsl #1
9002ad14:	e9cd 3a06 	strd	r3, sl, [sp, #24]
9002ad18:	9204      	str	r2, [sp, #16]
9002ad1a:	9b04      	ldr	r3, [sp, #16]
9002ad1c:	429c      	cmp	r4, r3
9002ad1e:	d258      	bcs.n	9002add2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
9002ad20:	9b03      	ldr	r3, [sp, #12]
9002ad22:	2b00      	cmp	r3, #0
9002ad24:	d034      	beq.n	9002ad90 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
9002ad26:	782b      	ldrb	r3, [r5, #0]
9002ad28:	1c6f      	adds	r7, r5, #1
9002ad2a:	f003 030f 	and.w	r3, r3, #15
9002ad2e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
9002ad32:	0e0b      	lsrs	r3, r1, #24
9002ad34:	d006      	beq.n	9002ad44 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
9002ad36:	8822      	ldrh	r2, [r4, #0]
9002ad38:	4640      	mov	r0, r8
9002ad3a:	9300      	str	r3, [sp, #0]
9002ad3c:	464b      	mov	r3, r9
9002ad3e:	f7ff ff43 	bl	9002abc8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
9002ad42:	8020      	strh	r0, [r4, #0]
9002ad44:	3402      	adds	r4, #2
9002ad46:	f10b 3aff 	add.w	sl, fp, #4294967295
9002ad4a:	f1ba 0f01 	cmp.w	sl, #1
9002ad4e:	dd22      	ble.n	9002ad96 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9002ad50:	783b      	ldrb	r3, [r7, #0]
9002ad52:	091b      	lsrs	r3, r3, #4
9002ad54:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
9002ad58:	0e0b      	lsrs	r3, r1, #24
9002ad5a:	d006      	beq.n	9002ad6a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
9002ad5c:	8822      	ldrh	r2, [r4, #0]
9002ad5e:	4640      	mov	r0, r8
9002ad60:	9300      	str	r3, [sp, #0]
9002ad62:	464b      	mov	r3, r9
9002ad64:	f7ff ff30 	bl	9002abc8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
9002ad68:	8020      	strh	r0, [r4, #0]
9002ad6a:	f817 3b01 	ldrb.w	r3, [r7], #1
9002ad6e:	f003 030f 	and.w	r3, r3, #15
9002ad72:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
9002ad76:	0e0b      	lsrs	r3, r1, #24
9002ad78:	d006      	beq.n	9002ad88 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
9002ad7a:	8862      	ldrh	r2, [r4, #2]
9002ad7c:	4640      	mov	r0, r8
9002ad7e:	9300      	str	r3, [sp, #0]
9002ad80:	464b      	mov	r3, r9
9002ad82:	f7ff ff21 	bl	9002abc8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
9002ad86:	8060      	strh	r0, [r4, #2]
9002ad88:	3404      	adds	r4, #4
9002ad8a:	f1aa 0a02 	sub.w	sl, sl, #2
9002ad8e:	e7dc      	b.n	9002ad4a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
9002ad90:	462f      	mov	r7, r5
9002ad92:	46da      	mov	sl, fp
9002ad94:	e7d9      	b.n	9002ad4a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
9002ad96:	d10d      	bne.n	9002adb4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
9002ad98:	783b      	ldrb	r3, [r7, #0]
9002ad9a:	091b      	lsrs	r3, r3, #4
9002ad9c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
9002ada0:	0e0b      	lsrs	r3, r1, #24
9002ada2:	d006      	beq.n	9002adb2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
9002ada4:	8822      	ldrh	r2, [r4, #0]
9002ada6:	4640      	mov	r0, r8
9002ada8:	9300      	str	r3, [sp, #0]
9002adaa:	464b      	mov	r3, r9
9002adac:	f7ff ff0c 	bl	9002abc8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
9002adb0:	8020      	strh	r0, [r4, #0]
9002adb2:	3402      	adds	r4, #2
9002adb4:	9b06      	ldr	r3, [sp, #24]
9002adb6:	9a02      	ldr	r2, [sp, #8]
9002adb8:	881b      	ldrh	r3, [r3, #0]
9002adba:	eba3 030b 	sub.w	r3, r3, fp
9002adbe:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9002adc2:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
9002adc6:	4413      	add	r3, r2
9002adc8:	9a07      	ldr	r2, [sp, #28]
9002adca:	fb93 f3f2 	sdiv	r3, r3, r2
9002adce:	441d      	add	r5, r3
9002add0:	e7a3      	b.n	9002ad1a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
9002add2:	9b05      	ldr	r3, [sp, #20]
9002add4:	6818      	ldr	r0, [r3, #0]
9002add6:	6803      	ldr	r3, [r0, #0]
9002add8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9002adda:	4798      	blx	r3
9002addc:	b00d      	add	sp, #52	@ 0x34
9002adde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002ade2:	bf00      	nop
9002ade4:	24021c0c 	.word	0x24021c0c
9002ade8:	24021c06 	.word	0x24021c06

9002adec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
9002adec:	b570      	push	{r4, r5, r6, lr}
9002adee:	1214      	asrs	r4, r2, #8
9002adf0:	788d      	ldrb	r5, [r1, #2]
9002adf2:	f89d 6010 	ldrb.w	r6, [sp, #16]
9002adf6:	10d0      	asrs	r0, r2, #3
9002adf8:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
9002adfc:	00d2      	lsls	r2, r2, #3
9002adfe:	fb15 f503 	smulbb	r5, r5, r3
9002ae02:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9002ae06:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9002ae0a:	b2d2      	uxtb	r2, r2
9002ae0c:	fb04 5506 	mla	r5, r4, r6, r5
9002ae10:	784c      	ldrb	r4, [r1, #1]
9002ae12:	7809      	ldrb	r1, [r1, #0]
9002ae14:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
9002ae18:	fb14 f403 	smulbb	r4, r4, r3
9002ae1c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9002ae20:	fb11 f303 	smulbb	r3, r1, r3
9002ae24:	b2ad      	uxth	r5, r5
9002ae26:	fb00 4406 	mla	r4, r0, r6, r4
9002ae2a:	fb02 3306 	mla	r3, r2, r6, r3
9002ae2e:	1c68      	adds	r0, r5, #1
9002ae30:	b2a4      	uxth	r4, r4
9002ae32:	b29b      	uxth	r3, r3
9002ae34:	eb00 2515 	add.w	r5, r0, r5, lsr #8
9002ae38:	1c62      	adds	r2, r4, #1
9002ae3a:	1c58      	adds	r0, r3, #1
9002ae3c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
9002ae40:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9002ae44:	eb00 2013 	add.w	r0, r0, r3, lsr #8
9002ae48:	0964      	lsrs	r4, r4, #5
9002ae4a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002ae4e:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
9002ae52:	4328      	orrs	r0, r5
9002ae54:	4320      	orrs	r0, r4
9002ae56:	bd70      	pop	{r4, r5, r6, pc}

9002ae58 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9002ae58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002ae5c:	b08f      	sub	sp, #60	@ 0x3c
9002ae5e:	461c      	mov	r4, r3
9002ae60:	4682      	mov	sl, r0
9002ae62:	460e      	mov	r6, r1
9002ae64:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
9002ae68:	4615      	mov	r5, r2
9002ae6a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002ae6c:	2f00      	cmp	r7, #0
9002ae6e:	f000 8141 	beq.w	9002b0f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
9002ae72:	6820      	ldr	r0, [r4, #0]
9002ae74:	aa0a      	add	r2, sp, #40	@ 0x28
9002ae76:	6861      	ldr	r1, [r4, #4]
9002ae78:	f04f 0802 	mov.w	r8, #2
9002ae7c:	3504      	adds	r5, #4
9002ae7e:	c203      	stmia	r2!, {r0, r1}
9002ae80:	6818      	ldr	r0, [r3, #0]
9002ae82:	aa0c      	add	r2, sp, #48	@ 0x30
9002ae84:	6859      	ldr	r1, [r3, #4]
9002ae86:	c203      	stmia	r2!, {r0, r1}
9002ae88:	a80a      	add	r0, sp, #40	@ 0x28
9002ae8a:	f7ed ff73 	bl	90018d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002ae8e:	4621      	mov	r1, r4
9002ae90:	a80c      	add	r0, sp, #48	@ 0x30
9002ae92:	f7ed ffb3 	bl	90018dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002ae96:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9002ae9a:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
9002ae9e:	f002 0301 	and.w	r3, r2, #1
9002aea2:	9306      	str	r3, [sp, #24]
9002aea4:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9002aea8:	f003 0101 	and.w	r1, r3, #1
9002aeac:	9105      	str	r1, [sp, #20]
9002aeae:	9805      	ldr	r0, [sp, #20]
9002aeb0:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
9002aeb4:	4403      	add	r3, r0
9002aeb6:	fb01 2303 	mla	r3, r1, r3, r2
9002aeba:	fb93 f3f8 	sdiv	r3, r3, r8
9002aebe:	441e      	add	r6, r3
9002aec0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9002aec4:	441a      	add	r2, r3
9002aec6:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9002aeca:	4419      	add	r1, r3
9002aecc:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9002aed0:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
9002aed4:	9303      	str	r3, [sp, #12]
9002aed6:	4b89      	ldr	r3, [pc, #548]	@ (9002b0fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
9002aed8:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
9002aedc:	6818      	ldr	r0, [r3, #0]
9002aede:	6803      	ldr	r3, [r0, #0]
9002aee0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002aee2:	4798      	blx	r3
9002aee4:	4a86      	ldr	r2, [pc, #536]	@ (9002b100 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
9002aee6:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
9002aeea:	2fff      	cmp	r7, #255	@ 0xff
9002aeec:	8813      	ldrh	r3, [r2, #0]
9002aeee:	4694      	mov	ip, r2
9002aef0:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
9002aef4:	fb03 9404 	mla	r4, r3, r4, r9
9002aef8:	fb03 f30b 	mul.w	r3, r3, fp
9002aefc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9002af00:	d071      	beq.n	9002afe6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
9002af02:	43f9      	mvns	r1, r7
9002af04:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9002af08:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
9002af0c:	b2c9      	uxtb	r1, r1
9002af0e:	e9cd 3207 	strd	r3, r2, [sp, #28]
9002af12:	9104      	str	r1, [sp, #16]
9002af14:	9b07      	ldr	r3, [sp, #28]
9002af16:	42a3      	cmp	r3, r4
9002af18:	f240 80e7 	bls.w	9002b0ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
9002af1c:	9b06      	ldr	r3, [sp, #24]
9002af1e:	2b00      	cmp	r3, #0
9002af20:	d03d      	beq.n	9002af9e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
9002af22:	7831      	ldrb	r1, [r6, #0]
9002af24:	4650      	mov	r0, sl
9002af26:	9b04      	ldr	r3, [sp, #16]
9002af28:	f106 0801 	add.w	r8, r6, #1
9002af2c:	f001 010f 	and.w	r1, r1, #15
9002af30:	8822      	ldrh	r2, [r4, #0]
9002af32:	9300      	str	r3, [sp, #0]
9002af34:	463b      	mov	r3, r7
9002af36:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002af3a:	4429      	add	r1, r5
9002af3c:	f7ff ff56 	bl	9002adec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
9002af40:	9b03      	ldr	r3, [sp, #12]
9002af42:	f824 0b02 	strh.w	r0, [r4], #2
9002af46:	f103 3bff 	add.w	fp, r3, #4294967295
9002af4a:	f1bb 0f01 	cmp.w	fp, #1
9002af4e:	46a1      	mov	r9, r4
9002af50:	f104 0404 	add.w	r4, r4, #4
9002af54:	dd27      	ble.n	9002afa6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
9002af56:	f898 1000 	ldrb.w	r1, [r8]
9002af5a:	4650      	mov	r0, sl
9002af5c:	9b04      	ldr	r3, [sp, #16]
9002af5e:	f1ab 0b02 	sub.w	fp, fp, #2
9002af62:	0909      	lsrs	r1, r1, #4
9002af64:	f834 2c04 	ldrh.w	r2, [r4, #-4]
9002af68:	9300      	str	r3, [sp, #0]
9002af6a:	463b      	mov	r3, r7
9002af6c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002af70:	4429      	add	r1, r5
9002af72:	f7ff ff3b 	bl	9002adec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
9002af76:	f824 0c04 	strh.w	r0, [r4, #-4]
9002af7a:	f818 1b01 	ldrb.w	r1, [r8], #1
9002af7e:	4650      	mov	r0, sl
9002af80:	9b04      	ldr	r3, [sp, #16]
9002af82:	f001 010f 	and.w	r1, r1, #15
9002af86:	f834 2c02 	ldrh.w	r2, [r4, #-2]
9002af8a:	9300      	str	r3, [sp, #0]
9002af8c:	463b      	mov	r3, r7
9002af8e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002af92:	4429      	add	r1, r5
9002af94:	f7ff ff2a 	bl	9002adec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
9002af98:	f824 0c02 	strh.w	r0, [r4, #-2]
9002af9c:	e7d5      	b.n	9002af4a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
9002af9e:	46b0      	mov	r8, r6
9002afa0:	f8dd b00c 	ldr.w	fp, [sp, #12]
9002afa4:	e7d1      	b.n	9002af4a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
9002afa6:	d10f      	bne.n	9002afc8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
9002afa8:	f898 1000 	ldrb.w	r1, [r8]
9002afac:	4650      	mov	r0, sl
9002afae:	9b04      	ldr	r3, [sp, #16]
9002afb0:	0909      	lsrs	r1, r1, #4
9002afb2:	f8b9 2000 	ldrh.w	r2, [r9]
9002afb6:	9300      	str	r3, [sp, #0]
9002afb8:	463b      	mov	r3, r7
9002afba:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002afbe:	4429      	add	r1, r5
9002afc0:	f7ff ff14 	bl	9002adec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
9002afc4:	f829 0b02 	strh.w	r0, [r9], #2
9002afc8:	9b08      	ldr	r3, [sp, #32]
9002afca:	9a05      	ldr	r2, [sp, #20]
9002afcc:	881c      	ldrh	r4, [r3, #0]
9002afce:	9b03      	ldr	r3, [sp, #12]
9002afd0:	1ae4      	subs	r4, r4, r3
9002afd2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9002afd6:	4413      	add	r3, r2
9002afd8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002afda:	eb09 0444 	add.w	r4, r9, r4, lsl #1
9002afde:	fb93 f3f2 	sdiv	r3, r3, r2
9002afe2:	441e      	add	r6, r3
9002afe4:	e796      	b.n	9002af14 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
9002afe6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9002afea:	4f46      	ldr	r7, [pc, #280]	@ (9002b104 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
9002afec:	42a3      	cmp	r3, r4
9002afee:	d97c      	bls.n	9002b0ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
9002aff0:	9a06      	ldr	r2, [sp, #24]
9002aff2:	2a00      	cmp	r2, #0
9002aff4:	d054      	beq.n	9002b0a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
9002aff6:	7830      	ldrb	r0, [r6, #0]
9002aff8:	1c71      	adds	r1, r6, #1
9002affa:	f000 000f 	and.w	r0, r0, #15
9002affe:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002b002:	eb05 0e00 	add.w	lr, r5, r0
9002b006:	5c28      	ldrb	r0, [r5, r0]
9002b008:	f89e 2002 	ldrb.w	r2, [lr, #2]
9002b00c:	f89e e001 	ldrb.w	lr, [lr, #1]
9002b010:	ea07 2202 	and.w	r2, r7, r2, lsl #8
9002b014:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9002b018:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
9002b01c:	ea42 020e 	orr.w	r2, r2, lr
9002b020:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
9002b024:	f824 2b02 	strh.w	r2, [r4], #2
9002b028:	9a03      	ldr	r2, [sp, #12]
9002b02a:	f102 3eff 	add.w	lr, r2, #4294967295
9002b02e:	f1be 0f01 	cmp.w	lr, #1
9002b032:	4620      	mov	r0, r4
9002b034:	f104 0404 	add.w	r4, r4, #4
9002b038:	dd36      	ble.n	9002b0a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
9002b03a:	7808      	ldrb	r0, [r1, #0]
9002b03c:	f1ae 0e02 	sub.w	lr, lr, #2
9002b040:	0900      	lsrs	r0, r0, #4
9002b042:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002b046:	eb05 0a00 	add.w	sl, r5, r0
9002b04a:	f89a 2001 	ldrb.w	r2, [sl, #1]
9002b04e:	f89a 9002 	ldrb.w	r9, [sl, #2]
9002b052:	00d2      	lsls	r2, r2, #3
9002b054:	ea07 2909 	and.w	r9, r7, r9, lsl #8
9002b058:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002b05c:	ea49 0202 	orr.w	r2, r9, r2
9002b060:	f815 9000 	ldrb.w	r9, [r5, r0]
9002b064:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9002b068:	f824 2c04 	strh.w	r2, [r4, #-4]
9002b06c:	f811 0b01 	ldrb.w	r0, [r1], #1
9002b070:	f000 000f 	and.w	r0, r0, #15
9002b074:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002b078:	eb05 0a00 	add.w	sl, r5, r0
9002b07c:	f89a 2001 	ldrb.w	r2, [sl, #1]
9002b080:	f89a 9002 	ldrb.w	r9, [sl, #2]
9002b084:	00d2      	lsls	r2, r2, #3
9002b086:	ea07 2909 	and.w	r9, r7, r9, lsl #8
9002b08a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002b08e:	ea49 0202 	orr.w	r2, r9, r2
9002b092:	f815 9000 	ldrb.w	r9, [r5, r0]
9002b096:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9002b09a:	f824 2c02 	strh.w	r2, [r4, #-2]
9002b09e:	e7c6      	b.n	9002b02e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
9002b0a0:	4631      	mov	r1, r6
9002b0a2:	f8dd e00c 	ldr.w	lr, [sp, #12]
9002b0a6:	e7c2      	b.n	9002b02e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
9002b0a8:	d111      	bne.n	9002b0ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
9002b0aa:	7809      	ldrb	r1, [r1, #0]
9002b0ac:	0909      	lsrs	r1, r1, #4
9002b0ae:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002b0b2:	186c      	adds	r4, r5, r1
9002b0b4:	5c69      	ldrb	r1, [r5, r1]
9002b0b6:	78a2      	ldrb	r2, [r4, #2]
9002b0b8:	7864      	ldrb	r4, [r4, #1]
9002b0ba:	ea07 2202 	and.w	r2, r7, r2, lsl #8
9002b0be:	00e4      	lsls	r4, r4, #3
9002b0c0:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
9002b0c4:	4322      	orrs	r2, r4
9002b0c6:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
9002b0ca:	f820 2b02 	strh.w	r2, [r0], #2
9002b0ce:	9a03      	ldr	r2, [sp, #12]
9002b0d0:	f8bc 4000 	ldrh.w	r4, [ip]
9002b0d4:	9905      	ldr	r1, [sp, #20]
9002b0d6:	1aa4      	subs	r4, r4, r2
9002b0d8:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9002b0dc:	440a      	add	r2, r1
9002b0de:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9002b0e2:	fb92 f2f8 	sdiv	r2, r2, r8
9002b0e6:	4416      	add	r6, r2
9002b0e8:	e780      	b.n	9002afec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
9002b0ea:	4b04      	ldr	r3, [pc, #16]	@ (9002b0fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
9002b0ec:	6818      	ldr	r0, [r3, #0]
9002b0ee:	6803      	ldr	r3, [r0, #0]
9002b0f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9002b0f2:	4798      	blx	r3
9002b0f4:	b00f      	add	sp, #60	@ 0x3c
9002b0f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002b0fa:	bf00      	nop
9002b0fc:	24021c0c 	.word	0x24021c0c
9002b100:	24021c06 	.word	0x24021c06
9002b104:	fffff800 	.word	0xfffff800

9002b108 <CRC_Lock>:
9002b108:	4a2d      	ldr	r2, [pc, #180]	@ (9002b1c0 <CRC_Lock+0xb8>)
9002b10a:	b530      	push	{r4, r5, lr}
9002b10c:	6813      	ldr	r3, [r2, #0]
9002b10e:	f24c 2540 	movw	r5, #49728	@ 0xc240
9002b112:	f023 0301 	bic.w	r3, r3, #1
9002b116:	6013      	str	r3, [r2, #0]
9002b118:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
9002b11c:	4b29      	ldr	r3, [pc, #164]	@ (9002b1c4 <CRC_Lock+0xbc>)
9002b11e:	681c      	ldr	r4, [r3, #0]
9002b120:	4014      	ands	r4, r2
9002b122:	42ac      	cmp	r4, r5
9002b124:	d005      	beq.n	9002b132 <CRC_Lock+0x2a>
9002b126:	681c      	ldr	r4, [r3, #0]
9002b128:	f24c 2570 	movw	r5, #49776	@ 0xc270
9002b12c:	4014      	ands	r4, r2
9002b12e:	42ac      	cmp	r4, r5
9002b130:	d125      	bne.n	9002b17e <CRC_Lock+0x76>
9002b132:	4b25      	ldr	r3, [pc, #148]	@ (9002b1c8 <CRC_Lock+0xc0>)
9002b134:	681b      	ldr	r3, [r3, #0]
9002b136:	2b00      	cmp	r3, #0
9002b138:	d139      	bne.n	9002b1ae <CRC_Lock+0xa6>
9002b13a:	4b24      	ldr	r3, [pc, #144]	@ (9002b1cc <CRC_Lock+0xc4>)
9002b13c:	681a      	ldr	r2, [r3, #0]
9002b13e:	f3c2 020b 	ubfx	r2, r2, #0, #12
9002b142:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
9002b146:	d00d      	beq.n	9002b164 <CRC_Lock+0x5c>
9002b148:	681a      	ldr	r2, [r3, #0]
9002b14a:	f240 4483 	movw	r4, #1155	@ 0x483
9002b14e:	f3c2 020b 	ubfx	r2, r2, #0, #12
9002b152:	42a2      	cmp	r2, r4
9002b154:	d006      	beq.n	9002b164 <CRC_Lock+0x5c>
9002b156:	681b      	ldr	r3, [r3, #0]
9002b158:	f240 4285 	movw	r2, #1157	@ 0x485
9002b15c:	f3c3 030b 	ubfx	r3, r3, #0, #12
9002b160:	4293      	cmp	r3, r2
9002b162:	d124      	bne.n	9002b1ae <CRC_Lock+0xa6>
9002b164:	4b1a      	ldr	r3, [pc, #104]	@ (9002b1d0 <CRC_Lock+0xc8>)
9002b166:	2201      	movs	r2, #1
9002b168:	601a      	str	r2, [r3, #0]
9002b16a:	681a      	ldr	r2, [r3, #0]
9002b16c:	2a00      	cmp	r2, #0
9002b16e:	d1fc      	bne.n	9002b16a <CRC_Lock+0x62>
9002b170:	4b18      	ldr	r3, [pc, #96]	@ (9002b1d4 <CRC_Lock+0xcc>)
9002b172:	6018      	str	r0, [r3, #0]
9002b174:	6818      	ldr	r0, [r3, #0]
9002b176:	1a43      	subs	r3, r0, r1
9002b178:	4258      	negs	r0, r3
9002b17a:	4158      	adcs	r0, r3
9002b17c:	e00e      	b.n	9002b19c <CRC_Lock+0x94>
9002b17e:	681b      	ldr	r3, [r3, #0]
9002b180:	4013      	ands	r3, r2
9002b182:	f24d 2220 	movw	r2, #53792	@ 0xd220
9002b186:	4293      	cmp	r3, r2
9002b188:	d111      	bne.n	9002b1ae <CRC_Lock+0xa6>
9002b18a:	4b13      	ldr	r3, [pc, #76]	@ (9002b1d8 <CRC_Lock+0xd0>)
9002b18c:	f240 4286 	movw	r2, #1158	@ 0x486
9002b190:	681b      	ldr	r3, [r3, #0]
9002b192:	f3c3 030b 	ubfx	r3, r3, #0, #12
9002b196:	4293      	cmp	r3, r2
9002b198:	d001      	beq.n	9002b19e <CRC_Lock+0x96>
9002b19a:	2000      	movs	r0, #0
9002b19c:	bd30      	pop	{r4, r5, pc}
9002b19e:	4b0f      	ldr	r3, [pc, #60]	@ (9002b1dc <CRC_Lock+0xd4>)
9002b1a0:	2201      	movs	r2, #1
9002b1a2:	601a      	str	r2, [r3, #0]
9002b1a4:	681a      	ldr	r2, [r3, #0]
9002b1a6:	2a00      	cmp	r2, #0
9002b1a8:	d1fc      	bne.n	9002b1a4 <CRC_Lock+0x9c>
9002b1aa:	4b0d      	ldr	r3, [pc, #52]	@ (9002b1e0 <CRC_Lock+0xd8>)
9002b1ac:	e7e1      	b.n	9002b172 <CRC_Lock+0x6a>
9002b1ae:	4b0d      	ldr	r3, [pc, #52]	@ (9002b1e4 <CRC_Lock+0xdc>)
9002b1b0:	2201      	movs	r2, #1
9002b1b2:	601a      	str	r2, [r3, #0]
9002b1b4:	681a      	ldr	r2, [r3, #0]
9002b1b6:	2a00      	cmp	r2, #0
9002b1b8:	d1fc      	bne.n	9002b1b4 <CRC_Lock+0xac>
9002b1ba:	4b0b      	ldr	r3, [pc, #44]	@ (9002b1e8 <CRC_Lock+0xe0>)
9002b1bc:	e7d9      	b.n	9002b172 <CRC_Lock+0x6a>
9002b1be:	bf00      	nop
9002b1c0:	e0002000 	.word	0xe0002000
9002b1c4:	e000ed00 	.word	0xe000ed00
9002b1c8:	e0042000 	.word	0xe0042000
9002b1cc:	5c001000 	.word	0x5c001000
9002b1d0:	58024c08 	.word	0x58024c08
9002b1d4:	58024c00 	.word	0x58024c00
9002b1d8:	46008ff0 	.word	0x46008ff0
9002b1dc:	46024c08 	.word	0x46024c08
9002b1e0:	46024c00 	.word	0x46024c00
9002b1e4:	40023008 	.word	0x40023008
9002b1e8:	40023000 	.word	0x40023000

9002b1ec <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
9002b1ec:	6101      	str	r1, [r0, #16]
9002b1ee:	4770      	bx	lr

9002b1f0 <_ZN8touchgfx8Gestures4tickEv>:
9002b1f0:	7b83      	ldrb	r3, [r0, #14]
9002b1f2:	b14b      	cbz	r3, 9002b208 <_ZN8touchgfx8Gestures4tickEv+0x18>
9002b1f4:	8903      	ldrh	r3, [r0, #8]
9002b1f6:	3301      	adds	r3, #1
9002b1f8:	b29b      	uxth	r3, r3
9002b1fa:	2b07      	cmp	r3, #7
9002b1fc:	8103      	strh	r3, [r0, #8]
9002b1fe:	bf81      	itttt	hi
9002b200:	2300      	movhi	r3, #0
9002b202:	8143      	strhhi	r3, [r0, #10]
9002b204:	8183      	strhhi	r3, [r0, #12]
9002b206:	7383      	strbhi	r3, [r0, #14]
9002b208:	4770      	bx	lr
	...

9002b20c <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
9002b20c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
9002b210:	4698      	mov	r8, r3
9002b212:	8883      	ldrh	r3, [r0, #4]
9002b214:	4604      	mov	r4, r0
9002b216:	4617      	mov	r7, r2
9002b218:	f8ad 3006 	strh.w	r3, [sp, #6]
9002b21c:	eba8 0303 	sub.w	r3, r8, r3
9002b220:	4a19      	ldr	r2, [pc, #100]	@ (9002b288 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
9002b222:	460e      	mov	r6, r1
9002b224:	b21b      	sxth	r3, r3
9002b226:	88c1      	ldrh	r1, [r0, #6]
9002b228:	9200      	str	r2, [sp, #0]
9002b22a:	2000      	movs	r0, #0
9002b22c:	2b00      	cmp	r3, #0
9002b22e:	8aa2      	ldrh	r2, [r4, #20]
9002b230:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
9002b234:	bfb8      	it	lt
9002b236:	425b      	neglt	r3, r3
9002b238:	f88d 0004 	strb.w	r0, [sp, #4]
9002b23c:	f8ad 1008 	strh.w	r1, [sp, #8]
9002b240:	b21b      	sxth	r3, r3
9002b242:	f8ad 800a 	strh.w	r8, [sp, #10]
9002b246:	f8ad 500c 	strh.w	r5, [sp, #12]
9002b24a:	4293      	cmp	r3, r2
9002b24c:	dc07      	bgt.n	9002b25e <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
9002b24e:	1a69      	subs	r1, r5, r1
9002b250:	b209      	sxth	r1, r1
9002b252:	2900      	cmp	r1, #0
9002b254:	bfb8      	it	lt
9002b256:	4249      	neglt	r1, r1
9002b258:	b209      	sxth	r1, r1
9002b25a:	428a      	cmp	r2, r1
9002b25c:	da10      	bge.n	9002b280 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
9002b25e:	6920      	ldr	r0, [r4, #16]
9002b260:	4669      	mov	r1, sp
9002b262:	eba8 0606 	sub.w	r6, r8, r6
9002b266:	1bef      	subs	r7, r5, r7
9002b268:	6803      	ldr	r3, [r0, #0]
9002b26a:	685b      	ldr	r3, [r3, #4]
9002b26c:	4798      	blx	r3
9002b26e:	2300      	movs	r3, #0
9002b270:	2001      	movs	r0, #1
9002b272:	8166      	strh	r6, [r4, #10]
9002b274:	8123      	strh	r3, [r4, #8]
9002b276:	81a7      	strh	r7, [r4, #12]
9002b278:	f8a4 8004 	strh.w	r8, [r4, #4]
9002b27c:	80e5      	strh	r5, [r4, #6]
9002b27e:	73a0      	strb	r0, [r4, #14]
9002b280:	b004      	add	sp, #16
9002b282:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002b286:	bf00      	nop
9002b288:	90031ef8 	.word	0x90031ef8

9002b28c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
9002b28c:	b5f0      	push	{r4, r5, r6, r7, lr}
9002b28e:	461e      	mov	r6, r3
9002b290:	1e4b      	subs	r3, r1, #1
9002b292:	b085      	sub	sp, #20
9002b294:	4604      	mov	r4, r0
9002b296:	2b01      	cmp	r3, #1
9002b298:	460d      	mov	r5, r1
9002b29a:	4617      	mov	r7, r2
9002b29c:	d84b      	bhi.n	9002b336 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
9002b29e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9002b2a2:	1cd3      	adds	r3, r2, #3
9002b2a4:	b29b      	uxth	r3, r3
9002b2a6:	2b06      	cmp	r3, #6
9002b2a8:	d916      	bls.n	9002b2d8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
9002b2aa:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 9002b34c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
9002b2ae:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9002b2b2:	f8cd c004 	str.w	ip, [sp, #4]
9002b2b6:	f04f 0c00 	mov.w	ip, #0
9002b2ba:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9002b2be:	6900      	ldr	r0, [r0, #16]
9002b2c0:	f8ad 100c 	strh.w	r1, [sp, #12]
9002b2c4:	a901      	add	r1, sp, #4
9002b2c6:	f88d c008 	strb.w	ip, [sp, #8]
9002b2ca:	f8ad 200a 	strh.w	r2, [sp, #10]
9002b2ce:	f8ad 300e 	strh.w	r3, [sp, #14]
9002b2d2:	6803      	ldr	r3, [r0, #0]
9002b2d4:	689b      	ldr	r3, [r3, #8]
9002b2d6:	4798      	blx	r3
9002b2d8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002b2dc:	1cd3      	adds	r3, r2, #3
9002b2de:	b29b      	uxth	r3, r3
9002b2e0:	2b06      	cmp	r3, #6
9002b2e2:	d916      	bls.n	9002b312 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9002b2e4:	f8df c064 	ldr.w	ip, [pc, #100]	@ 9002b34c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
9002b2e8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9002b2ec:	f8cd c004 	str.w	ip, [sp, #4]
9002b2f0:	f04f 0c01 	mov.w	ip, #1
9002b2f4:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9002b2f8:	6920      	ldr	r0, [r4, #16]
9002b2fa:	f8ad 100c 	strh.w	r1, [sp, #12]
9002b2fe:	a901      	add	r1, sp, #4
9002b300:	f88d c008 	strb.w	ip, [sp, #8]
9002b304:	f8ad 200a 	strh.w	r2, [sp, #10]
9002b308:	f8ad 300e 	strh.w	r3, [sp, #14]
9002b30c:	6803      	ldr	r3, [r0, #0]
9002b30e:	689b      	ldr	r3, [r3, #8]
9002b310:	4798      	blx	r3
9002b312:	4b0d      	ldr	r3, [pc, #52]	@ (9002b348 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
9002b314:	a901      	add	r1, sp, #4
9002b316:	6920      	ldr	r0, [r4, #16]
9002b318:	9301      	str	r3, [sp, #4]
9002b31a:	2300      	movs	r3, #0
9002b31c:	f88d 5008 	strb.w	r5, [sp, #8]
9002b320:	f8ad 700a 	strh.w	r7, [sp, #10]
9002b324:	f8ad 600c 	strh.w	r6, [sp, #12]
9002b328:	f8ad 300e 	strh.w	r3, [sp, #14]
9002b32c:	6803      	ldr	r3, [r0, #0]
9002b32e:	681b      	ldr	r3, [r3, #0]
9002b330:	4798      	blx	r3
9002b332:	b005      	add	sp, #20
9002b334:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002b336:	2900      	cmp	r1, #0
9002b338:	d1eb      	bne.n	9002b312 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9002b33a:	80a2      	strh	r2, [r4, #4]
9002b33c:	80c6      	strh	r6, [r0, #6]
9002b33e:	60a1      	str	r1, [r4, #8]
9002b340:	81a1      	strh	r1, [r4, #12]
9002b342:	73a1      	strb	r1, [r4, #14]
9002b344:	e7e5      	b.n	9002b312 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9002b346:	bf00      	nop
9002b348:	90031ee4 	.word	0x90031ee4
9002b34c:	90031f0c 	.word	0x90031f0c

9002b350 <appendBitsToBuffer>:
9002b350:	3901      	subs	r1, #1
9002b352:	b570      	push	{r4, r5, r6, lr}
9002b354:	2900      	cmp	r1, #0
9002b356:	db11      	blt.n	9002b37c <appendBitsToBuffer+0x2c>
9002b358:	681d      	ldr	r5, [r3, #0]
9002b35a:	fa20 f401 	lsr.w	r4, r0, r1
9002b35e:	3901      	subs	r1, #1
9002b360:	10ee      	asrs	r6, r5, #3
9002b362:	43ed      	mvns	r5, r5
9002b364:	f004 0401 	and.w	r4, r4, #1
9002b368:	f005 0507 	and.w	r5, r5, #7
9002b36c:	40ac      	lsls	r4, r5
9002b36e:	5d95      	ldrb	r5, [r2, r6]
9002b370:	432c      	orrs	r4, r5
9002b372:	5594      	strb	r4, [r2, r6]
9002b374:	681c      	ldr	r4, [r3, #0]
9002b376:	3401      	adds	r4, #1
9002b378:	601c      	str	r4, [r3, #0]
9002b37a:	e7eb      	b.n	9002b354 <appendBitsToBuffer+0x4>
9002b37c:	bd70      	pop	{r4, r5, r6, pc}

9002b37e <getNumRawDataModules>:
9002b37e:	f100 0308 	add.w	r3, r0, #8
9002b382:	2801      	cmp	r0, #1
9002b384:	ea4f 1303 	mov.w	r3, r3, lsl #4
9002b388:	fb00 f303 	mul.w	r3, r0, r3
9002b38c:	f103 0340 	add.w	r3, r3, #64	@ 0x40
9002b390:	dd12      	ble.n	9002b3b8 <getNumRawDataModules+0x3a>
9002b392:	2207      	movs	r2, #7
9002b394:	2119      	movs	r1, #25
9002b396:	2806      	cmp	r0, #6
9002b398:	fb90 f2f2 	sdiv	r2, r0, r2
9002b39c:	f102 0202 	add.w	r2, r2, #2
9002b3a0:	fb01 f102 	mul.w	r1, r1, r2
9002b3a4:	f1a1 010a 	sub.w	r1, r1, #10
9002b3a8:	fb02 f201 	mul.w	r2, r2, r1
9002b3ac:	f1a2 0237 	sub.w	r2, r2, #55	@ 0x37
9002b3b0:	eba3 0302 	sub.w	r3, r3, r2
9002b3b4:	bfc8      	it	gt
9002b3b6:	3b24      	subgt	r3, #36	@ 0x24
9002b3b8:	4618      	mov	r0, r3
9002b3ba:	4770      	bx	lr

9002b3bc <getNumDataCodewords>:
9002b3bc:	b538      	push	{r3, r4, r5, lr}
9002b3be:	4604      	mov	r4, r0
9002b3c0:	460d      	mov	r5, r1
9002b3c2:	f7ff ffdc 	bl	9002b37e <getNumRawDataModules>
9002b3c6:	2308      	movs	r3, #8
9002b3c8:	fb90 f0f3 	sdiv	r0, r0, r3
9002b3cc:	2329      	movs	r3, #41	@ 0x29
9002b3ce:	fb03 f105 	mul.w	r1, r3, r5
9002b3d2:	4b04      	ldr	r3, [pc, #16]	@ (9002b3e4 <getNumDataCodewords+0x28>)
9002b3d4:	440b      	add	r3, r1
9002b3d6:	571a      	ldrsb	r2, [r3, r4]
9002b3d8:	4b03      	ldr	r3, [pc, #12]	@ (9002b3e8 <getNumDataCodewords+0x2c>)
9002b3da:	4419      	add	r1, r3
9002b3dc:	570b      	ldrsb	r3, [r1, r4]
9002b3de:	fb02 0013 	mls	r0, r2, r3, r0
9002b3e2:	bd38      	pop	{r3, r4, r5, pc}
9002b3e4:	90032240 	.word	0x90032240
9002b3e8:	900322e4 	.word	0x900322e4

9002b3ec <reedSolomonMultiply>:
9002b3ec:	b530      	push	{r4, r5, lr}
9002b3ee:	4605      	mov	r5, r0
9002b3f0:	2407      	movs	r4, #7
9002b3f2:	2000      	movs	r0, #0
9002b3f4:	11c3      	asrs	r3, r0, #7
9002b3f6:	00da      	lsls	r2, r3, #3
9002b3f8:	1ad2      	subs	r2, r2, r3
9002b3fa:	eb03 0382 	add.w	r3, r3, r2, lsl #2
9002b3fe:	fa41 f204 	asr.w	r2, r1, r4
9002b402:	f114 34ff 	adds.w	r4, r4, #4294967295
9002b406:	f002 0201 	and.w	r2, r2, #1
9002b40a:	ea83 0340 	eor.w	r3, r3, r0, lsl #1
9002b40e:	fb12 f205 	smulbb	r2, r2, r5
9002b412:	ea83 0302 	eor.w	r3, r3, r2
9002b416:	b2d8      	uxtb	r0, r3
9002b418:	d2ec      	bcs.n	9002b3f4 <reedSolomonMultiply+0x8>
9002b41a:	bd30      	pop	{r4, r5, pc}

9002b41c <getModuleBounded>:
9002b41c:	7803      	ldrb	r3, [r0, #0]
9002b41e:	fb02 1203 	mla	r2, r2, r3, r1
9002b422:	eb00 00e2 	add.w	r0, r0, r2, asr #3
9002b426:	f002 0207 	and.w	r2, r2, #7
9002b42a:	7840      	ldrb	r0, [r0, #1]
9002b42c:	4110      	asrs	r0, r2
9002b42e:	f000 0001 	and.w	r0, r0, #1
9002b432:	4770      	bx	lr

9002b434 <setModuleBounded>:
9002b434:	b530      	push	{r4, r5, lr}
9002b436:	7804      	ldrb	r4, [r0, #0]
9002b438:	fb02 1204 	mla	r2, r2, r4, r1
9002b43c:	2101      	movs	r1, #1
9002b43e:	10d5      	asrs	r5, r2, #3
9002b440:	f002 0207 	and.w	r2, r2, #7
9002b444:	3501      	adds	r5, #1
9002b446:	4091      	lsls	r1, r2
9002b448:	5744      	ldrsb	r4, [r0, r5]
9002b44a:	b249      	sxtb	r1, r1
9002b44c:	b113      	cbz	r3, 9002b454 <setModuleBounded+0x20>
9002b44e:	430c      	orrs	r4, r1
9002b450:	5544      	strb	r4, [r0, r5]
9002b452:	bd30      	pop	{r4, r5, pc}
9002b454:	ea24 0401 	bic.w	r4, r4, r1
9002b458:	e7fa      	b.n	9002b450 <setModuleBounded+0x1c>

9002b45a <fillRectangle>:
9002b45a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002b45e:	4607      	mov	r7, r0
9002b460:	460e      	mov	r6, r1
9002b462:	4690      	mov	r8, r2
9002b464:	4699      	mov	r9, r3
9002b466:	460c      	mov	r4, r1
9002b468:	1ba3      	subs	r3, r4, r6
9002b46a:	4599      	cmp	r9, r3
9002b46c:	dd0c      	ble.n	9002b488 <fillRectangle+0x2e>
9002b46e:	2500      	movs	r5, #0
9002b470:	4545      	cmp	r5, r8
9002b472:	da07      	bge.n	9002b484 <fillRectangle+0x2a>
9002b474:	1979      	adds	r1, r7, r5
9002b476:	2301      	movs	r3, #1
9002b478:	4622      	mov	r2, r4
9002b47a:	9808      	ldr	r0, [sp, #32]
9002b47c:	f7ff ffda 	bl	9002b434 <setModuleBounded>
9002b480:	3501      	adds	r5, #1
9002b482:	e7f5      	b.n	9002b470 <fillRectangle+0x16>
9002b484:	3401      	adds	r4, #1
9002b486:	e7ef      	b.n	9002b468 <fillRectangle+0xe>
9002b488:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

9002b48c <applyMask>:
9002b48c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002b490:	4683      	mov	fp, r0
9002b492:	b085      	sub	sp, #20
9002b494:	4689      	mov	r9, r1
9002b496:	f891 a000 	ldrb.w	sl, [r1]
9002b49a:	2500      	movs	r5, #0
9002b49c:	2703      	movs	r7, #3
9002b49e:	9201      	str	r2, [sp, #4]
9002b4a0:	4555      	cmp	r5, sl
9002b4a2:	da60      	bge.n	9002b566 <applyMask+0xda>
9002b4a4:	f005 0801 	and.w	r8, r5, #1
9002b4a8:	106b      	asrs	r3, r5, #1
9002b4aa:	2600      	movs	r6, #0
9002b4ac:	f088 0801 	eor.w	r8, r8, #1
9002b4b0:	9300      	str	r3, [sp, #0]
9002b4b2:	4634      	mov	r4, r6
9002b4b4:	fa5f f388 	uxtb.w	r3, r8
9002b4b8:	9302      	str	r3, [sp, #8]
9002b4ba:	462a      	mov	r2, r5
9002b4bc:	4621      	mov	r1, r4
9002b4be:	4658      	mov	r0, fp
9002b4c0:	f7ff ffac 	bl	9002b41c <getModuleBounded>
9002b4c4:	b9d8      	cbnz	r0, 9002b4fe <applyMask+0x72>
9002b4c6:	9b01      	ldr	r3, [sp, #4]
9002b4c8:	2b07      	cmp	r3, #7
9002b4ca:	d84c      	bhi.n	9002b566 <applyMask+0xda>
9002b4cc:	e8df f003 	tbb	[pc, r3]
9002b4d0:	261d0904 	.word	0x261d0904
9002b4d4:	473f332d 	.word	0x473f332d
9002b4d8:	eba8 0304 	sub.w	r3, r8, r4
9002b4dc:	f003 0301 	and.w	r3, r3, #1
9002b4e0:	e000      	b.n	9002b4e4 <applyMask+0x58>
9002b4e2:	9b02      	ldr	r3, [sp, #8]
9002b4e4:	462a      	mov	r2, r5
9002b4e6:	4621      	mov	r1, r4
9002b4e8:	4648      	mov	r0, r9
9002b4ea:	9303      	str	r3, [sp, #12]
9002b4ec:	f7ff ff96 	bl	9002b41c <getModuleBounded>
9002b4f0:	9b03      	ldr	r3, [sp, #12]
9002b4f2:	462a      	mov	r2, r5
9002b4f4:	4043      	eors	r3, r0
9002b4f6:	4648      	mov	r0, r9
9002b4f8:	b2db      	uxtb	r3, r3
9002b4fa:	f7ff ff9b 	bl	9002b434 <setModuleBounded>
9002b4fe:	3401      	adds	r4, #1
9002b500:	442e      	add	r6, r5
9002b502:	45a2      	cmp	sl, r4
9002b504:	dcd9      	bgt.n	9002b4ba <applyMask+0x2e>
9002b506:	3501      	adds	r5, #1
9002b508:	e7ca      	b.n	9002b4a0 <applyMask+0x14>
9002b50a:	fb94 f3f7 	sdiv	r3, r4, r7
9002b50e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
9002b512:	429c      	cmp	r4, r3
9002b514:	bf14      	ite	ne
9002b516:	2300      	movne	r3, #0
9002b518:	2301      	moveq	r3, #1
9002b51a:	e7e3      	b.n	9002b4e4 <applyMask+0x58>
9002b51c:	1963      	adds	r3, r4, r5
9002b51e:	fb93 f0f7 	sdiv	r0, r3, r7
9002b522:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002b526:	4283      	cmp	r3, r0
9002b528:	e7f4      	b.n	9002b514 <applyMask+0x88>
9002b52a:	fb94 f3f7 	sdiv	r3, r4, r7
9002b52e:	9a00      	ldr	r2, [sp, #0]
9002b530:	4413      	add	r3, r2
9002b532:	43db      	mvns	r3, r3
9002b534:	e7d2      	b.n	9002b4dc <applyMask+0x50>
9002b536:	fb96 f3f7 	sdiv	r3, r6, r7
9002b53a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
9002b53e:	f006 0201 	and.w	r2, r6, #1
9002b542:	1af3      	subs	r3, r6, r3
9002b544:	42da      	cmn	r2, r3
9002b546:	bf0c      	ite	eq
9002b548:	2301      	moveq	r3, #1
9002b54a:	2300      	movne	r3, #0
9002b54c:	e7ca      	b.n	9002b4e4 <applyMask+0x58>
9002b54e:	f006 0301 	and.w	r3, r6, #1
9002b552:	fb96 f2f7 	sdiv	r2, r6, r7
9002b556:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002b55a:	1ab2      	subs	r2, r6, r2
9002b55c:	e7e8      	b.n	9002b530 <applyMask+0xa4>
9002b55e:	1963      	adds	r3, r4, r5
9002b560:	f003 0301 	and.w	r3, r3, #1
9002b564:	e7f5      	b.n	9002b552 <applyMask+0xc6>
9002b566:	b005      	add	sp, #20
9002b568:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002b56c <drawFormatBits>:
9002b56c:	4b36      	ldr	r3, [pc, #216]	@ (9002b648 <drawFormatBits+0xdc>)
9002b56e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002b572:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
9002b576:	4616      	mov	r6, r2
9002b578:	250a      	movs	r5, #10
9002b57a:	f240 5237 	movw	r2, #1335	@ 0x537
9002b57e:	ea41 01c4 	orr.w	r1, r1, r4, lsl #3
9002b582:	460c      	mov	r4, r1
9002b584:	1263      	asrs	r3, r4, #9
9002b586:	3d01      	subs	r5, #1
9002b588:	fb02 f303 	mul.w	r3, r2, r3
9002b58c:	ea83 0444 	eor.w	r4, r3, r4, lsl #1
9002b590:	d1f8      	bne.n	9002b584 <drawFormatBits+0x18>
9002b592:	ea44 2481 	orr.w	r4, r4, r1, lsl #10
9002b596:	f484 44a8 	eor.w	r4, r4, #21504	@ 0x5400
9002b59a:	f084 0412 	eor.w	r4, r4, #18
9002b59e:	fa44 f305 	asr.w	r3, r4, r5
9002b5a2:	462a      	mov	r2, r5
9002b5a4:	3501      	adds	r5, #1
9002b5a6:	2108      	movs	r1, #8
9002b5a8:	f003 0301 	and.w	r3, r3, #1
9002b5ac:	4630      	mov	r0, r6
9002b5ae:	f7ff ff41 	bl	9002b434 <setModuleBounded>
9002b5b2:	2d06      	cmp	r5, #6
9002b5b4:	d1f3      	bne.n	9002b59e <drawFormatBits+0x32>
9002b5b6:	f3c4 1380 	ubfx	r3, r4, #6, #1
9002b5ba:	2207      	movs	r2, #7
9002b5bc:	2108      	movs	r1, #8
9002b5be:	2509      	movs	r5, #9
9002b5c0:	f7ff ff38 	bl	9002b434 <setModuleBounded>
9002b5c4:	2208      	movs	r2, #8
9002b5c6:	f3c4 13c0 	ubfx	r3, r4, #7, #1
9002b5ca:	4611      	mov	r1, r2
9002b5cc:	f7ff ff32 	bl	9002b434 <setModuleBounded>
9002b5d0:	f3c4 2300 	ubfx	r3, r4, #8, #1
9002b5d4:	2208      	movs	r2, #8
9002b5d6:	2107      	movs	r1, #7
9002b5d8:	f7ff ff2c 	bl	9002b434 <setModuleBounded>
9002b5dc:	fa44 f305 	asr.w	r3, r4, r5
9002b5e0:	f1c5 010e 	rsb	r1, r5, #14
9002b5e4:	3501      	adds	r5, #1
9002b5e6:	2208      	movs	r2, #8
9002b5e8:	f003 0301 	and.w	r3, r3, #1
9002b5ec:	4630      	mov	r0, r6
9002b5ee:	f7ff ff21 	bl	9002b434 <setModuleBounded>
9002b5f2:	2d0f      	cmp	r5, #15
9002b5f4:	d1f2      	bne.n	9002b5dc <drawFormatBits+0x70>
9002b5f6:	7837      	ldrb	r7, [r6, #0]
9002b5f8:	2500      	movs	r5, #0
9002b5fa:	f107 38ff 	add.w	r8, r7, #4294967295
9002b5fe:	fa44 f305 	asr.w	r3, r4, r5
9002b602:	eba8 0105 	sub.w	r1, r8, r5
9002b606:	3501      	adds	r5, #1
9002b608:	2208      	movs	r2, #8
9002b60a:	f003 0301 	and.w	r3, r3, #1
9002b60e:	4630      	mov	r0, r6
9002b610:	f7ff ff10 	bl	9002b434 <setModuleBounded>
9002b614:	2d08      	cmp	r5, #8
9002b616:	d1f2      	bne.n	9002b5fe <drawFormatBits+0x92>
9002b618:	f1a7 080f 	sub.w	r8, r7, #15
9002b61c:	fa44 f305 	asr.w	r3, r4, r5
9002b620:	eb08 0205 	add.w	r2, r8, r5
9002b624:	3501      	adds	r5, #1
9002b626:	2108      	movs	r1, #8
9002b628:	f003 0301 	and.w	r3, r3, #1
9002b62c:	4630      	mov	r0, r6
9002b62e:	f7ff ff01 	bl	9002b434 <setModuleBounded>
9002b632:	2d0f      	cmp	r5, #15
9002b634:	d1f2      	bne.n	9002b61c <drawFormatBits+0xb0>
9002b636:	f1a7 0208 	sub.w	r2, r7, #8
9002b63a:	2301      	movs	r3, #1
9002b63c:	2108      	movs	r1, #8
9002b63e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
9002b642:	f7ff bef7 	b.w	9002b434 <setModuleBounded>
9002b646:	bf00      	nop
9002b648:	90032388 	.word	0x90032388

9002b64c <calcSegmentBitLength>:
9002b64c:	f5b1 4f00 	cmp.w	r1, #32768	@ 0x8000
9002b650:	d225      	bcs.n	9002b69e <calcSegmentBitLength+0x52>
9002b652:	2801      	cmp	r0, #1
9002b654:	d10b      	bne.n	9002b66e <calcSegmentBitLength+0x22>
9002b656:	200a      	movs	r0, #10
9002b658:	4348      	muls	r0, r1
9002b65a:	1c81      	adds	r1, r0, #2
9002b65c:	2003      	movs	r0, #3
9002b65e:	fb91 f0f0 	sdiv	r0, r1, r0
9002b662:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9002b666:	bfa8      	it	ge
9002b668:	f04f 30ff 	movge.w	r0, #4294967295
9002b66c:	4770      	bx	lr
9002b66e:	2802      	cmp	r0, #2
9002b670:	d104      	bne.n	9002b67c <calcSegmentBitLength+0x30>
9002b672:	200b      	movs	r0, #11
9002b674:	4348      	muls	r0, r1
9002b676:	3001      	adds	r0, #1
9002b678:	1040      	asrs	r0, r0, #1
9002b67a:	e7f2      	b.n	9002b662 <calcSegmentBitLength+0x16>
9002b67c:	2804      	cmp	r0, #4
9002b67e:	d101      	bne.n	9002b684 <calcSegmentBitLength+0x38>
9002b680:	00c8      	lsls	r0, r1, #3
9002b682:	e7ee      	b.n	9002b662 <calcSegmentBitLength+0x16>
9002b684:	2808      	cmp	r0, #8
9002b686:	d102      	bne.n	9002b68e <calcSegmentBitLength+0x42>
9002b688:	200d      	movs	r0, #13
9002b68a:	4348      	muls	r0, r1
9002b68c:	e7e9      	b.n	9002b662 <calcSegmentBitLength+0x16>
9002b68e:	2807      	cmp	r0, #7
9002b690:	d105      	bne.n	9002b69e <calcSegmentBitLength+0x52>
9002b692:	2900      	cmp	r1, #0
9002b694:	bf14      	ite	ne
9002b696:	f04f 30ff 	movne.w	r0, #4294967295
9002b69a:	2018      	moveq	r0, #24
9002b69c:	4770      	bx	lr
9002b69e:	f04f 30ff 	mov.w	r0, #4294967295
9002b6a2:	4770      	bx	lr

9002b6a4 <numCharCountBits>:
9002b6a4:	3107      	adds	r1, #7
9002b6a6:	2311      	movs	r3, #17
9002b6a8:	3801      	subs	r0, #1
9002b6aa:	fb91 f1f3 	sdiv	r1, r1, r3
9002b6ae:	2807      	cmp	r0, #7
9002b6b0:	d805      	bhi.n	9002b6be <numCharCountBits+0x1a>
9002b6b2:	e8df f000 	tbb	[pc, r0]
9002b6b6:	0b07      	.short	0x0b07
9002b6b8:	04040d04 	.word	0x04040d04
9002b6bc:	0f11      	.short	0x0f11
9002b6be:	f04f 30ff 	mov.w	r0, #4294967295
9002b6c2:	4770      	bx	lr
9002b6c4:	4b05      	ldr	r3, [pc, #20]	@ (9002b6dc <numCharCountBits+0x38>)
9002b6c6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
9002b6ca:	4770      	bx	lr
9002b6cc:	4b04      	ldr	r3, [pc, #16]	@ (9002b6e0 <numCharCountBits+0x3c>)
9002b6ce:	e7fa      	b.n	9002b6c6 <numCharCountBits+0x22>
9002b6d0:	4b04      	ldr	r3, [pc, #16]	@ (9002b6e4 <numCharCountBits+0x40>)
9002b6d2:	e7f8      	b.n	9002b6c6 <numCharCountBits+0x22>
9002b6d4:	4b04      	ldr	r3, [pc, #16]	@ (9002b6e8 <numCharCountBits+0x44>)
9002b6d6:	e7f6      	b.n	9002b6c6 <numCharCountBits+0x22>
9002b6d8:	2000      	movs	r0, #0
9002b6da:	4770      	bx	lr
9002b6dc:	90032398 	.word	0x90032398
9002b6e0:	900323a4 	.word	0x900323a4
9002b6e4:	900323b0 	.word	0x900323b0
9002b6e8:	900323bc 	.word	0x900323bc

9002b6ec <finderPenaltyAddHistory>:
9002b6ec:	b538      	push	{r3, r4, r5, lr}
9002b6ee:	680b      	ldr	r3, [r1, #0]
9002b6f0:	4605      	mov	r5, r0
9002b6f2:	460c      	mov	r4, r1
9002b6f4:	b903      	cbnz	r3, 9002b6f8 <finderPenaltyAddHistory+0xc>
9002b6f6:	4415      	add	r5, r2
9002b6f8:	2218      	movs	r2, #24
9002b6fa:	4621      	mov	r1, r4
9002b6fc:	1d20      	adds	r0, r4, #4
9002b6fe:	f002 f8ef 	bl	9002d8e0 <memmove>
9002b702:	6025      	str	r5, [r4, #0]
9002b704:	bd38      	pop	{r3, r4, r5, pc}

9002b706 <getAlignmentPatternPositions.part.0>:
9002b706:	b530      	push	{r4, r5, lr}
9002b708:	2407      	movs	r4, #7
9002b70a:	4603      	mov	r3, r0
9002b70c:	fb90 f4f4 	sdiv	r4, r0, r4
9002b710:	2b20      	cmp	r3, #32
9002b712:	f104 0002 	add.w	r0, r4, #2
9002b716:	f104 0401 	add.w	r4, r4, #1
9002b71a:	bf17      	itett	ne
9002b71c:	eb00 0243 	addne.w	r2, r0, r3, lsl #1
9002b720:	221a      	moveq	r2, #26
9002b722:	0065      	lslne	r5, r4, #1
9002b724:	0052      	lslne	r2, r2, #1
9002b726:	ea4f 0383 	mov.w	r3, r3, lsl #2
9002b72a:	bf18      	it	ne
9002b72c:	3201      	addne	r2, #1
9002b72e:	f103 030a 	add.w	r3, r3, #10
9002b732:	bf1c      	itt	ne
9002b734:	fb92 f2f5 	sdivne	r2, r2, r5
9002b738:	0052      	lslne	r2, r2, #1
9002b73a:	2c00      	cmp	r4, #0
9002b73c:	dd03      	ble.n	9002b746 <getAlignmentPatternPositions.part.0+0x40>
9002b73e:	550b      	strb	r3, [r1, r4]
9002b740:	3c01      	subs	r4, #1
9002b742:	1a9b      	subs	r3, r3, r2
9002b744:	e7f9      	b.n	9002b73a <getAlignmentPatternPositions.part.0+0x34>
9002b746:	2306      	movs	r3, #6
9002b748:	700b      	strb	r3, [r1, #0]
9002b74a:	bd30      	pop	{r4, r5, pc}

9002b74c <finderPenaltyCountPatterns.isra.1>:
9002b74c:	b510      	push	{r4, lr}
9002b74e:	6843      	ldr	r3, [r0, #4]
9002b750:	2b00      	cmp	r3, #0
9002b752:	dd20      	ble.n	9002b796 <finderPenaltyCountPatterns.isra.1+0x4a>
9002b754:	6882      	ldr	r2, [r0, #8]
9002b756:	4293      	cmp	r3, r2
9002b758:	d11d      	bne.n	9002b796 <finderPenaltyCountPatterns.isra.1+0x4a>
9002b75a:	eb03 0243 	add.w	r2, r3, r3, lsl #1
9002b75e:	68c1      	ldr	r1, [r0, #12]
9002b760:	4291      	cmp	r1, r2
9002b762:	d118      	bne.n	9002b796 <finderPenaltyCountPatterns.isra.1+0x4a>
9002b764:	6902      	ldr	r2, [r0, #16]
9002b766:	4293      	cmp	r3, r2
9002b768:	d115      	bne.n	9002b796 <finderPenaltyCountPatterns.isra.1+0x4a>
9002b76a:	6942      	ldr	r2, [r0, #20]
9002b76c:	4293      	cmp	r3, r2
9002b76e:	d112      	bne.n	9002b796 <finderPenaltyCountPatterns.isra.1+0x4a>
9002b770:	6802      	ldr	r2, [r0, #0]
9002b772:	009c      	lsls	r4, r3, #2
9002b774:	6981      	ldr	r1, [r0, #24]
9002b776:	42a2      	cmp	r2, r4
9002b778:	db0b      	blt.n	9002b792 <finderPenaltyCountPatterns.isra.1+0x46>
9002b77a:	428b      	cmp	r3, r1
9002b77c:	bfcc      	ite	gt
9002b77e:	2000      	movgt	r0, #0
9002b780:	2001      	movle	r0, #1
9002b782:	428c      	cmp	r4, r1
9002b784:	dc08      	bgt.n	9002b798 <finderPenaltyCountPatterns.isra.1+0x4c>
9002b786:	4293      	cmp	r3, r2
9002b788:	bfcc      	ite	gt
9002b78a:	2300      	movgt	r3, #0
9002b78c:	2301      	movle	r3, #1
9002b78e:	4418      	add	r0, r3
9002b790:	bd10      	pop	{r4, pc}
9002b792:	2000      	movs	r0, #0
9002b794:	e7f5      	b.n	9002b782 <finderPenaltyCountPatterns.isra.1+0x36>
9002b796:	2000      	movs	r0, #0
9002b798:	2300      	movs	r3, #0
9002b79a:	e7f8      	b.n	9002b78e <finderPenaltyCountPatterns.isra.1+0x42>

9002b79c <setModuleUnbounded.constprop.2>:
9002b79c:	7803      	ldrb	r3, [r0, #0]
9002b79e:	428b      	cmp	r3, r1
9002b7a0:	b410      	push	{r4}
9002b7a2:	d906      	bls.n	9002b7b2 <setModuleUnbounded.constprop.2+0x16>
9002b7a4:	4293      	cmp	r3, r2
9002b7a6:	d904      	bls.n	9002b7b2 <setModuleUnbounded.constprop.2+0x16>
9002b7a8:	2300      	movs	r3, #0
9002b7aa:	f85d 4b04 	ldr.w	r4, [sp], #4
9002b7ae:	f7ff be41 	b.w	9002b434 <setModuleBounded>
9002b7b2:	f85d 4b04 	ldr.w	r4, [sp], #4
9002b7b6:	4770      	bx	lr

9002b7b8 <initializeFunctionModules>:
9002b7b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002b7bc:	ea4f 0b80 	mov.w	fp, r0, lsl #2
9002b7c0:	460c      	mov	r4, r1
9002b7c2:	b087      	sub	sp, #28
9002b7c4:	4607      	mov	r7, r0
9002b7c6:	f10b 0511 	add.w	r5, fp, #17
9002b7ca:	2100      	movs	r1, #0
9002b7cc:	4620      	mov	r0, r4
9002b7ce:	fb05 f205 	mul.w	r2, r5, r5
9002b7d2:	3207      	adds	r2, #7
9002b7d4:	10d2      	asrs	r2, r2, #3
9002b7d6:	3201      	adds	r2, #1
9002b7d8:	f002 f89c 	bl	9002d914 <memset>
9002b7dc:	462b      	mov	r3, r5
9002b7de:	7025      	strb	r5, [r4, #0]
9002b7e0:	2201      	movs	r2, #1
9002b7e2:	2100      	movs	r1, #0
9002b7e4:	2006      	movs	r0, #6
9002b7e6:	9400      	str	r4, [sp, #0]
9002b7e8:	f7ff fe37 	bl	9002b45a <fillRectangle>
9002b7ec:	462a      	mov	r2, r5
9002b7ee:	2301      	movs	r3, #1
9002b7f0:	2106      	movs	r1, #6
9002b7f2:	2000      	movs	r0, #0
9002b7f4:	9400      	str	r4, [sp, #0]
9002b7f6:	f7ff fe30 	bl	9002b45a <fillRectangle>
9002b7fa:	2309      	movs	r3, #9
9002b7fc:	2100      	movs	r1, #0
9002b7fe:	f10b 0509 	add.w	r5, fp, #9
9002b802:	461a      	mov	r2, r3
9002b804:	9400      	str	r4, [sp, #0]
9002b806:	4608      	mov	r0, r1
9002b808:	f7ff fe27 	bl	9002b45a <fillRectangle>
9002b80c:	2309      	movs	r3, #9
9002b80e:	2208      	movs	r2, #8
9002b810:	2100      	movs	r1, #0
9002b812:	4628      	mov	r0, r5
9002b814:	9400      	str	r4, [sp, #0]
9002b816:	f7ff fe20 	bl	9002b45a <fillRectangle>
9002b81a:	9400      	str	r4, [sp, #0]
9002b81c:	2308      	movs	r3, #8
9002b81e:	2209      	movs	r2, #9
9002b820:	4629      	mov	r1, r5
9002b822:	2000      	movs	r0, #0
9002b824:	f7ff fe19 	bl	9002b45a <fillRectangle>
9002b828:	2f01      	cmp	r7, #1
9002b82a:	d03b      	beq.n	9002b8a4 <initializeFunctionModules+0xec>
9002b82c:	f10d 0a10 	add.w	sl, sp, #16
9002b830:	4638      	mov	r0, r7
9002b832:	2600      	movs	r6, #0
9002b834:	4651      	mov	r1, sl
9002b836:	46d0      	mov	r8, sl
9002b838:	f7ff ff65 	bl	9002b706 <getAlignmentPatternPositions.part.0>
9002b83c:	1e43      	subs	r3, r0, #1
9002b83e:	4681      	mov	r9, r0
9002b840:	9303      	str	r3, [sp, #12]
9002b842:	454e      	cmp	r6, r9
9002b844:	da1c      	bge.n	9002b880 <initializeFunctionModules+0xc8>
9002b846:	2500      	movs	r5, #0
9002b848:	454d      	cmp	r5, r9
9002b84a:	d015      	beq.n	9002b878 <initializeFunctionModules+0xc0>
9002b84c:	b91e      	cbnz	r6, 9002b856 <initializeFunctionModules+0x9e>
9002b84e:	b18d      	cbz	r5, 9002b874 <initializeFunctionModules+0xbc>
9002b850:	9b03      	ldr	r3, [sp, #12]
9002b852:	42ab      	cmp	r3, r5
9002b854:	d00e      	beq.n	9002b874 <initializeFunctionModules+0xbc>
9002b856:	9b03      	ldr	r3, [sp, #12]
9002b858:	42b3      	cmp	r3, r6
9002b85a:	d100      	bne.n	9002b85e <initializeFunctionModules+0xa6>
9002b85c:	b155      	cbz	r5, 9002b874 <initializeFunctionModules+0xbc>
9002b85e:	f81a 1005 	ldrb.w	r1, [sl, r5]
9002b862:	2305      	movs	r3, #5
9002b864:	f898 0000 	ldrb.w	r0, [r8]
9002b868:	461a      	mov	r2, r3
9002b86a:	9400      	str	r4, [sp, #0]
9002b86c:	3902      	subs	r1, #2
9002b86e:	3802      	subs	r0, #2
9002b870:	f7ff fdf3 	bl	9002b45a <fillRectangle>
9002b874:	3501      	adds	r5, #1
9002b876:	e7e7      	b.n	9002b848 <initializeFunctionModules+0x90>
9002b878:	3601      	adds	r6, #1
9002b87a:	f108 0801 	add.w	r8, r8, #1
9002b87e:	e7e0      	b.n	9002b842 <initializeFunctionModules+0x8a>
9002b880:	2f06      	cmp	r7, #6
9002b882:	dd0f      	ble.n	9002b8a4 <initializeFunctionModules+0xec>
9002b884:	f10b 0506 	add.w	r5, fp, #6
9002b888:	2306      	movs	r3, #6
9002b88a:	2203      	movs	r2, #3
9002b88c:	2100      	movs	r1, #0
9002b88e:	4628      	mov	r0, r5
9002b890:	9400      	str	r4, [sp, #0]
9002b892:	f7ff fde2 	bl	9002b45a <fillRectangle>
9002b896:	9400      	str	r4, [sp, #0]
9002b898:	2303      	movs	r3, #3
9002b89a:	2206      	movs	r2, #6
9002b89c:	4629      	mov	r1, r5
9002b89e:	2000      	movs	r0, #0
9002b8a0:	f7ff fddb 	bl	9002b45a <fillRectangle>
9002b8a4:	b007      	add	sp, #28
9002b8a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9002b8ac <qrcodegen_encodeSegmentsAdvanced>:
9002b8ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002b8b0:	b097      	sub	sp, #92	@ 0x5c
9002b8b2:	469b      	mov	fp, r3
9002b8b4:	4607      	mov	r7, r0
9002b8b6:	4688      	mov	r8, r1
9002b8b8:	f99d 3084 	ldrsb.w	r3, [sp, #132]	@ 0x84
9002b8bc:	f8dd a090 	ldr.w	sl, [sp, #144]	@ 0x90
9002b8c0:	9303      	str	r3, [sp, #12]
9002b8c2:	f89d 3088 	ldrb.w	r3, [sp, #136]	@ 0x88
9002b8c6:	9200      	str	r2, [sp, #0]
9002b8c8:	9302      	str	r3, [sp, #8]
9002b8ca:	2600      	movs	r6, #0
9002b8cc:	9900      	ldr	r1, [sp, #0]
9002b8ce:	4658      	mov	r0, fp
9002b8d0:	463c      	mov	r4, r7
9002b8d2:	f7ff fd73 	bl	9002b3bc <getNumDataCodewords>
9002b8d6:	4635      	mov	r5, r6
9002b8d8:	4681      	mov	r9, r0
9002b8da:	463a      	mov	r2, r7
9002b8dc:	45b0      	cmp	r8, r6
9002b8de:	d015      	beq.n	9002b90c <qrcodegen_encodeSegmentsAdvanced+0x60>
9002b8e0:	68d3      	ldr	r3, [r2, #12]
9002b8e2:	4659      	mov	r1, fp
9002b8e4:	7810      	ldrb	r0, [r2, #0]
9002b8e6:	9301      	str	r3, [sp, #4]
9002b8e8:	f7ff fedc 	bl	9002b6a4 <numCharCountBits>
9002b8ec:	2301      	movs	r3, #1
9002b8ee:	fa03 f100 	lsl.w	r1, r3, r0
9002b8f2:	6853      	ldr	r3, [r2, #4]
9002b8f4:	428b      	cmp	r3, r1
9002b8f6:	da0e      	bge.n	9002b916 <qrcodegen_encodeSegmentsAdvanced+0x6a>
9002b8f8:	3004      	adds	r0, #4
9002b8fa:	9b01      	ldr	r3, [sp, #4]
9002b8fc:	3210      	adds	r2, #16
9002b8fe:	4403      	add	r3, r0
9002b900:	441d      	add	r5, r3
9002b902:	f5b5 4f00 	cmp.w	r5, #32768	@ 0x8000
9002b906:	da06      	bge.n	9002b916 <qrcodegen_encodeSegmentsAdvanced+0x6a>
9002b908:	3601      	adds	r6, #1
9002b90a:	e7e7      	b.n	9002b8dc <qrcodegen_encodeSegmentsAdvanced+0x30>
9002b90c:	1c6b      	adds	r3, r5, #1
9002b90e:	d002      	beq.n	9002b916 <qrcodegen_encodeSegmentsAdvanced+0x6a>
9002b910:	ebb5 0fc9 	cmp.w	r5, r9, lsl #3
9002b914:	dd0b      	ble.n	9002b92e <qrcodegen_encodeSegmentsAdvanced+0x82>
9002b916:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002b918:	459b      	cmp	fp, r3
9002b91a:	db05      	blt.n	9002b928 <qrcodegen_encodeSegmentsAdvanced+0x7c>
9002b91c:	2000      	movs	r0, #0
9002b91e:	f88a 0000 	strb.w	r0, [sl]
9002b922:	b017      	add	sp, #92	@ 0x5c
9002b924:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002b928:	f10b 0b01 	add.w	fp, fp, #1
9002b92c:	e7cd      	b.n	9002b8ca <qrcodegen_encodeSegmentsAdvanced+0x1e>
9002b92e:	2701      	movs	r7, #1
9002b930:	9b02      	ldr	r3, [sp, #8]
9002b932:	b15b      	cbz	r3, 9002b94c <qrcodegen_encodeSegmentsAdvanced+0xa0>
9002b934:	fa5f f887 	uxtb.w	r8, r7
9002b938:	4658      	mov	r0, fp
9002b93a:	4641      	mov	r1, r8
9002b93c:	f7ff fd3e 	bl	9002b3bc <getNumDataCodewords>
9002b940:	9b00      	ldr	r3, [sp, #0]
9002b942:	ebb5 0fc0 	cmp.w	r5, r0, lsl #3
9002b946:	bfd8      	it	le
9002b948:	4643      	movle	r3, r8
9002b94a:	9300      	str	r3, [sp, #0]
9002b94c:	3701      	adds	r7, #1
9002b94e:	2f04      	cmp	r7, #4
9002b950:	d1ee      	bne.n	9002b930 <qrcodegen_encodeSegmentsAdvanced+0x84>
9002b952:	ea4f 028b 	mov.w	r2, fp, lsl #2
9002b956:	2700      	movs	r7, #0
9002b958:	ad16      	add	r5, sp, #88	@ 0x58
9002b95a:	2100      	movs	r1, #0
9002b95c:	3211      	adds	r2, #17
9002b95e:	4650      	mov	r0, sl
9002b960:	4352      	muls	r2, r2
9002b962:	3207      	adds	r2, #7
9002b964:	10d2      	asrs	r2, r2, #3
9002b966:	3201      	adds	r2, #1
9002b968:	f001 ffd4 	bl	9002d914 <memset>
9002b96c:	f845 7d24 	str.w	r7, [r5, #-36]!
9002b970:	42b7      	cmp	r7, r6
9002b972:	d028      	beq.n	9002b9c6 <qrcodegen_encodeSegmentsAdvanced+0x11a>
9002b974:	462b      	mov	r3, r5
9002b976:	4652      	mov	r2, sl
9002b978:	2104      	movs	r1, #4
9002b97a:	7820      	ldrb	r0, [r4, #0]
9002b97c:	f7ff fce8 	bl	9002b350 <appendBitsToBuffer>
9002b980:	f04f 0800 	mov.w	r8, #0
9002b984:	4659      	mov	r1, fp
9002b986:	7820      	ldrb	r0, [r4, #0]
9002b988:	f7ff fe8c 	bl	9002b6a4 <numCharCountBits>
9002b98c:	462b      	mov	r3, r5
9002b98e:	4601      	mov	r1, r0
9002b990:	6860      	ldr	r0, [r4, #4]
9002b992:	f7ff fcdd 	bl	9002b350 <appendBitsToBuffer>
9002b996:	68e3      	ldr	r3, [r4, #12]
9002b998:	4543      	cmp	r3, r8
9002b99a:	dd11      	ble.n	9002b9c0 <qrcodegen_encodeSegmentsAdvanced+0x114>
9002b99c:	ea4f 03e8 	mov.w	r3, r8, asr #3
9002b9a0:	68a2      	ldr	r2, [r4, #8]
9002b9a2:	2101      	movs	r1, #1
9002b9a4:	5cd0      	ldrb	r0, [r2, r3]
9002b9a6:	ea6f 0308 	mvn.w	r3, r8
9002b9aa:	4652      	mov	r2, sl
9002b9ac:	f108 0801 	add.w	r8, r8, #1
9002b9b0:	f003 0307 	and.w	r3, r3, #7
9002b9b4:	4118      	asrs	r0, r3
9002b9b6:	462b      	mov	r3, r5
9002b9b8:	4008      	ands	r0, r1
9002b9ba:	f7ff fcc9 	bl	9002b350 <appendBitsToBuffer>
9002b9be:	e7ea      	b.n	9002b996 <qrcodegen_encodeSegmentsAdvanced+0xea>
9002b9c0:	3701      	adds	r7, #1
9002b9c2:	3410      	adds	r4, #16
9002b9c4:	e7d4      	b.n	9002b970 <qrcodegen_encodeSegmentsAdvanced+0xc4>
9002b9c6:	9900      	ldr	r1, [sp, #0]
9002b9c8:	4658      	mov	r0, fp
9002b9ca:	f7ff fcf7 	bl	9002b3bc <getNumDataCodewords>
9002b9ce:	990d      	ldr	r1, [sp, #52]	@ 0x34
9002b9d0:	00c6      	lsls	r6, r0, #3
9002b9d2:	9002      	str	r0, [sp, #8]
9002b9d4:	462b      	mov	r3, r5
9002b9d6:	4652      	mov	r2, sl
9002b9d8:	1a71      	subs	r1, r6, r1
9002b9da:	2000      	movs	r0, #0
9002b9dc:	24ec      	movs	r4, #236	@ 0xec
9002b9de:	2904      	cmp	r1, #4
9002b9e0:	bfa8      	it	ge
9002b9e2:	2104      	movge	r1, #4
9002b9e4:	f7ff fcb4 	bl	9002b350 <appendBitsToBuffer>
9002b9e8:	990d      	ldr	r1, [sp, #52]	@ 0x34
9002b9ea:	2000      	movs	r0, #0
9002b9ec:	424b      	negs	r3, r1
9002b9ee:	f001 0107 	and.w	r1, r1, #7
9002b9f2:	f003 0307 	and.w	r3, r3, #7
9002b9f6:	bf58      	it	pl
9002b9f8:	4259      	negpl	r1, r3
9002b9fa:	462b      	mov	r3, r5
9002b9fc:	f1c1 0108 	rsb	r1, r1, #8
9002ba00:	f001 0107 	and.w	r1, r1, #7
9002ba04:	f7ff fca4 	bl	9002b350 <appendBitsToBuffer>
9002ba08:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9002ba0a:	42b3      	cmp	r3, r6
9002ba0c:	da08      	bge.n	9002ba20 <qrcodegen_encodeSegmentsAdvanced+0x174>
9002ba0e:	4620      	mov	r0, r4
9002ba10:	462b      	mov	r3, r5
9002ba12:	4652      	mov	r2, sl
9002ba14:	2108      	movs	r1, #8
9002ba16:	f7ff fc9b 	bl	9002b350 <appendBitsToBuffer>
9002ba1a:	f084 04fd 	eor.w	r4, r4, #253	@ 0xfd
9002ba1e:	e7f3      	b.n	9002ba08 <qrcodegen_encodeSegmentsAdvanced+0x15c>
9002ba20:	9a00      	ldr	r2, [sp, #0]
9002ba22:	2329      	movs	r3, #41	@ 0x29
9002ba24:	4658      	mov	r0, fp
9002ba26:	ae0e      	add	r6, sp, #56	@ 0x38
9002ba28:	4353      	muls	r3, r2
9002ba2a:	4abd      	ldr	r2, [pc, #756]	@ (9002bd20 <qrcodegen_encodeSegmentsAdvanced+0x474>)
9002ba2c:	2501      	movs	r5, #1
9002ba2e:	f04f 0800 	mov.w	r8, #0
9002ba32:	441a      	add	r2, r3
9002ba34:	f912 200b 	ldrsb.w	r2, [r2, fp]
9002ba38:	9201      	str	r2, [sp, #4]
9002ba3a:	4aba      	ldr	r2, [pc, #744]	@ (9002bd24 <qrcodegen_encodeSegmentsAdvanced+0x478>)
9002ba3c:	4413      	add	r3, r2
9002ba3e:	f913 400b 	ldrsb.w	r4, [r3, fp]
9002ba42:	f7ff fc9c 	bl	9002b37e <getNumRawDataModules>
9002ba46:	2308      	movs	r3, #8
9002ba48:	9a01      	ldr	r2, [sp, #4]
9002ba4a:	fb90 f3f3 	sdiv	r3, r0, r3
9002ba4e:	9304      	str	r3, [sp, #16]
9002ba50:	4630      	mov	r0, r6
9002ba52:	9904      	ldr	r1, [sp, #16]
9002ba54:	fb93 f3f2 	sdiv	r3, r3, r2
9002ba58:	fb02 1213 	mls	r2, r2, r3, r1
9002ba5c:	9901      	ldr	r1, [sp, #4]
9002ba5e:	1b1b      	subs	r3, r3, r4
9002ba60:	1a8a      	subs	r2, r1, r2
9002ba62:	2100      	movs	r1, #0
9002ba64:	9308      	str	r3, [sp, #32]
9002ba66:	9207      	str	r2, [sp, #28]
9002ba68:	4622      	mov	r2, r4
9002ba6a:	f001 ff53 	bl	9002d914 <memset>
9002ba6e:	1e63      	subs	r3, r4, #1
9002ba70:	9309      	str	r3, [sp, #36]	@ 0x24
9002ba72:	ab16      	add	r3, sp, #88	@ 0x58
9002ba74:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002ba76:	4413      	add	r3, r2
9002ba78:	f803 5c20 	strb.w	r5, [r3, #-32]
9002ba7c:	4544      	cmp	r4, r8
9002ba7e:	dd0f      	ble.n	9002baa0 <qrcodegen_encodeSegmentsAdvanced+0x1f4>
9002ba80:	4637      	mov	r7, r6
9002ba82:	7838      	ldrb	r0, [r7, #0]
9002ba84:	4629      	mov	r1, r5
9002ba86:	f7ff fcb1 	bl	9002b3ec <reedSolomonMultiply>
9002ba8a:	f807 0b01 	strb.w	r0, [r7], #1
9002ba8e:	1bbb      	subs	r3, r7, r6
9002ba90:	429c      	cmp	r4, r3
9002ba92:	f340 828c 	ble.w	9002bfae <qrcodegen_encodeSegmentsAdvanced+0x702>
9002ba96:	783b      	ldrb	r3, [r7, #0]
9002ba98:	4058      	eors	r0, r3
9002ba9a:	f807 0c01 	strb.w	r0, [r7, #-1]
9002ba9e:	e7f0      	b.n	9002ba82 <qrcodegen_encodeSegmentsAdvanced+0x1d6>
9002baa0:	46d0      	mov	r8, sl
9002baa2:	2700      	movs	r7, #0
9002baa4:	9b01      	ldr	r3, [sp, #4]
9002baa6:	42bb      	cmp	r3, r7
9002baa8:	dd5a      	ble.n	9002bb60 <qrcodegen_encodeSegmentsAdvanced+0x2b4>
9002baaa:	2100      	movs	r1, #0
9002baac:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
9002bab0:	42ba      	cmp	r2, r7
9002bab2:	bfd8      	it	le
9002bab4:	3301      	addle	r3, #1
9002bab6:	4622      	mov	r2, r4
9002bab8:	9305      	str	r3, [sp, #20]
9002baba:	9b02      	ldr	r3, [sp, #8]
9002babc:	eb0a 0503 	add.w	r5, sl, r3
9002bac0:	4628      	mov	r0, r5
9002bac2:	f001 ff27 	bl	9002d914 <memset>
9002bac6:	1e63      	subs	r3, r4, #1
9002bac8:	f8cd 8018 	str.w	r8, [sp, #24]
9002bacc:	930a      	str	r3, [sp, #40]	@ 0x28
9002bace:	9b06      	ldr	r3, [sp, #24]
9002bad0:	9a05      	ldr	r2, [sp, #20]
9002bad2:	eba3 0308 	sub.w	r3, r3, r8
9002bad6:	429a      	cmp	r2, r3
9002bad8:	dd1f      	ble.n	9002bb1a <qrcodegen_encodeSegmentsAdvanced+0x26e>
9002bada:	9b06      	ldr	r3, [sp, #24]
9002badc:	4629      	mov	r1, r5
9002bade:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9002bae0:	4628      	mov	r0, r5
9002bae2:	f813 9b01 	ldrb.w	r9, [r3], #1
9002bae6:	2600      	movs	r6, #0
9002bae8:	9306      	str	r3, [sp, #24]
9002baea:	f811 3b01 	ldrb.w	r3, [r1], #1
9002baee:	ea89 0903 	eor.w	r9, r9, r3
9002baf2:	f001 fef5 	bl	9002d8e0 <memmove>
9002baf6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002baf8:	1e6a      	subs	r2, r5, #1
9002bafa:	54ee      	strb	r6, [r5, r3]
9002bafc:	42b4      	cmp	r4, r6
9002bafe:	920b      	str	r2, [sp, #44]	@ 0x2c
9002bb00:	dde5      	ble.n	9002bace <qrcodegen_encodeSegmentsAdvanced+0x222>
9002bb02:	ab0e      	add	r3, sp, #56	@ 0x38
9002bb04:	4649      	mov	r1, r9
9002bb06:	5d98      	ldrb	r0, [r3, r6]
9002bb08:	3601      	adds	r6, #1
9002bb0a:	f7ff fc6f 	bl	9002b3ec <reedSolomonMultiply>
9002bb0e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9002bb10:	f812 3f01 	ldrb.w	r3, [r2, #1]!
9002bb14:	4058      	eors	r0, r3
9002bb16:	7010      	strb	r0, [r2, #0]
9002bb18:	e7f0      	b.n	9002bafc <qrcodegen_encodeSegmentsAdvanced+0x250>
9002bb1a:	463b      	mov	r3, r7
9002bb1c:	2200      	movs	r2, #0
9002bb1e:	9905      	ldr	r1, [sp, #20]
9002bb20:	4291      	cmp	r1, r2
9002bb22:	dd0c      	ble.n	9002bb3e <qrcodegen_encodeSegmentsAdvanced+0x292>
9002bb24:	9908      	ldr	r1, [sp, #32]
9002bb26:	9823      	ldr	r0, [sp, #140]	@ 0x8c
9002bb28:	4291      	cmp	r1, r2
9002bb2a:	bf04      	itt	eq
9002bb2c:	9907      	ldreq	r1, [sp, #28]
9002bb2e:	1a5b      	subeq	r3, r3, r1
9002bb30:	f818 1002 	ldrb.w	r1, [r8, r2]
9002bb34:	3201      	adds	r2, #1
9002bb36:	54c1      	strb	r1, [r0, r3]
9002bb38:	9901      	ldr	r1, [sp, #4]
9002bb3a:	440b      	add	r3, r1
9002bb3c:	e7ef      	b.n	9002bb1e <qrcodegen_encodeSegmentsAdvanced+0x272>
9002bb3e:	9b02      	ldr	r3, [sp, #8]
9002bb40:	462a      	mov	r2, r5
9002bb42:	18fb      	adds	r3, r7, r3
9002bb44:	1b51      	subs	r1, r2, r5
9002bb46:	428c      	cmp	r4, r1
9002bb48:	dd06      	ble.n	9002bb58 <qrcodegen_encodeSegmentsAdvanced+0x2ac>
9002bb4a:	f812 1b01 	ldrb.w	r1, [r2], #1
9002bb4e:	9823      	ldr	r0, [sp, #140]	@ 0x8c
9002bb50:	54c1      	strb	r1, [r0, r3]
9002bb52:	9901      	ldr	r1, [sp, #4]
9002bb54:	440b      	add	r3, r1
9002bb56:	e7f5      	b.n	9002bb44 <qrcodegen_encodeSegmentsAdvanced+0x298>
9002bb58:	9b05      	ldr	r3, [sp, #20]
9002bb5a:	3701      	adds	r7, #1
9002bb5c:	4498      	add	r8, r3
9002bb5e:	e7a1      	b.n	9002baa4 <qrcodegen_encodeSegmentsAdvanced+0x1f8>
9002bb60:	4651      	mov	r1, sl
9002bb62:	4658      	mov	r0, fp
9002bb64:	f7ff fe28 	bl	9002b7b8 <initializeFunctionModules>
9002bb68:	f89a 5000 	ldrb.w	r5, [sl]
9002bb6c:	9b04      	ldr	r3, [sp, #16]
9002bb6e:	2600      	movs	r6, #0
9002bb70:	3d01      	subs	r5, #1
9002bb72:	00db      	lsls	r3, r3, #3
9002bb74:	462c      	mov	r4, r5
9002bb76:	9505      	str	r5, [sp, #20]
9002bb78:	9302      	str	r3, [sp, #8]
9002bb7a:	2c00      	cmp	r4, #0
9002bb7c:	dd37      	ble.n	9002bbee <qrcodegen_encodeSegmentsAdvanced+0x342>
9002bb7e:	2c06      	cmp	r4, #6
9002bb80:	462f      	mov	r7, r5
9002bb82:	bf08      	it	eq
9002bb84:	2405      	moveq	r4, #5
9002bb86:	1c63      	adds	r3, r4, #1
9002bb88:	f003 0302 	and.w	r3, r3, #2
9002bb8c:	9304      	str	r3, [sp, #16]
9002bb8e:	9b05      	ldr	r3, [sp, #20]
9002bb90:	1c78      	adds	r0, r7, #1
9002bb92:	eba3 0807 	sub.w	r8, r3, r7
9002bb96:	d028      	beq.n	9002bbea <qrcodegen_encodeSegmentsAdvanced+0x33e>
9002bb98:	9b04      	ldr	r3, [sp, #16]
9002bb9a:	f04f 0900 	mov.w	r9, #0
9002bb9e:	2b00      	cmp	r3, #0
9002bba0:	bf08      	it	eq
9002bba2:	46b8      	moveq	r8, r7
9002bba4:	eba4 0309 	sub.w	r3, r4, r9
9002bba8:	4642      	mov	r2, r8
9002bbaa:	4650      	mov	r0, sl
9002bbac:	4619      	mov	r1, r3
9002bbae:	9301      	str	r3, [sp, #4]
9002bbb0:	f7ff fc34 	bl	9002b41c <getModuleBounded>
9002bbb4:	b988      	cbnz	r0, 9002bbda <qrcodegen_encodeSegmentsAdvanced+0x32e>
9002bbb6:	9b02      	ldr	r3, [sp, #8]
9002bbb8:	42b3      	cmp	r3, r6
9002bbba:	dd0e      	ble.n	9002bbda <qrcodegen_encodeSegmentsAdvanced+0x32e>
9002bbbc:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
9002bbbe:	10f3      	asrs	r3, r6, #3
9002bbc0:	9901      	ldr	r1, [sp, #4]
9002bbc2:	4650      	mov	r0, sl
9002bbc4:	5cd3      	ldrb	r3, [r2, r3]
9002bbc6:	43f2      	mvns	r2, r6
9002bbc8:	3601      	adds	r6, #1
9002bbca:	f002 0207 	and.w	r2, r2, #7
9002bbce:	4113      	asrs	r3, r2
9002bbd0:	4642      	mov	r2, r8
9002bbd2:	f003 0301 	and.w	r3, r3, #1
9002bbd6:	f7ff fc2d 	bl	9002b434 <setModuleBounded>
9002bbda:	f1b9 0f00 	cmp.w	r9, #0
9002bbde:	d001      	beq.n	9002bbe4 <qrcodegen_encodeSegmentsAdvanced+0x338>
9002bbe0:	3f01      	subs	r7, #1
9002bbe2:	e7d4      	b.n	9002bb8e <qrcodegen_encodeSegmentsAdvanced+0x2e2>
9002bbe4:	f04f 0901 	mov.w	r9, #1
9002bbe8:	e7dc      	b.n	9002bba4 <qrcodegen_encodeSegmentsAdvanced+0x2f8>
9002bbea:	3c02      	subs	r4, #2
9002bbec:	e7c5      	b.n	9002bb7a <qrcodegen_encodeSegmentsAdvanced+0x2ce>
9002bbee:	f89a 5000 	ldrb.w	r5, [sl]
9002bbf2:	2407      	movs	r4, #7
9002bbf4:	1fee      	subs	r6, r5, #7
9002bbf6:	42a6      	cmp	r6, r4
9002bbf8:	dd0c      	ble.n	9002bc14 <qrcodegen_encodeSegmentsAdvanced+0x368>
9002bbfa:	4622      	mov	r2, r4
9002bbfc:	2300      	movs	r3, #0
9002bbfe:	2106      	movs	r1, #6
9002bc00:	4650      	mov	r0, sl
9002bc02:	f7ff fc17 	bl	9002b434 <setModuleBounded>
9002bc06:	4621      	mov	r1, r4
9002bc08:	2300      	movs	r3, #0
9002bc0a:	2206      	movs	r2, #6
9002bc0c:	f7ff fc12 	bl	9002b434 <setModuleBounded>
9002bc10:	3402      	adds	r4, #2
9002bc12:	e7f0      	b.n	9002bbf6 <qrcodegen_encodeSegmentsAdvanced+0x34a>
9002bc14:	f04f 38ff 	mov.w	r8, #4294967295
9002bc18:	2608      	movs	r6, #8
9002bc1a:	f1a5 0904 	sub.w	r9, r5, #4
9002bc1e:	f1c6 0704 	rsb	r7, r6, #4
9002bc22:	1bab      	subs	r3, r5, r6
9002bc24:	f06f 0403 	mvn.w	r4, #3
9002bc28:	2f00      	cmp	r7, #0
9002bc2a:	9301      	str	r3, [sp, #4]
9002bc2c:	bfb8      	it	lt
9002bc2e:	427f      	neglt	r7, r7
9002bc30:	ea84 73e4 	eor.w	r3, r4, r4, asr #31
9002bc34:	eba3 73e4 	sub.w	r3, r3, r4, asr #31
9002bc38:	42bb      	cmp	r3, r7
9002bc3a:	bfb8      	it	lt
9002bc3c:	463b      	movlt	r3, r7
9002bc3e:	2b02      	cmp	r3, #2
9002bc40:	d001      	beq.n	9002bc46 <qrcodegen_encodeSegmentsAdvanced+0x39a>
9002bc42:	2b04      	cmp	r3, #4
9002bc44:	d110      	bne.n	9002bc68 <qrcodegen_encodeSegmentsAdvanced+0x3bc>
9002bc46:	1ce3      	adds	r3, r4, #3
9002bc48:	4642      	mov	r2, r8
9002bc4a:	4650      	mov	r0, sl
9002bc4c:	4619      	mov	r1, r3
9002bc4e:	9302      	str	r3, [sp, #8]
9002bc50:	f7ff fda4 	bl	9002b79c <setModuleUnbounded.constprop.2>
9002bc54:	4642      	mov	r2, r8
9002bc56:	eb09 0104 	add.w	r1, r9, r4
9002bc5a:	f7ff fd9f 	bl	9002b79c <setModuleUnbounded.constprop.2>
9002bc5e:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
9002bc62:	4619      	mov	r1, r3
9002bc64:	f7ff fd9a 	bl	9002b79c <setModuleUnbounded.constprop.2>
9002bc68:	3401      	adds	r4, #1
9002bc6a:	2c05      	cmp	r4, #5
9002bc6c:	d1e0      	bne.n	9002bc30 <qrcodegen_encodeSegmentsAdvanced+0x384>
9002bc6e:	3e01      	subs	r6, #1
9002bc70:	f108 0801 	add.w	r8, r8, #1
9002bc74:	1c71      	adds	r1, r6, #1
9002bc76:	d1d2      	bne.n	9002bc1e <qrcodegen_encodeSegmentsAdvanced+0x372>
9002bc78:	f1bb 0f01 	cmp.w	fp, #1
9002bc7c:	d154      	bne.n	9002bd28 <qrcodegen_encodeSegmentsAdvanced+0x47c>
9002bc7e:	9923      	ldr	r1, [sp, #140]	@ 0x8c
9002bc80:	4658      	mov	r0, fp
9002bc82:	f7ff fd99 	bl	9002b7b8 <initializeFunctionModules>
9002bc86:	9b03      	ldr	r3, [sp, #12]
9002bc88:	3301      	adds	r3, #1
9002bc8a:	f040 8184 	bne.w	9002bf96 <qrcodegen_encodeSegmentsAdvanced+0x6ea>
9002bc8e:	2300      	movs	r3, #0
9002bc90:	9302      	str	r3, [sp, #8]
9002bc92:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
9002bc96:	9304      	str	r3, [sp, #16]
9002bc98:	f99d 3008 	ldrsb.w	r3, [sp, #8]
9002bc9c:	4651      	mov	r1, sl
9002bc9e:	9823      	ldr	r0, [sp, #140]	@ 0x8c
9002bca0:	2700      	movs	r7, #0
9002bca2:	461a      	mov	r2, r3
9002bca4:	9301      	str	r3, [sp, #4]
9002bca6:	f7ff fbf1 	bl	9002b48c <applyMask>
9002bcaa:	4652      	mov	r2, sl
9002bcac:	463d      	mov	r5, r7
9002bcae:	e9dd 0100 	ldrd	r0, r1, [sp]
9002bcb2:	f7ff fc5b 	bl	9002b56c <drawFormatBits>
9002bcb6:	f89a 4000 	ldrb.w	r4, [sl]
9002bcba:	42bc      	cmp	r4, r7
9002bcbc:	f340 80bd 	ble.w	9002be3a <qrcodegen_encodeSegmentsAdvanced+0x58e>
9002bcc0:	2600      	movs	r6, #0
9002bcc2:	221c      	movs	r2, #28
9002bcc4:	2100      	movs	r1, #0
9002bcc6:	a80e      	add	r0, sp, #56	@ 0x38
9002bcc8:	46b1      	mov	r9, r6
9002bcca:	46b0      	mov	r8, r6
9002bccc:	f001 fe22 	bl	9002d914 <memset>
9002bcd0:	463a      	mov	r2, r7
9002bcd2:	4641      	mov	r1, r8
9002bcd4:	4650      	mov	r0, sl
9002bcd6:	f7ff fba1 	bl	9002b41c <getModuleBounded>
9002bcda:	4548      	cmp	r0, r9
9002bcdc:	f040 8097 	bne.w	9002be0e <qrcodegen_encodeSegmentsAdvanced+0x562>
9002bce0:	3601      	adds	r6, #1
9002bce2:	2e05      	cmp	r6, #5
9002bce4:	f040 808f 	bne.w	9002be06 <qrcodegen_encodeSegmentsAdvanced+0x55a>
9002bce8:	3503      	adds	r5, #3
9002bcea:	f108 0801 	add.w	r8, r8, #1
9002bcee:	4544      	cmp	r4, r8
9002bcf0:	dcee      	bgt.n	9002bcd0 <qrcodegen_encodeSegmentsAdvanced+0x424>
9002bcf2:	f1b9 0f00 	cmp.w	r9, #0
9002bcf6:	d005      	beq.n	9002bd04 <qrcodegen_encodeSegmentsAdvanced+0x458>
9002bcf8:	4630      	mov	r0, r6
9002bcfa:	2600      	movs	r6, #0
9002bcfc:	4622      	mov	r2, r4
9002bcfe:	a90e      	add	r1, sp, #56	@ 0x38
9002bd00:	f7ff fcf4 	bl	9002b6ec <finderPenaltyAddHistory>
9002bd04:	4622      	mov	r2, r4
9002bd06:	a90e      	add	r1, sp, #56	@ 0x38
9002bd08:	19a0      	adds	r0, r4, r6
9002bd0a:	3701      	adds	r7, #1
9002bd0c:	f7ff fcee 	bl	9002b6ec <finderPenaltyAddHistory>
9002bd10:	a80e      	add	r0, sp, #56	@ 0x38
9002bd12:	f7ff fd1b 	bl	9002b74c <finderPenaltyCountPatterns.isra.1>
9002bd16:	2328      	movs	r3, #40	@ 0x28
9002bd18:	fb03 5500 	mla	r5, r3, r0, r5
9002bd1c:	e7cd      	b.n	9002bcba <qrcodegen_encodeSegmentsAdvanced+0x40e>
9002bd1e:	bf00      	nop
9002bd20:	900322e4 	.word	0x900322e4
9002bd24:	90032240 	.word	0x90032240
9002bd28:	f10d 0938 	add.w	r9, sp, #56	@ 0x38
9002bd2c:	4658      	mov	r0, fp
9002bd2e:	2600      	movs	r6, #0
9002bd30:	4649      	mov	r1, r9
9002bd32:	f7ff fce8 	bl	9002b706 <getAlignmentPatternPositions.part.0>
9002bd36:	4680      	mov	r8, r0
9002bd38:	f8cd 9008 	str.w	r9, [sp, #8]
9002bd3c:	4546      	cmp	r6, r8
9002bd3e:	da38      	bge.n	9002bdb2 <qrcodegen_encodeSegmentsAdvanced+0x506>
9002bd40:	f108 33ff 	add.w	r3, r8, #4294967295
9002bd44:	f8cd 9004 	str.w	r9, [sp, #4]
9002bd48:	9304      	str	r3, [sp, #16]
9002bd4a:	9b01      	ldr	r3, [sp, #4]
9002bd4c:	eba3 0309 	sub.w	r3, r3, r9
9002bd50:	4598      	cmp	r8, r3
9002bd52:	dd29      	ble.n	9002bda8 <qrcodegen_encodeSegmentsAdvanced+0x4fc>
9002bd54:	bb06      	cbnz	r6, 9002bd98 <qrcodegen_encodeSegmentsAdvanced+0x4ec>
9002bd56:	b91b      	cbnz	r3, 9002bd60 <qrcodegen_encodeSegmentsAdvanced+0x4b4>
9002bd58:	9b01      	ldr	r3, [sp, #4]
9002bd5a:	3301      	adds	r3, #1
9002bd5c:	9301      	str	r3, [sp, #4]
9002bd5e:	e7f4      	b.n	9002bd4a <qrcodegen_encodeSegmentsAdvanced+0x49e>
9002bd60:	f108 32ff 	add.w	r2, r8, #4294967295
9002bd64:	429a      	cmp	r2, r3
9002bd66:	d0f7      	beq.n	9002bd58 <qrcodegen_encodeSegmentsAdvanced+0x4ac>
9002bd68:	f04f 34ff 	mov.w	r4, #4294967295
9002bd6c:	f04f 37ff 	mov.w	r7, #4294967295
9002bd70:	9b02      	ldr	r3, [sp, #8]
9002bd72:	7819      	ldrb	r1, [r3, #0]
9002bd74:	9b01      	ldr	r3, [sp, #4]
9002bd76:	4439      	add	r1, r7
9002bd78:	781a      	ldrb	r2, [r3, #0]
9002bd7a:	4422      	add	r2, r4
9002bd7c:	b997      	cbnz	r7, 9002bda4 <qrcodegen_encodeSegmentsAdvanced+0x4f8>
9002bd7e:	fab4 f384 	clz	r3, r4
9002bd82:	095b      	lsrs	r3, r3, #5
9002bd84:	3701      	adds	r7, #1
9002bd86:	4650      	mov	r0, sl
9002bd88:	f7ff fb54 	bl	9002b434 <setModuleBounded>
9002bd8c:	2f02      	cmp	r7, #2
9002bd8e:	d1ef      	bne.n	9002bd70 <qrcodegen_encodeSegmentsAdvanced+0x4c4>
9002bd90:	3401      	adds	r4, #1
9002bd92:	2c02      	cmp	r4, #2
9002bd94:	d1ea      	bne.n	9002bd6c <qrcodegen_encodeSegmentsAdvanced+0x4c0>
9002bd96:	e7df      	b.n	9002bd58 <qrcodegen_encodeSegmentsAdvanced+0x4ac>
9002bd98:	9a04      	ldr	r2, [sp, #16]
9002bd9a:	4296      	cmp	r6, r2
9002bd9c:	d1e4      	bne.n	9002bd68 <qrcodegen_encodeSegmentsAdvanced+0x4bc>
9002bd9e:	2b00      	cmp	r3, #0
9002bda0:	d1e2      	bne.n	9002bd68 <qrcodegen_encodeSegmentsAdvanced+0x4bc>
9002bda2:	e7d9      	b.n	9002bd58 <qrcodegen_encodeSegmentsAdvanced+0x4ac>
9002bda4:	2300      	movs	r3, #0
9002bda6:	e7ed      	b.n	9002bd84 <qrcodegen_encodeSegmentsAdvanced+0x4d8>
9002bda8:	9b02      	ldr	r3, [sp, #8]
9002bdaa:	3601      	adds	r6, #1
9002bdac:	3301      	adds	r3, #1
9002bdae:	9302      	str	r3, [sp, #8]
9002bdb0:	e7c4      	b.n	9002bd3c <qrcodegen_encodeSegmentsAdvanced+0x490>
9002bdb2:	f1bb 0f06 	cmp.w	fp, #6
9002bdb6:	f77f af62 	ble.w	9002bc7e <qrcodegen_encodeSegmentsAdvanced+0x3d2>
9002bdba:	465e      	mov	r6, fp
9002bdbc:	240c      	movs	r4, #12
9002bdbe:	f641 7225 	movw	r2, #7973	@ 0x1f25
9002bdc2:	12f3      	asrs	r3, r6, #11
9002bdc4:	3c01      	subs	r4, #1
9002bdc6:	fb02 f303 	mul.w	r3, r2, r3
9002bdca:	ea83 0646 	eor.w	r6, r3, r6, lsl #1
9002bdce:	d1f8      	bne.n	9002bdc2 <qrcodegen_encodeSegmentsAdvanced+0x516>
9002bdd0:	ea46 360b 	orr.w	r6, r6, fp, lsl #12
9002bdd4:	3d0b      	subs	r5, #11
9002bdd6:	2700      	movs	r7, #0
9002bdd8:	eb05 0807 	add.w	r8, r5, r7
9002bddc:	f006 0901 	and.w	r9, r6, #1
9002bde0:	4622      	mov	r2, r4
9002bde2:	4650      	mov	r0, sl
9002bde4:	464b      	mov	r3, r9
9002bde6:	4641      	mov	r1, r8
9002bde8:	3701      	adds	r7, #1
9002bdea:	f7ff fb23 	bl	9002b434 <setModuleBounded>
9002bdee:	4642      	mov	r2, r8
9002bdf0:	4621      	mov	r1, r4
9002bdf2:	f7ff fb1f 	bl	9002b434 <setModuleBounded>
9002bdf6:	2f03      	cmp	r7, #3
9002bdf8:	ea4f 0666 	mov.w	r6, r6, asr #1
9002bdfc:	d1ec      	bne.n	9002bdd8 <qrcodegen_encodeSegmentsAdvanced+0x52c>
9002bdfe:	3401      	adds	r4, #1
9002be00:	2c06      	cmp	r4, #6
9002be02:	d1e8      	bne.n	9002bdd6 <qrcodegen_encodeSegmentsAdvanced+0x52a>
9002be04:	e73b      	b.n	9002bc7e <qrcodegen_encodeSegmentsAdvanced+0x3d2>
9002be06:	f77f af70 	ble.w	9002bcea <qrcodegen_encodeSegmentsAdvanced+0x43e>
9002be0a:	3501      	adds	r5, #1
9002be0c:	e76d      	b.n	9002bcea <qrcodegen_encodeSegmentsAdvanced+0x43e>
9002be0e:	4622      	mov	r2, r4
9002be10:	a90e      	add	r1, sp, #56	@ 0x38
9002be12:	4630      	mov	r0, r6
9002be14:	f7ff fc6a 	bl	9002b6ec <finderPenaltyAddHistory>
9002be18:	f1b9 0f00 	cmp.w	r9, #0
9002be1c:	d105      	bne.n	9002be2a <qrcodegen_encodeSegmentsAdvanced+0x57e>
9002be1e:	a80e      	add	r0, sp, #56	@ 0x38
9002be20:	f7ff fc94 	bl	9002b74c <finderPenaltyCountPatterns.isra.1>
9002be24:	2328      	movs	r3, #40	@ 0x28
9002be26:	fb03 5500 	mla	r5, r3, r0, r5
9002be2a:	463a      	mov	r2, r7
9002be2c:	4641      	mov	r1, r8
9002be2e:	4650      	mov	r0, sl
9002be30:	2601      	movs	r6, #1
9002be32:	f7ff faf3 	bl	9002b41c <getModuleBounded>
9002be36:	4681      	mov	r9, r0
9002be38:	e757      	b.n	9002bcea <qrcodegen_encodeSegmentsAdvanced+0x43e>
9002be3a:	2700      	movs	r7, #0
9002be3c:	42bc      	cmp	r4, r7
9002be3e:	dd45      	ble.n	9002becc <qrcodegen_encodeSegmentsAdvanced+0x620>
9002be40:	2600      	movs	r6, #0
9002be42:	221c      	movs	r2, #28
9002be44:	2100      	movs	r1, #0
9002be46:	a80e      	add	r0, sp, #56	@ 0x38
9002be48:	46b1      	mov	r9, r6
9002be4a:	46b0      	mov	r8, r6
9002be4c:	f001 fd62 	bl	9002d914 <memset>
9002be50:	4642      	mov	r2, r8
9002be52:	4639      	mov	r1, r7
9002be54:	4650      	mov	r0, sl
9002be56:	f7ff fae1 	bl	9002b41c <getModuleBounded>
9002be5a:	4548      	cmp	r0, r9
9002be5c:	d120      	bne.n	9002bea0 <qrcodegen_encodeSegmentsAdvanced+0x5f4>
9002be5e:	3601      	adds	r6, #1
9002be60:	2e05      	cmp	r6, #5
9002be62:	d11a      	bne.n	9002be9a <qrcodegen_encodeSegmentsAdvanced+0x5ee>
9002be64:	3503      	adds	r5, #3
9002be66:	f108 0801 	add.w	r8, r8, #1
9002be6a:	4544      	cmp	r4, r8
9002be6c:	dcf0      	bgt.n	9002be50 <qrcodegen_encodeSegmentsAdvanced+0x5a4>
9002be6e:	f1b9 0f00 	cmp.w	r9, #0
9002be72:	d005      	beq.n	9002be80 <qrcodegen_encodeSegmentsAdvanced+0x5d4>
9002be74:	4630      	mov	r0, r6
9002be76:	2600      	movs	r6, #0
9002be78:	4622      	mov	r2, r4
9002be7a:	a90e      	add	r1, sp, #56	@ 0x38
9002be7c:	f7ff fc36 	bl	9002b6ec <finderPenaltyAddHistory>
9002be80:	4622      	mov	r2, r4
9002be82:	a90e      	add	r1, sp, #56	@ 0x38
9002be84:	19a0      	adds	r0, r4, r6
9002be86:	3701      	adds	r7, #1
9002be88:	f7ff fc30 	bl	9002b6ec <finderPenaltyAddHistory>
9002be8c:	a80e      	add	r0, sp, #56	@ 0x38
9002be8e:	f7ff fc5d 	bl	9002b74c <finderPenaltyCountPatterns.isra.1>
9002be92:	2328      	movs	r3, #40	@ 0x28
9002be94:	fb03 5500 	mla	r5, r3, r0, r5
9002be98:	e7d0      	b.n	9002be3c <qrcodegen_encodeSegmentsAdvanced+0x590>
9002be9a:	dde4      	ble.n	9002be66 <qrcodegen_encodeSegmentsAdvanced+0x5ba>
9002be9c:	3501      	adds	r5, #1
9002be9e:	e7e2      	b.n	9002be66 <qrcodegen_encodeSegmentsAdvanced+0x5ba>
9002bea0:	4622      	mov	r2, r4
9002bea2:	a90e      	add	r1, sp, #56	@ 0x38
9002bea4:	4630      	mov	r0, r6
9002bea6:	f7ff fc21 	bl	9002b6ec <finderPenaltyAddHistory>
9002beaa:	f1b9 0f00 	cmp.w	r9, #0
9002beae:	d105      	bne.n	9002bebc <qrcodegen_encodeSegmentsAdvanced+0x610>
9002beb0:	a80e      	add	r0, sp, #56	@ 0x38
9002beb2:	f7ff fc4b 	bl	9002b74c <finderPenaltyCountPatterns.isra.1>
9002beb6:	2328      	movs	r3, #40	@ 0x28
9002beb8:	fb03 5500 	mla	r5, r3, r0, r5
9002bebc:	4642      	mov	r2, r8
9002bebe:	4639      	mov	r1, r7
9002bec0:	4650      	mov	r0, sl
9002bec2:	2601      	movs	r6, #1
9002bec4:	f7ff faaa 	bl	9002b41c <getModuleBounded>
9002bec8:	4681      	mov	r9, r0
9002beca:	e7cc      	b.n	9002be66 <qrcodegen_encodeSegmentsAdvanced+0x5ba>
9002becc:	1e63      	subs	r3, r4, #1
9002bece:	2601      	movs	r6, #1
9002bed0:	9305      	str	r3, [sp, #20]
9002bed2:	f106 38ff 	add.w	r8, r6, #4294967295
9002bed6:	9b05      	ldr	r3, [sp, #20]
9002bed8:	4543      	cmp	r3, r8
9002beda:	dd25      	ble.n	9002bf28 <qrcodegen_encodeSegmentsAdvanced+0x67c>
9002bedc:	f04f 0b00 	mov.w	fp, #0
9002bee0:	4642      	mov	r2, r8
9002bee2:	4659      	mov	r1, fp
9002bee4:	4650      	mov	r0, sl
9002bee6:	f10b 0701 	add.w	r7, fp, #1
9002beea:	f7ff fa97 	bl	9002b41c <getModuleBounded>
9002beee:	4681      	mov	r9, r0
9002bef0:	4642      	mov	r2, r8
9002bef2:	4639      	mov	r1, r7
9002bef4:	4650      	mov	r0, sl
9002bef6:	f7ff fa91 	bl	9002b41c <getModuleBounded>
9002befa:	4581      	cmp	r9, r0
9002befc:	d10e      	bne.n	9002bf1c <qrcodegen_encodeSegmentsAdvanced+0x670>
9002befe:	4632      	mov	r2, r6
9002bf00:	4659      	mov	r1, fp
9002bf02:	4650      	mov	r0, sl
9002bf04:	f7ff fa8a 	bl	9002b41c <getModuleBounded>
9002bf08:	4581      	cmp	r9, r0
9002bf0a:	d107      	bne.n	9002bf1c <qrcodegen_encodeSegmentsAdvanced+0x670>
9002bf0c:	4632      	mov	r2, r6
9002bf0e:	4639      	mov	r1, r7
9002bf10:	4650      	mov	r0, sl
9002bf12:	f7ff fa83 	bl	9002b41c <getModuleBounded>
9002bf16:	4581      	cmp	r9, r0
9002bf18:	d100      	bne.n	9002bf1c <qrcodegen_encodeSegmentsAdvanced+0x670>
9002bf1a:	3503      	adds	r5, #3
9002bf1c:	9b05      	ldr	r3, [sp, #20]
9002bf1e:	46bb      	mov	fp, r7
9002bf20:	42bb      	cmp	r3, r7
9002bf22:	dcdd      	bgt.n	9002bee0 <qrcodegen_encodeSegmentsAdvanced+0x634>
9002bf24:	3601      	adds	r6, #1
9002bf26:	e7d4      	b.n	9002bed2 <qrcodegen_encodeSegmentsAdvanced+0x626>
9002bf28:	2700      	movs	r7, #0
9002bf2a:	463e      	mov	r6, r7
9002bf2c:	42bc      	cmp	r4, r7
9002bf2e:	dd0e      	ble.n	9002bf4e <qrcodegen_encodeSegmentsAdvanced+0x6a2>
9002bf30:	f04f 0800 	mov.w	r8, #0
9002bf34:	463a      	mov	r2, r7
9002bf36:	4641      	mov	r1, r8
9002bf38:	4650      	mov	r0, sl
9002bf3a:	f7ff fa6f 	bl	9002b41c <getModuleBounded>
9002bf3e:	b100      	cbz	r0, 9002bf42 <qrcodegen_encodeSegmentsAdvanced+0x696>
9002bf40:	3601      	adds	r6, #1
9002bf42:	f108 0801 	add.w	r8, r8, #1
9002bf46:	4544      	cmp	r4, r8
9002bf48:	dcf4      	bgt.n	9002bf34 <qrcodegen_encodeSegmentsAdvanced+0x688>
9002bf4a:	3701      	adds	r7, #1
9002bf4c:	e7ee      	b.n	9002bf2c <qrcodegen_encodeSegmentsAdvanced+0x680>
9002bf4e:	fb14 f404 	smulbb	r4, r4, r4
9002bf52:	f06f 0309 	mvn.w	r3, #9
9002bf56:	2214      	movs	r2, #20
9002bf58:	4651      	mov	r1, sl
9002bf5a:	4363      	muls	r3, r4
9002bf5c:	9823      	ldr	r0, [sp, #140]	@ 0x8c
9002bf5e:	fb02 3606 	mla	r6, r2, r6, r3
9002bf62:	230a      	movs	r3, #10
9002bf64:	9a01      	ldr	r2, [sp, #4]
9002bf66:	2e00      	cmp	r6, #0
9002bf68:	bfb8      	it	lt
9002bf6a:	4276      	neglt	r6, r6
9002bf6c:	4426      	add	r6, r4
9002bf6e:	3e01      	subs	r6, #1
9002bf70:	fb96 f4f4 	sdiv	r4, r6, r4
9002bf74:	3c01      	subs	r4, #1
9002bf76:	fb03 5504 	mla	r5, r3, r4, r5
9002bf7a:	9b04      	ldr	r3, [sp, #16]
9002bf7c:	429d      	cmp	r5, r3
9002bf7e:	bfbe      	ittt	lt
9002bf80:	9b01      	ldrlt	r3, [sp, #4]
9002bf82:	9504      	strlt	r5, [sp, #16]
9002bf84:	9303      	strlt	r3, [sp, #12]
9002bf86:	f7ff fa81 	bl	9002b48c <applyMask>
9002bf8a:	9b02      	ldr	r3, [sp, #8]
9002bf8c:	3301      	adds	r3, #1
9002bf8e:	2b08      	cmp	r3, #8
9002bf90:	9302      	str	r3, [sp, #8]
9002bf92:	f47f ae81 	bne.w	9002bc98 <qrcodegen_encodeSegmentsAdvanced+0x3ec>
9002bf96:	9a03      	ldr	r2, [sp, #12]
9002bf98:	4651      	mov	r1, sl
9002bf9a:	9823      	ldr	r0, [sp, #140]	@ 0x8c
9002bf9c:	f7ff fa76 	bl	9002b48c <applyMask>
9002bfa0:	9800      	ldr	r0, [sp, #0]
9002bfa2:	4652      	mov	r2, sl
9002bfa4:	9903      	ldr	r1, [sp, #12]
9002bfa6:	f7ff fae1 	bl	9002b56c <drawFormatBits>
9002bfaa:	2001      	movs	r0, #1
9002bfac:	e4b9      	b.n	9002b922 <qrcodegen_encodeSegmentsAdvanced+0x76>
9002bfae:	4628      	mov	r0, r5
9002bfb0:	2102      	movs	r1, #2
9002bfb2:	f7ff fa1b 	bl	9002b3ec <reedSolomonMultiply>
9002bfb6:	f108 0801 	add.w	r8, r8, #1
9002bfba:	4605      	mov	r5, r0
9002bfbc:	e55e      	b.n	9002ba7c <qrcodegen_encodeSegmentsAdvanced+0x1d0>
9002bfbe:	bf00      	nop

9002bfc0 <qrcodegen_isNumeric>:
9002bfc0:	3801      	subs	r0, #1
9002bfc2:	f810 3f01 	ldrb.w	r3, [r0, #1]!
9002bfc6:	b123      	cbz	r3, 9002bfd2 <qrcodegen_isNumeric+0x12>
9002bfc8:	3b30      	subs	r3, #48	@ 0x30
9002bfca:	2b09      	cmp	r3, #9
9002bfcc:	d9f9      	bls.n	9002bfc2 <qrcodegen_isNumeric+0x2>
9002bfce:	2000      	movs	r0, #0
9002bfd0:	4770      	bx	lr
9002bfd2:	2001      	movs	r0, #1
9002bfd4:	4770      	bx	lr
	...

9002bfd8 <qrcodegen_isAlphanumeric>:
9002bfd8:	b538      	push	{r3, r4, r5, lr}
9002bfda:	1e44      	subs	r4, r0, #1
9002bfdc:	4d05      	ldr	r5, [pc, #20]	@ (9002bff4 <qrcodegen_isAlphanumeric+0x1c>)
9002bfde:	f814 1f01 	ldrb.w	r1, [r4, #1]!
9002bfe2:	b129      	cbz	r1, 9002bff0 <qrcodegen_isAlphanumeric+0x18>
9002bfe4:	4628      	mov	r0, r5
9002bfe6:	f001 fc9d 	bl	9002d924 <strchr>
9002bfea:	2800      	cmp	r0, #0
9002bfec:	d1f7      	bne.n	9002bfde <qrcodegen_isAlphanumeric+0x6>
9002bfee:	bd38      	pop	{r3, r4, r5, pc}
9002bff0:	2001      	movs	r0, #1
9002bff2:	e7fc      	b.n	9002bfee <qrcodegen_isAlphanumeric+0x16>
9002bff4:	900323c8 	.word	0x900323c8

9002bff8 <qrcodegen_calcSegmentBufferSize>:
9002bff8:	b508      	push	{r3, lr}
9002bffa:	f7ff fb27 	bl	9002b64c <calcSegmentBitLength>
9002bffe:	1c43      	adds	r3, r0, #1
9002c000:	bf1c      	itt	ne
9002c002:	3007      	addne	r0, #7
9002c004:	08c0      	lsrne	r0, r0, #3
9002c006:	bd08      	pop	{r3, pc}

9002c008 <qrcodegen_makeNumeric>:
9002c008:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002c00c:	4604      	mov	r4, r0
9002c00e:	4608      	mov	r0, r1
9002c010:	4616      	mov	r6, r2
9002c012:	460d      	mov	r5, r1
9002c014:	f7d4 f964 	bl	900002e0 <strlen>
9002c018:	4603      	mov	r3, r0
9002c01a:	2001      	movs	r0, #1
9002c01c:	4619      	mov	r1, r3
9002c01e:	7020      	strb	r0, [r4, #0]
9002c020:	f7ff fb14 	bl	9002b64c <calcSegmentBitLength>
9002c024:	1e02      	subs	r2, r0, #0
9002c026:	6063      	str	r3, [r4, #4]
9002c028:	dd05      	ble.n	9002c036 <qrcodegen_makeNumeric+0x2e>
9002c02a:	3207      	adds	r2, #7
9002c02c:	2100      	movs	r1, #0
9002c02e:	4630      	mov	r0, r6
9002c030:	08d2      	lsrs	r2, r2, #3
9002c032:	f001 fc6f 	bl	9002d914 <memset>
9002c036:	2100      	movs	r1, #0
9002c038:	4627      	mov	r7, r4
9002c03a:	3d01      	subs	r5, #1
9002c03c:	f04f 080a 	mov.w	r8, #10
9002c040:	4608      	mov	r0, r1
9002c042:	f847 1f0c 	str.w	r1, [r7, #12]!
9002c046:	f815 3f01 	ldrb.w	r3, [r5, #1]!
9002c04a:	b16b      	cbz	r3, 9002c068 <qrcodegen_makeNumeric+0x60>
9002c04c:	3101      	adds	r1, #1
9002c04e:	3b30      	subs	r3, #48	@ 0x30
9002c050:	2903      	cmp	r1, #3
9002c052:	fb08 3000 	mla	r0, r8, r0, r3
9002c056:	d1f6      	bne.n	9002c046 <qrcodegen_makeNumeric+0x3e>
9002c058:	210a      	movs	r1, #10
9002c05a:	463b      	mov	r3, r7
9002c05c:	4632      	mov	r2, r6
9002c05e:	f7ff f977 	bl	9002b350 <appendBitsToBuffer>
9002c062:	2000      	movs	r0, #0
9002c064:	4601      	mov	r1, r0
9002c066:	e7ee      	b.n	9002c046 <qrcodegen_makeNumeric+0x3e>
9002c068:	b139      	cbz	r1, 9002c07a <qrcodegen_makeNumeric+0x72>
9002c06a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002c06e:	f104 030c 	add.w	r3, r4, #12
9002c072:	4632      	mov	r2, r6
9002c074:	3101      	adds	r1, #1
9002c076:	f7ff f96b 	bl	9002b350 <appendBitsToBuffer>
9002c07a:	60a6      	str	r6, [r4, #8]
9002c07c:	4620      	mov	r0, r4
9002c07e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

9002c084 <qrcodegen_makeAlphanumeric>:
9002c084:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002c088:	4605      	mov	r5, r0
9002c08a:	4608      	mov	r0, r1
9002c08c:	4690      	mov	r8, r2
9002c08e:	460f      	mov	r7, r1
9002c090:	f7d4 f926 	bl	900002e0 <strlen>
9002c094:	4603      	mov	r3, r0
9002c096:	2002      	movs	r0, #2
9002c098:	4619      	mov	r1, r3
9002c09a:	7028      	strb	r0, [r5, #0]
9002c09c:	f7ff fad6 	bl	9002b64c <calcSegmentBitLength>
9002c0a0:	1e02      	subs	r2, r0, #0
9002c0a2:	606b      	str	r3, [r5, #4]
9002c0a4:	dd05      	ble.n	9002c0b2 <qrcodegen_makeAlphanumeric+0x2e>
9002c0a6:	3207      	adds	r2, #7
9002c0a8:	2100      	movs	r1, #0
9002c0aa:	4640      	mov	r0, r8
9002c0ac:	08d2      	lsrs	r2, r2, #3
9002c0ae:	f001 fc31 	bl	9002d914 <memset>
9002c0b2:	2400      	movs	r4, #0
9002c0b4:	3f01      	subs	r7, #1
9002c0b6:	f8df 9050 	ldr.w	r9, [pc, #80]	@ 9002c108 <qrcodegen_makeAlphanumeric+0x84>
9002c0ba:	4626      	mov	r6, r4
9002c0bc:	60ec      	str	r4, [r5, #12]
9002c0be:	f817 1f01 	ldrb.w	r1, [r7, #1]!
9002c0c2:	b1a1      	cbz	r1, 9002c0ee <qrcodegen_makeAlphanumeric+0x6a>
9002c0c4:	4810      	ldr	r0, [pc, #64]	@ (9002c108 <qrcodegen_makeAlphanumeric+0x84>)
9002c0c6:	f001 fc2d 	bl	9002d924 <strchr>
9002c0ca:	232d      	movs	r3, #45	@ 0x2d
9002c0cc:	435e      	muls	r6, r3
9002c0ce:	eba6 0609 	sub.w	r6, r6, r9
9002c0d2:	4406      	add	r6, r0
9002c0d4:	b14c      	cbz	r4, 9002c0ea <qrcodegen_makeAlphanumeric+0x66>
9002c0d6:	4630      	mov	r0, r6
9002c0d8:	2600      	movs	r6, #0
9002c0da:	f105 030c 	add.w	r3, r5, #12
9002c0de:	4642      	mov	r2, r8
9002c0e0:	210b      	movs	r1, #11
9002c0e2:	4634      	mov	r4, r6
9002c0e4:	f7ff f934 	bl	9002b350 <appendBitsToBuffer>
9002c0e8:	e7e9      	b.n	9002c0be <qrcodegen_makeAlphanumeric+0x3a>
9002c0ea:	2401      	movs	r4, #1
9002c0ec:	e7e7      	b.n	9002c0be <qrcodegen_makeAlphanumeric+0x3a>
9002c0ee:	b134      	cbz	r4, 9002c0fe <qrcodegen_makeAlphanumeric+0x7a>
9002c0f0:	f105 030c 	add.w	r3, r5, #12
9002c0f4:	4642      	mov	r2, r8
9002c0f6:	2106      	movs	r1, #6
9002c0f8:	4630      	mov	r0, r6
9002c0fa:	f7ff f929 	bl	9002b350 <appendBitsToBuffer>
9002c0fe:	f8c5 8008 	str.w	r8, [r5, #8]
9002c102:	4628      	mov	r0, r5
9002c104:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002c108:	900323c8 	.word	0x900323c8

9002c10c <qrcodegen_encodeText>:
9002c10c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002c110:	b08f      	sub	sp, #60	@ 0x3c
9002c112:	4607      	mov	r7, r0
9002c114:	460e      	mov	r6, r1
9002c116:	4690      	mov	r8, r2
9002c118:	4699      	mov	r9, r3
9002c11a:	f99d a068 	ldrsb.w	sl, [sp, #104]	@ 0x68
9002c11e:	f7d4 f8df 	bl	900002e0 <strlen>
9002c122:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
9002c126:	4605      	mov	r5, r0
9002c128:	b968      	cbnz	r0, 9002c146 <qrcodegen_encodeText+0x3a>
9002c12a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
9002c12c:	464a      	mov	r2, r9
9002c12e:	4601      	mov	r1, r0
9002c130:	9300      	str	r3, [sp, #0]
9002c132:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002c134:	e9cd 6803 	strd	r6, r8, [sp, #12]
9002c138:	e9cd ab01 	strd	sl, fp, [sp, #4]
9002c13c:	f7ff fbb6 	bl	9002b8ac <qrcodegen_encodeSegmentsAdvanced>
9002c140:	b00f      	add	sp, #60	@ 0x3c
9002c142:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002c146:	9b19      	ldr	r3, [sp, #100]	@ 0x64
9002c148:	4638      	mov	r0, r7
9002c14a:	009c      	lsls	r4, r3, #2
9002c14c:	3411      	adds	r4, #17
9002c14e:	4364      	muls	r4, r4
9002c150:	3407      	adds	r4, #7
9002c152:	10e4      	asrs	r4, r4, #3
9002c154:	3401      	adds	r4, #1
9002c156:	f7ff ff33 	bl	9002bfc0 <qrcodegen_isNumeric>
9002c15a:	b1d8      	cbz	r0, 9002c194 <qrcodegen_encodeText+0x88>
9002c15c:	4629      	mov	r1, r5
9002c15e:	2001      	movs	r0, #1
9002c160:	f7ff ff4a 	bl	9002bff8 <qrcodegen_calcSegmentBufferSize>
9002c164:	42a0      	cmp	r0, r4
9002c166:	d839      	bhi.n	9002c1dc <qrcodegen_encodeText+0xd0>
9002c168:	ac06      	add	r4, sp, #24
9002c16a:	4632      	mov	r2, r6
9002c16c:	4639      	mov	r1, r7
9002c16e:	4620      	mov	r0, r4
9002c170:	f7ff ff4a 	bl	9002c008 <qrcodegen_makeNumeric>
9002c174:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
9002c178:	ac0e      	add	r4, sp, #56	@ 0x38
9002c17a:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
9002c17e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
9002c180:	464a      	mov	r2, r9
9002c182:	2101      	movs	r1, #1
9002c184:	a80a      	add	r0, sp, #40	@ 0x28
9002c186:	9300      	str	r3, [sp, #0]
9002c188:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002c18a:	e9cd 6803 	strd	r6, r8, [sp, #12]
9002c18e:	e9cd ab01 	strd	sl, fp, [sp, #4]
9002c192:	e7d3      	b.n	9002c13c <qrcodegen_encodeText+0x30>
9002c194:	4638      	mov	r0, r7
9002c196:	f7ff ff1f 	bl	9002bfd8 <qrcodegen_isAlphanumeric>
9002c19a:	b160      	cbz	r0, 9002c1b6 <qrcodegen_encodeText+0xaa>
9002c19c:	4629      	mov	r1, r5
9002c19e:	2002      	movs	r0, #2
9002c1a0:	f7ff ff2a 	bl	9002bff8 <qrcodegen_calcSegmentBufferSize>
9002c1a4:	42a0      	cmp	r0, r4
9002c1a6:	d819      	bhi.n	9002c1dc <qrcodegen_encodeText+0xd0>
9002c1a8:	ac06      	add	r4, sp, #24
9002c1aa:	4632      	mov	r2, r6
9002c1ac:	4639      	mov	r1, r7
9002c1ae:	4620      	mov	r0, r4
9002c1b0:	f7ff ff68 	bl	9002c084 <qrcodegen_makeAlphanumeric>
9002c1b4:	e7de      	b.n	9002c174 <qrcodegen_encodeText+0x68>
9002c1b6:	42a5      	cmp	r5, r4
9002c1b8:	d810      	bhi.n	9002c1dc <qrcodegen_encodeText+0xd0>
9002c1ba:	5c3b      	ldrb	r3, [r7, r0]
9002c1bc:	5433      	strb	r3, [r6, r0]
9002c1be:	3001      	adds	r0, #1
9002c1c0:	4285      	cmp	r5, r0
9002c1c2:	d1fa      	bne.n	9002c1ba <qrcodegen_encodeText+0xae>
9002c1c4:	2004      	movs	r0, #4
9002c1c6:	4629      	mov	r1, r5
9002c1c8:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
9002c1cc:	f7ff fa3e 	bl	9002b64c <calcSegmentBitLength>
9002c1d0:	900d      	str	r0, [sp, #52]	@ 0x34
9002c1d2:	3001      	adds	r0, #1
9002c1d4:	d002      	beq.n	9002c1dc <qrcodegen_encodeText+0xd0>
9002c1d6:	e9cd 560b 	strd	r5, r6, [sp, #44]	@ 0x2c
9002c1da:	e7d0      	b.n	9002c17e <qrcodegen_encodeText+0x72>
9002c1dc:	2000      	movs	r0, #0
9002c1de:	f888 0000 	strb.w	r0, [r8]
9002c1e2:	e7ad      	b.n	9002c140 <qrcodegen_encodeText+0x34>

9002c1e4 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
9002c1e4:	10c9      	asrs	r1, r1, #3
9002c1e6:	2900      	cmp	r1, #0
9002c1e8:	bfb8      	it	lt
9002c1ea:	4249      	neglt	r1, r1
9002c1ec:	2801      	cmp	r0, #1
9002c1ee:	d108      	bne.n	9002c202 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
9002c1f0:	f3c1 0008 	ubfx	r0, r1, #0, #9
9002c1f4:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
9002c1f8:	4601      	mov	r1, r0
9002c1fa:	dd02      	ble.n	9002c202 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
9002c1fc:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
9002c200:	4770      	bx	lr
9002c202:	29ff      	cmp	r1, #255	@ 0xff
9002c204:	bfa8      	it	ge
9002c206:	21ff      	movge	r1, #255	@ 0xff
9002c208:	4608      	mov	r0, r1
9002c20a:	4770      	bx	lr

9002c20c <_ZN8touchgfx10Rasterizer6lineToEii>:
9002c20c:	b410      	push	{r4}
9002c20e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
9002c212:	429c      	cmp	r4, r3
9002c214:	d803      	bhi.n	9002c21e <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
9002c216:	f85d 4b04 	ldr.w	r4, [sp], #4
9002c21a:	f7eb b8b5 	b.w	90017388 <_ZN8touchgfx7Outline6lineToEii>
9002c21e:	f85d 4b04 	ldr.w	r4, [sp], #4
9002c222:	4770      	bx	lr

9002c224 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
9002c224:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002c228:	b08b      	sub	sp, #44	@ 0x2c
9002c22a:	4606      	mov	r6, r0
9002c22c:	468a      	mov	sl, r1
9002c22e:	e9cd 2306 	strd	r2, r3, [sp, #24]
9002c232:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
9002c236:	9308      	str	r3, [sp, #32]
9002c238:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
9002c23c:	9309      	str	r3, [sp, #36]	@ 0x24
9002c23e:	f7eb fa0e 	bl	9001765e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
9002c242:	68b5      	ldr	r5, [r6, #8]
9002c244:	4604      	mov	r4, r0
9002c246:	2d00      	cmp	r5, #0
9002c248:	d044      	beq.n	9002c2d4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
9002c24a:	6873      	ldr	r3, [r6, #4]
9002c24c:	42ab      	cmp	r3, r5
9002c24e:	d33d      	bcc.n	9002c2cc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
9002c250:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
9002c254:	f04f 0800 	mov.w	r8, #0
9002c258:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
9002c25c:	eb02 0b03 	add.w	fp, r2, r3
9002c260:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
9002c264:	fb02 1203 	mla	r2, r2, r3, r1
9002c268:	9205      	str	r2, [sp, #20]
9002c26a:	1e6a      	subs	r2, r5, #1
9002c26c:	9204      	str	r2, [sp, #16]
9002c26e:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
9002c272:	f9b4 7000 	ldrsh.w	r7, [r4]
9002c276:	454b      	cmp	r3, r9
9002c278:	463a      	mov	r2, r7
9002c27a:	d008      	beq.n	9002c28e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
9002c27c:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
9002c280:	eb03 0b09 	add.w	fp, r3, r9
9002c284:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
9002c288:	fb03 1309 	mla	r3, r3, r9, r1
9002c28c:	9305      	str	r3, [sp, #20]
9002c28e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9002c292:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
9002c296:	4498      	add	r8, r3
9002c298:	9b04      	ldr	r3, [sp, #16]
9002c29a:	3b01      	subs	r3, #1
9002c29c:	9304      	str	r3, [sp, #16]
9002c29e:	9b04      	ldr	r3, [sp, #16]
9002c2a0:	3301      	adds	r3, #1
9002c2a2:	d015      	beq.n	9002c2d0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
9002c2a4:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
9002c2a8:	42bb      	cmp	r3, r7
9002c2aa:	d117      	bne.n	9002c2dc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
9002c2ac:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
9002c2b0:	9b04      	ldr	r3, [sp, #16]
9002c2b2:	4548      	cmp	r0, r9
9002c2b4:	f103 33ff 	add.w	r3, r3, #4294967295
9002c2b8:	d17d      	bne.n	9002c3b6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
9002c2ba:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
9002c2be:	4401      	add	r1, r0
9002c2c0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9002c2c4:	4480      	add	r8, r0
9002c2c6:	e7e9      	b.n	9002c29c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
9002c2c8:	461f      	mov	r7, r3
9002c2ca:	e042      	b.n	9002c352 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
9002c2cc:	2000      	movs	r0, #0
9002c2ce:	e002      	b.n	9002c2d6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
9002c2d0:	2900      	cmp	r1, #0
9002c2d2:	d16d      	bne.n	9002c3b0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
9002c2d4:	2001      	movs	r0, #1
9002c2d6:	b00b      	add	sp, #44	@ 0x2c
9002c2d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002c2dc:	b379      	cbz	r1, 9002c33e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
9002c2de:	2f00      	cmp	r7, #0
9002c2e0:	db29      	blt.n	9002c336 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
9002c2e2:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
9002c2e6:	42bb      	cmp	r3, r7
9002c2e8:	dd25      	ble.n	9002c336 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
9002c2ea:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
9002c2ee:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
9002c2f2:	f7ff ff77 	bl	9002c1e4 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
9002c2f6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002c2f8:	fb10 f003 	smulbb	r0, r0, r3
9002c2fc:	b280      	uxth	r0, r0
9002c2fe:	1c41      	adds	r1, r0, #1
9002c300:	eb01 2110 	add.w	r1, r1, r0, lsr #8
9002c304:	1209      	asrs	r1, r1, #8
9002c306:	f011 0fff 	tst.w	r1, #255	@ 0xff
9002c30a:	d014      	beq.n	9002c336 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
9002c30c:	b2c9      	uxtb	r1, r1
9002c30e:	9808      	ldr	r0, [sp, #32]
9002c310:	b2ba      	uxth	r2, r7
9002c312:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
9002c314:	9102      	str	r1, [sp, #8]
9002c316:	2101      	movs	r1, #1
9002c318:	4413      	add	r3, r2
9002c31a:	4402      	add	r2, r0
9002c31c:	9101      	str	r1, [sp, #4]
9002c31e:	fa0f f18b 	sxth.w	r1, fp
9002c322:	f8da 0000 	ldr.w	r0, [sl]
9002c326:	b21b      	sxth	r3, r3
9002c328:	9100      	str	r1, [sp, #0]
9002c32a:	b212      	sxth	r2, r2
9002c32c:	6941      	ldr	r1, [r0, #20]
9002c32e:	4650      	mov	r0, sl
9002c330:	460d      	mov	r5, r1
9002c332:	9905      	ldr	r1, [sp, #20]
9002c334:	47a8      	blx	r5
9002c336:	9b04      	ldr	r3, [sp, #16]
9002c338:	1c7a      	adds	r2, r7, #1
9002c33a:	3301      	adds	r3, #1
9002c33c:	d0ca      	beq.n	9002c2d4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
9002c33e:	f9b4 7000 	ldrsh.w	r7, [r4]
9002c342:	1abb      	subs	r3, r7, r2
9002c344:	2b00      	cmp	r3, #0
9002c346:	dd31      	ble.n	9002c3ac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002c348:	2a00      	cmp	r2, #0
9002c34a:	dabd      	bge.n	9002c2c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
9002c34c:	2f00      	cmp	r7, #0
9002c34e:	dd2d      	ble.n	9002c3ac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002c350:	2200      	movs	r2, #0
9002c352:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
9002c356:	19d1      	adds	r1, r2, r7
9002c358:	4299      	cmp	r1, r3
9002c35a:	db02      	blt.n	9002c362 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
9002c35c:	1a9f      	subs	r7, r3, r2
9002c35e:	2f00      	cmp	r7, #0
9002c360:	dd24      	ble.n	9002c3ac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002c362:	ea4f 1188 	mov.w	r1, r8, lsl #6
9002c366:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
9002c36a:	f7ff ff3b 	bl	9002c1e4 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
9002c36e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002c370:	fb10 f003 	smulbb	r0, r0, r3
9002c374:	b280      	uxth	r0, r0
9002c376:	1c41      	adds	r1, r0, #1
9002c378:	eb01 2110 	add.w	r1, r1, r0, lsr #8
9002c37c:	1209      	asrs	r1, r1, #8
9002c37e:	f011 0fff 	tst.w	r1, #255	@ 0xff
9002c382:	d013      	beq.n	9002c3ac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002c384:	b292      	uxth	r2, r2
9002c386:	9808      	ldr	r0, [sp, #32]
9002c388:	b2c9      	uxtb	r1, r1
9002c38a:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
9002c38c:	b23f      	sxth	r7, r7
9002c38e:	4413      	add	r3, r2
9002c390:	9102      	str	r1, [sp, #8]
9002c392:	4402      	add	r2, r0
9002c394:	fa0f f18b 	sxth.w	r1, fp
9002c398:	f8da 0000 	ldr.w	r0, [sl]
9002c39c:	b21b      	sxth	r3, r3
9002c39e:	9100      	str	r1, [sp, #0]
9002c3a0:	b212      	sxth	r2, r2
9002c3a2:	9701      	str	r7, [sp, #4]
9002c3a4:	9905      	ldr	r1, [sp, #20]
9002c3a6:	6947      	ldr	r7, [r0, #20]
9002c3a8:	4650      	mov	r0, sl
9002c3aa:	47b8      	blx	r7
9002c3ac:	464b      	mov	r3, r9
9002c3ae:	e75e      	b.n	9002c26e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
9002c3b0:	2f00      	cmp	r7, #0
9002c3b2:	da96      	bge.n	9002c2e2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
9002c3b4:	e78e      	b.n	9002c2d4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
9002c3b6:	2900      	cmp	r1, #0
9002c3b8:	d0f8      	beq.n	9002c3ac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002c3ba:	e790      	b.n	9002c2de <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

9002c3bc <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
9002c3bc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
9002c3c0:	461e      	mov	r6, r3
9002c3c2:	4b36      	ldr	r3, [pc, #216]	@ (9002c49c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
9002c3c4:	2500      	movs	r5, #0
9002c3c6:	f100 0814 	add.w	r8, r0, #20
9002c3ca:	4604      	mov	r4, r0
9002c3cc:	4617      	mov	r7, r2
9002c3ce:	e9c0 3100 	strd	r3, r1, [r0]
9002c3d2:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
9002c3d6:	8185      	strh	r5, [r0, #12]
9002c3d8:	8103      	strh	r3, [r0, #8]
9002c3da:	f89d 3020 	ldrb.w	r3, [sp, #32]
9002c3de:	81c5      	strh	r5, [r0, #14]
9002c3e0:	7283      	strb	r3, [r0, #10]
9002c3e2:	8205      	strh	r5, [r0, #16]
9002c3e4:	8245      	strh	r5, [r0, #18]
9002c3e6:	4640      	mov	r0, r8
9002c3e8:	f7ea fb14 	bl	90016a14 <_ZN8touchgfx7OutlineC1Ev>
9002c3ec:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
9002c3f0:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
9002c3f4:	466b      	mov	r3, sp
9002c3f6:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
9002c3fa:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
9002c3fe:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
9002c402:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
9002c406:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
9002c40a:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
9002c40e:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
9002c412:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
9002c416:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
9002c41a:	6830      	ldr	r0, [r6, #0]
9002c41c:	6871      	ldr	r1, [r6, #4]
9002c41e:	8872      	ldrh	r2, [r6, #2]
9002c420:	8835      	ldrh	r5, [r6, #0]
9002c422:	c303      	stmia	r3!, {r0, r1}
9002c424:	887b      	ldrh	r3, [r7, #2]
9002c426:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
9002c42a:	4413      	add	r3, r2
9002c42c:	883a      	ldrh	r2, [r7, #0]
9002c42e:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
9002c432:	442a      	add	r2, r5
9002c434:	81e3      	strh	r3, [r4, #14]
9002c436:	8220      	strh	r0, [r4, #16]
9002c438:	4668      	mov	r0, sp
9002c43a:	81a2      	strh	r2, [r4, #12]
9002c43c:	8261      	strh	r1, [r4, #18]
9002c43e:	4639      	mov	r1, r7
9002c440:	f7ec fcdc 	bl	90018dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002c444:	f104 000c 	add.w	r0, r4, #12
9002c448:	f7ec fc94 	bl	90018d74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002c44c:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
9002c450:	f8bd 2000 	ldrh.w	r2, [sp]
9002c454:	4640      	mov	r0, r8
9002c456:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
9002c45a:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
9002c45e:	f7ea fabd 	bl	900169dc <_ZN8touchgfx7Outline5resetEv>
9002c462:	f9bd 3000 	ldrsh.w	r3, [sp]
9002c466:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
9002c46a:	4620      	mov	r0, r4
9002c46c:	015b      	lsls	r3, r3, #5
9002c46e:	64e3      	str	r3, [r4, #76]	@ 0x4c
9002c470:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
9002c474:	015b      	lsls	r3, r3, #5
9002c476:	6523      	str	r3, [r4, #80]	@ 0x50
9002c478:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9002c47c:	015b      	lsls	r3, r3, #5
9002c47e:	6563      	str	r3, [r4, #84]	@ 0x54
9002c480:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
9002c484:	015b      	lsls	r3, r3, #5
9002c486:	65a3      	str	r3, [r4, #88]	@ 0x58
9002c488:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
9002c48c:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
9002c490:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
9002c494:	b002      	add	sp, #8
9002c496:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002c49a:	bf00      	nop
9002c49c:	90032470 	.word	0x90032470

9002c4a0 <_ZN8touchgfx6Canvas5closeEv>:
9002c4a0:	b538      	push	{r3, r4, r5, lr}
9002c4a2:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
9002c4a6:	4604      	mov	r4, r0
9002c4a8:	b193      	cbz	r3, 9002c4d0 <_ZN8touchgfx6Canvas5closeEv+0x30>
9002c4aa:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
9002c4ae:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
9002c4b2:	4213      	tst	r3, r2
9002c4b4:	d10c      	bne.n	9002c4d0 <_ZN8touchgfx6Canvas5closeEv+0x30>
9002c4b6:	f100 0514 	add.w	r5, r0, #20
9002c4ba:	b123      	cbz	r3, 9002c4c6 <_ZN8touchgfx6Canvas5closeEv+0x26>
9002c4bc:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
9002c4c0:	4628      	mov	r0, r5
9002c4c2:	f7ff fea3 	bl	9002c20c <_ZN8touchgfx10Rasterizer6lineToEii>
9002c4c6:	4628      	mov	r0, r5
9002c4c8:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
9002c4cc:	f7ff fe9e 	bl	9002c20c <_ZN8touchgfx10Rasterizer6lineToEii>
9002c4d0:	2300      	movs	r3, #0
9002c4d2:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
9002c4d6:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
9002c4da:	4298      	cmp	r0, r3
9002c4dc:	bf34      	ite	cc
9002c4de:	2000      	movcc	r0, #0
9002c4e0:	2001      	movcs	r0, #1
9002c4e2:	bd38      	pop	{r3, r4, r5, pc}

9002c4e4 <_ZN8touchgfx6Canvas6renderEh>:
9002c4e4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
9002c4e8:	7a85      	ldrb	r5, [r0, #10]
9002c4ea:	4604      	mov	r4, r0
9002c4ec:	4369      	muls	r1, r5
9002c4ee:	1c4d      	adds	r5, r1, #1
9002c4f0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
9002c4f4:	122d      	asrs	r5, r5, #8
9002c4f6:	f000 8098 	beq.w	9002c62a <_ZN8touchgfx6Canvas6renderEh+0x146>
9002c4fa:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
9002c4fe:	2b00      	cmp	r3, #0
9002c500:	f000 8093 	beq.w	9002c62a <_ZN8touchgfx6Canvas6renderEh+0x146>
9002c504:	f7ff ffcc 	bl	9002c4a0 <_ZN8touchgfx6Canvas5closeEv>
9002c508:	4607      	mov	r7, r0
9002c50a:	2800      	cmp	r0, #0
9002c50c:	d045      	beq.n	9002c59a <_ZN8touchgfx6Canvas6renderEh+0xb6>
9002c50e:	6860      	ldr	r0, [r4, #4]
9002c510:	4e47      	ldr	r6, [pc, #284]	@ (9002c630 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
9002c512:	6803      	ldr	r3, [r0, #0]
9002c514:	6837      	ldr	r7, [r6, #0]
9002c516:	689b      	ldr	r3, [r3, #8]
9002c518:	4798      	blx	r3
9002c51a:	4601      	mov	r1, r0
9002c51c:	4638      	mov	r0, r7
9002c51e:	f7e7 f891 	bl	90013644 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
9002c522:	4607      	mov	r7, r0
9002c524:	f7e6 fc24 	bl	90012d70 <_ZN8touchgfx3HAL3lcdEv>
9002c528:	6803      	ldr	r3, [r0, #0]
9002c52a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9002c52c:	4798      	blx	r3
9002c52e:	4680      	mov	r8, r0
9002c530:	f7e6 fc1e 	bl	90012d70 <_ZN8touchgfx3HAL3lcdEv>
9002c534:	6803      	ldr	r3, [r0, #0]
9002c536:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002c538:	4798      	blx	r3
9002c53a:	280b      	cmp	r0, #11
9002c53c:	d85a      	bhi.n	9002c5f4 <_ZN8touchgfx6Canvas6renderEh+0x110>
9002c53e:	e8df f000 	tbb	[pc, r0]
9002c542:	5b50      	.short	0x5b50
9002c544:	3059066b 	.word	0x3059066b
9002c548:	64646440 	.word	0x64646440
9002c54c:	6464      	.short	0x6464
9002c54e:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
9002c552:	2208      	movs	r2, #8
9002c554:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002c558:	fb91 f2f2 	sdiv	r2, r1, r2
9002c55c:	fb08 2303 	mla	r3, r8, r3, r2
9002c560:	441f      	add	r7, r3
9002c562:	424b      	negs	r3, r1
9002c564:	f001 0107 	and.w	r1, r1, #7
9002c568:	f003 0307 	and.w	r3, r3, #7
9002c56c:	bf58      	it	pl
9002c56e:	4259      	negpl	r1, r3
9002c570:	b2c9      	uxtb	r1, r1
9002c572:	b2ed      	uxtb	r5, r5
9002c574:	463a      	mov	r2, r7
9002c576:	fa0f f388 	sxth.w	r3, r8
9002c57a:	f104 0014 	add.w	r0, r4, #20
9002c57e:	e9cd 1500 	strd	r1, r5, [sp]
9002c582:	6861      	ldr	r1, [r4, #4]
9002c584:	f7ff fe4e 	bl	9002c224 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
9002c588:	4607      	mov	r7, r0
9002c58a:	6860      	ldr	r0, [r4, #4]
9002c58c:	6803      	ldr	r3, [r0, #0]
9002c58e:	691b      	ldr	r3, [r3, #16]
9002c590:	4798      	blx	r3
9002c592:	6830      	ldr	r0, [r6, #0]
9002c594:	6803      	ldr	r3, [r0, #0]
9002c596:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9002c598:	4798      	blx	r3
9002c59a:	4638      	mov	r0, r7
9002c59c:	b002      	add	sp, #8
9002c59e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002c5a2:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
9002c5a6:	2204      	movs	r2, #4
9002c5a8:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002c5ac:	fb91 f2f2 	sdiv	r2, r1, r2
9002c5b0:	fb08 2303 	mla	r3, r8, r3, r2
9002c5b4:	441f      	add	r7, r3
9002c5b6:	424b      	negs	r3, r1
9002c5b8:	f001 0103 	and.w	r1, r1, #3
9002c5bc:	f003 0303 	and.w	r3, r3, #3
9002c5c0:	e7d4      	b.n	9002c56c <_ZN8touchgfx6Canvas6renderEh+0x88>
9002c5c2:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
9002c5c6:	2202      	movs	r2, #2
9002c5c8:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002c5cc:	2900      	cmp	r1, #0
9002c5ce:	fb91 f2f2 	sdiv	r2, r1, r2
9002c5d2:	f001 0101 	and.w	r1, r1, #1
9002c5d6:	fb08 2303 	mla	r3, r8, r3, r2
9002c5da:	bfb8      	it	lt
9002c5dc:	4249      	neglt	r1, r1
9002c5de:	441f      	add	r7, r3
9002c5e0:	e7c6      	b.n	9002c570 <_ZN8touchgfx6Canvas6renderEh+0x8c>
9002c5e2:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002c5e6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002c5ea:	fb08 f303 	mul.w	r3, r8, r3
9002c5ee:	eb03 0342 	add.w	r3, r3, r2, lsl #1
9002c5f2:	441f      	add	r7, r3
9002c5f4:	2100      	movs	r1, #0
9002c5f6:	e7bc      	b.n	9002c572 <_ZN8touchgfx6Canvas6renderEh+0x8e>
9002c5f8:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002c5fc:	2103      	movs	r1, #3
9002c5fe:	fb08 f203 	mul.w	r2, r8, r3
9002c602:	89a3      	ldrh	r3, [r4, #12]
9002c604:	fb13 2301 	smlabb	r3, r3, r1, r2
9002c608:	e7f3      	b.n	9002c5f2 <_ZN8touchgfx6Canvas6renderEh+0x10e>
9002c60a:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002c60e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002c612:	fb08 2303 	mla	r3, r8, r3, r2
9002c616:	e7ec      	b.n	9002c5f2 <_ZN8touchgfx6Canvas6renderEh+0x10e>
9002c618:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002c61c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002c620:	fb08 f303 	mul.w	r3, r8, r3
9002c624:	eb03 0382 	add.w	r3, r3, r2, lsl #2
9002c628:	e7e3      	b.n	9002c5f2 <_ZN8touchgfx6Canvas6renderEh+0x10e>
9002c62a:	2701      	movs	r7, #1
9002c62c:	e7b5      	b.n	9002c59a <_ZN8touchgfx6Canvas6renderEh+0xb6>
9002c62e:	bf00      	nop
9002c630:	24021c0c 	.word	0x24021c0c

9002c634 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
9002c634:	4b06      	ldr	r3, [pc, #24]	@ (9002c650 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
9002c636:	b510      	push	{r4, lr}
9002c638:	781b      	ldrb	r3, [r3, #0]
9002c63a:	2b01      	cmp	r3, #1
9002c63c:	d107      	bne.n	9002c64e <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
9002c63e:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
9002c642:	680b      	ldr	r3, [r1, #0]
9002c644:	6814      	ldr	r4, [r2, #0]
9002c646:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
9002c64a:	6013      	str	r3, [r2, #0]
9002c64c:	600c      	str	r4, [r1, #0]
9002c64e:	bd10      	pop	{r4, pc}
9002c650:	24021c04 	.word	0x24021c04

9002c654 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
9002c654:	b513      	push	{r0, r1, r4, lr}
9002c656:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
9002c65a:	4604      	mov	r4, r0
9002c65c:	e9cd 2100 	strd	r2, r1, [sp]
9002c660:	b9a3      	cbnz	r3, 9002c68c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
9002c662:	466a      	mov	r2, sp
9002c664:	a901      	add	r1, sp, #4
9002c666:	4620      	mov	r0, r4
9002c668:	f7ff ffe4 	bl	9002c634 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
9002c66c:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
9002c66e:	9901      	ldr	r1, [sp, #4]
9002c670:	9a00      	ldr	r2, [sp, #0]
9002c672:	1ac9      	subs	r1, r1, r3
9002c674:	6d23      	ldr	r3, [r4, #80]	@ 0x50
9002c676:	1ad2      	subs	r2, r2, r3
9002c678:	9101      	str	r1, [sp, #4]
9002c67a:	2a00      	cmp	r2, #0
9002c67c:	9200      	str	r2, [sp, #0]
9002c67e:	da0b      	bge.n	9002c698 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
9002c680:	2301      	movs	r3, #1
9002c682:	2900      	cmp	r1, #0
9002c684:	da0e      	bge.n	9002c6a4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
9002c686:	f043 0304 	orr.w	r3, r3, #4
9002c68a:	e013      	b.n	9002c6b4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
9002c68c:	f7ff ff08 	bl	9002c4a0 <_ZN8touchgfx6Canvas5closeEv>
9002c690:	2800      	cmp	r0, #0
9002c692:	d1e6      	bne.n	9002c662 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
9002c694:	b002      	add	sp, #8
9002c696:	bd10      	pop	{r4, pc}
9002c698:	6da3      	ldr	r3, [r4, #88]	@ 0x58
9002c69a:	429a      	cmp	r2, r3
9002c69c:	bfac      	ite	ge
9002c69e:	2302      	movge	r3, #2
9002c6a0:	2300      	movlt	r3, #0
9002c6a2:	e7ee      	b.n	9002c682 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
9002c6a4:	6d60      	ldr	r0, [r4, #84]	@ 0x54
9002c6a6:	4281      	cmp	r1, r0
9002c6a8:	bfac      	ite	ge
9002c6aa:	2008      	movge	r0, #8
9002c6ac:	2000      	movlt	r0, #0
9002c6ae:	4318      	orrs	r0, r3
9002c6b0:	b2c3      	uxtb	r3, r0
9002c6b2:	b158      	cbz	r0, 9002c6cc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
9002c6b4:	2200      	movs	r2, #0
9002c6b6:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
9002c6ba:	9901      	ldr	r1, [sp, #4]
9002c6bc:	9a00      	ldr	r2, [sp, #0]
9002c6be:	66e1      	str	r1, [r4, #108]	@ 0x6c
9002c6c0:	6722      	str	r2, [r4, #112]	@ 0x70
9002c6c2:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
9002c6c6:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
9002c6ca:	e7e3      	b.n	9002c694 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
9002c6cc:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
9002c6d0:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
9002c6d4:	4298      	cmp	r0, r3
9002c6d6:	d803      	bhi.n	9002c6e0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
9002c6d8:	f104 0014 	add.w	r0, r4, #20
9002c6dc:	f7ea fe6e 	bl	900173bc <_ZN8touchgfx7Outline6moveToEii>
9002c6e0:	2301      	movs	r3, #1
9002c6e2:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
9002c6e6:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
9002c6ea:	2300      	movs	r3, #0
9002c6ec:	e7e5      	b.n	9002c6ba <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

9002c6ee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
9002c6ee:	b573      	push	{r0, r1, r4, r5, r6, lr}
9002c6f0:	ab02      	add	r3, sp, #8
9002c6f2:	4604      	mov	r4, r0
9002c6f4:	9101      	str	r1, [sp, #4]
9002c6f6:	a901      	add	r1, sp, #4
9002c6f8:	f843 2d08 	str.w	r2, [r3, #-8]!
9002c6fc:	461a      	mov	r2, r3
9002c6fe:	f7ff ff99 	bl	9002c634 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
9002c702:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
9002c704:	9901      	ldr	r1, [sp, #4]
9002c706:	9a00      	ldr	r2, [sp, #0]
9002c708:	1ac9      	subs	r1, r1, r3
9002c70a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
9002c70c:	1ad2      	subs	r2, r2, r3
9002c70e:	9101      	str	r1, [sp, #4]
9002c710:	2a00      	cmp	r2, #0
9002c712:	9200      	str	r2, [sp, #0]
9002c714:	db1c      	blt.n	9002c750 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
9002c716:	6da3      	ldr	r3, [r4, #88]	@ 0x58
9002c718:	429a      	cmp	r2, r3
9002c71a:	bfac      	ite	ge
9002c71c:	2002      	movge	r0, #2
9002c71e:	2000      	movlt	r0, #0
9002c720:	2900      	cmp	r1, #0
9002c722:	db17      	blt.n	9002c754 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
9002c724:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9002c726:	4299      	cmp	r1, r3
9002c728:	bfac      	ite	ge
9002c72a:	2308      	movge	r3, #8
9002c72c:	2300      	movlt	r3, #0
9002c72e:	4303      	orrs	r3, r0
9002c730:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
9002c734:	b2dd      	uxtb	r5, r3
9002c736:	b978      	cbnz	r0, 9002c758 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
9002c738:	f104 0014 	add.w	r0, r4, #20
9002c73c:	f7ff fd66 	bl	9002c20c <_ZN8touchgfx10Rasterizer6lineToEii>
9002c740:	9b01      	ldr	r3, [sp, #4]
9002c742:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
9002c746:	6623      	str	r3, [r4, #96]	@ 0x60
9002c748:	9b00      	ldr	r3, [sp, #0]
9002c74a:	6663      	str	r3, [r4, #100]	@ 0x64
9002c74c:	b002      	add	sp, #8
9002c74e:	bd70      	pop	{r4, r5, r6, pc}
9002c750:	2001      	movs	r0, #1
9002c752:	e7e5      	b.n	9002c720 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
9002c754:	2304      	movs	r3, #4
9002c756:	e7ea      	b.n	9002c72e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
9002c758:	b113      	cbz	r3, 9002c760 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
9002c75a:	ea10 0305 	ands.w	r3, r0, r5
9002c75e:	d11c      	bne.n	9002c79a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
9002c760:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
9002c764:	f104 0614 	add.w	r6, r4, #20
9002c768:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
9002c76c:	b98b      	cbnz	r3, 9002c792 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
9002c76e:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
9002c772:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
9002c776:	4298      	cmp	r0, r3
9002c778:	d802      	bhi.n	9002c780 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
9002c77a:	4630      	mov	r0, r6
9002c77c:	f7ea fe1e 	bl	900173bc <_ZN8touchgfx7Outline6moveToEii>
9002c780:	2301      	movs	r3, #1
9002c782:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
9002c786:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
9002c78a:	4630      	mov	r0, r6
9002c78c:	e9dd 2100 	ldrd	r2, r1, [sp]
9002c790:	e7d4      	b.n	9002c73c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
9002c792:	4630      	mov	r0, r6
9002c794:	f7ff fd3a 	bl	9002c20c <_ZN8touchgfx10Rasterizer6lineToEii>
9002c798:	e7f7      	b.n	9002c78a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
9002c79a:	461d      	mov	r5, r3
9002c79c:	e7d0      	b.n	9002c740 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

9002c7a0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
9002c7a0:	b538      	push	{r3, r4, r5, lr}
9002c7a2:	ed2d 8b10 	vpush	{d8-d15}
9002c7a6:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
9002c7aa:	4605      	mov	r5, r0
9002c7ac:	eeb0 ca40 	vmov.f32	s24, s0
9002c7b0:	460c      	mov	r4, r1
9002c7b2:	eef0 ca60 	vmov.f32	s25, s1
9002c7b6:	ed9f ba57 	vldr	s22, [pc, #348]	@ 9002c914 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
9002c7ba:	eeb0 da41 	vmov.f32	s26, s2
9002c7be:	eef0 da61 	vmov.f32	s27, s3
9002c7c2:	eeb0 ea42 	vmov.f32	s28, s4
9002c7c6:	eef0 ea62 	vmov.f32	s29, s5
9002c7ca:	eef0 aa6b 	vmov.f32	s21, s23
9002c7ce:	2c08      	cmp	r4, #8
9002c7d0:	d86e      	bhi.n	9002c8b0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
9002c7d2:	ee7e 6a4c 	vsub.f32	s13, s28, s24
9002c7d6:	ee7d 7aee 	vsub.f32	s15, s27, s29
9002c7da:	ee3d 6a4e 	vsub.f32	s12, s26, s28
9002c7de:	ee3e 7aec 	vsub.f32	s14, s29, s25
9002c7e2:	ee66 7ae7 	vnmul.f32	s15, s13, s15
9002c7e6:	ee3c fa0d 	vadd.f32	s30, s24, s26
9002c7ea:	ee7c faad 	vadd.f32	s31, s25, s27
9002c7ee:	eee6 7a07 	vfma.f32	s15, s12, s14
9002c7f2:	ee7d 9a0e 	vadd.f32	s19, s26, s28
9002c7f6:	ee3d aaae 	vadd.f32	s20, s27, s29
9002c7fa:	ee2f fa2b 	vmul.f32	s30, s30, s23
9002c7fe:	ee6f faab 	vmul.f32	s31, s31, s23
9002c802:	ee69 9aab 	vmul.f32	s19, s19, s23
9002c806:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9002c80a:	ee2a aa2b 	vmul.f32	s20, s20, s23
9002c80e:	ee7f 8a29 	vadd.f32	s17, s30, s19
9002c812:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002c816:	ee3f 9a8a 	vadd.f32	s18, s31, s20
9002c81a:	ee68 8aab 	vmul.f32	s17, s17, s23
9002c81e:	bf48      	it	mi
9002c820:	eef1 7a67 	vnegmi.f32	s15, s15
9002c824:	ee29 9a2b 	vmul.f32	s18, s18, s23
9002c828:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
9002c82c:	eef4 7acb 	vcmpe.f32	s15, s22
9002c830:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002c834:	dd3f      	ble.n	9002c8b6 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
9002c836:	ee27 7a07 	vmul.f32	s14, s14, s14
9002c83a:	ee67 7aa7 	vmul.f32	s15, s15, s15
9002c83e:	eea6 7aa6 	vfma.f32	s14, s13, s13
9002c842:	ee27 7a06 	vmul.f32	s14, s14, s12
9002c846:	eef4 7ac7 	vcmpe.f32	s15, s14
9002c84a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002c84e:	d847      	bhi.n	9002c8e0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
9002c850:	ee7e 0a4d 	vsub.f32	s1, s28, s26
9002c854:	ee3e 0aed 	vsub.f32	s0, s29, s27
9002c858:	f000 fa57 	bl	9002cd0a <atan2f>
9002c85c:	eeb0 8a40 	vmov.f32	s16, s0
9002c860:	ee7d 0a4c 	vsub.f32	s1, s26, s24
9002c864:	ee3d 0aec 	vsub.f32	s0, s27, s25
9002c868:	f000 fa4f 	bl	9002cd0a <atan2f>
9002c86c:	ee38 0a40 	vsub.f32	s0, s16, s0
9002c870:	eddf 7a29 	vldr	s15, [pc, #164]	@ 9002c918 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
9002c874:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
9002c878:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002c87c:	bf48      	it	mi
9002c87e:	eeb1 0a40 	vnegmi.f32	s0, s0
9002c882:	eeb4 0ae7 	vcmpe.f32	s0, s15
9002c886:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002c88a:	bfa4      	itt	ge
9002c88c:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 9002c91c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
9002c890:	ee37 0ac0 	vsubge.f32	s0, s15, s0
9002c894:	eddf 7a22 	vldr	s15, [pc, #136]	@ 9002c920 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
9002c898:	eeb4 0ae7 	vcmpe.f32	s0, s15
9002c89c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002c8a0:	d51e      	bpl.n	9002c8e0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
9002c8a2:	eef0 0a49 	vmov.f32	s1, s18
9002c8a6:	4628      	mov	r0, r5
9002c8a8:	eeb0 0a68 	vmov.f32	s0, s17
9002c8ac:	f7e8 f8c4 	bl	90014a38 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
9002c8b0:	ecbd 8b10 	vpop	{d8-d15}
9002c8b4:	bd38      	pop	{r3, r4, r5, pc}
9002c8b6:	ee7c 7a0e 	vadd.f32	s15, s24, s28
9002c8ba:	eeb0 7a68 	vmov.f32	s14, s17
9002c8be:	eef0 6a49 	vmov.f32	s13, s18
9002c8c2:	eea7 7aea 	vfms.f32	s14, s15, s21
9002c8c6:	ee7c 7aae 	vadd.f32	s15, s25, s29
9002c8ca:	eee7 6aea 	vfms.f32	s13, s15, s21
9002c8ce:	ee66 7aa6 	vmul.f32	s15, s13, s13
9002c8d2:	eee7 7a07 	vfma.f32	s15, s14, s14
9002c8d6:	eef4 7ac6 	vcmpe.f32	s15, s12
9002c8da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002c8de:	d9e0      	bls.n	9002c8a2 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
9002c8e0:	3401      	adds	r4, #1
9002c8e2:	eef0 0a6c 	vmov.f32	s1, s25
9002c8e6:	eeb0 0a4c 	vmov.f32	s0, s24
9002c8ea:	4628      	mov	r0, r5
9002c8ec:	4621      	mov	r1, r4
9002c8ee:	eef0 2a49 	vmov.f32	s5, s18
9002c8f2:	eeb0 2a68 	vmov.f32	s4, s17
9002c8f6:	eef0 1a6f 	vmov.f32	s3, s31
9002c8fa:	eeb0 1a4f 	vmov.f32	s2, s30
9002c8fe:	f7ff ff4f 	bl	9002c7a0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
9002c902:	eef0 da4a 	vmov.f32	s27, s20
9002c906:	eeb0 da69 	vmov.f32	s26, s19
9002c90a:	eef0 ca49 	vmov.f32	s25, s18
9002c90e:	eeb0 ca68 	vmov.f32	s24, s17
9002c912:	e75c      	b.n	9002c7ce <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
9002c914:	2edbe6ff 	.word	0x2edbe6ff
9002c918:	40490fdb 	.word	0x40490fdb
9002c91c:	40c90fdb 	.word	0x40c90fdb
9002c920:	3dcccccd 	.word	0x3dcccccd

9002c924 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
9002c924:	b530      	push	{r4, r5, lr}
9002c926:	ed2d 8b10 	vpush	{d8-d15}
9002c92a:	eef0 8a40 	vmov.f32	s17, s0
9002c92e:	b085      	sub	sp, #20
9002c930:	eef0 9a60 	vmov.f32	s19, s1
9002c934:	4604      	mov	r4, r0
9002c936:	eef0 fa41 	vmov.f32	s31, s2
9002c93a:	460d      	mov	r5, r1
9002c93c:	eeb0 fa61 	vmov.f32	s30, s3
9002c940:	eef0 ba42 	vmov.f32	s23, s4
9002c944:	eeb0 ca62 	vmov.f32	s24, s5
9002c948:	eef0 aa43 	vmov.f32	s21, s6
9002c94c:	eeb0 ba63 	vmov.f32	s22, s7
9002c950:	2d08      	cmp	r5, #8
9002c952:	f200 8113 	bhi.w	9002cb7c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x258>
9002c956:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
9002c95a:	ee3b 6aaa 	vadd.f32	s12, s23, s21
9002c95e:	ee7f 6aab 	vadd.f32	s13, s31, s23
9002c962:	ee38 daaf 	vadd.f32	s26, s17, s31
9002c966:	ee26 6a27 	vmul.f32	s12, s12, s15
9002c96a:	ee7c ca0b 	vadd.f32	s25, s24, s22
9002c96e:	ee2d da27 	vmul.f32	s26, s26, s15
9002c972:	ed8d 6a01 	vstr	s12, [sp, #4]
9002c976:	eea6 6aa7 	vfma.f32	s12, s13, s15
9002c97a:	ee6c caa7 	vmul.f32	s25, s25, s15
9002c97e:	eeb0 ea4d 	vmov.f32	s28, s26
9002c982:	ee79 da8f 	vadd.f32	s27, s19, s30
9002c986:	ee3f 7a0c 	vadd.f32	s14, s30, s24
9002c98a:	eea6 eaa7 	vfma.f32	s28, s13, s15
9002c98e:	ee66 6a27 	vmul.f32	s13, s12, s15
9002c992:	ee6d daa7 	vmul.f32	s27, s27, s15
9002c996:	edcd 6a03 	vstr	s13, [sp, #12]
9002c99a:	eef0 6a6c 	vmov.f32	s13, s25
9002c99e:	eef0 ea6d 	vmov.f32	s29, s27
9002c9a2:	ee2e ea27 	vmul.f32	s28, s28, s15
9002c9a6:	eee7 6a27 	vfma.f32	s13, s14, s15
9002c9aa:	eee7 ea27 	vfma.f32	s29, s14, s15
9002c9ae:	ee26 7aa7 	vmul.f32	s14, s13, s15
9002c9b2:	ee6e eaa7 	vmul.f32	s29, s29, s15
9002c9b6:	eef0 6a67 	vmov.f32	s13, s15
9002c9ba:	ed8d 7a02 	vstr	s14, [sp, #8]
9002c9be:	ed9d 7a03 	vldr	s14, [sp, #12]
9002c9c2:	ee3e 9a07 	vadd.f32	s18, s28, s14
9002c9c6:	ed9d 7a02 	vldr	s14, [sp, #8]
9002c9ca:	ee3e aa87 	vadd.f32	s20, s29, s14
9002c9ce:	ee29 9a27 	vmul.f32	s18, s18, s15
9002c9d2:	ee2a aa27 	vmul.f32	s20, s20, s15
9002c9d6:	2d00      	cmp	r5, #0
9002c9d8:	f000 810b 	beq.w	9002cbf2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002c9dc:	ee7a 5ae8 	vsub.f32	s11, s21, s17
9002c9e0:	eddf 4a95 	vldr	s9, [pc, #596]	@ 9002cc38 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x314>
9002c9e4:	ee3f 7a4b 	vsub.f32	s14, s30, s22
9002c9e8:	ee7b 7a69 	vsub.f32	s15, s22, s19
9002c9ec:	ee3f 6aea 	vsub.f32	s12, s31, s21
9002c9f0:	ee25 7ac7 	vnmul.f32	s14, s11, s14
9002c9f4:	ee3b 5aea 	vsub.f32	s10, s23, s21
9002c9f8:	eea6 7a27 	vfma.f32	s14, s12, s15
9002c9fc:	ee3c 6a4b 	vsub.f32	s12, s24, s22
9002ca00:	ee25 6ac6 	vnmul.f32	s12, s11, s12
9002ca04:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9002ca08:	eea5 6a27 	vfma.f32	s12, s10, s15
9002ca0c:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
9002ca10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ca14:	bf48      	it	mi
9002ca16:	eeb1 7a47 	vnegmi.f32	s14, s14
9002ca1a:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
9002ca1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ca22:	eeb4 7ae4 	vcmpe.f32	s14, s9
9002ca26:	bf48      	it	mi
9002ca28:	eeb1 6a46 	vnegmi.f32	s12, s12
9002ca2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ca30:	f340 80a8 	ble.w	9002cb84 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x260>
9002ca34:	eeb4 6ae4 	vcmpe.f32	s12, s9
9002ca38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ca3c:	dd5a      	ble.n	9002caf4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d0>
9002ca3e:	ee65 5aa5 	vmul.f32	s11, s11, s11
9002ca42:	ee37 7a06 	vadd.f32	s14, s14, s12
9002ca46:	eee7 5aa7 	vfma.f32	s11, s15, s15
9002ca4a:	ee27 7a07 	vmul.f32	s14, s14, s14
9002ca4e:	ee65 7a85 	vmul.f32	s15, s11, s10
9002ca52:	eeb4 7ae7 	vcmpe.f32	s14, s15
9002ca56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ca5a:	f200 80ca 	bhi.w	9002cbf2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002ca5e:	ee7b 0aef 	vsub.f32	s1, s23, s31
9002ca62:	ee3c 0a4f 	vsub.f32	s0, s24, s30
9002ca66:	f000 f950 	bl	9002cd0a <atan2f>
9002ca6a:	eeb0 8a40 	vmov.f32	s16, s0
9002ca6e:	ee7f 0ae8 	vsub.f32	s1, s31, s17
9002ca72:	ee3f 0a69 	vsub.f32	s0, s30, s19
9002ca76:	f000 f948 	bl	9002cd0a <atan2f>
9002ca7a:	ee38 fa40 	vsub.f32	s30, s16, s0
9002ca7e:	ee7a 0aeb 	vsub.f32	s1, s21, s23
9002ca82:	ee3b 0a4c 	vsub.f32	s0, s22, s24
9002ca86:	eeb5 fac0 	vcmpe.f32	s30, #0.0
9002ca8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ca8e:	bf48      	it	mi
9002ca90:	eeb1 fa4f 	vnegmi.f32	s30, s30
9002ca94:	f000 f939 	bl	9002cd0a <atan2f>
9002ca98:	ee30 0a48 	vsub.f32	s0, s0, s16
9002ca9c:	eddf 7a67 	vldr	s15, [pc, #412]	@ 9002cc3c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
9002caa0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
9002caa4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002caa8:	eeb4 fae7 	vcmpe.f32	s30, s15
9002caac:	eddf 7a63 	vldr	s15, [pc, #396]	@ 9002cc3c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
9002cab0:	bf48      	it	mi
9002cab2:	eeb1 0a40 	vnegmi.f32	s0, s0
9002cab6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002caba:	eeb4 0ae7 	vcmpe.f32	s0, s15
9002cabe:	eddf 7a60 	vldr	s15, [pc, #384]	@ 9002cc40 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
9002cac2:	bfa4      	itt	ge
9002cac4:	ed9f 7a5f 	vldrge	s14, [pc, #380]	@ 9002cc44 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
9002cac8:	ee37 fa4f 	vsubge.f32	s30, s14, s30
9002cacc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002cad0:	bfa4      	itt	ge
9002cad2:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 9002cc44 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
9002cad6:	ee37 0a40 	vsubge.f32	s0, s14, s0
9002cada:	ee3f 0a00 	vadd.f32	s0, s30, s0
9002cade:	eeb4 0ae7 	vcmpe.f32	s0, s15
9002cae2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002cae6:	f140 8084 	bpl.w	9002cbf2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002caea:	eef0 0a4a 	vmov.f32	s1, s20
9002caee:	eeb0 0a49 	vmov.f32	s0, s18
9002caf2:	e040      	b.n	9002cb76 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x252>
9002caf4:	ee67 7aa7 	vmul.f32	s15, s15, s15
9002caf8:	ee27 7a07 	vmul.f32	s14, s14, s14
9002cafc:	eee5 7aa5 	vfma.f32	s15, s11, s11
9002cb00:	ee67 7a85 	vmul.f32	s15, s15, s10
9002cb04:	eeb4 7ae7 	vcmpe.f32	s14, s15
9002cb08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002cb0c:	d871      	bhi.n	9002cbf2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002cb0e:	ee7b 0aef 	vsub.f32	s1, s23, s31
9002cb12:	ee3c 0a4f 	vsub.f32	s0, s24, s30
9002cb16:	f000 f8f8 	bl	9002cd0a <atan2f>
9002cb1a:	ee7f 0ae8 	vsub.f32	s1, s31, s17
9002cb1e:	eeb0 8a40 	vmov.f32	s16, s0
9002cb22:	ee3f 0a69 	vsub.f32	s0, s30, s19
9002cb26:	f000 f8f0 	bl	9002cd0a <atan2f>
9002cb2a:	ee38 0a40 	vsub.f32	s0, s16, s0
9002cb2e:	eddf 7a43 	vldr	s15, [pc, #268]	@ 9002cc3c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
9002cb32:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
9002cb36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002cb3a:	bf48      	it	mi
9002cb3c:	eeb1 0a40 	vnegmi.f32	s0, s0
9002cb40:	eeb4 0ae7 	vcmpe.f32	s0, s15
9002cb44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002cb48:	bfa4      	itt	ge
9002cb4a:	eddf 7a3e 	vldrge	s15, [pc, #248]	@ 9002cc44 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
9002cb4e:	ee37 0ac0 	vsubge.f32	s0, s15, s0
9002cb52:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 9002cc40 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
9002cb56:	eeb4 0ae7 	vcmpe.f32	s0, s15
9002cb5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002cb5e:	d548      	bpl.n	9002cbf2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002cb60:	eef0 0a4f 	vmov.f32	s1, s30
9002cb64:	4620      	mov	r0, r4
9002cb66:	eeb0 0a6f 	vmov.f32	s0, s31
9002cb6a:	f7e7 ff65 	bl	90014a38 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
9002cb6e:	eef0 0a4c 	vmov.f32	s1, s24
9002cb72:	eeb0 0a6b 	vmov.f32	s0, s23
9002cb76:	4620      	mov	r0, r4
9002cb78:	f7e7 ff5e 	bl	90014a38 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
9002cb7c:	b005      	add	sp, #20
9002cb7e:	ecbd 8b10 	vpop	{d8-d15}
9002cb82:	bd30      	pop	{r4, r5, pc}
9002cb84:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 9002cc38 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x314>
9002cb88:	eeb4 6ac7 	vcmpe.f32	s12, s14
9002cb8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002cb90:	dd19      	ble.n	9002cbc6 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a2>
9002cb92:	ee67 7aa7 	vmul.f32	s15, s15, s15
9002cb96:	ee26 7a06 	vmul.f32	s14, s12, s12
9002cb9a:	eee5 7aa5 	vfma.f32	s15, s11, s11
9002cb9e:	ee67 7a85 	vmul.f32	s15, s15, s10
9002cba2:	eeb4 7ae7 	vcmpe.f32	s14, s15
9002cba6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002cbaa:	d822      	bhi.n	9002cbf2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002cbac:	ee7a 0aeb 	vsub.f32	s1, s21, s23
9002cbb0:	ee3b 0a4c 	vsub.f32	s0, s22, s24
9002cbb4:	f000 f8a9 	bl	9002cd0a <atan2f>
9002cbb8:	ee7b 0aef 	vsub.f32	s1, s23, s31
9002cbbc:	eeb0 8a40 	vmov.f32	s16, s0
9002cbc0:	ee3c 0a4f 	vsub.f32	s0, s24, s30
9002cbc4:	e7af      	b.n	9002cb26 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x202>
9002cbc6:	ee78 7aaa 	vadd.f32	s15, s17, s21
9002cbca:	eeb0 7a49 	vmov.f32	s14, s18
9002cbce:	eeb0 6a4a 	vmov.f32	s12, s20
9002cbd2:	eea7 7ae6 	vfms.f32	s14, s15, s13
9002cbd6:	ee79 7a8b 	vadd.f32	s15, s19, s22
9002cbda:	eea7 6ae6 	vfms.f32	s12, s15, s13
9002cbde:	ee66 7a06 	vmul.f32	s15, s12, s12
9002cbe2:	eee7 7a07 	vfma.f32	s15, s14, s14
9002cbe6:	eef4 7ac5 	vcmpe.f32	s15, s10
9002cbea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002cbee:	f67f af7c 	bls.w	9002caea <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1c6>
9002cbf2:	3501      	adds	r5, #1
9002cbf4:	eef0 0a69 	vmov.f32	s1, s19
9002cbf8:	eeb0 0a68 	vmov.f32	s0, s17
9002cbfc:	4620      	mov	r0, r4
9002cbfe:	4629      	mov	r1, r5
9002cc00:	eef0 3a4a 	vmov.f32	s7, s20
9002cc04:	eeb0 3a49 	vmov.f32	s6, s18
9002cc08:	eef0 2a6e 	vmov.f32	s5, s29
9002cc0c:	eeb0 2a4e 	vmov.f32	s4, s28
9002cc10:	eef0 1a6d 	vmov.f32	s3, s27
9002cc14:	eeb0 1a4d 	vmov.f32	s2, s26
9002cc18:	f7ff fe84 	bl	9002c924 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
9002cc1c:	eeb0 ca6c 	vmov.f32	s24, s25
9002cc20:	eddd ba01 	vldr	s23, [sp, #4]
9002cc24:	eef0 9a4a 	vmov.f32	s19, s20
9002cc28:	ed9d fa02 	vldr	s30, [sp, #8]
9002cc2c:	eef0 8a49 	vmov.f32	s17, s18
9002cc30:	eddd fa03 	vldr	s31, [sp, #12]
9002cc34:	e68c      	b.n	9002c950 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
9002cc36:	bf00      	nop
9002cc38:	2edbe6ff 	.word	0x2edbe6ff
9002cc3c:	40490fdb 	.word	0x40490fdb
9002cc40:	3dcccccd 	.word	0x3dcccccd
9002cc44:	40c90fdb 	.word	0x40c90fdb

9002cc48 <_ZN8touchgfx6CanvasD1Ev>:
9002cc48:	4b04      	ldr	r3, [pc, #16]	@ (9002cc5c <_ZN8touchgfx6CanvasD1Ev+0x14>)
9002cc4a:	b510      	push	{r4, lr}
9002cc4c:	4604      	mov	r4, r0
9002cc4e:	f840 3b14 	str.w	r3, [r0], #20
9002cc52:	f7e9 febb 	bl	900169cc <_ZN8touchgfx7OutlineD1Ev>
9002cc56:	4620      	mov	r0, r4
9002cc58:	bd10      	pop	{r4, pc}
9002cc5a:	bf00      	nop
9002cc5c:	90032470 	.word	0x90032470

9002cc60 <_ZN8touchgfx6CanvasD0Ev>:
9002cc60:	b510      	push	{r4, lr}
9002cc62:	4604      	mov	r4, r0
9002cc64:	f7ff fff0 	bl	9002cc48 <_ZN8touchgfx6CanvasD1Ev>
9002cc68:	2174      	movs	r1, #116	@ 0x74
9002cc6a:	4620      	mov	r0, r4
9002cc6c:	f000 f826 	bl	9002ccbc <_ZdlPvj>
9002cc70:	4620      	mov	r0, r4
9002cc72:	bd10      	pop	{r4, pc}

9002cc74 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
9002cc74:	790b      	ldrb	r3, [r1, #4]
9002cc76:	2b00      	cmp	r3, #0
9002cc78:	bf0c      	ite	eq
9002cc7a:	2301      	moveq	r3, #1
9002cc7c:	2300      	movne	r3, #0
9002cc7e:	b570      	push	{r4, r5, r6, lr}
9002cc80:	4604      	mov	r4, r0
9002cc82:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
9002cc86:	460e      	mov	r6, r1
9002cc88:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
9002cc8c:	d109      	bne.n	9002cca2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
9002cc8e:	b14d      	cbz	r5, 9002cca4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
9002cc90:	7933      	ldrb	r3, [r6, #4]
9002cc92:	2b01      	cmp	r3, #1
9002cc94:	d10c      	bne.n	9002ccb0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
9002cc96:	6823      	ldr	r3, [r4, #0]
9002cc98:	4620      	mov	r0, r4
9002cc9a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
9002cc9c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9002cca0:	4718      	bx	r3
9002cca2:	b12d      	cbz	r5, 9002ccb0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
9002cca4:	6823      	ldr	r3, [r4, #0]
9002cca6:	4620      	mov	r0, r4
9002cca8:	695b      	ldr	r3, [r3, #20]
9002ccaa:	4798      	blx	r3
9002ccac:	2d00      	cmp	r5, #0
9002ccae:	d1ef      	bne.n	9002cc90 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
9002ccb0:	bd70      	pop	{r4, r5, r6, pc}

9002ccb2 <__aeabi_atexit>:
9002ccb2:	460b      	mov	r3, r1
9002ccb4:	4601      	mov	r1, r0
9002ccb6:	4618      	mov	r0, r3
9002ccb8:	f000 bc58 	b.w	9002d56c <__cxa_atexit>

9002ccbc <_ZdlPvj>:
9002ccbc:	f000 b812 	b.w	9002cce4 <_ZdlPv>

9002ccc0 <__cxa_guard_acquire>:
9002ccc0:	6802      	ldr	r2, [r0, #0]
9002ccc2:	07d2      	lsls	r2, r2, #31
9002ccc4:	4603      	mov	r3, r0
9002ccc6:	d405      	bmi.n	9002ccd4 <__cxa_guard_acquire+0x14>
9002ccc8:	7842      	ldrb	r2, [r0, #1]
9002ccca:	b102      	cbz	r2, 9002ccce <__cxa_guard_acquire+0xe>
9002cccc:	deff      	udf	#255	@ 0xff
9002ccce:	2001      	movs	r0, #1
9002ccd0:	7058      	strb	r0, [r3, #1]
9002ccd2:	4770      	bx	lr
9002ccd4:	2000      	movs	r0, #0
9002ccd6:	4770      	bx	lr

9002ccd8 <__cxa_guard_release>:
9002ccd8:	2301      	movs	r3, #1
9002ccda:	6003      	str	r3, [r0, #0]
9002ccdc:	4770      	bx	lr

9002ccde <__cxa_pure_virtual>:
9002ccde:	b508      	push	{r3, lr}
9002cce0:	f000 f80e 	bl	9002cd00 <_ZSt9terminatev>

9002cce4 <_ZdlPv>:
9002cce4:	f000 bb8c 	b.w	9002d400 <free>

9002cce8 <_ZN10__cxxabiv111__terminateEPFvvE>:
9002cce8:	b508      	push	{r3, lr}
9002ccea:	4780      	blx	r0
9002ccec:	f000 fb55 	bl	9002d39a <abort>

9002ccf0 <_ZSt13get_terminatev>:
9002ccf0:	4b02      	ldr	r3, [pc, #8]	@ (9002ccfc <_ZSt13get_terminatev+0xc>)
9002ccf2:	6818      	ldr	r0, [r3, #0]
9002ccf4:	f3bf 8f5b 	dmb	ish
9002ccf8:	4770      	bx	lr
9002ccfa:	bf00      	nop
9002ccfc:	24000104 	.word	0x24000104

9002cd00 <_ZSt9terminatev>:
9002cd00:	b508      	push	{r3, lr}
9002cd02:	f7ff fff5 	bl	9002ccf0 <_ZSt13get_terminatev>
9002cd06:	f7ff ffef 	bl	9002cce8 <_ZN10__cxxabiv111__terminateEPFvvE>

9002cd0a <atan2f>:
9002cd0a:	f000 b9cd 	b.w	9002d0a8 <__ieee754_atan2f>
	...

9002cd10 <sqrtf>:
9002cd10:	b508      	push	{r3, lr}
9002cd12:	ed2d 8b02 	vpush	{d8}
9002cd16:	eeb0 8a40 	vmov.f32	s16, s0
9002cd1a:	f000 f9c2 	bl	9002d0a2 <__ieee754_sqrtf>
9002cd1e:	eeb4 8a48 	vcmp.f32	s16, s16
9002cd22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002cd26:	d60c      	bvs.n	9002cd42 <sqrtf+0x32>
9002cd28:	eddf 8a07 	vldr	s17, [pc, #28]	@ 9002cd48 <sqrtf+0x38>
9002cd2c:	eeb4 8ae8 	vcmpe.f32	s16, s17
9002cd30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002cd34:	d505      	bpl.n	9002cd42 <sqrtf+0x32>
9002cd36:	f000 ff0d 	bl	9002db54 <__errno>
9002cd3a:	ee88 0aa8 	vdiv.f32	s0, s17, s17
9002cd3e:	2321      	movs	r3, #33	@ 0x21
9002cd40:	6003      	str	r3, [r0, #0]
9002cd42:	ecbd 8b02 	vpop	{d8}
9002cd46:	bd08      	pop	{r3, pc}
9002cd48:	00000000 	.word	0x00000000

9002cd4c <sinf_poly>:
9002cd4c:	07cb      	lsls	r3, r1, #31
9002cd4e:	d412      	bmi.n	9002cd76 <sinf_poly+0x2a>
9002cd50:	ee21 5b00 	vmul.f64	d5, d1, d0
9002cd54:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
9002cd58:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
9002cd5c:	eea6 7b01 	vfma.f64	d7, d6, d1
9002cd60:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
9002cd64:	ee21 1b05 	vmul.f64	d1, d1, d5
9002cd68:	eea6 0b05 	vfma.f64	d0, d6, d5
9002cd6c:	eea7 0b01 	vfma.f64	d0, d7, d1
9002cd70:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
9002cd74:	4770      	bx	lr
9002cd76:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
9002cd7a:	ee21 5b01 	vmul.f64	d5, d1, d1
9002cd7e:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
9002cd82:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
9002cd86:	eea1 7b06 	vfma.f64	d7, d1, d6
9002cd8a:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
9002cd8e:	eea1 0b06 	vfma.f64	d0, d1, d6
9002cd92:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
9002cd96:	ee21 1b05 	vmul.f64	d1, d1, d5
9002cd9a:	eea5 0b06 	vfma.f64	d0, d5, d6
9002cd9e:	e7e5      	b.n	9002cd6c <sinf_poly+0x20>

9002cda0 <sinf>:
9002cda0:	b537      	push	{r0, r1, r2, r4, r5, lr}
9002cda2:	ee10 4a10 	vmov	r4, s0
9002cda6:	f3c4 530a 	ubfx	r3, r4, #20, #11
9002cdaa:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
9002cdae:	eeb7 6ac0 	vcvt.f64.f32	d6, s0
9002cdb2:	eef0 7a40 	vmov.f32	s15, s0
9002cdb6:	d218      	bcs.n	9002cdea <sinf+0x4a>
9002cdb8:	ee26 1b06 	vmul.f64	d1, d6, d6
9002cdbc:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
9002cdc0:	d20a      	bcs.n	9002cdd8 <sinf+0x38>
9002cdc2:	f014 4fff 	tst.w	r4, #2139095040	@ 0x7f800000
9002cdc6:	d103      	bne.n	9002cdd0 <sinf+0x30>
9002cdc8:	eeb7 1bc1 	vcvt.f32.f64	s2, d1
9002cdcc:	ed8d 1a01 	vstr	s2, [sp, #4]
9002cdd0:	eeb0 0a67 	vmov.f32	s0, s15
9002cdd4:	b003      	add	sp, #12
9002cdd6:	bd30      	pop	{r4, r5, pc}
9002cdd8:	483b      	ldr	r0, [pc, #236]	@ (9002cec8 <sinf+0x128>)
9002cdda:	eeb0 0b46 	vmov.f64	d0, d6
9002cdde:	2100      	movs	r1, #0
9002cde0:	b003      	add	sp, #12
9002cde2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
9002cde6:	f7ff bfb1 	b.w	9002cd4c <sinf_poly>
9002cdea:	f240 422e 	movw	r2, #1070	@ 0x42e
9002cdee:	4293      	cmp	r3, r2
9002cdf0:	d824      	bhi.n	9002ce3c <sinf+0x9c>
9002cdf2:	4b35      	ldr	r3, [pc, #212]	@ (9002cec8 <sinf+0x128>)
9002cdf4:	ed93 7b08 	vldr	d7, [r3, #32]
9002cdf8:	ee26 7b07 	vmul.f64	d7, d6, d7
9002cdfc:	eefd 7bc7 	vcvt.s32.f64	s15, d7
9002ce00:	f103 0070 	add.w	r0, r3, #112	@ 0x70
9002ce04:	ee17 1a90 	vmov	r1, s15
9002ce08:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
9002ce0c:	1609      	asrs	r1, r1, #24
9002ce0e:	ee07 1a90 	vmov	s15, r1
9002ce12:	f001 0203 	and.w	r2, r1, #3
9002ce16:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002ce1a:	eeb8 5be7 	vcvt.f64.s32	d5, s15
9002ce1e:	ed92 0b00 	vldr	d0, [r2]
9002ce22:	ed93 7b0a 	vldr	d7, [r3, #40]	@ 0x28
9002ce26:	f011 0f02 	tst.w	r1, #2
9002ce2a:	eea5 6b47 	vfms.f64	d6, d5, d7
9002ce2e:	bf08      	it	eq
9002ce30:	4618      	moveq	r0, r3
9002ce32:	ee26 1b06 	vmul.f64	d1, d6, d6
9002ce36:	ee20 0b06 	vmul.f64	d0, d0, d6
9002ce3a:	e7d1      	b.n	9002cde0 <sinf+0x40>
9002ce3c:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
9002ce40:	d237      	bcs.n	9002ceb2 <sinf+0x112>
9002ce42:	4922      	ldr	r1, [pc, #136]	@ (9002cecc <sinf+0x12c>)
9002ce44:	f3c4 6083 	ubfx	r0, r4, #26, #4
9002ce48:	eb01 0280 	add.w	r2, r1, r0, lsl #2
9002ce4c:	f3c4 0316 	ubfx	r3, r4, #0, #23
9002ce50:	f3c4 55c2 	ubfx	r5, r4, #23, #3
9002ce54:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
9002ce58:	6a10      	ldr	r0, [r2, #32]
9002ce5a:	6912      	ldr	r2, [r2, #16]
9002ce5c:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
9002ce60:	40ab      	lsls	r3, r5
9002ce62:	fba0 5003 	umull	r5, r0, r0, r3
9002ce66:	4359      	muls	r1, r3
9002ce68:	fbe3 0102 	umlal	r0, r1, r3, r2
9002ce6c:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
9002ce70:	0f9d      	lsrs	r5, r3, #30
9002ce72:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
9002ce76:	1ac9      	subs	r1, r1, r3
9002ce78:	f7d3 fc18 	bl	900006ac <__aeabi_l2d>
9002ce7c:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
9002ce80:	4b11      	ldr	r3, [pc, #68]	@ (9002cec8 <sinf+0x128>)
9002ce82:	f004 0203 	and.w	r2, r4, #3
9002ce86:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002ce8a:	ed9f 6b0d 	vldr	d6, [pc, #52]	@ 9002cec0 <sinf+0x120>
9002ce8e:	ed92 0b00 	vldr	d0, [r2]
9002ce92:	ec41 0b17 	vmov	d7, r0, r1
9002ce96:	f014 0f02 	tst.w	r4, #2
9002ce9a:	ee27 7b06 	vmul.f64	d7, d7, d6
9002ce9e:	f103 0070 	add.w	r0, r3, #112	@ 0x70
9002cea2:	4629      	mov	r1, r5
9002cea4:	bf08      	it	eq
9002cea6:	4618      	moveq	r0, r3
9002cea8:	ee27 1b07 	vmul.f64	d1, d7, d7
9002ceac:	ee20 0b07 	vmul.f64	d0, d0, d7
9002ceb0:	e796      	b.n	9002cde0 <sinf+0x40>
9002ceb2:	b003      	add	sp, #12
9002ceb4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
9002ceb8:	f000 b8e4 	b.w	9002d084 <__math_invalidf>
9002cebc:	f3af 8000 	nop.w
9002cec0:	54442d18 	.word	0x54442d18
9002cec4:	3c1921fb 	.word	0x3c1921fb
9002cec8:	900324e0 	.word	0x900324e0
9002cecc:	9003247c 	.word	0x9003247c

9002ced0 <sinf_poly>:
9002ced0:	07cb      	lsls	r3, r1, #31
9002ced2:	d412      	bmi.n	9002cefa <sinf_poly+0x2a>
9002ced4:	ee21 5b00 	vmul.f64	d5, d1, d0
9002ced8:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
9002cedc:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
9002cee0:	eea6 7b01 	vfma.f64	d7, d6, d1
9002cee4:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
9002cee8:	ee21 1b05 	vmul.f64	d1, d1, d5
9002ceec:	eea6 0b05 	vfma.f64	d0, d6, d5
9002cef0:	eea7 0b01 	vfma.f64	d0, d7, d1
9002cef4:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
9002cef8:	4770      	bx	lr
9002cefa:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
9002cefe:	ee21 5b01 	vmul.f64	d5, d1, d1
9002cf02:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
9002cf06:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
9002cf0a:	eea1 7b06 	vfma.f64	d7, d1, d6
9002cf0e:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
9002cf12:	eea1 0b06 	vfma.f64	d0, d1, d6
9002cf16:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
9002cf1a:	ee21 1b05 	vmul.f64	d1, d1, d5
9002cf1e:	eea5 0b06 	vfma.f64	d0, d5, d6
9002cf22:	e7e5      	b.n	9002cef0 <sinf_poly+0x20>
9002cf24:	0000      	movs	r0, r0
	...

9002cf28 <cosf>:
9002cf28:	b538      	push	{r3, r4, r5, lr}
9002cf2a:	ee10 4a10 	vmov	r4, s0
9002cf2e:	f3c4 530a 	ubfx	r3, r4, #20, #11
9002cf32:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
9002cf36:	eeb7 7ac0 	vcvt.f64.f32	d7, s0
9002cf3a:	d21f      	bcs.n	9002cf7c <cosf+0x54>
9002cf3c:	ee27 7b07 	vmul.f64	d7, d7, d7
9002cf40:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
9002cf44:	f0c0 8082 	bcc.w	9002d04c <cosf+0x124>
9002cf48:	ee27 4b07 	vmul.f64	d4, d7, d7
9002cf4c:	4b44      	ldr	r3, [pc, #272]	@ (9002d060 <cosf+0x138>)
9002cf4e:	ed93 5b14 	vldr	d5, [r3, #80]	@ 0x50
9002cf52:	ed93 6b12 	vldr	d6, [r3, #72]	@ 0x48
9002cf56:	ed93 0b0c 	vldr	d0, [r3, #48]	@ 0x30
9002cf5a:	eea7 6b05 	vfma.f64	d6, d7, d5
9002cf5e:	ed93 5b0e 	vldr	d5, [r3, #56]	@ 0x38
9002cf62:	eea7 0b05 	vfma.f64	d0, d7, d5
9002cf66:	ed93 5b10 	vldr	d5, [r3, #64]	@ 0x40
9002cf6a:	ee27 7b04 	vmul.f64	d7, d7, d4
9002cf6e:	eea4 0b05 	vfma.f64	d0, d4, d5
9002cf72:	eea6 0b07 	vfma.f64	d0, d6, d7
9002cf76:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
9002cf7a:	bd38      	pop	{r3, r4, r5, pc}
9002cf7c:	f240 422e 	movw	r2, #1070	@ 0x42e
9002cf80:	4293      	cmp	r3, r2
9002cf82:	d829      	bhi.n	9002cfd8 <cosf+0xb0>
9002cf84:	4b36      	ldr	r3, [pc, #216]	@ (9002d060 <cosf+0x138>)
9002cf86:	ed93 6b08 	vldr	d6, [r3, #32]
9002cf8a:	ee27 6b06 	vmul.f64	d6, d7, d6
9002cf8e:	eefd 6bc6 	vcvt.s32.f64	s13, d6
9002cf92:	f103 0070 	add.w	r0, r3, #112	@ 0x70
9002cf96:	ee16 1a90 	vmov	r1, s13
9002cf9a:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
9002cf9e:	1609      	asrs	r1, r1, #24
9002cfa0:	ee06 1a90 	vmov	s13, r1
9002cfa4:	f001 0203 	and.w	r2, r1, #3
9002cfa8:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002cfac:	eeb8 5be6 	vcvt.f64.s32	d5, s13
9002cfb0:	ed92 0b00 	vldr	d0, [r2]
9002cfb4:	ed93 6b0a 	vldr	d6, [r3, #40]	@ 0x28
9002cfb8:	f011 0f02 	tst.w	r1, #2
9002cfbc:	f081 0101 	eor.w	r1, r1, #1
9002cfc0:	eea5 7b46 	vfms.f64	d7, d5, d6
9002cfc4:	bf08      	it	eq
9002cfc6:	4618      	moveq	r0, r3
9002cfc8:	ee27 1b07 	vmul.f64	d1, d7, d7
9002cfcc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002cfd0:	ee20 0b07 	vmul.f64	d0, d0, d7
9002cfd4:	f7ff bf7c 	b.w	9002ced0 <sinf_poly>
9002cfd8:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
9002cfdc:	d232      	bcs.n	9002d044 <cosf+0x11c>
9002cfde:	4921      	ldr	r1, [pc, #132]	@ (9002d064 <cosf+0x13c>)
9002cfe0:	f3c4 6083 	ubfx	r0, r4, #26, #4
9002cfe4:	eb01 0280 	add.w	r2, r1, r0, lsl #2
9002cfe8:	f3c4 0316 	ubfx	r3, r4, #0, #23
9002cfec:	f3c4 55c2 	ubfx	r5, r4, #23, #3
9002cff0:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
9002cff4:	6a10      	ldr	r0, [r2, #32]
9002cff6:	6912      	ldr	r2, [r2, #16]
9002cff8:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
9002cffc:	40ab      	lsls	r3, r5
9002cffe:	fba0 5003 	umull	r5, r0, r0, r3
9002d002:	4359      	muls	r1, r3
9002d004:	fbe3 0102 	umlal	r0, r1, r3, r2
9002d008:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
9002d00c:	0f9d      	lsrs	r5, r3, #30
9002d00e:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
9002d012:	1ac9      	subs	r1, r1, r3
9002d014:	f7d3 fb4a 	bl	900006ac <__aeabi_l2d>
9002d018:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
9002d01c:	4b10      	ldr	r3, [pc, #64]	@ (9002d060 <cosf+0x138>)
9002d01e:	ed9f 6b0e 	vldr	d6, [pc, #56]	@ 9002d058 <cosf+0x130>
9002d022:	ec41 0b17 	vmov	d7, r0, r1
9002d026:	f004 0203 	and.w	r2, r4, #3
9002d02a:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002d02e:	ed92 0b00 	vldr	d0, [r2]
9002d032:	ee27 7b06 	vmul.f64	d7, d7, d6
9002d036:	f103 0070 	add.w	r0, r3, #112	@ 0x70
9002d03a:	f014 0f02 	tst.w	r4, #2
9002d03e:	f085 0101 	eor.w	r1, r5, #1
9002d042:	e7bf      	b.n	9002cfc4 <cosf+0x9c>
9002d044:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002d048:	f000 b81c 	b.w	9002d084 <__math_invalidf>
9002d04c:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
9002d050:	e793      	b.n	9002cf7a <cosf+0x52>
9002d052:	bf00      	nop
9002d054:	f3af 8000 	nop.w
9002d058:	54442d18 	.word	0x54442d18
9002d05c:	3c1921fb 	.word	0x3c1921fb
9002d060:	900324e0 	.word	0x900324e0
9002d064:	9003247c 	.word	0x9003247c

9002d068 <with_errnof>:
9002d068:	b510      	push	{r4, lr}
9002d06a:	ed2d 8b02 	vpush	{d8}
9002d06e:	eeb0 8a40 	vmov.f32	s16, s0
9002d072:	4604      	mov	r4, r0
9002d074:	f000 fd6e 	bl	9002db54 <__errno>
9002d078:	eeb0 0a48 	vmov.f32	s0, s16
9002d07c:	ecbd 8b02 	vpop	{d8}
9002d080:	6004      	str	r4, [r0, #0]
9002d082:	bd10      	pop	{r4, pc}

9002d084 <__math_invalidf>:
9002d084:	eef0 7a40 	vmov.f32	s15, s0
9002d088:	ee30 7a40 	vsub.f32	s14, s0, s0
9002d08c:	eef4 7a67 	vcmp.f32	s15, s15
9002d090:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002d094:	ee87 0a07 	vdiv.f32	s0, s14, s14
9002d098:	d602      	bvs.n	9002d0a0 <__math_invalidf+0x1c>
9002d09a:	2021      	movs	r0, #33	@ 0x21
9002d09c:	f7ff bfe4 	b.w	9002d068 <with_errnof>
9002d0a0:	4770      	bx	lr

9002d0a2 <__ieee754_sqrtf>:
9002d0a2:	eeb1 0ac0 	vsqrt.f32	s0, s0
9002d0a6:	4770      	bx	lr

9002d0a8 <__ieee754_atan2f>:
9002d0a8:	ee10 2a90 	vmov	r2, s1
9002d0ac:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
9002d0b0:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
9002d0b4:	b510      	push	{r4, lr}
9002d0b6:	eef0 7a40 	vmov.f32	s15, s0
9002d0ba:	d806      	bhi.n	9002d0ca <__ieee754_atan2f+0x22>
9002d0bc:	ee10 0a10 	vmov	r0, s0
9002d0c0:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
9002d0c4:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
9002d0c8:	d904      	bls.n	9002d0d4 <__ieee754_atan2f+0x2c>
9002d0ca:	ee77 7aa0 	vadd.f32	s15, s15, s1
9002d0ce:	eeb0 0a67 	vmov.f32	s0, s15
9002d0d2:	bd10      	pop	{r4, pc}
9002d0d4:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
9002d0d8:	d103      	bne.n	9002d0e2 <__ieee754_atan2f+0x3a>
9002d0da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002d0de:	f000 b881 	b.w	9002d1e4 <atanf>
9002d0e2:	1794      	asrs	r4, r2, #30
9002d0e4:	f004 0402 	and.w	r4, r4, #2
9002d0e8:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
9002d0ec:	b93b      	cbnz	r3, 9002d0fe <__ieee754_atan2f+0x56>
9002d0ee:	2c02      	cmp	r4, #2
9002d0f0:	d05c      	beq.n	9002d1ac <__ieee754_atan2f+0x104>
9002d0f2:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 9002d1c0 <__ieee754_atan2f+0x118>
9002d0f6:	2c03      	cmp	r4, #3
9002d0f8:	fe47 7a00 	vseleq.f32	s15, s14, s0
9002d0fc:	e7e7      	b.n	9002d0ce <__ieee754_atan2f+0x26>
9002d0fe:	b939      	cbnz	r1, 9002d110 <__ieee754_atan2f+0x68>
9002d100:	eddf 7a30 	vldr	s15, [pc, #192]	@ 9002d1c4 <__ieee754_atan2f+0x11c>
9002d104:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 9002d1c8 <__ieee754_atan2f+0x120>
9002d108:	2800      	cmp	r0, #0
9002d10a:	fe67 7a27 	vselge.f32	s15, s14, s15
9002d10e:	e7de      	b.n	9002d0ce <__ieee754_atan2f+0x26>
9002d110:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
9002d114:	d110      	bne.n	9002d138 <__ieee754_atan2f+0x90>
9002d116:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
9002d11a:	f104 34ff 	add.w	r4, r4, #4294967295
9002d11e:	d107      	bne.n	9002d130 <__ieee754_atan2f+0x88>
9002d120:	2c02      	cmp	r4, #2
9002d122:	d846      	bhi.n	9002d1b2 <__ieee754_atan2f+0x10a>
9002d124:	4b29      	ldr	r3, [pc, #164]	@ (9002d1cc <__ieee754_atan2f+0x124>)
9002d126:	eb03 0384 	add.w	r3, r3, r4, lsl #2
9002d12a:	edd3 7a00 	vldr	s15, [r3]
9002d12e:	e7ce      	b.n	9002d0ce <__ieee754_atan2f+0x26>
9002d130:	2c02      	cmp	r4, #2
9002d132:	d841      	bhi.n	9002d1b8 <__ieee754_atan2f+0x110>
9002d134:	4b26      	ldr	r3, [pc, #152]	@ (9002d1d0 <__ieee754_atan2f+0x128>)
9002d136:	e7f6      	b.n	9002d126 <__ieee754_atan2f+0x7e>
9002d138:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
9002d13c:	d0e0      	beq.n	9002d100 <__ieee754_atan2f+0x58>
9002d13e:	1a5b      	subs	r3, r3, r1
9002d140:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
9002d144:	ea4f 51e3 	mov.w	r1, r3, asr #23
9002d148:	da1a      	bge.n	9002d180 <__ieee754_atan2f+0xd8>
9002d14a:	2a00      	cmp	r2, #0
9002d14c:	da01      	bge.n	9002d152 <__ieee754_atan2f+0xaa>
9002d14e:	313c      	adds	r1, #60	@ 0x3c
9002d150:	db19      	blt.n	9002d186 <__ieee754_atan2f+0xde>
9002d152:	ee87 0aa0 	vdiv.f32	s0, s15, s1
9002d156:	f000 f919 	bl	9002d38c <fabsf>
9002d15a:	f000 f843 	bl	9002d1e4 <atanf>
9002d15e:	eef0 7a40 	vmov.f32	s15, s0
9002d162:	2c01      	cmp	r4, #1
9002d164:	d012      	beq.n	9002d18c <__ieee754_atan2f+0xe4>
9002d166:	2c02      	cmp	r4, #2
9002d168:	d017      	beq.n	9002d19a <__ieee754_atan2f+0xf2>
9002d16a:	2c00      	cmp	r4, #0
9002d16c:	d0af      	beq.n	9002d0ce <__ieee754_atan2f+0x26>
9002d16e:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 9002d1d4 <__ieee754_atan2f+0x12c>
9002d172:	ee77 7a87 	vadd.f32	s15, s15, s14
9002d176:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 9002d1d8 <__ieee754_atan2f+0x130>
9002d17a:	ee77 7ac7 	vsub.f32	s15, s15, s14
9002d17e:	e7a6      	b.n	9002d0ce <__ieee754_atan2f+0x26>
9002d180:	eddf 7a11 	vldr	s15, [pc, #68]	@ 9002d1c8 <__ieee754_atan2f+0x120>
9002d184:	e7ed      	b.n	9002d162 <__ieee754_atan2f+0xba>
9002d186:	eddf 7a15 	vldr	s15, [pc, #84]	@ 9002d1dc <__ieee754_atan2f+0x134>
9002d18a:	e7ea      	b.n	9002d162 <__ieee754_atan2f+0xba>
9002d18c:	ee17 3a90 	vmov	r3, s15
9002d190:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
9002d194:	ee07 3a90 	vmov	s15, r3
9002d198:	e799      	b.n	9002d0ce <__ieee754_atan2f+0x26>
9002d19a:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 9002d1d4 <__ieee754_atan2f+0x12c>
9002d19e:	ee77 7a87 	vadd.f32	s15, s15, s14
9002d1a2:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 9002d1d8 <__ieee754_atan2f+0x130>
9002d1a6:	ee77 7a67 	vsub.f32	s15, s14, s15
9002d1aa:	e790      	b.n	9002d0ce <__ieee754_atan2f+0x26>
9002d1ac:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 9002d1d8 <__ieee754_atan2f+0x130>
9002d1b0:	e78d      	b.n	9002d0ce <__ieee754_atan2f+0x26>
9002d1b2:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 9002d1e0 <__ieee754_atan2f+0x138>
9002d1b6:	e78a      	b.n	9002d0ce <__ieee754_atan2f+0x26>
9002d1b8:	eddf 7a08 	vldr	s15, [pc, #32]	@ 9002d1dc <__ieee754_atan2f+0x134>
9002d1bc:	e787      	b.n	9002d0ce <__ieee754_atan2f+0x26>
9002d1be:	bf00      	nop
9002d1c0:	c0490fdb 	.word	0xc0490fdb
9002d1c4:	bfc90fdb 	.word	0xbfc90fdb
9002d1c8:	3fc90fdb 	.word	0x3fc90fdb
9002d1cc:	900325cc 	.word	0x900325cc
9002d1d0:	900325c0 	.word	0x900325c0
9002d1d4:	33bbbd2e 	.word	0x33bbbd2e
9002d1d8:	40490fdb 	.word	0x40490fdb
9002d1dc:	00000000 	.word	0x00000000
9002d1e0:	3f490fdb 	.word	0x3f490fdb

9002d1e4 <atanf>:
9002d1e4:	b538      	push	{r3, r4, r5, lr}
9002d1e6:	ee10 5a10 	vmov	r5, s0
9002d1ea:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
9002d1ee:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
9002d1f2:	eef0 7a40 	vmov.f32	s15, s0
9002d1f6:	d30f      	bcc.n	9002d218 <atanf+0x34>
9002d1f8:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
9002d1fc:	d904      	bls.n	9002d208 <atanf+0x24>
9002d1fe:	ee70 7a00 	vadd.f32	s15, s0, s0
9002d202:	eeb0 0a67 	vmov.f32	s0, s15
9002d206:	bd38      	pop	{r3, r4, r5, pc}
9002d208:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 9002d340 <atanf+0x15c>
9002d20c:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 9002d344 <atanf+0x160>
9002d210:	2d00      	cmp	r5, #0
9002d212:	fe77 7a27 	vselgt.f32	s15, s14, s15
9002d216:	e7f4      	b.n	9002d202 <atanf+0x1e>
9002d218:	4b4b      	ldr	r3, [pc, #300]	@ (9002d348 <atanf+0x164>)
9002d21a:	429c      	cmp	r4, r3
9002d21c:	d810      	bhi.n	9002d240 <atanf+0x5c>
9002d21e:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
9002d222:	d20a      	bcs.n	9002d23a <atanf+0x56>
9002d224:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 9002d34c <atanf+0x168>
9002d228:	ee30 7a07 	vadd.f32	s14, s0, s14
9002d22c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9002d230:	eeb4 7ae6 	vcmpe.f32	s14, s13
9002d234:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002d238:	dce3      	bgt.n	9002d202 <atanf+0x1e>
9002d23a:	f04f 33ff 	mov.w	r3, #4294967295
9002d23e:	e013      	b.n	9002d268 <atanf+0x84>
9002d240:	f000 f8a4 	bl	9002d38c <fabsf>
9002d244:	4b42      	ldr	r3, [pc, #264]	@ (9002d350 <atanf+0x16c>)
9002d246:	429c      	cmp	r4, r3
9002d248:	d84f      	bhi.n	9002d2ea <atanf+0x106>
9002d24a:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
9002d24e:	429c      	cmp	r4, r3
9002d250:	d841      	bhi.n	9002d2d6 <atanf+0xf2>
9002d252:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
9002d256:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
9002d25a:	eea0 7a27 	vfma.f32	s14, s0, s15
9002d25e:	2300      	movs	r3, #0
9002d260:	ee30 0a27 	vadd.f32	s0, s0, s15
9002d264:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002d268:	1c5a      	adds	r2, r3, #1
9002d26a:	ee27 6aa7 	vmul.f32	s12, s15, s15
9002d26e:	ed9f 7a39 	vldr	s14, [pc, #228]	@ 9002d354 <atanf+0x170>
9002d272:	eddf 5a39 	vldr	s11, [pc, #228]	@ 9002d358 <atanf+0x174>
9002d276:	ed9f 5a39 	vldr	s10, [pc, #228]	@ 9002d35c <atanf+0x178>
9002d27a:	ee66 6a06 	vmul.f32	s13, s12, s12
9002d27e:	eee6 5a87 	vfma.f32	s11, s13, s14
9002d282:	ed9f 7a37 	vldr	s14, [pc, #220]	@ 9002d360 <atanf+0x17c>
9002d286:	eea5 7aa6 	vfma.f32	s14, s11, s13
9002d28a:	eddf 5a36 	vldr	s11, [pc, #216]	@ 9002d364 <atanf+0x180>
9002d28e:	eee7 5a26 	vfma.f32	s11, s14, s13
9002d292:	ed9f 7a35 	vldr	s14, [pc, #212]	@ 9002d368 <atanf+0x184>
9002d296:	eea5 7aa6 	vfma.f32	s14, s11, s13
9002d29a:	eddf 5a34 	vldr	s11, [pc, #208]	@ 9002d36c <atanf+0x188>
9002d29e:	eee7 5a26 	vfma.f32	s11, s14, s13
9002d2a2:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 9002d370 <atanf+0x18c>
9002d2a6:	eea6 5a87 	vfma.f32	s10, s13, s14
9002d2aa:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 9002d374 <atanf+0x190>
9002d2ae:	eea5 7a26 	vfma.f32	s14, s10, s13
9002d2b2:	ed9f 5a31 	vldr	s10, [pc, #196]	@ 9002d378 <atanf+0x194>
9002d2b6:	eea7 5a26 	vfma.f32	s10, s14, s13
9002d2ba:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 9002d37c <atanf+0x198>
9002d2be:	eea5 7a26 	vfma.f32	s14, s10, s13
9002d2c2:	ee27 7a26 	vmul.f32	s14, s14, s13
9002d2c6:	eea5 7a86 	vfma.f32	s14, s11, s12
9002d2ca:	ee27 7a87 	vmul.f32	s14, s15, s14
9002d2ce:	d121      	bne.n	9002d314 <atanf+0x130>
9002d2d0:	ee77 7ac7 	vsub.f32	s15, s15, s14
9002d2d4:	e795      	b.n	9002d202 <atanf+0x1e>
9002d2d6:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
9002d2da:	ee30 7a67 	vsub.f32	s14, s0, s15
9002d2de:	ee30 0a27 	vadd.f32	s0, s0, s15
9002d2e2:	2301      	movs	r3, #1
9002d2e4:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002d2e8:	e7be      	b.n	9002d268 <atanf+0x84>
9002d2ea:	4b25      	ldr	r3, [pc, #148]	@ (9002d380 <atanf+0x19c>)
9002d2ec:	429c      	cmp	r4, r3
9002d2ee:	d80b      	bhi.n	9002d308 <atanf+0x124>
9002d2f0:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
9002d2f4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002d2f8:	eea0 7a27 	vfma.f32	s14, s0, s15
9002d2fc:	2302      	movs	r3, #2
9002d2fe:	ee70 6a67 	vsub.f32	s13, s0, s15
9002d302:	eec6 7a87 	vdiv.f32	s15, s13, s14
9002d306:	e7af      	b.n	9002d268 <atanf+0x84>
9002d308:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
9002d30c:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002d310:	2303      	movs	r3, #3
9002d312:	e7a9      	b.n	9002d268 <atanf+0x84>
9002d314:	4a1b      	ldr	r2, [pc, #108]	@ (9002d384 <atanf+0x1a0>)
9002d316:	491c      	ldr	r1, [pc, #112]	@ (9002d388 <atanf+0x1a4>)
9002d318:	eb02 0283 	add.w	r2, r2, r3, lsl #2
9002d31c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9002d320:	edd3 6a00 	vldr	s13, [r3]
9002d324:	ee37 7a66 	vsub.f32	s14, s14, s13
9002d328:	2d00      	cmp	r5, #0
9002d32a:	ee37 7a67 	vsub.f32	s14, s14, s15
9002d32e:	edd2 7a00 	vldr	s15, [r2]
9002d332:	ee77 7ac7 	vsub.f32	s15, s15, s14
9002d336:	bfb8      	it	lt
9002d338:	eef1 7a67 	vneglt.f32	s15, s15
9002d33c:	e761      	b.n	9002d202 <atanf+0x1e>
9002d33e:	bf00      	nop
9002d340:	bfc90fdb 	.word	0xbfc90fdb
9002d344:	3fc90fdb 	.word	0x3fc90fdb
9002d348:	3edfffff 	.word	0x3edfffff
9002d34c:	7149f2ca 	.word	0x7149f2ca
9002d350:	3f97ffff 	.word	0x3f97ffff
9002d354:	3c8569d7 	.word	0x3c8569d7
9002d358:	3d4bda59 	.word	0x3d4bda59
9002d35c:	bd6ef16b 	.word	0xbd6ef16b
9002d360:	3d886b35 	.word	0x3d886b35
9002d364:	3dba2e6e 	.word	0x3dba2e6e
9002d368:	3e124925 	.word	0x3e124925
9002d36c:	3eaaaaab 	.word	0x3eaaaaab
9002d370:	bd15a221 	.word	0xbd15a221
9002d374:	bd9d8795 	.word	0xbd9d8795
9002d378:	bde38e38 	.word	0xbde38e38
9002d37c:	be4ccccd 	.word	0xbe4ccccd
9002d380:	401bffff 	.word	0x401bffff
9002d384:	900325e8 	.word	0x900325e8
9002d388:	900325d8 	.word	0x900325d8

9002d38c <fabsf>:
9002d38c:	ee10 3a10 	vmov	r3, s0
9002d390:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
9002d394:	ee00 3a10 	vmov	s0, r3
9002d398:	4770      	bx	lr

9002d39a <abort>:
9002d39a:	b508      	push	{r3, lr}
9002d39c:	2006      	movs	r0, #6
9002d39e:	f000 fb09 	bl	9002d9b4 <raise>
9002d3a2:	2001      	movs	r0, #1
9002d3a4:	f7d7 fa14 	bl	900047d0 <_exit>

9002d3a8 <__assert_func>:
9002d3a8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
9002d3aa:	4614      	mov	r4, r2
9002d3ac:	461a      	mov	r2, r3
9002d3ae:	4b09      	ldr	r3, [pc, #36]	@ (9002d3d4 <__assert_func+0x2c>)
9002d3b0:	681b      	ldr	r3, [r3, #0]
9002d3b2:	4605      	mov	r5, r0
9002d3b4:	68d8      	ldr	r0, [r3, #12]
9002d3b6:	b14c      	cbz	r4, 9002d3cc <__assert_func+0x24>
9002d3b8:	4b07      	ldr	r3, [pc, #28]	@ (9002d3d8 <__assert_func+0x30>)
9002d3ba:	9100      	str	r1, [sp, #0]
9002d3bc:	e9cd 3401 	strd	r3, r4, [sp, #4]
9002d3c0:	4906      	ldr	r1, [pc, #24]	@ (9002d3dc <__assert_func+0x34>)
9002d3c2:	462b      	mov	r3, r5
9002d3c4:	f000 f984 	bl	9002d6d0 <fiprintf>
9002d3c8:	f7ff ffe7 	bl	9002d39a <abort>
9002d3cc:	4b04      	ldr	r3, [pc, #16]	@ (9002d3e0 <__assert_func+0x38>)
9002d3ce:	461c      	mov	r4, r3
9002d3d0:	e7f3      	b.n	9002d3ba <__assert_func+0x12>
9002d3d2:	bf00      	nop
9002d3d4:	24000114 	.word	0x24000114
9002d3d8:	900323f6 	.word	0x900323f6
9002d3dc:	90032403 	.word	0x90032403
9002d3e0:	90032431 	.word	0x90032431

9002d3e4 <atexit>:
9002d3e4:	2300      	movs	r3, #0
9002d3e6:	4601      	mov	r1, r0
9002d3e8:	461a      	mov	r2, r3
9002d3ea:	4618      	mov	r0, r3
9002d3ec:	f000 bbee 	b.w	9002dbcc <__register_exitproc>

9002d3f0 <malloc>:
9002d3f0:	4b02      	ldr	r3, [pc, #8]	@ (9002d3fc <malloc+0xc>)
9002d3f2:	4601      	mov	r1, r0
9002d3f4:	6818      	ldr	r0, [r3, #0]
9002d3f6:	f000 b82d 	b.w	9002d454 <_malloc_r>
9002d3fa:	bf00      	nop
9002d3fc:	24000114 	.word	0x24000114

9002d400 <free>:
9002d400:	4b02      	ldr	r3, [pc, #8]	@ (9002d40c <free+0xc>)
9002d402:	4601      	mov	r1, r0
9002d404:	6818      	ldr	r0, [r3, #0]
9002d406:	f000 bc3d 	b.w	9002dc84 <_free_r>
9002d40a:	bf00      	nop
9002d40c:	24000114 	.word	0x24000114

9002d410 <sbrk_aligned>:
9002d410:	b570      	push	{r4, r5, r6, lr}
9002d412:	4e0f      	ldr	r6, [pc, #60]	@ (9002d450 <sbrk_aligned+0x40>)
9002d414:	460c      	mov	r4, r1
9002d416:	6831      	ldr	r1, [r6, #0]
9002d418:	4605      	mov	r5, r0
9002d41a:	b911      	cbnz	r1, 9002d422 <sbrk_aligned+0x12>
9002d41c:	f000 fb78 	bl	9002db10 <_sbrk_r>
9002d420:	6030      	str	r0, [r6, #0]
9002d422:	4621      	mov	r1, r4
9002d424:	4628      	mov	r0, r5
9002d426:	f000 fb73 	bl	9002db10 <_sbrk_r>
9002d42a:	1c43      	adds	r3, r0, #1
9002d42c:	d103      	bne.n	9002d436 <sbrk_aligned+0x26>
9002d42e:	f04f 34ff 	mov.w	r4, #4294967295
9002d432:	4620      	mov	r0, r4
9002d434:	bd70      	pop	{r4, r5, r6, pc}
9002d436:	1cc4      	adds	r4, r0, #3
9002d438:	f024 0403 	bic.w	r4, r4, #3
9002d43c:	42a0      	cmp	r0, r4
9002d43e:	d0f8      	beq.n	9002d432 <sbrk_aligned+0x22>
9002d440:	1a21      	subs	r1, r4, r0
9002d442:	4628      	mov	r0, r5
9002d444:	f000 fb64 	bl	9002db10 <_sbrk_r>
9002d448:	3001      	adds	r0, #1
9002d44a:	d1f2      	bne.n	9002d432 <sbrk_aligned+0x22>
9002d44c:	e7ef      	b.n	9002d42e <sbrk_aligned+0x1e>
9002d44e:	bf00      	nop
9002d450:	24022668 	.word	0x24022668

9002d454 <_malloc_r>:
9002d454:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002d458:	1ccd      	adds	r5, r1, #3
9002d45a:	f025 0503 	bic.w	r5, r5, #3
9002d45e:	3508      	adds	r5, #8
9002d460:	2d0c      	cmp	r5, #12
9002d462:	bf38      	it	cc
9002d464:	250c      	movcc	r5, #12
9002d466:	2d00      	cmp	r5, #0
9002d468:	4606      	mov	r6, r0
9002d46a:	db01      	blt.n	9002d470 <_malloc_r+0x1c>
9002d46c:	42a9      	cmp	r1, r5
9002d46e:	d904      	bls.n	9002d47a <_malloc_r+0x26>
9002d470:	230c      	movs	r3, #12
9002d472:	6033      	str	r3, [r6, #0]
9002d474:	2000      	movs	r0, #0
9002d476:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002d47a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 9002d550 <_malloc_r+0xfc>
9002d47e:	f000 f869 	bl	9002d554 <__malloc_lock>
9002d482:	f8d8 3000 	ldr.w	r3, [r8]
9002d486:	461c      	mov	r4, r3
9002d488:	bb44      	cbnz	r4, 9002d4dc <_malloc_r+0x88>
9002d48a:	4629      	mov	r1, r5
9002d48c:	4630      	mov	r0, r6
9002d48e:	f7ff ffbf 	bl	9002d410 <sbrk_aligned>
9002d492:	1c43      	adds	r3, r0, #1
9002d494:	4604      	mov	r4, r0
9002d496:	d158      	bne.n	9002d54a <_malloc_r+0xf6>
9002d498:	f8d8 4000 	ldr.w	r4, [r8]
9002d49c:	4627      	mov	r7, r4
9002d49e:	2f00      	cmp	r7, #0
9002d4a0:	d143      	bne.n	9002d52a <_malloc_r+0xd6>
9002d4a2:	2c00      	cmp	r4, #0
9002d4a4:	d04b      	beq.n	9002d53e <_malloc_r+0xea>
9002d4a6:	6823      	ldr	r3, [r4, #0]
9002d4a8:	4639      	mov	r1, r7
9002d4aa:	4630      	mov	r0, r6
9002d4ac:	eb04 0903 	add.w	r9, r4, r3
9002d4b0:	f000 fb2e 	bl	9002db10 <_sbrk_r>
9002d4b4:	4581      	cmp	r9, r0
9002d4b6:	d142      	bne.n	9002d53e <_malloc_r+0xea>
9002d4b8:	6821      	ldr	r1, [r4, #0]
9002d4ba:	1a6d      	subs	r5, r5, r1
9002d4bc:	4629      	mov	r1, r5
9002d4be:	4630      	mov	r0, r6
9002d4c0:	f7ff ffa6 	bl	9002d410 <sbrk_aligned>
9002d4c4:	3001      	adds	r0, #1
9002d4c6:	d03a      	beq.n	9002d53e <_malloc_r+0xea>
9002d4c8:	6823      	ldr	r3, [r4, #0]
9002d4ca:	442b      	add	r3, r5
9002d4cc:	6023      	str	r3, [r4, #0]
9002d4ce:	f8d8 3000 	ldr.w	r3, [r8]
9002d4d2:	685a      	ldr	r2, [r3, #4]
9002d4d4:	bb62      	cbnz	r2, 9002d530 <_malloc_r+0xdc>
9002d4d6:	f8c8 7000 	str.w	r7, [r8]
9002d4da:	e00f      	b.n	9002d4fc <_malloc_r+0xa8>
9002d4dc:	6822      	ldr	r2, [r4, #0]
9002d4de:	1b52      	subs	r2, r2, r5
9002d4e0:	d420      	bmi.n	9002d524 <_malloc_r+0xd0>
9002d4e2:	2a0b      	cmp	r2, #11
9002d4e4:	d917      	bls.n	9002d516 <_malloc_r+0xc2>
9002d4e6:	1961      	adds	r1, r4, r5
9002d4e8:	42a3      	cmp	r3, r4
9002d4ea:	6025      	str	r5, [r4, #0]
9002d4ec:	bf18      	it	ne
9002d4ee:	6059      	strne	r1, [r3, #4]
9002d4f0:	6863      	ldr	r3, [r4, #4]
9002d4f2:	bf08      	it	eq
9002d4f4:	f8c8 1000 	streq.w	r1, [r8]
9002d4f8:	5162      	str	r2, [r4, r5]
9002d4fa:	604b      	str	r3, [r1, #4]
9002d4fc:	4630      	mov	r0, r6
9002d4fe:	f000 f82f 	bl	9002d560 <__malloc_unlock>
9002d502:	f104 000b 	add.w	r0, r4, #11
9002d506:	1d23      	adds	r3, r4, #4
9002d508:	f020 0007 	bic.w	r0, r0, #7
9002d50c:	1ac2      	subs	r2, r0, r3
9002d50e:	bf1c      	itt	ne
9002d510:	1a1b      	subne	r3, r3, r0
9002d512:	50a3      	strne	r3, [r4, r2]
9002d514:	e7af      	b.n	9002d476 <_malloc_r+0x22>
9002d516:	6862      	ldr	r2, [r4, #4]
9002d518:	42a3      	cmp	r3, r4
9002d51a:	bf0c      	ite	eq
9002d51c:	f8c8 2000 	streq.w	r2, [r8]
9002d520:	605a      	strne	r2, [r3, #4]
9002d522:	e7eb      	b.n	9002d4fc <_malloc_r+0xa8>
9002d524:	4623      	mov	r3, r4
9002d526:	6864      	ldr	r4, [r4, #4]
9002d528:	e7ae      	b.n	9002d488 <_malloc_r+0x34>
9002d52a:	463c      	mov	r4, r7
9002d52c:	687f      	ldr	r7, [r7, #4]
9002d52e:	e7b6      	b.n	9002d49e <_malloc_r+0x4a>
9002d530:	461a      	mov	r2, r3
9002d532:	685b      	ldr	r3, [r3, #4]
9002d534:	42a3      	cmp	r3, r4
9002d536:	d1fb      	bne.n	9002d530 <_malloc_r+0xdc>
9002d538:	2300      	movs	r3, #0
9002d53a:	6053      	str	r3, [r2, #4]
9002d53c:	e7de      	b.n	9002d4fc <_malloc_r+0xa8>
9002d53e:	230c      	movs	r3, #12
9002d540:	6033      	str	r3, [r6, #0]
9002d542:	4630      	mov	r0, r6
9002d544:	f000 f80c 	bl	9002d560 <__malloc_unlock>
9002d548:	e794      	b.n	9002d474 <_malloc_r+0x20>
9002d54a:	6005      	str	r5, [r0, #0]
9002d54c:	e7d6      	b.n	9002d4fc <_malloc_r+0xa8>
9002d54e:	bf00      	nop
9002d550:	2402266c 	.word	0x2402266c

9002d554 <__malloc_lock>:
9002d554:	4801      	ldr	r0, [pc, #4]	@ (9002d55c <__malloc_lock+0x8>)
9002d556:	f000 bb28 	b.w	9002dbaa <__retarget_lock_acquire_recursive>
9002d55a:	bf00      	nop
9002d55c:	240227b0 	.word	0x240227b0

9002d560 <__malloc_unlock>:
9002d560:	4801      	ldr	r0, [pc, #4]	@ (9002d568 <__malloc_unlock+0x8>)
9002d562:	f000 bb23 	b.w	9002dbac <__retarget_lock_release_recursive>
9002d566:	bf00      	nop
9002d568:	240227b0 	.word	0x240227b0

9002d56c <__cxa_atexit>:
9002d56c:	b510      	push	{r4, lr}
9002d56e:	4604      	mov	r4, r0
9002d570:	4804      	ldr	r0, [pc, #16]	@ (9002d584 <__cxa_atexit+0x18>)
9002d572:	4613      	mov	r3, r2
9002d574:	b120      	cbz	r0, 9002d580 <__cxa_atexit+0x14>
9002d576:	460a      	mov	r2, r1
9002d578:	2002      	movs	r0, #2
9002d57a:	4621      	mov	r1, r4
9002d57c:	f000 fb26 	bl	9002dbcc <__register_exitproc>
9002d580:	bd10      	pop	{r4, pc}
9002d582:	bf00      	nop
9002d584:	9002dbcd 	.word	0x9002dbcd

9002d588 <std>:
9002d588:	2300      	movs	r3, #0
9002d58a:	b510      	push	{r4, lr}
9002d58c:	4604      	mov	r4, r0
9002d58e:	e9c0 3300 	strd	r3, r3, [r0]
9002d592:	e9c0 3304 	strd	r3, r3, [r0, #16]
9002d596:	6083      	str	r3, [r0, #8]
9002d598:	8181      	strh	r1, [r0, #12]
9002d59a:	6643      	str	r3, [r0, #100]	@ 0x64
9002d59c:	81c2      	strh	r2, [r0, #14]
9002d59e:	6183      	str	r3, [r0, #24]
9002d5a0:	4619      	mov	r1, r3
9002d5a2:	2208      	movs	r2, #8
9002d5a4:	305c      	adds	r0, #92	@ 0x5c
9002d5a6:	f000 f9b5 	bl	9002d914 <memset>
9002d5aa:	4b0d      	ldr	r3, [pc, #52]	@ (9002d5e0 <std+0x58>)
9002d5ac:	6263      	str	r3, [r4, #36]	@ 0x24
9002d5ae:	4b0d      	ldr	r3, [pc, #52]	@ (9002d5e4 <std+0x5c>)
9002d5b0:	62a3      	str	r3, [r4, #40]	@ 0x28
9002d5b2:	4b0d      	ldr	r3, [pc, #52]	@ (9002d5e8 <std+0x60>)
9002d5b4:	62e3      	str	r3, [r4, #44]	@ 0x2c
9002d5b6:	4b0d      	ldr	r3, [pc, #52]	@ (9002d5ec <std+0x64>)
9002d5b8:	6323      	str	r3, [r4, #48]	@ 0x30
9002d5ba:	4b0d      	ldr	r3, [pc, #52]	@ (9002d5f0 <std+0x68>)
9002d5bc:	6224      	str	r4, [r4, #32]
9002d5be:	429c      	cmp	r4, r3
9002d5c0:	d006      	beq.n	9002d5d0 <std+0x48>
9002d5c2:	f103 0268 	add.w	r2, r3, #104	@ 0x68
9002d5c6:	4294      	cmp	r4, r2
9002d5c8:	d002      	beq.n	9002d5d0 <std+0x48>
9002d5ca:	33d0      	adds	r3, #208	@ 0xd0
9002d5cc:	429c      	cmp	r4, r3
9002d5ce:	d105      	bne.n	9002d5dc <std+0x54>
9002d5d0:	f104 0058 	add.w	r0, r4, #88	@ 0x58
9002d5d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002d5d8:	f000 bae6 	b.w	9002dba8 <__retarget_lock_init_recursive>
9002d5dc:	bd10      	pop	{r4, pc}
9002d5de:	bf00      	nop
9002d5e0:	9002d731 	.word	0x9002d731
9002d5e4:	9002d753 	.word	0x9002d753
9002d5e8:	9002d78b 	.word	0x9002d78b
9002d5ec:	9002d7af 	.word	0x9002d7af
9002d5f0:	24022670 	.word	0x24022670

9002d5f4 <stdio_exit_handler>:
9002d5f4:	4a02      	ldr	r2, [pc, #8]	@ (9002d600 <stdio_exit_handler+0xc>)
9002d5f6:	4903      	ldr	r1, [pc, #12]	@ (9002d604 <stdio_exit_handler+0x10>)
9002d5f8:	4803      	ldr	r0, [pc, #12]	@ (9002d608 <stdio_exit_handler+0x14>)
9002d5fa:	f000 b87b 	b.w	9002d6f4 <_fwalk_sglue>
9002d5fe:	bf00      	nop
9002d600:	24000108 	.word	0x24000108
9002d604:	9002e3bd 	.word	0x9002e3bd
9002d608:	24000118 	.word	0x24000118

9002d60c <cleanup_stdio>:
9002d60c:	6841      	ldr	r1, [r0, #4]
9002d60e:	4b0c      	ldr	r3, [pc, #48]	@ (9002d640 <cleanup_stdio+0x34>)
9002d610:	4299      	cmp	r1, r3
9002d612:	b510      	push	{r4, lr}
9002d614:	4604      	mov	r4, r0
9002d616:	d001      	beq.n	9002d61c <cleanup_stdio+0x10>
9002d618:	f000 fed0 	bl	9002e3bc <_fflush_r>
9002d61c:	68a1      	ldr	r1, [r4, #8]
9002d61e:	4b09      	ldr	r3, [pc, #36]	@ (9002d644 <cleanup_stdio+0x38>)
9002d620:	4299      	cmp	r1, r3
9002d622:	d002      	beq.n	9002d62a <cleanup_stdio+0x1e>
9002d624:	4620      	mov	r0, r4
9002d626:	f000 fec9 	bl	9002e3bc <_fflush_r>
9002d62a:	68e1      	ldr	r1, [r4, #12]
9002d62c:	4b06      	ldr	r3, [pc, #24]	@ (9002d648 <cleanup_stdio+0x3c>)
9002d62e:	4299      	cmp	r1, r3
9002d630:	d004      	beq.n	9002d63c <cleanup_stdio+0x30>
9002d632:	4620      	mov	r0, r4
9002d634:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002d638:	f000 bec0 	b.w	9002e3bc <_fflush_r>
9002d63c:	bd10      	pop	{r4, pc}
9002d63e:	bf00      	nop
9002d640:	24022670 	.word	0x24022670
9002d644:	240226d8 	.word	0x240226d8
9002d648:	24022740 	.word	0x24022740

9002d64c <global_stdio_init.part.0>:
9002d64c:	b510      	push	{r4, lr}
9002d64e:	4b0b      	ldr	r3, [pc, #44]	@ (9002d67c <global_stdio_init.part.0+0x30>)
9002d650:	4c0b      	ldr	r4, [pc, #44]	@ (9002d680 <global_stdio_init.part.0+0x34>)
9002d652:	4a0c      	ldr	r2, [pc, #48]	@ (9002d684 <global_stdio_init.part.0+0x38>)
9002d654:	601a      	str	r2, [r3, #0]
9002d656:	4620      	mov	r0, r4
9002d658:	2200      	movs	r2, #0
9002d65a:	2104      	movs	r1, #4
9002d65c:	f7ff ff94 	bl	9002d588 <std>
9002d660:	f104 0068 	add.w	r0, r4, #104	@ 0x68
9002d664:	2201      	movs	r2, #1
9002d666:	2109      	movs	r1, #9
9002d668:	f7ff ff8e 	bl	9002d588 <std>
9002d66c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
9002d670:	2202      	movs	r2, #2
9002d672:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002d676:	2112      	movs	r1, #18
9002d678:	f7ff bf86 	b.w	9002d588 <std>
9002d67c:	240227a8 	.word	0x240227a8
9002d680:	24022670 	.word	0x24022670
9002d684:	9002d5f5 	.word	0x9002d5f5

9002d688 <__sfp_lock_acquire>:
9002d688:	4801      	ldr	r0, [pc, #4]	@ (9002d690 <__sfp_lock_acquire+0x8>)
9002d68a:	f000 ba8e 	b.w	9002dbaa <__retarget_lock_acquire_recursive>
9002d68e:	bf00      	nop
9002d690:	240227b2 	.word	0x240227b2

9002d694 <__sfp_lock_release>:
9002d694:	4801      	ldr	r0, [pc, #4]	@ (9002d69c <__sfp_lock_release+0x8>)
9002d696:	f000 ba89 	b.w	9002dbac <__retarget_lock_release_recursive>
9002d69a:	bf00      	nop
9002d69c:	240227b2 	.word	0x240227b2

9002d6a0 <__sinit>:
9002d6a0:	b510      	push	{r4, lr}
9002d6a2:	4604      	mov	r4, r0
9002d6a4:	f7ff fff0 	bl	9002d688 <__sfp_lock_acquire>
9002d6a8:	6a23      	ldr	r3, [r4, #32]
9002d6aa:	b11b      	cbz	r3, 9002d6b4 <__sinit+0x14>
9002d6ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002d6b0:	f7ff bff0 	b.w	9002d694 <__sfp_lock_release>
9002d6b4:	4b04      	ldr	r3, [pc, #16]	@ (9002d6c8 <__sinit+0x28>)
9002d6b6:	6223      	str	r3, [r4, #32]
9002d6b8:	4b04      	ldr	r3, [pc, #16]	@ (9002d6cc <__sinit+0x2c>)
9002d6ba:	681b      	ldr	r3, [r3, #0]
9002d6bc:	2b00      	cmp	r3, #0
9002d6be:	d1f5      	bne.n	9002d6ac <__sinit+0xc>
9002d6c0:	f7ff ffc4 	bl	9002d64c <global_stdio_init.part.0>
9002d6c4:	e7f2      	b.n	9002d6ac <__sinit+0xc>
9002d6c6:	bf00      	nop
9002d6c8:	9002d60d 	.word	0x9002d60d
9002d6cc:	240227a8 	.word	0x240227a8

9002d6d0 <fiprintf>:
9002d6d0:	b40e      	push	{r1, r2, r3}
9002d6d2:	b503      	push	{r0, r1, lr}
9002d6d4:	4601      	mov	r1, r0
9002d6d6:	ab03      	add	r3, sp, #12
9002d6d8:	4805      	ldr	r0, [pc, #20]	@ (9002d6f0 <fiprintf+0x20>)
9002d6da:	f853 2b04 	ldr.w	r2, [r3], #4
9002d6de:	6800      	ldr	r0, [r0, #0]
9002d6e0:	9301      	str	r3, [sp, #4]
9002d6e2:	f000 fb43 	bl	9002dd6c <_vfiprintf_r>
9002d6e6:	b002      	add	sp, #8
9002d6e8:	f85d eb04 	ldr.w	lr, [sp], #4
9002d6ec:	b003      	add	sp, #12
9002d6ee:	4770      	bx	lr
9002d6f0:	24000114 	.word	0x24000114

9002d6f4 <_fwalk_sglue>:
9002d6f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002d6f8:	4607      	mov	r7, r0
9002d6fa:	4688      	mov	r8, r1
9002d6fc:	4614      	mov	r4, r2
9002d6fe:	2600      	movs	r6, #0
9002d700:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
9002d704:	f1b9 0901 	subs.w	r9, r9, #1
9002d708:	d505      	bpl.n	9002d716 <_fwalk_sglue+0x22>
9002d70a:	6824      	ldr	r4, [r4, #0]
9002d70c:	2c00      	cmp	r4, #0
9002d70e:	d1f7      	bne.n	9002d700 <_fwalk_sglue+0xc>
9002d710:	4630      	mov	r0, r6
9002d712:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002d716:	89ab      	ldrh	r3, [r5, #12]
9002d718:	2b01      	cmp	r3, #1
9002d71a:	d907      	bls.n	9002d72c <_fwalk_sglue+0x38>
9002d71c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
9002d720:	3301      	adds	r3, #1
9002d722:	d003      	beq.n	9002d72c <_fwalk_sglue+0x38>
9002d724:	4629      	mov	r1, r5
9002d726:	4638      	mov	r0, r7
9002d728:	47c0      	blx	r8
9002d72a:	4306      	orrs	r6, r0
9002d72c:	3568      	adds	r5, #104	@ 0x68
9002d72e:	e7e9      	b.n	9002d704 <_fwalk_sglue+0x10>

9002d730 <__sread>:
9002d730:	b510      	push	{r4, lr}
9002d732:	460c      	mov	r4, r1
9002d734:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002d738:	f000 f9c4 	bl	9002dac4 <_read_r>
9002d73c:	2800      	cmp	r0, #0
9002d73e:	bfab      	itete	ge
9002d740:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
9002d742:	89a3      	ldrhlt	r3, [r4, #12]
9002d744:	181b      	addge	r3, r3, r0
9002d746:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
9002d74a:	bfac      	ite	ge
9002d74c:	6563      	strge	r3, [r4, #84]	@ 0x54
9002d74e:	81a3      	strhlt	r3, [r4, #12]
9002d750:	bd10      	pop	{r4, pc}

9002d752 <__swrite>:
9002d752:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002d756:	461f      	mov	r7, r3
9002d758:	898b      	ldrh	r3, [r1, #12]
9002d75a:	05db      	lsls	r3, r3, #23
9002d75c:	4605      	mov	r5, r0
9002d75e:	460c      	mov	r4, r1
9002d760:	4616      	mov	r6, r2
9002d762:	d505      	bpl.n	9002d770 <__swrite+0x1e>
9002d764:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002d768:	2302      	movs	r3, #2
9002d76a:	2200      	movs	r2, #0
9002d76c:	f000 f998 	bl	9002daa0 <_lseek_r>
9002d770:	89a3      	ldrh	r3, [r4, #12]
9002d772:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002d776:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9002d77a:	81a3      	strh	r3, [r4, #12]
9002d77c:	4632      	mov	r2, r6
9002d77e:	463b      	mov	r3, r7
9002d780:	4628      	mov	r0, r5
9002d782:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
9002d786:	f000 b9d3 	b.w	9002db30 <_write_r>

9002d78a <__sseek>:
9002d78a:	b510      	push	{r4, lr}
9002d78c:	460c      	mov	r4, r1
9002d78e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002d792:	f000 f985 	bl	9002daa0 <_lseek_r>
9002d796:	1c43      	adds	r3, r0, #1
9002d798:	89a3      	ldrh	r3, [r4, #12]
9002d79a:	bf15      	itete	ne
9002d79c:	6560      	strne	r0, [r4, #84]	@ 0x54
9002d79e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
9002d7a2:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
9002d7a6:	81a3      	strheq	r3, [r4, #12]
9002d7a8:	bf18      	it	ne
9002d7aa:	81a3      	strhne	r3, [r4, #12]
9002d7ac:	bd10      	pop	{r4, pc}

9002d7ae <__sclose>:
9002d7ae:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002d7b2:	f000 b907 	b.w	9002d9c4 <_close_r>

9002d7b6 <__swbuf_r>:
9002d7b6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002d7b8:	460e      	mov	r6, r1
9002d7ba:	4614      	mov	r4, r2
9002d7bc:	4605      	mov	r5, r0
9002d7be:	b118      	cbz	r0, 9002d7c8 <__swbuf_r+0x12>
9002d7c0:	6a03      	ldr	r3, [r0, #32]
9002d7c2:	b90b      	cbnz	r3, 9002d7c8 <__swbuf_r+0x12>
9002d7c4:	f7ff ff6c 	bl	9002d6a0 <__sinit>
9002d7c8:	69a3      	ldr	r3, [r4, #24]
9002d7ca:	60a3      	str	r3, [r4, #8]
9002d7cc:	89a3      	ldrh	r3, [r4, #12]
9002d7ce:	071a      	lsls	r2, r3, #28
9002d7d0:	d501      	bpl.n	9002d7d6 <__swbuf_r+0x20>
9002d7d2:	6923      	ldr	r3, [r4, #16]
9002d7d4:	b943      	cbnz	r3, 9002d7e8 <__swbuf_r+0x32>
9002d7d6:	4621      	mov	r1, r4
9002d7d8:	4628      	mov	r0, r5
9002d7da:	f000 f82b 	bl	9002d834 <__swsetup_r>
9002d7de:	b118      	cbz	r0, 9002d7e8 <__swbuf_r+0x32>
9002d7e0:	f04f 37ff 	mov.w	r7, #4294967295
9002d7e4:	4638      	mov	r0, r7
9002d7e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9002d7e8:	6823      	ldr	r3, [r4, #0]
9002d7ea:	6922      	ldr	r2, [r4, #16]
9002d7ec:	1a98      	subs	r0, r3, r2
9002d7ee:	6963      	ldr	r3, [r4, #20]
9002d7f0:	b2f6      	uxtb	r6, r6
9002d7f2:	4283      	cmp	r3, r0
9002d7f4:	4637      	mov	r7, r6
9002d7f6:	dc05      	bgt.n	9002d804 <__swbuf_r+0x4e>
9002d7f8:	4621      	mov	r1, r4
9002d7fa:	4628      	mov	r0, r5
9002d7fc:	f000 fdde 	bl	9002e3bc <_fflush_r>
9002d800:	2800      	cmp	r0, #0
9002d802:	d1ed      	bne.n	9002d7e0 <__swbuf_r+0x2a>
9002d804:	68a3      	ldr	r3, [r4, #8]
9002d806:	3b01      	subs	r3, #1
9002d808:	60a3      	str	r3, [r4, #8]
9002d80a:	6823      	ldr	r3, [r4, #0]
9002d80c:	1c5a      	adds	r2, r3, #1
9002d80e:	6022      	str	r2, [r4, #0]
9002d810:	701e      	strb	r6, [r3, #0]
9002d812:	6962      	ldr	r2, [r4, #20]
9002d814:	1c43      	adds	r3, r0, #1
9002d816:	429a      	cmp	r2, r3
9002d818:	d004      	beq.n	9002d824 <__swbuf_r+0x6e>
9002d81a:	89a3      	ldrh	r3, [r4, #12]
9002d81c:	07db      	lsls	r3, r3, #31
9002d81e:	d5e1      	bpl.n	9002d7e4 <__swbuf_r+0x2e>
9002d820:	2e0a      	cmp	r6, #10
9002d822:	d1df      	bne.n	9002d7e4 <__swbuf_r+0x2e>
9002d824:	4621      	mov	r1, r4
9002d826:	4628      	mov	r0, r5
9002d828:	f000 fdc8 	bl	9002e3bc <_fflush_r>
9002d82c:	2800      	cmp	r0, #0
9002d82e:	d0d9      	beq.n	9002d7e4 <__swbuf_r+0x2e>
9002d830:	e7d6      	b.n	9002d7e0 <__swbuf_r+0x2a>
	...

9002d834 <__swsetup_r>:
9002d834:	b538      	push	{r3, r4, r5, lr}
9002d836:	4b29      	ldr	r3, [pc, #164]	@ (9002d8dc <__swsetup_r+0xa8>)
9002d838:	4605      	mov	r5, r0
9002d83a:	6818      	ldr	r0, [r3, #0]
9002d83c:	460c      	mov	r4, r1
9002d83e:	b118      	cbz	r0, 9002d848 <__swsetup_r+0x14>
9002d840:	6a03      	ldr	r3, [r0, #32]
9002d842:	b90b      	cbnz	r3, 9002d848 <__swsetup_r+0x14>
9002d844:	f7ff ff2c 	bl	9002d6a0 <__sinit>
9002d848:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002d84c:	0719      	lsls	r1, r3, #28
9002d84e:	d422      	bmi.n	9002d896 <__swsetup_r+0x62>
9002d850:	06da      	lsls	r2, r3, #27
9002d852:	d407      	bmi.n	9002d864 <__swsetup_r+0x30>
9002d854:	2209      	movs	r2, #9
9002d856:	602a      	str	r2, [r5, #0]
9002d858:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002d85c:	81a3      	strh	r3, [r4, #12]
9002d85e:	f04f 30ff 	mov.w	r0, #4294967295
9002d862:	e033      	b.n	9002d8cc <__swsetup_r+0x98>
9002d864:	0758      	lsls	r0, r3, #29
9002d866:	d512      	bpl.n	9002d88e <__swsetup_r+0x5a>
9002d868:	6b61      	ldr	r1, [r4, #52]	@ 0x34
9002d86a:	b141      	cbz	r1, 9002d87e <__swsetup_r+0x4a>
9002d86c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
9002d870:	4299      	cmp	r1, r3
9002d872:	d002      	beq.n	9002d87a <__swsetup_r+0x46>
9002d874:	4628      	mov	r0, r5
9002d876:	f000 fa05 	bl	9002dc84 <_free_r>
9002d87a:	2300      	movs	r3, #0
9002d87c:	6363      	str	r3, [r4, #52]	@ 0x34
9002d87e:	89a3      	ldrh	r3, [r4, #12]
9002d880:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
9002d884:	81a3      	strh	r3, [r4, #12]
9002d886:	2300      	movs	r3, #0
9002d888:	6063      	str	r3, [r4, #4]
9002d88a:	6923      	ldr	r3, [r4, #16]
9002d88c:	6023      	str	r3, [r4, #0]
9002d88e:	89a3      	ldrh	r3, [r4, #12]
9002d890:	f043 0308 	orr.w	r3, r3, #8
9002d894:	81a3      	strh	r3, [r4, #12]
9002d896:	6923      	ldr	r3, [r4, #16]
9002d898:	b94b      	cbnz	r3, 9002d8ae <__swsetup_r+0x7a>
9002d89a:	89a3      	ldrh	r3, [r4, #12]
9002d89c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
9002d8a0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
9002d8a4:	d003      	beq.n	9002d8ae <__swsetup_r+0x7a>
9002d8a6:	4621      	mov	r1, r4
9002d8a8:	4628      	mov	r0, r5
9002d8aa:	f000 fdd5 	bl	9002e458 <__smakebuf_r>
9002d8ae:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002d8b2:	f013 0201 	ands.w	r2, r3, #1
9002d8b6:	d00a      	beq.n	9002d8ce <__swsetup_r+0x9a>
9002d8b8:	2200      	movs	r2, #0
9002d8ba:	60a2      	str	r2, [r4, #8]
9002d8bc:	6962      	ldr	r2, [r4, #20]
9002d8be:	4252      	negs	r2, r2
9002d8c0:	61a2      	str	r2, [r4, #24]
9002d8c2:	6922      	ldr	r2, [r4, #16]
9002d8c4:	b942      	cbnz	r2, 9002d8d8 <__swsetup_r+0xa4>
9002d8c6:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
9002d8ca:	d1c5      	bne.n	9002d858 <__swsetup_r+0x24>
9002d8cc:	bd38      	pop	{r3, r4, r5, pc}
9002d8ce:	0799      	lsls	r1, r3, #30
9002d8d0:	bf58      	it	pl
9002d8d2:	6962      	ldrpl	r2, [r4, #20]
9002d8d4:	60a2      	str	r2, [r4, #8]
9002d8d6:	e7f4      	b.n	9002d8c2 <__swsetup_r+0x8e>
9002d8d8:	2000      	movs	r0, #0
9002d8da:	e7f7      	b.n	9002d8cc <__swsetup_r+0x98>
9002d8dc:	24000114 	.word	0x24000114

9002d8e0 <memmove>:
9002d8e0:	4288      	cmp	r0, r1
9002d8e2:	b510      	push	{r4, lr}
9002d8e4:	eb01 0402 	add.w	r4, r1, r2
9002d8e8:	d902      	bls.n	9002d8f0 <memmove+0x10>
9002d8ea:	4284      	cmp	r4, r0
9002d8ec:	4623      	mov	r3, r4
9002d8ee:	d807      	bhi.n	9002d900 <memmove+0x20>
9002d8f0:	1e43      	subs	r3, r0, #1
9002d8f2:	42a1      	cmp	r1, r4
9002d8f4:	d008      	beq.n	9002d908 <memmove+0x28>
9002d8f6:	f811 2b01 	ldrb.w	r2, [r1], #1
9002d8fa:	f803 2f01 	strb.w	r2, [r3, #1]!
9002d8fe:	e7f8      	b.n	9002d8f2 <memmove+0x12>
9002d900:	4402      	add	r2, r0
9002d902:	4601      	mov	r1, r0
9002d904:	428a      	cmp	r2, r1
9002d906:	d100      	bne.n	9002d90a <memmove+0x2a>
9002d908:	bd10      	pop	{r4, pc}
9002d90a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
9002d90e:	f802 4d01 	strb.w	r4, [r2, #-1]!
9002d912:	e7f7      	b.n	9002d904 <memmove+0x24>

9002d914 <memset>:
9002d914:	4402      	add	r2, r0
9002d916:	4603      	mov	r3, r0
9002d918:	4293      	cmp	r3, r2
9002d91a:	d100      	bne.n	9002d91e <memset+0xa>
9002d91c:	4770      	bx	lr
9002d91e:	f803 1b01 	strb.w	r1, [r3], #1
9002d922:	e7f9      	b.n	9002d918 <memset+0x4>

9002d924 <strchr>:
9002d924:	b2c9      	uxtb	r1, r1
9002d926:	4603      	mov	r3, r0
9002d928:	4618      	mov	r0, r3
9002d92a:	f813 2b01 	ldrb.w	r2, [r3], #1
9002d92e:	b112      	cbz	r2, 9002d936 <strchr+0x12>
9002d930:	428a      	cmp	r2, r1
9002d932:	d1f9      	bne.n	9002d928 <strchr+0x4>
9002d934:	4770      	bx	lr
9002d936:	2900      	cmp	r1, #0
9002d938:	bf18      	it	ne
9002d93a:	2000      	movne	r0, #0
9002d93c:	4770      	bx	lr

9002d93e <strncmp>:
9002d93e:	b510      	push	{r4, lr}
9002d940:	b16a      	cbz	r2, 9002d95e <strncmp+0x20>
9002d942:	3901      	subs	r1, #1
9002d944:	1884      	adds	r4, r0, r2
9002d946:	f810 2b01 	ldrb.w	r2, [r0], #1
9002d94a:	f811 3f01 	ldrb.w	r3, [r1, #1]!
9002d94e:	429a      	cmp	r2, r3
9002d950:	d103      	bne.n	9002d95a <strncmp+0x1c>
9002d952:	42a0      	cmp	r0, r4
9002d954:	d001      	beq.n	9002d95a <strncmp+0x1c>
9002d956:	2a00      	cmp	r2, #0
9002d958:	d1f5      	bne.n	9002d946 <strncmp+0x8>
9002d95a:	1ad0      	subs	r0, r2, r3
9002d95c:	bd10      	pop	{r4, pc}
9002d95e:	4610      	mov	r0, r2
9002d960:	e7fc      	b.n	9002d95c <strncmp+0x1e>

9002d962 <_raise_r>:
9002d962:	291f      	cmp	r1, #31
9002d964:	b538      	push	{r3, r4, r5, lr}
9002d966:	4605      	mov	r5, r0
9002d968:	460c      	mov	r4, r1
9002d96a:	d904      	bls.n	9002d976 <_raise_r+0x14>
9002d96c:	2316      	movs	r3, #22
9002d96e:	6003      	str	r3, [r0, #0]
9002d970:	f04f 30ff 	mov.w	r0, #4294967295
9002d974:	bd38      	pop	{r3, r4, r5, pc}
9002d976:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
9002d978:	b112      	cbz	r2, 9002d980 <_raise_r+0x1e>
9002d97a:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
9002d97e:	b94b      	cbnz	r3, 9002d994 <_raise_r+0x32>
9002d980:	4628      	mov	r0, r5
9002d982:	f000 f8c3 	bl	9002db0c <_getpid_r>
9002d986:	4622      	mov	r2, r4
9002d988:	4601      	mov	r1, r0
9002d98a:	4628      	mov	r0, r5
9002d98c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002d990:	f000 b8aa 	b.w	9002dae8 <_kill_r>
9002d994:	2b01      	cmp	r3, #1
9002d996:	d00a      	beq.n	9002d9ae <_raise_r+0x4c>
9002d998:	1c59      	adds	r1, r3, #1
9002d99a:	d103      	bne.n	9002d9a4 <_raise_r+0x42>
9002d99c:	2316      	movs	r3, #22
9002d99e:	6003      	str	r3, [r0, #0]
9002d9a0:	2001      	movs	r0, #1
9002d9a2:	e7e7      	b.n	9002d974 <_raise_r+0x12>
9002d9a4:	2100      	movs	r1, #0
9002d9a6:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
9002d9aa:	4620      	mov	r0, r4
9002d9ac:	4798      	blx	r3
9002d9ae:	2000      	movs	r0, #0
9002d9b0:	e7e0      	b.n	9002d974 <_raise_r+0x12>
	...

9002d9b4 <raise>:
9002d9b4:	4b02      	ldr	r3, [pc, #8]	@ (9002d9c0 <raise+0xc>)
9002d9b6:	4601      	mov	r1, r0
9002d9b8:	6818      	ldr	r0, [r3, #0]
9002d9ba:	f7ff bfd2 	b.w	9002d962 <_raise_r>
9002d9be:	bf00      	nop
9002d9c0:	24000114 	.word	0x24000114

9002d9c4 <_close_r>:
9002d9c4:	b538      	push	{r3, r4, r5, lr}
9002d9c6:	4d06      	ldr	r5, [pc, #24]	@ (9002d9e0 <_close_r+0x1c>)
9002d9c8:	2300      	movs	r3, #0
9002d9ca:	4604      	mov	r4, r0
9002d9cc:	4608      	mov	r0, r1
9002d9ce:	602b      	str	r3, [r5, #0]
9002d9d0:	f7d6 ff20 	bl	90004814 <_close>
9002d9d4:	1c43      	adds	r3, r0, #1
9002d9d6:	d102      	bne.n	9002d9de <_close_r+0x1a>
9002d9d8:	682b      	ldr	r3, [r5, #0]
9002d9da:	b103      	cbz	r3, 9002d9de <_close_r+0x1a>
9002d9dc:	6023      	str	r3, [r4, #0]
9002d9de:	bd38      	pop	{r3, r4, r5, pc}
9002d9e0:	240227ac 	.word	0x240227ac

9002d9e4 <_reclaim_reent>:
9002d9e4:	4b2d      	ldr	r3, [pc, #180]	@ (9002da9c <_reclaim_reent+0xb8>)
9002d9e6:	681b      	ldr	r3, [r3, #0]
9002d9e8:	4283      	cmp	r3, r0
9002d9ea:	b570      	push	{r4, r5, r6, lr}
9002d9ec:	4604      	mov	r4, r0
9002d9ee:	d053      	beq.n	9002da98 <_reclaim_reent+0xb4>
9002d9f0:	69c3      	ldr	r3, [r0, #28]
9002d9f2:	b31b      	cbz	r3, 9002da3c <_reclaim_reent+0x58>
9002d9f4:	68db      	ldr	r3, [r3, #12]
9002d9f6:	b163      	cbz	r3, 9002da12 <_reclaim_reent+0x2e>
9002d9f8:	2500      	movs	r5, #0
9002d9fa:	69e3      	ldr	r3, [r4, #28]
9002d9fc:	68db      	ldr	r3, [r3, #12]
9002d9fe:	5959      	ldr	r1, [r3, r5]
9002da00:	b9b1      	cbnz	r1, 9002da30 <_reclaim_reent+0x4c>
9002da02:	3504      	adds	r5, #4
9002da04:	2d80      	cmp	r5, #128	@ 0x80
9002da06:	d1f8      	bne.n	9002d9fa <_reclaim_reent+0x16>
9002da08:	69e3      	ldr	r3, [r4, #28]
9002da0a:	4620      	mov	r0, r4
9002da0c:	68d9      	ldr	r1, [r3, #12]
9002da0e:	f000 f939 	bl	9002dc84 <_free_r>
9002da12:	69e3      	ldr	r3, [r4, #28]
9002da14:	6819      	ldr	r1, [r3, #0]
9002da16:	b111      	cbz	r1, 9002da1e <_reclaim_reent+0x3a>
9002da18:	4620      	mov	r0, r4
9002da1a:	f000 f933 	bl	9002dc84 <_free_r>
9002da1e:	69e3      	ldr	r3, [r4, #28]
9002da20:	689d      	ldr	r5, [r3, #8]
9002da22:	b15d      	cbz	r5, 9002da3c <_reclaim_reent+0x58>
9002da24:	4629      	mov	r1, r5
9002da26:	4620      	mov	r0, r4
9002da28:	682d      	ldr	r5, [r5, #0]
9002da2a:	f000 f92b 	bl	9002dc84 <_free_r>
9002da2e:	e7f8      	b.n	9002da22 <_reclaim_reent+0x3e>
9002da30:	680e      	ldr	r6, [r1, #0]
9002da32:	4620      	mov	r0, r4
9002da34:	f000 f926 	bl	9002dc84 <_free_r>
9002da38:	4631      	mov	r1, r6
9002da3a:	e7e1      	b.n	9002da00 <_reclaim_reent+0x1c>
9002da3c:	6961      	ldr	r1, [r4, #20]
9002da3e:	b111      	cbz	r1, 9002da46 <_reclaim_reent+0x62>
9002da40:	4620      	mov	r0, r4
9002da42:	f000 f91f 	bl	9002dc84 <_free_r>
9002da46:	69e1      	ldr	r1, [r4, #28]
9002da48:	b111      	cbz	r1, 9002da50 <_reclaim_reent+0x6c>
9002da4a:	4620      	mov	r0, r4
9002da4c:	f000 f91a 	bl	9002dc84 <_free_r>
9002da50:	6b21      	ldr	r1, [r4, #48]	@ 0x30
9002da52:	b111      	cbz	r1, 9002da5a <_reclaim_reent+0x76>
9002da54:	4620      	mov	r0, r4
9002da56:	f000 f915 	bl	9002dc84 <_free_r>
9002da5a:	6b61      	ldr	r1, [r4, #52]	@ 0x34
9002da5c:	b111      	cbz	r1, 9002da64 <_reclaim_reent+0x80>
9002da5e:	4620      	mov	r0, r4
9002da60:	f000 f910 	bl	9002dc84 <_free_r>
9002da64:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
9002da66:	b111      	cbz	r1, 9002da6e <_reclaim_reent+0x8a>
9002da68:	4620      	mov	r0, r4
9002da6a:	f000 f90b 	bl	9002dc84 <_free_r>
9002da6e:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9002da70:	b111      	cbz	r1, 9002da78 <_reclaim_reent+0x94>
9002da72:	4620      	mov	r0, r4
9002da74:	f000 f906 	bl	9002dc84 <_free_r>
9002da78:	6c61      	ldr	r1, [r4, #68]	@ 0x44
9002da7a:	b111      	cbz	r1, 9002da82 <_reclaim_reent+0x9e>
9002da7c:	4620      	mov	r0, r4
9002da7e:	f000 f901 	bl	9002dc84 <_free_r>
9002da82:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
9002da84:	b111      	cbz	r1, 9002da8c <_reclaim_reent+0xa8>
9002da86:	4620      	mov	r0, r4
9002da88:	f000 f8fc 	bl	9002dc84 <_free_r>
9002da8c:	6a23      	ldr	r3, [r4, #32]
9002da8e:	b11b      	cbz	r3, 9002da98 <_reclaim_reent+0xb4>
9002da90:	4620      	mov	r0, r4
9002da92:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9002da96:	4718      	bx	r3
9002da98:	bd70      	pop	{r4, r5, r6, pc}
9002da9a:	bf00      	nop
9002da9c:	24000114 	.word	0x24000114

9002daa0 <_lseek_r>:
9002daa0:	b538      	push	{r3, r4, r5, lr}
9002daa2:	4d07      	ldr	r5, [pc, #28]	@ (9002dac0 <_lseek_r+0x20>)
9002daa4:	4604      	mov	r4, r0
9002daa6:	4608      	mov	r0, r1
9002daa8:	4611      	mov	r1, r2
9002daaa:	2200      	movs	r2, #0
9002daac:	602a      	str	r2, [r5, #0]
9002daae:	461a      	mov	r2, r3
9002dab0:	f7d6 febc 	bl	9000482c <_lseek>
9002dab4:	1c43      	adds	r3, r0, #1
9002dab6:	d102      	bne.n	9002dabe <_lseek_r+0x1e>
9002dab8:	682b      	ldr	r3, [r5, #0]
9002daba:	b103      	cbz	r3, 9002dabe <_lseek_r+0x1e>
9002dabc:	6023      	str	r3, [r4, #0]
9002dabe:	bd38      	pop	{r3, r4, r5, pc}
9002dac0:	240227ac 	.word	0x240227ac

9002dac4 <_read_r>:
9002dac4:	b538      	push	{r3, r4, r5, lr}
9002dac6:	4d07      	ldr	r5, [pc, #28]	@ (9002dae4 <_read_r+0x20>)
9002dac8:	4604      	mov	r4, r0
9002daca:	4608      	mov	r0, r1
9002dacc:	4611      	mov	r1, r2
9002dace:	2200      	movs	r2, #0
9002dad0:	602a      	str	r2, [r5, #0]
9002dad2:	461a      	mov	r2, r3
9002dad4:	f7d6 fe82 	bl	900047dc <_read>
9002dad8:	1c43      	adds	r3, r0, #1
9002dada:	d102      	bne.n	9002dae2 <_read_r+0x1e>
9002dadc:	682b      	ldr	r3, [r5, #0]
9002dade:	b103      	cbz	r3, 9002dae2 <_read_r+0x1e>
9002dae0:	6023      	str	r3, [r4, #0]
9002dae2:	bd38      	pop	{r3, r4, r5, pc}
9002dae4:	240227ac 	.word	0x240227ac

9002dae8 <_kill_r>:
9002dae8:	b538      	push	{r3, r4, r5, lr}
9002daea:	4d07      	ldr	r5, [pc, #28]	@ (9002db08 <_kill_r+0x20>)
9002daec:	2300      	movs	r3, #0
9002daee:	4604      	mov	r4, r0
9002daf0:	4608      	mov	r0, r1
9002daf2:	4611      	mov	r1, r2
9002daf4:	602b      	str	r3, [r5, #0]
9002daf6:	f7d6 fe61 	bl	900047bc <_kill>
9002dafa:	1c43      	adds	r3, r0, #1
9002dafc:	d102      	bne.n	9002db04 <_kill_r+0x1c>
9002dafe:	682b      	ldr	r3, [r5, #0]
9002db00:	b103      	cbz	r3, 9002db04 <_kill_r+0x1c>
9002db02:	6023      	str	r3, [r4, #0]
9002db04:	bd38      	pop	{r3, r4, r5, pc}
9002db06:	bf00      	nop
9002db08:	240227ac 	.word	0x240227ac

9002db0c <_getpid_r>:
9002db0c:	f7d6 be54 	b.w	900047b8 <_getpid>

9002db10 <_sbrk_r>:
9002db10:	b538      	push	{r3, r4, r5, lr}
9002db12:	4d06      	ldr	r5, [pc, #24]	@ (9002db2c <_sbrk_r+0x1c>)
9002db14:	2300      	movs	r3, #0
9002db16:	4604      	mov	r4, r0
9002db18:	4608      	mov	r0, r1
9002db1a:	602b      	str	r3, [r5, #0]
9002db1c:	f7d6 fe88 	bl	90004830 <_sbrk>
9002db20:	1c43      	adds	r3, r0, #1
9002db22:	d102      	bne.n	9002db2a <_sbrk_r+0x1a>
9002db24:	682b      	ldr	r3, [r5, #0]
9002db26:	b103      	cbz	r3, 9002db2a <_sbrk_r+0x1a>
9002db28:	6023      	str	r3, [r4, #0]
9002db2a:	bd38      	pop	{r3, r4, r5, pc}
9002db2c:	240227ac 	.word	0x240227ac

9002db30 <_write_r>:
9002db30:	b538      	push	{r3, r4, r5, lr}
9002db32:	4d07      	ldr	r5, [pc, #28]	@ (9002db50 <_write_r+0x20>)
9002db34:	4604      	mov	r4, r0
9002db36:	4608      	mov	r0, r1
9002db38:	4611      	mov	r1, r2
9002db3a:	2200      	movs	r2, #0
9002db3c:	602a      	str	r2, [r5, #0]
9002db3e:	461a      	mov	r2, r3
9002db40:	f7d6 fe5a 	bl	900047f8 <_write>
9002db44:	1c43      	adds	r3, r0, #1
9002db46:	d102      	bne.n	9002db4e <_write_r+0x1e>
9002db48:	682b      	ldr	r3, [r5, #0]
9002db4a:	b103      	cbz	r3, 9002db4e <_write_r+0x1e>
9002db4c:	6023      	str	r3, [r4, #0]
9002db4e:	bd38      	pop	{r3, r4, r5, pc}
9002db50:	240227ac 	.word	0x240227ac

9002db54 <__errno>:
9002db54:	4b01      	ldr	r3, [pc, #4]	@ (9002db5c <__errno+0x8>)
9002db56:	6818      	ldr	r0, [r3, #0]
9002db58:	4770      	bx	lr
9002db5a:	bf00      	nop
9002db5c:	24000114 	.word	0x24000114

9002db60 <__libc_init_array>:
9002db60:	b570      	push	{r4, r5, r6, lr}
9002db62:	4d0d      	ldr	r5, [pc, #52]	@ (9002db98 <__libc_init_array+0x38>)
9002db64:	4c0d      	ldr	r4, [pc, #52]	@ (9002db9c <__libc_init_array+0x3c>)
9002db66:	1b64      	subs	r4, r4, r5
9002db68:	10a4      	asrs	r4, r4, #2
9002db6a:	2600      	movs	r6, #0
9002db6c:	42a6      	cmp	r6, r4
9002db6e:	d109      	bne.n	9002db84 <__libc_init_array+0x24>
9002db70:	4d0b      	ldr	r5, [pc, #44]	@ (9002dba0 <__libc_init_array+0x40>)
9002db72:	4c0c      	ldr	r4, [pc, #48]	@ (9002dba4 <__libc_init_array+0x44>)
9002db74:	f000 fcce 	bl	9002e514 <_init>
9002db78:	1b64      	subs	r4, r4, r5
9002db7a:	10a4      	asrs	r4, r4, #2
9002db7c:	2600      	movs	r6, #0
9002db7e:	42a6      	cmp	r6, r4
9002db80:	d105      	bne.n	9002db8e <__libc_init_array+0x2e>
9002db82:	bd70      	pop	{r4, r5, r6, pc}
9002db84:	f855 3b04 	ldr.w	r3, [r5], #4
9002db88:	4798      	blx	r3
9002db8a:	3601      	adds	r6, #1
9002db8c:	e7ee      	b.n	9002db6c <__libc_init_array+0xc>
9002db8e:	f855 3b04 	ldr.w	r3, [r5], #4
9002db92:	4798      	blx	r3
9002db94:	3601      	adds	r6, #1
9002db96:	e7f2      	b.n	9002db7e <__libc_init_array+0x1e>
9002db98:	90032878 	.word	0x90032878
9002db9c:	90032878 	.word	0x90032878
9002dba0:	90032878 	.word	0x90032878
9002dba4:	90032890 	.word	0x90032890

9002dba8 <__retarget_lock_init_recursive>:
9002dba8:	4770      	bx	lr

9002dbaa <__retarget_lock_acquire_recursive>:
9002dbaa:	4770      	bx	lr

9002dbac <__retarget_lock_release_recursive>:
9002dbac:	4770      	bx	lr

9002dbae <memcpy>:
9002dbae:	440a      	add	r2, r1
9002dbb0:	4291      	cmp	r1, r2
9002dbb2:	f100 33ff 	add.w	r3, r0, #4294967295
9002dbb6:	d100      	bne.n	9002dbba <memcpy+0xc>
9002dbb8:	4770      	bx	lr
9002dbba:	b510      	push	{r4, lr}
9002dbbc:	f811 4b01 	ldrb.w	r4, [r1], #1
9002dbc0:	f803 4f01 	strb.w	r4, [r3, #1]!
9002dbc4:	4291      	cmp	r1, r2
9002dbc6:	d1f9      	bne.n	9002dbbc <memcpy+0xe>
9002dbc8:	bd10      	pop	{r4, pc}
	...

9002dbcc <__register_exitproc>:
9002dbcc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002dbd0:	4d27      	ldr	r5, [pc, #156]	@ (9002dc70 <__register_exitproc+0xa4>)
9002dbd2:	4607      	mov	r7, r0
9002dbd4:	6828      	ldr	r0, [r5, #0]
9002dbd6:	4691      	mov	r9, r2
9002dbd8:	460e      	mov	r6, r1
9002dbda:	4698      	mov	r8, r3
9002dbdc:	f7ff ffe5 	bl	9002dbaa <__retarget_lock_acquire_recursive>
9002dbe0:	4a24      	ldr	r2, [pc, #144]	@ (9002dc74 <__register_exitproc+0xa8>)
9002dbe2:	6814      	ldr	r4, [r2, #0]
9002dbe4:	b93c      	cbnz	r4, 9002dbf6 <__register_exitproc+0x2a>
9002dbe6:	4b24      	ldr	r3, [pc, #144]	@ (9002dc78 <__register_exitproc+0xac>)
9002dbe8:	6013      	str	r3, [r2, #0]
9002dbea:	4a24      	ldr	r2, [pc, #144]	@ (9002dc7c <__register_exitproc+0xb0>)
9002dbec:	b112      	cbz	r2, 9002dbf4 <__register_exitproc+0x28>
9002dbee:	6812      	ldr	r2, [r2, #0]
9002dbf0:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
9002dbf4:	4c20      	ldr	r4, [pc, #128]	@ (9002dc78 <__register_exitproc+0xac>)
9002dbf6:	6863      	ldr	r3, [r4, #4]
9002dbf8:	2b1f      	cmp	r3, #31
9002dbfa:	dd06      	ble.n	9002dc0a <__register_exitproc+0x3e>
9002dbfc:	6828      	ldr	r0, [r5, #0]
9002dbfe:	f7ff ffd5 	bl	9002dbac <__retarget_lock_release_recursive>
9002dc02:	f04f 30ff 	mov.w	r0, #4294967295
9002dc06:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002dc0a:	b32f      	cbz	r7, 9002dc58 <__register_exitproc+0x8c>
9002dc0c:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
9002dc10:	b968      	cbnz	r0, 9002dc2e <__register_exitproc+0x62>
9002dc12:	4b1b      	ldr	r3, [pc, #108]	@ (9002dc80 <__register_exitproc+0xb4>)
9002dc14:	2b00      	cmp	r3, #0
9002dc16:	d0f1      	beq.n	9002dbfc <__register_exitproc+0x30>
9002dc18:	f44f 7084 	mov.w	r0, #264	@ 0x108
9002dc1c:	f7ff fbe8 	bl	9002d3f0 <malloc>
9002dc20:	2800      	cmp	r0, #0
9002dc22:	d0eb      	beq.n	9002dbfc <__register_exitproc+0x30>
9002dc24:	2300      	movs	r3, #0
9002dc26:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
9002dc2a:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
9002dc2e:	6863      	ldr	r3, [r4, #4]
9002dc30:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
9002dc34:	2201      	movs	r2, #1
9002dc36:	409a      	lsls	r2, r3
9002dc38:	eb00 0183 	add.w	r1, r0, r3, lsl #2
9002dc3c:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
9002dc40:	4313      	orrs	r3, r2
9002dc42:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
9002dc46:	2f02      	cmp	r7, #2
9002dc48:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
9002dc4c:	bf02      	ittt	eq
9002dc4e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
9002dc52:	4313      	orreq	r3, r2
9002dc54:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
9002dc58:	6863      	ldr	r3, [r4, #4]
9002dc5a:	6828      	ldr	r0, [r5, #0]
9002dc5c:	1c5a      	adds	r2, r3, #1
9002dc5e:	3302      	adds	r3, #2
9002dc60:	6062      	str	r2, [r4, #4]
9002dc62:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
9002dc66:	f7ff ffa1 	bl	9002dbac <__retarget_lock_release_recursive>
9002dc6a:	2000      	movs	r0, #0
9002dc6c:	e7cb      	b.n	9002dc06 <__register_exitproc+0x3a>
9002dc6e:	bf00      	nop
9002dc70:	24000164 	.word	0x24000164
9002dc74:	24022840 	.word	0x24022840
9002dc78:	240227b4 	.word	0x240227b4
9002dc7c:	900326fc 	.word	0x900326fc
9002dc80:	9002d3f1 	.word	0x9002d3f1

9002dc84 <_free_r>:
9002dc84:	b538      	push	{r3, r4, r5, lr}
9002dc86:	4605      	mov	r5, r0
9002dc88:	2900      	cmp	r1, #0
9002dc8a:	d041      	beq.n	9002dd10 <_free_r+0x8c>
9002dc8c:	f851 3c04 	ldr.w	r3, [r1, #-4]
9002dc90:	1f0c      	subs	r4, r1, #4
9002dc92:	2b00      	cmp	r3, #0
9002dc94:	bfb8      	it	lt
9002dc96:	18e4      	addlt	r4, r4, r3
9002dc98:	f7ff fc5c 	bl	9002d554 <__malloc_lock>
9002dc9c:	4a1d      	ldr	r2, [pc, #116]	@ (9002dd14 <_free_r+0x90>)
9002dc9e:	6813      	ldr	r3, [r2, #0]
9002dca0:	b933      	cbnz	r3, 9002dcb0 <_free_r+0x2c>
9002dca2:	6063      	str	r3, [r4, #4]
9002dca4:	6014      	str	r4, [r2, #0]
9002dca6:	4628      	mov	r0, r5
9002dca8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002dcac:	f7ff bc58 	b.w	9002d560 <__malloc_unlock>
9002dcb0:	42a3      	cmp	r3, r4
9002dcb2:	d908      	bls.n	9002dcc6 <_free_r+0x42>
9002dcb4:	6820      	ldr	r0, [r4, #0]
9002dcb6:	1821      	adds	r1, r4, r0
9002dcb8:	428b      	cmp	r3, r1
9002dcba:	bf01      	itttt	eq
9002dcbc:	6819      	ldreq	r1, [r3, #0]
9002dcbe:	685b      	ldreq	r3, [r3, #4]
9002dcc0:	1809      	addeq	r1, r1, r0
9002dcc2:	6021      	streq	r1, [r4, #0]
9002dcc4:	e7ed      	b.n	9002dca2 <_free_r+0x1e>
9002dcc6:	461a      	mov	r2, r3
9002dcc8:	685b      	ldr	r3, [r3, #4]
9002dcca:	b10b      	cbz	r3, 9002dcd0 <_free_r+0x4c>
9002dccc:	42a3      	cmp	r3, r4
9002dcce:	d9fa      	bls.n	9002dcc6 <_free_r+0x42>
9002dcd0:	6811      	ldr	r1, [r2, #0]
9002dcd2:	1850      	adds	r0, r2, r1
9002dcd4:	42a0      	cmp	r0, r4
9002dcd6:	d10b      	bne.n	9002dcf0 <_free_r+0x6c>
9002dcd8:	6820      	ldr	r0, [r4, #0]
9002dcda:	4401      	add	r1, r0
9002dcdc:	1850      	adds	r0, r2, r1
9002dcde:	4283      	cmp	r3, r0
9002dce0:	6011      	str	r1, [r2, #0]
9002dce2:	d1e0      	bne.n	9002dca6 <_free_r+0x22>
9002dce4:	6818      	ldr	r0, [r3, #0]
9002dce6:	685b      	ldr	r3, [r3, #4]
9002dce8:	6053      	str	r3, [r2, #4]
9002dcea:	4408      	add	r0, r1
9002dcec:	6010      	str	r0, [r2, #0]
9002dcee:	e7da      	b.n	9002dca6 <_free_r+0x22>
9002dcf0:	d902      	bls.n	9002dcf8 <_free_r+0x74>
9002dcf2:	230c      	movs	r3, #12
9002dcf4:	602b      	str	r3, [r5, #0]
9002dcf6:	e7d6      	b.n	9002dca6 <_free_r+0x22>
9002dcf8:	6820      	ldr	r0, [r4, #0]
9002dcfa:	1821      	adds	r1, r4, r0
9002dcfc:	428b      	cmp	r3, r1
9002dcfe:	bf04      	itt	eq
9002dd00:	6819      	ldreq	r1, [r3, #0]
9002dd02:	685b      	ldreq	r3, [r3, #4]
9002dd04:	6063      	str	r3, [r4, #4]
9002dd06:	bf04      	itt	eq
9002dd08:	1809      	addeq	r1, r1, r0
9002dd0a:	6021      	streq	r1, [r4, #0]
9002dd0c:	6054      	str	r4, [r2, #4]
9002dd0e:	e7ca      	b.n	9002dca6 <_free_r+0x22>
9002dd10:	bd38      	pop	{r3, r4, r5, pc}
9002dd12:	bf00      	nop
9002dd14:	2402266c 	.word	0x2402266c

9002dd18 <__sfputc_r>:
9002dd18:	6893      	ldr	r3, [r2, #8]
9002dd1a:	3b01      	subs	r3, #1
9002dd1c:	2b00      	cmp	r3, #0
9002dd1e:	b410      	push	{r4}
9002dd20:	6093      	str	r3, [r2, #8]
9002dd22:	da08      	bge.n	9002dd36 <__sfputc_r+0x1e>
9002dd24:	6994      	ldr	r4, [r2, #24]
9002dd26:	42a3      	cmp	r3, r4
9002dd28:	db01      	blt.n	9002dd2e <__sfputc_r+0x16>
9002dd2a:	290a      	cmp	r1, #10
9002dd2c:	d103      	bne.n	9002dd36 <__sfputc_r+0x1e>
9002dd2e:	f85d 4b04 	ldr.w	r4, [sp], #4
9002dd32:	f7ff bd40 	b.w	9002d7b6 <__swbuf_r>
9002dd36:	6813      	ldr	r3, [r2, #0]
9002dd38:	1c58      	adds	r0, r3, #1
9002dd3a:	6010      	str	r0, [r2, #0]
9002dd3c:	7019      	strb	r1, [r3, #0]
9002dd3e:	4608      	mov	r0, r1
9002dd40:	f85d 4b04 	ldr.w	r4, [sp], #4
9002dd44:	4770      	bx	lr

9002dd46 <__sfputs_r>:
9002dd46:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002dd48:	4606      	mov	r6, r0
9002dd4a:	460f      	mov	r7, r1
9002dd4c:	4614      	mov	r4, r2
9002dd4e:	18d5      	adds	r5, r2, r3
9002dd50:	42ac      	cmp	r4, r5
9002dd52:	d101      	bne.n	9002dd58 <__sfputs_r+0x12>
9002dd54:	2000      	movs	r0, #0
9002dd56:	e007      	b.n	9002dd68 <__sfputs_r+0x22>
9002dd58:	f814 1b01 	ldrb.w	r1, [r4], #1
9002dd5c:	463a      	mov	r2, r7
9002dd5e:	4630      	mov	r0, r6
9002dd60:	f7ff ffda 	bl	9002dd18 <__sfputc_r>
9002dd64:	1c43      	adds	r3, r0, #1
9002dd66:	d1f3      	bne.n	9002dd50 <__sfputs_r+0xa>
9002dd68:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

9002dd6c <_vfiprintf_r>:
9002dd6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002dd70:	460d      	mov	r5, r1
9002dd72:	b09d      	sub	sp, #116	@ 0x74
9002dd74:	4614      	mov	r4, r2
9002dd76:	4698      	mov	r8, r3
9002dd78:	4606      	mov	r6, r0
9002dd7a:	b118      	cbz	r0, 9002dd84 <_vfiprintf_r+0x18>
9002dd7c:	6a03      	ldr	r3, [r0, #32]
9002dd7e:	b90b      	cbnz	r3, 9002dd84 <_vfiprintf_r+0x18>
9002dd80:	f7ff fc8e 	bl	9002d6a0 <__sinit>
9002dd84:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002dd86:	07d9      	lsls	r1, r3, #31
9002dd88:	d405      	bmi.n	9002dd96 <_vfiprintf_r+0x2a>
9002dd8a:	89ab      	ldrh	r3, [r5, #12]
9002dd8c:	059a      	lsls	r2, r3, #22
9002dd8e:	d402      	bmi.n	9002dd96 <_vfiprintf_r+0x2a>
9002dd90:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002dd92:	f7ff ff0a 	bl	9002dbaa <__retarget_lock_acquire_recursive>
9002dd96:	89ab      	ldrh	r3, [r5, #12]
9002dd98:	071b      	lsls	r3, r3, #28
9002dd9a:	d501      	bpl.n	9002dda0 <_vfiprintf_r+0x34>
9002dd9c:	692b      	ldr	r3, [r5, #16]
9002dd9e:	b99b      	cbnz	r3, 9002ddc8 <_vfiprintf_r+0x5c>
9002dda0:	4629      	mov	r1, r5
9002dda2:	4630      	mov	r0, r6
9002dda4:	f7ff fd46 	bl	9002d834 <__swsetup_r>
9002dda8:	b170      	cbz	r0, 9002ddc8 <_vfiprintf_r+0x5c>
9002ddaa:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002ddac:	07dc      	lsls	r4, r3, #31
9002ddae:	d504      	bpl.n	9002ddba <_vfiprintf_r+0x4e>
9002ddb0:	f04f 30ff 	mov.w	r0, #4294967295
9002ddb4:	b01d      	add	sp, #116	@ 0x74
9002ddb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002ddba:	89ab      	ldrh	r3, [r5, #12]
9002ddbc:	0598      	lsls	r0, r3, #22
9002ddbe:	d4f7      	bmi.n	9002ddb0 <_vfiprintf_r+0x44>
9002ddc0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002ddc2:	f7ff fef3 	bl	9002dbac <__retarget_lock_release_recursive>
9002ddc6:	e7f3      	b.n	9002ddb0 <_vfiprintf_r+0x44>
9002ddc8:	2300      	movs	r3, #0
9002ddca:	9309      	str	r3, [sp, #36]	@ 0x24
9002ddcc:	2320      	movs	r3, #32
9002ddce:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
9002ddd2:	f8cd 800c 	str.w	r8, [sp, #12]
9002ddd6:	2330      	movs	r3, #48	@ 0x30
9002ddd8:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 9002df88 <_vfiprintf_r+0x21c>
9002dddc:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
9002dde0:	f04f 0901 	mov.w	r9, #1
9002dde4:	4623      	mov	r3, r4
9002dde6:	469a      	mov	sl, r3
9002dde8:	f813 2b01 	ldrb.w	r2, [r3], #1
9002ddec:	b10a      	cbz	r2, 9002ddf2 <_vfiprintf_r+0x86>
9002ddee:	2a25      	cmp	r2, #37	@ 0x25
9002ddf0:	d1f9      	bne.n	9002dde6 <_vfiprintf_r+0x7a>
9002ddf2:	ebba 0b04 	subs.w	fp, sl, r4
9002ddf6:	d00b      	beq.n	9002de10 <_vfiprintf_r+0xa4>
9002ddf8:	465b      	mov	r3, fp
9002ddfa:	4622      	mov	r2, r4
9002ddfc:	4629      	mov	r1, r5
9002ddfe:	4630      	mov	r0, r6
9002de00:	f7ff ffa1 	bl	9002dd46 <__sfputs_r>
9002de04:	3001      	adds	r0, #1
9002de06:	f000 80a7 	beq.w	9002df58 <_vfiprintf_r+0x1ec>
9002de0a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002de0c:	445a      	add	r2, fp
9002de0e:	9209      	str	r2, [sp, #36]	@ 0x24
9002de10:	f89a 3000 	ldrb.w	r3, [sl]
9002de14:	2b00      	cmp	r3, #0
9002de16:	f000 809f 	beq.w	9002df58 <_vfiprintf_r+0x1ec>
9002de1a:	2300      	movs	r3, #0
9002de1c:	f04f 32ff 	mov.w	r2, #4294967295
9002de20:	e9cd 2305 	strd	r2, r3, [sp, #20]
9002de24:	f10a 0a01 	add.w	sl, sl, #1
9002de28:	9304      	str	r3, [sp, #16]
9002de2a:	9307      	str	r3, [sp, #28]
9002de2c:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
9002de30:	931a      	str	r3, [sp, #104]	@ 0x68
9002de32:	4654      	mov	r4, sl
9002de34:	2205      	movs	r2, #5
9002de36:	f814 1b01 	ldrb.w	r1, [r4], #1
9002de3a:	4853      	ldr	r0, [pc, #332]	@ (9002df88 <_vfiprintf_r+0x21c>)
9002de3c:	f7d2 fa58 	bl	900002f0 <memchr>
9002de40:	9a04      	ldr	r2, [sp, #16]
9002de42:	b9d8      	cbnz	r0, 9002de7c <_vfiprintf_r+0x110>
9002de44:	06d1      	lsls	r1, r2, #27
9002de46:	bf44      	itt	mi
9002de48:	2320      	movmi	r3, #32
9002de4a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
9002de4e:	0713      	lsls	r3, r2, #28
9002de50:	bf44      	itt	mi
9002de52:	232b      	movmi	r3, #43	@ 0x2b
9002de54:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
9002de58:	f89a 3000 	ldrb.w	r3, [sl]
9002de5c:	2b2a      	cmp	r3, #42	@ 0x2a
9002de5e:	d015      	beq.n	9002de8c <_vfiprintf_r+0x120>
9002de60:	9a07      	ldr	r2, [sp, #28]
9002de62:	4654      	mov	r4, sl
9002de64:	2000      	movs	r0, #0
9002de66:	f04f 0c0a 	mov.w	ip, #10
9002de6a:	4621      	mov	r1, r4
9002de6c:	f811 3b01 	ldrb.w	r3, [r1], #1
9002de70:	3b30      	subs	r3, #48	@ 0x30
9002de72:	2b09      	cmp	r3, #9
9002de74:	d94b      	bls.n	9002df0e <_vfiprintf_r+0x1a2>
9002de76:	b1b0      	cbz	r0, 9002dea6 <_vfiprintf_r+0x13a>
9002de78:	9207      	str	r2, [sp, #28]
9002de7a:	e014      	b.n	9002dea6 <_vfiprintf_r+0x13a>
9002de7c:	eba0 0308 	sub.w	r3, r0, r8
9002de80:	fa09 f303 	lsl.w	r3, r9, r3
9002de84:	4313      	orrs	r3, r2
9002de86:	9304      	str	r3, [sp, #16]
9002de88:	46a2      	mov	sl, r4
9002de8a:	e7d2      	b.n	9002de32 <_vfiprintf_r+0xc6>
9002de8c:	9b03      	ldr	r3, [sp, #12]
9002de8e:	1d19      	adds	r1, r3, #4
9002de90:	681b      	ldr	r3, [r3, #0]
9002de92:	9103      	str	r1, [sp, #12]
9002de94:	2b00      	cmp	r3, #0
9002de96:	bfbb      	ittet	lt
9002de98:	425b      	neglt	r3, r3
9002de9a:	f042 0202 	orrlt.w	r2, r2, #2
9002de9e:	9307      	strge	r3, [sp, #28]
9002dea0:	9307      	strlt	r3, [sp, #28]
9002dea2:	bfb8      	it	lt
9002dea4:	9204      	strlt	r2, [sp, #16]
9002dea6:	7823      	ldrb	r3, [r4, #0]
9002dea8:	2b2e      	cmp	r3, #46	@ 0x2e
9002deaa:	d10a      	bne.n	9002dec2 <_vfiprintf_r+0x156>
9002deac:	7863      	ldrb	r3, [r4, #1]
9002deae:	2b2a      	cmp	r3, #42	@ 0x2a
9002deb0:	d132      	bne.n	9002df18 <_vfiprintf_r+0x1ac>
9002deb2:	9b03      	ldr	r3, [sp, #12]
9002deb4:	1d1a      	adds	r2, r3, #4
9002deb6:	681b      	ldr	r3, [r3, #0]
9002deb8:	9203      	str	r2, [sp, #12]
9002deba:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
9002debe:	3402      	adds	r4, #2
9002dec0:	9305      	str	r3, [sp, #20]
9002dec2:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 9002df98 <_vfiprintf_r+0x22c>
9002dec6:	7821      	ldrb	r1, [r4, #0]
9002dec8:	2203      	movs	r2, #3
9002deca:	4650      	mov	r0, sl
9002decc:	f7d2 fa10 	bl	900002f0 <memchr>
9002ded0:	b138      	cbz	r0, 9002dee2 <_vfiprintf_r+0x176>
9002ded2:	9b04      	ldr	r3, [sp, #16]
9002ded4:	eba0 000a 	sub.w	r0, r0, sl
9002ded8:	2240      	movs	r2, #64	@ 0x40
9002deda:	4082      	lsls	r2, r0
9002dedc:	4313      	orrs	r3, r2
9002dede:	3401      	adds	r4, #1
9002dee0:	9304      	str	r3, [sp, #16]
9002dee2:	f814 1b01 	ldrb.w	r1, [r4], #1
9002dee6:	4829      	ldr	r0, [pc, #164]	@ (9002df8c <_vfiprintf_r+0x220>)
9002dee8:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
9002deec:	2206      	movs	r2, #6
9002deee:	f7d2 f9ff 	bl	900002f0 <memchr>
9002def2:	2800      	cmp	r0, #0
9002def4:	d03f      	beq.n	9002df76 <_vfiprintf_r+0x20a>
9002def6:	4b26      	ldr	r3, [pc, #152]	@ (9002df90 <_vfiprintf_r+0x224>)
9002def8:	bb1b      	cbnz	r3, 9002df42 <_vfiprintf_r+0x1d6>
9002defa:	9b03      	ldr	r3, [sp, #12]
9002defc:	3307      	adds	r3, #7
9002defe:	f023 0307 	bic.w	r3, r3, #7
9002df02:	3308      	adds	r3, #8
9002df04:	9303      	str	r3, [sp, #12]
9002df06:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002df08:	443b      	add	r3, r7
9002df0a:	9309      	str	r3, [sp, #36]	@ 0x24
9002df0c:	e76a      	b.n	9002dde4 <_vfiprintf_r+0x78>
9002df0e:	fb0c 3202 	mla	r2, ip, r2, r3
9002df12:	460c      	mov	r4, r1
9002df14:	2001      	movs	r0, #1
9002df16:	e7a8      	b.n	9002de6a <_vfiprintf_r+0xfe>
9002df18:	2300      	movs	r3, #0
9002df1a:	3401      	adds	r4, #1
9002df1c:	9305      	str	r3, [sp, #20]
9002df1e:	4619      	mov	r1, r3
9002df20:	f04f 0c0a 	mov.w	ip, #10
9002df24:	4620      	mov	r0, r4
9002df26:	f810 2b01 	ldrb.w	r2, [r0], #1
9002df2a:	3a30      	subs	r2, #48	@ 0x30
9002df2c:	2a09      	cmp	r2, #9
9002df2e:	d903      	bls.n	9002df38 <_vfiprintf_r+0x1cc>
9002df30:	2b00      	cmp	r3, #0
9002df32:	d0c6      	beq.n	9002dec2 <_vfiprintf_r+0x156>
9002df34:	9105      	str	r1, [sp, #20]
9002df36:	e7c4      	b.n	9002dec2 <_vfiprintf_r+0x156>
9002df38:	fb0c 2101 	mla	r1, ip, r1, r2
9002df3c:	4604      	mov	r4, r0
9002df3e:	2301      	movs	r3, #1
9002df40:	e7f0      	b.n	9002df24 <_vfiprintf_r+0x1b8>
9002df42:	ab03      	add	r3, sp, #12
9002df44:	9300      	str	r3, [sp, #0]
9002df46:	462a      	mov	r2, r5
9002df48:	4b12      	ldr	r3, [pc, #72]	@ (9002df94 <_vfiprintf_r+0x228>)
9002df4a:	a904      	add	r1, sp, #16
9002df4c:	4630      	mov	r0, r6
9002df4e:	f3af 8000 	nop.w
9002df52:	4607      	mov	r7, r0
9002df54:	1c78      	adds	r0, r7, #1
9002df56:	d1d6      	bne.n	9002df06 <_vfiprintf_r+0x19a>
9002df58:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002df5a:	07d9      	lsls	r1, r3, #31
9002df5c:	d405      	bmi.n	9002df6a <_vfiprintf_r+0x1fe>
9002df5e:	89ab      	ldrh	r3, [r5, #12]
9002df60:	059a      	lsls	r2, r3, #22
9002df62:	d402      	bmi.n	9002df6a <_vfiprintf_r+0x1fe>
9002df64:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002df66:	f7ff fe21 	bl	9002dbac <__retarget_lock_release_recursive>
9002df6a:	89ab      	ldrh	r3, [r5, #12]
9002df6c:	065b      	lsls	r3, r3, #25
9002df6e:	f53f af1f 	bmi.w	9002ddb0 <_vfiprintf_r+0x44>
9002df72:	9809      	ldr	r0, [sp, #36]	@ 0x24
9002df74:	e71e      	b.n	9002ddb4 <_vfiprintf_r+0x48>
9002df76:	ab03      	add	r3, sp, #12
9002df78:	9300      	str	r3, [sp, #0]
9002df7a:	462a      	mov	r2, r5
9002df7c:	4b05      	ldr	r3, [pc, #20]	@ (9002df94 <_vfiprintf_r+0x228>)
9002df7e:	a904      	add	r1, sp, #16
9002df80:	4630      	mov	r0, r6
9002df82:	f000 f879 	bl	9002e078 <_printf_i>
9002df86:	e7e4      	b.n	9002df52 <_vfiprintf_r+0x1e6>
9002df88:	90032432 	.word	0x90032432
9002df8c:	9003243c 	.word	0x9003243c
9002df90:	00000000 	.word	0x00000000
9002df94:	9002dd47 	.word	0x9002dd47
9002df98:	90032438 	.word	0x90032438

9002df9c <_printf_common>:
9002df9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002dfa0:	4616      	mov	r6, r2
9002dfa2:	4698      	mov	r8, r3
9002dfa4:	688a      	ldr	r2, [r1, #8]
9002dfa6:	690b      	ldr	r3, [r1, #16]
9002dfa8:	f8dd 9020 	ldr.w	r9, [sp, #32]
9002dfac:	4293      	cmp	r3, r2
9002dfae:	bfb8      	it	lt
9002dfb0:	4613      	movlt	r3, r2
9002dfb2:	6033      	str	r3, [r6, #0]
9002dfb4:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
9002dfb8:	4607      	mov	r7, r0
9002dfba:	460c      	mov	r4, r1
9002dfbc:	b10a      	cbz	r2, 9002dfc2 <_printf_common+0x26>
9002dfbe:	3301      	adds	r3, #1
9002dfc0:	6033      	str	r3, [r6, #0]
9002dfc2:	6823      	ldr	r3, [r4, #0]
9002dfc4:	0699      	lsls	r1, r3, #26
9002dfc6:	bf42      	ittt	mi
9002dfc8:	6833      	ldrmi	r3, [r6, #0]
9002dfca:	3302      	addmi	r3, #2
9002dfcc:	6033      	strmi	r3, [r6, #0]
9002dfce:	6825      	ldr	r5, [r4, #0]
9002dfd0:	f015 0506 	ands.w	r5, r5, #6
9002dfd4:	d106      	bne.n	9002dfe4 <_printf_common+0x48>
9002dfd6:	f104 0a19 	add.w	sl, r4, #25
9002dfda:	68e3      	ldr	r3, [r4, #12]
9002dfdc:	6832      	ldr	r2, [r6, #0]
9002dfde:	1a9b      	subs	r3, r3, r2
9002dfe0:	42ab      	cmp	r3, r5
9002dfe2:	dc26      	bgt.n	9002e032 <_printf_common+0x96>
9002dfe4:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
9002dfe8:	6822      	ldr	r2, [r4, #0]
9002dfea:	3b00      	subs	r3, #0
9002dfec:	bf18      	it	ne
9002dfee:	2301      	movne	r3, #1
9002dff0:	0692      	lsls	r2, r2, #26
9002dff2:	d42b      	bmi.n	9002e04c <_printf_common+0xb0>
9002dff4:	f104 0243 	add.w	r2, r4, #67	@ 0x43
9002dff8:	4641      	mov	r1, r8
9002dffa:	4638      	mov	r0, r7
9002dffc:	47c8      	blx	r9
9002dffe:	3001      	adds	r0, #1
9002e000:	d01e      	beq.n	9002e040 <_printf_common+0xa4>
9002e002:	6823      	ldr	r3, [r4, #0]
9002e004:	6922      	ldr	r2, [r4, #16]
9002e006:	f003 0306 	and.w	r3, r3, #6
9002e00a:	2b04      	cmp	r3, #4
9002e00c:	bf02      	ittt	eq
9002e00e:	68e5      	ldreq	r5, [r4, #12]
9002e010:	6833      	ldreq	r3, [r6, #0]
9002e012:	1aed      	subeq	r5, r5, r3
9002e014:	68a3      	ldr	r3, [r4, #8]
9002e016:	bf0c      	ite	eq
9002e018:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
9002e01c:	2500      	movne	r5, #0
9002e01e:	4293      	cmp	r3, r2
9002e020:	bfc4      	itt	gt
9002e022:	1a9b      	subgt	r3, r3, r2
9002e024:	18ed      	addgt	r5, r5, r3
9002e026:	2600      	movs	r6, #0
9002e028:	341a      	adds	r4, #26
9002e02a:	42b5      	cmp	r5, r6
9002e02c:	d11a      	bne.n	9002e064 <_printf_common+0xc8>
9002e02e:	2000      	movs	r0, #0
9002e030:	e008      	b.n	9002e044 <_printf_common+0xa8>
9002e032:	2301      	movs	r3, #1
9002e034:	4652      	mov	r2, sl
9002e036:	4641      	mov	r1, r8
9002e038:	4638      	mov	r0, r7
9002e03a:	47c8      	blx	r9
9002e03c:	3001      	adds	r0, #1
9002e03e:	d103      	bne.n	9002e048 <_printf_common+0xac>
9002e040:	f04f 30ff 	mov.w	r0, #4294967295
9002e044:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002e048:	3501      	adds	r5, #1
9002e04a:	e7c6      	b.n	9002dfda <_printf_common+0x3e>
9002e04c:	18e1      	adds	r1, r4, r3
9002e04e:	1c5a      	adds	r2, r3, #1
9002e050:	2030      	movs	r0, #48	@ 0x30
9002e052:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
9002e056:	4422      	add	r2, r4
9002e058:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
9002e05c:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
9002e060:	3302      	adds	r3, #2
9002e062:	e7c7      	b.n	9002dff4 <_printf_common+0x58>
9002e064:	2301      	movs	r3, #1
9002e066:	4622      	mov	r2, r4
9002e068:	4641      	mov	r1, r8
9002e06a:	4638      	mov	r0, r7
9002e06c:	47c8      	blx	r9
9002e06e:	3001      	adds	r0, #1
9002e070:	d0e6      	beq.n	9002e040 <_printf_common+0xa4>
9002e072:	3601      	adds	r6, #1
9002e074:	e7d9      	b.n	9002e02a <_printf_common+0x8e>
	...

9002e078 <_printf_i>:
9002e078:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9002e07c:	7e0f      	ldrb	r7, [r1, #24]
9002e07e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9002e080:	2f78      	cmp	r7, #120	@ 0x78
9002e082:	4691      	mov	r9, r2
9002e084:	4680      	mov	r8, r0
9002e086:	460c      	mov	r4, r1
9002e088:	469a      	mov	sl, r3
9002e08a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
9002e08e:	d807      	bhi.n	9002e0a0 <_printf_i+0x28>
9002e090:	2f62      	cmp	r7, #98	@ 0x62
9002e092:	d80a      	bhi.n	9002e0aa <_printf_i+0x32>
9002e094:	2f00      	cmp	r7, #0
9002e096:	f000 80d1 	beq.w	9002e23c <_printf_i+0x1c4>
9002e09a:	2f58      	cmp	r7, #88	@ 0x58
9002e09c:	f000 80b8 	beq.w	9002e210 <_printf_i+0x198>
9002e0a0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
9002e0a4:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
9002e0a8:	e03a      	b.n	9002e120 <_printf_i+0xa8>
9002e0aa:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
9002e0ae:	2b15      	cmp	r3, #21
9002e0b0:	d8f6      	bhi.n	9002e0a0 <_printf_i+0x28>
9002e0b2:	a101      	add	r1, pc, #4	@ (adr r1, 9002e0b8 <_printf_i+0x40>)
9002e0b4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
9002e0b8:	9002e111 	.word	0x9002e111
9002e0bc:	9002e125 	.word	0x9002e125
9002e0c0:	9002e0a1 	.word	0x9002e0a1
9002e0c4:	9002e0a1 	.word	0x9002e0a1
9002e0c8:	9002e0a1 	.word	0x9002e0a1
9002e0cc:	9002e0a1 	.word	0x9002e0a1
9002e0d0:	9002e125 	.word	0x9002e125
9002e0d4:	9002e0a1 	.word	0x9002e0a1
9002e0d8:	9002e0a1 	.word	0x9002e0a1
9002e0dc:	9002e0a1 	.word	0x9002e0a1
9002e0e0:	9002e0a1 	.word	0x9002e0a1
9002e0e4:	9002e223 	.word	0x9002e223
9002e0e8:	9002e14f 	.word	0x9002e14f
9002e0ec:	9002e1dd 	.word	0x9002e1dd
9002e0f0:	9002e0a1 	.word	0x9002e0a1
9002e0f4:	9002e0a1 	.word	0x9002e0a1
9002e0f8:	9002e245 	.word	0x9002e245
9002e0fc:	9002e0a1 	.word	0x9002e0a1
9002e100:	9002e14f 	.word	0x9002e14f
9002e104:	9002e0a1 	.word	0x9002e0a1
9002e108:	9002e0a1 	.word	0x9002e0a1
9002e10c:	9002e1e5 	.word	0x9002e1e5
9002e110:	6833      	ldr	r3, [r6, #0]
9002e112:	1d1a      	adds	r2, r3, #4
9002e114:	681b      	ldr	r3, [r3, #0]
9002e116:	6032      	str	r2, [r6, #0]
9002e118:	f104 0642 	add.w	r6, r4, #66	@ 0x42
9002e11c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
9002e120:	2301      	movs	r3, #1
9002e122:	e09c      	b.n	9002e25e <_printf_i+0x1e6>
9002e124:	6833      	ldr	r3, [r6, #0]
9002e126:	6820      	ldr	r0, [r4, #0]
9002e128:	1d19      	adds	r1, r3, #4
9002e12a:	6031      	str	r1, [r6, #0]
9002e12c:	0606      	lsls	r6, r0, #24
9002e12e:	d501      	bpl.n	9002e134 <_printf_i+0xbc>
9002e130:	681d      	ldr	r5, [r3, #0]
9002e132:	e003      	b.n	9002e13c <_printf_i+0xc4>
9002e134:	0645      	lsls	r5, r0, #25
9002e136:	d5fb      	bpl.n	9002e130 <_printf_i+0xb8>
9002e138:	f9b3 5000 	ldrsh.w	r5, [r3]
9002e13c:	2d00      	cmp	r5, #0
9002e13e:	da03      	bge.n	9002e148 <_printf_i+0xd0>
9002e140:	232d      	movs	r3, #45	@ 0x2d
9002e142:	426d      	negs	r5, r5
9002e144:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
9002e148:	4858      	ldr	r0, [pc, #352]	@ (9002e2ac <_printf_i+0x234>)
9002e14a:	230a      	movs	r3, #10
9002e14c:	e011      	b.n	9002e172 <_printf_i+0xfa>
9002e14e:	6821      	ldr	r1, [r4, #0]
9002e150:	6833      	ldr	r3, [r6, #0]
9002e152:	0608      	lsls	r0, r1, #24
9002e154:	f853 5b04 	ldr.w	r5, [r3], #4
9002e158:	d402      	bmi.n	9002e160 <_printf_i+0xe8>
9002e15a:	0649      	lsls	r1, r1, #25
9002e15c:	bf48      	it	mi
9002e15e:	b2ad      	uxthmi	r5, r5
9002e160:	2f6f      	cmp	r7, #111	@ 0x6f
9002e162:	4852      	ldr	r0, [pc, #328]	@ (9002e2ac <_printf_i+0x234>)
9002e164:	6033      	str	r3, [r6, #0]
9002e166:	bf14      	ite	ne
9002e168:	230a      	movne	r3, #10
9002e16a:	2308      	moveq	r3, #8
9002e16c:	2100      	movs	r1, #0
9002e16e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
9002e172:	6866      	ldr	r6, [r4, #4]
9002e174:	60a6      	str	r6, [r4, #8]
9002e176:	2e00      	cmp	r6, #0
9002e178:	db05      	blt.n	9002e186 <_printf_i+0x10e>
9002e17a:	6821      	ldr	r1, [r4, #0]
9002e17c:	432e      	orrs	r6, r5
9002e17e:	f021 0104 	bic.w	r1, r1, #4
9002e182:	6021      	str	r1, [r4, #0]
9002e184:	d04b      	beq.n	9002e21e <_printf_i+0x1a6>
9002e186:	4616      	mov	r6, r2
9002e188:	fbb5 f1f3 	udiv	r1, r5, r3
9002e18c:	fb03 5711 	mls	r7, r3, r1, r5
9002e190:	5dc7      	ldrb	r7, [r0, r7]
9002e192:	f806 7d01 	strb.w	r7, [r6, #-1]!
9002e196:	462f      	mov	r7, r5
9002e198:	42bb      	cmp	r3, r7
9002e19a:	460d      	mov	r5, r1
9002e19c:	d9f4      	bls.n	9002e188 <_printf_i+0x110>
9002e19e:	2b08      	cmp	r3, #8
9002e1a0:	d10b      	bne.n	9002e1ba <_printf_i+0x142>
9002e1a2:	6823      	ldr	r3, [r4, #0]
9002e1a4:	07df      	lsls	r7, r3, #31
9002e1a6:	d508      	bpl.n	9002e1ba <_printf_i+0x142>
9002e1a8:	6923      	ldr	r3, [r4, #16]
9002e1aa:	6861      	ldr	r1, [r4, #4]
9002e1ac:	4299      	cmp	r1, r3
9002e1ae:	bfde      	ittt	le
9002e1b0:	2330      	movle	r3, #48	@ 0x30
9002e1b2:	f806 3c01 	strble.w	r3, [r6, #-1]
9002e1b6:	f106 36ff 	addle.w	r6, r6, #4294967295
9002e1ba:	1b92      	subs	r2, r2, r6
9002e1bc:	6122      	str	r2, [r4, #16]
9002e1be:	f8cd a000 	str.w	sl, [sp]
9002e1c2:	464b      	mov	r3, r9
9002e1c4:	aa03      	add	r2, sp, #12
9002e1c6:	4621      	mov	r1, r4
9002e1c8:	4640      	mov	r0, r8
9002e1ca:	f7ff fee7 	bl	9002df9c <_printf_common>
9002e1ce:	3001      	adds	r0, #1
9002e1d0:	d14a      	bne.n	9002e268 <_printf_i+0x1f0>
9002e1d2:	f04f 30ff 	mov.w	r0, #4294967295
9002e1d6:	b004      	add	sp, #16
9002e1d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002e1dc:	6823      	ldr	r3, [r4, #0]
9002e1de:	f043 0320 	orr.w	r3, r3, #32
9002e1e2:	6023      	str	r3, [r4, #0]
9002e1e4:	4832      	ldr	r0, [pc, #200]	@ (9002e2b0 <_printf_i+0x238>)
9002e1e6:	2778      	movs	r7, #120	@ 0x78
9002e1e8:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
9002e1ec:	6823      	ldr	r3, [r4, #0]
9002e1ee:	6831      	ldr	r1, [r6, #0]
9002e1f0:	061f      	lsls	r7, r3, #24
9002e1f2:	f851 5b04 	ldr.w	r5, [r1], #4
9002e1f6:	d402      	bmi.n	9002e1fe <_printf_i+0x186>
9002e1f8:	065f      	lsls	r7, r3, #25
9002e1fa:	bf48      	it	mi
9002e1fc:	b2ad      	uxthmi	r5, r5
9002e1fe:	6031      	str	r1, [r6, #0]
9002e200:	07d9      	lsls	r1, r3, #31
9002e202:	bf44      	itt	mi
9002e204:	f043 0320 	orrmi.w	r3, r3, #32
9002e208:	6023      	strmi	r3, [r4, #0]
9002e20a:	b11d      	cbz	r5, 9002e214 <_printf_i+0x19c>
9002e20c:	2310      	movs	r3, #16
9002e20e:	e7ad      	b.n	9002e16c <_printf_i+0xf4>
9002e210:	4826      	ldr	r0, [pc, #152]	@ (9002e2ac <_printf_i+0x234>)
9002e212:	e7e9      	b.n	9002e1e8 <_printf_i+0x170>
9002e214:	6823      	ldr	r3, [r4, #0]
9002e216:	f023 0320 	bic.w	r3, r3, #32
9002e21a:	6023      	str	r3, [r4, #0]
9002e21c:	e7f6      	b.n	9002e20c <_printf_i+0x194>
9002e21e:	4616      	mov	r6, r2
9002e220:	e7bd      	b.n	9002e19e <_printf_i+0x126>
9002e222:	6833      	ldr	r3, [r6, #0]
9002e224:	6825      	ldr	r5, [r4, #0]
9002e226:	6961      	ldr	r1, [r4, #20]
9002e228:	1d18      	adds	r0, r3, #4
9002e22a:	6030      	str	r0, [r6, #0]
9002e22c:	062e      	lsls	r6, r5, #24
9002e22e:	681b      	ldr	r3, [r3, #0]
9002e230:	d501      	bpl.n	9002e236 <_printf_i+0x1be>
9002e232:	6019      	str	r1, [r3, #0]
9002e234:	e002      	b.n	9002e23c <_printf_i+0x1c4>
9002e236:	0668      	lsls	r0, r5, #25
9002e238:	d5fb      	bpl.n	9002e232 <_printf_i+0x1ba>
9002e23a:	8019      	strh	r1, [r3, #0]
9002e23c:	2300      	movs	r3, #0
9002e23e:	6123      	str	r3, [r4, #16]
9002e240:	4616      	mov	r6, r2
9002e242:	e7bc      	b.n	9002e1be <_printf_i+0x146>
9002e244:	6833      	ldr	r3, [r6, #0]
9002e246:	1d1a      	adds	r2, r3, #4
9002e248:	6032      	str	r2, [r6, #0]
9002e24a:	681e      	ldr	r6, [r3, #0]
9002e24c:	6862      	ldr	r2, [r4, #4]
9002e24e:	2100      	movs	r1, #0
9002e250:	4630      	mov	r0, r6
9002e252:	f7d2 f84d 	bl	900002f0 <memchr>
9002e256:	b108      	cbz	r0, 9002e25c <_printf_i+0x1e4>
9002e258:	1b80      	subs	r0, r0, r6
9002e25a:	6060      	str	r0, [r4, #4]
9002e25c:	6863      	ldr	r3, [r4, #4]
9002e25e:	6123      	str	r3, [r4, #16]
9002e260:	2300      	movs	r3, #0
9002e262:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
9002e266:	e7aa      	b.n	9002e1be <_printf_i+0x146>
9002e268:	6923      	ldr	r3, [r4, #16]
9002e26a:	4632      	mov	r2, r6
9002e26c:	4649      	mov	r1, r9
9002e26e:	4640      	mov	r0, r8
9002e270:	47d0      	blx	sl
9002e272:	3001      	adds	r0, #1
9002e274:	d0ad      	beq.n	9002e1d2 <_printf_i+0x15a>
9002e276:	6823      	ldr	r3, [r4, #0]
9002e278:	079b      	lsls	r3, r3, #30
9002e27a:	d413      	bmi.n	9002e2a4 <_printf_i+0x22c>
9002e27c:	68e0      	ldr	r0, [r4, #12]
9002e27e:	9b03      	ldr	r3, [sp, #12]
9002e280:	4298      	cmp	r0, r3
9002e282:	bfb8      	it	lt
9002e284:	4618      	movlt	r0, r3
9002e286:	e7a6      	b.n	9002e1d6 <_printf_i+0x15e>
9002e288:	2301      	movs	r3, #1
9002e28a:	4632      	mov	r2, r6
9002e28c:	4649      	mov	r1, r9
9002e28e:	4640      	mov	r0, r8
9002e290:	47d0      	blx	sl
9002e292:	3001      	adds	r0, #1
9002e294:	d09d      	beq.n	9002e1d2 <_printf_i+0x15a>
9002e296:	3501      	adds	r5, #1
9002e298:	68e3      	ldr	r3, [r4, #12]
9002e29a:	9903      	ldr	r1, [sp, #12]
9002e29c:	1a5b      	subs	r3, r3, r1
9002e29e:	42ab      	cmp	r3, r5
9002e2a0:	dcf2      	bgt.n	9002e288 <_printf_i+0x210>
9002e2a2:	e7eb      	b.n	9002e27c <_printf_i+0x204>
9002e2a4:	2500      	movs	r5, #0
9002e2a6:	f104 0619 	add.w	r6, r4, #25
9002e2aa:	e7f5      	b.n	9002e298 <_printf_i+0x220>
9002e2ac:	90032443 	.word	0x90032443
9002e2b0:	90032454 	.word	0x90032454

9002e2b4 <__sflush_r>:
9002e2b4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
9002e2b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002e2bc:	0716      	lsls	r6, r2, #28
9002e2be:	4605      	mov	r5, r0
9002e2c0:	460c      	mov	r4, r1
9002e2c2:	d454      	bmi.n	9002e36e <__sflush_r+0xba>
9002e2c4:	684b      	ldr	r3, [r1, #4]
9002e2c6:	2b00      	cmp	r3, #0
9002e2c8:	dc02      	bgt.n	9002e2d0 <__sflush_r+0x1c>
9002e2ca:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
9002e2cc:	2b00      	cmp	r3, #0
9002e2ce:	dd48      	ble.n	9002e362 <__sflush_r+0xae>
9002e2d0:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9002e2d2:	2e00      	cmp	r6, #0
9002e2d4:	d045      	beq.n	9002e362 <__sflush_r+0xae>
9002e2d6:	2300      	movs	r3, #0
9002e2d8:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
9002e2dc:	682f      	ldr	r7, [r5, #0]
9002e2de:	6a21      	ldr	r1, [r4, #32]
9002e2e0:	602b      	str	r3, [r5, #0]
9002e2e2:	d030      	beq.n	9002e346 <__sflush_r+0x92>
9002e2e4:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9002e2e6:	89a3      	ldrh	r3, [r4, #12]
9002e2e8:	0759      	lsls	r1, r3, #29
9002e2ea:	d505      	bpl.n	9002e2f8 <__sflush_r+0x44>
9002e2ec:	6863      	ldr	r3, [r4, #4]
9002e2ee:	1ad2      	subs	r2, r2, r3
9002e2f0:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9002e2f2:	b10b      	cbz	r3, 9002e2f8 <__sflush_r+0x44>
9002e2f4:	6c23      	ldr	r3, [r4, #64]	@ 0x40
9002e2f6:	1ad2      	subs	r2, r2, r3
9002e2f8:	2300      	movs	r3, #0
9002e2fa:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9002e2fc:	6a21      	ldr	r1, [r4, #32]
9002e2fe:	4628      	mov	r0, r5
9002e300:	47b0      	blx	r6
9002e302:	1c43      	adds	r3, r0, #1
9002e304:	89a3      	ldrh	r3, [r4, #12]
9002e306:	d106      	bne.n	9002e316 <__sflush_r+0x62>
9002e308:	6829      	ldr	r1, [r5, #0]
9002e30a:	291d      	cmp	r1, #29
9002e30c:	d82b      	bhi.n	9002e366 <__sflush_r+0xb2>
9002e30e:	4a2a      	ldr	r2, [pc, #168]	@ (9002e3b8 <__sflush_r+0x104>)
9002e310:	40ca      	lsrs	r2, r1
9002e312:	07d6      	lsls	r6, r2, #31
9002e314:	d527      	bpl.n	9002e366 <__sflush_r+0xb2>
9002e316:	2200      	movs	r2, #0
9002e318:	6062      	str	r2, [r4, #4]
9002e31a:	04d9      	lsls	r1, r3, #19
9002e31c:	6922      	ldr	r2, [r4, #16]
9002e31e:	6022      	str	r2, [r4, #0]
9002e320:	d504      	bpl.n	9002e32c <__sflush_r+0x78>
9002e322:	1c42      	adds	r2, r0, #1
9002e324:	d101      	bne.n	9002e32a <__sflush_r+0x76>
9002e326:	682b      	ldr	r3, [r5, #0]
9002e328:	b903      	cbnz	r3, 9002e32c <__sflush_r+0x78>
9002e32a:	6560      	str	r0, [r4, #84]	@ 0x54
9002e32c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
9002e32e:	602f      	str	r7, [r5, #0]
9002e330:	b1b9      	cbz	r1, 9002e362 <__sflush_r+0xae>
9002e332:	f104 0344 	add.w	r3, r4, #68	@ 0x44
9002e336:	4299      	cmp	r1, r3
9002e338:	d002      	beq.n	9002e340 <__sflush_r+0x8c>
9002e33a:	4628      	mov	r0, r5
9002e33c:	f7ff fca2 	bl	9002dc84 <_free_r>
9002e340:	2300      	movs	r3, #0
9002e342:	6363      	str	r3, [r4, #52]	@ 0x34
9002e344:	e00d      	b.n	9002e362 <__sflush_r+0xae>
9002e346:	2301      	movs	r3, #1
9002e348:	4628      	mov	r0, r5
9002e34a:	47b0      	blx	r6
9002e34c:	4602      	mov	r2, r0
9002e34e:	1c50      	adds	r0, r2, #1
9002e350:	d1c9      	bne.n	9002e2e6 <__sflush_r+0x32>
9002e352:	682b      	ldr	r3, [r5, #0]
9002e354:	2b00      	cmp	r3, #0
9002e356:	d0c6      	beq.n	9002e2e6 <__sflush_r+0x32>
9002e358:	2b1d      	cmp	r3, #29
9002e35a:	d001      	beq.n	9002e360 <__sflush_r+0xac>
9002e35c:	2b16      	cmp	r3, #22
9002e35e:	d11e      	bne.n	9002e39e <__sflush_r+0xea>
9002e360:	602f      	str	r7, [r5, #0]
9002e362:	2000      	movs	r0, #0
9002e364:	e022      	b.n	9002e3ac <__sflush_r+0xf8>
9002e366:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002e36a:	b21b      	sxth	r3, r3
9002e36c:	e01b      	b.n	9002e3a6 <__sflush_r+0xf2>
9002e36e:	690f      	ldr	r7, [r1, #16]
9002e370:	2f00      	cmp	r7, #0
9002e372:	d0f6      	beq.n	9002e362 <__sflush_r+0xae>
9002e374:	0793      	lsls	r3, r2, #30
9002e376:	680e      	ldr	r6, [r1, #0]
9002e378:	bf08      	it	eq
9002e37a:	694b      	ldreq	r3, [r1, #20]
9002e37c:	600f      	str	r7, [r1, #0]
9002e37e:	bf18      	it	ne
9002e380:	2300      	movne	r3, #0
9002e382:	eba6 0807 	sub.w	r8, r6, r7
9002e386:	608b      	str	r3, [r1, #8]
9002e388:	f1b8 0f00 	cmp.w	r8, #0
9002e38c:	dde9      	ble.n	9002e362 <__sflush_r+0xae>
9002e38e:	6a21      	ldr	r1, [r4, #32]
9002e390:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
9002e392:	4643      	mov	r3, r8
9002e394:	463a      	mov	r2, r7
9002e396:	4628      	mov	r0, r5
9002e398:	47b0      	blx	r6
9002e39a:	2800      	cmp	r0, #0
9002e39c:	dc08      	bgt.n	9002e3b0 <__sflush_r+0xfc>
9002e39e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002e3a2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002e3a6:	81a3      	strh	r3, [r4, #12]
9002e3a8:	f04f 30ff 	mov.w	r0, #4294967295
9002e3ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002e3b0:	4407      	add	r7, r0
9002e3b2:	eba8 0800 	sub.w	r8, r8, r0
9002e3b6:	e7e7      	b.n	9002e388 <__sflush_r+0xd4>
9002e3b8:	20400001 	.word	0x20400001

9002e3bc <_fflush_r>:
9002e3bc:	b538      	push	{r3, r4, r5, lr}
9002e3be:	690b      	ldr	r3, [r1, #16]
9002e3c0:	4605      	mov	r5, r0
9002e3c2:	460c      	mov	r4, r1
9002e3c4:	b913      	cbnz	r3, 9002e3cc <_fflush_r+0x10>
9002e3c6:	2500      	movs	r5, #0
9002e3c8:	4628      	mov	r0, r5
9002e3ca:	bd38      	pop	{r3, r4, r5, pc}
9002e3cc:	b118      	cbz	r0, 9002e3d6 <_fflush_r+0x1a>
9002e3ce:	6a03      	ldr	r3, [r0, #32]
9002e3d0:	b90b      	cbnz	r3, 9002e3d6 <_fflush_r+0x1a>
9002e3d2:	f7ff f965 	bl	9002d6a0 <__sinit>
9002e3d6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002e3da:	2b00      	cmp	r3, #0
9002e3dc:	d0f3      	beq.n	9002e3c6 <_fflush_r+0xa>
9002e3de:	6e62      	ldr	r2, [r4, #100]	@ 0x64
9002e3e0:	07d0      	lsls	r0, r2, #31
9002e3e2:	d404      	bmi.n	9002e3ee <_fflush_r+0x32>
9002e3e4:	0599      	lsls	r1, r3, #22
9002e3e6:	d402      	bmi.n	9002e3ee <_fflush_r+0x32>
9002e3e8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9002e3ea:	f7ff fbde 	bl	9002dbaa <__retarget_lock_acquire_recursive>
9002e3ee:	4628      	mov	r0, r5
9002e3f0:	4621      	mov	r1, r4
9002e3f2:	f7ff ff5f 	bl	9002e2b4 <__sflush_r>
9002e3f6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
9002e3f8:	07da      	lsls	r2, r3, #31
9002e3fa:	4605      	mov	r5, r0
9002e3fc:	d4e4      	bmi.n	9002e3c8 <_fflush_r+0xc>
9002e3fe:	89a3      	ldrh	r3, [r4, #12]
9002e400:	059b      	lsls	r3, r3, #22
9002e402:	d4e1      	bmi.n	9002e3c8 <_fflush_r+0xc>
9002e404:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9002e406:	f7ff fbd1 	bl	9002dbac <__retarget_lock_release_recursive>
9002e40a:	e7dd      	b.n	9002e3c8 <_fflush_r+0xc>

9002e40c <__swhatbuf_r>:
9002e40c:	b570      	push	{r4, r5, r6, lr}
9002e40e:	460c      	mov	r4, r1
9002e410:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002e414:	2900      	cmp	r1, #0
9002e416:	b096      	sub	sp, #88	@ 0x58
9002e418:	4615      	mov	r5, r2
9002e41a:	461e      	mov	r6, r3
9002e41c:	da0d      	bge.n	9002e43a <__swhatbuf_r+0x2e>
9002e41e:	89a3      	ldrh	r3, [r4, #12]
9002e420:	f013 0f80 	tst.w	r3, #128	@ 0x80
9002e424:	f04f 0100 	mov.w	r1, #0
9002e428:	bf14      	ite	ne
9002e42a:	2340      	movne	r3, #64	@ 0x40
9002e42c:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
9002e430:	2000      	movs	r0, #0
9002e432:	6031      	str	r1, [r6, #0]
9002e434:	602b      	str	r3, [r5, #0]
9002e436:	b016      	add	sp, #88	@ 0x58
9002e438:	bd70      	pop	{r4, r5, r6, pc}
9002e43a:	466a      	mov	r2, sp
9002e43c:	f000 f848 	bl	9002e4d0 <_fstat_r>
9002e440:	2800      	cmp	r0, #0
9002e442:	dbec      	blt.n	9002e41e <__swhatbuf_r+0x12>
9002e444:	9901      	ldr	r1, [sp, #4]
9002e446:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
9002e44a:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
9002e44e:	4259      	negs	r1, r3
9002e450:	4159      	adcs	r1, r3
9002e452:	f44f 6380 	mov.w	r3, #1024	@ 0x400
9002e456:	e7eb      	b.n	9002e430 <__swhatbuf_r+0x24>

9002e458 <__smakebuf_r>:
9002e458:	898b      	ldrh	r3, [r1, #12]
9002e45a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9002e45c:	079d      	lsls	r5, r3, #30
9002e45e:	4606      	mov	r6, r0
9002e460:	460c      	mov	r4, r1
9002e462:	d507      	bpl.n	9002e474 <__smakebuf_r+0x1c>
9002e464:	f104 0347 	add.w	r3, r4, #71	@ 0x47
9002e468:	6023      	str	r3, [r4, #0]
9002e46a:	6123      	str	r3, [r4, #16]
9002e46c:	2301      	movs	r3, #1
9002e46e:	6163      	str	r3, [r4, #20]
9002e470:	b003      	add	sp, #12
9002e472:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002e474:	ab01      	add	r3, sp, #4
9002e476:	466a      	mov	r2, sp
9002e478:	f7ff ffc8 	bl	9002e40c <__swhatbuf_r>
9002e47c:	9f00      	ldr	r7, [sp, #0]
9002e47e:	4605      	mov	r5, r0
9002e480:	4639      	mov	r1, r7
9002e482:	4630      	mov	r0, r6
9002e484:	f7fe ffe6 	bl	9002d454 <_malloc_r>
9002e488:	b948      	cbnz	r0, 9002e49e <__smakebuf_r+0x46>
9002e48a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002e48e:	059a      	lsls	r2, r3, #22
9002e490:	d4ee      	bmi.n	9002e470 <__smakebuf_r+0x18>
9002e492:	f023 0303 	bic.w	r3, r3, #3
9002e496:	f043 0302 	orr.w	r3, r3, #2
9002e49a:	81a3      	strh	r3, [r4, #12]
9002e49c:	e7e2      	b.n	9002e464 <__smakebuf_r+0xc>
9002e49e:	89a3      	ldrh	r3, [r4, #12]
9002e4a0:	6020      	str	r0, [r4, #0]
9002e4a2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9002e4a6:	81a3      	strh	r3, [r4, #12]
9002e4a8:	9b01      	ldr	r3, [sp, #4]
9002e4aa:	e9c4 0704 	strd	r0, r7, [r4, #16]
9002e4ae:	b15b      	cbz	r3, 9002e4c8 <__smakebuf_r+0x70>
9002e4b0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002e4b4:	4630      	mov	r0, r6
9002e4b6:	f000 f81d 	bl	9002e4f4 <_isatty_r>
9002e4ba:	b128      	cbz	r0, 9002e4c8 <__smakebuf_r+0x70>
9002e4bc:	89a3      	ldrh	r3, [r4, #12]
9002e4be:	f023 0303 	bic.w	r3, r3, #3
9002e4c2:	f043 0301 	orr.w	r3, r3, #1
9002e4c6:	81a3      	strh	r3, [r4, #12]
9002e4c8:	89a3      	ldrh	r3, [r4, #12]
9002e4ca:	431d      	orrs	r5, r3
9002e4cc:	81a5      	strh	r5, [r4, #12]
9002e4ce:	e7cf      	b.n	9002e470 <__smakebuf_r+0x18>

9002e4d0 <_fstat_r>:
9002e4d0:	b538      	push	{r3, r4, r5, lr}
9002e4d2:	4d07      	ldr	r5, [pc, #28]	@ (9002e4f0 <_fstat_r+0x20>)
9002e4d4:	2300      	movs	r3, #0
9002e4d6:	4604      	mov	r4, r0
9002e4d8:	4608      	mov	r0, r1
9002e4da:	4611      	mov	r1, r2
9002e4dc:	602b      	str	r3, [r5, #0]
9002e4de:	f7d6 f99d 	bl	9000481c <_fstat>
9002e4e2:	1c43      	adds	r3, r0, #1
9002e4e4:	d102      	bne.n	9002e4ec <_fstat_r+0x1c>
9002e4e6:	682b      	ldr	r3, [r5, #0]
9002e4e8:	b103      	cbz	r3, 9002e4ec <_fstat_r+0x1c>
9002e4ea:	6023      	str	r3, [r4, #0]
9002e4ec:	bd38      	pop	{r3, r4, r5, pc}
9002e4ee:	bf00      	nop
9002e4f0:	240227ac 	.word	0x240227ac

9002e4f4 <_isatty_r>:
9002e4f4:	b538      	push	{r3, r4, r5, lr}
9002e4f6:	4d06      	ldr	r5, [pc, #24]	@ (9002e510 <_isatty_r+0x1c>)
9002e4f8:	2300      	movs	r3, #0
9002e4fa:	4604      	mov	r4, r0
9002e4fc:	4608      	mov	r0, r1
9002e4fe:	602b      	str	r3, [r5, #0]
9002e500:	f7d6 f992 	bl	90004828 <_isatty>
9002e504:	1c43      	adds	r3, r0, #1
9002e506:	d102      	bne.n	9002e50e <_isatty_r+0x1a>
9002e508:	682b      	ldr	r3, [r5, #0]
9002e50a:	b103      	cbz	r3, 9002e50e <_isatty_r+0x1a>
9002e50c:	6023      	str	r3, [r4, #0]
9002e50e:	bd38      	pop	{r3, r4, r5, pc}
9002e510:	240227ac 	.word	0x240227ac

9002e514 <_init>:
9002e514:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002e516:	bf00      	nop
9002e518:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002e51a:	bc08      	pop	{r3}
9002e51c:	469e      	mov	lr, r3
9002e51e:	4770      	bx	lr

9002e520 <_fini>:
9002e520:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002e522:	bf00      	nop
9002e524:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002e526:	bc08      	pop	{r3}
9002e528:	469e      	mov	lr, r3
9002e52a:	4770      	bx	lr
