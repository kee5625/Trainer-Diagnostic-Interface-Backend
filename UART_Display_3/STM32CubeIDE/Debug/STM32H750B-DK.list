
STM32H750B-DK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bootloader   0000227c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .isr_vector   00000298  90000000  90000000  00004000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         0002b1ec  900002a0  900002a0  000042a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000341c  9002b490  9002b490  0002f490  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000050  9002e8ac  9002e8ac  000328ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  9002e8fc  9002e8fc  00069e74  2**0
                  CONTENTS
  6 .ARM          00000008  9002e8fc  9002e8fc  000328fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .preinit_array 00000000  9002e904  9002e904  00069e74  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   00000018  9002e904  9002e904  00032904  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   00000008  9002e91c  9002e91c  0003291c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         00000168  24000000  9002e924  00033000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 TouchGFX_MCU_Data_OutBuffer1 00002d00  24000180  9002ea8c  00033180  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 12 TouchGFX_MCU_Data_OutBuffer0 00002d00  24002e80  9003178c  00035e80  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferA 00000100  24005b80  9003448c  00038b80  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 TouchGFX_ScratchbufferB 00000100  24005c80  9003458c  00038c80  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 15 .bss          0001c824  24005d80  9003468c  00038d80  2**3
                  ALLOC
 16 ._user_heap_stack 00002004  240225a4  9003468c  000395a4  2**0
                  ALLOC
 17 .ARM.attributes 0000002e  00000000  00000000  00069e74  2**0
                  CONTENTS, READONLY
 18 FontFlashSection 00000f0c  90200000  90200000  00039000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 19 TextFlashSection 00000060  90200f0c  90200f0c  00039f0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 20 ExtFlashSection 0002ff08  90200f6c  90200f6c  00039f6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 21 TouchGFX_Framebuffer 000bf400  d0000000  d0000000  0006a000  2**2
                  ALLOC
 22 .debug_line   0007696c  00000000  00000000  00069ea2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line_str 00000065  00000000  00000000  000e080e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_info   000d2f09  00000000  00000000  000e0873  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_abbrev 000168de  00000000  00000000  001b377c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_aranges 00003778  00000000  00000000  001ca060  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_str    001a6d38  00000000  00000000  001cd7d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_rnglists 0000673b  00000000  00000000  00374510  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_macro  0004a96f  00000000  00000000  0037ac4b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 30 .comment      000000c2  00000000  00000000  003c55ba  2**0
                  CONTENTS, READONLY
 31 .debug_frame  0000ad00  00000000  00000000  003c567c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 32 .debug_loclists 000395d6  00000000  00000000  003d037c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

900002a0 <__do_global_dtors_aux>:
900002a0:	b510      	push	{r4, lr}
900002a2:	4c05      	ldr	r4, [pc, #20]	@ (900002b8 <__do_global_dtors_aux+0x18>)
900002a4:	7823      	ldrb	r3, [r4, #0]
900002a6:	b933      	cbnz	r3, 900002b6 <__do_global_dtors_aux+0x16>
900002a8:	4b04      	ldr	r3, [pc, #16]	@ (900002bc <__do_global_dtors_aux+0x1c>)
900002aa:	b113      	cbz	r3, 900002b2 <__do_global_dtors_aux+0x12>
900002ac:	4804      	ldr	r0, [pc, #16]	@ (900002c0 <__do_global_dtors_aux+0x20>)
900002ae:	f3af 8000 	nop.w
900002b2:	2301      	movs	r3, #1
900002b4:	7023      	strb	r3, [r4, #0]
900002b6:	bd10      	pop	{r4, pc}
900002b8:	24005d80 	.word	0x24005d80
900002bc:	00000000 	.word	0x00000000
900002c0:	9002b474 	.word	0x9002b474

900002c4 <frame_dummy>:
900002c4:	b508      	push	{r3, lr}
900002c6:	4b03      	ldr	r3, [pc, #12]	@ (900002d4 <frame_dummy+0x10>)
900002c8:	b11b      	cbz	r3, 900002d2 <frame_dummy+0xe>
900002ca:	4903      	ldr	r1, [pc, #12]	@ (900002d8 <frame_dummy+0x14>)
900002cc:	4803      	ldr	r0, [pc, #12]	@ (900002dc <frame_dummy+0x18>)
900002ce:	f3af 8000 	nop.w
900002d2:	bd08      	pop	{r3, pc}
900002d4:	00000000 	.word	0x00000000
900002d8:	24005d84 	.word	0x24005d84
900002dc:	9002b474 	.word	0x9002b474

900002e0 <memchr>:
900002e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
900002e4:	2a10      	cmp	r2, #16
900002e6:	db2b      	blt.n	90000340 <memchr+0x60>
900002e8:	f010 0f07 	tst.w	r0, #7
900002ec:	d008      	beq.n	90000300 <memchr+0x20>
900002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
900002f2:	3a01      	subs	r2, #1
900002f4:	428b      	cmp	r3, r1
900002f6:	d02d      	beq.n	90000354 <memchr+0x74>
900002f8:	f010 0f07 	tst.w	r0, #7
900002fc:	b342      	cbz	r2, 90000350 <memchr+0x70>
900002fe:	d1f6      	bne.n	900002ee <memchr+0xe>
90000300:	b4f0      	push	{r4, r5, r6, r7}
90000302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
90000306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
9000030a:	f022 0407 	bic.w	r4, r2, #7
9000030e:	f07f 0700 	mvns.w	r7, #0
90000312:	2300      	movs	r3, #0
90000314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
90000318:	3c08      	subs	r4, #8
9000031a:	ea85 0501 	eor.w	r5, r5, r1
9000031e:	ea86 0601 	eor.w	r6, r6, r1
90000322:	fa85 f547 	uadd8	r5, r5, r7
90000326:	faa3 f587 	sel	r5, r3, r7
9000032a:	fa86 f647 	uadd8	r6, r6, r7
9000032e:	faa5 f687 	sel	r6, r5, r7
90000332:	b98e      	cbnz	r6, 90000358 <memchr+0x78>
90000334:	d1ee      	bne.n	90000314 <memchr+0x34>
90000336:	bcf0      	pop	{r4, r5, r6, r7}
90000338:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
9000033c:	f002 0207 	and.w	r2, r2, #7
90000340:	b132      	cbz	r2, 90000350 <memchr+0x70>
90000342:	f810 3b01 	ldrb.w	r3, [r0], #1
90000346:	3a01      	subs	r2, #1
90000348:	ea83 0301 	eor.w	r3, r3, r1
9000034c:	b113      	cbz	r3, 90000354 <memchr+0x74>
9000034e:	d1f8      	bne.n	90000342 <memchr+0x62>
90000350:	2000      	movs	r0, #0
90000352:	4770      	bx	lr
90000354:	3801      	subs	r0, #1
90000356:	4770      	bx	lr
90000358:	2d00      	cmp	r5, #0
9000035a:	bf06      	itte	eq
9000035c:	4635      	moveq	r5, r6
9000035e:	3803      	subeq	r0, #3
90000360:	3807      	subne	r0, #7
90000362:	f015 0f01 	tst.w	r5, #1
90000366:	d107      	bne.n	90000378 <memchr+0x98>
90000368:	3001      	adds	r0, #1
9000036a:	f415 7f80 	tst.w	r5, #256	@ 0x100
9000036e:	bf02      	ittt	eq
90000370:	3001      	addeq	r0, #1
90000372:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
90000376:	3001      	addeq	r0, #1
90000378:	bcf0      	pop	{r4, r5, r6, r7}
9000037a:	3801      	subs	r0, #1
9000037c:	4770      	bx	lr
9000037e:	bf00      	nop

90000380 <__aeabi_drsub>:
90000380:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
90000384:	e002      	b.n	9000038c <__adddf3>
90000386:	bf00      	nop

90000388 <__aeabi_dsub>:
90000388:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

9000038c <__adddf3>:
9000038c:	b530      	push	{r4, r5, lr}
9000038e:	ea4f 0441 	mov.w	r4, r1, lsl #1
90000392:	ea4f 0543 	mov.w	r5, r3, lsl #1
90000396:	ea94 0f05 	teq	r4, r5
9000039a:	bf08      	it	eq
9000039c:	ea90 0f02 	teqeq	r0, r2
900003a0:	bf1f      	itttt	ne
900003a2:	ea54 0c00 	orrsne.w	ip, r4, r0
900003a6:	ea55 0c02 	orrsne.w	ip, r5, r2
900003aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
900003ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
900003b2:	f000 80e2 	beq.w	9000057a <__adddf3+0x1ee>
900003b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
900003ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
900003be:	bfb8      	it	lt
900003c0:	426d      	neglt	r5, r5
900003c2:	dd0c      	ble.n	900003de <__adddf3+0x52>
900003c4:	442c      	add	r4, r5
900003c6:	ea80 0202 	eor.w	r2, r0, r2
900003ca:	ea81 0303 	eor.w	r3, r1, r3
900003ce:	ea82 0000 	eor.w	r0, r2, r0
900003d2:	ea83 0101 	eor.w	r1, r3, r1
900003d6:	ea80 0202 	eor.w	r2, r0, r2
900003da:	ea81 0303 	eor.w	r3, r1, r3
900003de:	2d36      	cmp	r5, #54	@ 0x36
900003e0:	bf88      	it	hi
900003e2:	bd30      	pophi	{r4, r5, pc}
900003e4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
900003e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
900003ec:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
900003f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
900003f4:	d002      	beq.n	900003fc <__adddf3+0x70>
900003f6:	4240      	negs	r0, r0
900003f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
900003fc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
90000400:	ea4f 3303 	mov.w	r3, r3, lsl #12
90000404:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
90000408:	d002      	beq.n	90000410 <__adddf3+0x84>
9000040a:	4252      	negs	r2, r2
9000040c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000410:	ea94 0f05 	teq	r4, r5
90000414:	f000 80a7 	beq.w	90000566 <__adddf3+0x1da>
90000418:	f1a4 0401 	sub.w	r4, r4, #1
9000041c:	f1d5 0e20 	rsbs	lr, r5, #32
90000420:	db0d      	blt.n	9000043e <__adddf3+0xb2>
90000422:	fa02 fc0e 	lsl.w	ip, r2, lr
90000426:	fa22 f205 	lsr.w	r2, r2, r5
9000042a:	1880      	adds	r0, r0, r2
9000042c:	f141 0100 	adc.w	r1, r1, #0
90000430:	fa03 f20e 	lsl.w	r2, r3, lr
90000434:	1880      	adds	r0, r0, r2
90000436:	fa43 f305 	asr.w	r3, r3, r5
9000043a:	4159      	adcs	r1, r3
9000043c:	e00e      	b.n	9000045c <__adddf3+0xd0>
9000043e:	f1a5 0520 	sub.w	r5, r5, #32
90000442:	f10e 0e20 	add.w	lr, lr, #32
90000446:	2a01      	cmp	r2, #1
90000448:	fa03 fc0e 	lsl.w	ip, r3, lr
9000044c:	bf28      	it	cs
9000044e:	f04c 0c02 	orrcs.w	ip, ip, #2
90000452:	fa43 f305 	asr.w	r3, r3, r5
90000456:	18c0      	adds	r0, r0, r3
90000458:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
9000045c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
90000460:	d507      	bpl.n	90000472 <__adddf3+0xe6>
90000462:	f04f 0e00 	mov.w	lr, #0
90000466:	f1dc 0c00 	rsbs	ip, ip, #0
9000046a:	eb7e 0000 	sbcs.w	r0, lr, r0
9000046e:	eb6e 0101 	sbc.w	r1, lr, r1
90000472:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
90000476:	d31b      	bcc.n	900004b0 <__adddf3+0x124>
90000478:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000047c:	d30c      	bcc.n	90000498 <__adddf3+0x10c>
9000047e:	0849      	lsrs	r1, r1, #1
90000480:	ea5f 0030 	movs.w	r0, r0, rrx
90000484:	ea4f 0c3c 	mov.w	ip, ip, rrx
90000488:	f104 0401 	add.w	r4, r4, #1
9000048c:	ea4f 5244 	mov.w	r2, r4, lsl #21
90000490:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
90000494:	f080 809a 	bcs.w	900005cc <__adddf3+0x240>
90000498:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
9000049c:	bf08      	it	eq
9000049e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
900004a2:	f150 0000 	adcs.w	r0, r0, #0
900004a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
900004aa:	ea41 0105 	orr.w	r1, r1, r5
900004ae:	bd30      	pop	{r4, r5, pc}
900004b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
900004b4:	4140      	adcs	r0, r0
900004b6:	eb41 0101 	adc.w	r1, r1, r1
900004ba:	3c01      	subs	r4, #1
900004bc:	bf28      	it	cs
900004be:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
900004c2:	d2e9      	bcs.n	90000498 <__adddf3+0x10c>
900004c4:	f091 0f00 	teq	r1, #0
900004c8:	bf04      	itt	eq
900004ca:	4601      	moveq	r1, r0
900004cc:	2000      	moveq	r0, #0
900004ce:	fab1 f381 	clz	r3, r1
900004d2:	bf08      	it	eq
900004d4:	3320      	addeq	r3, #32
900004d6:	f1a3 030b 	sub.w	r3, r3, #11
900004da:	f1b3 0220 	subs.w	r2, r3, #32
900004de:	da0c      	bge.n	900004fa <__adddf3+0x16e>
900004e0:	320c      	adds	r2, #12
900004e2:	dd08      	ble.n	900004f6 <__adddf3+0x16a>
900004e4:	f102 0c14 	add.w	ip, r2, #20
900004e8:	f1c2 020c 	rsb	r2, r2, #12
900004ec:	fa01 f00c 	lsl.w	r0, r1, ip
900004f0:	fa21 f102 	lsr.w	r1, r1, r2
900004f4:	e00c      	b.n	90000510 <__adddf3+0x184>
900004f6:	f102 0214 	add.w	r2, r2, #20
900004fa:	bfd8      	it	le
900004fc:	f1c2 0c20 	rsble	ip, r2, #32
90000500:	fa01 f102 	lsl.w	r1, r1, r2
90000504:	fa20 fc0c 	lsr.w	ip, r0, ip
90000508:	bfdc      	itt	le
9000050a:	ea41 010c 	orrle.w	r1, r1, ip
9000050e:	4090      	lslle	r0, r2
90000510:	1ae4      	subs	r4, r4, r3
90000512:	bfa2      	ittt	ge
90000514:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
90000518:	4329      	orrge	r1, r5
9000051a:	bd30      	popge	{r4, r5, pc}
9000051c:	ea6f 0404 	mvn.w	r4, r4
90000520:	3c1f      	subs	r4, #31
90000522:	da1c      	bge.n	9000055e <__adddf3+0x1d2>
90000524:	340c      	adds	r4, #12
90000526:	dc0e      	bgt.n	90000546 <__adddf3+0x1ba>
90000528:	f104 0414 	add.w	r4, r4, #20
9000052c:	f1c4 0220 	rsb	r2, r4, #32
90000530:	fa20 f004 	lsr.w	r0, r0, r4
90000534:	fa01 f302 	lsl.w	r3, r1, r2
90000538:	ea40 0003 	orr.w	r0, r0, r3
9000053c:	fa21 f304 	lsr.w	r3, r1, r4
90000540:	ea45 0103 	orr.w	r1, r5, r3
90000544:	bd30      	pop	{r4, r5, pc}
90000546:	f1c4 040c 	rsb	r4, r4, #12
9000054a:	f1c4 0220 	rsb	r2, r4, #32
9000054e:	fa20 f002 	lsr.w	r0, r0, r2
90000552:	fa01 f304 	lsl.w	r3, r1, r4
90000556:	ea40 0003 	orr.w	r0, r0, r3
9000055a:	4629      	mov	r1, r5
9000055c:	bd30      	pop	{r4, r5, pc}
9000055e:	fa21 f004 	lsr.w	r0, r1, r4
90000562:	4629      	mov	r1, r5
90000564:	bd30      	pop	{r4, r5, pc}
90000566:	f094 0f00 	teq	r4, #0
9000056a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
9000056e:	bf06      	itte	eq
90000570:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
90000574:	3401      	addeq	r4, #1
90000576:	3d01      	subne	r5, #1
90000578:	e74e      	b.n	90000418 <__adddf3+0x8c>
9000057a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
9000057e:	bf18      	it	ne
90000580:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
90000584:	d029      	beq.n	900005da <__adddf3+0x24e>
90000586:	ea94 0f05 	teq	r4, r5
9000058a:	bf08      	it	eq
9000058c:	ea90 0f02 	teqeq	r0, r2
90000590:	d005      	beq.n	9000059e <__adddf3+0x212>
90000592:	ea54 0c00 	orrs.w	ip, r4, r0
90000596:	bf04      	itt	eq
90000598:	4619      	moveq	r1, r3
9000059a:	4610      	moveq	r0, r2
9000059c:	bd30      	pop	{r4, r5, pc}
9000059e:	ea91 0f03 	teq	r1, r3
900005a2:	bf1e      	ittt	ne
900005a4:	2100      	movne	r1, #0
900005a6:	2000      	movne	r0, #0
900005a8:	bd30      	popne	{r4, r5, pc}
900005aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
900005ae:	d105      	bne.n	900005bc <__adddf3+0x230>
900005b0:	0040      	lsls	r0, r0, #1
900005b2:	4149      	adcs	r1, r1
900005b4:	bf28      	it	cs
900005b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
900005ba:	bd30      	pop	{r4, r5, pc}
900005bc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
900005c0:	bf3c      	itt	cc
900005c2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
900005c6:	bd30      	popcc	{r4, r5, pc}
900005c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
900005cc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
900005d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
900005d4:	f04f 0000 	mov.w	r0, #0
900005d8:	bd30      	pop	{r4, r5, pc}
900005da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
900005de:	bf1a      	itte	ne
900005e0:	4619      	movne	r1, r3
900005e2:	4610      	movne	r0, r2
900005e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
900005e8:	bf1c      	itt	ne
900005ea:	460b      	movne	r3, r1
900005ec:	4602      	movne	r2, r0
900005ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
900005f2:	bf06      	itte	eq
900005f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
900005f8:	ea91 0f03 	teqeq	r1, r3
900005fc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
90000600:	bd30      	pop	{r4, r5, pc}
90000602:	bf00      	nop

90000604 <__aeabi_ui2d>:
90000604:	f090 0f00 	teq	r0, #0
90000608:	bf04      	itt	eq
9000060a:	2100      	moveq	r1, #0
9000060c:	4770      	bxeq	lr
9000060e:	b530      	push	{r4, r5, lr}
90000610:	f44f 6480 	mov.w	r4, #1024	@ 0x400
90000614:	f104 0432 	add.w	r4, r4, #50	@ 0x32
90000618:	f04f 0500 	mov.w	r5, #0
9000061c:	f04f 0100 	mov.w	r1, #0
90000620:	e750      	b.n	900004c4 <__adddf3+0x138>
90000622:	bf00      	nop

90000624 <__aeabi_i2d>:
90000624:	f090 0f00 	teq	r0, #0
90000628:	bf04      	itt	eq
9000062a:	2100      	moveq	r1, #0
9000062c:	4770      	bxeq	lr
9000062e:	b530      	push	{r4, r5, lr}
90000630:	f44f 6480 	mov.w	r4, #1024	@ 0x400
90000634:	f104 0432 	add.w	r4, r4, #50	@ 0x32
90000638:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
9000063c:	bf48      	it	mi
9000063e:	4240      	negmi	r0, r0
90000640:	f04f 0100 	mov.w	r1, #0
90000644:	e73e      	b.n	900004c4 <__adddf3+0x138>
90000646:	bf00      	nop

90000648 <__aeabi_f2d>:
90000648:	0042      	lsls	r2, r0, #1
9000064a:	ea4f 01e2 	mov.w	r1, r2, asr #3
9000064e:	ea4f 0131 	mov.w	r1, r1, rrx
90000652:	ea4f 7002 	mov.w	r0, r2, lsl #28
90000656:	bf1f      	itttt	ne
90000658:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
9000065c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
90000660:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
90000664:	4770      	bxne	lr
90000666:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
9000066a:	bf08      	it	eq
9000066c:	4770      	bxeq	lr
9000066e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
90000672:	bf04      	itt	eq
90000674:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
90000678:	4770      	bxeq	lr
9000067a:	b530      	push	{r4, r5, lr}
9000067c:	f44f 7460 	mov.w	r4, #896	@ 0x380
90000680:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
90000684:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
90000688:	e71c      	b.n	900004c4 <__adddf3+0x138>
9000068a:	bf00      	nop

9000068c <__aeabi_ul2d>:
9000068c:	ea50 0201 	orrs.w	r2, r0, r1
90000690:	bf08      	it	eq
90000692:	4770      	bxeq	lr
90000694:	b530      	push	{r4, r5, lr}
90000696:	f04f 0500 	mov.w	r5, #0
9000069a:	e00a      	b.n	900006b2 <__aeabi_l2d+0x16>

9000069c <__aeabi_l2d>:
9000069c:	ea50 0201 	orrs.w	r2, r0, r1
900006a0:	bf08      	it	eq
900006a2:	4770      	bxeq	lr
900006a4:	b530      	push	{r4, r5, lr}
900006a6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
900006aa:	d502      	bpl.n	900006b2 <__aeabi_l2d+0x16>
900006ac:	4240      	negs	r0, r0
900006ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
900006b2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
900006b6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
900006ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
900006be:	f43f aed8 	beq.w	90000472 <__adddf3+0xe6>
900006c2:	f04f 0203 	mov.w	r2, #3
900006c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006ca:	bf18      	it	ne
900006cc:	3203      	addne	r2, #3
900006ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006d2:	bf18      	it	ne
900006d4:	3203      	addne	r2, #3
900006d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
900006da:	f1c2 0320 	rsb	r3, r2, #32
900006de:	fa00 fc03 	lsl.w	ip, r0, r3
900006e2:	fa20 f002 	lsr.w	r0, r0, r2
900006e6:	fa01 fe03 	lsl.w	lr, r1, r3
900006ea:	ea40 000e 	orr.w	r0, r0, lr
900006ee:	fa21 f102 	lsr.w	r1, r1, r2
900006f2:	4414      	add	r4, r2
900006f4:	e6bd      	b.n	90000472 <__adddf3+0xe6>
900006f6:	bf00      	nop

900006f8 <__aeabi_ldivmod>:
900006f8:	b97b      	cbnz	r3, 9000071a <__aeabi_ldivmod+0x22>
900006fa:	b972      	cbnz	r2, 9000071a <__aeabi_ldivmod+0x22>
900006fc:	2900      	cmp	r1, #0
900006fe:	bfbe      	ittt	lt
90000700:	2000      	movlt	r0, #0
90000702:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
90000706:	e006      	blt.n	90000716 <__aeabi_ldivmod+0x1e>
90000708:	bf08      	it	eq
9000070a:	2800      	cmpeq	r0, #0
9000070c:	bf1c      	itt	ne
9000070e:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
90000712:	f04f 30ff 	movne.w	r0, #4294967295
90000716:	f000 b9d3 	b.w	90000ac0 <__aeabi_idiv0>
9000071a:	f1ad 0c08 	sub.w	ip, sp, #8
9000071e:	e96d ce04 	strd	ip, lr, [sp, #-16]!
90000722:	2900      	cmp	r1, #0
90000724:	db09      	blt.n	9000073a <__aeabi_ldivmod+0x42>
90000726:	2b00      	cmp	r3, #0
90000728:	db1a      	blt.n	90000760 <__aeabi_ldivmod+0x68>
9000072a:	f000 f84d 	bl	900007c8 <__udivmoddi4>
9000072e:	f8dd e004 	ldr.w	lr, [sp, #4]
90000732:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000736:	b004      	add	sp, #16
90000738:	4770      	bx	lr
9000073a:	4240      	negs	r0, r0
9000073c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90000740:	2b00      	cmp	r3, #0
90000742:	db1b      	blt.n	9000077c <__aeabi_ldivmod+0x84>
90000744:	f000 f840 	bl	900007c8 <__udivmoddi4>
90000748:	f8dd e004 	ldr.w	lr, [sp, #4]
9000074c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000750:	b004      	add	sp, #16
90000752:	4240      	negs	r0, r0
90000754:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90000758:	4252      	negs	r2, r2
9000075a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
9000075e:	4770      	bx	lr
90000760:	4252      	negs	r2, r2
90000762:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000766:	f000 f82f 	bl	900007c8 <__udivmoddi4>
9000076a:	f8dd e004 	ldr.w	lr, [sp, #4]
9000076e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000772:	b004      	add	sp, #16
90000774:	4240      	negs	r0, r0
90000776:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
9000077a:	4770      	bx	lr
9000077c:	4252      	negs	r2, r2
9000077e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000782:	f000 f821 	bl	900007c8 <__udivmoddi4>
90000786:	f8dd e004 	ldr.w	lr, [sp, #4]
9000078a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
9000078e:	b004      	add	sp, #16
90000790:	4252      	negs	r2, r2
90000792:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000796:	4770      	bx	lr

90000798 <__aeabi_uldivmod>:
90000798:	b953      	cbnz	r3, 900007b0 <__aeabi_uldivmod+0x18>
9000079a:	b94a      	cbnz	r2, 900007b0 <__aeabi_uldivmod+0x18>
9000079c:	2900      	cmp	r1, #0
9000079e:	bf08      	it	eq
900007a0:	2800      	cmpeq	r0, #0
900007a2:	bf1c      	itt	ne
900007a4:	f04f 31ff 	movne.w	r1, #4294967295
900007a8:	f04f 30ff 	movne.w	r0, #4294967295
900007ac:	f000 b988 	b.w	90000ac0 <__aeabi_idiv0>
900007b0:	f1ad 0c08 	sub.w	ip, sp, #8
900007b4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
900007b8:	f000 f806 	bl	900007c8 <__udivmoddi4>
900007bc:	f8dd e004 	ldr.w	lr, [sp, #4]
900007c0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
900007c4:	b004      	add	sp, #16
900007c6:	4770      	bx	lr

900007c8 <__udivmoddi4>:
900007c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900007cc:	9d08      	ldr	r5, [sp, #32]
900007ce:	468e      	mov	lr, r1
900007d0:	4604      	mov	r4, r0
900007d2:	4688      	mov	r8, r1
900007d4:	2b00      	cmp	r3, #0
900007d6:	d14a      	bne.n	9000086e <__udivmoddi4+0xa6>
900007d8:	428a      	cmp	r2, r1
900007da:	4617      	mov	r7, r2
900007dc:	d962      	bls.n	900008a4 <__udivmoddi4+0xdc>
900007de:	fab2 f682 	clz	r6, r2
900007e2:	b14e      	cbz	r6, 900007f8 <__udivmoddi4+0x30>
900007e4:	f1c6 0320 	rsb	r3, r6, #32
900007e8:	fa01 f806 	lsl.w	r8, r1, r6
900007ec:	fa20 f303 	lsr.w	r3, r0, r3
900007f0:	40b7      	lsls	r7, r6
900007f2:	ea43 0808 	orr.w	r8, r3, r8
900007f6:	40b4      	lsls	r4, r6
900007f8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
900007fc:	fa1f fc87 	uxth.w	ip, r7
90000800:	fbb8 f1fe 	udiv	r1, r8, lr
90000804:	0c23      	lsrs	r3, r4, #16
90000806:	fb0e 8811 	mls	r8, lr, r1, r8
9000080a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
9000080e:	fb01 f20c 	mul.w	r2, r1, ip
90000812:	429a      	cmp	r2, r3
90000814:	d909      	bls.n	9000082a <__udivmoddi4+0x62>
90000816:	18fb      	adds	r3, r7, r3
90000818:	f101 30ff 	add.w	r0, r1, #4294967295
9000081c:	f080 80ea 	bcs.w	900009f4 <__udivmoddi4+0x22c>
90000820:	429a      	cmp	r2, r3
90000822:	f240 80e7 	bls.w	900009f4 <__udivmoddi4+0x22c>
90000826:	3902      	subs	r1, #2
90000828:	443b      	add	r3, r7
9000082a:	1a9a      	subs	r2, r3, r2
9000082c:	b2a3      	uxth	r3, r4
9000082e:	fbb2 f0fe 	udiv	r0, r2, lr
90000832:	fb0e 2210 	mls	r2, lr, r0, r2
90000836:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000083a:	fb00 fc0c 	mul.w	ip, r0, ip
9000083e:	459c      	cmp	ip, r3
90000840:	d909      	bls.n	90000856 <__udivmoddi4+0x8e>
90000842:	18fb      	adds	r3, r7, r3
90000844:	f100 32ff 	add.w	r2, r0, #4294967295
90000848:	f080 80d6 	bcs.w	900009f8 <__udivmoddi4+0x230>
9000084c:	459c      	cmp	ip, r3
9000084e:	f240 80d3 	bls.w	900009f8 <__udivmoddi4+0x230>
90000852:	443b      	add	r3, r7
90000854:	3802      	subs	r0, #2
90000856:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
9000085a:	eba3 030c 	sub.w	r3, r3, ip
9000085e:	2100      	movs	r1, #0
90000860:	b11d      	cbz	r5, 9000086a <__udivmoddi4+0xa2>
90000862:	40f3      	lsrs	r3, r6
90000864:	2200      	movs	r2, #0
90000866:	e9c5 3200 	strd	r3, r2, [r5]
9000086a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9000086e:	428b      	cmp	r3, r1
90000870:	d905      	bls.n	9000087e <__udivmoddi4+0xb6>
90000872:	b10d      	cbz	r5, 90000878 <__udivmoddi4+0xb0>
90000874:	e9c5 0100 	strd	r0, r1, [r5]
90000878:	2100      	movs	r1, #0
9000087a:	4608      	mov	r0, r1
9000087c:	e7f5      	b.n	9000086a <__udivmoddi4+0xa2>
9000087e:	fab3 f183 	clz	r1, r3
90000882:	2900      	cmp	r1, #0
90000884:	d146      	bne.n	90000914 <__udivmoddi4+0x14c>
90000886:	4573      	cmp	r3, lr
90000888:	d302      	bcc.n	90000890 <__udivmoddi4+0xc8>
9000088a:	4282      	cmp	r2, r0
9000088c:	f200 8105 	bhi.w	90000a9a <__udivmoddi4+0x2d2>
90000890:	1a84      	subs	r4, r0, r2
90000892:	eb6e 0203 	sbc.w	r2, lr, r3
90000896:	2001      	movs	r0, #1
90000898:	4690      	mov	r8, r2
9000089a:	2d00      	cmp	r5, #0
9000089c:	d0e5      	beq.n	9000086a <__udivmoddi4+0xa2>
9000089e:	e9c5 4800 	strd	r4, r8, [r5]
900008a2:	e7e2      	b.n	9000086a <__udivmoddi4+0xa2>
900008a4:	2a00      	cmp	r2, #0
900008a6:	f000 8090 	beq.w	900009ca <__udivmoddi4+0x202>
900008aa:	fab2 f682 	clz	r6, r2
900008ae:	2e00      	cmp	r6, #0
900008b0:	f040 80a4 	bne.w	900009fc <__udivmoddi4+0x234>
900008b4:	1a8a      	subs	r2, r1, r2
900008b6:	0c03      	lsrs	r3, r0, #16
900008b8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
900008bc:	b280      	uxth	r0, r0
900008be:	b2bc      	uxth	r4, r7
900008c0:	2101      	movs	r1, #1
900008c2:	fbb2 fcfe 	udiv	ip, r2, lr
900008c6:	fb0e 221c 	mls	r2, lr, ip, r2
900008ca:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
900008ce:	fb04 f20c 	mul.w	r2, r4, ip
900008d2:	429a      	cmp	r2, r3
900008d4:	d907      	bls.n	900008e6 <__udivmoddi4+0x11e>
900008d6:	18fb      	adds	r3, r7, r3
900008d8:	f10c 38ff 	add.w	r8, ip, #4294967295
900008dc:	d202      	bcs.n	900008e4 <__udivmoddi4+0x11c>
900008de:	429a      	cmp	r2, r3
900008e0:	f200 80e0 	bhi.w	90000aa4 <__udivmoddi4+0x2dc>
900008e4:	46c4      	mov	ip, r8
900008e6:	1a9b      	subs	r3, r3, r2
900008e8:	fbb3 f2fe 	udiv	r2, r3, lr
900008ec:	fb0e 3312 	mls	r3, lr, r2, r3
900008f0:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
900008f4:	fb02 f404 	mul.w	r4, r2, r4
900008f8:	429c      	cmp	r4, r3
900008fa:	d907      	bls.n	9000090c <__udivmoddi4+0x144>
900008fc:	18fb      	adds	r3, r7, r3
900008fe:	f102 30ff 	add.w	r0, r2, #4294967295
90000902:	d202      	bcs.n	9000090a <__udivmoddi4+0x142>
90000904:	429c      	cmp	r4, r3
90000906:	f200 80ca 	bhi.w	90000a9e <__udivmoddi4+0x2d6>
9000090a:	4602      	mov	r2, r0
9000090c:	1b1b      	subs	r3, r3, r4
9000090e:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
90000912:	e7a5      	b.n	90000860 <__udivmoddi4+0x98>
90000914:	f1c1 0620 	rsb	r6, r1, #32
90000918:	408b      	lsls	r3, r1
9000091a:	fa22 f706 	lsr.w	r7, r2, r6
9000091e:	431f      	orrs	r7, r3
90000920:	fa0e f401 	lsl.w	r4, lr, r1
90000924:	fa20 f306 	lsr.w	r3, r0, r6
90000928:	fa2e fe06 	lsr.w	lr, lr, r6
9000092c:	ea4f 4917 	mov.w	r9, r7, lsr #16
90000930:	4323      	orrs	r3, r4
90000932:	fa00 f801 	lsl.w	r8, r0, r1
90000936:	fa1f fc87 	uxth.w	ip, r7
9000093a:	fbbe f0f9 	udiv	r0, lr, r9
9000093e:	0c1c      	lsrs	r4, r3, #16
90000940:	fb09 ee10 	mls	lr, r9, r0, lr
90000944:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
90000948:	fb00 fe0c 	mul.w	lr, r0, ip
9000094c:	45a6      	cmp	lr, r4
9000094e:	fa02 f201 	lsl.w	r2, r2, r1
90000952:	d909      	bls.n	90000968 <__udivmoddi4+0x1a0>
90000954:	193c      	adds	r4, r7, r4
90000956:	f100 3aff 	add.w	sl, r0, #4294967295
9000095a:	f080 809c 	bcs.w	90000a96 <__udivmoddi4+0x2ce>
9000095e:	45a6      	cmp	lr, r4
90000960:	f240 8099 	bls.w	90000a96 <__udivmoddi4+0x2ce>
90000964:	3802      	subs	r0, #2
90000966:	443c      	add	r4, r7
90000968:	eba4 040e 	sub.w	r4, r4, lr
9000096c:	fa1f fe83 	uxth.w	lr, r3
90000970:	fbb4 f3f9 	udiv	r3, r4, r9
90000974:	fb09 4413 	mls	r4, r9, r3, r4
90000978:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
9000097c:	fb03 fc0c 	mul.w	ip, r3, ip
90000980:	45a4      	cmp	ip, r4
90000982:	d908      	bls.n	90000996 <__udivmoddi4+0x1ce>
90000984:	193c      	adds	r4, r7, r4
90000986:	f103 3eff 	add.w	lr, r3, #4294967295
9000098a:	f080 8082 	bcs.w	90000a92 <__udivmoddi4+0x2ca>
9000098e:	45a4      	cmp	ip, r4
90000990:	d97f      	bls.n	90000a92 <__udivmoddi4+0x2ca>
90000992:	3b02      	subs	r3, #2
90000994:	443c      	add	r4, r7
90000996:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
9000099a:	eba4 040c 	sub.w	r4, r4, ip
9000099e:	fba0 ec02 	umull	lr, ip, r0, r2
900009a2:	4564      	cmp	r4, ip
900009a4:	4673      	mov	r3, lr
900009a6:	46e1      	mov	r9, ip
900009a8:	d362      	bcc.n	90000a70 <__udivmoddi4+0x2a8>
900009aa:	d05f      	beq.n	90000a6c <__udivmoddi4+0x2a4>
900009ac:	b15d      	cbz	r5, 900009c6 <__udivmoddi4+0x1fe>
900009ae:	ebb8 0203 	subs.w	r2, r8, r3
900009b2:	eb64 0409 	sbc.w	r4, r4, r9
900009b6:	fa04 f606 	lsl.w	r6, r4, r6
900009ba:	fa22 f301 	lsr.w	r3, r2, r1
900009be:	431e      	orrs	r6, r3
900009c0:	40cc      	lsrs	r4, r1
900009c2:	e9c5 6400 	strd	r6, r4, [r5]
900009c6:	2100      	movs	r1, #0
900009c8:	e74f      	b.n	9000086a <__udivmoddi4+0xa2>
900009ca:	fbb1 fcf2 	udiv	ip, r1, r2
900009ce:	0c01      	lsrs	r1, r0, #16
900009d0:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
900009d4:	b280      	uxth	r0, r0
900009d6:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
900009da:	463b      	mov	r3, r7
900009dc:	4638      	mov	r0, r7
900009de:	463c      	mov	r4, r7
900009e0:	46b8      	mov	r8, r7
900009e2:	46be      	mov	lr, r7
900009e4:	2620      	movs	r6, #32
900009e6:	fbb1 f1f7 	udiv	r1, r1, r7
900009ea:	eba2 0208 	sub.w	r2, r2, r8
900009ee:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
900009f2:	e766      	b.n	900008c2 <__udivmoddi4+0xfa>
900009f4:	4601      	mov	r1, r0
900009f6:	e718      	b.n	9000082a <__udivmoddi4+0x62>
900009f8:	4610      	mov	r0, r2
900009fa:	e72c      	b.n	90000856 <__udivmoddi4+0x8e>
900009fc:	f1c6 0220 	rsb	r2, r6, #32
90000a00:	fa2e f302 	lsr.w	r3, lr, r2
90000a04:	40b7      	lsls	r7, r6
90000a06:	40b1      	lsls	r1, r6
90000a08:	fa20 f202 	lsr.w	r2, r0, r2
90000a0c:	ea4f 4e17 	mov.w	lr, r7, lsr #16
90000a10:	430a      	orrs	r2, r1
90000a12:	fbb3 f8fe 	udiv	r8, r3, lr
90000a16:	b2bc      	uxth	r4, r7
90000a18:	fb0e 3318 	mls	r3, lr, r8, r3
90000a1c:	0c11      	lsrs	r1, r2, #16
90000a1e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
90000a22:	fb08 f904 	mul.w	r9, r8, r4
90000a26:	40b0      	lsls	r0, r6
90000a28:	4589      	cmp	r9, r1
90000a2a:	ea4f 4310 	mov.w	r3, r0, lsr #16
90000a2e:	b280      	uxth	r0, r0
90000a30:	d93e      	bls.n	90000ab0 <__udivmoddi4+0x2e8>
90000a32:	1879      	adds	r1, r7, r1
90000a34:	f108 3cff 	add.w	ip, r8, #4294967295
90000a38:	d201      	bcs.n	90000a3e <__udivmoddi4+0x276>
90000a3a:	4589      	cmp	r9, r1
90000a3c:	d81f      	bhi.n	90000a7e <__udivmoddi4+0x2b6>
90000a3e:	eba1 0109 	sub.w	r1, r1, r9
90000a42:	fbb1 f9fe 	udiv	r9, r1, lr
90000a46:	fb09 f804 	mul.w	r8, r9, r4
90000a4a:	fb0e 1119 	mls	r1, lr, r9, r1
90000a4e:	b292      	uxth	r2, r2
90000a50:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
90000a54:	4542      	cmp	r2, r8
90000a56:	d229      	bcs.n	90000aac <__udivmoddi4+0x2e4>
90000a58:	18ba      	adds	r2, r7, r2
90000a5a:	f109 31ff 	add.w	r1, r9, #4294967295
90000a5e:	d2c4      	bcs.n	900009ea <__udivmoddi4+0x222>
90000a60:	4542      	cmp	r2, r8
90000a62:	d2c2      	bcs.n	900009ea <__udivmoddi4+0x222>
90000a64:	f1a9 0102 	sub.w	r1, r9, #2
90000a68:	443a      	add	r2, r7
90000a6a:	e7be      	b.n	900009ea <__udivmoddi4+0x222>
90000a6c:	45f0      	cmp	r8, lr
90000a6e:	d29d      	bcs.n	900009ac <__udivmoddi4+0x1e4>
90000a70:	ebbe 0302 	subs.w	r3, lr, r2
90000a74:	eb6c 0c07 	sbc.w	ip, ip, r7
90000a78:	3801      	subs	r0, #1
90000a7a:	46e1      	mov	r9, ip
90000a7c:	e796      	b.n	900009ac <__udivmoddi4+0x1e4>
90000a7e:	eba7 0909 	sub.w	r9, r7, r9
90000a82:	4449      	add	r1, r9
90000a84:	f1a8 0c02 	sub.w	ip, r8, #2
90000a88:	fbb1 f9fe 	udiv	r9, r1, lr
90000a8c:	fb09 f804 	mul.w	r8, r9, r4
90000a90:	e7db      	b.n	90000a4a <__udivmoddi4+0x282>
90000a92:	4673      	mov	r3, lr
90000a94:	e77f      	b.n	90000996 <__udivmoddi4+0x1ce>
90000a96:	4650      	mov	r0, sl
90000a98:	e766      	b.n	90000968 <__udivmoddi4+0x1a0>
90000a9a:	4608      	mov	r0, r1
90000a9c:	e6fd      	b.n	9000089a <__udivmoddi4+0xd2>
90000a9e:	443b      	add	r3, r7
90000aa0:	3a02      	subs	r2, #2
90000aa2:	e733      	b.n	9000090c <__udivmoddi4+0x144>
90000aa4:	f1ac 0c02 	sub.w	ip, ip, #2
90000aa8:	443b      	add	r3, r7
90000aaa:	e71c      	b.n	900008e6 <__udivmoddi4+0x11e>
90000aac:	4649      	mov	r1, r9
90000aae:	e79c      	b.n	900009ea <__udivmoddi4+0x222>
90000ab0:	eba1 0109 	sub.w	r1, r1, r9
90000ab4:	46c4      	mov	ip, r8
90000ab6:	fbb1 f9fe 	udiv	r9, r1, lr
90000aba:	fb09 f804 	mul.w	r8, r9, r4
90000abe:	e7c4      	b.n	90000a4a <__udivmoddi4+0x282>

90000ac0 <__aeabi_idiv0>:
90000ac0:	4770      	bx	lr
90000ac2:	bf00      	nop

90000ac4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
90000ac4:	f8df d034 	ldr.w	sp, [pc, #52]	@ 90000afc <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
90000ac8:	2100      	movs	r1, #0
  b  LoopCopyDataInit
90000aca:	e003      	b.n	90000ad4 <LoopCopyDataInit>

90000acc <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
90000acc:	4b0c      	ldr	r3, [pc, #48]	@ (90000b00 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
90000ace:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
90000ad0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
90000ad2:	3104      	adds	r1, #4

90000ad4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
90000ad4:	480b      	ldr	r0, [pc, #44]	@ (90000b04 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
90000ad6:	4b0c      	ldr	r3, [pc, #48]	@ (90000b08 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
90000ad8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
90000ada:	429a      	cmp	r2, r3
  bcc  CopyDataInit
90000adc:	d3f6      	bcc.n	90000acc <CopyDataInit>
  ldr  r2, =_sbss
90000ade:	4a0b      	ldr	r2, [pc, #44]	@ (90000b0c <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
90000ae0:	e002      	b.n	90000ae8 <LoopFillZerobss>

90000ae2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
90000ae2:	2300      	movs	r3, #0
  str  r3, [r2], #4
90000ae4:	f842 3b04 	str.w	r3, [r2], #4

90000ae8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
90000ae8:	4b09      	ldr	r3, [pc, #36]	@ (90000b10 <LoopFillZerobss+0x28>)
  cmp  r2, r3
90000aea:	429a      	cmp	r2, r3
  bcc  FillZerobss
90000aec:	d3f9      	bcc.n	90000ae2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
90000aee:	f005 ff01 	bl	900068f4 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
90000af2:	f029 ffe5 	bl	9002aac0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
90000af6:	f003 f815 	bl	90003b24 <main>
  bx  lr    
90000afa:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
90000afc:	24080000 	.word	0x24080000
  ldr  r3, =_sidata
90000b00:	9002e924 	.word	0x9002e924
  ldr  r0, =_sdata
90000b04:	24000000 	.word	0x24000000
  ldr  r3, =_edata
90000b08:	24000168 	.word	0x24000168
  ldr  r2, =_sbss
90000b0c:	24005d80 	.word	0x24005d80
  ldr  r3, = _ebss
90000b10:	240225a4 	.word	0x240225a4

90000b14 <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
90000b14:	e7fe      	b.n	90000b14 <ADC3_IRQHandler>
	...

90000b18 <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
90000b18:	4770      	bx	lr
90000b1a:	bf00      	nop

90000b1c <_Z16setModelInstanceP5Model>:

static Model* modelInstance = nullptr;

void setModelInstance(Model* model)
{
    modelInstance = model;
90000b1c:	4b01      	ldr	r3, [pc, #4]	@ (90000b24 <_Z16setModelInstanceP5Model+0x8>)
90000b1e:	6018      	str	r0, [r3, #0]
}
90000b20:	4770      	bx	lr
90000b22:	bf00      	nop
90000b24:	24005d9c 	.word	0x24005d9c

90000b28 <TC_Received>:

void TC_Received(const char* data)
{
    if (modelInstance)
90000b28:	4b03      	ldr	r3, [pc, #12]	@ (90000b38 <TC_Received+0x10>)
{
90000b2a:	4601      	mov	r1, r0
    if (modelInstance)
90000b2c:	681b      	ldr	r3, [r3, #0]
90000b2e:	b113      	cbz	r3, 90000b36 <TC_Received+0xe>
    {
        modelInstance->TC_Get(data);  // call into the GUI logic
90000b30:	4618      	mov	r0, r3
90000b32:	f004 bd85 	b.w	90005640 <_ZN5Model6TC_GetEPKc>
    }
}
90000b36:	4770      	bx	lr
90000b38:	24005d9c 	.word	0x24005d9c

90000b3c <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
90000b3c:	4770      	bx	lr
90000b3e:	bf00      	nop

90000b40 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
90000b40:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
90000b42:	f002 f8f3 	bl	90002d2c <touchgfx_components_init>
    touchgfx_init();
}
90000b46:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
90000b4a:	f002 b871 	b.w	90002c30 <touchgfx_init>
90000b4e:	bf00      	nop

90000b50 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
90000b50:	f002 b8ee 	b.w	90002d30 <touchgfx_taskEntry>

90000b54 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
90000b54:	6840      	ldr	r0, [r0, #4]
    }
90000b56:	4770      	bx	lr

90000b58 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
90000b58:	6041      	str	r1, [r0, #4]
    }
90000b5a:	4770      	bx	lr

90000b5c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000b5c:	f04f 20e0 	mov.w	r0, #3758153728	@ 0xe000e000
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90000b60:	4b08      	ldr	r3, [pc, #32]	@ (90000b84 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
90000b62:	4a09      	ldr	r2, [pc, #36]	@ (90000b88 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000b64:	f8d0 1dfc 	ldr.w	r1, [r0, #3580]	@ 0xdfc
90000b68:	f041 7180 	orr.w	r1, r1, #16777216	@ 0x1000000
90000b6c:	f8c0 1dfc 	str.w	r1, [r0, #3580]	@ 0xdfc
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90000b70:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	@ 0xfb0
90000b74:	430a      	orrs	r2, r1
90000b76:	f8c3 2fb0 	str.w	r2, [r3, #4016]	@ 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
90000b7a:	681a      	ldr	r2, [r3, #0]
90000b7c:	f042 0201 	orr.w	r2, r2, #1
90000b80:	601a      	str	r2, [r3, #0]
}
90000b82:	4770      	bx	lr
90000b84:	e0001000 	.word	0xe0001000
90000b88:	c5acce55 	.word	0xc5acce55

90000b8c <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
90000b8c:	1a52      	subs	r2, r2, r1
90000b8e:	eb02 0253 	add.w	r2, r2, r3, lsr #1
}
90000b92:	fbb2 f0f3 	udiv	r0, r2, r3
90000b96:	4770      	bx	lr

90000b98 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
90000b98:	4b01      	ldr	r3, [pc, #4]	@ (90000ba0 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
90000b9a:	6858      	ldr	r0, [r3, #4]
}
90000b9c:	4770      	bx	lr
90000b9e:	bf00      	nop
90000ba0:	e0001000 	.word	0xe0001000

90000ba4 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
90000ba4:	4770      	bx	lr
90000ba6:	bf00      	nop

90000ba8 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
90000ba8:	b510      	push	{r4, lr}
90000baa:	4604      	mov	r4, r0
90000bac:	210c      	movs	r1, #12
90000bae:	f029 f85d 	bl	90029c6c <_ZdlPvj>
90000bb2:	4620      	mov	r0, r4
90000bb4:	bd10      	pop	{r4, pc}
90000bb6:	bf00      	nop

90000bb8 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000bb8:	6803      	ldr	r3, [r0, #0]
90000bba:	4a0c      	ldr	r2, [pc, #48]	@ (90000bec <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x34>)
90000bbc:	691b      	ldr	r3, [r3, #16]
{
90000bbe:	b510      	push	{r4, lr}
90000bc0:	4604      	mov	r4, r0
    if (active) //idle task sched out
90000bc2:	b149      	cbz	r1, 90000bd8 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x20>
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000bc4:	4293      	cmp	r3, r2
90000bc6:	d10d      	bne.n	90000be4 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x2c>
    return *((volatile unsigned int*)0xE0001004);
90000bc8:	4b09      	ldr	r3, [pc, #36]	@ (90000bf0 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000bca:	6858      	ldr	r0, [r3, #4]
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000bcc:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
90000bce:	6863      	ldr	r3, [r4, #4]
90000bd0:	1a9b      	subs	r3, r3, r2
90000bd2:	4403      	add	r3, r0
90000bd4:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
90000bd6:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
90000bd8:	4293      	cmp	r3, r2
90000bda:	d105      	bne.n	90000be8 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x30>
    return *((volatile unsigned int*)0xE0001004);
90000bdc:	4b04      	ldr	r3, [pc, #16]	@ (90000bf0 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000bde:	6858      	ldr	r0, [r3, #4]
        cc_in = getCPUCycles();
90000be0:	60a0      	str	r0, [r4, #8]
}
90000be2:	bd10      	pop	{r4, pc}
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000be4:	4798      	blx	r3
90000be6:	e7f1      	b.n	90000bcc <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x14>
        cc_in = getCPUCycles();
90000be8:	4798      	blx	r3
90000bea:	e7f9      	b.n	90000be0 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x28>
90000bec:	90000b99 	.word	0x90000b99
90000bf0:	e0001000 	.word	0xe0001000

90000bf4 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
90000bf4:	4770      	bx	lr
90000bf6:	bf00      	nop

90000bf8 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "stm32h750b_discovery_ts.h"

void STM32TouchController::init()
{
90000bf8:	b500      	push	{lr}
90000bfa:	b085      	sub	sp, #20
     *
     */
    TS_Init_t hTS;
    hTS.Orientation = TS_SWAP_XY;
    hTS.Accuracy = 0;
    hTS.Width = 480;
90000bfc:	2208      	movs	r2, #8
90000bfe:	2300      	movs	r3, #0
    hTS.Height = 272;
    BSP_TS_Init(0, &hTS);
90000c00:	2000      	movs	r0, #0
90000c02:	4669      	mov	r1, sp
    hTS.Width = 480;
90000c04:	ed9f 7b06 	vldr	d7, [pc, #24]	@ 90000c20 <_ZN20STM32TouchController4initEv+0x28>
90000c08:	e9cd 2302 	strd	r2, r3, [sp, #8]
90000c0c:	ed8d 7b00 	vstr	d7, [sp]
    BSP_TS_Init(0, &hTS);
90000c10:	f005 fd82 	bl	90006718 <BSP_TS_Init>
}
90000c14:	b005      	add	sp, #20
90000c16:	f85d fb04 	ldr.w	pc, [sp], #4
90000c1a:	bf00      	nop
90000c1c:	f3af 8000 	nop.w
90000c20:	000001e0 	.word	0x000001e0
90000c24:	00000110 	.word	0x00000110

90000c28 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
90000c28:	b530      	push	{r4, r5, lr}
90000c2a:	b085      	sub	sp, #20
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    TS_State_t  TS_State = { 0 };
90000c2c:	2000      	movs	r0, #0
{
90000c2e:	460d      	mov	r5, r1
90000c30:	4614      	mov	r4, r2
    BSP_TS_GetState(0, &TS_State);
90000c32:	a901      	add	r1, sp, #4
    TS_State_t  TS_State = { 0 };
90000c34:	9001      	str	r0, [sp, #4]
90000c36:	e9cd 0002 	strd	r0, r0, [sp, #8]
    BSP_TS_GetState(0, &TS_State);
90000c3a:	f005 fdfb 	bl	90006834 <BSP_TS_GetState>
    if (TS_State.TouchDetected)
90000c3e:	9801      	ldr	r0, [sp, #4]
90000c40:	b120      	cbz	r0, 90000c4c <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        x = TS_State.TouchX;
        y = TS_State.TouchY;
        return true;
90000c42:	2001      	movs	r0, #1
        y = TS_State.TouchY;
90000c44:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        x = TS_State.TouchX;
90000c48:	602a      	str	r2, [r5, #0]
        y = TS_State.TouchY;
90000c4a:	6023      	str	r3, [r4, #0]
    }

    return false;
}
90000c4c:	b005      	add	sp, #20
90000c4e:	bd30      	pop	{r4, r5, pc}

90000c50 <_ZN20STM32TouchControllerD0Ev>:
90000c50:	b510      	push	{r4, lr}
90000c52:	4604      	mov	r4, r0
90000c54:	2104      	movs	r1, #4
90000c56:	f029 f809 	bl	90029c6c <_ZdlPvj>
90000c5a:	4620      	mov	r0, r4
90000c5c:	bd10      	pop	{r4, pc}
90000c5e:	bf00      	nop

90000c60 <_ZN8touchgfx4GPIO4initEv>:
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000c60:	2108      	movs	r1, #8
90000c62:	480c      	ldr	r0, [pc, #48]	@ (90000c94 <_ZN8touchgfx4GPIO4initEv+0x34>)
{
90000c64:	b508      	push	{r3, lr}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000c66:	f006 fef5 	bl	90007a54 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c6a:	2801      	cmp	r0, #1
90000c6c:	d101      	bne.n	90000c72 <_ZN8touchgfx4GPIO4initEv+0x12>
            GPIO_InvertedLevels[id] = 1;
90000c6e:	4b0a      	ldr	r3, [pc, #40]	@ (90000c98 <_ZN8touchgfx4GPIO4initEv+0x38>)
90000c70:	6018      	str	r0, [r3, #0]
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000c72:	2140      	movs	r1, #64	@ 0x40
90000c74:	4809      	ldr	r0, [pc, #36]	@ (90000c9c <_ZN8touchgfx4GPIO4initEv+0x3c>)
90000c76:	f006 feed 	bl	90007a54 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c7a:	2801      	cmp	r0, #1
90000c7c:	d101      	bne.n	90000c82 <_ZN8touchgfx4GPIO4initEv+0x22>
            GPIO_InvertedLevels[id] = 1;
90000c7e:	4b06      	ldr	r3, [pc, #24]	@ (90000c98 <_ZN8touchgfx4GPIO4initEv+0x38>)
90000c80:	6098      	str	r0, [r3, #8]
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000c82:	2140      	movs	r1, #64	@ 0x40
90000c84:	4806      	ldr	r0, [pc, #24]	@ (90000ca0 <_ZN8touchgfx4GPIO4initEv+0x40>)
90000c86:	f006 fee5 	bl	90007a54 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c8a:	2801      	cmp	r0, #1
90000c8c:	d101      	bne.n	90000c92 <_ZN8touchgfx4GPIO4initEv+0x32>
            GPIO_InvertedLevels[id] = 1;
90000c8e:	4b02      	ldr	r3, [pc, #8]	@ (90000c98 <_ZN8touchgfx4GPIO4initEv+0x38>)
90000c90:	60d8      	str	r0, [r3, #12]
}
90000c92:	bd08      	pop	{r3, pc}
90000c94:	58021800 	.word	0x58021800
90000c98:	24005da0 	.word	0x24005da0
90000c9c:	58020400 	.word	0x58020400
90000ca0:	58020000 	.word	0x58020000

90000ca4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
    switch (id)
90000ca4:	2802      	cmp	r0, #2
90000ca6:	d014      	beq.n	90000cd2 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2e>
90000ca8:	2803      	cmp	r0, #3
90000caa:	d009      	beq.n	90000cc0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1c>
90000cac:	b9d0      	cbnz	r0, 90000ce4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x40>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
90000cae:	4b0e      	ldr	r3, [pc, #56]	@ (90000ce8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x44>)
90000cb0:	2108      	movs	r1, #8
90000cb2:	480e      	ldr	r0, [pc, #56]	@ (90000cec <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>)
90000cb4:	681a      	ldr	r2, [r3, #0]
90000cb6:	fab2 f282 	clz	r2, r2
90000cba:	0952      	lsrs	r2, r2, #5
90000cbc:	f006 bed0 	b.w	90007a60 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
90000cc0:	4b09      	ldr	r3, [pc, #36]	@ (90000ce8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x44>)
90000cc2:	2140      	movs	r1, #64	@ 0x40
90000cc4:	480a      	ldr	r0, [pc, #40]	@ (90000cf0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
90000cc6:	68da      	ldr	r2, [r3, #12]
90000cc8:	fab2 f282 	clz	r2, r2
90000ccc:	0952      	lsrs	r2, r2, #5
90000cce:	f006 bec7 	b.w	90007a60 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
90000cd2:	4b05      	ldr	r3, [pc, #20]	@ (90000ce8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x44>)
90000cd4:	2140      	movs	r1, #64	@ 0x40
90000cd6:	4807      	ldr	r0, [pc, #28]	@ (90000cf4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
90000cd8:	689a      	ldr	r2, [r3, #8]
90000cda:	fab2 f282 	clz	r2, r2
90000cde:	0952      	lsrs	r2, r2, #5
90000ce0:	f006 bebe 	b.w	90007a60 <HAL_GPIO_WritePin>
}
90000ce4:	4770      	bx	lr
90000ce6:	bf00      	nop
90000ce8:	24005da0 	.word	0x24005da0
90000cec:	58021800 	.word	0x58021800
90000cf0:	58020000 	.word	0x58020000
90000cf4:	58020400 	.word	0x58020400

90000cf8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
    switch (id)
90000cf8:	2802      	cmp	r0, #2
90000cfa:	d014      	beq.n	90000d26 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2e>
90000cfc:	2803      	cmp	r0, #3
90000cfe:	d009      	beq.n	90000d14 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1c>
90000d00:	b9d0      	cbnz	r0, 90000d38 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x40>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
90000d02:	4b0e      	ldr	r3, [pc, #56]	@ (90000d3c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x44>)
90000d04:	2108      	movs	r1, #8
90000d06:	480e      	ldr	r0, [pc, #56]	@ (90000d40 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>)
90000d08:	681a      	ldr	r2, [r3, #0]
90000d0a:	3a00      	subs	r2, #0
90000d0c:	bf18      	it	ne
90000d0e:	2201      	movne	r2, #1
90000d10:	f006 bea6 	b.w	90007a60 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
90000d14:	4b09      	ldr	r3, [pc, #36]	@ (90000d3c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x44>)
90000d16:	2140      	movs	r1, #64	@ 0x40
90000d18:	480a      	ldr	r0, [pc, #40]	@ (90000d44 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
90000d1a:	68da      	ldr	r2, [r3, #12]
90000d1c:	3a00      	subs	r2, #0
90000d1e:	bf18      	it	ne
90000d20:	2201      	movne	r2, #1
90000d22:	f006 be9d 	b.w	90007a60 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
90000d26:	4b05      	ldr	r3, [pc, #20]	@ (90000d3c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x44>)
90000d28:	2140      	movs	r1, #64	@ 0x40
90000d2a:	4807      	ldr	r0, [pc, #28]	@ (90000d48 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
90000d2c:	689a      	ldr	r2, [r3, #8]
90000d2e:	3a00      	subs	r2, #0
90000d30:	bf18      	it	ne
90000d32:	2201      	movne	r2, #1
90000d34:	f006 be94 	b.w	90007a60 <HAL_GPIO_WritePin>
}
90000d38:	4770      	bx	lr
90000d3a:	bf00      	nop
90000d3c:	24005da0 	.word	0x24005da0
90000d40:	58021800 	.word	0x58021800
90000d44:	58020000 	.word	0x58020000
90000d48:	58020400 	.word	0x58020400

90000d4c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
    switch (id)
90000d4c:	2802      	cmp	r0, #2
90000d4e:	d00a      	beq.n	90000d66 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x1a>
90000d50:	2803      	cmp	r0, #3
90000d52:	d004      	beq.n	90000d5e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x12>
90000d54:	b958      	cbnz	r0, 90000d6e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x22>
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000d56:	2108      	movs	r1, #8
90000d58:	4805      	ldr	r0, [pc, #20]	@ (90000d70 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
90000d5a:	f006 be85 	b.w	90007a68 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000d5e:	2140      	movs	r1, #64	@ 0x40
90000d60:	4804      	ldr	r0, [pc, #16]	@ (90000d74 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x28>)
90000d62:	f006 be81 	b.w	90007a68 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000d66:	2140      	movs	r1, #64	@ 0x40
90000d68:	4803      	ldr	r0, [pc, #12]	@ (90000d78 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>)
90000d6a:	f006 be7d 	b.w	90007a68 <HAL_GPIO_TogglePin>
}
90000d6e:	4770      	bx	lr
90000d70:	58021800 	.word	0x58021800
90000d74:	58020000 	.word	0x58020000
90000d78:	58020400 	.word	0x58020400

90000d7c <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
90000d7c:	2000      	movs	r0, #0
90000d7e:	4770      	bx	lr

90000d80 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
90000d80:	2301      	movs	r3, #1
        requestedOrientation = orientation;
90000d82:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
90000d86:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
90000d8a:	4770      	bx	lr

90000d8c <_ZN8touchgfx3HAL11submitGPU2DEv>:
     *
     * Only implemented on systems with the GPU2D IP.
     */
    virtual void submitGPU2D()
    {
    }
90000d8c:	4770      	bx	lr
90000d8e:	bf00      	nop

90000d90 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
90000d90:	2000      	movs	r0, #0
90000d92:	4770      	bx	lr

90000d94 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000d94:	1e0a      	subs	r2, r1, #0
90000d96:	4b03      	ldr	r3, [pc, #12]	@ (90000da4 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000d98:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000d9a:	bf18      	it	ne
90000d9c:	2201      	movne	r2, #1
90000d9e:	701a      	strb	r2, [r3, #0]
    }
90000da0:	4770      	bx	lr
90000da2:	bf00      	nop
90000da4:	24021863 	.word	0x24021863

90000da8 <_ZN8touchgfx3HAL16waitForLTDCLinesEt>:
     *
     * @param numberOfLines Number of lines to wait.
     */
    virtual void waitForLTDCLines(uint16_t numberOfLines)
    {
    }
90000da8:	4770      	bx	lr
90000daa:	bf00      	nop

90000dac <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
90000dac:	2000      	movs	r0, #0
90000dae:	4770      	bx	lr

90000db0 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
90000db0:	6b83      	ldr	r3, [r0, #56]	@ 0x38
    virtual void taskDelay(uint16_t ms)
90000db2:	4608      	mov	r0, r1
        if (taskDelayFunc)
90000db4:	b103      	cbz	r3, 90000db8 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
90000db6:	4718      	bx	r3
        }
    }
90000db8:	4770      	bx	lr
90000dba:	bf00      	nop

90000dbc <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
90000dbc:	f64f 70ff 	movw	r0, #65535	@ 0xffff
90000dc0:	4770      	bx	lr
90000dc2:	bf00      	nop

90000dc4 <_ZN8touchgfx3HAL25partialLTDCDeadlineMissedEv>:
     * This empty function can be overridden to e.g. output this error condition
     * on a pin.
     */
    virtual void partialLTDCDeadlineMissed()
    {
    }
90000dc4:	4770      	bx	lr
90000dc6:	bf00      	nop

90000dc8 <_ZN8touchgfx3HAL22InvalidateTextureCacheEv>:
     * Called on every tick before drawing into the framebuffer to enable
     * invalidation of any caches that may be incoherent with main memory.
     */
    virtual void InvalidateTextureCache()
    {
    }
90000dc8:	4770      	bx	lr
90000dca:	bf00      	nop

90000dcc <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
90000dcc:	4770      	bx	lr
90000dce:	bf00      	nop

90000dd0 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
90000dd0:	b510      	push	{r4, lr}
90000dd2:	4604      	mov	r4, r0
        swapFrameBuffers();
90000dd4:	f011 f94a 	bl	9001206c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90000dd8:	6823      	ldr	r3, [r4, #0]
90000dda:	4620      	mov	r0, r4
90000ddc:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
    }
90000de0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
90000de4:	4718      	bx	r3
90000de6:	bf00      	nop

90000de8 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
90000de8:	f002 b8c6 	b.w	90002f78 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

90000dec <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
90000dec:	f002 b8ca 	b.w	90002f84 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

90000df0 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
90000df0:	b510      	push	{r4, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
90000df2:	f002 f961 	bl	900030b8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90000df6:	4812      	ldr	r0, [pc, #72]	@ (90000e40 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x50>)
90000df8:	2300      	movs	r3, #0
90000dfa:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
90000dfe:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
90000e02:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000e06:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90000e0a:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000e0e:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
90000e12:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000e16:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000e1a:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000e1c:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
90000e20:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000e22:	f8c0 2274 	str.w	r2, [r0, #628]	@ 0x274
      } while (ways-- != 0U);
90000e26:	1c5a      	adds	r2, r3, #1
90000e28:	d1f8      	bne.n	90000e1c <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2c>
    } while(sets-- != 0U);
90000e2a:	f1ac 0c20 	sub.w	ip, ip, #32
90000e2e:	f11c 0f20 	cmn.w	ip, #32
90000e32:	d1f0      	bne.n	90000e16 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x26>
90000e34:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90000e38:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
90000e3c:	bd10      	pop	{r4, pc}
90000e3e:	bf00      	nop
90000e40:	e000ed00 	.word	0xe000ed00

90000e44 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
90000e44:	f002 b874 	b.w	90002f30 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

90000e48 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
90000e48:	f002 b9ba 	b.w	900031c0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

90000e4c <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
90000e4c:	f002 b9a4 	b.w	90003198 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

90000e50 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
90000e50:	f002 b878 	b.w	90002f44 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

90000e54 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
90000e54:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90000e56:	4b09      	ldr	r3, [pc, #36]	@ (90000e7c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
90000e58:	881b      	ldrh	r3, [r3, #0]
90000e5a:	428b      	cmp	r3, r1
90000e5c:	d808      	bhi.n	90000e70 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
90000e5e:	4b08      	ldr	r3, [pc, #32]	@ (90000e80 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
90000e60:	881b      	ldrh	r3, [r3, #0]
90000e62:	4293      	cmp	r3, r2
90000e64:	d804      	bhi.n	90000e70 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
        FRAME_BUFFER_WIDTH = width;
90000e66:	4807      	ldr	r0, [pc, #28]	@ (90000e84 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
        FRAME_BUFFER_HEIGHT = height;
90000e68:	4b07      	ldr	r3, [pc, #28]	@ (90000e88 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
        FRAME_BUFFER_WIDTH = width;
90000e6a:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = height;
90000e6c:	801a      	strh	r2, [r3, #0]
    }
90000e6e:	bd08      	pop	{r3, pc}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90000e70:	4b06      	ldr	r3, [pc, #24]	@ (90000e8c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
90000e72:	21a3      	movs	r1, #163	@ 0xa3
90000e74:	4a06      	ldr	r2, [pc, #24]	@ (90000e90 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
90000e76:	4807      	ldr	r0, [pc, #28]	@ (90000e94 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
90000e78:	f029 fa6e 	bl	9002a358 <__assert_func>
90000e7c:	24021858 	.word	0x24021858
90000e80:	2402185a 	.word	0x2402185a
90000e84:	2402185e 	.word	0x2402185e
90000e88:	24021860 	.word	0x24021860
90000e8c:	9002b510 	.word	0x9002b510
90000e90:	9002b574 	.word	0x9002b574
90000e94:	9002b5b8 	.word	0x9002b5b8

90000e98 <_ZN20TouchGFXGeneratedHAL17unlockFrameBufferEv>:
     * This specialization is marks DMA2D as un-reserved by the framwork.
     * @see HAL::unlockFrameBuffer
     */
    virtual void unlockFrameBuffer()
    {
        HAL::unlockFrameBuffer();
90000e98:	f010 bc34 	b.w	90011704 <_ZN8touchgfx3HAL17unlockFrameBufferEv>

90000e9c <_ZN11TouchGFXHAL16flushFrameBufferEv>:
        HAL::flushFrameBuffer();
90000e9c:	f010 bafa 	b.w	90011494 <_ZN8touchgfx3HAL16flushFrameBufferEv>

90000ea0 <_ZN11TouchGFXHALD0Ev>:
90000ea0:	b510      	push	{r4, lr}
90000ea2:	4604      	mov	r4, r0
90000ea4:	2190      	movs	r1, #144	@ 0x90
90000ea6:	f028 fee1 	bl	90029c6c <_ZdlPvj>
90000eaa:	4620      	mov	r0, r4
90000eac:	bd10      	pop	{r4, pc}
90000eae:	bf00      	nop

90000eb0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
        if (requestedOrientation != nativeDisplayOrientation)
90000eb0:	f890 c078 	ldrb.w	ip, [r0, #120]	@ 0x78
90000eb4:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
            if (DISPLAY_ROTATION == rotate0)
90000eb8:	4b0b      	ldr	r3, [pc, #44]	@ (90000ee8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x38>)
        if (requestedOrientation != nativeDisplayOrientation)
90000eba:	458c      	cmp	ip, r1
            if (DISPLAY_ROTATION == rotate0)
90000ebc:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
90000ebe:	d00b      	beq.n	90000ed8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x28>
            if (DISPLAY_ROTATION == rotate0)
90000ec0:	b94a      	cbnz	r2, 90000ed6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
                const uint16_t tmp = DISPLAY_HEIGHT;
90000ec2:	4a0a      	ldr	r2, [pc, #40]	@ (90000eec <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
                DISPLAY_ROTATION = rotate90;
90000ec4:	f04f 0c01 	mov.w	ip, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000ec8:	4909      	ldr	r1, [pc, #36]	@ (90000ef0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
90000eca:	8810      	ldrh	r0, [r2, #0]
            DISPLAY_ROTATION = rotate0;
90000ecc:	f883 c000 	strb.w	ip, [r3]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000ed0:	880b      	ldrh	r3, [r1, #0]
            DISPLAY_WIDTH = tmp;
90000ed2:	8008      	strh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000ed4:	8013      	strh	r3, [r2, #0]
    }
90000ed6:	4770      	bx	lr
        else if (DISPLAY_ROTATION != rotate0)
90000ed8:	2a00      	cmp	r2, #0
90000eda:	d0fc      	beq.n	90000ed6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            const uint16_t tmp = DISPLAY_HEIGHT;
90000edc:	4a03      	ldr	r2, [pc, #12]	@ (90000eec <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
            DISPLAY_ROTATION = rotate0;
90000ede:	f04f 0c00 	mov.w	ip, #0
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000ee2:	4903      	ldr	r1, [pc, #12]	@ (90000ef0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
90000ee4:	e7f1      	b.n	90000eca <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x1a>
90000ee6:	bf00      	nop
90000ee8:	2402185c 	.word	0x2402185c
90000eec:	2402185a 	.word	0x2402185a
90000ef0:	24021858 	.word	0x24021858

90000ef4 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
90000ef4:	4603      	mov	r3, r0
        if (useDMAAcceleration)
90000ef6:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
90000efa:	b118      	cbz	r0, 90000f04 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
90000efc:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
90000efe:	6803      	ldr	r3, [r0, #0]
90000f00:	681b      	ldr	r3, [r3, #0]
90000f02:	4718      	bx	r3
    }
90000f04:	4770      	bx	lr
90000f06:	bf00      	nop

90000f08 <_ZN8touchgfx3HAL10getDMATypeEv>:
        return dma.getDMAType();
90000f08:	6840      	ldr	r0, [r0, #4]
90000f0a:	4a04      	ldr	r2, [pc, #16]	@ (90000f1c <_ZN8touchgfx3HAL10getDMATypeEv+0x14>)
90000f0c:	6803      	ldr	r3, [r0, #0]
90000f0e:	699b      	ldr	r3, [r3, #24]
90000f10:	4293      	cmp	r3, r2
90000f12:	d101      	bne.n	90000f18 <_ZN8touchgfx3HAL10getDMATypeEv+0x10>
    }
90000f14:	2000      	movs	r0, #0
90000f16:	4770      	bx	lr
        return dma.getDMAType();
90000f18:	4718      	bx	r3
90000f1a:	bf00      	nop
90000f1c:	90000d7d 	.word	0x90000d7d

90000f20 <_ZN11TouchGFXHAL10initializeEv>:
{
90000f20:	b538      	push	{r3, r4, r5, lr}
90000f22:	4604      	mov	r4, r0
    TouchGFXGeneratedHAL::initialize();
90000f24:	f002 face 	bl	900034c4 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setAnimationStorage((void*)animationBuffer);    // Add animation storage
90000f28:	4a0b      	ldr	r2, [pc, #44]	@ (90000f58 <_ZN11TouchGFXHAL10initializeEv+0x38>)
90000f2a:	6823      	ldr	r3, [r4, #0]
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f2c:	490b      	ldr	r1, [pc, #44]	@ (90000f5c <_ZN11TouchGFXHAL10initializeEv+0x3c>)
90000f2e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
90000f32:	4293      	cmp	r3, r2
90000f34:	d10d      	bne.n	90000f52 <_ZN11TouchGFXHAL10initializeEv+0x32>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f36:	4b0a      	ldr	r3, [pc, #40]	@ (90000f60 <_ZN11TouchGFXHAL10initializeEv+0x40>)
90000f38:	2201      	movs	r2, #1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f3a:	6461      	str	r1, [r4, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f3c:	701a      	strb	r2, [r3, #0]
    instrumentation.init();
90000f3e:	f104 0584 	add.w	r5, r4, #132	@ 0x84
90000f42:	4628      	mov	r0, r5
90000f44:	f7ff fe0a 	bl	90000b5c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
90000f48:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
90000f4a:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
90000f4c:	f884 3070 	strb.w	r3, [r4, #112]	@ 0x70
}
90000f50:	bd38      	pop	{r3, r4, r5, pc}
    setAnimationStorage((void*)animationBuffer);    // Add animation storage
90000f52:	4620      	mov	r0, r4
90000f54:	4798      	blx	r3
90000f56:	e7f2      	b.n	90000f3e <_ZN11TouchGFXHAL10initializeEv+0x1e>
90000f58:	90000d95 	.word	0x90000d95
90000f5c:	d0000000 	.word	0xd0000000
90000f60:	24021863 	.word	0x24021863

90000f64 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f64:	b1a9      	cbz	r1, 90000f92 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2e>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90000f66:	6402      	str	r2, [r0, #64]	@ 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000f68:	3a00      	subs	r2, #0
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90000f6a:	63c1      	str	r1, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000f6c:	bf18      	it	ne
90000f6e:	2201      	movne	r2, #1
90000f70:	490c      	ldr	r1, [pc, #48]	@ (90000fa4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
90000f72:	700a      	strb	r2, [r1, #0]
        setAnimationStorage(animationStorage);
90000f74:	6802      	ldr	r2, [r0, #0]
90000f76:	490c      	ldr	r1, [pc, #48]	@ (90000fa8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x44>)
90000f78:	f8d2 2090 	ldr.w	r2, [r2, #144]	@ 0x90
90000f7c:	428a      	cmp	r2, r1
90000f7e:	d106      	bne.n	90000f8e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2a>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f80:	1e19      	subs	r1, r3, #0
90000f82:	4a0a      	ldr	r2, [pc, #40]	@ (90000fac <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x48>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f84:	6443      	str	r3, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f86:	bf18      	it	ne
90000f88:	2101      	movne	r1, #1
90000f8a:	7011      	strb	r1, [r2, #0]
90000f8c:	4770      	bx	lr
        setAnimationStorage(animationStorage);
90000f8e:	4619      	mov	r1, r3
90000f90:	4710      	bx	r2
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f92:	4b07      	ldr	r3, [pc, #28]	@ (90000fb0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x4c>)
90000f94:	f240 21ff 	movw	r1, #767	@ 0x2ff
90000f98:	4a06      	ldr	r2, [pc, #24]	@ (90000fb4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x50>)
90000f9a:	4807      	ldr	r0, [pc, #28]	@ (90000fb8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
90000f9c:	b510      	push	{r4, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f9e:	f029 f9db 	bl	9002a358 <__assert_func>
90000fa2:	bf00      	nop
90000fa4:	24021862 	.word	0x24021862
90000fa8:	90000d95 	.word	0x90000d95
90000fac:	24021863 	.word	0x24021863
90000fb0:	9002b600 	.word	0x9002b600
90000fb4:	9002b638 	.word	0x9002b638
90000fb8:	9002b5b8 	.word	0x9002b5b8

90000fbc <_ZN11TouchGFXHAL9taskEntryEv>:
{
90000fbc:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
90000fbe:	6803      	ldr	r3, [r0, #0]
{
90000fc0:	4604      	mov	r4, r0
90000fc2:	4d14      	ldr	r5, [pc, #80]	@ (90001014 <_ZN11TouchGFXHAL9taskEntryEv+0x58>)
    enableLCDControllerInterrupt();
90000fc4:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90000fc8:	4798      	blx	r3
    enableInterrupts();
90000fca:	6823      	ldr	r3, [r4, #0]
90000fcc:	4620      	mov	r0, r4
90000fce:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90000fd0:	4798      	blx	r3
    OSWrappers::waitForVSync();
90000fd2:	f001 f9f1 	bl	900023b8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
90000fd6:	6823      	ldr	r3, [r4, #0]
90000fd8:	4620      	mov	r0, r4
90000fda:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
90000fdc:	4798      	blx	r3
    HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_SET);
90000fde:	2201      	movs	r2, #1
90000fe0:	2180      	movs	r1, #128	@ 0x80
90000fe2:	480d      	ldr	r0, [pc, #52]	@ (90001018 <_ZN11TouchGFXHAL9taskEntryEv+0x5c>)
90000fe4:	f006 fd3c 	bl	90007a60 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90000fe8:	2201      	movs	r2, #1
90000fea:	480c      	ldr	r0, [pc, #48]	@ (9000101c <_ZN11TouchGFXHAL9taskEntryEv+0x60>)
90000fec:	4611      	mov	r1, r2
90000fee:	f006 fd37 	bl	90007a60 <HAL_GPIO_WritePin>
        OSWrappers::waitForVSync();
90000ff2:	f001 f9e1 	bl	900023b8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
90000ff6:	6823      	ldr	r3, [r4, #0]
        swapFrameBuffers();
90000ff8:	4620      	mov	r0, r4
90000ffa:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
90000ffc:	42ab      	cmp	r3, r5
90000ffe:	d107      	bne.n	90001010 <_ZN11TouchGFXHAL9taskEntryEv+0x54>
90001000:	f011 f834 	bl	9001206c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90001004:	6823      	ldr	r3, [r4, #0]
90001006:	4620      	mov	r0, r4
90001008:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
9000100c:	4798      	blx	r3
    }
9000100e:	e7f0      	b.n	90000ff2 <_ZN11TouchGFXHAL9taskEntryEv+0x36>
90001010:	4798      	blx	r3
90001012:	e7ee      	b.n	90000ff2 <_ZN11TouchGFXHAL9taskEntryEv+0x36>
90001014:	90000dd1 	.word	0x90000dd1
90001018:	58020c00 	.word	0x58020c00
9000101c:	58022800 	.word	0x58022800

90001020 <IdleTaskHook>:

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
        if ((int)p) //idle task sched out
90001020:	4601      	mov	r1, r0
    {
90001022:	b508      	push	{r3, lr}
        return instance;
90001024:	4b05      	ldr	r3, [pc, #20]	@ (9000103c <IdleTaskHook+0x1c>)
90001026:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
90001028:	b121      	cbz	r1, 90001034 <IdleTaskHook+0x14>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
9000102a:	2101      	movs	r1, #1
9000102c:	f011 f838 	bl	900120a0 <_ZN8touchgfx3HAL12setMCUActiveEb>
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
        }
        return pdTRUE;
    }
90001030:	2001      	movs	r0, #1
90001032:	bd08      	pop	{r3, pc}
            touchgfx::HAL::getInstance()->setMCUActive(false);
90001034:	f011 f834 	bl	900120a0 <_ZN8touchgfx3HAL12setMCUActiveEb>
    }
90001038:	2001      	movs	r0, #1
9000103a:	bd08      	pop	{r3, pc}
9000103c:	24021864 	.word	0x24021864

90001040 <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const
    {
        return frameNumber;
    }
90001040:	6940      	ldr	r0, [r0, #20]
90001042:	4770      	bx	lr

90001044 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    }

    virtual AVIErrors getLastError()
    {
        return lastError;
    }
90001044:	f890 0040 	ldrb.w	r0, [r0, #64]	@ 0x40
90001048:	4770      	bx	lr
9000104a:	bf00      	nop

9000104c <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
9000104c:	6b03      	ldr	r3, [r0, #48]	@ 0x30
9000104e:	b10b      	cbz	r3, 90001054 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0x8>
90001050:	2001      	movs	r0, #1
}
90001052:	4770      	bx	lr
    return (reader != 0) || (movieData != 0);
90001054:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
90001056:	3800      	subs	r0, #0
90001058:	bf18      	it	ne
9000105a:	2001      	movne	r0, #1
9000105c:	4770      	bx	lr
9000105e:	bf00      	nop

90001060 <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
90001060:	6880      	ldr	r0, [r0, #8]
90001062:	4770      	bx	lr

90001064 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
90001064:	4770      	bx	lr
90001066:	bf00      	nop

90001068 <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
    *data = videoInfo;
90001068:	3004      	adds	r0, #4
{
9000106a:	468c      	mov	ip, r1
    *data = videoInfo;
9000106c:	c80f      	ldmia	r0, {r0, r1, r2, r3}
9000106e:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
}
90001072:	4770      	bx	lr

90001074 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
90001074:	4770      	bx	lr
90001076:	bf00      	nop

90001078 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
90001078:	b508      	push	{r3, lr}
    assert(0);
9000107a:	4a03      	ldr	r2, [pc, #12]	@ (90001088 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
9000107c:	f44f 71fc 	mov.w	r1, #504	@ 0x1f8
90001080:	4b02      	ldr	r3, [pc, #8]	@ (9000108c <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
90001082:	4803      	ldr	r0, [pc, #12]	@ (90001090 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
90001084:	f029 f968 	bl	9002a358 <__assert_func>
90001088:	9002b68c 	.word	0x9002b68c
9000108c:	9002b688 	.word	0x9002b688
90001090:	9002b6e8 	.word	0x9002b6e8

90001094 <_ZN20HardwareMJPEGDecoderD0Ev>:
90001094:	b510      	push	{r4, lr}
90001096:	4604      	mov	r4, r0
90001098:	2148      	movs	r1, #72	@ 0x48
9000109a:	f028 fde7 	bl	90029c6c <_ZdlPvj>
9000109e:	4620      	mov	r0, r4
900010a0:	bd10      	pop	{r4, pc}
900010a2:	bf00      	nop

900010a4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
{
900010a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (frameNumber > getNumberOfFrames())
900010a6:	6803      	ldr	r3, [r0, #0]
900010a8:	2901      	cmp	r1, #1
900010aa:	4d30      	ldr	r5, [pc, #192]	@ (9000116c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc8>)
{
900010ac:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
900010ae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900010b0:	bf38      	it	cc
900010b2:	2101      	movcc	r1, #1
900010b4:	42ab      	cmp	r3, r5
900010b6:	460e      	mov	r6, r1
900010b8:	d13f      	bne.n	9000113a <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x96>
    return videoInfo.number_of_frames;
900010ba:	6885      	ldr	r5, [r0, #8]
    if (frameNumber > getNumberOfFrames())
900010bc:	42a9      	cmp	r1, r5
900010be:	d947      	bls.n	90001150 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xac>
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
900010c0:	1e6b      	subs	r3, r5, #1
900010c2:	69e2      	ldr	r2, [r4, #28]
    if (reader != 0)
900010c4:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
900010c6:	eb02 1703 	add.w	r7, r2, r3, lsl #4
    if (reader != 0)
900010ca:	b338      	cbz	r0, 9000111c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x78>
        if (length > aviBufferLength)
900010cc:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
900010ce:	2b0f      	cmp	r3, #15
900010d0:	d940      	bls.n	90001154 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb0>
        reader->seek(offset);
900010d2:	6803      	ldr	r3, [r0, #0]
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
900010d4:	f107 0608 	add.w	r6, r7, #8
        reader->seek(offset);
900010d8:	68db      	ldr	r3, [r3, #12]
900010da:	4631      	mov	r1, r6
900010dc:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900010de:	6b20      	ldr	r0, [r4, #48]	@ 0x30
900010e0:	2210      	movs	r2, #16
900010e2:	6b61      	ldr	r1, [r4, #52]	@ 0x34
900010e4:	6803      	ldr	r3, [r0, #0]
900010e6:	691b      	ldr	r3, [r3, #16]
900010e8:	4798      	blx	r3
900010ea:	b198      	cbz	r0, 90001114 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x70>
    if (reader != 0)
900010ec:	6b23      	ldr	r3, [r4, #48]	@ 0x30
        aviBufferStartOffset = offset;
900010ee:	63e6      	str	r6, [r4, #60]	@ 0x3c
    if (reader != 0)
900010f0:	b1a3      	cbz	r3, 9000111c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x78>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900010f2:	6b62      	ldr	r2, [r4, #52]	@ 0x34
900010f4:	7a93      	ldrb	r3, [r2, #10]
900010f6:	7a51      	ldrb	r1, [r2, #9]
900010f8:	041b      	lsls	r3, r3, #16
900010fa:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
900010fe:	7a11      	ldrb	r1, [r2, #8]
90001100:	7ad2      	ldrb	r2, [r2, #11]
90001102:	430b      	orrs	r3, r1
90001104:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90001108:	6a22      	ldr	r2, [r4, #32]
    this->frameNumber = frameNumber;
9000110a:	6165      	str	r5, [r4, #20]
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
9000110c:	3a04      	subs	r2, #4
9000110e:	441a      	add	r2, r3
90001110:	61a2      	str	r2, [r4, #24]
}
90001112:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90001114:	230d      	movs	r3, #13
90001116:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
9000111a:	e7e7      	b.n	900010ec <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x48>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
9000111c:	f107 0310 	add.w	r3, r7, #16
        volatile const uint8_t* const d = movieData + offset;
90001120:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90001122:	18ca      	adds	r2, r1, r3
        val |= d[0];
90001124:	5cc9      	ldrb	r1, [r1, r3]
        val |= d[1] << 8;
90001126:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
90001128:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
9000112a:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
9000112c:	041b      	lsls	r3, r3, #16
9000112e:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001132:	430b      	orrs	r3, r1
        val |= d[3] << 24;
90001134:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        return val;
90001138:	e7e6      	b.n	90001108 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x64>
    if (frameNumber > getNumberOfFrames())
9000113a:	4798      	blx	r3
9000113c:	4286      	cmp	r6, r0
9000113e:	d907      	bls.n	90001150 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xac>
        frameNumber = getNumberOfFrames();
90001140:	6823      	ldr	r3, [r4, #0]
90001142:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90001144:	42ab      	cmp	r3, r5
90001146:	d00e      	beq.n	90001166 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc2>
90001148:	4620      	mov	r0, r4
9000114a:	4798      	blx	r3
9000114c:	4605      	mov	r5, r0
9000114e:	e7b7      	b.n	900010c0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
{
90001150:	4635      	mov	r5, r6
90001152:	e7b5      	b.n	900010c0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001154:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001156:	4b06      	ldr	r3, [pc, #24]	@ (90001170 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xcc>)
90001158:	4a06      	ldr	r2, [pc, #24]	@ (90001174 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd0>)
9000115a:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000115c:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001160:	4805      	ldr	r0, [pc, #20]	@ (90001178 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd4>)
90001162:	f029 f8f9 	bl	9002a358 <__assert_func>
    return videoInfo.number_of_frames;
90001166:	68a5      	ldr	r5, [r4, #8]
90001168:	e7aa      	b.n	900010c0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
9000116a:	bf00      	nop
9000116c:	90001061 	.word	0x90001061
90001170:	9002b740 	.word	0x9002b740
90001174:	9002b754 	.word	0x9002b754
90001178:	9002b6e8 	.word	0x9002b6e8

9000117c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
9000117c:	6943      	ldr	r3, [r0, #20]
{
9000117e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001182:	2b00      	cmp	r3, #0
90001184:	f000 80c1 	beq.w	9000130a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18e>
    readData(currentMovieOffset, 8);
90001188:	4605      	mov	r5, r0
    if (reader != 0)
9000118a:	6b00      	ldr	r0, [r0, #48]	@ 0x30
    readData(currentMovieOffset, 8);
9000118c:	69ac      	ldr	r4, [r5, #24]
    if (reader != 0)
9000118e:	2800      	cmp	r0, #0
90001190:	f000 80a1 	beq.w	900012d6 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15a>
        if (length > aviBufferLength)
90001194:	6bab      	ldr	r3, [r5, #56]	@ 0x38
90001196:	2b07      	cmp	r3, #7
90001198:	f240 80ac 	bls.w	900012f4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x178>
        reader->seek(offset);
9000119c:	6803      	ldr	r3, [r0, #0]
9000119e:	4621      	mov	r1, r4
900011a0:	68db      	ldr	r3, [r3, #12]
900011a2:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900011a4:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900011a6:	2208      	movs	r2, #8
900011a8:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900011aa:	6803      	ldr	r3, [r0, #0]
900011ac:	691b      	ldr	r3, [r3, #16]
900011ae:	4798      	blx	r3
900011b0:	2800      	cmp	r0, #0
900011b2:	f000 808c 	beq.w	900012ce <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x152>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
900011b6:	69ab      	ldr	r3, [r5, #24]
    if (reader != 0)
900011b8:	6b28      	ldr	r0, [r5, #48]	@ 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
900011ba:	1d1a      	adds	r2, r3, #4
        aviBufferStartOffset = offset;
900011bc:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
900011be:	2800      	cmp	r0, #0
900011c0:	f000 808b 	beq.w	900012da <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15e>
        const uint32_t index = offset - aviBufferStartOffset;
900011c4:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011c6:	6b6c      	ldr	r4, [r5, #52]	@ 0x34
900011c8:	18a1      	adds	r1, r4, r2
900011ca:	5ca2      	ldrb	r2, [r4, r2]
900011cc:	788c      	ldrb	r4, [r1, #2]
900011ce:	784e      	ldrb	r6, [r1, #1]
900011d0:	0424      	lsls	r4, r4, #16
900011d2:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
900011d6:	4314      	orrs	r4, r2
900011d8:	78ca      	ldrb	r2, [r1, #3]
900011da:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
            lastError = AVI_ERROR_EOF_REACHED;
900011de:	270d      	movs	r7, #13
        if (streamNo == STREAM0 && chunkType == TYPEDC)
900011e0:	f243 0630 	movw	r6, #12336	@ 0x3030
900011e4:	e03a      	b.n	9000125c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xe0>
        if (length > aviBufferLength)
900011e6:	6bab      	ldr	r3, [r5, #56]	@ 0x38
900011e8:	2b07      	cmp	r3, #7
900011ea:	f240 8083 	bls.w	900012f4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x178>
        reader->seek(offset);
900011ee:	6803      	ldr	r3, [r0, #0]
900011f0:	4621      	mov	r1, r4
900011f2:	68db      	ldr	r3, [r3, #12]
900011f4:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900011f6:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900011f8:	2208      	movs	r2, #8
900011fa:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900011fc:	6803      	ldr	r3, [r0, #0]
900011fe:	691b      	ldr	r3, [r3, #16]
90001200:	4798      	blx	r3
90001202:	b908      	cbnz	r0, 90001208 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x8c>
            lastError = AVI_ERROR_EOF_REACHED;
90001204:	f885 7040 	strb.w	r7, [r5, #64]	@ 0x40
    if (reader != 0)
90001208:	6b28      	ldr	r0, [r5, #48]	@ 0x30
        uint32_t streamNo  = getU16(currentMovieOffset);
9000120a:	69ab      	ldr	r3, [r5, #24]
        aviBufferStartOffset = offset;
9000120c:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
9000120e:	2800      	cmp	r0, #0
90001210:	d079      	beq.n	90001306 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18a>
        const uint32_t index = offset - aviBufferStartOffset;
90001212:	1b1b      	subs	r3, r3, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001214:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001216:	18ca      	adds	r2, r1, r3
90001218:	5ccb      	ldrb	r3, [r1, r3]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000121a:	7994      	ldrb	r4, [r2, #6]
9000121c:	f892 a005 	ldrb.w	sl, [r2, #5]
90001220:	0424      	lsls	r4, r4, #16
90001222:	f892 c004 	ldrb.w	ip, [r2, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001226:	f892 9001 	ldrb.w	r9, [r2, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000122a:	ea44 240a 	orr.w	r4, r4, sl, lsl #8
9000122e:	79d1      	ldrb	r1, [r2, #7]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001230:	f892 8003 	ldrb.w	r8, [r2, #3]
90001234:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
90001238:	f892 e002 	ldrb.w	lr, [r2, #2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000123c:	ea44 040c 	orr.w	r4, r4, ip
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001240:	ea4e 2208 	orr.w	r2, lr, r8, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001244:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90001248:	f246 3164 	movw	r1, #25444	@ 0x6364
9000124c:	42b3      	cmp	r3, r6
9000124e:	bf08      	it	eq
90001250:	428a      	cmpeq	r2, r1
90001252:	bf0c      	ite	eq
90001254:	2301      	moveq	r3, #1
90001256:	2300      	movne	r3, #0
90001258:	d036      	beq.n	900012c8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x14c>
    while (currentMovieOffset + 8 + chunkSize < movieLength)
9000125a:	69ab      	ldr	r3, [r5, #24]
9000125c:	441c      	add	r4, r3
9000125e:	6aab      	ldr	r3, [r5, #40]	@ 0x28
90001260:	f104 0208 	add.w	r2, r4, #8
90001264:	429a      	cmp	r2, r3
90001266:	d22a      	bcs.n	900012be <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x142>
        frameNumber++;
90001268:	696b      	ldr	r3, [r5, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
9000126a:	3409      	adds	r4, #9
        frameNumber++;
9000126c:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
9000126e:	f024 0401 	bic.w	r4, r4, #1
90001272:	e9c5 3405 	strd	r3, r4, [r5, #20]
    if (reader != 0)
90001276:	2800      	cmp	r0, #0
90001278:	d1b5      	bne.n	900011e6 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x6a>
        volatile const uint8_t* const d = movieData + offset;
9000127a:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
        uint32_t chunkType = getU16(currentMovieOffset + 2);
9000127c:	1ca2      	adds	r2, r4, #2
        chunkSize = getU32(currentMovieOffset + 4);
9000127e:	f104 0e04 	add.w	lr, r4, #4
        volatile const uint8_t* const d = movieData + offset;
90001282:	eb01 0c04 	add.w	ip, r1, r4
        val |= d[0];
90001286:	5d0b      	ldrb	r3, [r1, r4]
        val |= d[1] << 8;
90001288:	f89c 4001 	ldrb.w	r4, [ip, #1]
        volatile const uint8_t* const d = movieData + offset;
9000128c:	eb01 0c0e 	add.w	ip, r1, lr
        val |= d[1] << 8;
90001290:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
        volatile const uint8_t* const d = movieData + offset;
90001294:	188c      	adds	r4, r1, r2
        val |= d[0];
90001296:	5c8a      	ldrb	r2, [r1, r2]
        val |= d[1] << 8;
90001298:	7864      	ldrb	r4, [r4, #1]
        val |= d[0];
9000129a:	f811 e00e 	ldrb.w	lr, [r1, lr]
        val |= d[1] << 8;
9000129e:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
        val |= d[1] << 8;
900012a2:	f89c 8001 	ldrb.w	r8, [ip, #1]
        val |= d[2] << 16;
900012a6:	f89c 4002 	ldrb.w	r4, [ip, #2]
        val |= d[3] << 24;
900012aa:	f89c 1003 	ldrb.w	r1, [ip, #3]
        val |= d[2] << 16;
900012ae:	0424      	lsls	r4, r4, #16
900012b0:	ea44 2408 	orr.w	r4, r4, r8, lsl #8
900012b4:	ea44 040e 	orr.w	r4, r4, lr
        val |= d[3] << 24;
900012b8:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        return val;
900012bc:	e7c4      	b.n	90001248 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xcc>
    frameNumber = 1;
900012be:	2101      	movs	r1, #1
    currentMovieOffset = firstFrameOffset; /* start over */
900012c0:	6a2a      	ldr	r2, [r5, #32]
    return false;
900012c2:	2300      	movs	r3, #0
    currentMovieOffset = firstFrameOffset; /* start over */
900012c4:	e9c5 1205 	strd	r1, r2, [r5, #20]
}
900012c8:	4618      	mov	r0, r3
900012ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            lastError = AVI_ERROR_EOF_REACHED;
900012ce:	230d      	movs	r3, #13
900012d0:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900012d4:	e76f      	b.n	900011b6 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x3a>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
900012d6:	1d22      	adds	r2, r4, #4
900012d8:	4623      	mov	r3, r4
        volatile const uint8_t* const d = movieData + offset;
900012da:	6aec      	ldr	r4, [r5, #44]	@ 0x2c
900012dc:	18a1      	adds	r1, r4, r2
        val |= d[0];
900012de:	5ca6      	ldrb	r6, [r4, r2]
        val |= d[1] << 8;
900012e0:	784f      	ldrb	r7, [r1, #1]
        val |= d[2] << 16;
900012e2:	788c      	ldrb	r4, [r1, #2]
        val |= d[3] << 24;
900012e4:	78ca      	ldrb	r2, [r1, #3]
        val |= d[2] << 16;
900012e6:	0424      	lsls	r4, r4, #16
900012e8:	ea44 2407 	orr.w	r4, r4, r7, lsl #8
900012ec:	4334      	orrs	r4, r6
        val |= d[3] << 24;
900012ee:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        return val;
900012f2:	e774      	b.n	900011de <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x62>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900012f4:	2009      	movs	r0, #9
            assert(!"Buffer to small");
900012f6:	4b08      	ldr	r3, [pc, #32]	@ (90001318 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x19c>)
900012f8:	4a08      	ldr	r2, [pc, #32]	@ (9000131c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a0>)
900012fa:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900012fc:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
            assert(!"Buffer to small");
90001300:	4807      	ldr	r0, [pc, #28]	@ (90001320 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
90001302:	f029 f829 	bl	9002a358 <__assert_func>
90001306:	461c      	mov	r4, r3
90001308:	e7b7      	b.n	9000127a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xfe>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
9000130a:	4b06      	ldr	r3, [pc, #24]	@ (90001324 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a8>)
9000130c:	21f7      	movs	r1, #247	@ 0xf7
9000130e:	4a06      	ldr	r2, [pc, #24]	@ (90001328 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1ac>)
90001310:	4803      	ldr	r0, [pc, #12]	@ (90001320 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
90001312:	f029 f821 	bl	9002a358 <__assert_func>
90001316:	bf00      	nop
90001318:	9002b740 	.word	0x9002b740
9000131c:	9002b754 	.word	0x9002b754
90001320:	9002b6e8 	.word	0x9002b6e8
90001324:	9002b798 	.word	0x9002b798
90001328:	9002b7e4 	.word	0x9002b7e4

9000132c <_ZN20HardwareMJPEGDecoderC1Ev>:
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
9000132c:	b510      	push	{r4, lr}
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
9000132e:	2200      	movs	r2, #0
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
90001330:	4604      	mov	r4, r0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
90001332:	4b0e      	ldr	r3, [pc, #56]	@ (9000136c <_ZN20HardwareMJPEGDecoderC1Ev+0x40>)
    semDecodingDone = SEM_CREATE();
90001334:	2001      	movs	r0, #1
90001336:	4611      	mov	r1, r2
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
90001338:	63e2      	str	r2, [r4, #60]	@ 0x3c
9000133a:	6023      	str	r3, [r4, #0]
9000133c:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
90001340:	e9c4 2205 	strd	r2, r2, [r4, #20]
90001344:	e9c4 2207 	strd	r2, r2, [r4, #28]
90001348:	e9c4 2209 	strd	r2, r2, [r4, #36]	@ 0x24
9000134c:	e9c4 220b 	strd	r2, r2, [r4, #44]	@ 0x2c
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
90001350:	e9c4 220d 	strd	r2, r2, [r4, #52]	@ 0x34
    videoInfo.frame_width = 0;
90001354:	e9c4 2203 	strd	r2, r2, [r4, #12]
    videoInfo.number_of_frames = 0;
90001358:	e9c4 2201 	strd	r2, r2, [r4, #4]
    semDecodingDone = SEM_CREATE();
9000135c:	f00c ff8a 	bl	9000e274 <osSemaphoreNew>
90001360:	4b03      	ldr	r3, [pc, #12]	@ (90001370 <_ZN20HardwareMJPEGDecoderC1Ev+0x44>)
90001362:	4602      	mov	r2, r0
}
90001364:	4620      	mov	r0, r4
    semDecodingDone = SEM_CREATE();
90001366:	601a      	str	r2, [r3, #0]
}
90001368:	bd10      	pop	{r4, pc}
9000136a:	bf00      	nop
9000136c:	9002d14c 	.word	0x9002d14c
90001370:	24005df8 	.word	0x24005df8

90001374 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
{
90001374:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    currentMovieOffset = 0;
90001378:	2100      	movs	r1, #0
    if (reader != 0)
9000137a:	6b06      	ldr	r6, [r0, #48]	@ 0x30
{
9000137c:	4605      	mov	r5, r0
    currentMovieOffset = 0;
9000137e:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
90001380:	f880 1040 	strb.w	r1, [r0, #64]	@ 0x40
    if (reader != 0)
90001384:	2e00      	cmp	r6, #0
90001386:	f000 81b3 	beq.w	900016f0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37c>
        if (length > aviBufferLength)
9000138a:	6b83      	ldr	r3, [r0, #56]	@ 0x38
9000138c:	2b47      	cmp	r3, #71	@ 0x47
9000138e:	f240 8270 	bls.w	90001872 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
90001392:	6833      	ldr	r3, [r6, #0]
90001394:	4630      	mov	r0, r6
90001396:	68db      	ldr	r3, [r3, #12]
90001398:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000139a:	6b28      	ldr	r0, [r5, #48]	@ 0x30
9000139c:	2248      	movs	r2, #72	@ 0x48
9000139e:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900013a0:	6803      	ldr	r3, [r0, #0]
900013a2:	691b      	ldr	r3, [r3, #16]
900013a4:	4798      	blx	r3
900013a6:	2800      	cmp	r0, #0
900013a8:	f000 80b7 	beq.w	9000151a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a6>
        aviBufferStartOffset = offset;
900013ac:	2300      	movs	r3, #0
    if (reader != 0)
900013ae:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
    if (compare(currentMovieOffset, "RIFF", 4))
900013b0:	69af      	ldr	r7, [r5, #24]
    if (reader != 0)
900013b2:	46b2      	mov	sl, r6
        aviBufferStartOffset = offset;
900013b4:	63eb      	str	r3, [r5, #60]	@ 0x3c
    if (reader != 0)
900013b6:	2e00      	cmp	r6, #0
900013b8:	f000 819b 	beq.w	900016f2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37e>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900013bc:	f8d5 9034 	ldr.w	r9, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
900013c0:	2204      	movs	r2, #4
900013c2:	49c3      	ldr	r1, [pc, #780]	@ (900016d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x35c>)
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900013c4:	eb09 0407 	add.w	r4, r9, r7
    return strncmp(src, str, num);
900013c8:	4620      	mov	r0, r4
900013ca:	f029 fa69 	bl	9002a8a0 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
900013ce:	2800      	cmp	r0, #0
900013d0:	f040 825f 	bne.w	90001892 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    currentMovieOffset += 8;
900013d4:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
900013d8:	2204      	movs	r2, #4
900013da:	49be      	ldr	r1, [pc, #760]	@ (900016d4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x360>)
    currentMovieOffset += 8;
900013dc:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
900013de:	4448      	add	r0, r9
900013e0:	f029 fa5e 	bl	9002a8a0 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
900013e4:	2800      	cmp	r0, #0
900013e6:	f040 8268 	bne.w	900018ba <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
    currentMovieOffset += 4;
900013ea:	f107 0b0c 	add.w	fp, r7, #12
    return strncmp(src, str, num);
900013ee:	2204      	movs	r2, #4
900013f0:	49b9      	ldr	r1, [pc, #740]	@ (900016d8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x364>)
900013f2:	eb09 000b 	add.w	r0, r9, fp
    currentMovieOffset += 4;
900013f6:	f8c5 b018 	str.w	fp, [r5, #24]
    return strncmp(src, str, num);
900013fa:	f029 fa51 	bl	9002a8a0 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
900013fe:	4680      	mov	r8, r0
90001400:	2800      	cmp	r0, #0
90001402:	f040 8250 	bne.w	900018a6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001406:	7ca3      	ldrb	r3, [r4, #18]
90001408:	7c62      	ldrb	r2, [r4, #17]
9000140a:	041b      	lsls	r3, r3, #16
9000140c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
90001410:	7c22      	ldrb	r2, [r4, #16]
90001412:	4313      	orrs	r3, r2
90001414:	7ce2      	ldrb	r2, [r4, #19]
    assert(aviListSize);
90001416:	ea53 6402 	orrs.w	r4, r3, r2, lsl #24
9000141a:	f000 8233 	beq.w	90001884 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
9000141e:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
90001422:	2204      	movs	r2, #4
90001424:	49ad      	ldr	r1, [pc, #692]	@ (900016dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x368>)
90001426:	4448      	add	r0, r9
90001428:	f029 fa3a 	bl	9002a8a0 <strncmp>
    if (compare(offset, "hdrl", 4))
9000142c:	2800      	cmp	r0, #0
9000142e:	d078      	beq.n	90001522 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ae>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001430:	2306      	movs	r3, #6
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001432:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001436:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000143a:	4448      	add	r0, r9
    uint32_t listOffset = aviListOffset + aviListSize + 8;
9000143c:	445c      	add	r4, fp
    return strncmp(src, str, num);
9000143e:	2204      	movs	r2, #4
90001440:	49a7      	ldr	r1, [pc, #668]	@ (900016e0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36c>)
    uint32_t listOffset = aviListOffset + aviListSize + 8;
90001442:	3408      	adds	r4, #8
    return strncmp(src, str, num);
90001444:	f029 fa2c 	bl	9002a8a0 <strncmp>
    if (compare(offset, "avih", 4))
90001448:	2800      	cmp	r0, #0
9000144a:	f000 80e6 	beq.w	9000161a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2a6>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
9000144e:	2307      	movs	r3, #7
90001450:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
    if (reader != 0)
90001454:	f1ba 0f00 	cmp.w	sl, #0
90001458:	f000 8190 	beq.w	9000177c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x408>
        if (length > aviBufferLength)
9000145c:	6bab      	ldr	r3, [r5, #56]	@ 0x38
9000145e:	2b0b      	cmp	r3, #11
90001460:	f240 8207 	bls.w	90001872 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
90001464:	f8da 3000 	ldr.w	r3, [sl]
90001468:	4621      	mov	r1, r4
9000146a:	4650      	mov	r0, sl
9000146c:	68db      	ldr	r3, [r3, #12]
9000146e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001470:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90001472:	220c      	movs	r2, #12
90001474:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001476:	6803      	ldr	r3, [r0, #0]
90001478:	691b      	ldr	r3, [r3, #16]
9000147a:	4798      	blx	r3
9000147c:	2800      	cmp	r0, #0
9000147e:	f000 8121 	beq.w	900016c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x350>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001482:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
        aviBufferStartOffset = offset;
90001486:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
90001488:	63ec      	str	r4, [r5, #60]	@ 0x3c
    return strncmp(src, str, num);
9000148a:	f8df 825c 	ldr.w	r8, [pc, #604]	@ 900016e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x374>
            lastError = AVI_ERROR_EOF_REACHED;
9000148e:	f04f 090d 	mov.w	r9, #13
90001492:	e003      	b.n	9000149c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x128>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001494:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
    if (reader != 0)
90001498:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
        aviBufferStartOffset = offset;
9000149a:	63ec      	str	r4, [r5, #60]	@ 0x3c
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
9000149c:	f104 0708 	add.w	r7, r4, #8
    if (reader != 0)
900014a0:	2e00      	cmp	r6, #0
900014a2:	d052      	beq.n	9000154a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d6>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900014a4:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
    return strncmp(src, str, num);
900014a6:	2204      	movs	r2, #4
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900014a8:	6b68      	ldr	r0, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
900014aa:	4641      	mov	r1, r8
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900014ac:	1afb      	subs	r3, r7, r3
900014ae:	4418      	add	r0, r3
    return strncmp(src, str, num);
900014b0:	f029 f9f6 	bl	9002a8a0 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900014b4:	2800      	cmp	r0, #0
900014b6:	d051      	beq.n	9000155c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1e8>
900014b8:	f1ba 0f00 	cmp.w	sl, #0
900014bc:	f040 80a8 	bne.w	90001610 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29c>
900014c0:	6aab      	ldr	r3, [r5, #40]	@ 0x28
900014c2:	42a3      	cmp	r3, r4
900014c4:	d94d      	bls.n	90001562 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ee>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
900014c6:	3404      	adds	r4, #4
    if (reader != 0)
900014c8:	b386      	cbz	r6, 9000152c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b8>
        const uint32_t index = offset - aviBufferStartOffset;
900014ca:	6bea      	ldr	r2, [r5, #60]	@ 0x3c
        if (length > aviBufferLength)
900014cc:	e9d5 130d 	ldrd	r1, r3, [r5, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
900014d0:	1aa4      	subs	r4, r4, r2
        if (length > aviBufferLength)
900014d2:	2b0b      	cmp	r3, #11
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900014d4:	eb01 0204 	add.w	r2, r1, r4
900014d8:	5d09      	ldrb	r1, [r1, r4]
900014da:	7894      	ldrb	r4, [r2, #2]
900014dc:	7850      	ldrb	r0, [r2, #1]
900014de:	ea4f 4404 	mov.w	r4, r4, lsl #16
900014e2:	78d2      	ldrb	r2, [r2, #3]
900014e4:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
900014e8:	ea44 0401 	orr.w	r4, r4, r1
900014ec:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        listOffset += listSize;
900014f0:	443c      	add	r4, r7
        if (length > aviBufferLength)
900014f2:	f240 81be 	bls.w	90001872 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
900014f6:	6833      	ldr	r3, [r6, #0]
900014f8:	4621      	mov	r1, r4
900014fa:	4630      	mov	r0, r6
900014fc:	68db      	ldr	r3, [r3, #12]
900014fe:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001500:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90001502:	220c      	movs	r2, #12
90001504:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001506:	6803      	ldr	r3, [r0, #0]
90001508:	691b      	ldr	r3, [r3, #16]
9000150a:	4798      	blx	r3
9000150c:	2800      	cmp	r0, #0
9000150e:	d1c1      	bne.n	90001494 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x120>
            lastError = AVI_ERROR_EOF_REACHED;
90001510:	f04f 0a0d 	mov.w	sl, #13
90001514:	f885 9040 	strb.w	r9, [r5, #64]	@ 0x40
90001518:	e7be      	b.n	90001498 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x124>
9000151a:	230d      	movs	r3, #13
9000151c:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
90001520:	e744      	b.n	900013ac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x38>
    offset += 4;
90001522:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
90001526:	f04f 0801 	mov.w	r8, #1
9000152a:	e786      	b.n	9000143a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc6>
        volatile const uint8_t* const d = movieData + offset;
9000152c:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
9000152e:	1913      	adds	r3, r2, r4
        val |= d[0];
90001530:	5d12      	ldrb	r2, [r2, r4]
        val |= d[1] << 8;
90001532:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
90001534:	789c      	ldrb	r4, [r3, #2]
        val |= d[3] << 24;
90001536:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
90001538:	0424      	lsls	r4, r4, #16
9000153a:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
9000153e:	4314      	orrs	r4, r2
        val |= d[3] << 24;
90001540:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
        listOffset += listSize;
90001544:	443c      	add	r4, r7
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001546:	f104 0708 	add.w	r7, r4, #8
        src = (const char*)movieData + offset;
9000154a:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
    return strncmp(src, str, num);
9000154c:	2204      	movs	r2, #4
9000154e:	4641      	mov	r1, r8
        src = (const char*)movieData + offset;
90001550:	2600      	movs	r6, #0
90001552:	4438      	add	r0, r7
    return strncmp(src, str, num);
90001554:	f029 f9a4 	bl	9002a8a0 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001558:	2800      	cmp	r0, #0
9000155a:	d1ad      	bne.n	900014b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x144>
    if (lastError != AVI_NO_ERROR)
9000155c:	f1ba 0f00 	cmp.w	sl, #0
90001560:	d156      	bne.n	90001610 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29c>
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
90001562:	f104 030c 	add.w	r3, r4, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001566:	3404      	adds	r4, #4
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
90001568:	61ab      	str	r3, [r5, #24]
    if (reader != 0)
9000156a:	2e00      	cmp	r6, #0
9000156c:	f000 8118 	beq.w	900017a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x42c>
        const uint32_t index = offset - aviBufferStartOffset;
90001570:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
90001572:	1ae4      	subs	r4, r4, r3
        if (length > aviBufferLength)
90001574:	e9d5 120d 	ldrd	r1, r2, [r5, #52]	@ 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001578:	f104 0e02 	add.w	lr, r4, #2
9000157c:	f104 0c01 	add.w	ip, r4, #1
90001580:	f811 8004 	ldrb.w	r8, [r1, r4]
90001584:	1ce0      	adds	r0, r4, #3
90001586:	f811 300e 	ldrb.w	r3, [r1, lr]
        if (length > aviBufferLength)
9000158a:	2a03      	cmp	r2, #3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000158c:	f811 900c 	ldrb.w	r9, [r1, ip]
90001590:	ea4f 4303 	mov.w	r3, r3, lsl #16
90001594:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
90001598:	ea43 0308 	orr.w	r3, r3, r8
9000159c:	f811 8000 	ldrb.w	r8, [r1, r0]
900015a0:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
900015a4:	443b      	add	r3, r7
900015a6:	626b      	str	r3, [r5, #36]	@ 0x24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900015a8:	f811 300e 	ldrb.w	r3, [r1, lr]
900015ac:	f811 e00c 	ldrb.w	lr, [r1, ip]
900015b0:	f811 c004 	ldrb.w	ip, [r1, r4]
900015b4:	ea4f 4403 	mov.w	r4, r3, lsl #16
900015b8:	5c09      	ldrb	r1, [r1, r0]
900015ba:	ea44 240e 	orr.w	r4, r4, lr, lsl #8
900015be:	ea44 040c 	orr.w	r4, r4, ip
900015c2:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
    listOffset += listSize;
900015c6:	443c      	add	r4, r7
        if (length > aviBufferLength)
900015c8:	f240 8153 	bls.w	90001872 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
900015cc:	6833      	ldr	r3, [r6, #0]
900015ce:	4621      	mov	r1, r4
900015d0:	4630      	mov	r0, r6
900015d2:	68db      	ldr	r3, [r3, #12]
900015d4:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900015d6:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900015d8:	2204      	movs	r2, #4
900015da:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900015dc:	6803      	ldr	r3, [r0, #0]
900015de:	691b      	ldr	r3, [r3, #16]
900015e0:	4798      	blx	r3
900015e2:	2800      	cmp	r0, #0
900015e4:	f000 80cd 	beq.w	90001782 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x40e>
    if (reader != 0)
900015e8:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
        aviBufferStartOffset = offset;
900015ea:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
900015ec:	2b00      	cmp	r3, #0
900015ee:	f000 816e 	beq.w	900018ce <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x55a>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900015f2:	6b68      	ldr	r0, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
900015f4:	2204      	movs	r2, #4
900015f6:	493b      	ldr	r1, [pc, #236]	@ (900016e4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x370>)
900015f8:	f029 f952 	bl	9002a8a0 <strncmp>
    if (!compare(listOffset, "idx1", 4))
900015fc:	2800      	cmp	r0, #0
900015fe:	f040 80ca 	bne.w	90001796 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x422>
    frameNumber = 1; /* next frame number is 1 */
90001602:	2201      	movs	r2, #1
    firstFrameOffset = currentMovieOffset;
90001604:	69ab      	ldr	r3, [r5, #24]
        indexOffset = listOffset;
90001606:	61ec      	str	r4, [r5, #28]
    frameNumber = 1; /* next frame number is 1 */
90001608:	616a      	str	r2, [r5, #20]
    firstFrameOffset = currentMovieOffset;
9000160a:	622b      	str	r3, [r5, #32]
}
9000160c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
90001610:	230a      	movs	r3, #10
90001612:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
90001616:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (foundFrame)
9000161a:	f1b8 0f00 	cmp.w	r8, #0
9000161e:	f43f af19 	beq.w	90001454 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xe0>
        offset += 8; /* skip fourcc and cb in AVIMAINHEADER */
90001622:	f107 0220 	add.w	r2, r7, #32
    if (reader != 0)
90001626:	f1ba 0f00 	cmp.w	sl, #0
9000162a:	f000 80d4 	beq.w	900017d6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x462>
        const uint32_t index = offset - aviBufferStartOffset;
9000162e:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90001630:	f8df c0b8 	ldr.w	ip, [pc, #184]	@ 900016ec <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x378>
        const uint32_t index = offset - aviBufferStartOffset;
90001634:	1ad1      	subs	r1, r2, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001636:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001638:	f1c3 0030 	rsb	r0, r3, #48	@ 0x30
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000163c:	f812 8001 	ldrb.w	r8, [r2, r1]
90001640:	eb02 0e01 	add.w	lr, r2, r1
        const uint32_t index = offset - aviBufferStartOffset;
90001644:	f1c3 0140 	rsb	r1, r3, #64	@ 0x40
90001648:	f1c3 0344 	rsb	r3, r3, #68	@ 0x44
9000164c:	4438      	add	r0, r7
9000164e:	19de      	adds	r6, r3, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001650:	f89e 3002 	ldrb.w	r3, [lr, #2]
        const uint32_t index = offset - aviBufferStartOffset;
90001654:	4439      	add	r1, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001656:	f89e 7001 	ldrb.w	r7, [lr, #1]
9000165a:	041b      	lsls	r3, r3, #16
9000165c:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
90001660:	f89e 7003 	ldrb.w	r7, [lr, #3]
90001664:	ea43 0308 	orr.w	r3, r3, r8
90001668:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
9000166c:	1817      	adds	r7, r2, r0
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000166e:	fbac c303 	umull	ip, r3, ip, r3
90001672:	099b      	lsrs	r3, r3, #6
90001674:	606b      	str	r3, [r5, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001676:	78bb      	ldrb	r3, [r7, #2]
90001678:	f897 e001 	ldrb.w	lr, [r7, #1]
9000167c:	041b      	lsls	r3, r3, #16
9000167e:	f812 c000 	ldrb.w	ip, [r2, r0]
90001682:	78ff      	ldrb	r7, [r7, #3]
90001684:	1850      	adds	r0, r2, r1
90001686:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
9000168a:	ea43 030c 	orr.w	r3, r3, ip
9000168e:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
        videoInfo.number_of_frames = getU32(offset + 16);
90001692:	60ab      	str	r3, [r5, #8]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001694:	7883      	ldrb	r3, [r0, #2]
90001696:	7847      	ldrb	r7, [r0, #1]
90001698:	041b      	lsls	r3, r3, #16
9000169a:	5c51      	ldrb	r1, [r2, r1]
9000169c:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
900016a0:	430b      	orrs	r3, r1
900016a2:	78c1      	ldrb	r1, [r0, #3]
900016a4:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
900016a8:	1991      	adds	r1, r2, r6
        videoInfo.frame_width = getU32(offset + 32);
900016aa:	60eb      	str	r3, [r5, #12]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900016ac:	788b      	ldrb	r3, [r1, #2]
900016ae:	7848      	ldrb	r0, [r1, #1]
900016b0:	041b      	lsls	r3, r3, #16
900016b2:	5d92      	ldrb	r2, [r2, r6]
900016b4:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
900016b8:	4313      	orrs	r3, r2
900016ba:	78ca      	ldrb	r2, [r1, #3]
900016bc:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
900016c0:	612b      	str	r3, [r5, #16]
    if (reader != 0)
900016c2:	e6cb      	b.n	9000145c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xe8>
            lastError = AVI_ERROR_EOF_REACHED;
900016c4:	230d      	movs	r3, #13
900016c6:	469a      	mov	sl, r3
900016c8:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900016cc:	e6db      	b.n	90001486 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x112>
900016ce:	bf00      	nop
900016d0:	9002b818 	.word	0x9002b818
900016d4:	9002b8d0 	.word	0x9002b8d0
900016d8:	9002b8c8 	.word	0x9002b8c8
900016dc:	9002b89c 	.word	0x9002b89c
900016e0:	9002b8b0 	.word	0x9002b8b0
900016e4:	9002b8c0 	.word	0x9002b8c0
900016e8:	9002b8b8 	.word	0x9002b8b8
900016ec:	10624dd3 	.word	0x10624dd3
    if (compare(currentMovieOffset, "RIFF", 4))
900016f0:	4637      	mov	r7, r6
        src = (const char*)movieData + offset;
900016f2:	f8d5 902c 	ldr.w	r9, [r5, #44]	@ 0x2c
    return strncmp(src, str, num);
900016f6:	2204      	movs	r2, #4
900016f8:	4976      	ldr	r1, [pc, #472]	@ (900018d4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x560>)
900016fa:	eb09 0007 	add.w	r0, r9, r7
900016fe:	f029 f8cf 	bl	9002a8a0 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
90001702:	2800      	cmp	r0, #0
90001704:	f040 80c5 	bne.w	90001892 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    currentMovieOffset += 8;
90001708:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
9000170c:	2204      	movs	r2, #4
9000170e:	4972      	ldr	r1, [pc, #456]	@ (900018d8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x564>)
    currentMovieOffset += 8;
90001710:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
90001712:	4448      	add	r0, r9
90001714:	f029 f8c4 	bl	9002a8a0 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
90001718:	2800      	cmp	r0, #0
9000171a:	f040 80ce 	bne.w	900018ba <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
    currentMovieOffset += 4;
9000171e:	f107 0b0c 	add.w	fp, r7, #12
    return strncmp(src, str, num);
90001722:	2204      	movs	r2, #4
90001724:	496d      	ldr	r1, [pc, #436]	@ (900018dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
90001726:	eb09 000b 	add.w	r0, r9, fp
    currentMovieOffset += 4;
9000172a:	f8c5 b018 	str.w	fp, [r5, #24]
    return strncmp(src, str, num);
9000172e:	f029 f8b7 	bl	9002a8a0 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
90001732:	4680      	mov	r8, r0
90001734:	2800      	cmp	r0, #0
90001736:	f040 80b6 	bne.w	900018a6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
    const uint32_t aviListSize = getU32(currentMovieOffset + 4);
9000173a:	f107 0210 	add.w	r2, r7, #16
        volatile const uint8_t* const d = movieData + offset;
9000173e:	eb09 0302 	add.w	r3, r9, r2
        val |= d[0];
90001742:	f819 2002 	ldrb.w	r2, [r9, r2]
        val |= d[1] << 8;
90001746:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
90001748:	789c      	ldrb	r4, [r3, #2]
        val |= d[3] << 24;
9000174a:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
9000174c:	0424      	lsls	r4, r4, #16
9000174e:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
90001752:	4314      	orrs	r4, r2
    assert(aviListSize);
90001754:	ea54 6403 	orrs.w	r4, r4, r3, lsl #24
90001758:	f000 8094 	beq.w	90001884 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
9000175c:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
90001760:	2204      	movs	r2, #4
90001762:	495f      	ldr	r1, [pc, #380]	@ (900018e0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x56c>)
90001764:	4448      	add	r0, r9
90001766:	f029 f89b 	bl	9002a8a0 <strncmp>
    if (compare(offset, "hdrl", 4))
9000176a:	b970      	cbnz	r0, 9000178a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x416>
    offset += 4;
9000176c:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
90001770:	f04f 0801 	mov.w	r8, #1
        src = (const char*)movieData + offset;
90001774:	4448      	add	r0, r9
90001776:	f04f 0a00 	mov.w	sl, #0
9000177a:	e65f      	b.n	9000143c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc8>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
9000177c:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
90001780:	e683      	b.n	9000148a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x116>
            lastError = AVI_ERROR_EOF_REACHED;
90001782:	230d      	movs	r3, #13
90001784:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
90001788:	e72e      	b.n	900015e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x274>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
9000178a:	2306      	movs	r3, #6
    offset += 4;
9000178c:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001790:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
    if (reader != 0)
90001794:	e7ee      	b.n	90001774 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x400>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
90001796:	230b      	movs	r3, #11
90001798:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
9000179c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
900017a0:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
        volatile const uint8_t* const d = movieData + offset;
900017a2:	1902      	adds	r2, r0, r4
        val |= d[0];
900017a4:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
900017a6:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
900017a8:	7893      	ldrb	r3, [r2, #2]
900017aa:	041b      	lsls	r3, r3, #16
900017ac:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
900017b0:	430b      	orrs	r3, r1
        val |= d[3] << 24;
900017b2:	78d1      	ldrb	r1, [r2, #3]
900017b4:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
900017b8:	443b      	add	r3, r7
900017ba:	626b      	str	r3, [r5, #36]	@ 0x24
        val |= d[0];
900017bc:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
900017be:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
900017c0:	7894      	ldrb	r4, [r2, #2]
        val |= d[3] << 24;
900017c2:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
900017c4:	0424      	lsls	r4, r4, #16
900017c6:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
900017ca:	430c      	orrs	r4, r1
        val |= d[3] << 24;
900017cc:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
    listOffset += listSize;
900017d0:	443c      	add	r4, r7
        src = (const char*)movieData + offset;
900017d2:	4420      	add	r0, r4
900017d4:	e70e      	b.n	900015f4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x280>
900017d6:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
        videoInfo.number_of_frames = getU32(offset + 16);
900017d8:	f107 0c30 	add.w	ip, r7, #48	@ 0x30
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900017dc:	f8df e124 	ldr.w	lr, [pc, #292]	@ 90001904 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x590>
        videoInfo.frame_width = getU32(offset + 32);
900017e0:	f107 0040 	add.w	r0, r7, #64	@ 0x40
        volatile const uint8_t* const d = movieData + offset;
900017e4:	eb01 0802 	add.w	r8, r1, r2
        val |= d[0];
900017e8:	f811 9002 	ldrb.w	r9, [r1, r2]
        volatile const uint8_t* const d = movieData + offset;
900017ec:	eb01 020c 	add.w	r2, r1, ip
        videoInfo.frame_height = getU32(offset + 36);
900017f0:	3744      	adds	r7, #68	@ 0x44
        val |= d[1] << 8;
900017f2:	f898 a001 	ldrb.w	sl, [r8, #1]
        val |= d[2] << 16;
900017f6:	f898 3002 	ldrb.w	r3, [r8, #2]
        val |= d[3] << 24;
900017fa:	f898 8003 	ldrb.w	r8, [r8, #3]
        val |= d[2] << 16;
900017fe:	041b      	lsls	r3, r3, #16
90001800:	ea43 230a 	orr.w	r3, r3, sl, lsl #8
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001804:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
        val |= d[2] << 16;
90001808:	ea43 0309 	orr.w	r3, r3, r9
        val |= d[3] << 24;
9000180c:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90001810:	fbae e303 	umull	lr, r3, lr, r3
90001814:	099b      	lsrs	r3, r3, #6
90001816:	606b      	str	r3, [r5, #4]
        val |= d[0];
90001818:	f811 c00c 	ldrb.w	ip, [r1, ip]
        val |= d[1] << 8;
9000181c:	f892 e001 	ldrb.w	lr, [r2, #1]
        val |= d[2] << 16;
90001820:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
90001822:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
90001824:	041b      	lsls	r3, r3, #16
90001826:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
9000182a:	ea43 030c 	orr.w	r3, r3, ip
        volatile const uint8_t* const d = movieData + offset;
9000182e:	eb01 0c00 	add.w	ip, r1, r0
        val |= d[3] << 24;
90001832:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        volatile const uint8_t* const d = movieData + offset;
90001836:	19ca      	adds	r2, r1, r7
        videoInfo.number_of_frames = getU32(offset + 16);
90001838:	60ab      	str	r3, [r5, #8]
        val |= d[0];
9000183a:	f811 e000 	ldrb.w	lr, [r1, r0]
        val |= d[1] << 8;
9000183e:	f89c 8001 	ldrb.w	r8, [ip, #1]
        val |= d[2] << 16;
90001842:	f89c 3002 	ldrb.w	r3, [ip, #2]
        val |= d[3] << 24;
90001846:	f89c 0003 	ldrb.w	r0, [ip, #3]
        val |= d[2] << 16;
9000184a:	041b      	lsls	r3, r3, #16
9000184c:	ea43 2308 	orr.w	r3, r3, r8, lsl #8
90001850:	ea43 030e 	orr.w	r3, r3, lr
        val |= d[3] << 24;
90001854:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
        videoInfo.frame_width = getU32(offset + 32);
90001858:	60eb      	str	r3, [r5, #12]
        val |= d[0];
9000185a:	5dc9      	ldrb	r1, [r1, r7]
        val |= d[1] << 8;
9000185c:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
9000185e:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
90001860:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
90001862:	041b      	lsls	r3, r3, #16
90001864:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001868:	430b      	orrs	r3, r1
        val |= d[3] << 24;
9000186a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
9000186e:	612b      	str	r3, [r5, #16]
    if (reader != 0)
90001870:	e60b      	b.n	9000148a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x116>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001872:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001874:	4b1b      	ldr	r3, [pc, #108]	@ (900018e4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
90001876:	4a1c      	ldr	r2, [pc, #112]	@ (900018e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x574>)
90001878:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000187a:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
            assert(!"Buffer to small");
9000187e:	481b      	ldr	r0, [pc, #108]	@ (900018ec <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
90001880:	f028 fd6a 	bl	9002a358 <__assert_func>
    assert(aviListSize);
90001884:	4b1a      	ldr	r3, [pc, #104]	@ (900018f0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x57c>)
90001886:	f44f 71aa 	mov.w	r1, #340	@ 0x154
9000188a:	4a1a      	ldr	r2, [pc, #104]	@ (900018f4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
9000188c:	4817      	ldr	r0, [pc, #92]	@ (900018ec <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
9000188e:	f028 fd63 	bl	9002a358 <__assert_func>
        lastError = AVI_ERROR_NOT_RIFF;
90001892:	2003      	movs	r0, #3
        assert(!"RIFF header not found");
90001894:	4b18      	ldr	r3, [pc, #96]	@ (900018f8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x584>)
90001896:	4a17      	ldr	r2, [pc, #92]	@ (900018f4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
90001898:	f240 113f 	movw	r1, #319	@ 0x13f
        lastError = AVI_ERROR_NOT_RIFF;
9000189c:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"RIFF header not found");
900018a0:	4812      	ldr	r0, [pc, #72]	@ (900018ec <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
900018a2:	f028 fd59 	bl	9002a358 <__assert_func>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
900018a6:	2005      	movs	r0, #5
        assert(!"AVI LIST not found");
900018a8:	4b14      	ldr	r3, [pc, #80]	@ (900018fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x588>)
900018aa:	4a12      	ldr	r2, [pc, #72]	@ (900018f4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
900018ac:	f44f 71a7 	mov.w	r1, #334	@ 0x14e
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
900018b0:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"AVI LIST not found");
900018b4:	480d      	ldr	r0, [pc, #52]	@ (900018ec <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
900018b6:	f028 fd4f 	bl	9002a358 <__assert_func>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
900018ba:	2004      	movs	r0, #4
        assert(!"AVI header not found");
900018bc:	4b10      	ldr	r3, [pc, #64]	@ (90001900 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x58c>)
900018be:	4a0d      	ldr	r2, [pc, #52]	@ (900018f4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
900018c0:	f240 1147 	movw	r1, #327	@ 0x147
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
900018c4:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"AVI header not found");
900018c8:	4808      	ldr	r0, [pc, #32]	@ (900018ec <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
900018ca:	f028 fd45 	bl	9002a358 <__assert_func>
        src = (const char*)movieData + offset;
900018ce:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
900018d0:	4420      	add	r0, r4
900018d2:	e68f      	b.n	900015f4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x280>
900018d4:	9002b818 	.word	0x9002b818
900018d8:	9002b8d0 	.word	0x9002b8d0
900018dc:	9002b8c8 	.word	0x9002b8c8
900018e0:	9002b89c 	.word	0x9002b89c
900018e4:	9002b740 	.word	0x9002b740
900018e8:	9002b754 	.word	0x9002b754
900018ec:	9002b6e8 	.word	0x9002b6e8
900018f0:	9002b8a4 	.word	0x9002b8a4
900018f4:	9002b83c 	.word	0x9002b83c
900018f8:	9002b820 	.word	0x9002b820
900018fc:	9002b884 	.word	0x9002b884
90001900:	9002b86c 	.word	0x9002b86c
90001904:	10624dd3 	.word	0x10624dd3

90001908 <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
{
90001908:	b410      	push	{r4}
    reader = 0; /* not using reader */
9000190a:	2400      	movs	r4, #0
    movieLength = length;
9000190c:	e9c0 210a 	strd	r2, r1, [r0, #40]	@ 0x28
    reader = 0; /* not using reader */
90001910:	6304      	str	r4, [r0, #48]	@ 0x30
}
90001912:	f85d 4b04 	ldr.w	r4, [sp], #4
    readVideoHeader();
90001916:	f7ff bd2d 	b.w	90001374 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
9000191a:	bf00      	nop

9000191c <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
9000191c:	b510      	push	{r4, lr}
    movieLength = reader.getDataLength();
9000191e:	680b      	ldr	r3, [r1, #0]
{
90001920:	4604      	mov	r4, r0
    movieData = 0;
90001922:	2200      	movs	r2, #0
    movieLength = reader.getDataLength();
90001924:	4608      	mov	r0, r1
90001926:	689b      	ldr	r3, [r3, #8]
    movieData = 0;
90001928:	e9c4 210b 	strd	r2, r1, [r4, #44]	@ 0x2c
    movieLength = reader.getDataLength();
9000192c:	4798      	blx	r3
9000192e:	4603      	mov	r3, r0
    readVideoHeader();
90001930:	4620      	mov	r0, r4
    movieLength = reader.getDataLength();
90001932:	62a3      	str	r3, [r4, #40]	@ 0x28
}
90001934:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
90001938:	f7ff bd1c 	b.w	90001374 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

9000193c <JPEG_Decode_DMA>:
     * @param  JPEGImageSize_Bytes    : jpg image size in bytes.
     * @param  DestAddress : ARGB8888 destination Frame Buffer Address.
     * @retval None
     */
    uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef* hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
    {
9000193c:	b570      	push	{r4, r5, r6, lr}
        JPEG_output_is_paused = 0;
9000193e:	4b1f      	ldr	r3, [pc, #124]	@ (900019bc <JPEG_Decode_DMA+0x80>)
90001940:	2400      	movs	r4, #0
        JPEG_OUT_Read_BufferIndex = 0;
90001942:	4d1f      	ldr	r5, [pc, #124]	@ (900019c0 <JPEG_Decode_DMA+0x84>)
    {
90001944:	b082      	sub	sp, #8
        JPEG_output_is_paused = 0;
90001946:	601c      	str	r4, [r3, #0]
        JPEG_OUT_Read_BufferIndex = 0;
90001948:	602c      	str	r4, [r5, #0]
        JPEG_OUT_Write_BufferIndex = 0;
9000194a:	4b1e      	ldr	r3, [pc, #120]	@ (900019c4 <JPEG_Decode_DMA+0x88>)
        JPEG_InputImageIndex = 0;
        JPEG_InputImageAddress = (uint32_t)input;
        JPEG_InputImageSize_Bytes = chunkSizeIn;
        MCU_BlockIndex = 0;
9000194c:	4d1e      	ldr	r5, [pc, #120]	@ (900019c8 <JPEG_Decode_DMA+0x8c>)
        JPEG_OUT_Write_BufferIndex = 0;
9000194e:	601c      	str	r4, [r3, #0]
            Jpeg_OUT_BufferTab[i].DoCropping = false;
            Jpeg_OUT_BufferTab[i].FirstJob = false;
            Jpeg_OUT_BufferTab[i].LastJob = false;
        }
        Jpeg_OUT_BufferTab[0].FirstJob = true;
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001950:	4e1e      	ldr	r6, [pc, #120]	@ (900019cc <JPEG_Decode_DMA+0x90>)
        MCU_BlockIndex = 0;
90001952:	602c      	str	r4, [r5, #0]
        line_count = 0;
90001954:	4d1e      	ldr	r5, [pc, #120]	@ (900019d0 <JPEG_Decode_DMA+0x94>)
90001956:	602c      	str	r4, [r5, #0]
        {
            Jpeg_OUT_BufferTab[0].DoCropping = true;
        }

        /* Do not return from this function until done with decoding all chunks. */
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001958:	68f5      	ldr	r5, [r6, #12]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
9000195a:	6b76      	ldr	r6, [r6, #52]	@ 0x34
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000195c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90001960:	681b      	ldr	r3, [r3, #0]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001962:	ebb6 0c04 	subs.w	ip, r6, r4
        JPEG_InputImageIndex = 0;
90001966:	4e1b      	ldr	r6, [pc, #108]	@ (900019d4 <JPEG_Decode_DMA+0x98>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001968:	ea4f 15c5 	mov.w	r5, r5, lsl #7
9000196c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001970:	bf18      	it	ne
90001972:	f04f 0c01 	movne.w	ip, #1
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001976:	9500      	str	r5, [sp, #0]
        JPEG_InputImageIndex = 0;
90001978:	6034      	str	r4, [r6, #0]
        JPEG_InputImageAddress = (uint32_t)input;
9000197a:	4e17      	ldr	r6, [pc, #92]	@ (900019d8 <JPEG_Decode_DMA+0x9c>)
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
9000197c:	4d17      	ldr	r5, [pc, #92]	@ (900019dc <JPEG_Decode_DMA+0xa0>)
        JPEG_InputImageAddress = (uint32_t)input;
9000197e:	6031      	str	r1, [r6, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90001980:	4e17      	ldr	r6, [pc, #92]	@ (900019e0 <JPEG_Decode_DMA+0xa4>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001982:	eb05 0383 	add.w	r3, r5, r3, lsl #2
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001986:	f885 c018 	strb.w	ip, [r5, #24]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
9000198a:	6032      	str	r2, [r6, #0]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
9000198c:	2201      	movs	r2, #1
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000198e:	685b      	ldr	r3, [r3, #4]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
90001990:	766a      	strb	r2, [r5, #25]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001992:	f44f 4250 	mov.w	r2, #53248	@ 0xd000
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90001996:	702c      	strb	r4, [r5, #0]
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
90001998:	60ac      	str	r4, [r5, #8]
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
9000199a:	616c      	str	r4, [r5, #20]
            Jpeg_OUT_BufferTab[i].LastJob = false;
9000199c:	76ac      	strb	r4, [r5, #26]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
9000199e:	772c      	strb	r4, [r5, #28]
            Jpeg_OUT_BufferTab[i].DoCropping = false;
900019a0:	86ac      	strh	r4, [r5, #52]	@ 0x34
            Jpeg_OUT_BufferTab[i].LastJob = false;
900019a2:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
            Jpeg_OUT_BufferTab[i].MCU_drawn = 0;
900019a6:	e9c5 4403 	strd	r4, r4, [r5, #12]
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
900019aa:	e9c5 4409 	strd	r4, r4, [r5, #36]	@ 0x24
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
900019ae:	e9c5 440b 	strd	r4, r4, [r5, #44]	@ 0x2c
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900019b2:	f007 fa4f 	bl	90008e54 <HAL_JPEG_Decode_DMA>

        return 0;
    }
900019b6:	4620      	mov	r0, r4
900019b8:	b002      	add	sp, #8
900019ba:	bd70      	pop	{r4, r5, r6, pc}
900019bc:	24006014 	.word	0x24006014
900019c0:	24005df4 	.word	0x24005df4
900019c4:	24006008 	.word	0x24006008
900019c8:	24005dfc 	.word	0x24005dfc
900019cc:	24005db0 	.word	0x24005db0
900019d0:	24006004 	.word	0x24006004
900019d4:	24006024 	.word	0x24006024
900019d8:	2400601c 	.word	0x2400601c
900019dc:	24000004 	.word	0x24000004
900019e0:	24006020 	.word	0x24006020

900019e4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>:
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900019e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900019e8:	4606      	mov	r6, r0
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900019ea:	2402      	movs	r4, #2
900019ec:	483e      	ldr	r0, [pc, #248]	@ (90001ae8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x104>)
900019ee:	6104      	str	r4, [r0, #16]
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
900019f0:	68f4      	ldr	r4, [r6, #12]
        if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
900019f2:	0725      	lsls	r5, r4, #28
900019f4:	d002      	beq.n	900019fc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x18>
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
900019f6:	f024 040f 	bic.w	r4, r4, #15
900019fa:	3410      	adds	r4, #16
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
900019fc:	6004      	str	r4, [r0, #0]
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
900019fe:	0924      	lsrs	r4, r4, #4
        DMA2D_reference = dma;
90001a00:	4d3a      	ldr	r5, [pc, #232]	@ (90001aec <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x108>)
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001a02:	60c4      	str	r4, [r0, #12]
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001a04:	f44f 7470 	mov.w	r4, #960	@ 0x3c0
90001a08:	f8df a100 	ldr.w	sl, [pc, #256]	@ 90001b0c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x128>
90001a0c:	6044      	str	r4, [r0, #4]
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90001a0e:	6934      	ldr	r4, [r6, #16]
    {
        DMA2D_reference->start();
    }

    /* Start JPEG IP if paused and next buffer is empty */
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a10:	4f37      	ldr	r7, [pc, #220]	@ (90001af0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90001a12:	f014 040f 	ands.w	r4, r4, #15
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a16:	f8df 90f8 	ldr.w	r9, [pc, #248]	@ 90001b10 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x12c>
90001a1a:	f8df 80f8 	ldr.w	r8, [pc, #248]	@ 90001b14 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x130>
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90001a1e:	bf18      	it	ne
90001a20:	f1c4 0410 	rsbne	r4, r4, #16
90001a24:	6084      	str	r4, [r0, #8]
        FrameBufferAddress = outputBuffer;
90001a26:	4833      	ldr	r0, [pc, #204]	@ (90001af4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x110>)
90001a28:	4c33      	ldr	r4, [pc, #204]	@ (90001af8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x114>)
90001a2a:	6003      	str	r3, [r0, #0]
        JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, outputBuffer);
90001a2c:	4833      	ldr	r0, [pc, #204]	@ (90001afc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
90001a2e:	f7ff ff85 	bl	9000193c <JPEG_Decode_DMA>
        DMA2D_reference = dma;
90001a32:	6c73      	ldr	r3, [r6, #68]	@ 0x44
90001a34:	4e32      	ldr	r6, [pc, #200]	@ (90001b00 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x11c>)
90001a36:	602b      	str	r3, [r5, #0]
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90001a38:	f8da 3000 	ldr.w	r3, [sl]
90001a3c:	b10b      	cbz	r3, 90001a42 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x5e>
90001a3e:	6833      	ldr	r3, [r6, #0]
90001a40:	bb6b      	cbnz	r3, 90001a9e <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xba>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001a42:	6828      	ldr	r0, [r5, #0]
90001a44:	7a03      	ldrb	r3, [r0, #8]
90001a46:	b93b      	cbnz	r3, 90001a58 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x74>
90001a48:	4b2e      	ldr	r3, [pc, #184]	@ (90001b04 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x120>)
90001a4a:	681b      	ldr	r3, [r3, #0]
90001a4c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001a50:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001a54:	2b01      	cmp	r3, #1
90001a56:	d03b      	beq.n	90001ad0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xec>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a58:	683b      	ldr	r3, [r7, #0]
90001a5a:	2b01      	cmp	r3, #1
90001a5c:	d00d      	beq.n	90001a7a <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x96>
    {
        JPEG_output_is_paused = 0;
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
    }

    return 2;
90001a5e:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001a60:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90001a62:	6823      	ldr	r3, [r4, #0]
90001a64:	2b02      	cmp	r3, #2
90001a66:	d024      	beq.n	90001ab2 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xce>
        } while (JpegProcessing_End != 1);
90001a68:	6823      	ldr	r3, [r4, #0]
90001a6a:	2b01      	cmp	r3, #1
90001a6c:	d1e4      	bne.n	90001a38 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x54>
        Jpeg_HWDecodingEnd = 0;
90001a6e:	2300      	movs	r3, #0
90001a70:	f8ca 3000 	str.w	r3, [sl]
        DMA2D_CopyBufferEnd = 0;
90001a74:	6033      	str	r3, [r6, #0]
}
90001a76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a7a:	f8d9 3000 	ldr.w	r3, [r9]
90001a7e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001a82:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001a86:	2b00      	cmp	r3, #0
90001a88:	d1e9      	bne.n	90001a5e <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x7a>
90001a8a:	f8da 3000 	ldr.w	r3, [sl]
90001a8e:	2b00      	cmp	r3, #0
90001a90:	d1e5      	bne.n	90001a5e <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x7a>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001a92:	2102      	movs	r1, #2
90001a94:	4819      	ldr	r0, [pc, #100]	@ (90001afc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
        JPEG_output_is_paused = 0;
90001a96:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001a98:	f007 fb8c 	bl	900091b4 <HAL_JPEG_Resume>
90001a9c:	e7df      	b.n	90001a5e <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x7a>
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
90001a9e:	4817      	ldr	r0, [pc, #92]	@ (90001afc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
90001aa0:	f008 f952 	bl	90009d48 <HAL_JPEG_GetState>
90001aa4:	2804      	cmp	r0, #4
90001aa6:	d01a      	beq.n	90001ade <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xfa>
        return 1;
90001aa8:	2301      	movs	r3, #1
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001aaa:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90001aac:	6823      	ldr	r3, [r4, #0]
90001aae:	2b02      	cmp	r3, #2
90001ab0:	d1da      	bne.n	90001a68 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x84>
                SEM_WAIT(semDecodingDone);
90001ab2:	4b15      	ldr	r3, [pc, #84]	@ (90001b08 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x124>)
90001ab4:	f04f 31ff 	mov.w	r1, #4294967295
90001ab8:	6818      	ldr	r0, [r3, #0]
90001aba:	f00c fc31 	bl	9000e320 <osSemaphoreAcquire>
        } while (JpegProcessing_End != 1);
90001abe:	6823      	ldr	r3, [r4, #0]
90001ac0:	2b01      	cmp	r3, #1
90001ac2:	d1b9      	bne.n	90001a38 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x54>
        Jpeg_HWDecodingEnd = 0;
90001ac4:	2300      	movs	r3, #0
90001ac6:	f8ca 3000 	str.w	r3, [sl]
        DMA2D_CopyBufferEnd = 0;
90001aca:	6033      	str	r3, [r6, #0]
}
90001acc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001ad0:	6833      	ldr	r3, [r6, #0]
90001ad2:	2b00      	cmp	r3, #0
90001ad4:	d1c0      	bne.n	90001a58 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x74>
        DMA2D_reference->start();
90001ad6:	6803      	ldr	r3, [r0, #0]
90001ad8:	691b      	ldr	r3, [r3, #16]
90001ada:	4798      	blx	r3
90001adc:	e7bc      	b.n	90001a58 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x74>
            HAL_JPEG_Abort(hjpeg);
90001ade:	4807      	ldr	r0, [pc, #28]	@ (90001afc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
90001ae0:	f007 fa36 	bl	90008f50 <HAL_JPEG_Abort>
90001ae4:	e7e0      	b.n	90001aa8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc4>
90001ae6:	bf00      	nop
90001ae8:	24005db0 	.word	0x24005db0
90001aec:	2400600c 	.word	0x2400600c
90001af0:	24006014 	.word	0x24006014
90001af4:	24006028 	.word	0x24006028
90001af8:	24006010 	.word	0x24006010
90001afc:	240075d4 	.word	0x240075d4
90001b00:	24005df0 	.word	0x24005df0
90001b04:	24005df4 	.word	0x24005df4
90001b08:	24005df8 	.word	0x24005df8
90001b0c:	24006018 	.word	0x24006018
90001b10:	24006008 	.word	0x24006008
90001b14:	24000004 	.word	0x24000004

90001b18 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001b18:	6943      	ldr	r3, [r0, #20]
{
90001b1a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001b1e:	2b00      	cmp	r3, #0
90001b20:	f000 80ad 	beq.w	90001c7e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x166>
    readData(currentMovieOffset, 8);
90001b24:	4604      	mov	r4, r0
    if (reader != 0)
90001b26:	6b00      	ldr	r0, [r0, #48]	@ 0x30
90001b28:	460e      	mov	r6, r1
    readData(currentMovieOffset, 8);
90001b2a:	69a5      	ldr	r5, [r4, #24]
    if (reader != 0)
90001b2c:	2800      	cmp	r0, #0
90001b2e:	d05f      	beq.n	90001bf0 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd8>
        if (length > aviBufferLength)
90001b30:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001b32:	2b07      	cmp	r3, #7
90001b34:	f240 80a9 	bls.w	90001c8a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90001b38:	6803      	ldr	r3, [r0, #0]
90001b3a:	4629      	mov	r1, r5
90001b3c:	68db      	ldr	r3, [r3, #12]
90001b3e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001b40:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001b42:	2208      	movs	r2, #8
90001b44:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001b46:	6803      	ldr	r3, [r0, #0]
90001b48:	691b      	ldr	r3, [r3, #16]
90001b4a:	4798      	blx	r3
90001b4c:	2800      	cmp	r0, #0
90001b4e:	d04a      	beq.n	90001be6 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xce>
    uint32_t streamNo  = getU16(currentMovieOffset);
90001b50:	69a1      	ldr	r1, [r4, #24]
    if (reader != 0)
90001b52:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001b54:	f101 0c04 	add.w	ip, r1, #4
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001b58:	1c8a      	adds	r2, r1, #2
        aviBufferStartOffset = offset;
90001b5a:	63e5      	str	r5, [r4, #60]	@ 0x3c
    if (reader != 0)
90001b5c:	2800      	cmp	r0, #0
90001b5e:	d046      	beq.n	90001bee <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd6>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b60:	6b63      	ldr	r3, [r4, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001b62:	ebac 0c05 	sub.w	ip, ip, r5
        const uint32_t index = offset - aviBufferStartOffset;
90001b66:	1b52      	subs	r2, r2, r5
90001b68:	1b4d      	subs	r5, r1, r5
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b6a:	eb03 070c 	add.w	r7, r3, ip
90001b6e:	f813 e00c 	ldrb.w	lr, [r3, ip]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b72:	eb03 0805 	add.w	r8, r3, r5
90001b76:	f813 c005 	ldrb.w	ip, [r3, r5]
90001b7a:	f898 5001 	ldrb.w	r5, [r8, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b7e:	f897 8001 	ldrb.w	r8, [r7, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b82:	ea4c 2c05 	orr.w	ip, ip, r5, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b86:	78bd      	ldrb	r5, [r7, #2]
90001b88:	78ff      	ldrb	r7, [r7, #3]
90001b8a:	042d      	lsls	r5, r5, #16
90001b8c:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
90001b90:	ea45 050e 	orr.w	r5, r5, lr
90001b94:	ea45 6507 	orr.w	r5, r5, r7, lsl #24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b98:	189f      	adds	r7, r3, r2
90001b9a:	5c9b      	ldrb	r3, [r3, r2]
90001b9c:	787a      	ldrb	r2, [r7, #1]
90001b9e:	ea43 2702 	orr.w	r7, r3, r2, lsl #8
    if (currentMovieOffset + 8 + chunkSize < movieLength)
90001ba2:	eb01 0e05 	add.w	lr, r1, r5
90001ba6:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90001ba8:	f10e 0208 	add.w	r2, lr, #8
90001bac:	429a      	cmp	r2, r3
90001bae:	d213      	bcs.n	90001bd8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
90001bb0:	f243 0330 	movw	r3, #12336	@ 0x3030
90001bb4:	459c      	cmp	ip, r3
90001bb6:	d138      	bne.n	90001c2a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001bb8:	f246 3364 	movw	r3, #25444	@ 0x6364
90001bbc:	429f      	cmp	r7, r3
90001bbe:	d134      	bne.n	90001c2a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001bc0:	2d00      	cmp	r5, #0
90001bc2:	d136      	bne.n	90001c32 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x11a>
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001bc4:	3201      	adds	r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001bc6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001bc8:	f022 0201 	bic.w	r2, r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001bcc:	429a      	cmp	r2, r3
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001bce:	61a2      	str	r2, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
90001bd0:	d002      	beq.n	90001bd8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
90001bd2:	2001      	movs	r0, #1
}
90001bd4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        frameNumber = 1;
90001bd8:	2201      	movs	r2, #1
        currentMovieOffset = firstFrameOffset; /* start over */
90001bda:	6a23      	ldr	r3, [r4, #32]
        if (chunkSize == 0) /* Empty frame - Skip */
90001bdc:	2000      	movs	r0, #0
        currentMovieOffset = firstFrameOffset; /* start over */
90001bde:	e9c4 2305 	strd	r2, r3, [r4, #20]
}
90001be2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90001be6:	230d      	movs	r3, #13
90001be8:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001bec:	e7b0      	b.n	90001b50 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x38>
90001bee:	460d      	mov	r5, r1
        volatile const uint8_t* const d = movieData + offset;
90001bf0:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001bf2:	1caf      	adds	r7, r5, #2
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001bf4:	1d28      	adds	r0, r5, #4
        val |= d[3] << 24;
90001bf6:	4629      	mov	r1, r5
        volatile const uint8_t* const d = movieData + offset;
90001bf8:	195a      	adds	r2, r3, r5
        val |= d[0];
90001bfa:	f813 c005 	ldrb.w	ip, [r3, r5]
        volatile const uint8_t* const d = movieData + offset;
90001bfe:	19dd      	adds	r5, r3, r7
        val |= d[1] << 8;
90001c00:	7852      	ldrb	r2, [r2, #1]
        val |= d[0];
90001c02:	5ddf      	ldrb	r7, [r3, r7]
        val |= d[1] << 8;
90001c04:	ea4c 2c02 	orr.w	ip, ip, r2, lsl #8
90001c08:	786d      	ldrb	r5, [r5, #1]
        volatile const uint8_t* const d = movieData + offset;
90001c0a:	181a      	adds	r2, r3, r0
        val |= d[0];
90001c0c:	5c18      	ldrb	r0, [r3, r0]
        val |= d[1] << 8;
90001c0e:	ea47 2705 	orr.w	r7, r7, r5, lsl #8
        val |= d[1] << 8;
90001c12:	f892 e001 	ldrb.w	lr, [r2, #1]
        val |= d[2] << 16;
90001c16:	7895      	ldrb	r5, [r2, #2]
        val |= d[3] << 24;
90001c18:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001c1a:	042d      	lsls	r5, r5, #16
90001c1c:	ea45 250e 	orr.w	r5, r5, lr, lsl #8
90001c20:	4305      	orrs	r5, r0
        val |= d[3] << 24;
90001c22:	2000      	movs	r0, #0
90001c24:	ea45 6503 	orr.w	r5, r5, r3, lsl #24
        return val;
90001c28:	e7bb      	b.n	90001ba2 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
        if (chunkSize == 0) /* Empty frame - Skip */
90001c2a:	2d00      	cmp	r5, #0
90001c2c:	bf18      	it	ne
90001c2e:	4672      	movne	r2, lr
90001c30:	e7c8      	b.n	90001bc4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
            currentMovieOffset += 8;
90001c32:	f101 0708 	add.w	r7, r1, #8
90001c36:	61a7      	str	r7, [r4, #24]
    if (reader != 0)
90001c38:	b1f0      	cbz	r0, 90001c78 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x160>
        if (length > aviBufferLength)
90001c3a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001c3c:	429d      	cmp	r5, r3
90001c3e:	d824      	bhi.n	90001c8a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90001c40:	6803      	ldr	r3, [r0, #0]
90001c42:	4639      	mov	r1, r7
90001c44:	68db      	ldr	r3, [r3, #12]
90001c46:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001c48:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001c4a:	462a      	mov	r2, r5
90001c4c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001c4e:	6803      	ldr	r3, [r0, #0]
90001c50:	691b      	ldr	r3, [r3, #16]
90001c52:	4798      	blx	r3
90001c54:	b910      	cbnz	r0, 90001c5c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x144>
            lastError = AVI_ERROR_EOF_REACHED;
90001c56:	230d      	movs	r3, #13
90001c58:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        return aviBuffer;
90001c5c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
90001c5e:	63e7      	str	r7, [r4, #60]	@ 0x3c
    if (outputBuffer) /* only decode if buffers are assigned. */
90001c60:	b126      	cbz	r6, 90001c6c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x154>
90001c62:	4633      	mov	r3, r6
90001c64:	462a      	mov	r2, r5
90001c66:	4620      	mov	r0, r4
90001c68:	f7ff febc 	bl	900019e4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>
        currentMovieOffset += chunkSize;
90001c6c:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
            frameNumber++;
90001c70:	3301      	adds	r3, #1
        currentMovieOffset += chunkSize;
90001c72:	442a      	add	r2, r5
            frameNumber++;
90001c74:	6163      	str	r3, [r4, #20]
        if (chunkSize == 0) /* Empty frame - Skip */
90001c76:	e7a5      	b.n	90001bc4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
    return movieData + offset;
90001c78:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90001c7a:	4439      	add	r1, r7
90001c7c:	e7f0      	b.n	90001c60 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x148>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001c7e:	4b07      	ldr	r3, [pc, #28]	@ (90001c9c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x184>)
90001c80:	21c3      	movs	r1, #195	@ 0xc3
90001c82:	4a07      	ldr	r2, [pc, #28]	@ (90001ca0 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x188>)
90001c84:	4807      	ldr	r0, [pc, #28]	@ (90001ca4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
90001c86:	f028 fb67 	bl	9002a358 <__assert_func>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001c8a:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001c8c:	4b06      	ldr	r3, [pc, #24]	@ (90001ca8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x190>)
90001c8e:	4a07      	ldr	r2, [pc, #28]	@ (90001cac <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x194>)
90001c90:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001c92:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001c96:	4803      	ldr	r0, [pc, #12]	@ (90001ca4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
90001c98:	f028 fb5e 	bl	9002a358 <__assert_func>
90001c9c:	9002b798 	.word	0x9002b798
90001ca0:	9002b8d8 	.word	0x9002b8d8
90001ca4:	9002b6e8 	.word	0x9002b6e8
90001ca8:	9002b740 	.word	0x9002b740
90001cac:	9002b754 	.word	0x9002b754

90001cb0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
90001cb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90001cb4:	4604      	mov	r4, r0
    readData(currentMovieOffset, 8);
90001cb6:	f8d0 9018 	ldr.w	r9, [r0, #24]
    if (reader != 0)
90001cba:	6b00      	ldr	r0, [r0, #48]	@ 0x30
{
90001cbc:	460e      	mov	r6, r1
90001cbe:	4690      	mov	r8, r2
90001cc0:	461f      	mov	r7, r3
    if (reader != 0)
90001cc2:	2800      	cmp	r0, #0
90001cc4:	f000 80f9 	beq.w	90001eba <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x20a>
        if (length > aviBufferLength)
90001cc8:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001cca:	2b07      	cmp	r3, #7
90001ccc:	f240 810a 	bls.w	90001ee4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x234>
        reader->seek(offset);
90001cd0:	6803      	ldr	r3, [r0, #0]
90001cd2:	4649      	mov	r1, r9
90001cd4:	68db      	ldr	r3, [r3, #12]
90001cd6:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001cd8:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001cda:	2208      	movs	r2, #8
90001cdc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001cde:	6803      	ldr	r3, [r0, #0]
90001ce0:	691b      	ldr	r3, [r3, #16]
90001ce2:	4798      	blx	r3
90001ce4:	2800      	cmp	r0, #0
90001ce6:	f000 80b3 	beq.w	90001e50 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a0>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001cea:	69a2      	ldr	r2, [r4, #24]
    if (reader != 0)
90001cec:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    const uint32_t length = getU32(currentMovieOffset + 4);
90001cee:	1d13      	adds	r3, r2, #4
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90001cf0:	f102 0508 	add.w	r5, r2, #8
        aviBufferStartOffset = offset;
90001cf4:	f8c4 903c 	str.w	r9, [r4, #60]	@ 0x3c
    if (reader != 0)
90001cf8:	2800      	cmp	r0, #0
90001cfa:	f000 80fc 	beq.w	90001ef6 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x246>
        const uint32_t index = offset - aviBufferStartOffset;
90001cfe:	eba3 0209 	sub.w	r2, r3, r9
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001d02:	6b63      	ldr	r3, [r4, #52]	@ 0x34
90001d04:	1899      	adds	r1, r3, r2
90001d06:	5c9a      	ldrb	r2, [r3, r2]
        if (length > aviBufferLength)
90001d08:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001d0a:	f891 9002 	ldrb.w	r9, [r1, #2]
90001d0e:	f891 c001 	ldrb.w	ip, [r1, #1]
90001d12:	ea4f 4909 	mov.w	r9, r9, lsl #16
90001d16:	ea49 290c 	orr.w	r9, r9, ip, lsl #8
90001d1a:	ea49 0902 	orr.w	r9, r9, r2
90001d1e:	78ca      	ldrb	r2, [r1, #3]
90001d20:	ea49 6902 	orr.w	r9, r9, r2, lsl #24
        if (length > aviBufferLength)
90001d24:	454b      	cmp	r3, r9
90001d26:	f0c0 80dd 	bcc.w	90001ee4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x234>
        reader->seek(offset);
90001d2a:	6803      	ldr	r3, [r0, #0]
90001d2c:	4629      	mov	r1, r5
90001d2e:	68db      	ldr	r3, [r3, #12]
90001d30:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001d32:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001d34:	464a      	mov	r2, r9
90001d36:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001d38:	6803      	ldr	r3, [r0, #0]
90001d3a:	691b      	ldr	r3, [r3, #16]
90001d3c:	4798      	blx	r3
90001d3e:	2800      	cmp	r0, #0
90001d40:	f000 8082 	beq.w	90001e48 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x198>
        return aviBuffer;
90001d44:	6b61      	ldr	r1, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
90001d46:	63e5      	str	r5, [r4, #60]	@ 0x3c
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001d48:	f8d4 c00c 	ldr.w	ip, [r4, #12]
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001d4c:	2302      	movs	r3, #2
90001d4e:	486b      	ldr	r0, [pc, #428]	@ (90001efc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001d50:	f01c 0f0f 	tst.w	ip, #15
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001d54:	6103      	str	r3, [r0, #16]
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001d56:	d172      	bne.n	90001e3e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x18e>
90001d58:	4662      	mov	r2, ip
90001d5a:	4663      	mov	r3, ip
     *
     * @return x coordinate of the right edge (calculated as "x + width").
     */
    FORCE_INLINE_FUNCTION int16_t right() const
    {
        return x + width;
90001d5c:	88b5      	ldrh	r5, [r6, #4]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001d5e:	091b      	lsrs	r3, r3, #4
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001d60:	6002      	str	r2, [r0, #0]
    JPEG_ConvertorParams.startX = area.x;
90001d62:	f9b6 2000 	ldrsh.w	r2, [r6]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001d66:	60c3      	str	r3, [r0, #12]
90001d68:	4415      	add	r5, r2
    JPEG_ConvertorParams.startY = area.y;
90001d6a:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
     *
     * @return y coordinate of the bottom edge (calculated as "y + height").
     */
    FORCE_INLINE_FUNCTION int16_t bottom() const
    {
        return y + height;
90001d6e:	88f6      	ldrh	r6, [r6, #6]
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d70:	b22d      	sxth	r5, r5
    JPEG_ConvertorParams.startY = area.y;
90001d72:	6143      	str	r3, [r0, #20]
90001d74:	441e      	add	r6, r3
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
90001d76:	f003 030f 	and.w	r3, r3, #15
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d7a:	4565      	cmp	r5, ip
    JPEG_ConvertorParams.startX = area.x;
90001d7c:	61c2      	str	r2, [r0, #28]
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
90001d7e:	6343      	str	r3, [r0, #52]	@ 0x34
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001d80:	b236      	sxth	r6, r6
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d82:	bf28      	it	cs
90001d84:	4665      	movcs	r5, ip
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
90001d86:	ea4f 1c12 	mov.w	ip, r2, lsr #4
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
90001d8a:	f002 020f 	and.w	r2, r2, #15
90001d8e:	f8df a1a0 	ldr.w	sl, [pc, #416]	@ 90001f30 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x280>
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d92:	f105 030f 	add.w	r3, r5, #15
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d96:	6205      	str	r5, [r0, #32]
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
90001d98:	6302      	str	r2, [r0, #48]	@ 0x30
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001d9a:	464a      	mov	r2, r9
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d9c:	091b      	lsrs	r3, r3, #4
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
90001d9e:	f8c0 c024 	str.w	ip, [r0, #36]	@ 0x24
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001da2:	f8df 9190 	ldr.w	r9, [pc, #400]	@ 90001f34 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x284>
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001da6:	6283      	str	r3, [r0, #40]	@ 0x28
    JPEG_ConvertorParams.MCU_pr_job = JPEG_ConvertorParams.MCUEnd - JPEG_ConvertorParams.MCUStart;
90001da8:	eba3 030c 	sub.w	r3, r3, ip
90001dac:	62c3      	str	r3, [r0, #44]	@ 0x2c
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001dae:	6923      	ldr	r3, [r4, #16]
90001db0:	429e      	cmp	r6, r3
90001db2:	bf28      	it	cs
90001db4:	461e      	movcs	r6, r3
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001db6:	f015 050f 	ands.w	r5, r5, #15
    JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001dba:	f44f 7370 	mov.w	r3, #960	@ 0x3c0
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001dbe:	bf18      	it	ne
90001dc0:	f1c5 0510 	rsbne	r5, r5, #16
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001dc4:	6186      	str	r6, [r0, #24]
    JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001dc6:	6043      	str	r3, [r0, #4]
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001dc8:	f016 060f 	ands.w	r6, r6, #15
    FrameBufferWidth = framebuffer_width;
90001dcc:	4b4c      	ldr	r3, [pc, #304]	@ (90001f00 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x250>)
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001dce:	bf18      	it	ne
90001dd0:	f1c6 0610 	rsbne	r6, r6, #16
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001dd4:	6385      	str	r5, [r0, #56]	@ 0x38
    FrameBufferWidth = framebuffer_width;
90001dd6:	601f      	str	r7, [r3, #0]
    FrameBufferAddress = frameBuffer;
90001dd8:	4b4a      	ldr	r3, [pc, #296]	@ (90001f04 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x254>)
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001dda:	63c6      	str	r6, [r0, #60]	@ 0x3c
    FrameBufferAddress = frameBuffer;
90001ddc:	f8c3 8000 	str.w	r8, [r3]
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001de0:	4643      	mov	r3, r8
90001de2:	4849      	ldr	r0, [pc, #292]	@ (90001f08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
90001de4:	f7ff fdaa 	bl	9000193c <JPEG_Decode_DMA>
    DMA2D_reference = dma;
90001de8:	4d48      	ldr	r5, [pc, #288]	@ (90001f0c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x25c>)
90001dea:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90001dec:	4e48      	ldr	r6, [pc, #288]	@ (90001f10 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x260>)
90001dee:	4c49      	ldr	r4, [pc, #292]	@ (90001f14 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x264>)
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001df0:	4f49      	ldr	r7, [pc, #292]	@ (90001f18 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x268>)
90001df2:	f8df 8144 	ldr.w	r8, [pc, #324]	@ 90001f38 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x288>
    DMA2D_reference = dma;
90001df6:	602b      	str	r3, [r5, #0]
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90001df8:	f8da 3000 	ldr.w	r3, [sl]
90001dfc:	b113      	cbz	r3, 90001e04 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x154>
90001dfe:	6833      	ldr	r3, [r6, #0]
90001e00:	2b00      	cmp	r3, #0
90001e02:	d13b      	bne.n	90001e7c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1cc>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001e04:	6828      	ldr	r0, [r5, #0]
90001e06:	7a03      	ldrb	r3, [r0, #8]
90001e08:	b93b      	cbnz	r3, 90001e1a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16a>
90001e0a:	4b44      	ldr	r3, [pc, #272]	@ (90001f1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x26c>)
90001e0c:	681b      	ldr	r3, [r3, #0]
90001e0e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001e12:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001e16:	2b01      	cmp	r3, #1
90001e18:	d044      	beq.n	90001ea4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1f4>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001e1a:	683b      	ldr	r3, [r7, #0]
90001e1c:	2b01      	cmp	r3, #1
90001e1e:	d01b      	beq.n	90001e58 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a8>
    return 2;
90001e20:	2302      	movs	r3, #2
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001e22:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
90001e24:	6823      	ldr	r3, [r4, #0]
90001e26:	2b02      	cmp	r3, #2
90001e28:	d032      	beq.n	90001e90 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e0>
    } while (JpegProcessing_End != 1);
90001e2a:	6823      	ldr	r3, [r4, #0]
90001e2c:	2b01      	cmp	r3, #1
90001e2e:	d1e3      	bne.n	90001df8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x148>
    Jpeg_HWDecodingEnd = 0;
90001e30:	2300      	movs	r3, #0
}
90001e32:	2001      	movs	r0, #1
    Jpeg_HWDecodingEnd = 0;
90001e34:	f8ca 3000 	str.w	r3, [sl]
    DMA2D_CopyBufferEnd = 0;
90001e38:	6033      	str	r3, [r6, #0]
}
90001e3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90001e3e:	f02c 030f 	bic.w	r3, ip, #15
90001e42:	3310      	adds	r3, #16
90001e44:	461a      	mov	r2, r3
90001e46:	e789      	b.n	90001d5c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xac>
            lastError = AVI_ERROR_EOF_REACHED;
90001e48:	230d      	movs	r3, #13
90001e4a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001e4e:	e779      	b.n	90001d44 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x94>
90001e50:	230d      	movs	r3, #13
90001e52:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001e56:	e748      	b.n	90001cea <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x3a>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001e58:	f8d9 3000 	ldr.w	r3, [r9]
90001e5c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001e60:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001e64:	2b00      	cmp	r3, #0
90001e66:	d1db      	bne.n	90001e20 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x170>
90001e68:	f8da 3000 	ldr.w	r3, [sl]
90001e6c:	2b00      	cmp	r3, #0
90001e6e:	d1d7      	bne.n	90001e20 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x170>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001e70:	2102      	movs	r1, #2
90001e72:	4825      	ldr	r0, [pc, #148]	@ (90001f08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
        JPEG_output_is_paused = 0;
90001e74:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001e76:	f007 f99d 	bl	900091b4 <HAL_JPEG_Resume>
90001e7a:	e7d1      	b.n	90001e20 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x170>
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
90001e7c:	4822      	ldr	r0, [pc, #136]	@ (90001f08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
90001e7e:	f007 ff63 	bl	90009d48 <HAL_JPEG_GetState>
90001e82:	2804      	cmp	r0, #4
90001e84:	d015      	beq.n	90001eb2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x202>
        return 1;
90001e86:	2301      	movs	r3, #1
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001e88:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
90001e8a:	6823      	ldr	r3, [r4, #0]
90001e8c:	2b02      	cmp	r3, #2
90001e8e:	d1cc      	bne.n	90001e2a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x17a>
            SEM_WAIT(semDecodingDone);
90001e90:	4b23      	ldr	r3, [pc, #140]	@ (90001f20 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x270>)
90001e92:	f04f 31ff 	mov.w	r1, #4294967295
90001e96:	6818      	ldr	r0, [r3, #0]
90001e98:	f00c fa42 	bl	9000e320 <osSemaphoreAcquire>
    } while (JpegProcessing_End != 1);
90001e9c:	6823      	ldr	r3, [r4, #0]
90001e9e:	2b01      	cmp	r3, #1
90001ea0:	d1aa      	bne.n	90001df8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x148>
90001ea2:	e7c5      	b.n	90001e30 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x180>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001ea4:	6833      	ldr	r3, [r6, #0]
90001ea6:	2b00      	cmp	r3, #0
90001ea8:	d1b7      	bne.n	90001e1a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16a>
        DMA2D_reference->start();
90001eaa:	6803      	ldr	r3, [r0, #0]
90001eac:	691b      	ldr	r3, [r3, #16]
90001eae:	4798      	blx	r3
90001eb0:	e7b3      	b.n	90001e1a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16a>
            HAL_JPEG_Abort(hjpeg);
90001eb2:	4815      	ldr	r0, [pc, #84]	@ (90001f08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
90001eb4:	f007 f84c 	bl	90008f50 <HAL_JPEG_Abort>
90001eb8:	e7e5      	b.n	90001e86 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d6>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001eba:	f109 0304 	add.w	r3, r9, #4
    if (reader != 0)
90001ebe:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90001ec0:	f109 0108 	add.w	r1, r9, #8
        volatile const uint8_t* const d = movieData + offset;
90001ec4:	18c2      	adds	r2, r0, r3
    return movieData + offset;
90001ec6:	4401      	add	r1, r0
        val |= d[0];
90001ec8:	5cc0      	ldrb	r0, [r0, r3]
        val |= d[1] << 8;
90001eca:	7855      	ldrb	r5, [r2, #1]
        val |= d[2] << 16;
90001ecc:	f892 9002 	ldrb.w	r9, [r2, #2]
        val |= d[3] << 24;
90001ed0:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001ed2:	ea4f 4909 	mov.w	r9, r9, lsl #16
90001ed6:	ea49 2905 	orr.w	r9, r9, r5, lsl #8
90001eda:	ea49 0900 	orr.w	r9, r9, r0
        val |= d[3] << 24;
90001ede:	ea49 6903 	orr.w	r9, r9, r3, lsl #24
    return movieData + offset;
90001ee2:	e731      	b.n	90001d48 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x98>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001ee4:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001ee6:	4b0f      	ldr	r3, [pc, #60]	@ (90001f24 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x274>)
90001ee8:	4a0f      	ldr	r2, [pc, #60]	@ (90001f28 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x278>)
90001eea:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001eec:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001ef0:	480e      	ldr	r0, [pc, #56]	@ (90001f2c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x27c>)
90001ef2:	f028 fa31 	bl	9002a358 <__assert_func>
90001ef6:	4691      	mov	r9, r2
90001ef8:	e7e1      	b.n	90001ebe <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x20e>
90001efa:	bf00      	nop
90001efc:	24005db0 	.word	0x24005db0
90001f00:	24006000 	.word	0x24006000
90001f04:	24006028 	.word	0x24006028
90001f08:	240075d4 	.word	0x240075d4
90001f0c:	2400600c 	.word	0x2400600c
90001f10:	24005df0 	.word	0x24005df0
90001f14:	24006010 	.word	0x24006010
90001f18:	24006014 	.word	0x24006014
90001f1c:	24005df4 	.word	0x24005df4
90001f20:	24005df8 	.word	0x24005df8
90001f24:	9002b740 	.word	0x9002b740
90001f28:	9002b754 	.word	0x9002b754
90001f2c:	9002b6e8 	.word	0x9002b6e8
90001f30:	24006018 	.word	0x24006018
90001f34:	24006008 	.word	0x24006008
90001f38:	24000004 	.word	0x24000004

90001f3c <HAL_JPEG_InfoReadyCallback>:
        if (pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
90001f3c:	684b      	ldr	r3, [r1, #4]
90001f3e:	2b01      	cmp	r3, #1
90001f40:	d015      	beq.n	90001f6e <HAL_JPEG_InfoReadyCallback+0x32>
            if (pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
90001f42:	2b02      	cmp	r3, #2
90001f44:	d00b      	beq.n	90001f5e <HAL_JPEG_InfoReadyCallback+0x22>
            if (pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
90001f46:	b94b      	cbnz	r3, 90001f5c <HAL_JPEG_InfoReadyCallback+0x20>
                if ((pInfo->ImageWidth % 8) != 0)
90001f48:	68cb      	ldr	r3, [r1, #12]
90001f4a:	0758      	lsls	r0, r3, #29
90001f4c:	d11e      	bne.n	90001f8c <HAL_JPEG_InfoReadyCallback+0x50>
                if ((pInfo->ImageHeight % 8) != 0)
90001f4e:	688b      	ldr	r3, [r1, #8]
90001f50:	075a      	lsls	r2, r3, #29
90001f52:	d003      	beq.n	90001f5c <HAL_JPEG_InfoReadyCallback+0x20>
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
90001f54:	f023 0307 	bic.w	r3, r3, #7
90001f58:	3308      	adds	r3, #8
90001f5a:	608b      	str	r3, [r1, #8]
    }
90001f5c:	4770      	bx	lr
                if ((pInfo->ImageWidth % 16) != 0)
90001f5e:	68cb      	ldr	r3, [r1, #12]
90001f60:	071a      	lsls	r2, r3, #28
90001f62:	d0f4      	beq.n	90001f4e <HAL_JPEG_InfoReadyCallback+0x12>
                    pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001f64:	f023 030f 	bic.w	r3, r3, #15
90001f68:	3310      	adds	r3, #16
90001f6a:	60cb      	str	r3, [r1, #12]
90001f6c:	e7ef      	b.n	90001f4e <HAL_JPEG_InfoReadyCallback+0x12>
            if ((pInfo->ImageWidth % 16) != 0)
90001f6e:	68cb      	ldr	r3, [r1, #12]
90001f70:	071a      	lsls	r2, r3, #28
90001f72:	d003      	beq.n	90001f7c <HAL_JPEG_InfoReadyCallback+0x40>
                pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001f74:	f023 030f 	bic.w	r3, r3, #15
90001f78:	3310      	adds	r3, #16
90001f7a:	60cb      	str	r3, [r1, #12]
            if ((pInfo->ImageHeight % 16) != 0)
90001f7c:	688b      	ldr	r3, [r1, #8]
90001f7e:	0718      	lsls	r0, r3, #28
90001f80:	d0ec      	beq.n	90001f5c <HAL_JPEG_InfoReadyCallback+0x20>
                pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
90001f82:	f023 030f 	bic.w	r3, r3, #15
90001f86:	3310      	adds	r3, #16
90001f88:	608b      	str	r3, [r1, #8]
90001f8a:	4770      	bx	lr
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
90001f8c:	f023 0307 	bic.w	r3, r3, #7
90001f90:	3308      	adds	r3, #8
90001f92:	60cb      	str	r3, [r1, #12]
90001f94:	e7db      	b.n	90001f4e <HAL_JPEG_InfoReadyCallback+0x12>
90001f96:	bf00      	nop

90001f98 <HAL_JPEG_GetDataCallback>:
    {
90001f98:	b410      	push	{r4}
        JPEG_InputImageIndex += NbDecodedData;
90001f9a:	4c0c      	ldr	r4, [pc, #48]	@ (90001fcc <HAL_JPEG_GetDataCallback+0x34>)
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f9c:	4a0c      	ldr	r2, [pc, #48]	@ (90001fd0 <HAL_JPEG_GetDataCallback+0x38>)
        JPEG_InputImageIndex += NbDecodedData;
90001f9e:	6823      	ldr	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001fa0:	6812      	ldr	r2, [r2, #0]
        JPEG_InputImageIndex += NbDecodedData;
90001fa2:	440b      	add	r3, r1
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001fa4:	4293      	cmp	r3, r2
        JPEG_InputImageIndex += NbDecodedData;
90001fa6:	6023      	str	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001fa8:	d302      	bcc.n	90001fb0 <HAL_JPEG_GetDataCallback+0x18>
    }
90001faa:	f85d 4b04 	ldr.w	r4, [sp], #4
90001fae:	4770      	bx	lr
            uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
90001fb0:	1ad2      	subs	r2, r2, r3
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001fb2:	4b08      	ldr	r3, [pc, #32]	@ (90001fd4 <HAL_JPEG_GetDataCallback+0x3c>)
90001fb4:	681c      	ldr	r4, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001fb6:	f5b2 4f50 	cmp.w	r2, #53248	@ 0xd000
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001fba:	4421      	add	r1, r4
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001fbc:	bf28      	it	cs
90001fbe:	f44f 4250 	movcs.w	r2, #53248	@ 0xd000
    }
90001fc2:	f85d 4b04 	ldr.w	r4, [sp], #4
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001fc6:	6019      	str	r1, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001fc8:	f006 bfba 	b.w	90008f40 <HAL_JPEG_ConfigInputBuffer>
90001fcc:	24006024 	.word	0x24006024
90001fd0:	24006020 	.word	0x24006020
90001fd4:	2400601c 	.word	0x2400601c

90001fd8 <HAL_JPEG_DataReadyCallback>:
    {
90001fd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        line_count += MCU_HEIGHT_PIXELS;
90001fdc:	4e4a      	ldr	r6, [pc, #296]	@ (90002108 <HAL_JPEG_DataReadyCallback+0x130>)
    {
90001fde:	4696      	mov	lr, r2
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fe0:	4f4a      	ldr	r7, [pc, #296]	@ (9000210c <HAL_JPEG_DataReadyCallback+0x134>)
        line_count += MCU_HEIGHT_PIXELS;
90001fe2:	6833      	ldr	r3, [r6, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fe4:	4d4a      	ldr	r5, [pc, #296]	@ (90002110 <HAL_JPEG_DataReadyCallback+0x138>)
        line_count += MCU_HEIGHT_PIXELS;
90001fe6:	3310      	adds	r3, #16
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fe8:	693a      	ldr	r2, [r7, #16]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fea:	f8d5 c000 	ldr.w	ip, [r5]
        line_count += MCU_HEIGHT_PIXELS;
90001fee:	6033      	str	r3, [r6, #0]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001ff0:	4b48      	ldr	r3, [pc, #288]	@ (90002114 <HAL_JPEG_DataReadyCallback+0x13c>)
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001ff2:	4c49      	ldr	r4, [pc, #292]	@ (90002118 <HAL_JPEG_DataReadyCallback+0x140>)
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001ff4:	6819      	ldr	r1, [r3, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001ff6:	6823      	ldr	r3, [r4, #0]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001ff8:	fb02 f101 	mul.w	r1, r2, r1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001ffc:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90002000:	eb0c 1101 	add.w	r1, ip, r1, lsl #4
90002004:	6029      	str	r1, [r5, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90002006:	4d45      	ldr	r5, [pc, #276]	@ (9000211c <HAL_JPEG_DataReadyCallback+0x144>)
        if (line_count <= JPEG_ConvertorParams.startY)
90002008:	6831      	ldr	r1, [r6, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
9000200a:	eb05 0383 	add.w	r3, r5, r3, lsl #2
9000200e:	f8c3 c014 	str.w	ip, [r3, #20]
        if (line_count <= JPEG_ConvertorParams.startY)
90002012:	697b      	ldr	r3, [r7, #20]
90002014:	428b      	cmp	r3, r1
90002016:	d260      	bcs.n	900020da <HAL_JPEG_DataReadyCallback+0x102>
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90002018:	6821      	ldr	r1, [r4, #0]
9000201a:	2201      	movs	r2, #1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
9000201c:	6823      	ldr	r3, [r4, #0]
9000201e:	4680      	mov	r8, r0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90002020:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90002024:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90002028:	f805 2021 	strb.w	r2, [r5, r1, lsl #2]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
9000202c:	2100      	movs	r1, #0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
9000202e:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002032:	f8c3 e008 	str.w	lr, [r3, #8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
90002036:	6823      	ldr	r3, [r4, #0]
90002038:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000203c:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002040:	6119      	str	r1, [r3, #16]
        if (JPEG_ConvertorParams.firstColOffset != 0)
90002042:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
90002044:	b12b      	cbz	r3, 90002052 <HAL_JPEG_DataReadyCallback+0x7a>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DoCropping = true;
90002046:	6823      	ldr	r3, [r4, #0]
90002048:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000204c:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002050:	761a      	strb	r2, [r3, #24]
        if (line_count < JPEG_ConvertorParams.endY)
90002052:	6832      	ldr	r2, [r6, #0]
90002054:	69bb      	ldr	r3, [r7, #24]
90002056:	4293      	cmp	r3, r2
90002058:	d922      	bls.n	900020a0 <HAL_JPEG_DataReadyCallback+0xc8>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
9000205a:	6823      	ldr	r3, [r4, #0]
            JPEG_OUT_Write_BufferIndex++;
9000205c:	6822      	ldr	r2, [r4, #0]
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
9000205e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
            JPEG_OUT_Write_BufferIndex++;
90002062:	3201      	adds	r2, #1
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
90002064:	eb05 0383 	add.w	r3, r5, r3, lsl #2
            JPEG_OUT_Write_BufferIndex++;
90002068:	6022      	str	r2, [r4, #0]
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
9000206a:	2200      	movs	r2, #0
9000206c:	769a      	strb	r2, [r3, #26]
            if (JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
9000206e:	6823      	ldr	r3, [r4, #0]
90002070:	2b01      	cmp	r3, #1
90002072:	d900      	bls.n	90002076 <HAL_JPEG_DataReadyCallback+0x9e>
                JPEG_OUT_Write_BufferIndex = 0;
90002074:	6022      	str	r2, [r4, #0]
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
90002076:	6823      	ldr	r3, [r4, #0]
90002078:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000207c:	f815 3023 	ldrb.w	r3, [r5, r3, lsl #2]
90002080:	2b00      	cmp	r3, #0
90002082:	d138      	bne.n	900020f6 <HAL_JPEG_DataReadyCallback+0x11e>
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002084:	6823      	ldr	r3, [r4, #0]
90002086:	4640      	mov	r0, r8
90002088:	68fa      	ldr	r2, [r7, #12]
9000208a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000208e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90002092:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002096:	01d2      	lsls	r2, r2, #7
90002098:	6859      	ldr	r1, [r3, #4]
9000209a:	f006 ff55 	bl	90008f48 <HAL_JPEG_ConfigOutputBuffer>
        if (line_count >= JPEG_ConvertorParams.endY)
9000209e:	69bb      	ldr	r3, [r7, #24]
900020a0:	6832      	ldr	r2, [r6, #0]
900020a2:	429a      	cmp	r2, r3
900020a4:	d20b      	bcs.n	900020be <HAL_JPEG_DataReadyCallback+0xe6>
        return isRunning;
900020a6:	4b1e      	ldr	r3, [pc, #120]	@ (90002120 <HAL_JPEG_DataReadyCallback+0x148>)
900020a8:	681b      	ldr	r3, [r3, #0]
        if (!DMA2D_reference->isDMARunning())
900020aa:	7a1b      	ldrb	r3, [r3, #8]
900020ac:	b10b      	cbz	r3, 900020b2 <HAL_JPEG_DataReadyCallback+0xda>
    }
900020ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            SEM_POST(semDecodingDone);
900020b2:	4b1c      	ldr	r3, [pc, #112]	@ (90002124 <HAL_JPEG_DataReadyCallback+0x14c>)
    }
900020b4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            SEM_POST(semDecodingDone);
900020b8:	6818      	ldr	r0, [r3, #0]
900020ba:	f00c b963 	b.w	9000e384 <osSemaphoreRelease>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
900020be:	6823      	ldr	r3, [r4, #0]
900020c0:	2201      	movs	r2, #1
            Jpeg_HWDecodingEnd = 1;
900020c2:	4919      	ldr	r1, [pc, #100]	@ (90002128 <HAL_JPEG_DataReadyCallback+0x150>)
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020c4:	4640      	mov	r0, r8
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
900020c6:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
            Jpeg_HWDecodingEnd = 1;
900020ca:	600a      	str	r2, [r1, #0]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020cc:	2102      	movs	r1, #2
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
900020ce:	eb05 0583 	add.w	r5, r5, r3, lsl #2
900020d2:	76aa      	strb	r2, [r5, #26]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020d4:	f006 fefc 	bl	90008ed0 <HAL_JPEG_Pause>
900020d8:	e7e5      	b.n	900020a6 <HAL_JPEG_DataReadyCallback+0xce>
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900020da:	6823      	ldr	r3, [r4, #0]
900020dc:	68fa      	ldr	r2, [r7, #12]
900020de:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900020e2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900020e6:	eb05 0383 	add.w	r3, r5, r3, lsl #2
900020ea:	01d2      	lsls	r2, r2, #7
900020ec:	6859      	ldr	r1, [r3, #4]
    }
900020ee:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900020f2:	f006 bf29 	b.w	90008f48 <HAL_JPEG_ConfigOutputBuffer>
                HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020f6:	2102      	movs	r1, #2
900020f8:	4640      	mov	r0, r8
900020fa:	f006 fee9 	bl	90008ed0 <HAL_JPEG_Pause>
                JPEG_output_is_paused = 1;
900020fe:	4b0b      	ldr	r3, [pc, #44]	@ (9000212c <HAL_JPEG_DataReadyCallback+0x154>)
90002100:	2201      	movs	r2, #1
90002102:	601a      	str	r2, [r3, #0]
90002104:	e7be      	b.n	90002084 <HAL_JPEG_DataReadyCallback+0xac>
90002106:	bf00      	nop
90002108:	24006004 	.word	0x24006004
9000210c:	24005db0 	.word	0x24005db0
90002110:	24006028 	.word	0x24006028
90002114:	24006000 	.word	0x24006000
90002118:	24006008 	.word	0x24006008
9000211c:	24000004 	.word	0x24000004
90002120:	2400600c 	.word	0x2400600c
90002124:	24005df8 	.word	0x24005df8
90002128:	24006018 	.word	0x24006018
9000212c:	24006014 	.word	0x24006014

90002130 <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
90002130:	b672      	cpsid	i
        while (1)
90002132:	e7fe      	b.n	90002132 <HAL_JPEG_ErrorCallback+0x2>

90002134 <HAL_JPEG_DecodeCpltCallback>:
        Jpeg_HWDecodingEnd = 1;
90002134:	4b01      	ldr	r3, [pc, #4]	@ (9000213c <HAL_JPEG_DecodeCpltCallback+0x8>)
90002136:	2201      	movs	r2, #1
90002138:	601a      	str	r2, [r3, #0]
    }
9000213a:	4770      	bx	lr
9000213c:	24006018 	.word	0x24006018

90002140 <DMA2D_CopyBuffer>:
 * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CopyBuffer(JPEG_Data_BufferTypeDef& job)
{
90002140:	b5f0      	push	{r4, r5, r6, r7, lr}
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
90002142:	4f1e      	ldr	r7, [pc, #120]	@ (900021bc <DMA2D_CopyBuffer+0x7c>)
90002144:	6903      	ldr	r3, [r0, #16]
90002146:	6afc      	ldr	r4, [r7, #44]	@ 0x2c
90002148:	6bba      	ldr	r2, [r7, #56]	@ 0x38
9000214a:	eba4 0c03 	sub.w	ip, r4, r3
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
                               + job.MCU_drawn * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;

    /* Mark job as fully drawn */
    job.MCU_drawn = JPEG_ConvertorParams.MCU_pr_job;
9000214e:	6104      	str	r4, [r0, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002150:	4e1b      	ldr	r6, [pc, #108]	@ (900021c0 <DMA2D_CopyBuffer+0x80>)
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
90002152:	ebc2 110c 	rsb	r1, r2, ip, lsl #4
90002156:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
9000215a:	f011 050f 	ands.w	r5, r1, #15

    /* Configure DMA2D data size */
    if (job.LastJob)  /* Last line of frame */
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
9000215e:	ea4f 4401 	mov.w	r4, r1, lsl #16
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002162:	6a79      	ldr	r1, [r7, #36]	@ 0x24
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
90002164:	bf18      	it	ne
90002166:	f1c5 0510 	rsbne	r5, r5, #16
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000216a:	440b      	add	r3, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
9000216c:	6939      	ldr	r1, [r7, #16]
9000216e:	fb03 f101 	mul.w	r1, r3, r1
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002172:	eb03 0343 	add.w	r3, r3, r3, lsl #1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
90002176:	ea4f 1e01 	mov.w	lr, r1, lsl #4
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000217a:	2102      	movs	r1, #2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000217c:	01db      	lsls	r3, r3, #7
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000217e:	6371      	str	r1, [r6, #52]	@ 0x34
    if (job.LastJob)  /* Last line of frame */
90002180:	7e81      	ldrb	r1, [r0, #26]
90002182:	b1b9      	cbz	r1, 900021b4 <DMA2D_CopyBuffer+0x74>
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
90002184:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
90002186:	f1c1 0110 	rsb	r1, r1, #16
9000218a:	4321      	orrs	r1, r4
9000218c:	6471      	str	r1, [r6, #68]	@ 0x44
    {
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
    }

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
9000218e:	6941      	ldr	r1, [r0, #20]

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, 480 - width);
90002190:	f502 72f0 	add.w	r2, r2, #480	@ 0x1e0
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
90002194:	eb01 040e 	add.w	r4, r1, lr

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002198:	6841      	ldr	r1, [r0, #4]
    WRITE_REG(DMA2D->OOR, 480 - width);
9000219a:	eba2 020c 	sub.w	r2, r2, ip

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000219e:	4809      	ldr	r0, [pc, #36]	@ (900021c4 <DMA2D_CopyBuffer+0x84>)
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
900021a0:	4419      	add	r1, r3
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
900021a2:	4b07      	ldr	r3, [pc, #28]	@ (900021c0 <DMA2D_CopyBuffer+0x80>)
900021a4:	63dc      	str	r4, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 480 - width);
900021a6:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
900021a8:	4a07      	ldr	r2, [pc, #28]	@ (900021c8 <DMA2D_CopyBuffer+0x88>)
    WRITE_REG(DMA2D->FGOR, scaledWidth);
900021aa:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
900021ac:	61da      	str	r2, [r3, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
900021ae:	60d9      	str	r1, [r3, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900021b0:	6018      	str	r0, [r3, #0]
}
900021b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
900021b4:	f044 0410 	orr.w	r4, r4, #16
900021b8:	6474      	str	r4, [r6, #68]	@ 0x44
900021ba:	e7e8      	b.n	9000218e <DMA2D_CopyBuffer+0x4e>
900021bc:	24005db0 	.word	0x24005db0
900021c0:	52001000 	.word	0x52001000
900021c4:	00012301 	.word	0x00012301
900021c8:	ff09000b 	.word	0xff09000b

900021cc <DMA2D_CropBuffer>:
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CropBuffer(JPEG_Data_BufferTypeDef& job)
{
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
900021cc:	6902      	ldr	r2, [r0, #16]
{
900021ce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900021d2:	4605      	mov	r5, r0
900021d4:	b08a      	sub	sp, #40	@ 0x28
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
900021d6:	2a00      	cmp	r2, #0
900021d8:	d165      	bne.n	900022a6 <DMA2D_CropBuffer+0xda>
900021da:	4b35      	ldr	r3, [pc, #212]	@ (900022b0 <DMA2D_CropBuffer+0xe4>)
900021dc:	f8d3 c030 	ldr.w	ip, [r3, #48]	@ 0x30
900021e0:	f1cc 0010 	rsb	r0, ip, #16
900021e4:	b280      	uxth	r0, r0
    const uint32_t colRightOffset = job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job - 1 ? JPEG_ConvertorParams.lastColOffset : 0;
900021e6:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
900021e8:	3901      	subs	r1, #1
900021ea:	428a      	cmp	r2, r1
900021ec:	d102      	bne.n	900021f4 <DMA2D_CropBuffer+0x28>

    /* Configure BlitOp */
    touchgfx::BlitOp blitOp;
    blitOp.operation = touchgfx::BLIT_OP_COPY;
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
900021ee:	6b99      	ldr	r1, [r3, #56]	@ 0x38
900021f0:	1a41      	subs	r1, r0, r1
900021f2:	b288      	uxth	r0, r1
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
900021f4:	7e6e      	ldrb	r6, [r5, #25]
900021f6:	6b5f      	ldr	r7, [r3, #52]	@ 0x34
900021f8:	2e00      	cmp	r6, #0
900021fa:	d051      	beq.n	900022a0 <DMA2D_CropBuffer+0xd4>
900021fc:	f1c7 0110 	rsb	r1, r7, #16
90002200:	46b8      	mov	r8, r7
90002202:	b289      	uxth	r1, r1
    const uint32_t rowBottomOffset = job.LastJob ? JPEG_ConvertorParams.lastRowOffset : 0;
90002204:	f895 e01a 	ldrb.w	lr, [r5, #26]
90002208:	f1be 0f00 	cmp.w	lr, #0
9000220c:	d002      	beq.n	90002214 <DMA2D_CropBuffer+0x48>
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
9000220e:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
90002210:	1b09      	subs	r1, r1, r4
90002212:	b289      	uxth	r1, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
90002214:	f8d3 e010 	ldr.w	lr, [r3, #16]
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002218:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
9000221a:	fb08 f40e 	mul.w	r4, r8, lr
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000221e:	4413      	add	r3, r2
    job.MCU_drawn++;
90002220:	3201      	adds	r2, #1
                               + colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel;
90002222:	fb0c fc0e 	mul.w	ip, ip, lr
    job.MCU_drawn++;
90002226:	612a      	str	r2, [r5, #16]
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
90002228:	ebc4 1204 	rsb	r2, r4, r4, lsl #4
    const uint32_t cropSrcOffset = colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel
9000222c:	eb0c 1804 	add.w	r8, ip, r4, lsl #4
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
90002230:	0052      	lsls	r2, r2, #1
90002232:	fb0e 2203 	mla	r2, lr, r3, r2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002236:	eb03 0343 	add.w	r3, r3, r3, lsl #1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
9000223a:	eb0c 1c02 	add.w	ip, ip, r2, lsl #4
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000223e:	01dc      	lsls	r4, r3, #7
    if ((JPEG_ConvertorParams.firstRowOffset == 0) || !job.FirstJob)
90002240:	b107      	cbz	r7, 90002244 <DMA2D_CropBuffer+0x78>
90002242:	b90e      	cbnz	r6, 90002248 <DMA2D_CropBuffer+0x7c>
        job.DoCropping = false;
90002244:	2300      	movs	r3, #0
90002246:	762b      	strb	r3, [r5, #24]
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
90002248:	4b1a      	ldr	r3, [pc, #104]	@ (900022b4 <DMA2D_CropBuffer+0xe8>)
        : color(0)
9000224a:	2600      	movs	r6, #0
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
9000224c:	4f1a      	ldr	r7, [pc, #104]	@ (900022b8 <DMA2D_CropBuffer+0xec>)
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
9000224e:	9307      	str	r3, [sp, #28]
    blitOp.dstLoopStride = 480;
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002250:	696b      	ldr	r3, [r5, #20]
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
    blitOp.dstFormat = touchgfx::Bitmap::RGB565;
    DMA2D_reference->addToQueue(blitOp);
90002252:	4a1a      	ldr	r2, [pc, #104]	@ (900022bc <DMA2D_CropBuffer+0xf0>)
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002254:	4463      	add	r3, ip
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
90002256:	f8ad 0018 	strh.w	r0, [sp, #24]
    DMA2D_reference->addToQueue(blitOp);
9000225a:	6810      	ldr	r0, [r2, #0]
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
9000225c:	9305      	str	r3, [sp, #20]
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
9000225e:	eb08 0307 	add.w	r3, r8, r7
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
90002262:	f8ad 6021 	strh.w	r6, [sp, #33]	@ 0x21
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
90002266:	9302      	str	r3, [sp, #8]
    blitOp.operation = touchgfx::BLIT_OP_COPY;
90002268:	2301      	movs	r3, #1
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
9000226a:	f8ad 101a 	strh.w	r1, [sp, #26]
    DMA2D_reference->addToQueue(blitOp);
9000226e:	a901      	add	r1, sp, #4
    blitOp.operation = touchgfx::BLIT_OP_COPY;
90002270:	9301      	str	r3, [sp, #4]
    DMA2D_reference->addToQueue(blitOp);
90002272:	6803      	ldr	r3, [r0, #0]
90002274:	9604      	str	r6, [sp, #16]
90002276:	685b      	ldr	r3, [r3, #4]
90002278:	4798      	blx	r3

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000227a:	4b11      	ldr	r3, [pc, #68]	@ (900022c0 <DMA2D_CropBuffer+0xf4>)
9000227c:	2102      	movs	r1, #2

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
9000227e:	686a      	ldr	r2, [r5, #4]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002280:	4810      	ldr	r0, [pc, #64]	@ (900022c4 <DMA2D_CropBuffer+0xf8>)
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002282:	6359      	str	r1, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
90002284:	f04f 1110 	mov.w	r1, #1048592	@ 0x100010
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002288:	4422      	add	r2, r4
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
9000228a:	6459      	str	r1, [r3, #68]	@ 0x44

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000228c:	490e      	ldr	r1, [pc, #56]	@ (900022c8 <DMA2D_CropBuffer+0xfc>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(MCU_Cropping_Buffer));
9000228e:	63df      	str	r7, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 0);
90002290:	641e      	str	r6, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGOR, 0);
90002292:	611e      	str	r6, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002294:	61d8      	str	r0, [r3, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002296:	60da      	str	r2, [r3, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002298:	6019      	str	r1, [r3, #0]
}
9000229a:	b00a      	add	sp, #40	@ 0x28
9000229c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900022a0:	2110      	movs	r1, #16
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
900022a2:	46b0      	mov	r8, r6
900022a4:	e7ae      	b.n	90002204 <DMA2D_CropBuffer+0x38>
900022a6:	2010      	movs	r0, #16
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
900022a8:	f04f 0c00 	mov.w	ip, #0
900022ac:	4b00      	ldr	r3, [pc, #0]	@ (900022b0 <DMA2D_CropBuffer+0xe4>)
900022ae:	e79a      	b.n	900021e6 <DMA2D_CropBuffer+0x1a>
900022b0:	24005db0 	.word	0x24005db0
900022b4:	01e00010 	.word	0x01e00010
900022b8:	24005e00 	.word	0x24005e00
900022bc:	2400600c 	.word	0x2400600c
900022c0:	52001000 	.word	0x52001000
900022c4:	ff09000b 	.word	0xff09000b
900022c8:	00012301 	.word	0x00012301

900022cc <DMA2D_ExternalJobCompleted>:
 * @retval None
 */
void DMA2D_ExternalJobCompleted(JPEG_Data_BufferTypeDef& job)
{
    /* Mark job done if all MCUs are drawn */
    if (job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job)
900022cc:	4b0d      	ldr	r3, [pc, #52]	@ (90002304 <DMA2D_ExternalJobCompleted+0x38>)
900022ce:	6902      	ldr	r2, [r0, #16]
900022d0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900022d2:	429a      	cmp	r2, r3
900022d4:	d000      	beq.n	900022d8 <DMA2D_ExternalJobCompleted+0xc>
        }

        /* Signal decoder thread to wake up and continue decoding */
        SEM_POST(semDecodingDone);
    }
}
900022d6:	4770      	bx	lr
        job.State = JPEG_BUFFER_EMPTY;
900022d8:	2200      	movs	r2, #0
        JPEG_OUT_Read_BufferIndex++;
900022da:	4b0b      	ldr	r3, [pc, #44]	@ (90002308 <DMA2D_ExternalJobCompleted+0x3c>)
        job.State = JPEG_BUFFER_EMPTY;
900022dc:	7002      	strb	r2, [r0, #0]
        JPEG_OUT_Read_BufferIndex++;
900022de:	6819      	ldr	r1, [r3, #0]
        job.DataBufferSize = 0;
900022e0:	6082      	str	r2, [r0, #8]
        JPEG_OUT_Read_BufferIndex++;
900022e2:	3101      	adds	r1, #1
        job.DoCropping = false;
900022e4:	8302      	strh	r2, [r0, #24]
        JPEG_OUT_Read_BufferIndex++;
900022e6:	6019      	str	r1, [r3, #0]
        if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
900022e8:	6819      	ldr	r1, [r3, #0]
900022ea:	2901      	cmp	r1, #1
900022ec:	d900      	bls.n	900022f0 <DMA2D_ExternalJobCompleted+0x24>
            JPEG_OUT_Read_BufferIndex = 0;
900022ee:	601a      	str	r2, [r3, #0]
        if (job.LastJob)
900022f0:	7e83      	ldrb	r3, [r0, #26]
900022f2:	b113      	cbz	r3, 900022fa <DMA2D_ExternalJobCompleted+0x2e>
            DMA2D_CopyBufferEnd = 1;
900022f4:	4b05      	ldr	r3, [pc, #20]	@ (9000230c <DMA2D_ExternalJobCompleted+0x40>)
900022f6:	2201      	movs	r2, #1
900022f8:	601a      	str	r2, [r3, #0]
        SEM_POST(semDecodingDone);
900022fa:	4b05      	ldr	r3, [pc, #20]	@ (90002310 <DMA2D_ExternalJobCompleted+0x44>)
900022fc:	6818      	ldr	r0, [r3, #0]
900022fe:	f00c b841 	b.w	9000e384 <osSemaphoreRelease>
90002302:	bf00      	nop
90002304:	24005db0 	.word	0x24005db0
90002308:	24005df4 	.word	0x24005df4
9000230c:	24005df0 	.word	0x24005df0
90002310:	24005df8 	.word	0x24005df8

90002314 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
90002314:	2101      	movs	r1, #1
90002316:	2200      	movs	r2, #0
{
90002318:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
9000231a:	4608      	mov	r0, r1
9000231c:	f00b ffaa 	bl	9000e274 <osSemaphoreNew>
90002320:	4b0b      	ldr	r3, [pc, #44]	@ (90002350 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
90002322:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
90002324:	b140      	cbz	r0, 90002338 <_ZN8touchgfx10OSWrappers10initializeEv+0x24>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
90002326:	2200      	movs	r2, #0
90002328:	2104      	movs	r1, #4
9000232a:	2001      	movs	r0, #1
9000232c:	f00c f868 	bl	9000e400 <osMessageQueueNew>
90002330:	4b08      	ldr	r3, [pc, #32]	@ (90002354 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
90002332:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90002334:	b130      	cbz	r0, 90002344 <_ZN8touchgfx10OSWrappers10initializeEv+0x30>
}
90002336:	bd08      	pop	{r3, pc}
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
90002338:	4b07      	ldr	r3, [pc, #28]	@ (90002358 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
9000233a:	2128      	movs	r1, #40	@ 0x28
9000233c:	4a07      	ldr	r2, [pc, #28]	@ (9000235c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
9000233e:	4808      	ldr	r0, [pc, #32]	@ (90002360 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90002340:	f028 f80a 	bl	9002a358 <__assert_func>
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90002344:	4b07      	ldr	r3, [pc, #28]	@ (90002364 <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
90002346:	212c      	movs	r1, #44	@ 0x2c
90002348:	4a04      	ldr	r2, [pc, #16]	@ (9000235c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
9000234a:	4805      	ldr	r0, [pc, #20]	@ (90002360 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
9000234c:	f028 f804 	bl	9002a358 <__assert_func>
90002350:	24006030 	.word	0x24006030
90002354:	2400602c 	.word	0x2400602c
90002358:	9002b934 	.word	0x9002b934
9000235c:	9002b980 	.word	0x9002b980
90002360:	9002b9b0 	.word	0x9002b9b0
90002364:	9002b9fc 	.word	0x9002b9fc

90002368 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
90002368:	4b02      	ldr	r3, [pc, #8]	@ (90002374 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
9000236a:	f04f 31ff 	mov.w	r1, #4294967295
9000236e:	6818      	ldr	r0, [r3, #0]
90002370:	f00b bfd6 	b.w	9000e320 <osSemaphoreAcquire>
90002374:	24006030 	.word	0x24006030

90002378 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
90002378:	4b01      	ldr	r3, [pc, #4]	@ (90002380 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
9000237a:	6818      	ldr	r0, [r3, #0]
9000237c:	f00c b802 	b.w	9000e384 <osSemaphoreRelease>
90002380:	24006030 	.word	0x24006030

90002384 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
90002384:	4b02      	ldr	r3, [pc, #8]	@ (90002390 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
90002386:	2100      	movs	r1, #0
90002388:	6818      	ldr	r0, [r3, #0]
9000238a:	f00b bfc9 	b.w	9000e320 <osSemaphoreAcquire>
9000238e:	bf00      	nop
90002390:	24006030 	.word	0x24006030

90002394 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
90002394:	4b01      	ldr	r3, [pc, #4]	@ (9000239c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x8>)
90002396:	6818      	ldr	r0, [r3, #0]
90002398:	f00b bff4 	b.w	9000e384 <osSemaphoreRelease>
9000239c:	24006030 	.word	0x24006030

900023a0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
900023a0:	4803      	ldr	r0, [pc, #12]	@ (900023b0 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
900023a2:	2300      	movs	r3, #0
900023a4:	4903      	ldr	r1, [pc, #12]	@ (900023b4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
900023a6:	461a      	mov	r2, r3
900023a8:	6800      	ldr	r0, [r0, #0]
900023aa:	f00c b865 	b.w	9000e478 <osMessageQueuePut>
900023ae:	bf00      	nop
900023b0:	2400602c 	.word	0x2400602c
900023b4:	2400003c 	.word	0x2400003c

900023b8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
900023b8:	b510      	push	{r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
900023ba:	2300      	movs	r3, #0
{
900023bc:	b082      	sub	sp, #8
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
900023be:	4c07      	ldr	r4, [pc, #28]	@ (900023dc <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
900023c0:	a901      	add	r1, sp, #4
900023c2:	461a      	mov	r2, r3
900023c4:	6820      	ldr	r0, [r4, #0]
900023c6:	f00c f893 	bl	9000e4f0 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
900023ca:	f04f 33ff 	mov.w	r3, #4294967295
900023ce:	2200      	movs	r2, #0
900023d0:	a901      	add	r1, sp, #4
900023d2:	6820      	ldr	r0, [r4, #0]
900023d4:	f00c f88c 	bl	9000e4f0 <osMessageQueueGet>
}
900023d8:	b002      	add	sp, #8
900023da:	bd10      	pop	{r4, pc}
900023dc:	2400602c 	.word	0x2400602c

900023e0 <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
900023e0:	6803      	ldr	r3, [r0, #0]
900023e2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900023e4:	4718      	bx	r3
900023e6:	bf00      	nop

900023e8 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
900023e8:	2001      	movs	r0, #1
900023ea:	4770      	bx	lr

900023ec <DMA2D_XferErrorCallback>:
    }

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
900023ec:	e7fe      	b.n	900023ec <DMA2D_XferErrorCallback>
900023ee:	bf00      	nop

900023f0 <_ZN8STM32DMAD1Ev>:
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
{

}

STM32DMA::~STM32DMA()
900023f0:	4905      	ldr	r1, [pc, #20]	@ (90002408 <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900023f2:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
900023f6:	4b05      	ldr	r3, [pc, #20]	@ (9000240c <_ZN8STM32DMAD1Ev+0x1c>)
900023f8:	6001      	str	r1, [r0, #0]
900023fa:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900023fe:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002402:	f3bf 8f6f 	isb	sy
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}
90002406:	4770      	bx	lr
90002408:	9002d190 	.word	0x9002d190
9000240c:	e000e100 	.word	0xe000e100

90002410 <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002410:	4b11      	ldr	r3, [pc, #68]	@ (90002458 <_ZN8STM32DMA10initializeEv+0x48>)
    __HAL_RCC_DMA2D_FORCE_RESET();
    __HAL_RCC_DMA2D_RELEASE_RESET();

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90002412:	4912      	ldr	r1, [pc, #72]	@ (9000245c <_ZN8STM32DMA10initializeEv+0x4c>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002414:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4

    /* Add transfer error callback function */
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
90002418:	4811      	ldr	r0, [pc, #68]	@ (90002460 <_ZN8STM32DMA10initializeEv+0x50>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000241a:	f042 0210 	orr.w	r2, r2, #16
{
9000241e:	b410      	push	{r4}
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90002420:	4c10      	ldr	r4, [pc, #64]	@ (90002464 <_ZN8STM32DMA10initializeEv+0x54>)
{
90002422:	b083      	sub	sp, #12
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
90002424:	e9c1 4008 	strd	r4, r0, [r1, #32]
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002428:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
9000242c:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90002430:	f002 0210 	and.w	r2, r2, #16
90002434:	9201      	str	r2, [sp, #4]
90002436:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
90002438:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
9000243a:	f042 0210 	orr.w	r2, r2, #16
9000243e:	67da      	str	r2, [r3, #124]	@ 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
90002440:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
90002442:	f022 0210 	bic.w	r2, r2, #16
90002446:	67da      	str	r2, [r3, #124]	@ 0x7c
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90002448:	4b07      	ldr	r3, [pc, #28]	@ (90002468 <_ZN8STM32DMA10initializeEv+0x58>)
9000244a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
9000244e:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
90002450:	b003      	add	sp, #12
90002452:	f85d 4b04 	ldr.w	r4, [sp], #4
90002456:	4770      	bx	lr
90002458:	58024400 	.word	0x58024400
9000245c:	2400762c 	.word	0x2400762c
90002460:	900023ed 	.word	0x900023ed
90002464:	90002835 	.word	0x90002835
90002468:	e000e100 	.word	0xe000e100

9000246c <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
9000246c:	f240 30ef 	movw	r0, #1007	@ 0x3ef
90002470:	4770      	bx	lr
90002472:	bf00      	nop

90002474 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
90002474:	4909      	ldr	r1, [pc, #36]	@ (9000249c <_ZN8STM32DMAD0Ev+0x28>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90002476:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
9000247a:	4b09      	ldr	r3, [pc, #36]	@ (900024a0 <_ZN8STM32DMAD0Ev+0x2c>)
9000247c:	b510      	push	{r4, lr}
9000247e:	6001      	str	r1, [r0, #0]
90002480:	4604      	mov	r4, r0
90002482:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90002486:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000248a:	f3bf 8f6f 	isb	sy
}
9000248e:	f640 51a4 	movw	r1, #3492	@ 0xda4
90002492:	f027 fbeb 	bl	90029c6c <_ZdlPvj>
90002496:	4620      	mov	r0, r4
90002498:	bd10      	pop	{r4, pc}
9000249a:	bf00      	nop
9000249c:	9002d190 	.word	0x9002d190
900024a0:	e000e100 	.word	0xe000e100

900024a4 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        if (!started_by_external_job)
900024a4:	f890 3da0 	ldrb.w	r3, [r0, #3488]	@ 0xda0
    virtual void signalDMAInterrupt()
900024a8:	b510      	push	{r4, lr}
900024aa:	4604      	mov	r4, r0
        if (!started_by_external_job)
900024ac:	b963      	cbnz	r3, 900024c8 <_ZN8STM32DMA18signalDMAInterruptEv+0x24>
        {
            executeCompleted();
900024ae:	6803      	ldr	r3, [r0, #0]
900024b0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900024b2:	4798      	blx	r3

            /* Start new external job if next buffer is full */
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
900024b4:	4924      	ldr	r1, [pc, #144]	@ (90002548 <_ZN8STM32DMA18signalDMAInterruptEv+0xa4>)
900024b6:	4a25      	ldr	r2, [pc, #148]	@ (9000254c <_ZN8STM32DMA18signalDMAInterruptEv+0xa8>)
900024b8:	680b      	ldr	r3, [r1, #0]
900024ba:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900024be:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
900024c2:	2b01      	cmp	r3, #1
900024c4:	d015      	beq.n	900024f2 <_ZN8STM32DMA18signalDMAInterruptEv+0x4e>
            {
                started_by_external_job = false;
                execute();
            }
        }
    }
900024c6:	bd10      	pop	{r4, pc}
     *
     * @param None
     */
    void externalJobCompleted()
    {
        if (isRunning)
900024c8:	7a03      	ldrb	r3, [r0, #8]
900024ca:	2b00      	cmp	r3, #0
900024cc:	d12b      	bne.n	90002526 <_ZN8STM32DMA18signalDMAInterruptEv+0x82>
            if (!queue.isEmpty() && isAllowed)
900024ce:	6860      	ldr	r0, [r4, #4]
900024d0:	6803      	ldr	r3, [r0, #0]
900024d2:	681b      	ldr	r3, [r3, #0]
900024d4:	4798      	blx	r3
900024d6:	4603      	mov	r3, r0
900024d8:	2800      	cmp	r0, #0
900024da:	d1f4      	bne.n	900024c6 <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
900024dc:	7a62      	ldrb	r2, [r4, #9]
900024de:	2a00      	cmp	r2, #0
900024e0:	d0f1      	beq.n	900024c6 <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
                execute();
900024e2:	6822      	ldr	r2, [r4, #0]
900024e4:	4620      	mov	r0, r4
                started_by_external_job = false;
900024e6:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
900024ea:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
900024ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
900024f0:	4718      	bx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
900024f2:	4817      	ldr	r0, [pc, #92]	@ (90002550 <_ZN8STM32DMA18signalDMAInterruptEv+0xac>)
900024f4:	6800      	ldr	r0, [r0, #0]
900024f6:	2800      	cmp	r0, #0
900024f8:	d1e5      	bne.n	900024c6 <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
900024fa:	7a20      	ldrb	r0, [r4, #8]
900024fc:	2800      	cmp	r0, #0
900024fe:	d1e2      	bne.n	900024c6 <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002500:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
90002502:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002506:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
9000250a:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
9000250c:	eb02 0080 	add.w	r0, r2, r0, lsl #2
90002510:	7e03      	ldrb	r3, [r0, #24]
        {
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002512:	6808      	ldr	r0, [r1, #0]
90002514:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
90002518:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
9000251c:	b17b      	cbz	r3, 9000253e <_ZN8STM32DMA18signalDMAInterruptEv+0x9a>
    }
9000251e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002522:	f7ff be53 	b.w	900021cc <DMA2D_CropBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002526:	4b08      	ldr	r3, [pc, #32]	@ (90002548 <_ZN8STM32DMA18signalDMAInterruptEv+0xa4>)
            isRunning = false;
90002528:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000252a:	4808      	ldr	r0, [pc, #32]	@ (9000254c <_ZN8STM32DMA18signalDMAInterruptEv+0xa8>)
9000252c:	681b      	ldr	r3, [r3, #0]
            isRunning = false;
9000252e:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002530:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002534:	eb00 0083 	add.w	r0, r0, r3, lsl #2
90002538:	f7ff fec8 	bl	900022cc <DMA2D_ExternalJobCompleted>
9000253c:	e7c7      	b.n	900024ce <_ZN8STM32DMA18signalDMAInterruptEv+0x2a>
    }
9000253e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        }
        else
        {
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002542:	f7ff bdfd 	b.w	90002140 <DMA2D_CopyBuffer>
90002546:	bf00      	nop
90002548:	24005df4 	.word	0x24005df4
9000254c:	24000004 	.word	0x24000004
90002550:	24005df0 	.word	0x24005df0

90002554 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
90002554:	b570      	push	{r4, r5, r6, lr}
    switch (format)
90002556:	7f8b      	ldrb	r3, [r1, #30]
90002558:	2b0a      	cmp	r3, #10
9000255a:	d83d      	bhi.n	900025d8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x84>
9000255c:	e8df f003 	tbb	[pc, r3]
90002560:	3c2a063a 	.word	0x3c2a063a
90002564:	063c3c3c 	.word	0x063c3c3c
90002568:	0606      	.short	0x0606
9000256a:	06          	.byte	0x06
9000256b:	00          	.byte	0x00
9000256c:	2401      	movs	r4, #1

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000256e:	f8b1 c014 	ldrh.w	ip, [r1, #20]
90002572:	8ac8      	ldrh	r0, [r1, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002574:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90002576:	4b1b      	ldr	r3, [pc, #108]	@ (900025e4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x90>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002578:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000257c:	690d      	ldr	r5, [r1, #16]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000257e:	eba2 020c 	sub.w	r2, r2, ip
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90002582:	635c      	str	r4, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002584:	6458      	str	r0, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002586:	63dd      	str	r5, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002588:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
9000258a:	680e      	ldr	r6, [r1, #0]
        return color;
9000258c:	68c8      	ldr	r0, [r1, #12]
9000258e:	2e08      	cmp	r6, #8
90002590:	d012      	beq.n	900025b8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x64>

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, 0);

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002592:	0a02      	lsrs	r2, r0, #8
        WRITE_REG(DMA2D->FGOR, 0);
90002594:	2500      	movs	r5, #0
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002596:	0941      	lsrs	r1, r0, #5
90002598:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9000259c:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
900025a0:	61dc      	str	r4, [r3, #28]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
900025a2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
        WRITE_REG(DMA2D->FGOR, 0);
900025a6:	611d      	str	r5, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
900025a8:	430a      	orrs	r2, r1

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
900025aa:	490f      	ldr	r1, [pc, #60]	@ (900025e8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
900025ac:	4302      	orrs	r2, r0
900025ae:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
900025b0:	6019      	str	r1, [r3, #0]
    }
}
900025b2:	bd70      	pop	{r4, r5, r6, pc}
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
900025b4:	2400      	movs	r4, #0
900025b6:	e7da      	b.n	9000256e <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
900025b8:	619a      	str	r2, [r3, #24]
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
900025ba:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900025bc:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
900025be:	4a0b      	ldr	r2, [pc, #44]	@ (900025ec <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
900025c0:	7f09      	ldrb	r1, [r1, #28]
900025c2:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
900025c6:	490a      	ldr	r1, [pc, #40]	@ (900025f0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x9c>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
900025c8:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
900025ca:	6218      	str	r0, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900025cc:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900025ce:	60dd      	str	r5, [r3, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
900025d0:	6019      	str	r1, [r3, #0]
}
900025d2:	bd70      	pop	{r4, r5, r6, pc}
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
900025d4:	2402      	movs	r4, #2
900025d6:	e7ca      	b.n	9000256e <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        assert(0 && "Unsupported Format!");
900025d8:	4b06      	ldr	r3, [pc, #24]	@ (900025f4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa0>)
900025da:	2191      	movs	r1, #145	@ 0x91
900025dc:	4a06      	ldr	r2, [pc, #24]	@ (900025f8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa4>)
900025de:	4807      	ldr	r0, [pc, #28]	@ (900025fc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>)
900025e0:	f027 feba 	bl	9002a358 <__assert_func>
900025e4:	52001000 	.word	0x52001000
900025e8:	00032301 	.word	0x00032301
900025ec:	00010009 	.word	0x00010009
900025f0:	00022301 	.word	0x00022301
900025f4:	9002ba40 	.word	0x9002ba40
900025f8:	9002ba5c 	.word	0x9002ba5c
900025fc:	9002baa8 	.word	0x9002baa8

90002600 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
90002600:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
90002602:	f891 e01d 	ldrb.w	lr, [r1, #29]
    switch (format)
90002606:	f1be 0f0b 	cmp.w	lr, #11
9000260a:	f200 80aa 	bhi.w	90002762 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x162>
9000260e:	e8df f00e 	tbb	[pc, lr]
90002612:	585d      	.short	0x585d
90002614:	a8a8a846 	.word	0xa8a8a846
90002618:	060606a8 	.word	0x060606a8
9000261c:	0606      	.short	0x0606
        dma2dColorMode = DMA2D_INPUT_L8;
9000261e:	2605      	movs	r6, #5
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
90002620:	f891 c01e 	ldrb.w	ip, [r1, #30]
    switch (format)
90002624:	f1bc 0f0b 	cmp.w	ip, #11
90002628:	f200 809b 	bhi.w	90002762 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x162>
9000262c:	e8df f00c 	tbb	[pc, ip]
90002630:	990d4b50 	.word	0x990d4b50
90002634:	06999999 	.word	0x06999999
90002638:	06060606 	.word	0x06060606
    switch (format)
9000263c:	f1bc 0f0b 	cmp.w	ip, #11
90002640:	f000 8095 	beq.w	9000276e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16e>
90002644:	2405      	movs	r4, #5
        dma2dColorMode = DMA2D_OUTPUT_RGB888;
90002646:	2701      	movs	r7, #1
90002648:	e001      	b.n	9000264e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
9000264a:	2400      	movs	r4, #0
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
9000264c:	4627      	mov	r7, r4
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000264e:	8a8b      	ldrh	r3, [r1, #20]
90002650:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90002652:	8b0d      	ldrh	r5, [r1, #24]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002654:	8ac8      	ldrh	r0, [r1, #22]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002656:	1ad2      	subs	r2, r2, r3
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90002658:	1aed      	subs	r5, r5, r3
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000265a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000265e:	4b4a      	ldr	r3, [pc, #296]	@ (90002788 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
90002660:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90002662:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90002664:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90002666:	684a      	ldr	r2, [r1, #4]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90002668:	635f      	str	r7, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000266a:	6458      	str	r0, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000266c:	6908      	ldr	r0, [r1, #16]
9000266e:	63d8      	str	r0, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90002670:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
90002672:	680d      	ldr	r5, [r1, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002674:	7f0f      	ldrb	r7, [r1, #28]
    switch (blitOp.operation)
90002676:	2d80      	cmp	r5, #128	@ 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002678:	ea4f 6207 	mov.w	r2, r7, lsl #24
    switch (blitOp.operation)
9000267c:	d03c      	beq.n	900026f8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
9000267e:	d810      	bhi.n	900026a2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
90002680:	2d20      	cmp	r5, #32
90002682:	d036      	beq.n	900026f2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf2>
90002684:	2d40      	cmp	r5, #64	@ 0x40
90002686:	d034      	beq.n	900026f2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf2>
90002688:	2d04      	cmp	r5, #4
9000268a:	d124      	bne.n	900026d6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000268c:	4332      	orrs	r2, r6
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000268e:	493f      	ldr	r1, [pc, #252]	@ (9000278c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002690:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
90002694:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002696:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002698:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000269a:	6019      	str	r1, [r3, #0]
}
9000269c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
9000269e:	2600      	movs	r6, #0
900026a0:	e7be      	b.n	90002620 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
    switch (blitOp.operation)
900026a2:	f5b5 7f80 	cmp.w	r5, #256	@ 0x100
900026a6:	d022      	beq.n	900026ee <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xee>
900026a8:	f5b5 7f00 	cmp.w	r5, #512	@ 0x200
900026ac:	d113      	bne.n	900026d6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd6>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026ae:	4d38      	ldr	r5, [pc, #224]	@ (90002790 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
900026b0:	4315      	orrs	r5, r2
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900026b2:	4a36      	ldr	r2, [pc, #216]	@ (9000278c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026b4:	61dd      	str	r5, [r3, #28]
900026b6:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
900026b8:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900026ba:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900026bc:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900026be:	601a      	str	r2, [r3, #0]
}
900026c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (format)
900026c2:	2601      	movs	r6, #1
900026c4:	e7ac      	b.n	90002620 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
900026c6:	2401      	movs	r4, #1
900026c8:	4627      	mov	r7, r4
900026ca:	e7c0      	b.n	9000264e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        dma2dColorMode = DMA2D_INPUT_RGB565;
900026cc:	2602      	movs	r6, #2
900026ce:	e7a7      	b.n	90002620 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
    switch (format)
900026d0:	2402      	movs	r4, #2
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
900026d2:	4627      	mov	r7, r4
900026d4:	e7bb      	b.n	9000264e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026d6:	4316      	orrs	r6, r2
        if (blitOp.srcFormat != blitOp.dstFormat)
900026d8:	45e6      	cmp	lr, ip
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026da:	4b2b      	ldr	r3, [pc, #172]	@ (90002788 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
900026dc:	f446 3600 	orr.w	r6, r6, #131072	@ 0x20000
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900026e0:	bf14      	ite	ne
900026e2:	4a2c      	ldrne	r2, [pc, #176]	@ (90002794 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x194>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900026e4:	f242 3201 	movweq	r2, #8961	@ 0x2301
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026e8:	61de      	str	r6, [r3, #28]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900026ea:	601a      	str	r2, [r3, #0]
}
900026ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026ee:	4d2a      	ldr	r5, [pc, #168]	@ (90002798 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x198>)
900026f0:	e7de      	b.n	900026b0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026f2:	4332      	orrs	r2, r6
900026f4:	4b24      	ldr	r3, [pc, #144]	@ (90002788 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
900026f6:	e7ca      	b.n	9000268e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8e>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
900026f8:	6889      	ldr	r1, [r1, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026fa:	4332      	orrs	r2, r6
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
900026fc:	1d0d      	adds	r5, r1, #4
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026fe:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
90002702:	62dd      	str	r5, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002704:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
90002706:	780a      	ldrb	r2, [r1, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002708:	625c      	str	r4, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000270a:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
9000270c:	b1e2      	cbz	r2, 90002748 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>
9000270e:	2a01      	cmp	r2, #1
90002710:	d133      	bne.n	9000277a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17a>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90002712:	69d8      	ldr	r0, [r3, #28]
                if (blitOp.alpha == 255)
90002714:	3fff      	subs	r7, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90002716:	8849      	ldrh	r1, [r1, #2]
90002718:	4a20      	ldr	r2, [pc, #128]	@ (9000279c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>)
                if (blitOp.alpha == 255)
9000271a:	bf18      	it	ne
9000271c:	2701      	movne	r7, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
9000271e:	3901      	subs	r1, #1
90002720:	4002      	ands	r2, r0
90002722:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90002726:	f042 0210 	orr.w	r2, r2, #16
9000272a:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
9000272c:	4a16      	ldr	r2, [pc, #88]	@ (90002788 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
9000272e:	69d3      	ldr	r3, [r2, #28]
90002730:	f043 0320 	orr.w	r3, r3, #32
90002734:	61d3      	str	r3, [r2, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
90002736:	69d3      	ldr	r3, [r2, #28]
90002738:	069b      	lsls	r3, r3, #26
9000273a:	d4fc      	bmi.n	90002736 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x136>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
9000273c:	2310      	movs	r3, #16
9000273e:	6093      	str	r3, [r2, #8]
            if (blend)
90002740:	b167      	cbz	r7, 9000275c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15c>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002742:	4b12      	ldr	r3, [pc, #72]	@ (9000278c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
90002744:	6013      	str	r3, [r2, #0]
}
90002746:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
90002748:	69d8      	ldr	r0, [r3, #28]
            bool blend = true;
9000274a:	2701      	movs	r7, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
9000274c:	8849      	ldrh	r1, [r1, #2]
9000274e:	4a13      	ldr	r2, [pc, #76]	@ (9000279c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>)
90002750:	3901      	subs	r1, #1
90002752:	4002      	ands	r2, r0
90002754:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90002758:	61da      	str	r2, [r3, #28]
                break;
9000275a:	e7e7      	b.n	9000272c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12c>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000275c:	4b0d      	ldr	r3, [pc, #52]	@ (90002794 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x194>)
9000275e:	6013      	str	r3, [r2, #0]
}
90002760:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        assert(0 && "Unsupported Format!");
90002762:	4b0f      	ldr	r3, [pc, #60]	@ (900027a0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a0>)
90002764:	2170      	movs	r1, #112	@ 0x70
90002766:	4a0f      	ldr	r2, [pc, #60]	@ (900027a4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a4>)
90002768:	480f      	ldr	r0, [pc, #60]	@ (900027a8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>)
9000276a:	f027 fdf5 	bl	9002a358 <__assert_func>
        assert(0 && "Unsupported Format!");
9000276e:	4b0c      	ldr	r3, [pc, #48]	@ (900027a0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a0>)
90002770:	2191      	movs	r1, #145	@ 0x91
90002772:	4a0e      	ldr	r2, [pc, #56]	@ (900027ac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
90002774:	480c      	ldr	r0, [pc, #48]	@ (900027a8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>)
90002776:	f027 fdef 	bl	9002a358 <__assert_func>
                assert(0 && "Unsupported format");
9000277a:	4b0d      	ldr	r3, [pc, #52]	@ (900027b0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b0>)
9000277c:	f240 111b 	movw	r1, #283	@ 0x11b
90002780:	4a0c      	ldr	r2, [pc, #48]	@ (900027b4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b4>)
90002782:	4809      	ldr	r0, [pc, #36]	@ (900027a8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>)
90002784:	f027 fde8 	bl	9002a358 <__assert_func>
90002788:	52001000 	.word	0x52001000
9000278c:	00022301 	.word	0x00022301
90002790:	00020009 	.word	0x00020009
90002794:	00012301 	.word	0x00012301
90002798:	0002000a 	.word	0x0002000a
9000279c:	ffff00ef 	.word	0xffff00ef
900027a0:	9002ba40 	.word	0x9002ba40
900027a4:	9002baf4 	.word	0x9002baf4
900027a8:	9002baa8 	.word	0x9002baa8
900027ac:	9002ba5c 	.word	0x9002ba5c
900027b0:	9002bb40 	.word	0x9002bb40
900027b4:	9002bb5c 	.word	0x9002bb5c

900027b8 <_ZN8STM32DMA5startEv>:
    virtual void start()
900027b8:	b510      	push	{r4, lr}
900027ba:	4604      	mov	r4, r0
        if (!queue.isEmpty() && isAllowed && !isRunning)
900027bc:	6840      	ldr	r0, [r0, #4]
900027be:	6803      	ldr	r3, [r0, #0]
900027c0:	681b      	ldr	r3, [r3, #0]
900027c2:	4798      	blx	r3
900027c4:	b958      	cbnz	r0, 900027de <_ZN8STM32DMA5startEv+0x26>
900027c6:	7a63      	ldrb	r3, [r4, #9]
900027c8:	b14b      	cbz	r3, 900027de <_ZN8STM32DMA5startEv+0x26>
900027ca:	7a23      	ldrb	r3, [r4, #8]
900027cc:	bb3b      	cbnz	r3, 9000281e <_ZN8STM32DMA5startEv+0x66>
            execute();
900027ce:	6822      	ldr	r2, [r4, #0]
900027d0:	4620      	mov	r0, r4
            started_by_external_job = false;
900027d2:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
            execute();
900027d6:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
900027d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            execute();
900027dc:	4718      	bx	r3
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
900027de:	4913      	ldr	r1, [pc, #76]	@ (9000282c <_ZN8STM32DMA5startEv+0x74>)
900027e0:	4a13      	ldr	r2, [pc, #76]	@ (90002830 <_ZN8STM32DMA5startEv+0x78>)
900027e2:	680b      	ldr	r3, [r1, #0]
900027e4:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900027e8:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
900027ec:	2b01      	cmp	r3, #1
900027ee:	d000      	beq.n	900027f2 <_ZN8STM32DMA5startEv+0x3a>
    }
900027f0:	bd10      	pop	{r4, pc}
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
900027f2:	7a20      	ldrb	r0, [r4, #8]
900027f4:	2800      	cmp	r0, #0
900027f6:	d1fb      	bne.n	900027f0 <_ZN8STM32DMA5startEv+0x38>
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027f8:	6808      	ldr	r0, [r1, #0]
            started_by_external_job = true;
900027fa:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027fe:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
90002802:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002804:	eb02 0080 	add.w	r0, r2, r0, lsl #2
90002808:	7e03      	ldrb	r3, [r0, #24]
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000280a:	6808      	ldr	r0, [r1, #0]
9000280c:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
90002810:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002814:	b133      	cbz	r3, 90002824 <_ZN8STM32DMA5startEv+0x6c>
    }
90002816:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000281a:	f7ff bcd7 	b.w	900021cc <DMA2D_CropBuffer>
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
9000281e:	4b03      	ldr	r3, [pc, #12]	@ (9000282c <_ZN8STM32DMA5startEv+0x74>)
90002820:	681b      	ldr	r3, [r3, #0]
    }
90002822:	bd10      	pop	{r4, pc}
90002824:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002828:	f7ff bc8a 	b.w	90002140 <DMA2D_CopyBuffer>
9000282c:	24005df4 	.word	0x24005df4
90002830:	24000004 	.word	0x24000004

90002834 <DMA2D_XferCpltCallback>:
        dma.signalDMAInterrupt();
90002834:	4b2c      	ldr	r3, [pc, #176]	@ (900028e8 <DMA2D_XferCpltCallback+0xb4>)
90002836:	492d      	ldr	r1, [pc, #180]	@ (900028ec <DMA2D_XferCpltCallback+0xb8>)
90002838:	681b      	ldr	r3, [r3, #0]
    {
9000283a:	b510      	push	{r4, lr}
9000283c:	685c      	ldr	r4, [r3, #4]
9000283e:	6823      	ldr	r3, [r4, #0]
90002840:	695a      	ldr	r2, [r3, #20]
90002842:	428a      	cmp	r2, r1
90002844:	d122      	bne.n	9000288c <DMA2D_XferCpltCallback+0x58>
        if (!started_by_external_job)
90002846:	f894 2da0 	ldrb.w	r2, [r4, #3488]	@ 0xda0
9000284a:	b192      	cbz	r2, 90002872 <DMA2D_XferCpltCallback+0x3e>
        if (isRunning)
9000284c:	7a23      	ldrb	r3, [r4, #8]
9000284e:	2b00      	cmp	r3, #0
90002850:	d13a      	bne.n	900028c8 <DMA2D_XferCpltCallback+0x94>
            if (!queue.isEmpty() && isAllowed)
90002852:	6860      	ldr	r0, [r4, #4]
90002854:	6803      	ldr	r3, [r0, #0]
90002856:	681b      	ldr	r3, [r3, #0]
90002858:	4798      	blx	r3
9000285a:	4603      	mov	r3, r0
9000285c:	b9a8      	cbnz	r0, 9000288a <DMA2D_XferCpltCallback+0x56>
9000285e:	7a62      	ldrb	r2, [r4, #9]
90002860:	b19a      	cbz	r2, 9000288a <DMA2D_XferCpltCallback+0x56>
                execute();
90002862:	6822      	ldr	r2, [r4, #0]
90002864:	4620      	mov	r0, r4
                started_by_external_job = false;
90002866:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
9000286a:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
9000286c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002870:	4718      	bx	r3
            executeCompleted();
90002872:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90002874:	4620      	mov	r0, r4
90002876:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
90002878:	491d      	ldr	r1, [pc, #116]	@ (900028f0 <DMA2D_XferCpltCallback+0xbc>)
9000287a:	4a1e      	ldr	r2, [pc, #120]	@ (900028f4 <DMA2D_XferCpltCallback+0xc0>)
9000287c:	680b      	ldr	r3, [r1, #0]
9000287e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002882:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
90002886:	2b01      	cmp	r3, #1
90002888:	d004      	beq.n	90002894 <DMA2D_XferCpltCallback+0x60>
9000288a:	bd10      	pop	{r4, pc}
9000288c:	4620      	mov	r0, r4
9000288e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002892:	4710      	bx	r2
90002894:	4818      	ldr	r0, [pc, #96]	@ (900028f8 <DMA2D_XferCpltCallback+0xc4>)
90002896:	6800      	ldr	r0, [r0, #0]
90002898:	2800      	cmp	r0, #0
9000289a:	d1f6      	bne.n	9000288a <DMA2D_XferCpltCallback+0x56>
9000289c:	7a20      	ldrb	r0, [r4, #8]
9000289e:	2800      	cmp	r0, #0
900028a0:	d1f3      	bne.n	9000288a <DMA2D_XferCpltCallback+0x56>
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900028a2:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
900028a4:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900028a8:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
900028ac:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900028ae:	eb02 0080 	add.w	r0, r2, r0, lsl #2
900028b2:	7e03      	ldrb	r3, [r0, #24]
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028b4:	6808      	ldr	r0, [r1, #0]
900028b6:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
900028ba:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900028be:	b17b      	cbz	r3, 900028e0 <DMA2D_XferCpltCallback+0xac>
900028c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028c4:	f7ff bc82 	b.w	900021cc <DMA2D_CropBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028c8:	4b09      	ldr	r3, [pc, #36]	@ (900028f0 <DMA2D_XferCpltCallback+0xbc>)
            isRunning = false;
900028ca:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028cc:	4809      	ldr	r0, [pc, #36]	@ (900028f4 <DMA2D_XferCpltCallback+0xc0>)
900028ce:	681b      	ldr	r3, [r3, #0]
            isRunning = false;
900028d0:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028d2:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900028d6:	eb00 0083 	add.w	r0, r0, r3, lsl #2
900028da:	f7ff fcf7 	bl	900022cc <DMA2D_ExternalJobCompleted>
900028de:	e7b8      	b.n	90002852 <DMA2D_XferCpltCallback+0x1e>
900028e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028e4:	f7ff bc2c 	b.w	90002140 <DMA2D_CopyBuffer>
900028e8:	24021864 	.word	0x24021864
900028ec:	900024a5 	.word	0x900024a5
900028f0:	24005df4 	.word	0x24005df4
900028f4:	24000004 	.word	0x24000004
900028f8:	24005df0 	.word	0x24005df0

900028fc <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
900028fc:	b570      	push	{r4, r5, r6, lr}
900028fe:	4606      	mov	r6, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
90002900:	4b0b      	ldr	r3, [pc, #44]	@ (90002930 <_ZN8STM32DMAC1Ev+0x34>)
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
90002902:	2500      	movs	r5, #0
90002904:	300c      	adds	r0, #12
90002906:	4634      	mov	r4, r6
90002908:	2260      	movs	r2, #96	@ 0x60
9000290a:	7235      	strb	r5, [r6, #8]
9000290c:	7275      	strb	r5, [r6, #9]
9000290e:	6070      	str	r0, [r6, #4]
90002910:	f844 3b20 	str.w	r3, [r4], #32
90002914:	4621      	mov	r1, r4
90002916:	f00f fd05 	bl	90012324 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
9000291a:	4621      	mov	r1, r4
9000291c:	f506 635a 	add.w	r3, r6, #3488	@ 0xda0
        : color(0)
90002920:	60cd      	str	r5, [r1, #12]
90002922:	3124      	adds	r1, #36	@ 0x24
90002924:	4299      	cmp	r1, r3
90002926:	d1fb      	bne.n	90002920 <_ZN8STM32DMAC1Ev+0x24>
}
90002928:	4630      	mov	r0, r6
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
9000292a:	f886 5da0 	strb.w	r5, [r6, #3488]	@ 0xda0
}
9000292e:	bd70      	pop	{r4, r5, r6, pc}
90002930:	9002d190 	.word	0x9002d190

90002934 <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90002934:	4a03      	ldr	r2, [pc, #12]	@ (90002944 <_ZN8touchgfx5paint8tearDownEv+0x10>)
90002936:	6813      	ldr	r3, [r2, #0]
90002938:	07db      	lsls	r3, r3, #31
9000293a:	d4fc      	bmi.n	90002936 <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
9000293c:	2323      	movs	r3, #35	@ 0x23
9000293e:	6093      	str	r3, [r2, #8]
}
90002940:	4770      	bx	lr
90002942:	bf00      	nop
90002944:	52001000 	.word	0x52001000

90002948 <_ZN8touchgfx5paint9flushLineEPmi>:
void flushLine(uint32_t* addr, int sizebytes)
{
    // This function is used when decompressing data to flush
    // the currently decoded data in the cache to allow the DMA2D
    // to blend the pixels correctly.
    if (SCB->CCR & SCB_CCR_DC_Msk)
90002948:	4a0b      	ldr	r2, [pc, #44]	@ (90002978 <_ZN8touchgfx5paint9flushLineEPmi+0x30>)
9000294a:	6953      	ldr	r3, [r2, #20]
  \param[in]   dsize   size of memory block (in number of bytes)
*/
__STATIC_FORCEINLINE void SCB_CleanDCache_by_Addr (uint32_t *addr, int32_t dsize)
{
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    if ( dsize > 0 ) { 
9000294c:	03db      	lsls	r3, r3, #15
9000294e:	d501      	bpl.n	90002954 <_ZN8touchgfx5paint9flushLineEPmi+0xc>
90002950:	2900      	cmp	r1, #0
90002952:	dc00      	bgt.n	90002956 <_ZN8touchgfx5paint9flushLineEPmi+0xe>
    {
        SCB_CleanDCache_by_Addr(addr, sizebytes);
    }
}
90002954:	4770      	bx	lr
       int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
90002956:	f000 031f 	and.w	r3, r0, #31
9000295a:	4419      	add	r1, r3
  __ASM volatile ("dsb 0xF":::"memory");
9000295c:	f3bf 8f4f 	dsb	sy
90002960:	4401      	add	r1, r0
      uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
    
      __DSB();

      do {
        SCB->DCCMVAC = op_addr;             /* register accepts only 32byte aligned values, only bits 31..5 are valid */
90002962:	f8c2 0268 	str.w	r0, [r2, #616]	@ 0x268
        op_addr += __SCB_DCACHE_LINE_SIZE;
90002966:	3020      	adds	r0, #32
        op_size -= __SCB_DCACHE_LINE_SIZE;
      } while ( op_size > 0 );
90002968:	1a0b      	subs	r3, r1, r0
9000296a:	2b00      	cmp	r3, #0
9000296c:	dcf9      	bgt.n	90002962 <_ZN8touchgfx5paint9flushLineEPmi+0x1a>
9000296e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002972:	f3bf 8f6f 	isb	sy
90002976:	4770      	bx	lr
90002978:	e000ed00 	.word	0xe000ed00

9000297c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
9000297c:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
9000297e:	4c11      	ldr	r4, [pc, #68]	@ (900029c4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
90002980:	6825      	ldr	r5, [r4, #0]
90002982:	07ed      	lsls	r5, r5, #31
90002984:	d4fc      	bmi.n	90002980 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002986:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002988:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
9000298a:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
9000298c:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
9000298e:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002992:	f04f 0502 	mov.w	r5, #2
90002996:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002998:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
9000299a:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
9000299c:	d00b      	beq.n	900029b6 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x3a>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
9000299e:	490a      	ldr	r1, [pc, #40]	@ (900029c8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900029a0:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029a2:	ea41 6303 	orr.w	r3, r1, r3, lsl #24

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
900029a6:	4909      	ldr	r1, [pc, #36]	@ (900029cc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029a8:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->FGCOLR, color);
900029aa:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
900029ac:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
900029ae:	60e0      	str	r0, [r4, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
900029b0:	6021      	str	r1, [r4, #0]
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}
900029b2:	bc30      	pop	{r4, r5}
900029b4:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
900029b6:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
900029b8:	9a02      	ldr	r2, [sp, #8]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
900029ba:	4b05      	ldr	r3, [pc, #20]	@ (900029d0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x54>)
        WRITE_REG(DMA2D->OCOLR, color565);
900029bc:	63a2      	str	r2, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
900029be:	6023      	str	r3, [r4, #0]
}
900029c0:	bc30      	pop	{r4, r5}
900029c2:	4770      	bx	lr
900029c4:	52001000 	.word	0x52001000
900029c8:	00010009 	.word	0x00010009
900029cc:	00020001 	.word	0x00020001
900029d0:	00030001 	.word	0x00030001

900029d4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
900029d4:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
900029d6:	4c10      	ldr	r4, [pc, #64]	@ (90002a18 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
900029d8:	6825      	ldr	r5, [r4, #0]
900029da:	07ed      	lsls	r5, r5, #31
900029dc:	d4fc      	bmi.n	900029d8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900029de:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029e0:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
900029e2:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900029e4:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029e6:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900029ea:	f04f 0502 	mov.w	r5, #2
900029ee:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029f0:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
900029f2:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
900029f4:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
900029f6:	d009      	beq.n	90002a0c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x38>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029f8:	061b      	lsls	r3, r3, #24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
900029fa:	4a08      	ldr	r2, [pc, #32]	@ (90002a1c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x48>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029fc:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
90002a00:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002a02:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
90002a04:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90002a06:	6022      	str	r2, [r4, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
    }
}
90002a08:	bc30      	pop	{r4, r5}
90002a0a:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a0c:	4a04      	ldr	r2, [pc, #16]	@ (90002a20 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>)
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
90002a0e:	2301      	movs	r3, #1
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a10:	61e2      	str	r2, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
90002a12:	6023      	str	r3, [r4, #0]
}
90002a14:	bc30      	pop	{r4, r5}
90002a16:	4770      	bx	lr
90002a18:	52001000 	.word	0x52001000
90002a1c:	00020001 	.word	0x00020001
90002a20:	ff020002 	.word	0xff020002

90002a24 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
90002a24:	b470      	push	{r4, r5, r6}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90002a26:	4c0c      	ldr	r4, [pc, #48]	@ (90002a58 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
90002a28:	6825      	ldr	r5, [r4, #0]
90002a2a:	07ed      	lsls	r5, r5, #31
90002a2c:	d4fc      	bmi.n	90002a28 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a2e:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002a30:	2502      	movs	r5, #2

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a32:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002a34:	2623      	movs	r6, #35	@ 0x23
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a36:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a3a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002a3e:	60a6      	str	r6, [r4, #8]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002a40:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a42:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90002a44:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
90002a46:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a48:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90002a4a:	4b04      	ldr	r3, [pc, #16]	@ (90002a5c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x38>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002a4c:	6265      	str	r5, [r4, #36]	@ 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
90002a4e:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90002a50:	6023      	str	r3, [r4, #0]
}
90002a52:	bc70      	pop	{r4, r5, r6}
90002a54:	4770      	bx	lr
90002a56:	bf00      	nop
90002a58:	52001000 	.word	0x52001000
90002a5c:	00020001 	.word	0x00020001

90002a60 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
90002a60:	2001      	movs	r0, #1
90002a62:	4770      	bx	lr

90002a64 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
90002a64:	200c      	movs	r0, #12
90002a66:	4770      	bx	lr

90002a68 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
90002a68:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90002a6c:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    }
90002a70:	3008      	adds	r0, #8
90002a72:	4770      	bx	lr

90002a74 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
90002a74:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90002a78:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    }
90002a7c:	3008      	adds	r0, #8
90002a7e:	4770      	bx	lr

90002a80 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002a80:	2001      	movs	r0, #1
90002a82:	4770      	bx	lr

90002a84 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90002a84:	f44f 70a8 	mov.w	r0, #336	@ 0x150
90002a88:	4770      	bx	lr
90002a8a:	bf00      	nop

90002a8c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a8c:	f44f 73a8 	mov.w	r3, #336	@ 0x150
90002a90:	fb03 0001 	mla	r0, r3, r1, r0
    }
90002a94:	3008      	adds	r0, #8
90002a96:	4770      	bx	lr

90002a98 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a98:	f44f 73a8 	mov.w	r3, #336	@ 0x150
90002a9c:	fb03 0001 	mla	r0, r3, r1, r0
    }
90002aa0:	3008      	adds	r0, #8
90002aa2:	4770      	bx	lr

90002aa4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002aa4:	2001      	movs	r0, #1
90002aa6:	4770      	bx	lr

90002aa8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90002aa8:	2010      	movs	r0, #16
90002aaa:	4770      	bx	lr

90002aac <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002aac:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90002ab0:	3008      	adds	r0, #8
90002ab2:	4770      	bx	lr

90002ab4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002ab4:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90002ab8:	3008      	adds	r0, #8
90002aba:	4770      	bx	lr

90002abc <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
90002abc:	4608      	mov	r0, r1
90002abe:	f002 b895 	b.w	90004bec <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
90002ac2:	bf00      	nop

90002ac4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
90002ac4:	4b03      	ldr	r3, [pc, #12]	@ (90002ad4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002ac6:	b510      	push	{r4, lr}
90002ac8:	4604      	mov	r4, r0
90002aca:	6003      	str	r3, [r0, #0]
90002acc:	f00e fa39 	bl	90010f42 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002ad0:	4620      	mov	r0, r4
90002ad2:	bd10      	pop	{r4, pc}
90002ad4:	9002d248 	.word	0x9002d248

90002ad8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002ad8:	4b05      	ldr	r3, [pc, #20]	@ (90002af0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
90002ada:	b510      	push	{r4, lr}
90002adc:	4604      	mov	r4, r0
90002ade:	6003      	str	r3, [r0, #0]
90002ae0:	f00e fa2f 	bl	90010f42 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002ae4:	2114      	movs	r1, #20
90002ae6:	4620      	mov	r0, r4
90002ae8:	f027 f8c0 	bl	90029c6c <_ZdlPvj>
90002aec:	4620      	mov	r0, r4
90002aee:	bd10      	pop	{r4, pc}
90002af0:	9002d248 	.word	0x9002d248

90002af4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90002af4:	4b03      	ldr	r3, [pc, #12]	@ (90002b04 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002af6:	b510      	push	{r4, lr}
90002af8:	4604      	mov	r4, r0
90002afa:	6003      	str	r3, [r0, #0]
90002afc:	f00e fa21 	bl	90010f42 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b00:	4620      	mov	r0, r4
90002b02:	bd10      	pop	{r4, pc}
90002b04:	9002d214 	.word	0x9002d214

90002b08 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002b08:	4b06      	ldr	r3, [pc, #24]	@ (90002b24 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x1c>)
90002b0a:	b510      	push	{r4, lr}
90002b0c:	4604      	mov	r4, r0
90002b0e:	6003      	str	r3, [r0, #0]
90002b10:	f00e fa17 	bl	90010f42 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b14:	f44f 71ac 	mov.w	r1, #344	@ 0x158
90002b18:	4620      	mov	r0, r4
90002b1a:	f027 f8a7 	bl	90029c6c <_ZdlPvj>
90002b1e:	4620      	mov	r0, r4
90002b20:	bd10      	pop	{r4, pc}
90002b22:	bf00      	nop
90002b24:	9002d214 	.word	0x9002d214

90002b28 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90002b28:	4b03      	ldr	r3, [pc, #12]	@ (90002b38 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002b2a:	b510      	push	{r4, lr}
90002b2c:	4604      	mov	r4, r0
90002b2e:	6003      	str	r3, [r0, #0]
90002b30:	f00e fa07 	bl	90010f42 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b34:	4620      	mov	r0, r4
90002b36:	bd10      	pop	{r4, pc}
90002b38:	9002d1e0 	.word	0x9002d1e0

90002b3c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002b3c:	4b05      	ldr	r3, [pc, #20]	@ (90002b54 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
90002b3e:	b510      	push	{r4, lr}
90002b40:	4604      	mov	r4, r0
90002b42:	6003      	str	r3, [r0, #0]
90002b44:	f00e f9fd 	bl	90010f42 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b48:	2118      	movs	r1, #24
90002b4a:	4620      	mov	r0, r4
90002b4c:	f027 f88e 	bl	90029c6c <_ZdlPvj>
90002b50:	4620      	mov	r0, r4
90002b52:	bd10      	pop	{r4, pc}
90002b54:	9002d1e0 	.word	0x9002d1e0

90002b58 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
90002b58:	b510      	push	{r4, lr}
90002b5a:	4a0c      	ldr	r2, [pc, #48]	@ (90002b8c <_ZN12FrontendHeapD1Ev+0x34>)
90002b5c:	4604      	mov	r4, r0
90002b5e:	4b0c      	ldr	r3, [pc, #48]	@ (90002b90 <_ZN12FrontendHeapD1Ev+0x38>)
90002b60:	f500 70c2 	add.w	r0, r0, #388	@ 0x184
90002b64:	6022      	str	r2, [r4, #0]
90002b66:	f8c4 3184 	str.w	r3, [r4, #388]	@ 0x184
90002b6a:	f00e f9ea 	bl	90010f42 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b6e:	4b09      	ldr	r3, [pc, #36]	@ (90002b94 <_ZN12FrontendHeapD1Ev+0x3c>)
90002b70:	4620      	mov	r0, r4
90002b72:	f840 3f2c 	str.w	r3, [r0, #44]!
90002b76:	f00e f9e4 	bl	90010f42 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b7a:	4b07      	ldr	r3, [pc, #28]	@ (90002b98 <_ZN12FrontendHeapD1Ev+0x40>)
90002b7c:	4620      	mov	r0, r4
90002b7e:	f840 3f14 	str.w	r3, [r0, #20]!
90002b82:	f00e f9de 	bl	90010f42 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b86:	4620      	mov	r0, r4
90002b88:	bd10      	pop	{r4, pc}
90002b8a:	bf00      	nop
90002b8c:	9002d27c 	.word	0x9002d27c
90002b90:	9002d248 	.word	0x9002d248
90002b94:	9002d214 	.word	0x9002d214
90002b98:	9002d1e0 	.word	0x9002d1e0

90002b9c <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
90002b9c:	b510      	push	{r4, lr}
class FrontendHeap : public FrontendHeapBase
90002b9e:	4c0c      	ldr	r4, [pc, #48]	@ (90002bd0 <__tcf_0+0x34>)
90002ba0:	4a0c      	ldr	r2, [pc, #48]	@ (90002bd4 <__tcf_0+0x38>)
90002ba2:	4b0d      	ldr	r3, [pc, #52]	@ (90002bd8 <__tcf_0+0x3c>)
90002ba4:	f504 70c2 	add.w	r0, r4, #388	@ 0x184
90002ba8:	6022      	str	r2, [r4, #0]
90002baa:	f8c4 3184 	str.w	r3, [r4, #388]	@ 0x184
90002bae:	f00e f9c8 	bl	90010f42 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bb2:	4b0a      	ldr	r3, [pc, #40]	@ (90002bdc <__tcf_0+0x40>)
90002bb4:	4620      	mov	r0, r4
90002bb6:	f840 3f2c 	str.w	r3, [r0, #44]!
90002bba:	f00e f9c2 	bl	90010f42 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bbe:	4620      	mov	r0, r4
90002bc0:	4b07      	ldr	r3, [pc, #28]	@ (90002be0 <__tcf_0+0x44>)
        static FrontendHeap instance;
90002bc2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002bc6:	f840 3f14 	str.w	r3, [r0, #20]!
90002bca:	f00e b9ba 	b.w	90010f42 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bce:	bf00      	nop
90002bd0:	24006f1c 	.word	0x24006f1c
90002bd4:	9002d27c 	.word	0x9002d27c
90002bd8:	9002d248 	.word	0x9002d248
90002bdc:	9002d214 	.word	0x9002d214
90002be0:	9002d1e0 	.word	0x9002d1e0

90002be4 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
90002be4:	b510      	push	{r4, lr}
90002be6:	4a0e      	ldr	r2, [pc, #56]	@ (90002c20 <_ZN12FrontendHeapD0Ev+0x3c>)
90002be8:	4604      	mov	r4, r0
90002bea:	4b0e      	ldr	r3, [pc, #56]	@ (90002c24 <_ZN12FrontendHeapD0Ev+0x40>)
90002bec:	f500 70c2 	add.w	r0, r0, #388	@ 0x184
90002bf0:	6022      	str	r2, [r4, #0]
90002bf2:	f8c4 3184 	str.w	r3, [r4, #388]	@ 0x184
90002bf6:	f00e f9a4 	bl	90010f42 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bfa:	4b0b      	ldr	r3, [pc, #44]	@ (90002c28 <_ZN12FrontendHeapD0Ev+0x44>)
90002bfc:	4620      	mov	r0, r4
90002bfe:	f840 3f2c 	str.w	r3, [r0, #44]!
90002c02:	f00e f99e 	bl	90010f42 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002c06:	4b09      	ldr	r3, [pc, #36]	@ (90002c2c <_ZN12FrontendHeapD0Ev+0x48>)
90002c08:	4620      	mov	r0, r4
90002c0a:	f840 3f14 	str.w	r3, [r0, #20]!
90002c0e:	f00e f998 	bl	90010f42 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002c12:	4620      	mov	r0, r4
90002c14:	f44f 713e 	mov.w	r1, #760	@ 0x2f8
90002c18:	f027 f828 	bl	90029c6c <_ZdlPvj>
90002c1c:	4620      	mov	r0, r4
90002c1e:	bd10      	pop	{r4, pc}
90002c20:	9002d27c 	.word	0x9002d27c
90002c24:	9002d248 	.word	0x9002d248
90002c28:	9002d214 	.word	0x9002d214
90002c2c:	9002d1e0 	.word	0x9002d1e0

90002c30 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
90002c30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90002c34:	b082      	sub	sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
90002c36:	2400      	movs	r4, #0
90002c38:	f001 fdde 	bl	900047f8 <_ZN14BitmapDatabase11getInstanceEv>
90002c3c:	4605      	mov	r5, r0
90002c3e:	f001 fddf 	bl	90004800 <_ZN14BitmapDatabase15getInstanceSizeEv>
90002c42:	4623      	mov	r3, r4
90002c44:	4601      	mov	r1, r0
90002c46:	4622      	mov	r2, r4
90002c48:	4628      	mov	r0, r5
90002c4a:	9400      	str	r4, [sp, #0]
90002c4c:	f017 ff4c 	bl	9001aae8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
90002c50:	4b29      	ldr	r3, [pc, #164]	@ (90002cf8 <touchgfx_init+0xc8>)
90002c52:	4a2a      	ldr	r2, [pc, #168]	@ (90002cfc <touchgfx_init+0xcc>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
90002c54:	4620      	mov	r0, r4
        static FrontendHeap instance;
90002c56:	4c2a      	ldr	r4, [pc, #168]	@ (90002d00 <touchgfx_init+0xd0>)
90002c58:	601a      	str	r2, [r3, #0]
90002c5a:	f002 fc5d 	bl	90005518 <_ZN8touchgfx5Texts11setLanguageEt>
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
90002c5e:	4b29      	ldr	r3, [pc, #164]	@ (90002d04 <touchgfx_init+0xd4>)
90002c60:	4a29      	ldr	r2, [pc, #164]	@ (90002d08 <touchgfx_init+0xd8>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
90002c62:	482a      	ldr	r0, [pc, #168]	@ (90002d0c <touchgfx_init+0xdc>)
90002c64:	609a      	str	r2, [r3, #8]
90002c66:	f017 fea7 	bl	9001a9b8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
90002c6a:	6823      	ldr	r3, [r4, #0]
90002c6c:	f3bf 8f5b 	dmb	ish
90002c70:	07db      	lsls	r3, r3, #31
90002c72:	d505      	bpl.n	90002c80 <touchgfx_init+0x50>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
90002c74:	4826      	ldr	r0, [pc, #152]	@ (90002d10 <touchgfx_init+0xe0>)
}
90002c76:	b002      	add	sp, #8
90002c78:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002c7c:	f7fe b950 	b.w	90000f20 <_ZN11TouchGFXHAL10initializeEv>
90002c80:	4620      	mov	r0, r4
90002c82:	f026 fff5 	bl	90029c70 <__cxa_guard_acquire>
90002c86:	2800      	cmp	r0, #0
90002c88:	d0f4      	beq.n	90002c74 <touchgfx_init+0x44>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
90002c8a:	4d22      	ldr	r5, [pc, #136]	@ (90002d14 <touchgfx_init+0xe4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
90002c8c:	4b22      	ldr	r3, [pc, #136]	@ (90002d18 <touchgfx_init+0xe8>)
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
90002c8e:	f505 76ce 	add.w	r6, r5, #412	@ 0x19c
        : presenterStorage(pres),
90002c92:	f105 0014 	add.w	r0, r5, #20
          screenStorage(scr),
90002c96:	f105 082c 	add.w	r8, r5, #44	@ 0x2c
          transitionStorage(tra),
90002c9a:	f505 77c2 	add.w	r7, r5, #388	@ 0x184
90002c9e:	602b      	str	r3, [r5, #0]
90002ca0:	60ef      	str	r7, [r5, #12]
          frontendApplication(app)
90002ca2:	612e      	str	r6, [r5, #16]
          screenStorage(scr),
90002ca4:	e9c5 0801 	strd	r0, r8, [r5, #4]
90002ca8:	f00e f94c 	bl	90010f44 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002cac:	4b1b      	ldr	r3, [pc, #108]	@ (90002d1c <touchgfx_init+0xec>)
90002cae:	4640      	mov	r0, r8
90002cb0:	616b      	str	r3, [r5, #20]
90002cb2:	f00e f947 	bl	90010f44 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002cb6:	4b1a      	ldr	r3, [pc, #104]	@ (90002d20 <touchgfx_init+0xf0>)
90002cb8:	4638      	mov	r0, r7
90002cba:	62eb      	str	r3, [r5, #44]	@ 0x2c
90002cbc:	f00e f942 	bl	90010f44 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002cc0:	4b18      	ldr	r3, [pc, #96]	@ (90002d24 <touchgfx_init+0xf4>)
90002cc2:	f505 70cc 	add.w	r0, r5, #408	@ 0x198
90002cc6:	f8c5 3184 	str.w	r3, [r5, #388]	@ 0x184
90002cca:	f002 fcaf 	bl	9000562c <_ZN5ModelC1Ev>
90002cce:	462a      	mov	r2, r5
90002cd0:	f505 71cc 	add.w	r1, r5, #408	@ 0x198
90002cd4:	4630      	mov	r0, r6
90002cd6:	f002 fc9f 	bl	90005618 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
90002cda:	4630      	mov	r0, r6
90002cdc:	f001 ff86 	bl	90004bec <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
90002ce0:	4811      	ldr	r0, [pc, #68]	@ (90002d28 <touchgfx_init+0xf8>)
90002ce2:	f027 fb57 	bl	9002a394 <atexit>
90002ce6:	4620      	mov	r0, r4
90002ce8:	f026 ffce 	bl	90029c88 <__cxa_guard_release>
90002cec:	4808      	ldr	r0, [pc, #32]	@ (90002d10 <touchgfx_init+0xe0>)
}
90002cee:	b002      	add	sp, #8
90002cf0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002cf4:	f7fe b914 	b.w	90000f20 <_ZN11TouchGFXHAL10initializeEv>
90002cf8:	240218c8 	.word	0x240218c8
90002cfc:	240060c4 	.word	0x240060c4
90002d00:	24006f18 	.word	0x24006f18
90002d04:	240060e4 	.word	0x240060e4
90002d08:	240060c8 	.word	0x240060c8
90002d0c:	24000040 	.word	0x24000040
90002d10:	24006034 	.word	0x24006034
90002d14:	24006f1c 	.word	0x24006f1c
90002d18:	9002d27c 	.word	0x9002d27c
90002d1c:	9002d1e0 	.word	0x9002d1e0
90002d20:	9002d214 	.word	0x9002d214
90002d24:	9002d248 	.word	0x9002d248
90002d28:	90002b9d 	.word	0x90002b9d

90002d2c <touchgfx_components_init>:

void touchgfx_components_init()
{
}
90002d2c:	4770      	bx	lr
90002d2e:	bf00      	nop

90002d30 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
90002d30:	4801      	ldr	r0, [pc, #4]	@ (90002d38 <touchgfx_taskEntry+0x8>)
90002d32:	f7fe b943 	b.w	90000fbc <_ZN11TouchGFXHAL9taskEntryEv>
90002d36:	bf00      	nop
90002d38:	24006034 	.word	0x24006034

90002d3c <_GLOBAL__sub_I_touchgfx_init>:
}
90002d3c:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
90002d3e:	4e2a      	ldr	r6, [pc, #168]	@ (90002de8 <_GLOBAL__sub_I_touchgfx_init+0xac>)
{
public:

    STM32TouchController() {}
90002d40:	4b2a      	ldr	r3, [pc, #168]	@ (90002dec <_GLOBAL__sub_I_touchgfx_init+0xb0>)
90002d42:	4c2b      	ldr	r4, [pc, #172]	@ (90002df0 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
90002d44:	4630      	mov	r0, r6
static LCD16bpp display;
90002d46:	4d2b      	ldr	r5, [pc, #172]	@ (90002df4 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
90002d48:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
90002d4a:	f7ff fdd7 	bl	900028fc <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
90002d4e:	4628      	mov	r0, r5
90002d50:	f01c ffda 	bl	9001fd08 <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
90002d54:	4828      	ldr	r0, [pc, #160]	@ (90002df8 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
90002d56:	f015 fbc7 	bl	900184e8 <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
90002d5a:	4b28      	ldr	r3, [pc, #160]	@ (90002dfc <_GLOBAL__sub_I_touchgfx_init+0xc0>)
          mcuInstrumentation(0),
90002d5c:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002d5e:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002d62:	f44f 7188 	mov.w	r1, #272	@ 0x110
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
90002d66:	62da      	str	r2, [r3, #44]	@ 0x2c
90002d68:	861a      	strh	r2, [r3, #48]	@ 0x30
        : x(0), y(0), width(0), height(0)
90002d6a:	655a      	str	r2, [r3, #84]	@ 0x54
          useAuxiliaryLCD(false),
90002d6c:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          lastY(0),
90002d70:	665a      	str	r2, [r3, #100]	@ 0x64
          vSyncCompensationEnabled(false),
90002d72:	66da      	str	r2, [r3, #108]	@ 0x6c
          updateMCULoad(0),
90002d74:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          mcuInstrumentation(0),
90002d78:	e9c3 4203 	strd	r4, r2, [r3, #12]
          touchSampleRate(1),
90002d7c:	4c20      	ldr	r4, [pc, #128]	@ (90002e00 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
90002d7e:	669c      	str	r4, [r3, #104]	@ 0x68
        instance = this;
90002d80:	4c20      	ldr	r4, [pc, #128]	@ (90002e04 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
90002d82:	6023      	str	r3, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002d84:	4c20      	ldr	r4, [pc, #128]	@ (90002e08 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
90002d86:	8020      	strh	r0, [r4, #0]
90002d88:	4c20      	ldr	r4, [pc, #128]	@ (90002e0c <_GLOBAL__sub_I_touchgfx_init+0xd0>)
90002d8a:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002d8c:	4c20      	ldr	r4, [pc, #128]	@ (90002e10 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
90002d8e:	4821      	ldr	r0, [pc, #132]	@ (90002e14 <_GLOBAL__sub_I_touchgfx_init+0xd8>)
90002d90:	8021      	strh	r1, [r4, #0]
90002d92:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
90002d94:	4820      	ldr	r0, [pc, #128]	@ (90002e18 <_GLOBAL__sub_I_touchgfx_init+0xdc>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
90002d96:	4921      	ldr	r1, [pc, #132]	@ (90002e1c <_GLOBAL__sub_I_touchgfx_init+0xe0>)
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002d98:	4c21      	ldr	r4, [pc, #132]	@ (90002e20 <_GLOBAL__sub_I_touchgfx_init+0xe4>)
          lcdRef(display),
90002d9a:	e9c3 6501 	strd	r6, r5, [r3, #4]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002d9e:	f44f 7580 	mov.w	r5, #256	@ 0x100
          frameBufferAllocator(0),
90002da2:	e9c3 2205 	strd	r2, r2, [r3, #20]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002da6:	649d      	str	r5, [r3, #72]	@ 0x48
            : startX(0),
90002da8:	e9c3 2207 	strd	r2, r2, [r3, #28]
        : drag(), listener(0), dragThresholdValue(0)
90002dac:	e9c3 2209 	strd	r2, r2, [r3, #36]	@ 0x24
          frameBuffer0(0),
90002db0:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
90002db4:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
90002db8:	e9c3 2213 	strd	r2, r2, [r3, #76]	@ 0x4c
          lastX(0),
90002dbc:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
        DISPLAY_ROTATION = rotate0;
90002dc0:	7002      	strb	r2, [r0, #0]
90002dc2:	6019      	str	r1, [r3, #0]
          isFrontPorchEntered(false),
90002dc4:	4917      	ldr	r1, [pc, #92]	@ (90002e24 <_GLOBAL__sub_I_touchgfx_init+0xe8>)
          maxDrawingHeight(height / numberOfBlocks), // Best guess based on testing (but not ideal in all cases)
90002dc6:	4818      	ldr	r0, [pc, #96]	@ (90002e28 <_GLOBAL__sub_I_touchgfx_init+0xec>)
          isFrontPorchEntered(false),
90002dc8:	67d9      	str	r1, [r3, #124]	@ 0x7c
90002dca:	4918      	ldr	r1, [pc, #96]	@ (90002e2c <_GLOBAL__sub_I_touchgfx_init+0xf0>)
        : cc_consumed(0),
90002dcc:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
90002dd0:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
          maxDrawingHeight(height / numberOfBlocks), // Best guess based on testing (but not ideal in all cases)
90002dd4:	f8c3 0080 	str.w	r0, [r3, #128]	@ 0x80
          cc_in(0)
90002dd8:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
90002ddc:	f8c3 1084 	str.w	r1, [r3, #132]	@ 0x84
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002de0:	e9c3 241d 	strd	r2, r4, [r3, #116]	@ 0x74
}
90002de4:	bd70      	pop	{r4, r5, r6, pc}
90002de6:	bf00      	nop
90002de8:	24006170 	.word	0x24006170
90002dec:	9002b500 	.word	0x9002b500
90002df0:	24006f14 	.word	0x24006f14
90002df4:	240060e4 	.word	0x240060e4
90002df8:	240060c8 	.word	0x240060c8
90002dfc:	24006034 	.word	0x24006034
90002e00:	01000001 	.word	0x01000001
90002e04:	24021864 	.word	0x24021864
90002e08:	24021858 	.word	0x24021858
90002e0c:	2402185e 	.word	0x2402185e
90002e10:	2402185a 	.word	0x2402185a
90002e14:	24021860 	.word	0x24021860
90002e18:	2402185c 	.word	0x2402185c
90002e1c:	9002d060 	.word	0x9002d060
90002e20:	01010000 	.word	0x01010000
90002e24:	00440400 	.word	0x00440400
90002e28:	00140016 	.word	0x00140016
90002e2c:	9002b4d8 	.word	0x9002b4d8

90002e30 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
90002e30:	4801      	ldr	r0, [pc, #4]	@ (90002e38 <_GLOBAL__sub_D_touchgfx_init+0x8>)
90002e32:	f7ff badd 	b.w	900023f0 <_ZN8STM32DMAD1Ev>
90002e36:	bf00      	nop
90002e38:	24006170 	.word	0x24006170

90002e3c <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * drawn by the widget.
     */
    virtual void invalidateContent() const
    {
        // Consider checking if *this is in the draw chain
        if (visible)
90002e3c:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90002e40:	b112      	cbz	r2, 90002e48 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
        {
            invalidate();
90002e42:	6803      	ldr	r3, [r0, #0]
90002e44:	695b      	ldr	r3, [r3, #20]
90002e46:	4718      	bx	r3
        }
    }
90002e48:	4770      	bx	lr
90002e4a:	bf00      	nop

90002e4c <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
90002e4c:	2000      	movs	r0, #0
90002e4e:	4770      	bx	lr

90002e50 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
90002e50:	8081      	strh	r1, [r0, #4]
    }
90002e52:	4770      	bx	lr

90002e54 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
90002e54:	80c1      	strh	r1, [r0, #6]
    }
90002e56:	4770      	bx	lr

90002e58 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
90002e58:	8101      	strh	r1, [r0, #8]
    }
90002e5a:	4770      	bx	lr

90002e5c <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
90002e5c:	8141      	strh	r1, [r0, #10]
    }
90002e5e:	4770      	bx	lr

90002e60 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
90002e60:	4770      	bx	lr
90002e62:	bf00      	nop

90002e64 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
90002e64:	4770      	bx	lr
90002e66:	bf00      	nop

90002e68 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
90002e68:	4770      	bx	lr
90002e6a:	bf00      	nop

90002e6c <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
90002e6c:	4770      	bx	lr
90002e6e:	bf00      	nop

90002e70 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
90002e70:	4770      	bx	lr
90002e72:	bf00      	nop

90002e74 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
90002e74:	f8b0 c006 	ldrh.w	ip, [r0, #6]
90002e78:	6803      	ldr	r3, [r0, #0]
90002e7a:	eba2 020c 	sub.w	r2, r2, ip
90002e7e:	f8b0 c004 	ldrh.w	ip, [r0, #4]
90002e82:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90002e84:	eba1 010c 	sub.w	r1, r1, ip
90002e88:	b212      	sxth	r2, r2
90002e8a:	b209      	sxth	r1, r1
90002e8c:	4718      	bx	r3
90002e8e:	bf00      	nop

90002e90 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
90002e90:	6813      	ldr	r3, [r2, #0]
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002e92:	f64f 7cff 	movw	ip, #65535	@ 0xffff
        cachedAbsX = UNCACHED_INDICATOR;
90002e96:	f04f 31ff 	mov.w	r1, #4294967295
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002e9a:	f8a0 c00c 	strh.w	ip, [r0, #12]
        nextDrawChainElement = *nextPreviousElement;
90002e9e:	e9c0 3107 	strd	r3, r1, [r0, #28]
        *nextPreviousElement = this;
90002ea2:	6010      	str	r0, [r2, #0]
    }
90002ea4:	4770      	bx	lr
90002ea6:	bf00      	nop

90002ea8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
90002ea8:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90002eac:	b11a      	cbz	r2, 90002eb6 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
90002eae:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
90002eb2:	b102      	cbz	r2, 90002eb6 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
90002eb4:	6018      	str	r0, [r3, #0]
        }
    }
90002eb6:	4770      	bx	lr

90002eb8 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
90002eb8:	2000      	movs	r0, #0
90002eba:	4770      	bx	lr

90002ebc <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @return True if the painter is ready to paint, false otherwise.
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
90002ebc:	4603      	mov	r3, r0
    {
        widgetWidth = widgetRect.width;
90002ebe:	888a      	ldrh	r2, [r1, #4]
        return true;
    }
90002ec0:	2001      	movs	r0, #1
        widgetWidth = widgetRect.width;
90002ec2:	809a      	strh	r2, [r3, #4]
    }
90002ec4:	4770      	bx	lr
90002ec6:	bf00      	nop

90002ec8 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
90002ec8:	4770      	bx	lr
90002eca:	bf00      	nop

90002ecc <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90002ecc:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
90002ed0:	4770      	bx	lr
90002ed2:	bf00      	nop

90002ed4 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
90002ed4:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
90002ed8:	4770      	bx	lr
90002eda:	bf00      	nop

90002edc <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90002edc:	f04f 0c00 	mov.w	ip, #0
        return rect.width;
90002ee0:	688a      	ldr	r2, [r1, #8]
90002ee2:	f8c0 c000 	str.w	ip, [r0]
90002ee6:	6042      	str	r2, [r0, #4]
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
90002ee8:	4770      	bx	lr
90002eea:	bf00      	nop

90002eec <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
90002eec:	2200      	movs	r2, #0
90002eee:	6002      	str	r2, [r0, #0]
90002ef0:	6042      	str	r2, [r0, #4]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
90002ef2:	4770      	bx	lr

90002ef4 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
    }

    virtual Bitmap::BitmapFormat framebufferFormat() const
    {
        return Bitmap::RGB565;
    }
90002ef4:	2000      	movs	r0, #0
90002ef6:	4770      	bx	lr

90002ef8 <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
90002ef8:	7701      	strb	r1, [r0, #28]
    }
90002efa:	4770      	bx	lr

90002efc <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
90002efc:	ed80 0a08 	vstr	s0, [r0, #32]
    }
90002f00:	4770      	bx	lr
90002f02:	bf00      	nop

90002f04 <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
90002f04:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
90002f08:	4770      	bx	lr
90002f0a:	bf00      	nop

90002f0c <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
90002f0c:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
90002f10:	4770      	bx	lr
90002f12:	bf00      	nop

90002f14 <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
90002f14:	2001      	movs	r0, #1
90002f16:	4770      	bx	lr

90002f18 <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
90002f18:	3098      	adds	r0, #152	@ 0x98
90002f1a:	4770      	bx	lr

90002f1c <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
90002f1c:	308c      	adds	r0, #140	@ 0x8c
90002f1e:	4770      	bx	lr

90002f20 <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
90002f20:	3084      	adds	r0, #132	@ 0x84
90002f22:	4770      	bx	lr

90002f24 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
90002f24:	4770      	bx	lr
90002f26:	bf00      	nop

90002f28 <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90002f28:	4770      	bx	lr
90002f2a:	bf00      	nop

90002f2c <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
90002f2c:	4770      	bx	lr
90002f2e:	bf00      	nop

90002f30 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90002f30:	4b03      	ldr	r3, [pc, #12]	@ (90002f40 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
90002f32:	2290      	movs	r2, #144	@ 0x90
90002f34:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
90002f38:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
90002f3c:	4770      	bx	lr
90002f3e:	bf00      	nop
90002f40:	e000e100 	.word	0xe000e100

90002f44 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
90002f44:	4a09      	ldr	r2, [pc, #36]	@ (90002f6c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
90002f46:	490a      	ldr	r1, [pc, #40]	@ (90002f70 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
90002f48:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
90002f4a:	480a      	ldr	r0, [pc, #40]	@ (90002f74 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
90002f4c:	f3c3 030a 	ubfx	r3, r3, #0, #11
90002f50:	3b01      	subs	r3, #1
90002f52:	b29b      	uxth	r3, r3
90002f54:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
90002f56:	6911      	ldr	r1, [r2, #16]
90002f58:	f3c1 010a 	ubfx	r1, r1, #0, #11
90002f5c:	3901      	subs	r1, #1
90002f5e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
90002f60:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
90002f62:	6b53      	ldr	r3, [r2, #52]	@ 0x34
90002f64:	f043 0301 	orr.w	r3, r3, #1
90002f68:	6353      	str	r3, [r2, #52]	@ 0x34
}
90002f6a:	4770      	bx	lr
90002f6c:	50001000 	.word	0x50001000
90002f70:	24007216 	.word	0x24007216
90002f74:	24007214 	.word	0x24007214

90002f78 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
90002f78:	4b01      	ldr	r3, [pc, #4]	@ (90002f80 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
90002f7a:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
90002f7e:	4770      	bx	lr
90002f80:	50001000 	.word	0x50001000

90002f84 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002f84:	4b02      	ldr	r3, [pc, #8]	@ (90002f90 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002f86:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002f88:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002f8c:	625a      	str	r2, [r3, #36]	@ 0x24
}
90002f8e:	4770      	bx	lr
90002f90:	50001000 	.word	0x50001000

90002f94 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
 * Strategy:
 * Decode directly into the framebuffer in draw.
 * Tick will decide if we are going to a new frame.
 */
template <uint32_t no_streams, touchgfx::Bitmap::BitmapFormat output_format>
class DirectFrameBufferVideoController : public touchgfx::VideoController
90002f94:	4770      	bx	lr
90002f96:	bf00      	nop

90002f98 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
        return handle;
    }

    virtual void unregisterVideoWidget(const Handle handle)
    {
        streams[handle].isActive = false;
90002f98:	eb01 01c1 	add.w	r1, r1, r1, lsl #3
90002f9c:	2300      	movs	r3, #0
90002f9e:	eb00 0081 	add.w	r0, r0, r1, lsl #2
90002fa2:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
    }
90002fa6:	4770      	bx	lr

90002fa8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE29setVideoFrameRateCompensationEb>:
        return stream.isPlaying;
    }

    virtual void setVideoFrameRateCompensation(const bool allow)
    {
        allowSkipFrames = allow;
90002fa8:	f880 102c 	strb.w	r1, [r0, #44]	@ 0x2c
    }
90002fac:	4770      	bx	lr
90002fae:	bf00      	nop

90002fb0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DirectFrameBufferVideoController : public touchgfx::VideoController
90002fb0:	b510      	push	{r4, lr}
90002fb2:	4604      	mov	r4, r0
90002fb4:	2130      	movs	r1, #48	@ 0x30
90002fb6:	f026 fe59 	bl	90029c6c <_ZdlPvj>
90002fba:	4620      	mov	r0, r4
90002fbc:	bd10      	pop	{r4, pc}
90002fbe:	bf00      	nop

90002fc0 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
    class CanvasWidgetProxy : public CanvasWidget
90002fc0:	b510      	push	{r4, lr}
90002fc2:	4604      	mov	r4, r0
90002fc4:	212c      	movs	r1, #44	@ 0x2c
90002fc6:	f026 fe51 	bl	90029c6c <_ZdlPvj>
90002fca:	4620      	mov	r0, r4
90002fcc:	bd10      	pop	{r4, pc}
90002fce:	bf00      	nop

90002fd0 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90002fd0:	b510      	push	{r4, lr}
90002fd2:	4604      	mov	r4, r0
90002fd4:	21bc      	movs	r1, #188	@ 0xbc
90002fd6:	f026 fe49 	bl	90029c6c <_ZdlPvj>
90002fda:	4620      	mov	r0, r4
90002fdc:	bd10      	pop	{r4, pc}
90002fde:	bf00      	nop

90002fe0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
        assert(handle < no_streams);
90002fe0:	b911      	cbnz	r1, 90002fe8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x8>
    }
90002fe2:	f890 0025 	ldrb.w	r0, [r0, #37]	@ 0x25
90002fe6:	4770      	bx	lr
    virtual bool getIsPlaying(const Handle handle)
90002fe8:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002fea:	4a03      	ldr	r2, [pc, #12]	@ (90002ff8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
90002fec:	f44f 7192 	mov.w	r1, #292	@ 0x124
90002ff0:	4b02      	ldr	r3, [pc, #8]	@ (90002ffc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
90002ff2:	4803      	ldr	r0, [pc, #12]	@ (90003000 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
90002ff4:	f027 f9b0 	bl	9002a358 <__assert_func>
90002ff8:	9002bbb0 	.word	0x9002bbb0
90002ffc:	9002bb9c 	.word	0x9002bb9c
90003000:	9002bccc 	.word	0x9002bccc

90003004 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
        assert(handle < no_streams);
90003004:	b921      	cbnz	r1, 90003010 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0xc>
        mjpegDecoders[handle]->getVideoInfo(data);
90003006:	6840      	ldr	r0, [r0, #4]
90003008:	4611      	mov	r1, r2
9000300a:	6803      	ldr	r3, [r0, #0]
9000300c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000300e:	4718      	bx	r3
        assert(handle < no_streams);
90003010:	4b03      	ldr	r3, [pc, #12]	@ (90003020 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x1c>)
90003012:	f44f 718f 	mov.w	r1, #286	@ 0x11e
90003016:	4a03      	ldr	r2, [pc, #12]	@ (90003024 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
90003018:	4803      	ldr	r0, [pc, #12]	@ (90003028 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
9000301a:	b510      	push	{r4, lr}
        assert(handle < no_streams);
9000301c:	f027 f99c 	bl	9002a358 <__assert_func>
90003020:	9002bb9c 	.word	0x9002bb9c
90003024:	9002bd14 	.word	0x9002bd14
90003028:	9002bccc 	.word	0x9002bccc

9000302c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
        assert(handle < no_streams);
9000302c:	b909      	cbnz	r1, 90003032 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x6>
    }
9000302e:	68c0      	ldr	r0, [r0, #12]
90003030:	4770      	bx	lr
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
90003032:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90003034:	4a03      	ldr	r2, [pc, #12]	@ (90003044 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
90003036:	f44f 718b 	mov.w	r1, #278	@ 0x116
9000303a:	4b03      	ldr	r3, [pc, #12]	@ (90003048 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
9000303c:	4803      	ldr	r0, [pc, #12]	@ (9000304c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x20>)
9000303e:	f027 f98b 	bl	9002a358 <__assert_func>
90003042:	bf00      	nop
90003044:	9002be54 	.word	0x9002be54
90003048:	9002bb9c 	.word	0x9002bb9c
9000304c:	9002bccc 	.word	0x9002bccc

90003050 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
        assert(handle < no_streams);
90003050:	b921      	cbnz	r1, 9000305c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0xc>
        stream.frameCount = 0;
90003052:	6081      	str	r1, [r0, #8]
        stream.tickCount = 0;
90003054:	6101      	str	r1, [r0, #16]
        stream.frame_rate_video = video_frames;
90003056:	e9c0 3205 	strd	r3, r2, [r0, #20]
9000305a:	4770      	bx	lr
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
9000305c:	b508      	push	{r3, lr}
        assert(handle < no_streams);
9000305e:	4a03      	ldr	r2, [pc, #12]	@ (9000306c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
90003060:	2141      	movs	r1, #65	@ 0x41
90003062:	4b03      	ldr	r3, [pc, #12]	@ (90003070 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
90003064:	4803      	ldr	r0, [pc, #12]	@ (90003074 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
90003066:	f027 f977 	bl	9002a358 <__assert_func>
9000306a:	bf00      	nop
9000306c:	9002bf9c 	.word	0x9002bf9c
90003070:	9002bb9c 	.word	0x9002bb9c
90003074:	9002bccc 	.word	0x9002bccc

90003078 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
90003078:	b508      	push	{r3, lr}
9000307a:	4603      	mov	r3, r0

    Handle getFreeHandle()
    {
        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
9000307c:	f890 0024 	ldrb.w	r0, [r0, #36]	@ 0x24
90003080:	b940      	cbnz	r0, 90003094 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x1c>
        streams[handle].isActive = true;
90003082:	2201      	movs	r2, #1
90003084:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
     * @param width  Width of the videoBuffer in pixels
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
90003088:	f881 0034 	strb.w	r0, [r1, #52]	@ 0x34
        bufferWidth = width;
9000308c:	f8c1 0036 	str.w	r0, [r1, #54]	@ 0x36
        buffer = videoBuffer;
90003090:	6308      	str	r0, [r1, #48]	@ 0x30
    }
90003092:	bd08      	pop	{r3, pc}
            {
                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
90003094:	4b03      	ldr	r3, [pc, #12]	@ (900030a4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x2c>)
90003096:	f240 116d 	movw	r1, #365	@ 0x16d
9000309a:	4a03      	ldr	r2, [pc, #12]	@ (900030a8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x30>)
9000309c:	4803      	ldr	r0, [pc, #12]	@ (900030ac <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x34>)
9000309e:	f027 f95b 	bl	9002a358 <__assert_func>
900030a2:	bf00      	nop
900030a4:	9002c0e8 	.word	0x9002c0e8
900030a8:	9002c118 	.word	0x9002c118
900030ac:	9002bccc 	.word	0x9002bccc

900030b0 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
900030b0:	f00e ba2c 	b.w	9001150c <_ZN8touchgfx3HAL10beginFrameEv>

900030b4 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
900030b4:	f00e ba36 	b.w	90011524 <_ZN8touchgfx3HAL8endFrameEv>

900030b8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
900030b8:	f00e b9f2 	b.w	900114a0 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

900030bc <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
900030bc:	f00e bb61 	b.w	90011782 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

900030c0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
    // Because DMA2D access main memory directly, the DCache must be invalidated
    // becuase it could hold a wrong image of the framebuffer. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable
    // "CPU Cache" in the "System Core" settings for "Cortex M7" in CubeMX
    // in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
900030c0:	4814      	ldr	r0, [pc, #80]	@ (90003114 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x54>)
900030c2:	6943      	ldr	r3, [r0, #20]
900030c4:	03d9      	lsls	r1, r3, #15
900030c6:	d523      	bpl.n	90003110 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x50>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
900030c8:	2300      	movs	r3, #0
{
900030ca:	b510      	push	{r4, lr}
900030cc:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
900030d0:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
900030d4:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030d8:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
900030dc:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
900030e0:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
900030e4:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030e8:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
900030ec:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030ee:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
900030f2:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030f4:	f8c0 2274 	str.w	r2, [r0, #628]	@ 0x274
      } while (ways-- != 0U);
900030f8:	1c5a      	adds	r2, r3, #1
900030fa:	d1f8      	bne.n	900030ee <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2e>
    } while(sets-- != 0U);
900030fc:	f1ac 0c20 	sub.w	ip, ip, #32
90003100:	f11c 0f20 	cmn.w	ip, #32
90003104:	d1f0      	bne.n	900030e8 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x28>
90003106:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000310a:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
9000310e:	bd10      	pop	{r4, pc}
90003110:	4770      	bx	lr
90003112:	bf00      	nop
90003114:	e000ed00 	.word	0xe000ed00

90003118 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
90003118:	b5f0      	push	{r4, r5, r6, r7, lr}
9000311a:	b083      	sub	sp, #12
        assert(handle < no_streams);
9000311c:	bb59      	cbnz	r1, 90003176 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x5e>
9000311e:	4604      	mov	r4, r0
        if (mjpegDecoders[handle]->hasVideo())
90003120:	6840      	ldr	r0, [r0, #4]
90003122:	461d      	mov	r5, r3
90003124:	4616      	mov	r6, r2
90003126:	6803      	ldr	r3, [r0, #0]
90003128:	691b      	ldr	r3, [r3, #16]
9000312a:	4798      	blx	r3
9000312c:	b908      	cbnz	r0, 90003132 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x1a>
    }
9000312e:	b003      	add	sp, #12
90003130:	bdf0      	pop	{r4, r5, r6, r7, pc}
        return instance;
90003132:	4f14      	ldr	r7, [pc, #80]	@ (90003184 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x6c>)
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
90003134:	2101      	movs	r1, #1
90003136:	6838      	ldr	r0, [r7, #0]
90003138:	f00e fff8 	bl	9001212c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
            touchgfx::Rect absolute = widget.getAbsoluteRect();
9000313c:	4629      	mov	r1, r5
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
9000313e:	4605      	mov	r5, r0
            touchgfx::Rect absolute = widget.getAbsoluteRect();
90003140:	4668      	mov	r0, sp
90003142:	f015 f9b7 	bl	900184b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
            DisplayTransformation::transformDisplayToFrameBuffer(absolute);
90003146:	4668      	mov	r0, sp
90003148:	f013 fdaa 	bl	90016ca0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
9000314c:	4b0e      	ldr	r3, [pc, #56]	@ (90003188 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x70>)
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
9000314e:	6860      	ldr	r0, [r4, #4]
90003150:	4631      	mov	r1, r6
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
90003152:	f9bd 4002 	ldrsh.w	r4, [sp, #2]
90003156:	881b      	ldrh	r3, [r3, #0]
90003158:	f9bd 2000 	ldrsh.w	r2, [sp]
9000315c:	fb03 2204 	mla	r2, r3, r4, r2
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
90003160:	6804      	ldr	r4, [r0, #0]
90003162:	eb05 0242 	add.w	r2, r5, r2, lsl #1
90003166:	69e4      	ldr	r4, [r4, #28]
90003168:	47a0      	blx	r4
9000316a:	6838      	ldr	r0, [r7, #0]
            touchgfx::HAL::getInstance()->unlockFrameBuffer();
9000316c:	6803      	ldr	r3, [r0, #0]
9000316e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90003170:	4798      	blx	r3
    }
90003172:	b003      	add	sp, #12
90003174:	bdf0      	pop	{r4, r5, r6, r7, pc}
        assert(handle < no_streams);
90003176:	4b05      	ldr	r3, [pc, #20]	@ (9000318c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x74>)
90003178:	21ea      	movs	r1, #234	@ 0xea
9000317a:	4a05      	ldr	r2, [pc, #20]	@ (90003190 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x78>)
9000317c:	4805      	ldr	r0, [pc, #20]	@ (90003194 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x7c>)
9000317e:	f027 f8eb 	bl	9002a358 <__assert_func>
90003182:	bf00      	nop
90003184:	24021864 	.word	0x24021864
90003188:	2402185e 	.word	0x2402185e
9000318c:	9002bb9c 	.word	0x9002bb9c
90003190:	9002c230 	.word	0x9002c230
90003194:	9002bccc 	.word	0x9002bccc

90003198 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90003198:	4b08      	ldr	r3, [pc, #32]	@ (900031bc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
9000319a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
9000319e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900031a2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900031a6:	f3bf 8f6f 	isb	sy
900031aa:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
900031ae:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900031b2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900031b6:	f3bf 8f6f 	isb	sy
}
900031ba:	4770      	bx	lr
900031bc:	e000e100 	.word	0xe000e100

900031c0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900031c0:	4b03      	ldr	r3, [pc, #12]	@ (900031d0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
900031c2:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
900031c6:	609a      	str	r2, [r3, #8]
900031c8:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
900031cc:	609a      	str	r2, [r3, #8]
}
900031ce:	4770      	bx	lr
900031d0:	e000e100 	.word	0xe000e100

900031d4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
900031d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        assert(handle < no_streams);
900031d8:	2900      	cmp	r1, #0
900031da:	f040 8096 	bne.w	9000330a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x136>
        if (stream.isPlaying || stream.isShowingOneFrame)
900031de:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
900031e2:	4604      	mov	r4, r0
900031e4:	b933      	cbnz	r3, 900031f4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x20>
900031e6:	f890 3026 	ldrb.w	r3, [r0, #38]	@ 0x26
900031ea:	b91b      	cbnz	r3, 900031f4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x20>
        bool hasMoreFrames = true;
900031ec:	2501      	movs	r5, #1
    }
900031ee:	4628      	mov	r0, r5
900031f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        return vSyncForFrame;
900031f4:	4b48      	ldr	r3, [pc, #288]	@ (90003318 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x144>)
            stream.isShowingOneFrame = false;
900031f6:	2700      	movs	r7, #0
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900031f8:	6921      	ldr	r1, [r4, #16]
900031fa:	681b      	ldr	r3, [r3, #0]
900031fc:	f893 306b 	ldrb.w	r3, [r3, #107]	@ 0x6b
            stream.isShowingOneFrame = false;
90003200:	f884 7026 	strb.w	r7, [r4, #38]	@ 0x26
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
90003204:	440b      	add	r3, r1
            if (stream.doDecodeNextFrame)
90003206:	f894 1028 	ldrb.w	r1, [r4, #40]	@ 0x28
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
9000320a:	6123      	str	r3, [r4, #16]
            if (stream.doDecodeNextFrame)
9000320c:	b979      	cbnz	r1, 9000322e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x5a>
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
9000320e:	68a2      	ldr	r2, [r4, #8]
        bool hasMoreFrames = true;
90003210:	2501      	movs	r5, #1
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
90003212:	6961      	ldr	r1, [r4, #20]
90003214:	fb01 f303 	mul.w	r3, r1, r3
90003218:	69a1      	ldr	r1, [r4, #24]
9000321a:	fb01 f202 	mul.w	r2, r1, r2
9000321e:	4293      	cmp	r3, r2
90003220:	d824      	bhi.n	9000326c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x98>
        return false;
90003222:	2300      	movs	r3, #0
    }
90003224:	4628      	mov	r0, r5
            stream.doDecodeNextFrame = decodeForNextTick(stream);
90003226:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
    }
9000322a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                widget.invalidate();
9000322e:	6813      	ldr	r3, [r2, #0]
90003230:	4610      	mov	r0, r2
                MJPEGDecoder* const decoder = mjpegDecoders[handle];
90003232:	6866      	ldr	r6, [r4, #4]
                widget.invalidate();
90003234:	695b      	ldr	r3, [r3, #20]
90003236:	4798      	blx	r3
                if (stream.seek_to_frame > 0)
90003238:	69e1      	ldr	r1, [r4, #28]
9000323a:	bb21      	cbnz	r1, 90003286 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xb2>
                    if (stream.skip_frames > 0)
9000323c:	6a23      	ldr	r3, [r4, #32]
9000323e:	2b00      	cmp	r3, #0
90003240:	d142      	bne.n	900032c8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xf4>
90003242:	4f36      	ldr	r7, [pc, #216]	@ (9000331c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
                    if (stream.repeat)
90003244:	f894 5027 	ldrb.w	r5, [r4, #39]	@ 0x27
                        hasMoreFrames = decoder->gotoNextFrame();
90003248:	6833      	ldr	r3, [r6, #0]
                    if (stream.repeat)
9000324a:	2d00      	cmp	r5, #0
9000324c:	d02c      	beq.n	900032a8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xd4>
                        hasMoreFrames = decoder->gotoNextFrame();
9000324e:	699b      	ldr	r3, [r3, #24]
90003250:	4630      	mov	r0, r6
90003252:	4798      	blx	r3
90003254:	4605      	mov	r5, r0
                stream.frameNumber = decoder->getCurrentFrameNumber();
90003256:	6833      	ldr	r3, [r6, #0]
90003258:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000325a:	42bb      	cmp	r3, r7
9000325c:	d145      	bne.n	900032ea <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x116>
        return frameNumber;
9000325e:	6970      	ldr	r0, [r6, #20]
                stream.frameCount++;
90003260:	68a2      	ldr	r2, [r4, #8]
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
90003262:	6923      	ldr	r3, [r4, #16]
                stream.frameCount++;
90003264:	3201      	adds	r2, #1
                stream.frameNumber = decoder->getCurrentFrameNumber();
90003266:	60e0      	str	r0, [r4, #12]
                stream.frameCount++;
90003268:	60a2      	str	r2, [r4, #8]
9000326a:	e7d2      	b.n	90003212 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x3e>
            if (allowSkipFrames)
9000326c:	f894 002c 	ldrb.w	r0, [r4, #44]	@ 0x2c
90003270:	b138      	cbz	r0, 90003282 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xae>
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
90003272:	1a9b      	subs	r3, r3, r2
90003274:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
90003278:	4299      	cmp	r1, r3
                    stream.skip_frames--;
9000327a:	bf98      	it	ls
9000327c:	f102 32ff 	addls.w	r2, r2, #4294967295
90003280:	6222      	str	r2, [r4, #32]
            return true;
90003282:	2301      	movs	r3, #1
90003284:	e7ce      	b.n	90003224 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x50>
                    decoder->gotoFrame(stream.seek_to_frame);
90003286:	6833      	ldr	r3, [r6, #0]
90003288:	4630      	mov	r0, r6
9000328a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9000328c:	4798      	blx	r3
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
9000328e:	6833      	ldr	r3, [r6, #0]
90003290:	69e5      	ldr	r5, [r4, #28]
90003292:	4630      	mov	r0, r6
90003294:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003296:	4798      	blx	r3
90003298:	4285      	cmp	r5, r0
                    stream.seek_to_frame = 0;
9000329a:	61e7      	str	r7, [r4, #28]
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
9000329c:	bf28      	it	cs
9000329e:	2500      	movcs	r5, #0
900032a0:	4f1e      	ldr	r7, [pc, #120]	@ (9000331c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
900032a2:	bf38      	it	cc
900032a4:	2501      	movcc	r5, #1
900032a6:	e7d6      	b.n	90003256 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
900032a8:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
900032aa:	42ba      	cmp	r2, r7
900032ac:	d124      	bne.n	900032f8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x124>
900032ae:	f8d6 8014 	ldr.w	r8, [r6, #20]
900032b2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900032b4:	4630      	mov	r0, r6
900032b6:	4798      	blx	r3
900032b8:	4580      	cmp	r8, r0
900032ba:	d219      	bcs.n	900032f0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x11c>
                            hasMoreFrames = decoder->gotoNextFrame();
900032bc:	6833      	ldr	r3, [r6, #0]
900032be:	4630      	mov	r0, r6
900032c0:	699b      	ldr	r3, [r3, #24]
900032c2:	4798      	blx	r3
900032c4:	4605      	mov	r5, r0
900032c6:	e7c6      	b.n	90003256 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                    decoder->gotoFrame(stream.seek_to_frame);
900032c8:	6832      	ldr	r2, [r6, #0]
900032ca:	4f14      	ldr	r7, [pc, #80]	@ (9000331c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
900032cc:	e9d2 5209 	ldrd	r5, r2, [r2, #36]	@ 0x24
900032d0:	42ba      	cmp	r2, r7
900032d2:	d116      	bne.n	90003302 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12e>
900032d4:	6970      	ldr	r0, [r6, #20]
900032d6:	18c1      	adds	r1, r0, r3
900032d8:	4630      	mov	r0, r6
900032da:	47a8      	blx	r5
                        stream.frameCount += stream.skip_frames;
900032dc:	6a22      	ldr	r2, [r4, #32]
900032de:	68a3      	ldr	r3, [r4, #8]
900032e0:	4413      	add	r3, r2
                        stream.skip_frames = 0;
900032e2:	2200      	movs	r2, #0
                        stream.frameCount += stream.skip_frames;
900032e4:	60a3      	str	r3, [r4, #8]
                        stream.skip_frames = 0;
900032e6:	6222      	str	r2, [r4, #32]
900032e8:	e7ac      	b.n	90003244 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x70>
                stream.frameNumber = decoder->getCurrentFrameNumber();
900032ea:	4630      	mov	r0, r6
900032ec:	4798      	blx	r3
900032ee:	e7b7      	b.n	90003260 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x8c>
                            stream.isPlaying = false;
900032f0:	2300      	movs	r3, #0
900032f2:	f884 3025 	strb.w	r3, [r4, #37]	@ 0x25
900032f6:	e7ae      	b.n	90003256 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
900032f8:	4630      	mov	r0, r6
900032fa:	4790      	blx	r2
900032fc:	6833      	ldr	r3, [r6, #0]
900032fe:	4680      	mov	r8, r0
90003300:	e7d7      	b.n	900032b2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xde>
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
90003302:	4630      	mov	r0, r6
90003304:	4790      	blx	r2
90003306:	6a23      	ldr	r3, [r4, #32]
90003308:	e7e5      	b.n	900032d6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x102>
        assert(handle < no_streams);
9000330a:	4b05      	ldr	r3, [pc, #20]	@ (90003320 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14c>)
9000330c:	21aa      	movs	r1, #170	@ 0xaa
9000330e:	4a05      	ldr	r2, [pc, #20]	@ (90003324 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x150>)
90003310:	4805      	ldr	r0, [pc, #20]	@ (90003328 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x154>)
90003312:	f027 f821 	bl	9002a358 <__assert_func>
90003316:	bf00      	nop
90003318:	24021864 	.word	0x24021864
9000331c:	90001041 	.word	0x90001041
90003320:	9002bb9c 	.word	0x9002bb9c
90003324:	9002c378 	.word	0x9002c378
90003328:	9002bccc 	.word	0x9002bccc

9000332c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
9000332c:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
9000332e:	bb11      	cbnz	r1, 90003376 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x4a>
90003330:	4604      	mov	r4, r0
        mjpegDecoders[handle]->setVideoData(movie, length);
90003332:	6840      	ldr	r0, [r0, #4]
90003334:	4611      	mov	r1, r2
90003336:	461a      	mov	r2, r3
90003338:	6803      	ldr	r3, [r0, #0]
9000333a:	689b      	ldr	r3, [r3, #8]
9000333c:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
9000333e:	6860      	ldr	r0, [r4, #4]
90003340:	4a10      	ldr	r2, [pc, #64]	@ (90003384 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x58>)
90003342:	6803      	ldr	r3, [r0, #0]
90003344:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90003346:	4293      	cmp	r3, r2
90003348:	d10c      	bne.n	90003364 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x38>
9000334a:	6940      	ldr	r0, [r0, #20]
        setCommand(handle, PAUSE, 0);
9000334c:	6821      	ldr	r1, [r4, #0]
        stream.doDecodeNextFrame = false;
9000334e:	2300      	movs	r3, #0
90003350:	4a0d      	ldr	r2, [pc, #52]	@ (90003388 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x5c>)
        setCommand(handle, PAUSE, 0);
90003352:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003354:	60e0      	str	r0, [r4, #12]
90003356:	4295      	cmp	r5, r2
        stream.doDecodeNextFrame = false;
90003358:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
9000335c:	d104      	bne.n	90003368 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x3c>
            stream.isPlaying = false;
9000335e:	f8a4 3025 	strh.w	r3, [r4, #37]	@ 0x25
    }
90003362:	bd70      	pop	{r4, r5, r6, pc}
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003364:	4798      	blx	r3
90003366:	e7f1      	b.n	9000334c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x20>
        setCommand(handle, PAUSE, 0);
90003368:	4620      	mov	r0, r4
9000336a:	46ac      	mov	ip, r5
9000336c:	2201      	movs	r2, #1
9000336e:	4619      	mov	r1, r3
    }
90003370:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
90003374:	4760      	bx	ip
        assert(handle < no_streams);
90003376:	4b05      	ldr	r3, [pc, #20]	@ (9000338c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x60>)
90003378:	214f      	movs	r1, #79	@ 0x4f
9000337a:	4a05      	ldr	r2, [pc, #20]	@ (90003390 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x64>)
9000337c:	4805      	ldr	r0, [pc, #20]	@ (90003394 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x68>)
9000337e:	f026 ffeb 	bl	9002a358 <__assert_func>
90003382:	bf00      	nop
90003384:	90001041 	.word	0x90001041
90003388:	90003401 	.word	0x90003401
9000338c:	9002bb9c 	.word	0x9002bb9c
90003390:	9002c4ac 	.word	0x9002c4ac
90003394:	9002bccc 	.word	0x9002bccc

90003398 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
    virtual void setVideoData(const Handle handle, touchgfx::VideoDataReader& reader)
90003398:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
9000339a:	bb09      	cbnz	r1, 900033e0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x48>
9000339c:	4604      	mov	r4, r0
        mjpegDecoders[handle]->setVideoData(reader);
9000339e:	6840      	ldr	r0, [r0, #4]
900033a0:	4611      	mov	r1, r2
900033a2:	6803      	ldr	r3, [r0, #0]
900033a4:	68db      	ldr	r3, [r3, #12]
900033a6:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
900033a8:	6860      	ldr	r0, [r4, #4]
900033aa:	4a10      	ldr	r2, [pc, #64]	@ (900033ec <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x54>)
900033ac:	6803      	ldr	r3, [r0, #0]
900033ae:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900033b0:	4293      	cmp	r3, r2
900033b2:	d10c      	bne.n	900033ce <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x36>
900033b4:	6940      	ldr	r0, [r0, #20]
        setCommand(handle, PAUSE, 0);
900033b6:	6821      	ldr	r1, [r4, #0]
        stream.doDecodeNextFrame = false;
900033b8:	2300      	movs	r3, #0
900033ba:	4a0d      	ldr	r2, [pc, #52]	@ (900033f0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x58>)
        setCommand(handle, PAUSE, 0);
900033bc:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
900033be:	60e0      	str	r0, [r4, #12]
900033c0:	4295      	cmp	r5, r2
        stream.doDecodeNextFrame = false;
900033c2:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
900033c6:	d104      	bne.n	900033d2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x3a>
            stream.isPlaying = false;
900033c8:	f8a4 3025 	strh.w	r3, [r4, #37]	@ 0x25
    }
900033cc:	bd70      	pop	{r4, r5, r6, pc}
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
900033ce:	4798      	blx	r3
900033d0:	e7f1      	b.n	900033b6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x1e>
        setCommand(handle, PAUSE, 0);
900033d2:	4620      	mov	r0, r4
900033d4:	46ac      	mov	ip, r5
900033d6:	2201      	movs	r2, #1
900033d8:	4619      	mov	r1, r3
    }
900033da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
900033de:	4760      	bx	ip
        assert(handle < no_streams);
900033e0:	4b04      	ldr	r3, [pc, #16]	@ (900033f4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x5c>)
900033e2:	215f      	movs	r1, #95	@ 0x5f
900033e4:	4a04      	ldr	r2, [pc, #16]	@ (900033f8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x60>)
900033e6:	4805      	ldr	r0, [pc, #20]	@ (900033fc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x64>)
900033e8:	f026 ffb6 	bl	9002a358 <__assert_func>
900033ec:	90001041 	.word	0x90001041
900033f0:	90003401 	.word	0x90003401
900033f4:	9002bb9c 	.word	0x9002bb9c
900033f8:	9002c618 	.word	0x9002c618
900033fc:	9002bccc 	.word	0x9002bccc

90003400 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
90003400:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
90003402:	2900      	cmp	r1, #0
90003404:	d14f      	bne.n	900034a6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xa6>
90003406:	4604      	mov	r4, r0
        switch (cmd)
90003408:	2a05      	cmp	r2, #5
9000340a:	d80b      	bhi.n	90003424 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
9000340c:	e8df f002 	tbb	[pc, r2]
90003410:	3c373311 	.word	0x3c373311
90003414:	0b03      	.short	0x0b03
            stream.isPlaying = false;
90003416:	2300      	movs	r3, #0
            stream.seek_to_frame = 1;
90003418:	2201      	movs	r2, #1
            stream.isPlaying = false;
9000341a:	f8a0 3025 	strh.w	r3, [r0, #37]	@ 0x25
            stream.seek_to_frame = 1;
9000341e:	61c2      	str	r2, [r0, #28]
            stream.frameCount = 0;
90003420:	6083      	str	r3, [r0, #8]
            stream.tickCount = 0;
90003422:	6103      	str	r3, [r0, #16]
    }
90003424:	bd70      	pop	{r4, r5, r6, pc}
            stream.repeat = (param > 0);
90003426:	3b00      	subs	r3, #0
90003428:	bf18      	it	ne
9000342a:	2301      	movne	r3, #1
9000342c:	f880 3027 	strb.w	r3, [r0, #39]	@ 0x27
    }
90003430:	bd70      	pop	{r4, r5, r6, pc}
            if (mjpegDecoders[handle]->hasVideo())
90003432:	6840      	ldr	r0, [r0, #4]
90003434:	6803      	ldr	r3, [r0, #0]
90003436:	691b      	ldr	r3, [r3, #16]
90003438:	4798      	blx	r3
9000343a:	2800      	cmp	r0, #0
9000343c:	d0f2      	beq.n	90003424 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
                stream.frameCount = 0;
9000343e:	2300      	movs	r3, #0
                stream.isPlaying = true;
90003440:	2101      	movs	r1, #1
                if (!stream.repeat)
90003442:	f894 2027 	ldrb.w	r2, [r4, #39]	@ 0x27
                stream.isPlaying = true;
90003446:	f8a4 1025 	strh.w	r1, [r4, #37]	@ 0x25
                stream.frameCount = 0;
9000344a:	60a3      	str	r3, [r4, #8]
                stream.tickCount = 0;
9000344c:	6123      	str	r3, [r4, #16]
                if (!stream.repeat)
9000344e:	2a00      	cmp	r2, #0
90003450:	d1e8      	bne.n	90003424 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
90003452:	6864      	ldr	r4, [r4, #4]
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
90003454:	4917      	ldr	r1, [pc, #92]	@ (900034b4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xb4>)
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
90003456:	6823      	ldr	r3, [r4, #0]
90003458:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
9000345a:	428a      	cmp	r2, r1
9000345c:	d11e      	bne.n	9000349c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x9c>
9000345e:	6965      	ldr	r5, [r4, #20]
90003460:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003462:	4620      	mov	r0, r4
90003464:	4798      	blx	r3
90003466:	4285      	cmp	r5, r0
90003468:	d1dc      	bne.n	90003424 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
                        decoder->gotoNextFrame();
9000346a:	6823      	ldr	r3, [r4, #0]
9000346c:	4620      	mov	r0, r4
9000346e:	699b      	ldr	r3, [r3, #24]
    }
90003470:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                        decoder->gotoNextFrame();
90003474:	4718      	bx	r3
            stream.isPlaying = false;
90003476:	2300      	movs	r3, #0
90003478:	f8a0 3025 	strh.w	r3, [r0, #37]	@ 0x25
    }
9000347c:	bd70      	pop	{r4, r5, r6, pc}
            stream.frameCount = 0;
9000347e:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
90003480:	61c3      	str	r3, [r0, #28]
            stream.frameCount = 0;
90003482:	6082      	str	r2, [r0, #8]
            stream.tickCount = 0;
90003484:	6102      	str	r2, [r0, #16]
    }
90003486:	bd70      	pop	{r4, r5, r6, pc}
            stream.isShowingOneFrame = true;
90003488:	2101      	movs	r1, #1
            stream.frameCount = 0;
9000348a:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
9000348c:	61c3      	str	r3, [r0, #28]
            stream.isShowingOneFrame = true;
9000348e:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
            stream.doDecodeNextFrame = true;
90003492:	f880 1028 	strb.w	r1, [r0, #40]	@ 0x28
            stream.frameCount = 0;
90003496:	6082      	str	r2, [r0, #8]
            stream.tickCount = 0;
90003498:	6102      	str	r2, [r0, #16]
    }
9000349a:	bd70      	pop	{r4, r5, r6, pc}
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
9000349c:	4620      	mov	r0, r4
9000349e:	4790      	blx	r2
900034a0:	6823      	ldr	r3, [r4, #0]
900034a2:	4605      	mov	r5, r0
900034a4:	e7dc      	b.n	90003460 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x60>
        assert(handle < no_streams);
900034a6:	4b04      	ldr	r3, [pc, #16]	@ (900034b8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xb8>)
900034a8:	216f      	movs	r1, #111	@ 0x6f
900034aa:	4a04      	ldr	r2, [pc, #16]	@ (900034bc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xbc>)
900034ac:	4804      	ldr	r0, [pc, #16]	@ (900034c0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xc0>)
900034ae:	f026 ff53 	bl	9002a358 <__assert_func>
900034b2:	bf00      	nop
900034b4:	90001041 	.word	0x90001041
900034b8:	9002bb9c 	.word	0x9002bb9c
900034bc:	9002c750 	.word	0x9002c750
900034c0:	9002bccc 	.word	0x9002bccc

900034c4 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
900034c4:	b538      	push	{r3, r4, r5, lr}
900034c6:	4604      	mov	r4, r0
    HAL::initialize();
900034c8:	f00e f839 	bl	9001153e <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
900034cc:	6823      	ldr	r3, [r4, #0]
900034ce:	6e9d      	ldr	r5, [r3, #104]	@ 0x68
900034d0:	f013 fd9c 	bl	9001700c <_ZN8touchgfx11Application11getInstanceEv>
900034d4:	4601      	mov	r1, r0
900034d6:	4620      	mov	r0, r4
900034d8:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
900034da:	6823      	ldr	r3, [r4, #0]
900034dc:	4a13      	ldr	r2, [pc, #76]	@ (9000352c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x68>)
900034de:	f8d3 508c 	ldr.w	r5, [r3, #140]	@ 0x8c
900034e2:	4295      	cmp	r5, r2
900034e4:	d116      	bne.n	90003514 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x50>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
900034e6:	4a12      	ldr	r2, [pc, #72]	@ (90003530 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x6c>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900034e8:	2501      	movs	r5, #1
        setAnimationStorage(animationStorage);
900034ea:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
900034ee:	f502 317f 	add.w	r1, r2, #261120	@ 0x3fc00
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900034f2:	4810      	ldr	r0, [pc, #64]	@ (90003534 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x70>)
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
900034f4:	e9c4 210f 	strd	r2, r1, [r4, #60]	@ 0x3c
        setAnimationStorage(animationStorage);
900034f8:	4a0f      	ldr	r2, [pc, #60]	@ (90003538 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x74>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900034fa:	7005      	strb	r5, [r0, #0]
900034fc:	4293      	cmp	r3, r2
900034fe:	d110      	bne.n	90003522 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5e>
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90003500:	2300      	movs	r3, #0
        USE_ANIMATION_STORAGE = animationStorage != 0;
90003502:	4a0e      	ldr	r2, [pc, #56]	@ (9000353c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x78>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90003504:	6463      	str	r3, [r4, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90003506:	7013      	strb	r3, [r2, #0]
    void addDMA(touchgfx::DMA_Interface& dma)
    {
        this->dma = &dma;
90003508:	4b0d      	ldr	r3, [pc, #52]	@ (90003540 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x7c>)
9000350a:	6861      	ldr	r1, [r4, #4]
        mjpegDecoders[index] = &decoder;
9000350c:	4a0d      	ldr	r2, [pc, #52]	@ (90003544 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x80>)
9000350e:	6459      	str	r1, [r3, #68]	@ 0x44
90003510:	6053      	str	r3, [r2, #4]
}
90003512:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
90003514:	4a0c      	ldr	r2, [pc, #48]	@ (90003548 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x84>)
90003516:	2300      	movs	r3, #0
90003518:	4620      	mov	r0, r4
9000351a:	f5a2 317f 	sub.w	r1, r2, #261120	@ 0x3fc00
9000351e:	47a8      	blx	r5
90003520:	e7f2      	b.n	90003508 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
        setAnimationStorage(animationStorage);
90003522:	2100      	movs	r1, #0
90003524:	4620      	mov	r0, r4
90003526:	4798      	blx	r3
90003528:	e7ee      	b.n	90003508 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
9000352a:	bf00      	nop
9000352c:	90000f65 	.word	0x90000f65
90003530:	d003fc00 	.word	0xd003fc00
90003534:	24021862 	.word	0x24021862
90003538:	90000d95 	.word	0x90000d95
9000353c:	24021863 	.word	0x24021863
90003540:	24007308 	.word	0x24007308
90003544:	240072d8 	.word	0x240072d8
90003548:	d007f800 	.word	0xd007f800

9000354c <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
    static CWRVectorRendererRGB565 renderer;
9000354c:	4843      	ldr	r0, [pc, #268]	@ (9000365c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
{
9000354e:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
90003550:	6804      	ldr	r4, [r0, #0]
90003552:	f3bf 8f5b 	dmb	ish
90003556:	f014 0401 	ands.w	r4, r4, #1
9000355a:	d001      	beq.n	90003560 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x14>
}
9000355c:	4840      	ldr	r0, [pc, #256]	@ (90003660 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x114>)
9000355e:	bd70      	pop	{r4, r5, r6, pc}
    static CWRVectorRendererRGB565 renderer;
90003560:	f026 fb86 	bl	90029c70 <__cxa_guard_acquire>
90003564:	2800      	cmp	r0, #0
90003566:	d0f9      	beq.n	9000355c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x10>
class CWRVectorRenderer : public VectorRenderer
90003568:	4d3d      	ldr	r5, [pc, #244]	@ (90003660 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x114>)
9000356a:	4b3e      	ldr	r3, [pc, #248]	@ (90003664 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x118>)
9000356c:	f105 0034 	add.w	r0, r5, #52	@ 0x34
90003570:	612c      	str	r4, [r5, #16]
90003572:	f8c5 4026 	str.w	r4, [r5, #38]	@ 0x26
90003576:	f8c5 402a 	str.w	r4, [r5, #42]	@ 0x2a
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
9000357a:	4e3b      	ldr	r6, [pc, #236]	@ (90003668 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x11c>)
9000357c:	e9c5 3400 	strd	r3, r4, [r5]
90003580:	e9c5 4402 	strd	r4, r4, [r5, #8]
90003584:	f015 fa95 	bl	90018ab2 <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
90003588:	f105 0058 	add.w	r0, r5, #88	@ 0x58
9000358c:	f010 fb84 	bl	90013c98 <_ZN8touchgfx12CanvasWidgetC1Ev>
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90003590:	4b36      	ldr	r3, [pc, #216]	@ (9000366c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x120>)
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
        : AbstractPainter()
90003592:	4a37      	ldr	r2, [pc, #220]	@ (90003670 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x124>)
90003594:	602b      	str	r3, [r5, #0]
90003596:	6833      	ldr	r3, [r6, #0]
    class CanvasWidgetProxy : public CanvasWidget
90003598:	4936      	ldr	r1, [pc, #216]	@ (90003674 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x128>)
9000359a:	f8c5 2084 	str.w	r2, [r5, #132]	@ 0x84
9000359e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
        : widgetWidth(0)
900035a2:	f8a5 4088 	strh.w	r4, [r5, #136]	@ 0x88
900035a6:	65a9      	str	r1, [r5, #88]	@ 0x58
900035a8:	b192      	cbz	r2, 900035d0 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x84>
900035aa:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900035ac:	2800      	cmp	r0, #0
900035ae:	d040      	beq.n	90003632 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xe6>
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
900035b0:	6803      	ldr	r3, [r0, #0]
900035b2:	4c31      	ldr	r4, [pc, #196]	@ (90003678 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x12c>)
900035b4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
900035b6:	42a2      	cmp	r2, r4
900035b8:	d017      	beq.n	900035ea <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
900035ba:	4790      	blx	r2
        return auxiliaryLCD;
900035bc:	6833      	ldr	r3, [r6, #0]
900035be:	fab0 f680 	clz	r6, r0
900035c2:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900035c4:	0976      	lsrs	r6, r6, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
900035c6:	2800      	cmp	r0, #0
900035c8:	d03f      	beq.n	9000364a <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xfe>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900035ca:	6803      	ldr	r3, [r0, #0]
900035cc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900035ce:	e00a      	b.n	900035e6 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9a>
        return instance->lcdRef;
900035d0:	6898      	ldr	r0, [r3, #8]
900035d2:	4c29      	ldr	r4, [pc, #164]	@ (90003678 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x12c>)
        bool compat = HAL::lcd().framebufferFormat() == format;
900035d4:	6802      	ldr	r2, [r0, #0]
900035d6:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
900035d8:	42a2      	cmp	r2, r4
900035da:	d1ee      	bne.n	900035ba <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x6e>
        return auxiliaryLCD;
900035dc:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
900035de:	b120      	cbz	r0, 900035ea <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
        bool compat = HAL::lcd().framebufferFormat() == format;
900035e0:	6803      	ldr	r3, [r0, #0]
900035e2:	2601      	movs	r6, #1
900035e4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900035e6:	42a3      	cmp	r3, r4
900035e8:	d12a      	bne.n	90003640 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xf4>
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
900035ea:	4924      	ldr	r1, [pc, #144]	@ (9000367c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x130>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
900035ec:	2200      	movs	r2, #0
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
900035ee:	2300      	movs	r3, #0
900035f0:	f44f 04c8 	mov.w	r4, #6553600	@ 0x640000
900035f4:	f101 0024 	add.w	r0, r1, #36	@ 0x24
        : AbstractPainter(),
900035f8:	f8c5 209c 	str.w	r2, [r5, #156]	@ 0x9c
900035fc:	f8c5 1084 	str.w	r1, [r5, #132]	@ 0x84
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
90003600:	f8c5 30ac 	str.w	r3, [r5, #172]	@ 0xac
90003604:	f8c5 30b0 	str.w	r3, [r5, #176]	@ 0xb0
90003608:	f8c5 30b4 	str.w	r3, [r5, #180]	@ 0xb4
9000360c:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
90003610:	f8c5 40a0 	str.w	r4, [r5, #160]	@ 0xa0
90003614:	e9c5 0223 	strd	r0, r2, [r5, #140]	@ 0x8c
        : AbstractPainter(),
90003618:	e9c5 2229 	strd	r2, r2, [r5, #164]	@ 0xa4
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
9000361c:	4a18      	ldr	r2, [pc, #96]	@ (90003680 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x134>)
9000361e:	4819      	ldr	r0, [pc, #100]	@ (90003684 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x138>)
90003620:	f8c5 2098 	str.w	r2, [r5, #152]	@ 0x98
90003624:	f026 feb6 	bl	9002a394 <atexit>
90003628:	480c      	ldr	r0, [pc, #48]	@ (9000365c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
9000362a:	f026 fb2d 	bl	90029c88 <__cxa_guard_release>
}
9000362e:	480c      	ldr	r0, [pc, #48]	@ (90003660 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x114>)
90003630:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
90003632:	6898      	ldr	r0, [r3, #8]
90003634:	4c10      	ldr	r4, [pc, #64]	@ (90003678 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x12c>)
        bool compat = HAL::lcd().framebufferFormat() == format;
90003636:	6803      	ldr	r3, [r0, #0]
90003638:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000363a:	42a2      	cmp	r2, r4
9000363c:	d0d5      	beq.n	900035ea <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
9000363e:	e7bc      	b.n	900035ba <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x6e>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90003640:	4798      	blx	r3
90003642:	2800      	cmp	r0, #0
90003644:	bf08      	it	eq
90003646:	f046 0601 	orreq.w	r6, r6, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
9000364a:	2e00      	cmp	r6, #0
9000364c:	d1cd      	bne.n	900035ea <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
9000364e:	4b0e      	ldr	r3, [pc, #56]	@ (90003688 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x13c>)
90003650:	212c      	movs	r1, #44	@ 0x2c
90003652:	4a0e      	ldr	r2, [pc, #56]	@ (9000368c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x140>)
90003654:	480e      	ldr	r0, [pc, #56]	@ (90003690 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x144>)
90003656:	f026 fe7f 	bl	9002a358 <__assert_func>
9000365a:	bf00      	nop
9000365c:	24007218 	.word	0x24007218
90003660:	2400721c 	.word	0x2400721c
90003664:	9002dfec 	.word	0x9002dfec
90003668:	24021864 	.word	0x24021864
9000366c:	9002d328 	.word	0x9002d328
90003670:	9002d290 	.word	0x9002d290
90003674:	9002d2b0 	.word	0x9002d2b0
90003678:	90002ef5 	.word	0x90002ef5
9000367c:	9002dfa0 	.word	0x9002dfa0
90003680:	9002df80 	.word	0x9002df80
90003684:	90002f2d 	.word	0x90002f2d
90003688:	9002c8b4 	.word	0x9002c8b4
9000368c:	9002c914 	.word	0x9002c914
90003690:	9002c950 	.word	0x9002c950

90003694 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
90003694:	b538      	push	{r3, r4, r5, lr}
        return instance;
90003696:	4c18      	ldr	r4, [pc, #96]	@ (900036f8 <HAL_LTDC_LineEventCallback+0x64>)
        if (!HAL::getInstance())
90003698:	6823      	ldr	r3, [r4, #0]
9000369a:	b35b      	cbz	r3, 900036f4 <HAL_LTDC_LineEventCallback+0x60>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
9000369c:	4b17      	ldr	r3, [pc, #92]	@ (900036fc <HAL_LTDC_LineEventCallback+0x68>)
9000369e:	4a18      	ldr	r2, [pc, #96]	@ (90003700 <HAL_LTDC_LineEventCallback+0x6c>)
900036a0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
900036a2:	8811      	ldrh	r1, [r2, #0]
900036a4:	428b      	cmp	r3, r1
900036a6:	d00e      	beq.n	900036c6 <HAL_LTDC_LineEventCallback+0x32>
            GPIO::set(GPIO::VSYNC_FREQ);
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
900036a8:	f006 fcd2 	bl	9000a050 <HAL_LTDC_ProgramLineEvent>
900036ac:	6824      	ldr	r4, [r4, #0]
        allowDMATransfers();
900036ae:	6823      	ldr	r3, [r4, #0]
900036b0:	4620      	mov	r0, r4
900036b2:	6a1b      	ldr	r3, [r3, #32]
900036b4:	4798      	blx	r3
        isFrontPorchEntered = true;
900036b6:	2301      	movs	r3, #1

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
900036b8:	2000      	movs	r0, #0
900036ba:	f884 307c 	strb.w	r3, [r4, #124]	@ 0x7c
        }
    }
900036be:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
900036c2:	f7fd bb19 	b.w	90000cf8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
900036c6:	4b0f      	ldr	r3, [pc, #60]	@ (90003704 <HAL_LTDC_LineEventCallback+0x70>)
        isFrontPorchEntered = false;
900036c8:	2500      	movs	r5, #0
900036ca:	8819      	ldrh	r1, [r3, #0]
900036cc:	f006 fcc0 	bl	9000a050 <HAL_LTDC_ProgramLineEvent>
        return instance;
900036d0:	6823      	ldr	r3, [r4, #0]
        vSyncCnt++;
900036d2:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
900036d6:	f883 507c 	strb.w	r5, [r3, #124]	@ 0x7c
        vSyncCnt++;
900036da:	3201      	adds	r2, #1
900036dc:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
            OSWrappers::signalVSync();
900036e0:	f7fe fe5e 	bl	900023a0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            HAL::getInstance()->swapFrameBuffers();
900036e4:	6820      	ldr	r0, [r4, #0]
900036e6:	f00e fcc1 	bl	9001206c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
900036ea:	4628      	mov	r0, r5
    }
900036ec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
900036f0:	f7fd bad8 	b.w	90000ca4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
    }
900036f4:	bd38      	pop	{r3, r4, r5, pc}
900036f6:	bf00      	nop
900036f8:	24021864 	.word	0x24021864
900036fc:	50001000 	.word	0x50001000
90003700:	24007216 	.word	0x24007216
90003704:	24007214 	.word	0x24007214

90003708 <_GLOBAL__sub_I_mjpegdecoder1>:
}
90003708:	b510      	push	{r4, lr}
HardwareMJPEGDecoder mjpegdecoder1;
9000370a:	480b      	ldr	r0, [pc, #44]	@ (90003738 <_GLOBAL__sub_I_mjpegdecoder1+0x30>)
9000370c:	f7fd fe0e 	bl	9000132c <_ZN20HardwareMJPEGDecoderC1Ev>
        : VideoController(), allowSkipFrames(true)
90003710:	4c0a      	ldr	r4, [pc, #40]	@ (9000373c <_GLOBAL__sub_I_mjpegdecoder1+0x34>)
90003712:	4b0b      	ldr	r3, [pc, #44]	@ (90003740 <_GLOBAL__sub_I_mjpegdecoder1+0x38>)
            : frameCount(0), frameNumber(0), tickCount(0),
90003714:	2200      	movs	r2, #0
              isActive(false), isPlaying(false), isShowingOneFrame(false), repeat(true),
90003716:	f04f 7080 	mov.w	r0, #16777216	@ 0x1000000
        : VideoController(), allowSkipFrames(true)
9000371a:	2101      	movs	r1, #1
9000371c:	601c      	str	r4, [r3, #0]
              isActive(false), isPlaying(false), isShowingOneFrame(false), repeat(true),
9000371e:	6258      	str	r0, [r3, #36]	@ 0x24
              doDecodeNextFrame(false)
90003720:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
        : VideoController(), allowSkipFrames(true)
90003724:	f883 102c 	strb.w	r1, [r3, #44]	@ 0x2c
        memset(mjpegDecoders, 0, sizeof(mjpegDecoders));
90003728:	605a      	str	r2, [r3, #4]
            : frameCount(0), frameNumber(0), tickCount(0),
9000372a:	e9c3 2202 	strd	r2, r2, [r3, #8]
              frame_rate_video(0), frame_rate_ticks(0),
9000372e:	e9c3 2204 	strd	r2, r2, [r3, #16]
              seek_to_frame(0),
90003732:	e9c3 2206 	strd	r2, r2, [r3, #24]
}
90003736:	bd10      	pop	{r4, pc}
90003738:	24007308 	.word	0x24007308
9000373c:	9002d374 	.word	0x9002d374
90003740:	240072d8 	.word	0x240072d8

90003744 <send_uart>:
		}
	}
}


void send_uart(){
90003744:	b500      	push	{lr}
90003746:	4c10      	ldr	r4, [pc, #64]	@ (90003788 <send_uart+0x44>)
90003748:	b083      	sub	sp, #12
		tx_task_action_t action;
	    while(1){
	    	if(osMessageQueueGet(send_task_queue, &action, NULL, osWaitForever) == osOK){
				if (action == TX_SEND_START_CMD) {
					HAL_UART_Transmit_IT(&huart1, (const uint8_t *)"Send trouble code.",strlen("Send trouble code."));
9000374a:	4e10      	ldr	r6, [pc, #64]	@ (9000378c <send_uart+0x48>)
9000374c:	4d10      	ldr	r5, [pc, #64]	@ (90003790 <send_uart+0x4c>)
	    	if(osMessageQueueGet(send_task_queue, &action, NULL, osWaitForever) == osOK){
9000374e:	f04f 33ff 	mov.w	r3, #4294967295
90003752:	2200      	movs	r2, #0
90003754:	f10d 0107 	add.w	r1, sp, #7
90003758:	6820      	ldr	r0, [r4, #0]
9000375a:	f00a fec9 	bl	9000e4f0 <osMessageQueueGet>
9000375e:	2800      	cmp	r0, #0
90003760:	d1f5      	bne.n	9000374e <send_uart+0xa>
				if (action == TX_SEND_START_CMD) {
90003762:	f89d 3007 	ldrb.w	r3, [sp, #7]
90003766:	2b01      	cmp	r3, #1
90003768:	d003      	beq.n	90003772 <send_uart+0x2e>
					osDelay(pdMS_TO_TICKS(5000));
				}else if (action == TX_TASK_EXIT){
9000376a:	2b02      	cmp	r3, #2
9000376c:	d1ef      	bne.n	9000374e <send_uart+0xa>
				}else{
					//not set up for now
				}
	    	}
		}
	    osThreadExit();
9000376e:	f00a fd6d 	bl	9000e24c <osThreadExit>
					HAL_UART_Transmit_IT(&huart1, (const uint8_t *)"Send trouble code.",strlen("Send trouble code."));
90003772:	2212      	movs	r2, #18
90003774:	4631      	mov	r1, r6
90003776:	4628      	mov	r0, r5
90003778:	f009 f96a 	bl	9000ca50 <HAL_UART_Transmit_IT>
					osDelay(pdMS_TO_TICKS(5000));
9000377c:	f241 3088 	movw	r0, #5000	@ 0x1388
90003780:	f00a fd6a 	bl	9000e258 <osDelay>
90003784:	e7e3      	b.n	9000374e <send_uart+0xa>
90003786:	bf00      	nop
90003788:	2400735c 	.word	0x2400735c
9000378c:	9002c9b4 	.word	0x9002c9b4
90003790:	240073c0 	.word	0x240073c0

90003794 <receive_uart>:
}

void receive_uart(){
90003794:	b580      	push	{r7, lr}
90003796:	4d17      	ldr	r5, [pc, #92]	@ (900037f4 <receive_uart+0x60>)
90003798:	b082      	sub	sp, #8
				TC_Received(trouble_code);
				break;
			}else if (action == RX_TASK_EXIT){
				break;
			}else{
				HAL_UART_Receive_IT(&huart1,(uint8_t *)data,tc_size); //only runs if trouble_code was NULL. Then it will retry getting the trouble code
9000379a:	4f17      	ldr	r7, [pc, #92]	@ (900037f8 <receive_uart+0x64>)
9000379c:	4e17      	ldr	r6, [pc, #92]	@ (900037fc <receive_uart+0x68>)
		if(osMessageQueueGet(receive_task_queue, &action, NULL,osWaitForever) == osOK){
9000379e:	f04f 33ff 	mov.w	r3, #4294967295
900037a2:	2200      	movs	r2, #0
900037a4:	f10d 0107 	add.w	r1, sp, #7
900037a8:	6828      	ldr	r0, [r5, #0]
900037aa:	f00a fea1 	bl	9000e4f0 <osMessageQueueGet>
900037ae:	4604      	mov	r4, r0
900037b0:	2800      	cmp	r0, #0
900037b2:	d1f4      	bne.n	9000379e <receive_uart+0xa>
			if (action == RX_RECEIVE_DATA){
900037b4:	f89d 3007 	ldrb.w	r3, [sp, #7]
900037b8:	2b01      	cmp	r3, #1
900037ba:	d007      	beq.n	900037cc <receive_uart+0x38>
			}else if (action == RX_TASK_EXIT){
900037bc:	2b02      	cmp	r3, #2
900037be:	d013      	beq.n	900037e8 <receive_uart+0x54>
				HAL_UART_Receive_IT(&huart1,(uint8_t *)data,tc_size); //only runs if trouble_code was NULL. Then it will retry getting the trouble code
900037c0:	2205      	movs	r2, #5
900037c2:	4639      	mov	r1, r7
900037c4:	4630      	mov	r0, r6
900037c6:	f009 f99f 	bl	9000cb08 <HAL_UART_Receive_IT>
900037ca:	e7e8      	b.n	9000379e <receive_uart+0xa>
				osSemaphoreRelease(blink_sem);
900037cc:	4b0c      	ldr	r3, [pc, #48]	@ (90003800 <receive_uart+0x6c>)
900037ce:	6818      	ldr	r0, [r3, #0]
900037d0:	f00a fdd8 	bl	9000e384 <osSemaphoreRelease>
				memcpy(trouble_code,data,sizeof(data));
900037d4:	4a08      	ldr	r2, [pc, #32]	@ (900037f8 <receive_uart+0x64>)
900037d6:	4b0b      	ldr	r3, [pc, #44]	@ (90003804 <receive_uart+0x70>)
900037d8:	e892 0003 	ldmia.w	r2, {r0, r1}
				trouble_code[tc_size] = '\0';
900037dc:	715c      	strb	r4, [r3, #5]
				memcpy(trouble_code,data,sizeof(data));
900037de:	6018      	str	r0, [r3, #0]
				TC_Received(trouble_code);
900037e0:	4618      	mov	r0, r3
				memcpy(trouble_code,data,sizeof(data));
900037e2:	7119      	strb	r1, [r3, #4]
				TC_Received(trouble_code);
900037e4:	f7fd f9a0 	bl	90000b28 <TC_Received>
			}
		}
	}
	//terminating thread
	osSemaphoreRelease(receive_code_sem);
900037e8:	4b07      	ldr	r3, [pc, #28]	@ (90003808 <receive_uart+0x74>)
900037ea:	6818      	ldr	r0, [r3, #0]
900037ec:	f00a fdca 	bl	9000e384 <osSemaphoreRelease>
	osThreadExit();
900037f0:	f00a fd2c 	bl	9000e24c <osThreadExit>
900037f4:	24007358 	.word	0x24007358
900037f8:	2400736c 	.word	0x2400736c
900037fc:	240073c0 	.word	0x240073c0
90003800:	2400737c 	.word	0x2400737c
90003804:	24007374 	.word	0x24007374
90003808:	24007354 	.word	0x24007354

9000380c <HAL_UART_RxCpltCallback>:
	if(huart->Instance == USART1){
9000380c:	4b11      	ldr	r3, [pc, #68]	@ (90003854 <HAL_UART_RxCpltCallback+0x48>)
9000380e:	6802      	ldr	r2, [r0, #0]
90003810:	429a      	cmp	r2, r3
90003812:	d000      	beq.n	90003816 <HAL_UART_RxCpltCallback+0xa>
90003814:	4770      	bx	lr
		if (!isCleanUp){
90003816:	4b10      	ldr	r3, [pc, #64]	@ (90003858 <HAL_UART_RxCpltCallback+0x4c>)
			osMessageQueuePut(receive_task_queue,&rx_action, 0,0);
90003818:	4a10      	ldr	r2, [pc, #64]	@ (9000385c <HAL_UART_RxCpltCallback+0x50>)
		if (!isCleanUp){
9000381a:	781b      	ldrb	r3, [r3, #0]
			osMessageQueuePut(receive_task_queue,&rx_action, 0,0);
9000381c:	6810      	ldr	r0, [r2, #0]
{
9000381e:	b500      	push	{lr}
90003820:	b083      	sub	sp, #12
		if (!isCleanUp){
90003822:	b163      	cbz	r3, 9000383e <HAL_UART_RxCpltCallback+0x32>
			osMessageQueuePut(receive_task_queue,&rx_action, 0,0);
90003824:	2300      	movs	r3, #0
			rx_task_action_t rx_action = RX_TASK_EXIT;
90003826:	f04f 0c02 	mov.w	ip, #2
			osMessageQueuePut(receive_task_queue,&rx_action, 0,0);
9000382a:	f10d 0107 	add.w	r1, sp, #7
9000382e:	461a      	mov	r2, r3
			rx_task_action_t rx_action = RX_TASK_EXIT;
90003830:	f88d c007 	strb.w	ip, [sp, #7]
			osMessageQueuePut(receive_task_queue,&rx_action, 0,0);
90003834:	f00a fe20 	bl	9000e478 <osMessageQueuePut>
}
90003838:	b003      	add	sp, #12
9000383a:	f85d fb04 	ldr.w	pc, [sp], #4
			rx_task_action_t rx_action = RX_RECEIVE_DATA;
9000383e:	2101      	movs	r1, #1
			osMessageQueuePut(receive_task_queue,&rx_action, 0,0);
90003840:	461a      	mov	r2, r3
			rx_task_action_t rx_action = RX_RECEIVE_DATA;
90003842:	f88d 1007 	strb.w	r1, [sp, #7]
			osMessageQueuePut(receive_task_queue,&rx_action, 0,0);
90003846:	f10d 0107 	add.w	r1, sp, #7
9000384a:	f00a fe15 	bl	9000e478 <osMessageQueuePut>
}
9000384e:	b003      	add	sp, #12
90003850:	f85d fb04 	ldr.w	pc, [sp], #4
90003854:	40011000 	.word	0x40011000
90003858:	24007350 	.word	0x24007350
9000385c:	24007358 	.word	0x24007358

90003860 <HAL_UART_TxCpltCallback>:
	if (huart->Instance == USART1){
90003860:	4b11      	ldr	r3, [pc, #68]	@ (900038a8 <HAL_UART_TxCpltCallback+0x48>)
90003862:	6802      	ldr	r2, [r0, #0]
90003864:	429a      	cmp	r2, r3
90003866:	d000      	beq.n	9000386a <HAL_UART_TxCpltCallback+0xa>
90003868:	4770      	bx	lr
		if (!isCleanUp){
9000386a:	4b10      	ldr	r3, [pc, #64]	@ (900038ac <HAL_UART_TxCpltCallback+0x4c>)
			osMessageQueuePut(send_task_queue,&tx_action, 0,0);
9000386c:	4a10      	ldr	r2, [pc, #64]	@ (900038b0 <HAL_UART_TxCpltCallback+0x50>)
		if (!isCleanUp){
9000386e:	781b      	ldrb	r3, [r3, #0]
			osMessageQueuePut(send_task_queue,&tx_action, 0,0);
90003870:	6810      	ldr	r0, [r2, #0]
void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart){
90003872:	b500      	push	{lr}
90003874:	b083      	sub	sp, #12
		if (!isCleanUp){
90003876:	b163      	cbz	r3, 90003892 <HAL_UART_TxCpltCallback+0x32>
			osMessageQueuePut(send_task_queue,&tx_action, 0,0);
90003878:	2300      	movs	r3, #0
			tx_task_action_t tx_action = TX_TASK_EXIT;
9000387a:	f04f 0c02 	mov.w	ip, #2
			osMessageQueuePut(send_task_queue,&tx_action, 0,0);
9000387e:	f10d 0107 	add.w	r1, sp, #7
90003882:	461a      	mov	r2, r3
			tx_task_action_t tx_action = TX_TASK_EXIT;
90003884:	f88d c007 	strb.w	ip, [sp, #7]
			osMessageQueuePut(send_task_queue,&tx_action, 0,0);
90003888:	f00a fdf6 	bl	9000e478 <osMessageQueuePut>
}
9000388c:	b003      	add	sp, #12
9000388e:	f85d fb04 	ldr.w	pc, [sp], #4
			tx_task_action_t tx_action = TX_SEND_START_CMD;
90003892:	2101      	movs	r1, #1
			osMessageQueuePut(send_task_queue,&tx_action, 0,0);
90003894:	461a      	mov	r2, r3
			tx_task_action_t tx_action = TX_SEND_START_CMD;
90003896:	f88d 1007 	strb.w	r1, [sp, #7]
			osMessageQueuePut(send_task_queue,&tx_action, 0,0);
9000389a:	f10d 0107 	add.w	r1, sp, #7
9000389e:	f00a fdeb 	bl	9000e478 <osMessageQueuePut>
}
900038a2:	b003      	add	sp, #12
900038a4:	f85d fb04 	ldr.w	pc, [sp], #4
900038a8:	40011000 	.word	0x40011000
900038ac:	24007350 	.word	0x24007350
900038b0:	2400735c 	.word	0x2400735c

900038b4 <init_error_check>:

}

void init_error_check(void *ptr){
	if (ptr == NULL){
900038b4:	b100      	cbz	r0, 900038b8 <init_error_check+0x4>
		Error_Handler();
	}
}
900038b6:	4770      	bx	lr
		Error_Handler();
900038b8:	f000 bbea 	b.w	90004090 <Error_Handler>

900038bc <USART_Init_Start>:

  //setting up FreeRTOS*********************************************************************************
  /**
   * Setup and error checking
   */
  send_task_queue = osMessageQueueNew(1, sizeof(tx_task_action_t),NULL);
900038bc:	2101      	movs	r1, #1
900038be:	4e3e      	ldr	r6, [pc, #248]	@ (900039b8 <USART_Init_Start+0xfc>)
900038c0:	2200      	movs	r2, #0
900038c2:	4608      	mov	r0, r1
{
900038c4:	b580      	push	{r7, lr}
  send_task_queue = osMessageQueueNew(1, sizeof(tx_task_action_t),NULL);
900038c6:	f00a fd9b 	bl	9000e400 <osMessageQueueNew>
900038ca:	6030      	str	r0, [r6, #0]
	if (ptr == NULL){
900038cc:	2800      	cmp	r0, #0
900038ce:	d064      	beq.n	9000399a <USART_Init_Start+0xde>
  init_error_check(send_task_queue);
  receive_task_queue = osMessageQueueNew(1, sizeof(rx_task_action_t),NULL);
900038d0:	2101      	movs	r1, #1
900038d2:	4d3a      	ldr	r5, [pc, #232]	@ (900039bc <USART_Init_Start+0x100>)
900038d4:	2200      	movs	r2, #0
900038d6:	4608      	mov	r0, r1
900038d8:	f00a fd92 	bl	9000e400 <osMessageQueueNew>
900038dc:	6028      	str	r0, [r5, #0]
	if (ptr == NULL){
900038de:	2800      	cmp	r0, #0
900038e0:	d05e      	beq.n	900039a0 <USART_Init_Start+0xe4>
  init_error_check(receive_task_queue);
  receive_code_sem = osSemaphoreNew(1,0,NULL);
900038e2:	2200      	movs	r2, #0
900038e4:	4c36      	ldr	r4, [pc, #216]	@ (900039c0 <USART_Init_Start+0x104>)
900038e6:	2001      	movs	r0, #1
900038e8:	4611      	mov	r1, r2
900038ea:	f00a fcc3 	bl	9000e274 <osSemaphoreNew>
900038ee:	6020      	str	r0, [r4, #0]
	if (ptr == NULL){
900038f0:	2800      	cmp	r0, #0
900038f2:	d058      	beq.n	900039a6 <USART_Init_Start+0xea>
  init_error_check(receive_code_sem);
  send_handle = osThreadNew(send_uart, NULL, &sendTask_attributes);
900038f4:	4a33      	ldr	r2, [pc, #204]	@ (900039c4 <USART_Init_Start+0x108>)
900038f6:	2100      	movs	r1, #0
900038f8:	4833      	ldr	r0, [pc, #204]	@ (900039c8 <USART_Init_Start+0x10c>)
900038fa:	f00a fc63 	bl	9000e1c4 <osThreadNew>
900038fe:	4b33      	ldr	r3, [pc, #204]	@ (900039cc <USART_Init_Start+0x110>)
90003900:	6018      	str	r0, [r3, #0]
	if (ptr == NULL){
90003902:	2800      	cmp	r0, #0
90003904:	d052      	beq.n	900039ac <USART_Init_Start+0xf0>
  init_error_check(send_handle);
  receive_handle = osThreadNew(receive_uart, NULL, &receiveTask_attributes);
90003906:	4a32      	ldr	r2, [pc, #200]	@ (900039d0 <USART_Init_Start+0x114>)
90003908:	2100      	movs	r1, #0
9000390a:	4832      	ldr	r0, [pc, #200]	@ (900039d4 <USART_Init_Start+0x118>)
9000390c:	f00a fc5a 	bl	9000e1c4 <osThreadNew>
90003910:	4b31      	ldr	r3, [pc, #196]	@ (900039d8 <USART_Init_Start+0x11c>)
90003912:	6018      	str	r0, [r3, #0]
	if (ptr == NULL){
90003914:	2800      	cmp	r0, #0
90003916:	d04c      	beq.n	900039b2 <USART_Init_Start+0xf6>
  init_error_check(receive_handle);
  blink_handle = osThreadNew(blk_toggle_led,NULL,&blinkTask_attributes);
90003918:	4a30      	ldr	r2, [pc, #192]	@ (900039dc <USART_Init_Start+0x120>)
9000391a:	2100      	movs	r1, #0
9000391c:	4830      	ldr	r0, [pc, #192]	@ (900039e0 <USART_Init_Start+0x124>)
9000391e:	f00a fc51 	bl	9000e1c4 <osThreadNew>
90003922:	4b30      	ldr	r3, [pc, #192]	@ (900039e4 <USART_Init_Start+0x128>)
90003924:	6018      	str	r0, [r3, #0]
	if (ptr == NULL){
90003926:	2800      	cmp	r0, #0
90003928:	d034      	beq.n	90003994 <USART_Init_Start+0xd8>
  init_error_check(blink_handle);

  //setting interrupts**********************************************************************************
  HAL_UART_Transmit_IT(&huart1, (uint8_t *)"Send trouble code.",strlen("Send trouble code."));
9000392a:	2212      	movs	r2, #18
9000392c:	492e      	ldr	r1, [pc, #184]	@ (900039e8 <USART_Init_Start+0x12c>)
9000392e:	482f      	ldr	r0, [pc, #188]	@ (900039ec <USART_Init_Start+0x130>)

  //waiting for trouble code to be received*************************************************************
  osSemaphoreAcquire(receive_code_sem, HAL_MAX_DELAY);

  //clean up after code received************************************************************************
  isCleanUp= true;
90003930:	2701      	movs	r7, #1
  HAL_UART_Transmit_IT(&huart1, (uint8_t *)"Send trouble code.",strlen("Send trouble code."));
90003932:	f009 f88d 	bl	9000ca50 <HAL_UART_Transmit_IT>
  HAL_UART_Receive_IT(&huart1,(uint8_t *)data, tc_size);
90003936:	2205      	movs	r2, #5
90003938:	492d      	ldr	r1, [pc, #180]	@ (900039f0 <USART_Init_Start+0x134>)
9000393a:	482c      	ldr	r0, [pc, #176]	@ (900039ec <USART_Init_Start+0x130>)
9000393c:	f009 f8e4 	bl	9000cb08 <HAL_UART_Receive_IT>
  osSemaphoreAcquire(receive_code_sem, HAL_MAX_DELAY);
90003940:	f04f 31ff 	mov.w	r1, #4294967295
90003944:	6820      	ldr	r0, [r4, #0]
90003946:	f00a fceb 	bl	9000e320 <osSemaphoreAcquire>
  isCleanUp= true;
9000394a:	4b2a      	ldr	r3, [pc, #168]	@ (900039f4 <USART_Init_Start+0x138>)
9000394c:	701f      	strb	r7, [r3, #0]
  osSemaphoreRelease(blink_sem);
9000394e:	4b2a      	ldr	r3, [pc, #168]	@ (900039f8 <USART_Init_Start+0x13c>)
90003950:	6818      	ldr	r0, [r3, #0]
90003952:	f00a fd17 	bl	9000e384 <osSemaphoreRelease>
  osDelay(pdMS_TO_TICKS(1000)); //waiting for tasks to exit
90003956:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
9000395a:	f00a fc7d 	bl	9000e258 <osDelay>
  osMessageQueueDelete(send_task_queue);
9000395e:	6830      	ldr	r0, [r6, #0]
90003960:	f00a fe00 	bl	9000e564 <osMessageQueueDelete>
  osMessageQueueDelete(receive_task_queue);
90003964:	6828      	ldr	r0, [r5, #0]
90003966:	f00a fdfd 	bl	9000e564 <osMessageQueueDelete>
  osSemaphoreDelete(receive_code_sem);
9000396a:	6820      	ldr	r0, [r4, #0]
9000396c:	f00a fd34 	bl	9000e3d8 <osSemaphoreDelete>
  HAL_UART_Abort_IT(&huart1);
90003970:	481e      	ldr	r0, [pc, #120]	@ (900039ec <USART_Init_Start+0x130>)
90003972:	f009 f99d 	bl	9000ccb0 <HAL_UART_Abort_IT>
  //turning off led if left on from blink_handle
  if (HAL_GPIO_ReadPin(GPIOI,GPIO_PIN_13) == GPIO_PIN_RESET){
90003976:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
9000397a:	4820      	ldr	r0, [pc, #128]	@ (900039fc <USART_Init_Start+0x140>)
9000397c:	f004 f86a 	bl	90007a54 <HAL_GPIO_ReadPin>
90003980:	b108      	cbz	r0, 90003986 <USART_Init_Start+0xca>
  	  HAL_GPIO_WritePin(GPIOI, GPIO_PIN_13, GPIO_PIN_SET);
  }
  osThreadExit();
90003982:	f00a fc63 	bl	9000e24c <osThreadExit>
  	  HAL_GPIO_WritePin(GPIOI, GPIO_PIN_13, GPIO_PIN_SET);
90003986:	463a      	mov	r2, r7
90003988:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
9000398c:	481b      	ldr	r0, [pc, #108]	@ (900039fc <USART_Init_Start+0x140>)
9000398e:	f004 f867 	bl	90007a60 <HAL_GPIO_WritePin>
90003992:	e7f6      	b.n	90003982 <USART_Init_Start+0xc6>
		Error_Handler();
90003994:	f000 fb7c 	bl	90004090 <Error_Handler>
90003998:	e7c7      	b.n	9000392a <USART_Init_Start+0x6e>
9000399a:	f000 fb79 	bl	90004090 <Error_Handler>
9000399e:	e797      	b.n	900038d0 <USART_Init_Start+0x14>
900039a0:	f000 fb76 	bl	90004090 <Error_Handler>
900039a4:	e79d      	b.n	900038e2 <USART_Init_Start+0x26>
900039a6:	f000 fb73 	bl	90004090 <Error_Handler>
900039aa:	e7a3      	b.n	900038f4 <USART_Init_Start+0x38>
900039ac:	f000 fb70 	bl	90004090 <Error_Handler>
900039b0:	e7a9      	b.n	90003906 <USART_Init_Start+0x4a>
900039b2:	f000 fb6d 	bl	90004090 <Error_Handler>
900039b6:	e7af      	b.n	90003918 <USART_Init_Start+0x5c>
900039b8:	2400735c 	.word	0x2400735c
900039bc:	24007358 	.word	0x24007358
900039c0:	24007354 	.word	0x24007354
900039c4:	9002d3f4 	.word	0x9002d3f4
900039c8:	90003745 	.word	0x90003745
900039cc:	24007368 	.word	0x24007368
900039d0:	9002d3d0 	.word	0x9002d3d0
900039d4:	90003795 	.word	0x90003795
900039d8:	24007364 	.word	0x24007364
900039dc:	9002d3ac 	.word	0x9002d3ac
900039e0:	90003a01 	.word	0x90003a01
900039e4:	24007360 	.word	0x24007360
900039e8:	9002c9b4 	.word	0x9002c9b4
900039ec:	240073c0 	.word	0x240073c0
900039f0:	2400736c 	.word	0x2400736c
900039f4:	24007350 	.word	0x24007350
900039f8:	2400737c 	.word	0x2400737c
900039fc:	58022000 	.word	0x58022000

90003a00 <blk_toggle_led>:
#include "stdbool.h"

osSemaphoreId_t blink_sem;

void blk_toggle_led(){
	blink_sem = osSemaphoreNew(100,0,NULL);
90003a00:	2200      	movs	r2, #0
90003a02:	2064      	movs	r0, #100	@ 0x64
90003a04:	4d12      	ldr	r5, [pc, #72]	@ (90003a50 <blk_toggle_led+0x50>)
90003a06:	4611      	mov	r1, r2
	init_error_check(blink_sem);
	while(1){
		if (osSemaphoreAcquire(blink_sem,osWaitForever) == osOK && !isCleanUp){
90003a08:	4e12      	ldr	r6, [pc, #72]	@ (90003a54 <blk_toggle_led+0x54>)
			HAL_GPIO_TogglePin(GPIOI,GPIO_PIN_13);
90003a0a:	4c13      	ldr	r4, [pc, #76]	@ (90003a58 <blk_toggle_led+0x58>)
void blk_toggle_led(){
90003a0c:	b508      	push	{r3, lr}
	blink_sem = osSemaphoreNew(100,0,NULL);
90003a0e:	f00a fc31 	bl	9000e274 <osSemaphoreNew>
90003a12:	6028      	str	r0, [r5, #0]
	init_error_check(blink_sem);
90003a14:	f7ff ff4e 	bl	900038b4 <init_error_check>
90003a18:	e00e      	b.n	90003a38 <blk_toggle_led+0x38>
		if (osSemaphoreAcquire(blink_sem,osWaitForever) == osOK && !isCleanUp){
90003a1a:	7833      	ldrb	r3, [r6, #0]
90003a1c:	b99b      	cbnz	r3, 90003a46 <blk_toggle_led+0x46>
			HAL_GPIO_TogglePin(GPIOI,GPIO_PIN_13);
90003a1e:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
90003a22:	4620      	mov	r0, r4
90003a24:	f004 f820 	bl	90007a68 <HAL_GPIO_TogglePin>
			osDelay(pdMS_TO_TICKS(250));
90003a28:	20fa      	movs	r0, #250	@ 0xfa
90003a2a:	f00a fc15 	bl	9000e258 <osDelay>
			HAL_GPIO_TogglePin(GPIOI,GPIO_PIN_13);
90003a2e:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
90003a32:	4620      	mov	r0, r4
90003a34:	f004 f818 	bl	90007a68 <HAL_GPIO_TogglePin>
		if (osSemaphoreAcquire(blink_sem,osWaitForever) == osOK && !isCleanUp){
90003a38:	f04f 31ff 	mov.w	r1, #4294967295
90003a3c:	6828      	ldr	r0, [r5, #0]
90003a3e:	f00a fc6f 	bl	9000e320 <osSemaphoreAcquire>
90003a42:	2800      	cmp	r0, #0
90003a44:	d0e9      	beq.n	90003a1a <blk_toggle_led+0x1a>
		}else{
			osSemaphoreDelete(blink_sem);
90003a46:	6828      	ldr	r0, [r5, #0]
90003a48:	f00a fcc6 	bl	9000e3d8 <osSemaphoreDelete>
			osThreadExit();
90003a4c:	f00a fbfe 	bl	9000e24c <osThreadExit>
90003a50:	2400737c 	.word	0x2400737c
90003a54:	24007350 	.word	0x24007350
90003a58:	58022000 	.word	0x58022000

90003a5c <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
  
  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
90003a5c:	4901      	ldr	r1, [pc, #4]	@ (90003a64 <vApplicationIdleHook+0x8>)
90003a5e:	2000      	movs	r0, #0
90003a60:	f00c bdcc 	b.w	900105fc <vTaskSetApplicationTaskTag>
90003a64:	90001021 	.word	0x90001021

90003a68 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
90003a68:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
90003a6a:	2064      	movs	r0, #100	@ 0x64
90003a6c:	f00a fbf4 	bl	9000e258 <osDelay>
  for(;;)
90003a70:	e7fb      	b.n	90003a6a <StartDefaultTask+0x2>
90003a72:	bf00      	nop

90003a74 <SystemClock_Config>:
{
90003a74:	b570      	push	{r4, r5, r6, lr}
90003a76:	b09e      	sub	sp, #120	@ 0x78
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
90003a78:	224c      	movs	r2, #76	@ 0x4c
90003a7a:	2100      	movs	r1, #0
90003a7c:	a80a      	add	r0, sp, #40	@ 0x28
90003a7e:	f026 ff07 	bl	9002a890 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
90003a82:	2220      	movs	r2, #32
90003a84:	2100      	movs	r1, #0
90003a86:	a802      	add	r0, sp, #8
90003a88:	f026 ff02 	bl	9002a890 <memset>
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
90003a8c:	2002      	movs	r0, #2
90003a8e:	f006 fd43 	bl	9000a518 <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
90003a92:	4a22      	ldr	r2, [pc, #136]	@ (90003b1c <SystemClock_Config+0xa8>)
90003a94:	2100      	movs	r1, #0
90003a96:	4b22      	ldr	r3, [pc, #136]	@ (90003b20 <SystemClock_Config+0xac>)
90003a98:	9101      	str	r1, [sp, #4]
90003a9a:	6991      	ldr	r1, [r2, #24]
90003a9c:	f441 4140 	orr.w	r1, r1, #49152	@ 0xc000
90003aa0:	6191      	str	r1, [r2, #24]
90003aa2:	6991      	ldr	r1, [r2, #24]
90003aa4:	f401 4140 	and.w	r1, r1, #49152	@ 0xc000
90003aa8:	9101      	str	r1, [sp, #4]
90003aaa:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
90003aac:	f041 0101 	orr.w	r1, r1, #1
90003ab0:	62d9      	str	r1, [r3, #44]	@ 0x2c
90003ab2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003ab4:	f003 0301 	and.w	r3, r3, #1
90003ab8:	9301      	str	r3, [sp, #4]
90003aba:	9b01      	ldr	r3, [sp, #4]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
90003abc:	6993      	ldr	r3, [r2, #24]
90003abe:	049b      	lsls	r3, r3, #18
90003ac0:	d5fc      	bpl.n	90003abc <SystemClock_Config+0x48>
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90003ac2:	2401      	movs	r4, #1
90003ac4:	f44f 3580 	mov.w	r5, #65536	@ 0x10000
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
90003ac8:	2302      	movs	r3, #2
  RCC_OscInitStruct.PLL.PLLM = 5;
90003aca:	2105      	movs	r1, #5
  RCC_OscInitStruct.PLL.PLLN = 192;
90003acc:	22c0      	movs	r2, #192	@ 0xc0
  RCC_OscInitStruct.PLL.PLLQ = 4;
90003ace:	2604      	movs	r6, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90003ad0:	a80a      	add	r0, sp, #40	@ 0x28
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90003ad2:	e9cd 450a 	strd	r4, r5, [sp, #40]	@ 0x28
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90003ad6:	2508      	movs	r5, #8
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90003ad8:	2400      	movs	r4, #0
  RCC_OscInitStruct.PLL.PLLN = 192;
90003ada:	e9cd 1215 	strd	r1, r2, [sp, #84]	@ 0x54
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
90003ade:	e9cd 3313 	strd	r3, r3, [sp, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLQ = 4;
90003ae2:	e9cd 3617 	strd	r3, r6, [sp, #92]	@ 0x5c
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90003ae6:	e9cd 3519 	strd	r3, r5, [sp, #100]	@ 0x64
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90003aea:	e9cd 441b 	strd	r4, r4, [sp, #108]	@ 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90003aee:	f006 fda9 	bl	9000a644 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90003af2:	233f      	movs	r3, #63	@ 0x3f
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90003af4:	2203      	movs	r2, #3
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
90003af6:	4631      	mov	r1, r6
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90003af8:	9302      	str	r3, [sp, #8]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90003afa:	2340      	movs	r3, #64	@ 0x40
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90003afc:	9203      	str	r2, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
90003afe:	f44f 6280 	mov.w	r2, #1024	@ 0x400
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
90003b02:	eb0d 0005 	add.w	r0, sp, r5
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
90003b06:	9404      	str	r4, [sp, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
90003b08:	9505      	str	r5, [sp, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
90003b0a:	e9cd 3306 	strd	r3, r3, [sp, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
90003b0e:	e9cd 2308 	strd	r2, r3, [sp, #32]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
90003b12:	f007 f913 	bl	9000ad3c <HAL_RCC_ClockConfig>
}
90003b16:	b01e      	add	sp, #120	@ 0x78
90003b18:	bd70      	pop	{r4, r5, r6, pc}
90003b1a:	bf00      	nop
90003b1c:	58024800 	.word	0x58024800
90003b20:	58000400 	.word	0x58000400

90003b24 <main>:
{
90003b24:	b580      	push	{r7, lr}

 /* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90003b26:	2400      	movs	r4, #0
{
90003b28:	b098      	sub	sp, #96	@ 0x60
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90003b2a:	2501      	movs	r5, #1

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.BaseAddress = 0x90000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90003b2c:	271b      	movs	r7, #27

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90003b2e:	2603      	movs	r6, #3
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90003b30:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90003b34:	e9cd 440d 	strd	r4, r4, [sp, #52]	@ 0x34
  HAL_MPU_Disable();
90003b38:	f002 ffd2 	bl	90006ae0 <HAL_MPU_Disable>
  MPU_InitStruct.BaseAddress = 0x24000000;
90003b3c:	f04f 5210 	mov.w	r2, #603979776	@ 0x24000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90003b40:	4bd2      	ldr	r3, [pc, #840]	@ (90003e8c <main+0x368>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003b42:	a80b      	add	r0, sp, #44	@ 0x2c
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90003b44:	f8ad 502c 	strh.w	r5, [sp, #44]	@ 0x2c
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90003b48:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
90003b4c:	4bd0      	ldr	r3, [pc, #832]	@ (90003e90 <main+0x36c>)
90003b4e:	930e      	str	r3, [sp, #56]	@ 0x38
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003b50:	f002 ffe4 	bl	90006b1c <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x90000000;
90003b54:	f04f 4310 	mov.w	r3, #2415919104	@ 0x90000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003b58:	a80b      	add	r0, sp, #44	@ 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90003b5a:	f88d 4037 	strb.w	r4, [sp, #55]	@ 0x37
  MPU_InitStruct.BaseAddress = 0x90000000;
90003b5e:	930c      	str	r3, [sp, #48]	@ 0x30
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90003b60:	f8ad 403a 	strh.w	r4, [sp, #58]	@ 0x3a
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
90003b64:	f88d 502d 	strb.w	r5, [sp, #45]	@ 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90003b68:	f88d 7034 	strb.w	r7, [sp, #52]	@ 0x34
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003b6c:	f002 ffd6 	bl	90006b1c <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90003b70:	2302      	movs	r3, #2
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003b72:	a80b      	add	r0, sp, #44	@ 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90003b74:	f8ad 6037 	strh.w	r6, [sp, #55]	@ 0x37
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90003b78:	f88d 302d 	strb.w	r3, [sp, #45]	@ 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
90003b7c:	231a      	movs	r3, #26
90003b7e:	f88d 3034 	strb.w	r3, [sp, #52]	@ 0x34
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90003b82:	f240 1301 	movw	r3, #257	@ 0x101
90003b86:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003b8a:	f002 ffc7 	bl	90006b1c <HAL_MPU_ConfigRegion>
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
  MPU_InitStruct.BaseAddress = 0xD0000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90003b8e:	f44f 7380 	mov.w	r3, #256	@ 0x100
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003b92:	a80b      	add	r0, sp, #44	@ 0x2c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90003b94:	f8ad 403a 	strh.w	r4, [sp, #58]	@ 0x3a

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90003b98:	2404      	movs	r4, #4
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90003b9a:	f8ad 3037 	strh.w	r3, [sp, #55]	@ 0x37
  MPU_InitStruct.BaseAddress = 0xD0000000;
90003b9e:	f04f 4350 	mov.w	r3, #3489660928	@ 0xd0000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90003ba2:	f88d 7034 	strb.w	r7, [sp, #52]	@ 0x34
  MPU_InitStruct.BaseAddress = 0xD0000000;
90003ba6:	930c      	str	r3, [sp, #48]	@ 0x30
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
90003ba8:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003bac:	f002 ffb6 	bl	90006b1c <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90003bb0:	2318      	movs	r3, #24
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003bb2:	a80b      	add	r0, sp, #44	@ 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90003bb4:	f88d 6037 	strb.w	r6, [sp, #55]	@ 0x37
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90003bb8:	f88d 3034 	strb.w	r3, [sp, #52]	@ 0x34
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90003bbc:	f88d 402d 	strb.w	r4, [sp, #45]	@ 0x2d
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90003bc0:	f88d 503a 	strb.w	r5, [sp, #58]	@ 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003bc4:	f002 ffaa 	bl	90006b1c <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
90003bc8:	4620      	mov	r0, r4
90003bca:	f002 ff97 	bl	90006afc <HAL_MPU_Enable>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
90003bce:	4ab1      	ldr	r2, [pc, #708]	@ (90003e94 <main+0x370>)
90003bd0:	6953      	ldr	r3, [r2, #20]
90003bd2:	f413 3300 	ands.w	r3, r3, #131072	@ 0x20000
90003bd6:	d111      	bne.n	90003bfc <main+0xd8>
  __ASM volatile ("dsb 0xF":::"memory");
90003bd8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003bdc:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
90003be0:	f8c2 3250 	str.w	r3, [r2, #592]	@ 0x250
  __ASM volatile ("dsb 0xF":::"memory");
90003be4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003be8:	f3bf 8f6f 	isb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
90003bec:	6953      	ldr	r3, [r2, #20]
90003bee:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
90003bf2:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
90003bf4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003bf8:	f3bf 8f6f 	isb	sy
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
90003bfc:	48a5      	ldr	r0, [pc, #660]	@ (90003e94 <main+0x370>)
90003bfe:	6943      	ldr	r3, [r0, #20]
90003c00:	f413 3380 	ands.w	r3, r3, #65536	@ 0x10000
90003c04:	d124      	bne.n	90003c50 <main+0x12c>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90003c06:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90003c0a:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90003c0e:	f8d0 5080 	ldr.w	r5, [r0, #128]	@ 0x80
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003c12:	f643 76e0 	movw	r6, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90003c16:	f3c5 344e 	ubfx	r4, r5, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90003c1a:	f3c5 05c9 	ubfx	r5, r5, #3, #10
90003c1e:	0164      	lsls	r4, r4, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003c20:	ea04 0106 	and.w	r1, r4, r6
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90003c24:	462b      	mov	r3, r5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003c26:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90003c2a:	3b01      	subs	r3, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003c2c:	f8c0 2260 	str.w	r2, [r0, #608]	@ 0x260
      } while (ways-- != 0U);
90003c30:	1c5a      	adds	r2, r3, #1
90003c32:	d1f8      	bne.n	90003c26 <main+0x102>
    } while(sets-- != 0U);
90003c34:	3c20      	subs	r4, #32
90003c36:	f114 0f20 	cmn.w	r4, #32
90003c3a:	d1f1      	bne.n	90003c20 <main+0xfc>
90003c3c:	f3bf 8f4f 	dsb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
90003c40:	6943      	ldr	r3, [r0, #20]
90003c42:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
90003c46:	6143      	str	r3, [r0, #20]
90003c48:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003c4c:	f3bf 8f6f 	isb	sy
  HAL_Init();
90003c50:	f002 fe90 	bl	90006974 <HAL_Init>
  SystemClock_Config();
90003c54:	f7ff ff0e 	bl	90003a74 <SystemClock_Config>
  __ASM volatile ("cpsie i" : : : "memory");
90003c58:	b662      	cpsie	i
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003c5a:	2400      	movs	r4, #0
  __HAL_RCC_GPIOK_CLK_ENABLE();
90003c5c:	4d8e      	ldr	r5, [pc, #568]	@ (90003e98 <main+0x374>)
  HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, GPIO_PIN_RESET);
90003c5e:	2140      	movs	r1, #64	@ 0x40
90003c60:	488e      	ldr	r0, [pc, #568]	@ (90003e9c <main+0x378>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003c62:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, GPIO_PIN_RESET);
90003c64:	4622      	mov	r2, r4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003c66:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003c68:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = FRAME_RATE_Pin;
90003c6c:	f04f 0840 	mov.w	r8, #64	@ 0x40
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90003c70:	2708      	movs	r7, #8
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90003c72:	f04f 0a05 	mov.w	sl, #5
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003c76:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90003c7a:	e9cd 440d 	strd	r4, r4, [sp, #52]	@ 0x34
  __HAL_RCC_GPIOK_CLK_ENABLE();
90003c7e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003c82:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
90003c86:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003c8a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003c8e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
90003c92:	9301      	str	r3, [sp, #4]
90003c94:	9b01      	ldr	r3, [sp, #4]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90003c96:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003c9a:	430b      	orrs	r3, r1
90003c9c:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003ca0:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003ca4:	400b      	ands	r3, r1
90003ca6:	9302      	str	r3, [sp, #8]
90003ca8:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOI_CLK_ENABLE();
90003caa:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003cae:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
90003cb2:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003cb6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003cba:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90003cbe:	9303      	str	r3, [sp, #12]
90003cc0:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90003cc2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003cc6:	f043 0310 	orr.w	r3, r3, #16
90003cca:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003cce:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003cd2:	f003 0310 	and.w	r3, r3, #16
90003cd6:	9304      	str	r3, [sp, #16]
90003cd8:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
90003cda:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003cde:	f043 0302 	orr.w	r3, r3, #2
90003ce2:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003ce6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003cea:	f003 0302 	and.w	r3, r3, #2
90003cee:	9305      	str	r3, [sp, #20]
90003cf0:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
90003cf2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003cf6:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
90003cfa:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003cfe:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d02:	f403 7300 	and.w	r3, r3, #512	@ 0x200
90003d06:	9306      	str	r3, [sp, #24]
90003d08:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90003d0a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d0e:	f043 0308 	orr.w	r3, r3, #8
90003d12:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003d16:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d1a:	f003 0308 	and.w	r3, r3, #8
90003d1e:	9307      	str	r3, [sp, #28]
90003d20:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOA_CLK_ENABLE();
90003d22:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d26:	f043 0301 	orr.w	r3, r3, #1
90003d2a:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003d2e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d32:	f003 0301 	and.w	r3, r3, #1
90003d36:	9308      	str	r3, [sp, #32]
90003d38:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90003d3a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d3e:	f043 0320 	orr.w	r3, r3, #32
90003d42:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003d46:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d4a:	f003 0320 	and.w	r3, r3, #32
90003d4e:	9309      	str	r3, [sp, #36]	@ 0x24
90003d50:	9b09      	ldr	r3, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOH_CLK_ENABLE();
90003d52:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d56:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90003d5a:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003d5e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003d62:	f003 0380 	and.w	r3, r3, #128	@ 0x80
90003d66:	930a      	str	r3, [sp, #40]	@ 0x28
90003d68:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, GPIO_PIN_RESET);
90003d6a:	f003 fe79 	bl	90007a60 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90003d6e:	4622      	mov	r2, r4
90003d70:	2180      	movs	r1, #128	@ 0x80
90003d72:	484b      	ldr	r0, [pc, #300]	@ (90003ea0 <main+0x37c>)
90003d74:	f003 fe74 	bl	90007a60 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOI, GPIO_PIN_13, GPIO_PIN_SET);
90003d78:	2201      	movs	r2, #1
90003d7a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
90003d7e:	4849      	ldr	r0, [pc, #292]	@ (90003ea4 <main+0x380>)
90003d80:	f003 fe6e 	bl	90007a60 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
90003d84:	4622      	mov	r2, r4
90003d86:	2108      	movs	r1, #8
90003d88:	4847      	ldr	r0, [pc, #284]	@ (90003ea8 <main+0x384>)
90003d8a:	f003 fe69 	bl	90007a60 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90003d8e:	2201      	movs	r2, #1
90003d90:	4846      	ldr	r0, [pc, #280]	@ (90003eac <main+0x388>)
90003d92:	4611      	mov	r1, r2
90003d94:	f003 fe64 	bl	90007a60 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
90003d98:	4622      	mov	r2, r4
90003d9a:	2140      	movs	r1, #64	@ 0x40
90003d9c:	4844      	ldr	r0, [pc, #272]	@ (90003eb0 <main+0x38c>)
90003d9e:	f003 fe5f 	bl	90007a60 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOJ, GPIO_PIN_2, GPIO_PIN_SET);
90003da2:	2201      	movs	r2, #1
90003da4:	2104      	movs	r1, #4
90003da6:	4843      	ldr	r0, [pc, #268]	@ (90003eb4 <main+0x390>)
90003da8:	f003 fe5a 	bl	90007a60 <HAL_GPIO_WritePin>
  HAL_GPIO_Init(FRAME_RATE_GPIO_Port, &GPIO_InitStruct);
90003dac:	a90b      	add	r1, sp, #44	@ 0x2c
90003dae:	483b      	ldr	r0, [pc, #236]	@ (90003e9c <main+0x378>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003db0:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003db4:	940d      	str	r4, [sp, #52]	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003db6:	e9cd 860b 	strd	r8, r6, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(FRAME_RATE_GPIO_Port, &GPIO_InitStruct);
90003dba:	f003 fb15 	bl	900073e8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90003dbe:	2380      	movs	r3, #128	@ 0x80
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90003dc0:	a90b      	add	r1, sp, #44	@ 0x2c
90003dc2:	4837      	ldr	r0, [pc, #220]	@ (90003ea0 <main+0x37c>)
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90003dc4:	930b      	str	r3, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003dc6:	940e      	str	r4, [sp, #56]	@ 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003dc8:	e9cd 640c 	strd	r6, r4, [sp, #48]	@ 0x30
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90003dcc:	f003 fb0c 	bl	900073e8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_13;
90003dd0:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90003dd4:	a90b      	add	r1, sp, #44	@ 0x2c
90003dd6:	4833      	ldr	r0, [pc, #204]	@ (90003ea4 <main+0x380>)
  GPIO_InitStruct.Pin = GPIO_PIN_13;
90003dd8:	930b      	str	r3, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003dda:	940e      	str	r4, [sp, #56]	@ 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003ddc:	e9cd 640c 	strd	r6, r4, [sp, #48]	@ 0x30
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90003de0:	f003 fb02 	bl	900073e8 <HAL_GPIO_Init>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90003de4:	a90b      	add	r1, sp, #44	@ 0x2c
90003de6:	4830      	ldr	r0, [pc, #192]	@ (90003ea8 <main+0x384>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003de8:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90003dec:	970b      	str	r7, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003dee:	e9cd 640c 	strd	r6, r4, [sp, #48]	@ 0x30
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90003df2:	f003 faf9 	bl	900073e8 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90003df6:	a90b      	add	r1, sp, #44	@ 0x2c
90003df8:	482c      	ldr	r0, [pc, #176]	@ (90003eac <main+0x388>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003dfa:	e9cd 660b 	strd	r6, r6, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003dfe:	e9cd 440d 	strd	r4, r4, [sp, #52]	@ 0x34
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90003e02:	f003 faf1 	bl	900073e8 <HAL_GPIO_Init>
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90003e06:	a90b      	add	r1, sp, #44	@ 0x2c
90003e08:	4829      	ldr	r0, [pc, #164]	@ (90003eb0 <main+0x38c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003e0a:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
  GPIO_InitStruct.Pin = GPIO_PIN_2;
90003e0e:	f04f 0904 	mov.w	r9, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003e12:	940d      	str	r4, [sp, #52]	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003e14:	e9cd 860b 	strd	r8, r6, [sp, #44]	@ 0x2c
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90003e18:	f003 fae6 	bl	900073e8 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90003e1c:	a90b      	add	r1, sp, #44	@ 0x2c
90003e1e:	4825      	ldr	r0, [pc, #148]	@ (90003eb4 <main+0x390>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003e20:	940e      	str	r4, [sp, #56]	@ 0x38
  GPIO_InitStruct.Pin = GPIO_PIN_2;
90003e22:	f8cd 902c 	str.w	r9, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003e26:	e9cd 640c 	strd	r6, r4, [sp, #48]	@ 0x30
  HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90003e2a:	f003 fadd 	bl	900073e8 <HAL_GPIO_Init>
  __HAL_RCC_MDMA_CLK_ENABLE();
90003e2e:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003e32:	4622      	mov	r2, r4
90003e34:	2105      	movs	r1, #5
  __HAL_RCC_MDMA_CLK_ENABLE();
90003e36:	4333      	orrs	r3, r6
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003e38:	207a      	movs	r0, #122	@ 0x7a
  __HAL_RCC_MDMA_CLK_ENABLE();
90003e3a:	f8c5 30d4 	str.w	r3, [r5, #212]	@ 0xd4
90003e3e:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
  hltdc.Instance = LTDC;
90003e42:	4d1d      	ldr	r5, [pc, #116]	@ (90003eb8 <main+0x394>)
  __HAL_RCC_MDMA_CLK_ENABLE();
90003e44:	4033      	ands	r3, r6
90003e46:	9300      	str	r3, [sp, #0]
90003e48:	9b00      	ldr	r3, [sp, #0]
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003e4a:	f002 fded 	bl	90006a28 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(MDMA_IRQn);
90003e4e:	207a      	movs	r0, #122	@ 0x7a
90003e50:	f002 fe26 	bl	90006aa0 <HAL_NVIC_EnableIRQ>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
90003e54:	2234      	movs	r2, #52	@ 0x34
90003e56:	4621      	mov	r1, r4
90003e58:	a80b      	add	r0, sp, #44	@ 0x2c
90003e5a:	f026 fd19 	bl	9002a890 <memset>
  hltdc.Instance = LTDC;
90003e5e:	4b17      	ldr	r3, [pc, #92]	@ (90003ebc <main+0x398>)
  hltdc.Init.AccumulatedVBP = 11;
90003e60:	202a      	movs	r0, #42	@ 0x2a
  hltdc.Init.VerticalSync = 8;
90003e62:	61af      	str	r7, [r5, #24]
  hltdc.Instance = LTDC;
90003e64:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 39;
90003e66:	2327      	movs	r3, #39	@ 0x27
  hltdc.Init.AccumulatedActiveH = 283;
90003e68:	f240 270a 	movw	r7, #522	@ 0x20a
  hltdc.Init.TotalHeigh = 285;
90003e6c:	f44f 7c04 	mov.w	ip, #528	@ 0x210
  hltdc.Init.HorizontalSync = 39;
90003e70:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
90003e72:	230b      	movs	r3, #11
  hltdc.Init.Backcolor.Blue = 0;
90003e74:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
90003e76:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  hltdc.Init.AccumulatedVBP = 11;
90003e7a:	e9c5 0307 	strd	r0, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 283;
90003e7e:	f240 131b 	movw	r3, #283	@ 0x11b
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90003e82:	4628      	mov	r0, r5
  hltdc.Init.AccumulatedActiveH = 283;
90003e84:	e9c5 7309 	strd	r7, r3, [r5, #36]	@ 0x24
90003e88:	e01a      	b.n	90003ec0 <main+0x39c>
90003e8a:	bf00      	nop
90003e8c:	03000012 	.word	0x03000012
90003e90:	01010001 	.word	0x01010001
90003e94:	e000ed00 	.word	0xe000ed00
90003e98:	58024400 	.word	0x58024400
90003e9c:	58020400 	.word	0x58020400
90003ea0:	58020c00 	.word	0x58020c00
90003ea4:	58022000 	.word	0x58022000
90003ea8:	58021800 	.word	0x58021800
90003eac:	58022800 	.word	0x58022800
90003eb0:	58020000 	.word	0x58020000
90003eb4:	58022400 	.word	0x58022400
90003eb8:	24007454 	.word	0x24007454
90003ebc:	50001000 	.word	0x50001000
  hltdc.Init.TotalHeigh = 285;
90003ec0:	f240 131d 	movw	r3, #285	@ 0x11d
  pLayerCfg.Alpha = 255;
90003ec4:	2702      	movs	r7, #2
  hltdc.Init.TotalHeigh = 285;
90003ec6:	e9c5 c30b 	strd	ip, r3, [r5, #44]	@ 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
90003eca:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
90003ece:	e9c5 4403 	strd	r4, r4, [r5, #12]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90003ed2:	f005 ff3d 	bl	90009d50 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 480;
90003ed6:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003eda:	4622      	mov	r2, r4
90003edc:	a90b      	add	r1, sp, #44	@ 0x2c
  pLayerCfg.WindowX1 = 480;
90003ede:	930c      	str	r3, [sp, #48]	@ 0x30
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003ee0:	4628      	mov	r0, r5
  pLayerCfg.ImageWidth = 480;
90003ee2:	9315      	str	r3, [sp, #84]	@ 0x54
  pLayerCfg.WindowY1 = 272;
90003ee4:	f44f 7388 	mov.w	r3, #272	@ 0x110
  hdma2d.Instance = DMA2D;
90003ee8:	4d50      	ldr	r5, [pc, #320]	@ (9000402c <main+0x508>)
  pLayerCfg.WindowY1 = 272;
90003eea:	930e      	str	r3, [sp, #56]	@ 0x38
  pLayerCfg.ImageHeight = 272;
90003eec:	9316      	str	r3, [sp, #88]	@ 0x58
  pLayerCfg.Alpha = 255;
90003eee:	23ff      	movs	r3, #255	@ 0xff
  pLayerCfg.WindowX0 = 0;
90003ef0:	940b      	str	r4, [sp, #44]	@ 0x2c
  pLayerCfg.WindowY0 = 0;
90003ef2:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.Alpha0 = 0;
90003ef4:	9411      	str	r4, [sp, #68]	@ 0x44
  pLayerCfg.FBStartAdress = 0;
90003ef6:	9414      	str	r4, [sp, #80]	@ 0x50
  pLayerCfg.Backcolor.Blue = 0;
90003ef8:	f8ad 405c 	strh.w	r4, [sp, #92]	@ 0x5c
  pLayerCfg.Backcolor.Red = 0;
90003efc:	f88d 405e 	strb.w	r4, [sp, #94]	@ 0x5e
  pLayerCfg.Alpha = 255;
90003f00:	e9cd 730f 	strd	r7, r3, [sp, #60]	@ 0x3c
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90003f04:	f44f 6380 	mov.w	r3, #1024	@ 0x400
90003f08:	e9cd 3a12 	strd	r3, sl, [sp, #72]	@ 0x48
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003f0c:	f005 ffde 	bl	90009ecc <HAL_LTDC_ConfigLayer>
  hdma2d.Instance = DMA2D;
90003f10:	4b47      	ldr	r3, [pc, #284]	@ (90004030 <main+0x50c>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90003f12:	4628      	mov	r0, r5
  hdma2d.Init.OutputOffset = 0;
90003f14:	60ec      	str	r4, [r5, #12]
  hdma2d.Instance = DMA2D;
90003f16:	602b      	str	r3, [r5, #0]
  hdma2d.LayerCfg[1].ChromaSubSampling = DMA2D_NO_CSS;
90003f18:	65ec      	str	r4, [r5, #92]	@ 0x5c
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
90003f1a:	e9c5 4701 	strd	r4, r7, [r5, #4]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
90003f1e:	e9c5 4711 	strd	r4, r7, [r5, #68]	@ 0x44
  hdma2d.LayerCfg[1].InputAlpha = 0;
90003f22:	e9c5 4413 	strd	r4, r4, [r5, #76]	@ 0x4c
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
90003f26:	e9c5 4415 	strd	r4, r4, [r5, #84]	@ 0x54
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90003f2a:	f003 f91d 	bl	90007168 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
90003f2e:	4631      	mov	r1, r6
90003f30:	4628      	mov	r0, r5
  huart1.Instance = USART1;
90003f32:	4d40      	ldr	r5, [pc, #256]	@ (90004034 <main+0x510>)
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
90003f34:	f003 f9ee 	bl	90007314 <HAL_DMA2D_ConfigLayer>
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003f38:	483f      	ldr	r0, [pc, #252]	@ (90004038 <main+0x514>)
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90003f3a:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90003f3e:	a90b      	add	r1, sp, #44	@ 0x2c
  SdramTiming.WriteRecoveryTime = 5;
90003f40:	f8cd a03c 	str.w	sl, [sp, #60]	@ 0x3c
  SdramTiming.LoadToActiveDelay = 2;
90003f44:	970b      	str	r7, [sp, #44]	@ 0x2c
  SdramTiming.SelfRefreshTime = 4;
90003f46:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
90003f4a:	f8c0 900c 	str.w	r9, [r0, #12]
  hsdram2.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90003f4e:	f8c0 8014 	str.w	r8, [r0, #20]
  hsdram2.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
90003f52:	6284      	str	r4, [r0, #40]	@ 0x28
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90003f54:	e9c0 3406 	strd	r3, r4, [r0, #24]
  hsdram2.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
90003f58:	f44f 6300 	mov.w	r3, #2048	@ 0x800
90003f5c:	6203      	str	r3, [r0, #32]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90003f5e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
90003f62:	6243      	str	r3, [r0, #36]	@ 0x24
  SdramTiming.ExitSelfRefreshDelay = 7;
90003f64:	2307      	movs	r3, #7
90003f66:	930c      	str	r3, [sp, #48]	@ 0x30
  SdramTiming.RowCycleDelay = 7;
90003f68:	930e      	str	r3, [sp, #56]	@ 0x38
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003f6a:	4b34      	ldr	r3, [pc, #208]	@ (9000403c <main+0x518>)
90003f6c:	6003      	str	r3, [r0, #0]
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90003f6e:	2310      	movs	r3, #16
  SdramTiming.RCDDelay = 2;
90003f70:	e9cd 7710 	strd	r7, r7, [sp, #64]	@ 0x40
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90003f74:	6103      	str	r3, [r0, #16]
  hsdram2.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
90003f76:	e9c0 6401 	strd	r6, r4, [r0, #4]
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90003f7a:	f008 fa6f 	bl	9000c45c <HAL_SDRAM_Init>
  FMC_Bank1_R->BTCR[0] &= ~FMC_BCRx_MBKEN;
90003f7e:	4a30      	ldr	r2, [pc, #192]	@ (90004040 <main+0x51c>)
  BSP_SDRAM_DeInit(0);
90003f80:	4620      	mov	r0, r4
  FMC_Bank1_R->BTCR[0] &= ~FMC_BCRx_MBKEN;
90003f82:	6813      	ldr	r3, [r2, #0]
90003f84:	f023 0301 	bic.w	r3, r3, #1
90003f88:	6013      	str	r3, [r2, #0]
  BSP_SDRAM_DeInit(0);
90003f8a:	f002 fa91 	bl	900064b0 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init(0) != BSP_ERROR_NONE)
90003f8e:	4620      	mov	r0, r4
90003f90:	f002 fad8 	bl	90006544 <BSP_SDRAM_Init>
  MX_LIBJPEG_Init();
90003f94:	f7fc fdc0 	bl	90000b18 <MX_LIBJPEG_Init>
  hjpeg.Instance = JPEG;
90003f98:	4b2a      	ldr	r3, [pc, #168]	@ (90004044 <main+0x520>)
90003f9a:	482b      	ldr	r0, [pc, #172]	@ (90004048 <main+0x524>)
90003f9c:	6003      	str	r3, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
90003f9e:	f004 fe27 	bl	90008bf0 <HAL_JPEG_Init>
  hcrc.Instance = CRC;
90003fa2:	482a      	ldr	r0, [pc, #168]	@ (9000404c <main+0x528>)
90003fa4:	4b2a      	ldr	r3, [pc, #168]	@ (90004050 <main+0x52c>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
90003fa6:	8084      	strh	r4, [r0, #4]
  hcrc.Instance = CRC;
90003fa8:	6003      	str	r3, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
90003faa:	6206      	str	r6, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
90003fac:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
90003fb0:	f002 fde4 	bl	90006b7c <HAL_CRC_Init>
  huart1.Init.Mode = UART_MODE_TX_RX;
90003fb4:	230c      	movs	r3, #12
  huart1.Init.BaudRate = 9600;
90003fb6:	f44f 5216 	mov.w	r2, #9600	@ 0x2580
  huart1.Instance = USART1;
90003fba:	4926      	ldr	r1, [pc, #152]	@ (90004054 <main+0x530>)
  if (HAL_UART_Init(&huart1) != HAL_OK)
90003fbc:	4628      	mov	r0, r5
  huart1.Init.BaudRate = 9600;
90003fbe:	e885 0016 	stmia.w	r5, {r1, r2, r4}
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
90003fc2:	e9c5 3405 	strd	r3, r4, [r5, #20]
  huart1.Init.Parity = UART_PARITY_NONE;
90003fc6:	e9c5 4403 	strd	r4, r4, [r5, #12]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
90003fca:	e9c5 4407 	strd	r4, r4, [r5, #28]
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
90003fce:	e9c5 4409 	strd	r4, r4, [r5, #36]	@ 0x24
  if (HAL_UART_Init(&huart1) != HAL_OK)
90003fd2:	f009 ff35 	bl	9000de40 <HAL_UART_Init>
  if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
90003fd6:	4621      	mov	r1, r4
90003fd8:	4628      	mov	r0, r5
90003fda:	f009 ff89 	bl	9000def0 <HAL_UARTEx_SetTxFifoThreshold>
  if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
90003fde:	4621      	mov	r1, r4
90003fe0:	4628      	mov	r0, r5
90003fe2:	f009 ffc7 	bl	9000df74 <HAL_UARTEx_SetRxFifoThreshold>
  if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
90003fe6:	4628      	mov	r0, r5
90003fe8:	f009 ff64 	bl	9000deb4 <HAL_UARTEx_DisableFifoMode>
  MX_TouchGFX_Init();
90003fec:	f7fc fda8 	bl	90000b40 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
90003ff0:	f7fc fda4 	bl	90000b3c <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
90003ff4:	f00a f8ba 	bl	9000e16c <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90003ff8:	4a17      	ldr	r2, [pc, #92]	@ (90004058 <main+0x534>)
90003ffa:	4621      	mov	r1, r4
90003ffc:	4817      	ldr	r0, [pc, #92]	@ (9000405c <main+0x538>)
90003ffe:	f00a f8e1 	bl	9000e1c4 <osThreadNew>
90004002:	4b17      	ldr	r3, [pc, #92]	@ (90004060 <main+0x53c>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90004004:	4a17      	ldr	r2, [pc, #92]	@ (90004064 <main+0x540>)
90004006:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90004008:	6018      	str	r0, [r3, #0]
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
9000400a:	4817      	ldr	r0, [pc, #92]	@ (90004068 <main+0x544>)
9000400c:	f00a f8da 	bl	9000e1c4 <osThreadNew>
90004010:	4b16      	ldr	r3, [pc, #88]	@ (9000406c <main+0x548>)
90004012:	4605      	mov	r5, r0
  UARTHandle = osThreadNew(USART_Init_Start, NULL, &UARTTask_attributes);
90004014:	4a16      	ldr	r2, [pc, #88]	@ (90004070 <main+0x54c>)
90004016:	4621      	mov	r1, r4
90004018:	4816      	ldr	r0, [pc, #88]	@ (90004074 <main+0x550>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
9000401a:	601d      	str	r5, [r3, #0]
  UARTHandle = osThreadNew(USART_Init_Start, NULL, &UARTTask_attributes);
9000401c:	f00a f8d2 	bl	9000e1c4 <osThreadNew>
90004020:	4b15      	ldr	r3, [pc, #84]	@ (90004078 <main+0x554>)
90004022:	6018      	str	r0, [r3, #0]
  osKernelStart();
90004024:	f00a f8b4 	bl	9000e190 <osKernelStart>
  while (1)
90004028:	e7fe      	b.n	90004028 <main+0x504>
9000402a:	bf00      	nop
9000402c:	2400762c 	.word	0x2400762c
90004030:	52001000 	.word	0x52001000
90004034:	240073c0 	.word	0x240073c0
90004038:	2400738c 	.word	0x2400738c
9000403c:	52004140 	.word	0x52004140
90004040:	52004000 	.word	0x52004000
90004044:	52003000 	.word	0x52003000
90004048:	240075d4 	.word	0x240075d4
9000404c:	24007694 	.word	0x24007694
90004050:	58024c00 	.word	0x58024c00
90004054:	40011000 	.word	0x40011000
90004058:	9002d460 	.word	0x9002d460
9000405c:	90003a69 	.word	0x90003a69
90004060:	24007388 	.word	0x24007388
90004064:	9002d43c 	.word	0x9002d43c
90004068:	90000b51 	.word	0x90000b51
9000406c:	24007384 	.word	0x24007384
90004070:	9002d418 	.word	0x9002d418
90004074:	900038bd 	.word	0x900038bd
90004078:	24007380 	.word	0x24007380

9000407c <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6)
9000407c:	4b03      	ldr	r3, [pc, #12]	@ (9000408c <HAL_TIM_PeriodElapsedCallback+0x10>)
9000407e:	6802      	ldr	r2, [r0, #0]
90004080:	429a      	cmp	r2, r3
90004082:	d000      	beq.n	90004086 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
90004084:	4770      	bx	lr
    HAL_IncTick();
90004086:	f002 bca5 	b.w	900069d4 <HAL_IncTick>
9000408a:	bf00      	nop
9000408c:	40001000 	.word	0x40001000

90004090 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
90004090:	4770      	bx	lr
90004092:	bf00      	nop

90004094 <HAL_MspInit>:

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
90004094:	4b0b      	ldr	r3, [pc, #44]	@ (900040c4 <HAL_MspInit+0x30>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90004096:	2200      	movs	r2, #0
90004098:	210f      	movs	r1, #15
9000409a:	f06f 0001 	mvn.w	r0, #1
{
9000409e:	b410      	push	{r4}
  __HAL_RCC_SYSCFG_CLK_ENABLE();
900040a0:	f8d3 40f4 	ldr.w	r4, [r3, #244]	@ 0xf4
{
900040a4:	b083      	sub	sp, #12
  __HAL_RCC_SYSCFG_CLK_ENABLE();
900040a6:	f044 0402 	orr.w	r4, r4, #2
900040aa:	f8c3 40f4 	str.w	r4, [r3, #244]	@ 0xf4
900040ae:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
900040b2:	f003 0302 	and.w	r3, r3, #2
900040b6:	9301      	str	r3, [sp, #4]
900040b8:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
900040ba:	b003      	add	sp, #12
900040bc:	f85d 4b04 	ldr.w	r4, [sp], #4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
900040c0:	f002 bcb2 	b.w	90006a28 <HAL_NVIC_SetPriority>
900040c4:	58024400 	.word	0x58024400

900040c8 <HAL_CRC_MspInit>:
  * @param hcrc: CRC handle pointer
  * @retval None
  */
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
900040c8:	4b0a      	ldr	r3, [pc, #40]	@ (900040f4 <HAL_CRC_MspInit+0x2c>)
900040ca:	6802      	ldr	r2, [r0, #0]
900040cc:	429a      	cmp	r2, r3
900040ce:	d000      	beq.n	900040d2 <HAL_CRC_MspInit+0xa>
900040d0:	4770      	bx	lr
  {
    /* USER CODE BEGIN CRC_MspInit 0 */

    /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
900040d2:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
{
900040d6:	b082      	sub	sp, #8
    __HAL_RCC_CRC_CLK_ENABLE();
900040d8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900040dc:	f442 2200 	orr.w	r2, r2, #524288	@ 0x80000
900040e0:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900040e4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
900040e8:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
900040ec:	9301      	str	r3, [sp, #4]
900040ee:	9b01      	ldr	r3, [sp, #4]

    /* USER CODE END CRC_MspInit 1 */

  }

}
900040f0:	b002      	add	sp, #8
900040f2:	4770      	bx	lr
900040f4:	58024c00 	.word	0x58024c00

900040f8 <HAL_DMA2D_MspInit>:
  * @param hdma2d: DMA2D handle pointer
  * @retval None
  */
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
900040f8:	4b0f      	ldr	r3, [pc, #60]	@ (90004138 <HAL_DMA2D_MspInit+0x40>)
900040fa:	6802      	ldr	r2, [r0, #0]
900040fc:	429a      	cmp	r2, r3
900040fe:	d000      	beq.n	90004102 <HAL_DMA2D_MspInit+0xa>
90004100:	4770      	bx	lr
  {
    /* USER CODE BEGIN DMA2D_MspInit 0 */

    /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
90004102:	4b0e      	ldr	r3, [pc, #56]	@ (9000413c <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90004104:	2200      	movs	r2, #0
90004106:	2105      	movs	r1, #5
90004108:	205a      	movs	r0, #90	@ 0x5a
{
9000410a:	b510      	push	{r4, lr}
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000410c:	f8d3 40d4 	ldr.w	r4, [r3, #212]	@ 0xd4
{
90004110:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
90004112:	f044 0410 	orr.w	r4, r4, #16
90004116:	f8c3 40d4 	str.w	r4, [r3, #212]	@ 0xd4
9000411a:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
9000411e:	f003 0310 	and.w	r3, r3, #16
90004122:	9301      	str	r3, [sp, #4]
90004124:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90004126:	f002 fc7f 	bl	90006a28 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
9000412a:	205a      	movs	r0, #90	@ 0x5a

    /* USER CODE END DMA2D_MspInit 1 */

  }

}
9000412c:	b002      	add	sp, #8
9000412e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90004132:	f002 bcb5 	b.w	90006aa0 <HAL_NVIC_EnableIRQ>
90004136:	bf00      	nop
90004138:	52001000 	.word	0x52001000
9000413c:	58024400 	.word	0x58024400

90004140 <HAL_JPEG_MspInit>:
  * @param hjpeg: JPEG handle pointer
  * @retval None
  */
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
  if(hjpeg->Instance==JPEG)
90004140:	4b3f      	ldr	r3, [pc, #252]	@ (90004240 <HAL_JPEG_MspInit+0x100>)
90004142:	6802      	ldr	r2, [r0, #0]
90004144:	429a      	cmp	r2, r3
90004146:	d000      	beq.n	9000414a <HAL_JPEG_MspInit+0xa>
90004148:	4770      	bx	lr
{
9000414a:	b570      	push	{r4, r5, r6, lr}
    /* USER CODE BEGIN JPEG_MspInit 0 */
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
    /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
9000414c:	4b3d      	ldr	r3, [pc, #244]	@ (90004244 <HAL_JPEG_MspInit+0x104>)
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
9000414e:	2211      	movs	r2, #17
90004150:	4e3d      	ldr	r6, [pc, #244]	@ (90004248 <HAL_JPEG_MspInit+0x108>)
{
90004152:	b082      	sub	sp, #8
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90004154:	4d3d      	ldr	r5, [pc, #244]	@ (9000424c <HAL_JPEG_MspInit+0x10c>)
90004156:	4604      	mov	r4, r0
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
90004158:	6072      	str	r2, [r6, #4]
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
    hmdma_jpeg_infifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
9000415a:	4630      	mov	r0, r6
    __HAL_RCC_JPEG_CLK_ENABLE();
9000415c:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90004160:	493b      	ldr	r1, [pc, #236]	@ (90004250 <HAL_JPEG_MspInit+0x110>)
    __HAL_RCC_JPEG_CLK_ENABLE();
90004162:	f042 0220 	orr.w	r2, r2, #32
90004166:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
9000416a:	2280      	movs	r2, #128	@ 0x80
    __HAL_RCC_JPEG_CLK_ENABLE();
9000416c:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
90004170:	6232      	str	r2, [r6, #32]
    __HAL_RCC_JPEG_CLK_ENABLE();
90004172:	f003 0320 	and.w	r3, r3, #32
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90004176:	6031      	str	r1, [r6, #0]
    __HAL_RCC_JPEG_CLK_ENABLE();
90004178:	9301      	str	r3, [sp, #4]
    hmdma_jpeg_infifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
9000417a:	2300      	movs	r3, #0
    __HAL_RCC_JPEG_CLK_ENABLE();
9000417c:	9901      	ldr	r1, [sp, #4]
    hmdma_jpeg_infifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
9000417e:	6133      	str	r3, [r6, #16]
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
90004180:	e9c6 3202 	strd	r3, r2, [r6, #8]
    hmdma_jpeg_infifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90004184:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
90004188:	6272      	str	r2, [r6, #36]	@ 0x24
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
9000418a:	2220      	movs	r2, #32
    hmdma_jpeg_infifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_BYTE;
9000418c:	e9c6 3306 	strd	r3, r3, [r6, #24]
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
90004190:	e9c6 330d 	strd	r3, r3, [r6, #52]	@ 0x34
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90004194:	62b2      	str	r2, [r6, #40]	@ 0x28
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
90004196:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
9000419a:	f44f 42a0 	mov.w	r2, #20480	@ 0x5000
9000419e:	e9c6 230b 	strd	r2, r3, [r6, #44]	@ 0x2c
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
900041a2:	2313      	movs	r3, #19
900041a4:	606b      	str	r3, [r5, #4]
    hmdma_jpeg_infifo_th.Init.SourceInc = MDMA_SRC_INC_BYTE;
900041a6:	2302      	movs	r3, #2
900041a8:	6173      	str	r3, [r6, #20]
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
900041aa:	f005 ff73 	bl	9000a094 <HAL_MDMA_Init>
900041ae:	2800      	cmp	r0, #0
900041b0:	d13a      	bne.n	90004228 <HAL_JPEG_MspInit+0xe8>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_infifo_th, 0, 0) != HAL_OK)
900041b2:	2200      	movs	r2, #0
900041b4:	4824      	ldr	r0, [pc, #144]	@ (90004248 <HAL_JPEG_MspInit+0x108>)
900041b6:	4611      	mov	r1, r2
900041b8:	f006 f80a 	bl	9000a1d0 <HAL_MDMA_ConfigPostRequestMask>
900041bc:	2800      	cmp	r0, #0
900041be:	d13c      	bne.n	9000423a <HAL_JPEG_MspInit+0xfa>
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
    hmdma_jpeg_outfifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
900041c0:	2220      	movs	r2, #32
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
900041c2:	2300      	movs	r3, #0
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
900041c4:	6326      	str	r6, [r4, #48]	@ 0x30
    hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
900041c6:	2013      	movs	r0, #19
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
900041c8:	61ea      	str	r2, [r5, #28]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
    hmdma_jpeg_outfifo_th.Init.BufferTransferLength = 32;
900041ca:	62aa      	str	r2, [r5, #40]	@ 0x28
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
900041cc:	f44f 3220 	mov.w	r2, #163840	@ 0x28000
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
900041d0:	4920      	ldr	r1, [pc, #128]	@ (90004254 <HAL_JPEG_MspInit+0x114>)
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
900041d2:	60ab      	str	r3, [r5, #8]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
900041d4:	622b      	str	r3, [r5, #32]
    hmdma_jpeg_outfifo_th.Init.SourceBlockAddressOffset = 0;
900041d6:	63ab      	str	r3, [r5, #56]	@ 0x38
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
900041d8:	6434      	str	r4, [r6, #64]	@ 0x40
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
900041da:	e9c5 230c 	strd	r2, r3, [r5, #48]	@ 0x30
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
900041de:	e9c5 3304 	strd	r3, r3, [r5, #16]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
900041e2:	2308      	movs	r3, #8
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
900041e4:	22c0      	movs	r2, #192	@ 0xc0
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
900041e6:	e9c5 1000 	strd	r1, r0, [r5]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
900041ea:	61ab      	str	r3, [r5, #24]
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
900041ec:	f44f 41a0 	mov.w	r1, #20480	@ 0x5000
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900041f0:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
    hmdma_jpeg_outfifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
900041f4:	4815      	ldr	r0, [pc, #84]	@ (9000424c <HAL_JPEG_MspInit+0x10c>)
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
900041f6:	62e9      	str	r1, [r5, #44]	@ 0x2c
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
900041f8:	60ea      	str	r2, [r5, #12]
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900041fa:	626b      	str	r3, [r5, #36]	@ 0x24
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
900041fc:	f005 ff4a 	bl	9000a094 <HAL_MDMA_Init>
90004200:	b9c0      	cbnz	r0, 90004234 <HAL_JPEG_MspInit+0xf4>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_outfifo_th, 0, 0) != HAL_OK)
90004202:	2200      	movs	r2, #0
90004204:	4811      	ldr	r0, [pc, #68]	@ (9000424c <HAL_JPEG_MspInit+0x10c>)
90004206:	4611      	mov	r1, r2
90004208:	f005 ffe2 	bl	9000a1d0 <HAL_MDMA_ConfigPostRequestMask>
9000420c:	b978      	cbnz	r0, 9000422e <HAL_JPEG_MspInit+0xee>
    {
      Error_Handler();
    }

    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
9000420e:	6365      	str	r5, [r4, #52]	@ 0x34

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
90004210:	2200      	movs	r2, #0
90004212:	2105      	movs	r1, #5
90004214:	2079      	movs	r0, #121	@ 0x79
    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
90004216:	642c      	str	r4, [r5, #64]	@ 0x40
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
90004218:	f002 fc06 	bl	90006a28 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
9000421c:	2079      	movs	r0, #121	@ 0x79

    /* USER CODE END JPEG_MspInit 1 */

  }

}
9000421e:	b002      	add	sp, #8
90004220:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
90004224:	f002 bc3c 	b.w	90006aa0 <HAL_NVIC_EnableIRQ>
      Error_Handler();
90004228:	f7ff ff32 	bl	90004090 <Error_Handler>
9000422c:	e7c1      	b.n	900041b2 <HAL_JPEG_MspInit+0x72>
      Error_Handler();
9000422e:	f7ff ff2f 	bl	90004090 <Error_Handler>
90004232:	e7ec      	b.n	9000420e <HAL_JPEG_MspInit+0xce>
      Error_Handler();
90004234:	f7ff ff2c 	bl	90004090 <Error_Handler>
90004238:	e7e3      	b.n	90004202 <HAL_JPEG_MspInit+0xc2>
      Error_Handler();
9000423a:	f7ff ff29 	bl	90004090 <Error_Handler>
9000423e:	e7bf      	b.n	900041c0 <HAL_JPEG_MspInit+0x80>
90004240:	52003000 	.word	0x52003000
90004244:	58024400 	.word	0x58024400
90004248:	24007568 	.word	0x24007568
9000424c:	240074fc 	.word	0x240074fc
90004250:	52000200 	.word	0x52000200
90004254:	520001c0 	.word	0x520001c0

90004258 <HAL_LTDC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hltdc: LTDC handle pointer
  * @retval None
  */
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
90004258:	b570      	push	{r4, r5, r6, lr}
9000425a:	b0ba      	sub	sp, #232	@ 0xe8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
9000425c:	2100      	movs	r1, #0
{
9000425e:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90004260:	22c0      	movs	r2, #192	@ 0xc0
90004262:	a80a      	add	r0, sp, #40	@ 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90004264:	9109      	str	r1, [sp, #36]	@ 0x24
90004266:	e9cd 1105 	strd	r1, r1, [sp, #20]
9000426a:	e9cd 1107 	strd	r1, r1, [sp, #28]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
9000426e:	f026 fb0f 	bl	9002a890 <memset>
  if(hltdc->Instance==LTDC)
90004272:	4b4a      	ldr	r3, [pc, #296]	@ (9000439c <HAL_LTDC_MspInit+0x144>)
90004274:	6822      	ldr	r2, [r4, #0]
90004276:	429a      	cmp	r2, r3
90004278:	d001      	beq.n	9000427e <HAL_LTDC_MspInit+0x26>

    /* USER CODE END LTDC_MspInit 1 */

  }

}
9000427a:	b03a      	add	sp, #232	@ 0xe8
9000427c:	bd70      	pop	{r4, r5, r6, pc}
    PeriphClkInitStruct.PLL3.PLL3P = 2;
9000427e:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90004280:	2205      	movs	r2, #5
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
90004282:	f04f 5400 	mov.w	r4, #536870912	@ 0x20000000
90004286:	2500      	movs	r5, #0
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90004288:	21a0      	movs	r1, #160	@ 0xa0
    PeriphClkInitStruct.PLL3.PLL3P = 2;
9000428a:	9316      	str	r3, [sp, #88]	@ 0x58
    PeriphClkInitStruct.PLL3.PLL3M = 5;
9000428c:	9214      	str	r2, [sp, #80]	@ 0x50
    PeriphClkInitStruct.PLL3.PLL3R = 88;
9000428e:	2258      	movs	r2, #88	@ 0x58
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
90004290:	9317      	str	r3, [sp, #92]	@ 0x5c
    PeriphClkInitStruct.PLL3.PLL3R = 88;
90004292:	f44f 6300 	mov.w	r3, #2048	@ 0x800
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90004296:	a80a      	add	r0, sp, #40	@ 0x28
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90004298:	9115      	str	r1, [sp, #84]	@ 0x54
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
9000429a:	e9cd 450a 	strd	r4, r5, [sp, #40]	@ 0x28
    PeriphClkInitStruct.PLL3.PLL3R = 88;
9000429e:	e9cd 2318 	strd	r2, r3, [sp, #96]	@ 0x60
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900042a2:	f007 f851 	bl	9000b348 <HAL_RCCEx_PeriphCLKConfig>
900042a6:	2800      	cmp	r0, #0
900042a8:	d174      	bne.n	90004394 <HAL_LTDC_MspInit+0x13c>
    __HAL_RCC_LTDC_CLK_ENABLE();
900042aa:	4b3d      	ldr	r3, [pc, #244]	@ (900043a0 <HAL_LTDC_MspInit+0x148>)
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
900042ac:	21fc      	movs	r1, #252	@ 0xfc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
900042ae:	2402      	movs	r4, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
900042b0:	2500      	movs	r5, #0
    __HAL_RCC_LTDC_CLK_ENABLE();
900042b2:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900042b6:	260e      	movs	r6, #14
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
900042b8:	483a      	ldr	r0, [pc, #232]	@ (900043a4 <HAL_LTDC_MspInit+0x14c>)
    __HAL_RCC_LTDC_CLK_ENABLE();
900042ba:	f042 0208 	orr.w	r2, r2, #8
900042be:	f8c3 20e4 	str.w	r2, [r3, #228]	@ 0xe4
900042c2:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
900042c6:	f002 0208 	and.w	r2, r2, #8
900042ca:	9200      	str	r2, [sp, #0]
900042cc:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOK_CLK_ENABLE();
900042ce:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900042d2:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
900042d6:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900042da:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900042de:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
900042e2:	9201      	str	r2, [sp, #4]
900042e4:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
900042e6:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900042ea:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
900042ee:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900042f2:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900042f6:	f402 7280 	and.w	r2, r2, #256	@ 0x100
900042fa:	9202      	str	r2, [sp, #8]
900042fc:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
900042fe:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004302:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
90004306:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
9000430a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000430e:	f402 7200 	and.w	r2, r2, #512	@ 0x200
90004312:	9203      	str	r2, [sp, #12]
90004314:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOH_CLK_ENABLE();
90004316:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000431a:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
9000431e:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90004322:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
90004326:	9105      	str	r1, [sp, #20]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
90004328:	a905      	add	r1, sp, #20
    __HAL_RCC_GPIOH_CLK_ENABLE();
9000432a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
9000432e:	9406      	str	r4, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90004330:	9609      	str	r6, [sp, #36]	@ 0x24
    __HAL_RCC_GPIOH_CLK_ENABLE();
90004332:	9304      	str	r3, [sp, #16]
90004334:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
90004336:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
9000433a:	f003 f855 	bl	900073e8 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
9000433e:	f24d 2303 	movw	r3, #53763	@ 0xd203
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90004342:	a905      	add	r1, sp, #20
90004344:	4818      	ldr	r0, [pc, #96]	@ (900043a8 <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
90004346:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90004348:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
9000434c:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90004350:	f003 f84a 	bl	900073e8 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90004354:	f64f 73fb 	movw	r3, #65531	@ 0xfffb
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90004358:	a905      	add	r1, sp, #20
9000435a:	4814      	ldr	r0, [pc, #80]	@ (900043ac <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
9000435c:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
9000435e:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90004362:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90004366:	f003 f83f 	bl	900073e8 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
9000436a:	f44f 7300 	mov.w	r3, #512	@ 0x200
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
9000436e:	a905      	add	r1, sp, #20
90004370:	480f      	ldr	r0, [pc, #60]	@ (900043b0 <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90004372:	9609      	str	r6, [sp, #36]	@ 0x24
    GPIO_InitStruct.Pin = GPIO_PIN_9;
90004374:	e9cd 3405 	strd	r3, r4, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
90004378:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
9000437c:	f003 f834 	bl	900073e8 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
90004380:	462a      	mov	r2, r5
90004382:	2105      	movs	r1, #5
90004384:	2058      	movs	r0, #88	@ 0x58
90004386:	f002 fb4f 	bl	90006a28 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
9000438a:	2058      	movs	r0, #88	@ 0x58
9000438c:	f002 fb88 	bl	90006aa0 <HAL_NVIC_EnableIRQ>
}
90004390:	b03a      	add	sp, #232	@ 0xe8
90004392:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
90004394:	f7ff fe7c 	bl	90004090 <Error_Handler>
90004398:	e787      	b.n	900042aa <HAL_LTDC_MspInit+0x52>
9000439a:	bf00      	nop
9000439c:	50001000 	.word	0x50001000
900043a0:	58024400 	.word	0x58024400
900043a4:	58022800 	.word	0x58022800
900043a8:	58022000 	.word	0x58022000
900043ac:	58022400 	.word	0x58022400
900043b0:	58021c00 	.word	0x58021c00

900043b4 <HAL_UART_MspInit>:
  * This function configures the hardware resources used in this example
  * @param huart: UART handle pointer
  * @retval None
  */
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
900043b4:	b5d0      	push	{r4, r6, r7, lr}
900043b6:	b0ba      	sub	sp, #232	@ 0xe8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900043b8:	2100      	movs	r1, #0
{
900043ba:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900043bc:	22c0      	movs	r2, #192	@ 0xc0
900043be:	a80a      	add	r0, sp, #40	@ 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900043c0:	9108      	str	r1, [sp, #32]
900043c2:	e9cd 1104 	strd	r1, r1, [sp, #16]
900043c6:	e9cd 1106 	strd	r1, r1, [sp, #24]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900043ca:	f026 fa61 	bl	9002a890 <memset>
  if(huart->Instance==USART1)
900043ce:	4b2d      	ldr	r3, [pc, #180]	@ (90004484 <HAL_UART_MspInit+0xd0>)
900043d0:	6822      	ldr	r2, [r4, #0]
900043d2:	429a      	cmp	r2, r3
900043d4:	d001      	beq.n	900043da <HAL_UART_MspInit+0x26>

    /* USER CODE END USART1_MspInit 1 */

  }

}
900043d6:	b03a      	add	sp, #232	@ 0xe8
900043d8:	bdd0      	pop	{r4, r6, r7, pc}
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
900043da:	2201      	movs	r2, #1
900043dc:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900043de:	a80a      	add	r0, sp, #40	@ 0x28
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
900043e0:	e9cd 230a 	strd	r2, r3, [sp, #40]	@ 0x28
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900043e4:	f006 ffb0 	bl	9000b348 <HAL_RCCEx_PeriphCLKConfig>
900043e8:	2800      	cmp	r0, #0
900043ea:	d148      	bne.n	9000447e <HAL_UART_MspInit+0xca>
    __HAL_RCC_USART1_CLK_ENABLE();
900043ec:	4b26      	ldr	r3, [pc, #152]	@ (90004488 <HAL_UART_MspInit+0xd4>)
    GPIO_InitStruct.Pin = GPIO_PIN_7;
900043ee:	2080      	movs	r0, #128	@ 0x80
900043f0:	2102      	movs	r1, #2
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
900043f2:	2407      	movs	r4, #7
    __HAL_RCC_USART1_CLK_ENABLE();
900043f4:	f8d3 20f0 	ldr.w	r2, [r3, #240]	@ 0xf0
    GPIO_InitStruct.Pin = GPIO_PIN_7;
900043f8:	2600      	movs	r6, #0
900043fa:	2700      	movs	r7, #0
    __HAL_RCC_USART1_CLK_ENABLE();
900043fc:	f042 0210 	orr.w	r2, r2, #16
90004400:	f8c3 20f0 	str.w	r2, [r3, #240]	@ 0xf0
90004404:	f8d3 20f0 	ldr.w	r2, [r3, #240]	@ 0xf0
90004408:	f002 0210 	and.w	r2, r2, #16
9000440c:	9201      	str	r2, [sp, #4]
9000440e:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOB_CLK_ENABLE();
90004410:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004414:	f042 0202 	orr.w	r2, r2, #2
90004418:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
9000441c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004420:	f002 0202 	and.w	r2, r2, #2
90004424:	9202      	str	r2, [sp, #8]
90004426:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
90004428:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000442c:	f042 0201 	orr.w	r2, r2, #1
90004430:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90004434:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
90004438:	9408      	str	r4, [sp, #32]
    __HAL_RCC_GPIOA_CLK_ENABLE();
9000443a:	f003 0301 	and.w	r3, r3, #1
    GPIO_InitStruct.Pin = GPIO_PIN_7;
9000443e:	e9cd 0104 	strd	r0, r1, [sp, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
90004442:	9303      	str	r3, [sp, #12]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90004444:	a904      	add	r1, sp, #16
90004446:	4811      	ldr	r0, [pc, #68]	@ (9000448c <HAL_UART_MspInit+0xd8>)
    __HAL_RCC_GPIOA_CLK_ENABLE();
90004448:	9b03      	ldr	r3, [sp, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_7;
9000444a:	e9cd 6706 	strd	r6, r7, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
9000444e:	f002 ffcb 	bl	900073e8 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
90004452:	2302      	movs	r3, #2
90004454:	f44f 7200 	mov.w	r2, #512	@ 0x200
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
90004458:	a904      	add	r1, sp, #16
9000445a:	480d      	ldr	r0, [pc, #52]	@ (90004490 <HAL_UART_MspInit+0xdc>)
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
9000445c:	9408      	str	r4, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
9000445e:	e9cd 2304 	strd	r2, r3, [sp, #16]
90004462:	e9cd 6706 	strd	r6, r7, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
90004466:	f002 ffbf 	bl	900073e8 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART1_IRQn, 5, 0);
9000446a:	2200      	movs	r2, #0
9000446c:	2105      	movs	r1, #5
9000446e:	2025      	movs	r0, #37	@ 0x25
90004470:	f002 fada 	bl	90006a28 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
90004474:	2025      	movs	r0, #37	@ 0x25
90004476:	f002 fb13 	bl	90006aa0 <HAL_NVIC_EnableIRQ>
}
9000447a:	b03a      	add	sp, #232	@ 0xe8
9000447c:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
9000447e:	f7ff fe07 	bl	90004090 <Error_Handler>
90004482:	e7b3      	b.n	900043ec <HAL_UART_MspInit+0x38>
90004484:	40011000 	.word	0x40011000
90004488:	58024400 	.word	0x58024400
9000448c:	58020400 	.word	0x58020400
90004490:	58020000 	.word	0x58020000

90004494 <HAL_SDRAM_MspInit>:
static void HAL_FMC_MspInit(void){
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
  if (FMC_Initialized) {
90004494:	4836      	ldr	r0, [pc, #216]	@ (90004570 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitTypeDef GPIO_InitStruct ={0};
90004496:	2300      	movs	r3, #0
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
90004498:	b5d0      	push	{r4, r6, r7, lr}
  if (FMC_Initialized) {
9000449a:	6801      	ldr	r1, [r0, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
9000449c:	b0b8      	sub	sp, #224	@ 0xe0
  GPIO_InitTypeDef GPIO_InitStruct ={0};
9000449e:	e9cd 3302 	strd	r3, r3, [sp, #8]
900044a2:	e9cd 3304 	strd	r3, r3, [sp, #16]
900044a6:	9306      	str	r3, [sp, #24]
  if (FMC_Initialized) {
900044a8:	b109      	cbz	r1, 900044ae <HAL_SDRAM_MspInit+0x1a>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
900044aa:	b038      	add	sp, #224	@ 0xe0
900044ac:	bdd0      	pop	{r4, r6, r7, pc}
  FMC_Initialized = 1;
900044ae:	2301      	movs	r3, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900044b0:	22b8      	movs	r2, #184	@ 0xb8
  FMC_Initialized = 1;
900044b2:	6003      	str	r3, [r0, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900044b4:	a80a      	add	r0, sp, #40	@ 0x28
900044b6:	f026 f9eb 	bl	9002a890 <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
900044ba:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
900044be:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900044c0:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
900044c2:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900044c6:	f006 ff3f 	bl	9000b348 <HAL_RCCEx_PeriphCLKConfig>
900044ca:	2800      	cmp	r0, #0
900044cc:	d14c      	bne.n	90004568 <HAL_SDRAM_MspInit+0xd4>
  __HAL_RCC_FMC_CLK_ENABLE();
900044ce:	4b29      	ldr	r3, [pc, #164]	@ (90004574 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900044d0:	f64f 7083 	movw	r0, #65411	@ 0xff83
900044d4:	2102      	movs	r1, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900044d6:	240c      	movs	r4, #12
  __HAL_RCC_FMC_CLK_ENABLE();
900044d8:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900044dc:	2600      	movs	r6, #0
900044de:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
900044e0:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
900044e4:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
900044e8:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900044ec:	9406      	str	r4, [sp, #24]
  __HAL_RCC_FMC_CLK_ENABLE();
900044ee:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900044f2:	e9cd 0102 	strd	r0, r1, [sp, #8]
  __HAL_RCC_FMC_CLK_ENABLE();
900044f6:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900044f8:	a902      	add	r1, sp, #8
900044fa:	481f      	ldr	r0, [pc, #124]	@ (90004578 <HAL_SDRAM_MspInit+0xe4>)
  __HAL_RCC_FMC_CLK_ENABLE();
900044fc:	9b01      	ldr	r3, [sp, #4]
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900044fe:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
90004502:	f002 ff71 	bl	900073e8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
90004506:	f248 1233 	movw	r2, #33075	@ 0x8133
9000450a:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
9000450c:	a902      	add	r1, sp, #8
9000450e:	481b      	ldr	r0, [pc, #108]	@ (9000457c <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004510:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
90004512:	e9cd 2302 	strd	r2, r3, [sp, #8]
90004516:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
9000451a:	f002 ff65 	bl	900073e8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
9000451e:	f24c 7203 	movw	r2, #50947	@ 0xc703
90004522:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90004524:	a902      	add	r1, sp, #8
90004526:	4816      	ldr	r0, [pc, #88]	@ (90004580 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004528:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
9000452a:	e9cd 2302 	strd	r2, r3, [sp, #8]
9000452e:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90004532:	f002 ff59 	bl	900073e8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90004536:	f64f 023f 	movw	r2, #63551	@ 0xf83f
9000453a:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
9000453c:	a902      	add	r1, sp, #8
9000453e:	4811      	ldr	r0, [pc, #68]	@ (90004584 <HAL_SDRAM_MspInit+0xf0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004540:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90004542:	e9cd 2302 	strd	r2, r3, [sp, #8]
90004546:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
9000454a:	f002 ff4d 	bl	900073e8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
9000454e:	22e0      	movs	r2, #224	@ 0xe0
90004550:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90004552:	a902      	add	r1, sp, #8
90004554:	480c      	ldr	r0, [pc, #48]	@ (90004588 <HAL_SDRAM_MspInit+0xf4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004556:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
90004558:	e9cd 6704 	strd	r6, r7, [sp, #16]
9000455c:	e9cd 2302 	strd	r2, r3, [sp, #8]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90004560:	f002 ff42 	bl	900073e8 <HAL_GPIO_Init>
}
90004564:	b038      	add	sp, #224	@ 0xe0
90004566:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
90004568:	f7ff fd92 	bl	90004090 <Error_Handler>
9000456c:	e7af      	b.n	900044ce <HAL_SDRAM_MspInit+0x3a>
9000456e:	bf00      	nop
90004570:	240076bc 	.word	0x240076bc
90004574:	58024400 	.word	0x58024400
90004578:	58021000 	.word	0x58021000
9000457c:	58021800 	.word	0x58021800
90004580:	58020c00 	.word	0x58020c00
90004584:	58021400 	.word	0x58021400
90004588:	58021c00 	.word	0x58021c00

9000458c <HAL_SDRAM_MspDeInit>:

static void HAL_FMC_MspDeInit(void){
  /* USER CODE BEGIN FMC_MspDeInit 0 */

  /* USER CODE END FMC_MspDeInit 0 */
  if (FMC_DeInitialized) {
9000458c:	4b13      	ldr	r3, [pc, #76]	@ (900045dc <HAL_SDRAM_MspDeInit+0x50>)
9000458e:	681a      	ldr	r2, [r3, #0]
90004590:	b102      	cbz	r2, 90004594 <HAL_SDRAM_MspDeInit+0x8>
90004592:	4770      	bx	lr
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
90004594:	b510      	push	{r4, lr}
  __HAL_RCC_FMC_CLK_DISABLE();
90004596:	4a12      	ldr	r2, [pc, #72]	@ (900045e0 <HAL_SDRAM_MspDeInit+0x54>)
  FMC_DeInitialized = 1;
90004598:	2401      	movs	r4, #1
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000459a:	f64f 7183 	movw	r1, #65411	@ 0xff83
9000459e:	4811      	ldr	r0, [pc, #68]	@ (900045e4 <HAL_SDRAM_MspDeInit+0x58>)
  FMC_DeInitialized = 1;
900045a0:	601c      	str	r4, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
900045a2:	f8d2 30d4 	ldr.w	r3, [r2, #212]	@ 0xd4
900045a6:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
900045aa:	f8c2 30d4 	str.w	r3, [r2, #212]	@ 0xd4
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900045ae:	f003 f921 	bl	900077f4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900045b2:	f248 1133 	movw	r1, #33075	@ 0x8133
900045b6:	480c      	ldr	r0, [pc, #48]	@ (900045e8 <HAL_SDRAM_MspDeInit+0x5c>)
900045b8:	f003 f91c 	bl	900077f4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
900045bc:	f24c 7103 	movw	r1, #50947	@ 0xc703
900045c0:	480a      	ldr	r0, [pc, #40]	@ (900045ec <HAL_SDRAM_MspDeInit+0x60>)
900045c2:	f003 f917 	bl	900077f4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
900045c6:	f64f 013f 	movw	r1, #63551	@ 0xf83f
900045ca:	4809      	ldr	r0, [pc, #36]	@ (900045f0 <HAL_SDRAM_MspDeInit+0x64>)
900045cc:	f003 f912 	bl	900077f4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
900045d0:	21e0      	movs	r1, #224	@ 0xe0
900045d2:	4808      	ldr	r0, [pc, #32]	@ (900045f4 <HAL_SDRAM_MspDeInit+0x68>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
900045d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
900045d8:	f003 b90c 	b.w	900077f4 <HAL_GPIO_DeInit>
900045dc:	240076b8 	.word	0x240076b8
900045e0:	58024400 	.word	0x58024400
900045e4:	58021000 	.word	0x58021000
900045e8:	58021800 	.word	0x58021800
900045ec:	58020c00 	.word	0x58020c00
900045f0:	58021400 	.word	0x58021400
900045f4:	58021c00 	.word	0x58021c00

900045f8 <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;
  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;

  /*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
900045f8:	280f      	cmp	r0, #15
900045fa:	d901      	bls.n	90004600 <HAL_InitTick+0x8>
     HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
     uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
900045fc:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
900045fe:	4770      	bx	lr
{
90004600:	b530      	push	{r4, r5, lr}
     HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
90004602:	4601      	mov	r1, r0
{
90004604:	b08b      	sub	sp, #44	@ 0x2c
     HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
90004606:	2200      	movs	r2, #0
90004608:	4604      	mov	r4, r0
9000460a:	2036      	movs	r0, #54	@ 0x36
9000460c:	f002 fa0c 	bl	90006a28 <HAL_NVIC_SetPriority>
     HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
90004610:	2036      	movs	r0, #54	@ 0x36
90004612:	f002 fa45 	bl	90006aa0 <HAL_NVIC_EnableIRQ>
  __HAL_RCC_TIM6_CLK_ENABLE();
90004616:	4b1b      	ldr	r3, [pc, #108]	@ (90004684 <HAL_InitTick+0x8c>)
     uwTickPrio = TickPriority;
90004618:	4a1b      	ldr	r2, [pc, #108]	@ (90004688 <HAL_InitTick+0x90>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
9000461a:	4669      	mov	r1, sp
9000461c:	a802      	add	r0, sp, #8
     uwTickPrio = TickPriority;
9000461e:	6014      	str	r4, [r2, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
90004620:	f8d3 20e8 	ldr.w	r2, [r3, #232]	@ 0xe8
90004624:	f042 0210 	orr.w	r2, r2, #16
90004628:	f8c3 20e8 	str.w	r2, [r3, #232]	@ 0xe8
9000462c:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
90004630:	f003 0310 	and.w	r3, r3, #16
90004634:	9301      	str	r3, [sp, #4]
90004636:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
90004638:	f006 fd7a 	bl	9000b130 <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
9000463c:	9b07      	ldr	r3, [sp, #28]
9000463e:	b9c3      	cbnz	r3, 90004672 <HAL_InitTick+0x7a>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
90004640:	f006 fce6 	bl	9000b010 <HAL_RCC_GetPCLK1Freq>
90004644:	4603      	mov	r3, r0
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90004646:	4911      	ldr	r1, [pc, #68]	@ (9000468c <HAL_InitTick+0x94>)
  htim6.Init.ClockDivision = 0;
90004648:	2200      	movs	r2, #0
  htim6.Instance = TIM6;
9000464a:	4c11      	ldr	r4, [pc, #68]	@ (90004690 <HAL_InitTick+0x98>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
9000464c:	fba1 1303 	umull	r1, r3, r1, r3
  htim6.Instance = TIM6;
90004650:	4d10      	ldr	r5, [pc, #64]	@ (90004694 <HAL_InitTick+0x9c>)
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90004652:	f240 31e7 	movw	r1, #999	@ 0x3e7
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90004656:	4620      	mov	r0, r4
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90004658:	0c9b      	lsrs	r3, r3, #18
  htim6.Instance = TIM6;
9000465a:	6025      	str	r5, [r4, #0]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
9000465c:	60a2      	str	r2, [r4, #8]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
9000465e:	3b01      	subs	r3, #1
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90004660:	e9c4 1203 	strd	r1, r2, [r4, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
90004664:	6063      	str	r3, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90004666:	f007 ff6b 	bl	9000c540 <HAL_TIM_Base_Init>
9000466a:	b130      	cbz	r0, 9000467a <HAL_InitTick+0x82>
    return HAL_ERROR;
9000466c:	2001      	movs	r0, #1
}
9000466e:	b00b      	add	sp, #44	@ 0x2c
90004670:	bd30      	pop	{r4, r5, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
90004672:	f006 fccd 	bl	9000b010 <HAL_RCC_GetPCLK1Freq>
90004676:	0043      	lsls	r3, r0, #1
90004678:	e7e5      	b.n	90004646 <HAL_InitTick+0x4e>
    return HAL_TIM_Base_Start_IT(&htim6);
9000467a:	4620      	mov	r0, r4
9000467c:	f008 f806 	bl	9000c68c <HAL_TIM_Base_Start_IT>
90004680:	e7f5      	b.n	9000466e <HAL_InitTick+0x76>
90004682:	bf00      	nop
90004684:	58024400 	.word	0x58024400
90004688:	24000080 	.word	0x24000080
9000468c:	431bde83 	.word	0x431bde83
90004690:	240076c0 	.word	0x240076c0
90004694:	40001000 	.word	0x40001000

90004698 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
90004698:	4770      	bx	lr
9000469a:	bf00      	nop

9000469c <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
9000469c:	e7fe      	b.n	9000469c <HardFault_Handler>
9000469e:	bf00      	nop

900046a0 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
900046a0:	e7fe      	b.n	900046a0 <MemManage_Handler>
900046a2:	bf00      	nop

900046a4 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
900046a4:	e7fe      	b.n	900046a4 <BusFault_Handler>
900046a6:	bf00      	nop

900046a8 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
900046a8:	e7fe      	b.n	900046a8 <UsageFault_Handler>
900046aa:	bf00      	nop

900046ac <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
900046ac:	4770      	bx	lr
900046ae:	bf00      	nop

900046b0 <USART1_IRQHandler>:
void USART1_IRQHandler(void)
{
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
900046b0:	4801      	ldr	r0, [pc, #4]	@ (900046b8 <USART1_IRQHandler+0x8>)
900046b2:	f008 bbf7 	b.w	9000cea4 <HAL_UART_IRQHandler>
900046b6:	bf00      	nop
900046b8:	240073c0 	.word	0x240073c0

900046bc <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
900046bc:	4801      	ldr	r0, [pc, #4]	@ (900046c4 <TIM6_DAC_IRQHandler+0x8>)
900046be:	f008 b83f 	b.w	9000c740 <HAL_TIM_IRQHandler>
900046c2:	bf00      	nop
900046c4:	240076c0 	.word	0x240076c0

900046c8 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
900046c8:	4801      	ldr	r0, [pc, #4]	@ (900046d0 <LTDC_IRQHandler+0x8>)
900046ca:	f005 bb9d 	b.w	90009e08 <HAL_LTDC_IRQHandler>
900046ce:	bf00      	nop
900046d0:	24007454 	.word	0x24007454

900046d4 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
900046d4:	4801      	ldr	r0, [pc, #4]	@ (900046dc <DMA2D_IRQHandler+0x8>)
900046d6:	f002 bd89 	b.w	900071ec <HAL_DMA2D_IRQHandler>
900046da:	bf00      	nop
900046dc:	2400762c 	.word	0x2400762c

900046e0 <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
900046e0:	4801      	ldr	r0, [pc, #4]	@ (900046e8 <JPEG_IRQHandler+0x8>)
900046e2:	f005 ba95 	b.w	90009c10 <HAL_JPEG_IRQHandler>
900046e6:	bf00      	nop
900046e8:	240075d4 	.word	0x240075d4

900046ec <MDMA_IRQHandler>:
void MDMA_IRQHandler(void)
{
  /* USER CODE BEGIN MDMA_IRQn 0 */

  /* USER CODE END MDMA_IRQn 0 */
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
900046ec:	4804      	ldr	r0, [pc, #16]	@ (90004700 <MDMA_IRQHandler+0x14>)
{
900046ee:	b508      	push	{r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
900046f0:	f005 fe54 	bl	9000a39c <HAL_MDMA_IRQHandler>
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
900046f4:	4803      	ldr	r0, [pc, #12]	@ (90004704 <MDMA_IRQHandler+0x18>)
  /* USER CODE BEGIN MDMA_IRQn 1 */

  /* USER CODE END MDMA_IRQn 1 */
}
900046f6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
900046fa:	f005 be4f 	b.w	9000a39c <HAL_MDMA_IRQHandler>
900046fe:	bf00      	nop
90004700:	240074fc 	.word	0x240074fc
90004704:	24007568 	.word	0x24007568

90004708 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
90004708:	2001      	movs	r0, #1
9000470a:	4770      	bx	lr

9000470c <_kill>:

int _kill(int pid, int sig)
{
9000470c:	b508      	push	{r3, lr}
	errno = EINVAL;
9000470e:	f026 f9d1 	bl	9002aab4 <__errno>
90004712:	2216      	movs	r2, #22
90004714:	4603      	mov	r3, r0
	return -1;
}
90004716:	f04f 30ff 	mov.w	r0, #4294967295
	errno = EINVAL;
9000471a:	601a      	str	r2, [r3, #0]
}
9000471c:	bd08      	pop	{r3, pc}
9000471e:	bf00      	nop

90004720 <_exit>:

void _exit (int status)
{
90004720:	b508      	push	{r3, lr}
	errno = EINVAL;
90004722:	f026 f9c7 	bl	9002aab4 <__errno>
90004726:	2316      	movs	r3, #22
90004728:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
9000472a:	e7fe      	b.n	9000472a <_exit+0xa>

9000472c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
9000472c:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000472e:	1e16      	subs	r6, r2, #0
90004730:	dd07      	ble.n	90004742 <_read+0x16>
90004732:	460c      	mov	r4, r1
90004734:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
90004736:	f3af 8000 	nop.w
9000473a:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000473e:	42a5      	cmp	r5, r4
90004740:	d1f9      	bne.n	90004736 <_read+0xa>
	}

return len;
}
90004742:	4630      	mov	r0, r6
90004744:	bd70      	pop	{r4, r5, r6, pc}
90004746:	bf00      	nop

90004748 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
90004748:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000474a:	1e16      	subs	r6, r2, #0
9000474c:	dd07      	ble.n	9000475e <_write+0x16>
9000474e:	460c      	mov	r4, r1
90004750:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
90004752:	f814 0b01 	ldrb.w	r0, [r4], #1
90004756:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000475a:	42a5      	cmp	r5, r4
9000475c:	d1f9      	bne.n	90004752 <_write+0xa>
	}
	return len;
}
9000475e:	4630      	mov	r0, r6
90004760:	bd70      	pop	{r4, r5, r6, pc}
90004762:	bf00      	nop

90004764 <_close>:

int _close(int file)
{
	return -1;
}
90004764:	f04f 30ff 	mov.w	r0, #4294967295
90004768:	4770      	bx	lr
9000476a:	bf00      	nop

9000476c <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
9000476c:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
	return 0;
}
90004770:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
90004772:	604b      	str	r3, [r1, #4]
}
90004774:	4770      	bx	lr
90004776:	bf00      	nop

90004778 <_isatty>:

int _isatty(int file)
{
	return 1;
}
90004778:	2001      	movs	r0, #1
9000477a:	4770      	bx	lr

9000477c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
9000477c:	2000      	movs	r0, #0
9000477e:	4770      	bx	lr

90004780 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
90004780:	4a0c      	ldr	r2, [pc, #48]	@ (900047b4 <_sbrk+0x34>)
{
90004782:	b508      	push	{r3, lr}
90004784:	4603      	mov	r3, r0
	if (heap_end == 0)
90004786:	6810      	ldr	r0, [r2, #0]
90004788:	b128      	cbz	r0, 90004796 <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
9000478a:	4403      	add	r3, r0
9000478c:	4669      	mov	r1, sp
9000478e:	428b      	cmp	r3, r1
90004790:	d808      	bhi.n	900047a4 <_sbrk+0x24>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
90004792:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
90004794:	bd08      	pop	{r3, pc}
		heap_end = &end;
90004796:	4908      	ldr	r1, [pc, #32]	@ (900047b8 <_sbrk+0x38>)
90004798:	4608      	mov	r0, r1
9000479a:	6011      	str	r1, [r2, #0]
	if (heap_end + incr > stack_ptr)
9000479c:	4669      	mov	r1, sp
9000479e:	4403      	add	r3, r0
900047a0:	428b      	cmp	r3, r1
900047a2:	d9f6      	bls.n	90004792 <_sbrk+0x12>
		errno = ENOMEM;
900047a4:	f026 f986 	bl	9002aab4 <__errno>
900047a8:	220c      	movs	r2, #12
900047aa:	4603      	mov	r3, r0
		return (caddr_t) -1;
900047ac:	f04f 30ff 	mov.w	r0, #4294967295
		errno = ENOMEM;
900047b0:	601a      	str	r2, [r3, #0]
}
900047b2:	bd08      	pop	{r3, pc}
900047b4:	2400770c 	.word	0x2400770c
900047b8:	240225a8 	.word	0x240225a8

900047bc <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
900047bc:	4770      	bx	lr
900047be:	bf00      	nop

900047c0 <_ZN23ApplicationFontProviderD0Ev>:
900047c0:	b510      	push	{r4, lr}
900047c2:	4604      	mov	r4, r0
900047c4:	2104      	movs	r1, #4
900047c6:	f025 fa51 	bl	90029c6c <_ZdlPvj>
900047ca:	4620      	mov	r0, r4
900047cc:	bd10      	pop	{r4, pc}
900047ce:	bf00      	nop

900047d0 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
900047d0:	2901      	cmp	r1, #1
{
900047d2:	b508      	push	{r3, lr}
    switch (typography)
900047d4:	d00c      	beq.n	900047f0 <_ZN23ApplicationFontProvider7getFontEt+0x20>
900047d6:	2902      	cmp	r1, #2
900047d8:	d004      	beq.n	900047e4 <_ZN23ApplicationFontProvider7getFontEt+0x14>
900047da:	b939      	cbnz	r1, 900047ec <_ZN23ApplicationFontProvider7getFontEt+0x1c>
    {
    case Typography::DEFAULT:
        // calibri_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
900047dc:	f000 feea 	bl	900055b4 <_ZN17TypedTextDatabase8getFontsEv>
900047e0:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
900047e2:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
900047e4:	f000 fee6 	bl	900055b4 <_ZN17TypedTextDatabase8getFontsEv>
900047e8:	6880      	ldr	r0, [r0, #8]
}
900047ea:	bd08      	pop	{r3, pc}
    switch (typography)
900047ec:	2000      	movs	r0, #0
}
900047ee:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
900047f0:	f000 fee0 	bl	900055b4 <_ZN17TypedTextDatabase8getFontsEv>
900047f4:	6840      	ldr	r0, [r0, #4]
}
900047f6:	bd08      	pop	{r3, pc}

900047f8 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
900047f8:	4800      	ldr	r0, [pc, #0]	@ (900047fc <_ZN14BitmapDatabase11getInstanceEv+0x4>)
900047fa:	4770      	bx	lr
900047fc:	9002d498 	.word	0x9002d498

90004800 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
90004800:	2003      	movs	r0, #3
90004802:	4770      	bx	lr

90004804 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
    {
        if (unicode == 0)
90004804:	b169      	cbz	r1, 90004822 <_ZNK8touchgfx4Font8getGlyphEt+0x1e>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90004806:	6802      	ldr	r2, [r0, #0]
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
90004808:	b530      	push	{r4, r5, lr}
9000480a:	b083      	sub	sp, #12
        const uint8_t* dummyPixelDataPointer = 0;
9000480c:	2400      	movs	r4, #0
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
9000480e:	6895      	ldr	r5, [r2, #8]
90004810:	f10d 0303 	add.w	r3, sp, #3
90004814:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
90004816:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
90004818:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
9000481c:	47a8      	blx	r5
        return glyph;
    }
9000481e:	b003      	add	sp, #12
90004820:	bd30      	pop	{r4, r5, pc}
            return 0;
90004822:	4608      	mov	r0, r1
    }
90004824:	4770      	bx	lr
90004826:	bf00      	nop

90004828 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
90004828:	89c0      	ldrh	r0, [r0, #14]
9000482a:	4770      	bx	lr

9000482c <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
9000482c:	8a00      	ldrh	r0, [r0, #16]
9000482e:	4770      	bx	lr

90004830 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
90004830:	88c0      	ldrh	r0, [r0, #6]
90004832:	4770      	bx	lr

90004834 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
90004834:	8880      	ldrh	r0, [r0, #4]
90004836:	4770      	bx	lr

90004838 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
90004838:	7a80      	ldrb	r0, [r0, #10]
    }
9000483a:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
9000483e:	4770      	bx	lr

90004840 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
90004840:	7a80      	ldrb	r0, [r0, #10]
    }
90004842:	09c0      	lsrs	r0, r0, #7
90004844:	4770      	bx	lr
90004846:	bf00      	nop

90004848 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
90004848:	2000      	movs	r0, #0
9000484a:	4770      	bx	lr

9000484c <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
9000484c:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 90004854 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
90004850:	4770      	bx	lr
90004852:	bf00      	nop
90004854:	00000000 	.word	0x00000000

90004858 <_ZN8touchgfx9TypedTextD1Ev>:
    }
90004858:	4770      	bx	lr
9000485a:	bf00      	nop

9000485c <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
9000485c:	b510      	push	{r4, lr}
9000485e:	4604      	mov	r4, r0
    }
90004860:	2108      	movs	r1, #8
90004862:	f025 fa03 	bl	90029c6c <_ZdlPvj>
90004866:	4620      	mov	r0, r4
90004868:	bd10      	pop	{r4, pc}
9000486a:	bf00      	nop

9000486c <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
9000486c:	4770      	bx	lr
9000486e:	bf00      	nop

90004870 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
90004870:	f500 7398 	add.w	r3, r0, #304	@ 0x130
90004874:	6808      	ldr	r0, [r1, #0]
90004876:	6849      	ldr	r1, [r1, #4]
90004878:	c303      	stmia	r3!, {r0, r1}
    }
9000487a:	4770      	bx	lr

9000487c <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
9000487c:	4770      	bx	lr
9000487e:	bf00      	nop

90004880 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
90004880:	4770      	bx	lr
90004882:	bf00      	nop

90004884 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
90004884:	6041      	str	r1, [r0, #4]
    }
90004886:	4770      	bx	lr

90004888 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90004888:	4770      	bx	lr
9000488a:	bf00      	nop

9000488c <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
9000488c:	4770      	bx	lr
9000488e:	bf00      	nop

90004890 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
90004890:	4905      	ldr	r1, [pc, #20]	@ (900048a8 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x18>)
90004892:	2200      	movs	r2, #0
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
90004894:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90004898:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
9000489c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
900048a0:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
900048a4:	4770      	bx	lr
900048a6:	bf00      	nop
900048a8:	90004929 	.word	0x90004929

900048ac <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
900048ac:	2301      	movs	r3, #1
900048ae:	7203      	strb	r3, [r0, #8]
    }
900048b0:	4770      	bx	lr
900048b2:	bf00      	nop

900048b4 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
900048b4:	4770      	bx	lr
900048b6:	bf00      	nop

900048b8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
    {
        (pobject->*pmemfun)();
900048b8:	1d01      	adds	r1, r0, #4
900048ba:	c90e      	ldmia	r1, {r1, r2, r3}
900048bc:	ea4f 0c63 	mov.w	ip, r3, asr #1
900048c0:	eb01 0063 	add.w	r0, r1, r3, asr #1
900048c4:	07db      	lsls	r3, r3, #31
900048c6:	d502      	bpl.n	900048ce <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x16>
900048c8:	f851 300c 	ldr.w	r3, [r1, ip]
900048cc:	589a      	ldr	r2, [r3, r2]
900048ce:	4710      	bx	r2

900048d0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
900048d0:	6843      	ldr	r3, [r0, #4]
900048d2:	b13b      	cbz	r3, 900048e4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
900048d4:	6883      	ldr	r3, [r0, #8]
900048d6:	b10b      	cbz	r3, 900048dc <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0xc>
900048d8:	2001      	movs	r0, #1
    }
900048da:	4770      	bx	lr
900048dc:	68c0      	ldr	r0, [r0, #12]
900048de:	f000 0001 	and.w	r0, r0, #1
900048e2:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
900048e4:	4618      	mov	r0, r3
900048e6:	4770      	bx	lr

900048e8 <_ZN8touchgfx12NoTransitionD0Ev>:
900048e8:	b510      	push	{r4, lr}
900048ea:	4604      	mov	r4, r0
900048ec:	210c      	movs	r1, #12
900048ee:	f025 f9bd 	bl	90029c6c <_ZdlPvj>
900048f2:	4620      	mov	r0, r4
900048f4:	bd10      	pop	{r4, pc}
900048f6:	bf00      	nop

900048f8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
900048f8:	b510      	push	{r4, lr}
900048fa:	4604      	mov	r4, r0
900048fc:	2110      	movs	r1, #16
900048fe:	f025 f9b5 	bl	90029c6c <_ZdlPvj>
90004902:	4620      	mov	r0, r4
90004904:	bd10      	pop	{r4, pc}
90004906:	bf00      	nop

90004908 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
90004908:	b510      	push	{r4, lr}
9000490a:	4604      	mov	r4, r0
9000490c:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
90004910:	f025 f9ac 	bl	90029c6c <_ZdlPvj>
90004914:	4620      	mov	r0, r4
90004916:	bd10      	pop	{r4, pc}

90004918 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
90004918:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
9000491a:	f012 fb77 	bl	9001700c <_ZN8touchgfx11Application11getInstanceEv>
9000491e:	6803      	ldr	r3, [r0, #0]
    }
90004920:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
90004924:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90004926:	4718      	bx	r3

90004928 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
90004928:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
9000492c:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
90004930:	4607      	mov	r7, r0
90004932:	b081      	sub	sp, #4
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004934:	68b0      	ldr	r0, [r6, #8]
90004936:	6803      	ldr	r3, [r0, #0]
90004938:	6a1b      	ldr	r3, [r3, #32]
9000493a:	4798      	blx	r3
9000493c:	f5b0 7fa8 	cmp.w	r0, #336	@ 0x150
90004940:	f0c0 809d 	bcc.w	90004a7e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x156>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004944:	6870      	ldr	r0, [r6, #4]
90004946:	6803      	ldr	r3, [r0, #0]
90004948:	6a1b      	ldr	r3, [r3, #32]
9000494a:	4798      	blx	r3
9000494c:	280f      	cmp	r0, #15
9000494e:	f240 80a2 	bls.w	90004a96 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x16e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004952:	68f0      	ldr	r0, [r6, #12]
90004954:	6803      	ldr	r3, [r0, #0]
90004956:	6a1b      	ldr	r3, [r3, #32]
90004958:	4798      	blx	r3
9000495a:	280b      	cmp	r0, #11
9000495c:	f240 8095 	bls.w	90004a8a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x162>
    if (*currentTrans)
90004960:	f8df 9164 	ldr.w	r9, [pc, #356]	@ 90004ac8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1a0>
    Application::getInstance()->clearAllTimerWidgets();
90004964:	f012 fb52 	bl	9001700c <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
90004968:	3004      	adds	r0, #4
9000496a:	f012 fb74 	bl	90017056 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
9000496e:	f8d9 0000 	ldr.w	r0, [r9]
90004972:	b130      	cbz	r0, 90004982 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->tearDown();
90004974:	6803      	ldr	r3, [r0, #0]
90004976:	494b      	ldr	r1, [pc, #300]	@ (90004aa4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x17c>)
90004978:	68da      	ldr	r2, [r3, #12]
9000497a:	428a      	cmp	r2, r1
9000497c:	d178      	bne.n	90004a70 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
        (*currentTrans)->~Transition();
9000497e:	681b      	ldr	r3, [r3, #0]
90004980:	4798      	blx	r3
    if (*currentScreen)
90004982:	f8df 8148 	ldr.w	r8, [pc, #328]	@ 90004acc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1a4>
90004986:	f8d8 0000 	ldr.w	r0, [r8]
9000498a:	2800      	cmp	r0, #0
9000498c:	d062      	beq.n	90004a54 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12c>
        (*currentScreen)->tearDownScreen();
9000498e:	6803      	ldr	r3, [r0, #0]
90004990:	695b      	ldr	r3, [r3, #20]
90004992:	4798      	blx	r3
    if (*currentPresenter)
90004994:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004998:	2800      	cmp	r0, #0
9000499a:	d056      	beq.n	90004a4a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x122>
        (*currentPresenter)->deactivate();
9000499c:	6803      	ldr	r3, [r0, #0]
9000499e:	685b      	ldr	r3, [r3, #4]
900049a0:	4798      	blx	r3
    if (*currentScreen)
900049a2:	f8d8 0000 	ldr.w	r0, [r8]
900049a6:	b110      	cbz	r0, 900049ae <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x86>
        (*currentScreen)->~Screen();
900049a8:	6803      	ldr	r3, [r0, #0]
900049aa:	681b      	ldr	r3, [r3, #0]
900049ac:	4798      	blx	r3
    if (*currentPresenter)
900049ae:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
900049b2:	b110      	cbz	r0, 900049ba <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x92>
        (*currentPresenter)->~Presenter();
900049b4:	6803      	ldr	r3, [r0, #0]
900049b6:	689b      	ldr	r3, [r3, #8]
900049b8:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
900049ba:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
900049bc:	2100      	movs	r1, #0
        : screenContainer(0), done(false)
900049be:	f04f 0b00 	mov.w	fp, #0
900049c2:	6803      	ldr	r3, [r0, #0]
900049c4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900049c6:	4798      	blx	r3
900049c8:	4b37      	ldr	r3, [pc, #220]	@ (90004aa8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x180>)
900049ca:	4604      	mov	r4, r0
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
900049cc:	68b0      	ldr	r0, [r6, #8]
900049ce:	4659      	mov	r1, fp
900049d0:	6023      	str	r3, [r4, #0]
900049d2:	6803      	ldr	r3, [r0, #0]
900049d4:	f8c4 b004 	str.w	fp, [r4, #4]
900049d8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900049da:	f884 b008 	strb.w	fp, [r4, #8]
900049de:	4798      	blx	r3
900049e0:	4605      	mov	r5, r0
900049e2:	f000 fe79 	bl	900056d8 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
900049e6:	6870      	ldr	r0, [r6, #4]
900049e8:	4659      	mov	r1, fp
900049ea:	6803      	ldr	r3, [r0, #0]
900049ec:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900049ee:	4798      	blx	r3
900049f0:	4606      	mov	r6, r0
900049f2:	4629      	mov	r1, r5
900049f4:	f000 fe46 	bl	90005684 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
900049f8:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
900049fa:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
900049fe:	4628      	mov	r0, r5
    *currentTrans = newTransition;
90004a00:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
90004a04:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
90004a08:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90004a0c:	682b      	ldr	r3, [r5, #0]

    virtual void updateTextBox(const char * data);

    void bind(Model* m)
    {
        model = m;
90004a0e:	f8c6 a008 	str.w	sl, [r6, #8]
90004a12:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
90004a14:	63ee      	str	r6, [r5, #60]	@ 0x3c
90004a16:	4798      	blx	r3
    newPresenter->activate();
90004a18:	6833      	ldr	r3, [r6, #0]
90004a1a:	4630      	mov	r0, r6
90004a1c:	681b      	ldr	r3, [r3, #0]
90004a1e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90004a20:	4621      	mov	r1, r4
90004a22:	4628      	mov	r0, r5
90004a24:	f014 fccc 	bl	900193c0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90004a28:	6823      	ldr	r3, [r4, #0]
90004a2a:	4920      	ldr	r1, [pc, #128]	@ (90004aac <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x184>)
90004a2c:	691a      	ldr	r2, [r3, #16]
90004a2e:	428a      	cmp	r2, r1
90004a30:	d11a      	bne.n	90004a68 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>
    newTransition->invalidate();
90004a32:	695b      	ldr	r3, [r3, #20]
90004a34:	4a1e      	ldr	r2, [pc, #120]	@ (90004ab0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x188>)
90004a36:	4293      	cmp	r3, r2
90004a38:	d111      	bne.n	90004a5e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x136>
        Application::getInstance()->invalidate();
90004a3a:	f012 fae7 	bl	9001700c <_ZN8touchgfx11Application11getInstanceEv>
90004a3e:	6803      	ldr	r3, [r0, #0]
90004a40:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
}
90004a42:	b001      	add	sp, #4
90004a44:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004a48:	4718      	bx	r3
    if (*currentScreen)
90004a4a:	f8d8 0000 	ldr.w	r0, [r8]
90004a4e:	2800      	cmp	r0, #0
90004a50:	d1aa      	bne.n	900049a8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x80>
90004a52:	e7b2      	b.n	900049ba <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x92>
    if (*currentPresenter)
90004a54:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004a58:	2800      	cmp	r0, #0
90004a5a:	d19f      	bne.n	9000499c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x74>
90004a5c:	e7ad      	b.n	900049ba <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x92>
    newTransition->invalidate();
90004a5e:	4620      	mov	r0, r4
90004a60:	b001      	add	sp, #4
90004a62:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004a66:	4718      	bx	r3
    newTransition->init();
90004a68:	4620      	mov	r0, r4
90004a6a:	4790      	blx	r2
    newTransition->invalidate();
90004a6c:	6823      	ldr	r3, [r4, #0]
90004a6e:	e7e0      	b.n	90004a32 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x10a>
        (*currentTrans)->tearDown();
90004a70:	4790      	blx	r2
    if (*currentTrans)
90004a72:	f8d9 0000 	ldr.w	r0, [r9]
90004a76:	2800      	cmp	r0, #0
90004a78:	d083      	beq.n	90004982 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->~Transition();
90004a7a:	6803      	ldr	r3, [r0, #0]
90004a7c:	e77f      	b.n	9000497e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x56>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004a7e:	4b0d      	ldr	r3, [pc, #52]	@ (90004ab4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x18c>)
90004a80:	21a3      	movs	r1, #163	@ 0xa3
90004a82:	4a0d      	ldr	r2, [pc, #52]	@ (90004ab8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x190>)
90004a84:	480d      	ldr	r0, [pc, #52]	@ (90004abc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x194>)
90004a86:	f025 fc67 	bl	9002a358 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004a8a:	4b0d      	ldr	r3, [pc, #52]	@ (90004ac0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x198>)
90004a8c:	21a5      	movs	r1, #165	@ 0xa5
90004a8e:	4a0a      	ldr	r2, [pc, #40]	@ (90004ab8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x190>)
90004a90:	480a      	ldr	r0, [pc, #40]	@ (90004abc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x194>)
90004a92:	f025 fc61 	bl	9002a358 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004a96:	4b0b      	ldr	r3, [pc, #44]	@ (90004ac4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x19c>)
90004a98:	21a4      	movs	r1, #164	@ 0xa4
90004a9a:	4a07      	ldr	r2, [pc, #28]	@ (90004ab8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x190>)
90004a9c:	4807      	ldr	r0, [pc, #28]	@ (90004abc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x194>)
90004a9e:	f025 fc5b 	bl	9002a358 <__assert_func>
90004aa2:	bf00      	nop
90004aa4:	9000487d 	.word	0x9000487d
90004aa8:	9002d558 	.word	0x9002d558
90004aac:	90004881 	.word	0x90004881
90004ab0:	90004919 	.word	0x90004919
90004ab4:	9002ca0c 	.word	0x9002ca0c
90004ab8:	9002ca9c 	.word	0x9002ca9c
90004abc:	9002cb70 	.word	0x9002cb70
90004ac0:	9002cc5c 	.word	0x9002cc5c
90004ac4:	9002cbb8 	.word	0x9002cbb8
90004ac8:	240218ac 	.word	0x240218ac
90004acc:	240218a8 	.word	0x240218a8

90004ad0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    virtual void handlePendingScreenTransition()
90004ad0:	b570      	push	{r4, r5, r6, lr}
90004ad2:	4604      	mov	r4, r0
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90004ad4:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
90004ad8:	b1b8      	cbz	r0, 90004b0a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90004ada:	6802      	ldr	r2, [r0, #0]
90004adc:	4916      	ldr	r1, [pc, #88]	@ (90004b38 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x68>)
90004ade:	68d3      	ldr	r3, [r2, #12]
90004ae0:	428b      	cmp	r3, r1
90004ae2:	d11f      	bne.n	90004b24 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x54>
        return (pobject != 0) && (pmemfun != 0);
90004ae4:	6843      	ldr	r3, [r0, #4]
90004ae6:	b183      	cbz	r3, 90004b0a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90004ae8:	6881      	ldr	r1, [r0, #8]
90004aea:	b179      	cbz	r1, 90004b0c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3c>
            pendingScreenTransitionCallback->execute();
90004aec:	6892      	ldr	r2, [r2, #8]
90004aee:	4b13      	ldr	r3, [pc, #76]	@ (90004b3c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6c>)
90004af0:	429a      	cmp	r2, r3
90004af2:	d11e      	bne.n	90004b32 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x62>
        (pobject->*pmemfun)();
90004af4:	68c2      	ldr	r2, [r0, #12]
90004af6:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
90004afa:	eb03 0062 	add.w	r0, r3, r2, asr #1
90004afe:	07d3      	lsls	r3, r2, #31
90004b00:	d40d      	bmi.n	90004b1e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x4e>
90004b02:	4788      	blx	r1
            pendingScreenTransitionCallback = 0;
90004b04:	2300      	movs	r3, #0
90004b06:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
90004b0a:	bd70      	pop	{r4, r5, r6, pc}
        return (pobject != 0) && (pmemfun != 0);
90004b0c:	68c5      	ldr	r5, [r0, #12]
90004b0e:	07ee      	lsls	r6, r5, #31
90004b10:	d5fb      	bpl.n	90004b0a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
90004b12:	6892      	ldr	r2, [r2, #8]
90004b14:	4e09      	ldr	r6, [pc, #36]	@ (90004b3c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6c>)
90004b16:	42b2      	cmp	r2, r6
90004b18:	d10b      	bne.n	90004b32 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x62>
        (pobject->*pmemfun)();
90004b1a:	eb03 0065 	add.w	r0, r3, r5, asr #1
90004b1e:	6803      	ldr	r3, [r0, #0]
90004b20:	5859      	ldr	r1, [r3, r1]
90004b22:	e7ee      	b.n	90004b02 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x32>
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90004b24:	4798      	blx	r3
90004b26:	2800      	cmp	r0, #0
90004b28:	d0ef      	beq.n	90004b0a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
90004b2a:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
90004b2e:	6802      	ldr	r2, [r0, #0]
90004b30:	e7dc      	b.n	90004aec <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x1c>
90004b32:	4790      	blx	r2
90004b34:	e7e6      	b.n	90004b04 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x34>
90004b36:	bf00      	nop
90004b38:	900048d1 	.word	0x900048d1
90004b3c:	900048b9 	.word	0x900048b9

90004b40 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
90004b40:	b570      	push	{r4, r5, r6, lr}
90004b42:	4604      	mov	r4, r0
90004b44:	4615      	mov	r5, r2
90004b46:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
90004b48:	f012 fb26 	bl	90017198 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
90004b4c:	4a22      	ldr	r2, [pc, #136]	@ (90004bd8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x98>)
        : currentPresenter(0),
90004b4e:	2300      	movs	r3, #0
      frontendHeap(heap),
90004b50:	f8c4 5154 	str.w	r5, [r4, #340]	@ 0x154
        instance = this;
90004b54:	6014      	str	r4, [r2, #0]
        return instance;
90004b56:	4d21      	ldr	r5, [pc, #132]	@ (90004bdc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x9c>)
      model(m)
90004b58:	4a21      	ldr	r2, [pc, #132]	@ (90004be0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa0>)
90004b5a:	6828      	ldr	r0, [r5, #0]
90004b5c:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
90004b5e:	4a21      	ldr	r2, [pc, #132]	@ (90004be4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa4>)
90004b60:	4921      	ldr	r1, [pc, #132]	@ (90004be8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa8>)
90004b62:	f8c4 2144 	str.w	r2, [r4, #324]	@ 0x144
90004b66:	f8c4 3148 	str.w	r3, [r4, #328]	@ 0x148
90004b6a:	f8c4 6158 	str.w	r6, [r4, #344]	@ 0x158
        : currentPresenter(0),
90004b6e:	e9c4 334f 	strd	r3, r3, [r4, #316]	@ 0x13c
90004b72:	e9c4 3353 	strd	r3, r3, [r4, #332]	@ 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
90004b76:	6802      	ldr	r2, [r0, #0]
90004b78:	6892      	ldr	r2, [r2, #8]
90004b7a:	428a      	cmp	r2, r1
90004b7c:	d129      	bne.n	90004bd2 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x92>
        requestedOrientation = orientation;
90004b7e:	f44f 7380 	mov.w	r3, #256	@ 0x100
90004b82:	f8a0 3078 	strh.w	r3, [r0, #120]	@ 0x78
    touchgfx::Texts::setLanguage(GB);
90004b86:	2000      	movs	r0, #0
90004b88:	f000 fcc6 	bl	90005518 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90004b8c:	682b      	ldr	r3, [r5, #0]
90004b8e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90004b92:	b1e2      	cbz	r2, 90004bce <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8e>
90004b94:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90004b96:	b1d0      	cbz	r0, 90004bce <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8e>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
90004b98:	f01c ff61 	bl	90021a5e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
90004b9c:	682b      	ldr	r3, [r5, #0]
90004b9e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90004ba2:	b192      	cbz	r2, 90004bca <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8a>
90004ba4:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90004ba6:	b180      	cbz	r0, 90004bca <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8a>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
90004ba8:	f01c ffd4 	bl	90021b54 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
90004bac:	682b      	ldr	r3, [r5, #0]
90004bae:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90004bb2:	b12a      	cbz	r2, 90004bc0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x80>
90004bb4:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90004bb6:	b118      	cbz	r0, 90004bc0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x80>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
90004bb8:	f01c ffd8 	bl	90021b6c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
90004bbc:	4620      	mov	r0, r4
90004bbe:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
90004bc0:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
90004bc2:	f01c ffd3 	bl	90021b6c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
90004bc6:	4620      	mov	r0, r4
90004bc8:	bd70      	pop	{r4, r5, r6, pc}
90004bca:	6898      	ldr	r0, [r3, #8]
90004bcc:	e7ec      	b.n	90004ba8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x68>
90004bce:	6898      	ldr	r0, [r3, #8]
90004bd0:	e7e2      	b.n	90004b98 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
90004bd2:	4619      	mov	r1, r3
90004bd4:	4790      	blx	r2
90004bd6:	e7d6      	b.n	90004b86 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
90004bd8:	240218b8 	.word	0x240218b8
90004bdc:	24021864 	.word	0x24021864
90004be0:	9002d504 	.word	0x9002d504
90004be4:	9002d4ec 	.word	0x9002d4ec
90004be8:	90000d81 	.word	0x90000d81

90004bec <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90004bec:	4905      	ldr	r1, [pc, #20]	@ (90004c04 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x18>)
90004bee:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90004bf0:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90004bf4:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
90004bf8:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90004bfc:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
90004c00:	4770      	bx	lr
90004c02:	bf00      	nop
90004c04:	90004929 	.word	0x90004929

90004c08 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
90004c08:	6a40      	ldr	r0, [r0, #36]	@ 0x24
90004c0a:	4770      	bx	lr

90004c0c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
90004c0c:	6a80      	ldr	r0, [r0, #40]	@ 0x28
90004c0e:	4770      	bx	lr

90004c10 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
90004c10:	4770      	bx	lr
90004c12:	bf00      	nop

90004c14 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    // Read dataOffset as 16bit, as it may be unaligned
    volatile const uint16_t* dataOffset = (const uint16_t*)((const uint8_t*)glyph + offsetof(GlyphNode, dataOffset));
    uint32_t offset = dataOffset[0];
90004c14:	880b      	ldrh	r3, [r1, #0]
    offset |= dataOffset[1] << 16;

    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    const uint8_t* pixels = table[glyph->unicode / 2048];
90004c16:	888a      	ldrh	r2, [r1, #4]
90004c18:	69c0      	ldr	r0, [r0, #28]
    uint32_t offset = dataOffset[0];
90004c1a:	b29b      	uxth	r3, r3
    offset |= dataOffset[1] << 16;
90004c1c:	8849      	ldrh	r1, [r1, #2]
    const uint8_t* pixels = table[glyph->unicode / 2048];
90004c1e:	0ad2      	lsrs	r2, r2, #11
    offset |= dataOffset[1] << 16;
90004c20:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
    return pixels + offset;
90004c24:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
}
90004c28:	4418      	add	r0, r3
90004c2a:	4770      	bx	lr

90004c2c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
    if (!glyph || glyph->kerningTableSize == 0)
90004c2c:	b1fa      	cbz	r2, 90004c6e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x42>
{
90004c2e:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
90004c30:	7b14      	ldrb	r4, [r2, #12]
90004c32:	b1d4      	cbz	r4, 90004c6a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
90004c34:	f892 c00d 	ldrb.w	ip, [r2, #13]
90004c38:	f892 e00b 	ldrb.w	lr, [r2, #11]
90004c3c:	ea4f 220c 	mov.w	r2, ip, lsl #8
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
90004c40:	6a03      	ldr	r3, [r0, #32]
90004c42:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
90004c46:	ea4e 0202 	orr.w	r2, lr, r2
90004c4a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90004c4e:	eb03 0084 	add.w	r0, r3, r4, lsl #2
90004c52:	e004      	b.n	90004c5e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x32>
90004c54:	f103 0304 	add.w	r3, r3, #4
    {
        if (prevChar == kerndata->unicodePrevChar)
        {
            return kerndata->distance;
        }
        if (prevChar < kerndata->unicodePrevChar)
90004c58:	d807      	bhi.n	90004c6a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90004c5a:	4283      	cmp	r3, r0
90004c5c:	d005      	beq.n	90004c6a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
        if (prevChar == kerndata->unicodePrevChar)
90004c5e:	881a      	ldrh	r2, [r3, #0]
90004c60:	428a      	cmp	r2, r1
90004c62:	d1f7      	bne.n	90004c54 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
            return kerndata->distance;
90004c64:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
90004c68:	bd10      	pop	{r4, pc}
        return 0;
90004c6a:	2000      	movs	r0, #0
}
90004c6c:	bd10      	pop	{r4, pc}
        return 0;
90004c6e:	4610      	mov	r0, r2
}
90004c70:	4770      	bx	lr
90004c72:	bf00      	nop

90004c74 <_ZN8touchgfx13GeneratedFontD0Ev>:
90004c74:	b510      	push	{r4, lr}
90004c76:	4604      	mov	r4, r0
90004c78:	212c      	movs	r1, #44	@ 0x2c
90004c7a:	f024 fff7 	bl	90029c6c <_ZdlPvj>
90004c7e:	4620      	mov	r0, r4
90004c80:	bd10      	pop	{r4, pc}
90004c82:	bf00      	nop

90004c84 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004c84:	b530      	push	{r4, r5, lr}
90004c86:	b08b      	sub	sp, #44	@ 0x2c
90004c88:	4604      	mov	r4, r0
90004c8a:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
      arabicTable(formsTable)
90004c8e:	9500      	str	r5, [sp, #0]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004c90:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
      arabicTable(formsTable)
90004c94:	9501      	str	r5, [sp, #4]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004c96:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
      arabicTable(formsTable)
90004c9a:	9502      	str	r5, [sp, #8]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004c9c:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
      arabicTable(formsTable)
90004ca0:	9503      	str	r5, [sp, #12]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004ca2:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
      arabicTable(formsTable)
90004ca6:	9504      	str	r5, [sp, #16]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004ca8:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
      arabicTable(formsTable)
90004cac:	9505      	str	r5, [sp, #20]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004cae:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
      arabicTable(formsTable)
90004cb2:	9506      	str	r5, [sp, #24]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004cb4:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
      arabicTable(formsTable)
90004cb8:	9507      	str	r5, [sp, #28]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004cba:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
      arabicTable(formsTable)
90004cbe:	9508      	str	r5, [sp, #32]
90004cc0:	f013 ffb4 	bl	90018c2c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
      glyphData(glyphDataInternalFlash),
90004cc4:	9b15      	ldr	r3, [sp, #84]	@ 0x54
}
90004cc6:	4620      	mov	r0, r4
      glyphData(glyphDataInternalFlash),
90004cc8:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
90004cca:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90004ccc:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
90004cce:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90004cd0:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
90004cd2:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
90004cd4:	62a3      	str	r3, [r4, #40]	@ 0x28
90004cd6:	4b02      	ldr	r3, [pc, #8]	@ (90004ce0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
90004cd8:	6023      	str	r3, [r4, #0]
}
90004cda:	b00b      	add	sp, #44	@ 0x2c
90004cdc:	bd30      	pop	{r4, r5, pc}
90004cde:	bf00      	nop
90004ce0:	9002d57c 	.word	0x9002d57c

90004ce4 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
90004ce4:	4770      	bx	lr
90004ce6:	bf00      	nop

90004ce8 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
90004ce8:	4770      	bx	lr
90004cea:	bf00      	nop

90004cec <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
90004cec:	4770      	bx	lr
90004cee:	bf00      	nop

90004cf0 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
90004cf0:	4770      	bx	lr
90004cf2:	bf00      	nop

90004cf4 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
90004cf4:	b530      	push	{r4, r5, lr}
90004cf6:	b085      	sub	sp, #20
90004cf8:	460a      	mov	r2, r1
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
90004cfa:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
90004cfc:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
90004cfe:	466d      	mov	r5, sp
90004d00:	4601      	mov	r1, r0
        rect.width = width;
90004d02:	8102      	strh	r2, [r0, #8]
90004d04:	343c      	adds	r4, #60	@ 0x3c
90004d06:	4628      	mov	r0, r5
90004d08:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90004d0c:	4798      	blx	r3
90004d0e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004d12:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
90004d16:	b005      	add	sp, #20
90004d18:	bd30      	pop	{r4, r5, pc}
90004d1a:	bf00      	nop

90004d1c <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
90004d1c:	b530      	push	{r4, r5, lr}
90004d1e:	b085      	sub	sp, #20
90004d20:	460a      	mov	r2, r1
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
90004d22:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
90004d24:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
90004d26:	466d      	mov	r5, sp
90004d28:	4601      	mov	r1, r0
        rect.height = height;
90004d2a:	8142      	strh	r2, [r0, #10]
90004d2c:	343c      	adds	r4, #60	@ 0x3c
90004d2e:	4628      	mov	r0, r5
90004d30:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90004d34:	4798      	blx	r3
90004d36:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004d3a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
90004d3e:	b005      	add	sp, #20
90004d40:	bd30      	pop	{r4, r5, pc}
90004d42:	bf00      	nop

90004d44 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
90004d44:	2200      	movs	r2, #0
90004d46:	6002      	str	r2, [r0, #0]
90004d48:	6042      	str	r2, [r0, #4]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
90004d4a:	4770      	bx	lr

90004d4c <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90004d4c:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
    }
90004d50:	4770      	bx	lr
90004d52:	bf00      	nop

90004d54 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
90004d54:	2000      	movs	r0, #0
90004d56:	4770      	bx	lr

90004d58 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
        if (visible)
90004d58:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90004d5c:	b112      	cbz	r2, 90004d64 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xc>
            invalidate();
90004d5e:	6803      	ldr	r3, [r0, #0]
90004d60:	695b      	ldr	r3, [r3, #20]
90004d62:	4718      	bx	r3
    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
    {
        Widget::invalidateContent();
    }
90004d64:	4770      	bx	lr
90004d66:	bf00      	nop

90004d68 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004d68:	2200      	movs	r2, #0
90004d6a:	f04f 31ff 	mov.w	r1, #4294967295
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
90004d6e:	6082      	str	r2, [r0, #8]
90004d70:	e9c0 2100 	strd	r2, r1, [r0]

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
    {
        return TextArea::BoundingArea();
    }
90004d74:	4770      	bx	lr
90004d76:	bf00      	nop

90004d78 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
90004d78:	6c80      	ldr	r0, [r0, #72]	@ 0x48
90004d7a:	4770      	bx	lr

90004d7c <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
90004d7c:	4770      	bx	lr
90004d7e:	bf00      	nop

90004d80 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90004d80:	4770      	bx	lr
90004d82:	bf00      	nop

90004d84 <_ZN15Screen1ViewBaseD1Ev>:
}

Screen1ViewBase::~Screen1ViewBase()
{

}
90004d84:	4770      	bx	lr
90004d86:	bf00      	nop

90004d88 <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{

}
90004d88:	4770      	bx	lr
90004d8a:	bf00      	nop

90004d8c <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
90004d8c:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90004d8e:	68c3      	ldr	r3, [r0, #12]
90004d90:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
90004d94:	f013 0f01 	tst.w	r3, #1
90004d98:	eb04 0063 	add.w	r0, r4, r3, asr #1
90004d9c:	d004      	beq.n	90004da8 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1c>
90004d9e:	ea4f 0c63 	mov.w	ip, r3, asr #1
90004da2:	f854 300c 	ldr.w	r3, [r4, ip]
90004da6:	589a      	ldr	r2, [r3, r2]
    }
90004da8:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90004dac:	4710      	bx	r2
90004dae:	bf00      	nop

90004db0 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90004db0:	6843      	ldr	r3, [r0, #4]
90004db2:	b13b      	cbz	r3, 90004dc4 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
90004db4:	6883      	ldr	r3, [r0, #8]
90004db6:	b10b      	cbz	r3, 90004dbc <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
90004db8:	2001      	movs	r0, #1
    }
90004dba:	4770      	bx	lr
90004dbc:	68c0      	ldr	r0, [r0, #12]
90004dbe:	f000 0001 	and.w	r0, r0, #1
90004dc2:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90004dc4:	4618      	mov	r0, r3
90004dc6:	4770      	bx	lr

90004dc8 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
90004dc8:	b510      	push	{r4, lr}
90004dca:	4604      	mov	r4, r0
90004dcc:	214c      	movs	r1, #76	@ 0x4c
90004dce:	f024 ff4d 	bl	90029c6c <_ZdlPvj>
90004dd2:	4620      	mov	r0, r4
90004dd4:	bd10      	pop	{r4, pc}
90004dd6:	bf00      	nop

90004dd8 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90004dd8:	b510      	push	{r4, lr}
90004dda:	4604      	mov	r4, r0
90004ddc:	2110      	movs	r1, #16
90004dde:	f024 ff45 	bl	90029c6c <_ZdlPvj>
90004de2:	4620      	mov	r0, r4
90004de4:	bd10      	pop	{r4, pc}
90004de6:	bf00      	nop

90004de8 <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
90004de8:	b510      	push	{r4, lr}
90004dea:	4604      	mov	r4, r0
}
90004dec:	f44f 71a8 	mov.w	r1, #336	@ 0x150
90004df0:	f024 ff3c 	bl	90029c6c <_ZdlPvj>
90004df4:	4620      	mov	r0, r4
90004df6:	bd10      	pop	{r4, pc}

90004df8 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &TC_Button)
90004df8:	f100 0298 	add.w	r2, r0, #152	@ 0x98
{
90004dfc:	4603      	mov	r3, r0
    if (&src == &TC_Button)
90004dfe:	428a      	cmp	r2, r1
90004e00:	d000      	beq.n	90004e04 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xc>
        //When TC_Button clicked show TC_TextBox
        //Show TC_TextBox
        TC_TextBox.setVisible(true);
        TC_TextBox.invalidate();
    }
}
90004e02:	4770      	bx	lr
        visible = vis;
90004e04:	2201      	movs	r2, #1
        TC_TextBox.invalidate();
90004e06:	30e0      	adds	r0, #224	@ 0xe0
90004e08:	f883 2105 	strb.w	r2, [r3, #261]	@ 0x105
90004e0c:	f013 bab7 	b.w	9001837e <_ZNK8touchgfx8Drawable10invalidateEv>

90004e10 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004e10:	4b1b      	ldr	r3, [pc, #108]	@ (90004e80 <_ZN8touchgfx8TextArea12setBaselineYEs+0x70>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004e12:	6802      	ldr	r2, [r0, #0]
90004e14:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
90004e16:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004e18:	6b55      	ldr	r5, [r2, #52]	@ 0x34
90004e1a:	b323      	cbz	r3, 90004e66 <_ZN8touchgfx8TextArea12setBaselineYEs+0x56>
90004e1c:	b28e      	uxth	r6, r1
        return typedTextId < numberOfTypedTexts;
90004e1e:	4919      	ldr	r1, [pc, #100]	@ (90004e84 <_ZN8touchgfx8TextArea12setBaselineYEs+0x74>)
90004e20:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90004e22:	4604      	mov	r4, r0
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004e24:	8809      	ldrh	r1, [r1, #0]
90004e26:	4291      	cmp	r1, r2
90004e28:	d923      	bls.n	90004e72 <_ZN8touchgfx8TextArea12setBaselineYEs+0x62>
        return fonts[typedTexts[typedTextId].fontIdx];
90004e2a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90004e2e:	4b16      	ldr	r3, [pc, #88]	@ (90004e88 <_ZN8touchgfx8TextArea12setBaselineYEs+0x78>)
90004e30:	681b      	ldr	r3, [r3, #0]
90004e32:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90004e36:	4a15      	ldr	r2, [pc, #84]	@ (90004e8c <_ZN8touchgfx8TextArea12setBaselineYEs+0x7c>)
90004e38:	6803      	ldr	r3, [r0, #0]
90004e3a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90004e3c:	4293      	cmp	r3, r2
90004e3e:	d107      	bne.n	90004e50 <_ZN8touchgfx8TextArea12setBaselineYEs+0x40>
        return baselineHeight;
90004e40:	88c0      	ldrh	r0, [r0, #6]
90004e42:	4b13      	ldr	r3, [pc, #76]	@ (90004e90 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
90004e44:	1a31      	subs	r1, r6, r0
90004e46:	429d      	cmp	r5, r3
90004e48:	b209      	sxth	r1, r1
90004e4a:	d107      	bne.n	90004e5c <_ZN8touchgfx8TextArea12setBaselineYEs+0x4c>
        rect.y = y;
90004e4c:	80e1      	strh	r1, [r4, #6]
    }
90004e4e:	bd70      	pop	{r4, r5, r6, pc}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004e50:	4798      	blx	r3
90004e52:	4b0f      	ldr	r3, [pc, #60]	@ (90004e90 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
90004e54:	1a31      	subs	r1, r6, r0
90004e56:	429d      	cmp	r5, r3
90004e58:	b209      	sxth	r1, r1
90004e5a:	d0f7      	beq.n	90004e4c <_ZN8touchgfx8TextArea12setBaselineYEs+0x3c>
90004e5c:	4620      	mov	r0, r4
90004e5e:	462b      	mov	r3, r5
    }
90004e60:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004e64:	4718      	bx	r3
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004e66:	4b0b      	ldr	r3, [pc, #44]	@ (90004e94 <_ZN8touchgfx8TextArea12setBaselineYEs+0x84>)
90004e68:	216c      	movs	r1, #108	@ 0x6c
90004e6a:	4a0b      	ldr	r2, [pc, #44]	@ (90004e98 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
90004e6c:	480b      	ldr	r0, [pc, #44]	@ (90004e9c <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
90004e6e:	f025 fa73 	bl	9002a358 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004e72:	4b0b      	ldr	r3, [pc, #44]	@ (90004ea0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x90>)
90004e74:	216d      	movs	r1, #109	@ 0x6d
90004e76:	4a08      	ldr	r2, [pc, #32]	@ (90004e98 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
90004e78:	4808      	ldr	r0, [pc, #32]	@ (90004e9c <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
90004e7a:	f025 fa6d 	bl	9002a358 <__assert_func>
90004e7e:	bf00      	nop
90004e80:	240218bc 	.word	0x240218bc
90004e84:	240218c0 	.word	0x240218c0
90004e88:	240218c4 	.word	0x240218c4
90004e8c:	90004831 	.word	0x90004831
90004e90:	90002e55 	.word	0x90002e55
90004e94:	9002cd00 	.word	0x9002cd00
90004e98:	9002cd44 	.word	0x9002cd44
90004e9c:	9002cd80 	.word	0x9002cd80
90004ea0:	9002cdc8 	.word	0x9002cdc8

90004ea4 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
        setX(x);
90004ea4:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
90004ea6:	b570      	push	{r4, r5, r6, lr}
90004ea8:	4614      	mov	r4, r2
90004eaa:	4e23      	ldr	r6, [pc, #140]	@ (90004f38 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x94>)
        setX(x);
90004eac:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
90004eae:	4605      	mov	r5, r0
90004eb0:	42b2      	cmp	r2, r6
90004eb2:	d122      	bne.n	90004efa <_ZN8touchgfx8TextArea13setXBaselineYEss+0x56>
        setBaselineY(baselineY);
90004eb4:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
        rect.x = x;
90004eb6:	80a9      	strh	r1, [r5, #4]
90004eb8:	4920      	ldr	r1, [pc, #128]	@ (90004f3c <_ZN8touchgfx8TextArea13setXBaselineYEss+0x98>)
90004eba:	428a      	cmp	r2, r1
90004ebc:	d123      	bne.n	90004f06 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x62>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004ebe:	4a20      	ldr	r2, [pc, #128]	@ (90004f40 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x9c>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004ec0:	b2a4      	uxth	r4, r4
90004ec2:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
90004ec4:	6813      	ldr	r3, [r2, #0]
90004ec6:	2b00      	cmp	r3, #0
90004ec8:	d02f      	beq.n	90004f2a <_ZN8touchgfx8TextArea13setXBaselineYEss+0x86>
        return typedTextId < numberOfTypedTexts;
90004eca:	491e      	ldr	r1, [pc, #120]	@ (90004f44 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
90004ecc:	8daa      	ldrh	r2, [r5, #44]	@ 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004ece:	8809      	ldrh	r1, [r1, #0]
90004ed0:	4291      	cmp	r1, r2
90004ed2:	d924      	bls.n	90004f1e <_ZN8touchgfx8TextArea13setXBaselineYEss+0x7a>
        return fonts[typedTexts[typedTextId].fontIdx];
90004ed4:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90004ed8:	4b1b      	ldr	r3, [pc, #108]	@ (90004f48 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa4>)
90004eda:	681b      	ldr	r3, [r3, #0]
90004edc:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90004ee0:	4a1a      	ldr	r2, [pc, #104]	@ (90004f4c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa8>)
90004ee2:	6803      	ldr	r3, [r0, #0]
90004ee4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90004ee6:	4293      	cmp	r3, r2
90004ee8:	d117      	bne.n	90004f1a <_ZN8touchgfx8TextArea13setXBaselineYEss+0x76>
90004eea:	88c0      	ldrh	r0, [r0, #6]
90004eec:	4b18      	ldr	r3, [pc, #96]	@ (90004f50 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xac>)
90004eee:	1a24      	subs	r4, r4, r0
90004ef0:	429e      	cmp	r6, r3
90004ef2:	b221      	sxth	r1, r4
90004ef4:	d10c      	bne.n	90004f10 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x6c>
        rect.y = y;
90004ef6:	80e9      	strh	r1, [r5, #6]
    }
90004ef8:	bd70      	pop	{r4, r5, r6, pc}
        setX(x);
90004efa:	4790      	blx	r2
        setBaselineY(baselineY);
90004efc:	682b      	ldr	r3, [r5, #0]
90004efe:	490f      	ldr	r1, [pc, #60]	@ (90004f3c <_ZN8touchgfx8TextArea13setXBaselineYEss+0x98>)
90004f00:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
90004f02:	428a      	cmp	r2, r1
90004f04:	d0db      	beq.n	90004ebe <_ZN8touchgfx8TextArea13setXBaselineYEss+0x1a>
90004f06:	4621      	mov	r1, r4
90004f08:	4628      	mov	r0, r5
    }
90004f0a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
90004f0e:	4710      	bx	r2
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004f10:	4628      	mov	r0, r5
90004f12:	4633      	mov	r3, r6
    }
90004f14:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004f18:	4718      	bx	r3
90004f1a:	4798      	blx	r3
90004f1c:	e7e6      	b.n	90004eec <_ZN8touchgfx8TextArea13setXBaselineYEss+0x48>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004f1e:	4b0d      	ldr	r3, [pc, #52]	@ (90004f54 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb0>)
90004f20:	216d      	movs	r1, #109	@ 0x6d
90004f22:	4a0d      	ldr	r2, [pc, #52]	@ (90004f58 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
90004f24:	480d      	ldr	r0, [pc, #52]	@ (90004f5c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
90004f26:	f025 fa17 	bl	9002a358 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004f2a:	4b0d      	ldr	r3, [pc, #52]	@ (90004f60 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
90004f2c:	216c      	movs	r1, #108	@ 0x6c
90004f2e:	4a0a      	ldr	r2, [pc, #40]	@ (90004f58 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
90004f30:	480a      	ldr	r0, [pc, #40]	@ (90004f5c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
90004f32:	f025 fa11 	bl	9002a358 <__assert_func>
90004f36:	bf00      	nop
90004f38:	90002e51 	.word	0x90002e51
90004f3c:	90004e11 	.word	0x90004e11
90004f40:	240218bc 	.word	0x240218bc
90004f44:	240218c0 	.word	0x240218c0
90004f48:	240218c4 	.word	0x240218c4
90004f4c:	90004831 	.word	0x90004831
90004f50:	90002e55 	.word	0x90002e55
90004f54:	9002cdc8 	.word	0x9002cdc8
90004f58:	9002cd44 	.word	0x9002cd44
90004f5c:	9002cd80 	.word	0x9002cd80
90004f60:	9002cd00 	.word	0x9002cd00

90004f64 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
90004f64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004f68:	4604      	mov	r4, r0
90004f6a:	b08b      	sub	sp, #44	@ 0x2c
        : presenter(0)
90004f6c:	2500      	movs	r5, #0
90004f6e:	f014 f87b 	bl	90019068 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
90004f72:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
90004f76:	4aad      	ldr	r2, [pc, #692]	@ (9000522c <_ZN15Screen1ViewBaseC1Ev+0x2c8>)
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
90004f78:	4bad      	ldr	r3, [pc, #692]	@ (90005230 <_ZN15Screen1ViewBaseC1Ev+0x2cc>)
          touchable(false),
90004f7a:	f44f 7a80 	mov.w	sl, #256	@ 0x100
90004f7e:	26ff      	movs	r6, #255	@ 0xff
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
90004f80:	f64f 78ff 	movw	r8, #65535	@ 0xffff
90004f84:	f104 0798 	add.w	r7, r4, #152	@ 0x98
90004f88:	6022      	str	r2, [r4, #0]
90004f8a:	a908      	add	r1, sp, #32
90004f8c:	6423      	str	r3, [r4, #64]	@ 0x40
90004f8e:	4648      	mov	r0, r9
90004f90:	f8a4 a064 	strh.w	sl, [r4, #100]	@ 0x64
90004f94:	f884 6066 	strb.w	r6, [r4, #102]	@ 0x66
90004f98:	f04f 0b02 	mov.w	fp, #2
90004f9c:	63e5      	str	r5, [r4, #60]	@ 0x3c
        : color(col)
90004f9e:	66a5      	str	r5, [r4, #104]	@ 0x68
90004fa0:	f8ad 8020 	strh.w	r8, [sp, #32]
        : x(0), y(0), width(0), height(0)
90004fa4:	e9c4 5511 	strd	r5, r5, [r4, #68]	@ 0x44
90004fa8:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
          nextSibling(0),
90004fac:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
          cachedAbsX(0),
90004fb0:	e9c4 5517 	strd	r5, r5, [r4, #92]	@ 0x5c
90004fb4:	f00e fed8 	bl	90013d68 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90004fb8:	4638      	mov	r0, r7
90004fba:	f00f fc6f 	bl	9001489c <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004fbe:	f04f 33ff 	mov.w	r3, #4294967295
          touchable(false),
90004fc2:	f8a4 a104 	strh.w	sl, [r4, #260]	@ 0x104
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
90004fc6:	f104 0140 	add.w	r1, r4, #64	@ 0x40
90004fca:	f8c4 3120 	str.w	r3, [r4, #288]	@ 0x120
        : TextAreaWithWildcardBase(), wc1(0)
90004fce:	4b99      	ldr	r3, [pc, #612]	@ (90005234 <_ZN15Screen1ViewBaseC1Ev+0x2d0>)
        rect.x = x;
90004fd0:	f8df a2a0 	ldr.w	sl, [pc, #672]	@ 90005274 <_ZN15Screen1ViewBaseC1Ev+0x310>
90004fd4:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
        : pobject(pObject), pmemfun(pmemfun_1)
90004fd8:	4b97      	ldr	r3, [pc, #604]	@ (90005238 <_ZN15Screen1ViewBaseC1Ev+0x2d4>)
        : typedTextId(id)
90004fda:	f8a4 810c 	strh.w	r8, [r4, #268]	@ 0x10c
90004fde:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
90004fe2:	4b96      	ldr	r3, [pc, #600]	@ (9000523c <_ZN15Screen1ViewBaseC1Ev+0x2d8>)
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90004fe4:	f8c4 6116 	str.w	r6, [r4, #278]	@ 0x116
90004fe8:	1d26      	adds	r6, r4, #4
90004fea:	f8c4 3148 	str.w	r3, [r4, #328]	@ 0x148
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
90004fee:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
90004ff2:	f8df 8284 	ldr.w	r8, [pc, #644]	@ 90005278 <_ZN15Screen1ViewBaseC1Ev+0x314>
90004ff6:	4630      	mov	r0, r6
90004ff8:	66a3      	str	r3, [r4, #104]	@ 0x68
90004ffa:	f8c4 a048 	str.w	sl, [r4, #72]	@ 0x48
        : color(col)
90004ffe:	f8c4 5110 	str.w	r5, [r4, #272]	@ 0x110
90005002:	f8a4 5114 	strh.w	r5, [r4, #276]	@ 0x114
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005006:	f8c4 511c 	str.w	r5, [r4, #284]	@ 0x11c
9000500a:	f8c4 4144 	str.w	r4, [r4, #324]	@ 0x144
9000500e:	f8c4 514c 	str.w	r5, [r4, #332]	@ 0x14c
90005012:	6465      	str	r5, [r4, #68]	@ 0x44
90005014:	f8c4 8108 	str.w	r8, [r4, #264]	@ 0x108
        : x(0), y(0), width(0), height(0)
90005018:	e9c4 5539 	strd	r5, r5, [r4, #228]	@ 0xe4
9000501c:	e9c4 553b 	strd	r5, r5, [r4, #236]	@ 0xec
          nextSibling(0),
90005020:	e9c4 553d 	strd	r5, r5, [r4, #244]	@ 0xf4
          cachedAbsX(0),
90005024:	e9c4 553f 	strd	r5, r5, [r4, #252]	@ 0xfc
90005028:	e9c4 5549 	strd	r5, r5, [r4, #292]	@ 0x124
9000502c:	f00b ff9e 	bl	90010f6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_IMAGES_ID));
90005030:	4648      	mov	r0, r9
90005032:	a908      	add	r1, sp, #32
90005034:	f8ad b020 	strh.w	fp, [sp, #32]
90005038:	f00f faf9 	bl	9001462e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000503c:	4648      	mov	r0, r9
9000503e:	4629      	mov	r1, r5
        rect.x = x;
90005040:	e9c4 5a1c 	strd	r5, sl, [r4, #112]	@ 0x70
90005044:	f00e fe4b 	bl	90013cde <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90005048:	4649      	mov	r1, r9
9000504a:	4630      	mov	r0, r6
        return typedTextId < numberOfTypedTexts;
9000504c:	f8df 922c 	ldr.w	r9, [pc, #556]	@ 9000527c <_ZN15Screen1ViewBaseC1Ev+0x318>
90005050:	f00b ff8c 	bl	90010f6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005054:	f44f 035e 	mov.w	r3, #14548992	@ 0xde0000
    TC_Button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
90005058:	aa08      	add	r2, sp, #32
9000505a:	a907      	add	r1, sp, #28
9000505c:	f8c4 309c 	str.w	r3, [r4, #156]	@ 0x9c
90005060:	2301      	movs	r3, #1
90005062:	4638      	mov	r0, r7
90005064:	f8ad 501c 	strh.w	r5, [sp, #28]
90005068:	f8ad 3020 	strh.w	r3, [sp, #32]
9000506c:	f00f f9ad 	bl	900143ca <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
    {
        if (typedText.hasValidId())
90005070:	f8b9 3000 	ldrh.w	r3, [r9]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005074:	f8df a208 	ldr.w	sl, [pc, #520]	@ 90005280 <_ZN15Screen1ViewBaseC1Ev+0x31c>
90005078:	455b      	cmp	r3, fp
class TypedText
9000507a:	f8a4 b0d0 	strh.w	fp, [r4, #208]	@ 0xd0
9000507e:	d927      	bls.n	900050d0 <_ZN15Screen1ViewBaseC1Ev+0x16c>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005080:	f8da 3000 	ldr.w	r3, [sl]
90005084:	2b00      	cmp	r3, #0
90005086:	f000 80be 	beq.w	90005206 <_ZN15Screen1ViewBaseC1Ev+0x2a2>
        return fonts[typedTexts[typedTextId].fontIdx];
9000508a:	791a      	ldrb	r2, [r3, #4]
        return texts->getText(typedTextId);
9000508c:	4659      	mov	r1, fp
        return fonts[typedTexts[typedTextId].fontIdx];
9000508e:	4b6c      	ldr	r3, [pc, #432]	@ (90005240 <_ZN15Screen1ViewBaseC1Ev+0x2dc>)
90005090:	681b      	ldr	r3, [r3, #0]
90005092:	f853 b022 	ldr.w	fp, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
90005096:	4b6b      	ldr	r3, [pc, #428]	@ (90005244 <_ZN15Screen1ViewBaseC1Ev+0x2e0>)
90005098:	6818      	ldr	r0, [r3, #0]
9000509a:	f000 fa7b 	bl	90005594 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
9000509e:	f8db 3000 	ldr.w	r3, [fp]
900050a2:	4601      	mov	r1, r0
900050a4:	4868      	ldr	r0, [pc, #416]	@ (90005248 <_ZN15Screen1ViewBaseC1Ev+0x2e4>)
900050a6:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
900050a8:	4282      	cmp	r2, r0
900050aa:	f040 80a4 	bne.w	900051f6 <_ZN15Screen1ViewBaseC1Ev+0x292>
        return fontHeight;
900050ae:	f8bb 5004 	ldrh.w	r5, [fp, #4]
900050b2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
900050b4:	4658      	mov	r0, fp
900050b6:	9101      	str	r1, [sp, #4]
900050b8:	4798      	blx	r3
900050ba:	fb15 f500 	smulbb	r5, r5, r0
900050be:	f8db 3000 	ldr.w	r3, [fp]
900050c2:	4658      	mov	r0, fp
900050c4:	b2ad      	uxth	r5, r5
900050c6:	9901      	ldr	r1, [sp, #4]
900050c8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900050ca:	4798      	blx	r3
900050cc:	4405      	add	r5, r0
900050ce:	b22d      	sxth	r5, r5
        color = col;
900050d0:	f04f 33ff 	mov.w	r3, #4294967295
900050d4:	4639      	mov	r1, r7
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900050d6:	f8a4 50de 	strh.w	r5, [r4, #222]	@ 0xde
900050da:	4630      	mov	r0, r6
    TC_TextBox.setPosition(17, 200, 206, 22);
900050dc:	f104 05e0 	add.w	r5, r4, #224	@ 0xe0
        colorPressed = col;
900050e0:	e9c4 3335 	strd	r3, r3, [r4, #212]	@ 0xd4
    TC_Button.setAction(buttonCallback);
900050e4:	f504 73a0 	add.w	r3, r4, #320	@ 0x140
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
900050e8:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
900050ec:	f00b ff3e 	bl	90010f6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
900050f0:	4a56      	ldr	r2, [pc, #344]	@ (9000524c <_ZN15Screen1ViewBaseC1Ev+0x2e8>)
        setX(x);
900050f2:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
900050f6:	4956      	ldr	r1, [pc, #344]	@ (90005250 <_ZN15Screen1ViewBaseC1Ev+0x2ec>)
        rect.x = x;
900050f8:	f8c4 20e4 	str.w	r2, [r4, #228]	@ 0xe4
        setWidth(width);
900050fc:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
900050fe:	428a      	cmp	r2, r1
90005100:	d175      	bne.n	900051ee <_ZN15Screen1ViewBaseC1Ev+0x28a>
        rect.width = width;
90005102:	22ce      	movs	r2, #206	@ 0xce
        boundingArea = calculateBoundingArea();
90005104:	af02      	add	r7, sp, #8
90005106:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
9000510a:	4629      	mov	r1, r5
9000510c:	4638      	mov	r0, r7
9000510e:	f8a4 20e8 	strh.w	r2, [r4, #232]	@ 0xe8
90005112:	4798      	blx	r3
90005114:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
90005118:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
9000511c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        setHeight(height);
90005120:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90005124:	494b      	ldr	r1, [pc, #300]	@ (90005254 <_ZN15Screen1ViewBaseC1Ev+0x2f0>)
90005126:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
90005128:	428a      	cmp	r2, r1
9000512a:	d150      	bne.n	900051ce <_ZN15Screen1ViewBaseC1Ev+0x26a>
        rect.height = height;
9000512c:	2216      	movs	r2, #22
        boundingArea = calculateBoundingArea();
9000512e:	af02      	add	r7, sp, #8
90005130:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90005134:	4629      	mov	r1, r5
90005136:	4638      	mov	r0, r7
90005138:	f8a4 20ea 	strh.w	r2, [r4, #234]	@ 0xea
9000513c:	4798      	blx	r3
9000513e:	f105 033c 	add.w	r3, r5, #60	@ 0x3c
90005142:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
90005146:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
9000514a:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
9000514e:	4a42      	ldr	r2, [pc, #264]	@ (90005258 <_ZN15Screen1ViewBaseC1Ev+0x2f4>)
90005150:	f8d3 7084 	ldr.w	r7, [r3, #132]	@ 0x84
        color = newColor;
90005154:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
90005158:	4297      	cmp	r7, r2
9000515a:	f8c4 3110 	str.w	r3, [r4, #272]	@ 0x110
        linespace = space;
9000515e:	f04f 0300 	mov.w	r3, #0
90005162:	f8a4 3114 	strh.w	r3, [r4, #276]	@ 0x114
        boundingArea = calculateBoundingArea();
90005166:	d136      	bne.n	900051d6 <_ZN15Screen1ViewBaseC1Ev+0x272>
90005168:	f8c4 311c 	str.w	r3, [r4, #284]	@ 0x11c
9000516c:	f8c4 3124 	str.w	r3, [r4, #292]	@ 0x124
90005170:	f04f 33ff 	mov.w	r3, #4294967295
90005174:	f8c4 3120 	str.w	r3, [r4, #288]	@ 0x120
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005178:	f8da 3000 	ldr.w	r3, [sl]
    Unicode::snprintf(TC_TextBoxBuffer, TC_TEXTBOX_SIZE, "%s", touchgfx::TypedText(T_TC_TEXTBOX_BUFFER).getText());
9000517c:	f504 7796 	add.w	r7, r4, #300	@ 0x12c
90005180:	2b00      	cmp	r3, #0
90005182:	d046      	beq.n	90005212 <_ZN15Screen1ViewBaseC1Ev+0x2ae>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90005184:	f8b9 3000 	ldrh.w	r3, [r9]
90005188:	2b00      	cmp	r3, #0
9000518a:	d048      	beq.n	9000521e <_ZN15Screen1ViewBaseC1Ev+0x2ba>
        return texts->getText(typedTextId);
9000518c:	4b2d      	ldr	r3, [pc, #180]	@ (90005244 <_ZN15Screen1ViewBaseC1Ev+0x2e0>)
9000518e:	2100      	movs	r1, #0
90005190:	6818      	ldr	r0, [r3, #0]
90005192:	f000 f9ff 	bl	90005594 <_ZNK8touchgfx5Texts7getTextEt>
90005196:	4a31      	ldr	r2, [pc, #196]	@ (9000525c <_ZN15Screen1ViewBaseC1Ev+0x2f8>)
90005198:	4603      	mov	r3, r0
9000519a:	210a      	movs	r1, #10
9000519c:	4638      	mov	r0, r7
9000519e:	f015 fbfd 	bl	9001a99c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
900051a2:	2301      	movs	r3, #1
    TC_TextBox.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6VCK));
900051a4:	a908      	add	r1, sp, #32
900051a6:	4628      	mov	r0, r5
        wc1 = value;
900051a8:	f8c4 7128 	str.w	r7, [r4, #296]	@ 0x128
900051ac:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
900051b0:	f8cd 8020 	str.w	r8, [sp, #32]
900051b4:	f00f f8ac 	bl	90014310 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        visible = vis;
900051b8:	2300      	movs	r3, #0
900051ba:	4630      	mov	r0, r6
900051bc:	4629      	mov	r1, r5
900051be:	f884 3105 	strb.w	r3, [r4, #261]	@ 0x105
900051c2:	f00b fed3 	bl	90010f6c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
900051c6:	4620      	mov	r0, r4
900051c8:	b00b      	add	sp, #44	@ 0x2c
900051ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        setHeight(height);
900051ce:	2116      	movs	r1, #22
900051d0:	4628      	mov	r0, r5
900051d2:	4790      	blx	r2
900051d4:	e7b9      	b.n	9000514a <_ZN15Screen1ViewBaseC1Ev+0x1e6>
900051d6:	f10d 0b08 	add.w	fp, sp, #8
900051da:	4629      	mov	r1, r5
900051dc:	4658      	mov	r0, fp
900051de:	47b8      	blx	r7
900051e0:	f105 033c 	add.w	r3, r5, #60	@ 0x3c
900051e4:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
900051e8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
900051ec:	e7c4      	b.n	90005178 <_ZN15Screen1ViewBaseC1Ev+0x214>
        setWidth(width);
900051ee:	21ce      	movs	r1, #206	@ 0xce
900051f0:	4628      	mov	r0, r5
900051f2:	4790      	blx	r2
900051f4:	e794      	b.n	90005120 <_ZN15Screen1ViewBaseC1Ev+0x1bc>
900051f6:	9101      	str	r1, [sp, #4]
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900051f8:	4658      	mov	r0, fp
900051fa:	4790      	blx	r2
900051fc:	f8db 3000 	ldr.w	r3, [fp]
90005200:	4605      	mov	r5, r0
90005202:	9901      	ldr	r1, [sp, #4]
90005204:	e755      	b.n	900050b2 <_ZN15Screen1ViewBaseC1Ev+0x14e>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005206:	4b16      	ldr	r3, [pc, #88]	@ (90005260 <_ZN15Screen1ViewBaseC1Ev+0x2fc>)
90005208:	216c      	movs	r1, #108	@ 0x6c
9000520a:	4a16      	ldr	r2, [pc, #88]	@ (90005264 <_ZN15Screen1ViewBaseC1Ev+0x300>)
9000520c:	4816      	ldr	r0, [pc, #88]	@ (90005268 <_ZN15Screen1ViewBaseC1Ev+0x304>)
9000520e:	f025 f8a3 	bl	9002a358 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005212:	4b13      	ldr	r3, [pc, #76]	@ (90005260 <_ZN15Screen1ViewBaseC1Ev+0x2fc>)
90005214:	2160      	movs	r1, #96	@ 0x60
90005216:	4a15      	ldr	r2, [pc, #84]	@ (9000526c <_ZN15Screen1ViewBaseC1Ev+0x308>)
90005218:	4813      	ldr	r0, [pc, #76]	@ (90005268 <_ZN15Screen1ViewBaseC1Ev+0x304>)
9000521a:	f025 f89d 	bl	9002a358 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
9000521e:	4b14      	ldr	r3, [pc, #80]	@ (90005270 <_ZN15Screen1ViewBaseC1Ev+0x30c>)
90005220:	2161      	movs	r1, #97	@ 0x61
90005222:	4a12      	ldr	r2, [pc, #72]	@ (9000526c <_ZN15Screen1ViewBaseC1Ev+0x308>)
90005224:	4810      	ldr	r0, [pc, #64]	@ (90005268 <_ZN15Screen1ViewBaseC1Ev+0x304>)
90005226:	f025 f897 	bl	9002a358 <__assert_func>
9000522a:	bf00      	nop
9000522c:	9002d68c 	.word	0x9002d68c
90005230:	9002e124 	.word	0x9002e124
90005234:	9002d5e4 	.word	0x9002d5e4
90005238:	9002d674 	.word	0x9002d674
9000523c:	90004df9 	.word	0x90004df9
90005240:	240218c4 	.word	0x240218c4
90005244:	240218c8 	.word	0x240218c8
90005248:	90004835 	.word	0x90004835
9000524c:	00c80011 	.word	0x00c80011
90005250:	90004cf5 	.word	0x90004cf5
90005254:	90004d1d 	.word	0x90004d1d
90005258:	90004d69 	.word	0x90004d69
9000525c:	9002ce54 	.word	0x9002ce54
90005260:	9002cd00 	.word	0x9002cd00
90005264:	9002cd44 	.word	0x9002cd44
90005268:	9002cd80 	.word	0x9002cd80
9000526c:	9002ce08 	.word	0x9002ce08
90005270:	9002cdc8 	.word	0x9002cdc8
90005274:	011001e0 	.word	0x011001e0
90005278:	9002d4dc 	.word	0x9002d4dc
9000527c:	240218c0 	.word	0x240218c0
90005280:	240218bc 	.word	0x240218bc

90005284 <__tcf_0>:

touchgfx::GeneratedFont& getFont_calibri_20_4bpp();

touchgfx::GeneratedFont& getFont_calibri_20_4bpp()
{
    static touchgfx::GeneratedFont calibri_20_4bpp(glyphs_calibri_20_4bpp, 47, 22, 20, 0, 0, 4, 1, 0, 1, unicodes_calibri_20_4bpp, kerning_calibri_20_4bpp, 63, 0, 0, &calibri_contextualFormsTable);
90005284:	4770      	bx	lr
90005286:	bf00      	nop

90005288 <_Z23getFont_calibri_20_4bppv>:
{
90005288:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont calibri_20_4bpp(glyphs_calibri_20_4bpp, 47, 22, 20, 0, 0, 4, 1, 0, 1, unicodes_calibri_20_4bpp, kerning_calibri_20_4bpp, 63, 0, 0, &calibri_contextualFormsTable);
9000528a:	4d19      	ldr	r5, [pc, #100]	@ (900052f0 <_Z23getFont_calibri_20_4bppv+0x68>)
{
9000528c:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont calibri_20_4bpp(glyphs_calibri_20_4bpp, 47, 22, 20, 0, 0, 4, 1, 0, 1, unicodes_calibri_20_4bpp, kerning_calibri_20_4bpp, 63, 0, 0, &calibri_contextualFormsTable);
9000528e:	682c      	ldr	r4, [r5, #0]
90005290:	f3bf 8f5b 	dmb	ish
90005294:	f014 0401 	ands.w	r4, r4, #1
90005298:	d002      	beq.n	900052a0 <_Z23getFont_calibri_20_4bppv+0x18>
    return calibri_20_4bpp;
}
9000529a:	4816      	ldr	r0, [pc, #88]	@ (900052f4 <_Z23getFont_calibri_20_4bppv+0x6c>)
9000529c:	b00f      	add	sp, #60	@ 0x3c
9000529e:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont calibri_20_4bpp(glyphs_calibri_20_4bpp, 47, 22, 20, 0, 0, 4, 1, 0, 1, unicodes_calibri_20_4bpp, kerning_calibri_20_4bpp, 63, 0, 0, &calibri_contextualFormsTable);
900052a0:	4628      	mov	r0, r5
900052a2:	f024 fce5 	bl	90029c70 <__cxa_guard_acquire>
900052a6:	2800      	cmp	r0, #0
900052a8:	d0f7      	beq.n	9000529a <_Z23getFont_calibri_20_4bppv+0x12>
900052aa:	4913      	ldr	r1, [pc, #76]	@ (900052f8 <_Z23getFont_calibri_20_4bppv+0x70>)
900052ac:	223f      	movs	r2, #63	@ 0x3f
900052ae:	2301      	movs	r3, #1
900052b0:	9405      	str	r4, [sp, #20]
900052b2:	4810      	ldr	r0, [pc, #64]	@ (900052f4 <_Z23getFont_calibri_20_4bppv+0x6c>)
900052b4:	9306      	str	r3, [sp, #24]
900052b6:	e9cd 410b 	strd	r4, r1, [sp, #44]	@ 0x2c
900052ba:	e9cd 2409 	strd	r2, r4, [sp, #36]	@ 0x24
900052be:	490f      	ldr	r1, [pc, #60]	@ (900052fc <_Z23getFont_calibri_20_4bppv+0x74>)
900052c0:	4a0f      	ldr	r2, [pc, #60]	@ (90005300 <_Z23getFont_calibri_20_4bppv+0x78>)
900052c2:	9108      	str	r1, [sp, #32]
900052c4:	2114      	movs	r1, #20
900052c6:	9207      	str	r2, [sp, #28]
900052c8:	2204      	movs	r2, #4
900052ca:	9100      	str	r1, [sp, #0]
900052cc:	490d      	ldr	r1, [pc, #52]	@ (90005304 <_Z23getFont_calibri_20_4bppv+0x7c>)
900052ce:	e9cd 2303 	strd	r2, r3, [sp, #12]
900052d2:	e9cd 4401 	strd	r4, r4, [sp, #4]
900052d6:	2316      	movs	r3, #22
900052d8:	222f      	movs	r2, #47	@ 0x2f
900052da:	f7ff fcd3 	bl	90004c84 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
900052de:	480a      	ldr	r0, [pc, #40]	@ (90005308 <_Z23getFont_calibri_20_4bppv+0x80>)
900052e0:	f025 f858 	bl	9002a394 <atexit>
900052e4:	4628      	mov	r0, r5
900052e6:	f024 fccf 	bl	90029c88 <__cxa_guard_release>
}
900052ea:	4802      	ldr	r0, [pc, #8]	@ (900052f4 <_Z23getFont_calibri_20_4bppv+0x6c>)
900052ec:	b00f      	add	sp, #60	@ 0x3c
900052ee:	bd30      	pop	{r4, r5, pc}
900052f0:	24007710 	.word	0x24007710
900052f4:	24007714 	.word	0x24007714
900052f8:	9002d6b8 	.word	0x9002d6b8
900052fc:	9002e8ac 	.word	0x9002e8ac
90005300:	9002e8f0 	.word	0x9002e8f0
90005304:	90200c58 	.word	0x90200c58
90005308:	90005285 	.word	0x90005285

9000530c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
9000530c:	4770      	bx	lr
9000530e:	bf00      	nop

90005310 <_Z23getFont_verdana_10_4bppv>:
{
90005310:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90005312:	4d18      	ldr	r5, [pc, #96]	@ (90005374 <_Z23getFont_verdana_10_4bppv+0x64>)
{
90005314:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90005316:	682c      	ldr	r4, [r5, #0]
90005318:	f3bf 8f5b 	dmb	ish
9000531c:	f014 0401 	ands.w	r4, r4, #1
90005320:	d002      	beq.n	90005328 <_Z23getFont_verdana_10_4bppv+0x18>
    return verdana_10_4bpp;
}
90005322:	4815      	ldr	r0, [pc, #84]	@ (90005378 <_Z23getFont_verdana_10_4bppv+0x68>)
90005324:	b00f      	add	sp, #60	@ 0x3c
90005326:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90005328:	4628      	mov	r0, r5
9000532a:	f024 fca1 	bl	90029c70 <__cxa_guard_acquire>
9000532e:	2800      	cmp	r0, #0
90005330:	d0f7      	beq.n	90005322 <_Z23getFont_verdana_10_4bppv+0x12>
90005332:	213f      	movs	r1, #63	@ 0x3f
90005334:	2201      	movs	r2, #1
90005336:	230a      	movs	r3, #10
90005338:	2004      	movs	r0, #4
9000533a:	9204      	str	r2, [sp, #16]
9000533c:	9300      	str	r3, [sp, #0]
9000533e:	9003      	str	r0, [sp, #12]
90005340:	480d      	ldr	r0, [pc, #52]	@ (90005378 <_Z23getFont_verdana_10_4bppv+0x68>)
90005342:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
90005346:	490d      	ldr	r1, [pc, #52]	@ (9000537c <_Z23getFont_verdana_10_4bppv+0x6c>)
90005348:	9108      	str	r1, [sp, #32]
9000534a:	490d      	ldr	r1, [pc, #52]	@ (90005380 <_Z23getFont_verdana_10_4bppv+0x70>)
9000534c:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90005350:	9107      	str	r1, [sp, #28]
90005352:	490c      	ldr	r1, [pc, #48]	@ (90005384 <_Z23getFont_verdana_10_4bppv+0x74>)
90005354:	e9cd 4405 	strd	r4, r4, [sp, #20]
90005358:	e9cd 4401 	strd	r4, r4, [sp, #4]
9000535c:	f7ff fc92 	bl	90004c84 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90005360:	4809      	ldr	r0, [pc, #36]	@ (90005388 <_Z23getFont_verdana_10_4bppv+0x78>)
90005362:	f025 f817 	bl	9002a394 <atexit>
90005366:	4628      	mov	r0, r5
90005368:	f024 fc8e 	bl	90029c88 <__cxa_guard_release>
}
9000536c:	4802      	ldr	r0, [pc, #8]	@ (90005378 <_Z23getFont_verdana_10_4bppv+0x68>)
9000536e:	b00f      	add	sp, #60	@ 0x3c
90005370:	bd30      	pop	{r4, r5, pc}
90005372:	bf00      	nop
90005374:	24007740 	.word	0x24007740
90005378:	24007744 	.word	0x24007744
9000537c:	9002e8e8 	.word	0x9002e8e8
90005380:	9002e8f4 	.word	0x9002e8f4
90005384:	90200eec 	.word	0x90200eec
90005388:	9000530d 	.word	0x9000530d

9000538c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
9000538c:	4770      	bx	lr
9000538e:	bf00      	nop

90005390 <_Z23getFont_verdana_40_4bppv>:
{
90005390:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90005392:	4d18      	ldr	r5, [pc, #96]	@ (900053f4 <_Z23getFont_verdana_40_4bppv+0x64>)
{
90005394:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90005396:	682c      	ldr	r4, [r5, #0]
90005398:	f3bf 8f5b 	dmb	ish
9000539c:	f014 0401 	ands.w	r4, r4, #1
900053a0:	d002      	beq.n	900053a8 <_Z23getFont_verdana_40_4bppv+0x18>
    return verdana_40_4bpp;
}
900053a2:	4815      	ldr	r0, [pc, #84]	@ (900053f8 <_Z23getFont_verdana_40_4bppv+0x68>)
900053a4:	b00f      	add	sp, #60	@ 0x3c
900053a6:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
900053a8:	4628      	mov	r0, r5
900053aa:	f024 fc61 	bl	90029c70 <__cxa_guard_acquire>
900053ae:	2800      	cmp	r0, #0
900053b0:	d0f7      	beq.n	900053a2 <_Z23getFont_verdana_40_4bppv+0x12>
900053b2:	213f      	movs	r1, #63	@ 0x3f
900053b4:	2201      	movs	r2, #1
900053b6:	2328      	movs	r3, #40	@ 0x28
900053b8:	2004      	movs	r0, #4
900053ba:	9204      	str	r2, [sp, #16]
900053bc:	9300      	str	r3, [sp, #0]
900053be:	9003      	str	r0, [sp, #12]
900053c0:	480d      	ldr	r0, [pc, #52]	@ (900053f8 <_Z23getFont_verdana_40_4bppv+0x68>)
900053c2:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
900053c6:	490d      	ldr	r1, [pc, #52]	@ (900053fc <_Z23getFont_verdana_40_4bppv+0x6c>)
900053c8:	9108      	str	r1, [sp, #32]
900053ca:	490d      	ldr	r1, [pc, #52]	@ (90005400 <_Z23getFont_verdana_40_4bppv+0x70>)
900053cc:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
900053d0:	9107      	str	r1, [sp, #28]
900053d2:	490c      	ldr	r1, [pc, #48]	@ (90005404 <_Z23getFont_verdana_40_4bppv+0x74>)
900053d4:	e9cd 4405 	strd	r4, r4, [sp, #20]
900053d8:	e9cd 4401 	strd	r4, r4, [sp, #4]
900053dc:	f7ff fc52 	bl	90004c84 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
900053e0:	4809      	ldr	r0, [pc, #36]	@ (90005408 <_Z23getFont_verdana_40_4bppv+0x78>)
900053e2:	f024 ffd7 	bl	9002a394 <atexit>
900053e6:	4628      	mov	r0, r5
900053e8:	f024 fc4e 	bl	90029c88 <__cxa_guard_release>
}
900053ec:	4802      	ldr	r0, [pc, #8]	@ (900053f8 <_Z23getFont_verdana_40_4bppv+0x68>)
900053ee:	b00f      	add	sp, #60	@ 0x3c
900053f0:	bd30      	pop	{r4, r5, pc}
900053f2:	bf00      	nop
900053f4:	24007770 	.word	0x24007770
900053f8:	24007774 	.word	0x24007774
900053fc:	9002e8ec 	.word	0x9002e8ec
90005400:	9002e8f8 	.word	0x9002e8f8
90005404:	90200efc 	.word	0x90200efc
90005408:	9000538d 	.word	0x9000538d

9000540c <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
9000540c:	2000      	movs	r0, #0
9000540e:	4770      	bx	lr

90005410 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
90005410:	2000      	movs	r0, #0
90005412:	4770      	bx	lr

90005414 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
90005414:	b40e      	push	{r1, r2, r3}
90005416:	b500      	push	{lr}
90005418:	b082      	sub	sp, #8
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
9000541a:	2100      	movs	r1, #0
{
9000541c:	ab03      	add	r3, sp, #12
9000541e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
90005422:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
90005424:	f012 fe80 	bl	90018128 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
90005428:	b002      	add	sp, #8
9000542a:	f85d eb04 	ldr.w	lr, [sp], #4
9000542e:	b003      	add	sp, #12
90005430:	4770      	bx	lr
90005432:	bf00      	nop

90005434 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
90005434:	b40c      	push	{r2, r3}
90005436:	b500      	push	{lr}
90005438:	b083      	sub	sp, #12
9000543a:	ab04      	add	r3, sp, #16
9000543c:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
90005440:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
90005442:	f012 fe71 	bl	90018128 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
90005446:	b003      	add	sp, #12
90005448:	f85d eb04 	ldr.w	lr, [sp], #4
9000544c:	b002      	add	sp, #8
9000544e:	4770      	bx	lr

90005450 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
90005450:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
90005452:	b510      	push	{r4, lr}
90005454:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
90005456:	b133      	cbz	r3, 90005466 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
90005458:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
9000545a:	b39b      	cbz	r3, 900054c4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>
            return buffer[pos];
9000545c:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
9000545e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90005462:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
90005464:	b923      	cbnz	r3, 90005470 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
90005466:	4620      	mov	r0, r4
}
90005468:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
9000546c:	f014 bbf0 	b.w	90019c50 <_ZN8touchgfx12TextProvider11getNextCharEv>
        substituteGlyphs();
90005470:	f014 fcec 	bl	90019e4c <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
90005474:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90005476:	2b01      	cmp	r3, #1
90005478:	d92a      	bls.n	900054d0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>
            const uint16_t index = pos + offset;
9000547a:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
9000547c:	1c53      	adds	r3, r2, #1
9000547e:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
90005480:	2b09      	cmp	r3, #9
90005482:	d812      	bhi.n	900054aa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x5a>
90005484:	eb04 0143 	add.w	r1, r4, r3, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
90005488:	f640 103f 	movw	r0, #2367	@ 0x93f
9000548c:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
9000548e:	4281      	cmp	r1, r0
90005490:	d1e9      	bne.n	90005466 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90005492:	eb04 0142 	add.w	r1, r4, r2, lsl #1
90005496:	0052      	lsls	r2, r2, #1
90005498:	8c48      	ldrh	r0, [r1, #34]	@ 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
9000549a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            buffer[pos] = newChar;
9000549e:	4422      	add	r2, r4
900054a0:	f640 113f 	movw	r1, #2367	@ 0x93f
            buffer[index < size ? index : 0] = newChar;
900054a4:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
900054a6:	8451      	strh	r1, [r2, #34]	@ 0x22
        }
900054a8:	e7dd      	b.n	90005466 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[index < size ? index : index - size];
900054aa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900054ae:	f640 113f 	movw	r1, #2367	@ 0x93f
900054b2:	89db      	ldrh	r3, [r3, #14]
900054b4:	428b      	cmp	r3, r1
900054b6:	d1d6      	bne.n	90005466 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
900054b8:	eb04 0142 	add.w	r1, r4, r2, lsl #1
900054bc:	2300      	movs	r3, #0
900054be:	0052      	lsls	r2, r2, #1
900054c0:	8c48      	ldrh	r0, [r1, #34]	@ 0x22
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
900054c2:	e7ea      	b.n	9000549a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x4a>
            assert(used > 0);
900054c4:	4b05      	ldr	r3, [pc, #20]	@ (900054dc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x8c>)
900054c6:	21c5      	movs	r1, #197	@ 0xc5
900054c8:	4a05      	ldr	r2, [pc, #20]	@ (900054e0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x90>)
900054ca:	4806      	ldr	r0, [pc, #24]	@ (900054e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
900054cc:	f024 ff44 	bl	9002a358 <__assert_func>
            assert(offset < used);
900054d0:	4b05      	ldr	r3, [pc, #20]	@ (900054e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x98>)
900054d2:	21cb      	movs	r1, #203	@ 0xcb
900054d4:	4a05      	ldr	r2, [pc, #20]	@ (900054ec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x9c>)
900054d6:	4803      	ldr	r0, [pc, #12]	@ (900054e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
900054d8:	f024 ff3e 	bl	9002a358 <__assert_func>
900054dc:	9002ce58 	.word	0x9002ce58
900054e0:	9002ce64 	.word	0x9002ce64
900054e4:	9002cf10 	.word	0x9002cf10
900054e8:	9002cf5c 	.word	0x9002cf5c
900054ec:	9002cf6c 	.word	0x9002cf6c

900054f0 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
900054f0:	f014 bb77 	b.w	90019be2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

900054f4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
900054f4:	b510      	push	{r4, lr}
900054f6:	b086      	sub	sp, #24
900054f8:	f10d 0c08 	add.w	ip, sp, #8
    va_list pArg;
    va_start(pArg, format);
900054fc:	ac0a      	add	r4, sp, #40	@ 0x28
{
900054fe:	e88c 0006 	stmia.w	ip, {r1, r2}
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
90005502:	461a      	mov	r2, r3
90005504:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90005506:	4661      	mov	r1, ip
90005508:	9401      	str	r4, [sp, #4]
9000550a:	9300      	str	r3, [sp, #0]
9000550c:	9b08      	ldr	r3, [sp, #32]
    va_start(pArg, format);
9000550e:	9405      	str	r4, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
90005510:	f011 f8fc 	bl	9001670c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
90005514:	b006      	add	sp, #24
90005516:	bd10      	pop	{r4, pc}

90005518 <_ZN8touchgfx5Texts11setLanguageEt>:
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
90005518:	b9e0      	cbnz	r0, 90005554 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
{
9000551a:	b538      	push	{r3, r4, r5, lr}
    {
        if (languagesArray[id] != 0)
9000551c:	4b13      	ldr	r3, [pc, #76]	@ (9000556c <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
9000551e:	681b      	ldr	r3, [r3, #0]
90005520:	b1cb      	cbz	r3, 90005556 <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90005522:	4c13      	ldr	r4, [pc, #76]	@ (90005570 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90005524:	4813      	ldr	r0, [pc, #76]	@ (90005574 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90005526:	e9d3 1200 	ldrd	r1, r2, [r3]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
9000552a:	4419      	add	r1, r3
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
9000552c:	441a      	add	r2, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
9000552e:	6021      	str	r1, [r4, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
90005530:	6899      	ldr	r1, [r3, #8]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90005532:	6002      	str	r2, [r0, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
90005534:	185c      	adds	r4, r3, r1
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
90005536:	4b10      	ldr	r3, [pc, #64]	@ (90005578 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
90005538:	2200      	movs	r2, #0
9000553a:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
9000553c:	f000 f83a 	bl	900055b4 <_ZN17TypedTextDatabase8getFontsEv>
90005540:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
90005542:	f000 f835 	bl	900055b0 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
90005546:	4b0d      	ldr	r3, [pc, #52]	@ (9000557c <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
        fonts = f;
90005548:	4a0d      	ldr	r2, [pc, #52]	@ (90005580 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
        typedTexts = data;
9000554a:	601c      	str	r4, [r3, #0]
        numberOfTypedTexts = n;
9000554c:	4b0d      	ldr	r3, [pc, #52]	@ (90005584 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
        fonts = f;
9000554e:	6015      	str	r5, [r2, #0]
        numberOfTypedTexts = n;
90005550:	8018      	strh	r0, [r3, #0]
    }
}
90005552:	bd38      	pop	{r3, r4, r5, pc}
90005554:	4770      	bx	lr
            currentLanguageTypedText = typedTextDatabaseArray[id];
90005556:	4c0c      	ldr	r4, [pc, #48]	@ (90005588 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
            currentLanguagePtr = texts_all_languages;
90005558:	4905      	ldr	r1, [pc, #20]	@ (90005570 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageTypedText = typedTextDatabaseArray[id];
9000555a:	6824      	ldr	r4, [r4, #0]
            currentLanguagePtr = texts_all_languages;
9000555c:	480b      	ldr	r0, [pc, #44]	@ (9000558c <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
            currentLanguageIndices = staticLanguageIndices[id];
9000555e:	4b05      	ldr	r3, [pc, #20]	@ (90005574 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90005560:	4a0b      	ldr	r2, [pc, #44]	@ (90005590 <_ZN8touchgfx5Texts11setLanguageEt+0x78>)
            currentLanguagePtr = texts_all_languages;
90005562:	6008      	str	r0, [r1, #0]
            currentLanguageIndices = staticLanguageIndices[id];
90005564:	601a      	str	r2, [r3, #0]
    if (currentLanguageTypedText)
90005566:	2c00      	cmp	r4, #0
90005568:	d1e5      	bne.n	90005536 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
9000556a:	bd38      	pop	{r3, r4, r5, pc}
9000556c:	240077ac 	.word	0x240077ac
90005570:	240077a4 	.word	0x240077a4
90005574:	240077a0 	.word	0x240077a0
90005578:	240077a8 	.word	0x240077a8
9000557c:	240218bc 	.word	0x240218bc
90005580:	240218c4 	.word	0x240218c4
90005584:	240218c0 	.word	0x240218c0
90005588:	90200f60 	.word	0x90200f60
9000558c:	90200f18 	.word	0x90200f18
90005590:	90200f0c 	.word	0x90200f0c

90005594 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
90005594:	4a04      	ldr	r2, [pc, #16]	@ (900055a8 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
90005596:	4b05      	ldr	r3, [pc, #20]	@ (900055ac <_ZNK8touchgfx5Texts7getTextEt+0x18>)
90005598:	6812      	ldr	r2, [r2, #0]
9000559a:	681b      	ldr	r3, [r3, #0]
9000559c:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
}
900055a0:	eb03 0040 	add.w	r0, r3, r0, lsl #1
900055a4:	4770      	bx	lr
900055a6:	bf00      	nop
900055a8:	240077a0 	.word	0x240077a0
900055ac:	240077a4 	.word	0x240077a4

900055b0 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
900055b0:	2003      	movs	r0, #3
900055b2:	4770      	bx	lr

900055b4 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
900055b4:	4800      	ldr	r0, [pc, #0]	@ (900055b8 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
900055b6:	4770      	bx	lr
900055b8:	240077b0 	.word	0x240077b0

900055bc <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
900055bc:	b510      	push	{r4, lr}
};
900055be:	4c05      	ldr	r4, [pc, #20]	@ (900055d4 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
    &(getFont_calibri_20_4bpp()),
900055c0:	f7ff fe62 	bl	90005288 <_Z23getFont_calibri_20_4bppv>
};
900055c4:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
900055c6:	f7ff fee3 	bl	90005390 <_Z23getFont_verdana_40_4bppv>
};
900055ca:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
900055cc:	f7ff fea0 	bl	90005310 <_Z23getFont_verdana_10_4bppv>
};
900055d0:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
900055d2:	bd10      	pop	{r4, pc}
900055d4:	240077b0 	.word	0x240077b0

900055d8 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
900055d8:	b410      	push	{r4}
    pointArray = 0;
900055da:	2400      	movs	r4, #0
900055dc:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
900055de:	600c      	str	r4, [r1, #0]
    commandArray = 0;
900055e0:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
900055e2:	601c      	str	r4, [r3, #0]
}
900055e4:	f85d 4b04 	ldr.w	r4, [sp], #4
900055e8:	4770      	bx	lr
900055ea:	bf00      	nop

900055ec <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
900055ec:	4770      	bx	lr
900055ee:	bf00      	nop

900055f0 <_ZN19FrontendApplicationD0Ev>:
900055f0:	b510      	push	{r4, lr}
900055f2:	4604      	mov	r4, r0
900055f4:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
900055f8:	f024 fb38 	bl	90029c6c <_ZdlPvj>
900055fc:	4620      	mov	r0, r4
900055fe:	bd10      	pop	{r4, pc}

90005600 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
90005600:	b510      	push	{r4, lr}
90005602:	4604      	mov	r4, r0
    {
        model.tick();
90005604:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
90005608:	f000 f818 	bl	9000563c <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
9000560c:	4620      	mov	r0, r4
    }
9000560e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
90005612:	f011 bd7d 	b.w	90017110 <_ZN8touchgfx11Application15handleTickEventEv>
90005616:	bf00      	nop

90005618 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
90005618:	b510      	push	{r4, lr}
9000561a:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
9000561c:	f7ff fa90 	bl	90004b40 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
90005620:	4b01      	ldr	r3, [pc, #4]	@ (90005628 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
90005622:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
90005624:	6023      	str	r3, [r4, #0]
}
90005626:	bd10      	pop	{r4, pc}
90005628:	9002db1c 	.word	0x9002db1c

9000562c <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>
#include "../../STM32CubeIDE/Application/User/TouchGFX/App/TC_Bridge.hpp"

Model::Model() : modelListener(0)
9000562c:	2300      	movs	r3, #0
9000562e:	b510      	push	{r4, lr}
90005630:	4604      	mov	r4, r0
90005632:	6003      	str	r3, [r0, #0]
{
	setModelInstance(this);
90005634:	f7fb fa72 	bl	90000b1c <_Z16setModelInstanceP5Model>
}
90005638:	4620      	mov	r0, r4
9000563a:	bd10      	pop	{r4, pc}

9000563c <_ZN5Model4tickEv>:

void Model::tick()
{

}
9000563c:	4770      	bx	lr
9000563e:	bf00      	nop

90005640 <_ZN5Model6TC_GetEPKc>:

void Model::TC_Get(const char* data)
{
    modelListener->updateTextBox(data);
90005640:	6800      	ldr	r0, [r0, #0]
90005642:	6803      	ldr	r3, [r0, #0]
90005644:	689b      	ldr	r3, [r3, #8]
90005646:	4718      	bx	r3

90005648 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {}
90005648:	4770      	bx	lr
9000564a:	bf00      	nop

9000564c <_ZThn4_N16Screen1PresenterD1Ev>:
9000564c:	3804      	subs	r0, #4
9000564e:	4770      	bx	lr

90005650 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
90005650:	4770      	bx	lr
90005652:	bf00      	nop

90005654 <_ZN16Screen1PresenterD0Ev>:
90005654:	b510      	push	{r4, lr}
90005656:	4604      	mov	r4, r0
90005658:	2110      	movs	r1, #16
9000565a:	f024 fb07 	bl	90029c6c <_ZdlPvj>
9000565e:	4620      	mov	r0, r4
90005660:	bd10      	pop	{r4, pc}
90005662:	bf00      	nop

90005664 <_ZThn4_N16Screen1PresenterD0Ev>:
90005664:	b510      	push	{r4, lr}
90005666:	1f04      	subs	r4, r0, #4
90005668:	2110      	movs	r1, #16
9000566a:	4620      	mov	r0, r4
9000566c:	f024 fafe 	bl	90029c6c <_ZdlPvj>
90005670:	4620      	mov	r0, r4
90005672:	bd10      	pop	{r4, pc}

90005674 <_ZN16Screen1Presenter13updateTextBoxEPKc>:

}

void Screen1Presenter::updateTextBox(const char* data)
{
    view.updateTCTextBox(data);
90005674:	68c0      	ldr	r0, [r0, #12]
90005676:	f000 b83b 	b.w	900056f0 <_ZN11Screen1View15updateTCTextBoxEPKc>
9000567a:	bf00      	nop

9000567c <_ZThn4_N16Screen1Presenter13updateTextBoxEPKc>:

    void updateTextBox(const char * data) override;
9000567c:	6880      	ldr	r0, [r0, #8]
9000567e:	f000 b837 	b.w	900056f0 <_ZN11Screen1View15updateTCTextBoxEPKc>
90005682:	bf00      	nop

90005684 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
90005684:	b410      	push	{r4}
    : view(v)
90005686:	4a05      	ldr	r2, [pc, #20]	@ (9000569c <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
    ModelListener() : model(0) {}
90005688:	2400      	movs	r4, #0
9000568a:	60c1      	str	r1, [r0, #12]
9000568c:	6084      	str	r4, [r0, #8]
9000568e:	f102 041c 	add.w	r4, r2, #28
90005692:	6002      	str	r2, [r0, #0]
90005694:	6044      	str	r4, [r0, #4]
}
90005696:	f85d 4b04 	ldr.w	r4, [sp], #4
9000569a:	4770      	bx	lr
9000569c:	9002db70 	.word	0x9002db70

900056a0 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
900056a0:	4770      	bx	lr
900056a2:	bf00      	nop

900056a4 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
900056a4:	4b03      	ldr	r3, [pc, #12]	@ (900056b4 <_ZN11Screen1ViewD1Ev+0x10>)
900056a6:	b510      	push	{r4, lr}
900056a8:	4604      	mov	r4, r0
900056aa:	6003      	str	r3, [r0, #0]
900056ac:	f7ff fb6a 	bl	90004d84 <_ZN15Screen1ViewBaseD1Ev>
900056b0:	4620      	mov	r0, r4
900056b2:	bd10      	pop	{r4, pc}
900056b4:	9002dba0 	.word	0x9002dba0

900056b8 <_ZN11Screen1ViewD0Ev>:
900056b8:	4b06      	ldr	r3, [pc, #24]	@ (900056d4 <_ZN11Screen1ViewD0Ev+0x1c>)
900056ba:	b510      	push	{r4, lr}
900056bc:	4604      	mov	r4, r0
900056be:	6003      	str	r3, [r0, #0]
900056c0:	f7ff fb60 	bl	90004d84 <_ZN15Screen1ViewBaseD1Ev>
900056c4:	f44f 71a8 	mov.w	r1, #336	@ 0x150
900056c8:	4620      	mov	r0, r4
900056ca:	f024 facf 	bl	90029c6c <_ZdlPvj>
900056ce:	4620      	mov	r0, r4
900056d0:	bd10      	pop	{r4, pc}
900056d2:	bf00      	nop
900056d4:	9002dba0 	.word	0x9002dba0

900056d8 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
900056d8:	b510      	push	{r4, lr}
900056da:	4604      	mov	r4, r0
900056dc:	f7ff fc42 	bl	90004f64 <_ZN15Screen1ViewBaseC1Ev>
900056e0:	4b01      	ldr	r3, [pc, #4]	@ (900056e8 <_ZN11Screen1ViewC1Ev+0x10>)
}
900056e2:	4620      	mov	r0, r4
Screen1View::Screen1View()
900056e4:	6023      	str	r3, [r4, #0]
}
900056e6:	bd10      	pop	{r4, pc}
900056e8:	9002dba0 	.word	0x9002dba0

900056ec <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
900056ec:	f7ff bb4c 	b.w	90004d88 <_ZN15Screen1ViewBase11setupScreenEv>

900056f0 <_ZN11Screen1View15updateTCTextBoxEPKc>:


void Screen1View::updateTCTextBox(const char* newText)
{
900056f0:	b510      	push	{r4, lr}
900056f2:	4604      	mov	r4, r0
	//Unicode::snprintf(TC_TextBoxBuffer, TC_TEXTBOX_SIZE, "%s",newText);
	Unicode::strncpy(TC_TextBoxBuffer, newText, TC_TEXTBOX_SIZE);
900056f4:	220a      	movs	r2, #10
900056f6:	f500 7096 	add.w	r0, r0, #300	@ 0x12c
900056fa:	f014 fdf0 	bl	9001a2de <_ZN8touchgfx7Unicode7strncpyEPtPKct>
    TC_TextBox.invalidate();
900056fe:	f104 00e0 	add.w	r0, r4, #224	@ 0xe0
}
90005702:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    TC_TextBox.invalidate();
90005706:	f012 be3a 	b.w	9001837e <_ZNK8touchgfx8Drawable10invalidateEv>
9000570a:	bf00      	nop

9000570c <FT5336_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
9000570c:	f240 1c01 	movw	ip, #257	@ 0x101
  Capabilities->Gesture    = 1;
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90005710:	2005      	movs	r0, #5
  Capabilities->MaxXl      = FT5336_MAX_X_LENGTH;
90005712:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90005716:	f44f 7388 	mov.w	r3, #272	@ 0x110
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
9000571a:	7088      	strb	r0, [r1, #2]

  return FT5336_OK;
}
9000571c:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
9000571e:	f8a1 c000 	strh.w	ip, [r1]
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90005722:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
90005726:	4770      	bx	lr

90005728 <FT5336_DeInit>:
  */
int32_t FT5336_DeInit(FT5336_Object_t *pObj)
{
  int32_t ret = FT5336_OK;

  if(pObj->IsInitialized == 1U)
90005728:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
9000572c:	2b01      	cmp	r3, #1
9000572e:	d102      	bne.n	90005736 <FT5336_DeInit+0xe>
  {
    pObj->IsInitialized = 0;
90005730:	2300      	movs	r3, #0
90005732:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
  }

  return ret;
}
90005736:	2000      	movs	r0, #0
90005738:	4770      	bx	lr
9000573a:	bf00      	nop

9000573c <FT5336_ITStatus>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return FT5336_OK as feature not applicable to FT5336 */
  return FT5336_OK;
}
9000573c:	2000      	movs	r0, #0
9000573e:	4770      	bx	lr

90005740 <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90005740:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90005742:	6904      	ldr	r4, [r0, #16]
90005744:	8900      	ldrh	r0, [r0, #8]
90005746:	46a4      	mov	ip, r4
}
90005748:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
9000574c:	4760      	bx	ip
9000574e:	bf00      	nop

90005750 <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90005750:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90005752:	68c4      	ldr	r4, [r0, #12]
90005754:	8900      	ldrh	r0, [r0, #8]
90005756:	46a4      	mov	ip, r4
}
90005758:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
9000575c:	4760      	bx	ip
9000575e:	bf00      	nop

90005760 <FT5336_GestureConfig>:
{
90005760:	b570      	push	{r4, r5, r6, lr}
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90005762:	f100 0518 	add.w	r5, r0, #24
{
90005766:	460e      	mov	r6, r1
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90005768:	7809      	ldrb	r1, [r1, #0]
9000576a:	4628      	mov	r0, r5
9000576c:	f000 f96c 	bl	90005a48 <ft5336_radian_value>
90005770:	4604      	mov	r4, r0
  ret += ft5336_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
90005772:	7931      	ldrb	r1, [r6, #4]
90005774:	4628      	mov	r0, r5
90005776:	f000 f975 	bl	90005a64 <ft5336_offset_left_right>
9000577a:	4404      	add	r4, r0
  ret += ft5336_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
9000577c:	7a31      	ldrb	r1, [r6, #8]
9000577e:	4628      	mov	r0, r5
90005780:	f000 f97e 	bl	90005a80 <ft5336_offset_up_down>
90005784:	4404      	add	r4, r0
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90005786:	7b31      	ldrb	r1, [r6, #12]
90005788:	4628      	mov	r0, r5
9000578a:	f000 f987 	bl	90005a9c <ft5336_disatnce_left_right>
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
9000578e:	7c31      	ldrb	r1, [r6, #16]
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90005790:	4404      	add	r4, r0
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90005792:	4628      	mov	r0, r5
90005794:	f000 f990 	bl	90005ab8 <ft5336_distance_up_down>
90005798:	4603      	mov	r3, r0
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
9000579a:	7d31      	ldrb	r1, [r6, #20]
9000579c:	4628      	mov	r0, r5
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
9000579e:	441c      	add	r4, r3
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
900057a0:	f000 f998 	bl	90005ad4 <ft5336_distance_zoom>
  if(ret != FT5336_OK)
900057a4:	42c4      	cmn	r4, r0
}
900057a6:	bf14      	ite	ne
900057a8:	f04f 30ff 	movne.w	r0, #4294967295
900057ac:	2000      	moveq	r0, #0
900057ae:	bd70      	pop	{r4, r5, r6, pc}

900057b0 <FT5336_ReadID>:
  return ft5336_chip_id(&pObj->Ctx, (uint8_t *)Id);
900057b0:	3018      	adds	r0, #24
900057b2:	f000 b9ab 	b.w	90005b0c <ft5336_chip_id>
900057b6:	bf00      	nop

900057b8 <FT5336_GetState>:
{
900057b8:	b530      	push	{r4, r5, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
900057ba:	f100 0518 	add.w	r5, r0, #24
{
900057be:	b083      	sub	sp, #12
900057c0:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
900057c2:	4628      	mov	r0, r5
900057c4:	a901      	add	r1, sp, #4
900057c6:	f000 f931 	bl	90005a2c <ft5336_td_status>
900057ca:	bb10      	cbnz	r0, 90005812 <FT5336_GetState+0x5a>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
900057cc:	f89d 3004 	ldrb.w	r3, [sp, #4]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
900057d0:	2b05      	cmp	r3, #5
900057d2:	bf94      	ite	ls
900057d4:	4619      	movls	r1, r3
900057d6:	2100      	movhi	r1, #0
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
900057d8:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
900057da:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
900057dc:	4628      	mov	r0, r5
900057de:	2103      	movs	r1, #3
900057e0:	eb0d 0203 	add.w	r2, sp, r3
900057e4:	f000 f910 	bl	90005a08 <ft5336_read_reg>
900057e8:	b9b0      	cbnz	r0, 90005818 <FT5336_GetState+0x60>
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900057ea:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900057ee:	f89d 3006 	ldrb.w	r3, [sp, #6]
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900057f2:	0212      	lsls	r2, r2, #8
900057f4:	f89d 1005 	ldrb.w	r1, [sp, #5]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900057f8:	021b      	lsls	r3, r3, #8
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900057fa:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900057fe:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90005802:	430a      	orrs	r2, r1
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90005804:	f89d 1007 	ldrb.w	r1, [sp, #7]
90005808:	430b      	orrs	r3, r1
9000580a:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
9000580e:	b003      	add	sp, #12
90005810:	bd30      	pop	{r4, r5, pc}
90005812:	f04f 31ff 	mov.w	r1, #4294967295
90005816:	e7df      	b.n	900057d8 <FT5336_GetState+0x20>
    ret = FT5336_ERROR;
90005818:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
9000581c:	e7f7      	b.n	9000580e <FT5336_GetState+0x56>
9000581e:	bf00      	nop

90005820 <FT5336_GetMultiTouchState>:
{
90005820:	b570      	push	{r4, r5, r6, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90005822:	f100 0518 	add.w	r5, r0, #24
{
90005826:	b088      	sub	sp, #32
90005828:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
9000582a:	4628      	mov	r0, r5
9000582c:	4669      	mov	r1, sp
9000582e:	f000 f8fd 	bl	90005a2c <ft5336_td_status>
90005832:	2800      	cmp	r0, #0
90005834:	f040 809a 	bne.w	9000596c <FT5336_GetMultiTouchState+0x14c>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90005838:	f89d 3000 	ldrb.w	r3, [sp]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
9000583c:	2b05      	cmp	r3, #5
9000583e:	bf94      	ite	ls
90005840:	4619      	movls	r1, r3
90005842:	2100      	movhi	r1, #0
90005844:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90005846:	231e      	movs	r3, #30
90005848:	466a      	mov	r2, sp
9000584a:	4628      	mov	r0, r5
9000584c:	2103      	movs	r1, #3
9000584e:	f000 f8db 	bl	90005a08 <ft5336_read_reg>
90005852:	2800      	cmp	r0, #0
90005854:	f040 808d 	bne.w	90005972 <FT5336_GetMultiTouchState+0x152>
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005858:	f89d 1000 	ldrb.w	r1, [sp]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000585c:	f89d 3002 	ldrb.w	r3, [sp, #2]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005860:	020a      	lsls	r2, r1, #8
90005862:	f89d 5001 	ldrb.w	r5, [sp, #1]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005866:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005868:	f89d c007 	ldrb.w	ip, [sp, #7]
9000586c:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005870:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005872:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005876:	f89d 6011 	ldrb.w	r6, [sp, #17]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000587a:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000587c:	f89d 5003 	ldrb.w	r5, [sp, #3]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005880:	6421      	str	r1, [r4, #64]	@ 0x40
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005882:	0936      	lsrs	r6, r6, #4
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005884:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005886:	6062      	str	r2, [r4, #4]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005888:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000588c:	61a3      	str	r3, [r4, #24]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000588e:	f89d 3005 	ldrb.w	r3, [sp, #5]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005892:	f89d 1006 	ldrb.w	r1, [sp, #6]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005896:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005898:	62e2      	str	r2, [r4, #44]	@ 0x2c
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000589a:	f89d 200b 	ldrb.w	r2, [sp, #11]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000589e:	020d      	lsls	r5, r1, #8
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900058a0:	6563      	str	r3, [r4, #84]	@ 0x54
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900058a2:	0989      	lsrs	r1, r1, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900058a4:	f89d 300c 	ldrb.w	r3, [sp, #12]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900058a8:	0912      	lsrs	r2, r2, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900058aa:	6461      	str	r1, [r4, #68]	@ 0x44
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900058ac:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900058b0:	f89d 100a 	ldrb.w	r1, [sp, #10]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900058b4:	65a2      	str	r2, [r4, #88]	@ 0x58
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900058b6:	021a      	lsls	r2, r3, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900058b8:	6321      	str	r1, [r4, #48]	@ 0x30
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900058ba:	ea45 050c 	orr.w	r5, r5, ip
900058be:	f402 6170 	and.w	r1, r2, #3840	@ 0xf00
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900058c2:	f89d 2008 	ldrb.w	r2, [sp, #8]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900058c6:	099b      	lsrs	r3, r3, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900058c8:	60a5      	str	r5, [r4, #8]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900058ca:	0212      	lsls	r2, r2, #8
900058cc:	f89d 5009 	ldrb.w	r5, [sp, #9]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900058d0:	64a3      	str	r3, [r4, #72]	@ 0x48
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900058d2:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900058d6:	f89d 3010 	ldrb.w	r3, [sp, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900058da:	432a      	orrs	r2, r5
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900058dc:	6363      	str	r3, [r4, #52]	@ 0x34
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900058de:	f89d 300e 	ldrb.w	r3, [sp, #14]
900058e2:	61e2      	str	r2, [r4, #28]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900058e4:	f89d 200d 	ldrb.w	r2, [sp, #13]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900058e8:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900058ea:	430a      	orrs	r2, r1
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900058ec:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900058f0:	60e2      	str	r2, [r4, #12]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900058f2:	f89d 200f 	ldrb.w	r2, [sp, #15]
900058f6:	4313      	orrs	r3, r2
900058f8:	6223      	str	r3, [r4, #32]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900058fa:	65e6      	str	r6, [r4, #92]	@ 0x5c
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900058fc:	f89d 1012 	ldrb.w	r1, [sp, #18]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005900:	f89d 3014 	ldrb.w	r3, [sp, #20]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005904:	020a      	lsls	r2, r1, #8
90005906:	f89d 5013 	ldrb.w	r5, [sp, #19]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000590a:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000590c:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005910:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005912:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005916:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005918:	f89d 5015 	ldrb.w	r5, [sp, #21]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000591c:	64e1      	str	r1, [r4, #76]	@ 0x4c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000591e:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005920:	f89d 1018 	ldrb.w	r1, [sp, #24]
90005924:	6122      	str	r2, [r4, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005926:	6263      	str	r3, [r4, #36]	@ 0x24
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005928:	020b      	lsls	r3, r1, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
9000592a:	f89d 2016 	ldrb.w	r2, [sp, #22]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000592e:	0989      	lsrs	r1, r1, #6
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005930:	f89d 5017 	ldrb.w	r5, [sp, #23]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005934:	63a2      	str	r2, [r4, #56]	@ 0x38
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005936:	f403 6270 	and.w	r2, r3, #3840	@ 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000593a:	f89d 301d 	ldrb.w	r3, [sp, #29]
9000593e:	092d      	lsrs	r5, r5, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005940:	6521      	str	r1, [r4, #80]	@ 0x50
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005942:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005944:	f89d 101c 	ldrb.w	r1, [sp, #28]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005948:	6625      	str	r5, [r4, #96]	@ 0x60
9000594a:	6663      	str	r3, [r4, #100]	@ 0x64
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000594c:	f89d 301a 	ldrb.w	r3, [sp, #26]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005950:	63e1      	str	r1, [r4, #60]	@ 0x3c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005952:	021b      	lsls	r3, r3, #8
90005954:	f89d 101b 	ldrb.w	r1, [sp, #27]
90005958:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
9000595c:	430b      	orrs	r3, r1
9000595e:	62a3      	str	r3, [r4, #40]	@ 0x28
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005960:	f89d 3019 	ldrb.w	r3, [sp, #25]
90005964:	4313      	orrs	r3, r2
90005966:	6163      	str	r3, [r4, #20]
}
90005968:	b008      	add	sp, #32
9000596a:	bd70      	pop	{r4, r5, r6, pc}
9000596c:	f04f 31ff 	mov.w	r1, #4294967295
90005970:	e768      	b.n	90005844 <FT5336_GetMultiTouchState+0x24>
    ret = FT5336_ERROR;
90005972:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90005976:	e7f7      	b.n	90005968 <FT5336_GetMultiTouchState+0x148>

90005978 <FT5336_GetGesture>:
  return ft5336_gest_id(&pObj->Ctx, GestureId);
90005978:	3018      	adds	r0, #24
9000597a:	f000 b84d 	b.w	90005a18 <ft5336_gest_id>
9000597e:	bf00      	nop

90005980 <FT5336_EnableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_TRIGGER);
90005980:	2101      	movs	r1, #1
90005982:	3018      	adds	r0, #24
90005984:	f000 b8b4 	b.w	90005af0 <ft5336_g_mode>

90005988 <FT5336_DisableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90005988:	2100      	movs	r1, #0
9000598a:	3018      	adds	r0, #24
9000598c:	f000 b8b0 	b.w	90005af0 <ft5336_g_mode>

90005990 <FT5336_Init>:
{
90005990:	b570      	push	{r4, r5, r6, lr}
  if(pObj->IsInitialized == 0U)
90005992:	f890 5024 	ldrb.w	r5, [r0, #36]	@ 0x24
90005996:	b98d      	cbnz	r5, 900059bc <FT5336_Init+0x2c>
    pObj->IO.Init();
90005998:	4606      	mov	r6, r0
9000599a:	4604      	mov	r4, r0
9000599c:	f856 3b18 	ldr.w	r3, [r6], #24
900059a0:	4798      	blx	r3
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
900059a2:	4629      	mov	r1, r5
900059a4:	4630      	mov	r0, r6
900059a6:	f000 f8a3 	bl	90005af0 <ft5336_g_mode>
  if(ret != FT5336_OK)
900059aa:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
900059ac:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
900059b0:	bf18      	it	ne
900059b2:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
900059b4:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
  if(ret != FT5336_OK)
900059b8:	4240      	negs	r0, r0
}
900059ba:	bd70      	pop	{r4, r5, r6, pc}
900059bc:	2000      	movs	r0, #0
900059be:	bd70      	pop	{r4, r5, r6, pc}

900059c0 <FT5336_ClearIT>:
int32_t FT5336_ClearIT(FT5336_Object_t *pObj)
900059c0:	2000      	movs	r0, #0
900059c2:	4770      	bx	lr

900059c4 <FT5336_RegisterBusIO>:
  if (pObj == NULL)
900059c4:	b1c0      	cbz	r0, 900059f8 <FT5336_RegisterBusIO+0x34>
    pObj->IO.Address   = pIO->Address;
900059c6:	890a      	ldrh	r2, [r1, #8]
{
900059c8:	b430      	push	{r4, r5}
    pObj->IO.DeInit    = pIO->DeInit;
900059ca:	e9d1 3400 	ldrd	r3, r4, [r1]
    pObj->IO.Address   = pIO->Address;
900059ce:	8102      	strh	r2, [r0, #8]
    pObj->IO.DeInit    = pIO->DeInit;
900059d0:	e9c0 3400 	strd	r3, r4, [r0]
    pObj->IO.WriteReg  = pIO->WriteReg;
900059d4:	694a      	ldr	r2, [r1, #20]
900059d6:	e9d1 5403 	ldrd	r5, r4, [r1, #12]
    pObj->Ctx.ReadReg  = ReadRegWrap;
900059da:	4909      	ldr	r1, [pc, #36]	@ (90005a00 <FT5336_RegisterBusIO+0x3c>)
    pObj->IO.WriteReg  = pIO->WriteReg;
900059dc:	60c5      	str	r5, [r0, #12]
900059de:	e9c0 4204 	strd	r4, r2, [r0, #16]
    pObj->Ctx.WriteReg = WriteRegWrap;
900059e2:	4a08      	ldr	r2, [pc, #32]	@ (90005a04 <FT5336_RegisterBusIO+0x40>)
    pObj->Ctx.handle   = pObj;
900059e4:	e9c0 1007 	strd	r1, r0, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
900059e8:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
900059ea:	b10b      	cbz	r3, 900059f0 <FT5336_RegisterBusIO+0x2c>
}
900059ec:	bc30      	pop	{r4, r5}
      ret = pObj->IO.Init();
900059ee:	4718      	bx	r3
}
900059f0:	f04f 30ff 	mov.w	r0, #4294967295
900059f4:	bc30      	pop	{r4, r5}
900059f6:	4770      	bx	lr
900059f8:	f04f 30ff 	mov.w	r0, #4294967295
900059fc:	4770      	bx	lr
900059fe:	bf00      	nop
90005a00:	90005741 	.word	0x90005741
90005a04:	90005751 	.word	0x90005751

90005a08 <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
90005a08:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90005a0a:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90005a0e:	46a4      	mov	ip, r4
}
90005a10:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90005a14:	4760      	bx	ip
90005a16:	bf00      	nop

90005a18 <ft5336_gest_id>:
  * @param  ctx Component context 
  * @param  value pointer to the value of FT5336_GEST_ID_REG register
  * @retval Component status
  */
int32_t  ft5336_gest_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90005a18:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90005a1a:	2301      	movs	r3, #1
{
90005a1c:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90005a1e:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90005a22:	4619      	mov	r1, r3
90005a24:	46a4      	mov	ip, r4
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
}
90005a26:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90005a2a:	4760      	bx	ip

90005a2c <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
90005a2c:	b538      	push	{r3, r4, r5, lr}
90005a2e:	460c      	mov	r4, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90005a30:	2301      	movs	r3, #1
90005a32:	2102      	movs	r1, #2
90005a34:	4622      	mov	r2, r4
90005a36:	e9d0 5001 	ldrd	r5, r0, [r0, #4]
90005a3a:	47a8      	blx	r5
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
  
  if(ret == 0)
90005a3c:	b918      	cbnz	r0, 90005a46 <ft5336_td_status+0x1a>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
90005a3e:	7823      	ldrb	r3, [r4, #0]
90005a40:	f003 030f 	and.w	r3, r3, #15
90005a44:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
90005a46:	bd38      	pop	{r3, r4, r5, pc}

90005a48 <ft5336_radian_value>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_RADIAN_VALUE_REG register
  * @retval Component status
  */
int32_t  ft5336_radian_value(ft5336_ctx_t *ctx, uint8_t value)
{
90005a48:	b510      	push	{r4, lr}
90005a4a:	460c      	mov	r4, r1
90005a4c:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005a4e:	2301      	movs	r3, #1
90005a50:	2191      	movs	r1, #145	@ 0x91
{
90005a52:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005a56:	f10d 0207 	add.w	r2, sp, #7
90005a5a:	6804      	ldr	r4, [r0, #0]
90005a5c:	6880      	ldr	r0, [r0, #8]
90005a5e:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
}
90005a60:	b002      	add	sp, #8
90005a62:	bd10      	pop	{r4, pc}

90005a64 <ft5336_offset_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90005a64:	b510      	push	{r4, lr}
90005a66:	460c      	mov	r4, r1
90005a68:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005a6a:	2301      	movs	r3, #1
90005a6c:	2192      	movs	r1, #146	@ 0x92
{
90005a6e:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005a72:	f10d 0207 	add.w	r2, sp, #7
90005a76:	6804      	ldr	r4, [r0, #0]
90005a78:	6880      	ldr	r0, [r0, #8]
90005a7a:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
}
90005a7c:	b002      	add	sp, #8
90005a7e:	bd10      	pop	{r4, pc}

90005a80 <ft5336_offset_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90005a80:	b510      	push	{r4, lr}
90005a82:	460c      	mov	r4, r1
90005a84:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005a86:	2301      	movs	r3, #1
90005a88:	2193      	movs	r1, #147	@ 0x93
{
90005a8a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005a8e:	f10d 0207 	add.w	r2, sp, #7
90005a92:	6804      	ldr	r4, [r0, #0]
90005a94:	6880      	ldr	r0, [r0, #8]
90005a96:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
}
90005a98:	b002      	add	sp, #8
90005a9a:	bd10      	pop	{r4, pc}

90005a9c <ft5336_disatnce_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_disatnce_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90005a9c:	b510      	push	{r4, lr}
90005a9e:	460c      	mov	r4, r1
90005aa0:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005aa2:	2301      	movs	r3, #1
90005aa4:	2194      	movs	r1, #148	@ 0x94
{
90005aa6:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005aaa:	f10d 0207 	add.w	r2, sp, #7
90005aae:	6804      	ldr	r4, [r0, #0]
90005ab0:	6880      	ldr	r0, [r0, #8]
90005ab2:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
}
90005ab4:	b002      	add	sp, #8
90005ab6:	bd10      	pop	{r4, pc}

90005ab8 <ft5336_distance_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90005ab8:	b510      	push	{r4, lr}
90005aba:	460c      	mov	r4, r1
90005abc:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005abe:	2301      	movs	r3, #1
90005ac0:	2195      	movs	r1, #149	@ 0x95
{
90005ac2:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005ac6:	f10d 0207 	add.w	r2, sp, #7
90005aca:	6804      	ldr	r4, [r0, #0]
90005acc:	6880      	ldr	r0, [r0, #8]
90005ace:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
}
90005ad0:	b002      	add	sp, #8
90005ad2:	bd10      	pop	{r4, pc}

90005ad4 <ft5336_distance_zoom>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_ZOOM_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_zoom(ft5336_ctx_t *ctx, uint8_t value)
{
90005ad4:	b510      	push	{r4, lr}
90005ad6:	460c      	mov	r4, r1
90005ad8:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005ada:	2301      	movs	r3, #1
90005adc:	2196      	movs	r1, #150	@ 0x96
{
90005ade:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005ae2:	f10d 0207 	add.w	r2, sp, #7
90005ae6:	6804      	ldr	r4, [r0, #0]
90005ae8:	6880      	ldr	r0, [r0, #8]
90005aea:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
}
90005aec:	b002      	add	sp, #8
90005aee:	bd10      	pop	{r4, pc}

90005af0 <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
90005af0:	b510      	push	{r4, lr}
90005af2:	460c      	mov	r4, r1
90005af4:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005af6:	2301      	movs	r3, #1
90005af8:	21a4      	movs	r1, #164	@ 0xa4
{
90005afa:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005afe:	f10d 0207 	add.w	r2, sp, #7
90005b02:	6804      	ldr	r4, [r0, #0]
90005b04:	6880      	ldr	r0, [r0, #8]
90005b06:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
}
90005b08:	b002      	add	sp, #8
90005b0a:	bd10      	pop	{r4, pc}

90005b0c <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90005b0c:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90005b0e:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
{
90005b12:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90005b14:	2301      	movs	r3, #1
90005b16:	46a4      	mov	ip, r4
90005b18:	21a8      	movs	r1, #168	@ 0xa8
    *value &= FT5336_CHIP_ID_BIT_MASK; 
    *value = *value >> FT5336_CHIP_ID_BIT_POSITION; 
  }
  
  return ret;
}
90005b1a:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90005b1e:	4760      	bx	ip

90005b20 <MT48LC4M32B2_Init>:
  * @param  Ctx : Component object pointer
  * @param  pRegMode : Pointer to Register Mode stucture
  * @retval error status
  */
int32_t MT48LC4M32B2_Init(SDRAM_HandleTypeDef *Ctx, MT48LC4M32B2_Context_t *pRegMode) 
{
90005b20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90005b22:	460d      	mov	r5, r1
  * @param  Interface : Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t MT48LC4M32B2_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
90005b24:	4c2a      	ldr	r4, [pc, #168]	@ (90005bd0 <MT48LC4M32B2_Init+0xb0>)
90005b26:	2301      	movs	r3, #1
  Command.CommandTarget          = Interface;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;
90005b28:	2100      	movs	r1, #0
  if(MT48LC4M32B2_ClockEnable(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90005b2a:	682a      	ldr	r2, [r5, #0]
{
90005b2c:	4607      	mov	r7, r0
  Command.ModeRegisterDefinition = 0;
90005b2e:	60e1      	str	r1, [r4, #12]

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90005b30:	4621      	mov	r1, r4
  Command.AutoRefreshNumber      = 1;
90005b32:	60a3      	str	r3, [r4, #8]
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
90005b34:	e9c4 3200 	strd	r3, r2, [r4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90005b38:	f64f 72ff 	movw	r2, #65535	@ 0xffff
90005b3c:	f006 fcc6 	bl	9000c4cc <HAL_SDRAM_SendCommand>
90005b40:	2800      	cmp	r0, #0
90005b42:	d142      	bne.n	90005bca <MT48LC4M32B2_Init+0xaa>
  * @retval MT48LC4M32B2_OK
  */
static int32_t MT48LC4M32B2_Delay(uint32_t Delay)
{  
  uint32_t tickstart;
  tickstart = HAL_GetTick();
90005b44:	f000 ff52 	bl	900069ec <HAL_GetTick>
90005b48:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
90005b4a:	f000 ff4f 	bl	900069ec <HAL_GetTick>
90005b4e:	4286      	cmp	r6, r0
90005b50:	d0fb      	beq.n	90005b4a <MT48LC4M32B2_Init+0x2a>
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90005b52:	2302      	movs	r3, #2
    if(MT48LC4M32B2_Precharge(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90005b54:	682a      	ldr	r2, [r5, #0]
  Command.AutoRefreshNumber      = 1;
90005b56:	2601      	movs	r6, #1
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90005b58:	491d      	ldr	r1, [pc, #116]	@ (90005bd0 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90005b5a:	6023      	str	r3, [r4, #0]
  Command.ModeRegisterDefinition = 0;
90005b5c:	2300      	movs	r3, #0
  Command.CommandTarget          = Interface;
90005b5e:	6062      	str	r2, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90005b60:	4638      	mov	r0, r7
90005b62:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.AutoRefreshNumber      = 1;
90005b66:	60a6      	str	r6, [r4, #8]
  Command.ModeRegisterDefinition = 0;
90005b68:	60e3      	str	r3, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90005b6a:	f006 fcaf 	bl	9000c4cc <HAL_SDRAM_SendCommand>
90005b6e:	bb60      	cbnz	r0, 90005bca <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90005b70:	4917      	ldr	r1, [pc, #92]	@ (90005bd0 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = RefreshMode;
90005b72:	e9d5 3200 	ldrd	r3, r2, [r5]
  Command.ModeRegisterDefinition = 0;
90005b76:	60e0      	str	r0, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90005b78:	4638      	mov	r0, r7
  Command.CommandMode            = RefreshMode;
90005b7a:	e9c4 2300 	strd	r2, r3, [r4]
  Command.AutoRefreshNumber      = 8;
90005b7e:	2308      	movs	r3, #8
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90005b80:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.AutoRefreshNumber      = 8;
90005b84:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90005b86:	f006 fca1 	bl	9000c4cc <HAL_SDRAM_SendCommand>
90005b8a:	b9f0      	cbnz	r0, 90005bca <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90005b8c:	4910      	ldr	r1, [pc, #64]	@ (90005bd0 <MT48LC4M32B2_Init+0xb0>)
90005b8e:	4638      	mov	r0, r7
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90005b90:	e9d5 3203 	ldrd	r3, r2, [r5, #12]
90005b94:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
90005b96:	696a      	ldr	r2, [r5, #20]
90005b98:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
90005b9a:	69aa      	ldr	r2, [r5, #24]
90005b9c:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90005b9e:	69ea      	ldr	r2, [r5, #28]
90005ba0:	4313      	orrs	r3, r2
  Command.CommandTarget          = pRegMode->TargetBank;
90005ba2:	682a      	ldr	r2, [r5, #0]
  Command.ModeRegisterDefinition = tmpmrd;
90005ba4:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90005ba6:	2304      	movs	r3, #4
  Command.CommandTarget          = pRegMode->TargetBank;
90005ba8:	e9c4 2601 	strd	r2, r6, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90005bac:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90005bb0:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90005bb2:	f006 fc8b 	bl	9000c4cc <HAL_SDRAM_SendCommand>
90005bb6:	b940      	cbnz	r0, 90005bca <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
90005bb8:	68a9      	ldr	r1, [r5, #8]
90005bba:	4638      	mov	r0, r7
90005bbc:	f006 fca6 	bl	9000c50c <HAL_SDRAM_ProgramRefreshRate>
90005bc0:	3800      	subs	r0, #0
90005bc2:	bf18      	it	ne
90005bc4:	2001      	movne	r0, #1
90005bc6:	4240      	negs	r0, r0
}
90005bc8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  int32_t ret = MT48LC4M32B2_ERROR;
90005bca:	f04f 30ff 	mov.w	r0, #4294967295
}
90005bce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90005bd0:	240077c0 	.word	0x240077c0

90005bd4 <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c4InitCounter--;
90005bd4:	4a10      	ldr	r2, [pc, #64]	@ (90005c18 <BSP_I2C4_DeInit+0x44>)
{
90005bd6:	b508      	push	{r3, lr}
  I2c4InitCounter--;
90005bd8:	6813      	ldr	r3, [r2, #0]
90005bda:	3b01      	subs	r3, #1
90005bdc:	6013      	str	r3, [r2, #0]

  if (I2c4InitCounter == 0U)
90005bde:	b10b      	cbz	r3, 90005be4 <BSP_I2C4_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
90005be0:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
90005be2:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
90005be4:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
90005be8:	480c      	ldr	r0, [pc, #48]	@ (90005c1c <BSP_I2C4_DeInit+0x48>)
90005bea:	f001 fe03 	bl	900077f4 <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
90005bee:	480b      	ldr	r0, [pc, #44]	@ (90005c1c <BSP_I2C4_DeInit+0x48>)
90005bf0:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
90005bf4:	f001 fdfe 	bl	900077f4 <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
90005bf8:	4a09      	ldr	r2, [pc, #36]	@ (90005c20 <BSP_I2C4_DeInit+0x4c>)
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
90005bfa:	480a      	ldr	r0, [pc, #40]	@ (90005c24 <BSP_I2C4_DeInit+0x50>)
  BUS_I2C4_CLK_DISABLE();
90005bfc:	f8d2 30f4 	ldr.w	r3, [r2, #244]	@ 0xf4
90005c00:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
90005c04:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
90005c08:	f002 fa6e 	bl	900080e8 <HAL_I2C_DeInit>
90005c0c:	2800      	cmp	r0, #0
90005c0e:	d0e7      	beq.n	90005be0 <BSP_I2C4_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
90005c10:	f06f 0007 	mvn.w	r0, #7
}
90005c14:	bd08      	pop	{r3, pc}
90005c16:	bf00      	nop
90005c18:	24008228 	.word	0x24008228
90005c1c:	58020c00 	.word	0x58020c00
90005c20:	58024400 	.word	0x58024400
90005c24:	240077d0 	.word	0x240077d0

90005c28 <MX_I2C4_Init>:
  hI2c->Init.OwnAddress1      = 0;
90005c28:	2300      	movs	r3, #0
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
90005c2a:	2201      	movs	r2, #1
{
90005c2c:	b510      	push	{r4, lr}
  hI2c->Init.OwnAddress1      = 0;
90005c2e:	e9c0 1301 	strd	r1, r3, [r0, #4]
  hI2c->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
90005c32:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hI2c->Init.OwnAddress2Masks = I2C_OA2_NOMASK;
90005c36:	e9c0 3305 	strd	r3, r3, [r0, #20]
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
90005c3a:	e9c0 3307 	strd	r3, r3, [r0, #28]
{
90005c3e:	4604      	mov	r4, r0
  if (HAL_I2C_Init(hI2c) != HAL_OK)
90005c40:	f002 f9f6 	bl	90008030 <HAL_I2C_Init>
90005c44:	b108      	cbz	r0, 90005c4a <MX_I2C4_Init+0x22>
    status = HAL_ERROR;
90005c46:	2001      	movs	r0, #1
}
90005c48:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
90005c4a:	4601      	mov	r1, r0
90005c4c:	4620      	mov	r0, r4
90005c4e:	f002 fc69 	bl	90008524 <HAL_I2CEx_ConfigAnalogFilter>
90005c52:	2800      	cmp	r0, #0
90005c54:	d1f7      	bne.n	90005c46 <MX_I2C4_Init+0x1e>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
90005c56:	4601      	mov	r1, r0
90005c58:	4620      	mov	r0, r4
90005c5a:	f002 fc8d 	bl	90008578 <HAL_I2CEx_ConfigDigitalFilter>
90005c5e:	3800      	subs	r0, #0
90005c60:	bf18      	it	ne
90005c62:	2001      	movne	r0, #1
}
90005c64:	bd10      	pop	{r4, pc}
90005c66:	bf00      	nop

90005c68 <BSP_I2C4_Init>:
  if (I2c4InitCounter == 0U)
90005c68:	4b9b      	ldr	r3, [pc, #620]	@ (90005ed8 <BSP_I2C4_Init+0x270>)
  hbus_i2c4.Instance = BUS_I2C4;
90005c6a:	489c      	ldr	r0, [pc, #624]	@ (90005edc <BSP_I2C4_Init+0x274>)
90005c6c:	4a9c      	ldr	r2, [pc, #624]	@ (90005ee0 <BSP_I2C4_Init+0x278>)
{
90005c6e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if (I2c4InitCounter == 0U)
90005c72:	681c      	ldr	r4, [r3, #0]
{
90005c74:	b09f      	sub	sp, #124	@ 0x7c
  hbus_i2c4.Instance = BUS_I2C4;
90005c76:	6002      	str	r2, [r0, #0]
  if (I2c4InitCounter == 0U)
90005c78:	b11c      	cbz	r4, 90005c82 <BSP_I2C4_Init+0x1a>
  int32_t ret = BSP_ERROR_NONE;
90005c7a:	2000      	movs	r0, #0
}
90005c7c:	b01f      	add	sp, #124	@ 0x7c
90005c7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    I2c4InitCounter++;
90005c82:	2201      	movs	r2, #1
90005c84:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
90005c86:	f002 fc47 	bl	90008518 <HAL_I2C_GetState>
90005c8a:	2800      	cmp	r0, #0
90005c8c:	d1f5      	bne.n	90005c7a <BSP_I2C4_Init+0x12>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90005c8e:	4d95      	ldr	r5, [pc, #596]	@ (90005ee4 <BSP_I2C4_Init+0x27c>)
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90005c90:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
90005c94:	2112      	movs	r1, #18
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90005c96:	2604      	movs	r6, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90005c98:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90005c9c:	f04f 0800 	mov.w	r8, #0
90005ca0:	f04f 0902 	mov.w	r9, #2
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90005ca4:	f043 0308 	orr.w	r3, r3, #8
90005ca8:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90005cac:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90005cb0:	f003 0308 	and.w	r3, r3, #8
90005cb4:	9315      	str	r3, [sp, #84]	@ 0x54
90005cb6:	9b15      	ldr	r3, [sp, #84]	@ 0x54
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90005cb8:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90005cbc:	f043 0308 	orr.w	r3, r3, #8
90005cc0:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90005cc4:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90005cc8:	961c      	str	r6, [sp, #112]	@ 0x70
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90005cca:	f003 0308 	and.w	r3, r3, #8
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90005cce:	e9cd 0118 	strd	r0, r1, [sp, #96]	@ 0x60
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90005cd2:	9316      	str	r3, [sp, #88]	@ 0x58
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90005cd4:	a918      	add	r1, sp, #96	@ 0x60
90005cd6:	4884      	ldr	r0, [pc, #528]	@ (90005ee8 <BSP_I2C4_Init+0x280>)
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90005cd8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90005cda:	e9cd 891a 	strd	r8, r9, [sp, #104]	@ 0x68
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90005cde:	f001 fb83 	bl	900073e8 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90005ce2:	2312      	movs	r3, #18
90005ce4:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90005ce8:	a918      	add	r1, sp, #96	@ 0x60
90005cea:	487f      	ldr	r0, [pc, #508]	@ (90005ee8 <BSP_I2C4_Init+0x280>)
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
90005cec:	961c      	str	r6, [sp, #112]	@ 0x70
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90005cee:	e9cd 2318 	strd	r2, r3, [sp, #96]	@ 0x60
90005cf2:	e9cd 891a 	strd	r8, r9, [sp, #104]	@ 0x68
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90005cf6:	f001 fb77 	bl	900073e8 <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
90005cfa:	f8d5 30f4 	ldr.w	r3, [r5, #244]	@ 0xf4
90005cfe:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90005d02:	f8c5 30f4 	str.w	r3, [r5, #244]	@ 0xf4
90005d06:	f8d5 30f4 	ldr.w	r3, [r5, #244]	@ 0xf4
90005d0a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
90005d0e:	9317      	str	r3, [sp, #92]	@ 0x5c
90005d10:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
  BUS_I2C4_FORCE_RESET();
90005d12:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
90005d16:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90005d1a:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
  BUS_I2C4_RELEASE_RESET();
90005d1e:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
90005d22:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
90005d26:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
90005d2a:	f005 f9b9 	bl	9000b0a0 <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
90005d2e:	2800      	cmp	r0, #0
90005d30:	f000 8196 	beq.w	90006060 <BSP_I2C4_Init+0x3f8>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90005d34:	4b6d      	ldr	r3, [pc, #436]	@ (90005eec <BSP_I2C4_Init+0x284>)
  if (tsdadel_max <= 0)
90005d36:	4627      	mov	r7, r4
  uint32_t prev_presc = I2C_PRESC_MAX;
90005d38:	f04f 0a10 	mov.w	sl, #16
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005d3c:	4e6c      	ldr	r6, [pc, #432]	@ (90005ef0 <BSP_I2C4_Init+0x288>)
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90005d3e:	eb03 0350 	add.w	r3, r3, r0, lsr #1
90005d42:	9402      	str	r4, [sp, #8]
90005d44:	fbb3 f0f0 	udiv	r0, r3, r0
    (int32_t)tafdel_max - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 4) * (int32_t)ti2cclk);
90005d48:	0083      	lsls	r3, r0, #2
  if (tsdadel_max <= 0)
90005d4a:	4684      	mov	ip, r0
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90005d4c:	eb00 0240 	add.w	r2, r0, r0, lsl #1
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90005d50:	9001      	str	r0, [sp, #4]
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90005d52:	f5c3 7ec3 	rsb	lr, r3, #390	@ 0x186
90005d56:	4b67      	ldr	r3, [pc, #412]	@ (90005ef4 <BSP_I2C4_Init+0x28c>)
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
90005d58:	f1c2 0832 	rsb	r8, r2, #50	@ 0x32
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90005d5c:	0041      	lsls	r1, r0, #1
90005d5e:	681d      	ldr	r5, [r3, #0]
  if (tsdadel_max <= 0)
90005d60:	ea2e 7eee 	bic.w	lr, lr, lr, asr #31
  if (tsdadel_min <= 0)
90005d64:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
90005d68:	4623      	mov	r3, r4
  if (tsdadel_max <= 0)
90005d6a:	46a9      	mov	r9, r5
90005d6c:	9513      	str	r5, [sp, #76]	@ 0x4c
90005d6e:	9103      	str	r1, [sp, #12]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90005d70:	ebbe 0f4c 	cmp.w	lr, ip, lsl #1
90005d74:	eb0c 024c 	add.w	r2, ip, ip, lsl #1
90005d78:	bf2c      	ite	cs
90005d7a:	2001      	movcs	r0, #1
90005d7c:	2000      	movcc	r0, #0
90005d7e:	ebb8 0f4c 	cmp.w	r8, ip, lsl #1
90005d82:	f000 0001 	and.w	r0, r0, #1
90005d86:	eb0c 018c 	add.w	r1, ip, ip, lsl #2
90005d8a:	bf88      	it	hi
90005d8c:	2000      	movhi	r0, #0
90005d8e:	4590      	cmp	r8, r2
90005d90:	ebcc 0bcc 	rsb	fp, ip, ip, lsl #3
90005d94:	9004      	str	r0, [sp, #16]
90005d96:	bf8c      	ite	hi
90005d98:	2000      	movhi	r0, #0
90005d9a:	2001      	movls	r0, #1
90005d9c:	4596      	cmp	lr, r2
90005d9e:	eb0c 0482 	add.w	r4, ip, r2, lsl #2
90005da2:	bf38      	it	cc
90005da4:	2000      	movcc	r0, #0
90005da6:	ebb8 0f8c 	cmp.w	r8, ip, lsl #2
90005daa:	9411      	str	r4, [sp, #68]	@ 0x44
90005dac:	465c      	mov	r4, fp
90005dae:	9006      	str	r0, [sp, #24]
90005db0:	eb0c 0041 	add.w	r0, ip, r1, lsl #1
90005db4:	9007      	str	r0, [sp, #28]
90005db6:	bf94      	ite	ls
90005db8:	2001      	movls	r0, #1
90005dba:	2000      	movhi	r0, #0
90005dbc:	ebbe 0f8c 	cmp.w	lr, ip, lsl #2
90005dc0:	f000 0501 	and.w	r5, r0, #1
90005dc4:	bf38      	it	cc
90005dc6:	2500      	movcc	r5, #0
90005dc8:	4588      	cmp	r8, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90005dca:	f04f 0000 	mov.w	r0, #0
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90005dce:	9508      	str	r5, [sp, #32]
90005dd0:	bf8c      	ite	hi
90005dd2:	2500      	movhi	r5, #0
90005dd4:	2501      	movls	r5, #1
90005dd6:	458e      	cmp	lr, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90005dd8:	9005      	str	r0, [sp, #20]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90005dda:	bf38      	it	cc
90005ddc:	2500      	movcc	r5, #0
90005dde:	ebb8 0f42 	cmp.w	r8, r2, lsl #1
90005de2:	bf98      	it	ls
90005de4:	2001      	movls	r0, #1
90005de6:	ebbe 0f42 	cmp.w	lr, r2, lsl #1
90005dea:	9509      	str	r5, [sp, #36]	@ 0x24
90005dec:	4665      	mov	r5, ip
90005dee:	f000 0001 	and.w	r0, r0, #1
90005df2:	bf38      	it	cc
90005df4:	2000      	movcc	r0, #0
90005df6:	45d8      	cmp	r8, fp
90005df8:	900a      	str	r0, [sp, #40]	@ 0x28
90005dfa:	4658      	mov	r0, fp
90005dfc:	bf8c      	ite	hi
90005dfe:	2000      	movhi	r0, #0
90005e00:	2001      	movls	r0, #1
90005e02:	45de      	cmp	lr, fp
90005e04:	bf38      	it	cc
90005e06:	2000      	movcc	r0, #0
90005e08:	ebb8 0fcc 	cmp.w	r8, ip, lsl #3
90005e0c:	4683      	mov	fp, r0
90005e0e:	bf94      	ite	ls
90005e10:	f04f 0b01 	movls.w	fp, #1
90005e14:	f04f 0b00 	movhi.w	fp, #0
90005e18:	ebbe 0fcc 	cmp.w	lr, ip, lsl #3
90005e1c:	900b      	str	r0, [sp, #44]	@ 0x2c
90005e1e:	f00b 0b01 	and.w	fp, fp, #1
90005e22:	bf38      	it	cc
90005e24:	f04f 0b00 	movcc.w	fp, #0
90005e28:	4658      	mov	r0, fp
90005e2a:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
90005e2e:	eb0c 0bcc 	add.w	fp, ip, ip, lsl #3
90005e32:	45d8      	cmp	r8, fp
90005e34:	bf8c      	ite	hi
90005e36:	2000      	movhi	r0, #0
90005e38:	2001      	movls	r0, #1
90005e3a:	45de      	cmp	lr, fp
90005e3c:	bf38      	it	cc
90005e3e:	2000      	movcc	r0, #0
90005e40:	ebb8 0f41 	cmp.w	r8, r1, lsl #1
90005e44:	900d      	str	r0, [sp, #52]	@ 0x34
90005e46:	bf98      	it	ls
90005e48:	f04f 0b01 	movls.w	fp, #1
90005e4c:	9807      	ldr	r0, [sp, #28]
90005e4e:	bf88      	it	hi
90005e50:	f04f 0b00 	movhi.w	fp, #0
90005e54:	ebbe 0f41 	cmp.w	lr, r1, lsl #1
90005e58:	f00b 0101 	and.w	r1, fp, #1
90005e5c:	bf38      	it	cc
90005e5e:	2100      	movcc	r1, #0
90005e60:	4580      	cmp	r8, r0
90005e62:	910e      	str	r1, [sp, #56]	@ 0x38
90005e64:	4601      	mov	r1, r0
90005e66:	bf8c      	ite	hi
90005e68:	2100      	movhi	r1, #0
90005e6a:	2101      	movls	r1, #1
90005e6c:	4586      	cmp	lr, r0
90005e6e:	4620      	mov	r0, r4
90005e70:	bf38      	it	cc
90005e72:	2100      	movcc	r1, #0
90005e74:	ebb8 0f82 	cmp.w	r8, r2, lsl #2
90005e78:	910f      	str	r1, [sp, #60]	@ 0x3c
90005e7a:	bf94      	ite	ls
90005e7c:	2101      	movls	r1, #1
90005e7e:	2100      	movhi	r1, #0
90005e80:	ebbe 0f82 	cmp.w	lr, r2, lsl #2
90005e84:	f001 0101 	and.w	r1, r1, #1
90005e88:	bf38      	it	cc
90005e8a:	2100      	movcc	r1, #0
90005e8c:	9110      	str	r1, [sp, #64]	@ 0x40
90005e8e:	9911      	ldr	r1, [sp, #68]	@ 0x44
90005e90:	4588      	cmp	r8, r1
90005e92:	460a      	mov	r2, r1
90005e94:	bf8c      	ite	hi
90005e96:	2200      	movhi	r2, #0
90005e98:	2201      	movls	r2, #1
90005e9a:	458e      	cmp	lr, r1
90005e9c:	bf38      	it	cc
90005e9e:	2200      	movcc	r2, #0
90005ea0:	ebb8 0f44 	cmp.w	r8, r4, lsl #1
90005ea4:	9211      	str	r2, [sp, #68]	@ 0x44
90005ea6:	bf94      	ite	ls
90005ea8:	2201      	movls	r2, #1
90005eaa:	2200      	movhi	r2, #0
90005eac:	ebbe 0f44 	cmp.w	lr, r4, lsl #1
90005eb0:	f04f 0400 	mov.w	r4, #0
90005eb4:	f002 0201 	and.w	r2, r2, #1
90005eb8:	bf38      	it	cc
90005eba:	2200      	movcc	r2, #0
90005ebc:	9212      	str	r2, [sp, #72]	@ 0x48
90005ebe:	ebcc 120c 	rsb	r2, ip, ip, lsl #4
90005ec2:	4590      	cmp	r8, r2
90005ec4:	bf8c      	ite	hi
90005ec6:	2100      	movhi	r1, #0
90005ec8:	2101      	movls	r1, #1
90005eca:	4596      	cmp	lr, r2
90005ecc:	bf38      	it	cc
90005ece:	2100      	movcc	r1, #0
90005ed0:	460a      	mov	r2, r1
90005ed2:	9107      	str	r1, [sp, #28]
90005ed4:	e014      	b.n	90005f00 <BSP_I2C4_Init+0x298>
90005ed6:	bf00      	nop
90005ed8:	24008228 	.word	0x24008228
90005edc:	240077d0 	.word	0x240077d0
90005ee0:	58001c00 	.word	0x58001c00
90005ee4:	58024400 	.word	0x58024400
90005ee8:	58020c00 	.word	0x58020c00
90005eec:	3b9aca00 	.word	0x3b9aca00
90005ef0:	24007828 	.word	0x24007828
90005ef4:	24007824 	.word	0x24007824
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90005ef8:	2c10      	cmp	r4, #16
90005efa:	4465      	add	r5, ip
90005efc:	f000 827d 	beq.w	900063fa <BSP_I2C4_Init+0x792>
      if (tscldel >= (uint32_t)tscldel_min)
90005f00:	f5b5 7faf 	cmp.w	r5, #350	@ 0x15e
90005f04:	4621      	mov	r1, r4
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
90005f06:	f104 0401 	add.w	r4, r4, #1
      if (tscldel >= (uint32_t)tscldel_min)
90005f0a:	d3f5      	bcc.n	90005ef8 <BSP_I2C4_Init+0x290>
            if(presc != prev_presc)
90005f0c:	fab8 fb88 	clz	fp, r8
90005f10:	4557      	cmp	r7, sl
90005f12:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
90005f16:	bf08      	it	eq
90005f18:	f04f 0b00 	moveq.w	fp, #0
90005f1c:	f1bb 0f00 	cmp.w	fp, #0
90005f20:	f040 8200 	bne.w	90006324 <BSP_I2C4_Init+0x6bc>
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90005f24:	45f4      	cmp	ip, lr
90005f26:	bf8c      	ite	hi
90005f28:	2200      	movhi	r2, #0
90005f2a:	2201      	movls	r2, #1
90005f2c:	45c4      	cmp	ip, r8
90005f2e:	bf38      	it	cc
90005f30:	2200      	movcc	r2, #0
            if(presc != prev_presc)
90005f32:	4557      	cmp	r7, sl
90005f34:	bf0c      	ite	eq
90005f36:	2200      	moveq	r2, #0
90005f38:	f002 0201 	andne.w	r2, r2, #1
90005f3c:	2a00      	cmp	r2, #0
90005f3e:	f000 8099 	beq.w	90006074 <BSP_I2C4_Init+0x40c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005f42:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90005f46:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90005f4a:	2001      	movs	r0, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005f4c:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90005f50:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005f54:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90005f58:	6098      	str	r0, [r3, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005f5a:	4630      	mov	r0, r6
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90005f5c:	6059      	str	r1, [r3, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90005f5e:	f200 80f2 	bhi.w	90006146 <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90005f62:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90005f64:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90005f66:	4557      	cmp	r7, sl
90005f68:	bf0c      	ite	eq
90005f6a:	2300      	moveq	r3, #0
90005f6c:	f003 0301 	andne.w	r3, r3, #1
90005f70:	469b      	mov	fp, r3
90005f72:	2b00      	cmp	r3, #0
90005f74:	f000 8097 	beq.w	900060a6 <BSP_I2C4_Init+0x43e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005f78:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90005f7c:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90005f80:	2205      	movs	r2, #5
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005f82:	4630      	mov	r0, r6
90005f84:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90005f88:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005f8c:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90005f90:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90005f92:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90005f94:	f200 80d7 	bhi.w	90006146 <BSP_I2C4_Init+0x4de>
90005f98:	465a      	mov	r2, fp
              prev_presc = presc;
90005f9a:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90005f9c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90005f9e:	4557      	cmp	r7, sl
90005fa0:	bf0c      	ite	eq
90005fa2:	2300      	moveq	r3, #0
90005fa4:	f003 0301 	andne.w	r3, r3, #1
90005fa8:	469b      	mov	fp, r3
90005faa:	2b00      	cmp	r3, #0
90005fac:	f000 8096 	beq.w	900060dc <BSP_I2C4_Init+0x474>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005fb0:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90005fb4:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90005fb8:	2209      	movs	r2, #9
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005fba:	4630      	mov	r0, r6
90005fbc:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90005fc0:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005fc4:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90005fc8:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90005fca:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90005fcc:	f200 80bb 	bhi.w	90006146 <BSP_I2C4_Init+0x4de>
90005fd0:	465a      	mov	r2, fp
              prev_presc = presc;
90005fd2:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90005fd4:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90005fd6:	4557      	cmp	r7, sl
90005fd8:	bf0c      	ite	eq
90005fda:	2300      	moveq	r3, #0
90005fdc:	f003 0301 	andne.w	r3, r3, #1
90005fe0:	2b00      	cmp	r3, #0
90005fe2:	f000 8096 	beq.w	90006112 <BSP_I2C4_Init+0x4aa>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005fe6:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90005fea:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90005fee:	4630      	mov	r0, r6
90005ff0:	f846 7022 	str.w	r7, [r6, r2, lsl #2]
90005ff4:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90005ff8:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90005ffc:	6051      	str	r1, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90005ffe:	f04f 010d 	mov.w	r1, #13
90006002:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006004:	f200 809f 	bhi.w	90006146 <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90006008:	46ba      	mov	sl, r7
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
9000600a:	e775      	b.n	90005ef8 <BSP_I2C4_Init+0x290>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
9000600c:	9a06      	ldr	r2, [sp, #24]
9000600e:	4661      	mov	r1, ip
90006010:	f109 0914 	add.w	r9, r9, #20
90006014:	3201      	adds	r2, #1
90006016:	e9dd e40a 	ldrd	lr, r4, [sp, #40]	@ 0x28
9000601a:	e9dd c30c 	ldrd	ip, r3, [sp, #48]	@ 0x30
9000601e:	4572      	cmp	r2, lr
90006020:	9206      	str	r2, [sp, #24]
90006022:	f040 80b4 	bne.w	9000618e <BSP_I2C4_Init+0x526>
        if (idx < I2C_VALID_TIMING_NBR)
90006026:	9b01      	ldr	r3, [sp, #4]
90006028:	2b7f      	cmp	r3, #127	@ 0x7f
9000602a:	e9dd 4008 	ldrd	r4, r0, [sp, #32]
9000602e:	d817      	bhi.n	90006060 <BSP_I2C4_Init+0x3f8>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90006030:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90006034:	eb00 0283 	add.w	r2, r0, r3, lsl #2
90006038:	f850 4023 	ldr.w	r4, [r0, r3, lsl #2]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
9000603c:	6850      	ldr	r0, [r2, #4]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
9000603e:	7c13      	ldrb	r3, [r2, #16]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90006040:	0500      	lsls	r0, r0, #20
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90006042:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90006046:	f400 0070 	and.w	r0, r0, #15728640	@ 0xf00000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
9000604a:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
9000604e:	4303      	orrs	r3, r0
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
90006050:	0409      	lsls	r1, r1, #16
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90006052:	0212      	lsls	r2, r2, #8
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
90006054:	f401 2170 	and.w	r1, r1, #983040	@ 0xf0000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90006058:	b292      	uxth	r2, r2
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
9000605a:	430b      	orrs	r3, r1
9000605c:	ea43 0402 	orr.w	r4, r3, r2
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
90006060:	4621      	mov	r1, r4
90006062:	48ad      	ldr	r0, [pc, #692]	@ (90006318 <BSP_I2C4_Init+0x6b0>)
90006064:	f7ff fde0 	bl	90005c28 <MX_I2C4_Init>
90006068:	2800      	cmp	r0, #0
9000606a:	f43f ae06 	beq.w	90005c7a <BSP_I2C4_Init+0x12>
          ret = BSP_ERROR_BUS_FAILURE;
9000606e:	f06f 0007 	mvn.w	r0, #7
  return ret;
90006072:	e603      	b.n	90005c7c <BSP_I2C4_Init+0x14>
            if(presc != prev_presc)
90006074:	9a04      	ldr	r2, [sp, #16]
90006076:	4557      	cmp	r7, sl
90006078:	bf0c      	ite	eq
9000607a:	2200      	moveq	r2, #0
9000607c:	f002 0201 	andne.w	r2, r2, #1
90006080:	2a00      	cmp	r2, #0
90006082:	f000 81cf 	beq.w	90006424 <BSP_I2C4_Init+0x7bc>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006086:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000608a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000608e:	2002      	movs	r0, #2
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006090:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006094:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006098:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000609c:	6098      	str	r0, [r3, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000609e:	4630      	mov	r0, r6
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900060a0:	6059      	str	r1, [r3, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900060a2:	d850      	bhi.n	90006146 <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
900060a4:	46ba      	mov	sl, r7
            if(presc != prev_presc)
900060a6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900060a8:	4557      	cmp	r7, sl
900060aa:	bf0c      	ite	eq
900060ac:	2300      	moveq	r3, #0
900060ae:	f003 0301 	andne.w	r3, r3, #1
900060b2:	469b      	mov	fp, r3
900060b4:	2b00      	cmp	r3, #0
900060b6:	f000 80da 	beq.w	9000626e <BSP_I2C4_Init+0x606>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900060ba:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900060be:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900060c2:	2206      	movs	r2, #6
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900060c4:	4630      	mov	r0, r6
900060c6:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900060ca:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900060ce:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900060d2:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900060d4:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900060d6:	d836      	bhi.n	90006146 <BSP_I2C4_Init+0x4de>
900060d8:	465a      	mov	r2, fp
              prev_presc = presc;
900060da:	46ba      	mov	sl, r7
            if(presc != prev_presc)
900060dc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900060de:	4557      	cmp	r7, sl
900060e0:	bf0c      	ite	eq
900060e2:	2300      	moveq	r3, #0
900060e4:	f003 0301 	andne.w	r3, r3, #1
900060e8:	469b      	mov	fp, r3
900060ea:	2b00      	cmp	r3, #0
900060ec:	f000 80db 	beq.w	900062a6 <BSP_I2C4_Init+0x63e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900060f0:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900060f4:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900060f8:	220a      	movs	r2, #10
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900060fa:	4630      	mov	r0, r6
900060fc:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006100:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006104:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006108:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000610a:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000610c:	d81b      	bhi.n	90006146 <BSP_I2C4_Init+0x4de>
9000610e:	465a      	mov	r2, fp
              prev_presc = presc;
90006110:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90006112:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90006114:	4557      	cmp	r7, sl
90006116:	bf0c      	ite	eq
90006118:	2300      	moveq	r3, #0
9000611a:	f003 0301 	andne.w	r3, r3, #1
9000611e:	2b00      	cmp	r3, #0
90006120:	f000 80dd 	beq.w	900062de <BSP_I2C4_Init+0x676>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006124:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006128:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000612c:	4630      	mov	r0, r6
9000612e:	f846 7022 	str.w	r7, [r6, r2, lsl #2]
90006132:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006136:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000613a:	6051      	str	r1, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000613c:	f04f 010e 	mov.w	r1, #14
90006140:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006142:	f67f af61 	bls.w	90006008 <BSP_I2C4_Init+0x3a0>
90006146:	4b75      	ldr	r3, [pc, #468]	@ (9000631c <BSP_I2C4_Init+0x6b4>)
  uint32_t prev_presc = I2C_PRESC_MAX;
90006148:	464d      	mov	r5, r9
9000614a:	e9dd 4102 	ldrd	r4, r1, [sp, #8]
9000614e:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90006152:	f640 0234 	movw	r2, #2100	@ 0x834
90006156:	f101 0332 	add.w	r3, r1, #50	@ 0x32
9000615a:	f240 2657 	movw	r6, #599	@ 0x257
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
9000615e:	2700      	movs	r7, #0
90006160:	1a52      	subs	r2, r2, r1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90006162:	9408      	str	r4, [sp, #32]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90006164:	9706      	str	r7, [sp, #24]
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90006166:	461c      	mov	r4, r3
90006168:	eba2 0c03 	sub.w	ip, r2, r3
9000616c:	9a01      	ldr	r2, [sp, #4]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
9000616e:	f04f 37ff 	mov.w	r7, #4294967295
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90006172:	460b      	mov	r3, r1
90006174:	4296      	cmp	r6, r2
90006176:	f8df 91a8 	ldr.w	r9, [pc, #424]	@ 90006320 <BSP_I2C4_Init+0x6b8>
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
9000617a:	f640 1bc4 	movw	fp, #2500	@ 0x9c4
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
9000617e:	f240 4a12 	movw	sl, #1042	@ 0x412
90006182:	bf38      	it	cc
90006184:	4616      	movcc	r6, r2
90006186:	46ae      	mov	lr, r5
90006188:	4611      	mov	r1, r2
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
9000618a:	9701      	str	r7, [sp, #4]
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
9000618c:	9009      	str	r0, [sp, #36]	@ 0x24
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
9000618e:	f8d9 0000 	ldr.w	r0, [r9]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
90006192:	2500      	movs	r5, #0
90006194:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
90006198:	fb00 1001 	mla	r0, r0, r1, r1
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
9000619c:	930d      	str	r3, [sp, #52]	@ 0x34
9000619e:	18c2      	adds	r2, r0, r3
900061a0:	ebac 0840 	sub.w	r8, ip, r0, lsl #1
900061a4:	1907      	adds	r7, r0, r4
900061a6:	468c      	mov	ip, r1
900061a8:	f6a2 0234 	subw	r2, r2, #2100	@ 0x834
900061ac:	e9cd e40a 	strd	lr, r4, [sp, #40]	@ 0x28
900061b0:	9207      	str	r2, [sp, #28]
900061b2:	e006      	b.n	900061c2 <BSP_I2C4_Init+0x55a>
900061b4:	f5b5 7f80 	cmp.w	r5, #256	@ 0x100
900061b8:	4407      	add	r7, r0
900061ba:	eba8 0800 	sub.w	r8, r8, r0
900061be:	f43f af25 	beq.w	9000600c <BSP_I2C4_Init+0x3a4>
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
900061c2:	f240 5314 	movw	r3, #1300	@ 0x514
900061c6:	4629      	mov	r1, r5
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900061c8:	3501      	adds	r5, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
900061ca:	429f      	cmp	r7, r3
900061cc:	d9f2      	bls.n	900061b4 <BSP_I2C4_Init+0x54c>
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900061ce:	f1a7 0332 	sub.w	r3, r7, #50	@ 0x32
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
900061d2:	ebbc 0f93 	cmp.w	ip, r3, lsr #2
900061d6:	d2ed      	bcs.n	900061b4 <BSP_I2C4_Init+0x54c>
900061d8:	f640 0e34 	movw	lr, #2100	@ 0x834
900061dc:	4644      	mov	r4, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
900061de:	f8cd 8010 	str.w	r8, [sp, #16]
900061e2:	2200      	movs	r2, #0
900061e4:	ebae 0e03 	sub.w	lr, lr, r3
900061e8:	9b07      	ldr	r3, [sp, #28]
900061ea:	9705      	str	r7, [sp, #20]
900061ec:	443b      	add	r3, r7
900061ee:	f8dd 8018 	ldr.w	r8, [sp, #24]
900061f2:	460f      	mov	r7, r1
900061f4:	e9cd 5c02 	strd	r5, ip, [sp, #8]
900061f8:	46b4      	mov	ip, r6
900061fa:	e005      	b.n	90006208 <BSP_I2C4_Init+0x5a0>
900061fc:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
90006200:	4403      	add	r3, r0
90006202:	eba4 0400 	sub.w	r4, r4, r0
90006206:	d01a      	beq.n	9000623e <BSP_I2C4_Init+0x5d6>
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90006208:	eb0e 0103 	add.w	r1, lr, r3
9000620c:	4616      	mov	r6, r2
9000620e:	f203 15a1 	addw	r5, r3, #417	@ 0x1a1
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
90006212:	3201      	adds	r2, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90006214:	4561      	cmp	r1, ip
90006216:	d9f1      	bls.n	900061fc <BSP_I2C4_Init+0x594>
90006218:	4555      	cmp	r5, sl
9000621a:	d8ef      	bhi.n	900061fc <BSP_I2C4_Init+0x594>
            if (error < 0)
9000621c:	ea33 0123 	bics.w	r1, r3, r3, asr #32
90006220:	bf28      	it	cs
90006222:	4621      	movcs	r1, r4
            if ((uint32_t)error < prev_error)
90006224:	458b      	cmp	fp, r1
90006226:	d9e9      	bls.n	900061fc <BSP_I2C4_Init+0x594>
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90006228:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
              prev_error = (uint32_t)error;
9000622c:	468b      	mov	fp, r1
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000622e:	4403      	add	r3, r0
90006230:	eba4 0400 	sub.w	r4, r4, r0
              ret = count;
90006234:	f8cd 8004 	str.w	r8, [sp, #4]
              I2c_valid_timing[count].sclh = sclh;
90006238:	e9c9 6703 	strd	r6, r7, [r9, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000623c:	d1e4      	bne.n	90006208 <BSP_I2C4_Init+0x5a0>
9000623e:	4666      	mov	r6, ip
90006240:	9d02      	ldr	r5, [sp, #8]
90006242:	f8dd c00c 	ldr.w	ip, [sp, #12]
90006246:	e9dd 8704 	ldrd	r8, r7, [sp, #16]
9000624a:	e7b3      	b.n	900061b4 <BSP_I2C4_Init+0x54c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000624c:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006250:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006254:	2003      	movs	r0, #3
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006256:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000625a:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000625e:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006262:	6098      	str	r0, [r3, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006264:	4630      	mov	r0, r6
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006266:	6059      	str	r1, [r3, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006268:	f63f af6d 	bhi.w	90006146 <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
9000626c:	46ba      	mov	sl, r7
            if(presc != prev_presc)
9000626e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90006270:	4557      	cmp	r7, sl
90006272:	bf0c      	ite	eq
90006274:	2300      	moveq	r3, #0
90006276:	f003 0301 	andne.w	r3, r3, #1
9000627a:	469b      	mov	fp, r3
9000627c:	2b00      	cmp	r3, #0
9000627e:	f000 8084 	beq.w	9000638a <BSP_I2C4_Init+0x722>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006282:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006286:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000628a:	2207      	movs	r2, #7
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000628c:	4630      	mov	r0, r6
9000628e:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006292:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006296:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000629a:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000629c:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000629e:	f63f af52 	bhi.w	90006146 <BSP_I2C4_Init+0x4de>
900062a2:	465a      	mov	r2, fp
              prev_presc = presc;
900062a4:	46ba      	mov	sl, r7
            if(presc != prev_presc)
900062a6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900062a8:	4557      	cmp	r7, sl
900062aa:	bf0c      	ite	eq
900062ac:	2300      	moveq	r3, #0
900062ae:	f003 0301 	andne.w	r3, r3, #1
900062b2:	469b      	mov	fp, r3
900062b4:	2b00      	cmp	r3, #0
900062b6:	f000 8084 	beq.w	900063c2 <BSP_I2C4_Init+0x75a>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900062ba:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900062be:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900062c2:	220b      	movs	r2, #11
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900062c4:	4630      	mov	r0, r6
900062c6:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900062ca:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900062ce:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900062d2:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900062d4:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900062d6:	f63f af36 	bhi.w	90006146 <BSP_I2C4_Init+0x4de>
900062da:	465a      	mov	r2, fp
              prev_presc = presc;
900062dc:	46ba      	mov	sl, r7
            if(presc != prev_presc)
900062de:	9b07      	ldr	r3, [sp, #28]
900062e0:	4557      	cmp	r7, sl
900062e2:	bf0c      	ite	eq
900062e4:	2300      	moveq	r3, #0
900062e6:	f003 0301 	andne.w	r3, r3, #1
900062ea:	2b00      	cmp	r3, #0
900062ec:	f000 8098 	beq.w	90006420 <BSP_I2C4_Init+0x7b8>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900062f0:	eb09 0289 	add.w	r2, r9, r9, lsl #2
900062f4:	480a      	ldr	r0, [pc, #40]	@ (90006320 <BSP_I2C4_Init+0x6b8>)
              I2c_valid_timing_nbr ++;
900062f6:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900062fa:	f840 7022 	str.w	r7, [r0, r2, lsl #2]
900062fe:	eb00 0282 	add.w	r2, r0, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006302:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006306:	6051      	str	r1, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006308:	f04f 010f 	mov.w	r1, #15
9000630c:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000630e:	f63f af1a 	bhi.w	90006146 <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90006312:	46ba      	mov	sl, r7
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
90006314:	e5f0      	b.n	90005ef8 <BSP_I2C4_Init+0x290>
90006316:	bf00      	nop
90006318:	240077d0 	.word	0x240077d0
9000631c:	24007824 	.word	0x24007824
90006320:	24007828 	.word	0x24007828
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006324:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006328:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000632c:	2200      	movs	r2, #0
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000632e:	4630      	mov	r0, r6
90006330:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006334:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006338:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000633c:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000633e:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006340:	f63f af01 	bhi.w	90006146 <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90006344:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90006346:	9a06      	ldr	r2, [sp, #24]
90006348:	45ba      	cmp	sl, r7
9000634a:	bf0c      	ite	eq
9000634c:	2200      	moveq	r2, #0
9000634e:	f002 0201 	andne.w	r2, r2, #1
90006352:	2a00      	cmp	r2, #0
90006354:	f47f af7a 	bne.w	9000624c <BSP_I2C4_Init+0x5e4>
90006358:	9a08      	ldr	r2, [sp, #32]
9000635a:	45ba      	cmp	sl, r7
9000635c:	bf0c      	ite	eq
9000635e:	2200      	moveq	r2, #0
90006360:	f002 0201 	andne.w	r2, r2, #1
90006364:	2a00      	cmp	r2, #0
90006366:	d05f      	beq.n	90006428 <BSP_I2C4_Init+0x7c0>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006368:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000636c:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006370:	2004      	movs	r0, #4
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006372:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006376:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000637a:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000637e:	6098      	str	r0, [r3, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006380:	4630      	mov	r0, r6
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006382:	6059      	str	r1, [r3, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006384:	f63f aedf 	bhi.w	90006146 <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90006388:	46ba      	mov	sl, r7
            if(presc != prev_presc)
9000638a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9000638c:	4557      	cmp	r7, sl
9000638e:	bf0c      	ite	eq
90006390:	2300      	moveq	r3, #0
90006392:	f003 0301 	andne.w	r3, r3, #1
90006396:	469b      	mov	fp, r3
90006398:	2b00      	cmp	r3, #0
9000639a:	f43f adff 	beq.w	90005f9c <BSP_I2C4_Init+0x334>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000639e:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900063a2:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900063a6:	2208      	movs	r2, #8
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900063a8:	4630      	mov	r0, r6
900063aa:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900063ae:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900063b2:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900063b6:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900063b8:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900063ba:	f63f aec4 	bhi.w	90006146 <BSP_I2C4_Init+0x4de>
900063be:	465a      	mov	r2, fp
              prev_presc = presc;
900063c0:	46ba      	mov	sl, r7
            if(presc != prev_presc)
900063c2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900063c4:	4557      	cmp	r7, sl
900063c6:	bf0c      	ite	eq
900063c8:	2300      	moveq	r3, #0
900063ca:	f003 0301 	andne.w	r3, r3, #1
900063ce:	2b00      	cmp	r3, #0
900063d0:	f43f ae00 	beq.w	90005fd4 <BSP_I2C4_Init+0x36c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900063d4:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900063d8:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900063dc:	4630      	mov	r0, r6
900063de:	f846 7022 	str.w	r7, [r6, r2, lsl #2]
900063e2:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900063e6:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900063ea:	6051      	str	r1, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900063ec:	f04f 010c 	mov.w	r1, #12
900063f0:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900063f2:	f63f aea8 	bhi.w	90006146 <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
900063f6:	46ba      	mov	sl, r7
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
900063f8:	e57e      	b.n	90005ef8 <BSP_I2C4_Init+0x290>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
900063fa:	3701      	adds	r7, #1
900063fc:	9a01      	ldr	r2, [sp, #4]
900063fe:	2f10      	cmp	r7, #16
90006400:	4494      	add	ip, r2
90006402:	f47f acb5 	bne.w	90005d70 <BSP_I2C4_Init+0x108>
90006406:	9c02      	ldr	r4, [sp, #8]
90006408:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9000640a:	9903      	ldr	r1, [sp, #12]
9000640c:	b11b      	cbz	r3, 90006416 <BSP_I2C4_Init+0x7ae>
9000640e:	4b07      	ldr	r3, [pc, #28]	@ (9000642c <BSP_I2C4_Init+0x7c4>)
90006410:	464d      	mov	r5, r9
90006412:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90006416:	2d00      	cmp	r5, #0
90006418:	f43f ae22 	beq.w	90006060 <BSP_I2C4_Init+0x3f8>
9000641c:	4804      	ldr	r0, [pc, #16]	@ (90006430 <BSP_I2C4_Init+0x7c8>)
9000641e:	e698      	b.n	90006152 <BSP_I2C4_Init+0x4ea>
90006420:	4613      	mov	r3, r2
90006422:	e569      	b.n	90005ef8 <BSP_I2C4_Init+0x290>
            if(presc != prev_presc)
90006424:	469b      	mov	fp, r3
90006426:	e78e      	b.n	90006346 <BSP_I2C4_Init+0x6de>
90006428:	465a      	mov	r2, fp
9000642a:	e59b      	b.n	90005f64 <BSP_I2C4_Init+0x2fc>
9000642c:	24007824 	.word	0x24007824
90006430:	24007828 	.word	0x24007828

90006434 <BSP_I2C4_WriteReg>:
{
90006434:	b530      	push	{r4, r5, lr}
90006436:	4614      	mov	r4, r2
90006438:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
9000643a:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
9000643e:	460a      	mov	r2, r1
90006440:	9301      	str	r3, [sp, #4]
90006442:	4601      	mov	r1, r0
90006444:	2301      	movs	r3, #1
90006446:	4809      	ldr	r0, [pc, #36]	@ (9000646c <BSP_I2C4_WriteReg+0x38>)
90006448:	9502      	str	r5, [sp, #8]
9000644a:	9400      	str	r4, [sp, #0]
9000644c:	f001 fe66 	bl	9000811c <HAL_I2C_Mem_Write>
90006450:	b908      	cbnz	r0, 90006456 <BSP_I2C4_WriteReg+0x22>
}
90006452:	b005      	add	sp, #20
90006454:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
90006456:	4805      	ldr	r0, [pc, #20]	@ (9000646c <BSP_I2C4_WriteReg+0x38>)
90006458:	f002 f862 	bl	90008520 <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
9000645c:	2804      	cmp	r0, #4
9000645e:	bf14      	ite	ne
90006460:	f06f 0003 	mvnne.w	r0, #3
90006464:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
90006468:	e7f3      	b.n	90006452 <BSP_I2C4_WriteReg+0x1e>
9000646a:	bf00      	nop
9000646c:	240077d0 	.word	0x240077d0

90006470 <BSP_I2C4_ReadReg>:
{
90006470:	b530      	push	{r4, r5, lr}
90006472:	4614      	mov	r4, r2
90006474:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
90006476:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
9000647a:	460a      	mov	r2, r1
9000647c:	9301      	str	r3, [sp, #4]
9000647e:	4601      	mov	r1, r0
90006480:	2301      	movs	r3, #1
90006482:	4809      	ldr	r0, [pc, #36]	@ (900064a8 <BSP_I2C4_ReadReg+0x38>)
90006484:	9502      	str	r5, [sp, #8]
90006486:	9400      	str	r4, [sp, #0]
90006488:	f001 ff46 	bl	90008318 <HAL_I2C_Mem_Read>
9000648c:	b908      	cbnz	r0, 90006492 <BSP_I2C4_ReadReg+0x22>
}
9000648e:	b005      	add	sp, #20
90006490:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
90006492:	4805      	ldr	r0, [pc, #20]	@ (900064a8 <BSP_I2C4_ReadReg+0x38>)
90006494:	f002 f844 	bl	90008520 <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
90006498:	2804      	cmp	r0, #4
9000649a:	bf14      	ite	ne
9000649c:	f06f 0003 	mvnne.w	r0, #3
900064a0:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
900064a4:	e7f3      	b.n	9000648e <BSP_I2C4_ReadReg+0x1e>
900064a6:	bf00      	nop
900064a8:	240077d0 	.word	0x240077d0

900064ac <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
900064ac:	f000 ba9e 	b.w	900069ec <HAL_GetTick>

900064b0 <BSP_SDRAM_DeInit>:
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
  int32_t ret = BSP_ERROR_NONE;

  if(Instance >= SDRAM_INSTANCES_NBR)
900064b0:	b970      	cbnz	r0, 900064d0 <BSP_SDRAM_DeInit+0x20>
{
900064b2:	b510      	push	{r4, lr}
900064b4:	4604      	mov	r4, r0
  {
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
900064b6:	4808      	ldr	r0, [pc, #32]	@ (900064d8 <BSP_SDRAM_DeInit+0x28>)
900064b8:	f005 fffa 	bl	9000c4b0 <HAL_SDRAM_DeInit>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hSdram);

  /* Disable NVIC configuration for DMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
900064bc:	207a      	movs	r0, #122	@ 0x7a
900064be:	f000 fafd 	bl	90006abc <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
900064c2:	4b06      	ldr	r3, [pc, #24]	@ (900064dc <BSP_SDRAM_DeInit+0x2c>)
900064c4:	4806      	ldr	r0, [pc, #24]	@ (900064e0 <BSP_SDRAM_DeInit+0x30>)
900064c6:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
900064c8:	f003 fe5e 	bl	9000a188 <HAL_MDMA_DeInit>
  int32_t ret = BSP_ERROR_NONE;
900064cc:	4620      	mov	r0, r4
}
900064ce:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
900064d0:	f06f 0001 	mvn.w	r0, #1
}
900064d4:	4770      	bx	lr
900064d6:	bf00      	nop
900064d8:	24008324 	.word	0x24008324
900064dc:	52000040 	.word	0x52000040
900064e0:	2400822c 	.word	0x2400822c

900064e4 <MX_SDRAM_BANK2_Init>:
{
900064e4:	b530      	push	{r4, r5, lr}
900064e6:	b089      	sub	sp, #36	@ 0x24
  hSdram->Init.MemoryDataWidth    = MemoryDataWidth;
900064e8:	6102      	str	r2, [r0, #16]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
900064ea:	2200      	movs	r2, #0
  hsdram->Instance = FMC_SDRAM_DEVICE;
900064ec:	4c13      	ldr	r4, [pc, #76]	@ (9000653c <MX_SDRAM_BANK2_Init+0x58>)
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
900064ee:	2540      	movs	r5, #64	@ 0x40
  hSdram->Init.RowBitsNumber      = RowBitsNumber;
900064f0:	60c1      	str	r1, [r0, #12]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
900064f2:	6082      	str	r2, [r0, #8]
  sdram_timing.ExitSelfRefreshDelay = 7;
900064f4:	2307      	movs	r3, #7
  hSdram->Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
900064f6:	61c2      	str	r2, [r0, #28]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
900064f8:	f44f 71c0 	mov.w	r1, #384	@ 0x180
  hSdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
900064fc:	6282      	str	r2, [r0, #40]	@ 0x28
  sdram_timing.LoadToActiveDelay    = 2;
900064fe:	2202      	movs	r2, #2
  sdram_timing.ExitSelfRefreshDelay = 7;
90006500:	9301      	str	r3, [sp, #4]
  sdram_timing.LoadToActiveDelay    = 2;
90006502:	9200      	str	r2, [sp, #0]
  sdram_timing.RCDDelay             = 2;
90006504:	9206      	str	r2, [sp, #24]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90006506:	2201      	movs	r2, #1
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90006508:	6181      	str	r1, [r0, #24]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
9000650a:	4669      	mov	r1, sp
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
9000650c:	6042      	str	r2, [r0, #4]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
9000650e:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90006512:	6165      	str	r5, [r4, #20]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90006514:	f44f 6500 	mov.w	r5, #2048	@ 0x800
90006518:	e9c0 5208 	strd	r5, r2, [r0, #32]
  sdram_timing.SelfRefreshTime      = 4;
9000651c:	2204      	movs	r2, #4
9000651e:	e9cd 2302 	strd	r2, r3, [sp, #8]
  sdram_timing.WriteRecoveryTime    = 2;
90006522:	2202      	movs	r2, #2
90006524:	2302      	movs	r3, #2
90006526:	e9cd 2304 	strd	r2, r3, [sp, #16]
  hsdram->Instance = FMC_SDRAM_DEVICE;
9000652a:	4b05      	ldr	r3, [pc, #20]	@ (90006540 <MX_SDRAM_BANK2_Init+0x5c>)
9000652c:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
9000652e:	f005 ff95 	bl	9000c45c <HAL_SDRAM_Init>
}
90006532:	3800      	subs	r0, #0
90006534:	bf18      	it	ne
90006536:	2001      	movne	r0, #1
90006538:	b009      	add	sp, #36	@ 0x24
9000653a:	bd30      	pop	{r4, r5, pc}
9000653c:	24008324 	.word	0x24008324
90006540:	52004140 	.word	0x52004140

90006544 <BSP_SDRAM_Init>:
  if(Instance >=SDRAM_INSTANCES_NBR)
90006544:	2800      	cmp	r0, #0
90006546:	f040 80cd 	bne.w	900066e4 <BSP_SDRAM_Init+0x1a0>
  __HAL_RCC_FMC_CLK_ENABLE();
9000654a:	4b69      	ldr	r3, [pc, #420]	@ (900066f0 <BSP_SDRAM_Init+0x1ac>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
9000654c:	2101      	movs	r1, #1
  __HAL_RCC_FMC_CLK_ENABLE();
9000654e:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90006552:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
{
90006556:	b5f0      	push	{r4, r5, r6, r7, lr}
90006558:	b08d      	sub	sp, #52	@ 0x34
  __HAL_RCC_FMC_CLK_ENABLE();
9000655a:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
9000655e:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90006562:	4605      	mov	r5, r0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
90006564:	2002      	movs	r0, #2
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
90006566:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
90006568:	f402 5280 	and.w	r2, r2, #4096	@ 0x1000
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
9000656c:	4c61      	ldr	r4, [pc, #388]	@ (900066f4 <BSP_SDRAM_Init+0x1b0>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
9000656e:	4e62      	ldr	r6, [pc, #392]	@ (900066f8 <BSP_SDRAM_Init+0x1b4>)
  __HAL_RCC_FMC_CLK_ENABLE();
90006570:	9200      	str	r2, [sp, #0]
90006572:	9a00      	ldr	r2, [sp, #0]
  SDRAM_MDMAx_CLK_ENABLE();
90006574:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90006578:	430a      	orrs	r2, r1
9000657a:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
9000657e:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90006582:	400a      	ands	r2, r1
90006584:	9201      	str	r2, [sp, #4]
90006586:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90006588:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000658c:	f042 0208 	orr.w	r2, r2, #8
90006590:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90006594:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006598:	f002 0208 	and.w	r2, r2, #8
9000659c:	9202      	str	r2, [sp, #8]
9000659e:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOE_CLK_ENABLE();
900065a0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900065a4:	f042 0210 	orr.w	r2, r2, #16
900065a8:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900065ac:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900065b0:	f002 0210 	and.w	r2, r2, #16
900065b4:	9203      	str	r2, [sp, #12]
900065b6:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOF_CLK_ENABLE();
900065b8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900065bc:	f042 0220 	orr.w	r2, r2, #32
900065c0:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900065c4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900065c8:	f002 0220 	and.w	r2, r2, #32
900065cc:	9204      	str	r2, [sp, #16]
900065ce:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
900065d0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900065d4:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
900065d8:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900065dc:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900065e0:	f002 0240 	and.w	r2, r2, #64	@ 0x40
900065e4:	9205      	str	r2, [sp, #20]
900065e6:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOH_CLK_ENABLE();
900065e8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900065ec:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
900065f0:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
900065f4:	220c      	movs	r2, #12
  __HAL_RCC_GPIOH_CLK_ENABLE();
900065f6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
900065fa:	9008      	str	r0, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
900065fc:	f003 0380 	and.w	r3, r3, #128	@ 0x80
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90006600:	483e      	ldr	r0, [pc, #248]	@ (900066fc <BSP_SDRAM_Init+0x1b8>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
90006602:	9109      	str	r1, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOH_CLK_ENABLE();
90006604:	9306      	str	r3, [sp, #24]
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90006606:	f24c 7303 	movw	r3, #50947	@ 0xc703
  __HAL_RCC_GPIOH_CLK_ENABLE();
9000660a:	9906      	ldr	r1, [sp, #24]
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
9000660c:	a907      	add	r1, sp, #28
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
9000660e:	9307      	str	r3, [sp, #28]
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
90006610:	e9cd 720a 	strd	r7, r2, [sp, #40]	@ 0x28
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90006614:	f000 fee8 	bl	900073e8 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90006618:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
9000661c:	a907      	add	r1, sp, #28
9000661e:	4838      	ldr	r0, [pc, #224]	@ (90006700 <BSP_SDRAM_Init+0x1bc>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90006620:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90006622:	f000 fee1 	bl	900073e8 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
90006626:	f64f 033f 	movw	r3, #63551	@ 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
9000662a:	a907      	add	r1, sp, #28
9000662c:	4835      	ldr	r0, [pc, #212]	@ (90006704 <BSP_SDRAM_Init+0x1c0>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
9000662e:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90006630:	f000 feda 	bl	900073e8 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90006634:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90006638:	a907      	add	r1, sp, #28
9000663a:	4833      	ldr	r0, [pc, #204]	@ (90006708 <BSP_SDRAM_Init+0x1c4>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
9000663c:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
9000663e:	f000 fed3 	bl	900073e8 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90006642:	23e0      	movs	r3, #224	@ 0xe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
90006644:	a907      	add	r1, sp, #28
90006646:	4831      	ldr	r0, [pc, #196]	@ (9000670c <BSP_SDRAM_Init+0x1c8>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90006648:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
9000664a:	f000 fecd 	bl	900073e8 <HAL_GPIO_Init>
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
9000664e:	2380      	movs	r3, #128	@ 0x80
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90006650:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90006654:	f240 2102 	movw	r1, #514	@ 0x202
  HAL_MDMA_DeInit(&mdma_handle);
90006658:	4620      	mov	r0, r4
  mdma_handle.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
9000665a:	6223      	str	r3, [r4, #32]
  mdma_handle.Init.BufferTransferLength = 128;
9000665c:	62a3      	str	r3, [r4, #40]	@ 0x28
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
9000665e:	6062      	str	r2, [r4, #4]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90006660:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90006664:	6161      	str	r1, [r4, #20]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90006666:	60a2      	str	r2, [r4, #8]
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90006668:	4a29      	ldr	r2, [pc, #164]	@ (90006710 <BSP_SDRAM_Init+0x1cc>)
  mdma_handle.Init.SourceBurst = MDMA_SOURCE_BURST_SINGLE;
9000666a:	62e5      	str	r5, [r4, #44]	@ 0x2c
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
9000666c:	6022      	str	r2, [r4, #0]
  mdma_handle.Init.DestBurst = MDMA_DEST_BURST_SINGLE;
9000666e:	6325      	str	r5, [r4, #48]	@ 0x30
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90006670:	6334      	str	r4, [r6, #48]	@ 0x30
90006672:	6426      	str	r6, [r4, #64]	@ 0x40
  mdma_handle.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
90006674:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DestinationInc = MDMA_DEST_INC_WORD;
90006678:	f640 0308 	movw	r3, #2056	@ 0x808
9000667c:	61a3      	str	r3, [r4, #24]
  mdma_handle.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
9000667e:	2320      	movs	r3, #32
90006680:	61e3      	str	r3, [r4, #28]
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90006682:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
  mdma_handle.Init.SourceBlockAddressOffset = 0;
90006686:	e9c4 550d 	strd	r5, r5, [r4, #52]	@ 0x34
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
9000668a:	6263      	str	r3, [r4, #36]	@ 0x24
  HAL_MDMA_DeInit(&mdma_handle);
9000668c:	f003 fd7c 	bl	9000a188 <HAL_MDMA_DeInit>
  HAL_MDMA_Init(&mdma_handle);
90006690:	4620      	mov	r0, r4
90006692:	f003 fcff 	bl	9000a094 <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, 0x0F, 0);
90006696:	462a      	mov	r2, r5
90006698:	210f      	movs	r1, #15
9000669a:	207a      	movs	r0, #122	@ 0x7a
9000669c:	f000 f9c4 	bl	90006a28 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
900066a0:	207a      	movs	r0, #122	@ 0x7a
900066a2:	f000 f9fd 	bl	90006aa0 <HAL_NVIC_EnableIRQ>
    if(MX_SDRAM_BANK2_Init(&hsdram[Instance],FMC_SDRAM_ROW_BITS_NUM_12, FMC_SDRAM_MEM_BUS_WIDTH_16) != HAL_OK)
900066a6:	2210      	movs	r2, #16
900066a8:	2104      	movs	r1, #4
900066aa:	4630      	mov	r0, r6
900066ac:	f7ff ff1a 	bl	900064e4 <MX_SDRAM_BANK2_Init>
900066b0:	4603      	mov	r3, r0
900066b2:	b9d0      	cbnz	r0, 900066ea <BSP_SDRAM_Init+0x1a6>
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
900066b4:	4917      	ldr	r1, [pc, #92]	@ (90006714 <BSP_SDRAM_Init+0x1d0>)
900066b6:	2208      	movs	r2, #8
      pRegMode.CASLatency      = MT48LC4M32B2_CAS_LATENCY_3;
900066b8:	2430      	movs	r4, #48	@ 0x30
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
900066ba:	4630      	mov	r0, r6
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
900066bc:	600a      	str	r2, [r1, #0]
      pRegMode.RefreshRate     = REFRESH_COUNT;
900066be:	f240 6203 	movw	r2, #1539	@ 0x603
      pRegMode.RefreshMode     = MT48LC4M32B2_AUTOREFRESH_MODE_CMD;
900066c2:	604f      	str	r7, [r1, #4]
      pRegMode.RefreshRate     = REFRESH_COUNT;
900066c4:	e9c1 2302 	strd	r2, r3, [r1, #8]
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
900066c8:	f44f 7200 	mov.w	r2, #512	@ 0x200
      pRegMode.CASLatency      = MT48LC4M32B2_CAS_LATENCY_3;
900066cc:	e9c1 3404 	strd	r3, r4, [r1, #16]
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
900066d0:	e9c1 3206 	strd	r3, r2, [r1, #24]
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
900066d4:	f7ff fa24 	bl	90005b20 <MT48LC4M32B2_Init>
        ret =  BSP_ERROR_COMPONENT_FAILURE;
900066d8:	2800      	cmp	r0, #0
900066da:	bf18      	it	ne
900066dc:	f06f 0004 	mvnne.w	r0, #4
}
900066e0:	b00d      	add	sp, #52	@ 0x34
900066e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
900066e4:	f06f 0001 	mvn.w	r0, #1
}
900066e8:	4770      	bx	lr
      ret = BSP_ERROR_NO_INIT;
900066ea:	f04f 30ff 	mov.w	r0, #4294967295
900066ee:	e7f7      	b.n	900066e0 <BSP_SDRAM_Init+0x19c>
900066f0:	58024400 	.word	0x58024400
900066f4:	24008298 	.word	0x24008298
900066f8:	24008324 	.word	0x24008324
900066fc:	58020c00 	.word	0x58020c00
90006700:	58021000 	.word	0x58021000
90006704:	58021400 	.word	0x58021400
90006708:	58021800 	.word	0x58021800
9000670c:	58021c00 	.word	0x58021c00
90006710:	52000040 	.word	0x52000040
90006714:	24008304 	.word	0x24008304

90006718 <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
90006718:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000671c:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
9000671e:	2800      	cmp	r0, #0
90006720:	d16b      	bne.n	900067fa <BSP_TS_Init+0xe2>
90006722:	680b      	ldr	r3, [r1, #0]
90006724:	460d      	mov	r5, r1
90006726:	1e5a      	subs	r2, r3, #1
90006728:	f5b2 7ff0 	cmp.w	r2, #480	@ 0x1e0
9000672c:	d265      	bcs.n	900067fa <BSP_TS_Init+0xe2>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
9000672e:	684a      	ldr	r2, [r1, #4]
90006730:	1e51      	subs	r1, r2, #1
90006732:	f5b1 7f88 	cmp.w	r1, #272	@ 0x110
90006736:	d260      	bcs.n	900067fa <BSP_TS_Init+0xe2>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
90006738:	4293      	cmp	r3, r2
9000673a:	bf28      	it	cs
9000673c:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
9000673e:	68ea      	ldr	r2, [r5, #12]
90006740:	429a      	cmp	r2, r3
90006742:	d85a      	bhi.n	900067fa <BSP_TS_Init+0xe2>
  FT5336_IO_t              IOCtx;
  static FT5336_Object_t   FT5336Obj;
  uint32_t ft5336_id       = 0;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
90006744:	2270      	movs	r2, #112	@ 0x70
  IOCtx.Init        = BSP_I2C4_Init;
90006746:	4b31      	ldr	r3, [pc, #196]	@ (9000680c <BSP_TS_Init+0xf4>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90006748:	4c31      	ldr	r4, [pc, #196]	@ (90006810 <BSP_TS_Init+0xf8>)
9000674a:	a902      	add	r1, sp, #8
  IOCtx.Address     = TS_I2C_ADDRESS;
9000674c:	f8ad 2010 	strh.w	r2, [sp, #16]
  IOCtx.Init        = BSP_I2C4_Init;
90006750:	9302      	str	r3, [sp, #8]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90006752:	4a30      	ldr	r2, [pc, #192]	@ (90006814 <BSP_TS_Init+0xfc>)
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90006754:	4b30      	ldr	r3, [pc, #192]	@ (90006818 <BSP_TS_Init+0x100>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90006756:	9203      	str	r2, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90006758:	9306      	str	r3, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
9000675a:	4a30      	ldr	r2, [pc, #192]	@ (9000681c <BSP_TS_Init+0x104>)
  IOCtx.GetTick     = BSP_GetTick;
9000675c:	4b30      	ldr	r3, [pc, #192]	@ (90006820 <BSP_TS_Init+0x108>)
  uint32_t ft5336_id       = 0;
9000675e:	9001      	str	r0, [sp, #4]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90006760:	4620      	mov	r0, r4
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90006762:	9205      	str	r2, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
90006764:	9307      	str	r3, [sp, #28]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90006766:	f7ff f92d 	bl	900059c4 <FT5336_RegisterBusIO>
9000676a:	2800      	cmp	r0, #0
9000676c:	d14b      	bne.n	90006806 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(FT5336_ReadID(&FT5336Obj, &ft5336_id) != FT5336_OK)
9000676e:	a901      	add	r1, sp, #4
90006770:	4620      	mov	r0, r4
90006772:	f7ff f81d 	bl	900057b0 <FT5336_ReadID>
90006776:	2800      	cmp	r0, #0
90006778:	d145      	bne.n	90006806 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ft5336_id != FT5336_ID)
9000677a:	9b01      	ldr	r3, [sp, #4]
9000677c:	2b51      	cmp	r3, #81	@ 0x51
9000677e:	d142      	bne.n	90006806 <BSP_TS_Init+0xee>
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &FT5336Obj;
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90006780:	4b28      	ldr	r3, [pc, #160]	@ (90006824 <BSP_TS_Init+0x10c>)

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90006782:	4620      	mov	r0, r4
    Ts_CompObj[Instance] = &FT5336Obj;
90006784:	4f28      	ldr	r7, [pc, #160]	@ (90006828 <BSP_TS_Init+0x110>)
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90006786:	f8df 80a8 	ldr.w	r8, [pc, #168]	@ 90006830 <BSP_TS_Init+0x118>
    Ts_CompObj[Instance] = &FT5336Obj;
9000678a:	603c      	str	r4, [r7, #0]
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
9000678c:	f8c8 3000 	str.w	r3, [r8]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90006790:	681b      	ldr	r3, [r3, #0]
90006792:	4798      	blx	r3
90006794:	4606      	mov	r6, r0
90006796:	2800      	cmp	r0, #0
90006798:	d135      	bne.n	90006806 <BSP_TS_Init+0xee>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
9000679a:	682a      	ldr	r2, [r5, #0]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
9000679c:	a902      	add	r1, sp, #8
      Ts_Ctx[Instance].Width             = TS_Init->Width;
9000679e:	4c23      	ldr	r4, [pc, #140]	@ (9000682c <BSP_TS_Init+0x114>)
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
900067a0:	f8d8 3000 	ldr.w	r3, [r8]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
900067a4:	6022      	str	r2, [r4, #0]
900067a6:	686a      	ldr	r2, [r5, #4]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
900067a8:	6838      	ldr	r0, [r7, #0]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
900067aa:	6062      	str	r2, [r4, #4]
900067ac:	68aa      	ldr	r2, [r5, #8]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
900067ae:	69db      	ldr	r3, [r3, #28]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
900067b0:	60a2      	str	r2, [r4, #8]
900067b2:	68ea      	ldr	r2, [r5, #12]
900067b4:	60e2      	str	r2, [r4, #12]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
900067b6:	4798      	blx	r3
900067b8:	2800      	cmp	r0, #0
900067ba:	db18      	blt.n	900067ee <BSP_TS_Init+0xd6>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
900067bc:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
900067c0:	e9c4 3204 	strd	r3, r2, [r4, #16]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
900067c4:	68eb      	ldr	r3, [r5, #12]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
900067c6:	e9d5 2100 	ldrd	r2, r1, [r5]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
900067ca:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
900067cc:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
900067ce:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
900067d0:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
900067d2:	e9c4 2206 	strd	r2, r2, [r4, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
900067d6:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
900067da:	e9c4 2208 	strd	r2, r2, [r4, #32]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
900067de:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
900067e2:	62a2      	str	r2, [r4, #40]	@ 0x28
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
900067e4:	63e3      	str	r3, [r4, #60]	@ 0x3c
}
900067e6:	4630      	mov	r0, r6
900067e8:	b008      	add	sp, #32
900067ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ret = BSP_ERROR_COMPONENT_FAILURE;
900067ee:	f06f 0604 	mvn.w	r6, #4
}
900067f2:	4630      	mov	r0, r6
900067f4:	b008      	add	sp, #32
900067f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ret = BSP_ERROR_WRONG_PARAM;
900067fa:	f06f 0601 	mvn.w	r6, #1
}
900067fe:	4630      	mov	r0, r6
90006800:	b008      	add	sp, #32
90006802:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      ret = BSP_ERROR_NO_INIT;
90006806:	f04f 36ff 	mov.w	r6, #4294967295
9000680a:	e7ec      	b.n	900067e6 <BSP_TS_Init+0xce>
9000680c:	90005c69 	.word	0x90005c69
90006810:	24008358 	.word	0x24008358
90006814:	90005bd5 	.word	0x90005bd5
90006818:	90006471 	.word	0x90006471
9000681c:	90006435 	.word	0x90006435
90006820:	900064ad 	.word	0x900064ad
90006824:	24000044 	.word	0x24000044
90006828:	240083c0 	.word	0x240083c0
9000682c:	24008380 	.word	0x24008380
90006830:	240083c4 	.word	0x240083c4

90006834 <BSP_TS_GetState>:
  if(Instance >= TS_INSTANCES_NBR)
90006834:	2800      	cmp	r0, #0
90006836:	d154      	bne.n	900068e2 <BSP_TS_GetState+0xae>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90006838:	4b2b      	ldr	r3, [pc, #172]	@ (900068e8 <BSP_TS_GetState+0xb4>)
9000683a:	4a2c      	ldr	r2, [pc, #176]	@ (900068ec <BSP_TS_GetState+0xb8>)
9000683c:	681b      	ldr	r3, [r3, #0]
9000683e:	6810      	ldr	r0, [r2, #0]
90006840:	691b      	ldr	r3, [r3, #16]
{
90006842:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90006846:	b084      	sub	sp, #16
90006848:	460c      	mov	r4, r1
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
9000684a:	a901      	add	r1, sp, #4
9000684c:	4798      	blx	r3
9000684e:	2800      	cmp	r0, #0
90006850:	db3f      	blt.n	900068d2 <BSP_TS_GetState+0x9e>
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
90006852:	4b27      	ldr	r3, [pc, #156]	@ (900068f0 <BSP_TS_GetState+0xbc>)
    else if(state.TouchDetected != 0U)
90006854:	9801      	ldr	r0, [sp, #4]
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
90006856:	699e      	ldr	r6, [r3, #24]
        y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
90006858:	6add      	ldr	r5, [r3, #44]	@ 0x2c
    else if(state.TouchDetected != 0U)
9000685a:	b930      	cbnz	r0, 9000686a <BSP_TS_GetState+0x36>
      TS_State->TouchDetected = 0U;
9000685c:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
9000685e:	e9c4 6501 	strd	r6, r5, [r4, #4]
  int32_t ret = BSP_ERROR_NONE;
90006862:	2000      	movs	r0, #0
}
90006864:	b004      	add	sp, #16
90006866:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
9000686a:	689f      	ldr	r7, [r3, #8]
9000686c:	073a      	lsls	r2, r7, #28
      y_oriented = state.TouchY;
9000686e:	e9dd c802 	ldrd	ip, r8, [sp, #8]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90006872:	d433      	bmi.n	900068dc <BSP_TS_GetState+0xa8>
      y_oriented = state.TouchY;
90006874:	4641      	mov	r1, r8
      x_oriented = state.TouchX;
90006876:	4662      	mov	r2, ip
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90006878:	f017 0f02 	tst.w	r7, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
9000687c:	f8d3 e010 	ldr.w	lr, [r3, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90006880:	d003      	beq.n	9000688a <BSP_TS_GetState+0x56>
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90006882:	f10e 32ff 	add.w	r2, lr, #4294967295
90006886:	eba2 020c 	sub.w	r2, r2, ip
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
9000688a:	f8d3 c014 	ldr.w	ip, [r3, #20]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
9000688e:	077f      	lsls	r7, r7, #29
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90006890:	681f      	ldr	r7, [r3, #0]
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
90006892:	bf48      	it	mi
90006894:	ebac 0108 	submi.w	r1, ip, r8
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90006898:	fb07 f202 	mul.w	r2, r7, r2
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
9000689c:	685f      	ldr	r7, [r3, #4]
      TS_State->TouchDetected = state.TouchDetected;
9000689e:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
900068a0:	fb07 f101 	mul.w	r1, r7, r1
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
900068a4:	fbb2 f2fe 	udiv	r2, r2, lr
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
900068a8:	fbb1 f1fc 	udiv	r1, r1, ip
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
900068ac:	42b2      	cmp	r2, r6
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
900068ae:	6062      	str	r2, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
900068b0:	60a1      	str	r1, [r4, #8]
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
900068b2:	bf8c      	ite	hi
900068b4:	1b90      	subhi	r0, r2, r6
900068b6:	1ab0      	subls	r0, r6, r2
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
900068b8:	42a9      	cmp	r1, r5
900068ba:	bf8c      	ite	hi
900068bc:	1b4f      	subhi	r7, r1, r5
900068be:	1a6f      	subls	r7, r5, r1
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
900068c0:	42b8      	cmp	r0, r7
900068c2:	bf38      	it	cc
900068c4:	4638      	movcc	r0, r7
900068c6:	68df      	ldr	r7, [r3, #12]
900068c8:	4287      	cmp	r7, r0
900068ca:	d2c8      	bcs.n	9000685e <BSP_TS_GetState+0x2a>
            Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
900068cc:	619a      	str	r2, [r3, #24]
            Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
900068ce:	62d9      	str	r1, [r3, #44]	@ 0x2c
900068d0:	e7c7      	b.n	90006862 <BSP_TS_GetState+0x2e>
      ret = BSP_ERROR_COMPONENT_FAILURE;
900068d2:	f06f 0004 	mvn.w	r0, #4
}
900068d6:	b004      	add	sp, #16
900068d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        y_oriented = state.TouchX;
900068dc:	4661      	mov	r1, ip
        x_oriented = state.TouchY;
900068de:	4642      	mov	r2, r8
900068e0:	e7ca      	b.n	90006878 <BSP_TS_GetState+0x44>
    ret = BSP_ERROR_WRONG_PARAM;
900068e2:	f06f 0001 	mvn.w	r0, #1
}
900068e6:	4770      	bx	lr
900068e8:	240083c4 	.word	0x240083c4
900068ec:	240083c0 	.word	0x240083c0
900068f0:	24008380 	.word	0x24008380

900068f4 <SystemInit>:
#endif

extern unsigned int VECTOR_TABLE_LOCATION;

void SystemInit (void)
{
900068f4:	b410      	push	{r4}
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
900068f6:	4c19      	ldr	r4, [pc, #100]	@ (9000695c <SystemInit+0x68>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
900068f8:	2200      	movs	r2, #0
  RCC->CR |= RCC_CR_HSION;
900068fa:	4b19      	ldr	r3, [pc, #100]	@ (90006960 <SystemInit+0x6c>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
900068fc:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
90006900:	4918      	ldr	r1, [pc, #96]	@ (90006964 <SystemInit+0x70>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90006902:	f440 0070 	orr.w	r0, r0, #15728640	@ 0xf00000
90006906:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
  RCC->CR |= RCC_CR_HSION;
9000690a:	6818      	ldr	r0, [r3, #0]
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
9000690c:	4c16      	ldr	r4, [pc, #88]	@ (90006968 <SystemInit+0x74>)
  RCC->CR |= RCC_CR_HSION;
9000690e:	f040 0001 	orr.w	r0, r0, #1
90006912:	6018      	str	r0, [r3, #0]
  RCC->CFGR = 0x00000000;
90006914:	611a      	str	r2, [r3, #16]
  RCC->CR &= 0xEAF6ED7FU;
90006916:	6818      	ldr	r0, [r3, #0]
90006918:	4001      	ands	r1, r0
9000691a:	6019      	str	r1, [r3, #0]
  RCC->D1CFGR = 0x00000000;
9000691c:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
9000691e:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
90006920:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x00000000;
90006922:	629a      	str	r2, [r3, #40]	@ 0x28
  RCC->PLLCFGR = 0x00000000;
90006924:	62da      	str	r2, [r3, #44]	@ 0x2c
  RCC->PLL1DIVR = 0x00000000;
90006926:	631a      	str	r2, [r3, #48]	@ 0x30
  RCC->PLL1FRACR = 0x00000000;
90006928:	635a      	str	r2, [r3, #52]	@ 0x34
  RCC->PLL2DIVR = 0x00000000;
9000692a:	639a      	str	r2, [r3, #56]	@ 0x38
  RCC->PLL2FRACR = 0x00000000;
9000692c:	63da      	str	r2, [r3, #60]	@ 0x3c
  RCC->PLL3DIVR = 0x00000000;
9000692e:	641a      	str	r2, [r3, #64]	@ 0x40
  RCC->PLL3FRACR = 0x00000000;
90006930:	645a      	str	r2, [r3, #68]	@ 0x44
  RCC->CR &= 0xFFFBFFFFU;
90006932:	6819      	ldr	r1, [r3, #0]
90006934:	f421 2180 	bic.w	r1, r1, #262144	@ 0x40000
90006938:	6019      	str	r1, [r3, #0]
  RCC->CIER = 0x00000000;
9000693a:	661a      	str	r2, [r3, #96]	@ 0x60
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
9000693c:	6823      	ldr	r3, [r4, #0]
9000693e:	f36f 030f 	bfc	r3, #0, #16
90006942:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
90006946:	d203      	bcs.n	90006950 <SystemInit+0x5c>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
90006948:	4b08      	ldr	r3, [pc, #32]	@ (9000696c <SystemInit+0x78>)
9000694a:	2201      	movs	r2, #1
9000694c:	f8c3 2108 	str.w	r2, [r3, #264]	@ 0x108

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#elif defined(VECT_TAB_QSPI)
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90006950:	4a07      	ldr	r2, [pc, #28]	@ (90006970 <SystemInit+0x7c>)
90006952:	4b02      	ldr	r3, [pc, #8]	@ (9000695c <SystemInit+0x68>)
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
90006954:	f85d 4b04 	ldr.w	r4, [sp], #4
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90006958:	609a      	str	r2, [r3, #8]
}
9000695a:	4770      	bx	lr
9000695c:	e000ed00 	.word	0xe000ed00
90006960:	58024400 	.word	0x58024400
90006964:	eaf6ed7f 	.word	0xeaf6ed7f
90006968:	5c001000 	.word	0x5c001000
9000696c:	51008000 	.word	0x51008000
90006970:	90000000 	.word	0x90000000

90006974 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
90006974:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90006976:	2003      	movs	r0, #3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90006978:	4c12      	ldr	r4, [pc, #72]	@ (900069c4 <HAL_Init+0x50>)
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
9000697a:	f000 f843 	bl	90006a04 <HAL_NVIC_SetPriorityGrouping>
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000697e:	f004 f94f 	bl	9000ac20 <HAL_RCC_GetSysClockFreq>
90006982:	4b11      	ldr	r3, [pc, #68]	@ (900069c8 <HAL_Init+0x54>)
90006984:	4911      	ldr	r1, [pc, #68]	@ (900069cc <HAL_Init+0x58>)
90006986:	699a      	ldr	r2, [r3, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90006988:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000698a:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000698e:	f003 030f 	and.w	r3, r3, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90006992:	5c8a      	ldrb	r2, [r1, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90006994:	5ccb      	ldrb	r3, [r1, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90006996:	f002 021f 	and.w	r2, r2, #31
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
9000699a:	490d      	ldr	r1, [pc, #52]	@ (900069d0 <HAL_Init+0x5c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000699c:	f003 031f 	and.w	r3, r3, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
900069a0:	40d0      	lsrs	r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
900069a2:	fa20 f303 	lsr.w	r3, r0, r3
  SystemCoreClock = common_system_clock;
900069a6:	6008      	str	r0, [r1, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
900069a8:	2000      	movs	r0, #0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
900069aa:	6023      	str	r3, [r4, #0]
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
900069ac:	f7fd fe24 	bl	900045f8 <HAL_InitTick>
900069b0:	b110      	cbz	r0, 900069b8 <HAL_Init+0x44>
  {
    return HAL_ERROR;
900069b2:	2401      	movs	r4, #1
  /* Init the low level hardware */
  HAL_MspInit();

  /* Return function status */
  return HAL_OK;
}
900069b4:	4620      	mov	r0, r4
900069b6:	bd10      	pop	{r4, pc}
900069b8:	4604      	mov	r4, r0
  HAL_MspInit();
900069ba:	f7fd fb6b 	bl	90004094 <HAL_MspInit>
}
900069be:	4620      	mov	r0, r4
900069c0:	bd10      	pop	{r4, pc}
900069c2:	bf00      	nop
900069c4:	24000074 	.word	0x24000074
900069c8:	58024400 	.word	0x58024400
900069cc:	9002dbcc 	.word	0x9002dbcc
900069d0:	24000078 	.word	0x24000078

900069d4 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
900069d4:	4a03      	ldr	r2, [pc, #12]	@ (900069e4 <HAL_IncTick+0x10>)
900069d6:	4b04      	ldr	r3, [pc, #16]	@ (900069e8 <HAL_IncTick+0x14>)
900069d8:	6811      	ldr	r1, [r2, #0]
900069da:	781b      	ldrb	r3, [r3, #0]
900069dc:	440b      	add	r3, r1
900069de:	6013      	str	r3, [r2, #0]
}
900069e0:	4770      	bx	lr
900069e2:	bf00      	nop
900069e4:	240083c8 	.word	0x240083c8
900069e8:	2400007c 	.word	0x2400007c

900069ec <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
900069ec:	4b01      	ldr	r3, [pc, #4]	@ (900069f4 <HAL_GetTick+0x8>)
900069ee:	6818      	ldr	r0, [r3, #0]
}
900069f0:	4770      	bx	lr
900069f2:	bf00      	nop
900069f4:	240083c8 	.word	0x240083c8

900069f8 <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
900069f8:	4b01      	ldr	r3, [pc, #4]	@ (90006a00 <HAL_GetREVID+0x8>)
900069fa:	6818      	ldr	r0, [r3, #0]
}
900069fc:	0c00      	lsrs	r0, r0, #16
900069fe:	4770      	bx	lr
90006a00:	5c001000 	.word	0x5c001000

90006a04 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90006a04:	4906      	ldr	r1, [pc, #24]	@ (90006a20 <HAL_NVIC_SetPriorityGrouping+0x1c>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90006a06:	f64f 0cff 	movw	ip, #63743	@ 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90006a0a:	0200      	lsls	r0, r0, #8
  reg_value  =  (reg_value                                   |
90006a0c:	4b05      	ldr	r3, [pc, #20]	@ (90006a24 <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90006a0e:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90006a10:	f400 60e0 	and.w	r0, r0, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90006a14:	ea02 020c 	and.w	r2, r2, ip
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
90006a18:	4310      	orrs	r0, r2
  reg_value  =  (reg_value                                   |
90006a1a:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
90006a1c:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
90006a1e:	4770      	bx	lr
90006a20:	e000ed00 	.word	0xe000ed00
90006a24:	05fa0000 	.word	0x05fa0000

90006a28 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
90006a28:	4b1a      	ldr	r3, [pc, #104]	@ (90006a94 <HAL_NVIC_SetPriority+0x6c>)
90006a2a:	68db      	ldr	r3, [r3, #12]
90006a2c:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
90006a30:	b500      	push	{lr}
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90006a32:	f1c3 0e07 	rsb	lr, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90006a36:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90006a3a:	f1be 0f04 	cmp.w	lr, #4
90006a3e:	bf28      	it	cs
90006a40:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90006a44:	f1bc 0f06 	cmp.w	ip, #6
90006a48:	d91a      	bls.n	90006a80 <HAL_NVIC_SetPriority+0x58>
90006a4a:	f1a3 0c03 	sub.w	ip, r3, #3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
90006a4e:	f04f 33ff 	mov.w	r3, #4294967295
90006a52:	fa03 f30c 	lsl.w	r3, r3, ip
90006a56:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90006a5a:	f04f 33ff 	mov.w	r3, #4294967295
  if ((int32_t)(IRQn) >= 0)
90006a5e:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90006a60:	fa03 f30e 	lsl.w	r3, r3, lr
90006a64:	ea21 0303 	bic.w	r3, r1, r3
90006a68:	fa03 f30c 	lsl.w	r3, r3, ip
90006a6c:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90006a70:	ea4f 1303 	mov.w	r3, r3, lsl #4
90006a74:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
90006a76:	db06      	blt.n	90006a86 <HAL_NVIC_SetPriority+0x5e>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90006a78:	4a07      	ldr	r2, [pc, #28]	@ (90006a98 <HAL_NVIC_SetPriority+0x70>)
90006a7a:	5413      	strb	r3, [r2, r0]
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
90006a7c:	f85d fb04 	ldr.w	pc, [sp], #4
90006a80:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90006a82:	4694      	mov	ip, r2
90006a84:	e7e9      	b.n	90006a5a <HAL_NVIC_SetPriority+0x32>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90006a86:	f000 000f 	and.w	r0, r0, #15
90006a8a:	4a04      	ldr	r2, [pc, #16]	@ (90006a9c <HAL_NVIC_SetPriority+0x74>)
90006a8c:	5413      	strb	r3, [r2, r0]
90006a8e:	f85d fb04 	ldr.w	pc, [sp], #4
90006a92:	bf00      	nop
90006a94:	e000ed00 	.word	0xe000ed00
90006a98:	e000e400 	.word	0xe000e400
90006a9c:	e000ed14 	.word	0xe000ed14

90006aa0 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90006aa0:	2800      	cmp	r0, #0
90006aa2:	db07      	blt.n	90006ab4 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90006aa4:	2301      	movs	r3, #1
90006aa6:	f000 011f 	and.w	r1, r0, #31
90006aaa:	4a03      	ldr	r2, [pc, #12]	@ (90006ab8 <HAL_NVIC_EnableIRQ+0x18>)
90006aac:	0940      	lsrs	r0, r0, #5
90006aae:	408b      	lsls	r3, r1
90006ab0:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
90006ab4:	4770      	bx	lr
90006ab6:	bf00      	nop
90006ab8:	e000e100 	.word	0xe000e100

90006abc <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90006abc:	2800      	cmp	r0, #0
90006abe:	db0c      	blt.n	90006ada <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90006ac0:	0943      	lsrs	r3, r0, #5
90006ac2:	2201      	movs	r2, #1
90006ac4:	f000 001f 	and.w	r0, r0, #31
90006ac8:	4904      	ldr	r1, [pc, #16]	@ (90006adc <HAL_NVIC_DisableIRQ+0x20>)
90006aca:	3320      	adds	r3, #32
90006acc:	4082      	lsls	r2, r0
90006ace:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
90006ad2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90006ad6:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
90006ada:	4770      	bx	lr
90006adc:	e000e100 	.word	0xe000e100

90006ae0 <HAL_MPU_Disable>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
90006ae0:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
90006ae4:	4b04      	ldr	r3, [pc, #16]	@ (90006af8 <HAL_MPU_Disable+0x18>)

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
90006ae6:	2100      	movs	r1, #0
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
90006ae8:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
90006aea:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
90006aee:	625a      	str	r2, [r3, #36]	@ 0x24
  MPU->CTRL = 0;
90006af0:	f8c3 1094 	str.w	r1, [r3, #148]	@ 0x94
}
90006af4:	4770      	bx	lr
90006af6:	bf00      	nop
90006af8:	e000ed00 	.word	0xe000ed00

90006afc <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
90006afc:	4b06      	ldr	r3, [pc, #24]	@ (90006b18 <HAL_MPU_Enable+0x1c>)
90006afe:	f040 0001 	orr.w	r0, r0, #1
90006b02:	f8c3 0094 	str.w	r0, [r3, #148]	@ 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
90006b06:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
90006b08:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
90006b0c:	625a      	str	r2, [r3, #36]	@ 0x24
  __ASM volatile ("dsb 0xF":::"memory");
90006b0e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90006b12:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
90006b16:	4770      	bx	lr
90006b18:	e000ed00 	.word	0xe000ed00

90006b1c <HAL_MPU_ConfigRegion>:
  assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
  assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
  assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
90006b1c:	4a16      	ldr	r2, [pc, #88]	@ (90006b78 <HAL_MPU_ConfigRegion+0x5c>)
90006b1e:	7843      	ldrb	r3, [r0, #1]
90006b20:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98

  /* Disable the Region */
  CLEAR_BIT(MPU->RASR, MPU_RASR_ENABLE_Msk);
90006b24:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
90006b28:	f023 0301 	bic.w	r3, r3, #1
90006b2c:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0

  /* Apply configuration */
  MPU->RBAR = MPU_Init->BaseAddress;
90006b30:	6843      	ldr	r3, [r0, #4]
90006b32:	f8c2 309c 	str.w	r3, [r2, #156]	@ 0x9c
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
              ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90006b36:	7ac3      	ldrb	r3, [r0, #11]
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90006b38:	f890 c00c 	ldrb.w	ip, [r0, #12]
              ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90006b3c:	061b      	lsls	r3, r3, #24
              ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
              ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
              ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
              ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
              ((uint32_t)MPU_Init->Enable                  << MPU_RASR_ENABLE_Pos);
90006b3e:	7801      	ldrb	r1, [r0, #0]
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90006b40:	ea43 730c 	orr.w	r3, r3, ip, lsl #28
              ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
90006b44:	f890 c00a 	ldrb.w	ip, [r0, #10]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90006b48:	430b      	orrs	r3, r1
              ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
90006b4a:	7b41      	ldrb	r1, [r0, #13]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90006b4c:	ea43 43cc 	orr.w	r3, r3, ip, lsl #19
              ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
90006b50:	f890 c00e 	ldrb.w	ip, [r0, #14]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90006b54:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
              ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
90006b58:	7bc1      	ldrb	r1, [r0, #15]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90006b5a:	ea43 434c 	orr.w	r3, r3, ip, lsl #17
              ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
90006b5e:	f890 c009 	ldrb.w	ip, [r0, #9]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90006b62:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
90006b66:	7a01      	ldrb	r1, [r0, #8]
90006b68:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
90006b6c:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90006b70:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0
}
90006b74:	4770      	bx	lr
90006b76:	bf00      	nop
90006b78:	e000ed00 	.word	0xe000ed00

90006b7c <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
90006b7c:	2800      	cmp	r0, #0
90006b7e:	d036      	beq.n	90006bee <HAL_CRC_Init+0x72>
{
90006b80:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
90006b82:	7f43      	ldrb	r3, [r0, #29]
90006b84:	4604      	mov	r4, r0
90006b86:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90006b8a:	b363      	cbz	r3, 90006be6 <HAL_CRC_Init+0x6a>
    hcrc->Lock = HAL_UNLOCKED;
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
90006b8c:	2202      	movs	r2, #2

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
90006b8e:	7923      	ldrb	r3, [r4, #4]
  hcrc->State = HAL_CRC_STATE_BUSY;
90006b90:	7762      	strb	r2, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
90006b92:	b9f3      	cbnz	r3, 90006bd2 <HAL_CRC_Init+0x56>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
90006b94:	6823      	ldr	r3, [r4, #0]
90006b96:	4a17      	ldr	r2, [pc, #92]	@ (90006bf4 <HAL_CRC_Init+0x78>)
90006b98:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
90006b9a:	689a      	ldr	r2, [r3, #8]
90006b9c:	f022 0218 	bic.w	r2, r2, #24
90006ba0:	609a      	str	r2, [r3, #8]
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
90006ba2:	7962      	ldrb	r2, [r4, #5]
90006ba4:	b18a      	cbz	r2, 90006bca <HAL_CRC_Init+0x4e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
90006ba6:	6922      	ldr	r2, [r4, #16]
90006ba8:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90006baa:	689a      	ldr	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90006bac:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90006bb0:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
90006bb4:	4302      	orrs	r2, r0

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
90006bb6:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90006bb8:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90006bba:	689a      	ldr	r2, [r3, #8]
90006bbc:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90006bc0:	430a      	orrs	r2, r1
  hcrc->State = HAL_CRC_STATE_READY;
90006bc2:	2101      	movs	r1, #1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90006bc4:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
90006bc6:	7761      	strb	r1, [r4, #29]
}
90006bc8:	bd10      	pop	{r4, pc}
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
90006bca:	f04f 32ff 	mov.w	r2, #4294967295
90006bce:	611a      	str	r2, [r3, #16]
90006bd0:	e7eb      	b.n	90006baa <HAL_CRC_Init+0x2e>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
90006bd2:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
90006bd6:	4620      	mov	r0, r4
90006bd8:	f000 f80e 	bl	90006bf8 <HAL_CRCEx_Polynomial_Set>
90006bdc:	b908      	cbnz	r0, 90006be2 <HAL_CRC_Init+0x66>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
90006bde:	6823      	ldr	r3, [r4, #0]
90006be0:	e7df      	b.n	90006ba2 <HAL_CRC_Init+0x26>
    return HAL_ERROR;
90006be2:	2001      	movs	r0, #1
}
90006be4:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
90006be6:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
90006be8:	f7fd fa6e 	bl	900040c8 <HAL_CRC_MspInit>
90006bec:	e7ce      	b.n	90006b8c <HAL_CRC_Init+0x10>
    return HAL_ERROR;
90006bee:	2001      	movs	r0, #1
}
90006bf0:	4770      	bx	lr
90006bf2:	bf00      	nop
90006bf4:	04c11db7 	.word	0x04c11db7

90006bf8 <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
90006bf8:	07cb      	lsls	r3, r1, #31
90006bfa:	d51a      	bpl.n	90006c32 <HAL_CRCEx_Polynomial_Set+0x3a>
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
90006bfc:	231f      	movs	r3, #31
{
90006bfe:	b410      	push	{r4}
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
90006c00:	3b01      	subs	r3, #1
90006c02:	1c5c      	adds	r4, r3, #1
90006c04:	fa21 fc03 	lsr.w	ip, r1, r3
90006c08:	d015      	beq.n	90006c36 <HAL_CRCEx_Polynomial_Set+0x3e>
90006c0a:	f01c 0f01 	tst.w	ip, #1
90006c0e:	d0f7      	beq.n	90006c00 <HAL_CRCEx_Polynomial_Set+0x8>
    {
    }

    switch (PolyLength)
90006c10:	2a18      	cmp	r2, #24
90006c12:	d811      	bhi.n	90006c38 <HAL_CRCEx_Polynomial_Set+0x40>
90006c14:	e8df f002 	tbb	[pc, r2]
90006c18:	10101016 	.word	0x10101016
90006c1c:	10101010 	.word	0x10101010
90006c20:	10101024 	.word	0x10101024
90006c24:	10101010 	.word	0x10101010
90006c28:	10101021 	.word	0x10101021
90006c2c:	10101010 	.word	0x10101010
90006c30:	14          	.byte	0x14
90006c31:	00          	.byte	0x00
    {

      case CRC_POLYLENGTH_7B:
        if (msb >= HAL_CRC_LENGTH_7B)
        {
          status =   HAL_ERROR;
90006c32:	2001      	movs	r0, #1
    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
}
90006c34:	4770      	bx	lr
    switch (PolyLength)
90006c36:	b12a      	cbz	r2, 90006c44 <HAL_CRCEx_Polynomial_Set+0x4c>
          status =   HAL_ERROR;
90006c38:	2001      	movs	r0, #1
}
90006c3a:	f85d 4b04 	ldr.w	r4, [sp], #4
90006c3e:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_7B)
90006c40:	2b06      	cmp	r3, #6
90006c42:	d8f9      	bhi.n	90006c38 <HAL_CRCEx_Polynomial_Set+0x40>
    WRITE_REG(hcrc->Instance->POL, Pol);
90006c44:	6804      	ldr	r4, [r0, #0]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
90006c46:	2000      	movs	r0, #0
    WRITE_REG(hcrc->Instance->POL, Pol);
90006c48:	6161      	str	r1, [r4, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
90006c4a:	68a3      	ldr	r3, [r4, #8]
90006c4c:	f023 0318 	bic.w	r3, r3, #24
90006c50:	4313      	orrs	r3, r2
90006c52:	60a3      	str	r3, [r4, #8]
}
90006c54:	f85d 4b04 	ldr.w	r4, [sp], #4
90006c58:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_8B)
90006c5a:	2b07      	cmp	r3, #7
90006c5c:	d9f2      	bls.n	90006c44 <HAL_CRCEx_Polynomial_Set+0x4c>
90006c5e:	e7eb      	b.n	90006c38 <HAL_CRCEx_Polynomial_Set+0x40>
        if (msb >= HAL_CRC_LENGTH_16B)
90006c60:	2b0f      	cmp	r3, #15
90006c62:	d9ef      	bls.n	90006c44 <HAL_CRCEx_Polynomial_Set+0x4c>
90006c64:	e7e8      	b.n	90006c38 <HAL_CRCEx_Polynomial_Set+0x40>
90006c66:	bf00      	nop

90006c68 <HAL_DMA_Abort>:
  *        and the Stream will be effectively disabled only after the transfer of
  *        this single data is finished.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
90006c68:	b570      	push	{r4, r5, r6, lr}
90006c6a:	4604      	mov	r4, r0
  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs_dma;
  BDMA_Base_Registers *regs_bdma;
  const __IO uint32_t *enableRegister;

  uint32_t tickstart = HAL_GetTick();
90006c6c:	f7ff febe 	bl	900069ec <HAL_GetTick>

 /* Check the DMA peripheral handle */
  if(hdma == NULL)
90006c70:	2c00      	cmp	r4, #0
90006c72:	d06d      	beq.n	90006d50 <HAL_DMA_Abort+0xe8>
  {
    return HAL_ERROR;
  }

  /* Check the DMA peripheral state */
  if(hdma->State != HAL_DMA_STATE_BUSY)
90006c74:	f894 3035 	ldrb.w	r3, [r4, #53]	@ 0x35
90006c78:	2b02      	cmp	r3, #2
90006c7a:	d164      	bne.n	90006d46 <HAL_DMA_Abort+0xde>
    return HAL_ERROR;
  }
  else
  {
    /* Disable all the transfer interrupts */
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
90006c7c:	6825      	ldr	r5, [r4, #0]
90006c7e:	4606      	mov	r6, r0
90006c80:	4bad      	ldr	r3, [pc, #692]	@ (90006f38 <HAL_DMA_Abort+0x2d0>)
90006c82:	429d      	cmp	r5, r3
90006c84:	d066      	beq.n	90006d54 <HAL_DMA_Abort+0xec>
90006c86:	3318      	adds	r3, #24
90006c88:	429d      	cmp	r5, r3
90006c8a:	d063      	beq.n	90006d54 <HAL_DMA_Abort+0xec>
90006c8c:	3318      	adds	r3, #24
90006c8e:	429d      	cmp	r5, r3
90006c90:	f000 80f3 	beq.w	90006e7a <HAL_DMA_Abort+0x212>
90006c94:	3318      	adds	r3, #24
90006c96:	429d      	cmp	r5, r3
90006c98:	f000 811a 	beq.w	90006ed0 <HAL_DMA_Abort+0x268>
90006c9c:	3318      	adds	r3, #24
90006c9e:	429d      	cmp	r5, r3
90006ca0:	f000 8125 	beq.w	90006eee <HAL_DMA_Abort+0x286>
90006ca4:	3318      	adds	r3, #24
90006ca6:	429d      	cmp	r5, r3
90006ca8:	f000 80ff 	beq.w	90006eaa <HAL_DMA_Abort+0x242>
90006cac:	3318      	adds	r3, #24
90006cae:	429d      	cmp	r5, r3
90006cb0:	f000 812e 	beq.w	90006f10 <HAL_DMA_Abort+0x2a8>
90006cb4:	3318      	adds	r3, #24
90006cb6:	429d      	cmp	r5, r3
90006cb8:	f000 814a 	beq.w	90006f50 <HAL_DMA_Abort+0x2e8>
90006cbc:	f503 7356 	add.w	r3, r3, #856	@ 0x358
90006cc0:	429d      	cmp	r5, r3
90006cc2:	f000 8158 	beq.w	90006f76 <HAL_DMA_Abort+0x30e>
90006cc6:	3318      	adds	r3, #24
90006cc8:	429d      	cmp	r5, r3
90006cca:	f000 8163 	beq.w	90006f94 <HAL_DMA_Abort+0x32c>
90006cce:	3318      	adds	r3, #24
90006cd0:	429d      	cmp	r5, r3
90006cd2:	f000 816e 	beq.w	90006fb2 <HAL_DMA_Abort+0x34a>
90006cd6:	3318      	adds	r3, #24
90006cd8:	429d      	cmp	r5, r3
90006cda:	f000 816c 	beq.w	90006fb6 <HAL_DMA_Abort+0x34e>
90006cde:	3318      	adds	r3, #24
90006ce0:	429d      	cmp	r5, r3
90006ce2:	f000 816a 	beq.w	90006fba <HAL_DMA_Abort+0x352>
90006ce6:	3318      	adds	r3, #24
90006ce8:	429d      	cmp	r5, r3
90006cea:	f000 8168 	beq.w	90006fbe <HAL_DMA_Abort+0x356>
90006cee:	3318      	adds	r3, #24
90006cf0:	429d      	cmp	r5, r3
90006cf2:	f000 8168 	beq.w	90006fc6 <HAL_DMA_Abort+0x35e>
90006cf6:	3318      	adds	r3, #24
90006cf8:	429d      	cmp	r5, r3
90006cfa:	f000 8162 	beq.w	90006fc2 <HAL_DMA_Abort+0x35a>
      enableRegister = (__IO uint32_t *)(&(((DMA_Stream_TypeDef   *)hdma->Instance)->CR));
    }
    else /* BDMA channel */
    {
      /* Disable DMA All Interrupts */
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
90006cfe:	682b      	ldr	r3, [r5, #0]

      enableRegister = (__IO uint32_t *)(&(((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR));
    }

    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
90006d00:	4a8e      	ldr	r2, [pc, #568]	@ (90006f3c <HAL_DMA_Abort+0x2d4>)
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
90006d02:	f023 030e 	bic.w	r3, r3, #14
    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
90006d06:	4295      	cmp	r5, r2
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
90006d08:	602b      	str	r3, [r5, #0]
    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
90006d0a:	f000 80bf 	beq.w	90006e8c <HAL_DMA_Abort+0x224>
90006d0e:	4b8c      	ldr	r3, [pc, #560]	@ (90006f40 <HAL_DMA_Abort+0x2d8>)
90006d10:	429d      	cmp	r5, r3
90006d12:	f000 80bb 	beq.w	90006e8c <HAL_DMA_Abort+0x224>
90006d16:	3314      	adds	r3, #20
90006d18:	429d      	cmp	r5, r3
90006d1a:	f000 80b7 	beq.w	90006e8c <HAL_DMA_Abort+0x224>
90006d1e:	3314      	adds	r3, #20
90006d20:	429d      	cmp	r5, r3
90006d22:	f000 80b3 	beq.w	90006e8c <HAL_DMA_Abort+0x224>
90006d26:	3314      	adds	r3, #20
90006d28:	429d      	cmp	r5, r3
90006d2a:	f000 80af 	beq.w	90006e8c <HAL_DMA_Abort+0x224>
90006d2e:	3314      	adds	r3, #20
90006d30:	429d      	cmp	r5, r3
90006d32:	f000 80ab 	beq.w	90006e8c <HAL_DMA_Abort+0x224>
90006d36:	3314      	adds	r3, #20
90006d38:	429d      	cmp	r5, r3
90006d3a:	f000 80a7 	beq.w	90006e8c <HAL_DMA_Abort+0x224>
90006d3e:	3314      	adds	r3, #20
90006d40:	429d      	cmp	r5, r3
90006d42:	d114      	bne.n	90006d6e <HAL_DMA_Abort+0x106>
90006d44:	e0a2      	b.n	90006e8c <HAL_DMA_Abort+0x224>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
90006d46:	2280      	movs	r2, #128	@ 0x80
    __HAL_UNLOCK(hdma);
90006d48:	2300      	movs	r3, #0
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
90006d4a:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hdma);
90006d4c:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
    return HAL_ERROR;
90006d50:	2001      	movs	r0, #1
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
  }

  return HAL_OK;
}
90006d52:	bd70      	pop	{r4, r5, r6, pc}
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90006d54:	682b      	ldr	r3, [r5, #0]
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90006d56:	6e22      	ldr	r2, [r4, #96]	@ 0x60
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90006d58:	f023 031e 	bic.w	r3, r3, #30
90006d5c:	602b      	str	r3, [r5, #0]
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
90006d5e:	696b      	ldr	r3, [r5, #20]
90006d60:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
90006d64:	616b      	str	r3, [r5, #20]
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90006d66:	6813      	ldr	r3, [r2, #0]
90006d68:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
90006d6c:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
90006d6e:	682b      	ldr	r3, [r5, #0]
90006d70:	f023 0301 	bic.w	r3, r3, #1
90006d74:	602b      	str	r3, [r5, #0]
90006d76:	e005      	b.n	90006d84 <HAL_DMA_Abort+0x11c>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
90006d78:	f7ff fe38 	bl	900069ec <HAL_GetTick>
90006d7c:	1b83      	subs	r3, r0, r6
90006d7e:	2b05      	cmp	r3, #5
90006d80:	f200 808a 	bhi.w	90006e98 <HAL_DMA_Abort+0x230>
    while(((*enableRegister) & DMA_SxCR_EN) != 0U)
90006d84:	682b      	ldr	r3, [r5, #0]
90006d86:	07db      	lsls	r3, r3, #31
90006d88:	d4f6      	bmi.n	90006d78 <HAL_DMA_Abort+0x110>
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
90006d8a:	6823      	ldr	r3, [r4, #0]
90006d8c:	496a      	ldr	r1, [pc, #424]	@ (90006f38 <HAL_DMA_Abort+0x2d0>)
      regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
90006d8e:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
90006d90:	428b      	cmp	r3, r1
      regs_bdma = (BDMA_Base_Registers *)hdma->StreamBaseAddress;
90006d92:	6da0      	ldr	r0, [r4, #88]	@ 0x58
      regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
90006d94:	f002 021f 	and.w	r2, r2, #31
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
90006d98:	d05e      	beq.n	90006e58 <HAL_DMA_Abort+0x1f0>
90006d9a:	3118      	adds	r1, #24
90006d9c:	428b      	cmp	r3, r1
90006d9e:	d05b      	beq.n	90006e58 <HAL_DMA_Abort+0x1f0>
90006da0:	3118      	adds	r1, #24
90006da2:	428b      	cmp	r3, r1
90006da4:	d058      	beq.n	90006e58 <HAL_DMA_Abort+0x1f0>
90006da6:	3118      	adds	r1, #24
90006da8:	428b      	cmp	r3, r1
90006daa:	d055      	beq.n	90006e58 <HAL_DMA_Abort+0x1f0>
90006dac:	3118      	adds	r1, #24
90006dae:	428b      	cmp	r3, r1
90006db0:	d052      	beq.n	90006e58 <HAL_DMA_Abort+0x1f0>
90006db2:	3118      	adds	r1, #24
90006db4:	428b      	cmp	r3, r1
90006db6:	d04f      	beq.n	90006e58 <HAL_DMA_Abort+0x1f0>
90006db8:	3118      	adds	r1, #24
90006dba:	428b      	cmp	r3, r1
90006dbc:	d04c      	beq.n	90006e58 <HAL_DMA_Abort+0x1f0>
90006dbe:	3118      	adds	r1, #24
90006dc0:	428b      	cmp	r3, r1
90006dc2:	d049      	beq.n	90006e58 <HAL_DMA_Abort+0x1f0>
90006dc4:	f501 7156 	add.w	r1, r1, #856	@ 0x358
90006dc8:	428b      	cmp	r3, r1
90006dca:	d045      	beq.n	90006e58 <HAL_DMA_Abort+0x1f0>
90006dcc:	3118      	adds	r1, #24
90006dce:	428b      	cmp	r3, r1
90006dd0:	d042      	beq.n	90006e58 <HAL_DMA_Abort+0x1f0>
90006dd2:	3118      	adds	r1, #24
90006dd4:	428b      	cmp	r3, r1
90006dd6:	d03f      	beq.n	90006e58 <HAL_DMA_Abort+0x1f0>
90006dd8:	3118      	adds	r1, #24
90006dda:	428b      	cmp	r3, r1
90006ddc:	d03c      	beq.n	90006e58 <HAL_DMA_Abort+0x1f0>
90006dde:	3118      	adds	r1, #24
90006de0:	428b      	cmp	r3, r1
90006de2:	d039      	beq.n	90006e58 <HAL_DMA_Abort+0x1f0>
90006de4:	3118      	adds	r1, #24
90006de6:	428b      	cmp	r3, r1
90006de8:	d036      	beq.n	90006e58 <HAL_DMA_Abort+0x1f0>
90006dea:	3118      	adds	r1, #24
90006dec:	428b      	cmp	r3, r1
90006dee:	d033      	beq.n	90006e58 <HAL_DMA_Abort+0x1f0>
90006df0:	3118      	adds	r1, #24
90006df2:	428b      	cmp	r3, r1
90006df4:	d030      	beq.n	90006e58 <HAL_DMA_Abort+0x1f0>
      regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
90006df6:	2101      	movs	r1, #1
90006df8:	4091      	lsls	r1, r2
    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
90006dfa:	4a51      	ldr	r2, [pc, #324]	@ (90006f40 <HAL_DMA_Abort+0x2d8>)
      regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
90006dfc:	6041      	str	r1, [r0, #4]
    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
90006dfe:	484f      	ldr	r0, [pc, #316]	@ (90006f3c <HAL_DMA_Abort+0x2d4>)
90006e00:	4950      	ldr	r1, [pc, #320]	@ (90006f44 <HAL_DMA_Abort+0x2dc>)
90006e02:	4283      	cmp	r3, r0
90006e04:	bf18      	it	ne
90006e06:	4293      	cmpne	r3, r2
90006e08:	f100 003c 	add.w	r0, r0, #60	@ 0x3c
90006e0c:	bf0c      	ite	eq
90006e0e:	2201      	moveq	r2, #1
90006e10:	2200      	movne	r2, #0
90006e12:	428b      	cmp	r3, r1
90006e14:	bf08      	it	eq
90006e16:	f042 0201 	orreq.w	r2, r2, #1
90006e1a:	3128      	adds	r1, #40	@ 0x28
90006e1c:	4283      	cmp	r3, r0
90006e1e:	bf08      	it	eq
90006e20:	f042 0201 	orreq.w	r2, r2, #1
90006e24:	3028      	adds	r0, #40	@ 0x28
90006e26:	428b      	cmp	r3, r1
90006e28:	bf08      	it	eq
90006e2a:	f042 0201 	orreq.w	r2, r2, #1
90006e2e:	3128      	adds	r1, #40	@ 0x28
90006e30:	4283      	cmp	r3, r0
90006e32:	bf08      	it	eq
90006e34:	f042 0201 	orreq.w	r2, r2, #1
90006e38:	428b      	cmp	r3, r1
90006e3a:	bf08      	it	eq
90006e3c:	f042 0201 	orreq.w	r2, r2, #1
90006e40:	b96a      	cbnz	r2, 90006e5e <HAL_DMA_Abort+0x1f6>
90006e42:	4a41      	ldr	r2, [pc, #260]	@ (90006f48 <HAL_DMA_Abort+0x2e0>)
90006e44:	4293      	cmp	r3, r2
90006e46:	d00a      	beq.n	90006e5e <HAL_DMA_Abort+0x1f6>
    __HAL_UNLOCK(hdma);
90006e48:	2300      	movs	r3, #0
    hdma->State = HAL_DMA_STATE_READY;
90006e4a:	2201      	movs	r2, #1
  return HAL_OK;
90006e4c:	4618      	mov	r0, r3
    hdma->State = HAL_DMA_STATE_READY;
90006e4e:	f884 2035 	strb.w	r2, [r4, #53]	@ 0x35
    __HAL_UNLOCK(hdma);
90006e52:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
}
90006e56:	bd70      	pop	{r4, r5, r6, pc}
      regs_dma->IFCR = 0x3FUL << (hdma->StreamIndex & 0x1FU);
90006e58:	233f      	movs	r3, #63	@ 0x3f
90006e5a:	4093      	lsls	r3, r2
90006e5c:	6083      	str	r3, [r0, #8]
      if(hdma->DMAmuxRequestGen != 0U)
90006e5e:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
      hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
90006e60:	e9d4 2119 	ldrd	r2, r1, [r4, #100]	@ 0x64
90006e64:	6051      	str	r1, [r2, #4]
      if(hdma->DMAmuxRequestGen != 0U)
90006e66:	2b00      	cmp	r3, #0
90006e68:	d0ee      	beq.n	90006e48 <HAL_DMA_Abort+0x1e0>
        hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
90006e6a:	681a      	ldr	r2, [r3, #0]
        hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
90006e6c:	e9d4 101c 	ldrd	r1, r0, [r4, #112]	@ 0x70
        hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
90006e70:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
90006e74:	601a      	str	r2, [r3, #0]
        hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
90006e76:	6048      	str	r0, [r1, #4]
90006e78:	e7e6      	b.n	90006e48 <HAL_DMA_Abort+0x1e0>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90006e7a:	4b34      	ldr	r3, [pc, #208]	@ (90006f4c <HAL_DMA_Abort+0x2e4>)
90006e7c:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
90006e7e:	f022 021e 	bic.w	r2, r2, #30
90006e82:	641a      	str	r2, [r3, #64]	@ 0x40
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
90006e84:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
90006e86:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90006e8a:	655a      	str	r2, [r3, #84]	@ 0x54
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90006e8c:	6e22      	ldr	r2, [r4, #96]	@ 0x60
90006e8e:	6813      	ldr	r3, [r2, #0]
90006e90:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
90006e94:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
90006e96:	e76a      	b.n	90006d6e <HAL_DMA_Abort+0x106>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
90006e98:	2120      	movs	r1, #32
        hdma->State = HAL_DMA_STATE_ERROR;
90006e9a:	2203      	movs	r2, #3
        __HAL_UNLOCK(hdma);
90006e9c:	2300      	movs	r3, #0
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
90006e9e:	6561      	str	r1, [r4, #84]	@ 0x54
        __HAL_UNLOCK(hdma);
90006ea0:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
        hdma->State = HAL_DMA_STATE_ERROR;
90006ea4:	f884 2035 	strb.w	r2, [r4, #53]	@ 0x35
        return HAL_ERROR;
90006ea8:	e752      	b.n	90006d50 <HAL_DMA_Abort+0xe8>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90006eaa:	4b28      	ldr	r3, [pc, #160]	@ (90006f4c <HAL_DMA_Abort+0x2e4>)
90006eac:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
90006eb0:	f022 021e 	bic.w	r2, r2, #30
90006eb4:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
90006eb8:	f8d3 209c 	ldr.w	r2, [r3, #156]	@ 0x9c
90006ebc:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90006ec0:	f8c3 209c 	str.w	r2, [r3, #156]	@ 0x9c
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90006ec4:	6e22      	ldr	r2, [r4, #96]	@ 0x60
90006ec6:	6813      	ldr	r3, [r2, #0]
90006ec8:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
90006ecc:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
90006ece:	e74e      	b.n	90006d6e <HAL_DMA_Abort+0x106>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90006ed0:	4b1e      	ldr	r3, [pc, #120]	@ (90006f4c <HAL_DMA_Abort+0x2e4>)
90006ed2:	6d9a      	ldr	r2, [r3, #88]	@ 0x58
90006ed4:	f022 021e 	bic.w	r2, r2, #30
90006ed8:	659a      	str	r2, [r3, #88]	@ 0x58
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
90006eda:	6eda      	ldr	r2, [r3, #108]	@ 0x6c
90006edc:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90006ee0:	66da      	str	r2, [r3, #108]	@ 0x6c
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90006ee2:	6e22      	ldr	r2, [r4, #96]	@ 0x60
90006ee4:	6813      	ldr	r3, [r2, #0]
90006ee6:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
90006eea:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
90006eec:	e73f      	b.n	90006d6e <HAL_DMA_Abort+0x106>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90006eee:	4b17      	ldr	r3, [pc, #92]	@ (90006f4c <HAL_DMA_Abort+0x2e4>)
90006ef0:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
90006ef2:	f022 021e 	bic.w	r2, r2, #30
90006ef6:	671a      	str	r2, [r3, #112]	@ 0x70
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
90006ef8:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
90006efc:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90006f00:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90006f04:	6e22      	ldr	r2, [r4, #96]	@ 0x60
90006f06:	6813      	ldr	r3, [r2, #0]
90006f08:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
90006f0c:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
90006f0e:	e72e      	b.n	90006d6e <HAL_DMA_Abort+0x106>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90006f10:	4b0e      	ldr	r3, [pc, #56]	@ (90006f4c <HAL_DMA_Abort+0x2e4>)
90006f12:	f8d3 20a0 	ldr.w	r2, [r3, #160]	@ 0xa0
90006f16:	f022 021e 	bic.w	r2, r2, #30
90006f1a:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
90006f1e:	f8d3 20b4 	ldr.w	r2, [r3, #180]	@ 0xb4
90006f22:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90006f26:	f8c3 20b4 	str.w	r2, [r3, #180]	@ 0xb4
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90006f2a:	6e22      	ldr	r2, [r4, #96]	@ 0x60
90006f2c:	6813      	ldr	r3, [r2, #0]
90006f2e:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
90006f32:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
90006f34:	e71b      	b.n	90006d6e <HAL_DMA_Abort+0x106>
90006f36:	bf00      	nop
90006f38:	40020010 	.word	0x40020010
90006f3c:	58025408 	.word	0x58025408
90006f40:	5802541c 	.word	0x5802541c
90006f44:	58025430 	.word	0x58025430
90006f48:	58025494 	.word	0x58025494
90006f4c:	40020000 	.word	0x40020000
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90006f50:	4b1e      	ldr	r3, [pc, #120]	@ (90006fcc <HAL_DMA_Abort+0x364>)
90006f52:	f8d3 20b8 	ldr.w	r2, [r3, #184]	@ 0xb8
90006f56:	f022 021e 	bic.w	r2, r2, #30
90006f5a:	f8c3 20b8 	str.w	r2, [r3, #184]	@ 0xb8
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
90006f5e:	f8d3 20cc 	ldr.w	r2, [r3, #204]	@ 0xcc
90006f62:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90006f66:	f8c3 20cc 	str.w	r2, [r3, #204]	@ 0xcc
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90006f6a:	6e22      	ldr	r2, [r4, #96]	@ 0x60
90006f6c:	6813      	ldr	r3, [r2, #0]
90006f6e:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
90006f72:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
90006f74:	e6fb      	b.n	90006d6e <HAL_DMA_Abort+0x106>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90006f76:	4b16      	ldr	r3, [pc, #88]	@ (90006fd0 <HAL_DMA_Abort+0x368>)
90006f78:	691a      	ldr	r2, [r3, #16]
90006f7a:	f022 021e 	bic.w	r2, r2, #30
90006f7e:	611a      	str	r2, [r3, #16]
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
90006f80:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
90006f82:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90006f86:	625a      	str	r2, [r3, #36]	@ 0x24
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90006f88:	6e22      	ldr	r2, [r4, #96]	@ 0x60
90006f8a:	6813      	ldr	r3, [r2, #0]
90006f8c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
90006f90:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
90006f92:	e6ec      	b.n	90006d6e <HAL_DMA_Abort+0x106>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90006f94:	4b0e      	ldr	r3, [pc, #56]	@ (90006fd0 <HAL_DMA_Abort+0x368>)
90006f96:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
90006f98:	f022 021e 	bic.w	r2, r2, #30
90006f9c:	629a      	str	r2, [r3, #40]	@ 0x28
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
90006f9e:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
90006fa0:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90006fa4:	63da      	str	r2, [r3, #60]	@ 0x3c
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90006fa6:	6e22      	ldr	r2, [r4, #96]	@ 0x60
90006fa8:	6813      	ldr	r3, [r2, #0]
90006faa:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
90006fae:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
90006fb0:	e6dd      	b.n	90006d6e <HAL_DMA_Abort+0x106>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
90006fb2:	4b07      	ldr	r3, [pc, #28]	@ (90006fd0 <HAL_DMA_Abort+0x368>)
90006fb4:	e762      	b.n	90006e7c <HAL_DMA_Abort+0x214>
90006fb6:	4b06      	ldr	r3, [pc, #24]	@ (90006fd0 <HAL_DMA_Abort+0x368>)
90006fb8:	e78b      	b.n	90006ed2 <HAL_DMA_Abort+0x26a>
90006fba:	4b05      	ldr	r3, [pc, #20]	@ (90006fd0 <HAL_DMA_Abort+0x368>)
90006fbc:	e798      	b.n	90006ef0 <HAL_DMA_Abort+0x288>
90006fbe:	4b04      	ldr	r3, [pc, #16]	@ (90006fd0 <HAL_DMA_Abort+0x368>)
90006fc0:	e774      	b.n	90006eac <HAL_DMA_Abort+0x244>
90006fc2:	4b03      	ldr	r3, [pc, #12]	@ (90006fd0 <HAL_DMA_Abort+0x368>)
90006fc4:	e7c5      	b.n	90006f52 <HAL_DMA_Abort+0x2ea>
90006fc6:	4b02      	ldr	r3, [pc, #8]	@ (90006fd0 <HAL_DMA_Abort+0x368>)
90006fc8:	e7a3      	b.n	90006f12 <HAL_DMA_Abort+0x2aa>
90006fca:	bf00      	nop
90006fcc:	40020000 	.word	0x40020000
90006fd0:	40020400 	.word	0x40020400

90006fd4 <HAL_DMA_Abort_IT>:
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  BDMA_Base_Registers *regs_bdma;

  /* Check the DMA peripheral handle */
  if(hdma == NULL)
90006fd4:	2800      	cmp	r0, #0
90006fd6:	d062      	beq.n	9000709e <HAL_DMA_Abort_IT+0xca>
{
90006fd8:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if(hdma->State != HAL_DMA_STATE_BUSY)
90006fda:	f890 3035 	ldrb.w	r3, [r0, #53]	@ 0x35
90006fde:	2b02      	cmp	r3, #2
90006fe0:	d159      	bne.n	90007096 <HAL_DMA_Abort_IT+0xc2>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
    return HAL_ERROR;
  }
  else
  {
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
90006fe2:	6802      	ldr	r2, [r0, #0]
90006fe4:	4b57      	ldr	r3, [pc, #348]	@ (90007144 <HAL_DMA_Abort_IT+0x170>)
90006fe6:	4c58      	ldr	r4, [pc, #352]	@ (90007148 <HAL_DMA_Abort_IT+0x174>)
90006fe8:	4958      	ldr	r1, [pc, #352]	@ (9000714c <HAL_DMA_Abort_IT+0x178>)
90006fea:	42a2      	cmp	r2, r4
90006fec:	bf18      	it	ne
90006fee:	429a      	cmpne	r2, r3
90006ff0:	f104 0430 	add.w	r4, r4, #48	@ 0x30
90006ff4:	bf0c      	ite	eq
90006ff6:	2301      	moveq	r3, #1
90006ff8:	2300      	movne	r3, #0
90006ffa:	428a      	cmp	r2, r1
90006ffc:	bf08      	it	eq
90006ffe:	f043 0301 	orreq.w	r3, r3, #1
90007002:	3130      	adds	r1, #48	@ 0x30
90007004:	42a2      	cmp	r2, r4
90007006:	bf08      	it	eq
90007008:	f043 0301 	orreq.w	r3, r3, #1
9000700c:	3430      	adds	r4, #48	@ 0x30
9000700e:	428a      	cmp	r2, r1
90007010:	bf08      	it	eq
90007012:	f043 0301 	orreq.w	r3, r3, #1
90007016:	3130      	adds	r1, #48	@ 0x30
90007018:	42a2      	cmp	r2, r4
9000701a:	bf08      	it	eq
9000701c:	f043 0301 	orreq.w	r3, r3, #1
90007020:	3430      	adds	r4, #48	@ 0x30
90007022:	428a      	cmp	r2, r1
90007024:	bf08      	it	eq
90007026:	f043 0301 	orreq.w	r3, r3, #1
9000702a:	f501 715c 	add.w	r1, r1, #880	@ 0x370
9000702e:	42a2      	cmp	r2, r4
90007030:	bf08      	it	eq
90007032:	f043 0301 	orreq.w	r3, r3, #1
90007036:	f504 745c 	add.w	r4, r4, #880	@ 0x370
9000703a:	428a      	cmp	r2, r1
9000703c:	bf08      	it	eq
9000703e:	f043 0301 	orreq.w	r3, r3, #1
90007042:	3130      	adds	r1, #48	@ 0x30
90007044:	42a2      	cmp	r2, r4
90007046:	bf08      	it	eq
90007048:	f043 0301 	orreq.w	r3, r3, #1
9000704c:	3430      	adds	r4, #48	@ 0x30
9000704e:	428a      	cmp	r2, r1
90007050:	bf08      	it	eq
90007052:	f043 0301 	orreq.w	r3, r3, #1
90007056:	3130      	adds	r1, #48	@ 0x30
90007058:	42a2      	cmp	r2, r4
9000705a:	bf08      	it	eq
9000705c:	f043 0301 	orreq.w	r3, r3, #1
90007060:	3430      	adds	r4, #48	@ 0x30
90007062:	428a      	cmp	r2, r1
90007064:	bf08      	it	eq
90007066:	f043 0301 	orreq.w	r3, r3, #1
9000706a:	3130      	adds	r1, #48	@ 0x30
9000706c:	42a2      	cmp	r2, r4
9000706e:	bf08      	it	eq
90007070:	f043 0301 	orreq.w	r3, r3, #1
90007074:	428a      	cmp	r2, r1
90007076:	bf08      	it	eq
90007078:	f043 0301 	orreq.w	r3, r3, #1
9000707c:	b913      	cbnz	r3, 90007084 <HAL_DMA_Abort_IT+0xb0>
9000707e:	4b34      	ldr	r3, [pc, #208]	@ (90007150 <HAL_DMA_Abort_IT+0x17c>)
90007080:	429a      	cmp	r2, r3
90007082:	d10e      	bne.n	900070a2 <HAL_DMA_Abort_IT+0xce>
    {
      /* Set Abort State  */
      hdma->State = HAL_DMA_STATE_ABORT;
90007084:	2304      	movs	r3, #4
90007086:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35

      /* Disable the stream */
      __HAL_DMA_DISABLE(hdma);
9000708a:	6813      	ldr	r3, [r2, #0]
9000708c:	f023 0301 	bic.w	r3, r3, #1
90007090:	6013      	str	r3, [r2, #0]
        hdma->XferAbortCallback(hdma);
      }
    }
  }

  return HAL_OK;
90007092:	2000      	movs	r0, #0
}
90007094:	bd38      	pop	{r3, r4, r5, pc}
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
90007096:	2380      	movs	r3, #128	@ 0x80
90007098:	6543      	str	r3, [r0, #84]	@ 0x54
    return HAL_ERROR;
9000709a:	2001      	movs	r0, #1
}
9000709c:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
9000709e:	2001      	movs	r0, #1
}
900070a0:	4770      	bx	lr
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
900070a2:	4b2c      	ldr	r3, [pc, #176]	@ (90007154 <HAL_DMA_Abort_IT+0x180>)
900070a4:	4d2c      	ldr	r5, [pc, #176]	@ (90007158 <HAL_DMA_Abort_IT+0x184>)
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
900070a6:	6811      	ldr	r1, [r2, #0]
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
900070a8:	42aa      	cmp	r2, r5
900070aa:	bf18      	it	ne
900070ac:	429a      	cmpne	r2, r3
900070ae:	4c2b      	ldr	r4, [pc, #172]	@ (9000715c <HAL_DMA_Abort_IT+0x188>)
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
900070b0:	f021 010e 	bic.w	r1, r1, #14
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
900070b4:	f105 053c 	add.w	r5, r5, #60	@ 0x3c
900070b8:	bf0c      	ite	eq
900070ba:	2301      	moveq	r3, #1
900070bc:	2300      	movne	r3, #0
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
900070be:	6011      	str	r1, [r2, #0]
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
900070c0:	42a2      	cmp	r2, r4
900070c2:	bf08      	it	eq
900070c4:	f043 0301 	orreq.w	r3, r3, #1
      __HAL_DMA_DISABLE(hdma);
900070c8:	6811      	ldr	r1, [r2, #0]
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
900070ca:	3428      	adds	r4, #40	@ 0x28
900070cc:	42aa      	cmp	r2, r5
900070ce:	bf08      	it	eq
900070d0:	f043 0301 	orreq.w	r3, r3, #1
      __HAL_DMA_DISABLE(hdma);
900070d4:	f021 0101 	bic.w	r1, r1, #1
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
900070d8:	42a2      	cmp	r2, r4
900070da:	bf08      	it	eq
900070dc:	f043 0301 	orreq.w	r3, r3, #1
900070e0:	3414      	adds	r4, #20
      __HAL_DMA_DISABLE(hdma);
900070e2:	6011      	str	r1, [r2, #0]
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
900070e4:	42a2      	cmp	r2, r4
900070e6:	bf08      	it	eq
900070e8:	f043 0301 	orreq.w	r3, r3, #1
900070ec:	491c      	ldr	r1, [pc, #112]	@ (90007160 <HAL_DMA_Abort_IT+0x18c>)
900070ee:	428a      	cmp	r2, r1
900070f0:	bf08      	it	eq
900070f2:	f043 0301 	orreq.w	r3, r3, #1
900070f6:	b913      	cbnz	r3, 900070fe <HAL_DMA_Abort_IT+0x12a>
900070f8:	4b1a      	ldr	r3, [pc, #104]	@ (90007164 <HAL_DMA_Abort_IT+0x190>)
900070fa:	429a      	cmp	r2, r3
900070fc:	d117      	bne.n	9000712e <HAL_DMA_Abort_IT+0x15a>
        regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
900070fe:	2301      	movs	r3, #1
        regs_bdma = (BDMA_Base_Registers *)hdma->StreamBaseAddress;
90007100:	6d85      	ldr	r5, [r0, #88]	@ 0x58
        regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
90007102:	e9d0 1417 	ldrd	r1, r4, [r0, #92]	@ 0x5c
        hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90007106:	6822      	ldr	r2, [r4, #0]
        regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
90007108:	f001 011f 	and.w	r1, r1, #31
        hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
9000710c:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
        regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
90007110:	408b      	lsls	r3, r1
        hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
90007112:	6022      	str	r2, [r4, #0]
        regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
90007114:	606b      	str	r3, [r5, #4]
        if(hdma->DMAmuxRequestGen != 0U)
90007116:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
        hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
90007118:	e9d0 2119 	ldrd	r2, r1, [r0, #100]	@ 0x64
9000711c:	6051      	str	r1, [r2, #4]
        if(hdma->DMAmuxRequestGen != 0U)
9000711e:	b133      	cbz	r3, 9000712e <HAL_DMA_Abort_IT+0x15a>
          hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
90007120:	681a      	ldr	r2, [r3, #0]
          hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
90007122:	e9d0 141c 	ldrd	r1, r4, [r0, #112]	@ 0x70
          hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
90007126:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
9000712a:	601a      	str	r2, [r3, #0]
          hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
9000712c:	604c      	str	r4, [r1, #4]
      hdma->State = HAL_DMA_STATE_READY;
9000712e:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma);
90007130:	2200      	movs	r2, #0
      if(hdma->XferAbortCallback != NULL)
90007132:	6d03      	ldr	r3, [r0, #80]	@ 0x50
      hdma->State = HAL_DMA_STATE_READY;
90007134:	f880 1035 	strb.w	r1, [r0, #53]	@ 0x35
      __HAL_UNLOCK(hdma);
90007138:	f880 2034 	strb.w	r2, [r0, #52]	@ 0x34
      if(hdma->XferAbortCallback != NULL)
9000713c:	2b00      	cmp	r3, #0
9000713e:	d0a8      	beq.n	90007092 <HAL_DMA_Abort_IT+0xbe>
        hdma->XferAbortCallback(hdma);
90007140:	4798      	blx	r3
90007142:	e7a6      	b.n	90007092 <HAL_DMA_Abort_IT+0xbe>
90007144:	40020010 	.word	0x40020010
90007148:	40020028 	.word	0x40020028
9000714c:	40020040 	.word	0x40020040
90007150:	400204b8 	.word	0x400204b8
90007154:	5802541c 	.word	0x5802541c
90007158:	58025408 	.word	0x58025408
9000715c:	58025430 	.word	0x58025430
90007160:	58025480 	.word	0x58025480
90007164:	58025494 	.word	0x58025494

90007168 <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
90007168:	2800      	cmp	r0, #0
9000716a:	d035      	beq.n	900071d8 <HAL_DMA2D_Init+0x70>
{
9000716c:	b538      	push	{r3, r4, r5, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
9000716e:	f890 3061 	ldrb.w	r3, [r0, #97]	@ 0x61
90007172:	4604      	mov	r4, r0
90007174:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90007178:	b34b      	cbz	r3, 900071ce <HAL_DMA2D_Init+0x66>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000717a:	6823      	ldr	r3, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000717c:	2002      	movs	r0, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000717e:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90007180:	f884 0061 	strb.w	r0, [r4, #97]	@ 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007184:	69e1      	ldr	r1, [r4, #28]
90007186:	681d      	ldr	r5, [r3, #0]
90007188:	4814      	ldr	r0, [pc, #80]	@ (900071dc <HAL_DMA2D_Init+0x74>)
9000718a:	4311      	orrs	r1, r2

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000718c:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000718e:	4028      	ands	r0, r5
90007190:	4301      	orrs	r1, r0
90007192:	6019      	str	r1, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90007194:	69a1      	ldr	r1, [r4, #24]
90007196:	6b58      	ldr	r0, [r3, #52]	@ 0x34
90007198:	430a      	orrs	r2, r1
9000719a:	4911      	ldr	r1, [pc, #68]	@ (900071e0 <HAL_DMA2D_Init+0x78>)
9000719c:	4001      	ands	r1, r0
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000719e:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
900071a0:	430a      	orrs	r2, r1
900071a2:	635a      	str	r2, [r3, #52]	@ 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
900071a4:	6c19      	ldr	r1, [r3, #64]	@ 0x40
900071a6:	f36f 010f 	bfc	r1, #0, #16
900071aa:	4301      	orrs	r1, r0
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
900071ac:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
900071b0:	6419      	str	r1, [r3, #64]	@ 0x40
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
900071b2:	0552      	lsls	r2, r2, #21
900071b4:	6b59      	ldr	r1, [r3, #52]	@ 0x34
900071b6:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
900071ba:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
900071be:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
900071c0:	430a      	orrs	r2, r1
900071c2:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
900071c4:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
900071c6:	6660      	str	r0, [r4, #100]	@ 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
900071c8:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61

  return HAL_OK;
}
900071cc:	bd38      	pop	{r3, r4, r5, pc}
    hdma2d->Lock = HAL_UNLOCKED;
900071ce:	f880 2060 	strb.w	r2, [r0, #96]	@ 0x60
    HAL_DMA2D_MspInit(hdma2d);
900071d2:	f7fc ff91 	bl	900040f8 <HAL_DMA2D_MspInit>
900071d6:	e7d0      	b.n	9000717a <HAL_DMA2D_Init+0x12>
    return HAL_ERROR;
900071d8:	2001      	movs	r0, #1
}
900071da:	4770      	bx	lr
900071dc:	fff8ffbf 	.word	0xfff8ffbf
900071e0:	fffffef8 	.word	0xfffffef8

900071e4 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
900071e4:	4770      	bx	lr
900071e6:	bf00      	nop

900071e8 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
900071e8:	4770      	bx	lr
900071ea:	bf00      	nop

900071ec <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
900071ec:	6803      	ldr	r3, [r0, #0]
{
900071ee:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
900071f0:	685d      	ldr	r5, [r3, #4]
{
900071f2:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
900071f4:	681e      	ldr	r6, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
900071f6:	07ea      	lsls	r2, r5, #31
900071f8:	d501      	bpl.n	900071fe <HAL_DMA2D_IRQHandler+0x12>
    if ((crflags & DMA2D_IT_TE) != 0U)
900071fa:	05f1      	lsls	r1, r6, #23
900071fc:	d456      	bmi.n	900072ac <HAL_DMA2D_IRQHandler+0xc0>
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
900071fe:	06aa      	lsls	r2, r5, #26
90007200:	d501      	bpl.n	90007206 <HAL_DMA2D_IRQHandler+0x1a>
    if ((crflags & DMA2D_IT_CE) != 0U)
90007202:	04b3      	lsls	r3, r6, #18
90007204:	d43b      	bmi.n	9000727e <HAL_DMA2D_IRQHandler+0x92>
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
90007206:	0728      	lsls	r0, r5, #28
90007208:	d501      	bpl.n	9000720e <HAL_DMA2D_IRQHandler+0x22>
    if ((crflags & DMA2D_IT_CAE) != 0U)
9000720a:	0531      	lsls	r1, r6, #20
9000720c:	d421      	bmi.n	90007252 <HAL_DMA2D_IRQHandler+0x66>
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
9000720e:	076a      	lsls	r2, r5, #29
90007210:	d501      	bpl.n	90007216 <HAL_DMA2D_IRQHandler+0x2a>
    if ((crflags & DMA2D_IT_TW) != 0U)
90007212:	0573      	lsls	r3, r6, #21
90007214:	d472      	bmi.n	900072fc <HAL_DMA2D_IRQHandler+0x110>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
90007216:	07a8      	lsls	r0, r5, #30
90007218:	d501      	bpl.n	9000721e <HAL_DMA2D_IRQHandler+0x32>
    if ((crflags & DMA2D_IT_TC) != 0U)
9000721a:	05b1      	lsls	r1, r6, #22
9000721c:	d404      	bmi.n	90007228 <HAL_DMA2D_IRQHandler+0x3c>
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
9000721e:	06ea      	lsls	r2, r5, #27
90007220:	d501      	bpl.n	90007226 <HAL_DMA2D_IRQHandler+0x3a>
    if ((crflags & DMA2D_IT_CTC) != 0U)
90007222:	04f3      	lsls	r3, r6, #19
90007224:	d457      	bmi.n	900072d6 <HAL_DMA2D_IRQHandler+0xea>
}
90007226:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
90007228:	6823      	ldr	r3, [r4, #0]
9000722a:	681a      	ldr	r2, [r3, #0]
9000722c:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
90007230:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
90007232:	2202      	movs	r2, #2
90007234:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_READY;
90007236:	2201      	movs	r2, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90007238:	6e63      	ldr	r3, [r4, #100]	@ 0x64
9000723a:	6663      	str	r3, [r4, #100]	@ 0x64
      __HAL_UNLOCK(hdma2d);
9000723c:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000723e:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
90007242:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      if (hdma2d->XferCpltCallback != NULL)
90007246:	6a23      	ldr	r3, [r4, #32]
90007248:	2b00      	cmp	r3, #0
9000724a:	d0e8      	beq.n	9000721e <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
9000724c:	4620      	mov	r0, r4
9000724e:	4798      	blx	r3
90007250:	e7e5      	b.n	9000721e <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
90007252:	6823      	ldr	r3, [r4, #0]
90007254:	681a      	ldr	r2, [r3, #0]
90007256:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
9000725a:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
9000725c:	2208      	movs	r2, #8
9000725e:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90007260:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
90007262:	6e63      	ldr	r3, [r4, #100]	@ 0x64
90007264:	4313      	orrs	r3, r2
90007266:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90007268:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
9000726c:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
9000726e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      __HAL_UNLOCK(hdma2d);
90007270:	f884 2060 	strb.w	r2, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
90007274:	2b00      	cmp	r3, #0
90007276:	d0ca      	beq.n	9000720e <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
90007278:	4620      	mov	r0, r4
9000727a:	4798      	blx	r3
9000727c:	e7c7      	b.n	9000720e <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
9000727e:	6823      	ldr	r3, [r4, #0]
90007280:	681a      	ldr	r2, [r3, #0]
90007282:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
90007286:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
90007288:	2220      	movs	r2, #32
9000728a:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000728c:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
9000728e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
90007290:	f043 0302 	orr.w	r3, r3, #2
90007294:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90007296:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
9000729a:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
9000729c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      __HAL_UNLOCK(hdma2d);
9000729e:	f884 2060 	strb.w	r2, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
900072a2:	2b00      	cmp	r3, #0
900072a4:	d0af      	beq.n	90007206 <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
900072a6:	4620      	mov	r0, r4
900072a8:	4798      	blx	r3
900072aa:	e7ac      	b.n	90007206 <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
900072ac:	681a      	ldr	r2, [r3, #0]
900072ae:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
900072b2:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
900072b4:	6e42      	ldr	r2, [r0, #100]	@ 0x64
900072b6:	f042 0201 	orr.w	r2, r2, #1
900072ba:	6642      	str	r2, [r0, #100]	@ 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
900072bc:	2201      	movs	r2, #1
900072be:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
900072c0:	2304      	movs	r3, #4
900072c2:	f880 3061 	strb.w	r3, [r0, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
900072c6:	2300      	movs	r3, #0
900072c8:	f880 3060 	strb.w	r3, [r0, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
900072cc:	6a43      	ldr	r3, [r0, #36]	@ 0x24
900072ce:	2b00      	cmp	r3, #0
900072d0:	d095      	beq.n	900071fe <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
900072d2:	4798      	blx	r3
900072d4:	e793      	b.n	900071fe <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
900072d6:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
900072d8:	2010      	movs	r0, #16
      hdma2d->State = HAL_DMA2D_STATE_READY;
900072da:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
900072dc:	2500      	movs	r5, #0
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
900072de:	681a      	ldr	r2, [r3, #0]
900072e0:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
900072e4:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
900072e6:	6098      	str	r0, [r3, #8]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
900072e8:	4620      	mov	r0, r4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
900072ea:	6e63      	ldr	r3, [r4, #100]	@ 0x64
      __HAL_UNLOCK(hdma2d);
900072ec:	f884 5060 	strb.w	r5, [r4, #96]	@ 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
900072f0:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
900072f2:	f884 1061 	strb.w	r1, [r4, #97]	@ 0x61
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
900072f6:	f7ff ff77 	bl	900071e8 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
900072fa:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
900072fc:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
900072fe:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90007300:	681a      	ldr	r2, [r3, #0]
90007302:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
90007306:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
90007308:	2204      	movs	r2, #4
9000730a:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
9000730c:	f7ff ff6a 	bl	900071e4 <HAL_DMA2D_LineEventCallback>
90007310:	e781      	b.n	90007216 <HAL_DMA2D_IRQHandler+0x2a>
90007312:	bf00      	nop

90007314 <HAL_DMA2D_ConfigLayer>:
  {
    assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
90007314:	f890 2060 	ldrb.w	r2, [r0, #96]	@ 0x60
90007318:	2a01      	cmp	r2, #1
9000731a:	d05f      	beq.n	900073dc <HAL_DMA2D_ConfigLayer+0xc8>
9000731c:	4603      	mov	r3, r0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000731e:	ebc1 00c1 	rsb	r0, r1, r1, lsl #3
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90007322:	2202      	movs	r2, #2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007324:	ea4f 0cc1 	mov.w	ip, r1, lsl #3
90007328:	eb03 0080 	add.w	r0, r3, r0, lsl #2
{
9000732c:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(hdma2d);
9000732e:	2401      	movs	r4, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90007330:	f883 2061 	strb.w	r2, [r3, #97]	@ 0x61
  __HAL_LOCK(hdma2d);
90007334:	f883 4060 	strb.w	r4, [r3, #96]	@ 0x60
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90007338:	6b82      	ldr	r2, [r0, #56]	@ 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000733a:	6b04      	ldr	r4, [r0, #48]	@ 0x30
9000733c:	6ac5      	ldr	r5, [r0, #44]	@ 0x2c
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
9000733e:	0512      	lsls	r2, r2, #20
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
90007340:	6b46      	ldr	r6, [r0, #52]	@ 0x34
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007342:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90007346:	f1a5 0e09 	sub.w	lr, r5, #9
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
9000734a:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000734c:	432a      	orrs	r2, r5
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000734e:	f1be 0f01 	cmp.w	lr, #1
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007352:	ea42 5244 	orr.w	r2, r2, r4, lsl #21

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007356:	681c      	ldr	r4, [r3, #0]
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90007358:	d923      	bls.n	900073a2 <HAL_DMA2D_ConfigLayer+0x8e>
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
9000735a:	ea42 6206 	orr.w	r2, r2, r6, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
9000735e:	b971      	cbnz	r1, 9000737e <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007360:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90007362:	491f      	ldr	r1, [pc, #124]	@ (900073e0 <HAL_DMA2D_ConfigLayer+0xcc>)
90007364:	4001      	ands	r1, r0

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90007366:	6a98      	ldr	r0, [r3, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007368:	4311      	orrs	r1, r2
9000736a:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000736c:	61a0      	str	r0, [r4, #24]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
9000736e:	2200      	movs	r2, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
90007370:	2101      	movs	r1, #1

  return HAL_OK;
90007372:	4610      	mov	r0, r2
  hdma2d->State = HAL_DMA2D_STATE_READY;
90007374:	f883 1061 	strb.w	r1, [r3, #97]	@ 0x61
  __HAL_UNLOCK(hdma2d);
90007378:	f883 2060 	strb.w	r2, [r3, #96]	@ 0x60
}
9000737c:	bd70      	pop	{r4, r5, r6, pc}
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
9000737e:	2d0b      	cmp	r5, #11
90007380:	d12a      	bne.n	900073d8 <HAL_DMA2D_ConfigLayer+0xc4>
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
90007382:	6c00      	ldr	r0, [r0, #64]	@ 0x40
90007384:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
90007388:	4816      	ldr	r0, [pc, #88]	@ (900073e4 <HAL_DMA2D_ConfigLayer+0xd0>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000738a:	ebac 0c01 	sub.w	ip, ip, r1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000738e:	69e1      	ldr	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007390:	eb03 0c8c 	add.w	ip, r3, ip, lsl #2
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007394:	4001      	ands	r1, r0
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007396:	f8dc 5028 	ldr.w	r5, [ip, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000739a:	430a      	orrs	r2, r1
9000739c:	61e2      	str	r2, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000739e:	6125      	str	r5, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900073a0:	e7e5      	b.n	9000736e <HAL_DMA2D_ConfigLayer+0x5a>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
900073a2:	f006 457f 	and.w	r5, r6, #4278190080	@ 0xff000000
900073a6:	432a      	orrs	r2, r5
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
900073a8:	b959      	cbnz	r1, 900073c2 <HAL_DMA2D_ConfigLayer+0xae>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900073aa:	6a60      	ldr	r0, [r4, #36]	@ 0x24
900073ac:	490c      	ldr	r1, [pc, #48]	@ (900073e0 <HAL_DMA2D_ConfigLayer+0xcc>)
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
900073ae:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900073b0:	4001      	ands	r1, r0
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
900073b2:	6b58      	ldr	r0, [r3, #52]	@ 0x34
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900073b4:	4311      	orrs	r1, r2
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
900073b6:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900073ba:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
900073bc:	61a5      	str	r5, [r4, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
900073be:	62a0      	str	r0, [r4, #40]	@ 0x28
900073c0:	e7d5      	b.n	9000736e <HAL_DMA2D_ConfigLayer+0x5a>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900073c2:	69e5      	ldr	r5, [r4, #28]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
900073c4:	f026 467f 	bic.w	r6, r6, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900073c8:	4905      	ldr	r1, [pc, #20]	@ (900073e0 <HAL_DMA2D_ConfigLayer+0xcc>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900073ca:	6a80      	ldr	r0, [r0, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900073cc:	4029      	ands	r1, r5
900073ce:	4311      	orrs	r1, r2
900073d0:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900073d2:	6120      	str	r0, [r4, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
900073d4:	6226      	str	r6, [r4, #32]
900073d6:	e7ca      	b.n	9000736e <HAL_DMA2D_ConfigLayer+0x5a>
900073d8:	4801      	ldr	r0, [pc, #4]	@ (900073e0 <HAL_DMA2D_ConfigLayer+0xcc>)
900073da:	e7d6      	b.n	9000738a <HAL_DMA2D_ConfigLayer+0x76>
  __HAL_LOCK(hdma2d);
900073dc:	2002      	movs	r0, #2
}
900073de:	4770      	bx	lr
900073e0:	00ccfff0 	.word	0x00ccfff0
900073e4:	00c0fff0 	.word	0x00c0fff0

900073e8 <HAL_GPIO_Init>:
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
900073e8:	680b      	ldr	r3, [r1, #0]
900073ea:	2b00      	cmp	r3, #0
900073ec:	f000 81dc 	beq.w	900077a8 <HAL_GPIO_Init+0x3c0>
900073f0:	4ab4      	ldr	r2, [pc, #720]	@ (900076c4 <HAL_GPIO_Init+0x2dc>)
900073f2:	4290      	cmp	r0, r2
  uint32_t position = 0x00U;
900073f4:	f04f 0200 	mov.w	r2, #0
{
900073f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
900073fc:	f04f 0b01 	mov.w	fp, #1
{
90007400:	b085      	sub	sp, #20
90007402:	f000 8105 	beq.w	90007610 <HAL_GPIO_Init+0x228>
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
90007406:	f04f 4eb0 	mov.w	lr, #1476395008	@ 0x58000000
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000740a:	9300      	str	r3, [sp, #0]
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
9000740c:	fa0b fc02 	lsl.w	ip, fp, r2
    if (iocurrent != 0x00U)
90007410:	9b00      	ldr	r3, [sp, #0]
90007412:	ea1c 0a03 	ands.w	sl, ip, r3
90007416:	f000 814b 	beq.w	900076b0 <HAL_GPIO_Init+0x2c8>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
9000741a:	684d      	ldr	r5, [r1, #4]
9000741c:	0054      	lsls	r4, r2, #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000741e:	2303      	movs	r3, #3
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90007420:	f005 0703 	and.w	r7, r5, #3
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007424:	fa03 f604 	lsl.w	r6, r3, r4
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90007428:	f107 38ff 	add.w	r8, r7, #4294967295
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000742c:	43f6      	mvns	r6, r6
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
9000742e:	f1b8 0f01 	cmp.w	r8, #1
90007432:	f240 815d 	bls.w	900076f0 <HAL_GPIO_Init+0x308>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
90007436:	2f03      	cmp	r7, #3
90007438:	f040 81cf 	bne.w	900077da <HAL_GPIO_Init+0x3f2>
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
9000743c:	fa07 f404 	lsl.w	r4, r7, r4
      temp = GPIOx->MODER;
90007440:	6807      	ldr	r7, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
90007442:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
90007446:	ea06 0607 	and.w	r6, r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
9000744a:	ea44 0406 	orr.w	r4, r4, r6
      GPIOx->MODER = temp;
9000744e:	6004      	str	r4, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
90007450:	f000 812e 	beq.w	900076b0 <HAL_GPIO_Init+0x2c8>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90007454:	4e9c      	ldr	r6, [pc, #624]	@ (900076c8 <HAL_GPIO_Init+0x2e0>)
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90007456:	f002 0703 	and.w	r7, r2, #3
9000745a:	230f      	movs	r3, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000745c:	f8d6 40f4 	ldr.w	r4, [r6, #244]	@ 0xf4
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90007460:	00bf      	lsls	r7, r7, #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90007462:	f044 0402 	orr.w	r4, r4, #2
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90007466:	fa03 fc07 	lsl.w	ip, r3, r7
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000746a:	4b98      	ldr	r3, [pc, #608]	@ (900076cc <HAL_GPIO_Init+0x2e4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000746c:	f8c6 40f4 	str.w	r4, [r6, #244]	@ 0xf4
90007470:	f8d6 40f4 	ldr.w	r4, [r6, #244]	@ 0xf4
90007474:	f022 0603 	bic.w	r6, r2, #3
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90007478:	4298      	cmp	r0, r3
9000747a:	f106 46b0 	add.w	r6, r6, #1476395008	@ 0x58000000
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000747e:	f004 0402 	and.w	r4, r4, #2
90007482:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
90007486:	9403      	str	r4, [sp, #12]
90007488:	9c03      	ldr	r4, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
9000748a:	68b4      	ldr	r4, [r6, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000748c:	ea24 040c 	bic.w	r4, r4, ip
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90007490:	f000 8178 	beq.w	90007784 <HAL_GPIO_Init+0x39c>
90007494:	4b8e      	ldr	r3, [pc, #568]	@ (900076d0 <HAL_GPIO_Init+0x2e8>)
90007496:	4298      	cmp	r0, r3
90007498:	f000 80de 	beq.w	90007658 <HAL_GPIO_Init+0x270>
9000749c:	f8df c234 	ldr.w	ip, [pc, #564]	@ 900076d4 <HAL_GPIO_Init+0x2ec>
900074a0:	4560      	cmp	r0, ip
900074a2:	f000 817b 	beq.w	9000779c <HAL_GPIO_Init+0x3b4>
900074a6:	f8df c230 	ldr.w	ip, [pc, #560]	@ 900076d8 <HAL_GPIO_Init+0x2f0>
900074aa:	4560      	cmp	r0, ip
900074ac:	f000 817d 	beq.w	900077aa <HAL_GPIO_Init+0x3c2>
900074b0:	f8df c228 	ldr.w	ip, [pc, #552]	@ 900076dc <HAL_GPIO_Init+0x2f4>
900074b4:	4560      	cmp	r0, ip
900074b6:	f000 816b 	beq.w	90007790 <HAL_GPIO_Init+0x3a8>
900074ba:	f8df c224 	ldr.w	ip, [pc, #548]	@ 900076e0 <HAL_GPIO_Init+0x2f8>
900074be:	4560      	cmp	r0, ip
900074c0:	f000 8179 	beq.w	900077b6 <HAL_GPIO_Init+0x3ce>
900074c4:	f8df c21c 	ldr.w	ip, [pc, #540]	@ 900076e4 <HAL_GPIO_Init+0x2fc>
900074c8:	4560      	cmp	r0, ip
900074ca:	f000 817a 	beq.w	900077c2 <HAL_GPIO_Init+0x3da>
900074ce:	f8df c218 	ldr.w	ip, [pc, #536]	@ 900076e8 <HAL_GPIO_Init+0x300>
900074d2:	4560      	cmp	r0, ip
900074d4:	f000 817b 	beq.w	900077ce <HAL_GPIO_Init+0x3e6>
900074d8:	f8df c210 	ldr.w	ip, [pc, #528]	@ 900076ec <HAL_GPIO_Init+0x304>
900074dc:	4560      	cmp	r0, ip
900074de:	bf0c      	ite	eq
900074e0:	f04f 0c09 	moveq.w	ip, #9
900074e4:	f04f 0c0a 	movne.w	ip, #10
900074e8:	fa0c f707 	lsl.w	r7, ip, r7
900074ec:	433c      	orrs	r4, r7
900074ee:	e0b8      	b.n	90007662 <HAL_GPIO_Init+0x27a>
        temp = GPIOx->OSPEEDR;
900074f0:	f8d0 9008 	ldr.w	r9, [r0, #8]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
900074f4:	2c02      	cmp	r4, #2
        temp |= (GPIO_Init->Speed << (position * 2U));
900074f6:	68ce      	ldr	r6, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900074f8:	ea0a 0909 	and.w	r9, sl, r9
        temp |= (GPIO_Init->Speed << (position * 2U));
900074fc:	fa06 f807 	lsl.w	r8, r6, r7
90007500:	ea48 0809 	orr.w	r8, r8, r9
        GPIOx->OSPEEDR = temp;
90007504:	f8c0 8008 	str.w	r8, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90007508:	f3c5 1800 	ubfx	r8, r5, #4, #1
        temp = GPIOx->OTYPER;
9000750c:	f8d0 9004 	ldr.w	r9, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90007510:	fa08 f802 	lsl.w	r8, r8, r2
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
90007514:	ea29 0e0e 	bic.w	lr, r9, lr
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90007518:	ea48 0e0e 	orr.w	lr, r8, lr
        GPIOx->OTYPER = temp;
9000751c:	f8c0 e004 	str.w	lr, [r0, #4]
      temp = GPIOx->PUPDR;
90007520:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90007524:	688e      	ldr	r6, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90007526:	ea0a 0808 	and.w	r8, sl, r8
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000752a:	fa06 fe07 	lsl.w	lr, r6, r7
9000752e:	ea4e 0e08 	orr.w	lr, lr, r8
      GPIOx->PUPDR = temp;
90007532:	f8c0 e00c 	str.w	lr, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90007536:	d117      	bne.n	90007568 <HAL_GPIO_Init+0x180>
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90007538:	f002 0e07 	and.w	lr, r2, #7
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
9000753c:	690e      	ldr	r6, [r1, #16]
        temp = GPIOx->AFR[position >> 3U];
9000753e:	ea4f 08d2 	mov.w	r8, r2, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90007542:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
90007546:	eb00 0888 	add.w	r8, r0, r8, lsl #2
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
9000754a:	fa06 f60e 	lsl.w	r6, r6, lr
        temp = GPIOx->AFR[position >> 3U];
9000754e:	f8d8 9020 	ldr.w	r9, [r8, #32]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90007552:	9600      	str	r6, [sp, #0]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90007554:	260f      	movs	r6, #15
90007556:	fa06 fe0e 	lsl.w	lr, r6, lr
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
9000755a:	9e00      	ldr	r6, [sp, #0]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
9000755c:	ea29 090e 	bic.w	r9, r9, lr
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90007560:	ea46 0e09 	orr.w	lr, r6, r9
        GPIOx->AFR[position >> 3U] = temp;
90007564:	f8c8 e020 	str.w	lr, [r8, #32]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
90007568:	40bc      	lsls	r4, r7
      temp = GPIOx->MODER;
9000756a:	6807      	ldr	r7, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
9000756c:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
90007570:	ea07 070a 	and.w	r7, r7, sl
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
90007574:	ea44 0407 	orr.w	r4, r4, r7
      GPIOx->MODER = temp;
90007578:	6004      	str	r4, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
9000757a:	d045      	beq.n	90007608 <HAL_GPIO_Init+0x220>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000757c:	4f52      	ldr	r7, [pc, #328]	@ (900076c8 <HAL_GPIO_Init+0x2e0>)
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000757e:	260f      	movs	r6, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90007580:	f8d7 40f4 	ldr.w	r4, [r7, #244]	@ 0xf4
90007584:	f044 0402 	orr.w	r4, r4, #2
90007588:	f8c7 40f4 	str.w	r4, [r7, #244]	@ 0xf4
9000758c:	f8d7 40f4 	ldr.w	r4, [r7, #244]	@ 0xf4
90007590:	f022 0703 	bic.w	r7, r2, #3
90007594:	f004 0402 	and.w	r4, r4, #2
90007598:	f107 47b0 	add.w	r7, r7, #1476395008	@ 0x58000000
9000759c:	9403      	str	r4, [sp, #12]
9000759e:	f507 6780 	add.w	r7, r7, #1024	@ 0x400
900075a2:	9c03      	ldr	r4, [sp, #12]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
900075a4:	f002 0403 	and.w	r4, r2, #3
        temp = SYSCFG->EXTICR[position >> 2U];
900075a8:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
900075ac:	00a4      	lsls	r4, r4, #2
900075ae:	fa06 f404 	lsl.w	r4, r6, r4
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
900075b2:	02ee      	lsls	r6, r5, #11
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
900075b4:	ea2e 0404 	bic.w	r4, lr, r4
        SYSCFG->EXTICR[position >> 2U] = temp;
900075b8:	60bc      	str	r4, [r7, #8]
        temp = EXTI->RTSR1;
900075ba:	f04f 44b0 	mov.w	r4, #1476395008	@ 0x58000000
        temp &= ~(iocurrent);
900075be:	ea6f 070c 	mvn.w	r7, ip
        temp = EXTI->RTSR1;
900075c2:	6824      	ldr	r4, [r4, #0]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
900075c4:	f100 80d2 	bmi.w	9000776c <HAL_GPIO_Init+0x384>
        temp &= ~(iocurrent);
900075c8:	403c      	ands	r4, r7
        {
          temp |= iocurrent;
        }
        EXTI->RTSR1 = temp;
900075ca:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
900075ce:	6034      	str	r4, [r6, #0]

        temp = EXTI->FTSR1;
900075d0:	6874      	ldr	r4, [r6, #4]
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
900075d2:	02ae      	lsls	r6, r5, #10
900075d4:	f100 80d3 	bmi.w	9000777e <HAL_GPIO_Init+0x396>
        temp &= ~(iocurrent);
900075d8:	403c      	ands	r4, r7
        {
          temp |= iocurrent;
        }
        EXTI->FTSR1 = temp;
900075da:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
900075de:	6074      	str	r4, [r6, #4]

        temp = EXTI_CurrentCPU->EMR1;
900075e0:	f8d6 4084 	ldr.w	r4, [r6, #132]	@ 0x84
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
900075e4:	03ae      	lsls	r6, r5, #14
900075e6:	f100 80c7 	bmi.w	90007778 <HAL_GPIO_Init+0x390>
        temp &= ~(iocurrent);
900075ea:	403c      	ands	r4, r7
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->EMR1 = temp;
900075ec:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
900075f0:	03ed      	lsls	r5, r5, #15
        EXTI_CurrentCPU->EMR1 = temp;
900075f2:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
        temp = EXTI_CurrentCPU->IMR1;
900075f6:	f8d6 4080 	ldr.w	r4, [r6, #128]	@ 0x80
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
900075fa:	f100 80ba 	bmi.w	90007772 <HAL_GPIO_Init+0x38a>
        temp &= ~(iocurrent);
900075fe:	403c      	ands	r4, r7
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->IMR1 = temp;
90007600:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
90007604:	f8c5 4080 	str.w	r4, [r5, #128]	@ 0x80
      }
    }

    position++;
90007608:	3201      	adds	r2, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
9000760a:	fa33 f402 	lsrs.w	r4, r3, r2
9000760e:	d055      	beq.n	900076bc <HAL_GPIO_Init+0x2d4>
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
90007610:	fa0b fe02 	lsl.w	lr, fp, r2
    if (iocurrent != 0x00U)
90007614:	ea13 0c0e 	ands.w	ip, r3, lr
90007618:	d0f6      	beq.n	90007608 <HAL_GPIO_Init+0x220>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
9000761a:	684d      	ldr	r5, [r1, #4]
9000761c:	0057      	lsls	r7, r2, #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000761e:	2603      	movs	r6, #3
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90007620:	f005 0403 	and.w	r4, r5, #3
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007624:	fa06 f807 	lsl.w	r8, r6, r7
90007628:	ea6f 0a08 	mvn.w	sl, r8
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
9000762c:	f104 38ff 	add.w	r8, r4, #4294967295
90007630:	f1b8 0f01 	cmp.w	r8, #1
90007634:	f67f af5c 	bls.w	900074f0 <HAL_GPIO_Init+0x108>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
90007638:	2c03      	cmp	r4, #3
9000763a:	d095      	beq.n	90007568 <HAL_GPIO_Init+0x180>
      temp = GPIOx->PUPDR;
9000763c:	f8df 8084 	ldr.w	r8, [pc, #132]	@ 900076c4 <HAL_GPIO_Init+0x2dc>
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90007640:	688e      	ldr	r6, [r1, #8]
      temp = GPIOx->PUPDR;
90007642:	f8d8 900c 	ldr.w	r9, [r8, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90007646:	fa06 fe07 	lsl.w	lr, r6, r7
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
9000764a:	ea0a 0909 	and.w	r9, sl, r9
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000764e:	ea4e 0e09 	orr.w	lr, lr, r9
      GPIOx->PUPDR = temp;
90007652:	f8c8 e00c 	str.w	lr, [r8, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90007656:	e787      	b.n	90007568 <HAL_GPIO_Init+0x180>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90007658:	f04f 0c02 	mov.w	ip, #2
9000765c:	fa0c f707 	lsl.w	r7, ip, r7
90007660:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
90007662:	60b4      	str	r4, [r6, #8]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
90007664:	02ef      	lsls	r7, r5, #11
        temp = EXTI->RTSR1;
90007666:	f8de 4000 	ldr.w	r4, [lr]
        temp &= ~(iocurrent);
9000766a:	ea6f 060a 	mvn.w	r6, sl
          temp |= iocurrent;
9000766e:	bf4c      	ite	mi
90007670:	ea4a 0404 	orrmi.w	r4, sl, r4
        temp &= ~(iocurrent);
90007674:	4034      	andpl	r4, r6
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
90007676:	02ab      	lsls	r3, r5, #10
        EXTI->RTSR1 = temp;
90007678:	f8ce 4000 	str.w	r4, [lr]
        temp = EXTI->FTSR1;
9000767c:	f8de 4004 	ldr.w	r4, [lr, #4]
        temp &= ~(iocurrent);
90007680:	bf54      	ite	pl
90007682:	4034      	andpl	r4, r6
          temp |= iocurrent;
90007684:	ea4a 0404 	orrmi.w	r4, sl, r4
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
90007688:	03af      	lsls	r7, r5, #14
        EXTI->FTSR1 = temp;
9000768a:	f8ce 4004 	str.w	r4, [lr, #4]
        temp = EXTI_CurrentCPU->EMR1;
9000768e:	f8de 4084 	ldr.w	r4, [lr, #132]	@ 0x84
        temp &= ~(iocurrent);
90007692:	bf54      	ite	pl
90007694:	4034      	andpl	r4, r6
          temp |= iocurrent;
90007696:	ea4a 0404 	orrmi.w	r4, sl, r4
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
9000769a:	03eb      	lsls	r3, r5, #15
        EXTI_CurrentCPU->EMR1 = temp;
9000769c:	f8ce 4084 	str.w	r4, [lr, #132]	@ 0x84
        temp = EXTI_CurrentCPU->IMR1;
900076a0:	f8de 4080 	ldr.w	r4, [lr, #128]	@ 0x80
        temp &= ~(iocurrent);
900076a4:	bf54      	ite	pl
900076a6:	4034      	andpl	r4, r6
          temp |= iocurrent;
900076a8:	ea4a 0404 	orrmi.w	r4, sl, r4
        EXTI_CurrentCPU->IMR1 = temp;
900076ac:	f8ce 4080 	str.w	r4, [lr, #128]	@ 0x80
    position++;
900076b0:	3201      	adds	r2, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
900076b2:	9b00      	ldr	r3, [sp, #0]
900076b4:	fa33 f402 	lsrs.w	r4, r3, r2
900076b8:	f47f aea8 	bne.w	9000740c <HAL_GPIO_Init+0x24>
  }
}
900076bc:	b005      	add	sp, #20
900076be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900076c2:	bf00      	nop
900076c4:	58020000 	.word	0x58020000
900076c8:	58024400 	.word	0x58024400
900076cc:	58020400 	.word	0x58020400
900076d0:	58020800 	.word	0x58020800
900076d4:	58020c00 	.word	0x58020c00
900076d8:	58021000 	.word	0x58021000
900076dc:	58021400 	.word	0x58021400
900076e0:	58021800 	.word	0x58021800
900076e4:	58021c00 	.word	0x58021c00
900076e8:	58022000 	.word	0x58022000
900076ec:	58022400 	.word	0x58022400
        temp = GPIOx->OSPEEDR;
900076f0:	f8d0 9008 	ldr.w	r9, [r0, #8]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
900076f4:	2f02      	cmp	r7, #2
        temp |= (GPIO_Init->Speed << (position * 2U));
900076f6:	68cb      	ldr	r3, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900076f8:	ea09 0906 	and.w	r9, r9, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
900076fc:	fa03 f804 	lsl.w	r8, r3, r4
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90007700:	688b      	ldr	r3, [r1, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
90007702:	ea48 0809 	orr.w	r8, r8, r9
        GPIOx->OSPEEDR = temp;
90007706:	f8c0 8008 	str.w	r8, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
9000770a:	f3c5 1800 	ubfx	r8, r5, #4, #1
        temp = GPIOx->OTYPER;
9000770e:	f8d0 9004 	ldr.w	r9, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90007712:	fa08 f802 	lsl.w	r8, r8, r2
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
90007716:	ea29 0c0c 	bic.w	ip, r9, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
9000771a:	ea48 0c0c 	orr.w	ip, r8, ip
        GPIOx->OTYPER = temp;
9000771e:	f8c0 c004 	str.w	ip, [r0, #4]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90007722:	fa03 fc04 	lsl.w	ip, r3, r4
      temp = GPIOx->PUPDR;
90007726:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
9000772a:	ea08 0806 	and.w	r8, r8, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000772e:	ea4c 0c08 	orr.w	ip, ip, r8
      GPIOx->PUPDR = temp;
90007732:	f8c0 c00c 	str.w	ip, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90007736:	f47f ae81 	bne.w	9000743c <HAL_GPIO_Init+0x54>
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
9000773a:	f002 0c07 	and.w	ip, r2, #7
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
9000773e:	690b      	ldr	r3, [r1, #16]
        temp = GPIOx->AFR[position >> 3U];
90007740:	ea4f 08d2 	mov.w	r8, r2, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90007744:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
90007748:	eb00 0888 	add.w	r8, r0, r8, lsl #2
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
9000774c:	fa03 f30c 	lsl.w	r3, r3, ip
        temp = GPIOx->AFR[position >> 3U];
90007750:	f8d8 9020 	ldr.w	r9, [r8, #32]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90007754:	9301      	str	r3, [sp, #4]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90007756:	230f      	movs	r3, #15
90007758:	fa03 fc0c 	lsl.w	ip, r3, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
9000775c:	9b01      	ldr	r3, [sp, #4]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
9000775e:	ea29 090c 	bic.w	r9, r9, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90007762:	ea43 0c09 	orr.w	ip, r3, r9
        GPIOx->AFR[position >> 3U] = temp;
90007766:	f8c8 c020 	str.w	ip, [r8, #32]
9000776a:	e667      	b.n	9000743c <HAL_GPIO_Init+0x54>
          temp |= iocurrent;
9000776c:	ea44 040c 	orr.w	r4, r4, ip
90007770:	e72b      	b.n	900075ca <HAL_GPIO_Init+0x1e2>
          temp |= iocurrent;
90007772:	ea44 040c 	orr.w	r4, r4, ip
90007776:	e743      	b.n	90007600 <HAL_GPIO_Init+0x218>
          temp |= iocurrent;
90007778:	ea4c 0404 	orr.w	r4, ip, r4
9000777c:	e736      	b.n	900075ec <HAL_GPIO_Init+0x204>
          temp |= iocurrent;
9000777e:	ea44 040c 	orr.w	r4, r4, ip
90007782:	e72a      	b.n	900075da <HAL_GPIO_Init+0x1f2>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90007784:	f04f 0c01 	mov.w	ip, #1
90007788:	fa0c f707 	lsl.w	r7, ip, r7
9000778c:	433c      	orrs	r4, r7
9000778e:	e768      	b.n	90007662 <HAL_GPIO_Init+0x27a>
90007790:	f04f 0c05 	mov.w	ip, #5
90007794:	fa0c f707 	lsl.w	r7, ip, r7
90007798:	433c      	orrs	r4, r7
9000779a:	e762      	b.n	90007662 <HAL_GPIO_Init+0x27a>
9000779c:	f04f 0c03 	mov.w	ip, #3
900077a0:	fa0c f707 	lsl.w	r7, ip, r7
900077a4:	433c      	orrs	r4, r7
900077a6:	e75c      	b.n	90007662 <HAL_GPIO_Init+0x27a>
900077a8:	4770      	bx	lr
900077aa:	f04f 0c04 	mov.w	ip, #4
900077ae:	fa0c f707 	lsl.w	r7, ip, r7
900077b2:	433c      	orrs	r4, r7
900077b4:	e755      	b.n	90007662 <HAL_GPIO_Init+0x27a>
900077b6:	f04f 0c06 	mov.w	ip, #6
900077ba:	fa0c f707 	lsl.w	r7, ip, r7
900077be:	433c      	orrs	r4, r7
900077c0:	e74f      	b.n	90007662 <HAL_GPIO_Init+0x27a>
900077c2:	f04f 0c07 	mov.w	ip, #7
900077c6:	fa0c f707 	lsl.w	r7, ip, r7
900077ca:	433c      	orrs	r4, r7
900077cc:	e749      	b.n	90007662 <HAL_GPIO_Init+0x27a>
900077ce:	f04f 0c08 	mov.w	ip, #8
900077d2:	fa0c f707 	lsl.w	r7, ip, r7
900077d6:	433c      	orrs	r4, r7
900077d8:	e743      	b.n	90007662 <HAL_GPIO_Init+0x27a>
      temp = GPIOx->PUPDR;
900077da:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900077de:	688b      	ldr	r3, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
900077e0:	ea08 0806 	and.w	r8, r8, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900077e4:	fa03 fc04 	lsl.w	ip, r3, r4
900077e8:	ea4c 0c08 	orr.w	ip, ip, r8
      GPIOx->PUPDR = temp;
900077ec:	f8c0 c00c 	str.w	ip, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
900077f0:	e624      	b.n	9000743c <HAL_GPIO_Init+0x54>
900077f2:	bf00      	nop

900077f4 <HAL_GPIO_DeInit>:
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* Configure the port pins */
  while ((GPIO_Pin >> position) != 0x00U)
900077f4:	2900      	cmp	r1, #0
900077f6:	f000 810c 	beq.w	90007a12 <HAL_GPIO_DeInit+0x21e>
900077fa:	4b8b      	ldr	r3, [pc, #556]	@ (90007a28 <HAL_GPIO_DeInit+0x234>)
900077fc:	4298      	cmp	r0, r3
{
900077fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90007802:	f000 809a 	beq.w	9000793a <HAL_GPIO_DeInit+0x146>
  uint32_t position = 0x00U;
90007806:	2300      	movs	r3, #0
    if (iocurrent != 0x00U)
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90007808:	f04f 090f 	mov.w	r9, #15
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO in Analog Mode */
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000780c:	f04f 0a03 	mov.w	sl, #3
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
90007810:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
    iocurrent = GPIO_Pin & (1UL << position) ;
90007814:	2201      	movs	r2, #1
90007816:	409a      	lsls	r2, r3
    if (iocurrent != 0x00U)
90007818:	ea12 0e01 	ands.w	lr, r2, r1
9000781c:	d077      	beq.n	9000790e <HAL_GPIO_DeInit+0x11a>
      tmp = SYSCFG->EXTICR[position >> 2U];
9000781e:	f023 0503 	bic.w	r5, r3, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90007822:	f003 0403 	and.w	r4, r3, #3
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90007826:	4f81      	ldr	r7, [pc, #516]	@ (90007a2c <HAL_GPIO_DeInit+0x238>)
90007828:	f105 45b0 	add.w	r5, r5, #1476395008	@ 0x58000000
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000782c:	00a4      	lsls	r4, r4, #2
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000782e:	42b8      	cmp	r0, r7
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90007830:	fa09 f804 	lsl.w	r8, r9, r4
      tmp = SYSCFG->EXTICR[position >> 2U];
90007834:	f8d5 c408 	ldr.w	ip, [r5, #1032]	@ 0x408
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90007838:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
9000783c:	ea08 0c0c 	and.w	ip, r8, ip
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90007840:	d027      	beq.n	90007892 <HAL_GPIO_DeInit+0x9e>
90007842:	4f7b      	ldr	r7, [pc, #492]	@ (90007a30 <HAL_GPIO_DeInit+0x23c>)
90007844:	42b8      	cmp	r0, r7
90007846:	d06e      	beq.n	90007926 <HAL_GPIO_DeInit+0x132>
90007848:	4f7a      	ldr	r7, [pc, #488]	@ (90007a34 <HAL_GPIO_DeInit+0x240>)
9000784a:	42b8      	cmp	r0, r7
9000784c:	d070      	beq.n	90007930 <HAL_GPIO_DeInit+0x13c>
9000784e:	4f7a      	ldr	r7, [pc, #488]	@ (90007a38 <HAL_GPIO_DeInit+0x244>)
90007850:	42b8      	cmp	r0, r7
90007852:	d063      	beq.n	9000791c <HAL_GPIO_DeInit+0x128>
90007854:	f8df b1e8 	ldr.w	fp, [pc, #488]	@ 90007a40 <HAL_GPIO_DeInit+0x24c>
90007858:	4558      	cmp	r0, fp
9000785a:	f000 80d5 	beq.w	90007a08 <HAL_GPIO_DeInit+0x214>
9000785e:	f8df b1e4 	ldr.w	fp, [pc, #484]	@ 90007a44 <HAL_GPIO_DeInit+0x250>
90007862:	4558      	cmp	r0, fp
90007864:	f000 80d6 	beq.w	90007a14 <HAL_GPIO_DeInit+0x220>
90007868:	f8df b1dc 	ldr.w	fp, [pc, #476]	@ 90007a48 <HAL_GPIO_DeInit+0x254>
9000786c:	4558      	cmp	r0, fp
9000786e:	f000 80c6 	beq.w	900079fe <HAL_GPIO_DeInit+0x20a>
90007872:	f8df b1d8 	ldr.w	fp, [pc, #472]	@ 90007a4c <HAL_GPIO_DeInit+0x258>
90007876:	4558      	cmp	r0, fp
90007878:	f000 80d1 	beq.w	90007a1e <HAL_GPIO_DeInit+0x22a>
9000787c:	f8df b1d0 	ldr.w	fp, [pc, #464]	@ 90007a50 <HAL_GPIO_DeInit+0x25c>
90007880:	4558      	cmp	r0, fp
90007882:	bf0c      	ite	eq
90007884:	f04f 0b09 	moveq.w	fp, #9
90007888:	f04f 0b0a 	movne.w	fp, #10
9000788c:	fa0b f404 	lsl.w	r4, fp, r4
90007890:	e002      	b.n	90007898 <HAL_GPIO_DeInit+0xa4>
90007892:	2701      	movs	r7, #1
90007894:	fa07 f404 	lsl.w	r4, r7, r4
90007898:	45a4      	cmp	ip, r4
9000789a:	d117      	bne.n	900078cc <HAL_GPIO_DeInit+0xd8>
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
9000789c:	f8d6 4080 	ldr.w	r4, [r6, #128]	@ 0x80
900078a0:	ea24 040e 	bic.w	r4, r4, lr
900078a4:	f8c6 4080 	str.w	r4, [r6, #128]	@ 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
900078a8:	f8d6 4084 	ldr.w	r4, [r6, #132]	@ 0x84
900078ac:	ea24 040e 	bic.w	r4, r4, lr
900078b0:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
        EXTI->FTSR1 &= ~(iocurrent);
900078b4:	6874      	ldr	r4, [r6, #4]
900078b6:	ea24 040e 	bic.w	r4, r4, lr
900078ba:	6074      	str	r4, [r6, #4]
        EXTI->RTSR1 &= ~(iocurrent);
900078bc:	6834      	ldr	r4, [r6, #0]
900078be:	ea24 040e 	bic.w	r4, r4, lr
900078c2:	6034      	str	r4, [r6, #0]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
900078c4:	68ac      	ldr	r4, [r5, #8]
900078c6:	ea24 0408 	bic.w	r4, r4, r8
900078ca:	60ac      	str	r4, [r5, #8]
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
900078cc:	005d      	lsls	r5, r3, #1
900078ce:	6804      	ldr	r4, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
900078d0:	ea4f 0cd3 	mov.w	ip, r3, lsr #3
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
900078d4:	fa0a f505 	lsl.w	r5, sl, r5
900078d8:	eb00 0c8c 	add.w	ip, r0, ip, lsl #2
900078dc:	432c      	orrs	r4, r5
900078de:	6004      	str	r4, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
900078e0:	f003 0407 	and.w	r4, r3, #7
900078e4:	f8dc e020 	ldr.w	lr, [ip, #32]
900078e8:	00a4      	lsls	r4, r4, #2
900078ea:	fa09 f404 	lsl.w	r4, r9, r4
900078ee:	ea2e 0404 	bic.w	r4, lr, r4
900078f2:	f8cc 4020 	str.w	r4, [ip, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
900078f6:	68c4      	ldr	r4, [r0, #12]
900078f8:	ea24 0405 	bic.w	r4, r4, r5
900078fc:	60c4      	str	r4, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
900078fe:	6844      	ldr	r4, [r0, #4]
90007900:	ea24 0202 	bic.w	r2, r4, r2
90007904:	6042      	str	r2, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007906:	6882      	ldr	r2, [r0, #8]
90007908:	ea22 0205 	bic.w	r2, r2, r5
9000790c:	6082      	str	r2, [r0, #8]
    }

    position++;
9000790e:	3301      	adds	r3, #1
  while ((GPIO_Pin >> position) != 0x00U)
90007910:	fa31 f203 	lsrs.w	r2, r1, r3
90007914:	f47f af7e 	bne.w	90007814 <HAL_GPIO_DeInit+0x20>
  }
}
90007918:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000791c:	f04f 0b04 	mov.w	fp, #4
90007920:	fa0b f404 	lsl.w	r4, fp, r4
90007924:	e7b8      	b.n	90007898 <HAL_GPIO_DeInit+0xa4>
90007926:	f04f 0b02 	mov.w	fp, #2
9000792a:	fa0b f404 	lsl.w	r4, fp, r4
9000792e:	e7b3      	b.n	90007898 <HAL_GPIO_DeInit+0xa4>
90007930:	f04f 0b03 	mov.w	fp, #3
90007934:	fa0b f404 	lsl.w	r4, fp, r4
90007938:	e7ae      	b.n	90007898 <HAL_GPIO_DeInit+0xa4>
  uint32_t position = 0x00U;
9000793a:	2200      	movs	r2, #0
    iocurrent = GPIO_Pin & (1UL << position) ;
9000793c:	f04f 0c01 	mov.w	ip, #1
90007940:	4f3e      	ldr	r7, [pc, #248]	@ (90007a3c <HAL_GPIO_DeInit+0x248>)
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90007942:	250f      	movs	r5, #15
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
90007944:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90007948:	f04f 0e03 	mov.w	lr, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000794c:	f002 0303 	and.w	r3, r2, #3
    iocurrent = GPIO_Pin & (1UL << position) ;
90007950:	fa0c f402 	lsl.w	r4, ip, r2
    if (iocurrent != 0x00U)
90007954:	f022 0803 	bic.w	r8, r2, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90007958:	009b      	lsls	r3, r3, #2
    if (iocurrent != 0x00U)
9000795a:	ea11 0904 	ands.w	r9, r1, r4
9000795e:	44b8      	add	r8, r7
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90007960:	fa05 f303 	lsl.w	r3, r5, r3
    if (iocurrent != 0x00U)
90007964:	d045      	beq.n	900079f2 <HAL_GPIO_DeInit+0x1fe>
      tmp = SYSCFG->EXTICR[position >> 2U];
90007966:	f8d8 a008 	ldr.w	sl, [r8, #8]
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000796a:	ea13 0f0a 	tst.w	r3, sl
9000796e:	d11d      	bne.n	900079ac <HAL_GPIO_DeInit+0x1b8>
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
90007970:	f8d6 a080 	ldr.w	sl, [r6, #128]	@ 0x80
90007974:	ea2a 0a09 	bic.w	sl, sl, r9
90007978:	f8c6 a080 	str.w	sl, [r6, #128]	@ 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
9000797c:	f8d6 a084 	ldr.w	sl, [r6, #132]	@ 0x84
90007980:	ea2a 0a09 	bic.w	sl, sl, r9
90007984:	f8c6 a084 	str.w	sl, [r6, #132]	@ 0x84
        EXTI->FTSR1 &= ~(iocurrent);
90007988:	f8d6 a004 	ldr.w	sl, [r6, #4]
9000798c:	ea2a 0a09 	bic.w	sl, sl, r9
90007990:	f8c6 a004 	str.w	sl, [r6, #4]
        EXTI->RTSR1 &= ~(iocurrent);
90007994:	f8d6 a000 	ldr.w	sl, [r6]
90007998:	ea2a 0909 	bic.w	r9, sl, r9
9000799c:	f8c6 9000 	str.w	r9, [r6]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
900079a0:	f8d8 9008 	ldr.w	r9, [r8, #8]
900079a4:	ea29 0303 	bic.w	r3, r9, r3
900079a8:	f8c8 3008 	str.w	r3, [r8, #8]
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
900079ac:	ea4f 0842 	mov.w	r8, r2, lsl #1
900079b0:	6803      	ldr	r3, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
900079b2:	ea4f 09d2 	mov.w	r9, r2, lsr #3
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
900079b6:	fa0e f808 	lsl.w	r8, lr, r8
900079ba:	eb00 0989 	add.w	r9, r0, r9, lsl #2
900079be:	ea43 0308 	orr.w	r3, r3, r8
900079c2:	6003      	str	r3, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
900079c4:	f002 0307 	and.w	r3, r2, #7
900079c8:	f8d9 a020 	ldr.w	sl, [r9, #32]
900079cc:	009b      	lsls	r3, r3, #2
900079ce:	fa05 f303 	lsl.w	r3, r5, r3
900079d2:	ea2a 0303 	bic.w	r3, sl, r3
900079d6:	f8c9 3020 	str.w	r3, [r9, #32]
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
900079da:	68c3      	ldr	r3, [r0, #12]
900079dc:	ea23 0308 	bic.w	r3, r3, r8
900079e0:	60c3      	str	r3, [r0, #12]
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
900079e2:	6843      	ldr	r3, [r0, #4]
900079e4:	ea23 0304 	bic.w	r3, r3, r4
900079e8:	6043      	str	r3, [r0, #4]
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900079ea:	6883      	ldr	r3, [r0, #8]
900079ec:	ea23 0308 	bic.w	r3, r3, r8
900079f0:	6083      	str	r3, [r0, #8]
    position++;
900079f2:	3201      	adds	r2, #1
  while ((GPIO_Pin >> position) != 0x00U)
900079f4:	fa31 f302 	lsrs.w	r3, r1, r2
900079f8:	d1a8      	bne.n	9000794c <HAL_GPIO_DeInit+0x158>
}
900079fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900079fe:	f04f 0b07 	mov.w	fp, #7
90007a02:	fa0b f404 	lsl.w	r4, fp, r4
90007a06:	e747      	b.n	90007898 <HAL_GPIO_DeInit+0xa4>
90007a08:	f04f 0b05 	mov.w	fp, #5
90007a0c:	fa0b f404 	lsl.w	r4, fp, r4
90007a10:	e742      	b.n	90007898 <HAL_GPIO_DeInit+0xa4>
90007a12:	4770      	bx	lr
90007a14:	f04f 0b06 	mov.w	fp, #6
90007a18:	fa0b f404 	lsl.w	r4, fp, r4
90007a1c:	e73c      	b.n	90007898 <HAL_GPIO_DeInit+0xa4>
90007a1e:	f04f 0b08 	mov.w	fp, #8
90007a22:	fa0b f404 	lsl.w	r4, fp, r4
90007a26:	e737      	b.n	90007898 <HAL_GPIO_DeInit+0xa4>
90007a28:	58020000 	.word	0x58020000
90007a2c:	58020400 	.word	0x58020400
90007a30:	58020800 	.word	0x58020800
90007a34:	58020c00 	.word	0x58020c00
90007a38:	58021000 	.word	0x58021000
90007a3c:	58000400 	.word	0x58000400
90007a40:	58021400 	.word	0x58021400
90007a44:	58021800 	.word	0x58021800
90007a48:	58021c00 	.word	0x58021c00
90007a4c:	58022000 	.word	0x58022000
90007a50:	58022400 	.word	0x58022400

90007a54 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
90007a54:	6903      	ldr	r3, [r0, #16]
90007a56:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
90007a58:	bf14      	ite	ne
90007a5a:	2001      	movne	r0, #1
90007a5c:	2000      	moveq	r0, #0
90007a5e:	4770      	bx	lr

90007a60 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
90007a60:	b902      	cbnz	r2, 90007a64 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
90007a62:	0409      	lsls	r1, r1, #16
90007a64:	6181      	str	r1, [r0, #24]
  }
}
90007a66:	4770      	bx	lr

90007a68 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
90007a68:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
90007a6a:	ea01 0203 	and.w	r2, r1, r3
90007a6e:	ea21 0103 	bic.w	r1, r1, r3
90007a72:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
90007a76:	6181      	str	r1, [r0, #24]
}
90007a78:	4770      	bx	lr
90007a7a:	bf00      	nop

90007a7c <I2C_WaitOnFlagUntilTimeout.constprop.0>:
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status,
                                                    uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90007a7c:	6803      	ldr	r3, [r0, #0]
90007a7e:	699a      	ldr	r2, [r3, #24]
90007a80:	0412      	lsls	r2, r2, #16
90007a82:	f140 8097 	bpl.w	90007bb4 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x138>
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status,
90007a86:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90007a8a:	4604      	mov	r4, r0
90007a8c:	460e      	mov	r6, r1
  HAL_I2C_ModeTypeDef tmp2;

  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007a8e:	2710      	movs	r7, #16
  uint32_t itflag   = hi2c->Instance->ISR;
90007a90:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90007a92:	f012 0810 	ands.w	r8, r2, #16
90007a96:	d07f      	beq.n	90007b98 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x11c>
  uint32_t tickstart = Tickstart;
90007a98:	4635      	mov	r5, r6
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007a9a:	61df      	str	r7, [r3, #28]

    /* Wait until STOP Flag is set or timeout occurred */
    /* AutoEnd should be initiate after AF */
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007a9c:	699a      	ldr	r2, [r3, #24]
90007a9e:	f012 0820 	ands.w	r8, r2, #32
90007aa2:	d17b      	bne.n	90007b9c <I2C_WaitOnFlagUntilTimeout.constprop.0+0x120>
    {
      /* Check for the Timeout */
      if (Timeout != HAL_MAX_DELAY)
      {
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007aa4:	f7fe ffa2 	bl	900069ec <HAL_GetTick>
90007aa8:	1b40      	subs	r0, r0, r5
        {
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007aaa:	6823      	ldr	r3, [r4, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007aac:	2819      	cmp	r0, #25
90007aae:	d83d      	bhi.n	90007b2c <I2C_WaitOnFlagUntilTimeout.constprop.0+0xb0>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007ab0:	699a      	ldr	r2, [r3, #24]
90007ab2:	0690      	lsls	r0, r2, #26
90007ab4:	d5f6      	bpl.n	90007aa4 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x28>

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90007ab6:	2220      	movs	r2, #32
90007ab8:	61da      	str	r2, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
90007aba:	f048 0804 	orr.w	r8, r8, #4

    status = HAL_ERROR;
90007abe:	2501      	movs	r5, #1
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
90007ac0:	699a      	ldr	r2, [r3, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90007ac2:	05d1      	lsls	r1, r2, #23
90007ac4:	d552      	bpl.n	90007b6c <I2C_WaitOnFlagUntilTimeout.constprop.0+0xf0>
  {
    error_code |= HAL_I2C_ERROR_BERR;

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007ac6:	f44f 7180 	mov.w	r1, #256	@ 0x100

    status = HAL_ERROR;
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007aca:	0555      	lsls	r5, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90007acc:	f048 0801 	orr.w	r8, r8, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007ad0:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007ad2:	d504      	bpl.n	90007ade <I2C_WaitOnFlagUntilTimeout.constprop.0+0x62>
  {
    error_code |= HAL_I2C_ERROR_OVR;

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007ad4:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90007ad8:	f048 0808 	orr.w	r8, r8, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007adc:	61d9      	str	r1, [r3, #28]

    status = HAL_ERROR;
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007ade:	0591      	lsls	r1, r2, #22
90007ae0:	d504      	bpl.n	90007aec <I2C_WaitOnFlagUntilTimeout.constprop.0+0x70>
  {
    error_code |= HAL_I2C_ERROR_ARLO;

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007ae2:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90007ae6:	f048 0802 	orr.w	r8, r8, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007aea:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90007aec:	699a      	ldr	r2, [r3, #24]
90007aee:	0795      	lsls	r5, r2, #30
90007af0:	d501      	bpl.n	90007af6 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x7a>
    hi2c->Instance->TXDR = 0x00U;
90007af2:	2200      	movs	r2, #0
90007af4:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90007af6:	699a      	ldr	r2, [r3, #24]
90007af8:	07d0      	lsls	r0, r2, #31
90007afa:	d403      	bmi.n	90007b04 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x88>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90007afc:	699a      	ldr	r2, [r3, #24]
90007afe:	f042 0201 	orr.w	r2, r2, #1
90007b02:	619a      	str	r2, [r3, #24]
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
90007b04:	685a      	ldr	r2, [r3, #4]

    hi2c->ErrorCode |= error_code;
    hi2c->State = HAL_I2C_STATE_READY;
90007b06:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90007b08:	4d2b      	ldr	r5, [pc, #172]	@ (90007bb8 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x13c>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007b0a:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90007b0c:	402a      	ands	r2, r5
90007b0e:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90007b10:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90007b12:	ea43 0308 	orr.w	r3, r3, r8
90007b16:	6463      	str	r3, [r4, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90007b18:	f884 0041 	strb.w	r0, [r4, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007b1c:	f884 1042 	strb.w	r1, [r4, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
90007b20:	2300      	movs	r3, #0
      return HAL_ERROR;
90007b22:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90007b24:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
90007b28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007b2c:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90007b2e:	f894 2042 	ldrb.w	r2, [r4, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007b32:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90007b34:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007b36:	0409      	lsls	r1, r1, #16
90007b38:	d50b      	bpl.n	90007b52 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
              (tmp1 != I2C_CR2_STOP) && \
90007b3a:	0441      	lsls	r1, r0, #17
90007b3c:	d409      	bmi.n	90007b52 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
90007b3e:	2a20      	cmp	r2, #32
90007b40:	d007      	beq.n	90007b52 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90007b42:	685a      	ldr	r2, [r3, #4]
90007b44:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90007b48:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90007b4a:	f7fe ff4f 	bl	900069ec <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007b4e:	6823      	ldr	r3, [r4, #0]
            tickstart = HAL_GetTick();
90007b50:	4605      	mov	r5, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007b52:	699a      	ldr	r2, [r3, #24]
90007b54:	0690      	lsls	r0, r2, #26
90007b56:	d4a1      	bmi.n	90007a9c <I2C_WaitOnFlagUntilTimeout.constprop.0+0x20>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007b58:	f7fe ff48 	bl	900069ec <HAL_GetTick>
90007b5c:	1b40      	subs	r0, r0, r5
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007b5e:	6823      	ldr	r3, [r4, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007b60:	2819      	cmp	r0, #25
90007b62:	d9f6      	bls.n	90007b52 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007b64:	f04f 0820 	mov.w	r8, #32
90007b68:	699a      	ldr	r2, [r3, #24]
90007b6a:	e7a6      	b.n	90007aba <I2C_WaitOnFlagUntilTimeout.constprop.0+0x3e>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007b6c:	0550      	lsls	r0, r2, #21
90007b6e:	d4b1      	bmi.n	90007ad4 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x58>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007b70:	0592      	lsls	r2, r2, #22
90007b72:	d4b6      	bmi.n	90007ae2 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x66>
  if (status != HAL_OK)
90007b74:	2d00      	cmp	r5, #0
90007b76:	d1b9      	bne.n	90007aec <I2C_WaitOnFlagUntilTimeout.constprop.0+0x70>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007b78:	f7fe ff38 	bl	900069ec <HAL_GetTick>
90007b7c:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90007b7e:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007b80:	2819      	cmp	r0, #25
90007b82:	d902      	bls.n	90007b8a <I2C_WaitOnFlagUntilTimeout.constprop.0+0x10e>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90007b84:	699a      	ldr	r2, [r3, #24]
90007b86:	0411      	lsls	r1, r2, #16
90007b88:	d40b      	bmi.n	90007ba2 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x126>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90007b8a:	699a      	ldr	r2, [r3, #24]
90007b8c:	0412      	lsls	r2, r2, #16
90007b8e:	f53f af7f 	bmi.w	90007a90 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x14>
  return HAL_OK;
90007b92:	2000      	movs	r0, #0
}
90007b94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  HAL_StatusTypeDef status = HAL_OK;
90007b98:	4645      	mov	r5, r8
90007b9a:	e791      	b.n	90007ac0 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x44>
90007b9c:	f04f 0800 	mov.w	r8, #0
90007ba0:	e789      	b.n	90007ab6 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x3a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007ba2:	6c63      	ldr	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90007ba4:	2220      	movs	r2, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007ba6:	4313      	orrs	r3, r2
90007ba8:	6463      	str	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90007baa:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90007bae:	f884 5042 	strb.w	r5, [r4, #66]	@ 0x42
          return HAL_ERROR;
90007bb2:	e7b5      	b.n	90007b20 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xa4>
  return HAL_OK;
90007bb4:	2000      	movs	r0, #0
}
90007bb6:	4770      	bx	lr
90007bb8:	fe00e800 	.word	0xfe00e800

90007bbc <I2C_WaitOnTXISFlagUntilTimeout>:
{
90007bbc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
90007bc0:	6803      	ldr	r3, [r0, #0]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007bc2:	2710      	movs	r7, #16
{
90007bc4:	4605      	mov	r5, r0
90007bc6:	460e      	mov	r6, r1
90007bc8:	4690      	mov	r8, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
90007bca:	699a      	ldr	r2, [r3, #24]
90007bcc:	f012 0202 	ands.w	r2, r2, #2
90007bd0:	d168      	bne.n	90007ca4 <I2C_WaitOnTXISFlagUntilTimeout+0xe8>
  uint32_t itflag   = hi2c->Instance->ISR;
90007bd2:	6999      	ldr	r1, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90007bd4:	f011 0c10 	ands.w	ip, r1, #16
90007bd8:	d062      	beq.n	90007ca0 <I2C_WaitOnTXISFlagUntilTimeout+0xe4>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007bda:	1c74      	adds	r4, r6, #1
90007bdc:	61df      	str	r7, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007bde:	d166      	bne.n	90007cae <I2C_WaitOnTXISFlagUntilTimeout+0xf2>
90007be0:	699c      	ldr	r4, [r3, #24]
90007be2:	f014 0420 	ands.w	r4, r4, #32
90007be6:	d160      	bne.n	90007caa <I2C_WaitOnTXISFlagUntilTimeout+0xee>
90007be8:	699a      	ldr	r2, [r3, #24]
90007bea:	0691      	lsls	r1, r2, #26
90007bec:	d5fc      	bpl.n	90007be8 <I2C_WaitOnTXISFlagUntilTimeout+0x2c>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90007bee:	2220      	movs	r2, #32
90007bf0:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
90007bf2:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
90007bf6:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
90007bf8:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90007bfa:	05d0      	lsls	r0, r2, #23
90007bfc:	d532      	bpl.n	90007c64 <I2C_WaitOnTXISFlagUntilTimeout+0xa8>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007bfe:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007c02:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90007c04:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007c08:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007c0a:	d504      	bpl.n	90007c16 <I2C_WaitOnTXISFlagUntilTimeout+0x5a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007c0c:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90007c10:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007c14:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007c16:	0596      	lsls	r6, r2, #22
90007c18:	d504      	bpl.n	90007c24 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007c1a:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90007c1e:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007c22:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90007c24:	699a      	ldr	r2, [r3, #24]
90007c26:	0790      	lsls	r0, r2, #30
90007c28:	d501      	bpl.n	90007c2e <I2C_WaitOnTXISFlagUntilTimeout+0x72>
    hi2c->Instance->TXDR = 0x00U;
90007c2a:	2200      	movs	r2, #0
90007c2c:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90007c2e:	699a      	ldr	r2, [r3, #24]
90007c30:	07d1      	lsls	r1, r2, #31
90007c32:	d403      	bmi.n	90007c3c <I2C_WaitOnTXISFlagUntilTimeout+0x80>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90007c34:	699a      	ldr	r2, [r3, #24]
90007c36:	f042 0201 	orr.w	r2, r2, #1
90007c3a:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90007c3c:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90007c3e:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90007c40:	4c38      	ldr	r4, [pc, #224]	@ (90007d24 <I2C_WaitOnTXISFlagUntilTimeout+0x168>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007c42:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90007c44:	4022      	ands	r2, r4
90007c46:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90007c48:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
90007c4a:	ea43 030c 	orr.w	r3, r3, ip
90007c4e:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90007c50:	f885 0041 	strb.w	r0, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007c54:	f885 1042 	strb.w	r1, [r5, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
90007c58:	2300      	movs	r3, #0
      return HAL_ERROR;
90007c5a:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90007c5c:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
90007c60:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007c64:	0550      	lsls	r0, r2, #21
90007c66:	d4d1      	bmi.n	90007c0c <I2C_WaitOnTXISFlagUntilTimeout+0x50>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007c68:	0594      	lsls	r4, r2, #22
90007c6a:	d4d6      	bmi.n	90007c1a <I2C_WaitOnTXISFlagUntilTimeout+0x5e>
  if (status != HAL_OK)
90007c6c:	2900      	cmp	r1, #0
90007c6e:	d1d9      	bne.n	90007c24 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
    if (Timeout != HAL_MAX_DELAY)
90007c70:	1c72      	adds	r2, r6, #1
90007c72:	d0aa      	beq.n	90007bca <I2C_WaitOnTXISFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007c74:	f7fe feba 	bl	900069ec <HAL_GetTick>
90007c78:	eba0 0308 	sub.w	r3, r0, r8
90007c7c:	42b3      	cmp	r3, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
90007c7e:	682b      	ldr	r3, [r5, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007c80:	d801      	bhi.n	90007c86 <I2C_WaitOnTXISFlagUntilTimeout+0xca>
90007c82:	2e00      	cmp	r6, #0
90007c84:	d1a1      	bne.n	90007bca <I2C_WaitOnTXISFlagUntilTimeout+0xe>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
90007c86:	699a      	ldr	r2, [r3, #24]
90007c88:	f012 0202 	ands.w	r2, r2, #2
90007c8c:	d19d      	bne.n	90007bca <I2C_WaitOnTXISFlagUntilTimeout+0xe>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007c8e:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90007c90:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007c92:	430b      	orrs	r3, r1
90007c94:	646b      	str	r3, [r5, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90007c96:	f885 1041 	strb.w	r1, [r5, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90007c9a:	f885 2042 	strb.w	r2, [r5, #66]	@ 0x42
          return HAL_ERROR;
90007c9e:	e7db      	b.n	90007c58 <I2C_WaitOnTXISFlagUntilTimeout+0x9c>
  HAL_StatusTypeDef status = HAL_OK;
90007ca0:	4661      	mov	r1, ip
90007ca2:	e7a9      	b.n	90007bf8 <I2C_WaitOnTXISFlagUntilTimeout+0x3c>
  return HAL_OK;
90007ca4:	2000      	movs	r0, #0
}
90007ca6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007caa:	4614      	mov	r4, r2
90007cac:	e79f      	b.n	90007bee <I2C_WaitOnTXISFlagUntilTimeout+0x32>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007cae:	4614      	mov	r4, r2
90007cb0:	46c1      	mov	r9, r8
90007cb2:	4692      	mov	sl, r2
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007cb4:	699a      	ldr	r2, [r3, #24]
90007cb6:	0692      	lsls	r2, r2, #26
90007cb8:	d40e      	bmi.n	90007cd8 <I2C_WaitOnTXISFlagUntilTimeout+0x11c>
90007cba:	f1ba 0f00 	cmp.w	sl, #0
90007cbe:	d198      	bne.n	90007bf2 <I2C_WaitOnTXISFlagUntilTimeout+0x36>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007cc0:	f7fe fe94 	bl	900069ec <HAL_GetTick>
90007cc4:	eba0 0309 	sub.w	r3, r0, r9
90007cc8:	429e      	cmp	r6, r3
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007cca:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007ccc:	d308      	bcc.n	90007ce0 <I2C_WaitOnTXISFlagUntilTimeout+0x124>
90007cce:	b13e      	cbz	r6, 90007ce0 <I2C_WaitOnTXISFlagUntilTimeout+0x124>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007cd0:	699a      	ldr	r2, [r3, #24]
90007cd2:	0690      	lsls	r0, r2, #26
90007cd4:	d5f4      	bpl.n	90007cc0 <I2C_WaitOnTXISFlagUntilTimeout+0x104>
90007cd6:	e78a      	b.n	90007bee <I2C_WaitOnTXISFlagUntilTimeout+0x32>
    if (status == HAL_OK)
90007cd8:	f1ba 0f00 	cmp.w	sl, #0
90007cdc:	d189      	bne.n	90007bf2 <I2C_WaitOnTXISFlagUntilTimeout+0x36>
90007cde:	e786      	b.n	90007bee <I2C_WaitOnTXISFlagUntilTimeout+0x32>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007ce0:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90007ce2:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007ce6:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90007ce8:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007cea:	0409      	lsls	r1, r1, #16
90007cec:	d50b      	bpl.n	90007d06 <I2C_WaitOnTXISFlagUntilTimeout+0x14a>
              (tmp1 != I2C_CR2_STOP) && \
90007cee:	0441      	lsls	r1, r0, #17
90007cf0:	d409      	bmi.n	90007d06 <I2C_WaitOnTXISFlagUntilTimeout+0x14a>
90007cf2:	2a20      	cmp	r2, #32
90007cf4:	d007      	beq.n	90007d06 <I2C_WaitOnTXISFlagUntilTimeout+0x14a>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90007cf6:	685a      	ldr	r2, [r3, #4]
90007cf8:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90007cfc:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90007cfe:	f7fe fe75 	bl	900069ec <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007d02:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
90007d04:	4681      	mov	r9, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007d06:	699a      	ldr	r2, [r3, #24]
90007d08:	0690      	lsls	r0, r2, #26
90007d0a:	d4d3      	bmi.n	90007cb4 <I2C_WaitOnTXISFlagUntilTimeout+0xf8>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007d0c:	f7fe fe6e 	bl	900069ec <HAL_GetTick>
90007d10:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007d14:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007d16:	2819      	cmp	r0, #25
90007d18:	d9f5      	bls.n	90007d06 <I2C_WaitOnTXISFlagUntilTimeout+0x14a>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90007d1a:	2420      	movs	r4, #32
              status = HAL_ERROR;
90007d1c:	f04f 0a01 	mov.w	sl, #1
90007d20:	e7c8      	b.n	90007cb4 <I2C_WaitOnTXISFlagUntilTimeout+0xf8>
90007d22:	bf00      	nop
90007d24:	fe00e800 	.word	0xfe00e800

90007d28 <I2C_WaitOnFlagUntilTimeout>:
{
90007d28:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90007d2c:	461d      	mov	r5, r3
90007d2e:	4683      	mov	fp, r0
90007d30:	460f      	mov	r7, r1
90007d32:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90007d34:	6803      	ldr	r3, [r0, #0]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007d36:	f04f 0810 	mov.w	r8, #16
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90007d3a:	699a      	ldr	r2, [r3, #24]
90007d3c:	ea37 0202 	bics.w	r2, r7, r2
90007d40:	bf0c      	ite	eq
90007d42:	2201      	moveq	r2, #1
90007d44:	2200      	movne	r2, #0
90007d46:	42b2      	cmp	r2, r6
90007d48:	d173      	bne.n	90007e32 <I2C_WaitOnFlagUntilTimeout+0x10a>
  uint32_t itflag   = hi2c->Instance->ISR;
90007d4a:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90007d4c:	f012 0c10 	ands.w	ip, r2, #16
90007d50:	d06d      	beq.n	90007e2e <I2C_WaitOnFlagUntilTimeout+0x106>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007d52:	1c6c      	adds	r4, r5, #1
90007d54:	f8c3 801c 	str.w	r8, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007d58:	d170      	bne.n	90007e3c <I2C_WaitOnFlagUntilTimeout+0x114>
90007d5a:	699c      	ldr	r4, [r3, #24]
90007d5c:	f014 0420 	ands.w	r4, r4, #32
90007d60:	d16a      	bne.n	90007e38 <I2C_WaitOnFlagUntilTimeout+0x110>
90007d62:	699a      	ldr	r2, [r3, #24]
90007d64:	0691      	lsls	r1, r2, #26
90007d66:	d5fc      	bpl.n	90007d62 <I2C_WaitOnFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90007d68:	2220      	movs	r2, #32
90007d6a:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
90007d6c:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
90007d70:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
90007d72:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90007d74:	05d0      	lsls	r0, r2, #23
90007d76:	d534      	bpl.n	90007de2 <I2C_WaitOnFlagUntilTimeout+0xba>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007d78:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007d7c:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90007d7e:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007d82:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007d84:	d504      	bpl.n	90007d90 <I2C_WaitOnFlagUntilTimeout+0x68>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007d86:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90007d8a:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007d8e:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007d90:	0595      	lsls	r5, r2, #22
90007d92:	d504      	bpl.n	90007d9e <I2C_WaitOnFlagUntilTimeout+0x76>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007d94:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90007d98:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007d9c:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90007d9e:	699a      	ldr	r2, [r3, #24]
90007da0:	0790      	lsls	r0, r2, #30
90007da2:	d501      	bpl.n	90007da8 <I2C_WaitOnFlagUntilTimeout+0x80>
    hi2c->Instance->TXDR = 0x00U;
90007da4:	2200      	movs	r2, #0
90007da6:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90007da8:	699a      	ldr	r2, [r3, #24]
90007daa:	07d1      	lsls	r1, r2, #31
90007dac:	d403      	bmi.n	90007db6 <I2C_WaitOnFlagUntilTimeout+0x8e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90007dae:	699a      	ldr	r2, [r3, #24]
90007db0:	f042 0201 	orr.w	r2, r2, #1
90007db4:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90007db6:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90007db8:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90007dba:	4c40      	ldr	r4, [pc, #256]	@ (90007ebc <I2C_WaitOnFlagUntilTimeout+0x194>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007dbc:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90007dbe:	4022      	ands	r2, r4
90007dc0:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90007dc2:	f8db 3044 	ldr.w	r3, [fp, #68]	@ 0x44
90007dc6:	ea43 030c 	orr.w	r3, r3, ip
90007dca:	f8cb 3044 	str.w	r3, [fp, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90007dce:	f88b 0041 	strb.w	r0, [fp, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007dd2:	f88b 1042 	strb.w	r1, [fp, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
90007dd6:	2300      	movs	r3, #0
      return HAL_ERROR;
90007dd8:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90007dda:	f88b 3040 	strb.w	r3, [fp, #64]	@ 0x40
}
90007dde:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007de2:	0550      	lsls	r0, r2, #21
90007de4:	d4cf      	bmi.n	90007d86 <I2C_WaitOnFlagUntilTimeout+0x5e>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007de6:	0594      	lsls	r4, r2, #22
90007de8:	d4d4      	bmi.n	90007d94 <I2C_WaitOnFlagUntilTimeout+0x6c>
  if (status != HAL_OK)
90007dea:	2900      	cmp	r1, #0
90007dec:	d1d7      	bne.n	90007d9e <I2C_WaitOnFlagUntilTimeout+0x76>
    if (Timeout != HAL_MAX_DELAY)
90007dee:	1c6a      	adds	r2, r5, #1
90007df0:	d0a3      	beq.n	90007d3a <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007df2:	f7fe fdfb 	bl	900069ec <HAL_GetTick>
90007df6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90007df8:	1ac3      	subs	r3, r0, r3
90007dfa:	42ab      	cmp	r3, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90007dfc:	f8db 3000 	ldr.w	r3, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007e00:	d801      	bhi.n	90007e06 <I2C_WaitOnFlagUntilTimeout+0xde>
90007e02:	2d00      	cmp	r5, #0
90007e04:	d199      	bne.n	90007d3a <I2C_WaitOnFlagUntilTimeout+0x12>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90007e06:	699a      	ldr	r2, [r3, #24]
90007e08:	ea37 0202 	bics.w	r2, r7, r2
90007e0c:	bf0c      	ite	eq
90007e0e:	2201      	moveq	r2, #1
90007e10:	2200      	movne	r2, #0
90007e12:	42b2      	cmp	r2, r6
90007e14:	d191      	bne.n	90007d3a <I2C_WaitOnFlagUntilTimeout+0x12>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007e16:	f8db 3044 	ldr.w	r3, [fp, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90007e1a:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
90007e1c:	2200      	movs	r2, #0
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007e1e:	430b      	orrs	r3, r1
90007e20:	f8cb 3044 	str.w	r3, [fp, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90007e24:	f88b 1041 	strb.w	r1, [fp, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90007e28:	f88b 2042 	strb.w	r2, [fp, #66]	@ 0x42
          return HAL_ERROR;
90007e2c:	e7d3      	b.n	90007dd6 <I2C_WaitOnFlagUntilTimeout+0xae>
  HAL_StatusTypeDef status = HAL_OK;
90007e2e:	4661      	mov	r1, ip
90007e30:	e79f      	b.n	90007d72 <I2C_WaitOnFlagUntilTimeout+0x4a>
  return HAL_OK;
90007e32:	2000      	movs	r0, #0
}
90007e34:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007e38:	2400      	movs	r4, #0
90007e3a:	e795      	b.n	90007d68 <I2C_WaitOnFlagUntilTimeout+0x40>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007e3c:	2400      	movs	r4, #0
90007e3e:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
90007e42:	46a2      	mov	sl, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007e44:	699a      	ldr	r2, [r3, #24]
90007e46:	0692      	lsls	r2, r2, #26
90007e48:	d40f      	bmi.n	90007e6a <I2C_WaitOnFlagUntilTimeout+0x142>
90007e4a:	f1ba 0f00 	cmp.w	sl, #0
90007e4e:	d18d      	bne.n	90007d6c <I2C_WaitOnFlagUntilTimeout+0x44>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007e50:	f7fe fdcc 	bl	900069ec <HAL_GetTick>
90007e54:	eba0 0309 	sub.w	r3, r0, r9
90007e58:	429d      	cmp	r5, r3
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007e5a:	f8db 3000 	ldr.w	r3, [fp]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007e5e:	d309      	bcc.n	90007e74 <I2C_WaitOnFlagUntilTimeout+0x14c>
90007e60:	b145      	cbz	r5, 90007e74 <I2C_WaitOnFlagUntilTimeout+0x14c>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007e62:	699a      	ldr	r2, [r3, #24]
90007e64:	0690      	lsls	r0, r2, #26
90007e66:	d5f3      	bpl.n	90007e50 <I2C_WaitOnFlagUntilTimeout+0x128>
90007e68:	e77e      	b.n	90007d68 <I2C_WaitOnFlagUntilTimeout+0x40>
    if (status == HAL_OK)
90007e6a:	f1ba 0f00 	cmp.w	sl, #0
90007e6e:	f47f af7d 	bne.w	90007d6c <I2C_WaitOnFlagUntilTimeout+0x44>
90007e72:	e779      	b.n	90007d68 <I2C_WaitOnFlagUntilTimeout+0x40>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007e74:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90007e76:	f89b 2042 	ldrb.w	r2, [fp, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007e7a:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90007e7c:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007e7e:	0409      	lsls	r1, r1, #16
90007e80:	d50c      	bpl.n	90007e9c <I2C_WaitOnFlagUntilTimeout+0x174>
              (tmp1 != I2C_CR2_STOP) && \
90007e82:	0441      	lsls	r1, r0, #17
90007e84:	d40a      	bmi.n	90007e9c <I2C_WaitOnFlagUntilTimeout+0x174>
90007e86:	2a20      	cmp	r2, #32
90007e88:	d008      	beq.n	90007e9c <I2C_WaitOnFlagUntilTimeout+0x174>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90007e8a:	685a      	ldr	r2, [r3, #4]
90007e8c:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90007e90:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90007e92:	f7fe fdab 	bl	900069ec <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007e96:	f8db 3000 	ldr.w	r3, [fp]
            tickstart = HAL_GetTick();
90007e9a:	4681      	mov	r9, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007e9c:	699a      	ldr	r2, [r3, #24]
90007e9e:	0690      	lsls	r0, r2, #26
90007ea0:	d4d0      	bmi.n	90007e44 <I2C_WaitOnFlagUntilTimeout+0x11c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007ea2:	f7fe fda3 	bl	900069ec <HAL_GetTick>
90007ea6:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007eaa:	f8db 3000 	ldr.w	r3, [fp]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007eae:	2819      	cmp	r0, #25
90007eb0:	d9f4      	bls.n	90007e9c <I2C_WaitOnFlagUntilTimeout+0x174>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90007eb2:	2420      	movs	r4, #32
              status = HAL_ERROR;
90007eb4:	f04f 0a01 	mov.w	sl, #1
90007eb8:	e7c4      	b.n	90007e44 <I2C_WaitOnFlagUntilTimeout+0x11c>
90007eba:	bf00      	nop
90007ebc:	fe00e800 	.word	0xfe00e800

90007ec0 <I2C_WaitOnSTOPFlagUntilTimeout>:
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007ec0:	6803      	ldr	r3, [r0, #0]
{
90007ec2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90007ec6:	4617      	mov	r7, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007ec8:	699a      	ldr	r2, [r3, #24]
90007eca:	0695      	lsls	r5, r2, #26
90007ecc:	d461      	bmi.n	90007f92 <I2C_WaitOnSTOPFlagUntilTimeout+0xd2>
90007ece:	4605      	mov	r5, r0
90007ed0:	460e      	mov	r6, r1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007ed2:	f04f 0810 	mov.w	r8, #16
  uint32_t itflag   = hi2c->Instance->ISR;
90007ed6:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90007ed8:	f012 0c10 	ands.w	ip, r2, #16
90007edc:	d05c      	beq.n	90007f98 <I2C_WaitOnSTOPFlagUntilTimeout+0xd8>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007ede:	1c74      	adds	r4, r6, #1
90007ee0:	f8c3 801c 	str.w	r8, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007ee4:	d165      	bne.n	90007fb2 <I2C_WaitOnSTOPFlagUntilTimeout+0xf2>
90007ee6:	699c      	ldr	r4, [r3, #24]
90007ee8:	f014 0420 	ands.w	r4, r4, #32
90007eec:	d15f      	bne.n	90007fae <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
90007eee:	699a      	ldr	r2, [r3, #24]
90007ef0:	0691      	lsls	r1, r2, #26
90007ef2:	d5fc      	bpl.n	90007eee <I2C_WaitOnSTOPFlagUntilTimeout+0x2e>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90007ef4:	2220      	movs	r2, #32
90007ef6:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
90007ef8:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
90007efc:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
90007efe:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90007f00:	05d0      	lsls	r0, r2, #23
90007f02:	d532      	bpl.n	90007f6a <I2C_WaitOnSTOPFlagUntilTimeout+0xaa>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007f04:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007f08:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90007f0a:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007f0e:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007f10:	d504      	bpl.n	90007f1c <I2C_WaitOnSTOPFlagUntilTimeout+0x5c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007f12:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90007f16:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007f1a:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007f1c:	0596      	lsls	r6, r2, #22
90007f1e:	d504      	bpl.n	90007f2a <I2C_WaitOnSTOPFlagUntilTimeout+0x6a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007f20:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90007f24:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007f28:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90007f2a:	699a      	ldr	r2, [r3, #24]
90007f2c:	0790      	lsls	r0, r2, #30
90007f2e:	d501      	bpl.n	90007f34 <I2C_WaitOnSTOPFlagUntilTimeout+0x74>
    hi2c->Instance->TXDR = 0x00U;
90007f30:	2200      	movs	r2, #0
90007f32:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90007f34:	699a      	ldr	r2, [r3, #24]
90007f36:	07d1      	lsls	r1, r2, #31
90007f38:	d403      	bmi.n	90007f42 <I2C_WaitOnSTOPFlagUntilTimeout+0x82>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90007f3a:	699a      	ldr	r2, [r3, #24]
90007f3c:	f042 0201 	orr.w	r2, r2, #1
90007f40:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90007f42:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90007f44:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90007f46:	4c38      	ldr	r4, [pc, #224]	@ (90008028 <I2C_WaitOnSTOPFlagUntilTimeout+0x168>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007f48:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90007f4a:	4022      	ands	r2, r4
90007f4c:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90007f4e:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
90007f50:	ea43 030c 	orr.w	r3, r3, ip
90007f54:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90007f56:	f885 0041 	strb.w	r0, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007f5a:	f885 1042 	strb.w	r1, [r5, #66]	@ 0x42
        __HAL_UNLOCK(hi2c);
90007f5e:	2300      	movs	r3, #0
      return HAL_ERROR;
90007f60:	2001      	movs	r0, #1
        __HAL_UNLOCK(hi2c);
90007f62:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
90007f66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007f6a:	0550      	lsls	r0, r2, #21
90007f6c:	d4d1      	bmi.n	90007f12 <I2C_WaitOnSTOPFlagUntilTimeout+0x52>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007f6e:	0594      	lsls	r4, r2, #22
90007f70:	d4d6      	bmi.n	90007f20 <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
  if (status != HAL_OK)
90007f72:	2900      	cmp	r1, #0
90007f74:	d1d9      	bne.n	90007f2a <I2C_WaitOnSTOPFlagUntilTimeout+0x6a>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007f76:	f7fe fd39 	bl	900069ec <HAL_GetTick>
90007f7a:	1bc0      	subs	r0, r0, r7
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90007f7c:	682b      	ldr	r3, [r5, #0]
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007f7e:	42b0      	cmp	r0, r6
90007f80:	d800      	bhi.n	90007f84 <I2C_WaitOnSTOPFlagUntilTimeout+0xc4>
90007f82:	b91e      	cbnz	r6, 90007f8c <I2C_WaitOnSTOPFlagUntilTimeout+0xcc>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90007f84:	699a      	ldr	r2, [r3, #24]
90007f86:	f012 0220 	ands.w	r2, r2, #32
90007f8a:	d007      	beq.n	90007f9c <I2C_WaitOnSTOPFlagUntilTimeout+0xdc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007f8c:	699a      	ldr	r2, [r3, #24]
90007f8e:	0692      	lsls	r2, r2, #26
90007f90:	d5a1      	bpl.n	90007ed6 <I2C_WaitOnSTOPFlagUntilTimeout+0x16>
  return HAL_OK;
90007f92:	2000      	movs	r0, #0
}
90007f94:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  HAL_StatusTypeDef status = HAL_OK;
90007f98:	4661      	mov	r1, ip
90007f9a:	e7b0      	b.n	90007efe <I2C_WaitOnSTOPFlagUntilTimeout+0x3e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007f9c:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
90007f9e:	2120      	movs	r1, #32
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007fa0:	430b      	orrs	r3, r1
90007fa2:	646b      	str	r3, [r5, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
90007fa4:	f885 1041 	strb.w	r1, [r5, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
90007fa8:	f885 2042 	strb.w	r2, [r5, #66]	@ 0x42
        return HAL_ERROR;
90007fac:	e7d7      	b.n	90007f5e <I2C_WaitOnSTOPFlagUntilTimeout+0x9e>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007fae:	2400      	movs	r4, #0
90007fb0:	e7a0      	b.n	90007ef4 <I2C_WaitOnSTOPFlagUntilTimeout+0x34>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007fb2:	2400      	movs	r4, #0
90007fb4:	46b9      	mov	r9, r7
90007fb6:	46a2      	mov	sl, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007fb8:	699a      	ldr	r2, [r3, #24]
90007fba:	0692      	lsls	r2, r2, #26
90007fbc:	d42f      	bmi.n	9000801e <I2C_WaitOnSTOPFlagUntilTimeout+0x15e>
90007fbe:	f1ba 0f00 	cmp.w	sl, #0
90007fc2:	d199      	bne.n	90007ef8 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007fc4:	f7fe fd12 	bl	900069ec <HAL_GetTick>
90007fc8:	eba0 0309 	sub.w	r3, r0, r9
90007fcc:	429e      	cmp	r6, r3
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007fce:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007fd0:	d304      	bcc.n	90007fdc <I2C_WaitOnSTOPFlagUntilTimeout+0x11c>
90007fd2:	b11e      	cbz	r6, 90007fdc <I2C_WaitOnSTOPFlagUntilTimeout+0x11c>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007fd4:	699a      	ldr	r2, [r3, #24]
90007fd6:	0690      	lsls	r0, r2, #26
90007fd8:	d5f4      	bpl.n	90007fc4 <I2C_WaitOnSTOPFlagUntilTimeout+0x104>
90007fda:	e78b      	b.n	90007ef4 <I2C_WaitOnSTOPFlagUntilTimeout+0x34>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007fdc:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90007fde:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007fe2:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90007fe4:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007fe6:	0409      	lsls	r1, r1, #16
90007fe8:	d50b      	bpl.n	90008002 <I2C_WaitOnSTOPFlagUntilTimeout+0x142>
              (tmp1 != I2C_CR2_STOP) && \
90007fea:	0441      	lsls	r1, r0, #17
90007fec:	d409      	bmi.n	90008002 <I2C_WaitOnSTOPFlagUntilTimeout+0x142>
90007fee:	2a20      	cmp	r2, #32
90007ff0:	d007      	beq.n	90008002 <I2C_WaitOnSTOPFlagUntilTimeout+0x142>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90007ff2:	685a      	ldr	r2, [r3, #4]
90007ff4:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90007ff8:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90007ffa:	f7fe fcf7 	bl	900069ec <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007ffe:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
90008000:	4681      	mov	r9, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008002:	699a      	ldr	r2, [r3, #24]
90008004:	0690      	lsls	r0, r2, #26
90008006:	d4d7      	bmi.n	90007fb8 <I2C_WaitOnSTOPFlagUntilTimeout+0xf8>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008008:	f7fe fcf0 	bl	900069ec <HAL_GetTick>
9000800c:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008010:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008012:	2819      	cmp	r0, #25
90008014:	d9f5      	bls.n	90008002 <I2C_WaitOnSTOPFlagUntilTimeout+0x142>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90008016:	2420      	movs	r4, #32
              status = HAL_ERROR;
90008018:	f04f 0a01 	mov.w	sl, #1
9000801c:	e7cc      	b.n	90007fb8 <I2C_WaitOnSTOPFlagUntilTimeout+0xf8>
    if (status == HAL_OK)
9000801e:	f1ba 0f00 	cmp.w	sl, #0
90008022:	f47f af69 	bne.w	90007ef8 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
90008026:	e765      	b.n	90007ef4 <I2C_WaitOnSTOPFlagUntilTimeout+0x34>
90008028:	fe00e800 	.word	0xfe00e800

9000802c <HAL_I2C_MspInit>:
}
9000802c:	4770      	bx	lr
9000802e:	bf00      	nop

90008030 <HAL_I2C_Init>:
  if (hi2c == NULL)
90008030:	2800      	cmp	r0, #0
90008032:	d053      	beq.n	900080dc <HAL_I2C_Init+0xac>
{
90008034:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
90008036:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
9000803a:	4604      	mov	r4, r0
9000803c:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90008040:	2b00      	cmp	r3, #0
90008042:	d046      	beq.n	900080d2 <HAL_I2C_Init+0xa2>
  __HAL_I2C_DISABLE(hi2c);
90008044:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
90008046:	2124      	movs	r1, #36	@ 0x24
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90008048:	6862      	ldr	r2, [r4, #4]
  hi2c->State = HAL_I2C_STATE_BUSY;
9000804a:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
9000804e:	6819      	ldr	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90008050:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90008054:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
90008056:	f021 0101 	bic.w	r1, r1, #1
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
9000805a:	2801      	cmp	r0, #1
  __HAL_I2C_DISABLE(hi2c);
9000805c:	6019      	str	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
9000805e:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
90008060:	689a      	ldr	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
90008062:	68a1      	ldr	r1, [r4, #8]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
90008064:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
90008068:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
9000806a:	d009      	beq.n	90008080 <HAL_I2C_Init+0x50>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
9000806c:	f441 4104 	orr.w	r1, r1, #33792	@ 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90008070:	2802      	cmp	r0, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
90008072:	6099      	str	r1, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90008074:	d107      	bne.n	90008086 <HAL_I2C_Init+0x56>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
90008076:	685a      	ldr	r2, [r3, #4]
90008078:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
9000807c:	605a      	str	r2, [r3, #4]
9000807e:	e006      	b.n	9000808e <HAL_I2C_Init+0x5e>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
90008080:	f441 4100 	orr.w	r1, r1, #32768	@ 0x8000
90008084:	6099      	str	r1, [r3, #8]
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
90008086:	685a      	ldr	r2, [r3, #4]
90008088:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
9000808c:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
9000808e:	6858      	ldr	r0, [r3, #4]
  hi2c->State = HAL_I2C_STATE_READY;
90008090:	f04f 0c20 	mov.w	ip, #32
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90008094:	4912      	ldr	r1, [pc, #72]	@ (900080e0 <HAL_I2C_Init+0xb0>)
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90008096:	6922      	ldr	r2, [r4, #16]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90008098:	4301      	orrs	r1, r0
9000809a:	6059      	str	r1, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
9000809c:	68d9      	ldr	r1, [r3, #12]
9000809e:	f421 4100 	bic.w	r1, r1, #32768	@ 0x8000
900080a2:	60d9      	str	r1, [r3, #12]
                          (hi2c->Init.OwnAddress2Masks << 8));
900080a4:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
900080a8:	4302      	orrs	r2, r0
900080aa:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
900080ae:	e9d4 1007 	ldrd	r1, r0, [r4, #28]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
900080b2:	60da      	str	r2, [r3, #12]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
900080b4:	2200      	movs	r2, #0
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
900080b6:	4301      	orrs	r1, r0
  return HAL_OK;
900080b8:	4610      	mov	r0, r2
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
900080ba:	6019      	str	r1, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
900080bc:	6819      	ldr	r1, [r3, #0]
900080be:	f041 0101 	orr.w	r1, r1, #1
900080c2:	6019      	str	r1, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
900080c4:	6462      	str	r2, [r4, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
900080c6:	f884 c041 	strb.w	ip, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
900080ca:	6322      	str	r2, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
900080cc:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
}
900080d0:	bd10      	pop	{r4, pc}
    hi2c->Lock = HAL_UNLOCKED;
900080d2:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_I2C_MspInit(hi2c);
900080d6:	f7ff ffa9 	bl	9000802c <HAL_I2C_MspInit>
900080da:	e7b3      	b.n	90008044 <HAL_I2C_Init+0x14>
    return HAL_ERROR;
900080dc:	2001      	movs	r0, #1
}
900080de:	4770      	bx	lr
900080e0:	02008000 	.word	0x02008000

900080e4 <HAL_I2C_MspDeInit>:
__weak void HAL_I2C_MspDeInit(I2C_HandleTypeDef *hi2c)
900080e4:	4770      	bx	lr
900080e6:	bf00      	nop

900080e8 <HAL_I2C_DeInit>:
  if (hi2c == NULL)
900080e8:	b1b0      	cbz	r0, 90008118 <HAL_I2C_DeInit+0x30>
  __HAL_I2C_DISABLE(hi2c);
900080ea:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
900080ec:	2324      	movs	r3, #36	@ 0x24
{
900080ee:	b510      	push	{r4, lr}
  hi2c->State = HAL_I2C_STATE_BUSY;
900080f0:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
900080f4:	4604      	mov	r4, r0
  __HAL_I2C_DISABLE(hi2c);
900080f6:	6813      	ldr	r3, [r2, #0]
900080f8:	f023 0301 	bic.w	r3, r3, #1
900080fc:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
900080fe:	f7ff fff1 	bl	900080e4 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008102:	2300      	movs	r3, #0
90008104:	6463      	str	r3, [r4, #68]	@ 0x44
  return HAL_OK;
90008106:	4618      	mov	r0, r3
  hi2c->State = HAL_I2C_STATE_RESET;
90008108:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hi2c);
9000810c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  hi2c->PreviousState = I2C_STATE_NONE;
90008110:	6323      	str	r3, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
90008112:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
}
90008116:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
90008118:	2001      	movs	r0, #1
}
9000811a:	4770      	bx	lr

9000811c <HAL_I2C_Mem_Write>:
{
9000811c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90008120:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
90008122:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
{
90008126:	b083      	sub	sp, #12
  if (hi2c->State == HAL_I2C_STATE_READY)
90008128:	2820      	cmp	r0, #32
{
9000812a:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
9000812e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
90008130:	d11e      	bne.n	90008170 <HAL_I2C_Mem_Write+0x54>
    if ((pData == NULL) || (Size == 0U))
90008132:	4698      	mov	r8, r3
90008134:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90008136:	b1bb      	cbz	r3, 90008168 <HAL_I2C_Mem_Write+0x4c>
90008138:	f1ba 0f00 	cmp.w	sl, #0
9000813c:	d014      	beq.n	90008168 <HAL_I2C_Mem_Write+0x4c>
    __HAL_LOCK(hi2c);
9000813e:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
90008142:	2b01      	cmp	r3, #1
90008144:	d014      	beq.n	90008170 <HAL_I2C_Mem_Write+0x54>
90008146:	2301      	movs	r3, #1
90008148:	460d      	mov	r5, r1
9000814a:	4691      	mov	r9, r2
9000814c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    tickstart = HAL_GetTick();
90008150:	f7fe fc4c 	bl	900069ec <HAL_GetTick>
90008154:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
90008156:	4620      	mov	r0, r4
90008158:	4631      	mov	r1, r6
9000815a:	f7ff fc8f 	bl	90007a7c <I2C_WaitOnFlagUntilTimeout.constprop.0>
9000815e:	b158      	cbz	r0, 90008178 <HAL_I2C_Mem_Write+0x5c>
      return  HAL_ERROR;
90008160:	2001      	movs	r0, #1
}
90008162:	b003      	add	sp, #12
90008164:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90008168:	f44f 7300 	mov.w	r3, #512	@ 0x200
9000816c:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
9000816e:	e7f7      	b.n	90008160 <HAL_I2C_Mem_Write+0x44>
    __HAL_LOCK(hi2c);
90008170:	2002      	movs	r0, #2
}
90008172:	b003      	add	sp, #12
90008174:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    hi2c->pBuffPtr  = pData;
90008178:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
9000817a:	f3c5 0b09 	ubfx	fp, r5, #0, #10
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                    (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
9000817e:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr  = pData;
90008180:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
90008182:	2321      	movs	r3, #33	@ 0x21
  MODIFY_REG(hi2c->Instance->CR2, \
90008184:	4a5f      	ldr	r2, [pc, #380]	@ (90008304 <HAL_I2C_Mem_Write+0x1e8>)
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
90008186:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000818a:	2340      	movs	r3, #64	@ 0x40
    hi2c->XferISR   = NULL;
9000818c:	6360      	str	r0, [r4, #52]	@ 0x34
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000818e:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008192:	6460      	str	r0, [r4, #68]	@ 0x44
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008194:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
90008196:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000819a:	684b      	ldr	r3, [r1, #4]
9000819c:	4013      	ands	r3, r2
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000819e:	fa5f f288 	uxtb.w	r2, r8
  MODIFY_REG(hi2c->Instance->CR2, \
900081a2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
900081a6:	4a58      	ldr	r2, [pc, #352]	@ (90008308 <HAL_I2C_Mem_Write+0x1ec>)
900081a8:	ea43 030b 	orr.w	r3, r3, fp
900081ac:	431a      	orrs	r2, r3
900081ae:	604a      	str	r2, [r1, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900081b0:	4632      	mov	r2, r6
900081b2:	4639      	mov	r1, r7
900081b4:	f7ff fd02 	bl	90007bbc <I2C_WaitOnTXISFlagUntilTimeout>
900081b8:	2800      	cmp	r0, #0
900081ba:	d176      	bne.n	900082aa <HAL_I2C_Mem_Write+0x18e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
900081bc:	f1b8 0f01 	cmp.w	r8, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
900081c0:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
900081c2:	d169      	bne.n	90008298 <HAL_I2C_Mem_Write+0x17c>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
900081c4:	fa5f f289 	uxtb.w	r2, r9
900081c8:	629a      	str	r2, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
900081ca:	463b      	mov	r3, r7
900081cc:	2200      	movs	r2, #0
900081ce:	2180      	movs	r1, #128	@ 0x80
900081d0:	4620      	mov	r0, r4
900081d2:	9600      	str	r6, [sp, #0]
900081d4:	f7ff fda8 	bl	90007d28 <I2C_WaitOnFlagUntilTimeout>
900081d8:	2800      	cmp	r0, #0
900081da:	d166      	bne.n	900082aa <HAL_I2C_Mem_Write+0x18e>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
900081dc:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900081de:	6822      	ldr	r2, [r4, #0]
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
900081e0:	b29b      	uxth	r3, r3
900081e2:	2bff      	cmp	r3, #255	@ 0xff
900081e4:	d965      	bls.n	900082b2 <HAL_I2C_Mem_Write+0x196>
  MODIFY_REG(hi2c->Instance->CR2, \
900081e6:	6853      	ldr	r3, [r2, #4]
900081e8:	4948      	ldr	r1, [pc, #288]	@ (9000830c <HAL_I2C_Mem_Write+0x1f0>)
900081ea:	400b      	ands	r3, r1
900081ec:	4948      	ldr	r1, [pc, #288]	@ (90008310 <HAL_I2C_Mem_Write+0x1f4>)
900081ee:	ea43 030b 	orr.w	r3, r3, fp
900081f2:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
900081f4:	23ff      	movs	r3, #255	@ 0xff
900081f6:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
900081f8:	6051      	str	r1, [r2, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
900081fa:	e003      	b.n	90008204 <HAL_I2C_Mem_Write+0xe8>
    } while (hi2c->XferCount > 0U);
900081fc:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
900081fe:	b29b      	uxth	r3, r3
90008200:	2b00      	cmp	r3, #0
90008202:	d069      	beq.n	900082d8 <HAL_I2C_Mem_Write+0x1bc>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90008204:	4632      	mov	r2, r6
90008206:	4639      	mov	r1, r7
90008208:	4620      	mov	r0, r4
9000820a:	f7ff fcd7 	bl	90007bbc <I2C_WaitOnTXISFlagUntilTimeout>
9000820e:	4602      	mov	r2, r0
90008210:	2800      	cmp	r0, #0
90008212:	d1a5      	bne.n	90008160 <HAL_I2C_Mem_Write+0x44>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
90008214:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90008216:	6825      	ldr	r5, [r4, #0]
90008218:	f810 1b01 	ldrb.w	r1, [r0], #1
      hi2c->XferSize--;
9000821c:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
9000821e:	62a9      	str	r1, [r5, #40]	@ 0x28
      hi2c->XferCount--;
90008220:	f8b4 c02a 	ldrh.w	ip, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
90008224:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
90008226:	6260      	str	r0, [r4, #36]	@ 0x24
      hi2c->XferCount--;
90008228:	f10c 3cff 	add.w	ip, ip, #4294967295
      hi2c->XferSize--;
9000822c:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
9000822e:	fa1f fc8c 	uxth.w	ip, ip
      hi2c->XferSize--;
90008232:	8523      	strh	r3, [r4, #40]	@ 0x28
      hi2c->XferCount--;
90008234:	f8a4 c02a 	strh.w	ip, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90008238:	8d61      	ldrh	r1, [r4, #42]	@ 0x2a
9000823a:	b289      	uxth	r1, r1
9000823c:	2900      	cmp	r1, #0
9000823e:	d0dd      	beq.n	900081fc <HAL_I2C_Mem_Write+0xe0>
90008240:	2b00      	cmp	r3, #0
90008242:	d1db      	bne.n	900081fc <HAL_I2C_Mem_Write+0xe0>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
90008244:	463b      	mov	r3, r7
90008246:	2180      	movs	r1, #128	@ 0x80
90008248:	4620      	mov	r0, r4
9000824a:	9600      	str	r6, [sp, #0]
9000824c:	f7ff fd6c 	bl	90007d28 <I2C_WaitOnFlagUntilTimeout>
          hi2c->XferSize = MAX_NBYTE_SIZE;
90008250:	f04f 0cff 	mov.w	ip, #255	@ 0xff
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
90008254:	2800      	cmp	r0, #0
90008256:	d183      	bne.n	90008160 <HAL_I2C_Mem_Write+0x44>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008258:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000825a:	f8df e0b0 	ldr.w	lr, [pc, #176]	@ 9000830c <HAL_I2C_Mem_Write+0x1f0>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000825e:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90008260:	492b      	ldr	r1, [pc, #172]	@ (90008310 <HAL_I2C_Mem_Write+0x1f4>)
90008262:	4670      	mov	r0, lr
90008264:	6822      	ldr	r2, [r4, #0]
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008266:	4563      	cmp	r3, ip
90008268:	d909      	bls.n	9000827e <HAL_I2C_Mem_Write+0x162>
  MODIFY_REG(hi2c->Instance->CR2, \
9000826a:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000826c:	f8a4 c028 	strh.w	ip, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008270:	ea03 030e 	and.w	r3, r3, lr
90008274:	ea43 030b 	orr.w	r3, r3, fp
90008278:	4319      	orrs	r1, r3
9000827a:	6051      	str	r1, [r2, #4]
}
9000827c:	e7be      	b.n	900081fc <HAL_I2C_Mem_Write+0xe0>
          hi2c->XferSize = hi2c->XferCount;
9000827e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008280:	6851      	ldr	r1, [r2, #4]
          hi2c->XferSize = hi2c->XferCount;
90008282:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90008284:	4001      	ands	r1, r0
          hi2c->XferSize = hi2c->XferCount;
90008286:	8523      	strh	r3, [r4, #40]	@ 0x28
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008288:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
9000828a:	ea4b 4303 	orr.w	r3, fp, r3, lsl #16
9000828e:	430b      	orrs	r3, r1
90008290:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
90008294:	6053      	str	r3, [r2, #4]
}
90008296:	e7b1      	b.n	900081fc <HAL_I2C_Mem_Write+0xe0>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90008298:	ea4f 2219 	mov.w	r2, r9, lsr #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000829c:	4639      	mov	r1, r7
9000829e:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
900082a0:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900082a2:	4632      	mov	r2, r6
900082a4:	f7ff fc8a 	bl	90007bbc <I2C_WaitOnTXISFlagUntilTimeout>
900082a8:	b188      	cbz	r0, 900082ce <HAL_I2C_Mem_Write+0x1b2>
      __HAL_UNLOCK(hi2c);
900082aa:	2300      	movs	r3, #0
900082ac:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
900082b0:	e756      	b.n	90008160 <HAL_I2C_Mem_Write+0x44>
      hi2c->XferSize = hi2c->XferCount;
900082b2:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900082b4:	4815      	ldr	r0, [pc, #84]	@ (9000830c <HAL_I2C_Mem_Write+0x1f0>)
      hi2c->XferSize = hi2c->XferCount;
900082b6:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900082b8:	6851      	ldr	r1, [r2, #4]
      hi2c->XferSize = hi2c->XferCount;
900082ba:	8523      	strh	r3, [r4, #40]	@ 0x28
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
900082bc:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900082be:	4001      	ands	r1, r0
900082c0:	ea4b 4303 	orr.w	r3, fp, r3, lsl #16
900082c4:	430b      	orrs	r3, r1
900082c6:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
900082ca:	6053      	str	r3, [r2, #4]
}
900082cc:	e79a      	b.n	90008204 <HAL_I2C_Mem_Write+0xe8>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
900082ce:	fa5f f289 	uxtb.w	r2, r9
900082d2:	6823      	ldr	r3, [r4, #0]
900082d4:	629a      	str	r2, [r3, #40]	@ 0x28
900082d6:	e778      	b.n	900081ca <HAL_I2C_Mem_Write+0xae>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
900082d8:	4632      	mov	r2, r6
900082da:	4639      	mov	r1, r7
900082dc:	4620      	mov	r0, r4
900082de:	f7ff fdef 	bl	90007ec0 <I2C_WaitOnSTOPFlagUntilTimeout>
900082e2:	2800      	cmp	r0, #0
900082e4:	f47f af3c 	bne.w	90008160 <HAL_I2C_Mem_Write+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900082e8:	6823      	ldr	r3, [r4, #0]
900082ea:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
900082ec:	4d09      	ldr	r5, [pc, #36]	@ (90008314 <HAL_I2C_Mem_Write+0x1f8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900082ee:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
900082f0:	685a      	ldr	r2, [r3, #4]
900082f2:	402a      	ands	r2, r5
900082f4:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
900082f6:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
900082fa:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
900082fe:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
90008302:	e72e      	b.n	90008162 <HAL_I2C_Mem_Write+0x46>
90008304:	fc009800 	.word	0xfc009800
90008308:	01002000 	.word	0x01002000
9000830c:	fc009c00 	.word	0xfc009c00
90008310:	01ff0000 	.word	0x01ff0000
90008314:	fe00e800 	.word	0xfe00e800

90008318 <HAL_I2C_Mem_Read>:
{
90008318:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000831c:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
9000831e:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
{
90008322:	b082      	sub	sp, #8
  if (hi2c->State == HAL_I2C_STATE_READY)
90008324:	2820      	cmp	r0, #32
{
90008326:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
9000832a:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
  if (hi2c->State == HAL_I2C_STATE_READY)
9000832c:	d11e      	bne.n	9000836c <HAL_I2C_Mem_Read+0x54>
    if ((pData == NULL) || (Size == 0U))
9000832e:	4698      	mov	r8, r3
90008330:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90008332:	b1bb      	cbz	r3, 90008364 <HAL_I2C_Mem_Read+0x4c>
90008334:	f1ba 0f00 	cmp.w	sl, #0
90008338:	d014      	beq.n	90008364 <HAL_I2C_Mem_Read+0x4c>
    __HAL_LOCK(hi2c);
9000833a:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
9000833e:	2b01      	cmp	r3, #1
90008340:	d014      	beq.n	9000836c <HAL_I2C_Mem_Read+0x54>
90008342:	2301      	movs	r3, #1
90008344:	460d      	mov	r5, r1
90008346:	4691      	mov	r9, r2
90008348:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    tickstart = HAL_GetTick();
9000834c:	f7fe fb4e 	bl	900069ec <HAL_GetTick>
90008350:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
90008352:	4620      	mov	r0, r4
90008354:	4631      	mov	r1, r6
90008356:	f7ff fb91 	bl	90007a7c <I2C_WaitOnFlagUntilTimeout.constprop.0>
9000835a:	b158      	cbz	r0, 90008374 <HAL_I2C_Mem_Read+0x5c>
      return  HAL_ERROR;
9000835c:	2001      	movs	r0, #1
}
9000835e:	b002      	add	sp, #8
90008360:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90008364:	f44f 7300 	mov.w	r3, #512	@ 0x200
90008368:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
9000836a:	e7f7      	b.n	9000835c <HAL_I2C_Mem_Read+0x44>
    __HAL_LOCK(hi2c);
9000836c:	2002      	movs	r0, #2
}
9000836e:	b002      	add	sp, #8
90008370:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->pBuffPtr  = pData;
90008374:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
90008376:	f3c5 0509 	ubfx	r5, r5, #0, #10
  MODIFY_REG(hi2c->Instance->CR2, \
9000837a:	6822      	ldr	r2, [r4, #0]
    hi2c->pBuffPtr  = pData;
9000837c:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
9000837e:	2322      	movs	r3, #34	@ 0x22
  MODIFY_REG(hi2c->Instance->CR2, \
90008380:	495f      	ldr	r1, [pc, #380]	@ (90008500 <HAL_I2C_Mem_Read+0x1e8>)
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
90008382:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90008386:	2340      	movs	r3, #64	@ 0x40
    hi2c->XferISR   = NULL;
90008388:	6360      	str	r0, [r4, #52]	@ 0x34
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000838a:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000838e:	6460      	str	r0, [r4, #68]	@ 0x44
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008390:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
90008392:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008396:	6853      	ldr	r3, [r2, #4]
90008398:	400b      	ands	r3, r1
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000839a:	fa5f f188 	uxtb.w	r1, r8
  MODIFY_REG(hi2c->Instance->CR2, \
9000839e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900083a2:	4639      	mov	r1, r7
  MODIFY_REG(hi2c->Instance->CR2, \
900083a4:	432b      	orrs	r3, r5
900083a6:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
900083aa:	6053      	str	r3, [r2, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900083ac:	4632      	mov	r2, r6
900083ae:	f7ff fc05 	bl	90007bbc <I2C_WaitOnTXISFlagUntilTimeout>
900083b2:	2800      	cmp	r0, #0
900083b4:	d177      	bne.n	900084a6 <HAL_I2C_Mem_Read+0x18e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
900083b6:	f1b8 0f01 	cmp.w	r8, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
900083ba:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
900083bc:	d16a      	bne.n	90008494 <HAL_I2C_Mem_Read+0x17c>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
900083be:	fa5f f289 	uxtb.w	r2, r9
900083c2:	629a      	str	r2, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
900083c4:	463b      	mov	r3, r7
900083c6:	2200      	movs	r2, #0
900083c8:	2140      	movs	r1, #64	@ 0x40
900083ca:	4620      	mov	r0, r4
900083cc:	9600      	str	r6, [sp, #0]
900083ce:	f7ff fcab 	bl	90007d28 <I2C_WaitOnFlagUntilTimeout>
900083d2:	2800      	cmp	r0, #0
900083d4:	d167      	bne.n	900084a6 <HAL_I2C_Mem_Read+0x18e>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
900083d6:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900083d8:	6822      	ldr	r2, [r4, #0]
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
900083da:	b29b      	uxth	r3, r3
900083dc:	2bff      	cmp	r3, #255	@ 0xff
900083de:	d966      	bls.n	900084ae <HAL_I2C_Mem_Read+0x196>
  MODIFY_REG(hi2c->Instance->CR2, \
900083e0:	6853      	ldr	r3, [r2, #4]
900083e2:	4947      	ldr	r1, [pc, #284]	@ (90008500 <HAL_I2C_Mem_Read+0x1e8>)
900083e4:	400b      	ands	r3, r1
900083e6:	4947      	ldr	r1, [pc, #284]	@ (90008504 <HAL_I2C_Mem_Read+0x1ec>)
900083e8:	432b      	orrs	r3, r5
900083ea:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
900083ec:	23ff      	movs	r3, #255	@ 0xff
900083ee:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
900083f0:	6051      	str	r1, [r2, #4]
}
900083f2:	e003      	b.n	900083fc <HAL_I2C_Mem_Read+0xe4>
    } while (hi2c->XferCount > 0U);
900083f4:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
900083f6:	b29b      	uxth	r3, r3
900083f8:	2b00      	cmp	r3, #0
900083fa:	d06b      	beq.n	900084d4 <HAL_I2C_Mem_Read+0x1bc>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
900083fc:	463b      	mov	r3, r7
900083fe:	2200      	movs	r2, #0
90008400:	2104      	movs	r1, #4
90008402:	4620      	mov	r0, r4
90008404:	9600      	str	r6, [sp, #0]
90008406:	f7ff fc8f 	bl	90007d28 <I2C_WaitOnFlagUntilTimeout>
9000840a:	2800      	cmp	r0, #0
9000840c:	d1a6      	bne.n	9000835c <HAL_I2C_Mem_Read+0x44>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
9000840e:	6821      	ldr	r1, [r4, #0]
90008410:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90008412:	6a49      	ldr	r1, [r1, #36]	@ 0x24
90008414:	7019      	strb	r1, [r3, #0]
      hi2c->XferCount--;
90008416:	f8b4 c02a 	ldrh.w	ip, [r4, #42]	@ 0x2a
      hi2c->pBuffPtr++;
9000841a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
      hi2c->XferCount--;
9000841c:	f10c 3cff 	add.w	ip, ip, #4294967295
      hi2c->XferSize--;
90008420:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      hi2c->pBuffPtr++;
90008422:	3101      	adds	r1, #1
      hi2c->XferCount--;
90008424:	fa1f fc8c 	uxth.w	ip, ip
      hi2c->XferSize--;
90008428:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
9000842a:	6261      	str	r1, [r4, #36]	@ 0x24
      hi2c->XferCount--;
9000842c:	f8a4 c02a 	strh.w	ip, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
90008430:	b29b      	uxth	r3, r3
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90008432:	8d61      	ldrh	r1, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
90008434:	8523      	strh	r3, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90008436:	b289      	uxth	r1, r1
90008438:	2900      	cmp	r1, #0
9000843a:	d0db      	beq.n	900083f4 <HAL_I2C_Mem_Read+0xdc>
9000843c:	2b00      	cmp	r3, #0
9000843e:	d1d9      	bne.n	900083f4 <HAL_I2C_Mem_Read+0xdc>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
90008440:	4602      	mov	r2, r0
90008442:	463b      	mov	r3, r7
90008444:	2180      	movs	r1, #128	@ 0x80
90008446:	4620      	mov	r0, r4
90008448:	9600      	str	r6, [sp, #0]
9000844a:	f7ff fc6d 	bl	90007d28 <I2C_WaitOnFlagUntilTimeout>
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000844e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
90008452:	2800      	cmp	r0, #0
90008454:	d182      	bne.n	9000835c <HAL_I2C_Mem_Read+0x44>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008456:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008458:	f8df e0b8 	ldr.w	lr, [pc, #184]	@ 90008514 <HAL_I2C_Mem_Read+0x1fc>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000845c:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
9000845e:	492a      	ldr	r1, [pc, #168]	@ (90008508 <HAL_I2C_Mem_Read+0x1f0>)
90008460:	4670      	mov	r0, lr
90008462:	6822      	ldr	r2, [r4, #0]
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008464:	4563      	cmp	r3, ip
90008466:	d908      	bls.n	9000847a <HAL_I2C_Mem_Read+0x162>
  MODIFY_REG(hi2c->Instance->CR2, \
90008468:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000846a:	f8a4 c028 	strh.w	ip, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000846e:	ea03 030e 	and.w	r3, r3, lr
90008472:	432b      	orrs	r3, r5
90008474:	4319      	orrs	r1, r3
90008476:	6051      	str	r1, [r2, #4]
}
90008478:	e7bc      	b.n	900083f4 <HAL_I2C_Mem_Read+0xdc>
          hi2c->XferSize = hi2c->XferCount;
9000847a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000847c:	6851      	ldr	r1, [r2, #4]
          hi2c->XferSize = hi2c->XferCount;
9000847e:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90008480:	4001      	ands	r1, r0
          hi2c->XferSize = hi2c->XferCount;
90008482:	8523      	strh	r3, [r4, #40]	@ 0x28
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008484:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90008486:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
9000848a:	430b      	orrs	r3, r1
9000848c:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
90008490:	6053      	str	r3, [r2, #4]
}
90008492:	e7af      	b.n	900083f4 <HAL_I2C_Mem_Read+0xdc>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90008494:	ea4f 2219 	mov.w	r2, r9, lsr #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008498:	4639      	mov	r1, r7
9000849a:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000849c:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000849e:	4632      	mov	r2, r6
900084a0:	f7ff fb8c 	bl	90007bbc <I2C_WaitOnTXISFlagUntilTimeout>
900084a4:	b188      	cbz	r0, 900084ca <HAL_I2C_Mem_Read+0x1b2>
      __HAL_UNLOCK(hi2c);
900084a6:	2300      	movs	r3, #0
900084a8:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
900084ac:	e756      	b.n	9000835c <HAL_I2C_Mem_Read+0x44>
      hi2c->XferSize = hi2c->XferCount;
900084ae:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900084b0:	4813      	ldr	r0, [pc, #76]	@ (90008500 <HAL_I2C_Mem_Read+0x1e8>)
      hi2c->XferSize = hi2c->XferCount;
900084b2:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900084b4:	6851      	ldr	r1, [r2, #4]
      hi2c->XferSize = hi2c->XferCount;
900084b6:	8523      	strh	r3, [r4, #40]	@ 0x28
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
900084b8:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900084ba:	4001      	ands	r1, r0
900084bc:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
900084c0:	430b      	orrs	r3, r1
900084c2:	4912      	ldr	r1, [pc, #72]	@ (9000850c <HAL_I2C_Mem_Read+0x1f4>)
900084c4:	4319      	orrs	r1, r3
900084c6:	6051      	str	r1, [r2, #4]
}
900084c8:	e798      	b.n	900083fc <HAL_I2C_Mem_Read+0xe4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
900084ca:	fa5f f289 	uxtb.w	r2, r9
900084ce:	6823      	ldr	r3, [r4, #0]
900084d0:	629a      	str	r2, [r3, #40]	@ 0x28
900084d2:	e777      	b.n	900083c4 <HAL_I2C_Mem_Read+0xac>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
900084d4:	4632      	mov	r2, r6
900084d6:	4639      	mov	r1, r7
900084d8:	4620      	mov	r0, r4
900084da:	f7ff fcf1 	bl	90007ec0 <I2C_WaitOnSTOPFlagUntilTimeout>
900084de:	2800      	cmp	r0, #0
900084e0:	f47f af3c 	bne.w	9000835c <HAL_I2C_Mem_Read+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900084e4:	6823      	ldr	r3, [r4, #0]
900084e6:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
900084e8:	4d09      	ldr	r5, [pc, #36]	@ (90008510 <HAL_I2C_Mem_Read+0x1f8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900084ea:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
900084ec:	685a      	ldr	r2, [r3, #4]
900084ee:	402a      	ands	r2, r5
900084f0:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
900084f2:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
900084f6:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
900084fa:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
900084fe:	e72e      	b.n	9000835e <HAL_I2C_Mem_Read+0x46>
90008500:	fc009800 	.word	0xfc009800
90008504:	01ff2400 	.word	0x01ff2400
90008508:	01ff0000 	.word	0x01ff0000
9000850c:	02002400 	.word	0x02002400
90008510:	fe00e800 	.word	0xfe00e800
90008514:	fc009c00 	.word	0xfc009c00

90008518 <HAL_I2C_GetState>:
  return hi2c->State;
90008518:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
}
9000851c:	4770      	bx	lr
9000851e:	bf00      	nop

90008520 <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
90008520:	6c40      	ldr	r0, [r0, #68]	@ 0x44
}
90008522:	4770      	bx	lr

90008524 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
90008524:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
90008528:	2a20      	cmp	r2, #32
9000852a:	d123      	bne.n	90008574 <HAL_I2CEx_ConfigAnalogFilter+0x50>
9000852c:	fa5f fc82 	uxtb.w	ip, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90008530:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
90008534:	4603      	mov	r3, r0
90008536:	2a01      	cmp	r2, #1
90008538:	d01c      	beq.n	90008574 <HAL_I2CEx_ConfigAnalogFilter+0x50>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
9000853a:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
9000853c:	2024      	movs	r0, #36	@ 0x24
{
9000853e:	b500      	push	{lr}
    hi2c->State = HAL_I2C_STATE_BUSY;
90008540:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90008544:	f04f 0e00 	mov.w	lr, #0
    __HAL_I2C_DISABLE(hi2c);
90008548:	6810      	ldr	r0, [r2, #0]
9000854a:	f020 0001 	bic.w	r0, r0, #1
9000854e:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
90008550:	6810      	ldr	r0, [r2, #0]
90008552:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
90008556:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
90008558:	6810      	ldr	r0, [r2, #0]
9000855a:	4301      	orrs	r1, r0

    return HAL_OK;
9000855c:	4670      	mov	r0, lr
    hi2c->Instance->CR1 |= AnalogFilter;
9000855e:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
90008560:	6811      	ldr	r1, [r2, #0]
90008562:	f041 0101 	orr.w	r1, r1, #1
90008566:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
90008568:	f883 c041 	strb.w	ip, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
9000856c:	f883 e040 	strb.w	lr, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
90008570:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_LOCK(hi2c);
90008574:	2002      	movs	r0, #2
}
90008576:	4770      	bx	lr

90008578 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
90008578:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
9000857c:	2a20      	cmp	r2, #32
9000857e:	d122      	bne.n	900085c6 <HAL_I2CEx_ConfigDigitalFilter+0x4e>
90008580:	4603      	mov	r3, r0
{
90008582:	b500      	push	{lr}
90008584:	fa5f fe82 	uxtb.w	lr, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90008588:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
9000858c:	2a01      	cmp	r2, #1
9000858e:	d01c      	beq.n	900085ca <HAL_I2CEx_ConfigDigitalFilter+0x52>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
90008590:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
90008592:	2024      	movs	r0, #36	@ 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90008594:	f04f 0c00 	mov.w	ip, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
90008598:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
    __HAL_I2C_DISABLE(hi2c);
9000859c:	6810      	ldr	r0, [r2, #0]
9000859e:	f020 0001 	bic.w	r0, r0, #1
900085a2:	6010      	str	r0, [r2, #0]
    tmpreg = hi2c->Instance->CR1;
900085a4:	6810      	ldr	r0, [r2, #0]
    tmpreg &= ~(I2C_CR1_DNF);
900085a6:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00
    tmpreg |= DigitalFilter << 8U;
900085aa:	ea40 2101 	orr.w	r1, r0, r1, lsl #8

    return HAL_OK;
900085ae:	4660      	mov	r0, ip
    hi2c->Instance->CR1 = tmpreg;
900085b0:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
900085b2:	6811      	ldr	r1, [r2, #0]
900085b4:	f041 0101 	orr.w	r1, r1, #1
900085b8:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
900085ba:	f883 e041 	strb.w	lr, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
900085be:	f883 c040 	strb.w	ip, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
900085c2:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_LOCK(hi2c);
900085c6:	2002      	movs	r0, #2
}
900085c8:	4770      	bx	lr
    __HAL_LOCK(hi2c);
900085ca:	2002      	movs	r0, #2
}
900085cc:	f85d fb04 	ldr.w	pc, [sp], #4

900085d0 <JPEG_Bits_To_SizeCodes>:
  * @param  Huffcode pointer to codes table
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode, uint32_t *LastK)
{
900085d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900085d4:	4681      	mov	r9, r0
900085d6:	460d      	mov	r5, r1
900085d8:	4614      	mov	r4, r2
900085da:	469a      	mov	sl, r3

  /* Figure C.1: Generation of table of Huffman code sizes */
  p = 0;
  for (l = 0; l < 16UL; l++)
  {
    i = (uint32_t)Bits[l];
900085dc:	7806      	ldrb	r6, [r0, #0]
900085de:	2701      	movs	r7, #1
  p = 0;
900085e0:	f04f 0800 	mov.w	r8, #0
900085e4:	e006      	b.n	900085f4 <JPEG_Bits_To_SizeCodes+0x24>
    i = (uint32_t)Bits[l];
900085e6:	f819 6f01 	ldrb.w	r6, [r9, #1]!
    if ((p + i) > 256UL)
900085ea:	eb06 0308 	add.w	r3, r6, r8
900085ee:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
900085f2:	d83c      	bhi.n	9000866e <JPEG_Bits_To_SizeCodes+0x9e>
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
    {
      Huffsize[p] = (uint8_t) l + 1U;
900085f4:	4632      	mov	r2, r6
900085f6:	4639      	mov	r1, r7
900085f8:	eb05 0008 	add.w	r0, r5, r8
    while (i != 0UL)
900085fc:	b116      	cbz	r6, 90008604 <JPEG_Bits_To_SizeCodes+0x34>
900085fe:	44b0      	add	r8, r6
      Huffsize[p] = (uint8_t) l + 1U;
90008600:	f022 f946 	bl	9002a890 <memset>
  for (l = 0; l < 16UL; l++)
90008604:	2f10      	cmp	r7, #16
    if ((p + i) > 256UL)
90008606:	f107 0701 	add.w	r7, r7, #1
  for (l = 0; l < 16UL; l++)
9000860a:	d1ec      	bne.n	900085e6 <JPEG_Bits_To_SizeCodes+0x16>
      p++;
      i--;
    }
  }
  Huffsize[p] = 0;
9000860c:	f04f 0900 	mov.w	r9, #0
90008610:	f805 9008 	strb.w	r9, [r5, r8]
  *LastK = p;
90008614:	f8ca 8000 	str.w	r8, [sl]

  /* Figure C.2: Generation of table of Huffman codes */
  code = 0;
  si = Huffsize[0];
90008618:	7829      	ldrb	r1, [r5, #0]
9000861a:	460a      	mov	r2, r1
  p = 0;
  while (Huffsize[p] != 0U)
9000861c:	b321      	cbz	r1, 90008668 <JPEG_Bits_To_SizeCodes+0x98>
9000861e:	f06f 4840 	mvn.w	r8, #3221225472	@ 0xc0000000
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if(si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
90008622:	2701      	movs	r7, #1
  p = 0;
90008624:	464e      	mov	r6, r9
    while (((uint32_t) Huffsize[p]) == si)
90008626:	4291      	cmp	r1, r2
90008628:	d124      	bne.n	90008674 <JPEG_Bits_To_SizeCodes+0xa4>
9000862a:	eb06 0008 	add.w	r0, r6, r8
9000862e:	eb05 0c06 	add.w	ip, r5, r6
90008632:	464b      	mov	r3, r9
90008634:	eb04 0080 	add.w	r0, r4, r0, lsl #2
      Huffcode[p] = code;
90008638:	f840 3f04 	str.w	r3, [r0, #4]!
      code++;
9000863c:	4619      	mov	r1, r3
    while (((uint32_t) Huffsize[p]) == si)
9000863e:	f81c ef01 	ldrb.w	lr, [ip, #1]!
      code++;
90008642:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[p]) == si)
90008644:	4596      	cmp	lr, r2
90008646:	d0f7      	beq.n	90008638 <JPEG_Bits_To_SizeCodes+0x68>
90008648:	3601      	adds	r6, #1
9000864a:	eba6 0609 	sub.w	r6, r6, r9
      p++;
9000864e:	440e      	add	r6, r1
    if(si > 31UL)
90008650:	2a1f      	cmp	r2, #31
90008652:	d80c      	bhi.n	9000866e <JPEG_Bits_To_SizeCodes+0x9e>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
90008654:	fa07 f102 	lsl.w	r1, r7, r2
90008658:	4299      	cmp	r1, r3
9000865a:	d908      	bls.n	9000866e <JPEG_Bits_To_SizeCodes+0x9e>
  while (Huffsize[p] != 0U)
9000865c:	5da9      	ldrb	r1, [r5, r6]
    {
      return HAL_ERROR;
    }
    code <<= 1;
9000865e:	ea4f 0943 	mov.w	r9, r3, lsl #1
    si++;
90008662:	3201      	adds	r2, #1
  while (Huffsize[p] != 0U)
90008664:	2900      	cmp	r1, #0
90008666:	d1de      	bne.n	90008626 <JPEG_Bits_To_SizeCodes+0x56>
  }
  /* Return function status */
  return HAL_OK;
90008668:	2000      	movs	r0, #0
}
9000866a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      return HAL_ERROR;
9000866e:	2001      	movs	r0, #1
}
90008670:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while (((uint32_t) Huffsize[p]) == si)
90008674:	464b      	mov	r3, r9
90008676:	e7eb      	b.n	90008650 <JPEG_Bits_To_SizeCodes+0x80>

90008678 <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
90008678:	b5f0      	push	{r4, r5, r6, r7, lr}
9000867a:	f2ad 5d14 	subw	sp, sp, #1300	@ 0x514
9000867e:	460d      	mov	r5, r1
90008680:	4604      	mov	r4, r0
  uint32_t k;
  uint32_t l;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
90008682:	ab01      	add	r3, sp, #4
90008684:	aa43      	add	r2, sp, #268	@ 0x10c
90008686:	a902      	add	r1, sp, #8
90008688:	f7ff ffa2 	bl	900085d0 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
9000868c:	b9d0      	cbnz	r0, 900086c4 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
9000868e:	9f01      	ldr	r7, [sp, #4]
90008690:	b1c7      	cbz	r7, 900086c4 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
90008692:	370f      	adds	r7, #15
90008694:	f50d 7e86 	add.w	lr, sp, #268	@ 0x10c
90008698:	a902      	add	r1, sp, #8
9000869a:	f104 0c0f 	add.w	ip, r4, #15
9000869e:	4427      	add	r7, r4
900086a0:	e009      	b.n	900086b6 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x3e>
      return HAL_ERROR; /* Huffman Table overflow error*/
    }
    else
    {
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
900086a2:	f811 2b01 	ldrb.w	r2, [r1], #1
  while (k < lastK)
900086a6:	45bc      	cmp	ip, r7
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
900086a8:	f85e 6b04 	ldr.w	r6, [lr], #4
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
900086ac:	f102 32ff 	add.w	r2, r2, #4294967295
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
900086b0:	60e6      	str	r6, [r4, #12]
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
900086b2:	54ea      	strb	r2, [r5, r3]
  while (k < lastK)
900086b4:	d006      	beq.n	900086c4 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    l = DC_BitsValsTable->HuffVal[k];
900086b6:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
900086ba:	2b0b      	cmp	r3, #11
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
900086bc:	eb05 0483 	add.w	r4, r5, r3, lsl #2
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
900086c0:	d9ef      	bls.n	900086a2 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2a>
      return HAL_ERROR; /* Huffman Table overflow error*/
900086c2:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
900086c4:	f20d 5d14 	addw	sp, sp, #1300	@ 0x514
900086c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
900086ca:	bf00      	nop

900086cc <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
900086cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t i;
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address, *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
900086d0:	6804      	ldr	r4, [r0, #0]
{
900086d2:	b093      	sub	sp, #76	@ 0x4c
900086d4:	4608      	mov	r0, r1
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
900086d6:	f504 63f8 	add.w	r3, r4, #1984	@ 0x7c0
900086da:	429a      	cmp	r2, r3
900086dc:	f000 809d 	beq.w	9000881a <JPEG_Set_HuffDC_Mem+0x14e>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
900086e0:	f504 63fc 	add.w	r3, r4, #2016	@ 0x7e0
900086e4:	429a      	cmp	r2, r3
900086e6:	d003      	beq.n	900086f0 <JPEG_Set_HuffDC_Mem+0x24>
  {
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
900086e8:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
900086ea:	b013      	add	sp, #76	@ 0x4c
900086ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
900086f0:	f504 64ff 	add.w	r4, r4, #2040	@ 0x7f8
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
900086f4:	a903      	add	r1, sp, #12
900086f6:	f7ff ffbf 	bl	90008678 <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
900086fa:	2800      	cmp	r0, #0
900086fc:	d1f5      	bne.n	900086ea <JPEG_Set_HuffDC_Mem+0x1e>
    *addressDef = 0x0FFF0FFF;
900086fe:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008702:	f89d a017 	ldrb.w	sl, [sp, #23]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008706:	f89d e016 	ldrb.w	lr, [sp, #22]
    *addressDef = 0x0FFF0FFF;
9000870a:	6023      	str	r3, [r4, #0]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000870c:	ea4f 2a0a 	mov.w	sl, sl, lsl #8
    *addressDef = 0x0FFF0FFF;
90008710:	6063      	str	r3, [r4, #4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008712:	ea4f 2e0e 	mov.w	lr, lr, lsl #8
90008716:	f89d 300e 	ldrb.w	r3, [sp, #14]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000871a:	f40a 6a70 	and.w	sl, sl, #3840	@ 0xf00
9000871e:	f89d 2044 	ldrb.w	r2, [sp, #68]	@ 0x44
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008722:	f40e 6e70 	and.w	lr, lr, #3840	@ 0xf00
90008726:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008728:	f89d 9015 	ldrb.w	r9, [sp, #21]
9000872c:	ea4a 0a02 	orr.w	sl, sl, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008730:	f89d c014 	ldrb.w	ip, [sp, #20]
90008734:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008738:	ea4f 2909 	mov.w	r9, r9, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000873c:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008740:	f89d 8013 	ldrb.w	r8, [sp, #19]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008744:	9301      	str	r3, [sp, #4]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008746:	f409 6970 	and.w	r9, r9, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000874a:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
9000874e:	f40c 6c70 	and.w	ip, ip, #3840	@ 0xf00
90008752:	f89d 1012 	ldrb.w	r1, [sp, #18]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008756:	ea4f 2808 	mov.w	r8, r8, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000875a:	ea4e 0e03 	orr.w	lr, lr, r3
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000875e:	f89d 7011 	ldrb.w	r7, [sp, #17]
90008762:	f408 6870 	and.w	r8, r8, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008766:	0209      	lsls	r1, r1, #8
      *address = lsb | (msb << 16);
90008768:	ea4e 4e0a 	orr.w	lr, lr, sl, lsl #16
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000876c:	f89d 2010 	ldrb.w	r2, [sp, #16]
90008770:	f401 6170 	and.w	r1, r1, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008774:	023f      	lsls	r7, r7, #8
      *address = lsb | (msb << 16);
90008776:	f844 ec04 	str.w	lr, [r4, #-4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000877a:	0212      	lsls	r2, r2, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000877c:	f89d e03c 	ldrb.w	lr, [sp, #60]	@ 0x3c
90008780:	f407 6770 	and.w	r7, r7, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008784:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008788:	f89d 600f 	ldrb.w	r6, [sp, #15]
9000878c:	ea49 090e 	orr.w	r9, r9, lr
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008790:	f89d e038 	ldrb.w	lr, [sp, #56]	@ 0x38
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008794:	0236      	lsls	r6, r6, #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008796:	9b01      	ldr	r3, [sp, #4]
90008798:	ea4c 0c0e 	orr.w	ip, ip, lr
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000879c:	f89d 500d 	ldrb.w	r5, [sp, #13]
900087a0:	f406 6670 	and.w	r6, r6, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900087a4:	f89d b00c 	ldrb.w	fp, [sp, #12]
      *address = lsb | (msb << 16);
900087a8:	ea4c 4c09 	orr.w	ip, ip, r9, lsl #16
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900087ac:	022d      	lsls	r5, r5, #8
      *address = lsb | (msb << 16);
900087ae:	f844 cc08 	str.w	ip, [r4, #-8]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900087b2:	ea4f 2b0b 	mov.w	fp, fp, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900087b6:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
900087ba:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900087be:	f40b 6b70 	and.w	fp, fp, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900087c2:	ea48 080c 	orr.w	r8, r8, ip
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900087c6:	f89d c030 	ldrb.w	ip, [sp, #48]	@ 0x30
900087ca:	ea41 010c 	orr.w	r1, r1, ip
      *address = lsb | (msb << 16);
900087ce:	ea41 4108 	orr.w	r1, r1, r8, lsl #16
900087d2:	f844 1c0c 	str.w	r1, [r4, #-12]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900087d6:	f89d 102c 	ldrb.w	r1, [sp, #44]	@ 0x2c
900087da:	430f      	orrs	r7, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900087dc:	f89d 1028 	ldrb.w	r1, [sp, #40]	@ 0x28
900087e0:	430a      	orrs	r2, r1
      *address = lsb | (msb << 16);
900087e2:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
900087e6:	f844 2c10 	str.w	r2, [r4, #-16]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900087ea:	f89d 2024 	ldrb.w	r2, [sp, #36]	@ 0x24
900087ee:	4316      	orrs	r6, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900087f0:	f89d 2020 	ldrb.w	r2, [sp, #32]
900087f4:	4313      	orrs	r3, r2
      *address = lsb | (msb << 16);
900087f6:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
900087fa:	f844 3c14 	str.w	r3, [r4, #-20]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900087fe:	f89d 301c 	ldrb.w	r3, [sp, #28]
90008802:	431d      	orrs	r5, r3
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008804:	f89d 3018 	ldrb.w	r3, [sp, #24]
90008808:	ea4b 0303 	orr.w	r3, fp, r3
      *address = lsb | (msb << 16);
9000880c:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
90008810:	f844 3c18 	str.w	r3, [r4, #-24]
}
90008814:	b013      	add	sp, #76	@ 0x4c
90008816:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
9000881a:	f504 64fb 	add.w	r4, r4, #2008	@ 0x7d8
  if (HuffTableDC != NULL)
9000881e:	e769      	b.n	900086f4 <JPEG_Set_HuffDC_Mem+0x28>

90008820 <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
90008820:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_StatusTypeDef error;
  JPEG_AC_HuffCodeTableTypeDef acSizeCodesTable;
  uint32_t i, lsb, msb;
  __IO uint32_t *address, *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
90008824:	6804      	ldr	r4, [r0, #0]
{
90008826:	f6ad 0d3c 	subw	sp, sp, #2108	@ 0x83c
9000882a:	460d      	mov	r5, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
9000882c:	f504 63a0 	add.w	r3, r4, #1280	@ 0x500
90008830:	429a      	cmp	r2, r3
90008832:	d041      	beq.n	900088b8 <JPEG_Set_HuffAC_Mem+0x98>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
90008834:	f504 63cc 	add.w	r3, r4, #1632	@ 0x660
90008838:	429a      	cmp	r2, r3
9000883a:	d004      	beq.n	90008846 <JPEG_Set_HuffAC_Mem+0x26>
  {
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
9000883c:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000883e:	f60d 0d3c 	addw	sp, sp, #2108	@ 0x83c
90008842:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
90008846:	f204 74a4 	addw	r4, r4, #1956	@ 0x7a4
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
9000884a:	4628      	mov	r0, r5
9000884c:	466b      	mov	r3, sp
9000884e:	f20d 4234 	addw	r2, sp, #1076	@ 0x434
90008852:	a901      	add	r1, sp, #4
90008854:	f7ff febc 	bl	900085d0 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
90008858:	2800      	cmp	r0, #0
9000885a:	d1f0      	bne.n	9000883e <JPEG_Set_HuffAC_Mem+0x1e>
  while (k < lastK)
9000885c:	9b00      	ldr	r3, [sp, #0]
9000885e:	b373      	cbz	r3, 900088be <JPEG_Set_HuffAC_Mem+0x9e>
90008860:	330f      	adds	r3, #15
90008862:	f20d 4c34 	addw	ip, sp, #1076	@ 0x434
90008866:	af01      	add	r7, sp, #4
90008868:	f105 020f 	add.w	r2, r5, #15
9000886c:	eb05 0e03 	add.w	lr, r5, r3
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008870:	ae42      	add	r6, sp, #264	@ 0x108
90008872:	e011      	b.n	90008898 <JPEG_Set_HuffAC_Mem+0x78>
      l = (msb * 10UL) + lsb - 1UL;
90008874:	eb03 0345 	add.w	r3, r3, r5, lsl #1
    if (l >= JPEG_AC_HUFF_TABLE_SIZE)
90008878:	2ba1      	cmp	r3, #161	@ 0xa1
9000887a:	d8df      	bhi.n	9000883c <JPEG_Set_HuffAC_Mem+0x1c>
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000887c:	f817 5b01 	ldrb.w	r5, [r7], #1
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008880:	eb06 0883 	add.w	r8, r6, r3, lsl #2
90008884:	f85c 1b04 	ldr.w	r1, [ip], #4
  while (k < lastK)
90008888:	4572      	cmp	r2, lr
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000888a:	f105 35ff 	add.w	r5, r5, #4294967295
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000888e:	46b1      	mov	r9, r6
90008890:	f8c8 10a4 	str.w	r1, [r8, #164]	@ 0xa4
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008894:	54f5      	strb	r5, [r6, r3]
  while (k < lastK)
90008896:	d014      	beq.n	900088c2 <JPEG_Set_HuffAC_Mem+0xa2>
    l = AC_BitsValsTable->HuffVal[k];
90008898:	f812 1f01 	ldrb.w	r1, [r2, #1]!
      l = 160; /*l = 0x00 EOB code*/
9000889c:	23a0      	movs	r3, #160	@ 0xa0
    if (l == 0UL)
9000889e:	2900      	cmp	r1, #0
900088a0:	d0ec      	beq.n	9000887c <JPEG_Set_HuffAC_Mem+0x5c>
      msb = (l & 0xF0UL) >> 4;
900088a2:	090d      	lsrs	r5, r1, #4
      lsb = (l & 0x0FUL);
900088a4:	f001 030f 	and.w	r3, r1, #15
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
900088a8:	29f0      	cmp	r1, #240	@ 0xf0
      l = (msb * 10UL) + lsb - 1UL;
900088aa:	eb05 0585 	add.w	r5, r5, r5, lsl #2
900088ae:	f103 33ff 	add.w	r3, r3, #4294967295
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
900088b2:	d1df      	bne.n	90008874 <JPEG_Set_HuffAC_Mem+0x54>
      l = 161;
900088b4:	23a1      	movs	r3, #161	@ 0xa1
900088b6:	e7e1      	b.n	9000887c <JPEG_Set_HuffAC_Mem+0x5c>
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
900088b8:	f204 6444 	addw	r4, r4, #1604	@ 0x644
  if (HuffTableAC != NULL)
900088bc:	e7c5      	b.n	9000884a <JPEG_Set_HuffAC_Mem+0x2a>
900088be:	f50d 7984 	add.w	r9, sp, #264	@ 0x108
      *addressDef = 0x0FFF0FFF;
900088c2:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
    *addressDef = 0x0FD10FD0;
900088c6:	4a1a      	ldr	r2, [pc, #104]	@ (90008930 <JPEG_Set_HuffAC_Mem+0x110>)
900088c8:	eba9 0c89 	sub.w	ip, r9, r9, lsl #2
900088cc:	4649      	mov	r1, r9
      *addressDef = 0x0FFF0FFF;
900088ce:	6023      	str	r3, [r4, #0]
900088d0:	f10d 0566 	add.w	r5, sp, #102	@ 0x66
900088d4:	6063      	str	r3, [r4, #4]
900088d6:	f50c 7e4a 	add.w	lr, ip, #808	@ 0x328
900088da:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD30FD2;
900088dc:	f103 33d3 	add.w	r3, r3, #3553874899	@ 0xd3d3d3d3
    *addressDef = 0x0FD10FD0;
900088e0:	60e2      	str	r2, [r4, #12]
    *addressDef = 0x0FD30FD2;
900088e2:	f50c 7c49 	add.w	ip, ip, #804	@ 0x324
900088e6:	f103 232c 	add.w	r3, r3, #738208768	@ 0x2c002c00
900088ea:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
900088ec:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
900088f0:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
900088f2:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
900088f6:	61a3      	str	r3, [r4, #24]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900088f8:	f891 20a1 	ldrb.w	r2, [r1, #161]	@ 0xa1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900088fc:	f891 30a0 	ldrb.w	r3, [r1, #160]	@ 0xa0
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90008900:	0212      	lsls	r2, r2, #8
90008902:	f81e 7021 	ldrb.w	r7, [lr, r1, lsl #2]
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90008906:	021b      	lsls	r3, r3, #8
90008908:	f81c 6021 	ldrb.w	r6, [ip, r1, lsl #2]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000890c:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    while (i > 1UL)
90008910:	3902      	subs	r1, #2
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90008912:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90008916:	433a      	orrs	r2, r7
    while (i > 1UL)
90008918:	42a9      	cmp	r1, r5
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000891a:	ea43 0306 	orr.w	r3, r3, r6
      *address = lsb | (msb << 16);
9000891e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90008922:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
90008926:	d1e7      	bne.n	900088f8 <JPEG_Set_HuffAC_Mem+0xd8>
}
90008928:	f60d 0d3c 	addw	sp, sp, #2108	@ 0x83c
9000892c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90008930:	0fd10fd0 	.word	0x0fd10fd0

90008934 <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
90008934:	6d42      	ldr	r2, [r0, #84]	@ 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
90008936:	6803      	ldr	r3, [r0, #0]
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
90008938:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
9000893c:	6542      	str	r2, [r0, #84]	@ 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000893e:	6d42      	ldr	r2, [r0, #84]	@ 0x54
90008940:	f002 0203 	and.w	r2, r2, #3
90008944:	2a02      	cmp	r2, #2
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
90008946:	685a      	ldr	r2, [r3, #4]
90008948:	bf0c      	ite	eq
9000894a:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
9000894e:	f022 0208 	bicne.w	r2, r2, #8
90008952:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90008954:	681a      	ldr	r2, [r3, #0]
90008956:	f022 0201 	bic.w	r2, r2, #1
9000895a:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000895c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000895e:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90008962:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
90008964:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90008966:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
9000896a:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000896c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000896e:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90008972:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90008974:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90008976:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000897a:	639a      	str	r2, [r3, #56]	@ 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
9000897c:	681a      	ldr	r2, [r3, #0]
9000897e:	f042 0201 	orr.w	r2, r2, #1
90008982:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90008984:	6d42      	ldr	r2, [r0, #84]	@ 0x54
90008986:	f002 020c 	and.w	r2, r2, #12
9000898a:	2a08      	cmp	r2, #8
9000898c:	d00a      	beq.n	900089a4 <JPEG_Init_Process+0x70>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000898e:	6d42      	ldr	r2, [r0, #84]	@ 0x54
90008990:	f002 020c 	and.w	r2, r2, #12
90008994:	2a0c      	cmp	r2, #12
90008996:	d000      	beq.n	9000899a <JPEG_Init_Process+0x66>
  }
  else
  {
    /* Nothing to do */
  }
}
90008998:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000899a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000899c:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
900089a0:	631a      	str	r2, [r3, #48]	@ 0x30
}
900089a2:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
900089a4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900089a6:	f042 026e 	orr.w	r2, r2, #110	@ 0x6e
900089aa:	631a      	str	r2, [r3, #48]	@ 0x30
900089ac:	4770      	bx	lr
900089ae:	bf00      	nop

900089b0 <JPEG_DMA_StartProcess>:
  /*if the MDMA In is triggred with JPEG In FIFO Threshold flag
      then MDMA In buffer size is 32 bytes
    else (MDMA In is triggred with JPEG In FIFO not full flag)
      then MDMA In buffer size is 4 bytes
    */
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
900089b0:	6b01      	ldr	r1, [r0, #48]	@ 0x30
    else (MDMA Out is triggred with JPEG Out FIFO not empty flag)
      then MDMA buffer size is 4 bytes
    */
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;

  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
900089b2:	6a82      	ldr	r2, [r0, #40]	@ 0x28
{
900089b4:	b5f0      	push	{r4, r5, r6, r7, lr}
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
900089b6:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
{
900089b8:	b083      	sub	sp, #12
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
900089ba:	42aa      	cmp	r2, r5
900089bc:	d32a      	bcc.n	90008a14 <JPEG_DMA_StartProcess+0x64>
900089be:	4604      	mov	r4, r0
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
900089c0:	6b40      	ldr	r0, [r0, #52]	@ 0x34
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
900089c2:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
900089c4:	6a86      	ldr	r6, [r0, #40]	@ 0x28
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
900089c6:	42b3      	cmp	r3, r6
900089c8:	d324      	bcc.n	90008a14 <JPEG_DMA_StartProcess+0x64>
    return HAL_ERROR;
  }
  /* Set the JPEG MDMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
  /* Set the MDMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
900089ca:	4f19      	ldr	r7, [pc, #100]	@ (90008a30 <JPEG_DMA_StartProcess+0x80>)
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
900089cc:	f8df c06c 	ldr.w	ip, [pc, #108]	@ 90008a3c <JPEG_DMA_StartProcess+0x8c>
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
900089d0:	654f      	str	r7, [r1, #84]	@ 0x54
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
900089d2:	f8c1 c044 	str.w	ip, [r1, #68]	@ 0x44

  /* Set the JPEG MDMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
900089d6:	4917      	ldr	r1, [pc, #92]	@ (90008a34 <JPEG_DMA_StartProcess+0x84>)
  /* Set the MDMA In error callback */
  hjpeg->hdmaout->XferErrorCallback = JPEG_MDMAErrorCallback;
900089d8:	6547      	str	r7, [r0, #84]	@ 0x54
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
900089da:	6441      	str	r1, [r0, #68]	@ 0x44
  /* Set the MDMA Out Abort callback */
  hjpeg->hdmaout->XferAbortCallback = JPEG_MDMAOutAbortCallback;
900089dc:	4916      	ldr	r1, [pc, #88]	@ (90008a38 <JPEG_DMA_StartProcess+0x88>)
900089de:	6581      	str	r1, [r0, #88]	@ 0x58

  if ((inXfrSize == 0UL) || (outXfrSize == 0UL))
900089e0:	b1a5      	cbz	r5, 90008a0c <JPEG_DMA_StartProcess+0x5c>
900089e2:	b19e      	cbz	r6, 90008a0c <JPEG_DMA_StartProcess+0x5c>
  {
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
900089e4:	fbb2 f1f5 	udiv	r1, r2, r5
900089e8:	fb05 2111 	mls	r1, r5, r1, r2
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);


  /* Start MDMA FIFO Out transfer */
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900089ec:	2501      	movs	r5, #1
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
900089ee:	1a52      	subs	r2, r2, r1
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900089f0:	6821      	ldr	r1, [r4, #0]
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
900089f2:	62a2      	str	r2, [r4, #40]	@ 0x28
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900089f4:	3144      	adds	r1, #68	@ 0x44
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);
900089f6:	fbb3 f2f6 	udiv	r2, r3, r6
900089fa:	fb06 3212 	mls	r2, r6, r2, r3
900089fe:	1a9b      	subs	r3, r3, r2
90008a00:	62e3      	str	r3, [r4, #44]	@ 0x2c
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90008a02:	9500      	str	r5, [sp, #0]
90008a04:	69e2      	ldr	r2, [r4, #28]
90008a06:	f001 fc0f 	bl	9000a228 <HAL_MDMA_Start_IT>
90008a0a:	b130      	cbz	r0, 90008a1a <JPEG_DMA_StartProcess+0x6a>
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90008a0c:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90008a0e:	f043 0304 	orr.w	r3, r3, #4
90008a12:	6523      	str	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
90008a14:	2001      	movs	r0, #1
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }

  return HAL_OK;
}
90008a16:	b003      	add	sp, #12
90008a18:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
90008a1a:	6822      	ldr	r2, [r4, #0]
90008a1c:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90008a1e:	69a1      	ldr	r1, [r4, #24]
90008a20:	3240      	adds	r2, #64	@ 0x40
90008a22:	9500      	str	r5, [sp, #0]
90008a24:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90008a26:	f001 fbff 	bl	9000a228 <HAL_MDMA_Start_IT>
90008a2a:	2800      	cmp	r0, #0
90008a2c:	d0f3      	beq.n	90008a16 <JPEG_DMA_StartProcess+0x66>
90008a2e:	e7ed      	b.n	90008a0c <JPEG_DMA_StartProcess+0x5c>
90008a30:	9000902d 	.word	0x9000902d
90008a34:	900092a1 	.word	0x900092a1
90008a38:	90009321 	.word	0x90009321
90008a3c:	90009059 	.word	0x90009059

90008a40 <HAL_JPEG_GetInfo.part.0>:
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
90008a40:	6803      	ldr	r3, [r0, #0]
90008a42:	685a      	ldr	r2, [r3, #4]
90008a44:	f002 0203 	and.w	r2, r2, #3
90008a48:	2a02      	cmp	r2, #2
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008a4a:	685a      	ldr	r2, [r3, #4]
HAL_StatusTypeDef HAL_JPEG_GetInfo(JPEG_HandleTypeDef *hjpeg, JPEG_ConfTypeDef *pInfo)
90008a4c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90008a50:	4689      	mov	r9, r1
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
90008a52:	f000 80a0 	beq.w	90008b96 <HAL_JPEG_GetInfo.part.0+0x156>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
90008a56:	f012 0203 	ands.w	r2, r2, #3
90008a5a:	d177      	bne.n	90008b4c <HAL_JPEG_GetInfo.part.0+0x10c>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008a5c:	6859      	ldr	r1, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90008a5e:	f8c9 2000 	str.w	r2, [r9]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90008a62:	68da      	ldr	r2, [r3, #12]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008a64:	0c09      	lsrs	r1, r1, #16
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90008a66:	0c12      	lsrs	r2, r2, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008a68:	f8c9 1008 	str.w	r1, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90008a6c:	f8c9 200c 	str.w	r2, [r9, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
90008a70:	2100      	movs	r1, #0
90008a72:	4a5e      	ldr	r2, [pc, #376]	@ (90008bec <HAL_JPEG_GetInfo.part.0+0x1ac>)
  */
static uint32_t JPEG_GetQuality(JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
  uint32_t quantRow, quantVal, scale, i, j;
  __IO uint32_t *tableAddress = hjpeg->Instance->QMEM0;
90008a74:	f103 0c50 	add.w	ip, r3, #80	@ 0x50
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
90008a78:	f8c9 1004 	str.w	r1, [r9, #4]
  uint32_t quality = 0;
90008a7c:	2600      	movs	r6, #0
90008a7e:	f102 0440 	add.w	r4, r2, #64	@ 0x40
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90008a82:	f04f 0e64 	mov.w	lr, #100	@ 0x64
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
90008a86:	f241 3188 	movw	r1, #5000	@ 0x1388
90008a8a:	e033      	b.n	90008af4 <HAL_JPEG_GetInfo.part.0+0xb4>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90008a8c:	f892 8001 	ldrb.w	r8, [r2, #1]
90008a90:	fb0e f707 	mul.w	r7, lr, r7
90008a94:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90008a96:	f815 8008 	ldrb.w	r8, [r5, r8]
90008a9a:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90008a9e:	2f64      	cmp	r7, #100	@ 0x64
90008aa0:	d96a      	bls.n	90008b78 <HAL_JPEG_GetInfo.part.0+0x138>
          quality += 5000UL / scale;
90008aa2:	fbb1 f7f7 	udiv	r7, r1, r7
90008aa6:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008aa8:	f3c3 4707 	ubfx	r7, r3, #16, #8
      if (quantVal == 1UL)
90008aac:	2f01      	cmp	r7, #1
90008aae:	d03d      	beq.n	90008b2c <HAL_JPEG_GetInfo.part.0+0xec>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90008ab0:	f892 8002 	ldrb.w	r8, [r2, #2]
90008ab4:	fb0e f707 	mul.w	r7, lr, r7
90008ab8:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90008aba:	f815 8008 	ldrb.w	r8, [r5, r8]
90008abe:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90008ac2:	2f64      	cmp	r7, #100	@ 0x64
90008ac4:	d953      	bls.n	90008b6e <HAL_JPEG_GetInfo.part.0+0x12e>
          quality += 5000UL / scale;
90008ac6:	fbb1 f7f7 	udiv	r7, r1, r7
90008aca:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008acc:	0e1b      	lsrs	r3, r3, #24
      if (quantVal == 1UL)
90008ace:	2b01      	cmp	r3, #1
90008ad0:	d030      	beq.n	90008b34 <HAL_JPEG_GetInfo.part.0+0xf4>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90008ad2:	78d7      	ldrb	r7, [r2, #3]
90008ad4:	fb0e f303 	mul.w	r3, lr, r3
90008ad8:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90008ada:	5def      	ldrb	r7, [r5, r7]
90008adc:	fbb3 f3f7 	udiv	r3, r3, r7
        if (scale <= 100UL)
90008ae0:	2b64      	cmp	r3, #100	@ 0x64
90008ae2:	d953      	bls.n	90008b8c <HAL_JPEG_GetInfo.part.0+0x14c>
          quality += 5000UL / scale;
90008ae4:	fbb1 f3f3 	udiv	r3, r1, r3
90008ae8:	441e      	add	r6, r3
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90008aea:	3204      	adds	r2, #4
        }
      }
    }

    i += 4UL;
    tableAddress ++;
90008aec:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90008af0:	42a2      	cmp	r2, r4
90008af2:	d025      	beq.n	90008b40 <HAL_JPEG_GetInfo.part.0+0x100>
    quantRow = *tableAddress;
90008af4:	f8dc 3000 	ldr.w	r3, [ip]
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008af8:	b2df      	uxtb	r7, r3
      if (quantVal == 1UL)
90008afa:	2f01      	cmp	r7, #1
90008afc:	d035      	beq.n	90008b6a <HAL_JPEG_GetInfo.part.0+0x12a>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90008afe:	f892 8000 	ldrb.w	r8, [r2]
90008b02:	fb0e f707 	mul.w	r7, lr, r7
90008b06:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90008b08:	f815 8008 	ldrb.w	r8, [r5, r8]
90008b0c:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90008b10:	2f64      	cmp	r7, #100	@ 0x64
90008b12:	d936      	bls.n	90008b82 <HAL_JPEG_GetInfo.part.0+0x142>
          quality += 5000UL / scale;
90008b14:	fbb1 f7f7 	udiv	r7, r1, r7
90008b18:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008b1a:	f3c3 2707 	ubfx	r7, r3, #8, #8
      if (quantVal == 1UL)
90008b1e:	2f01      	cmp	r7, #1
90008b20:	d1b4      	bne.n	90008a8c <HAL_JPEG_GetInfo.part.0+0x4c>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008b22:	f3c3 4707 	ubfx	r7, r3, #16, #8
        quality += 100UL;
90008b26:	3664      	adds	r6, #100	@ 0x64
      if (quantVal == 1UL)
90008b28:	2f01      	cmp	r7, #1
90008b2a:	d1c1      	bne.n	90008ab0 <HAL_JPEG_GetInfo.part.0+0x70>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008b2c:	0e1b      	lsrs	r3, r3, #24
        quality += 100UL;
90008b2e:	3664      	adds	r6, #100	@ 0x64
      if (quantVal == 1UL)
90008b30:	2b01      	cmp	r3, #1
90008b32:	d1ce      	bne.n	90008ad2 <HAL_JPEG_GetInfo.part.0+0x92>
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90008b34:	3204      	adds	r2, #4
        quality += 100UL;
90008b36:	3664      	adds	r6, #100	@ 0x64
    tableAddress ++;
90008b38:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90008b3c:	42a2      	cmp	r2, r4
90008b3e:	d1d9      	bne.n	90008af4 <HAL_JPEG_GetInfo.part.0+0xb4>
  }

  return (quality / 64UL);
90008b40:	09b6      	lsrs	r6, r6, #6
  return HAL_OK;
90008b42:	2000      	movs	r0, #0
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
90008b44:	f8c9 6010 	str.w	r6, [r9, #16]
}
90008b48:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
90008b4c:	685a      	ldr	r2, [r3, #4]
90008b4e:	f002 0203 	and.w	r2, r2, #3
90008b52:	2a03      	cmp	r2, #3
90008b54:	d147      	bne.n	90008be6 <HAL_JPEG_GetInfo.part.0+0x1a6>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008b56:	685a      	ldr	r2, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90008b58:	2130      	movs	r1, #48	@ 0x30
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008b5a:	0c12      	lsrs	r2, r2, #16
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90008b5c:	f8c9 1000 	str.w	r1, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008b60:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90008b64:	68da      	ldr	r2, [r3, #12]
90008b66:	0c12      	lsrs	r2, r2, #16
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
90008b68:	e01d      	b.n	90008ba6 <HAL_JPEG_GetInfo.part.0+0x166>
        quality += 100UL;
90008b6a:	3664      	adds	r6, #100	@ 0x64
90008b6c:	e7d5      	b.n	90008b1a <HAL_JPEG_GetInfo.part.0+0xda>
          quality += (200UL - scale) / 2UL;
90008b6e:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
90008b72:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90008b76:	e7a9      	b.n	90008acc <HAL_JPEG_GetInfo.part.0+0x8c>
90008b78:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
90008b7c:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90008b80:	e792      	b.n	90008aa8 <HAL_JPEG_GetInfo.part.0+0x68>
90008b82:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
90008b86:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90008b8a:	e7c6      	b.n	90008b1a <HAL_JPEG_GetInfo.part.0+0xda>
90008b8c:	f1c3 03c8 	rsb	r3, r3, #200	@ 0xc8
90008b90:	eb06 0653 	add.w	r6, r6, r3, lsr #1
90008b94:	e7a9      	b.n	90008aea <HAL_JPEG_GetInfo.part.0+0xaa>
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90008b96:	2110      	movs	r1, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008b98:	40ca      	lsrs	r2, r1
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90008b9a:	f8c9 1000 	str.w	r1, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008b9e:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90008ba2:	68da      	ldr	r2, [r3, #12]
90008ba4:	40ca      	lsrs	r2, r1
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
90008ba6:	6919      	ldr	r1, [r3, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
90008ba8:	695c      	ldr	r4, [r3, #20]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
90008baa:	f3c1 1603 	ubfx	r6, r1, #4, #4
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90008bae:	f8c9 200c 	str.w	r2, [r9, #12]
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
90008bb2:	699a      	ldr	r2, [r3, #24]
90008bb4:	f004 07f0 	and.w	r7, r4, #240	@ 0xf0
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90008bb8:	2e01      	cmp	r6, #1
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
90008bba:	f3c2 1203 	ubfx	r2, r2, #4, #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90008bbe:	d105      	bne.n	90008bcc <HAL_JPEG_GetInfo.part.0+0x18c>
90008bc0:	b927      	cbnz	r7, 90008bcc <HAL_JPEG_GetInfo.part.0+0x18c>
90008bc2:	2a00      	cmp	r2, #0
90008bc4:	f47f af54 	bne.w	90008a70 <HAL_JPEG_GetInfo.part.0+0x30>
90008bc8:	2102      	movs	r1, #2
90008bca:	e752      	b.n	90008a72 <HAL_JPEG_GetInfo.part.0+0x32>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90008bcc:	4321      	orrs	r1, r4
90008bce:	f011 0ff0 	tst.w	r1, #240	@ 0xf0
90008bd2:	f43f af4d 	beq.w	90008a70 <HAL_JPEG_GetInfo.part.0+0x30>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90008bd6:	433a      	orrs	r2, r7
90008bd8:	f47f af4a 	bne.w	90008a70 <HAL_JPEG_GetInfo.part.0+0x30>
90008bdc:	2e03      	cmp	r6, #3
90008bde:	f47f af47 	bne.w	90008a70 <HAL_JPEG_GetInfo.part.0+0x30>
90008be2:	2101      	movs	r1, #1
90008be4:	e745      	b.n	90008a72 <HAL_JPEG_GetInfo.part.0+0x32>
    return HAL_ERROR;
90008be6:	2001      	movs	r0, #1
}
90008be8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90008bec:	9002dc5c 	.word	0x9002dc5c

90008bf0 <HAL_JPEG_Init>:
  if (hjpeg == NULL)
90008bf0:	2800      	cmp	r0, #0
90008bf2:	f000 8108 	beq.w	90008e06 <HAL_JPEG_Init+0x216>
{
90008bf6:	b570      	push	{r4, r5, r6, lr}
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
90008bf8:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
90008bfc:	4605      	mov	r5, r0
90008bfe:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90008c02:	2b00      	cmp	r3, #0
90008c04:	f000 80fa 	beq.w	90008dfc <HAL_JPEG_Init+0x20c>
  __HAL_JPEG_ENABLE(hjpeg);
90008c08:	682c      	ldr	r4, [r5, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
90008c0a:	2202      	movs	r2, #2
  hjpeg->QuantTable2 = NULL;
90008c0c:	2300      	movs	r3, #0
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
90008c0e:	497f      	ldr	r1, [pc, #508]	@ (90008e0c <HAL_JPEG_Init+0x21c>)
  hjpeg->State = HAL_JPEG_STATE_BUSY;
90008c10:	f885 204d 	strb.w	r2, [r5, #77]	@ 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
90008c14:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90008c16:	f042 0201 	orr.w	r2, r2, #1
90008c1a:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90008c1c:	6822      	ldr	r2, [r4, #0]
90008c1e:	f022 0201 	bic.w	r2, r2, #1
90008c22:	6022      	str	r2, [r4, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90008c24:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90008c26:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90008c2a:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
90008c2c:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90008c2e:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
90008c32:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
90008c34:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90008c36:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90008c3a:	6322      	str	r2, [r4, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90008c3c:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
90008c3e:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90008c42:	63a2      	str	r2, [r4, #56]	@ 0x38
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
90008c44:	4a72      	ldr	r2, [pc, #456]	@ (90008e10 <HAL_JPEG_Init+0x220>)
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
90008c46:	63e9      	str	r1, [r5, #60]	@ 0x3c
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90008c48:	2101      	movs	r1, #1
  hjpeg->QuantTable2 = NULL;
90008c4a:	64ab      	str	r3, [r5, #72]	@ 0x48
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
90008c4c:	e9c5 2310 	strd	r2, r3, [r5, #64]	@ 0x40
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90008c50:	f8c4 336c 	str.w	r3, [r4, #876]	@ 0x36c
90008c54:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
90008c58:	4b6e      	ldr	r3, [pc, #440]	@ (90008e14 <HAL_JPEG_Init+0x224>)
90008c5a:	f8c4 1368 	str.w	r1, [r4, #872]	@ 0x368
90008c5e:	f8c4 2364 	str.w	r2, [r4, #868]	@ 0x364
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90008c62:	496d      	ldr	r1, [pc, #436]	@ (90008e18 <HAL_JPEG_Init+0x228>)
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90008c64:	f8c4 3360 	str.w	r3, [r4, #864]	@ 0x360
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90008c68:	4b6c      	ldr	r3, [pc, #432]	@ (90008e1c <HAL_JPEG_Init+0x22c>)
90008c6a:	f8c4 1378 	str.w	r1, [r4, #888]	@ 0x378
90008c6e:	4a6c      	ldr	r2, [pc, #432]	@ (90008e20 <HAL_JPEG_Init+0x230>)
90008c70:	f8c4 3374 	str.w	r3, [r4, #884]	@ 0x374
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90008c74:	4b6b      	ldr	r3, [pc, #428]	@ (90008e24 <HAL_JPEG_Init+0x234>)
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90008c76:	f8c4 2370 	str.w	r2, [r4, #880]	@ 0x370
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90008c7a:	f5a2 427f 	sub.w	r2, r2, #65280	@ 0xff00
90008c7e:	f8c4 3388 	str.w	r3, [r4, #904]	@ 0x388
90008c82:	4969      	ldr	r1, [pc, #420]	@ (90008e28 <HAL_JPEG_Init+0x238>)
90008c84:	4b69      	ldr	r3, [pc, #420]	@ (90008e2c <HAL_JPEG_Init+0x23c>)
90008c86:	f8c4 1384 	str.w	r1, [r4, #900]	@ 0x384
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
90008c8a:	f504 6185 	add.w	r1, r4, #1064	@ 0x428
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90008c8e:	f8c4 3380 	str.w	r3, [r4, #896]	@ 0x380
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
90008c92:	f64f 23f9 	movw	r3, #64249	@ 0xfaf9
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90008c96:	f8c4 237c 	str.w	r2, [r4, #892]	@ 0x37c
  value = *address & 0xFFFF0000U;
90008c9a:	f8d4 042c 	ldr.w	r0, [r4, #1068]	@ 0x42c
90008c9e:	4a64      	ldr	r2, [pc, #400]	@ (90008e30 <HAL_JPEG_Init+0x240>)
90008ca0:	f36f 000f 	bfc	r0, #0, #16
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
90008ca4:	f1a2 06a0 	sub.w	r6, r2, #160	@ 0xa0
90008ca8:	4303      	orrs	r3, r0
  *address = value;
90008caa:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
90008cae:	f892 30ae 	ldrb.w	r3, [r2, #174]	@ 0xae
  while (index > 3UL)
90008cb2:	3a04      	subs	r2, #4
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90008cb4:	f892 e0b3 	ldrb.w	lr, [r2, #179]	@ 0xb3
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
90008cb8:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
90008cba:	f892 c0b0 	ldrb.w	ip, [r2, #176]	@ 0xb0
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
90008cbe:	f892 00b1 	ldrb.w	r0, [r2, #177]	@ 0xb1
  while (index > 3UL)
90008cc2:	4296      	cmp	r6, r2
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90008cc4:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
90008cc8:	ea43 030c 	orr.w	r3, r3, ip
90008ccc:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90008cd0:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
90008cd4:	d1eb      	bne.n	90008cae <HAL_JPEG_Init+0xbe>
  value = *address & 0x0000FFFFU;
90008cd6:	f8d4 342c 	ldr.w	r3, [r4, #1068]	@ 0x42c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90008cda:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
  value = *address & 0xFFFF0000U;
90008cde:	4955      	ldr	r1, [pc, #340]	@ (90008e34 <HAL_JPEG_Init+0x244>)
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90008ce0:	2001      	movs	r0, #1
  value = *address & 0x0000FFFFU;
90008ce2:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->Bits[0] & 0xFFUL) << 16);
90008ce4:	f043 7340 	orr.w	r3, r3, #50331648	@ 0x3000000
  *address = value;
90008ce8:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
  value = *address & 0xFFFF0000U;
90008cec:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
90008cf0:	400b      	ands	r3, r1
  *address = value;
90008cf2:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90008cf6:	f8c4 0438 	str.w	r0, [r4, #1080]	@ 0x438
90008cfa:	f8c4 2434 	str.w	r2, [r4, #1076]	@ 0x434
90008cfe:	f8c4 2430 	str.w	r2, [r4, #1072]	@ 0x430
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
90008d02:	f640 320a 	movw	r2, #2826	@ 0xb0a
  value = *address & 0x0000FFFFUL;
90008d06:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
90008d0a:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->HuffVal[0] & 0xFFUL) <<
90008d0c:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
90008d10:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
  value = *address & 0xFFFF0000UL;
90008d14:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
90008d18:	400b      	ands	r3, r1
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
90008d1a:	431a      	orrs	r2, r3
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90008d1c:	4b46      	ldr	r3, [pc, #280]	@ (90008e38 <HAL_JPEG_Init+0x248>)
  *address = value;
90008d1e:	f8c4 2448 	str.w	r2, [r4, #1096]	@ 0x448
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
90008d22:	f247 7202 	movw	r2, #30466	@ 0x7702
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90008d26:	f8c4 3444 	str.w	r3, [r4, #1092]	@ 0x444
90008d2a:	f1a3 3304 	sub.w	r3, r3, #67372036	@ 0x4040404
90008d2e:	f8c4 3440 	str.w	r3, [r4, #1088]	@ 0x440
  value = *address & 0x0000FFFFU;
90008d32:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
90008d36:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->Bits[0] & 0xFFUL) << 16);
90008d38:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
  *address = value;
90008d3c:	f8c4 3448 	str.w	r3, [r4, #1096]	@ 0x448
  value = *address & 0xFFFF0000U;
90008d40:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
90008d44:	400b      	ands	r3, r1
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90008d46:	493d      	ldr	r1, [pc, #244]	@ (90008e3c <HAL_JPEG_Init+0x24c>)
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
90008d48:	431a      	orrs	r2, r3
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90008d4a:	4b3d      	ldr	r3, [pc, #244]	@ (90008e40 <HAL_JPEG_Init+0x250>)
  *address = value;
90008d4c:	f8c4 2458 	str.w	r2, [r4, #1112]	@ 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90008d50:	4a3c      	ldr	r2, [pc, #240]	@ (90008e44 <HAL_JPEG_Init+0x254>)
90008d52:	f8c4 1454 	str.w	r1, [r4, #1108]	@ 0x454
  address = (hjpeg->Instance->DHTMEM + 102);
90008d56:	f504 619f 	add.w	r1, r4, #1272	@ 0x4f8
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90008d5a:	f8c4 2450 	str.w	r2, [r4, #1104]	@ 0x450
90008d5e:	f8c4 344c 	str.w	r3, [r4, #1100]	@ 0x44c
  value = *address & 0x0000FFFFUL;
90008d62:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
90008d66:	4a38      	ldr	r2, [pc, #224]	@ (90008e48 <HAL_JPEG_Init+0x258>)
  value = *address & 0x0000FFFFUL;
90008d68:	b29b      	uxth	r3, r3
90008d6a:	f1a2 06a0 	sub.w	r6, r2, #160	@ 0xa0
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
90008d6e:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
90008d72:	f8c4 3458 	str.w	r3, [r4, #1112]	@ 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
90008d76:	f892 30b0 	ldrb.w	r3, [r2, #176]	@ 0xb0
  while (index > 3UL)
90008d7a:	3a04      	subs	r2, #4
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90008d7c:	f892 e0b5 	ldrb.w	lr, [r2, #181]	@ 0xb5
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
90008d80:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
90008d82:	f892 c0b2 	ldrb.w	ip, [r2, #178]	@ 0xb2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
90008d86:	f892 00b3 	ldrb.w	r0, [r2, #179]	@ 0xb3
  while (index > 3UL)
90008d8a:	4296      	cmp	r6, r2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
90008d8c:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
90008d90:	ea43 030c 	orr.w	r3, r3, ip
90008d94:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90008d98:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
90008d9c:	d1eb      	bne.n	90008d76 <HAL_JPEG_Init+0x186>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
90008d9e:	f504 62a0 	add.w	r2, r4, #1280	@ 0x500
90008da2:	4923      	ldr	r1, [pc, #140]	@ (90008e30 <HAL_JPEG_Init+0x240>)
90008da4:	4628      	mov	r0, r5
90008da6:	f7ff fd3b 	bl	90008820 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
90008daa:	b118      	cbz	r0, 90008db4 <HAL_JPEG_Init+0x1c4>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
90008dac:	2301      	movs	r3, #1
    return HAL_ERROR;
90008dae:	2001      	movs	r0, #1
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
90008db0:	652b      	str	r3, [r5, #80]	@ 0x50
}
90008db2:	bd70      	pop	{r4, r5, r6, pc}
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
90008db4:	f504 62cc 	add.w	r2, r4, #1632	@ 0x660
90008db8:	4923      	ldr	r1, [pc, #140]	@ (90008e48 <HAL_JPEG_Init+0x258>)
90008dba:	4628      	mov	r0, r5
90008dbc:	f7ff fd30 	bl	90008820 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
90008dc0:	2800      	cmp	r0, #0
90008dc2:	d1f3      	bne.n	90008dac <HAL_JPEG_Init+0x1bc>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
90008dc4:	f504 62f8 	add.w	r2, r4, #1984	@ 0x7c0
90008dc8:	4920      	ldr	r1, [pc, #128]	@ (90008e4c <HAL_JPEG_Init+0x25c>)
90008dca:	4628      	mov	r0, r5
90008dcc:	f7ff fc7e 	bl	900086cc <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
90008dd0:	2800      	cmp	r0, #0
90008dd2:	d1eb      	bne.n	90008dac <HAL_JPEG_Init+0x1bc>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
90008dd4:	f504 62fc 	add.w	r2, r4, #2016	@ 0x7e0
90008dd8:	491d      	ldr	r1, [pc, #116]	@ (90008e50 <HAL_JPEG_Init+0x260>)
90008dda:	4628      	mov	r0, r5
90008ddc:	f7ff fc76 	bl	900086cc <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
90008de0:	2800      	cmp	r0, #0
90008de2:	d1e3      	bne.n	90008dac <HAL_JPEG_Init+0x1bc>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
90008de4:	6863      	ldr	r3, [r4, #4]
  hjpeg->State = HAL_JPEG_STATE_READY;
90008de6:	2201      	movs	r2, #1
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
90008de8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
90008dec:	6063      	str	r3, [r4, #4]
  hjpeg->JpegInCount = 0;
90008dee:	6228      	str	r0, [r5, #32]
  hjpeg->JpegOutCount = 0;
90008df0:	6268      	str	r0, [r5, #36]	@ 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
90008df2:	f885 204d 	strb.w	r2, [r5, #77]	@ 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
90008df6:	6528      	str	r0, [r5, #80]	@ 0x50
  hjpeg->Context = 0;
90008df8:	6568      	str	r0, [r5, #84]	@ 0x54
}
90008dfa:	bd70      	pop	{r4, r5, r6, pc}
    hjpeg->Lock = HAL_UNLOCKED;
90008dfc:	f880 204c 	strb.w	r2, [r0, #76]	@ 0x4c
    HAL_JPEG_MspInit(hjpeg);
90008e00:	f7fb f99e 	bl	90004140 <HAL_JPEG_MspInit>
90008e04:	e700      	b.n	90008c08 <HAL_JPEG_Init+0x18>
    return HAL_ERROR;
90008e06:	2001      	movs	r0, #1
}
90008e08:	4770      	bx	lr
90008e0a:	bf00      	nop
90008e0c:	9002dc1c 	.word	0x9002dc1c
90008e10:	9002dbdc 	.word	0x9002dbdc
90008e14:	01050100 	.word	0x01050100
90008e18:	0b0a0908 	.word	0x0b0a0908
90008e1c:	07060504 	.word	0x07060504
90008e20:	03020100 	.word	0x03020100
90008e24:	7d010000 	.word	0x7d010000
90008e28:	04040505 	.word	0x04040505
90008e2c:	03040203 	.word	0x03040203
90008e30:	9002dd50 	.word	0x9002dd50
90008e34:	ffff0000 	.word	0xffff0000
90008e38:	09080706 	.word	0x09080706
90008e3c:	01000404 	.word	0x01000404
90008e40:	04040201 	.word	0x04040201
90008e44:	05070403 	.word	0x05070403
90008e48:	9002dc9c 	.word	0x9002dc9c
90008e4c:	9002de20 	.word	0x9002de20
90008e50:	9002de04 	.word	0x9002de04

90008e54 <HAL_JPEG_Decode_DMA>:
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
90008e54:	2b00      	cmp	r3, #0
90008e56:	bf18      	it	ne
90008e58:	2900      	cmpne	r1, #0
90008e5a:	d036      	beq.n	90008eca <HAL_JPEG_Decode_DMA+0x76>
{
90008e5c:	b538      	push	{r3, r4, r5, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
90008e5e:	fab0 f580 	clz	r5, r0
90008e62:	4604      	mov	r4, r0
90008e64:	096d      	lsrs	r5, r5, #5
90008e66:	b370      	cbz	r0, 90008ec6 <HAL_JPEG_Decode_DMA+0x72>
  __HAL_LOCK(hjpeg);
90008e68:	f890 c04c 	ldrb.w	ip, [r0, #76]	@ 0x4c
90008e6c:	f1bc 0f01 	cmp.w	ip, #1
90008e70:	d022      	beq.n	90008eb8 <HAL_JPEG_Decode_DMA+0x64>
90008e72:	f04f 0c01 	mov.w	ip, #1
90008e76:	f880 c04c 	strb.w	ip, [r0, #76]	@ 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
90008e7a:	f890 c04d 	ldrb.w	ip, [r0, #77]	@ 0x4d
90008e7e:	f1bc 0f01 	cmp.w	ip, #1
90008e82:	d117      	bne.n	90008eb4 <HAL_JPEG_Decode_DMA+0x60>
    hjpeg->InDataLength = InDataLength;
90008e84:	6282      	str	r2, [r0, #40]	@ 0x28
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
90008e86:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->OutDataLength = OutDataLength;
90008e8a:	9b04      	ldr	r3, [sp, #16]
90008e8c:	62c3      	str	r3, [r0, #44]	@ 0x2c
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
90008e8e:	2304      	movs	r3, #4
90008e90:	f880 304d 	strb.w	r3, [r0, #77]	@ 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
90008e94:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008e96:	f023 030f 	bic.w	r3, r3, #15
90008e9a:	6543      	str	r3, [r0, #84]	@ 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
90008e9c:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008e9e:	f043 030e 	orr.w	r3, r3, #14
90008ea2:	6543      	str	r3, [r0, #84]	@ 0x54
    hjpeg->JpegInCount = 0;
90008ea4:	6205      	str	r5, [r0, #32]
    hjpeg->JpegOutCount = 0;
90008ea6:	6245      	str	r5, [r0, #36]	@ 0x24
    JPEG_Init_Process(hjpeg);
90008ea8:	f7ff fd44 	bl	90008934 <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
90008eac:	f7ff fd80 	bl	900089b0 <JPEG_DMA_StartProcess>
90008eb0:	b920      	cbnz	r0, 90008ebc <HAL_JPEG_Decode_DMA+0x68>
}
90008eb2:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_UNLOCK(hjpeg);
90008eb4:	f880 504c 	strb.w	r5, [r0, #76]	@ 0x4c
  __HAL_LOCK(hjpeg);
90008eb8:	2002      	movs	r0, #2
}
90008eba:	bd38      	pop	{r3, r4, r5, pc}
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90008ebc:	2306      	movs	r3, #6
      __HAL_UNLOCK(hjpeg);
90008ebe:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90008ec2:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
90008ec6:	2001      	movs	r0, #1
}
90008ec8:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
90008eca:	2001      	movs	r0, #1
}
90008ecc:	4770      	bx	lr
90008ece:	bf00      	nop

90008ed0 <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90008ed0:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008ed2:	f003 030c 	and.w	r3, r3, #12
90008ed6:	2b0c      	cmp	r3, #12
90008ed8:	d01a      	beq.n	90008f10 <HAL_JPEG_Pause+0x40>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90008eda:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008edc:	f003 030c 	and.w	r3, r3, #12
90008ee0:	2b08      	cmp	r3, #8
90008ee2:	d001      	beq.n	90008ee8 <HAL_JPEG_Pause+0x18>
}
90008ee4:	2000      	movs	r0, #0
90008ee6:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90008ee8:	07ca      	lsls	r2, r1, #31
90008eea:	d41f      	bmi.n	90008f2c <HAL_JPEG_Pause+0x5c>
90008eec:	f04f 3cff 	mov.w	ip, #4294967295
90008ef0:	f06f 0228 	mvn.w	r2, #40	@ 0x28
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90008ef4:	078b      	lsls	r3, r1, #30
90008ef6:	d504      	bpl.n	90008f02 <HAL_JPEG_Pause+0x32>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
90008ef8:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008efa:	4694      	mov	ip, r2
90008efc:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
90008f00:	6543      	str	r3, [r0, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
90008f02:	6802      	ldr	r2, [r0, #0]
}
90008f04:	2000      	movs	r0, #0
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
90008f06:	6b13      	ldr	r3, [r2, #48]	@ 0x30
90008f08:	ea03 030c 	and.w	r3, r3, ip
90008f0c:	6313      	str	r3, [r2, #48]	@ 0x30
}
90008f0e:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90008f10:	07cb      	lsls	r3, r1, #31
90008f12:	d503      	bpl.n	90008f1c <HAL_JPEG_Pause+0x4c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90008f14:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008f16:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
90008f1a:	6543      	str	r3, [r0, #84]	@ 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90008f1c:	0789      	lsls	r1, r1, #30
90008f1e:	d5e1      	bpl.n	90008ee4 <HAL_JPEG_Pause+0x14>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
90008f20:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008f22:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
90008f26:	6543      	str	r3, [r0, #84]	@ 0x54
}
90008f28:	2000      	movs	r0, #0
90008f2a:	4770      	bx	lr
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90008f2c:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008f2e:	f06f 0c06 	mvn.w	ip, #6
90008f32:	f06f 022e 	mvn.w	r2, #46	@ 0x2e
90008f36:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
90008f3a:	6543      	str	r3, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
90008f3c:	e7da      	b.n	90008ef4 <HAL_JPEG_Pause+0x24>
90008f3e:	bf00      	nop

90008f40 <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
90008f40:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
90008f42:	6282      	str	r2, [r0, #40]	@ 0x28
}
90008f44:	4770      	bx	lr
90008f46:	bf00      	nop

90008f48 <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
90008f48:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
90008f4a:	62c2      	str	r2, [r0, #44]	@ 0x2c
}
90008f4c:	4770      	bx	lr
90008f4e:	bf00      	nop

90008f50 <HAL_JPEG_Abort>:
{
90008f50:	b538      	push	{r3, r4, r5, lr}
  tmpContext = hjpeg->Context;
90008f52:	6d43      	ldr	r3, [r0, #84]	@ 0x54
{
90008f54:	4604      	mov	r4, r0
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
90008f56:	6d41      	ldr	r1, [r0, #84]	@ 0x54
90008f58:	4a32      	ldr	r2, [pc, #200]	@ (90009024 <HAL_JPEG_Abort+0xd4>)
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90008f5a:	f003 030c 	and.w	r3, r3, #12
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
90008f5e:	400a      	ands	r2, r1
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90008f60:	2b0c      	cmp	r3, #12
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
90008f62:	6542      	str	r2, [r0, #84]	@ 0x54
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90008f64:	d043      	beq.n	90008fee <HAL_JPEG_Abort+0x9e>
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90008f66:	6822      	ldr	r2, [r4, #0]
90008f68:	6813      	ldr	r3, [r2, #0]
90008f6a:	f023 0301 	bic.w	r3, r3, #1
90008f6e:	6013      	str	r3, [r2, #0]
  tickstart = HAL_GetTick();
90008f70:	f7fd fd3c 	bl	900069ec <HAL_GetTick>
90008f74:	4605      	mov	r5, r0
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
90008f76:	e005      	b.n	90008f84 <HAL_JPEG_Abort+0x34>
    if ((HAL_GetTick() - tickstart) > JPEG_TIMEOUT_VALUE)
90008f78:	f7fd fd38 	bl	900069ec <HAL_GetTick>
90008f7c:	1b40      	subs	r0, r0, r5
90008f7e:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
90008f82:	d82b      	bhi.n	90008fdc <HAL_JPEG_Abort+0x8c>
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
90008f84:	6823      	ldr	r3, [r4, #0]
90008f86:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90008f88:	0612      	lsls	r2, r2, #24
90008f8a:	d4f5      	bmi.n	90008f78 <HAL_JPEG_Abort+0x28>
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90008f8c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  hjpeg->JpegInCount = 0;
90008f8e:	2100      	movs	r1, #0
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90008f90:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90008f94:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
90008f96:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90008f98:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
90008f9c:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
90008f9e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90008fa0:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90008fa4:	631a      	str	r2, [r3, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90008fa6:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90008fa8:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90008fac:	639a      	str	r2, [r3, #56]	@ 0x38
  hjpeg->JpegInCount = 0;
90008fae:	6221      	str	r1, [r4, #32]
  hjpeg->JpegOutCount = 0;
90008fb0:	6261      	str	r1, [r4, #36]	@ 0x24
  hjpeg->Context &= ~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT);
90008fb2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90008fb4:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
90008fb8:	6563      	str	r3, [r4, #84]	@ 0x54
  if (hjpeg->ErrorCode != HAL_JPEG_ERROR_NONE)
90008fba:	6d20      	ldr	r0, [r4, #80]	@ 0x50
90008fbc:	b138      	cbz	r0, 90008fce <HAL_JPEG_Abort+0x7e>
    hjpeg->State = HAL_JPEG_STATE_ERROR;
90008fbe:	2306      	movs	r3, #6
    return HAL_ERROR;
90008fc0:	2001      	movs	r0, #1
    hjpeg->State = HAL_JPEG_STATE_ERROR;
90008fc2:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
90008fc6:	2300      	movs	r3, #0
90008fc8:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
90008fcc:	bd38      	pop	{r3, r4, r5, pc}
    hjpeg->State = HAL_JPEG_STATE_READY;
90008fce:	2301      	movs	r3, #1
90008fd0:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_OK;
90008fd4:	2300      	movs	r3, #0
90008fd6:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
90008fda:	bd38      	pop	{r3, r4, r5, pc}
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
90008fdc:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90008fde:	2106      	movs	r1, #6
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90008fe0:	6823      	ldr	r3, [r4, #0]
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
90008fe2:	f042 0208 	orr.w	r2, r2, #8
90008fe6:	6522      	str	r2, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90008fe8:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
      break;
90008fec:	e7ce      	b.n	90008f8c <HAL_JPEG_Abort+0x3c>
    if (HAL_MDMA_Abort(hjpeg->hdmaout) != HAL_OK)
90008fee:	6b40      	ldr	r0, [r0, #52]	@ 0x34
90008ff0:	f001 f986 	bl	9000a300 <HAL_MDMA_Abort>
90008ff4:	b118      	cbz	r0, 90008ffe <HAL_JPEG_Abort+0xae>
      if (hjpeg->hdmaout->ErrorCode == HAL_MDMA_ERROR_TIMEOUT)
90008ff6:	6b63      	ldr	r3, [r4, #52]	@ 0x34
90008ff8:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90008ffa:	2b40      	cmp	r3, #64	@ 0x40
90008ffc:	d00d      	beq.n	9000901a <HAL_JPEG_Abort+0xca>
    if (HAL_MDMA_Abort(hjpeg->hdmain) != HAL_OK)
90008ffe:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90009000:	f001 f97e 	bl	9000a300 <HAL_MDMA_Abort>
90009004:	2800      	cmp	r0, #0
90009006:	d0ae      	beq.n	90008f66 <HAL_JPEG_Abort+0x16>
      if (hjpeg->hdmain->ErrorCode == HAL_MDMA_ERROR_TIMEOUT)
90009008:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000900a:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
9000900c:	2b40      	cmp	r3, #64	@ 0x40
9000900e:	d1aa      	bne.n	90008f66 <HAL_JPEG_Abort+0x16>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009010:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90009012:	f043 0304 	orr.w	r3, r3, #4
90009016:	6523      	str	r3, [r4, #80]	@ 0x50
90009018:	e7a5      	b.n	90008f66 <HAL_JPEG_Abort+0x16>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000901a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
9000901c:	f043 0304 	orr.w	r3, r3, #4
90009020:	6523      	str	r3, [r4, #80]	@ 0x50
90009022:	e7ec      	b.n	90008ffe <HAL_JPEG_Abort+0xae>
90009024:	ffff7ff0 	.word	0xffff7ff0

90009028 <HAL_JPEG_EncodeCpltCallback>:
__weak void HAL_JPEG_EncodeCpltCallback(JPEG_HandleTypeDef *hjpeg)
90009028:	4770      	bx	lr
9000902a:	bf00      	nop

9000902c <JPEG_MDMAErrorCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000902c:	6c00      	ldr	r0, [r0, #64]	@ 0x40
  hjpeg->State = HAL_JPEG_STATE_READY;
9000902e:	2101      	movs	r1, #1
{
90009030:	b508      	push	{r3, lr}
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009032:	6803      	ldr	r3, [r0, #0]
90009034:	681a      	ldr	r2, [r3, #0]
90009036:	f022 0201 	bic.w	r2, r2, #1
9000903a:	601a      	str	r2, [r3, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000903c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000903e:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90009042:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->State = HAL_JPEG_STATE_READY;
90009044:	f880 104d 	strb.w	r1, [r0, #77]	@ 0x4d
  hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009048:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9000904a:	f043 0304 	orr.w	r3, r3, #4
9000904e:	6503      	str	r3, [r0, #80]	@ 0x50
  HAL_JPEG_ErrorCallback(hjpeg);
90009050:	f7f9 f86e 	bl	90002130 <HAL_JPEG_ErrorCallback>
}
90009054:	bd08      	pop	{r3, pc}
90009056:	bf00      	nop

90009058 <JPEG_MDMAInCpltCallback>:
{
90009058:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000905a:	6c04      	ldr	r4, [r0, #64]	@ 0x40
{
9000905c:	b083      	sub	sp, #12
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
9000905e:	f248 010c 	movw	r1, #32780	@ 0x800c
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009062:	6822      	ldr	r2, [r4, #0]
90009064:	6b13      	ldr	r3, [r2, #48]	@ 0x30
90009066:	f023 037e 	bic.w	r3, r3, #126	@ 0x7e
9000906a:	6313      	str	r3, [r2, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
9000906c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000906e:	400b      	ands	r3, r1
90009070:	2b0c      	cmp	r3, #12
90009072:	d001      	beq.n	90009078 <JPEG_MDMAInCpltCallback+0x20>
}
90009074:	b003      	add	sp, #12
90009076:	bd30      	pop	{r4, r5, pc}
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009078:	6802      	ldr	r2, [r0, #0]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000907a:	4620      	mov	r0, r4
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000907c:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000907e:	6952      	ldr	r2, [r2, #20]
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009080:	6b21      	ldr	r1, [r4, #48]	@ 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009082:	f3c2 0210 	ubfx	r2, r2, #0, #17
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009086:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009088:	1a9b      	subs	r3, r3, r2
9000908a:	6223      	str	r3, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000908c:	6a21      	ldr	r1, [r4, #32]
9000908e:	f7f8 ff83 	bl	90001f98 <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= inXfrSize)
90009092:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90009094:	42ab      	cmp	r3, r5
90009096:	d311      	bcc.n	900090bc <JPEG_MDMAInCpltCallback+0x64>
      if (inXfrSize == 0UL)
90009098:	b305      	cbz	r5, 900090dc <JPEG_MDMAInCpltCallback+0x84>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000909a:	fbb3 f2f5 	udiv	r2, r3, r5
9000909e:	fb05 3212 	mls	r2, r5, r2, r3
900090a2:	1a9b      	subs	r3, r3, r2
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
900090a4:	6d62      	ldr	r2, [r4, #84]	@ 0x54
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
900090a6:	62a3      	str	r3, [r4, #40]	@ 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
900090a8:	04d1      	lsls	r1, r2, #19
900090aa:	d400      	bmi.n	900090ae <JPEG_MDMAInCpltCallback+0x56>
900090ac:	b963      	cbnz	r3, 900090c8 <JPEG_MDMAInCpltCallback+0x70>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
900090ae:	6822      	ldr	r2, [r4, #0]
900090b0:	6b13      	ldr	r3, [r2, #48]	@ 0x30
900090b2:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
900090b6:	6313      	str	r3, [r2, #48]	@ 0x30
}
900090b8:	b003      	add	sp, #12
900090ba:	bd30      	pop	{r4, r5, pc}
    else if (hjpeg->InDataLength > 0UL)
900090bc:	b1cb      	cbz	r3, 900090f2 <JPEG_MDMAInCpltCallback+0x9a>
      if ((hjpeg->InDataLength % 4UL) != 0UL)
900090be:	0798      	lsls	r0, r3, #30
900090c0:	d119      	bne.n	900090f6 <JPEG_MDMAInCpltCallback+0x9e>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
900090c2:	6d62      	ldr	r2, [r4, #84]	@ 0x54
900090c4:	04d2      	lsls	r2, r2, #19
900090c6:	d4f2      	bmi.n	900090ae <JPEG_MDMAInCpltCallback+0x56>
      if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
900090c8:	6822      	ldr	r2, [r4, #0]
900090ca:	2501      	movs	r5, #1
900090cc:	69a1      	ldr	r1, [r4, #24]
900090ce:	6b20      	ldr	r0, [r4, #48]	@ 0x30
900090d0:	3240      	adds	r2, #64	@ 0x40
900090d2:	9500      	str	r5, [sp, #0]
900090d4:	f001 f8a8 	bl	9000a228 <HAL_MDMA_Start_IT>
900090d8:	2800      	cmp	r0, #0
900090da:	d0e8      	beq.n	900090ae <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900090dc:	6d23      	ldr	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
900090de:	2206      	movs	r2, #6
        HAL_JPEG_ErrorCallback(hjpeg);
900090e0:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900090e2:	f043 0304 	orr.w	r3, r3, #4
900090e6:	6523      	str	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
900090e8:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
900090ec:	f7f9 f820 	bl	90002130 <HAL_JPEG_ErrorCallback>
        return;
900090f0:	e7c0      	b.n	90009074 <JPEG_MDMAInCpltCallback+0x1c>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
900090f2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
900090f4:	e7db      	b.n	900090ae <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->InDataLength = ((hjpeg->InDataLength / 4UL) + 1UL) * 4UL;
900090f6:	f023 0303 	bic.w	r3, r3, #3
900090fa:	3304      	adds	r3, #4
900090fc:	e7d2      	b.n	900090a4 <JPEG_MDMAInCpltCallback+0x4c>
900090fe:	bf00      	nop

90009100 <JPEG_DMA_PollResidualData>:
{
90009100:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
90009102:	6802      	ldr	r2, [r0, #0]
90009104:	2610      	movs	r6, #16
{
90009106:	4604      	mov	r4, r0
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009108:	6d65      	ldr	r5, [r4, #84]	@ 0x54
9000910a:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
9000910e:	d11d      	bne.n	9000914c <JPEG_DMA_PollResidualData+0x4c>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
90009110:	6b53      	ldr	r3, [r2, #52]	@ 0x34
90009112:	06df      	lsls	r7, r3, #27
90009114:	d51a      	bpl.n	9000914c <JPEG_DMA_PollResidualData+0x4c>
        dataOut = hjpeg->Instance->DOR;
90009116:	6c53      	ldr	r3, [r2, #68]	@ 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
90009118:	69e7      	ldr	r7, [r4, #28]
9000911a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
9000911c:	0a18      	lsrs	r0, r3, #8
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
9000911e:	0c19      	lsrs	r1, r3, #16
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
90009120:	54bb      	strb	r3, [r7, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
90009122:	0e1b      	lsrs	r3, r3, #24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
90009124:	6a67      	ldr	r7, [r4, #36]	@ 0x24
90009126:	69e2      	ldr	r2, [r4, #28]
90009128:	443a      	add	r2, r7
9000912a:	7050      	strb	r0, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
9000912c:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000912e:	69e2      	ldr	r2, [r4, #28]
90009130:	4402      	add	r2, r0
90009132:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
90009134:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009136:	69e2      	ldr	r2, [r4, #28]
90009138:	440a      	add	r2, r1
9000913a:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
9000913c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000913e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
        hjpeg->JpegOutCount += 4UL;
90009140:	3304      	adds	r3, #4
90009142:	6263      	str	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90009144:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009146:	4293      	cmp	r3, r2
90009148:	d021      	beq.n	9000918e <JPEG_DMA_PollResidualData+0x8e>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000914a:	6822      	ldr	r2, [r4, #0]
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
9000914c:	3e01      	subs	r6, #1
9000914e:	d1db      	bne.n	90009108 <JPEG_DMA_PollResidualData+0x8>
  tmpContext = hjpeg->Context;
90009150:	6d61      	ldr	r1, [r4, #84]	@ 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
90009152:	6b53      	ldr	r3, [r2, #52]	@ 0x34
90009154:	06d8      	lsls	r0, r3, #27
90009156:	d501      	bpl.n	9000915c <JPEG_DMA_PollResidualData+0x5c>
90009158:	048b      	lsls	r3, r1, #18
9000915a:	d417      	bmi.n	9000918c <JPEG_DMA_PollResidualData+0x8c>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000915c:	6813      	ldr	r3, [r2, #0]
9000915e:	f023 0301 	bic.w	r3, r3, #1
90009162:	6013      	str	r3, [r2, #0]
    if (hjpeg->JpegOutCount > 0UL)
90009164:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009166:	b9eb      	cbnz	r3, 900091a4 <JPEG_DMA_PollResidualData+0xa4>
    tmpContext = hjpeg->Context;
90009168:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
9000916a:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000916c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000916e:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009170:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
90009174:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009178:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000917c:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000917e:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009180:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009182:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009186:	d00a      	beq.n	9000919e <JPEG_DMA_PollResidualData+0x9e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
90009188:	f7ff ff4e 	bl	90009028 <HAL_JPEG_EncodeCpltCallback>
}
9000918c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000918e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009190:	4620      	mov	r0, r4
90009192:	69e1      	ldr	r1, [r4, #28]
90009194:	f7f8 ff20 	bl	90001fd8 <HAL_JPEG_DataReadyCallback>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
90009198:	6822      	ldr	r2, [r4, #0]
          hjpeg->JpegOutCount = 0;
9000919a:	6265      	str	r5, [r4, #36]	@ 0x24
9000919c:	e7d6      	b.n	9000914c <JPEG_DMA_PollResidualData+0x4c>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000919e:	f7f8 ffc9 	bl	90002134 <HAL_JPEG_DecodeCpltCallback>
}
900091a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900091a4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900091a6:	4620      	mov	r0, r4
900091a8:	69e1      	ldr	r1, [r4, #28]
900091aa:	f7f8 ff15 	bl	90001fd8 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
900091ae:	2300      	movs	r3, #0
900091b0:	6263      	str	r3, [r4, #36]	@ 0x24
900091b2:	e7d9      	b.n	90009168 <JPEG_DMA_PollResidualData+0x68>

900091b4 <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
900091b4:	6d43      	ldr	r3, [r0, #84]	@ 0x54
900091b6:	f413 5f40 	tst.w	r3, #12288	@ 0x3000
900091ba:	d06f      	beq.n	9000929c <HAL_JPEG_Resume+0xe8>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
900091bc:	6d43      	ldr	r3, [r0, #84]	@ 0x54
900091be:	f003 030c 	and.w	r3, r3, #12
900091c2:	2b0c      	cmp	r3, #12
{
900091c4:	b530      	push	{r4, r5, lr}
900091c6:	4604      	mov	r4, r0
900091c8:	b083      	sub	sp, #12
900091ca:	460d      	mov	r5, r1
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
900091cc:	d007      	beq.n	900091de <HAL_JPEG_Resume+0x2a>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
900091ce:	6d43      	ldr	r3, [r0, #84]	@ 0x54
900091d0:	f003 030c 	and.w	r3, r3, #12
900091d4:	2b08      	cmp	r3, #8
900091d6:	d035      	beq.n	90009244 <HAL_JPEG_Resume+0x90>
  return HAL_OK;
900091d8:	2000      	movs	r0, #0
}
900091da:	b003      	add	sp, #12
900091dc:	bd30      	pop	{r4, r5, pc}
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
900091de:	07c8      	lsls	r0, r1, #31
900091e0:	d415      	bmi.n	9000920e <HAL_JPEG_Resume+0x5a>
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
900091e2:	07a9      	lsls	r1, r5, #30
900091e4:	d5f8      	bpl.n	900091d8 <HAL_JPEG_Resume+0x24>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
900091e6:	6d63      	ldr	r3, [r4, #84]	@ 0x54
900091e8:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
900091ec:	6563      	str	r3, [r4, #84]	@ 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
900091ee:	6d63      	ldr	r3, [r4, #84]	@ 0x54
900091f0:	041a      	lsls	r2, r3, #16
900091f2:	d44f      	bmi.n	90009294 <HAL_JPEG_Resume+0xe0>
        xfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
900091f4:	6b60      	ldr	r0, [r4, #52]	@ 0x34
900091f6:	6a82      	ldr	r2, [r0, #40]	@ 0x28
        if (xfrSize == 0UL)
900091f8:	2a00      	cmp	r2, #0
900091fa:	d13a      	bne.n	90009272 <HAL_JPEG_Resume+0xbe>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900091fc:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
900091fe:	2206      	movs	r2, #6
    return HAL_ERROR;
90009200:	2001      	movs	r0, #1
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009202:	f043 0304 	orr.w	r3, r3, #4
90009206:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
90009208:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
          return HAL_ERROR;
9000920c:	e7e5      	b.n	900091da <HAL_JPEG_Resume+0x26>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000920e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009210:	6b20      	ldr	r0, [r4, #48]	@ 0x30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90009212:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009216:	6a82      	ldr	r2, [r0, #40]	@ 0x28
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90009218:	6563      	str	r3, [r4, #84]	@ 0x54
      if (xfrSize == 0UL)
9000921a:	2a00      	cmp	r2, #0
9000921c:	d0ee      	beq.n	900091fc <HAL_JPEG_Resume+0x48>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % xfrSize);
9000921e:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90009220:	fbb3 f1f2 	udiv	r1, r3, r2
90009224:	fb02 3211 	mls	r2, r2, r1, r3
90009228:	1a9b      	subs	r3, r3, r2
9000922a:	62a3      	str	r3, [r4, #40]	@ 0x28
      if (hjpeg->InDataLength > 0UL)
9000922c:	2b00      	cmp	r3, #0
9000922e:	d0d8      	beq.n	900091e2 <HAL_JPEG_Resume+0x2e>
        if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
90009230:	6822      	ldr	r2, [r4, #0]
90009232:	2101      	movs	r1, #1
90009234:	3240      	adds	r2, #64	@ 0x40
90009236:	9100      	str	r1, [sp, #0]
90009238:	69a1      	ldr	r1, [r4, #24]
9000923a:	f000 fff5 	bl	9000a228 <HAL_MDMA_Start_IT>
9000923e:	2800      	cmp	r0, #0
90009240:	d0cf      	beq.n	900091e2 <HAL_JPEG_Resume+0x2e>
90009242:	e7db      	b.n	900091fc <HAL_JPEG_Resume+0x48>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90009244:	f011 0101 	ands.w	r1, r1, #1
90009248:	d011      	beq.n	9000926e <HAL_JPEG_Resume+0xba>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000924a:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000924c:	222e      	movs	r2, #46	@ 0x2e
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
9000924e:	2106      	movs	r1, #6
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90009250:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
90009254:	6543      	str	r3, [r0, #84]	@ 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90009256:	07ab      	lsls	r3, r5, #30
90009258:	d504      	bpl.n	90009264 <HAL_JPEG_Resume+0xb0>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000925a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
9000925c:	4611      	mov	r1, r2
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000925e:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
90009262:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
90009264:	6822      	ldr	r2, [r4, #0]
90009266:	6b13      	ldr	r3, [r2, #48]	@ 0x30
90009268:	430b      	orrs	r3, r1
9000926a:	6313      	str	r3, [r2, #48]	@ 0x30
9000926c:	e7b4      	b.n	900091d8 <HAL_JPEG_Resume+0x24>
9000926e:	2228      	movs	r2, #40	@ 0x28
90009270:	e7f1      	b.n	90009256 <HAL_JPEG_Resume+0xa2>
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
90009272:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90009274:	fbb3 f1f2 	udiv	r1, r3, r2
90009278:	fb02 3211 	mls	r2, r2, r1, r3
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000927c:	6821      	ldr	r1, [r4, #0]
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000927e:	1a9b      	subs	r3, r3, r2
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009280:	2201      	movs	r2, #1
90009282:	3144      	adds	r1, #68	@ 0x44
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
90009284:	62e3      	str	r3, [r4, #44]	@ 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009286:	9200      	str	r2, [sp, #0]
90009288:	69e2      	ldr	r2, [r4, #28]
9000928a:	f000 ffcd 	bl	9000a228 <HAL_MDMA_Start_IT>
9000928e:	2800      	cmp	r0, #0
90009290:	d0a2      	beq.n	900091d8 <HAL_JPEG_Resume+0x24>
90009292:	e7b3      	b.n	900091fc <HAL_JPEG_Resume+0x48>
        JPEG_DMA_PollResidualData(hjpeg);
90009294:	4620      	mov	r0, r4
90009296:	f7ff ff33 	bl	90009100 <JPEG_DMA_PollResidualData>
9000929a:	e79d      	b.n	900091d8 <HAL_JPEG_Resume+0x24>
    return HAL_ERROR;
9000929c:	2001      	movs	r0, #1
}
9000929e:	4770      	bx	lr

900092a0 <JPEG_MDMAOutCpltCallback>:
{
900092a0:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
900092a2:	6c04      	ldr	r4, [r0, #64]	@ 0x40
{
900092a4:	b083      	sub	sp, #12
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
900092a6:	f248 010c 	movw	r1, #32780	@ 0x800c
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
900092aa:	6823      	ldr	r3, [r4, #0]
900092ac:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900092ae:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
900092b2:	631a      	str	r2, [r3, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
900092b4:	6d62      	ldr	r2, [r4, #84]	@ 0x54
900092b6:	400a      	ands	r2, r1
900092b8:	2a0c      	cmp	r2, #12
900092ba:	d001      	beq.n	900092c0 <JPEG_MDMAOutCpltCallback+0x20>
}
900092bc:	b003      	add	sp, #12
900092be:	bd30      	pop	{r4, r5, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
900092c0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
900092c2:	0692      	lsls	r2, r2, #26
900092c4:	d505      	bpl.n	900092d2 <JPEG_MDMAOutCpltCallback+0x32>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
900092c6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900092c8:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
900092cc:	631a      	str	r2, [r3, #48]	@ 0x30
}
900092ce:	b003      	add	sp, #12
900092d0:	bd30      	pop	{r4, r5, pc}
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
900092d2:	6802      	ldr	r2, [r0, #0]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900092d4:	4620      	mov	r0, r4
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
900092d6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
900092d8:	6952      	ldr	r2, [r2, #20]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900092da:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
900092dc:	f3c2 0210 	ubfx	r2, r2, #0, #17
900092e0:	1a9b      	subs	r3, r3, r2
900092e2:	6263      	str	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900092e4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900092e6:	f7f8 fe77 	bl	90001fd8 <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
900092ea:	6d63      	ldr	r3, [r4, #84]	@ 0x54
900092ec:	049b      	lsls	r3, r3, #18
900092ee:	d501      	bpl.n	900092f4 <JPEG_MDMAOutCpltCallback+0x54>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
900092f0:	6823      	ldr	r3, [r4, #0]
900092f2:	e7e8      	b.n	900092c6 <JPEG_MDMAOutCpltCallback+0x26>
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900092f4:	6821      	ldr	r1, [r4, #0]
900092f6:	2501      	movs	r5, #1
900092f8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
900092fa:	69e2      	ldr	r2, [r4, #28]
900092fc:	3144      	adds	r1, #68	@ 0x44
900092fe:	6b60      	ldr	r0, [r4, #52]	@ 0x34
90009300:	9500      	str	r5, [sp, #0]
90009302:	f000 ff91 	bl	9000a228 <HAL_MDMA_Start_IT>
90009306:	2800      	cmp	r0, #0
90009308:	d0f2      	beq.n	900092f0 <JPEG_MDMAOutCpltCallback+0x50>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000930a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000930c:	2206      	movs	r2, #6
          HAL_JPEG_ErrorCallback(hjpeg);
9000930e:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009310:	f043 0304 	orr.w	r3, r3, #4
90009314:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
90009316:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
9000931a:	f7f8 ff09 	bl	90002130 <HAL_JPEG_ErrorCallback>
          return;
9000931e:	e7cd      	b.n	900092bc <JPEG_MDMAOutCpltCallback+0x1c>

90009320 <JPEG_MDMAOutAbortCallback>:
{
90009320:	b538      	push	{r3, r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90009322:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
90009324:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009326:	041a      	lsls	r2, r3, #16
90009328:	d400      	bmi.n	9000932c <JPEG_MDMAOutAbortCallback+0xc>
}
9000932a:	bd38      	pop	{r3, r4, r5, pc}
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000932c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9000932e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90009330:	681b      	ldr	r3, [r3, #0]
90009332:	695b      	ldr	r3, [r3, #20]
90009334:	f3c3 0310 	ubfx	r3, r3, #0, #17
90009338:	1ad3      	subs	r3, r2, r3
9000933a:	6263      	str	r3, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000933c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000933e:	429a      	cmp	r2, r3
90009340:	d025      	beq.n	9000938e <JPEG_MDMAOutAbortCallback+0x6e>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
90009342:	6822      	ldr	r2, [r4, #0]
90009344:	6b55      	ldr	r5, [r2, #52]	@ 0x34
90009346:	f015 0510 	ands.w	r5, r5, #16
9000934a:	d118      	bne.n	9000937e <JPEG_MDMAOutAbortCallback+0x5e>
    if (hjpeg->JpegOutCount > 0UL)
9000934c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000934e:	bb4b      	cbnz	r3, 900093a4 <JPEG_MDMAOutAbortCallback+0x84>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009350:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
90009352:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
90009354:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009356:	f023 0301 	bic.w	r3, r3, #1
9000935a:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000935c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000935e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009360:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
90009364:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009368:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000936c:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000936e:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009370:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009372:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009376:	d012      	beq.n	9000939e <JPEG_MDMAOutAbortCallback+0x7e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
90009378:	f7ff fe56 	bl	90009028 <HAL_JPEG_EncodeCpltCallback>
}
9000937c:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000937e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009380:	049b      	lsls	r3, r3, #18
90009382:	d4d2      	bmi.n	9000932a <JPEG_MDMAOutAbortCallback+0xa>
    JPEG_DMA_PollResidualData(hjpeg);
90009384:	4620      	mov	r0, r4
}
90009386:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000938a:	f7ff beb9 	b.w	90009100 <JPEG_DMA_PollResidualData>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000938e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009390:	4620      	mov	r0, r4
90009392:	69e1      	ldr	r1, [r4, #28]
90009394:	f7f8 fe20 	bl	90001fd8 <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
90009398:	2300      	movs	r3, #0
9000939a:	6263      	str	r3, [r4, #36]	@ 0x24
9000939c:	e7d1      	b.n	90009342 <JPEG_MDMAOutAbortCallback+0x22>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000939e:	f7f8 fec9 	bl	90002134 <HAL_JPEG_DecodeCpltCallback>
}
900093a2:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900093a4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900093a6:	4620      	mov	r0, r4
900093a8:	69e1      	ldr	r1, [r4, #28]
900093aa:	f7f8 fe15 	bl	90001fd8 <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
900093ae:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
900093b0:	6265      	str	r5, [r4, #36]	@ 0x24
900093b2:	e7cd      	b.n	90009350 <JPEG_MDMAOutAbortCallback+0x30>

900093b4 <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900093b4:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
900093b6:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900093b8:	f002 0203 	and.w	r2, r2, #3
900093bc:	2a02      	cmp	r2, #2
{
900093be:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900093c2:	4604      	mov	r4, r0
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900093c4:	d01e      	beq.n	90009404 <JPEG_Process+0x50>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
900093c6:	6d62      	ldr	r2, [r4, #84]	@ 0x54
900093c8:	04d7      	lsls	r7, r2, #19
900093ca:	d407      	bmi.n	900093dc <JPEG_Process+0x28>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
900093cc:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
900093ce:	0796      	lsls	r6, r2, #30
900093d0:	f100 811b 	bmi.w	9000960a <JPEG_Process+0x256>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
900093d4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
900093d6:	0750      	lsls	r0, r2, #29
900093d8:	f100 81cc 	bmi.w	90009774 <JPEG_Process+0x3c0>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
900093dc:	6d65      	ldr	r5, [r4, #84]	@ 0x54
900093de:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
900093e2:	d107      	bne.n	900093f4 <JPEG_Process+0x40>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
900093e4:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
900093e6:	f016 0608 	ands.w	r6, r6, #8
900093ea:	d14a      	bne.n	90009482 <JPEG_Process+0xce>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
900093ec:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
900093ee:	06d2      	lsls	r2, r2, #27
900093f0:	f100 81fe 	bmi.w	900097f0 <JPEG_Process+0x43c>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
900093f4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
900093f6:	f002 0238 	and.w	r2, r2, #56	@ 0x38
900093fa:	2a20      	cmp	r2, #32
900093fc:	d019      	beq.n	90009432 <JPEG_Process+0x7e>
  return JPEG_PROCESS_ONGOING;
900093fe:	2000      	movs	r0, #0
}
90009400:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
90009404:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009406:	0652      	lsls	r2, r2, #25
90009408:	d5dd      	bpl.n	900093c6 <JPEG_Process+0x12>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000940a:	1d05      	adds	r5, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000940c:	4629      	mov	r1, r5
9000940e:	f7ff fb17 	bl	90008a40 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
90009412:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
90009414:	4629      	mov	r1, r5
90009416:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
90009418:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000941a:	f7f8 fd8f 	bl	90001f3c <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000941e:	6823      	ldr	r3, [r4, #0]
90009420:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009422:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
90009426:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
90009428:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000942a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
9000942e:	639a      	str	r2, [r3, #56]	@ 0x38
90009430:	e7c9      	b.n	900093c6 <JPEG_Process+0x12>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009432:	681a      	ldr	r2, [r3, #0]
90009434:	f022 0201 	bic.w	r2, r2, #1
90009438:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000943a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000943c:	f002 020c 	and.w	r2, r2, #12
90009440:	2a08      	cmp	r2, #8
90009442:	f000 8201 	beq.w	90009848 <JPEG_Process+0x494>
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90009446:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90009448:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000944c:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->JpegOutCount > 0UL)
9000944e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009450:	2b00      	cmp	r3, #0
90009452:	f040 81fe 	bne.w	90009852 <JPEG_Process+0x49e>
    tmpContext = hjpeg->Context;
90009456:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
90009458:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000945a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000945c:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000945e:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
90009462:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009466:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000946a:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000946c:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000946e:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009470:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009474:	f000 81e5 	beq.w	90009842 <JPEG_Process+0x48e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
90009478:	f7ff fdd6 	bl	90009028 <HAL_JPEG_EncodeCpltCallback>
    return JPEG_PROCESS_DONE;
9000947c:	2001      	movs	r0, #1
}
9000947e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
90009482:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009484:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
90009486:	3220      	adds	r2, #32
90009488:	4296      	cmp	r6, r2
9000948a:	f0c0 8200 	bcc.w	9000988e <JPEG_Process+0x4da>
      dataword = hjpeg->Instance->DOR;
9000948e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009490:	69e1      	ldr	r1, [r4, #28]
90009492:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009494:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009496:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009498:	69e2      	ldr	r2, [r4, #28]
9000949a:	440a      	add	r2, r1
9000949c:	0a19      	lsrs	r1, r3, #8
9000949e:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900094a0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900094a2:	69e2      	ldr	r2, [r4, #28]
900094a4:	440a      	add	r2, r1
900094a6:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900094a8:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900094aa:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900094ac:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900094ae:	69e2      	ldr	r2, [r4, #28]
900094b0:	440a      	add	r2, r1
900094b2:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
900094b4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
900094b6:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
900094b8:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900094ba:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
900094bc:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
900094be:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900094c0:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900094c2:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
900094c4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900094c6:	69e2      	ldr	r2, [r4, #28]
900094c8:	440a      	add	r2, r1
900094ca:	0a19      	lsrs	r1, r3, #8
900094cc:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900094ce:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900094d0:	69e2      	ldr	r2, [r4, #28]
900094d2:	440a      	add	r2, r1
900094d4:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900094d6:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900094d8:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900094da:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900094dc:	69e2      	ldr	r2, [r4, #28]
900094de:	440a      	add	r2, r1
900094e0:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
900094e2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
900094e4:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
900094e6:	3304      	adds	r3, #4
900094e8:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
900094ea:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900094ec:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900094ee:	69e1      	ldr	r1, [r4, #28]
900094f0:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
900094f2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900094f4:	69e2      	ldr	r2, [r4, #28]
900094f6:	440a      	add	r2, r1
900094f8:	0a19      	lsrs	r1, r3, #8
900094fa:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900094fc:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900094fe:	69e2      	ldr	r2, [r4, #28]
90009500:	440a      	add	r2, r1
90009502:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009504:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009506:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009508:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000950a:	69e2      	ldr	r2, [r4, #28]
9000950c:	440a      	add	r2, r1
9000950e:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009510:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009512:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009514:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009516:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
90009518:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000951a:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000951c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000951e:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009520:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009522:	69e2      	ldr	r2, [r4, #28]
90009524:	440a      	add	r2, r1
90009526:	0a19      	lsrs	r1, r3, #8
90009528:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000952a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000952c:	69e2      	ldr	r2, [r4, #28]
9000952e:	440a      	add	r2, r1
90009530:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009532:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009534:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009536:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009538:	69e2      	ldr	r2, [r4, #28]
9000953a:	440a      	add	r2, r1
9000953c:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000953e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009540:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009542:	3304      	adds	r3, #4
90009544:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
90009546:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009548:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000954a:	69e1      	ldr	r1, [r4, #28]
9000954c:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000954e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009550:	69e2      	ldr	r2, [r4, #28]
90009552:	440a      	add	r2, r1
90009554:	0a19      	lsrs	r1, r3, #8
90009556:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009558:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000955a:	69e2      	ldr	r2, [r4, #28]
9000955c:	440a      	add	r2, r1
9000955e:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009560:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009562:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009564:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009566:	69e2      	ldr	r2, [r4, #28]
90009568:	440a      	add	r2, r1
9000956a:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000956c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000956e:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009570:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009572:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
90009574:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
90009576:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009578:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000957a:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000957c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000957e:	69e2      	ldr	r2, [r4, #28]
90009580:	440a      	add	r2, r1
90009582:	0a19      	lsrs	r1, r3, #8
90009584:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009586:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009588:	69e2      	ldr	r2, [r4, #28]
9000958a:	440a      	add	r2, r1
9000958c:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000958e:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009590:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009592:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009594:	69e2      	ldr	r2, [r4, #28]
90009596:	440a      	add	r2, r1
90009598:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000959a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000959c:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000959e:	3304      	adds	r3, #4
900095a0:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
900095a2:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900095a4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900095a6:	69e1      	ldr	r1, [r4, #28]
900095a8:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
900095aa:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900095ac:	69e2      	ldr	r2, [r4, #28]
900095ae:	440a      	add	r2, r1
900095b0:	0a19      	lsrs	r1, r3, #8
900095b2:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900095b4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900095b6:	69e2      	ldr	r2, [r4, #28]
900095b8:	440a      	add	r2, r1
900095ba:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900095bc:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900095be:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900095c0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900095c2:	69e2      	ldr	r2, [r4, #28]
900095c4:	440a      	add	r2, r1
900095c6:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
900095c8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
900095ca:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
900095cc:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900095ce:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
900095d0:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
900095d2:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900095d4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900095d6:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
900095d8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900095da:	69e2      	ldr	r2, [r4, #28]
900095dc:	440a      	add	r2, r1
900095de:	0a19      	lsrs	r1, r3, #8
900095e0:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900095e2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900095e4:	69e2      	ldr	r2, [r4, #28]
900095e6:	440a      	add	r2, r1
900095e8:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900095ea:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900095ec:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900095ee:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900095f0:	69e2      	ldr	r2, [r4, #28]
900095f2:	440a      	add	r2, r1
900095f4:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
900095f6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900095f8:	3304      	adds	r3, #4
900095fa:	6263      	str	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
900095fc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900095fe:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90009600:	429a      	cmp	r2, r3
90009602:	f000 82d8 	beq.w	90009bb6 <JPEG_Process+0x802>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009606:	6823      	ldr	r3, [r4, #0]
90009608:	e6f4      	b.n	900093f4 <JPEG_Process+0x40>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000960a:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000960c:	2a00      	cmp	r2, #0
9000960e:	f000 8128 	beq.w	90009862 <JPEG_Process+0x4ae>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
90009612:	6a21      	ldr	r1, [r4, #32]
90009614:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
90009616:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
90009618:	f240 81b9 	bls.w	9000998e <JPEG_Process+0x5da>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000961c:	1a52      	subs	r2, r2, r1
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000961e:	6d61      	ldr	r1, [r4, #84]	@ 0x54
90009620:	04cd      	lsls	r5, r1, #19
90009622:	f53f aedb 	bmi.w	900093dc <JPEG_Process+0x28>
90009626:	2a00      	cmp	r2, #0
90009628:	f43f aed8 	beq.w	900093dc <JPEG_Process+0x28>
    if (nb_words >= nbRequestWords)
9000962c:	2a1f      	cmp	r2, #31
    nb_words = nb_bytes / 4UL;
9000962e:	ea4f 0092 	mov.w	r0, r2, lsr #2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009632:	69a1      	ldr	r1, [r4, #24]
    if (nb_words >= nbRequestWords)
90009634:	f200 824e 	bhi.w	90009ad4 <JPEG_Process+0x720>
      if (nb_words > 0UL)
90009638:	2a03      	cmp	r2, #3
9000963a:	f240 82cc 	bls.w	90009bd6 <JPEG_Process+0x822>
          input_count = hjpeg->JpegInCount;
9000963e:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009640:	2801      	cmp	r0, #1
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009642:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009646:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009648:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000964a:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000964c:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009650:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009652:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
90009656:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000965a:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000965e:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
90009660:	6a22      	ldr	r2, [r4, #32]
90009662:	f102 0204 	add.w	r2, r2, #4
90009666:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009668:	f43f aeb8 	beq.w	900093dc <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000966c:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000966e:	2802      	cmp	r0, #2
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009670:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009674:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009676:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009678:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000967a:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000967e:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009680:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
90009684:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009688:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000968c:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000968e:	6a22      	ldr	r2, [r4, #32]
90009690:	f102 0204 	add.w	r2, r2, #4
90009694:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009696:	f43f aea1 	beq.w	900093dc <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000969a:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000969c:	2803      	cmp	r0, #3
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000969e:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900096a2:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900096a4:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900096a6:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900096a8:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
900096ac:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900096ae:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
900096b2:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900096b6:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900096ba:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
900096bc:	6a22      	ldr	r2, [r4, #32]
900096be:	f102 0204 	add.w	r2, r2, #4
900096c2:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
900096c4:	f43f ae8a 	beq.w	900093dc <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
900096c8:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
900096ca:	2804      	cmp	r0, #4
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900096cc:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900096d0:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900096d2:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900096d4:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900096d6:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
900096da:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900096dc:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
900096e0:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900096e4:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900096e8:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
900096ea:	6a22      	ldr	r2, [r4, #32]
900096ec:	f102 0204 	add.w	r2, r2, #4
900096f0:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
900096f2:	f43f ae73 	beq.w	900093dc <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
900096f6:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
900096f8:	2805      	cmp	r0, #5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900096fa:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900096fe:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009700:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009702:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009704:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009708:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000970a:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
9000970e:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009712:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009716:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
90009718:	6a22      	ldr	r2, [r4, #32]
9000971a:	f102 0204 	add.w	r2, r2, #4
9000971e:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009720:	f43f ae5c 	beq.w	900093dc <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
90009724:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009726:	2807      	cmp	r0, #7
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009728:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000972c:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000972e:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009730:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009732:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009736:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009738:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
9000973c:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009740:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009744:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
90009746:	6a22      	ldr	r2, [r4, #32]
90009748:	f102 0204 	add.w	r2, r2, #4
9000974c:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000974e:	f47f ae45 	bne.w	900093dc <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
90009752:	6a22      	ldr	r2, [r4, #32]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009754:	1888      	adds	r0, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009756:	5c8d      	ldrb	r5, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009758:	7882      	ldrb	r2, [r0, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000975a:	78c1      	ldrb	r1, [r0, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000975c:	0412      	lsls	r2, r2, #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000975e:	7840      	ldrb	r0, [r0, #1]
90009760:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
90009764:	432a      	orrs	r2, r5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009766:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000976a:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000976c:	6a22      	ldr	r2, [r4, #32]
9000976e:	3204      	adds	r2, #4
90009770:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009772:	e633      	b.n	900093dc <JPEG_Process+0x28>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
90009774:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
90009776:	2a00      	cmp	r2, #0
90009778:	d073      	beq.n	90009862 <JPEG_Process+0x4ae>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000977a:	6a21      	ldr	r1, [r4, #32]
9000977c:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000977e:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
90009780:	f200 8182 	bhi.w	90009a88 <JPEG_Process+0x6d4>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
90009784:	428a      	cmp	r2, r1
90009786:	f040 8104 	bne.w	90009992 <JPEG_Process+0x5de>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000978a:	6a21      	ldr	r1, [r4, #32]
9000978c:	4620      	mov	r0, r4
9000978e:	f7f8 fc03 	bl	90001f98 <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
90009792:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
90009794:	2a04      	cmp	r2, #4
90009796:	d902      	bls.n	9000979e <JPEG_Process+0x3ea>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
90009798:	f022 0203 	bic.w	r2, r2, #3
9000979c:	62a2      	str	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
9000979e:	2100      	movs	r1, #0
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900097a0:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
900097a2:	6221      	str	r1, [r4, #32]
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
900097a4:	6d61      	ldr	r1, [r4, #84]	@ 0x54
900097a6:	04c9      	lsls	r1, r1, #19
900097a8:	f53f ae18 	bmi.w	900093dc <JPEG_Process+0x28>
900097ac:	2a00      	cmp	r2, #0
900097ae:	f43f ae15 	beq.w	900093dc <JPEG_Process+0x28>
    if (nb_words >= nbRequestWords)
900097b2:	0891      	lsrs	r1, r2, #2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900097b4:	69a0      	ldr	r0, [r4, #24]
    if (nb_words >= nbRequestWords)
900097b6:	f040 8177 	bne.w	90009aa8 <JPEG_Process+0x6f4>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
900097ba:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
900097bc:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
900097be:	6a25      	ldr	r5, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
900097c0:	5c41      	ldrb	r1, [r0, r1]
          hjpeg->JpegInCount++;
900097c2:	f105 0501 	add.w	r5, r5, #1
900097c6:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
900097c8:	d010      	beq.n	900097ec <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
900097ca:	6a25      	ldr	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
900097cc:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
900097ce:	5d45      	ldrb	r5, [r0, r5]
900097d0:	ea41 2105 	orr.w	r1, r1, r5, lsl #8
          hjpeg->JpegInCount++;
900097d4:	6a25      	ldr	r5, [r4, #32]
900097d6:	f105 0501 	add.w	r5, r5, #1
900097da:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
900097dc:	d106      	bne.n	900097ec <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
900097de:	6a22      	ldr	r2, [r4, #32]
900097e0:	5c80      	ldrb	r0, [r0, r2]
          hjpeg->JpegInCount++;
900097e2:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
900097e4:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
900097e8:	3201      	adds	r2, #1
900097ea:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
900097ec:	6419      	str	r1, [r3, #64]	@ 0x40
900097ee:	e5f5      	b.n	900093dc <JPEG_Process+0x28>
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
900097f0:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900097f2:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
900097f4:	3204      	adds	r2, #4
900097f6:	4295      	cmp	r5, r2
900097f8:	f0c0 80cd 	bcc.w	90009996 <JPEG_Process+0x5e2>
      dataword = hjpeg->Instance->DOR;
900097fc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900097fe:	69e1      	ldr	r1, [r4, #28]
90009800:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009802:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009804:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009806:	69e2      	ldr	r2, [r4, #28]
90009808:	440a      	add	r2, r1
9000980a:	0a19      	lsrs	r1, r3, #8
9000980c:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000980e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009810:	69e2      	ldr	r2, [r4, #28]
90009812:	440a      	add	r2, r1
90009814:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009816:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009818:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000981a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000981c:	69e2      	ldr	r2, [r4, #28]
9000981e:	440a      	add	r2, r1
90009820:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009822:	6a63      	ldr	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009824:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
      hjpeg->JpegOutCount += 4UL;
90009826:	3304      	adds	r3, #4
90009828:	6263      	str	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000982a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000982c:	429a      	cmp	r2, r3
9000982e:	f47f aeea 	bne.w	90009606 <JPEG_Process+0x252>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009832:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009834:	4620      	mov	r0, r4
90009836:	69e1      	ldr	r1, [r4, #28]
90009838:	f7f8 fbce 	bl	90001fd8 <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000983c:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000983e:	6266      	str	r6, [r4, #36]	@ 0x24
90009840:	e5d8      	b.n	900093f4 <JPEG_Process+0x40>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009842:	f7f8 fc77 	bl	90002134 <HAL_JPEG_DecodeCpltCallback>
90009846:	e619      	b.n	9000947c <JPEG_Process+0xc8>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009848:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000984a:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000984e:	631a      	str	r2, [r3, #48]	@ 0x30
90009850:	e5f9      	b.n	90009446 <JPEG_Process+0x92>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009852:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009854:	4620      	mov	r0, r4
90009856:	69e1      	ldr	r1, [r4, #28]
90009858:	f7f8 fbbe 	bl	90001fd8 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000985c:	2300      	movs	r3, #0
9000985e:	6263      	str	r3, [r4, #36]	@ 0x24
90009860:	e5f9      	b.n	90009456 <JPEG_Process+0xa2>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009862:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009864:	f002 020c 	and.w	r2, r2, #12
90009868:	2a0c      	cmp	r2, #12
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000986a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000986c:	f000 812d 	beq.w	90009aca <JPEG_Process+0x716>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009870:	f002 020c 	and.w	r2, r2, #12
90009874:	2a08      	cmp	r2, #8
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009876:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009878:	f47f adb0 	bne.w	900093dc <JPEG_Process+0x28>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000987c:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
90009880:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
90009882:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009884:	f022 0206 	bic.w	r2, r2, #6
90009888:	631a      	str	r2, [r3, #48]	@ 0x30
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000988a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000988c:	e5a6      	b.n	900093dc <JPEG_Process+0x28>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000988e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009890:	4296      	cmp	r6, r2
90009892:	f67f adaf 	bls.w	900093f4 <JPEG_Process+0x40>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
90009896:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90009898:	1a30      	subs	r0, r6, r0
    for (index = 0; index < nb_words; index++)
9000989a:	0880      	lsrs	r0, r0, #2
9000989c:	d020      	beq.n	900098e0 <JPEG_Process+0x52c>
9000989e:	4629      	mov	r1, r5
900098a0:	e000      	b.n	900098a4 <JPEG_Process+0x4f0>
      dataword = hjpeg->Instance->DOR;
900098a2:	6823      	ldr	r3, [r4, #0]
900098a4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
    for (index = 0; index < nb_words; index++)
900098a6:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900098a8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900098aa:	69e6      	ldr	r6, [r4, #28]
    for (index = 0; index < nb_words; index++)
900098ac:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900098ae:	54b3      	strb	r3, [r6, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
900098b0:	6a66      	ldr	r6, [r4, #36]	@ 0x24
900098b2:	69e2      	ldr	r2, [r4, #28]
900098b4:	4432      	add	r2, r6
900098b6:	ea4f 2613 	mov.w	r6, r3, lsr #8
900098ba:	7056      	strb	r6, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900098bc:	6a66      	ldr	r6, [r4, #36]	@ 0x24
900098be:	69e2      	ldr	r2, [r4, #28]
900098c0:	4432      	add	r2, r6
900098c2:	ea4f 4613 	mov.w	r6, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900098c6:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900098ca:	7096      	strb	r6, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900098cc:	6a66      	ldr	r6, [r4, #36]	@ 0x24
900098ce:	69e2      	ldr	r2, [r4, #28]
900098d0:	4432      	add	r2, r6
900098d2:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
900098d4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900098d6:	f103 0304 	add.w	r3, r3, #4
900098da:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
900098dc:	d1e1      	bne.n	900098a2 <JPEG_Process+0x4ee>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
900098de:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
900098e0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900098e2:	69e1      	ldr	r1, [r4, #28]
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
900098e4:	429e      	cmp	r6, r3
900098e6:	f000 816e 	beq.w	90009bc6 <JPEG_Process+0x812>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
900098ea:	f8d4 8024 	ldr.w	r8, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
900098ee:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
900098f0:	ebb6 0008 	subs.w	r0, r6, r8
      dataword = hjpeg->Instance->DOR;
900098f4:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
      for (index = 0; index < nb_bytes; index++)
900098f6:	d00e      	beq.n	90009916 <JPEG_Process+0x562>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
900098f8:	f005 0303 	and.w	r3, r5, #3
900098fc:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
900098fe:	3501      	adds	r5, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
90009900:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
90009902:	42a8      	cmp	r0, r5
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
90009904:	fa27 f303 	lsr.w	r3, r7, r3
90009908:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000990a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000990c:	69e1      	ldr	r1, [r4, #28]
9000990e:	f103 0301 	add.w	r3, r3, #1
90009912:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
90009914:	d1f0      	bne.n	900098f8 <JPEG_Process+0x544>
      nb_bytes = 4UL - nb_bytes;
90009916:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000991a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000991c:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000991e:	eba8 0606 	sub.w	r6, r8, r6
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009922:	f7f8 fb59 	bl	90001fd8 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
90009926:	2200      	movs	r2, #0
      for (index = nb_bytes; index < 4UL; index++)
90009928:	2e03      	cmp	r6, #3
      hjpeg->JpegOutCount = 0;
9000992a:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000992c:	f63f ae6b 	bhi.w	90009606 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009930:	ea4f 02c6 	mov.w	r2, r6, lsl #3
90009934:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009936:	69e0      	ldr	r0, [r4, #28]
90009938:	fa27 f502 	lsr.w	r5, r7, r2
9000993c:	5445      	strb	r5, [r0, r1]
        hjpeg->JpegOutCount++;
9000993e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009940:	f101 0101 	add.w	r1, r1, #1
90009944:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009946:	f43f ae5e 	beq.w	90009606 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000994a:	f102 0108 	add.w	r1, r2, #8
9000994e:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90009950:	69e5      	ldr	r5, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
90009952:	2e02      	cmp	r6, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009954:	fa27 f101 	lsr.w	r1, r7, r1
90009958:	5429      	strb	r1, [r5, r0]
        hjpeg->JpegOutCount++;
9000995a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000995c:	f101 0101 	add.w	r1, r1, #1
90009960:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009962:	f43f ae50 	beq.w	90009606 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009966:	3210      	adds	r2, #16
90009968:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000996a:	69e0      	ldr	r0, [r4, #28]
9000996c:	fa27 f202 	lsr.w	r2, r7, r2
90009970:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
90009972:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009974:	3201      	adds	r2, #1
90009976:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009978:	2e00      	cmp	r6, #0
9000997a:	f47f ae44 	bne.w	90009606 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000997e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009980:	0e3f      	lsrs	r7, r7, #24
90009982:	69e2      	ldr	r2, [r4, #28]
90009984:	54d7      	strb	r7, [r2, r3]
        hjpeg->JpegOutCount++;
90009986:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009988:	3301      	adds	r3, #1
9000998a:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000998c:	e63b      	b.n	90009606 <JPEG_Process+0x252>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000998e:	428a      	cmp	r2, r1
90009990:	d07c      	beq.n	90009a8c <JPEG_Process+0x6d8>
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
90009992:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009994:	e522      	b.n	900093dc <JPEG_Process+0x28>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
90009996:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009998:	4295      	cmp	r5, r2
9000999a:	f67f ad2b 	bls.w	900093f4 <JPEG_Process+0x40>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000999e:	6a60      	ldr	r0, [r4, #36]	@ 0x24
900099a0:	1a28      	subs	r0, r5, r0
    for (index = 0; index < nb_words; index++)
900099a2:	0880      	lsrs	r0, r0, #2
900099a4:	d020      	beq.n	900099e8 <JPEG_Process+0x634>
900099a6:	4631      	mov	r1, r6
900099a8:	e000      	b.n	900099ac <JPEG_Process+0x5f8>
      dataword = hjpeg->Instance->DOR;
900099aa:	6823      	ldr	r3, [r4, #0]
900099ac:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
    for (index = 0; index < nb_words; index++)
900099ae:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900099b0:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900099b2:	69e5      	ldr	r5, [r4, #28]
    for (index = 0; index < nb_words; index++)
900099b4:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900099b6:	54ab      	strb	r3, [r5, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
900099b8:	6a65      	ldr	r5, [r4, #36]	@ 0x24
900099ba:	69e2      	ldr	r2, [r4, #28]
900099bc:	442a      	add	r2, r5
900099be:	ea4f 2513 	mov.w	r5, r3, lsr #8
900099c2:	7055      	strb	r5, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900099c4:	6a65      	ldr	r5, [r4, #36]	@ 0x24
900099c6:	69e2      	ldr	r2, [r4, #28]
900099c8:	442a      	add	r2, r5
900099ca:	ea4f 4513 	mov.w	r5, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900099ce:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900099d2:	7095      	strb	r5, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900099d4:	6a65      	ldr	r5, [r4, #36]	@ 0x24
900099d6:	69e2      	ldr	r2, [r4, #28]
900099d8:	442a      	add	r2, r5
900099da:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
900099dc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900099de:	f103 0304 	add.w	r3, r3, #4
900099e2:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
900099e4:	d1e1      	bne.n	900099aa <JPEG_Process+0x5f6>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
900099e6:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
900099e8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900099ea:	69e1      	ldr	r1, [r4, #28]
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
900099ec:	429d      	cmp	r5, r3
900099ee:	f000 80ea 	beq.w	90009bc6 <JPEG_Process+0x812>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
900099f2:	f8d4 8024 	ldr.w	r8, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
900099f6:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
900099f8:	ebb5 0008 	subs.w	r0, r5, r8
      dataword = hjpeg->Instance->DOR;
900099fc:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
      for (index = 0; index < nb_bytes; index++)
900099fe:	d00e      	beq.n	90009a1e <JPEG_Process+0x66a>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
90009a00:	f006 0303 	and.w	r3, r6, #3
90009a04:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
90009a06:	3601      	adds	r6, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
90009a08:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
90009a0a:	42b0      	cmp	r0, r6
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
90009a0c:	fa27 f303 	lsr.w	r3, r7, r3
90009a10:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
90009a12:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009a14:	69e1      	ldr	r1, [r4, #28]
90009a16:	f103 0301 	add.w	r3, r3, #1
90009a1a:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
90009a1c:	d1f0      	bne.n	90009a00 <JPEG_Process+0x64c>
      nb_bytes = 4UL - nb_bytes;
90009a1e:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009a22:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009a24:	4620      	mov	r0, r4
90009a26:	f7f8 fad7 	bl	90001fd8 <HAL_JPEG_DataReadyCallback>
      nb_bytes = 4UL - nb_bytes;
90009a2a:	eba8 0305 	sub.w	r3, r8, r5
      hjpeg->JpegOutCount = 0;
90009a2e:	2200      	movs	r2, #0
      for (index = nb_bytes; index < 4UL; index++)
90009a30:	2b03      	cmp	r3, #3
      hjpeg->JpegOutCount = 0;
90009a32:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009a34:	f63f ade7 	bhi.w	90009606 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009a38:	ea4f 02c3 	mov.w	r2, r3, lsl #3
90009a3c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009a3e:	69e0      	ldr	r0, [r4, #28]
90009a40:	fa27 f502 	lsr.w	r5, r7, r2
90009a44:	5445      	strb	r5, [r0, r1]
        hjpeg->JpegOutCount++;
90009a46:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009a48:	f101 0101 	add.w	r1, r1, #1
90009a4c:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009a4e:	f43f adda 	beq.w	90009606 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009a52:	f102 0108 	add.w	r1, r2, #8
90009a56:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90009a58:	69e5      	ldr	r5, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
90009a5a:	2b02      	cmp	r3, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009a5c:	fa27 f101 	lsr.w	r1, r7, r1
90009a60:	5429      	strb	r1, [r5, r0]
        hjpeg->JpegOutCount++;
90009a62:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009a64:	f101 0101 	add.w	r1, r1, #1
90009a68:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009a6a:	f43f adcc 	beq.w	90009606 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009a6e:	3210      	adds	r2, #16
90009a70:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009a72:	69e0      	ldr	r0, [r4, #28]
90009a74:	fa27 f202 	lsr.w	r2, r7, r2
90009a78:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
90009a7a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009a7c:	3201      	adds	r2, #1
90009a7e:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009a80:	2b00      	cmp	r3, #0
90009a82:	f43f af7c 	beq.w	9000997e <JPEG_Process+0x5ca>
90009a86:	e5be      	b.n	90009606 <JPEG_Process+0x252>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
90009a88:	1a52      	subs	r2, r2, r1
90009a8a:	e68b      	b.n	900097a4 <JPEG_Process+0x3f0>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
90009a8c:	6a21      	ldr	r1, [r4, #32]
90009a8e:	4620      	mov	r0, r4
90009a90:	f7f8 fa82 	bl	90001f98 <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
90009a94:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
90009a96:	2a04      	cmp	r2, #4
90009a98:	d902      	bls.n	90009aa0 <JPEG_Process+0x6ec>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
90009a9a:	f022 0203 	bic.w	r2, r2, #3
90009a9e:	62a2      	str	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
90009aa0:	2100      	movs	r1, #0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009aa2:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
90009aa4:	6221      	str	r1, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
90009aa6:	e5ba      	b.n	9000961e <JPEG_Process+0x26a>
        input_count = hjpeg->JpegInCount;
90009aa8:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009aaa:	1881      	adds	r1, r0, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009aac:	5c85      	ldrb	r5, [r0, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009aae:	788a      	ldrb	r2, [r1, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009ab0:	78c8      	ldrb	r0, [r1, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ab2:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ab4:	7849      	ldrb	r1, [r1, #1]
90009ab6:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90009aba:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009abc:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009ac0:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009ac2:	6a22      	ldr	r2, [r4, #32]
90009ac4:	3204      	adds	r2, #4
90009ac6:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
90009ac8:	e488      	b.n	900093dc <JPEG_Process+0x28>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009aca:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
90009ace:	6562      	str	r2, [r4, #84]	@ 0x54
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
90009ad0:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009ad2:	e483      	b.n	900093dc <JPEG_Process+0x28>
        input_count = hjpeg->JpegInCount;
90009ad4:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ad6:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009ad8:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ada:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009adc:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ade:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009ae0:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ae2:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
90009ae6:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ae8:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009aec:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009aee:	6a22      	ldr	r2, [r4, #32]
90009af0:	3204      	adds	r2, #4
90009af2:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009af4:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009af6:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009af8:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009afa:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009afc:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009afe:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009b00:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b02:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
90009b06:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b08:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b0c:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009b0e:	6a22      	ldr	r2, [r4, #32]
90009b10:	3204      	adds	r2, #4
90009b12:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009b14:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b16:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b18:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b1a:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b1c:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b1e:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009b20:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b22:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
90009b26:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b28:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b2c:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009b2e:	6a22      	ldr	r2, [r4, #32]
90009b30:	3204      	adds	r2, #4
90009b32:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009b34:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b36:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b38:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b3a:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b3c:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b3e:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009b40:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b42:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
90009b46:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b48:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b4c:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009b4e:	6a22      	ldr	r2, [r4, #32]
90009b50:	3204      	adds	r2, #4
90009b52:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009b54:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b56:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b58:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b5a:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b5c:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b5e:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009b60:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b62:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
90009b66:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b68:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b6c:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009b6e:	6a22      	ldr	r2, [r4, #32]
90009b70:	3204      	adds	r2, #4
90009b72:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009b74:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b76:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b78:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b7a:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b7c:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b7e:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009b80:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b82:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
90009b86:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b88:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b8c:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009b8e:	6a22      	ldr	r2, [r4, #32]
90009b90:	3204      	adds	r2, #4
90009b92:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009b94:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b96:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b98:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b9a:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b9c:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b9e:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009ba0:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ba2:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
90009ba6:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ba8:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009bac:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009bae:	6a22      	ldr	r2, [r4, #32]
90009bb0:	3204      	adds	r2, #4
90009bb2:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009bb4:	e5cd      	b.n	90009752 <JPEG_Process+0x39e>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009bb6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009bb8:	4620      	mov	r0, r4
90009bba:	69e1      	ldr	r1, [r4, #28]
90009bbc:	f7f8 fa0c 	bl	90001fd8 <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009bc0:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
90009bc2:	6265      	str	r5, [r4, #36]	@ 0x24
90009bc4:	e416      	b.n	900093f4 <JPEG_Process+0x40>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009bc6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009bc8:	4620      	mov	r0, r4
90009bca:	f7f8 fa05 	bl	90001fd8 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
90009bce:	2200      	movs	r2, #0
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009bd0:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
90009bd2:	6262      	str	r2, [r4, #36]	@ 0x24
90009bd4:	e40e      	b.n	900093f4 <JPEG_Process+0x40>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009bd6:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009bd8:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
90009bda:	6a25      	ldr	r5, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009bdc:	5c08      	ldrb	r0, [r1, r0]
          hjpeg->JpegInCount++;
90009bde:	f105 0501 	add.w	r5, r5, #1
90009be2:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009be4:	d010      	beq.n	90009c08 <JPEG_Process+0x854>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009be6:	6a25      	ldr	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009be8:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009bea:	5d4d      	ldrb	r5, [r1, r5]
90009bec:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
          hjpeg->JpegInCount++;
90009bf0:	6a25      	ldr	r5, [r4, #32]
90009bf2:	f105 0501 	add.w	r5, r5, #1
90009bf6:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009bf8:	d106      	bne.n	90009c08 <JPEG_Process+0x854>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009bfa:	6a22      	ldr	r2, [r4, #32]
90009bfc:	5c89      	ldrb	r1, [r1, r2]
          hjpeg->JpegInCount++;
90009bfe:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009c00:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
          hjpeg->JpegInCount++;
90009c04:	3201      	adds	r2, #1
90009c06:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
90009c08:	6418      	str	r0, [r3, #64]	@ 0x40
90009c0a:	f7ff bbe7 	b.w	900093dc <JPEG_Process+0x28>
90009c0e:	bf00      	nop

90009c10 <HAL_JPEG_IRQHandler>:
{
90009c10:	b538      	push	{r3, r4, r5, lr}
  switch (hjpeg->State)
90009c12:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
90009c16:	3b03      	subs	r3, #3
90009c18:	2b01      	cmp	r3, #1
90009c1a:	d900      	bls.n	90009c1e <HAL_JPEG_IRQHandler+0xe>
}
90009c1c:	bd38      	pop	{r3, r4, r5, pc}
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009c1e:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009c20:	4604      	mov	r4, r0
90009c22:	f003 030c 	and.w	r3, r3, #12
90009c26:	2b08      	cmp	r3, #8
90009c28:	d050      	beq.n	90009ccc <HAL_JPEG_IRQHandler+0xbc>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009c2a:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009c2c:	f003 030c 	and.w	r3, r3, #12
90009c30:	2b0c      	cmp	r3, #12
90009c32:	d1f3      	bne.n	90009c1c <HAL_JPEG_IRQHandler+0xc>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009c34:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
90009c36:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009c38:	f002 0203 	and.w	r2, r2, #3
90009c3c:	2a02      	cmp	r2, #2
90009c3e:	d049      	beq.n	90009cd4 <HAL_JPEG_IRQHandler+0xc4>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
90009c40:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009c42:	0692      	lsls	r2, r2, #26
90009c44:	d5ea      	bpl.n	90009c1c <HAL_JPEG_IRQHandler+0xc>
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
90009c46:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
90009c48:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
90009c4a:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
90009c4e:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009c50:	681a      	ldr	r2, [r3, #0]
90009c52:	f022 0201 	bic.w	r2, r2, #1
90009c56:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009c58:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009c5a:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90009c5e:	631a      	str	r2, [r3, #48]	@ 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90009c60:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90009c62:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90009c66:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
90009c68:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
90009c6c:	2b02      	cmp	r3, #2
90009c6e:	d054      	beq.n	90009d1a <HAL_JPEG_IRQHandler+0x10a>
    if (hjpeg->hdmaout->State == HAL_MDMA_STATE_BUSY)
90009c70:	6b60      	ldr	r0, [r4, #52]	@ 0x34
90009c72:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
90009c76:	2b02      	cmp	r3, #2
90009c78:	d043      	beq.n	90009d02 <HAL_JPEG_IRQHandler+0xf2>
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009c7a:	6803      	ldr	r3, [r0, #0]
90009c7c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90009c7e:	695b      	ldr	r3, [r3, #20]
90009c80:	f3c3 0310 	ubfx	r3, r3, #0, #17
90009c84:	1ad3      	subs	r3, r2, r3
90009c86:	6263      	str	r3, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90009c88:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009c8a:	429a      	cmp	r2, r3
90009c8c:	d048      	beq.n	90009d20 <HAL_JPEG_IRQHandler+0x110>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
90009c8e:	6822      	ldr	r2, [r4, #0]
90009c90:	6b55      	ldr	r5, [r2, #52]	@ 0x34
90009c92:	f015 0510 	ands.w	r5, r5, #16
90009c96:	d138      	bne.n	90009d0a <HAL_JPEG_IRQHandler+0xfa>
    if (hjpeg->JpegOutCount > 0UL)
90009c98:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009c9a:	2b00      	cmp	r3, #0
90009c9c:	d14b      	bne.n	90009d36 <HAL_JPEG_IRQHandler+0x126>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009c9e:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
90009ca0:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
90009ca2:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009ca4:	f023 0301 	bic.w	r3, r3, #1
90009ca8:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
90009caa:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009cac:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009cae:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
90009cb2:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009cb6:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009cba:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009cbc:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009cbe:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009cc0:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009cc4:	d034      	beq.n	90009d30 <HAL_JPEG_IRQHandler+0x120>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
90009cc6:	f7ff f9af 	bl	90009028 <HAL_JPEG_EncodeCpltCallback>
}
90009cca:	bd38      	pop	{r3, r4, r5, pc}
90009ccc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        (void) JPEG_Process(hjpeg);
90009cd0:	f7ff bb70 	b.w	900093b4 <JPEG_Process>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
90009cd4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009cd6:	0651      	lsls	r1, r2, #25
90009cd8:	d5b2      	bpl.n	90009c40 <HAL_JPEG_IRQHandler+0x30>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
90009cda:	1d05      	adds	r5, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
90009cdc:	4629      	mov	r1, r5
90009cde:	f7fe feaf 	bl	90008a40 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
90009ce2:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
90009ce4:	4629      	mov	r1, r5
90009ce6:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
90009ce8:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
90009cea:	f7f8 f927 	bl	90001f3c <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
90009cee:	6823      	ldr	r3, [r4, #0]
90009cf0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009cf2:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
90009cf6:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
90009cf8:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90009cfa:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
90009cfe:	639a      	str	r2, [r3, #56]	@ 0x38
90009d00:	e79e      	b.n	90009c40 <HAL_JPEG_IRQHandler+0x30>
}
90009d02:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmaout);
90009d06:	f000 bb35 	b.w	9000a374 <HAL_MDMA_Abort_IT>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009d0a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009d0c:	049b      	lsls	r3, r3, #18
90009d0e:	d485      	bmi.n	90009c1c <HAL_JPEG_IRQHandler+0xc>
    JPEG_DMA_PollResidualData(hjpeg);
90009d10:	4620      	mov	r0, r4
}
90009d12:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
90009d16:	f7ff b9f3 	b.w	90009100 <JPEG_DMA_PollResidualData>
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmain);
90009d1a:	f000 fb2b 	bl	9000a374 <HAL_MDMA_Abort_IT>
90009d1e:	e7a7      	b.n	90009c70 <HAL_JPEG_IRQHandler+0x60>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009d20:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009d22:	4620      	mov	r0, r4
90009d24:	69e1      	ldr	r1, [r4, #28]
90009d26:	f7f8 f957 	bl	90001fd8 <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
90009d2a:	2300      	movs	r3, #0
90009d2c:	6263      	str	r3, [r4, #36]	@ 0x24
90009d2e:	e7ae      	b.n	90009c8e <HAL_JPEG_IRQHandler+0x7e>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009d30:	f7f8 fa00 	bl	90002134 <HAL_JPEG_DecodeCpltCallback>
}
90009d34:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009d36:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009d38:	4620      	mov	r0, r4
90009d3a:	69e1      	ldr	r1, [r4, #28]
90009d3c:	f7f8 f94c 	bl	90001fd8 <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009d40:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
90009d42:	6265      	str	r5, [r4, #36]	@ 0x24
90009d44:	e7ab      	b.n	90009c9e <HAL_JPEG_IRQHandler+0x8e>
90009d46:	bf00      	nop

90009d48 <HAL_JPEG_GetState>:
  return hjpeg->State;
90009d48:	f890 004d 	ldrb.w	r0, [r0, #77]	@ 0x4d
}
90009d4c:	4770      	bx	lr
90009d4e:	bf00      	nop

90009d50 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
90009d50:	2800      	cmp	r0, #0
90009d52:	d052      	beq.n	90009dfa <HAL_LTDC_Init+0xaa>
{
90009d54:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
90009d56:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
90009d5a:	4604      	mov	r4, r0
90009d5c:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90009d60:	2b00      	cmp	r3, #0
90009d62:	d045      	beq.n	90009df0 <HAL_LTDC_Init+0xa0>
  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90009d64:	68a0      	ldr	r0, [r4, #8]
  hltdc->State = HAL_LTDC_STATE_BUSY;
90009d66:	2102      	movs	r1, #2
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90009d68:	e9d4 3200 	ldrd	r3, r2, [r4]
  hltdc->State = HAL_LTDC_STATE_BUSY;
90009d6c:	f884 10a1 	strb.w	r1, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90009d70:	4302      	orrs	r2, r0
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
90009d72:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90009d74:	68e0      	ldr	r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
90009d76:	f021 4170 	bic.w	r1, r1, #4026531840	@ 0xf0000000
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90009d7a:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
90009d7c:	6920      	ldr	r0, [r4, #16]
90009d7e:	4302      	orrs	r2, r0

  /* Set Synchronization size */
  tmp = (hltdc->Init.HorizontalSync << 16U);
90009d80:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
90009d82:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90009d84:	6999      	ldr	r1, [r3, #24]
90009d86:	430a      	orrs	r2, r1
90009d88:	619a      	str	r2, [r3, #24]
  WRITE_REG(hltdc->Instance->SSCR, (tmp | hltdc->Init.VerticalSync));

  /* Set Accumulated Back porch */
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
90009d8a:	e9d4 2106 	ldrd	r2, r1, [r4, #24]
  WRITE_REG(hltdc->Instance->SSCR, (tmp | hltdc->Init.VerticalSync));
90009d8e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
90009d92:	609a      	str	r2, [r3, #8]
  WRITE_REG(hltdc->Instance->BPCR, (tmp | hltdc->Init.AccumulatedVBP));

  /* Set Accumulated Active Width */
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
90009d94:	e9d4 2008 	ldrd	r2, r0, [r4, #32]
  WRITE_REG(hltdc->Instance->BPCR, (tmp | hltdc->Init.AccumulatedVBP));
90009d98:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
90009d9c:	60da      	str	r2, [r3, #12]
  WRITE_REG(hltdc->Instance->AWCR, (tmp | hltdc->Init.AccumulatedActiveH));

  /* Set Total Width */
  tmp = (hltdc->Init.TotalWidth << 16U);
90009d9e:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	@ 0x28
  WRITE_REG(hltdc->Instance->AWCR, (tmp | hltdc->Init.AccumulatedActiveH));
90009da2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
90009da6:	611a      	str	r2, [r3, #16]
  WRITE_REG(hltdc->Instance->TWCR, (tmp | hltdc->Init.TotalHeigh));
90009da8:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90009daa:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
90009dae:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
90009db0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
90009db2:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
90009db6:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
90009dba:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
90009dbe:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
90009dc0:	6add      	ldr	r5, [r3, #44]	@ 0x2c
90009dc2:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
90009dc6:	432a      	orrs	r2, r5
90009dc8:	ea42 2200 	orr.w	r2, r2, r0, lsl #8

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
90009dcc:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
90009dce:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
90009dd2:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
90009dd4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009dd6:	f042 0206 	orr.w	r2, r2, #6
90009dda:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
90009ddc:	699a      	ldr	r2, [r3, #24]
90009dde:	f042 0201 	orr.w	r2, r2, #1
90009de2:	619a      	str	r2, [r3, #24]

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
90009de4:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
90009de6:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
90009dea:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1

  return HAL_OK;
}
90009dee:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
90009df0:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
90009df4:	f7fa fa30 	bl	90004258 <HAL_LTDC_MspInit>
90009df8:	e7b4      	b.n	90009d64 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
90009dfa:	2001      	movs	r0, #1
}
90009dfc:	4770      	bx	lr
90009dfe:	bf00      	nop

90009e00 <HAL_LTDC_ErrorCallback>:
  * @brief  Error LTDC callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
90009e00:	4770      	bx	lr
90009e02:	bf00      	nop

90009e04 <HAL_LTDC_ReloadEventCallback>:
  * @brief  Reload Event callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
90009e04:	4770      	bx	lr
90009e06:	bf00      	nop

90009e08 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
90009e08:	6803      	ldr	r3, [r0, #0]
{
90009e0a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
90009e0c:	6b9d      	ldr	r5, [r3, #56]	@ 0x38
{
90009e0e:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
90009e10:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
90009e12:	076a      	lsls	r2, r5, #29
90009e14:	d501      	bpl.n	90009e1a <HAL_LTDC_IRQHandler+0x12>
90009e16:	0771      	lsls	r1, r6, #29
90009e18:	d41d      	bmi.n	90009e56 <HAL_LTDC_IRQHandler+0x4e>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
90009e1a:	07aa      	lsls	r2, r5, #30
90009e1c:	d501      	bpl.n	90009e22 <HAL_LTDC_IRQHandler+0x1a>
90009e1e:	07b3      	lsls	r3, r6, #30
90009e20:	d42d      	bmi.n	90009e7e <HAL_LTDC_IRQHandler+0x76>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
90009e22:	07e8      	lsls	r0, r5, #31
90009e24:	d501      	bpl.n	90009e2a <HAL_LTDC_IRQHandler+0x22>
90009e26:	07f1      	lsls	r1, r6, #31
90009e28:	d440      	bmi.n	90009eac <HAL_LTDC_IRQHandler+0xa4>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
90009e2a:	072a      	lsls	r2, r5, #28
90009e2c:	d501      	bpl.n	90009e32 <HAL_LTDC_IRQHandler+0x2a>
90009e2e:	0733      	lsls	r3, r6, #28
90009e30:	d400      	bmi.n	90009e34 <HAL_LTDC_IRQHandler+0x2c>
}
90009e32:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
90009e34:	6823      	ldr	r3, [r4, #0]
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
90009e36:	2008      	movs	r0, #8
    hltdc->State = HAL_LTDC_STATE_READY;
90009e38:	2501      	movs	r5, #1
    __HAL_UNLOCK(hltdc);
90009e3a:	2100      	movs	r1, #0
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
90009e3c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009e3e:	f022 0208 	bic.w	r2, r2, #8
90009e42:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
90009e44:	63d8      	str	r0, [r3, #60]	@ 0x3c
    HAL_LTDC_ReloadEventCallback(hltdc);
90009e46:	4620      	mov	r0, r4
    hltdc->State = HAL_LTDC_STATE_READY;
90009e48:	f884 50a1 	strb.w	r5, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
90009e4c:	f884 10a0 	strb.w	r1, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
90009e50:	f7ff ffd8 	bl	90009e04 <HAL_LTDC_ReloadEventCallback>
}
90009e54:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
90009e56:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009e58:	f022 0204 	bic.w	r2, r2, #4
90009e5c:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
90009e5e:	2204      	movs	r2, #4
90009e60:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
90009e62:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
90009e66:	f043 0301 	orr.w	r3, r3, #1
90009e6a:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
90009e6e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
90009e70:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
90009e74:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
90009e78:	f7ff ffc2 	bl	90009e00 <HAL_LTDC_ErrorCallback>
90009e7c:	e7cd      	b.n	90009e1a <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
90009e7e:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
90009e80:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
90009e82:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009e84:	f022 0202 	bic.w	r2, r2, #2
90009e88:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
90009e8a:	2202      	movs	r2, #2
90009e8c:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_ERROR;
90009e8e:	2204      	movs	r2, #4
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
90009e90:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
90009e94:	f043 0302 	orr.w	r3, r3, #2
90009e98:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
90009e9c:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
90009e9e:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
90009ea2:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
90009ea6:	f7ff ffab 	bl	90009e00 <HAL_LTDC_ErrorCallback>
90009eaa:	e7ba      	b.n	90009e22 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
90009eac:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
90009eae:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
90009eb0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009eb2:	f022 0201 	bic.w	r2, r2, #1
90009eb6:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
90009eb8:	2201      	movs	r2, #1
90009eba:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
90009ebc:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
90009ebe:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
90009ec2:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
90009ec6:	f7f9 fbe5 	bl	90003694 <HAL_LTDC_LineEventCallback>
90009eca:	e7ae      	b.n	90009e2a <HAL_LTDC_IRQHandler+0x22>

90009ecc <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
90009ecc:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
90009ed0:	2b01      	cmp	r3, #1
90009ed2:	f000 80b6 	beq.w	9000a042 <HAL_LTDC_ConfigLayer+0x176>

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
90009ed6:	2302      	movs	r3, #2
{
90009ed8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009edc:	f04f 0e34 	mov.w	lr, #52	@ 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90009ee0:	f8d0 9000 	ldr.w	r9, [r0]
{
90009ee4:	b083      	sub	sp, #12
  hltdc->State = HAL_LTDC_STATE_BUSY;
90009ee6:	f880 30a1 	strb.w	r3, [r0, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009eea:	fb0e 0e02 	mla	lr, lr, r2, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90009eee:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90009ef0:	f8d9 300c 	ldr.w	r3, [r9, #12]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009ef4:	460c      	mov	r4, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90009ef6:	f102 0684 	add.w	r6, r2, #132	@ 0x84
90009efa:	460d      	mov	r5, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90009efc:	f3c3 4b0b 	ubfx	fp, r3, #16, #12
90009f00:	4680      	mov	r8, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90009f02:	eb09 0c06 	add.w	ip, r9, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009f06:	f10e 0e38 	add.w	lr, lr, #56	@ 0x38
  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
90009f0a:	f8df a140 	ldr.w	sl, [pc, #320]	@ 9000a04c <HAL_LTDC_ConfigLayer+0x180>
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90009f0e:	f8dc 3004 	ldr.w	r3, [ip, #4]
90009f12:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
90009f16:	9301      	str	r3, [sp, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009f18:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
90009f1a:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
90009f1e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90009f20:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009f22:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
90009f26:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
90009f28:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
90009f2c:	6823      	ldr	r3, [r4, #0]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90009f2e:	44bb      	add	fp, r7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
90009f30:	682a      	ldr	r2, [r5, #0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009f32:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90009f36:	9b01      	ldr	r3, [sp, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
90009f38:	1c51      	adds	r1, r2, #1
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
90009f3a:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90009f3c:	f8cc 3004 	str.w	r3, [ip, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
90009f40:	f8d9 300c 	ldr.w	r3, [r9, #12]
90009f44:	f3c3 430b 	ubfx	r3, r3, #16, #12
90009f48:	440b      	add	r3, r1
90009f4a:	ea43 430b 	orr.w	r3, r3, fp, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
90009f4e:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
90009f52:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
90009f56:	f8dc 3008 	ldr.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
90009f5a:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
90009f5e:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
90009f62:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
90009f64:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
90009f68:	68ab      	ldr	r3, [r5, #8]
90009f6a:	f8d9 000c 	ldr.w	r0, [r9, #12]
90009f6e:	3301      	adds	r3, #1
90009f70:	f3c0 000a 	ubfx	r0, r0, #0, #11
90009f74:	4403      	add	r3, r0
  tmp2 = (pLayerCfg->Alpha0 << 24U);
90009f76:	69a8      	ldr	r0, [r5, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
90009f78:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
90009f7c:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
90009f7e:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
90009f82:	2907      	cmp	r1, #7
90009f84:	f8dc 3010 	ldr.w	r3, [ip, #16]
90009f88:	f023 0307 	bic.w	r3, r3, #7
90009f8c:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
90009f90:	f8cc 1010 	str.w	r1, [ip, #16]
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
90009f94:	f895 3030 	ldrb.w	r3, [r5, #48]	@ 0x30
90009f98:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
90009f9c:	f895 0031 	ldrb.w	r0, [r5, #49]	@ 0x31
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
90009fa0:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
90009fa4:	f895 0032 	ldrb.w	r0, [r5, #50]	@ 0x32
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
90009fa8:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
90009fac:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
90009fb0:	f8dc 3014 	ldr.w	r3, [ip, #20]
90009fb4:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
90009fb8:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
90009fbc:	696b      	ldr	r3, [r5, #20]
90009fbe:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
90009fc2:	f8dc 001c 	ldr.w	r0, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
90009fc6:	69eb      	ldr	r3, [r5, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
90009fc8:	ea00 0a0a 	and.w	sl, r0, sl
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
90009fcc:	6a28      	ldr	r0, [r5, #32]
90009fce:	ea43 0300 	orr.w	r3, r3, r0
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
90009fd2:	f8cc a01c 	str.w	sl, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
90009fd6:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->CFBAR, pLayerCfg->FBStartAdress);
90009fda:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
90009fdc:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
90009fe0:	d82d      	bhi.n	9000a03e <HAL_LTDC_ConfigLayer+0x172>
90009fe2:	4b19      	ldr	r3, [pc, #100]	@ (9000a048 <HAL_LTDC_ConfigLayer+0x17c>)
90009fe4:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
90009fe8:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
90009fea:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
90009fec:	fb03 f707 	mul.w	r7, r3, r7
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
90009ff0:	fb02 f303 	mul.w	r3, r2, r3
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
90009ff4:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
90009ff6:	3707      	adds	r7, #7
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
90009ff8:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
90009ffc:	f8dc 302c 	ldr.w	r3, [ip, #44]	@ 0x2c
9000a000:	f003 23e0 	and.w	r3, r3, #3758153728	@ 0xe000e000
9000a004:	f8cc 302c 	str.w	r3, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000a008:	f8cc 702c 	str.w	r7, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
9000a00c:	f8dc 3030 	ldr.w	r3, [ip, #48]	@ 0x30
9000a010:	f36f 030a 	bfc	r3, #0, #11
9000a014:	f8cc 3030 	str.w	r3, [ip, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000a018:	f8cc 2030 	str.w	r2, [ip, #48]	@ 0x30
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000a01c:	2201      	movs	r2, #1

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
9000a01e:	f859 3006 	ldr.w	r3, [r9, r6]
9000a022:	4313      	orrs	r3, r2
9000a024:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
9000a028:	2300      	movs	r3, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000a02a:	f8c9 2024 	str.w	r2, [r9, #36]	@ 0x24
  return HAL_OK;
9000a02e:	4618      	mov	r0, r3
  hltdc->State  = HAL_LTDC_STATE_READY;
9000a030:	f888 20a1 	strb.w	r2, [r8, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
9000a034:	f888 30a0 	strb.w	r3, [r8, #160]	@ 0xa0
}
9000a038:	b003      	add	sp, #12
9000a03a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->CFBAR, pLayerCfg->FBStartAdress);
9000a03e:	2301      	movs	r3, #1
9000a040:	e7d2      	b.n	90009fe8 <HAL_LTDC_ConfigLayer+0x11c>
  __HAL_LOCK(hltdc);
9000a042:	2002      	movs	r0, #2
}
9000a044:	4770      	bx	lr
9000a046:	bf00      	nop
9000a048:	9002de3c 	.word	0x9002de3c
9000a04c:	fffff8f8 	.word	0xfffff8f8

9000a050 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
9000a050:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
9000a054:	2a01      	cmp	r2, #1
9000a056:	d019      	beq.n	9000a08c <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a058:	6802      	ldr	r2, [r0, #0]
9000a05a:	4603      	mov	r3, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a05c:	2002      	movs	r0, #2
  __HAL_UNLOCK(hltdc);
9000a05e:	f04f 0c00 	mov.w	ip, #0
{
9000a062:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a064:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a068:	6b50      	ldr	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
9000a06a:	4c09      	ldr	r4, [pc, #36]	@ (9000a090 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a06c:	f020 0001 	bic.w	r0, r0, #1
9000a070:	6350      	str	r0, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000a072:	2001      	movs	r0, #1
  LTDC->LIPCR = (uint32_t)Line;
9000a074:	6421      	str	r1, [r4, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
9000a076:	6b51      	ldr	r1, [r2, #52]	@ 0x34
9000a078:	4301      	orrs	r1, r0
9000a07a:	6351      	str	r1, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000a07c:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  return HAL_OK;
9000a080:	4660      	mov	r0, ip
  __HAL_UNLOCK(hltdc);
9000a082:	f883 c0a0 	strb.w	ip, [r3, #160]	@ 0xa0
}
9000a086:	f85d 4b04 	ldr.w	r4, [sp], #4
9000a08a:	4770      	bx	lr
  __HAL_LOCK(hltdc);
9000a08c:	2002      	movs	r0, #2
}
9000a08e:	4770      	bx	lr
9000a090:	50001000 	.word	0x50001000

9000a094 <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
9000a094:	b538      	push	{r3, r4, r5, lr}
9000a096:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
9000a098:	f7fc fca8 	bl	900069ec <HAL_GetTick>

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
9000a09c:	2c00      	cmp	r4, #0
9000a09e:	d058      	beq.n	9000a152 <HAL_MDMA_Init+0xbe>

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
9000a0a0:	6823      	ldr	r3, [r4, #0]
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000a0a2:	2202      	movs	r2, #2
  __HAL_UNLOCK(hmdma);
9000a0a4:	2100      	movs	r1, #0
9000a0a6:	4605      	mov	r5, r0
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000a0a8:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
  __HAL_UNLOCK(hmdma);
9000a0ac:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
  __HAL_MDMA_DISABLE(hmdma);
9000a0b0:	68da      	ldr	r2, [r3, #12]
9000a0b2:	f022 0201 	bic.w	r2, r2, #1
9000a0b6:	60da      	str	r2, [r3, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a0b8:	e005      	b.n	9000a0c6 <HAL_MDMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000a0ba:	f7fc fc97 	bl	900069ec <HAL_GetTick>
9000a0be:	1b43      	subs	r3, r0, r5
9000a0c0:	2b05      	cmp	r3, #5
9000a0c2:	d841      	bhi.n	9000a148 <HAL_MDMA_Init+0xb4>
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a0c4:	6823      	ldr	r3, [r4, #0]
9000a0c6:	68da      	ldr	r2, [r3, #12]
9000a0c8:	07d2      	lsls	r2, r2, #31
9000a0ca:	d4f6      	bmi.n	9000a0ba <HAL_MDMA_Init+0x26>
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000a0cc:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
9000a0d0:	69e0      	ldr	r0, [r4, #28]
9000a0d2:	432a      	orrs	r2, r5
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000a0d4:	68e1      	ldr	r1, [r4, #12]
9000a0d6:	6925      	ldr	r5, [r4, #16]
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000a0d8:	4302      	orrs	r2, r0
9000a0da:	6a20      	ldr	r0, [r4, #32]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000a0dc:	4329      	orrs	r1, r5
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000a0de:	4302      	orrs	r2, r0
9000a0e0:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000a0e2:	4302      	orrs	r2, r0
9000a0e4:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
9000a0e6:	4302      	orrs	r2, r0
9000a0e8:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000a0ea:	4302      	orrs	r2, r0
9000a0ec:	68a0      	ldr	r0, [r4, #8]
9000a0ee:	4302      	orrs	r2, r0
9000a0f0:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
9000a0f2:	3801      	subs	r0, #1
9000a0f4:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a0f8:	6860      	ldr	r0, [r4, #4]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000a0fa:	60d9      	str	r1, [r3, #12]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a0fc:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
9000a100:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a102:	d103      	bne.n	9000a10c <HAL_MDMA_Init+0x78>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
9000a104:	691a      	ldr	r2, [r3, #16]
9000a106:	f042 4240 	orr.w	r2, r2, #3221225472	@ 0xc0000000
9000a10a:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
9000a10c:	2100      	movs	r1, #0

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000a10e:	6b62      	ldr	r2, [r4, #52]	@ 0x34
9000a110:	428a      	cmp	r2, r1
  hmdma->Instance->CBNDTR = 0;
9000a112:	6159      	str	r1, [r3, #20]
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000a114:	db1f      	blt.n	9000a156 <HAL_MDMA_Init+0xc2>
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
9000a116:	b292      	uxth	r2, r2
9000a118:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000a11a:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000a11c:	2a00      	cmp	r2, #0
9000a11e:	db24      	blt.n	9000a16a <HAL_MDMA_Init+0xd6>
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000a120:	6a19      	ldr	r1, [r3, #32]
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a122:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000a126:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000a12a:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a12c:	d029      	beq.n	9000a182 <HAL_MDMA_Init+0xee>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
9000a12e:	b2c0      	uxtb	r0, r0
9000a130:	6298      	str	r0, [r3, #40]	@ 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
9000a132:	2200      	movs	r2, #0
  hmdma->State = HAL_MDMA_STATE_READY;
9000a134:	2101      	movs	r1, #1
  hmdma->Instance->CLAR =  0;
9000a136:	625a      	str	r2, [r3, #36]	@ 0x24
  return HAL_OK;
9000a138:	4610      	mov	r0, r2
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000a13a:	66a2      	str	r2, [r4, #104]	@ 0x68
  hmdma->LinkedListNodeCounter  = 0;
9000a13c:	6662      	str	r2, [r4, #100]	@ 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
9000a13e:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
  hmdma->FirstLinkedListNodeAddress  = 0;
9000a142:	e9c4 2217 	strd	r2, r2, [r4, #92]	@ 0x5c
}
9000a146:	bd38      	pop	{r3, r4, r5, pc}
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000a148:	2240      	movs	r2, #64	@ 0x40
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000a14a:	2303      	movs	r3, #3
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000a14c:	66a2      	str	r2, [r4, #104]	@ 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000a14e:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    return HAL_ERROR;
9000a152:	2001      	movs	r0, #1
}
9000a154:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000a156:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
9000a158:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000a15a:	f441 2180 	orr.w	r1, r1, #262144	@ 0x40000
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000a15e:	b292      	uxth	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000a160:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000a162:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000a164:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000a166:	2a00      	cmp	r2, #0
9000a168:	dada      	bge.n	9000a120 <HAL_MDMA_Init+0x8c>
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000a16a:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
9000a16c:	4252      	negs	r2, r2
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a16e:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000a172:	f441 2100 	orr.w	r1, r1, #524288	@ 0x80000
9000a176:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000a178:	6a19      	ldr	r1, [r3, #32]
9000a17a:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000a17e:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a180:	d1d5      	bne.n	9000a12e <HAL_MDMA_Init+0x9a>
    hmdma->Instance->CTBR = 0;
9000a182:	2200      	movs	r2, #0
9000a184:	629a      	str	r2, [r3, #40]	@ 0x28
9000a186:	e7d4      	b.n	9000a132 <HAL_MDMA_Init+0x9e>

9000a188 <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
9000a188:	b1f8      	cbz	r0, 9000a1ca <HAL_MDMA_DeInit+0x42>
  __HAL_MDMA_DISABLE(hmdma);
9000a18a:	6802      	ldr	r2, [r0, #0]
9000a18c:	4601      	mov	r1, r0
  hmdma->Instance->CCR  = 0;
9000a18e:	2300      	movs	r3, #0
  __HAL_MDMA_DISABLE(hmdma);
9000a190:	68d0      	ldr	r0, [r2, #12]
{
9000a192:	b410      	push	{r4}
  __HAL_MDMA_DISABLE(hmdma);
9000a194:	f020 0001 	bic.w	r0, r0, #1
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000a198:	241f      	movs	r4, #31
  __HAL_MDMA_DISABLE(hmdma);
9000a19a:	60d0      	str	r0, [r2, #12]
  return HAL_OK;
9000a19c:	4618      	mov	r0, r3
  hmdma->Instance->CCR  = 0;
9000a19e:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
9000a1a0:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
9000a1a2:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
9000a1a4:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
9000a1a6:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
9000a1a8:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
9000a1aa:	6253      	str	r3, [r2, #36]	@ 0x24
  hmdma->Instance->CTBR = 0;
9000a1ac:	6293      	str	r3, [r2, #40]	@ 0x28
  hmdma->Instance->CMAR = 0;
9000a1ae:	6313      	str	r3, [r2, #48]	@ 0x30
  hmdma->Instance->CMDR = 0;
9000a1b0:	6353      	str	r3, [r2, #52]	@ 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000a1b2:	6054      	str	r4, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000a1b4:	668b      	str	r3, [r1, #104]	@ 0x68
  __HAL_UNLOCK(hmdma);
9000a1b6:	f881 303c 	strb.w	r3, [r1, #60]	@ 0x3c
  hmdma->State = HAL_MDMA_STATE_RESET;
9000a1ba:	f881 303d 	strb.w	r3, [r1, #61]	@ 0x3d
}
9000a1be:	f85d 4b04 	ldr.w	r4, [sp], #4
  hmdma->LinkedListNodeCounter  = 0;
9000a1c2:	664b      	str	r3, [r1, #100]	@ 0x64
  hmdma->FirstLinkedListNodeAddress  = 0;
9000a1c4:	e9c1 3317 	strd	r3, r3, [r1, #92]	@ 0x5c
}
9000a1c8:	4770      	bx	lr
    return HAL_ERROR;
9000a1ca:	2001      	movs	r0, #1
}
9000a1cc:	4770      	bx	lr
9000a1ce:	bf00      	nop

9000a1d0 <HAL_MDMA_ConfigPostRequestMask>:
  if(hmdma == NULL)
9000a1d0:	b308      	cbz	r0, 9000a216 <HAL_MDMA_ConfigPostRequestMask+0x46>
9000a1d2:	4603      	mov	r3, r0
  __HAL_LOCK(hmdma);
9000a1d4:	f890 003c 	ldrb.w	r0, [r0, #60]	@ 0x3c
9000a1d8:	2801      	cmp	r0, #1
9000a1da:	d01e      	beq.n	9000a21a <HAL_MDMA_ConfigPostRequestMask+0x4a>
{
9000a1dc:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hmdma);
9000a1de:	f04f 0e01 	mov.w	lr, #1
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000a1e2:	f893 c03d 	ldrb.w	ip, [r3, #61]	@ 0x3d
9000a1e6:	45f4      	cmp	ip, lr
9000a1e8:	fa5f f08c 	uxtb.w	r0, ip
  __HAL_LOCK(hmdma);
9000a1ec:	f883 e03c 	strb.w	lr, [r3, #60]	@ 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000a1f0:	d004      	beq.n	9000a1fc <HAL_MDMA_ConfigPostRequestMask+0x2c>
      status =  HAL_ERROR;
9000a1f2:	4670      	mov	r0, lr
  __HAL_UNLOCK(hmdma);
9000a1f4:	2200      	movs	r2, #0
9000a1f6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
}
9000a1fa:	bd30      	pop	{r4, r5, pc}
    if((hmdma->Instance->CTCR & MDMA_CTCR_SWRM) == 0U)
9000a1fc:	681c      	ldr	r4, [r3, #0]
9000a1fe:	6925      	ldr	r5, [r4, #16]
9000a200:	006d      	lsls	r5, r5, #1
9000a202:	d4f7      	bmi.n	9000a1f4 <HAL_MDMA_ConfigPostRequestMask+0x24>
      hmdma->Instance->CMAR = MaskAddress;
9000a204:	6321      	str	r1, [r4, #48]	@ 0x30
      hmdma->Instance->CMDR = MaskData;
9000a206:	6362      	str	r2, [r4, #52]	@ 0x34
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000a208:	6922      	ldr	r2, [r4, #16]
      if(MaskAddress == 0U)
9000a20a:	b941      	cbnz	r1, 9000a21e <HAL_MDMA_ConfigPostRequestMask+0x4e>
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000a20c:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
9000a210:	6122      	str	r2, [r4, #16]
  HAL_StatusTypeDef  status = HAL_OK;
9000a212:	2000      	movs	r0, #0
9000a214:	e7ee      	b.n	9000a1f4 <HAL_MDMA_ConfigPostRequestMask+0x24>
    return HAL_ERROR;
9000a216:	2001      	movs	r0, #1
9000a218:	4770      	bx	lr
  __HAL_LOCK(hmdma);
9000a21a:	2002      	movs	r0, #2
}
9000a21c:	4770      	bx	lr
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000a21e:	f042 4200 	orr.w	r2, r2, #2147483648	@ 0x80000000
9000a222:	6122      	str	r2, [r4, #16]
9000a224:	e7f5      	b.n	9000a212 <HAL_MDMA_ConfigPostRequestMask+0x42>
9000a226:	bf00      	nop

9000a228 <HAL_MDMA_Start_IT>:
  if(hmdma == NULL)
9000a228:	2800      	cmp	r0, #0
9000a22a:	d066      	beq.n	9000a2fa <HAL_MDMA_Start_IT+0xd2>
{
9000a22c:	b470      	push	{r4, r5, r6}
  __HAL_LOCK(hmdma);
9000a22e:	f890 403c 	ldrb.w	r4, [r0, #60]	@ 0x3c
9000a232:	2c01      	cmp	r4, #1
9000a234:	d009      	beq.n	9000a24a <HAL_MDMA_Start_IT+0x22>
9000a236:	2401      	movs	r4, #1
9000a238:	f880 403c 	strb.w	r4, [r0, #60]	@ 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000a23c:	f890 403d 	ldrb.w	r4, [r0, #61]	@ 0x3d
9000a240:	2c01      	cmp	r4, #1
9000a242:	d005      	beq.n	9000a250 <HAL_MDMA_Start_IT+0x28>
    __HAL_UNLOCK(hmdma);
9000a244:	2300      	movs	r3, #0
9000a246:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  __HAL_LOCK(hmdma);
9000a24a:	2002      	movs	r0, #2
}
9000a24c:	bc70      	pop	{r4, r5, r6}
9000a24e:	4770      	bx	lr
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000a250:	2402      	movs	r4, #2
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000a252:	9d03      	ldr	r5, [sp, #12]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000a254:	261f      	movs	r6, #31
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000a256:	f011 4f5f 	tst.w	r1, #3741319168	@ 0xdf000000
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000a25a:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000a25e:	f04f 0400 	mov.w	r4, #0
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000a262:	f105 3cff 	add.w	ip, r5, #4294967295
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000a266:	6684      	str	r4, [r0, #104]	@ 0x68
    __HAL_MDMA_DISABLE(hmdma);
9000a268:	6804      	ldr	r4, [r0, #0]
9000a26a:	68e5      	ldr	r5, [r4, #12]
9000a26c:	f025 0501 	bic.w	r5, r5, #1
9000a270:	60e5      	str	r5, [r4, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000a272:	6965      	ldr	r5, [r4, #20]
9000a274:	f363 0510 	bfi	r5, r3, #0, #17
9000a278:	6165      	str	r5, [r4, #20]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000a27a:	6963      	ldr	r3, [r4, #20]
9000a27c:	f3c3 0313 	ubfx	r3, r3, #0, #20
9000a280:	ea43 530c 	orr.w	r3, r3, ip, lsl #20
9000a284:	6163      	str	r3, [r4, #20]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000a286:	6066      	str	r6, [r4, #4]
  hmdma->Instance->CDAR = DstAddress;
9000a288:	61e2      	str	r2, [r4, #28]
  hmdma->Instance->CSAR = SrcAddress;
9000a28a:	61a1      	str	r1, [r4, #24]
    hmdma->Instance->CTBR |= MDMA_CTBR_SBUS;
9000a28c:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000a28e:	bf0c      	ite	eq
9000a290:	f443 3380 	orreq.w	r3, r3, #65536	@ 0x10000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000a294:	f423 3380 	bicne.w	r3, r3, #65536	@ 0x10000
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000a298:	f012 4f5f 	tst.w	r2, #3741319168	@ 0xdf000000
    if(hmdma->XferBlockCpltCallback != NULL)
9000a29c:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000a29e:	62a3      	str	r3, [r4, #40]	@ 0x28
    hmdma->Instance->CTBR |= MDMA_CTBR_DBUS;
9000a2a0:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000a2a2:	bf0c      	ite	eq
9000a2a4:	f443 3300 	orreq.w	r3, r3, #131072	@ 0x20000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_DBUS);
9000a2a8:	f423 3300 	bicne.w	r3, r3, #131072	@ 0x20000
9000a2ac:	62a3      	str	r3, [r4, #40]	@ 0x28
  hmdma->Instance->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;
9000a2ae:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
9000a2b0:	6263      	str	r3, [r4, #36]	@ 0x24
    __HAL_MDMA_ENABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC));
9000a2b2:	68e3      	ldr	r3, [r4, #12]
9000a2b4:	f043 0306 	orr.w	r3, r3, #6
9000a2b8:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBlockCpltCallback != NULL)
9000a2ba:	b11a      	cbz	r2, 9000a2c4 <HAL_MDMA_Start_IT+0x9c>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BT);
9000a2bc:	68e3      	ldr	r3, [r4, #12]
9000a2be:	f043 0310 	orr.w	r3, r3, #16
9000a2c2:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000a2c4:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9000a2c6:	b11b      	cbz	r3, 9000a2d0 <HAL_MDMA_Start_IT+0xa8>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BRT);
9000a2c8:	68e3      	ldr	r3, [r4, #12]
9000a2ca:	f043 0308 	orr.w	r3, r3, #8
9000a2ce:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBufferCpltCallback != NULL)
9000a2d0:	6c83      	ldr	r3, [r0, #72]	@ 0x48
9000a2d2:	b11b      	cbz	r3, 9000a2dc <HAL_MDMA_Start_IT+0xb4>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BFTC);
9000a2d4:	68e3      	ldr	r3, [r4, #12]
9000a2d6:	f043 0320 	orr.w	r3, r3, #32
9000a2da:	60e3      	str	r3, [r4, #12]
    __HAL_MDMA_ENABLE(hmdma);
9000a2dc:	68e3      	ldr	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a2de:	6842      	ldr	r2, [r0, #4]
    __HAL_MDMA_ENABLE(hmdma);
9000a2e0:	f043 0301 	orr.w	r3, r3, #1
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a2e4:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
    __HAL_MDMA_ENABLE(hmdma);
9000a2e8:	60e3      	str	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a2ea:	d103      	bne.n	9000a2f4 <HAL_MDMA_Start_IT+0xcc>
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000a2ec:	68e3      	ldr	r3, [r4, #12]
9000a2ee:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000a2f2:	60e3      	str	r3, [r4, #12]
  return HAL_OK;
9000a2f4:	2000      	movs	r0, #0
}
9000a2f6:	bc70      	pop	{r4, r5, r6}
9000a2f8:	4770      	bx	lr
    return HAL_ERROR;
9000a2fa:	2001      	movs	r0, #1
}
9000a2fc:	4770      	bx	lr
9000a2fe:	bf00      	nop

9000a300 <HAL_MDMA_Abort>:
{
9000a300:	b538      	push	{r3, r4, r5, lr}
9000a302:	4604      	mov	r4, r0
  uint32_t tickstart =  HAL_GetTick();
9000a304:	f7fc fb72 	bl	900069ec <HAL_GetTick>
  if(hmdma == NULL)
9000a308:	b334      	cbz	r4, 9000a358 <HAL_MDMA_Abort+0x58>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000a30a:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
9000a30e:	2b02      	cmp	r3, #2
9000a310:	d11d      	bne.n	9000a34e <HAL_MDMA_Abort+0x4e>
    __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000a312:	6822      	ldr	r2, [r4, #0]
9000a314:	4605      	mov	r5, r0
9000a316:	68d3      	ldr	r3, [r2, #12]
9000a318:	f023 033e 	bic.w	r3, r3, #62	@ 0x3e
9000a31c:	60d3      	str	r3, [r2, #12]
    __HAL_MDMA_DISABLE(hmdma);
9000a31e:	68d3      	ldr	r3, [r2, #12]
9000a320:	f023 0301 	bic.w	r3, r3, #1
9000a324:	60d3      	str	r3, [r2, #12]
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a326:	e005      	b.n	9000a334 <HAL_MDMA_Abort+0x34>
      if( (HAL_GetTick()  - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000a328:	f7fc fb60 	bl	900069ec <HAL_GetTick>
9000a32c:	1b43      	subs	r3, r0, r5
9000a32e:	2b05      	cmp	r3, #5
9000a330:	d814      	bhi.n	9000a35c <HAL_MDMA_Abort+0x5c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a332:	6822      	ldr	r2, [r4, #0]
9000a334:	68d3      	ldr	r3, [r2, #12]
9000a336:	f013 0301 	ands.w	r3, r3, #1
9000a33a:	d1f5      	bne.n	9000a328 <HAL_MDMA_Abort+0x28>
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
9000a33c:	201f      	movs	r0, #31
    hmdma->State = HAL_MDMA_STATE_READY;
9000a33e:	2101      	movs	r1, #1
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
9000a340:	6050      	str	r0, [r2, #4]
  return HAL_OK;
9000a342:	4618      	mov	r0, r3
    __HAL_UNLOCK(hmdma);
9000a344:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hmdma->State = HAL_MDMA_STATE_READY;
9000a348:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
}
9000a34c:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000a34e:	2280      	movs	r2, #128	@ 0x80
    __HAL_UNLOCK(hmdma);
9000a350:	2300      	movs	r3, #0
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000a352:	66a2      	str	r2, [r4, #104]	@ 0x68
    __HAL_UNLOCK(hmdma);
9000a354:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    return HAL_ERROR;
9000a358:	2001      	movs	r0, #1
}
9000a35a:	bd38      	pop	{r3, r4, r5, pc}
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000a35c:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
        __HAL_UNLOCK(hmdma);
9000a35e:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_ERROR;
9000a360:	2203      	movs	r2, #3
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000a362:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
        __HAL_UNLOCK(hmdma);
9000a366:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000a36a:	66a3      	str	r3, [r4, #104]	@ 0x68
        hmdma->State = HAL_MDMA_STATE_ERROR;
9000a36c:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        return HAL_ERROR;
9000a370:	e7f2      	b.n	9000a358 <HAL_MDMA_Abort+0x58>
9000a372:	bf00      	nop

9000a374 <HAL_MDMA_Abort_IT>:
  if(hmdma == NULL)
9000a374:	4603      	mov	r3, r0
9000a376:	b128      	cbz	r0, 9000a384 <HAL_MDMA_Abort_IT+0x10>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000a378:	f890 203d 	ldrb.w	r2, [r0, #61]	@ 0x3d
9000a37c:	2a02      	cmp	r2, #2
9000a37e:	d003      	beq.n	9000a388 <HAL_MDMA_Abort_IT+0x14>
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000a380:	2280      	movs	r2, #128	@ 0x80
9000a382:	6682      	str	r2, [r0, #104]	@ 0x68
    return HAL_ERROR;
9000a384:	2001      	movs	r0, #1
9000a386:	4770      	bx	lr
    __HAL_MDMA_DISABLE(hmdma);
9000a388:	6802      	ldr	r2, [r0, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000a38a:	2104      	movs	r1, #4
  return HAL_OK;
9000a38c:	2000      	movs	r0, #0
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000a38e:	f883 103d 	strb.w	r1, [r3, #61]	@ 0x3d
    __HAL_MDMA_DISABLE(hmdma);
9000a392:	68d3      	ldr	r3, [r2, #12]
9000a394:	f023 0301 	bic.w	r3, r3, #1
9000a398:	60d3      	str	r3, [r2, #12]
}
9000a39a:	4770      	bx	lr

9000a39c <HAL_MDMA_IRQHandler>:
{
9000a39c:	b530      	push	{r4, r5, lr}
  __IO uint32_t count = 0;
9000a39e:	2300      	movs	r3, #0
{
9000a3a0:	b083      	sub	sp, #12
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000a3a2:	f04f 45a4 	mov.w	r5, #1375731712	@ 0x52000000
{
9000a3a6:	4604      	mov	r4, r0
  __IO uint32_t count = 0;
9000a3a8:	9301      	str	r3, [sp, #4]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000a3aa:	2101      	movs	r1, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000a3ac:	4b57      	ldr	r3, [pc, #348]	@ (9000a50c <HAL_MDMA_IRQHandler+0x170>)
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000a3ae:	6828      	ldr	r0, [r5, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000a3b0:	4a57      	ldr	r2, [pc, #348]	@ (9000a510 <HAL_MDMA_IRQHandler+0x174>)
  uint32_t timeout = SystemCoreClock / 9600U;
9000a3b2:	681d      	ldr	r5, [r3, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000a3b4:	6823      	ldr	r3, [r4, #0]
9000a3b6:	441a      	add	r2, r3
9000a3b8:	f3c2 1284 	ubfx	r2, r2, #6, #5
9000a3bc:	fa01 f202 	lsl.w	r2, r1, r2
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000a3c0:	4202      	tst	r2, r0
9000a3c2:	f000 80a0 	beq.w	9000a506 <HAL_MDMA_IRQHandler+0x16a>
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
9000a3c6:	681a      	ldr	r2, [r3, #0]
9000a3c8:	07d1      	lsls	r1, r2, #31
9000a3ca:	d529      	bpl.n	9000a420 <HAL_MDMA_IRQHandler+0x84>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_TE) != 0U)
9000a3cc:	68da      	ldr	r2, [r3, #12]
9000a3ce:	0792      	lsls	r2, r2, #30
9000a3d0:	d526      	bpl.n	9000a420 <HAL_MDMA_IRQHandler+0x84>
      __HAL_MDMA_DISABLE_IT(hmdma, MDMA_IT_TE);
9000a3d2:	68da      	ldr	r2, [r3, #12]
9000a3d4:	f022 0202 	bic.w	r2, r2, #2
9000a3d8:	60da      	str	r2, [r3, #12]
      errorFlag = hmdma->Instance->CESR;
9000a3da:	689a      	ldr	r2, [r3, #8]
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000a3dc:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TED) == 0U)
9000a3de:	0610      	lsls	r0, r2, #24
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000a3e0:	bf54      	ite	pl
9000a3e2:	f041 0101 	orrpl.w	r1, r1, #1
        hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;
9000a3e6:	f041 0102 	orrmi.w	r1, r1, #2
9000a3ea:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TEMD) != 0U)
9000a3ec:	0591      	lsls	r1, r2, #22
9000a3ee:	d503      	bpl.n	9000a3f8 <HAL_MDMA_IRQHandler+0x5c>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
9000a3f0:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000a3f2:	f041 0104 	orr.w	r1, r1, #4
9000a3f6:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TELD) != 0U)
9000a3f8:	05d0      	lsls	r0, r2, #23
9000a3fa:	d503      	bpl.n	9000a404 <HAL_MDMA_IRQHandler+0x68>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
9000a3fc:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000a3fe:	f041 0108 	orr.w	r1, r1, #8
9000a402:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_ASE) != 0U)
9000a404:	0551      	lsls	r1, r2, #21
9000a406:	d503      	bpl.n	9000a410 <HAL_MDMA_IRQHandler+0x74>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
9000a408:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000a40a:	f041 0110 	orr.w	r1, r1, #16
9000a40e:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_BSE) != 0U)
9000a410:	0510      	lsls	r0, r2, #20
9000a412:	d503      	bpl.n	9000a41c <HAL_MDMA_IRQHandler+0x80>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
9000a414:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
9000a416:	f042 0220 	orr.w	r2, r2, #32
9000a41a:	66a2      	str	r2, [r4, #104]	@ 0x68
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE);
9000a41c:	2201      	movs	r2, #1
9000a41e:	605a      	str	r2, [r3, #4]
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BFTC) != 0U))
9000a420:	681a      	ldr	r2, [r3, #0]
9000a422:	06d1      	lsls	r1, r2, #27
9000a424:	d509      	bpl.n	9000a43a <HAL_MDMA_IRQHandler+0x9e>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BFTC) != 0U)
9000a426:	68da      	ldr	r2, [r3, #12]
9000a428:	0692      	lsls	r2, r2, #26
9000a42a:	d506      	bpl.n	9000a43a <HAL_MDMA_IRQHandler+0x9e>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000a42c:	2110      	movs	r1, #16
      if(hmdma->XferBufferCpltCallback != NULL)
9000a42e:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000a430:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBufferCpltCallback != NULL)
9000a432:	b112      	cbz	r2, 9000a43a <HAL_MDMA_IRQHandler+0x9e>
        hmdma->XferBufferCpltCallback(hmdma);
9000a434:	4620      	mov	r0, r4
9000a436:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BT) != 0U))
9000a438:	6823      	ldr	r3, [r4, #0]
9000a43a:	681a      	ldr	r2, [r3, #0]
9000a43c:	0710      	lsls	r0, r2, #28
9000a43e:	d509      	bpl.n	9000a454 <HAL_MDMA_IRQHandler+0xb8>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BT) != 0U)
9000a440:	68da      	ldr	r2, [r3, #12]
9000a442:	06d1      	lsls	r1, r2, #27
9000a444:	d506      	bpl.n	9000a454 <HAL_MDMA_IRQHandler+0xb8>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000a446:	2108      	movs	r1, #8
      if(hmdma->XferBlockCpltCallback != NULL)
9000a448:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000a44a:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBlockCpltCallback != NULL)
9000a44c:	b112      	cbz	r2, 9000a454 <HAL_MDMA_IRQHandler+0xb8>
        hmdma->XferBlockCpltCallback(hmdma);
9000a44e:	4620      	mov	r0, r4
9000a450:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BRT) != 0U))
9000a452:	6823      	ldr	r3, [r4, #0]
9000a454:	681a      	ldr	r2, [r3, #0]
9000a456:	0752      	lsls	r2, r2, #29
9000a458:	d509      	bpl.n	9000a46e <HAL_MDMA_IRQHandler+0xd2>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BRT) != 0U)
9000a45a:	68da      	ldr	r2, [r3, #12]
9000a45c:	0710      	lsls	r0, r2, #28
9000a45e:	d506      	bpl.n	9000a46e <HAL_MDMA_IRQHandler+0xd2>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000a460:	2104      	movs	r1, #4
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000a462:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000a464:	6059      	str	r1, [r3, #4]
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000a466:	b112      	cbz	r2, 9000a46e <HAL_MDMA_IRQHandler+0xd2>
        hmdma->XferRepeatBlockCpltCallback(hmdma);
9000a468:	4620      	mov	r0, r4
9000a46a:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_CTC) != 0U))
9000a46c:	6823      	ldr	r3, [r4, #0]
9000a46e:	681a      	ldr	r2, [r3, #0]
9000a470:	0791      	lsls	r1, r2, #30
9000a472:	d516      	bpl.n	9000a4a2 <HAL_MDMA_IRQHandler+0x106>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_CTC) != 0U)
9000a474:	68da      	ldr	r2, [r3, #12]
9000a476:	0752      	lsls	r2, r2, #29
9000a478:	d513      	bpl.n	9000a4a2 <HAL_MDMA_IRQHandler+0x106>
      __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000a47a:	68da      	ldr	r2, [r3, #12]
9000a47c:	f022 023e 	bic.w	r2, r2, #62	@ 0x3e
9000a480:	60da      	str	r2, [r3, #12]
      if(HAL_MDMA_STATE_ABORT == hmdma->State)
9000a482:	f894 203d 	ldrb.w	r2, [r4, #61]	@ 0x3d
9000a486:	2a04      	cmp	r2, #4
9000a488:	d034      	beq.n	9000a4f4 <HAL_MDMA_IRQHandler+0x158>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000a48a:	2202      	movs	r2, #2
      __HAL_UNLOCK(hmdma);
9000a48c:	2100      	movs	r1, #0
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000a48e:	605a      	str	r2, [r3, #4]
      hmdma->State = HAL_MDMA_STATE_READY;
9000a490:	2201      	movs	r2, #1
      if(hmdma->XferCpltCallback != NULL)
9000a492:	6c63      	ldr	r3, [r4, #68]	@ 0x44
      __HAL_UNLOCK(hmdma);
9000a494:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
      hmdma->State = HAL_MDMA_STATE_READY;
9000a498:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      if(hmdma->XferCpltCallback != NULL)
9000a49c:	b10b      	cbz	r3, 9000a4a2 <HAL_MDMA_IRQHandler+0x106>
        hmdma->XferCpltCallback(hmdma);
9000a49e:	4620      	mov	r0, r4
9000a4a0:	4798      	blx	r3
  if(hmdma->ErrorCode != HAL_MDMA_ERROR_NONE)
9000a4a2:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
9000a4a4:	2b00      	cmp	r3, #0
9000a4a6:	d02e      	beq.n	9000a506 <HAL_MDMA_IRQHandler+0x16a>
    __HAL_MDMA_DISABLE(hmdma);
9000a4a8:	6821      	ldr	r1, [r4, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000a4aa:	2004      	movs	r0, #4
  uint32_t timeout = SystemCoreClock / 9600U;
9000a4ac:	4b19      	ldr	r3, [pc, #100]	@ (9000a514 <HAL_MDMA_IRQHandler+0x178>)
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000a4ae:	f884 003d 	strb.w	r0, [r4, #61]	@ 0x3d
  uint32_t timeout = SystemCoreClock / 9600U;
9000a4b2:	fba3 3205 	umull	r3, r2, r3, r5
    __HAL_MDMA_DISABLE(hmdma);
9000a4b6:	68cb      	ldr	r3, [r1, #12]
9000a4b8:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000a4bc:	0a92      	lsrs	r2, r2, #10
    __HAL_MDMA_DISABLE(hmdma);
9000a4be:	60cb      	str	r3, [r1, #12]
9000a4c0:	e002      	b.n	9000a4c8 <HAL_MDMA_IRQHandler+0x12c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U);
9000a4c2:	68cb      	ldr	r3, [r1, #12]
9000a4c4:	07d8      	lsls	r0, r3, #31
9000a4c6:	d504      	bpl.n	9000a4d2 <HAL_MDMA_IRQHandler+0x136>
      if (++count > timeout)
9000a4c8:	9b01      	ldr	r3, [sp, #4]
9000a4ca:	3301      	adds	r3, #1
9000a4cc:	4293      	cmp	r3, r2
9000a4ce:	9301      	str	r3, [sp, #4]
9000a4d0:	d9f7      	bls.n	9000a4c2 <HAL_MDMA_IRQHandler+0x126>
    __HAL_UNLOCK(hmdma);
9000a4d2:	2300      	movs	r3, #0
9000a4d4:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a4d8:	68cb      	ldr	r3, [r1, #12]
9000a4da:	07db      	lsls	r3, r3, #31
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000a4dc:	bf4c      	ite	mi
9000a4de:	2303      	movmi	r3, #3
      hmdma->State = HAL_MDMA_STATE_READY;
9000a4e0:	2301      	movpl	r3, #1
9000a4e2:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    if (hmdma->XferErrorCallback != NULL)
9000a4e6:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a4e8:	b16b      	cbz	r3, 9000a506 <HAL_MDMA_IRQHandler+0x16a>
      hmdma->XferErrorCallback(hmdma);
9000a4ea:	4620      	mov	r0, r4
}
9000a4ec:	b003      	add	sp, #12
9000a4ee:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      hmdma->XferErrorCallback(hmdma);
9000a4f2:	4718      	bx	r3
        __HAL_UNLOCK(hmdma);
9000a4f4:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_READY;
9000a4f6:	2201      	movs	r2, #1
        if(hmdma->XferAbortCallback != NULL)
9000a4f8:	6da3      	ldr	r3, [r4, #88]	@ 0x58
        __HAL_UNLOCK(hmdma);
9000a4fa:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
        hmdma->State = HAL_MDMA_STATE_READY;
9000a4fe:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        if(hmdma->XferAbortCallback != NULL)
9000a502:	2b00      	cmp	r3, #0
9000a504:	d1f1      	bne.n	9000a4ea <HAL_MDMA_IRQHandler+0x14e>
}
9000a506:	b003      	add	sp, #12
9000a508:	bd30      	pop	{r4, r5, pc}
9000a50a:	bf00      	nop
9000a50c:	24000078 	.word	0x24000078
9000a510:	adffffc0 	.word	0xadffffc0
9000a514:	1b4e81b5 	.word	0x1b4e81b5

9000a518 <HAL_PWREx_ConfigSupply>:
  *         process during startup.
  *         For more details, please refer to the power control chapter in the reference manual
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
9000a518:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000a51a:	4c10      	ldr	r4, [pc, #64]	@ (9000a55c <HAL_PWREx_ConfigSupply+0x44>)
9000a51c:	68e3      	ldr	r3, [r4, #12]
9000a51e:	f013 0f04 	tst.w	r3, #4
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000a522:	68e3      	ldr	r3, [r4, #12]
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000a524:	d105      	bne.n	9000a532 <HAL_PWREx_ConfigSupply+0x1a>
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000a526:	f003 0307 	and.w	r3, r3, #7
9000a52a:	1a18      	subs	r0, r3, r0
9000a52c:	bf18      	it	ne
9000a52e:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
9000a530:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
9000a532:	f023 0307 	bic.w	r3, r3, #7
9000a536:	4303      	orrs	r3, r0
9000a538:	60e3      	str	r3, [r4, #12]
  tickstart = HAL_GetTick ();
9000a53a:	f7fc fa57 	bl	900069ec <HAL_GetTick>
9000a53e:	4605      	mov	r5, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000a540:	e005      	b.n	9000a54e <HAL_PWREx_ConfigSupply+0x36>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
9000a542:	f7fc fa53 	bl	900069ec <HAL_GetTick>
9000a546:	1b40      	subs	r0, r0, r5
9000a548:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
9000a54c:	d804      	bhi.n	9000a558 <HAL_PWREx_ConfigSupply+0x40>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000a54e:	6863      	ldr	r3, [r4, #4]
9000a550:	049b      	lsls	r3, r3, #18
9000a552:	d5f6      	bpl.n	9000a542 <HAL_PWREx_ConfigSupply+0x2a>
      return HAL_OK;
9000a554:	2000      	movs	r0, #0
}
9000a556:	bd38      	pop	{r3, r4, r5, pc}
      return HAL_ERROR;
9000a558:	2001      	movs	r0, #1
}
9000a55a:	bd38      	pop	{r3, r4, r5, pc}
9000a55c:	58024800 	.word	0x58024800

9000a560 <HAL_RCC_GetSysClockFreq.part.0>:
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000a560:	4b33      	ldr	r3, [pc, #204]	@ (9000a630 <HAL_RCC_GetSysClockFreq.part.0+0xd0>)
uint32_t HAL_RCC_GetSysClockFreq(void)
9000a562:	b430      	push	{r4, r5}
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000a564:	6a99      	ldr	r1, [r3, #40]	@ 0x28
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000a566:	6a9c      	ldr	r4, [r3, #40]	@ 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000a568:	6add      	ldr	r5, [r3, #44]	@ 0x2c
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));

      if (pllm != 0U)
9000a56a:	f414 7f7c 	tst.w	r4, #1008	@ 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000a56e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000a570:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000a574:	d036      	beq.n	9000a5e4 <HAL_RCC_GetSysClockFreq.part.0+0x84>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000a576:	f3c2 02cc 	ubfx	r2, r2, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000a57a:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000a57e:	f001 0103 	and.w	r1, r1, #3
          case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
            {
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a582:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000a586:	fb05 f202 	mul.w	r2, r5, r2
        switch (pllsource)
9000a58a:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a58c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000a590:	ee06 2a90 	vmov	s13, r2
9000a594:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
        switch (pllsource)
9000a598:	d002      	beq.n	9000a5a0 <HAL_RCC_GetSysClockFreq.part.0+0x40>
9000a59a:	2902      	cmp	r1, #2
9000a59c:	d042      	beq.n	9000a624 <HAL_RCC_GetSysClockFreq.part.0+0xc4>
9000a59e:	b319      	cbz	r1, 9000a5e8 <HAL_RCC_GetSysClockFreq.part.0+0x88>
          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            break;

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a5a0:	eddf 7a24 	vldr	s15, [pc, #144]	@ 9000a634 <HAL_RCC_GetSysClockFreq.part.0+0xd4>
9000a5a4:	ee87 6a87 	vdiv.f32	s12, s15, s14
9000a5a8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000a5aa:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000a5ae:	ee07 3a90 	vmov	s15, r3
9000a5b2:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000a5b6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000a5ba:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000a5be:	ee77 7aa5 	vadd.f32	s15, s15, s11
9000a5c2:	ee67 7a86 	vmul.f32	s15, s15, s12
            break;
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000a5c6:	4b1a      	ldr	r3, [pc, #104]	@ (9000a630 <HAL_RCC_GetSysClockFreq.part.0+0xd0>)
9000a5c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000a5ca:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000a5ce:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000a5d0:	ee07 3a10 	vmov	s14, r3
9000a5d4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
9000a5d8:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000a5dc:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000a5e0:	ee17 0a90 	vmov	r0, s15
      sysclockfreq = CSI_VALUE;
      break;
  }

  return sysclockfreq;
}
9000a5e4:	bc30      	pop	{r4, r5}
9000a5e6:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000a5e8:	681a      	ldr	r2, [r3, #0]
9000a5ea:	0692      	lsls	r2, r2, #26
9000a5ec:	d51d      	bpl.n	9000a62a <HAL_RCC_GetSysClockFreq.part.0+0xca>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000a5ee:	6819      	ldr	r1, [r3, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a5f0:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000a5f4:	4a10      	ldr	r2, [pc, #64]	@ (9000a638 <HAL_RCC_GetSysClockFreq.part.0+0xd8>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a5f6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000a5f8:	f3c1 01c1 	ubfx	r1, r1, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a5fc:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000a600:	40ca      	lsrs	r2, r1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a602:	ee07 3a90 	vmov	s15, r3
9000a606:	ee06 2a10 	vmov	s12, r2
9000a60a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000a60e:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000a612:	ee77 6aa6 	vadd.f32	s13, s15, s13
9000a616:	eec6 7a07 	vdiv.f32	s15, s12, s14
9000a61a:	ee36 7aa5 	vadd.f32	s14, s13, s11
9000a61e:	ee67 7a87 	vmul.f32	s15, s15, s14
9000a622:	e7d0      	b.n	9000a5c6 <HAL_RCC_GetSysClockFreq.part.0+0x66>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a624:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000a63c <HAL_RCC_GetSysClockFreq.part.0+0xdc>
9000a628:	e7bc      	b.n	9000a5a4 <HAL_RCC_GetSysClockFreq.part.0+0x44>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a62a:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000a640 <HAL_RCC_GetSysClockFreq.part.0+0xe0>
9000a62e:	e7b9      	b.n	9000a5a4 <HAL_RCC_GetSysClockFreq.part.0+0x44>
9000a630:	58024400 	.word	0x58024400
9000a634:	4a742400 	.word	0x4a742400
9000a638:	03d09000 	.word	0x03d09000
9000a63c:	4bbebc20 	.word	0x4bbebc20
9000a640:	4c742400 	.word	0x4c742400

9000a644 <HAL_RCC_OscConfig>:
  if (RCC_OscInitStruct == NULL)
9000a644:	2800      	cmp	r0, #0
9000a646:	f000 82e7 	beq.w	9000ac18 <HAL_RCC_OscConfig+0x5d4>
{
9000a64a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
9000a64c:	6803      	ldr	r3, [r0, #0]
9000a64e:	4604      	mov	r4, r0
9000a650:	07d9      	lsls	r1, r3, #31
9000a652:	d52e      	bpl.n	9000a6b2 <HAL_RCC_OscConfig+0x6e>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000a654:	4997      	ldr	r1, [pc, #604]	@ (9000a8b4 <HAL_RCC_OscConfig+0x270>)
9000a656:	690a      	ldr	r2, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000a658:	6a89      	ldr	r1, [r1, #40]	@ 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000a65a:	f002 0238 	and.w	r2, r2, #56	@ 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000a65e:	2a10      	cmp	r2, #16
9000a660:	f000 80ee 	beq.w	9000a840 <HAL_RCC_OscConfig+0x1fc>
9000a664:	2a18      	cmp	r2, #24
9000a666:	f000 80e6 	beq.w	9000a836 <HAL_RCC_OscConfig+0x1f2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000a66a:	6863      	ldr	r3, [r4, #4]
9000a66c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000a670:	f000 8111 	beq.w	9000a896 <HAL_RCC_OscConfig+0x252>
9000a674:	2b00      	cmp	r3, #0
9000a676:	f000 8167 	beq.w	9000a948 <HAL_RCC_OscConfig+0x304>
9000a67a:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
9000a67e:	4b8d      	ldr	r3, [pc, #564]	@ (9000a8b4 <HAL_RCC_OscConfig+0x270>)
9000a680:	681a      	ldr	r2, [r3, #0]
9000a682:	f000 8288 	beq.w	9000ab96 <HAL_RCC_OscConfig+0x552>
9000a686:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
9000a68a:	601a      	str	r2, [r3, #0]
9000a68c:	681a      	ldr	r2, [r3, #0]
9000a68e:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
9000a692:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9000a694:	f7fc f9aa 	bl	900069ec <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000a698:	4e86      	ldr	r6, [pc, #536]	@ (9000a8b4 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
9000a69a:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000a69c:	e005      	b.n	9000a6aa <HAL_RCC_OscConfig+0x66>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000a69e:	f7fc f9a5 	bl	900069ec <HAL_GetTick>
9000a6a2:	1b40      	subs	r0, r0, r5
9000a6a4:	2864      	cmp	r0, #100	@ 0x64
9000a6a6:	f200 814d 	bhi.w	9000a944 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000a6aa:	6833      	ldr	r3, [r6, #0]
9000a6ac:	039b      	lsls	r3, r3, #14
9000a6ae:	d5f6      	bpl.n	9000a69e <HAL_RCC_OscConfig+0x5a>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
9000a6b0:	6823      	ldr	r3, [r4, #0]
9000a6b2:	079d      	lsls	r5, r3, #30
9000a6b4:	d470      	bmi.n	9000a798 <HAL_RCC_OscConfig+0x154>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000a6b6:	06d9      	lsls	r1, r3, #27
9000a6b8:	d533      	bpl.n	9000a722 <HAL_RCC_OscConfig+0xde>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000a6ba:	4a7e      	ldr	r2, [pc, #504]	@ (9000a8b4 <HAL_RCC_OscConfig+0x270>)
9000a6bc:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000a6be:	6a92      	ldr	r2, [r2, #40]	@ 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000a6c0:	f003 0338 	and.w	r3, r3, #56	@ 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000a6c4:	2b08      	cmp	r3, #8
9000a6c6:	f000 80cb 	beq.w	9000a860 <HAL_RCC_OscConfig+0x21c>
9000a6ca:	2b18      	cmp	r3, #24
9000a6cc:	f000 80c3 	beq.w	9000a856 <HAL_RCC_OscConfig+0x212>
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000a6d0:	69e3      	ldr	r3, [r4, #28]
        __HAL_RCC_CSI_ENABLE();
9000a6d2:	4d78      	ldr	r5, [pc, #480]	@ (9000a8b4 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000a6d4:	2b00      	cmp	r3, #0
9000a6d6:	f000 816f 	beq.w	9000a9b8 <HAL_RCC_OscConfig+0x374>
        __HAL_RCC_CSI_ENABLE();
9000a6da:	682b      	ldr	r3, [r5, #0]
9000a6dc:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9000a6e0:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000a6e2:	f7fc f983 	bl	900069ec <HAL_GetTick>
9000a6e6:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000a6e8:	e005      	b.n	9000a6f6 <HAL_RCC_OscConfig+0xb2>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000a6ea:	f7fc f97f 	bl	900069ec <HAL_GetTick>
9000a6ee:	1b80      	subs	r0, r0, r6
9000a6f0:	2802      	cmp	r0, #2
9000a6f2:	f200 8127 	bhi.w	9000a944 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000a6f6:	682b      	ldr	r3, [r5, #0]
9000a6f8:	05db      	lsls	r3, r3, #23
9000a6fa:	d5f6      	bpl.n	9000a6ea <HAL_RCC_OscConfig+0xa6>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000a6fc:	f7fc f97c 	bl	900069f8 <HAL_GetREVID>
9000a700:	f241 0303 	movw	r3, #4099	@ 0x1003
9000a704:	4298      	cmp	r0, r3
9000a706:	f200 8267 	bhi.w	9000abd8 <HAL_RCC_OscConfig+0x594>
9000a70a:	6a22      	ldr	r2, [r4, #32]
9000a70c:	686b      	ldr	r3, [r5, #4]
9000a70e:	2a20      	cmp	r2, #32
9000a710:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000a714:	bf0c      	ite	eq
9000a716:	f043 4380 	orreq.w	r3, r3, #1073741824	@ 0x40000000
9000a71a:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
9000a71e:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000a720:	6823      	ldr	r3, [r4, #0]
9000a722:	071d      	lsls	r5, r3, #28
9000a724:	d516      	bpl.n	9000a754 <HAL_RCC_OscConfig+0x110>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000a726:	6963      	ldr	r3, [r4, #20]
      __HAL_RCC_LSI_ENABLE();
9000a728:	4d62      	ldr	r5, [pc, #392]	@ (9000a8b4 <HAL_RCC_OscConfig+0x270>)
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000a72a:	2b00      	cmp	r3, #0
9000a72c:	f000 8122 	beq.w	9000a974 <HAL_RCC_OscConfig+0x330>
      __HAL_RCC_LSI_ENABLE();
9000a730:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000a732:	f043 0301 	orr.w	r3, r3, #1
9000a736:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
9000a738:	f7fc f958 	bl	900069ec <HAL_GetTick>
9000a73c:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000a73e:	e005      	b.n	9000a74c <HAL_RCC_OscConfig+0x108>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000a740:	f7fc f954 	bl	900069ec <HAL_GetTick>
9000a744:	1b80      	subs	r0, r0, r6
9000a746:	2802      	cmp	r0, #2
9000a748:	f200 80fc 	bhi.w	9000a944 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000a74c:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000a74e:	0798      	lsls	r0, r3, #30
9000a750:	d5f6      	bpl.n	9000a740 <HAL_RCC_OscConfig+0xfc>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
9000a752:	6823      	ldr	r3, [r4, #0]
9000a754:	069a      	lsls	r2, r3, #26
9000a756:	d516      	bpl.n	9000a786 <HAL_RCC_OscConfig+0x142>
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000a758:	69a3      	ldr	r3, [r4, #24]
      __HAL_RCC_HSI48_ENABLE();
9000a75a:	4d56      	ldr	r5, [pc, #344]	@ (9000a8b4 <HAL_RCC_OscConfig+0x270>)
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000a75c:	2b00      	cmp	r3, #0
9000a75e:	f000 811a 	beq.w	9000a996 <HAL_RCC_OscConfig+0x352>
      __HAL_RCC_HSI48_ENABLE();
9000a762:	682b      	ldr	r3, [r5, #0]
9000a764:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
9000a768:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000a76a:	f7fc f93f 	bl	900069ec <HAL_GetTick>
9000a76e:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000a770:	e005      	b.n	9000a77e <HAL_RCC_OscConfig+0x13a>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000a772:	f7fc f93b 	bl	900069ec <HAL_GetTick>
9000a776:	1b80      	subs	r0, r0, r6
9000a778:	2802      	cmp	r0, #2
9000a77a:	f200 80e3 	bhi.w	9000a944 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000a77e:	682b      	ldr	r3, [r5, #0]
9000a780:	049f      	lsls	r7, r3, #18
9000a782:	d5f6      	bpl.n	9000a772 <HAL_RCC_OscConfig+0x12e>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
9000a784:	6823      	ldr	r3, [r4, #0]
9000a786:	0759      	lsls	r1, r3, #29
9000a788:	f100 808b 	bmi.w	9000a8a2 <HAL_RCC_OscConfig+0x25e>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
9000a78c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a78e:	2b00      	cmp	r3, #0
9000a790:	f040 80bf 	bne.w	9000a912 <HAL_RCC_OscConfig+0x2ce>
  return HAL_OK;
9000a794:	2000      	movs	r0, #0
}
9000a796:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000a798:	4a46      	ldr	r2, [pc, #280]	@ (9000a8b4 <HAL_RCC_OscConfig+0x270>)
9000a79a:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000a79c:	6a92      	ldr	r2, [r2, #40]	@ 0x28
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000a79e:	f013 0338 	ands.w	r3, r3, #56	@ 0x38
9000a7a2:	d12d      	bne.n	9000a800 <HAL_RCC_OscConfig+0x1bc>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000a7a4:	4b43      	ldr	r3, [pc, #268]	@ (9000a8b4 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000a7a6:	68e2      	ldr	r2, [r4, #12]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000a7a8:	681b      	ldr	r3, [r3, #0]
9000a7aa:	0759      	lsls	r1, r3, #29
9000a7ac:	d501      	bpl.n	9000a7b2 <HAL_RCC_OscConfig+0x16e>
9000a7ae:	2a00      	cmp	r2, #0
9000a7b0:	d04f      	beq.n	9000a852 <HAL_RCC_OscConfig+0x20e>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000a7b2:	4d40      	ldr	r5, [pc, #256]	@ (9000a8b4 <HAL_RCC_OscConfig+0x270>)
9000a7b4:	682b      	ldr	r3, [r5, #0]
9000a7b6:	f023 0319 	bic.w	r3, r3, #25
9000a7ba:	4313      	orrs	r3, r2
9000a7bc:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000a7be:	f7fc f915 	bl	900069ec <HAL_GetTick>
9000a7c2:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000a7c4:	e005      	b.n	9000a7d2 <HAL_RCC_OscConfig+0x18e>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000a7c6:	f7fc f911 	bl	900069ec <HAL_GetTick>
9000a7ca:	1b80      	subs	r0, r0, r6
9000a7cc:	2802      	cmp	r0, #2
9000a7ce:	f200 80b9 	bhi.w	9000a944 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000a7d2:	682b      	ldr	r3, [r5, #0]
9000a7d4:	075b      	lsls	r3, r3, #29
9000a7d6:	d5f6      	bpl.n	9000a7c6 <HAL_RCC_OscConfig+0x182>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000a7d8:	f7fc f90e 	bl	900069f8 <HAL_GetREVID>
9000a7dc:	f241 0303 	movw	r3, #4099	@ 0x1003
9000a7e0:	4298      	cmp	r0, r3
9000a7e2:	f200 8110 	bhi.w	9000aa06 <HAL_RCC_OscConfig+0x3c2>
9000a7e6:	6922      	ldr	r2, [r4, #16]
9000a7e8:	686b      	ldr	r3, [r5, #4]
9000a7ea:	2a40      	cmp	r2, #64	@ 0x40
9000a7ec:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
9000a7f0:	bf0c      	ite	eq
9000a7f2:	f443 3300 	orreq.w	r3, r3, #131072	@ 0x20000
9000a7f6:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
9000a7fa:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000a7fc:	6823      	ldr	r3, [r4, #0]
9000a7fe:	e75a      	b.n	9000a6b6 <HAL_RCC_OscConfig+0x72>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000a800:	2b18      	cmp	r3, #24
9000a802:	f000 80fc 	beq.w	9000a9fe <HAL_RCC_OscConfig+0x3ba>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000a806:	4d2b      	ldr	r5, [pc, #172]	@ (9000a8b4 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000a808:	68e2      	ldr	r2, [r4, #12]
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000a80a:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000a80c:	2a00      	cmp	r2, #0
9000a80e:	f000 80e5 	beq.w	9000a9dc <HAL_RCC_OscConfig+0x398>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000a812:	f023 0319 	bic.w	r3, r3, #25
9000a816:	4313      	orrs	r3, r2
9000a818:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000a81a:	f7fc f8e7 	bl	900069ec <HAL_GetTick>
9000a81e:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000a820:	e005      	b.n	9000a82e <HAL_RCC_OscConfig+0x1ea>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000a822:	f7fc f8e3 	bl	900069ec <HAL_GetTick>
9000a826:	1b80      	subs	r0, r0, r6
9000a828:	2802      	cmp	r0, #2
9000a82a:	f200 808b 	bhi.w	9000a944 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000a82e:	682b      	ldr	r3, [r5, #0]
9000a830:	075f      	lsls	r7, r3, #29
9000a832:	d5f6      	bpl.n	9000a822 <HAL_RCC_OscConfig+0x1de>
9000a834:	e7d0      	b.n	9000a7d8 <HAL_RCC_OscConfig+0x194>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000a836:	f001 0103 	and.w	r1, r1, #3
9000a83a:	2902      	cmp	r1, #2
9000a83c:	f47f af15 	bne.w	9000a66a <HAL_RCC_OscConfig+0x26>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
9000a840:	4a1c      	ldr	r2, [pc, #112]	@ (9000a8b4 <HAL_RCC_OscConfig+0x270>)
9000a842:	6812      	ldr	r2, [r2, #0]
9000a844:	0392      	lsls	r2, r2, #14
9000a846:	f57f af34 	bpl.w	9000a6b2 <HAL_RCC_OscConfig+0x6e>
9000a84a:	6862      	ldr	r2, [r4, #4]
9000a84c:	2a00      	cmp	r2, #0
9000a84e:	f47f af30 	bne.w	9000a6b2 <HAL_RCC_OscConfig+0x6e>
    return HAL_ERROR;
9000a852:	2001      	movs	r0, #1
}
9000a854:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000a856:	f002 0203 	and.w	r2, r2, #3
9000a85a:	2a01      	cmp	r2, #1
9000a85c:	f47f af38 	bne.w	9000a6d0 <HAL_RCC_OscConfig+0x8c>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
9000a860:	4b14      	ldr	r3, [pc, #80]	@ (9000a8b4 <HAL_RCC_OscConfig+0x270>)
9000a862:	681b      	ldr	r3, [r3, #0]
9000a864:	05da      	lsls	r2, r3, #23
9000a866:	d502      	bpl.n	9000a86e <HAL_RCC_OscConfig+0x22a>
9000a868:	69e3      	ldr	r3, [r4, #28]
9000a86a:	2b80      	cmp	r3, #128	@ 0x80
9000a86c:	d1f1      	bne.n	9000a852 <HAL_RCC_OscConfig+0x20e>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000a86e:	f7fc f8c3 	bl	900069f8 <HAL_GetREVID>
9000a872:	f241 0303 	movw	r3, #4099	@ 0x1003
9000a876:	4298      	cmp	r0, r3
9000a878:	f200 80ce 	bhi.w	9000aa18 <HAL_RCC_OscConfig+0x3d4>
9000a87c:	6a22      	ldr	r2, [r4, #32]
9000a87e:	2a20      	cmp	r2, #32
9000a880:	f000 81b9 	beq.w	9000abf6 <HAL_RCC_OscConfig+0x5b2>
9000a884:	490b      	ldr	r1, [pc, #44]	@ (9000a8b4 <HAL_RCC_OscConfig+0x270>)
9000a886:	684b      	ldr	r3, [r1, #4]
9000a888:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000a88c:	ea43 6382 	orr.w	r3, r3, r2, lsl #26
9000a890:	604b      	str	r3, [r1, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000a892:	6823      	ldr	r3, [r4, #0]
9000a894:	e745      	b.n	9000a722 <HAL_RCC_OscConfig+0xde>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000a896:	4a07      	ldr	r2, [pc, #28]	@ (9000a8b4 <HAL_RCC_OscConfig+0x270>)
9000a898:	6813      	ldr	r3, [r2, #0]
9000a89a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000a89e:	6013      	str	r3, [r2, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000a8a0:	e6f8      	b.n	9000a694 <HAL_RCC_OscConfig+0x50>
    PWR->CR1 |= PWR_CR1_DBP;
9000a8a2:	4d05      	ldr	r5, [pc, #20]	@ (9000a8b8 <HAL_RCC_OscConfig+0x274>)
9000a8a4:	682b      	ldr	r3, [r5, #0]
9000a8a6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000a8aa:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
9000a8ac:	f7fc f89e 	bl	900069ec <HAL_GetTick>
9000a8b0:	4606      	mov	r6, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000a8b2:	e008      	b.n	9000a8c6 <HAL_RCC_OscConfig+0x282>
9000a8b4:	58024400 	.word	0x58024400
9000a8b8:	58024800 	.word	0x58024800
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000a8bc:	f7fc f896 	bl	900069ec <HAL_GetTick>
9000a8c0:	1b80      	subs	r0, r0, r6
9000a8c2:	2864      	cmp	r0, #100	@ 0x64
9000a8c4:	d83e      	bhi.n	9000a944 <HAL_RCC_OscConfig+0x300>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000a8c6:	682b      	ldr	r3, [r5, #0]
9000a8c8:	05da      	lsls	r2, r3, #23
9000a8ca:	d5f7      	bpl.n	9000a8bc <HAL_RCC_OscConfig+0x278>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000a8cc:	68a3      	ldr	r3, [r4, #8]
9000a8ce:	2b01      	cmp	r3, #1
9000a8d0:	f000 818b 	beq.w	9000abea <HAL_RCC_OscConfig+0x5a6>
9000a8d4:	2b00      	cmp	r3, #0
9000a8d6:	f000 8166 	beq.w	9000aba6 <HAL_RCC_OscConfig+0x562>
9000a8da:	2b05      	cmp	r3, #5
9000a8dc:	4b85      	ldr	r3, [pc, #532]	@ (9000aaf4 <HAL_RCC_OscConfig+0x4b0>)
9000a8de:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000a8e0:	f000 8192 	beq.w	9000ac08 <HAL_RCC_OscConfig+0x5c4>
9000a8e4:	f022 0201 	bic.w	r2, r2, #1
9000a8e8:	671a      	str	r2, [r3, #112]	@ 0x70
9000a8ea:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000a8ec:	f022 0204 	bic.w	r2, r2, #4
9000a8f0:	671a      	str	r2, [r3, #112]	@ 0x70
      tickstart = HAL_GetTick();
9000a8f2:	f7fc f87b 	bl	900069ec <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000a8f6:	4e7f      	ldr	r6, [pc, #508]	@ (9000aaf4 <HAL_RCC_OscConfig+0x4b0>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000a8f8:	f241 3788 	movw	r7, #5000	@ 0x1388
      tickstart = HAL_GetTick();
9000a8fc:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000a8fe:	e004      	b.n	9000a90a <HAL_RCC_OscConfig+0x2c6>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000a900:	f7fc f874 	bl	900069ec <HAL_GetTick>
9000a904:	1b40      	subs	r0, r0, r5
9000a906:	42b8      	cmp	r0, r7
9000a908:	d81c      	bhi.n	9000a944 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000a90a:	6f33      	ldr	r3, [r6, #112]	@ 0x70
9000a90c:	079b      	lsls	r3, r3, #30
9000a90e:	d5f7      	bpl.n	9000a900 <HAL_RCC_OscConfig+0x2bc>
9000a910:	e73c      	b.n	9000a78c <HAL_RCC_OscConfig+0x148>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
9000a912:	4d78      	ldr	r5, [pc, #480]	@ (9000aaf4 <HAL_RCC_OscConfig+0x4b0>)
9000a914:	692a      	ldr	r2, [r5, #16]
9000a916:	f002 0238 	and.w	r2, r2, #56	@ 0x38
9000a91a:	2a18      	cmp	r2, #24
9000a91c:	f000 80ee 	beq.w	9000aafc <HAL_RCC_OscConfig+0x4b8>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000a920:	2b02      	cmp	r3, #2
        __HAL_RCC_PLL_DISABLE();
9000a922:	682b      	ldr	r3, [r5, #0]
9000a924:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
9000a928:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000a92a:	d07f      	beq.n	9000aa2c <HAL_RCC_OscConfig+0x3e8>
        tickstart = HAL_GetTick();
9000a92c:	f7fc f85e 	bl	900069ec <HAL_GetTick>
9000a930:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000a932:	682b      	ldr	r3, [r5, #0]
9000a934:	019b      	lsls	r3, r3, #6
9000a936:	f57f af2d 	bpl.w	9000a794 <HAL_RCC_OscConfig+0x150>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000a93a:	f7fc f857 	bl	900069ec <HAL_GetTick>
9000a93e:	1b00      	subs	r0, r0, r4
9000a940:	2802      	cmp	r0, #2
9000a942:	d9f6      	bls.n	9000a932 <HAL_RCC_OscConfig+0x2ee>
            return HAL_TIMEOUT;
9000a944:	2003      	movs	r0, #3
}
9000a946:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000a948:	4d6a      	ldr	r5, [pc, #424]	@ (9000aaf4 <HAL_RCC_OscConfig+0x4b0>)
9000a94a:	682b      	ldr	r3, [r5, #0]
9000a94c:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
9000a950:	602b      	str	r3, [r5, #0]
9000a952:	682b      	ldr	r3, [r5, #0]
9000a954:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
9000a958:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000a95a:	f7fc f847 	bl	900069ec <HAL_GetTick>
9000a95e:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000a960:	e004      	b.n	9000a96c <HAL_RCC_OscConfig+0x328>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000a962:	f7fc f843 	bl	900069ec <HAL_GetTick>
9000a966:	1b80      	subs	r0, r0, r6
9000a968:	2864      	cmp	r0, #100	@ 0x64
9000a96a:	d8eb      	bhi.n	9000a944 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000a96c:	682b      	ldr	r3, [r5, #0]
9000a96e:	039f      	lsls	r7, r3, #14
9000a970:	d4f7      	bmi.n	9000a962 <HAL_RCC_OscConfig+0x31e>
9000a972:	e69d      	b.n	9000a6b0 <HAL_RCC_OscConfig+0x6c>
      __HAL_RCC_LSI_DISABLE();
9000a974:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000a976:	f023 0301 	bic.w	r3, r3, #1
9000a97a:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
9000a97c:	f7fc f836 	bl	900069ec <HAL_GetTick>
9000a980:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000a982:	e004      	b.n	9000a98e <HAL_RCC_OscConfig+0x34a>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000a984:	f7fc f832 	bl	900069ec <HAL_GetTick>
9000a988:	1b80      	subs	r0, r0, r6
9000a98a:	2802      	cmp	r0, #2
9000a98c:	d8da      	bhi.n	9000a944 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000a98e:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000a990:	0799      	lsls	r1, r3, #30
9000a992:	d4f7      	bmi.n	9000a984 <HAL_RCC_OscConfig+0x340>
9000a994:	e6dd      	b.n	9000a752 <HAL_RCC_OscConfig+0x10e>
      __HAL_RCC_HSI48_DISABLE();
9000a996:	682b      	ldr	r3, [r5, #0]
9000a998:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9000a99c:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000a99e:	f7fc f825 	bl	900069ec <HAL_GetTick>
9000a9a2:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000a9a4:	e004      	b.n	9000a9b0 <HAL_RCC_OscConfig+0x36c>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000a9a6:	f7fc f821 	bl	900069ec <HAL_GetTick>
9000a9aa:	1b80      	subs	r0, r0, r6
9000a9ac:	2802      	cmp	r0, #2
9000a9ae:	d8c9      	bhi.n	9000a944 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000a9b0:	682b      	ldr	r3, [r5, #0]
9000a9b2:	0498      	lsls	r0, r3, #18
9000a9b4:	d4f7      	bmi.n	9000a9a6 <HAL_RCC_OscConfig+0x362>
9000a9b6:	e6e5      	b.n	9000a784 <HAL_RCC_OscConfig+0x140>
        __HAL_RCC_CSI_DISABLE();
9000a9b8:	682b      	ldr	r3, [r5, #0]
9000a9ba:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000a9be:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000a9c0:	f7fc f814 	bl	900069ec <HAL_GetTick>
9000a9c4:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000a9c6:	e004      	b.n	9000a9d2 <HAL_RCC_OscConfig+0x38e>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000a9c8:	f7fc f810 	bl	900069ec <HAL_GetTick>
9000a9cc:	1b80      	subs	r0, r0, r6
9000a9ce:	2802      	cmp	r0, #2
9000a9d0:	d8b8      	bhi.n	9000a944 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000a9d2:	682b      	ldr	r3, [r5, #0]
9000a9d4:	05df      	lsls	r7, r3, #23
9000a9d6:	d4f7      	bmi.n	9000a9c8 <HAL_RCC_OscConfig+0x384>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000a9d8:	6823      	ldr	r3, [r4, #0]
9000a9da:	e6a2      	b.n	9000a722 <HAL_RCC_OscConfig+0xde>
        __HAL_RCC_HSI_DISABLE();
9000a9dc:	f023 0301 	bic.w	r3, r3, #1
9000a9e0:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000a9e2:	f7fc f803 	bl	900069ec <HAL_GetTick>
9000a9e6:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000a9e8:	e004      	b.n	9000a9f4 <HAL_RCC_OscConfig+0x3b0>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000a9ea:	f7fb ffff 	bl	900069ec <HAL_GetTick>
9000a9ee:	1b80      	subs	r0, r0, r6
9000a9f0:	2802      	cmp	r0, #2
9000a9f2:	d8a7      	bhi.n	9000a944 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000a9f4:	682b      	ldr	r3, [r5, #0]
9000a9f6:	0758      	lsls	r0, r3, #29
9000a9f8:	d4f7      	bmi.n	9000a9ea <HAL_RCC_OscConfig+0x3a6>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000a9fa:	6823      	ldr	r3, [r4, #0]
9000a9fc:	e65b      	b.n	9000a6b6 <HAL_RCC_OscConfig+0x72>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000a9fe:	0790      	lsls	r0, r2, #30
9000aa00:	f47f af01 	bne.w	9000a806 <HAL_RCC_OscConfig+0x1c2>
9000aa04:	e6ce      	b.n	9000a7a4 <HAL_RCC_OscConfig+0x160>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000aa06:	686b      	ldr	r3, [r5, #4]
9000aa08:	6922      	ldr	r2, [r4, #16]
9000aa0a:	f023 43fe 	bic.w	r3, r3, #2130706432	@ 0x7f000000
9000aa0e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000aa12:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000aa14:	6823      	ldr	r3, [r4, #0]
9000aa16:	e64e      	b.n	9000a6b6 <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000aa18:	4a36      	ldr	r2, [pc, #216]	@ (9000aaf4 <HAL_RCC_OscConfig+0x4b0>)
9000aa1a:	6a21      	ldr	r1, [r4, #32]
9000aa1c:	68d3      	ldr	r3, [r2, #12]
9000aa1e:	f023 537c 	bic.w	r3, r3, #1056964608	@ 0x3f000000
9000aa22:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9000aa26:	60d3      	str	r3, [r2, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000aa28:	6823      	ldr	r3, [r4, #0]
9000aa2a:	e67a      	b.n	9000a722 <HAL_RCC_OscConfig+0xde>
        tickstart = HAL_GetTick();
9000aa2c:	f7fb ffde 	bl	900069ec <HAL_GetTick>
9000aa30:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000aa32:	e004      	b.n	9000aa3e <HAL_RCC_OscConfig+0x3fa>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000aa34:	f7fb ffda 	bl	900069ec <HAL_GetTick>
9000aa38:	1b80      	subs	r0, r0, r6
9000aa3a:	2802      	cmp	r0, #2
9000aa3c:	d882      	bhi.n	9000a944 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000aa3e:	682b      	ldr	r3, [r5, #0]
9000aa40:	0199      	lsls	r1, r3, #6
9000aa42:	d4f7      	bmi.n	9000aa34 <HAL_RCC_OscConfig+0x3f0>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000aa44:	6aa9      	ldr	r1, [r5, #40]	@ 0x28
9000aa46:	4b2c      	ldr	r3, [pc, #176]	@ (9000aaf8 <HAL_RCC_OscConfig+0x4b4>)
9000aa48:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000aa4a:	400b      	ands	r3, r1
9000aa4c:	4313      	orrs	r3, r2
9000aa4e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000aa50:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
9000aa54:	62ab      	str	r3, [r5, #40]	@ 0x28
9000aa56:	6b21      	ldr	r1, [r4, #48]	@ 0x30
9000aa58:	e9d4 320d 	ldrd	r3, r2, [r4, #52]	@ 0x34
9000aa5c:	3901      	subs	r1, #1
9000aa5e:	3b01      	subs	r3, #1
9000aa60:	3a01      	subs	r2, #1
9000aa62:	f3c1 0108 	ubfx	r1, r1, #0, #9
9000aa66:	025b      	lsls	r3, r3, #9
9000aa68:	0412      	lsls	r2, r2, #16
9000aa6a:	b29b      	uxth	r3, r3
9000aa6c:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000aa70:	4313      	orrs	r3, r2
9000aa72:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
9000aa74:	3a01      	subs	r2, #1
9000aa76:	430b      	orrs	r3, r1
9000aa78:	0612      	lsls	r2, r2, #24
9000aa7a:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000aa7e:	4313      	orrs	r3, r2
9000aa80:	632b      	str	r3, [r5, #48]	@ 0x30
        __HAL_RCC_PLLFRACN_DISABLE();
9000aa82:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000aa84:	f023 0301 	bic.w	r3, r3, #1
9000aa88:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000aa8a:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
9000aa8c:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
9000aa8e:	f36f 03cf 	bfc	r3, #3, #13
9000aa92:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000aa96:	636b      	str	r3, [r5, #52]	@ 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
9000aa98:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000aa9a:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000aa9c:	f023 030c 	bic.w	r3, r3, #12
9000aaa0:	4313      	orrs	r3, r2
9000aaa2:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
9000aaa4:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000aaa6:	6c62      	ldr	r2, [r4, #68]	@ 0x44
9000aaa8:	f023 0302 	bic.w	r3, r3, #2
9000aaac:	4313      	orrs	r3, r2
9000aaae:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
9000aab0:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000aab2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000aab6:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000aab8:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000aaba:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
9000aabe:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
9000aac0:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000aac2:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
9000aac6:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLFRACN_ENABLE();
9000aac8:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000aaca:	f043 0301 	orr.w	r3, r3, #1
9000aace:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLL_ENABLE();
9000aad0:	682b      	ldr	r3, [r5, #0]
9000aad2:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
9000aad6:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000aad8:	f7fb ff88 	bl	900069ec <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000aadc:	4d05      	ldr	r5, [pc, #20]	@ (9000aaf4 <HAL_RCC_OscConfig+0x4b0>)
        tickstart = HAL_GetTick();
9000aade:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000aae0:	682b      	ldr	r3, [r5, #0]
9000aae2:	019a      	lsls	r2, r3, #6
9000aae4:	f53f ae56 	bmi.w	9000a794 <HAL_RCC_OscConfig+0x150>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000aae8:	f7fb ff80 	bl	900069ec <HAL_GetTick>
9000aaec:	1b00      	subs	r0, r0, r4
9000aaee:	2802      	cmp	r0, #2
9000aaf0:	d9f6      	bls.n	9000aae0 <HAL_RCC_OscConfig+0x49c>
9000aaf2:	e727      	b.n	9000a944 <HAL_RCC_OscConfig+0x300>
9000aaf4:	58024400 	.word	0x58024400
9000aaf8:	fffffc0c 	.word	0xfffffc0c
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000aafc:	2b01      	cmp	r3, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
9000aafe:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
9000ab00:	6b28      	ldr	r0, [r5, #48]	@ 0x30
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000ab02:	f43f aea6 	beq.w	9000a852 <HAL_RCC_OscConfig+0x20e>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000ab06:	f002 0303 	and.w	r3, r2, #3
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000ab0a:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
9000ab0c:	428b      	cmp	r3, r1
9000ab0e:	f47f aea0 	bne.w	9000a852 <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000ab12:	f3c2 1205 	ubfx	r2, r2, #4, #6
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000ab16:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000ab18:	429a      	cmp	r2, r3
9000ab1a:	f47f ae9a 	bne.w	9000a852 <HAL_RCC_OscConfig+0x20e>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000ab1e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000ab20:	f3c0 0208 	ubfx	r2, r0, #0, #9
9000ab24:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000ab26:	429a      	cmp	r2, r3
9000ab28:	f47f ae93 	bne.w	9000a852 <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000ab2c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9000ab2e:	f3c0 2246 	ubfx	r2, r0, #9, #7
9000ab32:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000ab34:	429a      	cmp	r2, r3
9000ab36:	f47f ae8c 	bne.w	9000a852 <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000ab3a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000ab3c:	f3c0 4206 	ubfx	r2, r0, #16, #7
9000ab40:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000ab42:	429a      	cmp	r2, r3
9000ab44:	f47f ae85 	bne.w	9000a852 <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
9000ab48:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000ab4a:	f3c0 6006 	ubfx	r0, r0, #24, #7
9000ab4e:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000ab50:	4298      	cmp	r0, r3
9000ab52:	f47f ae7e 	bne.w	9000a852 <HAL_RCC_OscConfig+0x20e>
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000ab56:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000ab58:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000ab5a:	f3c3 03cc 	ubfx	r3, r3, #3, #13
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000ab5e:	429a      	cmp	r2, r3
9000ab60:	f43f ae18 	beq.w	9000a794 <HAL_RCC_OscConfig+0x150>
          __HAL_RCC_PLLFRACN_DISABLE();
9000ab64:	4a2d      	ldr	r2, [pc, #180]	@ (9000ac1c <HAL_RCC_OscConfig+0x5d8>)
9000ab66:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
9000ab68:	f023 0301 	bic.w	r3, r3, #1
9000ab6c:	62d3      	str	r3, [r2, #44]	@ 0x2c
          tickstart = HAL_GetTick();
9000ab6e:	f7fb ff3d 	bl	900069ec <HAL_GetTick>
9000ab72:	4605      	mov	r5, r0
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
9000ab74:	f7fb ff3a 	bl	900069ec <HAL_GetTick>
9000ab78:	42a8      	cmp	r0, r5
9000ab7a:	d0fb      	beq.n	9000ab74 <HAL_RCC_OscConfig+0x530>
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000ab7c:	4a27      	ldr	r2, [pc, #156]	@ (9000ac1c <HAL_RCC_OscConfig+0x5d8>)
9000ab7e:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000ab80:	6b53      	ldr	r3, [r2, #52]	@ 0x34
9000ab82:	f36f 03cf 	bfc	r3, #3, #13
9000ab86:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
9000ab8a:	6353      	str	r3, [r2, #52]	@ 0x34
          __HAL_RCC_PLLFRACN_ENABLE();
9000ab8c:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
9000ab8e:	f043 0301 	orr.w	r3, r3, #1
9000ab92:	62d3      	str	r3, [r2, #44]	@ 0x2c
9000ab94:	e5fe      	b.n	9000a794 <HAL_RCC_OscConfig+0x150>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000ab96:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
9000ab9a:	601a      	str	r2, [r3, #0]
9000ab9c:	681a      	ldr	r2, [r3, #0]
9000ab9e:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
9000aba2:	601a      	str	r2, [r3, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000aba4:	e576      	b.n	9000a694 <HAL_RCC_OscConfig+0x50>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000aba6:	4d1d      	ldr	r5, [pc, #116]	@ (9000ac1c <HAL_RCC_OscConfig+0x5d8>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000aba8:	f241 3788 	movw	r7, #5000	@ 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000abac:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000abae:	f023 0301 	bic.w	r3, r3, #1
9000abb2:	672b      	str	r3, [r5, #112]	@ 0x70
9000abb4:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000abb6:	f023 0304 	bic.w	r3, r3, #4
9000abba:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
9000abbc:	f7fb ff16 	bl	900069ec <HAL_GetTick>
9000abc0:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000abc2:	e005      	b.n	9000abd0 <HAL_RCC_OscConfig+0x58c>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000abc4:	f7fb ff12 	bl	900069ec <HAL_GetTick>
9000abc8:	1b80      	subs	r0, r0, r6
9000abca:	42b8      	cmp	r0, r7
9000abcc:	f63f aeba 	bhi.w	9000a944 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000abd0:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000abd2:	0798      	lsls	r0, r3, #30
9000abd4:	d4f6      	bmi.n	9000abc4 <HAL_RCC_OscConfig+0x580>
9000abd6:	e5d9      	b.n	9000a78c <HAL_RCC_OscConfig+0x148>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000abd8:	68eb      	ldr	r3, [r5, #12]
9000abda:	6a22      	ldr	r2, [r4, #32]
9000abdc:	f023 537c 	bic.w	r3, r3, #1056964608	@ 0x3f000000
9000abe0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000abe4:	60eb      	str	r3, [r5, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000abe6:	6823      	ldr	r3, [r4, #0]
9000abe8:	e59b      	b.n	9000a722 <HAL_RCC_OscConfig+0xde>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000abea:	4a0c      	ldr	r2, [pc, #48]	@ (9000ac1c <HAL_RCC_OscConfig+0x5d8>)
9000abec:	6f13      	ldr	r3, [r2, #112]	@ 0x70
9000abee:	f043 0301 	orr.w	r3, r3, #1
9000abf2:	6713      	str	r3, [r2, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000abf4:	e67d      	b.n	9000a8f2 <HAL_RCC_OscConfig+0x2ae>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000abf6:	4a09      	ldr	r2, [pc, #36]	@ (9000ac1c <HAL_RCC_OscConfig+0x5d8>)
9000abf8:	6853      	ldr	r3, [r2, #4]
9000abfa:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000abfe:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
9000ac02:	6053      	str	r3, [r2, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000ac04:	6823      	ldr	r3, [r4, #0]
9000ac06:	e58c      	b.n	9000a722 <HAL_RCC_OscConfig+0xde>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000ac08:	f042 0204 	orr.w	r2, r2, #4
9000ac0c:	671a      	str	r2, [r3, #112]	@ 0x70
9000ac0e:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000ac10:	f042 0201 	orr.w	r2, r2, #1
9000ac14:	671a      	str	r2, [r3, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000ac16:	e66c      	b.n	9000a8f2 <HAL_RCC_OscConfig+0x2ae>
    return HAL_ERROR;
9000ac18:	2001      	movs	r0, #1
}
9000ac1a:	4770      	bx	lr
9000ac1c:	58024400 	.word	0x58024400

9000ac20 <HAL_RCC_GetSysClockFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000ac20:	4a3f      	ldr	r2, [pc, #252]	@ (9000ad20 <HAL_RCC_GetSysClockFreq+0x100>)
9000ac22:	6913      	ldr	r3, [r2, #16]
9000ac24:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000ac28:	2b10      	cmp	r3, #16
9000ac2a:	d04f      	beq.n	9000accc <HAL_RCC_GetSysClockFreq+0xac>
9000ac2c:	2b18      	cmp	r3, #24
9000ac2e:	d00a      	beq.n	9000ac46 <HAL_RCC_GetSysClockFreq+0x26>
9000ac30:	2b00      	cmp	r3, #0
9000ac32:	d14d      	bne.n	9000acd0 <HAL_RCC_GetSysClockFreq+0xb0>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000ac34:	6813      	ldr	r3, [r2, #0]
9000ac36:	0699      	lsls	r1, r3, #26
9000ac38:	d54c      	bpl.n	9000acd4 <HAL_RCC_GetSysClockFreq+0xb4>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ac3a:	6813      	ldr	r3, [r2, #0]
9000ac3c:	4839      	ldr	r0, [pc, #228]	@ (9000ad24 <HAL_RCC_GetSysClockFreq+0x104>)
9000ac3e:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000ac42:	40d8      	lsrs	r0, r3
9000ac44:	4770      	bx	lr
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000ac46:	6a91      	ldr	r1, [r2, #40]	@ 0x28
{
9000ac48:	b430      	push	{r4, r5}
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000ac4a:	6a94      	ldr	r4, [r2, #40]	@ 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000ac4c:	6ad5      	ldr	r5, [r2, #44]	@ 0x2c
      if (pllm != 0U)
9000ac4e:	f414 7f7c 	tst.w	r4, #1008	@ 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000ac52:	6b53      	ldr	r3, [r2, #52]	@ 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000ac54:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000ac58:	d036      	beq.n	9000acc8 <HAL_RCC_GetSysClockFreq+0xa8>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000ac5a:	f3c3 03cc 	ubfx	r3, r3, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000ac5e:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000ac62:	f001 0103 	and.w	r1, r1, #3
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ac66:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000ac6a:	fb05 f303 	mul.w	r3, r5, r3
        switch (pllsource)
9000ac6e:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ac70:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000ac74:	ee06 3a90 	vmov	s13, r3
9000ac78:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
        switch (pllsource)
9000ac7c:	d002      	beq.n	9000ac84 <HAL_RCC_GetSysClockFreq+0x64>
9000ac7e:	2902      	cmp	r1, #2
9000ac80:	d048      	beq.n	9000ad14 <HAL_RCC_GetSysClockFreq+0xf4>
9000ac82:	b349      	cbz	r1, 9000acd8 <HAL_RCC_GetSysClockFreq+0xb8>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ac84:	ed9f 7a28 	vldr	s14, [pc, #160]	@ 9000ad28 <HAL_RCC_GetSysClockFreq+0x108>
9000ac88:	ee87 6a27 	vdiv.f32	s12, s14, s15
9000ac8c:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000ac8e:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000ac92:	ee07 3a10 	vmov	s14, r3
9000ac96:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000ac9a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000ac9e:	ee37 7a26 	vadd.f32	s14, s14, s13
9000aca2:	ee37 7a25 	vadd.f32	s14, s14, s11
9000aca6:	ee27 7a06 	vmul.f32	s14, s14, s12
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000acaa:	4b1d      	ldr	r3, [pc, #116]	@ (9000ad20 <HAL_RCC_GetSysClockFreq+0x100>)
9000acac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000acae:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000acb2:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000acb4:	ee07 3a90 	vmov	s15, r3
9000acb8:	eef8 6ae7 	vcvt.f32.s32	s13, s15
9000acbc:	eec7 7a26 	vdiv.f32	s15, s14, s13
9000acc0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000acc4:	ee17 0a90 	vmov	r0, s15
}
9000acc8:	bc30      	pop	{r4, r5}
9000acca:	4770      	bx	lr
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000accc:	4817      	ldr	r0, [pc, #92]	@ (9000ad2c <HAL_RCC_GetSysClockFreq+0x10c>)
9000acce:	4770      	bx	lr
      sysclockfreq = CSI_VALUE;
9000acd0:	4817      	ldr	r0, [pc, #92]	@ (9000ad30 <HAL_RCC_GetSysClockFreq+0x110>)
9000acd2:	4770      	bx	lr
        sysclockfreq = (uint32_t) HSI_VALUE;
9000acd4:	4813      	ldr	r0, [pc, #76]	@ (9000ad24 <HAL_RCC_GetSysClockFreq+0x104>)
}
9000acd6:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000acd8:	6813      	ldr	r3, [r2, #0]
9000acda:	069b      	lsls	r3, r3, #26
9000acdc:	d51d      	bpl.n	9000ad1a <HAL_RCC_GetSysClockFreq+0xfa>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000acde:	6810      	ldr	r0, [r2, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ace0:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000ace4:	6b13      	ldr	r3, [r2, #48]	@ 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ace6:	490f      	ldr	r1, [pc, #60]	@ (9000ad24 <HAL_RCC_GetSysClockFreq+0x104>)
9000ace8:	f3c0 02c1 	ubfx	r2, r0, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000acec:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000acf0:	40d1      	lsrs	r1, r2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000acf2:	ee07 3a10 	vmov	s14, r3
9000acf6:	ee06 1a10 	vmov	s12, r1
9000acfa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000acfe:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000ad02:	ee77 6a26 	vadd.f32	s13, s14, s13
9000ad06:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000ad0a:	ee76 7aa5 	vadd.f32	s15, s13, s11
9000ad0e:	ee27 7a27 	vmul.f32	s14, s14, s15
9000ad12:	e7ca      	b.n	9000acaa <HAL_RCC_GetSysClockFreq+0x8a>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ad14:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 9000ad34 <HAL_RCC_GetSysClockFreq+0x114>
9000ad18:	e7b6      	b.n	9000ac88 <HAL_RCC_GetSysClockFreq+0x68>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ad1a:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 9000ad38 <HAL_RCC_GetSysClockFreq+0x118>
9000ad1e:	e7b3      	b.n	9000ac88 <HAL_RCC_GetSysClockFreq+0x68>
9000ad20:	58024400 	.word	0x58024400
9000ad24:	03d09000 	.word	0x03d09000
9000ad28:	4a742400 	.word	0x4a742400
9000ad2c:	017d7840 	.word	0x017d7840
9000ad30:	003d0900 	.word	0x003d0900
9000ad34:	4bbebc20 	.word	0x4bbebc20
9000ad38:	4c742400 	.word	0x4c742400

9000ad3c <HAL_RCC_ClockConfig>:
  if (RCC_ClkInitStruct == NULL)
9000ad3c:	2800      	cmp	r0, #0
9000ad3e:	f000 810e 	beq.w	9000af5e <HAL_RCC_ClockConfig+0x222>
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000ad42:	4a8d      	ldr	r2, [pc, #564]	@ (9000af78 <HAL_RCC_ClockConfig+0x23c>)
9000ad44:	6813      	ldr	r3, [r2, #0]
9000ad46:	f003 030f 	and.w	r3, r3, #15
9000ad4a:	428b      	cmp	r3, r1
{
9000ad4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000ad50:	4604      	mov	r4, r0
9000ad52:	460d      	mov	r5, r1
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000ad54:	d20c      	bcs.n	9000ad70 <HAL_RCC_ClockConfig+0x34>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000ad56:	6813      	ldr	r3, [r2, #0]
9000ad58:	f023 030f 	bic.w	r3, r3, #15
9000ad5c:	430b      	orrs	r3, r1
9000ad5e:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000ad60:	6813      	ldr	r3, [r2, #0]
9000ad62:	f003 030f 	and.w	r3, r3, #15
9000ad66:	428b      	cmp	r3, r1
9000ad68:	d002      	beq.n	9000ad70 <HAL_RCC_ClockConfig+0x34>
    return HAL_ERROR;
9000ad6a:	2001      	movs	r0, #1
}
9000ad6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000ad70:	6823      	ldr	r3, [r4, #0]
9000ad72:	0758      	lsls	r0, r3, #29
9000ad74:	d50b      	bpl.n	9000ad8e <HAL_RCC_ClockConfig+0x52>
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000ad76:	4981      	ldr	r1, [pc, #516]	@ (9000af7c <HAL_RCC_ClockConfig+0x240>)
9000ad78:	6920      	ldr	r0, [r4, #16]
9000ad7a:	698a      	ldr	r2, [r1, #24]
9000ad7c:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000ad80:	4290      	cmp	r0, r2
9000ad82:	d904      	bls.n	9000ad8e <HAL_RCC_ClockConfig+0x52>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000ad84:	698a      	ldr	r2, [r1, #24]
9000ad86:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000ad8a:	4302      	orrs	r2, r0
9000ad8c:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000ad8e:	0719      	lsls	r1, r3, #28
9000ad90:	d50b      	bpl.n	9000adaa <HAL_RCC_ClockConfig+0x6e>
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000ad92:	497a      	ldr	r1, [pc, #488]	@ (9000af7c <HAL_RCC_ClockConfig+0x240>)
9000ad94:	6960      	ldr	r0, [r4, #20]
9000ad96:	69ca      	ldr	r2, [r1, #28]
9000ad98:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000ad9c:	4290      	cmp	r0, r2
9000ad9e:	d904      	bls.n	9000adaa <HAL_RCC_ClockConfig+0x6e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000ada0:	69ca      	ldr	r2, [r1, #28]
9000ada2:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000ada6:	4302      	orrs	r2, r0
9000ada8:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000adaa:	06da      	lsls	r2, r3, #27
9000adac:	d50b      	bpl.n	9000adc6 <HAL_RCC_ClockConfig+0x8a>
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000adae:	4973      	ldr	r1, [pc, #460]	@ (9000af7c <HAL_RCC_ClockConfig+0x240>)
9000adb0:	69a0      	ldr	r0, [r4, #24]
9000adb2:	69ca      	ldr	r2, [r1, #28]
9000adb4:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000adb8:	4290      	cmp	r0, r2
9000adba:	d904      	bls.n	9000adc6 <HAL_RCC_ClockConfig+0x8a>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000adbc:	69ca      	ldr	r2, [r1, #28]
9000adbe:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
9000adc2:	4302      	orrs	r2, r0
9000adc4:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000adc6:	069f      	lsls	r7, r3, #26
9000adc8:	d50b      	bpl.n	9000ade2 <HAL_RCC_ClockConfig+0xa6>
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000adca:	496c      	ldr	r1, [pc, #432]	@ (9000af7c <HAL_RCC_ClockConfig+0x240>)
9000adcc:	69e0      	ldr	r0, [r4, #28]
9000adce:	6a0a      	ldr	r2, [r1, #32]
9000add0:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000add4:	4290      	cmp	r0, r2
9000add6:	d904      	bls.n	9000ade2 <HAL_RCC_ClockConfig+0xa6>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000add8:	6a0a      	ldr	r2, [r1, #32]
9000adda:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000adde:	4302      	orrs	r2, r0
9000ade0:	620a      	str	r2, [r1, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000ade2:	079e      	lsls	r6, r3, #30
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000ade4:	f003 0201 	and.w	r2, r3, #1
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000ade8:	f140 80ab 	bpl.w	9000af42 <HAL_RCC_ClockConfig+0x206>
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000adec:	4e63      	ldr	r6, [pc, #396]	@ (9000af7c <HAL_RCC_ClockConfig+0x240>)
9000adee:	68e0      	ldr	r0, [r4, #12]
9000adf0:	69b1      	ldr	r1, [r6, #24]
9000adf2:	f001 010f 	and.w	r1, r1, #15
9000adf6:	4288      	cmp	r0, r1
9000adf8:	d904      	bls.n	9000ae04 <HAL_RCC_ClockConfig+0xc8>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000adfa:	69b1      	ldr	r1, [r6, #24]
9000adfc:	f021 010f 	bic.w	r1, r1, #15
9000ae00:	4301      	orrs	r1, r0
9000ae02:	61b1      	str	r1, [r6, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000ae04:	2a00      	cmp	r2, #0
9000ae06:	d030      	beq.n	9000ae6a <HAL_RCC_ClockConfig+0x12e>
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
9000ae08:	4a5c      	ldr	r2, [pc, #368]	@ (9000af7c <HAL_RCC_ClockConfig+0x240>)
9000ae0a:	68a1      	ldr	r1, [r4, #8]
9000ae0c:	6993      	ldr	r3, [r2, #24]
9000ae0e:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
9000ae12:	430b      	orrs	r3, r1
9000ae14:	6193      	str	r3, [r2, #24]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000ae16:	6861      	ldr	r1, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000ae18:	6813      	ldr	r3, [r2, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000ae1a:	2902      	cmp	r1, #2
9000ae1c:	f000 80a1 	beq.w	9000af62 <HAL_RCC_ClockConfig+0x226>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
9000ae20:	2903      	cmp	r1, #3
9000ae22:	f000 8098 	beq.w	9000af56 <HAL_RCC_ClockConfig+0x21a>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
9000ae26:	2901      	cmp	r1, #1
9000ae28:	f000 80a1 	beq.w	9000af6e <HAL_RCC_ClockConfig+0x232>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000ae2c:	075f      	lsls	r7, r3, #29
9000ae2e:	d59c      	bpl.n	9000ad6a <HAL_RCC_ClockConfig+0x2e>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000ae30:	4e52      	ldr	r6, [pc, #328]	@ (9000af7c <HAL_RCC_ClockConfig+0x240>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000ae32:	f241 3888 	movw	r8, #5000	@ 0x1388
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000ae36:	6933      	ldr	r3, [r6, #16]
9000ae38:	f023 0307 	bic.w	r3, r3, #7
9000ae3c:	430b      	orrs	r3, r1
9000ae3e:	6133      	str	r3, [r6, #16]
    tickstart = HAL_GetTick();
9000ae40:	f7fb fdd4 	bl	900069ec <HAL_GetTick>
9000ae44:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000ae46:	e005      	b.n	9000ae54 <HAL_RCC_ClockConfig+0x118>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000ae48:	f7fb fdd0 	bl	900069ec <HAL_GetTick>
9000ae4c:	1bc0      	subs	r0, r0, r7
9000ae4e:	4540      	cmp	r0, r8
9000ae50:	f200 808b 	bhi.w	9000af6a <HAL_RCC_ClockConfig+0x22e>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000ae54:	6933      	ldr	r3, [r6, #16]
9000ae56:	6862      	ldr	r2, [r4, #4]
9000ae58:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000ae5c:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
9000ae60:	d1f2      	bne.n	9000ae48 <HAL_RCC_ClockConfig+0x10c>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000ae62:	6823      	ldr	r3, [r4, #0]
9000ae64:	079e      	lsls	r6, r3, #30
9000ae66:	d506      	bpl.n	9000ae76 <HAL_RCC_ClockConfig+0x13a>
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000ae68:	68e0      	ldr	r0, [r4, #12]
9000ae6a:	4944      	ldr	r1, [pc, #272]	@ (9000af7c <HAL_RCC_ClockConfig+0x240>)
9000ae6c:	698a      	ldr	r2, [r1, #24]
9000ae6e:	f002 020f 	and.w	r2, r2, #15
9000ae72:	4290      	cmp	r0, r2
9000ae74:	d369      	bcc.n	9000af4a <HAL_RCC_ClockConfig+0x20e>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
9000ae76:	4940      	ldr	r1, [pc, #256]	@ (9000af78 <HAL_RCC_ClockConfig+0x23c>)
9000ae78:	680a      	ldr	r2, [r1, #0]
9000ae7a:	f002 020f 	and.w	r2, r2, #15
9000ae7e:	42aa      	cmp	r2, r5
9000ae80:	d90a      	bls.n	9000ae98 <HAL_RCC_ClockConfig+0x15c>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000ae82:	680a      	ldr	r2, [r1, #0]
9000ae84:	f022 020f 	bic.w	r2, r2, #15
9000ae88:	432a      	orrs	r2, r5
9000ae8a:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000ae8c:	680a      	ldr	r2, [r1, #0]
9000ae8e:	f002 020f 	and.w	r2, r2, #15
9000ae92:	42aa      	cmp	r2, r5
9000ae94:	f47f af69 	bne.w	9000ad6a <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000ae98:	0758      	lsls	r0, r3, #29
9000ae9a:	d50b      	bpl.n	9000aeb4 <HAL_RCC_ClockConfig+0x178>
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000ae9c:	4937      	ldr	r1, [pc, #220]	@ (9000af7c <HAL_RCC_ClockConfig+0x240>)
9000ae9e:	6920      	ldr	r0, [r4, #16]
9000aea0:	698a      	ldr	r2, [r1, #24]
9000aea2:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000aea6:	4290      	cmp	r0, r2
9000aea8:	d204      	bcs.n	9000aeb4 <HAL_RCC_ClockConfig+0x178>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000aeaa:	698a      	ldr	r2, [r1, #24]
9000aeac:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000aeb0:	4302      	orrs	r2, r0
9000aeb2:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000aeb4:	0719      	lsls	r1, r3, #28
9000aeb6:	d50b      	bpl.n	9000aed0 <HAL_RCC_ClockConfig+0x194>
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000aeb8:	4930      	ldr	r1, [pc, #192]	@ (9000af7c <HAL_RCC_ClockConfig+0x240>)
9000aeba:	6960      	ldr	r0, [r4, #20]
9000aebc:	69ca      	ldr	r2, [r1, #28]
9000aebe:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000aec2:	4290      	cmp	r0, r2
9000aec4:	d204      	bcs.n	9000aed0 <HAL_RCC_ClockConfig+0x194>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000aec6:	69ca      	ldr	r2, [r1, #28]
9000aec8:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000aecc:	4302      	orrs	r2, r0
9000aece:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000aed0:	06da      	lsls	r2, r3, #27
9000aed2:	d50b      	bpl.n	9000aeec <HAL_RCC_ClockConfig+0x1b0>
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000aed4:	4929      	ldr	r1, [pc, #164]	@ (9000af7c <HAL_RCC_ClockConfig+0x240>)
9000aed6:	69a0      	ldr	r0, [r4, #24]
9000aed8:	69ca      	ldr	r2, [r1, #28]
9000aeda:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000aede:	4290      	cmp	r0, r2
9000aee0:	d204      	bcs.n	9000aeec <HAL_RCC_ClockConfig+0x1b0>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000aee2:	69ca      	ldr	r2, [r1, #28]
9000aee4:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
9000aee8:	4302      	orrs	r2, r0
9000aeea:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000aeec:	069b      	lsls	r3, r3, #26
9000aeee:	d50b      	bpl.n	9000af08 <HAL_RCC_ClockConfig+0x1cc>
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000aef0:	4a22      	ldr	r2, [pc, #136]	@ (9000af7c <HAL_RCC_ClockConfig+0x240>)
9000aef2:	69e1      	ldr	r1, [r4, #28]
9000aef4:	6a13      	ldr	r3, [r2, #32]
9000aef6:	f003 0370 	and.w	r3, r3, #112	@ 0x70
9000aefa:	4299      	cmp	r1, r3
9000aefc:	d204      	bcs.n	9000af08 <HAL_RCC_ClockConfig+0x1cc>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000aefe:	6a13      	ldr	r3, [r2, #32]
9000af00:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
9000af04:	430b      	orrs	r3, r1
9000af06:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000af08:	f7ff fe8a 	bl	9000ac20 <HAL_RCC_GetSysClockFreq>
9000af0c:	4a1b      	ldr	r2, [pc, #108]	@ (9000af7c <HAL_RCC_ClockConfig+0x240>)
9000af0e:	4603      	mov	r3, r0
9000af10:	481b      	ldr	r0, [pc, #108]	@ (9000af80 <HAL_RCC_ClockConfig+0x244>)
9000af12:	6991      	ldr	r1, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000af14:	6992      	ldr	r2, [r2, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000af16:	f3c1 2103 	ubfx	r1, r1, #8, #4
  SystemCoreClock = common_system_clock;
9000af1a:	4d1a      	ldr	r5, [pc, #104]	@ (9000af84 <HAL_RCC_ClockConfig+0x248>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000af1c:	f002 020f 	and.w	r2, r2, #15
9000af20:	4c19      	ldr	r4, [pc, #100]	@ (9000af88 <HAL_RCC_ClockConfig+0x24c>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000af22:	5c41      	ldrb	r1, [r0, r1]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000af24:	5c82      	ldrb	r2, [r0, r2]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000af26:	f001 011f 	and.w	r1, r1, #31
  halstatus = HAL_InitTick(uwTickPrio);
9000af2a:	4818      	ldr	r0, [pc, #96]	@ (9000af8c <HAL_RCC_ClockConfig+0x250>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000af2c:	f002 021f 	and.w	r2, r2, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000af30:	40cb      	lsrs	r3, r1
  halstatus = HAL_InitTick(uwTickPrio);
9000af32:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = common_system_clock;
9000af34:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000af36:	40d3      	lsrs	r3, r2
9000af38:	6023      	str	r3, [r4, #0]
}
9000af3a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick(uwTickPrio);
9000af3e:	f7f9 bb5b 	b.w	900045f8 <HAL_InitTick>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000af42:	2a00      	cmp	r2, #0
9000af44:	f47f af60 	bne.w	9000ae08 <HAL_RCC_ClockConfig+0xcc>
9000af48:	e795      	b.n	9000ae76 <HAL_RCC_ClockConfig+0x13a>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000af4a:	698a      	ldr	r2, [r1, #24]
9000af4c:	f022 020f 	bic.w	r2, r2, #15
9000af50:	4302      	orrs	r2, r0
9000af52:	618a      	str	r2, [r1, #24]
9000af54:	e78f      	b.n	9000ae76 <HAL_RCC_ClockConfig+0x13a>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000af56:	019a      	lsls	r2, r3, #6
9000af58:	f53f af6a 	bmi.w	9000ae30 <HAL_RCC_ClockConfig+0xf4>
9000af5c:	e705      	b.n	9000ad6a <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
9000af5e:	2001      	movs	r0, #1
}
9000af60:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000af62:	0398      	lsls	r0, r3, #14
9000af64:	f53f af64 	bmi.w	9000ae30 <HAL_RCC_ClockConfig+0xf4>
9000af68:	e6ff      	b.n	9000ad6a <HAL_RCC_ClockConfig+0x2e>
        return HAL_TIMEOUT;
9000af6a:	2003      	movs	r0, #3
9000af6c:	e6fe      	b.n	9000ad6c <HAL_RCC_ClockConfig+0x30>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000af6e:	05db      	lsls	r3, r3, #23
9000af70:	f53f af5e 	bmi.w	9000ae30 <HAL_RCC_ClockConfig+0xf4>
9000af74:	e6f9      	b.n	9000ad6a <HAL_RCC_ClockConfig+0x2e>
9000af76:	bf00      	nop
9000af78:	52002000 	.word	0x52002000
9000af7c:	58024400 	.word	0x58024400
9000af80:	9002dbcc 	.word	0x9002dbcc
9000af84:	24000078 	.word	0x24000078
9000af88:	24000074 	.word	0x24000074
9000af8c:	24000080 	.word	0x24000080

9000af90 <HAL_RCC_GetHCLKFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000af90:	4a18      	ldr	r2, [pc, #96]	@ (9000aff4 <HAL_RCC_GetHCLKFreq+0x64>)
  * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
9000af92:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000af94:	6913      	ldr	r3, [r2, #16]
9000af96:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000af9a:	2b10      	cmp	r3, #16
9000af9c:	d024      	beq.n	9000afe8 <HAL_RCC_GetHCLKFreq+0x58>
9000af9e:	2b18      	cmp	r3, #24
9000afa0:	d009      	beq.n	9000afb6 <HAL_RCC_GetHCLKFreq+0x26>
9000afa2:	bb1b      	cbnz	r3, 9000afec <HAL_RCC_GetHCLKFreq+0x5c>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000afa4:	6813      	ldr	r3, [r2, #0]
9000afa6:	069b      	lsls	r3, r3, #26
9000afa8:	d522      	bpl.n	9000aff0 <HAL_RCC_GetHCLKFreq+0x60>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000afaa:	6812      	ldr	r2, [r2, #0]
9000afac:	4b12      	ldr	r3, [pc, #72]	@ (9000aff8 <HAL_RCC_GetHCLKFreq+0x68>)
9000afae:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000afb2:	40d3      	lsrs	r3, r2
9000afb4:	e002      	b.n	9000afbc <HAL_RCC_GetHCLKFreq+0x2c>
9000afb6:	f7ff fad3 	bl	9000a560 <HAL_RCC_GetSysClockFreq.part.0>
9000afba:	4603      	mov	r3, r0
  uint32_t common_system_clock;

#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000afbc:	490d      	ldr	r1, [pc, #52]	@ (9000aff4 <HAL_RCC_GetHCLKFreq+0x64>)
9000afbe:	480f      	ldr	r0, [pc, #60]	@ (9000affc <HAL_RCC_GetHCLKFreq+0x6c>)
9000afc0:	698a      	ldr	r2, [r1, #24]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE) >> RCC_CDCFGR1_CDCPRE_Pos] & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000afc2:	6989      	ldr	r1, [r1, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000afc4:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000afc8:	4c0d      	ldr	r4, [pc, #52]	@ (9000b000 <HAL_RCC_GetHCLKFreq+0x70>)
9000afca:	f001 010f 	and.w	r1, r1, #15
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
9000afce:	4d0d      	ldr	r5, [pc, #52]	@ (9000b004 <HAL_RCC_GetHCLKFreq+0x74>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000afd0:	5c82      	ldrb	r2, [r0, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000afd2:	5c40      	ldrb	r0, [r0, r1]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000afd4:	f002 021f 	and.w	r2, r2, #31
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000afd8:	f000 001f 	and.w	r0, r0, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000afdc:	40d3      	lsrs	r3, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000afde:	fa23 f000 	lsr.w	r0, r3, r0
  SystemCoreClock = common_system_clock;
9000afe2:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000afe4:	6020      	str	r0, [r4, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  return SystemD2Clock;
}
9000afe6:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000afe8:	4b07      	ldr	r3, [pc, #28]	@ (9000b008 <HAL_RCC_GetHCLKFreq+0x78>)
9000afea:	e7e7      	b.n	9000afbc <HAL_RCC_GetHCLKFreq+0x2c>
      sysclockfreq = CSI_VALUE;
9000afec:	4b07      	ldr	r3, [pc, #28]	@ (9000b00c <HAL_RCC_GetHCLKFreq+0x7c>)
9000afee:	e7e5      	b.n	9000afbc <HAL_RCC_GetHCLKFreq+0x2c>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000aff0:	4b01      	ldr	r3, [pc, #4]	@ (9000aff8 <HAL_RCC_GetHCLKFreq+0x68>)
9000aff2:	e7e3      	b.n	9000afbc <HAL_RCC_GetHCLKFreq+0x2c>
9000aff4:	58024400 	.word	0x58024400
9000aff8:	03d09000 	.word	0x03d09000
9000affc:	9002dbcc 	.word	0x9002dbcc
9000b000:	24000074 	.word	0x24000074
9000b004:	24000078 	.word	0x24000078
9000b008:	017d7840 	.word	0x017d7840
9000b00c:	003d0900 	.word	0x003d0900

9000b010 <HAL_RCC_GetPCLK1Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b010:	4a1c      	ldr	r2, [pc, #112]	@ (9000b084 <HAL_RCC_GetPCLK1Freq+0x74>)
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
9000b012:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b014:	6913      	ldr	r3, [r2, #16]
9000b016:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000b01a:	2b10      	cmp	r3, #16
9000b01c:	d02b      	beq.n	9000b076 <HAL_RCC_GetPCLK1Freq+0x66>
9000b01e:	2b18      	cmp	r3, #24
9000b020:	d009      	beq.n	9000b036 <HAL_RCC_GetPCLK1Freq+0x26>
9000b022:	bb53      	cbnz	r3, 9000b07a <HAL_RCC_GetPCLK1Freq+0x6a>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b024:	6813      	ldr	r3, [r2, #0]
9000b026:	069b      	lsls	r3, r3, #26
9000b028:	d529      	bpl.n	9000b07e <HAL_RCC_GetPCLK1Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b02a:	6812      	ldr	r2, [r2, #0]
9000b02c:	4b16      	ldr	r3, [pc, #88]	@ (9000b088 <HAL_RCC_GetPCLK1Freq+0x78>)
9000b02e:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000b032:	40d3      	lsrs	r3, r2
9000b034:	e002      	b.n	9000b03c <HAL_RCC_GetPCLK1Freq+0x2c>
9000b036:	f7ff fa93 	bl	9000a560 <HAL_RCC_GetSysClockFreq.part.0>
9000b03a:	4603      	mov	r3, r0
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b03c:	4a11      	ldr	r2, [pc, #68]	@ (9000b084 <HAL_RCC_GetPCLK1Freq+0x74>)
9000b03e:	4913      	ldr	r1, [pc, #76]	@ (9000b08c <HAL_RCC_GetPCLK1Freq+0x7c>)
9000b040:	6990      	ldr	r0, [r2, #24]
  SystemCoreClock = common_system_clock;
9000b042:	4d13      	ldr	r5, [pc, #76]	@ (9000b090 <HAL_RCC_GetPCLK1Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b044:	f3c0 2003 	ubfx	r0, r0, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b048:	4c12      	ldr	r4, [pc, #72]	@ (9000b094 <HAL_RCC_GetPCLK1Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b04a:	5c08      	ldrb	r0, [r1, r0]
9000b04c:	f000 001f 	and.w	r0, r0, #31
9000b050:	40c3      	lsrs	r3, r0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b052:	6990      	ldr	r0, [r2, #24]
9000b054:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000b058:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b05a:	5c08      	ldrb	r0, [r1, r0]
9000b05c:	f000 001f 	and.w	r0, r0, #31
9000b060:	40c3      	lsrs	r3, r0
9000b062:	6023      	str	r3, [r4, #0]
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
9000b064:	69d2      	ldr	r2, [r2, #28]
9000b066:	f3c2 1202 	ubfx	r2, r2, #4, #3
9000b06a:	5c88      	ldrb	r0, [r1, r2]
9000b06c:	f000 001f 	and.w	r0, r0, #31
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
9000b070:	fa23 f000 	lsr.w	r0, r3, r0
9000b074:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b076:	4b08      	ldr	r3, [pc, #32]	@ (9000b098 <HAL_RCC_GetPCLK1Freq+0x88>)
9000b078:	e7e0      	b.n	9000b03c <HAL_RCC_GetPCLK1Freq+0x2c>
      sysclockfreq = CSI_VALUE;
9000b07a:	4b08      	ldr	r3, [pc, #32]	@ (9000b09c <HAL_RCC_GetPCLK1Freq+0x8c>)
9000b07c:	e7de      	b.n	9000b03c <HAL_RCC_GetPCLK1Freq+0x2c>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000b07e:	4b02      	ldr	r3, [pc, #8]	@ (9000b088 <HAL_RCC_GetPCLK1Freq+0x78>)
9000b080:	e7dc      	b.n	9000b03c <HAL_RCC_GetPCLK1Freq+0x2c>
9000b082:	bf00      	nop
9000b084:	58024400 	.word	0x58024400
9000b088:	03d09000 	.word	0x03d09000
9000b08c:	9002dbcc 	.word	0x9002dbcc
9000b090:	24000078 	.word	0x24000078
9000b094:	24000074 	.word	0x24000074
9000b098:	017d7840 	.word	0x017d7840
9000b09c:	003d0900 	.word	0x003d0900

9000b0a0 <HAL_RCC_GetPCLK2Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b0a0:	4a1c      	ldr	r2, [pc, #112]	@ (9000b114 <HAL_RCC_GetPCLK2Freq+0x74>)
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
9000b0a2:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b0a4:	6913      	ldr	r3, [r2, #16]
9000b0a6:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000b0aa:	2b10      	cmp	r3, #16
9000b0ac:	d02b      	beq.n	9000b106 <HAL_RCC_GetPCLK2Freq+0x66>
9000b0ae:	2b18      	cmp	r3, #24
9000b0b0:	d009      	beq.n	9000b0c6 <HAL_RCC_GetPCLK2Freq+0x26>
9000b0b2:	bb53      	cbnz	r3, 9000b10a <HAL_RCC_GetPCLK2Freq+0x6a>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b0b4:	6813      	ldr	r3, [r2, #0]
9000b0b6:	069b      	lsls	r3, r3, #26
9000b0b8:	d529      	bpl.n	9000b10e <HAL_RCC_GetPCLK2Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b0ba:	6812      	ldr	r2, [r2, #0]
9000b0bc:	4b16      	ldr	r3, [pc, #88]	@ (9000b118 <HAL_RCC_GetPCLK2Freq+0x78>)
9000b0be:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000b0c2:	40d3      	lsrs	r3, r2
9000b0c4:	e002      	b.n	9000b0cc <HAL_RCC_GetPCLK2Freq+0x2c>
9000b0c6:	f7ff fa4b 	bl	9000a560 <HAL_RCC_GetSysClockFreq.part.0>
9000b0ca:	4603      	mov	r3, r0
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b0cc:	4a11      	ldr	r2, [pc, #68]	@ (9000b114 <HAL_RCC_GetPCLK2Freq+0x74>)
9000b0ce:	4913      	ldr	r1, [pc, #76]	@ (9000b11c <HAL_RCC_GetPCLK2Freq+0x7c>)
9000b0d0:	6990      	ldr	r0, [r2, #24]
  SystemCoreClock = common_system_clock;
9000b0d2:	4d13      	ldr	r5, [pc, #76]	@ (9000b120 <HAL_RCC_GetPCLK2Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b0d4:	f3c0 2003 	ubfx	r0, r0, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b0d8:	4c12      	ldr	r4, [pc, #72]	@ (9000b124 <HAL_RCC_GetPCLK2Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b0da:	5c08      	ldrb	r0, [r1, r0]
9000b0dc:	f000 001f 	and.w	r0, r0, #31
9000b0e0:	40c3      	lsrs	r3, r0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b0e2:	6990      	ldr	r0, [r2, #24]
9000b0e4:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000b0e8:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b0ea:	5c08      	ldrb	r0, [r1, r0]
9000b0ec:	f000 001f 	and.w	r0, r0, #31
9000b0f0:	40c3      	lsrs	r3, r0
9000b0f2:	6023      	str	r3, [r4, #0]
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
9000b0f4:	69d2      	ldr	r2, [r2, #28]
9000b0f6:	f3c2 2202 	ubfx	r2, r2, #8, #3
9000b0fa:	5c88      	ldrb	r0, [r1, r2]
9000b0fc:	f000 001f 	and.w	r0, r0, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
9000b100:	fa23 f000 	lsr.w	r0, r3, r0
9000b104:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b106:	4b08      	ldr	r3, [pc, #32]	@ (9000b128 <HAL_RCC_GetPCLK2Freq+0x88>)
9000b108:	e7e0      	b.n	9000b0cc <HAL_RCC_GetPCLK2Freq+0x2c>
      sysclockfreq = CSI_VALUE;
9000b10a:	4b08      	ldr	r3, [pc, #32]	@ (9000b12c <HAL_RCC_GetPCLK2Freq+0x8c>)
9000b10c:	e7de      	b.n	9000b0cc <HAL_RCC_GetPCLK2Freq+0x2c>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000b10e:	4b02      	ldr	r3, [pc, #8]	@ (9000b118 <HAL_RCC_GetPCLK2Freq+0x78>)
9000b110:	e7dc      	b.n	9000b0cc <HAL_RCC_GetPCLK2Freq+0x2c>
9000b112:	bf00      	nop
9000b114:	58024400 	.word	0x58024400
9000b118:	03d09000 	.word	0x03d09000
9000b11c:	9002dbcc 	.word	0x9002dbcc
9000b120:	24000078 	.word	0x24000078
9000b124:	24000074 	.word	0x24000074
9000b128:	017d7840 	.word	0x017d7840
9000b12c:	003d0900 	.word	0x003d0900

9000b130 <HAL_RCC_GetClockConfig>:
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000b130:	4b13      	ldr	r3, [pc, #76]	@ (9000b180 <HAL_RCC_GetClockConfig+0x50>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000b132:	223f      	movs	r2, #63	@ 0x3f
{
9000b134:	b410      	push	{r4}
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000b136:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000b138:	691a      	ldr	r2, [r3, #16]
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000b13a:	4c12      	ldr	r4, [pc, #72]	@ (9000b184 <HAL_RCC_GetClockConfig+0x54>)
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000b13c:	f002 0207 	and.w	r2, r2, #7
9000b140:	6042      	str	r2, [r0, #4]
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
9000b142:	699a      	ldr	r2, [r3, #24]
9000b144:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
9000b148:	6082      	str	r2, [r0, #8]
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
9000b14a:	699a      	ldr	r2, [r3, #24]
9000b14c:	f002 020f 	and.w	r2, r2, #15
9000b150:	60c2      	str	r2, [r0, #12]
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
9000b152:	699a      	ldr	r2, [r3, #24]
9000b154:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000b158:	6102      	str	r2, [r0, #16]
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
9000b15a:	69da      	ldr	r2, [r3, #28]
9000b15c:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000b160:	6142      	str	r2, [r0, #20]
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
9000b162:	69da      	ldr	r2, [r3, #28]
9000b164:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000b168:	6182      	str	r2, [r0, #24]
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000b16a:	6a1b      	ldr	r3, [r3, #32]
9000b16c:	f003 0370 	and.w	r3, r3, #112	@ 0x70
9000b170:	61c3      	str	r3, [r0, #28]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000b172:	6823      	ldr	r3, [r4, #0]
}
9000b174:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000b178:	f003 030f 	and.w	r3, r3, #15
9000b17c:	600b      	str	r3, [r1, #0]
}
9000b17e:	4770      	bx	lr
9000b180:	58024400 	.word	0x58024400
9000b184:	52002000 	.word	0x52002000

9000b188 <RCCEx_PLL2_Config.part.0>:
  * @param  Divider  divider parameter to be updated
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(const RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
9000b188:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
9000b18a:	4c36      	ldr	r4, [pc, #216]	@ (9000b264 <RCCEx_PLL2_Config.part.0+0xdc>)
static HAL_StatusTypeDef RCCEx_PLL2_Config(const RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
9000b18c:	4606      	mov	r6, r0
9000b18e:	460f      	mov	r7, r1
    __HAL_RCC_PLL2_DISABLE();
9000b190:	6823      	ldr	r3, [r4, #0]
9000b192:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
9000b196:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000b198:	f7fb fc28 	bl	900069ec <HAL_GetTick>
9000b19c:	4605      	mov	r5, r0

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000b19e:	e004      	b.n	9000b1aa <RCCEx_PLL2_Config.part.0+0x22>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000b1a0:	f7fb fc24 	bl	900069ec <HAL_GetTick>
9000b1a4:	1b40      	subs	r0, r0, r5
9000b1a6:	2802      	cmp	r0, #2
9000b1a8:	d856      	bhi.n	9000b258 <RCCEx_PLL2_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000b1aa:	6823      	ldr	r3, [r4, #0]
9000b1ac:	011a      	lsls	r2, r3, #4
9000b1ae:	d4f7      	bmi.n	9000b1a0 <RCCEx_PLL2_Config.part.0+0x18>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
9000b1b0:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000b1b2:	6832      	ldr	r2, [r6, #0]
9000b1b4:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
9000b1b8:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000b1bc:	62a3      	str	r3, [r4, #40]	@ 0x28
9000b1be:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000b1c2:	3b01      	subs	r3, #1
9000b1c4:	3a01      	subs	r2, #1
9000b1c6:	025b      	lsls	r3, r3, #9
9000b1c8:	0412      	lsls	r2, r2, #16
9000b1ca:	b29b      	uxth	r3, r3
9000b1cc:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000b1d0:	4313      	orrs	r3, r2
9000b1d2:	6872      	ldr	r2, [r6, #4]
9000b1d4:	3a01      	subs	r2, #1
9000b1d6:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000b1da:	4313      	orrs	r3, r2
9000b1dc:	6932      	ldr	r2, [r6, #16]
9000b1de:	3a01      	subs	r2, #1
9000b1e0:	0612      	lsls	r2, r2, #24
9000b1e2:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000b1e6:	4313      	orrs	r3, r2
9000b1e8:	63a3      	str	r3, [r4, #56]	@ 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
9000b1ea:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b1ec:	6972      	ldr	r2, [r6, #20]
9000b1ee:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
9000b1f2:	4313      	orrs	r3, r2
9000b1f4:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000b1f6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b1f8:	69b2      	ldr	r2, [r6, #24]
9000b1fa:	f023 0320 	bic.w	r3, r3, #32
9000b1fe:	4313      	orrs	r3, r2
9000b200:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();
9000b202:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b204:	f023 0310 	bic.w	r3, r3, #16
9000b208:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000b20a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000b20c:	69f2      	ldr	r2, [r6, #28]
9000b20e:	f36f 03cf 	bfc	r3, #3, #13
9000b212:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000b216:	63e3      	str	r3, [r4, #60]	@ 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
9000b218:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b21a:	f043 0310 	orr.w	r3, r3, #16
9000b21e:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000b220:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000b222:	b1df      	cbz	r7, 9000b25c <RCCEx_PLL2_Config.part.0+0xd4>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000b224:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
9000b226:	bf0c      	ite	eq
9000b228:	f443 1380 	orreq.w	r3, r3, #1048576	@ 0x100000
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
9000b22c:	f443 1300 	orrne.w	r3, r3, #2097152	@ 0x200000
9000b230:	62e3      	str	r3, [r4, #44]	@ 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
9000b232:	4c0c      	ldr	r4, [pc, #48]	@ (9000b264 <RCCEx_PLL2_Config.part.0+0xdc>)
9000b234:	6823      	ldr	r3, [r4, #0]
9000b236:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
9000b23a:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000b23c:	f7fb fbd6 	bl	900069ec <HAL_GetTick>
9000b240:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000b242:	e004      	b.n	9000b24e <RCCEx_PLL2_Config.part.0+0xc6>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000b244:	f7fb fbd2 	bl	900069ec <HAL_GetTick>
9000b248:	1b40      	subs	r0, r0, r5
9000b24a:	2802      	cmp	r0, #2
9000b24c:	d804      	bhi.n	9000b258 <RCCEx_PLL2_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000b24e:	6823      	ldr	r3, [r4, #0]
9000b250:	011b      	lsls	r3, r3, #4
9000b252:	d5f7      	bpl.n	9000b244 <RCCEx_PLL2_Config.part.0+0xbc>
    }

  }


  return status;
9000b254:	2000      	movs	r0, #0
}
9000b256:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000b258:	2003      	movs	r0, #3
}
9000b25a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000b25c:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
9000b260:	62e3      	str	r3, [r4, #44]	@ 0x2c
9000b262:	e7e6      	b.n	9000b232 <RCCEx_PLL2_Config.part.0+0xaa>
9000b264:	58024400 	.word	0x58024400

9000b268 <RCCEx_PLL3_Config.part.0>:
  * @param  Divider  divider parameter to be updated
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(const RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
9000b268:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
9000b26a:	4c36      	ldr	r4, [pc, #216]	@ (9000b344 <RCCEx_PLL3_Config.part.0+0xdc>)
static HAL_StatusTypeDef RCCEx_PLL3_Config(const RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
9000b26c:	4606      	mov	r6, r0
9000b26e:	460f      	mov	r7, r1
    __HAL_RCC_PLL3_DISABLE();
9000b270:	6823      	ldr	r3, [r4, #0]
9000b272:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
9000b276:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000b278:	f7fb fbb8 	bl	900069ec <HAL_GetTick>
9000b27c:	4605      	mov	r5, r0
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000b27e:	e004      	b.n	9000b28a <RCCEx_PLL3_Config.part.0+0x22>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000b280:	f7fb fbb4 	bl	900069ec <HAL_GetTick>
9000b284:	1b40      	subs	r0, r0, r5
9000b286:	2802      	cmp	r0, #2
9000b288:	d856      	bhi.n	9000b338 <RCCEx_PLL3_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000b28a:	6823      	ldr	r3, [r4, #0]
9000b28c:	009a      	lsls	r2, r3, #2
9000b28e:	d4f7      	bmi.n	9000b280 <RCCEx_PLL3_Config.part.0+0x18>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
9000b290:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000b292:	6832      	ldr	r2, [r6, #0]
9000b294:	f023 737c 	bic.w	r3, r3, #66060288	@ 0x3f00000
9000b298:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
9000b29c:	62a3      	str	r3, [r4, #40]	@ 0x28
9000b29e:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000b2a2:	3b01      	subs	r3, #1
9000b2a4:	3a01      	subs	r2, #1
9000b2a6:	025b      	lsls	r3, r3, #9
9000b2a8:	0412      	lsls	r2, r2, #16
9000b2aa:	b29b      	uxth	r3, r3
9000b2ac:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000b2b0:	4313      	orrs	r3, r2
9000b2b2:	6872      	ldr	r2, [r6, #4]
9000b2b4:	3a01      	subs	r2, #1
9000b2b6:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000b2ba:	4313      	orrs	r3, r2
9000b2bc:	6932      	ldr	r2, [r6, #16]
9000b2be:	3a01      	subs	r2, #1
9000b2c0:	0612      	lsls	r2, r2, #24
9000b2c2:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000b2c6:	4313      	orrs	r3, r2
9000b2c8:	6423      	str	r3, [r4, #64]	@ 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
9000b2ca:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b2cc:	6972      	ldr	r2, [r6, #20]
9000b2ce:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
9000b2d2:	4313      	orrs	r3, r2
9000b2d4:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000b2d6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b2d8:	69b2      	ldr	r2, [r6, #24]
9000b2da:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
9000b2de:	4313      	orrs	r3, r2
9000b2e0:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();
9000b2e2:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b2e4:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
9000b2e8:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000b2ea:	6c63      	ldr	r3, [r4, #68]	@ 0x44
9000b2ec:	69f2      	ldr	r2, [r6, #28]
9000b2ee:	f36f 03cf 	bfc	r3, #3, #13
9000b2f2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000b2f6:	6463      	str	r3, [r4, #68]	@ 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
9000b2f8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b2fa:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000b2fe:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000b300:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000b302:	b1df      	cbz	r7, 9000b33c <RCCEx_PLL3_Config.part.0+0xd4>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000b304:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
9000b306:	bf0c      	ite	eq
9000b308:	f443 0300 	orreq.w	r3, r3, #8388608	@ 0x800000
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
9000b30c:	f043 7380 	orrne.w	r3, r3, #16777216	@ 0x1000000
9000b310:	62e3      	str	r3, [r4, #44]	@ 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
9000b312:	4c0c      	ldr	r4, [pc, #48]	@ (9000b344 <RCCEx_PLL3_Config.part.0+0xdc>)
9000b314:	6823      	ldr	r3, [r4, #0]
9000b316:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
9000b31a:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000b31c:	f7fb fb66 	bl	900069ec <HAL_GetTick>
9000b320:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000b322:	e004      	b.n	9000b32e <RCCEx_PLL3_Config.part.0+0xc6>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000b324:	f7fb fb62 	bl	900069ec <HAL_GetTick>
9000b328:	1b40      	subs	r0, r0, r5
9000b32a:	2802      	cmp	r0, #2
9000b32c:	d804      	bhi.n	9000b338 <RCCEx_PLL3_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000b32e:	6823      	ldr	r3, [r4, #0]
9000b330:	009b      	lsls	r3, r3, #2
9000b332:	d5f7      	bpl.n	9000b324 <RCCEx_PLL3_Config.part.0+0xbc>
    }

  }


  return status;
9000b334:	2000      	movs	r0, #0
}
9000b336:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000b338:	2003      	movs	r0, #3
}
9000b33a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000b33c:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
9000b340:	62e3      	str	r3, [r4, #44]	@ 0x2c
9000b342:	e7e6      	b.n	9000b312 <RCCEx_PLL3_Config.part.0+0xaa>
9000b344:	58024400 	.word	0x58024400

9000b348 <HAL_RCCEx_PeriphCLKConfig>:
{
9000b348:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000b34c:	e9d0 3200 	ldrd	r3, r2, [r0]
{
9000b350:	4604      	mov	r4, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000b352:	011d      	lsls	r5, r3, #4
9000b354:	f003 6600 	and.w	r6, r3, #134217728	@ 0x8000000
9000b358:	d524      	bpl.n	9000b3a4 <HAL_RCCEx_PeriphCLKConfig+0x5c>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000b35a:	6e81      	ldr	r1, [r0, #104]	@ 0x68
9000b35c:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000b360:	f000 85df 	beq.w	9000bf22 <HAL_RCCEx_PeriphCLKConfig+0xbda>
9000b364:	f200 86a8 	bhi.w	9000c0b8 <HAL_RCCEx_PeriphCLKConfig+0xd70>
9000b368:	2900      	cmp	r1, #0
9000b36a:	f000 85f6 	beq.w	9000bf5a <HAL_RCCEx_PeriphCLKConfig+0xc12>
9000b36e:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000b372:	f040 86a5 	bne.w	9000c0c0 <HAL_RCCEx_PeriphCLKConfig+0xd78>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b376:	49a9      	ldr	r1, [pc, #676]	@ (9000b61c <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b378:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b37a:	f001 0103 	and.w	r1, r1, #3
9000b37e:	2903      	cmp	r1, #3
9000b380:	f000 869e 	beq.w	9000c0c0 <HAL_RCCEx_PeriphCLKConfig+0xd78>
9000b384:	2102      	movs	r1, #2
9000b386:	3008      	adds	r0, #8
9000b388:	f7ff fefe 	bl	9000b188 <RCCEx_PLL2_Config.part.0>
9000b38c:	4606      	mov	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000b38e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b392:	b93e      	cbnz	r6, 9000b3a4 <HAL_RCCEx_PeriphCLKConfig+0x5c>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000b394:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000b396:	4da1      	ldr	r5, [pc, #644]	@ (9000b61c <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
9000b398:	2600      	movs	r6, #0
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000b39a:	6d28      	ldr	r0, [r5, #80]	@ 0x50
9000b39c:	f420 1040 	bic.w	r0, r0, #3145728	@ 0x300000
9000b3a0:	4301      	orrs	r1, r0
9000b3a2:	6529      	str	r1, [r5, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000b3a4:	05d8      	lsls	r0, r3, #23
9000b3a6:	d50a      	bpl.n	9000b3be <HAL_RCCEx_PeriphCLKConfig+0x76>
    switch (PeriphClkInit->Sai1ClockSelection)
9000b3a8:	6da1      	ldr	r1, [r4, #88]	@ 0x58
9000b3aa:	2904      	cmp	r1, #4
9000b3ac:	d806      	bhi.n	9000b3bc <HAL_RCCEx_PeriphCLKConfig+0x74>
9000b3ae:	e8df f011 	tbh	[pc, r1, lsl #1]
9000b3b2:	03ff      	.short	0x03ff
9000b3b4:	0582056d 	.word	0x0582056d
9000b3b8:	04040404 	.word	0x04040404
      status = ret;
9000b3bc:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000b3be:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000b3c0:	0599      	lsls	r1, r3, #22
9000b3c2:	d524      	bpl.n	9000b40e <HAL_RCCEx_PeriphCLKConfig+0xc6>
    switch (PeriphClkInit->Sai23ClockSelection)
9000b3c4:	6de1      	ldr	r1, [r4, #92]	@ 0x5c
9000b3c6:	2980      	cmp	r1, #128	@ 0x80
9000b3c8:	f000 854b 	beq.w	9000be62 <HAL_RCCEx_PeriphCLKConfig+0xb1a>
9000b3cc:	f200 8687 	bhi.w	9000c0de <HAL_RCCEx_PeriphCLKConfig+0xd96>
9000b3d0:	2900      	cmp	r1, #0
9000b3d2:	f000 85bb 	beq.w	9000bf4c <HAL_RCCEx_PeriphCLKConfig+0xc04>
9000b3d6:	2940      	cmp	r1, #64	@ 0x40
9000b3d8:	f040 8688 	bne.w	9000c0ec <HAL_RCCEx_PeriphCLKConfig+0xda4>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b3dc:	498f      	ldr	r1, [pc, #572]	@ (9000b61c <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b3de:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b3e0:	f001 0103 	and.w	r1, r1, #3
9000b3e4:	2903      	cmp	r1, #3
9000b3e6:	f000 8681 	beq.w	9000c0ec <HAL_RCCEx_PeriphCLKConfig+0xda4>
9000b3ea:	2100      	movs	r1, #0
9000b3ec:	f104 0008 	add.w	r0, r4, #8
9000b3f0:	f7ff feca 	bl	9000b188 <RCCEx_PLL2_Config.part.0>
9000b3f4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000b3f6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b3fa:	2d00      	cmp	r5, #0
9000b3fc:	f040 8543 	bne.w	9000be86 <HAL_RCCEx_PeriphCLKConfig+0xb3e>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
9000b400:	4f86      	ldr	r7, [pc, #536]	@ (9000b61c <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b402:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
9000b404:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000b406:	f421 71e0 	bic.w	r1, r1, #448	@ 0x1c0
9000b40a:	4301      	orrs	r1, r0
9000b40c:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000b40e:	055f      	lsls	r7, r3, #21
9000b410:	d528      	bpl.n	9000b464 <HAL_RCCEx_PeriphCLKConfig+0x11c>
    switch (PeriphClkInit->Sai4AClockSelection)
9000b412:	f8d4 10a8 	ldr.w	r1, [r4, #168]	@ 0xa8
9000b416:	f5b1 0f80 	cmp.w	r1, #4194304	@ 0x400000
9000b41a:	f000 855c 	beq.w	9000bed6 <HAL_RCCEx_PeriphCLKConfig+0xb8e>
9000b41e:	f200 8652 	bhi.w	9000c0c6 <HAL_RCCEx_PeriphCLKConfig+0xd7e>
9000b422:	2900      	cmp	r1, #0
9000b424:	f000 858b 	beq.w	9000bf3e <HAL_RCCEx_PeriphCLKConfig+0xbf6>
9000b428:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000b42c:	f040 8653 	bne.w	9000c0d6 <HAL_RCCEx_PeriphCLKConfig+0xd8e>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b430:	497a      	ldr	r1, [pc, #488]	@ (9000b61c <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b432:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b434:	f001 0103 	and.w	r1, r1, #3
9000b438:	2903      	cmp	r1, #3
9000b43a:	f000 864c 	beq.w	9000c0d6 <HAL_RCCEx_PeriphCLKConfig+0xd8e>
9000b43e:	2100      	movs	r1, #0
9000b440:	f104 0008 	add.w	r0, r4, #8
9000b444:	f7ff fea0 	bl	9000b188 <RCCEx_PLL2_Config.part.0>
9000b448:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000b44a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b44e:	2d00      	cmp	r5, #0
9000b450:	f040 8553 	bne.w	9000befa <HAL_RCCEx_PeriphCLKConfig+0xbb2>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
9000b454:	4f71      	ldr	r7, [pc, #452]	@ (9000b61c <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b456:	f8d4 00a8 	ldr.w	r0, [r4, #168]	@ 0xa8
9000b45a:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b45c:	f421 0160 	bic.w	r1, r1, #14680064	@ 0xe00000
9000b460:	4301      	orrs	r1, r0
9000b462:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000b464:	0518      	lsls	r0, r3, #20
9000b466:	d528      	bpl.n	9000b4ba <HAL_RCCEx_PeriphCLKConfig+0x172>
    switch (PeriphClkInit->Sai4BClockSelection)
9000b468:	f8d4 10ac 	ldr.w	r1, [r4, #172]	@ 0xac
9000b46c:	f1b1 7f00 	cmp.w	r1, #33554432	@ 0x2000000
9000b470:	f000 8546 	beq.w	9000bf00 <HAL_RCCEx_PeriphCLKConfig+0xbb8>
9000b474:	f200 8614 	bhi.w	9000c0a0 <HAL_RCCEx_PeriphCLKConfig+0xd58>
9000b478:	2900      	cmp	r1, #0
9000b47a:	f000 84d6 	beq.w	9000be2a <HAL_RCCEx_PeriphCLKConfig+0xae2>
9000b47e:	f1b1 7f80 	cmp.w	r1, #16777216	@ 0x1000000
9000b482:	f040 8615 	bne.w	9000c0b0 <HAL_RCCEx_PeriphCLKConfig+0xd68>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b486:	4965      	ldr	r1, [pc, #404]	@ (9000b61c <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b488:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b48a:	f001 0103 	and.w	r1, r1, #3
9000b48e:	2903      	cmp	r1, #3
9000b490:	f000 860e 	beq.w	9000c0b0 <HAL_RCCEx_PeriphCLKConfig+0xd68>
9000b494:	2100      	movs	r1, #0
9000b496:	f104 0008 	add.w	r0, r4, #8
9000b49a:	f7ff fe75 	bl	9000b188 <RCCEx_PLL2_Config.part.0>
9000b49e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000b4a0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b4a4:	2d00      	cmp	r5, #0
9000b4a6:	f040 84c8 	bne.w	9000be3a <HAL_RCCEx_PeriphCLKConfig+0xaf2>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
9000b4aa:	4f5c      	ldr	r7, [pc, #368]	@ (9000b61c <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b4ac:	f8d4 00ac 	ldr.w	r0, [r4, #172]	@ 0xac
9000b4b0:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b4b2:	f021 61e0 	bic.w	r1, r1, #117440512	@ 0x7000000
9000b4b6:	4301      	orrs	r1, r0
9000b4b8:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000b4ba:	0199      	lsls	r1, r3, #6
9000b4bc:	d518      	bpl.n	9000b4f0 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
    switch (PeriphClkInit->QspiClockSelection)
9000b4be:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
9000b4c0:	2920      	cmp	r1, #32
9000b4c2:	f000 8434 	beq.w	9000bd2e <HAL_RCCEx_PeriphCLKConfig+0x9e6>
9000b4c6:	f200 8615 	bhi.w	9000c0f4 <HAL_RCCEx_PeriphCLKConfig+0xdac>
9000b4ca:	b139      	cbz	r1, 9000b4dc <HAL_RCCEx_PeriphCLKConfig+0x194>
9000b4cc:	2910      	cmp	r1, #16
9000b4ce:	f040 8614 	bne.w	9000c0fa <HAL_RCCEx_PeriphCLKConfig+0xdb2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000b4d2:	4852      	ldr	r0, [pc, #328]	@ (9000b61c <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b4d4:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000b4d6:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000b4da:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000b4dc:	2d00      	cmp	r5, #0
9000b4de:	f040 83bf 	bne.w	9000bc60 <HAL_RCCEx_PeriphCLKConfig+0x918>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
9000b4e2:	4f4e      	ldr	r7, [pc, #312]	@ (9000b61c <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b4e4:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
9000b4e6:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000b4e8:	f021 0130 	bic.w	r1, r1, #48	@ 0x30
9000b4ec:	4301      	orrs	r1, r0
9000b4ee:	64f9      	str	r1, [r7, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000b4f0:	04df      	lsls	r7, r3, #19
9000b4f2:	d526      	bpl.n	9000b542 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
    switch (PeriphClkInit->Spi123ClockSelection)
9000b4f4:	6e21      	ldr	r1, [r4, #96]	@ 0x60
9000b4f6:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
9000b4fa:	f000 84a1 	beq.w	9000be40 <HAL_RCCEx_PeriphCLKConfig+0xaf8>
9000b4fe:	f200 85c3 	bhi.w	9000c088 <HAL_RCCEx_PeriphCLKConfig+0xd40>
9000b502:	2900      	cmp	r1, #0
9000b504:	f000 8486 	beq.w	9000be14 <HAL_RCCEx_PeriphCLKConfig+0xacc>
9000b508:	f5b1 5f80 	cmp.w	r1, #4096	@ 0x1000
9000b50c:	f040 85c4 	bne.w	9000c098 <HAL_RCCEx_PeriphCLKConfig+0xd50>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b510:	4942      	ldr	r1, [pc, #264]	@ (9000b61c <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b512:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b514:	f001 0103 	and.w	r1, r1, #3
9000b518:	2903      	cmp	r1, #3
9000b51a:	f000 85bd 	beq.w	9000c098 <HAL_RCCEx_PeriphCLKConfig+0xd50>
9000b51e:	2100      	movs	r1, #0
9000b520:	f104 0008 	add.w	r0, r4, #8
9000b524:	f7ff fe30 	bl	9000b188 <RCCEx_PLL2_Config.part.0>
9000b528:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000b52a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b52e:	2d00      	cmp	r5, #0
9000b530:	f040 8478 	bne.w	9000be24 <HAL_RCCEx_PeriphCLKConfig+0xadc>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
9000b534:	4f39      	ldr	r7, [pc, #228]	@ (9000b61c <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b536:	6e20      	ldr	r0, [r4, #96]	@ 0x60
9000b538:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000b53a:	f421 41e0 	bic.w	r1, r1, #28672	@ 0x7000
9000b53e:	4301      	orrs	r1, r0
9000b540:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000b542:	0498      	lsls	r0, r3, #18
9000b544:	d524      	bpl.n	9000b590 <HAL_RCCEx_PeriphCLKConfig+0x248>
    switch (PeriphClkInit->Spi45ClockSelection)
9000b546:	6e61      	ldr	r1, [r4, #100]	@ 0x64
9000b548:	f5b1 3f00 	cmp.w	r1, #131072	@ 0x20000
9000b54c:	f000 8415 	beq.w	9000bd7a <HAL_RCCEx_PeriphCLKConfig+0xa32>
9000b550:	f200 8556 	bhi.w	9000c000 <HAL_RCCEx_PeriphCLKConfig+0xcb8>
9000b554:	b191      	cbz	r1, 9000b57c <HAL_RCCEx_PeriphCLKConfig+0x234>
9000b556:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000b55a:	f040 855b 	bne.w	9000c014 <HAL_RCCEx_PeriphCLKConfig+0xccc>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b55e:	492f      	ldr	r1, [pc, #188]	@ (9000b61c <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b560:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b562:	f001 0103 	and.w	r1, r1, #3
9000b566:	2903      	cmp	r1, #3
9000b568:	f000 8554 	beq.w	9000c014 <HAL_RCCEx_PeriphCLKConfig+0xccc>
9000b56c:	2101      	movs	r1, #1
9000b56e:	f104 0008 	add.w	r0, r4, #8
9000b572:	f7ff fe09 	bl	9000b188 <RCCEx_PLL2_Config.part.0>
9000b576:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000b578:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b57c:	2d00      	cmp	r5, #0
9000b57e:	f040 838f 	bne.w	9000bca0 <HAL_RCCEx_PeriphCLKConfig+0x958>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
9000b582:	4f26      	ldr	r7, [pc, #152]	@ (9000b61c <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b584:	6e60      	ldr	r0, [r4, #100]	@ 0x64
9000b586:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000b588:	f421 21e0 	bic.w	r1, r1, #458752	@ 0x70000
9000b58c:	4301      	orrs	r1, r0
9000b58e:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000b590:	0459      	lsls	r1, r3, #17
9000b592:	d526      	bpl.n	9000b5e2 <HAL_RCCEx_PeriphCLKConfig+0x29a>
    switch (PeriphClkInit->Spi6ClockSelection)
9000b594:	f8d4 10b0 	ldr.w	r1, [r4, #176]	@ 0xb0
9000b598:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000b59c:	f000 8426 	beq.w	9000bdec <HAL_RCCEx_PeriphCLKConfig+0xaa4>
9000b5a0:	f200 854a 	bhi.w	9000c038 <HAL_RCCEx_PeriphCLKConfig+0xcf0>
9000b5a4:	b191      	cbz	r1, 9000b5cc <HAL_RCCEx_PeriphCLKConfig+0x284>
9000b5a6:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000b5aa:	f040 854f 	bne.w	9000c04c <HAL_RCCEx_PeriphCLKConfig+0xd04>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b5ae:	491b      	ldr	r1, [pc, #108]	@ (9000b61c <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b5b0:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b5b2:	f001 0103 	and.w	r1, r1, #3
9000b5b6:	2903      	cmp	r1, #3
9000b5b8:	f000 8548 	beq.w	9000c04c <HAL_RCCEx_PeriphCLKConfig+0xd04>
9000b5bc:	2101      	movs	r1, #1
9000b5be:	f104 0008 	add.w	r0, r4, #8
9000b5c2:	f7ff fde1 	bl	9000b188 <RCCEx_PLL2_Config.part.0>
9000b5c6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000b5c8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b5cc:	2d00      	cmp	r5, #0
9000b5ce:	f040 835b 	bne.w	9000bc88 <HAL_RCCEx_PeriphCLKConfig+0x940>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
9000b5d2:	4f12      	ldr	r7, [pc, #72]	@ (9000b61c <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b5d4:	f8d4 00b0 	ldr.w	r0, [r4, #176]	@ 0xb0
9000b5d8:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b5da:	f021 41e0 	bic.w	r1, r1, #1879048192	@ 0x70000000
9000b5de:	4301      	orrs	r1, r0
9000b5e0:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000b5e2:	041f      	lsls	r7, r3, #16
9000b5e4:	d50d      	bpl.n	9000b602 <HAL_RCCEx_PeriphCLKConfig+0x2ba>
    switch (PeriphClkInit->FdcanClockSelection)
9000b5e6:	6f21      	ldr	r1, [r4, #112]	@ 0x70
9000b5e8:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000b5ec:	f000 8260 	beq.w	9000bab0 <HAL_RCCEx_PeriphCLKConfig+0x768>
9000b5f0:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000b5f4:	f000 8591 	beq.w	9000c11a <HAL_RCCEx_PeriphCLKConfig+0xdd2>
9000b5f8:	2900      	cmp	r1, #0
9000b5fa:	f000 825e 	beq.w	9000baba <HAL_RCCEx_PeriphCLKConfig+0x772>
      status = ret;
9000b5fe:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000b600:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000b602:	01d8      	lsls	r0, r3, #7
9000b604:	d515      	bpl.n	9000b632 <HAL_RCCEx_PeriphCLKConfig+0x2ea>
    switch (PeriphClkInit->FmcClockSelection)
9000b606:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000b608:	2903      	cmp	r1, #3
9000b60a:	f200 85b4 	bhi.w	9000c176 <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000b60e:	e8df f011 	tbh	[pc, r1, lsl #1]
9000b612:	000c      	.short	0x000c
9000b614:	03a10007 	.word	0x03a10007
9000b618:	000c      	.short	0x000c
9000b61a:	bf00      	nop
9000b61c:	58024400 	.word	0x58024400
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000b620:	4836      	ldr	r0, [pc, #216]	@ (9000b6fc <HAL_RCCEx_PeriphCLKConfig+0x3b4>)
9000b622:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000b624:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000b628:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000b62a:	2d00      	cmp	r5, #0
9000b62c:	f000 831a 	beq.w	9000bc64 <HAL_RCCEx_PeriphCLKConfig+0x91c>
      status = ret;
9000b630:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000b632:	0259      	lsls	r1, r3, #9
9000b634:	f100 827a 	bmi.w	9000bb2c <HAL_RCCEx_PeriphCLKConfig+0x7e4>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000b638:	07df      	lsls	r7, r3, #31
9000b63a:	d52f      	bpl.n	9000b69c <HAL_RCCEx_PeriphCLKConfig+0x354>
    switch (PeriphClkInit->Usart16ClockSelection)
9000b63c:	6fe1      	ldr	r1, [r4, #124]	@ 0x7c
9000b63e:	2928      	cmp	r1, #40	@ 0x28
9000b640:	d82a      	bhi.n	9000b698 <HAL_RCCEx_PeriphCLKConfig+0x350>
9000b642:	e8df f011 	tbh	[pc, r1, lsl #1]
9000b646:	0257      	.short	0x0257
9000b648:	00290029 	.word	0x00290029
9000b64c:	00290029 	.word	0x00290029
9000b650:	00290029 	.word	0x00290029
9000b654:	02480029 	.word	0x02480029
9000b658:	00290029 	.word	0x00290029
9000b65c:	00290029 	.word	0x00290029
9000b660:	00290029 	.word	0x00290029
9000b664:	04b90029 	.word	0x04b90029
9000b668:	00290029 	.word	0x00290029
9000b66c:	00290029 	.word	0x00290029
9000b670:	00290029 	.word	0x00290029
9000b674:	02570029 	.word	0x02570029
9000b678:	00290029 	.word	0x00290029
9000b67c:	00290029 	.word	0x00290029
9000b680:	00290029 	.word	0x00290029
9000b684:	02570029 	.word	0x02570029
9000b688:	00290029 	.word	0x00290029
9000b68c:	00290029 	.word	0x00290029
9000b690:	00290029 	.word	0x00290029
9000b694:	02570029 	.word	0x02570029
      status = ret;
9000b698:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000b69a:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000b69c:	0798      	lsls	r0, r3, #30
9000b69e:	d51e      	bpl.n	9000b6de <HAL_RCCEx_PeriphCLKConfig+0x396>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000b6a0:	6fa1      	ldr	r1, [r4, #120]	@ 0x78
9000b6a2:	2905      	cmp	r1, #5
9000b6a4:	f200 8550 	bhi.w	9000c148 <HAL_RCCEx_PeriphCLKConfig+0xe00>
9000b6a8:	e8df f011 	tbh	[pc, r1, lsl #1]
9000b6ac:	00060015 	.word	0x00060015
9000b6b0:	00150471 	.word	0x00150471
9000b6b4:	00150015 	.word	0x00150015
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b6b8:	4910      	ldr	r1, [pc, #64]	@ (9000b6fc <HAL_RCCEx_PeriphCLKConfig+0x3b4>)
9000b6ba:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b6bc:	f001 0103 	and.w	r1, r1, #3
9000b6c0:	2903      	cmp	r1, #3
9000b6c2:	f000 8541 	beq.w	9000c148 <HAL_RCCEx_PeriphCLKConfig+0xe00>
9000b6c6:	2101      	movs	r1, #1
9000b6c8:	f104 0008 	add.w	r0, r4, #8
9000b6cc:	f7ff fd5c 	bl	9000b188 <RCCEx_PLL2_Config.part.0>
9000b6d0:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000b6d2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b6d6:	2d00      	cmp	r5, #0
9000b6d8:	f000 82cc 	beq.w	9000bc74 <HAL_RCCEx_PeriphCLKConfig+0x92c>
      status = ret;
9000b6dc:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000b6de:	0759      	lsls	r1, r3, #29
9000b6e0:	d521      	bpl.n	9000b726 <HAL_RCCEx_PeriphCLKConfig+0x3de>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000b6e2:	f8d4 1094 	ldr.w	r1, [r4, #148]	@ 0x94
9000b6e6:	2905      	cmp	r1, #5
9000b6e8:	f200 852a 	bhi.w	9000c140 <HAL_RCCEx_PeriphCLKConfig+0xdf8>
9000b6ec:	e8df f011 	tbh	[pc, r1, lsl #1]
9000b6f0:	00080017 	.word	0x00080017
9000b6f4:	0017043c 	.word	0x0017043c
9000b6f8:	00170017 	.word	0x00170017
9000b6fc:	58024400 	.word	0x58024400
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b700:	49ae      	ldr	r1, [pc, #696]	@ (9000b9bc <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b702:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b704:	f001 0103 	and.w	r1, r1, #3
9000b708:	2903      	cmp	r1, #3
9000b70a:	f000 8519 	beq.w	9000c140 <HAL_RCCEx_PeriphCLKConfig+0xdf8>
9000b70e:	2101      	movs	r1, #1
9000b710:	f104 0008 	add.w	r0, r4, #8
9000b714:	f7ff fd38 	bl	9000b188 <RCCEx_PLL2_Config.part.0>
9000b718:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000b71a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b71e:	2d00      	cmp	r5, #0
9000b720:	f000 82c2 	beq.w	9000bca8 <HAL_RCCEx_PeriphCLKConfig+0x960>
      status = ret;
9000b724:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000b726:	069f      	lsls	r7, r3, #26
9000b728:	d526      	bpl.n	9000b778 <HAL_RCCEx_PeriphCLKConfig+0x430>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000b72a:	f8d4 1090 	ldr.w	r1, [r4, #144]	@ 0x90
9000b72e:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000b732:	f000 82c6 	beq.w	9000bcc2 <HAL_RCCEx_PeriphCLKConfig+0x97a>
9000b736:	f200 8455 	bhi.w	9000bfe4 <HAL_RCCEx_PeriphCLKConfig+0xc9c>
9000b73a:	b191      	cbz	r1, 9000b762 <HAL_RCCEx_PeriphCLKConfig+0x41a>
9000b73c:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000b740:	f040 845a 	bne.w	9000bff8 <HAL_RCCEx_PeriphCLKConfig+0xcb0>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b744:	499d      	ldr	r1, [pc, #628]	@ (9000b9bc <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b746:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b748:	f001 0103 	and.w	r1, r1, #3
9000b74c:	2903      	cmp	r1, #3
9000b74e:	f000 8453 	beq.w	9000bff8 <HAL_RCCEx_PeriphCLKConfig+0xcb0>
9000b752:	2100      	movs	r1, #0
9000b754:	f104 0008 	add.w	r0, r4, #8
9000b758:	f7ff fd16 	bl	9000b188 <RCCEx_PLL2_Config.part.0>
9000b75c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000b75e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b762:	2d00      	cmp	r5, #0
9000b764:	f040 828e 	bne.w	9000bc84 <HAL_RCCEx_PeriphCLKConfig+0x93c>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
9000b768:	4f94      	ldr	r7, [pc, #592]	@ (9000b9bc <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b76a:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
9000b76e:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000b770:	f021 41e0 	bic.w	r1, r1, #1879048192	@ 0x70000000
9000b774:	4301      	orrs	r1, r0
9000b776:	6579      	str	r1, [r7, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000b778:	0658      	lsls	r0, r3, #25
9000b77a:	d526      	bpl.n	9000b7ca <HAL_RCCEx_PeriphCLKConfig+0x482>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000b77c:	f8d4 109c 	ldr.w	r1, [r4, #156]	@ 0x9c
9000b780:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
9000b784:	f000 82af 	beq.w	9000bce6 <HAL_RCCEx_PeriphCLKConfig+0x99e>
9000b788:	f200 8464 	bhi.w	9000c054 <HAL_RCCEx_PeriphCLKConfig+0xd0c>
9000b78c:	b191      	cbz	r1, 9000b7b4 <HAL_RCCEx_PeriphCLKConfig+0x46c>
9000b78e:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
9000b792:	f040 8469 	bne.w	9000c068 <HAL_RCCEx_PeriphCLKConfig+0xd20>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b796:	4989      	ldr	r1, [pc, #548]	@ (9000b9bc <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b798:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b79a:	f001 0103 	and.w	r1, r1, #3
9000b79e:	2903      	cmp	r1, #3
9000b7a0:	f000 8462 	beq.w	9000c068 <HAL_RCCEx_PeriphCLKConfig+0xd20>
9000b7a4:	2100      	movs	r1, #0
9000b7a6:	f104 0008 	add.w	r0, r4, #8
9000b7aa:	f7ff fced 	bl	9000b188 <RCCEx_PLL2_Config.part.0>
9000b7ae:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000b7b0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b7b4:	2d00      	cmp	r5, #0
9000b7b6:	f040 8269 	bne.w	9000bc8c <HAL_RCCEx_PeriphCLKConfig+0x944>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
9000b7ba:	4f80      	ldr	r7, [pc, #512]	@ (9000b9bc <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b7bc:	f8d4 009c 	ldr.w	r0, [r4, #156]	@ 0x9c
9000b7c0:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b7c2:	f421 51e0 	bic.w	r1, r1, #7168	@ 0x1c00
9000b7c6:	4301      	orrs	r1, r0
9000b7c8:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000b7ca:	0619      	lsls	r1, r3, #24
9000b7cc:	d526      	bpl.n	9000b81c <HAL_RCCEx_PeriphCLKConfig+0x4d4>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000b7ce:	f8d4 10a0 	ldr.w	r1, [r4, #160]	@ 0xa0
9000b7d2:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
9000b7d6:	f000 8298 	beq.w	9000bd0a <HAL_RCCEx_PeriphCLKConfig+0x9c2>
9000b7da:	f200 841f 	bhi.w	9000c01c <HAL_RCCEx_PeriphCLKConfig+0xcd4>
9000b7de:	b191      	cbz	r1, 9000b806 <HAL_RCCEx_PeriphCLKConfig+0x4be>
9000b7e0:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
9000b7e4:	f040 8424 	bne.w	9000c030 <HAL_RCCEx_PeriphCLKConfig+0xce8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b7e8:	4974      	ldr	r1, [pc, #464]	@ (9000b9bc <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b7ea:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b7ec:	f001 0103 	and.w	r1, r1, #3
9000b7f0:	2903      	cmp	r1, #3
9000b7f2:	f000 841d 	beq.w	9000c030 <HAL_RCCEx_PeriphCLKConfig+0xce8>
9000b7f6:	2100      	movs	r1, #0
9000b7f8:	f104 0008 	add.w	r0, r4, #8
9000b7fc:	f7ff fcc4 	bl	9000b188 <RCCEx_PLL2_Config.part.0>
9000b800:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000b802:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b806:	2d00      	cmp	r5, #0
9000b808:	f040 8244 	bne.w	9000bc94 <HAL_RCCEx_PeriphCLKConfig+0x94c>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
9000b80c:	4f6b      	ldr	r7, [pc, #428]	@ (9000b9bc <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b80e:	f8d4 00a0 	ldr.w	r0, [r4, #160]	@ 0xa0
9000b812:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b814:	f421 4160 	bic.w	r1, r1, #57344	@ 0xe000
9000b818:	4301      	orrs	r1, r0
9000b81a:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000b81c:	071f      	lsls	r7, r3, #28
9000b81e:	d50b      	bpl.n	9000b838 <HAL_RCCEx_PeriphCLKConfig+0x4f0>
    if ((PeriphClkInit->I2c123ClockSelection) == RCC_I2C123CLKSOURCE_PLL3)
9000b820:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
9000b824:	f5b0 5f80 	cmp.w	r0, #4096	@ 0x1000
9000b828:	f000 81d4 	beq.w	9000bbd4 <HAL_RCCEx_PeriphCLKConfig+0x88c>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000b82c:	4f63      	ldr	r7, [pc, #396]	@ (9000b9bc <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b82e:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000b830:	f421 5140 	bic.w	r1, r1, #12288	@ 0x3000
9000b834:	4301      	orrs	r1, r0
9000b836:	6579      	str	r1, [r7, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000b838:	06d8      	lsls	r0, r3, #27
9000b83a:	d50b      	bpl.n	9000b854 <HAL_RCCEx_PeriphCLKConfig+0x50c>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
9000b83c:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
9000b840:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
9000b844:	f000 81db 	beq.w	9000bbfe <HAL_RCCEx_PeriphCLKConfig+0x8b6>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000b848:	4f5c      	ldr	r7, [pc, #368]	@ (9000b9bc <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b84a:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b84c:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
9000b850:	4301      	orrs	r1, r0
9000b852:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000b854:	0319      	lsls	r1, r3, #12
9000b856:	d524      	bpl.n	9000b8a2 <HAL_RCCEx_PeriphCLKConfig+0x55a>
    switch (PeriphClkInit->AdcClockSelection)
9000b858:	f8d4 10a4 	ldr.w	r1, [r4, #164]	@ 0xa4
9000b85c:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000b860:	f000 82b1 	beq.w	9000bdc6 <HAL_RCCEx_PeriphCLKConfig+0xa7e>
9000b864:	f5b1 3f00 	cmp.w	r1, #131072	@ 0x20000
9000b868:	d010      	beq.n	9000b88c <HAL_RCCEx_PeriphCLKConfig+0x544>
9000b86a:	2900      	cmp	r1, #0
9000b86c:	f040 8130 	bne.w	9000bad0 <HAL_RCCEx_PeriphCLKConfig+0x788>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b870:	4852      	ldr	r0, [pc, #328]	@ (9000b9bc <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b872:	6a80      	ldr	r0, [r0, #40]	@ 0x28
9000b874:	f000 0003 	and.w	r0, r0, #3
9000b878:	2803      	cmp	r0, #3
9000b87a:	f000 8129 	beq.w	9000bad0 <HAL_RCCEx_PeriphCLKConfig+0x788>
9000b87e:	f104 0008 	add.w	r0, r4, #8
9000b882:	f7ff fc81 	bl	9000b188 <RCCEx_PLL2_Config.part.0>
9000b886:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000b888:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b88c:	2d00      	cmp	r5, #0
9000b88e:	f040 81ff 	bne.w	9000bc90 <HAL_RCCEx_PeriphCLKConfig+0x948>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
9000b892:	4f4a      	ldr	r7, [pc, #296]	@ (9000b9bc <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b894:	f8d4 00a4 	ldr.w	r0, [r4, #164]	@ 0xa4
9000b898:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b89a:	f421 3140 	bic.w	r1, r1, #196608	@ 0x30000
9000b89e:	4301      	orrs	r1, r0
9000b8a0:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000b8a2:	035f      	lsls	r7, r3, #13
9000b8a4:	d50f      	bpl.n	9000b8c6 <HAL_RCCEx_PeriphCLKConfig+0x57e>
    switch (PeriphClkInit->UsbClockSelection)
9000b8a6:	f8d4 1088 	ldr.w	r1, [r4, #136]	@ 0x88
9000b8aa:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000b8ae:	f000 8277 	beq.w	9000bda0 <HAL_RCCEx_PeriphCLKConfig+0xa58>
9000b8b2:	f5b1 1f40 	cmp.w	r1, #3145728	@ 0x300000
9000b8b6:	f000 812d 	beq.w	9000bb14 <HAL_RCCEx_PeriphCLKConfig+0x7cc>
9000b8ba:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000b8be:	f000 8124 	beq.w	9000bb0a <HAL_RCCEx_PeriphCLKConfig+0x7c2>
      status = ret;
9000b8c2:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000b8c4:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000b8c6:	03d8      	lsls	r0, r3, #15
9000b8c8:	d520      	bpl.n	9000b90c <HAL_RCCEx_PeriphCLKConfig+0x5c4>
    switch (PeriphClkInit->SdmmcClockSelection)
9000b8ca:	6d21      	ldr	r1, [r4, #80]	@ 0x50
9000b8cc:	2900      	cmp	r1, #0
9000b8ce:	f000 81aa 	beq.w	9000bc26 <HAL_RCCEx_PeriphCLKConfig+0x8de>
9000b8d2:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000b8d6:	f040 80e8 	bne.w	9000baaa <HAL_RCCEx_PeriphCLKConfig+0x762>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b8da:	4938      	ldr	r1, [pc, #224]	@ (9000b9bc <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b8dc:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b8de:	f001 0103 	and.w	r1, r1, #3
9000b8e2:	2903      	cmp	r1, #3
9000b8e4:	f000 80e1 	beq.w	9000baaa <HAL_RCCEx_PeriphCLKConfig+0x762>
9000b8e8:	2102      	movs	r1, #2
9000b8ea:	f104 0008 	add.w	r0, r4, #8
9000b8ee:	f7ff fc4b 	bl	9000b188 <RCCEx_PLL2_Config.part.0>
9000b8f2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000b8f4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b8f8:	2d00      	cmp	r5, #0
9000b8fa:	f040 819c 	bne.w	9000bc36 <HAL_RCCEx_PeriphCLKConfig+0x8ee>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
9000b8fe:	4f2f      	ldr	r7, [pc, #188]	@ (9000b9bc <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b900:	6d20      	ldr	r0, [r4, #80]	@ 0x50
9000b902:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000b904:	f421 3180 	bic.w	r1, r1, #65536	@ 0x10000
9000b908:	4301      	orrs	r1, r0
9000b90a:	64f9      	str	r1, [r7, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000b90c:	0099      	lsls	r1, r3, #2
9000b90e:	d50e      	bpl.n	9000b92e <HAL_RCCEx_PeriphCLKConfig+0x5e6>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b910:	492a      	ldr	r1, [pc, #168]	@ (9000b9bc <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b912:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b914:	f001 0103 	and.w	r1, r1, #3
9000b918:	2903      	cmp	r1, #3
9000b91a:	d007      	beq.n	9000b92c <HAL_RCCEx_PeriphCLKConfig+0x5e4>
9000b91c:	2102      	movs	r1, #2
9000b91e:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000b922:	f7ff fca1 	bl	9000b268 <RCCEx_PLL3_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000b926:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000b92a:	b100      	cbz	r0, 9000b92e <HAL_RCCEx_PeriphCLKConfig+0x5e6>
      status = HAL_ERROR;
9000b92c:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000b92e:	039f      	lsls	r7, r3, #14
9000b930:	f100 80ab 	bmi.w	9000ba8a <HAL_RCCEx_PeriphCLKConfig+0x742>
      status = HAL_ERROR;
9000b934:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
9000b936:	02d8      	lsls	r0, r3, #11
9000b938:	d506      	bpl.n	9000b948 <HAL_RCCEx_PeriphCLKConfig+0x600>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
9000b93a:	4820      	ldr	r0, [pc, #128]	@ (9000b9bc <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b93c:	6f66      	ldr	r6, [r4, #116]	@ 0x74
9000b93e:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000b940:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
9000b944:	4331      	orrs	r1, r6
9000b946:	6501      	str	r1, [r0, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
9000b948:	00d9      	lsls	r1, r3, #3
9000b94a:	d507      	bpl.n	9000b95c <HAL_RCCEx_PeriphCLKConfig+0x614>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
9000b94c:	481b      	ldr	r0, [pc, #108]	@ (9000b9bc <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b94e:	f8d4 60b8 	ldr.w	r6, [r4, #184]	@ 0xb8
9000b952:	6901      	ldr	r1, [r0, #16]
9000b954:	f421 4180 	bic.w	r1, r1, #16384	@ 0x4000
9000b958:	4331      	orrs	r1, r6
9000b95a:	6101      	str	r1, [r0, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
9000b95c:	029f      	lsls	r7, r3, #10
9000b95e:	d506      	bpl.n	9000b96e <HAL_RCCEx_PeriphCLKConfig+0x626>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
9000b960:	4816      	ldr	r0, [pc, #88]	@ (9000b9bc <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b962:	6ee6      	ldr	r6, [r4, #108]	@ 0x6c
9000b964:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000b966:	f021 7180 	bic.w	r1, r1, #16777216	@ 0x1000000
9000b96a:	4331      	orrs	r1, r6
9000b96c:	6501      	str	r1, [r0, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
9000b96e:	005e      	lsls	r6, r3, #1
9000b970:	d509      	bpl.n	9000b986 <HAL_RCCEx_PeriphCLKConfig+0x63e>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
9000b972:	4912      	ldr	r1, [pc, #72]	@ (9000b9bc <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b974:	6908      	ldr	r0, [r1, #16]
9000b976:	f420 4000 	bic.w	r0, r0, #32768	@ 0x8000
9000b97a:	6108      	str	r0, [r1, #16]
9000b97c:	6908      	ldr	r0, [r1, #16]
9000b97e:	f8d4 60bc 	ldr.w	r6, [r4, #188]	@ 0xbc
9000b982:	4330      	orrs	r0, r6
9000b984:	6108      	str	r0, [r1, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
9000b986:	2b00      	cmp	r3, #0
9000b988:	da06      	bge.n	9000b998 <HAL_RCCEx_PeriphCLKConfig+0x650>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
9000b98a:	480c      	ldr	r0, [pc, #48]	@ (9000b9bc <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b98c:	6d66      	ldr	r6, [r4, #84]	@ 0x54
9000b98e:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
9000b990:	f021 5140 	bic.w	r1, r1, #805306368	@ 0x30000000
9000b994:	4331      	orrs	r1, r6
9000b996:	64c1      	str	r1, [r0, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
9000b998:	0218      	lsls	r0, r3, #8
9000b99a:	d507      	bpl.n	9000b9ac <HAL_RCCEx_PeriphCLKConfig+0x664>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
9000b99c:	4907      	ldr	r1, [pc, #28]	@ (9000b9bc <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b99e:	f8d4 008c 	ldr.w	r0, [r4, #140]	@ 0x8c
9000b9a2:	6d4b      	ldr	r3, [r1, #84]	@ 0x54
9000b9a4:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
9000b9a8:	4303      	orrs	r3, r0
9000b9aa:	654b      	str	r3, [r1, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
9000b9ac:	07d1      	lsls	r1, r2, #31
9000b9ae:	d511      	bpl.n	9000b9d4 <HAL_RCCEx_PeriphCLKConfig+0x68c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b9b0:	4b02      	ldr	r3, [pc, #8]	@ (9000b9bc <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b9b2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000b9b4:	f003 0303 	and.w	r3, r3, #3
9000b9b8:	2b03      	cmp	r3, #3
9000b9ba:	e001      	b.n	9000b9c0 <HAL_RCCEx_PeriphCLKConfig+0x678>
9000b9bc:	58024400 	.word	0x58024400
9000b9c0:	f000 835c 	beq.w	9000c07c <HAL_RCCEx_PeriphCLKConfig+0xd34>
9000b9c4:	2100      	movs	r1, #0
9000b9c6:	f104 0008 	add.w	r0, r4, #8
9000b9ca:	f7ff fbdd 	bl	9000b188 <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000b9ce:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000b9d0:	b100      	cbz	r0, 9000b9d4 <HAL_RCCEx_PeriphCLKConfig+0x68c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000b9d2:	4605      	mov	r5, r0
9000b9d4:	0793      	lsls	r3, r2, #30
9000b9d6:	d50e      	bpl.n	9000b9f6 <HAL_RCCEx_PeriphCLKConfig+0x6ae>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b9d8:	4baf      	ldr	r3, [pc, #700]	@ (9000bc98 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000b9da:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000b9dc:	f003 0303 	and.w	r3, r3, #3
9000b9e0:	2b03      	cmp	r3, #3
9000b9e2:	f000 834d 	beq.w	9000c080 <HAL_RCCEx_PeriphCLKConfig+0xd38>
9000b9e6:	2101      	movs	r1, #1
9000b9e8:	f104 0008 	add.w	r0, r4, #8
9000b9ec:	f7ff fbcc 	bl	9000b188 <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000b9f0:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000b9f2:	b100      	cbz	r0, 9000b9f6 <HAL_RCCEx_PeriphCLKConfig+0x6ae>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000b9f4:	4605      	mov	r5, r0
9000b9f6:	0757      	lsls	r7, r2, #29
9000b9f8:	d50e      	bpl.n	9000ba18 <HAL_RCCEx_PeriphCLKConfig+0x6d0>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b9fa:	4ba7      	ldr	r3, [pc, #668]	@ (9000bc98 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000b9fc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000b9fe:	f003 0303 	and.w	r3, r3, #3
9000ba02:	2b03      	cmp	r3, #3
9000ba04:	f000 833e 	beq.w	9000c084 <HAL_RCCEx_PeriphCLKConfig+0xd3c>
9000ba08:	2102      	movs	r1, #2
9000ba0a:	f104 0008 	add.w	r0, r4, #8
9000ba0e:	f7ff fbbb 	bl	9000b188 <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000ba12:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000ba14:	b100      	cbz	r0, 9000ba18 <HAL_RCCEx_PeriphCLKConfig+0x6d0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000ba16:	4605      	mov	r5, r0
9000ba18:	0716      	lsls	r6, r2, #28
9000ba1a:	d50e      	bpl.n	9000ba3a <HAL_RCCEx_PeriphCLKConfig+0x6f2>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ba1c:	4b9e      	ldr	r3, [pc, #632]	@ (9000bc98 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000ba1e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000ba20:	f003 0303 	and.w	r3, r3, #3
9000ba24:	2b03      	cmp	r3, #3
9000ba26:	f000 8323 	beq.w	9000c070 <HAL_RCCEx_PeriphCLKConfig+0xd28>
9000ba2a:	2100      	movs	r1, #0
9000ba2c:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000ba30:	f7ff fc1a 	bl	9000b268 <RCCEx_PLL3_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000ba34:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000ba36:	b100      	cbz	r0, 9000ba3a <HAL_RCCEx_PeriphCLKConfig+0x6f2>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000ba38:	4605      	mov	r5, r0
9000ba3a:	06d0      	lsls	r0, r2, #27
9000ba3c:	d50f      	bpl.n	9000ba5e <HAL_RCCEx_PeriphCLKConfig+0x716>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ba3e:	4b96      	ldr	r3, [pc, #600]	@ (9000bc98 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000ba40:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000ba42:	f003 0303 	and.w	r3, r3, #3
9000ba46:	2b03      	cmp	r3, #3
9000ba48:	f000 8314 	beq.w	9000c074 <HAL_RCCEx_PeriphCLKConfig+0xd2c>
9000ba4c:	2101      	movs	r1, #1
9000ba4e:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000ba52:	f7ff fc09 	bl	9000b268 <RCCEx_PLL3_Config.part.0>
    if (ret == HAL_OK)
9000ba56:	2800      	cmp	r0, #0
9000ba58:	f040 8359 	bne.w	9000c10e <HAL_RCCEx_PeriphCLKConfig+0xdc6>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000ba5c:	6862      	ldr	r2, [r4, #4]
9000ba5e:	0693      	lsls	r3, r2, #26
9000ba60:	d50e      	bpl.n	9000ba80 <HAL_RCCEx_PeriphCLKConfig+0x738>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ba62:	4b8d      	ldr	r3, [pc, #564]	@ (9000bc98 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000ba64:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000ba66:	f003 0303 	and.w	r3, r3, #3
9000ba6a:	2b03      	cmp	r3, #3
9000ba6c:	f000 82b7 	beq.w	9000bfde <HAL_RCCEx_PeriphCLKConfig+0xc96>
9000ba70:	2102      	movs	r1, #2
9000ba72:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000ba76:	f7ff fbf7 	bl	9000b268 <RCCEx_PLL3_Config.part.0>
    if (ret == HAL_OK)
9000ba7a:	2800      	cmp	r0, #0
9000ba7c:	f040 82af 	bne.w	9000bfde <HAL_RCCEx_PeriphCLKConfig+0xc96>
  if (status == HAL_OK)
9000ba80:	1e28      	subs	r0, r5, #0
9000ba82:	bf18      	it	ne
9000ba84:	2001      	movne	r0, #1
}
9000ba86:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    switch (PeriphClkInit->RngClockSelection)
9000ba8a:	f8d4 1080 	ldr.w	r1, [r4, #128]	@ 0x80
9000ba8e:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
9000ba92:	f000 80d2 	beq.w	9000bc3a <HAL_RCCEx_PeriphCLKConfig+0x8f2>
9000ba96:	f240 8110 	bls.w	9000bcba <HAL_RCCEx_PeriphCLKConfig+0x972>
9000ba9a:	f421 7080 	bic.w	r0, r1, #256	@ 0x100
9000ba9e:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
9000baa2:	f000 80cf 	beq.w	9000bc44 <HAL_RCCEx_PeriphCLKConfig+0x8fc>
9000baa6:	2501      	movs	r5, #1
9000baa8:	e745      	b.n	9000b936 <HAL_RCCEx_PeriphCLKConfig+0x5ee>
      status = ret;
9000baaa:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000baac:	4635      	mov	r5, r6
9000baae:	e72d      	b.n	9000b90c <HAL_RCCEx_PeriphCLKConfig+0x5c4>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bab0:	4879      	ldr	r0, [pc, #484]	@ (9000bc98 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bab2:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000bab4:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bab8:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000baba:	2d00      	cmp	r5, #0
9000babc:	f040 80ce 	bne.w	9000bc5c <HAL_RCCEx_PeriphCLKConfig+0x914>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
9000bac0:	4f75      	ldr	r7, [pc, #468]	@ (9000bc98 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bac2:	6f20      	ldr	r0, [r4, #112]	@ 0x70
9000bac4:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000bac6:	f021 5140 	bic.w	r1, r1, #805306368	@ 0x30000000
9000baca:	4301      	orrs	r1, r0
9000bacc:	6539      	str	r1, [r7, #80]	@ 0x50
9000bace:	e598      	b.n	9000b602 <HAL_RCCEx_PeriphCLKConfig+0x2ba>
      status = ret;
9000bad0:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000bad2:	4635      	mov	r5, r6
9000bad4:	e6e5      	b.n	9000b8a2 <HAL_RCCEx_PeriphCLKConfig+0x55a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bad6:	4970      	ldr	r1, [pc, #448]	@ (9000bc98 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bad8:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bada:	f001 0103 	and.w	r1, r1, #3
9000bade:	2903      	cmp	r1, #3
9000bae0:	f43f adda 	beq.w	9000b698 <HAL_RCCEx_PeriphCLKConfig+0x350>
9000bae4:	2101      	movs	r1, #1
9000bae6:	f104 0008 	add.w	r0, r4, #8
9000baea:	f7ff fb4d 	bl	9000b188 <RCCEx_PLL2_Config.part.0>
9000baee:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000baf0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000baf4:	2d00      	cmp	r5, #0
9000baf6:	f040 80d5 	bne.w	9000bca4 <HAL_RCCEx_PeriphCLKConfig+0x95c>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
9000bafa:	4f67      	ldr	r7, [pc, #412]	@ (9000bc98 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bafc:	6fe0      	ldr	r0, [r4, #124]	@ 0x7c
9000bafe:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000bb00:	f021 0138 	bic.w	r1, r1, #56	@ 0x38
9000bb04:	4301      	orrs	r1, r0
9000bb06:	6579      	str	r1, [r7, #84]	@ 0x54
9000bb08:	e5c8      	b.n	9000b69c <HAL_RCCEx_PeriphCLKConfig+0x354>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bb0a:	4863      	ldr	r0, [pc, #396]	@ (9000bc98 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bb0c:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000bb0e:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bb12:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000bb14:	2d00      	cmp	r5, #0
9000bb16:	f040 809f 	bne.w	9000bc58 <HAL_RCCEx_PeriphCLKConfig+0x910>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
9000bb1a:	4f5f      	ldr	r7, [pc, #380]	@ (9000bc98 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bb1c:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
9000bb20:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000bb22:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
9000bb26:	4301      	orrs	r1, r0
9000bb28:	6579      	str	r1, [r7, #84]	@ 0x54
9000bb2a:	e6cc      	b.n	9000b8c6 <HAL_RCCEx_PeriphCLKConfig+0x57e>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
9000bb2c:	4f5b      	ldr	r7, [pc, #364]	@ (9000bc9c <HAL_RCCEx_PeriphCLKConfig+0x954>)
9000bb2e:	683b      	ldr	r3, [r7, #0]
9000bb30:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000bb34:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
9000bb36:	f7fa ff59 	bl	900069ec <HAL_GetTick>
9000bb3a:	4680      	mov	r8, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000bb3c:	e006      	b.n	9000bb4c <HAL_RCCEx_PeriphCLKConfig+0x804>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000bb3e:	f7fa ff55 	bl	900069ec <HAL_GetTick>
9000bb42:	eba0 0008 	sub.w	r0, r0, r8
9000bb46:	2864      	cmp	r0, #100	@ 0x64
9000bb48:	f200 82db 	bhi.w	9000c102 <HAL_RCCEx_PeriphCLKConfig+0xdba>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000bb4c:	683b      	ldr	r3, [r7, #0]
9000bb4e:	05da      	lsls	r2, r3, #23
9000bb50:	d5f5      	bpl.n	9000bb3e <HAL_RCCEx_PeriphCLKConfig+0x7f6>
    if (ret == HAL_OK)
9000bb52:	2d00      	cmp	r5, #0
9000bb54:	f040 82d6 	bne.w	9000c104 <HAL_RCCEx_PeriphCLKConfig+0xdbc>
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
9000bb58:	4a4f      	ldr	r2, [pc, #316]	@ (9000bc98 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bb5a:	f8d4 30b4 	ldr.w	r3, [r4, #180]	@ 0xb4
9000bb5e:	6f11      	ldr	r1, [r2, #112]	@ 0x70
9000bb60:	4059      	eors	r1, r3
9000bb62:	f411 7f40 	tst.w	r1, #768	@ 0x300
9000bb66:	d00b      	beq.n	9000bb80 <HAL_RCCEx_PeriphCLKConfig+0x838>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000bb68:	6f11      	ldr	r1, [r2, #112]	@ 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
9000bb6a:	6f10      	ldr	r0, [r2, #112]	@ 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000bb6c:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
9000bb70:	f440 3080 	orr.w	r0, r0, #65536	@ 0x10000
9000bb74:	6710      	str	r0, [r2, #112]	@ 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
9000bb76:	6f10      	ldr	r0, [r2, #112]	@ 0x70
9000bb78:	f420 3080 	bic.w	r0, r0, #65536	@ 0x10000
9000bb7c:	6710      	str	r0, [r2, #112]	@ 0x70
        RCC->BDCR = tmpreg;
9000bb7e:	6711      	str	r1, [r2, #112]	@ 0x70
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
9000bb80:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
9000bb84:	f000 82fb 	beq.w	9000c17e <HAL_RCCEx_PeriphCLKConfig+0xe36>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000bb88:	f403 7240 	and.w	r2, r3, #768	@ 0x300
9000bb8c:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
9000bb90:	f000 8309 	beq.w	9000c1a6 <HAL_RCCEx_PeriphCLKConfig+0xe5e>
9000bb94:	4940      	ldr	r1, [pc, #256]	@ (9000bc98 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bb96:	690a      	ldr	r2, [r1, #16]
9000bb98:	f422 527c 	bic.w	r2, r2, #16128	@ 0x3f00
9000bb9c:	610a      	str	r2, [r1, #16]
9000bb9e:	483e      	ldr	r0, [pc, #248]	@ (9000bc98 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bba0:	f3c3 010b 	ubfx	r1, r3, #0, #12
9000bba4:	6f07      	ldr	r7, [r0, #112]	@ 0x70
9000bba6:	4339      	orrs	r1, r7
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000bba8:	e9d4 3200 	ldrd	r3, r2, [r4]
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000bbac:	6701      	str	r1, [r0, #112]	@ 0x70
9000bbae:	e543      	b.n	9000b638 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bbb0:	4839      	ldr	r0, [pc, #228]	@ (9000bc98 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bbb2:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000bbb4:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bbb8:	62c1      	str	r1, [r0, #44]	@ 0x2c
        ret = HAL_ERROR;
9000bbba:	4635      	mov	r5, r6
    if (ret == HAL_OK)
9000bbbc:	2d00      	cmp	r5, #0
9000bbbe:	f040 8177 	bne.w	9000beb0 <HAL_RCCEx_PeriphCLKConfig+0xb68>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
9000bbc2:	4f35      	ldr	r7, [pc, #212]	@ (9000bc98 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bbc4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9000bbc6:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000bbc8:	f021 0107 	bic.w	r1, r1, #7
9000bbcc:	4301      	orrs	r1, r0
9000bbce:	6539      	str	r1, [r7, #80]	@ 0x50
9000bbd0:	f7ff bbf6 	b.w	9000b3c0 <HAL_RCCEx_PeriphCLKConfig+0x78>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bbd4:	4930      	ldr	r1, [pc, #192]	@ (9000bc98 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bbd6:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bbd8:	f001 0103 	and.w	r1, r1, #3
9000bbdc:	2903      	cmp	r1, #3
9000bbde:	f000 82ba 	beq.w	9000c156 <HAL_RCCEx_PeriphCLKConfig+0xe0e>
9000bbe2:	2102      	movs	r1, #2
9000bbe4:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bbe8:	f7ff fb3e 	bl	9000b268 <RCCEx_PLL3_Config.part.0>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000bbec:	2800      	cmp	r0, #0
9000bbee:	f000 82b5 	beq.w	9000c15c <HAL_RCCEx_PeriphCLKConfig+0xe14>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000bbf2:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
        status = HAL_ERROR;
9000bbf6:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000bbf8:	e9d4 3200 	ldrd	r3, r2, [r4]
9000bbfc:	e616      	b.n	9000b82c <HAL_RCCEx_PeriphCLKConfig+0x4e4>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bbfe:	4926      	ldr	r1, [pc, #152]	@ (9000bc98 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bc00:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bc02:	f001 0103 	and.w	r1, r1, #3
9000bc06:	2903      	cmp	r1, #3
9000bc08:	f000 82a2 	beq.w	9000c150 <HAL_RCCEx_PeriphCLKConfig+0xe08>
9000bc0c:	2102      	movs	r1, #2
9000bc0e:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bc12:	f7ff fb29 	bl	9000b268 <RCCEx_PLL3_Config.part.0>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000bc16:	2800      	cmp	r0, #0
9000bc18:	f040 82a6 	bne.w	9000c168 <HAL_RCCEx_PeriphCLKConfig+0xe20>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000bc1c:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000bc20:	e9d4 3200 	ldrd	r3, r2, [r4]
9000bc24:	e610      	b.n	9000b848 <HAL_RCCEx_PeriphCLKConfig+0x500>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bc26:	481c      	ldr	r0, [pc, #112]	@ (9000bc98 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bc28:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000bc2a:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bc2e:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000bc30:	2d00      	cmp	r5, #0
9000bc32:	f43f ae64 	beq.w	9000b8fe <HAL_RCCEx_PeriphCLKConfig+0x5b6>
      status = ret;
9000bc36:	462e      	mov	r6, r5
9000bc38:	e668      	b.n	9000b90c <HAL_RCCEx_PeriphCLKConfig+0x5c4>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bc3a:	4f17      	ldr	r7, [pc, #92]	@ (9000bc98 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bc3c:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
9000bc3e:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
9000bc42:	62f8      	str	r0, [r7, #44]	@ 0x2c
    if (ret == HAL_OK)
9000bc44:	2d00      	cmp	r5, #0
9000bc46:	f47f ae76 	bne.w	9000b936 <HAL_RCCEx_PeriphCLKConfig+0x5ee>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
9000bc4a:	4d13      	ldr	r5, [pc, #76]	@ (9000bc98 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bc4c:	6d68      	ldr	r0, [r5, #84]	@ 0x54
9000bc4e:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
9000bc52:	4301      	orrs	r1, r0
9000bc54:	6569      	str	r1, [r5, #84]	@ 0x54
9000bc56:	e66d      	b.n	9000b934 <HAL_RCCEx_PeriphCLKConfig+0x5ec>
      status = ret;
9000bc58:	462e      	mov	r6, r5
9000bc5a:	e634      	b.n	9000b8c6 <HAL_RCCEx_PeriphCLKConfig+0x57e>
      status = ret;
9000bc5c:	462e      	mov	r6, r5
9000bc5e:	e4d0      	b.n	9000b602 <HAL_RCCEx_PeriphCLKConfig+0x2ba>
      status = ret;
9000bc60:	462e      	mov	r6, r5
9000bc62:	e445      	b.n	9000b4f0 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
9000bc64:	4f0c      	ldr	r7, [pc, #48]	@ (9000bc98 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bc66:	6ca0      	ldr	r0, [r4, #72]	@ 0x48
9000bc68:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000bc6a:	f021 0103 	bic.w	r1, r1, #3
9000bc6e:	4301      	orrs	r1, r0
9000bc70:	64f9      	str	r1, [r7, #76]	@ 0x4c
9000bc72:	e4de      	b.n	9000b632 <HAL_RCCEx_PeriphCLKConfig+0x2ea>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
9000bc74:	4f08      	ldr	r7, [pc, #32]	@ (9000bc98 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bc76:	6fa0      	ldr	r0, [r4, #120]	@ 0x78
9000bc78:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000bc7a:	f021 0107 	bic.w	r1, r1, #7
9000bc7e:	4301      	orrs	r1, r0
9000bc80:	6579      	str	r1, [r7, #84]	@ 0x54
9000bc82:	e52c      	b.n	9000b6de <HAL_RCCEx_PeriphCLKConfig+0x396>
      status = ret;
9000bc84:	462e      	mov	r6, r5
9000bc86:	e577      	b.n	9000b778 <HAL_RCCEx_PeriphCLKConfig+0x430>
      status = ret;
9000bc88:	462e      	mov	r6, r5
9000bc8a:	e4aa      	b.n	9000b5e2 <HAL_RCCEx_PeriphCLKConfig+0x29a>
      status = ret;
9000bc8c:	462e      	mov	r6, r5
9000bc8e:	e59c      	b.n	9000b7ca <HAL_RCCEx_PeriphCLKConfig+0x482>
      status = ret;
9000bc90:	462e      	mov	r6, r5
9000bc92:	e606      	b.n	9000b8a2 <HAL_RCCEx_PeriphCLKConfig+0x55a>
      status = ret;
9000bc94:	462e      	mov	r6, r5
9000bc96:	e5c1      	b.n	9000b81c <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000bc98:	58024400 	.word	0x58024400
9000bc9c:	58024800 	.word	0x58024800
      status = ret;
9000bca0:	462e      	mov	r6, r5
9000bca2:	e475      	b.n	9000b590 <HAL_RCCEx_PeriphCLKConfig+0x248>
      status = ret;
9000bca4:	462e      	mov	r6, r5
9000bca6:	e4f9      	b.n	9000b69c <HAL_RCCEx_PeriphCLKConfig+0x354>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
9000bca8:	4fc2      	ldr	r7, [pc, #776]	@ (9000bfb4 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bcaa:	f8d4 0094 	ldr.w	r0, [r4, #148]	@ 0x94
9000bcae:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000bcb0:	f021 0107 	bic.w	r1, r1, #7
9000bcb4:	4301      	orrs	r1, r0
9000bcb6:	65b9      	str	r1, [r7, #88]	@ 0x58
9000bcb8:	e535      	b.n	9000b726 <HAL_RCCEx_PeriphCLKConfig+0x3de>
    switch (PeriphClkInit->RngClockSelection)
9000bcba:	2900      	cmp	r1, #0
9000bcbc:	f47f aef3 	bne.w	9000baa6 <HAL_RCCEx_PeriphCLKConfig+0x75e>
9000bcc0:	e7c0      	b.n	9000bc44 <HAL_RCCEx_PeriphCLKConfig+0x8fc>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bcc2:	49bc      	ldr	r1, [pc, #752]	@ (9000bfb4 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bcc4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bcc6:	f001 0103 	and.w	r1, r1, #3
9000bcca:	2903      	cmp	r1, #3
9000bccc:	f000 8194 	beq.w	9000bff8 <HAL_RCCEx_PeriphCLKConfig+0xcb0>
9000bcd0:	2102      	movs	r1, #2
9000bcd2:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bcd6:	f7ff fac7 	bl	9000b268 <RCCEx_PLL3_Config.part.0>
9000bcda:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000bcdc:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bce0:	2d00      	cmp	r5, #0
9000bce2:	d1cf      	bne.n	9000bc84 <HAL_RCCEx_PeriphCLKConfig+0x93c>
9000bce4:	e540      	b.n	9000b768 <HAL_RCCEx_PeriphCLKConfig+0x420>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bce6:	49b3      	ldr	r1, [pc, #716]	@ (9000bfb4 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bce8:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bcea:	f001 0103 	and.w	r1, r1, #3
9000bcee:	2903      	cmp	r1, #3
9000bcf0:	f000 81ba 	beq.w	9000c068 <HAL_RCCEx_PeriphCLKConfig+0xd20>
9000bcf4:	2102      	movs	r1, #2
9000bcf6:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bcfa:	f7ff fab5 	bl	9000b268 <RCCEx_PLL3_Config.part.0>
9000bcfe:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000bd00:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bd04:	2d00      	cmp	r5, #0
9000bd06:	d1c1      	bne.n	9000bc8c <HAL_RCCEx_PeriphCLKConfig+0x944>
9000bd08:	e557      	b.n	9000b7ba <HAL_RCCEx_PeriphCLKConfig+0x472>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bd0a:	49aa      	ldr	r1, [pc, #680]	@ (9000bfb4 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bd0c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bd0e:	f001 0103 	and.w	r1, r1, #3
9000bd12:	2903      	cmp	r1, #3
9000bd14:	f000 818c 	beq.w	9000c030 <HAL_RCCEx_PeriphCLKConfig+0xce8>
9000bd18:	2102      	movs	r1, #2
9000bd1a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bd1e:	f7ff faa3 	bl	9000b268 <RCCEx_PLL3_Config.part.0>
9000bd22:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000bd24:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bd28:	2d00      	cmp	r5, #0
9000bd2a:	d1b3      	bne.n	9000bc94 <HAL_RCCEx_PeriphCLKConfig+0x94c>
9000bd2c:	e56e      	b.n	9000b80c <HAL_RCCEx_PeriphCLKConfig+0x4c4>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bd2e:	49a1      	ldr	r1, [pc, #644]	@ (9000bfb4 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bd30:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bd32:	f001 0103 	and.w	r1, r1, #3
9000bd36:	2903      	cmp	r1, #3
9000bd38:	f000 81df 	beq.w	9000c0fa <HAL_RCCEx_PeriphCLKConfig+0xdb2>
9000bd3c:	2102      	movs	r1, #2
9000bd3e:	f104 0008 	add.w	r0, r4, #8
9000bd42:	f7ff fa21 	bl	9000b188 <RCCEx_PLL2_Config.part.0>
9000bd46:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000bd48:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bd4c:	2d00      	cmp	r5, #0
9000bd4e:	d187      	bne.n	9000bc60 <HAL_RCCEx_PeriphCLKConfig+0x918>
9000bd50:	f7ff bbc7 	b.w	9000b4e2 <HAL_RCCEx_PeriphCLKConfig+0x19a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bd54:	4997      	ldr	r1, [pc, #604]	@ (9000bfb4 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bd56:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bd58:	f001 0103 	and.w	r1, r1, #3
9000bd5c:	2903      	cmp	r1, #3
9000bd5e:	f000 820a 	beq.w	9000c176 <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000bd62:	2102      	movs	r1, #2
9000bd64:	f104 0008 	add.w	r0, r4, #8
9000bd68:	f7ff fa0e 	bl	9000b188 <RCCEx_PLL2_Config.part.0>
9000bd6c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000bd6e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bd72:	2d00      	cmp	r5, #0
9000bd74:	f47f ac5c 	bne.w	9000b630 <HAL_RCCEx_PeriphCLKConfig+0x2e8>
9000bd78:	e774      	b.n	9000bc64 <HAL_RCCEx_PeriphCLKConfig+0x91c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bd7a:	498e      	ldr	r1, [pc, #568]	@ (9000bfb4 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bd7c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bd7e:	f001 0103 	and.w	r1, r1, #3
9000bd82:	2903      	cmp	r1, #3
9000bd84:	f000 8146 	beq.w	9000c014 <HAL_RCCEx_PeriphCLKConfig+0xccc>
9000bd88:	2101      	movs	r1, #1
9000bd8a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bd8e:	f7ff fa6b 	bl	9000b268 <RCCEx_PLL3_Config.part.0>
9000bd92:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000bd94:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bd98:	2d00      	cmp	r5, #0
9000bd9a:	d181      	bne.n	9000bca0 <HAL_RCCEx_PeriphCLKConfig+0x958>
9000bd9c:	f7ff bbf1 	b.w	9000b582 <HAL_RCCEx_PeriphCLKConfig+0x23a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bda0:	4984      	ldr	r1, [pc, #528]	@ (9000bfb4 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bda2:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bda4:	f001 0103 	and.w	r1, r1, #3
9000bda8:	2903      	cmp	r1, #3
9000bdaa:	f43f ad8a 	beq.w	9000b8c2 <HAL_RCCEx_PeriphCLKConfig+0x57a>
9000bdae:	2101      	movs	r1, #1
9000bdb0:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bdb4:	f7ff fa58 	bl	9000b268 <RCCEx_PLL3_Config.part.0>
9000bdb8:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000bdba:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bdbe:	2d00      	cmp	r5, #0
9000bdc0:	f47f af4a 	bne.w	9000bc58 <HAL_RCCEx_PeriphCLKConfig+0x910>
9000bdc4:	e6a9      	b.n	9000bb1a <HAL_RCCEx_PeriphCLKConfig+0x7d2>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bdc6:	497b      	ldr	r1, [pc, #492]	@ (9000bfb4 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bdc8:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bdca:	f001 0103 	and.w	r1, r1, #3
9000bdce:	2903      	cmp	r1, #3
9000bdd0:	f43f ae7e 	beq.w	9000bad0 <HAL_RCCEx_PeriphCLKConfig+0x788>
9000bdd4:	2102      	movs	r1, #2
9000bdd6:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bdda:	f7ff fa45 	bl	9000b268 <RCCEx_PLL3_Config.part.0>
9000bdde:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000bde0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bde4:	2d00      	cmp	r5, #0
9000bde6:	f47f af53 	bne.w	9000bc90 <HAL_RCCEx_PeriphCLKConfig+0x948>
9000bdea:	e552      	b.n	9000b892 <HAL_RCCEx_PeriphCLKConfig+0x54a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bdec:	4971      	ldr	r1, [pc, #452]	@ (9000bfb4 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bdee:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bdf0:	f001 0103 	and.w	r1, r1, #3
9000bdf4:	2903      	cmp	r1, #3
9000bdf6:	f000 8129 	beq.w	9000c04c <HAL_RCCEx_PeriphCLKConfig+0xd04>
9000bdfa:	2101      	movs	r1, #1
9000bdfc:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000be00:	f7ff fa32 	bl	9000b268 <RCCEx_PLL3_Config.part.0>
9000be04:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000be06:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000be0a:	2d00      	cmp	r5, #0
9000be0c:	f47f af3c 	bne.w	9000bc88 <HAL_RCCEx_PeriphCLKConfig+0x940>
9000be10:	f7ff bbdf 	b.w	9000b5d2 <HAL_RCCEx_PeriphCLKConfig+0x28a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000be14:	4867      	ldr	r0, [pc, #412]	@ (9000bfb4 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000be16:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000be18:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000be1c:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000be1e:	2d00      	cmp	r5, #0
9000be20:	f43f ab88 	beq.w	9000b534 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
      status = ret;
9000be24:	462e      	mov	r6, r5
9000be26:	f7ff bb8c 	b.w	9000b542 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000be2a:	4862      	ldr	r0, [pc, #392]	@ (9000bfb4 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000be2c:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000be2e:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000be32:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000be34:	2d00      	cmp	r5, #0
9000be36:	f43f ab38 	beq.w	9000b4aa <HAL_RCCEx_PeriphCLKConfig+0x162>
      status = ret;
9000be3a:	462e      	mov	r6, r5
9000be3c:	f7ff bb3d 	b.w	9000b4ba <HAL_RCCEx_PeriphCLKConfig+0x172>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000be40:	495c      	ldr	r1, [pc, #368]	@ (9000bfb4 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000be42:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000be44:	f001 0103 	and.w	r1, r1, #3
9000be48:	2903      	cmp	r1, #3
9000be4a:	f000 8125 	beq.w	9000c098 <HAL_RCCEx_PeriphCLKConfig+0xd50>
9000be4e:	2100      	movs	r1, #0
9000be50:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000be54:	f7ff fa08 	bl	9000b268 <RCCEx_PLL3_Config.part.0>
9000be58:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000be5a:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000be5e:	f7ff bb66 	b.w	9000b52e <HAL_RCCEx_PeriphCLKConfig+0x1e6>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000be62:	4954      	ldr	r1, [pc, #336]	@ (9000bfb4 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000be64:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000be66:	f001 0103 	and.w	r1, r1, #3
9000be6a:	2903      	cmp	r1, #3
9000be6c:	f000 813e 	beq.w	9000c0ec <HAL_RCCEx_PeriphCLKConfig+0xda4>
9000be70:	2100      	movs	r1, #0
9000be72:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000be76:	f7ff f9f7 	bl	9000b268 <RCCEx_PLL3_Config.part.0>
9000be7a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000be7c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000be80:	2d00      	cmp	r5, #0
9000be82:	f43f aabd 	beq.w	9000b400 <HAL_RCCEx_PeriphCLKConfig+0xb8>
      status = ret;
9000be86:	462e      	mov	r6, r5
9000be88:	f7ff bac1 	b.w	9000b40e <HAL_RCCEx_PeriphCLKConfig+0xc6>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000be8c:	4949      	ldr	r1, [pc, #292]	@ (9000bfb4 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000be8e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000be90:	f001 0103 	and.w	r1, r1, #3
9000be94:	2903      	cmp	r1, #3
9000be96:	f43f aa91 	beq.w	9000b3bc <HAL_RCCEx_PeriphCLKConfig+0x74>
9000be9a:	2100      	movs	r1, #0
9000be9c:	f104 0008 	add.w	r0, r4, #8
9000bea0:	f7ff f972 	bl	9000b188 <RCCEx_PLL2_Config.part.0>
9000bea4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000bea6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000beaa:	2d00      	cmp	r5, #0
9000beac:	f43f ae89 	beq.w	9000bbc2 <HAL_RCCEx_PeriphCLKConfig+0x87a>
      status = ret;
9000beb0:	462e      	mov	r6, r5
9000beb2:	f7ff ba85 	b.w	9000b3c0 <HAL_RCCEx_PeriphCLKConfig+0x78>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000beb6:	493f      	ldr	r1, [pc, #252]	@ (9000bfb4 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000beb8:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000beba:	f001 0103 	and.w	r1, r1, #3
9000bebe:	2903      	cmp	r1, #3
9000bec0:	f43f aa7c 	beq.w	9000b3bc <HAL_RCCEx_PeriphCLKConfig+0x74>
9000bec4:	2100      	movs	r1, #0
9000bec6:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000beca:	f7ff f9cd 	bl	9000b268 <RCCEx_PLL3_Config.part.0>
9000bece:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000bed0:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000bed4:	e672      	b.n	9000bbbc <HAL_RCCEx_PeriphCLKConfig+0x874>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bed6:	4937      	ldr	r1, [pc, #220]	@ (9000bfb4 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bed8:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000beda:	f001 0103 	and.w	r1, r1, #3
9000bede:	2903      	cmp	r1, #3
9000bee0:	f000 80f9 	beq.w	9000c0d6 <HAL_RCCEx_PeriphCLKConfig+0xd8e>
9000bee4:	2100      	movs	r1, #0
9000bee6:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000beea:	f7ff f9bd 	bl	9000b268 <RCCEx_PLL3_Config.part.0>
9000beee:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000bef0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bef4:	2d00      	cmp	r5, #0
9000bef6:	f43f aaad 	beq.w	9000b454 <HAL_RCCEx_PeriphCLKConfig+0x10c>
      status = ret;
9000befa:	462e      	mov	r6, r5
9000befc:	f7ff bab2 	b.w	9000b464 <HAL_RCCEx_PeriphCLKConfig+0x11c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bf00:	492c      	ldr	r1, [pc, #176]	@ (9000bfb4 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bf02:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bf04:	f001 0103 	and.w	r1, r1, #3
9000bf08:	2903      	cmp	r1, #3
9000bf0a:	f000 80d1 	beq.w	9000c0b0 <HAL_RCCEx_PeriphCLKConfig+0xd68>
9000bf0e:	2100      	movs	r1, #0
9000bf10:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bf14:	f7ff f9a8 	bl	9000b268 <RCCEx_PLL3_Config.part.0>
9000bf18:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000bf1a:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000bf1e:	f7ff bac1 	b.w	9000b4a4 <HAL_RCCEx_PeriphCLKConfig+0x15c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bf22:	4924      	ldr	r1, [pc, #144]	@ (9000bfb4 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bf24:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bf26:	f001 0103 	and.w	r1, r1, #3
9000bf2a:	2903      	cmp	r1, #3
9000bf2c:	f000 80c8 	beq.w	9000c0c0 <HAL_RCCEx_PeriphCLKConfig+0xd78>
9000bf30:	2102      	movs	r1, #2
9000bf32:	3028      	adds	r0, #40	@ 0x28
9000bf34:	f7ff f998 	bl	9000b268 <RCCEx_PLL3_Config.part.0>
9000bf38:	4606      	mov	r6, r0
        break;
9000bf3a:	f7ff ba28 	b.w	9000b38e <HAL_RCCEx_PeriphCLKConfig+0x46>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bf3e:	481d      	ldr	r0, [pc, #116]	@ (9000bfb4 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bf40:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000bf42:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bf46:	62c1      	str	r1, [r0, #44]	@ 0x2c
        break;
9000bf48:	f7ff ba81 	b.w	9000b44e <HAL_RCCEx_PeriphCLKConfig+0x106>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bf4c:	4819      	ldr	r0, [pc, #100]	@ (9000bfb4 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bf4e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000bf50:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bf54:	62c1      	str	r1, [r0, #44]	@ 0x2c
        break;
9000bf56:	f7ff ba50 	b.w	9000b3fa <HAL_RCCEx_PeriphCLKConfig+0xb2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bf5a:	4d16      	ldr	r5, [pc, #88]	@ (9000bfb4 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bf5c:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
9000bf5e:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
9000bf62:	62e8      	str	r0, [r5, #44]	@ 0x2c
    if (ret == HAL_OK)
9000bf64:	f7ff ba17 	b.w	9000b396 <HAL_RCCEx_PeriphCLKConfig+0x4e>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bf68:	4912      	ldr	r1, [pc, #72]	@ (9000bfb4 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bf6a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bf6c:	f001 0103 	and.w	r1, r1, #3
9000bf70:	2903      	cmp	r1, #3
9000bf72:	f000 80e5 	beq.w	9000c140 <HAL_RCCEx_PeriphCLKConfig+0xdf8>
9000bf76:	2101      	movs	r1, #1
9000bf78:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bf7c:	f7ff f974 	bl	9000b268 <RCCEx_PLL3_Config.part.0>
9000bf80:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000bf82:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bf86:	2d00      	cmp	r5, #0
9000bf88:	f47f abcc 	bne.w	9000b724 <HAL_RCCEx_PeriphCLKConfig+0x3dc>
9000bf8c:	e68c      	b.n	9000bca8 <HAL_RCCEx_PeriphCLKConfig+0x960>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bf8e:	4909      	ldr	r1, [pc, #36]	@ (9000bfb4 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bf90:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bf92:	f001 0103 	and.w	r1, r1, #3
9000bf96:	2903      	cmp	r1, #3
9000bf98:	f000 80d6 	beq.w	9000c148 <HAL_RCCEx_PeriphCLKConfig+0xe00>
9000bf9c:	2101      	movs	r1, #1
9000bf9e:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bfa2:	f7ff f961 	bl	9000b268 <RCCEx_PLL3_Config.part.0>
9000bfa6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000bfa8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bfac:	2d00      	cmp	r5, #0
9000bfae:	f47f ab95 	bne.w	9000b6dc <HAL_RCCEx_PeriphCLKConfig+0x394>
9000bfb2:	e65f      	b.n	9000bc74 <HAL_RCCEx_PeriphCLKConfig+0x92c>
9000bfb4:	58024400 	.word	0x58024400
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bfb8:	4983      	ldr	r1, [pc, #524]	@ (9000c1c8 <HAL_RCCEx_PeriphCLKConfig+0xe80>)
9000bfba:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bfbc:	f001 0103 	and.w	r1, r1, #3
9000bfc0:	2903      	cmp	r1, #3
9000bfc2:	f43f ab69 	beq.w	9000b698 <HAL_RCCEx_PeriphCLKConfig+0x350>
9000bfc6:	2101      	movs	r1, #1
9000bfc8:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bfcc:	f7ff f94c 	bl	9000b268 <RCCEx_PLL3_Config.part.0>
9000bfd0:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000bfd2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bfd6:	2d00      	cmp	r5, #0
9000bfd8:	f47f ae64 	bne.w	9000bca4 <HAL_RCCEx_PeriphCLKConfig+0x95c>
9000bfdc:	e58d      	b.n	9000bafa <HAL_RCCEx_PeriphCLKConfig+0x7b2>
  return HAL_ERROR;
9000bfde:	2001      	movs	r0, #1
}
9000bfe0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    switch (PeriphClkInit->Lptim1ClockSelection)
9000bfe4:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
9000bfe8:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
9000bfec:	f43f abb9 	beq.w	9000b762 <HAL_RCCEx_PeriphCLKConfig+0x41a>
9000bff0:	f1b1 5f40 	cmp.w	r1, #805306368	@ 0x30000000
9000bff4:	f43f abb5 	beq.w	9000b762 <HAL_RCCEx_PeriphCLKConfig+0x41a>
      status = ret;
9000bff8:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000bffa:	4635      	mov	r5, r6
9000bffc:	f7ff bbbc 	b.w	9000b778 <HAL_RCCEx_PeriphCLKConfig+0x430>
    switch (PeriphClkInit->Spi45ClockSelection)
9000c000:	f421 3080 	bic.w	r0, r1, #65536	@ 0x10000
9000c004:	f5b0 2f80 	cmp.w	r0, #262144	@ 0x40000
9000c008:	f43f aab8 	beq.w	9000b57c <HAL_RCCEx_PeriphCLKConfig+0x234>
9000c00c:	f5b1 3f40 	cmp.w	r1, #196608	@ 0x30000
9000c010:	f43f aab4 	beq.w	9000b57c <HAL_RCCEx_PeriphCLKConfig+0x234>
      status = ret;
9000c014:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c016:	4635      	mov	r5, r6
9000c018:	f7ff baba 	b.w	9000b590 <HAL_RCCEx_PeriphCLKConfig+0x248>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000c01c:	f421 5000 	bic.w	r0, r1, #8192	@ 0x2000
9000c020:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000c024:	f43f abef 	beq.w	9000b806 <HAL_RCCEx_PeriphCLKConfig+0x4be>
9000c028:	f5b1 4fc0 	cmp.w	r1, #24576	@ 0x6000
9000c02c:	f43f abeb 	beq.w	9000b806 <HAL_RCCEx_PeriphCLKConfig+0x4be>
      status = ret;
9000c030:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c032:	4635      	mov	r5, r6
9000c034:	f7ff bbf2 	b.w	9000b81c <HAL_RCCEx_PeriphCLKConfig+0x4d4>
    switch (PeriphClkInit->Spi6ClockSelection)
9000c038:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
9000c03c:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
9000c040:	f43f aac4 	beq.w	9000b5cc <HAL_RCCEx_PeriphCLKConfig+0x284>
9000c044:	f1b1 5f40 	cmp.w	r1, #805306368	@ 0x30000000
9000c048:	f43f aac0 	beq.w	9000b5cc <HAL_RCCEx_PeriphCLKConfig+0x284>
      status = ret;
9000c04c:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c04e:	4635      	mov	r5, r6
9000c050:	f7ff bac7 	b.w	9000b5e2 <HAL_RCCEx_PeriphCLKConfig+0x29a>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000c054:	f421 6080 	bic.w	r0, r1, #1024	@ 0x400
9000c058:	f5b0 5f80 	cmp.w	r0, #4096	@ 0x1000
9000c05c:	f43f abaa 	beq.w	9000b7b4 <HAL_RCCEx_PeriphCLKConfig+0x46c>
9000c060:	f5b1 6f40 	cmp.w	r1, #3072	@ 0xc00
9000c064:	f43f aba6 	beq.w	9000b7b4 <HAL_RCCEx_PeriphCLKConfig+0x46c>
      status = ret;
9000c068:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c06a:	4635      	mov	r5, r6
9000c06c:	f7ff bbad 	b.w	9000b7ca <HAL_RCCEx_PeriphCLKConfig+0x482>
    return HAL_ERROR;
9000c070:	2501      	movs	r5, #1
9000c072:	e4e2      	b.n	9000ba3a <HAL_RCCEx_PeriphCLKConfig+0x6f2>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000c074:	0691      	lsls	r1, r2, #26
9000c076:	d5b2      	bpl.n	9000bfde <HAL_RCCEx_PeriphCLKConfig+0xc96>
    return HAL_ERROR;
9000c078:	2501      	movs	r5, #1
9000c07a:	e4f2      	b.n	9000ba62 <HAL_RCCEx_PeriphCLKConfig+0x71a>
    return HAL_ERROR;
9000c07c:	2501      	movs	r5, #1
9000c07e:	e4a9      	b.n	9000b9d4 <HAL_RCCEx_PeriphCLKConfig+0x68c>
9000c080:	2501      	movs	r5, #1
9000c082:	e4b8      	b.n	9000b9f6 <HAL_RCCEx_PeriphCLKConfig+0x6ae>
9000c084:	2501      	movs	r5, #1
9000c086:	e4c7      	b.n	9000ba18 <HAL_RCCEx_PeriphCLKConfig+0x6d0>
    switch (PeriphClkInit->Spi123ClockSelection)
9000c088:	f5b1 5f40 	cmp.w	r1, #12288	@ 0x3000
9000c08c:	f43f aa4f 	beq.w	9000b52e <HAL_RCCEx_PeriphCLKConfig+0x1e6>
9000c090:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
9000c094:	f43f aa4b 	beq.w	9000b52e <HAL_RCCEx_PeriphCLKConfig+0x1e6>
      status = ret;
9000c098:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c09a:	4635      	mov	r5, r6
9000c09c:	f7ff ba51 	b.w	9000b542 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
    switch (PeriphClkInit->Sai4BClockSelection)
9000c0a0:	f1b1 7f40 	cmp.w	r1, #50331648	@ 0x3000000
9000c0a4:	f43f a9fe 	beq.w	9000b4a4 <HAL_RCCEx_PeriphCLKConfig+0x15c>
9000c0a8:	f1b1 6f80 	cmp.w	r1, #67108864	@ 0x4000000
9000c0ac:	f43f a9fa 	beq.w	9000b4a4 <HAL_RCCEx_PeriphCLKConfig+0x15c>
      status = ret;
9000c0b0:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c0b2:	4635      	mov	r5, r6
9000c0b4:	f7ff ba01 	b.w	9000b4ba <HAL_RCCEx_PeriphCLKConfig+0x172>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000c0b8:	f5b1 1f40 	cmp.w	r1, #3145728	@ 0x300000
9000c0bc:	f43f a96b 	beq.w	9000b396 <HAL_RCCEx_PeriphCLKConfig+0x4e>
        ret = HAL_ERROR;
9000c0c0:	2601      	movs	r6, #1
9000c0c2:	f7ff b96f 	b.w	9000b3a4 <HAL_RCCEx_PeriphCLKConfig+0x5c>
    switch (PeriphClkInit->Sai4AClockSelection)
9000c0c6:	f5b1 0fc0 	cmp.w	r1, #6291456	@ 0x600000
9000c0ca:	f43f a9c0 	beq.w	9000b44e <HAL_RCCEx_PeriphCLKConfig+0x106>
9000c0ce:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
9000c0d2:	f43f a9bc 	beq.w	9000b44e <HAL_RCCEx_PeriphCLKConfig+0x106>
      status = ret;
9000c0d6:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c0d8:	4635      	mov	r5, r6
9000c0da:	f7ff b9c3 	b.w	9000b464 <HAL_RCCEx_PeriphCLKConfig+0x11c>
    switch (PeriphClkInit->Sai23ClockSelection)
9000c0de:	29c0      	cmp	r1, #192	@ 0xc0
9000c0e0:	f43f a98b 	beq.w	9000b3fa <HAL_RCCEx_PeriphCLKConfig+0xb2>
9000c0e4:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
9000c0e8:	f43f a987 	beq.w	9000b3fa <HAL_RCCEx_PeriphCLKConfig+0xb2>
      status = ret;
9000c0ec:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c0ee:	4635      	mov	r5, r6
9000c0f0:	f7ff b98d 	b.w	9000b40e <HAL_RCCEx_PeriphCLKConfig+0xc6>
    switch (PeriphClkInit->QspiClockSelection)
9000c0f4:	2930      	cmp	r1, #48	@ 0x30
9000c0f6:	f43f a9f1 	beq.w	9000b4dc <HAL_RCCEx_PeriphCLKConfig+0x194>
      status = ret;
9000c0fa:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c0fc:	4635      	mov	r5, r6
9000c0fe:	f7ff b9f7 	b.w	9000b4f0 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
        ret = HAL_TIMEOUT;
9000c102:	2503      	movs	r5, #3
      status = ret;
9000c104:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000c106:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c10a:	f7ff ba95 	b.w	9000b638 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000c10e:	6863      	ldr	r3, [r4, #4]
9000c110:	069a      	lsls	r2, r3, #26
9000c112:	f57f af64 	bpl.w	9000bfde <HAL_RCCEx_PeriphCLKConfig+0xc96>
9000c116:	4605      	mov	r5, r0
9000c118:	e4a3      	b.n	9000ba62 <HAL_RCCEx_PeriphCLKConfig+0x71a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c11a:	492b      	ldr	r1, [pc, #172]	@ (9000c1c8 <HAL_RCCEx_PeriphCLKConfig+0xe80>)
9000c11c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c11e:	f001 0103 	and.w	r1, r1, #3
9000c122:	2903      	cmp	r1, #3
9000c124:	f43f aa6b 	beq.w	9000b5fe <HAL_RCCEx_PeriphCLKConfig+0x2b6>
9000c128:	2101      	movs	r1, #1
9000c12a:	f104 0008 	add.w	r0, r4, #8
9000c12e:	f7ff f82b 	bl	9000b188 <RCCEx_PLL2_Config.part.0>
9000c132:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000c134:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c138:	2d00      	cmp	r5, #0
9000c13a:	f47f ad8f 	bne.w	9000bc5c <HAL_RCCEx_PeriphCLKConfig+0x914>
9000c13e:	e4bf      	b.n	9000bac0 <HAL_RCCEx_PeriphCLKConfig+0x778>
      status = ret;
9000c140:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c142:	4635      	mov	r5, r6
9000c144:	f7ff baef 	b.w	9000b726 <HAL_RCCEx_PeriphCLKConfig+0x3de>
      status = ret;
9000c148:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c14a:	4635      	mov	r5, r6
9000c14c:	f7ff bac7 	b.w	9000b6de <HAL_RCCEx_PeriphCLKConfig+0x396>
        status = HAL_ERROR;
9000c150:	2601      	movs	r6, #1
9000c152:	f7ff bb79 	b.w	9000b848 <HAL_RCCEx_PeriphCLKConfig+0x500>
        status = HAL_ERROR;
9000c156:	2601      	movs	r6, #1
9000c158:	f7ff bb68 	b.w	9000b82c <HAL_RCCEx_PeriphCLKConfig+0x4e4>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000c15c:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000c160:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c164:	f7ff bb62 	b.w	9000b82c <HAL_RCCEx_PeriphCLKConfig+0x4e4>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000c168:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
        status = HAL_ERROR;
9000c16c:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000c16e:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c172:	f7ff bb69 	b.w	9000b848 <HAL_RCCEx_PeriphCLKConfig+0x500>
      status = ret;
9000c176:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c178:	4635      	mov	r5, r6
9000c17a:	f7ff ba5a 	b.w	9000b632 <HAL_RCCEx_PeriphCLKConfig+0x2ea>
        tickstart = HAL_GetTick();
9000c17e:	f7fa fc35 	bl	900069ec <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c182:	f8df 8044 	ldr.w	r8, [pc, #68]	@ 9000c1c8 <HAL_RCCEx_PeriphCLKConfig+0xe80>
        tickstart = HAL_GetTick();
9000c186:	4607      	mov	r7, r0
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c188:	f241 3988 	movw	r9, #5000	@ 0x1388
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c18c:	e004      	b.n	9000c198 <HAL_RCCEx_PeriphCLKConfig+0xe50>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c18e:	f7fa fc2d 	bl	900069ec <HAL_GetTick>
9000c192:	1bc0      	subs	r0, r0, r7
9000c194:	4548      	cmp	r0, r9
9000c196:	d810      	bhi.n	9000c1ba <HAL_RCCEx_PeriphCLKConfig+0xe72>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c198:	f8d8 3070 	ldr.w	r3, [r8, #112]	@ 0x70
9000c19c:	079b      	lsls	r3, r3, #30
9000c19e:	d5f6      	bpl.n	9000c18e <HAL_RCCEx_PeriphCLKConfig+0xe46>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000c1a0:	f8d4 30b4 	ldr.w	r3, [r4, #180]	@ 0xb4
9000c1a4:	e4f0      	b.n	9000bb88 <HAL_RCCEx_PeriphCLKConfig+0x840>
9000c1a6:	4808      	ldr	r0, [pc, #32]	@ (9000c1c8 <HAL_RCCEx_PeriphCLKConfig+0xe80>)
9000c1a8:	4a08      	ldr	r2, [pc, #32]	@ (9000c1cc <HAL_RCCEx_PeriphCLKConfig+0xe84>)
9000c1aa:	6901      	ldr	r1, [r0, #16]
9000c1ac:	ea02 1213 	and.w	r2, r2, r3, lsr #4
9000c1b0:	f421 517c 	bic.w	r1, r1, #16128	@ 0x3f00
9000c1b4:	430a      	orrs	r2, r1
9000c1b6:	6102      	str	r2, [r0, #16]
9000c1b8:	e4f1      	b.n	9000bb9e <HAL_RCCEx_PeriphCLKConfig+0x856>
        status = ret;
9000c1ba:	2603      	movs	r6, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000c1bc:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c1c0:	4635      	mov	r5, r6
9000c1c2:	f7ff ba39 	b.w	9000b638 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
9000c1c6:	bf00      	nop
9000c1c8:	58024400 	.word	0x58024400
9000c1cc:	00ffffcf 	.word	0x00ffffcf

9000c1d0 <HAL_RCCEx_GetD3PCLK1Freq>:
{
9000c1d0:	b508      	push	{r3, lr}
  return (HAL_RCC_GetHCLKFreq() >> (D1CorePrescTable[(RCC->D3CFGR & RCC_D3CFGR_D3PPRE) >> RCC_D3CFGR_D3PPRE_Pos] & 0x1FU));
9000c1d2:	f7fe fedd 	bl	9000af90 <HAL_RCC_GetHCLKFreq>
9000c1d6:	4b05      	ldr	r3, [pc, #20]	@ (9000c1ec <HAL_RCCEx_GetD3PCLK1Freq+0x1c>)
9000c1d8:	4a05      	ldr	r2, [pc, #20]	@ (9000c1f0 <HAL_RCCEx_GetD3PCLK1Freq+0x20>)
9000c1da:	6a1b      	ldr	r3, [r3, #32]
9000c1dc:	f3c3 1302 	ubfx	r3, r3, #4, #3
9000c1e0:	5cd3      	ldrb	r3, [r2, r3]
9000c1e2:	f003 031f 	and.w	r3, r3, #31
}
9000c1e6:	40d8      	lsrs	r0, r3
9000c1e8:	bd08      	pop	{r3, pc}
9000c1ea:	bf00      	nop
9000c1ec:	58024400 	.word	0x58024400
9000c1f0:	9002dbcc 	.word	0x9002dbcc

9000c1f4 <HAL_RCCEx_GetPLL2ClockFreq>:
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c1f4:	4a47      	ldr	r2, [pc, #284]	@ (9000c314 <HAL_RCCEx_GetPLL2ClockFreq+0x120>)
{
9000c1f6:	b470      	push	{r4, r5, r6}
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c1f8:	6a94      	ldr	r4, [r2, #40]	@ 0x28
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2) >> 12);
9000c1fa:	6a95      	ldr	r5, [r2, #40]	@ 0x28
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
9000c1fc:	6ad6      	ldr	r6, [r2, #44]	@ 0x2c
  if (pll2m != 0U)
9000c1fe:	f415 3f7c 	tst.w	r5, #258048	@ 0x3f000
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2) >> 12);
9000c202:	f3c5 3305 	ubfx	r3, r5, #12, #6
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
9000c206:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
  if (pll2m != 0U)
9000c208:	d05b      	beq.n	9000c2c2 <HAL_RCCEx_GetPLL2ClockFreq+0xce>
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
9000c20a:	f3c1 01cc 	ubfx	r1, r1, #3, #13
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
9000c20e:	f3c6 1600 	ubfx	r6, r6, #4, #1
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c212:	f004 0403 	and.w	r4, r4, #3
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000c216:	ee07 3a90 	vmov	s15, r3
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
9000c21a:	fb06 f101 	mul.w	r1, r6, r1
    switch (pllsource)
9000c21e:	2c01      	cmp	r4, #1
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000c220:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000c224:	ee06 1a90 	vmov	s13, r1
9000c228:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
    switch (pllsource)
9000c22c:	d003      	beq.n	9000c236 <HAL_RCCEx_GetPLL2ClockFreq+0x42>
9000c22e:	2c02      	cmp	r4, #2
9000c230:	d06a      	beq.n	9000c308 <HAL_RCCEx_GetPLL2ClockFreq+0x114>
9000c232:	2c00      	cmp	r4, #0
9000c234:	d04a      	beq.n	9000c2cc <HAL_RCCEx_GetPLL2ClockFreq+0xd8>
        pll2vco = ((float_t)CSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000c236:	eddf 7a38 	vldr	s15, [pc, #224]	@ 9000c318 <HAL_RCCEx_GetPLL2ClockFreq+0x124>
9000c23a:	ee87 6a87 	vdiv.f32	s12, s15, s14
9000c23e:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000c240:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000c244:	ee07 3a90 	vmov	s15, r3
9000c248:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000c24c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c250:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000c254:	ee77 7aa5 	vadd.f32	s15, s15, s11
9000c258:	ee67 7a86 	vmul.f32	s15, s15, s12
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >> 9)  + (float_t)1)) ;
9000c25c:	4a2d      	ldr	r2, [pc, #180]	@ (9000c314 <HAL_RCCEx_GetPLL2ClockFreq+0x120>)
9000c25e:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
9000c262:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000c264:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000c268:	ee07 3a10 	vmov	s14, r3
9000c26c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
}
9000c270:	bc70      	pop	{r4, r5, r6}
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >> 9)  + (float_t)1)) ;
9000c272:	ee37 7a06 	vadd.f32	s14, s14, s12
9000c276:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000c27a:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000c27e:	edc0 6a00 	vstr	s13, [r0]
    PLL2_Clocks->PLL2_Q_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_Q2) >> 16) + (float_t)1)) ;
9000c282:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000c284:	f3c3 4306 	ubfx	r3, r3, #16, #7
9000c288:	ee07 3a10 	vmov	s14, r3
9000c28c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000c290:	ee37 7a06 	vadd.f32	s14, s14, s12
9000c294:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000c298:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000c29c:	edc0 6a01 	vstr	s13, [r0, #4]
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_R2) >> 24) + (float_t)1)) ;
9000c2a0:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000c2a2:	f3c3 6306 	ubfx	r3, r3, #24, #7
9000c2a6:	ee06 3a90 	vmov	s13, r3
9000c2aa:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000c2ae:	ee76 6a86 	vadd.f32	s13, s13, s12
9000c2b2:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000c2b6:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000c2ba:	ee17 3a90 	vmov	r3, s15
9000c2be:	6083      	str	r3, [r0, #8]
}
9000c2c0:	4770      	bx	lr
9000c2c2:	bc70      	pop	{r4, r5, r6}
    PLL2_Clocks->PLL2_P_Frequency = 0U;
9000c2c4:	e9c0 3300 	strd	r3, r3, [r0]
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_R2) >> 24) + (float_t)1)) ;
9000c2c8:	6083      	str	r3, [r0, #8]
}
9000c2ca:	4770      	bx	lr
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c2cc:	6813      	ldr	r3, [r2, #0]
9000c2ce:	069b      	lsls	r3, r3, #26
9000c2d0:	d51d      	bpl.n	9000c30e <HAL_RCCEx_GetPLL2ClockFreq+0x11a>
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c2d2:	6814      	ldr	r4, [r2, #0]
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000c2d4:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000c2d8:	6b93      	ldr	r3, [r2, #56]	@ 0x38
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c2da:	4910      	ldr	r1, [pc, #64]	@ (9000c31c <HAL_RCCEx_GetPLL2ClockFreq+0x128>)
9000c2dc:	f3c4 02c1 	ubfx	r2, r4, #3, #2
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000c2e0:	f3c3 0308 	ubfx	r3, r3, #0, #9
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c2e4:	40d1      	lsrs	r1, r2
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000c2e6:	ee07 3a90 	vmov	s15, r3
9000c2ea:	ee06 1a10 	vmov	s12, r1
9000c2ee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c2f2:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000c2f6:	ee77 6aa6 	vadd.f32	s13, s15, s13
9000c2fa:	eec6 7a07 	vdiv.f32	s15, s12, s14
9000c2fe:	ee36 7aa5 	vadd.f32	s14, s13, s11
9000c302:	ee67 7a87 	vmul.f32	s15, s15, s14
9000c306:	e7a9      	b.n	9000c25c <HAL_RCCEx_GetPLL2ClockFreq+0x68>
        pll2vco = ((float_t)HSE_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000c308:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000c320 <HAL_RCCEx_GetPLL2ClockFreq+0x12c>
9000c30c:	e795      	b.n	9000c23a <HAL_RCCEx_GetPLL2ClockFreq+0x46>
          pll2vco = ((float_t)HSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000c30e:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000c324 <HAL_RCCEx_GetPLL2ClockFreq+0x130>
9000c312:	e792      	b.n	9000c23a <HAL_RCCEx_GetPLL2ClockFreq+0x46>
9000c314:	58024400 	.word	0x58024400
9000c318:	4a742400 	.word	0x4a742400
9000c31c:	03d09000 	.word	0x03d09000
9000c320:	4bbebc20 	.word	0x4bbebc20
9000c324:	4c742400 	.word	0x4c742400

9000c328 <HAL_RCCEx_GetPLL3ClockFreq>:
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c328:	4a47      	ldr	r2, [pc, #284]	@ (9000c448 <HAL_RCCEx_GetPLL3ClockFreq+0x120>)
{
9000c32a:	b470      	push	{r4, r5, r6}
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c32c:	6a94      	ldr	r4, [r2, #40]	@ 0x28
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3) >> 20)  ;
9000c32e:	6a95      	ldr	r5, [r2, #40]	@ 0x28
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
9000c330:	6ad6      	ldr	r6, [r2, #44]	@ 0x2c
  if (pll3m != 0U)
9000c332:	f015 7f7c 	tst.w	r5, #66060288	@ 0x3f00000
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3) >> 20)  ;
9000c336:	f3c5 5305 	ubfx	r3, r5, #20, #6
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
9000c33a:	6c51      	ldr	r1, [r2, #68]	@ 0x44
  if (pll3m != 0U)
9000c33c:	d05b      	beq.n	9000c3f6 <HAL_RCCEx_GetPLL3ClockFreq+0xce>
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
9000c33e:	f3c1 01cc 	ubfx	r1, r1, #3, #13
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
9000c342:	f3c6 2600 	ubfx	r6, r6, #8, #1
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c346:	f004 0403 	and.w	r4, r4, #3
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000c34a:	ee07 3a90 	vmov	s15, r3
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
9000c34e:	fb06 f101 	mul.w	r1, r6, r1
    switch (pllsource)
9000c352:	2c01      	cmp	r4, #1
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000c354:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000c358:	ee06 1a90 	vmov	s13, r1
9000c35c:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
    switch (pllsource)
9000c360:	d003      	beq.n	9000c36a <HAL_RCCEx_GetPLL3ClockFreq+0x42>
9000c362:	2c02      	cmp	r4, #2
9000c364:	d06a      	beq.n	9000c43c <HAL_RCCEx_GetPLL3ClockFreq+0x114>
9000c366:	2c00      	cmp	r4, #0
9000c368:	d04a      	beq.n	9000c400 <HAL_RCCEx_GetPLL3ClockFreq+0xd8>
        pll3vco = ((float_t)CSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000c36a:	eddf 7a38 	vldr	s15, [pc, #224]	@ 9000c44c <HAL_RCCEx_GetPLL3ClockFreq+0x124>
9000c36e:	ee87 6a87 	vdiv.f32	s12, s15, s14
9000c372:	6c13      	ldr	r3, [r2, #64]	@ 0x40
9000c374:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000c378:	ee07 3a90 	vmov	s15, r3
9000c37c:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000c380:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c384:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000c388:	ee77 7aa5 	vadd.f32	s15, s15, s11
9000c38c:	ee67 7a86 	vmul.f32	s15, s15, s12
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >> 9)  + (float_t)1)) ;
9000c390:	4a2d      	ldr	r2, [pc, #180]	@ (9000c448 <HAL_RCCEx_GetPLL3ClockFreq+0x120>)
9000c392:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
9000c396:	6c13      	ldr	r3, [r2, #64]	@ 0x40
9000c398:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000c39c:	ee07 3a10 	vmov	s14, r3
9000c3a0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
}
9000c3a4:	bc70      	pop	{r4, r5, r6}
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >> 9)  + (float_t)1)) ;
9000c3a6:	ee37 7a06 	vadd.f32	s14, s14, s12
9000c3aa:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000c3ae:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000c3b2:	edc0 6a00 	vstr	s13, [r0]
    PLL3_Clocks->PLL3_Q_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_Q3) >> 16) + (float_t)1)) ;
9000c3b6:	6c13      	ldr	r3, [r2, #64]	@ 0x40
9000c3b8:	f3c3 4306 	ubfx	r3, r3, #16, #7
9000c3bc:	ee07 3a10 	vmov	s14, r3
9000c3c0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000c3c4:	ee37 7a06 	vadd.f32	s14, s14, s12
9000c3c8:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000c3cc:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000c3d0:	edc0 6a01 	vstr	s13, [r0, #4]
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_R3) >> 24) + (float_t)1)) ;
9000c3d4:	6c13      	ldr	r3, [r2, #64]	@ 0x40
9000c3d6:	f3c3 6306 	ubfx	r3, r3, #24, #7
9000c3da:	ee06 3a90 	vmov	s13, r3
9000c3de:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000c3e2:	ee76 6a86 	vadd.f32	s13, s13, s12
9000c3e6:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000c3ea:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000c3ee:	ee17 3a90 	vmov	r3, s15
9000c3f2:	6083      	str	r3, [r0, #8]
}
9000c3f4:	4770      	bx	lr
9000c3f6:	bc70      	pop	{r4, r5, r6}
    PLL3_Clocks->PLL3_P_Frequency = 0U;
9000c3f8:	e9c0 3300 	strd	r3, r3, [r0]
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_R3) >> 24) + (float_t)1)) ;
9000c3fc:	6083      	str	r3, [r0, #8]
}
9000c3fe:	4770      	bx	lr
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c400:	6813      	ldr	r3, [r2, #0]
9000c402:	069b      	lsls	r3, r3, #26
9000c404:	d51d      	bpl.n	9000c442 <HAL_RCCEx_GetPLL3ClockFreq+0x11a>
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c406:	6814      	ldr	r4, [r2, #0]
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000c408:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000c40c:	6c13      	ldr	r3, [r2, #64]	@ 0x40
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c40e:	4910      	ldr	r1, [pc, #64]	@ (9000c450 <HAL_RCCEx_GetPLL3ClockFreq+0x128>)
9000c410:	f3c4 02c1 	ubfx	r2, r4, #3, #2
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000c414:	f3c3 0308 	ubfx	r3, r3, #0, #9
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c418:	40d1      	lsrs	r1, r2
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000c41a:	ee07 3a90 	vmov	s15, r3
9000c41e:	ee06 1a10 	vmov	s12, r1
9000c422:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c426:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000c42a:	ee77 6aa6 	vadd.f32	s13, s15, s13
9000c42e:	eec6 7a07 	vdiv.f32	s15, s12, s14
9000c432:	ee36 7aa5 	vadd.f32	s14, s13, s11
9000c436:	ee67 7a87 	vmul.f32	s15, s15, s14
9000c43a:	e7a9      	b.n	9000c390 <HAL_RCCEx_GetPLL3ClockFreq+0x68>
        pll3vco = ((float_t)HSE_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000c43c:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000c454 <HAL_RCCEx_GetPLL3ClockFreq+0x12c>
9000c440:	e795      	b.n	9000c36e <HAL_RCCEx_GetPLL3ClockFreq+0x46>
          pll3vco = ((float_t)HSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000c442:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000c458 <HAL_RCCEx_GetPLL3ClockFreq+0x130>
9000c446:	e792      	b.n	9000c36e <HAL_RCCEx_GetPLL3ClockFreq+0x46>
9000c448:	58024400 	.word	0x58024400
9000c44c:	4a742400 	.word	0x4a742400
9000c450:	03d09000 	.word	0x03d09000
9000c454:	4bbebc20 	.word	0x4bbebc20
9000c458:	4c742400 	.word	0x4c742400

9000c45c <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
9000c45c:	b318      	cbz	r0, 9000c4a6 <HAL_SDRAM_Init+0x4a>
{
9000c45e:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
9000c460:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
9000c464:	4604      	mov	r4, r0
9000c466:	460d      	mov	r5, r1
9000c468:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000c46c:	b1b3      	cbz	r3, 9000c49c <HAL_SDRAM_Init+0x40>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000c46e:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c470:	2302      	movs	r3, #2
9000c472:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000c476:	f851 0b04 	ldr.w	r0, [r1], #4
9000c47a:	f001 fdbd 	bl	9000dff8 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
9000c47e:	6862      	ldr	r2, [r4, #4]
9000c480:	4629      	mov	r1, r5
9000c482:	6820      	ldr	r0, [r4, #0]
9000c484:	f001 fdee 	bl	9000e064 <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
9000c488:	4a08      	ldr	r2, [pc, #32]	@ (9000c4ac <HAL_SDRAM_Init+0x50>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
9000c48a:	2101      	movs	r1, #1

  return HAL_OK;
9000c48c:	2000      	movs	r0, #0
  __FMC_ENABLE();
9000c48e:	6813      	ldr	r3, [r2, #0]
9000c490:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
9000c494:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
9000c496:	f884 102c 	strb.w	r1, [r4, #44]	@ 0x2c
}
9000c49a:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
9000c49c:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d
    HAL_SDRAM_MspInit(hsdram);
9000c4a0:	f7f7 fff8 	bl	90004494 <HAL_SDRAM_MspInit>
9000c4a4:	e7e3      	b.n	9000c46e <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
9000c4a6:	2001      	movs	r0, #1
}
9000c4a8:	4770      	bx	lr
9000c4aa:	bf00      	nop
9000c4ac:	52004000 	.word	0x52004000

9000c4b0 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
9000c4b0:	b510      	push	{r4, lr}
9000c4b2:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
9000c4b4:	f7f8 f86a 	bl	9000458c <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
9000c4b8:	e9d4 0100 	ldrd	r0, r1, [r4]
9000c4bc:	f001 fe10 	bl	9000e0e0 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
9000c4c0:	2000      	movs	r0, #0
9000c4c2:	f884 002c 	strb.w	r0, [r4, #44]	@ 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
9000c4c6:	f884 002d 	strb.w	r0, [r4, #45]	@ 0x2d

  return HAL_OK;
}
9000c4ca:	bd10      	pop	{r4, pc}

9000c4cc <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
9000c4cc:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000c4ce:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
9000c4d2:	4605      	mov	r5, r0

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
9000c4d4:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000c4d6:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
9000c4d8:	d004      	beq.n	9000c4e4 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
9000c4da:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
9000c4de:	2c01      	cmp	r4, #1
9000c4e0:	d001      	beq.n	9000c4e6 <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
9000c4e2:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000c4e4:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c4e6:	2302      	movs	r3, #2
9000c4e8:	460e      	mov	r6, r1
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000c4ea:	6828      	ldr	r0, [r5, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c4ec:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000c4f0:	f001 fe0a 	bl	9000e108 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
9000c4f4:	6833      	ldr	r3, [r6, #0]
9000c4f6:	2b02      	cmp	r3, #2
9000c4f8:	d003      	beq.n	9000c502 <HAL_SDRAM_SendCommand+0x36>
      hsdram->State = HAL_SDRAM_STATE_READY;
9000c4fa:	f885 402c 	strb.w	r4, [r5, #44]	@ 0x2c
  return HAL_OK;
9000c4fe:	2000      	movs	r0, #0
}
9000c500:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000c502:	2305      	movs	r3, #5
9000c504:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
9000c508:	e7f9      	b.n	9000c4fe <HAL_SDRAM_SendCommand+0x32>
9000c50a:	bf00      	nop

9000c50c <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
9000c50c:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000c50e:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
9000c512:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000c514:	2b02      	cmp	r3, #2
9000c516:	b2d8      	uxtb	r0, r3
9000c518:	d005      	beq.n	9000c526 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
9000c51a:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
9000c51e:	2b01      	cmp	r3, #1
9000c520:	b2dd      	uxtb	r5, r3
9000c522:	d001      	beq.n	9000c528 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
9000c524:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000c526:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c528:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000c52a:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c52c:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000c530:	f001 fe04 	bl	9000e13c <FMC_SDRAM_ProgramRefreshRate>
  return HAL_OK;
9000c534:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
9000c536:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
}
9000c53a:	bd38      	pop	{r3, r4, r5, pc}

9000c53c <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
9000c53c:	4770      	bx	lr
9000c53e:	bf00      	nop

9000c540 <HAL_TIM_Base_Init>:
  if (htim == NULL)
9000c540:	2800      	cmp	r0, #0
9000c542:	f000 8095 	beq.w	9000c670 <HAL_TIM_Base_Init+0x130>
{
9000c546:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
9000c548:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000c54c:	4604      	mov	r4, r0
9000c54e:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000c552:	2b00      	cmp	r3, #0
9000c554:	f000 8087 	beq.w	9000c666 <HAL_TIM_Base_Init+0x126>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
9000c558:	6823      	ldr	r3, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000c55a:	2202      	movs	r2, #2
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c55c:	4945      	ldr	r1, [pc, #276]	@ (9000c674 <HAL_TIM_Base_Init+0x134>)
9000c55e:	4d46      	ldr	r5, [pc, #280]	@ (9000c678 <HAL_TIM_Base_Init+0x138>)
9000c560:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
9000c564:	eba3 0101 	sub.w	r1, r3, r1
  htim->State = HAL_TIM_STATE_BUSY;
9000c568:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c56c:	eba3 0e05 	sub.w	lr, r3, r5
  tmpcr1 = TIMx->CR1;
9000c570:	681a      	ldr	r2, [r3, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c572:	fab1 f181 	clz	r1, r1
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c576:	69a0      	ldr	r0, [r4, #24]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c578:	fabe fe8e 	clz	lr, lr

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c57c:	68e7      	ldr	r7, [r4, #12]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c57e:	ea4f 1151 	mov.w	r1, r1, lsr #5

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
9000c582:	6866      	ldr	r6, [r4, #4]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c584:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9000c588:	d01f      	beq.n	9000c5ca <HAL_TIM_Base_Init+0x8a>
9000c58a:	b9f1      	cbnz	r1, 9000c5ca <HAL_TIM_Base_Init+0x8a>
9000c58c:	f8df c0f8 	ldr.w	ip, [pc, #248]	@ 9000c688 <HAL_TIM_Base_Init+0x148>
9000c590:	4563      	cmp	r3, ip
9000c592:	d050      	beq.n	9000c636 <HAL_TIM_Base_Init+0xf6>
9000c594:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
9000c598:	4563      	cmp	r3, ip
9000c59a:	d04c      	beq.n	9000c636 <HAL_TIM_Base_Init+0xf6>
9000c59c:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
9000c5a0:	4563      	cmp	r3, ip
9000c5a2:	d012      	beq.n	9000c5ca <HAL_TIM_Base_Init+0x8a>
9000c5a4:	f1be 0f00 	cmp.w	lr, #0
9000c5a8:	d10f      	bne.n	9000c5ca <HAL_TIM_Base_Init+0x8a>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000c5aa:	4d34      	ldr	r5, [pc, #208]	@ (9000c67c <HAL_TIM_Base_Init+0x13c>)
9000c5ac:	4934      	ldr	r1, [pc, #208]	@ (9000c680 <HAL_TIM_Base_Init+0x140>)
9000c5ae:	428b      	cmp	r3, r1
9000c5b0:	bf18      	it	ne
9000c5b2:	42ab      	cmpne	r3, r5
9000c5b4:	d043      	beq.n	9000c63e <HAL_TIM_Base_Init+0xfe>
9000c5b6:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
9000c5ba:	428b      	cmp	r3, r1
9000c5bc:	d03f      	beq.n	9000c63e <HAL_TIM_Base_Init+0xfe>
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c5be:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c5c2:	62df      	str	r7, [r3, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000c5c4:	629e      	str	r6, [r3, #40]	@ 0x28
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c5c6:	4310      	orrs	r0, r2

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c5c8:	e014      	b.n	9000c5f4 <HAL_TIM_Base_Init+0xb4>
    tmpcr1 |= Structure->CounterMode;
9000c5ca:	68a5      	ldr	r5, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000c5cc:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c5d0:	f8d4 c010 	ldr.w	ip, [r4, #16]
    tmpcr1 |= Structure->CounterMode;
9000c5d4:	432a      	orrs	r2, r5
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c5d6:	62df      	str	r7, [r3, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000c5d8:	629e      	str	r6, [r3, #40]	@ 0x28
    tmpcr1 &= ~TIM_CR1_CKD;
9000c5da:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c5de:	ea42 020c 	orr.w	r2, r2, ip
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c5e2:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000c5e6:	4310      	orrs	r0, r2
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c5e8:	b911      	cbnz	r1, 9000c5f0 <HAL_TIM_Base_Init+0xb0>
9000c5ea:	f1be 0f00 	cmp.w	lr, #0
9000c5ee:	d02f      	beq.n	9000c650 <HAL_TIM_Base_Init+0x110>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
9000c5f0:	6962      	ldr	r2, [r4, #20]
9000c5f2:	631a      	str	r2, [r3, #48]	@ 0x30
  }

  /* Disable Update Event (UEV) with Update Generation (UG)
     by changing Update Request Source (URS) to avoid Update flag (UIF) */
  SET_BIT(TIMx->CR1, TIM_CR1_URS);
9000c5f4:	6819      	ldr	r1, [r3, #0]

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
9000c5f6:	2201      	movs	r2, #1
  SET_BIT(TIMx->CR1, TIM_CR1_URS);
9000c5f8:	f041 0104 	orr.w	r1, r1, #4
9000c5fc:	6019      	str	r1, [r3, #0]
  TIMx->EGR = TIM_EGR_UG;
9000c5fe:	615a      	str	r2, [r3, #20]

  TIMx->CR1 = tmpcr1;
9000c600:	6018      	str	r0, [r3, #0]
  return HAL_OK;
9000c602:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000c604:	f884 2048 	strb.w	r2, [r4, #72]	@ 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000c608:	f884 203e 	strb.w	r2, [r4, #62]	@ 0x3e
9000c60c:	f884 203f 	strb.w	r2, [r4, #63]	@ 0x3f
9000c610:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
9000c614:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
9000c618:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
9000c61c:	f884 2043 	strb.w	r2, [r4, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000c620:	f884 2044 	strb.w	r2, [r4, #68]	@ 0x44
9000c624:	f884 2045 	strb.w	r2, [r4, #69]	@ 0x45
9000c628:	f884 2046 	strb.w	r2, [r4, #70]	@ 0x46
9000c62c:	f884 2047 	strb.w	r2, [r4, #71]	@ 0x47
  htim->State = HAL_TIM_STATE_READY;
9000c630:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
}
9000c634:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000c636:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
9000c63a:	68a1      	ldr	r1, [r4, #8]
9000c63c:	430a      	orrs	r2, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c63e:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000c640:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c644:	62df      	str	r7, [r3, #44]	@ 0x2c
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c646:	430a      	orrs	r2, r1
  TIMx->PSC = Structure->Prescaler;
9000c648:	629e      	str	r6, [r3, #40]	@ 0x28
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c64a:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000c64e:	4310      	orrs	r0, r2
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000c650:	490c      	ldr	r1, [pc, #48]	@ (9000c684 <HAL_TIM_Base_Init+0x144>)
9000c652:	4a0a      	ldr	r2, [pc, #40]	@ (9000c67c <HAL_TIM_Base_Init+0x13c>)
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c654:	4293      	cmp	r3, r2
9000c656:	bf18      	it	ne
9000c658:	428b      	cmpne	r3, r1
9000c65a:	d0c9      	beq.n	9000c5f0 <HAL_TIM_Base_Init+0xb0>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000c65c:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c660:	4293      	cmp	r3, r2
9000c662:	d0c5      	beq.n	9000c5f0 <HAL_TIM_Base_Init+0xb0>
9000c664:	e7c6      	b.n	9000c5f4 <HAL_TIM_Base_Init+0xb4>
    htim->Lock = HAL_UNLOCKED;
9000c666:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
9000c66a:	f7ff ff67 	bl	9000c53c <HAL_TIM_Base_MspInit>
9000c66e:	e773      	b.n	9000c558 <HAL_TIM_Base_Init+0x18>
    return HAL_ERROR;
9000c670:	2001      	movs	r0, #1
}
9000c672:	4770      	bx	lr
9000c674:	40010000 	.word	0x40010000
9000c678:	40010400 	.word	0x40010400
9000c67c:	40014000 	.word	0x40014000
9000c680:	40014400 	.word	0x40014400
9000c684:	40014800 	.word	0x40014800
9000c688:	40000400 	.word	0x40000400

9000c68c <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
9000c68c:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000c690:	2b01      	cmp	r3, #1
9000c692:	d13d      	bne.n	9000c710 <HAL_TIM_Base_Start_IT+0x84>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000c694:	6802      	ldr	r2, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000c696:	2102      	movs	r1, #2
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c698:	4b1e      	ldr	r3, [pc, #120]	@ (9000c714 <HAL_TIM_Base_Start_IT+0x88>)
9000c69a:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
9000c69e:	bf18      	it	ne
9000c6a0:	429a      	cmpne	r2, r3
{
9000c6a2:	b430      	push	{r4, r5}
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c6a4:	bf0c      	ite	eq
9000c6a6:	2301      	moveq	r3, #1
9000c6a8:	2300      	movne	r3, #0
9000c6aa:	4d1b      	ldr	r5, [pc, #108]	@ (9000c718 <HAL_TIM_Base_Start_IT+0x8c>)
9000c6ac:	4c1b      	ldr	r4, [pc, #108]	@ (9000c71c <HAL_TIM_Base_Start_IT+0x90>)
9000c6ae:	42aa      	cmp	r2, r5
9000c6b0:	bf08      	it	eq
9000c6b2:	f043 0301 	orreq.w	r3, r3, #1
  htim->State = HAL_TIM_STATE_BUSY;
9000c6b6:	f880 103d 	strb.w	r1, [r0, #61]	@ 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000c6ba:	68d1      	ldr	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c6bc:	42a2      	cmp	r2, r4
9000c6be:	bf08      	it	eq
9000c6c0:	f043 0301 	orreq.w	r3, r3, #1
9000c6c4:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000c6c8:	f041 0101 	orr.w	r1, r1, #1
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c6cc:	4814      	ldr	r0, [pc, #80]	@ (9000c720 <HAL_TIM_Base_Start_IT+0x94>)
9000c6ce:	42a2      	cmp	r2, r4
9000c6d0:	bf08      	it	eq
9000c6d2:	f043 0301 	orreq.w	r3, r3, #1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000c6d6:	60d1      	str	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c6d8:	4282      	cmp	r2, r0
9000c6da:	bf08      	it	eq
9000c6dc:	f043 0301 	orreq.w	r3, r3, #1
9000c6e0:	4910      	ldr	r1, [pc, #64]	@ (9000c724 <HAL_TIM_Base_Start_IT+0x98>)
9000c6e2:	428a      	cmp	r2, r1
9000c6e4:	bf08      	it	eq
9000c6e6:	f043 0301 	orreq.w	r3, r3, #1
9000c6ea:	b913      	cbnz	r3, 9000c6f2 <HAL_TIM_Base_Start_IT+0x66>
9000c6ec:	4b0e      	ldr	r3, [pc, #56]	@ (9000c728 <HAL_TIM_Base_Start_IT+0x9c>)
9000c6ee:	429a      	cmp	r2, r3
9000c6f0:	d107      	bne.n	9000c702 <HAL_TIM_Base_Start_IT+0x76>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
9000c6f2:	6891      	ldr	r1, [r2, #8]
9000c6f4:	4b0d      	ldr	r3, [pc, #52]	@ (9000c72c <HAL_TIM_Base_Start_IT+0xa0>)
9000c6f6:	400b      	ands	r3, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
9000c6f8:	2b06      	cmp	r3, #6
9000c6fa:	d006      	beq.n	9000c70a <HAL_TIM_Base_Start_IT+0x7e>
9000c6fc:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000c700:	d003      	beq.n	9000c70a <HAL_TIM_Base_Start_IT+0x7e>
      __HAL_TIM_ENABLE(htim);
9000c702:	6813      	ldr	r3, [r2, #0]
9000c704:	f043 0301 	orr.w	r3, r3, #1
9000c708:	6013      	str	r3, [r2, #0]
  return HAL_OK;
9000c70a:	2000      	movs	r0, #0
}
9000c70c:	bc30      	pop	{r4, r5}
9000c70e:	4770      	bx	lr
    return HAL_ERROR;
9000c710:	2001      	movs	r0, #1
}
9000c712:	4770      	bx	lr
9000c714:	40010000 	.word	0x40010000
9000c718:	40000400 	.word	0x40000400
9000c71c:	40000800 	.word	0x40000800
9000c720:	40010400 	.word	0x40010400
9000c724:	40001800 	.word	0x40001800
9000c728:	40014000 	.word	0x40014000
9000c72c:	00010007 	.word	0x00010007

9000c730 <HAL_TIM_OC_DelayElapsedCallback>:
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
9000c730:	4770      	bx	lr
9000c732:	bf00      	nop

9000c734 <HAL_TIM_IC_CaptureCallback>:
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
9000c734:	4770      	bx	lr
9000c736:	bf00      	nop

9000c738 <HAL_TIM_PWM_PulseFinishedCallback>:
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
9000c738:	4770      	bx	lr
9000c73a:	bf00      	nop

9000c73c <HAL_TIM_TriggerCallback>:
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
9000c73c:	4770      	bx	lr
9000c73e:	bf00      	nop

9000c740 <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
9000c740:	6803      	ldr	r3, [r0, #0]
{
9000c742:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
9000c744:	68de      	ldr	r6, [r3, #12]
{
9000c746:	4604      	mov	r4, r0
  uint32_t itflag   = htim->Instance->SR;
9000c748:	691d      	ldr	r5, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
9000c74a:	07aa      	lsls	r2, r5, #30
9000c74c:	d501      	bpl.n	9000c752 <HAL_TIM_IRQHandler+0x12>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
9000c74e:	07b1      	lsls	r1, r6, #30
9000c750:	d452      	bmi.n	9000c7f8 <HAL_TIM_IRQHandler+0xb8>
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
9000c752:	076b      	lsls	r3, r5, #29
9000c754:	d501      	bpl.n	9000c75a <HAL_TIM_IRQHandler+0x1a>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
9000c756:	0770      	lsls	r0, r6, #29
9000c758:	d43b      	bmi.n	9000c7d2 <HAL_TIM_IRQHandler+0x92>
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
9000c75a:	0729      	lsls	r1, r5, #28
9000c75c:	d501      	bpl.n	9000c762 <HAL_TIM_IRQHandler+0x22>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
9000c75e:	0732      	lsls	r2, r6, #28
9000c760:	d425      	bmi.n	9000c7ae <HAL_TIM_IRQHandler+0x6e>
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
9000c762:	06e8      	lsls	r0, r5, #27
9000c764:	d501      	bpl.n	9000c76a <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
9000c766:	06f1      	lsls	r1, r6, #27
9000c768:	d411      	bmi.n	9000c78e <HAL_TIM_IRQHandler+0x4e>
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
9000c76a:	07ea      	lsls	r2, r5, #31
9000c76c:	d501      	bpl.n	9000c772 <HAL_TIM_IRQHandler+0x32>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
9000c76e:	07f3      	lsls	r3, r6, #31
9000c770:	d464      	bmi.n	9000c83c <HAL_TIM_IRQHandler+0xfc>
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
9000c772:	f415 5f02 	tst.w	r5, #8320	@ 0x2080
9000c776:	d04c      	beq.n	9000c812 <HAL_TIM_IRQHandler+0xd2>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
9000c778:	0630      	lsls	r0, r6, #24
9000c77a:	d467      	bmi.n	9000c84c <HAL_TIM_IRQHandler+0x10c>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
9000c77c:	0668      	lsls	r0, r5, #25
9000c77e:	d501      	bpl.n	9000c784 <HAL_TIM_IRQHandler+0x44>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
9000c780:	0671      	lsls	r1, r6, #25
9000c782:	d46d      	bmi.n	9000c860 <HAL_TIM_IRQHandler+0x120>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
9000c784:	06aa      	lsls	r2, r5, #26
9000c786:	d501      	bpl.n	9000c78c <HAL_TIM_IRQHandler+0x4c>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
9000c788:	06b3      	lsls	r3, r6, #26
9000c78a:	d44e      	bmi.n	9000c82a <HAL_TIM_IRQHandler+0xea>
}
9000c78c:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
9000c78e:	6823      	ldr	r3, [r4, #0]
9000c790:	f06f 0210 	mvn.w	r2, #16
        HAL_TIM_IC_CaptureCallback(htim);
9000c794:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
9000c796:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000c798:	2208      	movs	r2, #8
9000c79a:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
9000c79c:	69db      	ldr	r3, [r3, #28]
9000c79e:	f413 7f40 	tst.w	r3, #768	@ 0x300
9000c7a2:	d071      	beq.n	9000c888 <HAL_TIM_IRQHandler+0x148>
        HAL_TIM_IC_CaptureCallback(htim);
9000c7a4:	f7ff ffc6 	bl	9000c734 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c7a8:	2300      	movs	r3, #0
9000c7aa:	7723      	strb	r3, [r4, #28]
9000c7ac:	e7dd      	b.n	9000c76a <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
9000c7ae:	6823      	ldr	r3, [r4, #0]
9000c7b0:	f06f 0208 	mvn.w	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
9000c7b4:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
9000c7b6:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000c7b8:	2204      	movs	r2, #4
9000c7ba:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
9000c7bc:	69db      	ldr	r3, [r3, #28]
9000c7be:	079b      	lsls	r3, r3, #30
9000c7c0:	d15f      	bne.n	9000c882 <HAL_TIM_IRQHandler+0x142>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000c7c2:	f7ff ffb5 	bl	9000c730 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000c7c6:	4620      	mov	r0, r4
9000c7c8:	f7ff ffb6 	bl	9000c738 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c7cc:	2300      	movs	r3, #0
9000c7ce:	7723      	strb	r3, [r4, #28]
9000c7d0:	e7c7      	b.n	9000c762 <HAL_TIM_IRQHandler+0x22>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
9000c7d2:	6823      	ldr	r3, [r4, #0]
9000c7d4:	f06f 0204 	mvn.w	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
9000c7d8:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
9000c7da:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000c7dc:	2202      	movs	r2, #2
9000c7de:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
9000c7e0:	699b      	ldr	r3, [r3, #24]
9000c7e2:	f413 7f40 	tst.w	r3, #768	@ 0x300
9000c7e6:	d149      	bne.n	9000c87c <HAL_TIM_IRQHandler+0x13c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000c7e8:	f7ff ffa2 	bl	9000c730 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000c7ec:	4620      	mov	r0, r4
9000c7ee:	f7ff ffa3 	bl	9000c738 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c7f2:	2300      	movs	r3, #0
9000c7f4:	7723      	strb	r3, [r4, #28]
9000c7f6:	e7b0      	b.n	9000c75a <HAL_TIM_IRQHandler+0x1a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
9000c7f8:	f06f 0202 	mvn.w	r2, #2
9000c7fc:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000c7fe:	2201      	movs	r2, #1
9000c800:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
9000c802:	699b      	ldr	r3, [r3, #24]
9000c804:	079a      	lsls	r2, r3, #30
9000c806:	d033      	beq.n	9000c870 <HAL_TIM_IRQHandler+0x130>
          HAL_TIM_IC_CaptureCallback(htim);
9000c808:	f7ff ff94 	bl	9000c734 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c80c:	2300      	movs	r3, #0
9000c80e:	7723      	strb	r3, [r4, #28]
9000c810:	e79f      	b.n	9000c752 <HAL_TIM_IRQHandler+0x12>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
9000c812:	05ea      	lsls	r2, r5, #23
9000c814:	d5b2      	bpl.n	9000c77c <HAL_TIM_IRQHandler+0x3c>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
9000c816:	0633      	lsls	r3, r6, #24
9000c818:	d5b0      	bpl.n	9000c77c <HAL_TIM_IRQHandler+0x3c>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000c81a:	6823      	ldr	r3, [r4, #0]
9000c81c:	f46f 7280 	mvn.w	r2, #256	@ 0x100
      HAL_TIMEx_Break2Callback(htim);
9000c820:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000c822:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
9000c824:	f000 f83a 	bl	9000c89c <HAL_TIMEx_Break2Callback>
9000c828:	e7a8      	b.n	9000c77c <HAL_TIM_IRQHandler+0x3c>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
9000c82a:	6823      	ldr	r3, [r4, #0]
9000c82c:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
9000c830:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
9000c832:	611a      	str	r2, [r3, #16]
}
9000c834:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      HAL_TIMEx_CommutCallback(htim);
9000c838:	f000 b82c 	b.w	9000c894 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
9000c83c:	6823      	ldr	r3, [r4, #0]
9000c83e:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
9000c842:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
9000c844:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
9000c846:	f7f7 fc19 	bl	9000407c <HAL_TIM_PeriodElapsedCallback>
9000c84a:	e792      	b.n	9000c772 <HAL_TIM_IRQHandler+0x32>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
9000c84c:	6823      	ldr	r3, [r4, #0]
9000c84e:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
      HAL_TIMEx_BreakCallback(htim);
9000c852:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
9000c854:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
9000c856:	f000 f81f 	bl	9000c898 <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
9000c85a:	05e9      	lsls	r1, r5, #23
9000c85c:	d58e      	bpl.n	9000c77c <HAL_TIM_IRQHandler+0x3c>
9000c85e:	e7dc      	b.n	9000c81a <HAL_TIM_IRQHandler+0xda>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
9000c860:	6823      	ldr	r3, [r4, #0]
9000c862:	f06f 0240 	mvn.w	r2, #64	@ 0x40
      HAL_TIM_TriggerCallback(htim);
9000c866:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
9000c868:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
9000c86a:	f7ff ff67 	bl	9000c73c <HAL_TIM_TriggerCallback>
9000c86e:	e789      	b.n	9000c784 <HAL_TIM_IRQHandler+0x44>
          HAL_TIM_OC_DelayElapsedCallback(htim);
9000c870:	f7ff ff5e 	bl	9000c730 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
9000c874:	4620      	mov	r0, r4
9000c876:	f7ff ff5f 	bl	9000c738 <HAL_TIM_PWM_PulseFinishedCallback>
9000c87a:	e7c7      	b.n	9000c80c <HAL_TIM_IRQHandler+0xcc>
        HAL_TIM_IC_CaptureCallback(htim);
9000c87c:	f7ff ff5a 	bl	9000c734 <HAL_TIM_IC_CaptureCallback>
9000c880:	e7b7      	b.n	9000c7f2 <HAL_TIM_IRQHandler+0xb2>
        HAL_TIM_IC_CaptureCallback(htim);
9000c882:	f7ff ff57 	bl	9000c734 <HAL_TIM_IC_CaptureCallback>
9000c886:	e7a1      	b.n	9000c7cc <HAL_TIM_IRQHandler+0x8c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000c888:	f7ff ff52 	bl	9000c730 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000c88c:	4620      	mov	r0, r4
9000c88e:	f7ff ff53 	bl	9000c738 <HAL_TIM_PWM_PulseFinishedCallback>
9000c892:	e789      	b.n	9000c7a8 <HAL_TIM_IRQHandler+0x68>

9000c894 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
9000c894:	4770      	bx	lr
9000c896:	bf00      	nop

9000c898 <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
9000c898:	4770      	bx	lr
9000c89a:	bf00      	nop

9000c89c <HAL_TIMEx_Break2Callback>:
/**
  * @brief  Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
9000c89c:	4770      	bx	lr
9000c89e:	bf00      	nop

9000c8a0 <UART_TxISR_16BIT>:
static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
{
  const uint16_t *tmp;

  /* Check that a Tx process is ongoing */
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
9000c8a0:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
9000c8a4:	2b21      	cmp	r3, #33	@ 0x21
9000c8a6:	d000      	beq.n	9000c8aa <UART_TxISR_16BIT+0xa>
      huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
      huart->pTxBuffPtr += 2U;
      huart->TxXferCount--;
    }
  }
}
9000c8a8:	4770      	bx	lr
    if (huart->TxXferCount == 0U)
9000c8aa:	f8b0 3056 	ldrh.w	r3, [r0, #86]	@ 0x56
      huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
9000c8ae:	6802      	ldr	r2, [r0, #0]
    if (huart->TxXferCount == 0U)
9000c8b0:	b29b      	uxth	r3, r3
9000c8b2:	b983      	cbnz	r3, 9000c8d6 <UART_TxISR_16BIT+0x36>
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000c8b4:	e852 3f00 	ldrex	r3, [r2]
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
9000c8b8:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000c8bc:	e842 3100 	strex	r1, r3, [r2]
9000c8c0:	2900      	cmp	r1, #0
9000c8c2:	d1f7      	bne.n	9000c8b4 <UART_TxISR_16BIT+0x14>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000c8c4:	e852 3f00 	ldrex	r3, [r2]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
9000c8c8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000c8cc:	e842 3100 	strex	r1, r3, [r2]
9000c8d0:	2900      	cmp	r1, #0
9000c8d2:	d1f7      	bne.n	9000c8c4 <UART_TxISR_16BIT+0x24>
9000c8d4:	4770      	bx	lr
      huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
9000c8d6:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000c8d8:	f831 3b02 	ldrh.w	r3, [r1], #2
9000c8dc:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000c8e0:	6293      	str	r3, [r2, #40]	@ 0x28
      huart->TxXferCount--;
9000c8e2:	f8b0 3056 	ldrh.w	r3, [r0, #86]	@ 0x56
      huart->pTxBuffPtr += 2U;
9000c8e6:	6501      	str	r1, [r0, #80]	@ 0x50
      huart->TxXferCount--;
9000c8e8:	3b01      	subs	r3, #1
9000c8ea:	b29b      	uxth	r3, r3
9000c8ec:	f8a0 3056 	strh.w	r3, [r0, #86]	@ 0x56
}
9000c8f0:	4770      	bx	lr
9000c8f2:	bf00      	nop

9000c8f4 <UART_TxISR_16BIT_FIFOEN>:
{
  const uint16_t *tmp;
  uint16_t  nb_tx_data;

  /* Check that a Tx process is ongoing */
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
9000c8f4:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
9000c8f8:	2b21      	cmp	r3, #33	@ 0x21
9000c8fa:	d000      	beq.n	9000c8fe <UART_TxISR_16BIT_FIFOEN+0xa>
9000c8fc:	4770      	bx	lr
  {
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
9000c8fe:	f8b0 306a 	ldrh.w	r3, [r0, #106]	@ 0x6a
9000c902:	2b00      	cmp	r3, #0
9000c904:	d0fa      	beq.n	9000c8fc <UART_TxISR_16BIT_FIFOEN+0x8>
        /* Enable the UART Transmit Complete Interrupt */
        ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);

        break; /* force exit loop */
      }
      else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
9000c906:	6801      	ldr	r1, [r0, #0]
{
9000c908:	b410      	push	{r4}
      if (huart->TxXferCount == 0U)
9000c90a:	f8b0 2056 	ldrh.w	r2, [r0, #86]	@ 0x56
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
9000c90e:	3b01      	subs	r3, #1
      if (huart->TxXferCount == 0U)
9000c910:	b292      	uxth	r2, r2
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
9000c912:	b29b      	uxth	r3, r3
      if (huart->TxXferCount == 0U)
9000c914:	b1a2      	cbz	r2, 9000c940 <UART_TxISR_16BIT_FIFOEN+0x4c>
      else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
9000c916:	69ca      	ldr	r2, [r1, #28]
9000c918:	0612      	lsls	r2, r2, #24
9000c91a:	d50c      	bpl.n	9000c936 <UART_TxISR_16BIT_FIFOEN+0x42>
      {
        tmp = (const uint16_t *) huart->pTxBuffPtr;
        huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
9000c91c:	6d04      	ldr	r4, [r0, #80]	@ 0x50
9000c91e:	f834 2b02 	ldrh.w	r2, [r4], #2
9000c922:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000c926:	628a      	str	r2, [r1, #40]	@ 0x28
        huart->pTxBuffPtr += 2U;
        huart->TxXferCount--;
9000c928:	f8b0 2056 	ldrh.w	r2, [r0, #86]	@ 0x56
        huart->pTxBuffPtr += 2U;
9000c92c:	6504      	str	r4, [r0, #80]	@ 0x50
        huart->TxXferCount--;
9000c92e:	3a01      	subs	r2, #1
9000c930:	b292      	uxth	r2, r2
9000c932:	f8a0 2056 	strh.w	r2, [r0, #86]	@ 0x56
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
9000c936:	2b00      	cmp	r3, #0
9000c938:	d1e7      	bne.n	9000c90a <UART_TxISR_16BIT_FIFOEN+0x16>
      {
        /* Nothing to do */
      }
    }
  }
}
9000c93a:	f85d 4b04 	ldr.w	r4, [sp], #4
9000c93e:	4770      	bx	lr
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000c940:	f101 0308 	add.w	r3, r1, #8
9000c944:	e853 3f00 	ldrex	r3, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
9000c948:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000c94c:	f101 0008 	add.w	r0, r1, #8
9000c950:	e840 3200 	strex	r2, r3, [r0]
9000c954:	2a00      	cmp	r2, #0
9000c956:	d1f3      	bne.n	9000c940 <UART_TxISR_16BIT_FIFOEN+0x4c>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000c958:	e851 3f00 	ldrex	r3, [r1]
        ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
9000c95c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000c960:	e841 3200 	strex	r2, r3, [r1]
9000c964:	2a00      	cmp	r2, #0
9000c966:	d0e8      	beq.n	9000c93a <UART_TxISR_16BIT_FIFOEN+0x46>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000c968:	e851 3f00 	ldrex	r3, [r1]
9000c96c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000c970:	e841 3200 	strex	r2, r3, [r1]
9000c974:	2a00      	cmp	r2, #0
9000c976:	d1ef      	bne.n	9000c958 <UART_TxISR_16BIT_FIFOEN+0x64>
9000c978:	e7df      	b.n	9000c93a <UART_TxISR_16BIT_FIFOEN+0x46>
9000c97a:	bf00      	nop

9000c97c <UART_TxISR_8BIT>:
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
9000c97c:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
9000c980:	2b21      	cmp	r3, #33	@ 0x21
9000c982:	d000      	beq.n	9000c986 <UART_TxISR_8BIT+0xa>
}
9000c984:	4770      	bx	lr
    if (huart->TxXferCount == 0U)
9000c986:	f8b0 3056 	ldrh.w	r3, [r0, #86]	@ 0x56
      huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
9000c98a:	6802      	ldr	r2, [r0, #0]
    if (huart->TxXferCount == 0U)
9000c98c:	b29b      	uxth	r3, r3
9000c98e:	b983      	cbnz	r3, 9000c9b2 <UART_TxISR_8BIT+0x36>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000c990:	e852 3f00 	ldrex	r3, [r2]
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
9000c994:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000c998:	e842 3100 	strex	r1, r3, [r2]
9000c99c:	2900      	cmp	r1, #0
9000c99e:	d1f7      	bne.n	9000c990 <UART_TxISR_8BIT+0x14>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000c9a0:	e852 3f00 	ldrex	r3, [r2]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
9000c9a4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000c9a8:	e842 3100 	strex	r1, r3, [r2]
9000c9ac:	2900      	cmp	r1, #0
9000c9ae:	d1f7      	bne.n	9000c9a0 <UART_TxISR_8BIT+0x24>
9000c9b0:	4770      	bx	lr
      huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
9000c9b2:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000c9b4:	f811 3b01 	ldrb.w	r3, [r1], #1
9000c9b8:	6293      	str	r3, [r2, #40]	@ 0x28
      huart->TxXferCount--;
9000c9ba:	f8b0 3056 	ldrh.w	r3, [r0, #86]	@ 0x56
      huart->pTxBuffPtr++;
9000c9be:	6501      	str	r1, [r0, #80]	@ 0x50
      huart->TxXferCount--;
9000c9c0:	3b01      	subs	r3, #1
9000c9c2:	b29b      	uxth	r3, r3
9000c9c4:	f8a0 3056 	strh.w	r3, [r0, #86]	@ 0x56
}
9000c9c8:	4770      	bx	lr
9000c9ca:	bf00      	nop

9000c9cc <UART_TxISR_8BIT_FIFOEN>:
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
9000c9cc:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
9000c9d0:	2b21      	cmp	r3, #33	@ 0x21
9000c9d2:	d000      	beq.n	9000c9d6 <UART_TxISR_8BIT_FIFOEN+0xa>
9000c9d4:	4770      	bx	lr
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
9000c9d6:	f8b0 306a 	ldrh.w	r3, [r0, #106]	@ 0x6a
9000c9da:	2b00      	cmp	r3, #0
9000c9dc:	d0fa      	beq.n	9000c9d4 <UART_TxISR_8BIT_FIFOEN+0x8>
      else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
9000c9de:	6801      	ldr	r1, [r0, #0]
{
9000c9e0:	b410      	push	{r4}
      if (huart->TxXferCount == 0U)
9000c9e2:	f8b0 2056 	ldrh.w	r2, [r0, #86]	@ 0x56
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
9000c9e6:	3b01      	subs	r3, #1
      if (huart->TxXferCount == 0U)
9000c9e8:	b292      	uxth	r2, r2
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
9000c9ea:	b29b      	uxth	r3, r3
      if (huart->TxXferCount == 0U)
9000c9ec:	b192      	cbz	r2, 9000ca14 <UART_TxISR_8BIT_FIFOEN+0x48>
      else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
9000c9ee:	69ca      	ldr	r2, [r1, #28]
9000c9f0:	0612      	lsls	r2, r2, #24
9000c9f2:	d50a      	bpl.n	9000ca0a <UART_TxISR_8BIT_FIFOEN+0x3e>
        huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
9000c9f4:	6d04      	ldr	r4, [r0, #80]	@ 0x50
9000c9f6:	f814 2b01 	ldrb.w	r2, [r4], #1
9000c9fa:	628a      	str	r2, [r1, #40]	@ 0x28
        huart->TxXferCount--;
9000c9fc:	f8b0 2056 	ldrh.w	r2, [r0, #86]	@ 0x56
        huart->pTxBuffPtr++;
9000ca00:	6504      	str	r4, [r0, #80]	@ 0x50
        huart->TxXferCount--;
9000ca02:	3a01      	subs	r2, #1
9000ca04:	b292      	uxth	r2, r2
9000ca06:	f8a0 2056 	strh.w	r2, [r0, #86]	@ 0x56
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
9000ca0a:	2b00      	cmp	r3, #0
9000ca0c:	d1e9      	bne.n	9000c9e2 <UART_TxISR_8BIT_FIFOEN+0x16>
}
9000ca0e:	f85d 4b04 	ldr.w	r4, [sp], #4
9000ca12:	4770      	bx	lr
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ca14:	f101 0308 	add.w	r3, r1, #8
9000ca18:	e853 3f00 	ldrex	r3, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
9000ca1c:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ca20:	f101 0008 	add.w	r0, r1, #8
9000ca24:	e840 3200 	strex	r2, r3, [r0]
9000ca28:	2a00      	cmp	r2, #0
9000ca2a:	d1f3      	bne.n	9000ca14 <UART_TxISR_8BIT_FIFOEN+0x48>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ca2c:	e851 3f00 	ldrex	r3, [r1]
        ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
9000ca30:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ca34:	e841 3200 	strex	r2, r3, [r1]
9000ca38:	2a00      	cmp	r2, #0
9000ca3a:	d0e8      	beq.n	9000ca0e <UART_TxISR_8BIT_FIFOEN+0x42>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ca3c:	e851 3f00 	ldrex	r3, [r1]
9000ca40:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ca44:	e841 3200 	strex	r2, r3, [r1]
9000ca48:	2a00      	cmp	r2, #0
9000ca4a:	d1ef      	bne.n	9000ca2c <UART_TxISR_8BIT_FIFOEN+0x60>
9000ca4c:	e7df      	b.n	9000ca0e <UART_TxISR_8BIT_FIFOEN+0x42>
9000ca4e:	bf00      	nop

9000ca50 <HAL_UART_Transmit_IT>:
  if (huart->gState == HAL_UART_STATE_READY)
9000ca50:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
9000ca54:	2b20      	cmp	r3, #32
9000ca56:	d128      	bne.n	9000caaa <HAL_UART_Transmit_IT+0x5a>
    if ((pData == NULL) || (Size == 0U))
9000ca58:	b329      	cbz	r1, 9000caa6 <HAL_UART_Transmit_IT+0x56>
9000ca5a:	fab2 f382 	clz	r3, r2
9000ca5e:	095b      	lsrs	r3, r3, #5
9000ca60:	b30a      	cbz	r2, 9000caa6 <HAL_UART_Transmit_IT+0x56>
{
9000ca62:	b410      	push	{r4}
    huart->pTxBuffPtr  = pData;
9000ca64:	6501      	str	r1, [r0, #80]	@ 0x50
    huart->gState = HAL_UART_STATE_BUSY_TX;
9000ca66:	2421      	movs	r4, #33	@ 0x21
    if (huart->FifoMode == UART_FIFOMODE_ENABLE)
9000ca68:	6e41      	ldr	r1, [r0, #100]	@ 0x64
    huart->TxXferCount = Size;
9000ca6a:	f8a0 2056 	strh.w	r2, [r0, #86]	@ 0x56
    if (huart->FifoMode == UART_FIFOMODE_ENABLE)
9000ca6e:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
    huart->ErrorCode = HAL_UART_ERROR_NONE;
9000ca72:	f8c0 3090 	str.w	r3, [r0, #144]	@ 0x90
    huart->TxXferSize  = Size;
9000ca76:	f8a0 2054 	strh.w	r2, [r0, #84]	@ 0x54
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000ca7a:	6883      	ldr	r3, [r0, #8]
    huart->gState = HAL_UART_STATE_BUSY_TX;
9000ca7c:	f8c0 4088 	str.w	r4, [r0, #136]	@ 0x88
    if (huart->FifoMode == UART_FIFOMODE_ENABLE)
9000ca80:	d01c      	beq.n	9000cabc <HAL_UART_Transmit_IT+0x6c>
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000ca82:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
9000ca86:	d012      	beq.n	9000caae <HAL_UART_Transmit_IT+0x5e>
        huart->TxISR = UART_TxISR_8BIT;
9000ca88:	4b1b      	ldr	r3, [pc, #108]	@ (9000caf8 <HAL_UART_Transmit_IT+0xa8>)
9000ca8a:	6802      	ldr	r2, [r0, #0]
9000ca8c:	6783      	str	r3, [r0, #120]	@ 0x78
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ca8e:	e852 3f00 	ldrex	r3, [r2]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
9000ca92:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ca96:	e842 3100 	strex	r1, r3, [r2]
9000ca9a:	2900      	cmp	r1, #0
9000ca9c:	d1f7      	bne.n	9000ca8e <HAL_UART_Transmit_IT+0x3e>
    return HAL_OK;
9000ca9e:	2000      	movs	r0, #0
}
9000caa0:	f85d 4b04 	ldr.w	r4, [sp], #4
9000caa4:	4770      	bx	lr
      return HAL_ERROR;
9000caa6:	2001      	movs	r0, #1
}
9000caa8:	4770      	bx	lr
    return HAL_BUSY;
9000caaa:	2002      	movs	r0, #2
9000caac:	4770      	bx	lr
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000caae:	6901      	ldr	r1, [r0, #16]
        huart->TxISR = UART_TxISR_8BIT;
9000cab0:	4b12      	ldr	r3, [pc, #72]	@ (9000cafc <HAL_UART_Transmit_IT+0xac>)
9000cab2:	4a11      	ldr	r2, [pc, #68]	@ (9000caf8 <HAL_UART_Transmit_IT+0xa8>)
9000cab4:	2900      	cmp	r1, #0
9000cab6:	bf18      	it	ne
9000cab8:	4613      	movne	r3, r2
9000caba:	e7e6      	b.n	9000ca8a <HAL_UART_Transmit_IT+0x3a>
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000cabc:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
9000cac0:	d012      	beq.n	9000cae8 <HAL_UART_Transmit_IT+0x98>
        huart->TxISR = UART_TxISR_8BIT_FIFOEN;
9000cac2:	4b0f      	ldr	r3, [pc, #60]	@ (9000cb00 <HAL_UART_Transmit_IT+0xb0>)
9000cac4:	6802      	ldr	r2, [r0, #0]
9000cac6:	6783      	str	r3, [r0, #120]	@ 0x78
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cac8:	f102 0308 	add.w	r3, r2, #8
9000cacc:	e853 3f00 	ldrex	r3, [r3]
      ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
9000cad0:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cad4:	f102 0008 	add.w	r0, r2, #8
9000cad8:	e840 3100 	strex	r1, r3, [r0]
9000cadc:	2900      	cmp	r1, #0
9000cade:	d1f3      	bne.n	9000cac8 <HAL_UART_Transmit_IT+0x78>
    return HAL_OK;
9000cae0:	2000      	movs	r0, #0
}
9000cae2:	f85d 4b04 	ldr.w	r4, [sp], #4
9000cae6:	4770      	bx	lr
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000cae8:	6901      	ldr	r1, [r0, #16]
        huart->TxISR = UART_TxISR_8BIT_FIFOEN;
9000caea:	4b06      	ldr	r3, [pc, #24]	@ (9000cb04 <HAL_UART_Transmit_IT+0xb4>)
9000caec:	4a04      	ldr	r2, [pc, #16]	@ (9000cb00 <HAL_UART_Transmit_IT+0xb0>)
9000caee:	2900      	cmp	r1, #0
9000caf0:	bf18      	it	ne
9000caf2:	4613      	movne	r3, r2
9000caf4:	e7e6      	b.n	9000cac4 <HAL_UART_Transmit_IT+0x74>
9000caf6:	bf00      	nop
9000caf8:	9000c97d 	.word	0x9000c97d
9000cafc:	9000c8a1 	.word	0x9000c8a1
9000cb00:	9000c9cd 	.word	0x9000c9cd
9000cb04:	9000c8f5 	.word	0x9000c8f5

9000cb08 <HAL_UART_Receive_IT>:
  if (huart->RxState == HAL_UART_STATE_READY)
9000cb08:	f8d0 308c 	ldr.w	r3, [r0, #140]	@ 0x8c
9000cb0c:	2b20      	cmp	r3, #32
9000cb0e:	d15d      	bne.n	9000cbcc <HAL_UART_Receive_IT+0xc4>
    if ((pData == NULL) || (Size == 0U))
9000cb10:	2900      	cmp	r1, #0
9000cb12:	d060      	beq.n	9000cbd6 <HAL_UART_Receive_IT+0xce>
{
9000cb14:	b430      	push	{r4, r5}
    if ((pData == NULL) || (Size == 0U))
9000cb16:	fab2 f482 	clz	r4, r2
9000cb1a:	0964      	lsrs	r4, r4, #5
9000cb1c:	2a00      	cmp	r2, #0
9000cb1e:	d057      	beq.n	9000cbd0 <HAL_UART_Receive_IT+0xc8>
    if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000cb20:	6803      	ldr	r3, [r0, #0]
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000cb22:	66c4      	str	r4, [r0, #108]	@ 0x6c
    if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000cb24:	4c57      	ldr	r4, [pc, #348]	@ (9000cc84 <HAL_UART_Receive_IT+0x17c>)
9000cb26:	42a3      	cmp	r3, r4
9000cb28:	d002      	beq.n	9000cb30 <HAL_UART_Receive_IT+0x28>
      if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
9000cb2a:	685c      	ldr	r4, [r3, #4]
9000cb2c:	0224      	lsls	r4, r4, #8
9000cb2e:	d43c      	bmi.n	9000cbaa <HAL_UART_Receive_IT+0xa2>
  huart->pRxBuffPtr  = pData;
9000cb30:	6581      	str	r1, [r0, #88]	@ 0x58
  huart->RxISR       = NULL;
9000cb32:	2400      	movs	r4, #0
  UART_MASK_COMPUTATION(huart);
9000cb34:	6881      	ldr	r1, [r0, #8]
  huart->RxXferSize  = Size;
9000cb36:	f8a0 205c 	strh.w	r2, [r0, #92]	@ 0x5c
  UART_MASK_COMPUTATION(huart);
9000cb3a:	f5b1 5f80 	cmp.w	r1, #4096	@ 0x1000
  huart->RxXferCount = Size;
9000cb3e:	f8a0 205e 	strh.w	r2, [r0, #94]	@ 0x5e
  huart->RxISR       = NULL;
9000cb42:	6744      	str	r4, [r0, #116]	@ 0x74
  UART_MASK_COMPUTATION(huart);
9000cb44:	d066      	beq.n	9000cc14 <HAL_UART_Receive_IT+0x10c>
9000cb46:	2900      	cmp	r1, #0
9000cb48:	d147      	bne.n	9000cbda <HAL_UART_Receive_IT+0xd2>
9000cb4a:	6901      	ldr	r1, [r0, #16]
9000cb4c:	2900      	cmp	r1, #0
9000cb4e:	bf0c      	ite	eq
9000cb50:	24ff      	moveq	r4, #255	@ 0xff
9000cb52:	247f      	movne	r4, #127	@ 0x7f
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9000cb54:	2100      	movs	r1, #0
  UART_MASK_COMPUTATION(huart);
9000cb56:	f8a0 4060 	strh.w	r4, [r0, #96]	@ 0x60
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9000cb5a:	f8c0 1090 	str.w	r1, [r0, #144]	@ 0x90
  huart->RxState = HAL_UART_STATE_BUSY_RX;
9000cb5e:	2122      	movs	r1, #34	@ 0x22
9000cb60:	f8c0 108c 	str.w	r1, [r0, #140]	@ 0x8c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cb64:	f103 0108 	add.w	r1, r3, #8
9000cb68:	e851 1f00 	ldrex	r1, [r1]
  ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
9000cb6c:	f041 0101 	orr.w	r1, r1, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cb70:	f103 0508 	add.w	r5, r3, #8
9000cb74:	e845 1400 	strex	r4, r1, [r5]
9000cb78:	2c00      	cmp	r4, #0
9000cb7a:	d1f3      	bne.n	9000cb64 <HAL_UART_Receive_IT+0x5c>
  if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
9000cb7c:	6e41      	ldr	r1, [r0, #100]	@ 0x64
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000cb7e:	6885      	ldr	r5, [r0, #8]
  if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
9000cb80:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000cb84:	6904      	ldr	r4, [r0, #16]
  if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
9000cb86:	d04c      	beq.n	9000cc22 <HAL_UART_Receive_IT+0x11a>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000cb88:	f5b5 5f80 	cmp.w	r5, #4096	@ 0x1000
9000cb8c:	d02e      	beq.n	9000cbec <HAL_UART_Receive_IT+0xe4>
9000cb8e:	4a3e      	ldr	r2, [pc, #248]	@ (9000cc88 <HAL_UART_Receive_IT+0x180>)
9000cb90:	6742      	str	r2, [r0, #116]	@ 0x74
    if (huart->Init.Parity != UART_PARITY_NONE)
9000cb92:	b374      	cbz	r4, 9000cbf2 <HAL_UART_Receive_IT+0xea>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cb94:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE);
9000cb98:	f442 7290 	orr.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cb9c:	e843 2100 	strex	r1, r2, [r3]
9000cba0:	2900      	cmp	r1, #0
9000cba2:	d1f7      	bne.n	9000cb94 <HAL_UART_Receive_IT+0x8c>
    return (UART_Start_Receive_IT(huart, pData, Size));
9000cba4:	2000      	movs	r0, #0
}
9000cba6:	bc30      	pop	{r4, r5}
9000cba8:	4770      	bx	lr
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cbaa:	e853 4f00 	ldrex	r4, [r3]
        ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
9000cbae:	f044 6480 	orr.w	r4, r4, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cbb2:	e843 4500 	strex	r5, r4, [r3]
9000cbb6:	2d00      	cmp	r5, #0
9000cbb8:	d0ba      	beq.n	9000cb30 <HAL_UART_Receive_IT+0x28>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cbba:	e853 4f00 	ldrex	r4, [r3]
9000cbbe:	f044 6480 	orr.w	r4, r4, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cbc2:	e843 4500 	strex	r5, r4, [r3]
9000cbc6:	2d00      	cmp	r5, #0
9000cbc8:	d1ef      	bne.n	9000cbaa <HAL_UART_Receive_IT+0xa2>
9000cbca:	e7b1      	b.n	9000cb30 <HAL_UART_Receive_IT+0x28>
    return HAL_BUSY;
9000cbcc:	2002      	movs	r0, #2
9000cbce:	4770      	bx	lr
      return HAL_ERROR;
9000cbd0:	2001      	movs	r0, #1
}
9000cbd2:	bc30      	pop	{r4, r5}
9000cbd4:	4770      	bx	lr
      return HAL_ERROR;
9000cbd6:	2001      	movs	r0, #1
}
9000cbd8:	4770      	bx	lr
  UART_MASK_COMPUTATION(huart);
9000cbda:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000cbde:	d1b9      	bne.n	9000cb54 <HAL_UART_Receive_IT+0x4c>
9000cbe0:	6901      	ldr	r1, [r0, #16]
9000cbe2:	2900      	cmp	r1, #0
9000cbe4:	bf0c      	ite	eq
9000cbe6:	247f      	moveq	r4, #127	@ 0x7f
9000cbe8:	243f      	movne	r4, #63	@ 0x3f
9000cbea:	e7b3      	b.n	9000cb54 <HAL_UART_Receive_IT+0x4c>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000cbec:	bb84      	cbnz	r4, 9000cc50 <HAL_UART_Receive_IT+0x148>
9000cbee:	4a27      	ldr	r2, [pc, #156]	@ (9000cc8c <HAL_UART_Receive_IT+0x184>)
9000cbf0:	6742      	str	r2, [r0, #116]	@ 0x74
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cbf2:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
9000cbf6:	f042 0220 	orr.w	r2, r2, #32
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cbfa:	e843 2100 	strex	r1, r2, [r3]
9000cbfe:	2900      	cmp	r1, #0
9000cc00:	d0d0      	beq.n	9000cba4 <HAL_UART_Receive_IT+0x9c>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cc02:	e853 2f00 	ldrex	r2, [r3]
9000cc06:	f042 0220 	orr.w	r2, r2, #32
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cc0a:	e843 2100 	strex	r1, r2, [r3]
9000cc0e:	2900      	cmp	r1, #0
9000cc10:	d1ef      	bne.n	9000cbf2 <HAL_UART_Receive_IT+0xea>
9000cc12:	e7c7      	b.n	9000cba4 <HAL_UART_Receive_IT+0x9c>
  UART_MASK_COMPUTATION(huart);
9000cc14:	6901      	ldr	r1, [r0, #16]
9000cc16:	f240 14ff 	movw	r4, #511	@ 0x1ff
9000cc1a:	2900      	cmp	r1, #0
9000cc1c:	bf18      	it	ne
9000cc1e:	24ff      	movne	r4, #255	@ 0xff
9000cc20:	e798      	b.n	9000cb54 <HAL_UART_Receive_IT+0x4c>
  if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
9000cc22:	f8b0 1068 	ldrh.w	r1, [r0, #104]	@ 0x68
9000cc26:	4291      	cmp	r1, r2
9000cc28:	d8ae      	bhi.n	9000cb88 <HAL_UART_Receive_IT+0x80>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000cc2a:	f5b5 5f80 	cmp.w	r5, #4096	@ 0x1000
9000cc2e:	d012      	beq.n	9000cc56 <HAL_UART_Receive_IT+0x14e>
      huart->RxISR = UART_RxISR_8BIT_FIFOEN;
9000cc30:	4a17      	ldr	r2, [pc, #92]	@ (9000cc90 <HAL_UART_Receive_IT+0x188>)
9000cc32:	6742      	str	r2, [r0, #116]	@ 0x74
    if (huart->Init.Parity != UART_PARITY_NONE)
9000cc34:	b994      	cbnz	r4, 9000cc5c <HAL_UART_Receive_IT+0x154>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cc36:	f103 0208 	add.w	r2, r3, #8
9000cc3a:	e852 2f00 	ldrex	r2, [r2]
    ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
9000cc3e:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cc42:	f103 0008 	add.w	r0, r3, #8
9000cc46:	e840 2100 	strex	r1, r2, [r0]
9000cc4a:	2900      	cmp	r1, #0
9000cc4c:	d1f3      	bne.n	9000cc36 <HAL_UART_Receive_IT+0x12e>
9000cc4e:	e7a9      	b.n	9000cba4 <HAL_UART_Receive_IT+0x9c>
9000cc50:	4a0d      	ldr	r2, [pc, #52]	@ (9000cc88 <HAL_UART_Receive_IT+0x180>)
9000cc52:	6742      	str	r2, [r0, #116]	@ 0x74
    if (huart->Init.Parity != UART_PARITY_NONE)
9000cc54:	e79e      	b.n	9000cb94 <HAL_UART_Receive_IT+0x8c>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000cc56:	b194      	cbz	r4, 9000cc7e <HAL_UART_Receive_IT+0x176>
      huart->RxISR = UART_RxISR_8BIT_FIFOEN;
9000cc58:	4a0d      	ldr	r2, [pc, #52]	@ (9000cc90 <HAL_UART_Receive_IT+0x188>)
9000cc5a:	6742      	str	r2, [r0, #116]	@ 0x74
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cc5c:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
9000cc60:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cc64:	e843 2100 	strex	r1, r2, [r3]
9000cc68:	2900      	cmp	r1, #0
9000cc6a:	d0e4      	beq.n	9000cc36 <HAL_UART_Receive_IT+0x12e>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cc6c:	e853 2f00 	ldrex	r2, [r3]
9000cc70:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cc74:	e843 2100 	strex	r1, r2, [r3]
9000cc78:	2900      	cmp	r1, #0
9000cc7a:	d1ef      	bne.n	9000cc5c <HAL_UART_Receive_IT+0x154>
9000cc7c:	e7db      	b.n	9000cc36 <HAL_UART_Receive_IT+0x12e>
9000cc7e:	4a05      	ldr	r2, [pc, #20]	@ (9000cc94 <HAL_UART_Receive_IT+0x18c>)
9000cc80:	6742      	str	r2, [r0, #116]	@ 0x74
    if (huart->Init.Parity != UART_PARITY_NONE)
9000cc82:	e7d8      	b.n	9000cc36 <HAL_UART_Receive_IT+0x12e>
9000cc84:	58000c00 	.word	0x58000c00
9000cc88:	9000d331 	.word	0x9000d331
9000cc8c:	9000d2e9 	.word	0x9000d2e9
9000cc90:	9000d375 	.word	0x9000d375
9000cc94:	9000d59d 	.word	0x9000d59d

9000cc98 <HAL_UART_ErrorCallback>:
__weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
9000cc98:	4770      	bx	lr
9000cc9a:	bf00      	nop

9000cc9c <UART_DMAAbortOnError>:
{
9000cc9c:	b508      	push	{r3, lr}
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
9000cc9e:	6b80      	ldr	r0, [r0, #56]	@ 0x38
  huart->RxXferCount = 0U;
9000cca0:	2300      	movs	r3, #0
9000cca2:	f8a0 305e 	strh.w	r3, [r0, #94]	@ 0x5e
  HAL_UART_ErrorCallback(huart);
9000cca6:	f7ff fff7 	bl	9000cc98 <HAL_UART_ErrorCallback>
}
9000ccaa:	bd08      	pop	{r3, pc}

9000ccac <HAL_UART_AbortCpltCallback>:
__weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
9000ccac:	4770      	bx	lr
9000ccae:	bf00      	nop

9000ccb0 <HAL_UART_Abort_IT>:
{
9000ccb0:	b570      	push	{r4, r5, r6, lr}
9000ccb2:	6803      	ldr	r3, [r0, #0]
9000ccb4:	4605      	mov	r5, r0
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ccb6:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_TCIE | USART_CR1_RXNEIE_RXFNEIE |
9000ccba:	f422 72f0 	bic.w	r2, r2, #480	@ 0x1e0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ccbe:	e843 2100 	strex	r1, r2, [r3]
9000ccc2:	2900      	cmp	r1, #0
9000ccc4:	d1f7      	bne.n	9000ccb6 <HAL_UART_Abort_IT+0x6>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE));
9000ccc6:	494e      	ldr	r1, [pc, #312]	@ (9000ce00 <HAL_UART_Abort_IT+0x150>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ccc8:	f103 0208 	add.w	r2, r3, #8
9000cccc:	e852 2f00 	ldrex	r2, [r2]
9000ccd0:	400a      	ands	r2, r1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ccd2:	f103 0008 	add.w	r0, r3, #8
9000ccd6:	e840 2400 	strex	r4, r2, [r0]
9000ccda:	2c00      	cmp	r4, #0
9000ccdc:	d1f4      	bne.n	9000ccc8 <HAL_UART_Abort_IT+0x18>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000ccde:	6eea      	ldr	r2, [r5, #108]	@ 0x6c
9000cce0:	2a01      	cmp	r2, #1
9000cce2:	d06c      	beq.n	9000cdbe <HAL_UART_Abort_IT+0x10e>
  if (huart->hdmatx != NULL)
9000cce4:	6fee      	ldr	r6, [r5, #124]	@ 0x7c
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
9000cce6:	4619      	mov	r1, r3
  if (huart->hdmatx != NULL)
9000cce8:	b12e      	cbz	r6, 9000ccf6 <HAL_UART_Abort_IT+0x46>
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
9000ccea:	689a      	ldr	r2, [r3, #8]
9000ccec:	f012 0280 	ands.w	r2, r2, #128	@ 0x80
      huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
9000ccf0:	bf18      	it	ne
9000ccf2:	4a44      	ldrne	r2, [pc, #272]	@ (9000ce04 <HAL_UART_Abort_IT+0x154>)
      huart->hdmatx->XferAbortCallback = NULL;
9000ccf4:	6532      	str	r2, [r6, #80]	@ 0x50
  if (huart->hdmarx != NULL)
9000ccf6:	f8d5 0080 	ldr.w	r0, [r5, #128]	@ 0x80
9000ccfa:	b128      	cbz	r0, 9000cd08 <HAL_UART_Abort_IT+0x58>
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000ccfc:	689a      	ldr	r2, [r3, #8]
9000ccfe:	f012 0240 	ands.w	r2, r2, #64	@ 0x40
      huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
9000cd02:	bf18      	it	ne
9000cd04:	4a40      	ldrne	r2, [pc, #256]	@ (9000ce08 <HAL_UART_Abort_IT+0x158>)
      huart->hdmarx->XferAbortCallback = NULL;
9000cd06:	6502      	str	r2, [r0, #80]	@ 0x50
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
9000cd08:	689a      	ldr	r2, [r3, #8]
9000cd0a:	0612      	lsls	r2, r2, #24
9000cd0c:	d43c      	bmi.n	9000cd88 <HAL_UART_Abort_IT+0xd8>
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000cd0e:	689a      	ldr	r2, [r3, #8]
9000cd10:	0654      	lsls	r4, r2, #25
9000cd12:	d516      	bpl.n	9000cd42 <HAL_UART_Abort_IT+0x92>
  uint32_t abortcplt = 1U;
9000cd14:	2401      	movs	r4, #1
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cd16:	f103 0208 	add.w	r2, r3, #8
9000cd1a:	e852 2f00 	ldrex	r2, [r2]
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
9000cd1e:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cd22:	f103 0608 	add.w	r6, r3, #8
9000cd26:	e846 2100 	strex	r1, r2, [r6]
9000cd2a:	2900      	cmp	r1, #0
9000cd2c:	d1f3      	bne.n	9000cd16 <HAL_UART_Abort_IT+0x66>
    if (huart->hdmarx != NULL)
9000cd2e:	2800      	cmp	r0, #0
9000cd30:	d05b      	beq.n	9000cdea <HAL_UART_Abort_IT+0x13a>
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
9000cd32:	f7fa f94f 	bl	90006fd4 <HAL_DMA_Abort_IT>
9000cd36:	b328      	cbz	r0, 9000cd84 <HAL_UART_Abort_IT+0xd4>
        huart->hdmarx->XferAbortCallback = NULL;
9000cd38:	f8d5 3080 	ldr.w	r3, [r5, #128]	@ 0x80
9000cd3c:	2200      	movs	r2, #0
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
9000cd3e:	6829      	ldr	r1, [r5, #0]
        huart->hdmarx->XferAbortCallback = NULL;
9000cd40:	651a      	str	r2, [r3, #80]	@ 0x50
    if (huart->FifoMode == UART_FIFOMODE_ENABLE)
9000cd42:	6e6a      	ldr	r2, [r5, #100]	@ 0x64
    huart->TxXferCount = 0U;
9000cd44:	2300      	movs	r3, #0
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
9000cd46:	200f      	movs	r0, #15
    if (huart->FifoMode == UART_FIFOMODE_ENABLE)
9000cd48:	f1b2 5f00 	cmp.w	r2, #536870912	@ 0x20000000
    huart->TxXferCount = 0U;
9000cd4c:	f8a5 3056 	strh.w	r3, [r5, #86]	@ 0x56
    huart->RxISR = NULL;
9000cd50:	676b      	str	r3, [r5, #116]	@ 0x74
    huart->RxXferCount = 0U;
9000cd52:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
    huart->RxISR = NULL;
9000cd56:	67ab      	str	r3, [r5, #120]	@ 0x78
    huart->ErrorCode = HAL_UART_ERROR_NONE;
9000cd58:	f8c5 3090 	str.w	r3, [r5, #144]	@ 0x90
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
9000cd5c:	6208      	str	r0, [r1, #32]
    if (huart->FifoMode == UART_FIFOMODE_ENABLE)
9000cd5e:	d103      	bne.n	9000cd68 <HAL_UART_Abort_IT+0xb8>
      __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
9000cd60:	698b      	ldr	r3, [r1, #24]
9000cd62:	f043 0310 	orr.w	r3, r3, #16
9000cd66:	618b      	str	r3, [r1, #24]
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
9000cd68:	698b      	ldr	r3, [r1, #24]
    huart->gState  = HAL_UART_STATE_READY;
9000cd6a:	2220      	movs	r2, #32
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000cd6c:	2400      	movs	r4, #0
    HAL_UART_AbortCpltCallback(huart);
9000cd6e:	4628      	mov	r0, r5
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
9000cd70:	f043 0308 	orr.w	r3, r3, #8
9000cd74:	618b      	str	r3, [r1, #24]
    huart->gState  = HAL_UART_STATE_READY;
9000cd76:	f8c5 2088 	str.w	r2, [r5, #136]	@ 0x88
    huart->RxState = HAL_UART_STATE_READY;
9000cd7a:	f8c5 208c 	str.w	r2, [r5, #140]	@ 0x8c
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000cd7e:	66ec      	str	r4, [r5, #108]	@ 0x6c
    HAL_UART_AbortCpltCallback(huart);
9000cd80:	f7ff ff94 	bl	9000ccac <HAL_UART_AbortCpltCallback>
}
9000cd84:	2000      	movs	r0, #0
9000cd86:	bd70      	pop	{r4, r5, r6, pc}
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cd88:	f103 0208 	add.w	r2, r3, #8
9000cd8c:	e852 2f00 	ldrex	r2, [r2]
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
9000cd90:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cd94:	f103 0c08 	add.w	ip, r3, #8
9000cd98:	e84c 2100 	strex	r1, r2, [ip]
9000cd9c:	2900      	cmp	r1, #0
9000cd9e:	d1f3      	bne.n	9000cd88 <HAL_UART_Abort_IT+0xd8>
    if (huart->hdmatx != NULL)
9000cda0:	b1f6      	cbz	r6, 9000cde0 <HAL_UART_Abort_IT+0x130>
      if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
9000cda2:	4630      	mov	r0, r6
9000cda4:	f7fa f916 	bl	90006fd4 <HAL_DMA_Abort_IT>
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000cda8:	682b      	ldr	r3, [r5, #0]
      if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
9000cdaa:	b310      	cbz	r0, 9000cdf2 <HAL_UART_Abort_IT+0x142>
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000cdac:	689a      	ldr	r2, [r3, #8]
        huart->hdmatx->XferAbortCallback = NULL;
9000cdae:	2400      	movs	r4, #0
9000cdb0:	6fe8      	ldr	r0, [r5, #124]	@ 0x7c
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000cdb2:	4619      	mov	r1, r3
9000cdb4:	0656      	lsls	r6, r2, #25
        huart->hdmatx->XferAbortCallback = NULL;
9000cdb6:	6504      	str	r4, [r0, #80]	@ 0x50
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000cdb8:	d5c3      	bpl.n	9000cd42 <HAL_UART_Abort_IT+0x92>
  uint32_t abortcplt = 1U;
9000cdba:	2401      	movs	r4, #1
9000cdbc:	e01c      	b.n	9000cdf8 <HAL_UART_Abort_IT+0x148>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cdbe:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
9000cdc2:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cdc6:	e843 2100 	strex	r1, r2, [r3]
9000cdca:	2900      	cmp	r1, #0
9000cdcc:	d08a      	beq.n	9000cce4 <HAL_UART_Abort_IT+0x34>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cdce:	e853 2f00 	ldrex	r2, [r3]
9000cdd2:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cdd6:	e843 2100 	strex	r1, r2, [r3]
9000cdda:	2900      	cmp	r1, #0
9000cddc:	d1ef      	bne.n	9000cdbe <HAL_UART_Abort_IT+0x10e>
9000cdde:	e781      	b.n	9000cce4 <HAL_UART_Abort_IT+0x34>
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000cde0:	689a      	ldr	r2, [r3, #8]
9000cde2:	4619      	mov	r1, r3
9000cde4:	0652      	lsls	r2, r2, #25
9000cde6:	d495      	bmi.n	9000cd14 <HAL_UART_Abort_IT+0x64>
9000cde8:	e7ab      	b.n	9000cd42 <HAL_UART_Abort_IT+0x92>
  if (abortcplt == 1U)
9000cdea:	2c01      	cmp	r4, #1
9000cdec:	d1ca      	bne.n	9000cd84 <HAL_UART_Abort_IT+0xd4>
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
9000cdee:	4619      	mov	r1, r3
9000cdf0:	e7a7      	b.n	9000cd42 <HAL_UART_Abort_IT+0x92>
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000cdf2:	689a      	ldr	r2, [r3, #8]
9000cdf4:	0652      	lsls	r2, r2, #25
9000cdf6:	d5c5      	bpl.n	9000cd84 <HAL_UART_Abort_IT+0xd4>
9000cdf8:	f8d5 0080 	ldr.w	r0, [r5, #128]	@ 0x80
9000cdfc:	e78b      	b.n	9000cd16 <HAL_UART_Abort_IT+0x66>
9000cdfe:	bf00      	nop
9000ce00:	ef7ffffe 	.word	0xef7ffffe
9000ce04:	9000ce51 	.word	0x9000ce51
9000ce08:	9000ce0d 	.word	0x9000ce0d

9000ce0c <UART_DMARxAbortCallback>:
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
9000ce0c:	6b80      	ldr	r0, [r0, #56]	@ 0x38
  huart->hdmarx->XferAbortCallback = NULL;
9000ce0e:	2100      	movs	r1, #0
  if (huart->hdmatx != NULL)
9000ce10:	e9d0 321f 	ldrd	r3, r2, [r0, #124]	@ 0x7c
  huart->hdmarx->XferAbortCallback = NULL;
9000ce14:	6511      	str	r1, [r2, #80]	@ 0x50
  if (huart->hdmatx != NULL)
9000ce16:	b113      	cbz	r3, 9000ce1e <UART_DMARxAbortCallback+0x12>
    if (huart->hdmatx->XferAbortCallback != NULL)
9000ce18:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9000ce1a:	b103      	cbz	r3, 9000ce1e <UART_DMARxAbortCallback+0x12>
9000ce1c:	4770      	bx	lr
  huart->TxXferCount = 0U;
9000ce1e:	2300      	movs	r3, #0
  __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
9000ce20:	6802      	ldr	r2, [r0, #0]
9000ce22:	210f      	movs	r1, #15
{
9000ce24:	b510      	push	{r4, lr}
  huart->TxXferCount = 0U;
9000ce26:	f8a0 3056 	strh.w	r3, [r0, #86]	@ 0x56
  huart->gState  = HAL_UART_STATE_READY;
9000ce2a:	2420      	movs	r4, #32
  huart->RxXferCount = 0U;
9000ce2c:	f8a0 305e 	strh.w	r3, [r0, #94]	@ 0x5e
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9000ce30:	f8c0 3090 	str.w	r3, [r0, #144]	@ 0x90
  __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
9000ce34:	6211      	str	r1, [r2, #32]
  __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
9000ce36:	6991      	ldr	r1, [r2, #24]
9000ce38:	f041 0108 	orr.w	r1, r1, #8
9000ce3c:	6191      	str	r1, [r2, #24]
  huart->gState  = HAL_UART_STATE_READY;
9000ce3e:	f8c0 4088 	str.w	r4, [r0, #136]	@ 0x88
  huart->RxState = HAL_UART_STATE_READY;
9000ce42:	f8c0 408c 	str.w	r4, [r0, #140]	@ 0x8c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000ce46:	66c3      	str	r3, [r0, #108]	@ 0x6c
  HAL_UART_AbortCpltCallback(huart);
9000ce48:	f7ff ff30 	bl	9000ccac <HAL_UART_AbortCpltCallback>
}
9000ce4c:	bd10      	pop	{r4, pc}
9000ce4e:	bf00      	nop

9000ce50 <UART_DMATxAbortCallback>:
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
9000ce50:	6b80      	ldr	r0, [r0, #56]	@ 0x38
  huart->hdmatx->XferAbortCallback = NULL;
9000ce52:	2100      	movs	r1, #0
  if (huart->hdmarx != NULL)
9000ce54:	e9d0 231f 	ldrd	r2, r3, [r0, #124]	@ 0x7c
  huart->hdmatx->XferAbortCallback = NULL;
9000ce58:	6511      	str	r1, [r2, #80]	@ 0x50
  if (huart->hdmarx != NULL)
9000ce5a:	b113      	cbz	r3, 9000ce62 <UART_DMATxAbortCallback+0x12>
    if (huart->hdmarx->XferAbortCallback != NULL)
9000ce5c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9000ce5e:	b103      	cbz	r3, 9000ce62 <UART_DMATxAbortCallback+0x12>
9000ce60:	4770      	bx	lr
  if (huart->FifoMode == UART_FIFOMODE_ENABLE)
9000ce62:	6e41      	ldr	r1, [r0, #100]	@ 0x64
  huart->TxXferCount = 0U;
9000ce64:	2300      	movs	r3, #0
  __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
9000ce66:	6802      	ldr	r2, [r0, #0]
  if (huart->FifoMode == UART_FIFOMODE_ENABLE)
9000ce68:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
{
9000ce6c:	b510      	push	{r4, lr}
  __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
9000ce6e:	f04f 040f 	mov.w	r4, #15
  huart->TxXferCount = 0U;
9000ce72:	f8a0 3056 	strh.w	r3, [r0, #86]	@ 0x56
  huart->RxXferCount = 0U;
9000ce76:	f8a0 305e 	strh.w	r3, [r0, #94]	@ 0x5e
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9000ce7a:	f8c0 3090 	str.w	r3, [r0, #144]	@ 0x90
  __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
9000ce7e:	6214      	str	r4, [r2, #32]
  if (huart->FifoMode == UART_FIFOMODE_ENABLE)
9000ce80:	d009      	beq.n	9000ce96 <UART_DMATxAbortCallback+0x46>
  huart->gState  = HAL_UART_STATE_READY;
9000ce82:	2320      	movs	r3, #32
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000ce84:	2200      	movs	r2, #0
  huart->gState  = HAL_UART_STATE_READY;
9000ce86:	f8c0 3088 	str.w	r3, [r0, #136]	@ 0x88
  huart->RxState = HAL_UART_STATE_READY;
9000ce8a:	f8c0 308c 	str.w	r3, [r0, #140]	@ 0x8c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000ce8e:	66c2      	str	r2, [r0, #108]	@ 0x6c
  HAL_UART_AbortCpltCallback(huart);
9000ce90:	f7ff ff0c 	bl	9000ccac <HAL_UART_AbortCpltCallback>
}
9000ce94:	bd10      	pop	{r4, pc}
    __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
9000ce96:	6993      	ldr	r3, [r2, #24]
9000ce98:	f043 0310 	orr.w	r3, r3, #16
9000ce9c:	6193      	str	r3, [r2, #24]
9000ce9e:	e7f0      	b.n	9000ce82 <UART_DMATxAbortCallback+0x32>

9000cea0 <HAL_UARTEx_RxEventCallback>:
}
9000cea0:	4770      	bx	lr
9000cea2:	bf00      	nop

9000cea4 <HAL_UART_IRQHandler>:
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
9000cea4:	6803      	ldr	r3, [r0, #0]
  errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | USART_ISR_RTOF));
9000cea6:	f640 0c0f 	movw	ip, #2063	@ 0x80f
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
9000ceaa:	69da      	ldr	r2, [r3, #28]
  if (errorflags == 0U)
9000ceac:	ea12 0f0c 	tst.w	r2, ip
{
9000ceb0:	b570      	push	{r4, r5, r6, lr}
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
9000ceb2:	681d      	ldr	r5, [r3, #0]
{
9000ceb4:	4604      	mov	r4, r0
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
9000ceb6:	6899      	ldr	r1, [r3, #8]
  if (errorflags == 0U)
9000ceb8:	d145      	bne.n	9000cf46 <HAL_UART_IRQHandler+0xa2>
    if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
9000ceba:	0696      	lsls	r6, r2, #26
9000cebc:	d507      	bpl.n	9000cece <HAL_UART_IRQHandler+0x2a>
        && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
9000cebe:	f005 0c20 	and.w	ip, r5, #32
            || ((cr3its & USART_CR3_RXFTIE) != 0U)))
9000cec2:	f001 5680 	and.w	r6, r1, #268435456	@ 0x10000000
9000cec6:	ea5c 0c06 	orrs.w	ip, ip, r6
9000ceca:	f040 812a 	bne.w	9000d122 <HAL_UART_IRQHandler+0x27e>
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000cece:	6ee0      	ldr	r0, [r4, #108]	@ 0x6c
9000ced0:	2801      	cmp	r0, #1
9000ced2:	f000 80cd 	beq.w	9000d070 <HAL_UART_IRQHandler+0x1cc>
  if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
9000ced6:	02d0      	lsls	r0, r2, #11
9000ced8:	d41d      	bmi.n	9000cf16 <HAL_UART_IRQHandler+0x72>
  if (((isrflags & USART_ISR_TXE_TXFNF) != 0U)
9000ceda:	0610      	lsls	r0, r2, #24
9000cedc:	d506      	bpl.n	9000ceec <HAL_UART_IRQHandler+0x48>
          || ((cr3its & USART_CR3_TXFTIE) != 0U)))
9000cede:	f401 0100 	and.w	r1, r1, #8388608	@ 0x800000
      && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
9000cee2:	f005 0080 	and.w	r0, r5, #128	@ 0x80
          || ((cr3its & USART_CR3_TXFTIE) != 0U)))
9000cee6:	4308      	orrs	r0, r1
9000cee8:	f040 8122 	bne.w	9000d130 <HAL_UART_IRQHandler+0x28c>
  if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
9000ceec:	0651      	lsls	r1, r2, #25
9000ceee:	d51c      	bpl.n	9000cf2a <HAL_UART_IRQHandler+0x86>
9000cef0:	066e      	lsls	r6, r5, #25
9000cef2:	d51a      	bpl.n	9000cf2a <HAL_UART_IRQHandler+0x86>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cef4:	e853 2f00 	ldrex	r2, [r3]
  * @retval None
  */
static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
  /* Disable the UART Transmit Complete Interrupt */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
9000cef8:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cefc:	e843 2100 	strex	r1, r2, [r3]
9000cf00:	2900      	cmp	r1, #0
9000cf02:	d1f7      	bne.n	9000cef4 <HAL_UART_IRQHandler+0x50>

  /* Tx process is ended, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
9000cf04:	2220      	movs	r2, #32

  /* Cleat TxISR function pointer */
  huart->TxISR = NULL;
9000cf06:	2300      	movs	r3, #0
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxCpltCallback(huart);
9000cf08:	4620      	mov	r0, r4
  huart->gState = HAL_UART_STATE_READY;
9000cf0a:	f8c4 2088 	str.w	r2, [r4, #136]	@ 0x88
  huart->TxISR = NULL;
9000cf0e:	67a3      	str	r3, [r4, #120]	@ 0x78
  HAL_UART_TxCpltCallback(huart);
9000cf10:	f7f6 fca6 	bl	90003860 <HAL_UART_TxCpltCallback>
}
9000cf14:	bd70      	pop	{r4, r5, r6, pc}
  if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
9000cf16:	024e      	lsls	r6, r1, #9
9000cf18:	d5df      	bpl.n	9000ceda <HAL_UART_IRQHandler+0x36>
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
9000cf1a:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
    HAL_UARTEx_WakeupCallback(huart);
9000cf1e:	4620      	mov	r0, r4
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
9000cf20:	621a      	str	r2, [r3, #32]
}
9000cf22:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_UARTEx_WakeupCallback(huart);
9000cf26:	f000 bfbf 	b.w	9000dea8 <HAL_UARTEx_WakeupCallback>
  if (((isrflags & USART_ISR_TXFE) != 0U) && ((cr1its & USART_CR1_TXFEIE) != 0U))
9000cf2a:	0210      	lsls	r0, r2, #8
9000cf2c:	d502      	bpl.n	9000cf34 <HAL_UART_IRQHandler+0x90>
9000cf2e:	0069      	lsls	r1, r5, #1
9000cf30:	f100 813d 	bmi.w	9000d1ae <HAL_UART_IRQHandler+0x30a>
  if (((isrflags & USART_ISR_RXFF) != 0U) && ((cr1its & USART_CR1_RXFFIE) != 0U))
9000cf34:	01d3      	lsls	r3, r2, #7
9000cf36:	d5ed      	bpl.n	9000cf14 <HAL_UART_IRQHandler+0x70>
9000cf38:	2d00      	cmp	r5, #0
9000cf3a:	daeb      	bge.n	9000cf14 <HAL_UART_IRQHandler+0x70>
    HAL_UARTEx_RxFifoFullCallback(huart);
9000cf3c:	4620      	mov	r0, r4
}
9000cf3e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_UARTEx_RxFifoFullCallback(huart);
9000cf42:	f000 bfb3 	b.w	9000deac <HAL_UARTEx_RxFifoFullCallback>
      && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
9000cf46:	48b9      	ldr	r0, [pc, #740]	@ (9000d22c <HAL_UART_IRQHandler+0x388>)
9000cf48:	4008      	ands	r0, r1
9000cf4a:	f040 8125 	bne.w	9000d198 <HAL_UART_IRQHandler+0x2f4>
           || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U))))
9000cf4e:	4eb8      	ldr	r6, [pc, #736]	@ (9000d230 <HAL_UART_IRQHandler+0x38c>)
9000cf50:	4235      	tst	r5, r6
9000cf52:	d0bc      	beq.n	9000cece <HAL_UART_IRQHandler+0x2a>
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000cf54:	07d6      	lsls	r6, r2, #31
9000cf56:	d51a      	bpl.n	9000cf8e <HAL_UART_IRQHandler+0xea>
9000cf58:	05ee      	lsls	r6, r5, #23
9000cf5a:	f140 8103 	bpl.w	9000d164 <HAL_UART_IRQHandler+0x2c0>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
9000cf5e:	2601      	movs	r6, #1
9000cf60:	621e      	str	r6, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_PE;
9000cf62:	f8d4 6090 	ldr.w	r6, [r4, #144]	@ 0x90
9000cf66:	f046 0601 	orr.w	r6, r6, #1
9000cf6a:	f8c4 6090 	str.w	r6, [r4, #144]	@ 0x90
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000cf6e:	0796      	lsls	r6, r2, #30
9000cf70:	f140 80fb 	bpl.w	9000d16a <HAL_UART_IRQHandler+0x2c6>
9000cf74:	07ce      	lsls	r6, r1, #31
9000cf76:	d50a      	bpl.n	9000cf8e <HAL_UART_IRQHandler+0xea>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
9000cf78:	2602      	movs	r6, #2
9000cf7a:	621e      	str	r6, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_FE;
9000cf7c:	f8d4 6090 	ldr.w	r6, [r4, #144]	@ 0x90
9000cf80:	f046 0604 	orr.w	r6, r6, #4
9000cf84:	f8c4 6090 	str.w	r6, [r4, #144]	@ 0x90
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000cf88:	0756      	lsls	r6, r2, #29
9000cf8a:	f100 80f4 	bmi.w	9000d176 <HAL_UART_IRQHandler+0x2d2>
    if (((isrflags & USART_ISR_ORE) != 0U)
9000cf8e:	0716      	lsls	r6, r2, #28
9000cf90:	d50b      	bpl.n	9000cfaa <HAL_UART_IRQHandler+0x106>
        && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
9000cf92:	f005 0620 	and.w	r6, r5, #32
9000cf96:	4306      	orrs	r6, r0
9000cf98:	d007      	beq.n	9000cfaa <HAL_UART_IRQHandler+0x106>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
9000cf9a:	2008      	movs	r0, #8
9000cf9c:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
9000cf9e:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
9000cfa2:	f040 0008 	orr.w	r0, r0, #8
9000cfa6:	f8c4 0090 	str.w	r0, [r4, #144]	@ 0x90
    if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
9000cfaa:	0510      	lsls	r0, r2, #20
9000cfac:	d50a      	bpl.n	9000cfc4 <HAL_UART_IRQHandler+0x120>
9000cfae:	016e      	lsls	r6, r5, #5
9000cfb0:	d508      	bpl.n	9000cfc4 <HAL_UART_IRQHandler+0x120>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
9000cfb2:	f44f 6000 	mov.w	r0, #2048	@ 0x800
9000cfb6:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_RTO;
9000cfb8:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
9000cfbc:	f040 0020 	orr.w	r0, r0, #32
9000cfc0:	f8c4 0090 	str.w	r0, [r4, #144]	@ 0x90
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
9000cfc4:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
9000cfc8:	2800      	cmp	r0, #0
9000cfca:	d0a3      	beq.n	9000cf14 <HAL_UART_IRQHandler+0x70>
      if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
9000cfcc:	0690      	lsls	r0, r2, #26
9000cfce:	d506      	bpl.n	9000cfde <HAL_UART_IRQHandler+0x13a>
          && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
9000cfd0:	f005 0520 	and.w	r5, r5, #32
              || ((cr3its & USART_CR3_RXFTIE) != 0U)))
9000cfd4:	f001 5180 	and.w	r1, r1, #268435456	@ 0x10000000
9000cfd8:	430d      	orrs	r5, r1
9000cfda:	f040 80d5 	bne.w	9000d188 <HAL_UART_IRQHandler+0x2e4>
      errorcode = huart->ErrorCode;
9000cfde:	f8d4 1090 	ldr.w	r1, [r4, #144]	@ 0x90
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
9000cfe2:	689a      	ldr	r2, [r3, #8]
          ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
9000cfe4:	f001 0128 	and.w	r1, r1, #40	@ 0x28
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
9000cfe8:	f002 0240 	and.w	r2, r2, #64	@ 0x40
9000cfec:	ea52 0501 	orrs.w	r5, r2, r1
9000cff0:	f000 80e2 	beq.w	9000d1b8 <HAL_UART_IRQHandler+0x314>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cff4:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000cff8:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cffc:	e843 2100 	strex	r1, r2, [r3]
9000d000:	2900      	cmp	r1, #0
9000d002:	d1f7      	bne.n	9000cff4 <HAL_UART_IRQHandler+0x150>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000d004:	488b      	ldr	r0, [pc, #556]	@ (9000d234 <HAL_UART_IRQHandler+0x390>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d006:	f103 0208 	add.w	r2, r3, #8
9000d00a:	e852 2f00 	ldrex	r2, [r2]
9000d00e:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d010:	f103 0508 	add.w	r5, r3, #8
9000d014:	e845 2100 	strex	r1, r2, [r5]
9000d018:	2900      	cmp	r1, #0
9000d01a:	d1f4      	bne.n	9000d006 <HAL_UART_IRQHandler+0x162>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000d01c:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000d01e:	2a01      	cmp	r2, #1
9000d020:	f000 808e 	beq.w	9000d140 <HAL_UART_IRQHandler+0x29c>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000d024:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9000d026:	2120      	movs	r1, #32
9000d028:	f8c4 108c 	str.w	r1, [r4, #140]	@ 0x8c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000d02c:	66e2      	str	r2, [r4, #108]	@ 0x6c
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000d02e:	6899      	ldr	r1, [r3, #8]
  huart->RxISR = NULL;
9000d030:	6762      	str	r2, [r4, #116]	@ 0x74
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000d032:	064a      	lsls	r2, r1, #25
9000d034:	f140 80b7 	bpl.w	9000d1a6 <HAL_UART_IRQHandler+0x302>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d038:	f103 0208 	add.w	r2, r3, #8
9000d03c:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
9000d040:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d044:	f103 0008 	add.w	r0, r3, #8
9000d048:	e840 2100 	strex	r1, r2, [r0]
9000d04c:	2900      	cmp	r1, #0
9000d04e:	d1f3      	bne.n	9000d038 <HAL_UART_IRQHandler+0x194>
          if (huart->hdmarx != NULL)
9000d050:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
9000d054:	2800      	cmp	r0, #0
9000d056:	f000 80a6 	beq.w	9000d1a6 <HAL_UART_IRQHandler+0x302>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
9000d05a:	4b77      	ldr	r3, [pc, #476]	@ (9000d238 <HAL_UART_IRQHandler+0x394>)
9000d05c:	6503      	str	r3, [r0, #80]	@ 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
9000d05e:	f7f9 ffb9 	bl	90006fd4 <HAL_DMA_Abort_IT>
9000d062:	2800      	cmp	r0, #0
9000d064:	f43f af56 	beq.w	9000cf14 <HAL_UART_IRQHandler+0x70>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
9000d068:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
9000d06c:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9000d06e:	e05c      	b.n	9000d12a <HAL_UART_IRQHandler+0x286>
      && ((isrflags & USART_ISR_IDLE) != 0U)
9000d070:	06d6      	lsls	r6, r2, #27
9000d072:	f57f af30 	bpl.w	9000ced6 <HAL_UART_IRQHandler+0x32>
      && ((cr1its & USART_ISR_IDLE) != 0U))
9000d076:	06e8      	lsls	r0, r5, #27
9000d078:	f57f af2d 	bpl.w	9000ced6 <HAL_UART_IRQHandler+0x32>
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
9000d07c:	2210      	movs	r2, #16
          && (nb_remaining_rx_data < huart->RxXferSize))
9000d07e:	f8b4 505c 	ldrh.w	r5, [r4, #92]	@ 0x5c
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
9000d082:	621a      	str	r2, [r3, #32]
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
9000d084:	689a      	ldr	r2, [r3, #8]
9000d086:	0656      	lsls	r6, r2, #25
9000d088:	f140 809c 	bpl.w	9000d1c4 <HAL_UART_IRQHandler+0x320>
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
9000d08c:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
9000d090:	6801      	ldr	r1, [r0, #0]
9000d092:	6849      	ldr	r1, [r1, #4]
9000d094:	b289      	uxth	r1, r1
      if ((nb_remaining_rx_data > 0U)
9000d096:	2900      	cmp	r1, #0
9000d098:	f000 80d0 	beq.w	9000d23c <HAL_UART_IRQHandler+0x398>
          && (nb_remaining_rx_data < huart->RxXferSize))
9000d09c:	42a9      	cmp	r1, r5
9000d09e:	f080 80cd 	bcs.w	9000d23c <HAL_UART_IRQHandler+0x398>
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
9000d0a2:	69c2      	ldr	r2, [r0, #28]
        huart->RxXferCount = nb_remaining_rx_data;
9000d0a4:	f8a4 105e 	strh.w	r1, [r4, #94]	@ 0x5e
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
9000d0a8:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
9000d0ac:	d02f      	beq.n	9000d10e <HAL_UART_IRQHandler+0x26a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d0ae:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
9000d0b2:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d0b6:	e843 2100 	strex	r1, r2, [r3]
9000d0ba:	2900      	cmp	r1, #0
9000d0bc:	d1f7      	bne.n	9000d0ae <HAL_UART_IRQHandler+0x20a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d0be:	f103 0208 	add.w	r2, r3, #8
9000d0c2:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
9000d0c6:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d0ca:	f103 0508 	add.w	r5, r3, #8
9000d0ce:	e845 2100 	strex	r1, r2, [r5]
9000d0d2:	2900      	cmp	r1, #0
9000d0d4:	d1f3      	bne.n	9000d0be <HAL_UART_IRQHandler+0x21a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d0d6:	f103 0208 	add.w	r2, r3, #8
9000d0da:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
9000d0de:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d0e2:	f103 0508 	add.w	r5, r3, #8
9000d0e6:	e845 2100 	strex	r1, r2, [r5]
9000d0ea:	2900      	cmp	r1, #0
9000d0ec:	d1f3      	bne.n	9000d0d6 <HAL_UART_IRQHandler+0x232>
          huart->RxState = HAL_UART_STATE_READY;
9000d0ee:	2220      	movs	r2, #32
9000d0f0:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000d0f4:	66e1      	str	r1, [r4, #108]	@ 0x6c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d0f6:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000d0fa:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d0fe:	e843 2100 	strex	r1, r2, [r3]
9000d102:	2900      	cmp	r1, #0
9000d104:	d1f7      	bne.n	9000d0f6 <HAL_UART_IRQHandler+0x252>
          (void)HAL_DMA_Abort(huart->hdmarx);
9000d106:	f7f9 fdaf 	bl	90006c68 <HAL_DMA_Abort>
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
9000d10a:	f8b4 505c 	ldrh.w	r5, [r4, #92]	@ 0x5c
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
9000d10e:	2302      	movs	r3, #2
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
9000d110:	4620      	mov	r0, r4
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
9000d112:	6723      	str	r3, [r4, #112]	@ 0x70
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
9000d114:	f8b4 105e 	ldrh.w	r1, [r4, #94]	@ 0x5e
9000d118:	1a69      	subs	r1, r5, r1
9000d11a:	b289      	uxth	r1, r1
9000d11c:	f7ff fec0 	bl	9000cea0 <HAL_UARTEx_RxEventCallback>
}
9000d120:	bd70      	pop	{r4, r5, r6, pc}
      if (huart->RxISR != NULL)
9000d122:	6f43      	ldr	r3, [r0, #116]	@ 0x74
9000d124:	2b00      	cmp	r3, #0
9000d126:	f43f aef5 	beq.w	9000cf14 <HAL_UART_IRQHandler+0x70>
}
9000d12a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
9000d12e:	4718      	bx	r3
    if (huart->TxISR != NULL)
9000d130:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
9000d132:	2b00      	cmp	r3, #0
9000d134:	f43f aeee 	beq.w	9000cf14 <HAL_UART_IRQHandler+0x70>
      huart->TxISR(huart);
9000d138:	4620      	mov	r0, r4
}
9000d13a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      huart->TxISR(huart);
9000d13e:	4718      	bx	r3
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d140:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000d144:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d148:	e843 2100 	strex	r1, r2, [r3]
9000d14c:	2900      	cmp	r1, #0
9000d14e:	f43f af69 	beq.w	9000d024 <HAL_UART_IRQHandler+0x180>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d152:	e853 2f00 	ldrex	r2, [r3]
9000d156:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d15a:	e843 2100 	strex	r1, r2, [r3]
9000d15e:	2900      	cmp	r1, #0
9000d160:	d1ee      	bne.n	9000d140 <HAL_UART_IRQHandler+0x29c>
9000d162:	e75f      	b.n	9000d024 <HAL_UART_IRQHandler+0x180>
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000d164:	0796      	lsls	r6, r2, #30
9000d166:	f53f af12 	bmi.w	9000cf8e <HAL_UART_IRQHandler+0xea>
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000d16a:	0756      	lsls	r6, r2, #29
9000d16c:	f57f af0f 	bpl.w	9000cf8e <HAL_UART_IRQHandler+0xea>
9000d170:	07ce      	lsls	r6, r1, #31
9000d172:	f57f af0c 	bpl.w	9000cf8e <HAL_UART_IRQHandler+0xea>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
9000d176:	2604      	movs	r6, #4
9000d178:	621e      	str	r6, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_NE;
9000d17a:	f8d4 6090 	ldr.w	r6, [r4, #144]	@ 0x90
9000d17e:	f046 0602 	orr.w	r6, r6, #2
9000d182:	f8c4 6090 	str.w	r6, [r4, #144]	@ 0x90
9000d186:	e702      	b.n	9000cf8e <HAL_UART_IRQHandler+0xea>
        if (huart->RxISR != NULL)
9000d188:	6f62      	ldr	r2, [r4, #116]	@ 0x74
9000d18a:	2a00      	cmp	r2, #0
9000d18c:	f43f af27 	beq.w	9000cfde <HAL_UART_IRQHandler+0x13a>
          huart->RxISR(huart);
9000d190:	4620      	mov	r0, r4
9000d192:	4790      	blx	r2
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
9000d194:	6823      	ldr	r3, [r4, #0]
9000d196:	e722      	b.n	9000cfde <HAL_UART_IRQHandler+0x13a>
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000d198:	07d6      	lsls	r6, r2, #31
9000d19a:	f57f aee8 	bpl.w	9000cf6e <HAL_UART_IRQHandler+0xca>
9000d19e:	05ee      	lsls	r6, r5, #23
9000d1a0:	f57f aee5 	bpl.w	9000cf6e <HAL_UART_IRQHandler+0xca>
9000d1a4:	e6db      	b.n	9000cf5e <HAL_UART_IRQHandler+0xba>
            HAL_UART_ErrorCallback(huart);
9000d1a6:	4620      	mov	r0, r4
9000d1a8:	f7ff fd76 	bl	9000cc98 <HAL_UART_ErrorCallback>
}
9000d1ac:	bd70      	pop	{r4, r5, r6, pc}
    HAL_UARTEx_TxFifoEmptyCallback(huart);
9000d1ae:	4620      	mov	r0, r4
}
9000d1b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_UARTEx_TxFifoEmptyCallback(huart);
9000d1b4:	f000 be7c 	b.w	9000deb0 <HAL_UARTEx_TxFifoEmptyCallback>
        HAL_UART_ErrorCallback(huart);
9000d1b8:	4620      	mov	r0, r4
9000d1ba:	f7ff fd6d 	bl	9000cc98 <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
9000d1be:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
}
9000d1c2:	bd70      	pop	{r4, r5, r6, pc}
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
9000d1c4:	f8b4 105e 	ldrh.w	r1, [r4, #94]	@ 0x5e
      if ((huart->RxXferCount > 0U)
9000d1c8:	f8b4 205e 	ldrh.w	r2, [r4, #94]	@ 0x5e
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
9000d1cc:	1a6d      	subs	r5, r5, r1
      if ((huart->RxXferCount > 0U)
9000d1ce:	b292      	uxth	r2, r2
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
9000d1d0:	b2a9      	uxth	r1, r5
          && (nb_rx_data > 0U))
9000d1d2:	2900      	cmp	r1, #0
9000d1d4:	f43f ae9e 	beq.w	9000cf14 <HAL_UART_IRQHandler+0x70>
9000d1d8:	2a00      	cmp	r2, #0
9000d1da:	f43f ae9b 	beq.w	9000cf14 <HAL_UART_IRQHandler+0x70>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d1de:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000d1e2:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d1e6:	e843 2000 	strex	r0, r2, [r3]
9000d1ea:	2800      	cmp	r0, #0
9000d1ec:	d1f7      	bne.n	9000d1de <HAL_UART_IRQHandler+0x33a>
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000d1ee:	4d11      	ldr	r5, [pc, #68]	@ (9000d234 <HAL_UART_IRQHandler+0x390>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d1f0:	f103 0208 	add.w	r2, r3, #8
9000d1f4:	e852 2f00 	ldrex	r2, [r2]
9000d1f8:	402a      	ands	r2, r5
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d1fa:	f103 0608 	add.w	r6, r3, #8
9000d1fe:	e846 2000 	strex	r0, r2, [r6]
9000d202:	2800      	cmp	r0, #0
9000d204:	d1f4      	bne.n	9000d1f0 <HAL_UART_IRQHandler+0x34c>
        huart->RxState = HAL_UART_STATE_READY;
9000d206:	2220      	movs	r2, #32
        huart->RxISR = NULL;
9000d208:	6760      	str	r0, [r4, #116]	@ 0x74
        huart->RxState = HAL_UART_STATE_READY;
9000d20a:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000d20e:	66e0      	str	r0, [r4, #108]	@ 0x6c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d210:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000d214:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d218:	e843 2000 	strex	r0, r2, [r3]
9000d21c:	2800      	cmp	r0, #0
9000d21e:	d1f7      	bne.n	9000d210 <HAL_UART_IRQHandler+0x36c>
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
9000d220:	2302      	movs	r3, #2
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
9000d222:	4620      	mov	r0, r4
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
9000d224:	6723      	str	r3, [r4, #112]	@ 0x70
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
9000d226:	f7ff fe3b 	bl	9000cea0 <HAL_UARTEx_RxEventCallback>
}
9000d22a:	bd70      	pop	{r4, r5, r6, pc}
9000d22c:	10000001 	.word	0x10000001
9000d230:	04000120 	.word	0x04000120
9000d234:	effffffe 	.word	0xeffffffe
9000d238:	9000cc9d 	.word	0x9000cc9d
        if (nb_remaining_rx_data == huart->RxXferSize)
9000d23c:	42a9      	cmp	r1, r5
9000d23e:	f47f ae69 	bne.w	9000cf14 <HAL_UART_IRQHandler+0x70>
          if (huart->hdmarx->Init.Mode == DMA_CIRCULAR)
9000d242:	69c3      	ldr	r3, [r0, #28]
9000d244:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
9000d248:	d0ea      	beq.n	9000d220 <HAL_UART_IRQHandler+0x37c>
}
9000d24a:	bd70      	pop	{r4, r5, r6, pc}

9000d24c <UART_RxISR_16BIT.part.0>:
/**
  * @brief RX interrupt handler for 7 or 8 bits data word length .
  * @param huart UART handle.
  * @retval None
  */
static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
9000d24c:	6803      	ldr	r3, [r0, #0]
9000d24e:	b510      	push	{r4, lr}
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d250:	e853 2f00 	ldrex	r2, [r3]
    huart->RxXferCount--;

    if (huart->RxXferCount == 0U)
    {
      /* Disable the UART Parity Error Interrupt and RXNE interrupts */
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000d254:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d258:	e843 2100 	strex	r1, r2, [r3]
9000d25c:	2900      	cmp	r1, #0
9000d25e:	d1f7      	bne.n	9000d250 <UART_RxISR_16BIT.part.0+0x4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d260:	f103 0208 	add.w	r2, r3, #8
9000d264:	e852 2f00 	ldrex	r2, [r2]

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
9000d268:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d26c:	f103 0408 	add.w	r4, r3, #8
9000d270:	e844 2100 	strex	r1, r2, [r4]
9000d274:	2900      	cmp	r1, #0
9000d276:	d1f3      	bne.n	9000d260 <UART_RxISR_16BIT.part.0+0x14>
      huart->RxISR = NULL;

      /* Initialize type of RxEvent to Transfer Complete */
      huart->RxEventType = HAL_UART_RXEVENT_TC;

      if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000d278:	4a1a      	ldr	r2, [pc, #104]	@ (9000d2e4 <UART_RxISR_16BIT.part.0+0x98>)
      huart->RxState = HAL_UART_STATE_READY;
9000d27a:	2420      	movs	r4, #32
      huart->RxISR = NULL;
9000d27c:	6741      	str	r1, [r0, #116]	@ 0x74
      if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000d27e:	4293      	cmp	r3, r2
      huart->RxState = HAL_UART_STATE_READY;
9000d280:	f8c0 408c 	str.w	r4, [r0, #140]	@ 0x8c
      huart->RxEventType = HAL_UART_RXEVENT_TC;
9000d284:	6701      	str	r1, [r0, #112]	@ 0x70
      if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000d286:	d002      	beq.n	9000d28e <UART_RxISR_16BIT.part.0+0x42>
      {
        /* Check that USART RTOEN bit is set */
        if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
9000d288:	685a      	ldr	r2, [r3, #4]
9000d28a:	0211      	lsls	r1, r2, #8
9000d28c:	d416      	bmi.n	9000d2bc <UART_RxISR_16BIT.part.0+0x70>
        }
      }

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000d28e:	6ec2      	ldr	r2, [r0, #108]	@ 0x6c
9000d290:	2a01      	cmp	r2, #1
9000d292:	d124      	bne.n	9000d2de <UART_RxISR_16BIT.part.0+0x92>
      {
        /* Set reception type to Standard */
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000d294:	2200      	movs	r2, #0
9000d296:	66c2      	str	r2, [r0, #108]	@ 0x6c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d298:	e853 2f00 	ldrex	r2, [r3]

        /* Disable IDLE interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000d29c:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d2a0:	e843 2100 	strex	r1, r2, [r3]
9000d2a4:	2900      	cmp	r1, #0
9000d2a6:	d1f7      	bne.n	9000d298 <UART_RxISR_16BIT.part.0+0x4c>

        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
9000d2a8:	69da      	ldr	r2, [r3, #28]
9000d2aa:	06d2      	lsls	r2, r2, #27
9000d2ac:	d501      	bpl.n	9000d2b2 <UART_RxISR_16BIT.part.0+0x66>
        {
          /* Clear IDLE Flag */
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
9000d2ae:	2210      	movs	r2, #16
9000d2b0:	621a      	str	r2, [r3, #32]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
9000d2b2:	f8b0 105c 	ldrh.w	r1, [r0, #92]	@ 0x5c
9000d2b6:	f7ff fdf3 	bl	9000cea0 <HAL_UARTEx_RxEventCallback>
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
9000d2ba:	bd10      	pop	{r4, pc}
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d2bc:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
9000d2c0:	f022 6280 	bic.w	r2, r2, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d2c4:	e843 2100 	strex	r1, r2, [r3]
9000d2c8:	2900      	cmp	r1, #0
9000d2ca:	d0e0      	beq.n	9000d28e <UART_RxISR_16BIT.part.0+0x42>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d2cc:	e853 2f00 	ldrex	r2, [r3]
9000d2d0:	f022 6280 	bic.w	r2, r2, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d2d4:	e843 2100 	strex	r1, r2, [r3]
9000d2d8:	2900      	cmp	r1, #0
9000d2da:	d1ef      	bne.n	9000d2bc <UART_RxISR_16BIT.part.0+0x70>
9000d2dc:	e7d7      	b.n	9000d28e <UART_RxISR_16BIT.part.0+0x42>
        HAL_UART_RxCpltCallback(huart);
9000d2de:	f7f6 fa95 	bl	9000380c <HAL_UART_RxCpltCallback>
}
9000d2e2:	bd10      	pop	{r4, pc}
9000d2e4:	58000c00 	.word	0x58000c00

9000d2e8 <UART_RxISR_16BIT>:
  *         interruptions have been enabled by HAL_UART_Receive_IT()
  * @param huart UART handle.
  * @retval None
  */
static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
{
9000d2e8:	b410      	push	{r4}
  uint16_t *tmp;
  uint16_t uhMask = huart->Mask;
  uint16_t  uhdata;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000d2ea:	f8d0 408c 	ldr.w	r4, [r0, #140]	@ 0x8c
  uint16_t uhMask = huart->Mask;
9000d2ee:	f8b0 1060 	ldrh.w	r1, [r0, #96]	@ 0x60
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000d2f2:	2c22      	cmp	r4, #34	@ 0x22
  {
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000d2f4:	6802      	ldr	r2, [r0, #0]
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000d2f6:	d006      	beq.n	9000d306 <UART_RxISR_16BIT+0x1e>
    }
  }
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
9000d2f8:	6993      	ldr	r3, [r2, #24]
9000d2fa:	f043 0308 	orr.w	r3, r3, #8
9000d2fe:	6193      	str	r3, [r2, #24]
  }
}
9000d300:	f85d 4b04 	ldr.w	r4, [sp], #4
9000d304:	4770      	bx	lr
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000d306:	6a52      	ldr	r2, [r2, #36]	@ 0x24
    *tmp = (uint16_t)(uhdata & uhMask);
9000d308:	6d84      	ldr	r4, [r0, #88]	@ 0x58
9000d30a:	4011      	ands	r1, r2
9000d30c:	f824 1b02 	strh.w	r1, [r4], #2
    huart->RxXferCount--;
9000d310:	f8b0 205e 	ldrh.w	r2, [r0, #94]	@ 0x5e
    huart->pRxBuffPtr += 2U;
9000d314:	6584      	str	r4, [r0, #88]	@ 0x58
    huart->RxXferCount--;
9000d316:	3a01      	subs	r2, #1
9000d318:	b292      	uxth	r2, r2
9000d31a:	f8a0 205e 	strh.w	r2, [r0, #94]	@ 0x5e
    if (huart->RxXferCount == 0U)
9000d31e:	f8b0 305e 	ldrh.w	r3, [r0, #94]	@ 0x5e
9000d322:	b29b      	uxth	r3, r3
9000d324:	2b00      	cmp	r3, #0
9000d326:	d1eb      	bne.n	9000d300 <UART_RxISR_16BIT+0x18>
}
9000d328:	f85d 4b04 	ldr.w	r4, [sp], #4
9000d32c:	f7ff bf8e 	b.w	9000d24c <UART_RxISR_16BIT.part.0>

9000d330 <UART_RxISR_8BIT>:
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000d330:	f8d0 108c 	ldr.w	r1, [r0, #140]	@ 0x8c
  uint16_t uhMask = huart->Mask;
9000d334:	f8b0 c060 	ldrh.w	ip, [r0, #96]	@ 0x60
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000d338:	2922      	cmp	r1, #34	@ 0x22
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000d33a:	6802      	ldr	r2, [r0, #0]
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000d33c:	d004      	beq.n	9000d348 <UART_RxISR_8BIT+0x18>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
9000d33e:	6993      	ldr	r3, [r2, #24]
9000d340:	f043 0308 	orr.w	r3, r3, #8
9000d344:	6193      	str	r3, [r2, #24]
}
9000d346:	4770      	bx	lr
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000d348:	6a52      	ldr	r2, [r2, #36]	@ 0x24
    *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
9000d34a:	6d81      	ldr	r1, [r0, #88]	@ 0x58
9000d34c:	ea02 020c 	and.w	r2, r2, ip
9000d350:	700a      	strb	r2, [r1, #0]
    huart->RxXferCount--;
9000d352:	f8b0 205e 	ldrh.w	r2, [r0, #94]	@ 0x5e
    huart->pRxBuffPtr++;
9000d356:	6d81      	ldr	r1, [r0, #88]	@ 0x58
    huart->RxXferCount--;
9000d358:	3a01      	subs	r2, #1
    huart->pRxBuffPtr++;
9000d35a:	3101      	adds	r1, #1
    huart->RxXferCount--;
9000d35c:	b292      	uxth	r2, r2
    huart->pRxBuffPtr++;
9000d35e:	6581      	str	r1, [r0, #88]	@ 0x58
    huart->RxXferCount--;
9000d360:	f8a0 205e 	strh.w	r2, [r0, #94]	@ 0x5e
    if (huart->RxXferCount == 0U)
9000d364:	f8b0 305e 	ldrh.w	r3, [r0, #94]	@ 0x5e
9000d368:	b29b      	uxth	r3, r3
9000d36a:	2b00      	cmp	r3, #0
9000d36c:	d1eb      	bne.n	9000d346 <UART_RxISR_8BIT+0x16>
9000d36e:	f7ff bf6d 	b.w	9000d24c <UART_RxISR_16BIT.part.0>
9000d372:	bf00      	nop

9000d374 <UART_RxISR_8BIT_FIFOEN>:
{
  uint16_t  uhMask = huart->Mask;
  uint16_t  uhdata;
  uint16_t  nb_rx_data;
  uint16_t  rxdatacount;
  uint32_t  isrflags = READ_REG(huart->Instance->ISR);
9000d374:	6803      	ldr	r3, [r0, #0]
{
9000d376:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  uint32_t  isrflags = READ_REG(huart->Instance->ISR);
9000d37a:	69dd      	ldr	r5, [r3, #28]
  uint32_t  cr1its   = READ_REG(huart->Instance->CR1);
9000d37c:	6819      	ldr	r1, [r3, #0]
  uint32_t  cr3its   = READ_REG(huart->Instance->CR3);
9000d37e:	689f      	ldr	r7, [r3, #8]

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000d380:	f8d0 208c 	ldr.w	r2, [r0, #140]	@ 0x8c
  uint16_t  uhMask = huart->Mask;
9000d384:	f8b0 9060 	ldrh.w	r9, [r0, #96]	@ 0x60
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000d388:	2a22      	cmp	r2, #34	@ 0x22
9000d38a:	d005      	beq.n	9000d398 <UART_RxISR_8BIT_FIFOEN+0x24>
    }
  }
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
9000d38c:	699a      	ldr	r2, [r3, #24]
9000d38e:	f042 0208 	orr.w	r2, r2, #8
9000d392:	619a      	str	r2, [r3, #24]
  }
}
9000d394:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
9000d398:	f8b0 3068 	ldrh.w	r3, [r0, #104]	@ 0x68
9000d39c:	4604      	mov	r4, r0
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000d39e:	f401 7a80 	and.w	sl, r1, #256	@ 0x100
        if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000d3a2:	f007 0701 	and.w	r7, r7, #1
9000d3a6:	2b00      	cmp	r3, #0
9000d3a8:	f000 80d8 	beq.w	9000d55c <UART_RxISR_8BIT_FIFOEN+0x1e8>
9000d3ac:	2f00      	cmp	r7, #0
9000d3ae:	f000 80a3 	beq.w	9000d4f8 <UART_RxISR_8BIT_FIFOEN+0x184>
          huart->ErrorCode = HAL_UART_ERROR_NONE;
9000d3b2:	2600      	movs	r6, #0
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
9000d3b4:	2704      	movs	r7, #4
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
9000d3b6:	f04f 0802 	mov.w	r8, #2
9000d3ba:	e004      	b.n	9000d3c6 <UART_RxISR_8BIT_FIFOEN+0x52>
      if (huart->RxXferCount == 0U)
9000d3bc:	f8b4 305e 	ldrh.w	r3, [r4, #94]	@ 0x5e
9000d3c0:	b29b      	uxth	r3, r3
9000d3c2:	2b00      	cmp	r3, #0
9000d3c4:	d03e      	beq.n	9000d444 <UART_RxISR_8BIT_FIFOEN+0xd0>
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
9000d3c6:	06ab      	lsls	r3, r5, #26
9000d3c8:	d573      	bpl.n	9000d4b2 <UART_RxISR_8BIT_FIFOEN+0x13e>
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000d3ca:	6823      	ldr	r3, [r4, #0]
      *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
9000d3cc:	6da2      	ldr	r2, [r4, #88]	@ 0x58
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000d3ce:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
      *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
9000d3d0:	ea03 0309 	and.w	r3, r3, r9
9000d3d4:	7013      	strb	r3, [r2, #0]
      huart->RxXferCount--;
9000d3d6:	f8b4 205e 	ldrh.w	r2, [r4, #94]	@ 0x5e
      isrflags = READ_REG(huart->Instance->ISR);
9000d3da:	6823      	ldr	r3, [r4, #0]
      huart->RxXferCount--;
9000d3dc:	3a01      	subs	r2, #1
      huart->pRxBuffPtr++;
9000d3de:	6da1      	ldr	r1, [r4, #88]	@ 0x58
      huart->RxXferCount--;
9000d3e0:	b292      	uxth	r2, r2
      huart->pRxBuffPtr++;
9000d3e2:	3101      	adds	r1, #1
      huart->RxXferCount--;
9000d3e4:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
      isrflags = READ_REG(huart->Instance->ISR);
9000d3e8:	69dd      	ldr	r5, [r3, #28]
      huart->pRxBuffPtr++;
9000d3ea:	65a1      	str	r1, [r4, #88]	@ 0x58
      if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
9000d3ec:	0768      	lsls	r0, r5, #29
9000d3ee:	d0e5      	beq.n	9000d3bc <UART_RxISR_8BIT_FIFOEN+0x48>
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000d3f0:	07e9      	lsls	r1, r5, #31
9000d3f2:	d50a      	bpl.n	9000d40a <UART_RxISR_8BIT_FIFOEN+0x96>
9000d3f4:	f1ba 0f00 	cmp.w	sl, #0
9000d3f8:	d007      	beq.n	9000d40a <UART_RxISR_8BIT_FIFOEN+0x96>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
9000d3fa:	2201      	movs	r2, #1
9000d3fc:	621a      	str	r2, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_PE;
9000d3fe:	f8d4 2090 	ldr.w	r2, [r4, #144]	@ 0x90
9000d402:	f042 0201 	orr.w	r2, r2, #1
9000d406:	f8c4 2090 	str.w	r2, [r4, #144]	@ 0x90
        if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000d40a:	07aa      	lsls	r2, r5, #30
9000d40c:	d507      	bpl.n	9000d41e <UART_RxISR_8BIT_FIFOEN+0xaa>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
9000d40e:	f8c3 8020 	str.w	r8, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_FE;
9000d412:	f8d4 2090 	ldr.w	r2, [r4, #144]	@ 0x90
9000d416:	f042 0204 	orr.w	r2, r2, #4
9000d41a:	f8c4 2090 	str.w	r2, [r4, #144]	@ 0x90
        if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000d41e:	0768      	lsls	r0, r5, #29
9000d420:	d506      	bpl.n	9000d430 <UART_RxISR_8BIT_FIFOEN+0xbc>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
9000d422:	621f      	str	r7, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_NE;
9000d424:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
9000d428:	f043 0302 	orr.w	r3, r3, #2
9000d42c:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
        if (huart->ErrorCode != HAL_UART_ERROR_NONE)
9000d430:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
9000d434:	2b00      	cmp	r3, #0
9000d436:	d0c1      	beq.n	9000d3bc <UART_RxISR_8BIT_FIFOEN+0x48>
          HAL_UART_ErrorCallback(huart);
9000d438:	4620      	mov	r0, r4
9000d43a:	f7ff fc2d 	bl	9000cc98 <HAL_UART_ErrorCallback>
          huart->ErrorCode = HAL_UART_ERROR_NONE;
9000d43e:	f8c4 6090 	str.w	r6, [r4, #144]	@ 0x90
9000d442:	e7bb      	b.n	9000d3bc <UART_RxISR_8BIT_FIFOEN+0x48>
9000d444:	6823      	ldr	r3, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d446:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
9000d44a:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d44e:	e843 2100 	strex	r1, r2, [r3]
9000d452:	2900      	cmp	r1, #0
9000d454:	d1f7      	bne.n	9000d446 <UART_RxISR_8BIT_FIFOEN+0xd2>
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000d456:	484e      	ldr	r0, [pc, #312]	@ (9000d590 <UART_RxISR_8BIT_FIFOEN+0x21c>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d458:	f103 0208 	add.w	r2, r3, #8
9000d45c:	e852 2f00 	ldrex	r2, [r2]
9000d460:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d462:	f103 0508 	add.w	r5, r3, #8
9000d466:	e845 2100 	strex	r1, r2, [r5]
9000d46a:	2900      	cmp	r1, #0
9000d46c:	d1f4      	bne.n	9000d458 <UART_RxISR_8BIT_FIFOEN+0xe4>
        if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000d46e:	4a49      	ldr	r2, [pc, #292]	@ (9000d594 <UART_RxISR_8BIT_FIFOEN+0x220>)
        huart->RxState = HAL_UART_STATE_READY;
9000d470:	2020      	movs	r0, #32
        huart->RxISR = NULL;
9000d472:	6761      	str	r1, [r4, #116]	@ 0x74
        if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000d474:	4293      	cmp	r3, r2
        huart->RxState = HAL_UART_STATE_READY;
9000d476:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
        huart->RxEventType = HAL_UART_RXEVENT_TC;
9000d47a:	6721      	str	r1, [r4, #112]	@ 0x70
        if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000d47c:	d002      	beq.n	9000d484 <UART_RxISR_8BIT_FIFOEN+0x110>
          if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
9000d47e:	685a      	ldr	r2, [r3, #4]
9000d480:	0211      	lsls	r1, r2, #8
9000d482:	d46f      	bmi.n	9000d564 <UART_RxISR_8BIT_FIFOEN+0x1f0>
        if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000d484:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000d486:	2a01      	cmp	r2, #1
9000d488:	d17d      	bne.n	9000d586 <UART_RxISR_8BIT_FIFOEN+0x212>
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000d48a:	2200      	movs	r2, #0
9000d48c:	66e2      	str	r2, [r4, #108]	@ 0x6c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d48e:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000d492:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d496:	e843 2100 	strex	r1, r2, [r3]
9000d49a:	2900      	cmp	r1, #0
9000d49c:	d1f7      	bne.n	9000d48e <UART_RxISR_8BIT_FIFOEN+0x11a>
          if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
9000d49e:	69da      	ldr	r2, [r3, #28]
9000d4a0:	06d2      	lsls	r2, r2, #27
9000d4a2:	d501      	bpl.n	9000d4a8 <UART_RxISR_8BIT_FIFOEN+0x134>
            __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
9000d4a4:	2210      	movs	r2, #16
9000d4a6:	621a      	str	r2, [r3, #32]
          HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
9000d4a8:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
9000d4ac:	4620      	mov	r0, r4
9000d4ae:	f7ff fcf7 	bl	9000cea0 <HAL_UARTEx_RxEventCallback>
    rxdatacount = huart->RxXferCount;
9000d4b2:	f8b4 305e 	ldrh.w	r3, [r4, #94]	@ 0x5e
9000d4b6:	b29b      	uxth	r3, r3
    if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
9000d4b8:	2b00      	cmp	r3, #0
9000d4ba:	f43f af6b 	beq.w	9000d394 <UART_RxISR_8BIT_FIFOEN+0x20>
9000d4be:	f8b4 2068 	ldrh.w	r2, [r4, #104]	@ 0x68
9000d4c2:	429a      	cmp	r2, r3
9000d4c4:	f67f af66 	bls.w	9000d394 <UART_RxISR_8BIT_FIFOEN+0x20>
9000d4c8:	6823      	ldr	r3, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d4ca:	f103 0208 	add.w	r2, r3, #8
9000d4ce:	e852 2f00 	ldrex	r2, [r2]
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
9000d4d2:	f022 5280 	bic.w	r2, r2, #268435456	@ 0x10000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d4d6:	f103 0008 	add.w	r0, r3, #8
9000d4da:	e840 2100 	strex	r1, r2, [r0]
9000d4de:	2900      	cmp	r1, #0
9000d4e0:	d1f3      	bne.n	9000d4ca <UART_RxISR_8BIT_FIFOEN+0x156>
      huart->RxISR = UART_RxISR_8BIT;
9000d4e2:	4a2d      	ldr	r2, [pc, #180]	@ (9000d598 <UART_RxISR_8BIT_FIFOEN+0x224>)
9000d4e4:	6762      	str	r2, [r4, #116]	@ 0x74
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d4e6:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
9000d4ea:	f042 0220 	orr.w	r2, r2, #32
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d4ee:	e843 2100 	strex	r1, r2, [r3]
9000d4f2:	2900      	cmp	r1, #0
9000d4f4:	d1f7      	bne.n	9000d4e6 <UART_RxISR_8BIT_FIFOEN+0x172>
9000d4f6:	e74d      	b.n	9000d394 <UART_RxISR_8BIT_FIFOEN+0x20>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
9000d4f8:	2601      	movs	r6, #1
9000d4fa:	e004      	b.n	9000d506 <UART_RxISR_8BIT_FIFOEN+0x192>
      if (huart->RxXferCount == 0U)
9000d4fc:	f8b4 305e 	ldrh.w	r3, [r4, #94]	@ 0x5e
9000d500:	b29b      	uxth	r3, r3
9000d502:	2b00      	cmp	r3, #0
9000d504:	d09e      	beq.n	9000d444 <UART_RxISR_8BIT_FIFOEN+0xd0>
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
9000d506:	06a8      	lsls	r0, r5, #26
9000d508:	d5d3      	bpl.n	9000d4b2 <UART_RxISR_8BIT_FIFOEN+0x13e>
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000d50a:	6823      	ldr	r3, [r4, #0]
      *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
9000d50c:	6da2      	ldr	r2, [r4, #88]	@ 0x58
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000d50e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
      *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
9000d510:	ea03 0309 	and.w	r3, r3, r9
9000d514:	7013      	strb	r3, [r2, #0]
      huart->RxXferCount--;
9000d516:	f8b4 305e 	ldrh.w	r3, [r4, #94]	@ 0x5e
      huart->pRxBuffPtr++;
9000d51a:	6da2      	ldr	r2, [r4, #88]	@ 0x58
      huart->RxXferCount--;
9000d51c:	3b01      	subs	r3, #1
      huart->pRxBuffPtr++;
9000d51e:	3201      	adds	r2, #1
      huart->RxXferCount--;
9000d520:	b29b      	uxth	r3, r3
      huart->pRxBuffPtr++;
9000d522:	65a2      	str	r2, [r4, #88]	@ 0x58
      huart->RxXferCount--;
9000d524:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
      isrflags = READ_REG(huart->Instance->ISR);
9000d528:	6823      	ldr	r3, [r4, #0]
9000d52a:	69dd      	ldr	r5, [r3, #28]
      if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
9000d52c:	0769      	lsls	r1, r5, #29
9000d52e:	d0e5      	beq.n	9000d4fc <UART_RxISR_8BIT_FIFOEN+0x188>
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000d530:	07ea      	lsls	r2, r5, #31
9000d532:	d509      	bpl.n	9000d548 <UART_RxISR_8BIT_FIFOEN+0x1d4>
9000d534:	f1ba 0f00 	cmp.w	sl, #0
9000d538:	d006      	beq.n	9000d548 <UART_RxISR_8BIT_FIFOEN+0x1d4>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
9000d53a:	621e      	str	r6, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_PE;
9000d53c:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
9000d540:	f043 0301 	orr.w	r3, r3, #1
9000d544:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
        if (huart->ErrorCode != HAL_UART_ERROR_NONE)
9000d548:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
9000d54c:	2b00      	cmp	r3, #0
9000d54e:	d0d5      	beq.n	9000d4fc <UART_RxISR_8BIT_FIFOEN+0x188>
          HAL_UART_ErrorCallback(huart);
9000d550:	4620      	mov	r0, r4
9000d552:	f7ff fba1 	bl	9000cc98 <HAL_UART_ErrorCallback>
          huart->ErrorCode = HAL_UART_ERROR_NONE;
9000d556:	f8c4 7090 	str.w	r7, [r4, #144]	@ 0x90
9000d55a:	e7cf      	b.n	9000d4fc <UART_RxISR_8BIT_FIFOEN+0x188>
    rxdatacount = huart->RxXferCount;
9000d55c:	f8b0 305e 	ldrh.w	r3, [r0, #94]	@ 0x5e
}
9000d560:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d564:	e853 2f00 	ldrex	r2, [r3]
            ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
9000d568:	f022 6280 	bic.w	r2, r2, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d56c:	e843 2100 	strex	r1, r2, [r3]
9000d570:	2900      	cmp	r1, #0
9000d572:	d087      	beq.n	9000d484 <UART_RxISR_8BIT_FIFOEN+0x110>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d574:	e853 2f00 	ldrex	r2, [r3]
9000d578:	f022 6280 	bic.w	r2, r2, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d57c:	e843 2100 	strex	r1, r2, [r3]
9000d580:	2900      	cmp	r1, #0
9000d582:	d1ef      	bne.n	9000d564 <UART_RxISR_8BIT_FIFOEN+0x1f0>
9000d584:	e77e      	b.n	9000d484 <UART_RxISR_8BIT_FIFOEN+0x110>
          HAL_UART_RxCpltCallback(huart);
9000d586:	4620      	mov	r0, r4
9000d588:	f7f6 f940 	bl	9000380c <HAL_UART_RxCpltCallback>
9000d58c:	e791      	b.n	9000d4b2 <UART_RxISR_8BIT_FIFOEN+0x13e>
9000d58e:	bf00      	nop
9000d590:	effffffe 	.word	0xeffffffe
9000d594:	58000c00 	.word	0x58000c00
9000d598:	9000d331 	.word	0x9000d331

9000d59c <UART_RxISR_16BIT_FIFOEN>:
  uint16_t *tmp;
  uint16_t  uhMask = huart->Mask;
  uint16_t  uhdata;
  uint16_t  nb_rx_data;
  uint16_t  rxdatacount;
  uint32_t  isrflags = READ_REG(huart->Instance->ISR);
9000d59c:	6803      	ldr	r3, [r0, #0]
{
9000d59e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  uint32_t  isrflags = READ_REG(huart->Instance->ISR);
9000d5a2:	69dd      	ldr	r5, [r3, #28]
  uint32_t  cr1its   = READ_REG(huart->Instance->CR1);
9000d5a4:	6819      	ldr	r1, [r3, #0]
  uint32_t  cr3its   = READ_REG(huart->Instance->CR3);
9000d5a6:	689f      	ldr	r7, [r3, #8]

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000d5a8:	f8d0 208c 	ldr.w	r2, [r0, #140]	@ 0x8c
  uint16_t  uhMask = huart->Mask;
9000d5ac:	f8b0 9060 	ldrh.w	r9, [r0, #96]	@ 0x60
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
9000d5b0:	2a22      	cmp	r2, #34	@ 0x22
9000d5b2:	d005      	beq.n	9000d5c0 <UART_RxISR_16BIT_FIFOEN+0x24>
    }
  }
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
9000d5b4:	699a      	ldr	r2, [r3, #24]
9000d5b6:	f042 0208 	orr.w	r2, r2, #8
9000d5ba:	619a      	str	r2, [r3, #24]
  }
}
9000d5bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
9000d5c0:	f8b0 3068 	ldrh.w	r3, [r0, #104]	@ 0x68
9000d5c4:	4604      	mov	r4, r0
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000d5c6:	f401 7a80 	and.w	sl, r1, #256	@ 0x100
        if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000d5ca:	f007 0701 	and.w	r7, r7, #1
9000d5ce:	2b00      	cmp	r3, #0
9000d5d0:	f000 80d4 	beq.w	9000d77c <UART_RxISR_16BIT_FIFOEN+0x1e0>
9000d5d4:	2f00      	cmp	r7, #0
9000d5d6:	f000 80a1 	beq.w	9000d71c <UART_RxISR_16BIT_FIFOEN+0x180>
          huart->ErrorCode = HAL_UART_ERROR_NONE;
9000d5da:	2600      	movs	r6, #0
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
9000d5dc:	2704      	movs	r7, #4
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
9000d5de:	f04f 0802 	mov.w	r8, #2
9000d5e2:	e004      	b.n	9000d5ee <UART_RxISR_16BIT_FIFOEN+0x52>
      if (huart->RxXferCount == 0U)
9000d5e4:	f8b4 305e 	ldrh.w	r3, [r4, #94]	@ 0x5e
9000d5e8:	b29b      	uxth	r3, r3
9000d5ea:	2b00      	cmp	r3, #0
9000d5ec:	d03c      	beq.n	9000d668 <UART_RxISR_16BIT_FIFOEN+0xcc>
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
9000d5ee:	06ab      	lsls	r3, r5, #26
9000d5f0:	d571      	bpl.n	9000d6d6 <UART_RxISR_16BIT_FIFOEN+0x13a>
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000d5f2:	6823      	ldr	r3, [r4, #0]
      *tmp = (uint16_t)(uhdata & uhMask);
9000d5f4:	6da1      	ldr	r1, [r4, #88]	@ 0x58
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000d5f6:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
      *tmp = (uint16_t)(uhdata & uhMask);
9000d5f8:	ea09 0202 	and.w	r2, r9, r2
9000d5fc:	f821 2b02 	strh.w	r2, [r1], #2
      huart->RxXferCount--;
9000d600:	f8b4 205e 	ldrh.w	r2, [r4, #94]	@ 0x5e
      huart->pRxBuffPtr += 2U;
9000d604:	65a1      	str	r1, [r4, #88]	@ 0x58
      huart->RxXferCount--;
9000d606:	3a01      	subs	r2, #1
9000d608:	b292      	uxth	r2, r2
9000d60a:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
      isrflags = READ_REG(huart->Instance->ISR);
9000d60e:	69dd      	ldr	r5, [r3, #28]
      if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
9000d610:	0768      	lsls	r0, r5, #29
9000d612:	d0e7      	beq.n	9000d5e4 <UART_RxISR_16BIT_FIFOEN+0x48>
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000d614:	07e9      	lsls	r1, r5, #31
9000d616:	d50a      	bpl.n	9000d62e <UART_RxISR_16BIT_FIFOEN+0x92>
9000d618:	f1ba 0f00 	cmp.w	sl, #0
9000d61c:	d007      	beq.n	9000d62e <UART_RxISR_16BIT_FIFOEN+0x92>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
9000d61e:	2201      	movs	r2, #1
9000d620:	621a      	str	r2, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_PE;
9000d622:	f8d4 2090 	ldr.w	r2, [r4, #144]	@ 0x90
9000d626:	f042 0201 	orr.w	r2, r2, #1
9000d62a:	f8c4 2090 	str.w	r2, [r4, #144]	@ 0x90
        if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000d62e:	07aa      	lsls	r2, r5, #30
9000d630:	d507      	bpl.n	9000d642 <UART_RxISR_16BIT_FIFOEN+0xa6>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
9000d632:	f8c3 8020 	str.w	r8, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_FE;
9000d636:	f8d4 2090 	ldr.w	r2, [r4, #144]	@ 0x90
9000d63a:	f042 0204 	orr.w	r2, r2, #4
9000d63e:	f8c4 2090 	str.w	r2, [r4, #144]	@ 0x90
        if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
9000d642:	0768      	lsls	r0, r5, #29
9000d644:	d506      	bpl.n	9000d654 <UART_RxISR_16BIT_FIFOEN+0xb8>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
9000d646:	621f      	str	r7, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_NE;
9000d648:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
9000d64c:	f043 0302 	orr.w	r3, r3, #2
9000d650:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
        if (huart->ErrorCode != HAL_UART_ERROR_NONE)
9000d654:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
9000d658:	2b00      	cmp	r3, #0
9000d65a:	d0c3      	beq.n	9000d5e4 <UART_RxISR_16BIT_FIFOEN+0x48>
          HAL_UART_ErrorCallback(huart);
9000d65c:	4620      	mov	r0, r4
9000d65e:	f7ff fb1b 	bl	9000cc98 <HAL_UART_ErrorCallback>
          huart->ErrorCode = HAL_UART_ERROR_NONE;
9000d662:	f8c4 6090 	str.w	r6, [r4, #144]	@ 0x90
9000d666:	e7bd      	b.n	9000d5e4 <UART_RxISR_16BIT_FIFOEN+0x48>
9000d668:	6823      	ldr	r3, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d66a:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
9000d66e:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d672:	e843 2100 	strex	r1, r2, [r3]
9000d676:	2900      	cmp	r1, #0
9000d678:	d1f7      	bne.n	9000d66a <UART_RxISR_16BIT_FIFOEN+0xce>
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000d67a:	484d      	ldr	r0, [pc, #308]	@ (9000d7b0 <UART_RxISR_16BIT_FIFOEN+0x214>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d67c:	f103 0208 	add.w	r2, r3, #8
9000d680:	e852 2f00 	ldrex	r2, [r2]
9000d684:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d686:	f103 0508 	add.w	r5, r3, #8
9000d68a:	e845 2100 	strex	r1, r2, [r5]
9000d68e:	2900      	cmp	r1, #0
9000d690:	d1f4      	bne.n	9000d67c <UART_RxISR_16BIT_FIFOEN+0xe0>
        if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000d692:	4a48      	ldr	r2, [pc, #288]	@ (9000d7b4 <UART_RxISR_16BIT_FIFOEN+0x218>)
        huart->RxState = HAL_UART_STATE_READY;
9000d694:	2020      	movs	r0, #32
        huart->RxISR = NULL;
9000d696:	6761      	str	r1, [r4, #116]	@ 0x74
        if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000d698:	4293      	cmp	r3, r2
        huart->RxState = HAL_UART_STATE_READY;
9000d69a:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
        huart->RxEventType = HAL_UART_RXEVENT_TC;
9000d69e:	6721      	str	r1, [r4, #112]	@ 0x70
        if (!(IS_LPUART_INSTANCE(huart->Instance)))
9000d6a0:	d002      	beq.n	9000d6a8 <UART_RxISR_16BIT_FIFOEN+0x10c>
          if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
9000d6a2:	685a      	ldr	r2, [r3, #4]
9000d6a4:	0211      	lsls	r1, r2, #8
9000d6a6:	d46d      	bmi.n	9000d784 <UART_RxISR_16BIT_FIFOEN+0x1e8>
        if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000d6a8:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000d6aa:	2a01      	cmp	r2, #1
9000d6ac:	d17b      	bne.n	9000d7a6 <UART_RxISR_16BIT_FIFOEN+0x20a>
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000d6ae:	2200      	movs	r2, #0
9000d6b0:	66e2      	str	r2, [r4, #108]	@ 0x6c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d6b2:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000d6b6:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d6ba:	e843 2100 	strex	r1, r2, [r3]
9000d6be:	2900      	cmp	r1, #0
9000d6c0:	d1f7      	bne.n	9000d6b2 <UART_RxISR_16BIT_FIFOEN+0x116>
          if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
9000d6c2:	69da      	ldr	r2, [r3, #28]
9000d6c4:	06d2      	lsls	r2, r2, #27
9000d6c6:	d501      	bpl.n	9000d6cc <UART_RxISR_16BIT_FIFOEN+0x130>
            __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
9000d6c8:	2210      	movs	r2, #16
9000d6ca:	621a      	str	r2, [r3, #32]
          HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
9000d6cc:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
9000d6d0:	4620      	mov	r0, r4
9000d6d2:	f7ff fbe5 	bl	9000cea0 <HAL_UARTEx_RxEventCallback>
    rxdatacount = huart->RxXferCount;
9000d6d6:	f8b4 305e 	ldrh.w	r3, [r4, #94]	@ 0x5e
9000d6da:	b29b      	uxth	r3, r3
    if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
9000d6dc:	2b00      	cmp	r3, #0
9000d6de:	f43f af6d 	beq.w	9000d5bc <UART_RxISR_16BIT_FIFOEN+0x20>
9000d6e2:	f8b4 2068 	ldrh.w	r2, [r4, #104]	@ 0x68
9000d6e6:	429a      	cmp	r2, r3
9000d6e8:	f67f af68 	bls.w	9000d5bc <UART_RxISR_16BIT_FIFOEN+0x20>
9000d6ec:	6823      	ldr	r3, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d6ee:	f103 0208 	add.w	r2, r3, #8
9000d6f2:	e852 2f00 	ldrex	r2, [r2]
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
9000d6f6:	f022 5280 	bic.w	r2, r2, #268435456	@ 0x10000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d6fa:	f103 0008 	add.w	r0, r3, #8
9000d6fe:	e840 2100 	strex	r1, r2, [r0]
9000d702:	2900      	cmp	r1, #0
9000d704:	d1f3      	bne.n	9000d6ee <UART_RxISR_16BIT_FIFOEN+0x152>
      huart->RxISR = UART_RxISR_16BIT;
9000d706:	4a2c      	ldr	r2, [pc, #176]	@ (9000d7b8 <UART_RxISR_16BIT_FIFOEN+0x21c>)
9000d708:	6762      	str	r2, [r4, #116]	@ 0x74
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d70a:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
9000d70e:	f042 0220 	orr.w	r2, r2, #32
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d712:	e843 2100 	strex	r1, r2, [r3]
9000d716:	2900      	cmp	r1, #0
9000d718:	d1f7      	bne.n	9000d70a <UART_RxISR_16BIT_FIFOEN+0x16e>
9000d71a:	e74f      	b.n	9000d5bc <UART_RxISR_16BIT_FIFOEN+0x20>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
9000d71c:	2601      	movs	r6, #1
9000d71e:	e004      	b.n	9000d72a <UART_RxISR_16BIT_FIFOEN+0x18e>
      if (huart->RxXferCount == 0U)
9000d720:	f8b4 305e 	ldrh.w	r3, [r4, #94]	@ 0x5e
9000d724:	b29b      	uxth	r3, r3
9000d726:	2b00      	cmp	r3, #0
9000d728:	d09e      	beq.n	9000d668 <UART_RxISR_16BIT_FIFOEN+0xcc>
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
9000d72a:	06a8      	lsls	r0, r5, #26
9000d72c:	d5d3      	bpl.n	9000d6d6 <UART_RxISR_16BIT_FIFOEN+0x13a>
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000d72e:	6823      	ldr	r3, [r4, #0]
      *tmp = (uint16_t)(uhdata & uhMask);
9000d730:	6da2      	ldr	r2, [r4, #88]	@ 0x58
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
9000d732:	6a59      	ldr	r1, [r3, #36]	@ 0x24
      *tmp = (uint16_t)(uhdata & uhMask);
9000d734:	ea09 0101 	and.w	r1, r9, r1
9000d738:	f822 1b02 	strh.w	r1, [r2], #2
      huart->pRxBuffPtr += 2U;
9000d73c:	65a2      	str	r2, [r4, #88]	@ 0x58
      huart->RxXferCount--;
9000d73e:	f8b4 205e 	ldrh.w	r2, [r4, #94]	@ 0x5e
9000d742:	3a01      	subs	r2, #1
9000d744:	b292      	uxth	r2, r2
9000d746:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
      isrflags = READ_REG(huart->Instance->ISR);
9000d74a:	69dd      	ldr	r5, [r3, #28]
      if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
9000d74c:	0769      	lsls	r1, r5, #29
9000d74e:	d0e7      	beq.n	9000d720 <UART_RxISR_16BIT_FIFOEN+0x184>
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
9000d750:	07ea      	lsls	r2, r5, #31
9000d752:	d509      	bpl.n	9000d768 <UART_RxISR_16BIT_FIFOEN+0x1cc>
9000d754:	f1ba 0f00 	cmp.w	sl, #0
9000d758:	d006      	beq.n	9000d768 <UART_RxISR_16BIT_FIFOEN+0x1cc>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
9000d75a:	621e      	str	r6, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_PE;
9000d75c:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
9000d760:	f043 0301 	orr.w	r3, r3, #1
9000d764:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
        if (huart->ErrorCode != HAL_UART_ERROR_NONE)
9000d768:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
9000d76c:	2b00      	cmp	r3, #0
9000d76e:	d0d7      	beq.n	9000d720 <UART_RxISR_16BIT_FIFOEN+0x184>
          HAL_UART_ErrorCallback(huart);
9000d770:	4620      	mov	r0, r4
9000d772:	f7ff fa91 	bl	9000cc98 <HAL_UART_ErrorCallback>
          huart->ErrorCode = HAL_UART_ERROR_NONE;
9000d776:	f8c4 7090 	str.w	r7, [r4, #144]	@ 0x90
9000d77a:	e7d1      	b.n	9000d720 <UART_RxISR_16BIT_FIFOEN+0x184>
    rxdatacount = huart->RxXferCount;
9000d77c:	f8b0 305e 	ldrh.w	r3, [r0, #94]	@ 0x5e
}
9000d780:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d784:	e853 2f00 	ldrex	r2, [r3]
            ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
9000d788:	f022 6280 	bic.w	r2, r2, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d78c:	e843 2100 	strex	r1, r2, [r3]
9000d790:	2900      	cmp	r1, #0
9000d792:	d089      	beq.n	9000d6a8 <UART_RxISR_16BIT_FIFOEN+0x10c>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000d794:	e853 2f00 	ldrex	r2, [r3]
9000d798:	f022 6280 	bic.w	r2, r2, #67108864	@ 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000d79c:	e843 2100 	strex	r1, r2, [r3]
9000d7a0:	2900      	cmp	r1, #0
9000d7a2:	d1ef      	bne.n	9000d784 <UART_RxISR_16BIT_FIFOEN+0x1e8>
9000d7a4:	e780      	b.n	9000d6a8 <UART_RxISR_16BIT_FIFOEN+0x10c>
          HAL_UART_RxCpltCallback(huart);
9000d7a6:	4620      	mov	r0, r4
9000d7a8:	f7f6 f830 	bl	9000380c <HAL_UART_RxCpltCallback>
9000d7ac:	e793      	b.n	9000d6d6 <UART_RxISR_16BIT_FIFOEN+0x13a>
9000d7ae:	bf00      	nop
9000d7b0:	effffffe 	.word	0xeffffffe
9000d7b4:	58000c00 	.word	0x58000c00
9000d7b8:	9000d2e9 	.word	0x9000d2e9

9000d7bc <UART_SetConfig>:
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000d7bc:	6901      	ldr	r1, [r0, #16]
9000d7be:	6882      	ldr	r2, [r0, #8]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000d7c0:	6803      	ldr	r3, [r0, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000d7c2:	430a      	orrs	r2, r1
{
9000d7c4:	b570      	push	{r4, r5, r6, lr}
9000d7c6:	4604      	mov	r4, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000d7c8:	681d      	ldr	r5, [r3, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000d7ca:	69c0      	ldr	r0, [r0, #28]
{
9000d7cc:	b086      	sub	sp, #24
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000d7ce:	6961      	ldr	r1, [r4, #20]
9000d7d0:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000d7d2:	49a0      	ldr	r1, [pc, #640]	@ (9000da54 <UART_SetConfig+0x298>)
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000d7d4:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000d7d6:	4029      	ands	r1, r5
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
9000d7d8:	6a65      	ldr	r5, [r4, #36]	@ 0x24
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000d7da:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
9000d7dc:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000d7de:	601a      	str	r2, [r3, #0]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
9000d7e0:	685a      	ldr	r2, [r3, #4]
9000d7e2:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
9000d7e6:	430a      	orrs	r2, r1
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
9000d7e8:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
9000d7ea:	605a      	str	r2, [r3, #4]
  if (!(UART_INSTANCE_LOWPOWER(huart)))
9000d7ec:	4a9a      	ldr	r2, [pc, #616]	@ (9000da58 <UART_SetConfig+0x29c>)
9000d7ee:	4293      	cmp	r3, r2
9000d7f0:	f000 8119 	beq.w	9000da26 <UART_SetConfig+0x26a>
    tmpreg |= huart->Init.OneBitSampling;
9000d7f4:	6a22      	ldr	r2, [r4, #32]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000d7f6:	689e      	ldr	r6, [r3, #8]
    tmpreg |= huart->Init.OneBitSampling;
9000d7f8:	4311      	orrs	r1, r2
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000d7fa:	4a98      	ldr	r2, [pc, #608]	@ (9000da5c <UART_SetConfig+0x2a0>)
9000d7fc:	4032      	ands	r2, r6
9000d7fe:	4311      	orrs	r1, r2
9000d800:	6099      	str	r1, [r3, #8]
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
9000d802:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000d804:	f022 020f 	bic.w	r2, r2, #15
9000d808:	432a      	orrs	r2, r5
9000d80a:	62da      	str	r2, [r3, #44]	@ 0x2c
  UART_GETCLOCKSOURCE(huart, clocksource);
9000d80c:	4a94      	ldr	r2, [pc, #592]	@ (9000da60 <UART_SetConfig+0x2a4>)
9000d80e:	4293      	cmp	r3, r2
9000d810:	d028      	beq.n	9000d864 <UART_SetConfig+0xa8>
9000d812:	4a94      	ldr	r2, [pc, #592]	@ (9000da64 <UART_SetConfig+0x2a8>)
9000d814:	4293      	cmp	r3, r2
9000d816:	d01a      	beq.n	9000d84e <UART_SetConfig+0x92>
9000d818:	4a93      	ldr	r2, [pc, #588]	@ (9000da68 <UART_SetConfig+0x2ac>)
9000d81a:	4293      	cmp	r3, r2
9000d81c:	d017      	beq.n	9000d84e <UART_SetConfig+0x92>
9000d81e:	4a93      	ldr	r2, [pc, #588]	@ (9000da6c <UART_SetConfig+0x2b0>)
9000d820:	4293      	cmp	r3, r2
9000d822:	d014      	beq.n	9000d84e <UART_SetConfig+0x92>
9000d824:	4a92      	ldr	r2, [pc, #584]	@ (9000da70 <UART_SetConfig+0x2b4>)
9000d826:	4293      	cmp	r3, r2
9000d828:	d011      	beq.n	9000d84e <UART_SetConfig+0x92>
9000d82a:	4a92      	ldr	r2, [pc, #584]	@ (9000da74 <UART_SetConfig+0x2b8>)
9000d82c:	4293      	cmp	r3, r2
9000d82e:	d019      	beq.n	9000d864 <UART_SetConfig+0xa8>
9000d830:	4a91      	ldr	r2, [pc, #580]	@ (9000da78 <UART_SetConfig+0x2bc>)
9000d832:	4293      	cmp	r3, r2
9000d834:	d00b      	beq.n	9000d84e <UART_SetConfig+0x92>
9000d836:	4a91      	ldr	r2, [pc, #580]	@ (9000da7c <UART_SetConfig+0x2c0>)
9000d838:	4293      	cmp	r3, r2
9000d83a:	d008      	beq.n	9000d84e <UART_SetConfig+0x92>
        ret = HAL_ERROR;
9000d83c:	2001      	movs	r0, #1
  huart->RxISR = NULL;
9000d83e:	2300      	movs	r3, #0
  huart->NbRxDataToProcess = 1;
9000d840:	f04f 1201 	mov.w	r2, #65537	@ 0x10001
  huart->RxISR = NULL;
9000d844:	6763      	str	r3, [r4, #116]	@ 0x74
  huart->NbRxDataToProcess = 1;
9000d846:	66a2      	str	r2, [r4, #104]	@ 0x68
  huart->TxISR = NULL;
9000d848:	67a3      	str	r3, [r4, #120]	@ 0x78
}
9000d84a:	b006      	add	sp, #24
9000d84c:	bd70      	pop	{r4, r5, r6, pc}
  UART_GETCLOCKSOURCE(huart, clocksource);
9000d84e:	4b8c      	ldr	r3, [pc, #560]	@ (9000da80 <UART_SetConfig+0x2c4>)
9000d850:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000d852:	f003 0307 	and.w	r3, r3, #7
9000d856:	2b05      	cmp	r3, #5
9000d858:	d8f0      	bhi.n	9000d83c <UART_SetConfig+0x80>
9000d85a:	e8df f003 	tbb	[pc, r3]
9000d85e:	7e9e      	.short	0x7e9e
9000d860:	785f9189 	.word	0x785f9189
9000d864:	4b86      	ldr	r3, [pc, #536]	@ (9000da80 <UART_SetConfig+0x2c4>)
9000d866:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000d868:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000d86c:	2b28      	cmp	r3, #40	@ 0x28
9000d86e:	d8e5      	bhi.n	9000d83c <UART_SetConfig+0x80>
9000d870:	a201      	add	r2, pc, #4	@ (adr r2, 9000d878 <UART_SetConfig+0xbc>)
9000d872:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
9000d876:	bf00      	nop
9000d878:	9000d9f5 	.word	0x9000d9f5
9000d87c:	9000d83d 	.word	0x9000d83d
9000d880:	9000d83d 	.word	0x9000d83d
9000d884:	9000d83d 	.word	0x9000d83d
9000d888:	9000d83d 	.word	0x9000d83d
9000d88c:	9000d83d 	.word	0x9000d83d
9000d890:	9000d83d 	.word	0x9000d83d
9000d894:	9000d83d 	.word	0x9000d83d
9000d898:	9000d95b 	.word	0x9000d95b
9000d89c:	9000d83d 	.word	0x9000d83d
9000d8a0:	9000d83d 	.word	0x9000d83d
9000d8a4:	9000d83d 	.word	0x9000d83d
9000d8a8:	9000d83d 	.word	0x9000d83d
9000d8ac:	9000d83d 	.word	0x9000d83d
9000d8b0:	9000d83d 	.word	0x9000d83d
9000d8b4:	9000d83d 	.word	0x9000d83d
9000d8b8:	9000d971 	.word	0x9000d971
9000d8bc:	9000d83d 	.word	0x9000d83d
9000d8c0:	9000d83d 	.word	0x9000d83d
9000d8c4:	9000d83d 	.word	0x9000d83d
9000d8c8:	9000d83d 	.word	0x9000d83d
9000d8cc:	9000d83d 	.word	0x9000d83d
9000d8d0:	9000d83d 	.word	0x9000d83d
9000d8d4:	9000d83d 	.word	0x9000d83d
9000d8d8:	9000d981 	.word	0x9000d981
9000d8dc:	9000d83d 	.word	0x9000d83d
9000d8e0:	9000d83d 	.word	0x9000d83d
9000d8e4:	9000d83d 	.word	0x9000d83d
9000d8e8:	9000d83d 	.word	0x9000d83d
9000d8ec:	9000d83d 	.word	0x9000d83d
9000d8f0:	9000d83d 	.word	0x9000d83d
9000d8f4:	9000d83d 	.word	0x9000d83d
9000d8f8:	9000d91d 	.word	0x9000d91d
9000d8fc:	9000d83d 	.word	0x9000d83d
9000d900:	9000d83d 	.word	0x9000d83d
9000d904:	9000d83d 	.word	0x9000d83d
9000d908:	9000d83d 	.word	0x9000d83d
9000d90c:	9000d83d 	.word	0x9000d83d
9000d910:	9000d83d 	.word	0x9000d83d
9000d914:	9000d83d 	.word	0x9000d83d
9000d918:	9000d94f 	.word	0x9000d94f
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000d91c:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
        pclk = (uint32_t) CSI_VALUE;
9000d920:	4858      	ldr	r0, [pc, #352]	@ (9000da84 <UART_SetConfig+0x2c8>)
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000d922:	d047      	beq.n	9000d9b4 <UART_SetConfig+0x1f8>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000d924:	4a58      	ldr	r2, [pc, #352]	@ (9000da88 <UART_SetConfig+0x2cc>)
9000d926:	6863      	ldr	r3, [r4, #4]
9000d928:	f832 1015 	ldrh.w	r1, [r2, r5, lsl #1]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000d92c:	f64f 72ef 	movw	r2, #65519	@ 0xffef
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000d930:	fbb0 f0f1 	udiv	r0, r0, r1
9000d934:	eb00 0053 	add.w	r0, r0, r3, lsr #1
9000d938:	fbb0 f0f3 	udiv	r0, r0, r3
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000d93c:	f1a0 0310 	sub.w	r3, r0, #16
9000d940:	4293      	cmp	r3, r2
9000d942:	f63f af7b 	bhi.w	9000d83c <UART_SetConfig+0x80>
          huart->Instance->BRR = usartdiv;
9000d946:	6823      	ldr	r3, [r4, #0]
9000d948:	60d8      	str	r0, [r3, #12]
          pclk = (uint32_t) HSI_VALUE;
9000d94a:	2000      	movs	r0, #0
9000d94c:	e777      	b.n	9000d83e <UART_SetConfig+0x82>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000d94e:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000d952:	d02f      	beq.n	9000d9b4 <UART_SetConfig+0x1f8>
        pclk = (uint32_t) LSE_VALUE;
9000d954:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
9000d958:	e7e4      	b.n	9000d924 <UART_SetConfig+0x168>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000d95a:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000d95e:	d022      	beq.n	9000d9a6 <UART_SetConfig+0x1ea>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
9000d960:	4668      	mov	r0, sp
9000d962:	f7fe fc47 	bl	9000c1f4 <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
9000d966:	9801      	ldr	r0, [sp, #4]
    if (pclk != 0U)
9000d968:	2800      	cmp	r0, #0
9000d96a:	d0ee      	beq.n	9000d94a <UART_SetConfig+0x18e>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000d96c:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000d96e:	e7d9      	b.n	9000d924 <UART_SetConfig+0x168>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000d970:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000d974:	d04f      	beq.n	9000da16 <UART_SetConfig+0x25a>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
9000d976:	a803      	add	r0, sp, #12
9000d978:	f7fe fcd6 	bl	9000c328 <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
9000d97c:	9804      	ldr	r0, [sp, #16]
        break;
9000d97e:	e7f3      	b.n	9000d968 <UART_SetConfig+0x1ac>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000d980:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000d984:	d03c      	beq.n	9000da00 <UART_SetConfig+0x244>
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000d986:	4b3e      	ldr	r3, [pc, #248]	@ (9000da80 <UART_SetConfig+0x2c4>)
9000d988:	681a      	ldr	r2, [r3, #0]
9000d98a:	0691      	lsls	r1, r2, #26
9000d98c:	d52d      	bpl.n	9000d9ea <UART_SetConfig+0x22e>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
9000d98e:	681b      	ldr	r3, [r3, #0]
9000d990:	483e      	ldr	r0, [pc, #248]	@ (9000da8c <UART_SetConfig+0x2d0>)
9000d992:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000d996:	40d8      	lsrs	r0, r3
    if (pclk != 0U)
9000d998:	e7c4      	b.n	9000d924 <UART_SetConfig+0x168>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000d99a:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000d99e:	d026      	beq.n	9000d9ee <UART_SetConfig+0x232>
        pclk = HAL_RCC_GetPCLK1Freq();
9000d9a0:	f7fd fb36 	bl	9000b010 <HAL_RCC_GetPCLK1Freq>
        break;
9000d9a4:	e7e0      	b.n	9000d968 <UART_SetConfig+0x1ac>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
9000d9a6:	4668      	mov	r0, sp
9000d9a8:	f7fe fc24 	bl	9000c1f4 <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
9000d9ac:	9801      	ldr	r0, [sp, #4]
    if (pclk != 0U)
9000d9ae:	2800      	cmp	r0, #0
9000d9b0:	d0cb      	beq.n	9000d94a <UART_SetConfig+0x18e>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000d9b2:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000d9b4:	4b34      	ldr	r3, [pc, #208]	@ (9000da88 <UART_SetConfig+0x2cc>)
9000d9b6:	6862      	ldr	r2, [r4, #4]
9000d9b8:	f833 1015 	ldrh.w	r1, [r3, r5, lsl #1]
9000d9bc:	0853      	lsrs	r3, r2, #1
9000d9be:	fbb0 f0f1 	udiv	r0, r0, r1
9000d9c2:	eb03 0340 	add.w	r3, r3, r0, lsl #1
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000d9c6:	f64f 71ef 	movw	r1, #65519	@ 0xffef
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000d9ca:	fbb3 f3f2 	udiv	r3, r3, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000d9ce:	f1a3 0210 	sub.w	r2, r3, #16
9000d9d2:	428a      	cmp	r2, r1
9000d9d4:	f63f af32 	bhi.w	9000d83c <UART_SetConfig+0x80>
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
9000d9d8:	f023 020f 	bic.w	r2, r3, #15
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
9000d9dc:	f3c3 0342 	ubfx	r3, r3, #1, #3
        huart->Instance->BRR = brrtemp;
9000d9e0:	6821      	ldr	r1, [r4, #0]
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
9000d9e2:	b292      	uxth	r2, r2
        huart->Instance->BRR = brrtemp;
9000d9e4:	4313      	orrs	r3, r2
9000d9e6:	60cb      	str	r3, [r1, #12]
9000d9e8:	e7af      	b.n	9000d94a <UART_SetConfig+0x18e>
          pclk = (uint32_t) HSI_VALUE;
9000d9ea:	4828      	ldr	r0, [pc, #160]	@ (9000da8c <UART_SetConfig+0x2d0>)
9000d9ec:	e79a      	b.n	9000d924 <UART_SetConfig+0x168>
        pclk = HAL_RCC_GetPCLK1Freq();
9000d9ee:	f7fd fb0f 	bl	9000b010 <HAL_RCC_GetPCLK1Freq>
        break;
9000d9f2:	e7dc      	b.n	9000d9ae <UART_SetConfig+0x1f2>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000d9f4:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000d9f8:	d012      	beq.n	9000da20 <UART_SetConfig+0x264>
        pclk = HAL_RCC_GetPCLK2Freq();
9000d9fa:	f7fd fb51 	bl	9000b0a0 <HAL_RCC_GetPCLK2Freq>
        break;
9000d9fe:	e7b3      	b.n	9000d968 <UART_SetConfig+0x1ac>
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000da00:	4b1f      	ldr	r3, [pc, #124]	@ (9000da80 <UART_SetConfig+0x2c4>)
9000da02:	681a      	ldr	r2, [r3, #0]
9000da04:	0690      	lsls	r0, r2, #26
9000da06:	f140 808b 	bpl.w	9000db20 <UART_SetConfig+0x364>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
9000da0a:	681b      	ldr	r3, [r3, #0]
9000da0c:	481f      	ldr	r0, [pc, #124]	@ (9000da8c <UART_SetConfig+0x2d0>)
9000da0e:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000da12:	40d8      	lsrs	r0, r3
    if (pclk != 0U)
9000da14:	e7ce      	b.n	9000d9b4 <UART_SetConfig+0x1f8>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
9000da16:	a803      	add	r0, sp, #12
9000da18:	f7fe fc86 	bl	9000c328 <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
9000da1c:	9804      	ldr	r0, [sp, #16]
        break;
9000da1e:	e7c6      	b.n	9000d9ae <UART_SetConfig+0x1f2>
        pclk = HAL_RCC_GetPCLK2Freq();
9000da20:	f7fd fb3e 	bl	9000b0a0 <HAL_RCC_GetPCLK2Freq>
        break;
9000da24:	e7c3      	b.n	9000d9ae <UART_SetConfig+0x1f2>
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000da26:	6898      	ldr	r0, [r3, #8]
9000da28:	4a0c      	ldr	r2, [pc, #48]	@ (9000da5c <UART_SetConfig+0x2a0>)
9000da2a:	4002      	ands	r2, r0
9000da2c:	430a      	orrs	r2, r1
  UART_GETCLOCKSOURCE(huart, clocksource);
9000da2e:	4914      	ldr	r1, [pc, #80]	@ (9000da80 <UART_SetConfig+0x2c4>)
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000da30:	609a      	str	r2, [r3, #8]
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
9000da32:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000da34:	f022 020f 	bic.w	r2, r2, #15
9000da38:	432a      	orrs	r2, r5
9000da3a:	62da      	str	r2, [r3, #44]	@ 0x2c
  UART_GETCLOCKSOURCE(huart, clocksource);
9000da3c:	6d8b      	ldr	r3, [r1, #88]	@ 0x58
9000da3e:	f003 0307 	and.w	r3, r3, #7
9000da42:	2b05      	cmp	r3, #5
9000da44:	f63f aefa 	bhi.w	9000d83c <UART_SetConfig+0x80>
9000da48:	e8df f003 	tbb	[pc, r3]
9000da4c:	224e575c 	.word	0x224e575c
9000da50:	5f62      	.short	0x5f62
9000da52:	bf00      	nop
9000da54:	cfff69f3 	.word	0xcfff69f3
9000da58:	58000c00 	.word	0x58000c00
9000da5c:	11fff4ff 	.word	0x11fff4ff
9000da60:	40011000 	.word	0x40011000
9000da64:	40004400 	.word	0x40004400
9000da68:	40004800 	.word	0x40004800
9000da6c:	40004c00 	.word	0x40004c00
9000da70:	40005000 	.word	0x40005000
9000da74:	40011400 	.word	0x40011400
9000da78:	40007800 	.word	0x40007800
9000da7c:	40007c00 	.word	0x40007c00
9000da80:	58024400 	.word	0x58024400
9000da84:	003d0900 	.word	0x003d0900
9000da88:	9002de5c 	.word	0x9002de5c
9000da8c:	03d09000 	.word	0x03d09000
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000da90:	4b24      	ldr	r3, [pc, #144]	@ (9000db24 <UART_SetConfig+0x368>)
9000da92:	681a      	ldr	r2, [r3, #0]
9000da94:	0692      	lsls	r2, r2, #26
9000da96:	d43d      	bmi.n	9000db14 <UART_SetConfig+0x358>
          pclk = (uint32_t) HSI_VALUE;
9000da98:	4823      	ldr	r0, [pc, #140]	@ (9000db28 <UART_SetConfig+0x36c>)
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000da9a:	4b24      	ldr	r3, [pc, #144]	@ (9000db2c <UART_SetConfig+0x370>)
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
9000da9c:	6866      	ldr	r6, [r4, #4]
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000da9e:	f833 2015 	ldrh.w	r2, [r3, r5, lsl #1]
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
9000daa2:	eb06 0146 	add.w	r1, r6, r6, lsl #1
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000daa6:	fbb0 f3f2 	udiv	r3, r0, r2
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
9000daaa:	4299      	cmp	r1, r3
9000daac:	f63f aec6 	bhi.w	9000d83c <UART_SetConfig+0x80>
9000dab0:	ebb3 3f06 	cmp.w	r3, r6, lsl #12
9000dab4:	f63f aec2 	bhi.w	9000d83c <UART_SetConfig+0x80>
        usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000dab8:	2300      	movs	r3, #0
9000daba:	4619      	mov	r1, r3
9000dabc:	f7f2 fe6c 	bl	90000798 <__aeabi_uldivmod>
9000dac0:	4632      	mov	r2, r6
9000dac2:	0209      	lsls	r1, r1, #8
9000dac4:	0203      	lsls	r3, r0, #8
9000dac6:	ea41 6110 	orr.w	r1, r1, r0, lsr #24
9000daca:	0870      	lsrs	r0, r6, #1
9000dacc:	1818      	adds	r0, r3, r0
9000dace:	f04f 0300 	mov.w	r3, #0
9000dad2:	f141 0100 	adc.w	r1, r1, #0
9000dad6:	f7f2 fe5f 	bl	90000798 <__aeabi_uldivmod>
        if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
9000dada:	4b15      	ldr	r3, [pc, #84]	@ (9000db30 <UART_SetConfig+0x374>)
9000dadc:	f5a0 7240 	sub.w	r2, r0, #768	@ 0x300
9000dae0:	429a      	cmp	r2, r3
9000dae2:	f63f aeab 	bhi.w	9000d83c <UART_SetConfig+0x80>
9000dae6:	e72e      	b.n	9000d946 <UART_SetConfig+0x18a>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
9000dae8:	a803      	add	r0, sp, #12
9000daea:	f7fe fc1d 	bl	9000c328 <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
9000daee:	9804      	ldr	r0, [sp, #16]
    if (pclk != 0U)
9000daf0:	2800      	cmp	r0, #0
9000daf2:	f43f af2a 	beq.w	9000d94a <UART_SetConfig+0x18e>
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000daf6:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000daf8:	e7cf      	b.n	9000da9a <UART_SetConfig+0x2de>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
9000dafa:	4668      	mov	r0, sp
9000dafc:	f7fe fb7a 	bl	9000c1f4 <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
9000db00:	9801      	ldr	r0, [sp, #4]
        break;
9000db02:	e7f5      	b.n	9000daf0 <UART_SetConfig+0x334>
        pclk = HAL_RCCEx_GetD3PCLK1Freq();
9000db04:	f7fe fb64 	bl	9000c1d0 <HAL_RCCEx_GetD3PCLK1Freq>
        break;
9000db08:	e7f2      	b.n	9000daf0 <UART_SetConfig+0x334>
        pclk = (uint32_t) LSE_VALUE;
9000db0a:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
9000db0e:	e7c4      	b.n	9000da9a <UART_SetConfig+0x2de>
        pclk = (uint32_t) CSI_VALUE;
9000db10:	4808      	ldr	r0, [pc, #32]	@ (9000db34 <UART_SetConfig+0x378>)
9000db12:	e7c2      	b.n	9000da9a <UART_SetConfig+0x2de>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
9000db14:	681b      	ldr	r3, [r3, #0]
9000db16:	4804      	ldr	r0, [pc, #16]	@ (9000db28 <UART_SetConfig+0x36c>)
9000db18:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000db1c:	40d8      	lsrs	r0, r3
    if (pclk != 0U)
9000db1e:	e7bc      	b.n	9000da9a <UART_SetConfig+0x2de>
          pclk = (uint32_t) HSI_VALUE;
9000db20:	4801      	ldr	r0, [pc, #4]	@ (9000db28 <UART_SetConfig+0x36c>)
9000db22:	e747      	b.n	9000d9b4 <UART_SetConfig+0x1f8>
9000db24:	58024400 	.word	0x58024400
9000db28:	03d09000 	.word	0x03d09000
9000db2c:	9002de5c 	.word	0x9002de5c
9000db30:	000ffcff 	.word	0x000ffcff
9000db34:	003d0900 	.word	0x003d0900

9000db38 <UART_AdvFeatureConfig>:
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
9000db38:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9000db3a:	071a      	lsls	r2, r3, #28
{
9000db3c:	b410      	push	{r4}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
9000db3e:	d506      	bpl.n	9000db4e <UART_AdvFeatureConfig+0x16>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
9000db40:	6801      	ldr	r1, [r0, #0]
9000db42:	6b84      	ldr	r4, [r0, #56]	@ 0x38
9000db44:	684a      	ldr	r2, [r1, #4]
9000db46:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
9000db4a:	4322      	orrs	r2, r4
9000db4c:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
9000db4e:	07dc      	lsls	r4, r3, #31
9000db50:	d506      	bpl.n	9000db60 <UART_AdvFeatureConfig+0x28>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
9000db52:	6801      	ldr	r1, [r0, #0]
9000db54:	6ac4      	ldr	r4, [r0, #44]	@ 0x2c
9000db56:	684a      	ldr	r2, [r1, #4]
9000db58:	f422 3200 	bic.w	r2, r2, #131072	@ 0x20000
9000db5c:	4322      	orrs	r2, r4
9000db5e:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
9000db60:	0799      	lsls	r1, r3, #30
9000db62:	d506      	bpl.n	9000db72 <UART_AdvFeatureConfig+0x3a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
9000db64:	6801      	ldr	r1, [r0, #0]
9000db66:	6b04      	ldr	r4, [r0, #48]	@ 0x30
9000db68:	684a      	ldr	r2, [r1, #4]
9000db6a:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
9000db6e:	4322      	orrs	r2, r4
9000db70:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
9000db72:	075a      	lsls	r2, r3, #29
9000db74:	d506      	bpl.n	9000db84 <UART_AdvFeatureConfig+0x4c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
9000db76:	6801      	ldr	r1, [r0, #0]
9000db78:	6b44      	ldr	r4, [r0, #52]	@ 0x34
9000db7a:	684a      	ldr	r2, [r1, #4]
9000db7c:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
9000db80:	4322      	orrs	r2, r4
9000db82:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
9000db84:	06dc      	lsls	r4, r3, #27
9000db86:	d506      	bpl.n	9000db96 <UART_AdvFeatureConfig+0x5e>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
9000db88:	6801      	ldr	r1, [r0, #0]
9000db8a:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
9000db8c:	688a      	ldr	r2, [r1, #8]
9000db8e:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
9000db92:	4322      	orrs	r2, r4
9000db94:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
9000db96:	0699      	lsls	r1, r3, #26
9000db98:	d506      	bpl.n	9000dba8 <UART_AdvFeatureConfig+0x70>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
9000db9a:	6801      	ldr	r1, [r0, #0]
9000db9c:	6c04      	ldr	r4, [r0, #64]	@ 0x40
9000db9e:	688a      	ldr	r2, [r1, #8]
9000dba0:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
9000dba4:	4322      	orrs	r2, r4
9000dba6:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
9000dba8:	065a      	lsls	r2, r3, #25
9000dbaa:	d50a      	bpl.n	9000dbc2 <UART_AdvFeatureConfig+0x8a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
9000dbac:	6801      	ldr	r1, [r0, #0]
9000dbae:	6c44      	ldr	r4, [r0, #68]	@ 0x44
9000dbb0:	684a      	ldr	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
9000dbb2:	f5b4 1f80 	cmp.w	r4, #1048576	@ 0x100000
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
9000dbb6:	f422 1280 	bic.w	r2, r2, #1048576	@ 0x100000
9000dbba:	ea42 0204 	orr.w	r2, r2, r4
9000dbbe:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
9000dbc0:	d00b      	beq.n	9000dbda <UART_AdvFeatureConfig+0xa2>
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
9000dbc2:	061b      	lsls	r3, r3, #24
9000dbc4:	d506      	bpl.n	9000dbd4 <UART_AdvFeatureConfig+0x9c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
9000dbc6:	6802      	ldr	r2, [r0, #0]
9000dbc8:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
9000dbca:	6853      	ldr	r3, [r2, #4]
9000dbcc:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
9000dbd0:	430b      	orrs	r3, r1
9000dbd2:	6053      	str	r3, [r2, #4]
}
9000dbd4:	f85d 4b04 	ldr.w	r4, [sp], #4
9000dbd8:	4770      	bx	lr
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
9000dbda:	684a      	ldr	r2, [r1, #4]
9000dbdc:	6c84      	ldr	r4, [r0, #72]	@ 0x48
9000dbde:	f422 02c0 	bic.w	r2, r2, #6291456	@ 0x600000
9000dbe2:	4322      	orrs	r2, r4
9000dbe4:	604a      	str	r2, [r1, #4]
9000dbe6:	e7ec      	b.n	9000dbc2 <UART_AdvFeatureConfig+0x8a>

9000dbe8 <UART_CheckIdleState>:
{
9000dbe8:	b538      	push	{r3, r4, r5, lr}
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9000dbea:	2300      	movs	r3, #0
{
9000dbec:	4604      	mov	r4, r0
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9000dbee:	f8c0 3090 	str.w	r3, [r0, #144]	@ 0x90
  tickstart = HAL_GetTick();
9000dbf2:	f7f8 fefb 	bl	900069ec <HAL_GetTick>
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
9000dbf6:	6822      	ldr	r2, [r4, #0]
  tickstart = HAL_GetTick();
9000dbf8:	4605      	mov	r5, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
9000dbfa:	6813      	ldr	r3, [r2, #0]
9000dbfc:	071b      	lsls	r3, r3, #28
9000dbfe:	d40f      	bmi.n	9000dc20 <UART_CheckIdleState+0x38>
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
9000dc00:	6813      	ldr	r3, [r2, #0]
9000dc02:	0759      	lsls	r1, r3, #29
9000dc04:	d431      	bmi.n	9000dc6a <UART_CheckIdleState+0x82>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000dc06:	2300      	movs	r3, #0
  huart->gState = HAL_UART_STATE_READY;
9000dc08:	2220      	movs	r2, #32
  return HAL_OK;
9000dc0a:	4618      	mov	r0, r3
  huart->gState = HAL_UART_STATE_READY;
9000dc0c:	f8c4 2088 	str.w	r2, [r4, #136]	@ 0x88
  huart->RxState = HAL_UART_STATE_READY;
9000dc10:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000dc14:	66e3      	str	r3, [r4, #108]	@ 0x6c
  huart->RxEventType = HAL_UART_RXEVENT_TC;
9000dc16:	6723      	str	r3, [r4, #112]	@ 0x70
      __HAL_UNLOCK(huart);
9000dc18:	2300      	movs	r3, #0
9000dc1a:	f884 3084 	strb.w	r3, [r4, #132]	@ 0x84
}
9000dc1e:	bd38      	pop	{r3, r4, r5, pc}
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000dc20:	69d3      	ldr	r3, [r2, #28]
9000dc22:	0298      	lsls	r0, r3, #10
9000dc24:	d4ec      	bmi.n	9000dc00 <UART_CheckIdleState+0x18>
9000dc26:	e00c      	b.n	9000dc42 <UART_CheckIdleState+0x5a>
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
9000dc28:	6819      	ldr	r1, [r3, #0]
9000dc2a:	461a      	mov	r2, r3
9000dc2c:	0749      	lsls	r1, r1, #29
9000dc2e:	d505      	bpl.n	9000dc3c <UART_CheckIdleState+0x54>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
9000dc30:	69d9      	ldr	r1, [r3, #28]
9000dc32:	0708      	lsls	r0, r1, #28
9000dc34:	d44a      	bmi.n	9000dccc <UART_CheckIdleState+0xe4>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
9000dc36:	69d9      	ldr	r1, [r3, #28]
9000dc38:	0509      	lsls	r1, r1, #20
9000dc3a:	d475      	bmi.n	9000dd28 <UART_CheckIdleState+0x140>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000dc3c:	69db      	ldr	r3, [r3, #28]
9000dc3e:	0298      	lsls	r0, r3, #10
9000dc40:	d4de      	bmi.n	9000dc00 <UART_CheckIdleState+0x18>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000dc42:	f7f8 fed3 	bl	900069ec <HAL_GetTick>
9000dc46:	1b43      	subs	r3, r0, r5
9000dc48:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
9000dc4c:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000dc4e:	d3eb      	bcc.n	9000dc28 <UART_CheckIdleState+0x40>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000dc50:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE));
9000dc54:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000dc58:	e843 2100 	strex	r1, r2, [r3]
9000dc5c:	2900      	cmp	r1, #0
9000dc5e:	d1f7      	bne.n	9000dc50 <UART_CheckIdleState+0x68>
      huart->gState = HAL_UART_STATE_READY;
9000dc60:	2320      	movs	r3, #32
9000dc62:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
      return HAL_TIMEOUT;
9000dc66:	2003      	movs	r0, #3
9000dc68:	e7d6      	b.n	9000dc18 <UART_CheckIdleState+0x30>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000dc6a:	69d3      	ldr	r3, [r2, #28]
9000dc6c:	025b      	lsls	r3, r3, #9
9000dc6e:	d4ca      	bmi.n	9000dc06 <UART_CheckIdleState+0x1e>
9000dc70:	e00d      	b.n	9000dc8e <UART_CheckIdleState+0xa6>
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
9000dc72:	681a      	ldr	r2, [r3, #0]
9000dc74:	0750      	lsls	r0, r2, #29
9000dc76:	d507      	bpl.n	9000dc88 <UART_CheckIdleState+0xa0>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
9000dc78:	69da      	ldr	r2, [r3, #28]
9000dc7a:	0711      	lsls	r1, r2, #28
9000dc7c:	f100 8082 	bmi.w	9000dd84 <UART_CheckIdleState+0x19c>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
9000dc80:	69da      	ldr	r2, [r3, #28]
9000dc82:	0512      	lsls	r2, r2, #20
9000dc84:	f100 80ac 	bmi.w	9000dde0 <UART_CheckIdleState+0x1f8>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000dc88:	69db      	ldr	r3, [r3, #28]
9000dc8a:	025b      	lsls	r3, r3, #9
9000dc8c:	d4bb      	bmi.n	9000dc06 <UART_CheckIdleState+0x1e>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000dc8e:	f7f8 fead 	bl	900069ec <HAL_GetTick>
9000dc92:	1b43      	subs	r3, r0, r5
9000dc94:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
9000dc98:	6823      	ldr	r3, [r4, #0]
9000dc9a:	d3ea      	bcc.n	9000dc72 <UART_CheckIdleState+0x8a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000dc9c:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000dca0:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000dca4:	e843 2100 	strex	r1, r2, [r3]
9000dca8:	2900      	cmp	r1, #0
9000dcaa:	d1f7      	bne.n	9000dc9c <UART_CheckIdleState+0xb4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000dcac:	f103 0208 	add.w	r2, r3, #8
9000dcb0:	e852 2f00 	ldrex	r2, [r2]
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
9000dcb4:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000dcb8:	f103 0008 	add.w	r0, r3, #8
9000dcbc:	e840 2100 	strex	r1, r2, [r0]
9000dcc0:	2900      	cmp	r1, #0
9000dcc2:	d1f3      	bne.n	9000dcac <UART_CheckIdleState+0xc4>
      huart->RxState = HAL_UART_STATE_READY;
9000dcc4:	2320      	movs	r3, #32
9000dcc6:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
      return HAL_TIMEOUT;
9000dcca:	e7cc      	b.n	9000dc66 <UART_CheckIdleState+0x7e>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
9000dccc:	2208      	movs	r2, #8
9000dcce:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000dcd0:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000dcd4:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000dcd8:	e843 2100 	strex	r1, r2, [r3]
9000dcdc:	2900      	cmp	r1, #0
9000dcde:	d1f7      	bne.n	9000dcd0 <UART_CheckIdleState+0xe8>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000dce0:	4856      	ldr	r0, [pc, #344]	@ (9000de3c <UART_CheckIdleState+0x254>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000dce2:	f103 0208 	add.w	r2, r3, #8
9000dce6:	e852 2f00 	ldrex	r2, [r2]
9000dcea:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000dcec:	f103 0508 	add.w	r5, r3, #8
9000dcf0:	e845 2100 	strex	r1, r2, [r5]
9000dcf4:	2900      	cmp	r1, #0
9000dcf6:	d1f4      	bne.n	9000dce2 <UART_CheckIdleState+0xfa>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000dcf8:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000dcfa:	2a01      	cmp	r2, #1
9000dcfc:	d00b      	beq.n	9000dd16 <UART_CheckIdleState+0x12e>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000dcfe:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9000dd00:	2020      	movs	r0, #32
          huart->ErrorCode = HAL_UART_ERROR_ORE;
9000dd02:	2108      	movs	r1, #8
  huart->RxState = HAL_UART_STATE_READY;
9000dd04:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
  huart->RxISR = NULL;
9000dd08:	6762      	str	r2, [r4, #116]	@ 0x74
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000dd0a:	66e2      	str	r2, [r4, #108]	@ 0x6c
          __HAL_UNLOCK(huart);
9000dd0c:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
          huart->ErrorCode = HAL_UART_ERROR_ORE;
9000dd10:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
          return HAL_ERROR;
9000dd14:	e79c      	b.n	9000dc50 <UART_CheckIdleState+0x68>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000dd16:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000dd1a:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000dd1e:	e843 2100 	strex	r1, r2, [r3]
9000dd22:	2900      	cmp	r1, #0
9000dd24:	d1f7      	bne.n	9000dd16 <UART_CheckIdleState+0x12e>
9000dd26:	e7ea      	b.n	9000dcfe <UART_CheckIdleState+0x116>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
9000dd28:	f44f 6200 	mov.w	r2, #2048	@ 0x800
9000dd2c:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000dd2e:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000dd32:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000dd36:	e843 2100 	strex	r1, r2, [r3]
9000dd3a:	2900      	cmp	r1, #0
9000dd3c:	d1f7      	bne.n	9000dd2e <UART_CheckIdleState+0x146>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000dd3e:	483f      	ldr	r0, [pc, #252]	@ (9000de3c <UART_CheckIdleState+0x254>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000dd40:	f103 0208 	add.w	r2, r3, #8
9000dd44:	e852 2f00 	ldrex	r2, [r2]
9000dd48:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000dd4a:	f103 0508 	add.w	r5, r3, #8
9000dd4e:	e845 2100 	strex	r1, r2, [r5]
9000dd52:	2900      	cmp	r1, #0
9000dd54:	d1f4      	bne.n	9000dd40 <UART_CheckIdleState+0x158>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000dd56:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000dd58:	2a01      	cmp	r2, #1
9000dd5a:	d00a      	beq.n	9000dd72 <UART_CheckIdleState+0x18a>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000dd5c:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9000dd5e:	2120      	movs	r1, #32
  huart->RxISR = NULL;
9000dd60:	6762      	str	r2, [r4, #116]	@ 0x74
  huart->RxState = HAL_UART_STATE_READY;
9000dd62:	f8c4 108c 	str.w	r1, [r4, #140]	@ 0x8c
          __HAL_UNLOCK(huart);
9000dd66:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000dd6a:	66e2      	str	r2, [r4, #108]	@ 0x6c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
9000dd6c:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
          return HAL_TIMEOUT;
9000dd70:	e76e      	b.n	9000dc50 <UART_CheckIdleState+0x68>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000dd72:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000dd76:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000dd7a:	e843 2100 	strex	r1, r2, [r3]
9000dd7e:	2900      	cmp	r1, #0
9000dd80:	d1f7      	bne.n	9000dd72 <UART_CheckIdleState+0x18a>
9000dd82:	e7eb      	b.n	9000dd5c <UART_CheckIdleState+0x174>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
9000dd84:	2208      	movs	r2, #8
9000dd86:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000dd88:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000dd8c:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000dd90:	e843 2100 	strex	r1, r2, [r3]
9000dd94:	2900      	cmp	r1, #0
9000dd96:	d1f7      	bne.n	9000dd88 <UART_CheckIdleState+0x1a0>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000dd98:	4828      	ldr	r0, [pc, #160]	@ (9000de3c <UART_CheckIdleState+0x254>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000dd9a:	f103 0208 	add.w	r2, r3, #8
9000dd9e:	e852 2f00 	ldrex	r2, [r2]
9000dda2:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000dda4:	f103 0508 	add.w	r5, r3, #8
9000dda8:	e845 2100 	strex	r1, r2, [r5]
9000ddac:	2900      	cmp	r1, #0
9000ddae:	d1f4      	bne.n	9000dd9a <UART_CheckIdleState+0x1b2>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000ddb0:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000ddb2:	2a01      	cmp	r2, #1
9000ddb4:	d00b      	beq.n	9000ddce <UART_CheckIdleState+0x1e6>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000ddb6:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9000ddb8:	2020      	movs	r0, #32
          huart->ErrorCode = HAL_UART_ERROR_ORE;
9000ddba:	2108      	movs	r1, #8
  huart->RxState = HAL_UART_STATE_READY;
9000ddbc:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
  huart->RxISR = NULL;
9000ddc0:	6762      	str	r2, [r4, #116]	@ 0x74
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000ddc2:	66e2      	str	r2, [r4, #108]	@ 0x6c
          __HAL_UNLOCK(huart);
9000ddc4:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
          huart->ErrorCode = HAL_UART_ERROR_ORE;
9000ddc8:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
          return HAL_ERROR;
9000ddcc:	e766      	b.n	9000dc9c <UART_CheckIdleState+0xb4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ddce:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000ddd2:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ddd6:	e843 2100 	strex	r1, r2, [r3]
9000ddda:	2900      	cmp	r1, #0
9000dddc:	d1f7      	bne.n	9000ddce <UART_CheckIdleState+0x1e6>
9000ddde:	e7ea      	b.n	9000ddb6 <UART_CheckIdleState+0x1ce>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
9000dde0:	f44f 6200 	mov.w	r2, #2048	@ 0x800
9000dde4:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000dde6:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000ddea:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ddee:	e843 2100 	strex	r1, r2, [r3]
9000ddf2:	2900      	cmp	r1, #0
9000ddf4:	d1f7      	bne.n	9000dde6 <UART_CheckIdleState+0x1fe>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000ddf6:	4811      	ldr	r0, [pc, #68]	@ (9000de3c <UART_CheckIdleState+0x254>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ddf8:	f103 0208 	add.w	r2, r3, #8
9000ddfc:	e852 2f00 	ldrex	r2, [r2]
9000de00:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000de02:	f103 0508 	add.w	r5, r3, #8
9000de06:	e845 2100 	strex	r1, r2, [r5]
9000de0a:	2900      	cmp	r1, #0
9000de0c:	d1f4      	bne.n	9000ddf8 <UART_CheckIdleState+0x210>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000de0e:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000de10:	2a01      	cmp	r2, #1
9000de12:	d00a      	beq.n	9000de2a <UART_CheckIdleState+0x242>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000de14:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9000de16:	2120      	movs	r1, #32
  huart->RxISR = NULL;
9000de18:	6762      	str	r2, [r4, #116]	@ 0x74
  huart->RxState = HAL_UART_STATE_READY;
9000de1a:	f8c4 108c 	str.w	r1, [r4, #140]	@ 0x8c
          __HAL_UNLOCK(huart);
9000de1e:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000de22:	66e2      	str	r2, [r4, #108]	@ 0x6c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
9000de24:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
          return HAL_TIMEOUT;
9000de28:	e738      	b.n	9000dc9c <UART_CheckIdleState+0xb4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000de2a:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000de2e:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000de32:	e843 2100 	strex	r1, r2, [r3]
9000de36:	2900      	cmp	r1, #0
9000de38:	d1f7      	bne.n	9000de2a <UART_CheckIdleState+0x242>
9000de3a:	e7eb      	b.n	9000de14 <UART_CheckIdleState+0x22c>
9000de3c:	effffffe 	.word	0xeffffffe

9000de40 <HAL_UART_Init>:
  if (huart == NULL)
9000de40:	b380      	cbz	r0, 9000dea4 <HAL_UART_Init+0x64>
  if (huart->gState == HAL_UART_STATE_RESET)
9000de42:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
{
9000de46:	b510      	push	{r4, lr}
9000de48:	4604      	mov	r4, r0
  if (huart->gState == HAL_UART_STATE_RESET)
9000de4a:	b333      	cbz	r3, 9000de9a <HAL_UART_Init+0x5a>
  __HAL_UART_DISABLE(huart);
9000de4c:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
9000de4e:	2324      	movs	r3, #36	@ 0x24
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
9000de50:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
  huart->gState = HAL_UART_STATE_BUSY;
9000de52:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
  __HAL_UART_DISABLE(huart);
9000de56:	6813      	ldr	r3, [r2, #0]
9000de58:	f023 0301 	bic.w	r3, r3, #1
9000de5c:	6013      	str	r3, [r2, #0]
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
9000de5e:	b9c1      	cbnz	r1, 9000de92 <HAL_UART_Init+0x52>
  if (UART_SetConfig(huart) == HAL_ERROR)
9000de60:	4620      	mov	r0, r4
9000de62:	f7ff fcab 	bl	9000d7bc <UART_SetConfig>
9000de66:	2801      	cmp	r0, #1
9000de68:	d011      	beq.n	9000de8e <HAL_UART_Init+0x4e>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
9000de6a:	6823      	ldr	r3, [r4, #0]
  return (UART_CheckIdleState(huart));
9000de6c:	4620      	mov	r0, r4
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
9000de6e:	685a      	ldr	r2, [r3, #4]
9000de70:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
9000de74:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
9000de76:	689a      	ldr	r2, [r3, #8]
9000de78:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
9000de7c:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
9000de7e:	681a      	ldr	r2, [r3, #0]
9000de80:	f042 0201 	orr.w	r2, r2, #1
}
9000de84:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  __HAL_UART_ENABLE(huart);
9000de88:	601a      	str	r2, [r3, #0]
  return (UART_CheckIdleState(huart));
9000de8a:	f7ff bead 	b.w	9000dbe8 <UART_CheckIdleState>
}
9000de8e:	2001      	movs	r0, #1
9000de90:	bd10      	pop	{r4, pc}
    UART_AdvFeatureConfig(huart);
9000de92:	4620      	mov	r0, r4
9000de94:	f7ff fe50 	bl	9000db38 <UART_AdvFeatureConfig>
9000de98:	e7e2      	b.n	9000de60 <HAL_UART_Init+0x20>
    huart->Lock = HAL_UNLOCKED;
9000de9a:	f880 3084 	strb.w	r3, [r0, #132]	@ 0x84
    HAL_UART_MspInit(huart);
9000de9e:	f7f6 fa89 	bl	900043b4 <HAL_UART_MspInit>
9000dea2:	e7d3      	b.n	9000de4c <HAL_UART_Init+0xc>
}
9000dea4:	2001      	movs	r0, #1
9000dea6:	4770      	bx	lr

9000dea8 <HAL_UARTEx_WakeupCallback>:
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UARTEx_WakeupCallback can be implemented in the user file.
   */
}
9000dea8:	4770      	bx	lr
9000deaa:	bf00      	nop

9000deac <HAL_UARTEx_RxFifoFullCallback>:
/**
  * @brief  UART RX Fifo full callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UARTEx_RxFifoFullCallback(UART_HandleTypeDef *huart)
9000deac:	4770      	bx	lr
9000deae:	bf00      	nop

9000deb0 <HAL_UARTEx_TxFifoEmptyCallback>:
/**
  * @brief  UART TX Fifo empty callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UARTEx_TxFifoEmptyCallback(UART_HandleTypeDef *huart)
9000deb0:	4770      	bx	lr
9000deb2:	bf00      	nop

9000deb4 <HAL_UARTEx_DisableFifoMode>:

  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));

  /* Process Locked */
  __HAL_LOCK(huart);
9000deb4:	f890 2084 	ldrb.w	r2, [r0, #132]	@ 0x84
9000deb8:	2a01      	cmp	r2, #1
9000deba:	d017      	beq.n	9000deec <HAL_UARTEx_DisableFifoMode+0x38>

  huart->gState = HAL_UART_STATE_BUSY;

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000debc:	6802      	ldr	r2, [r0, #0]
9000debe:	4603      	mov	r3, r0
  huart->gState = HAL_UART_STATE_BUSY;
9000dec0:	2024      	movs	r0, #36	@ 0x24
  /* Disable UART */
  __HAL_UART_DISABLE(huart);

  /* Disable FIFO mode */
  CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
  huart->FifoMode = UART_FIFOMODE_DISABLE;
9000dec2:	2100      	movs	r1, #0
{
9000dec4:	b430      	push	{r4, r5}
  huart->gState = HAL_UART_STATE_BUSY;
9000dec6:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88

  /* Restore UART configuration */
  WRITE_REG(huart->Instance->CR1, tmpcr1);

  huart->gState = HAL_UART_STATE_READY;
9000deca:	2520      	movs	r5, #32
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000decc:	6810      	ldr	r0, [r2, #0]
  __HAL_UART_DISABLE(huart);
9000dece:	6814      	ldr	r4, [r2, #0]
  CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
9000ded0:	f020 5000 	bic.w	r0, r0, #536870912	@ 0x20000000
  __HAL_UART_DISABLE(huart);
9000ded4:	f024 0401 	bic.w	r4, r4, #1
9000ded8:	6014      	str	r4, [r2, #0]
  huart->FifoMode = UART_FIFOMODE_DISABLE;
9000deda:	6659      	str	r1, [r3, #100]	@ 0x64
  WRITE_REG(huart->Instance->CR1, tmpcr1);
9000dedc:	6010      	str	r0, [r2, #0]

  /* Process Unlocked */
  __HAL_UNLOCK(huart);

  return HAL_OK;
9000dede:	4608      	mov	r0, r1
  huart->gState = HAL_UART_STATE_READY;
9000dee0:	f8c3 5088 	str.w	r5, [r3, #136]	@ 0x88
  __HAL_UNLOCK(huart);
9000dee4:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
}
9000dee8:	bc30      	pop	{r4, r5}
9000deea:	4770      	bx	lr
  __HAL_LOCK(huart);
9000deec:	2002      	movs	r0, #2
}
9000deee:	4770      	bx	lr

9000def0 <HAL_UARTEx_SetTxFifoThreshold>:
  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
  assert_param(IS_UART_TXFIFO_THRESHOLD(Threshold));

  /* Process Locked */
  __HAL_LOCK(huart);
9000def0:	f890 2084 	ldrb.w	r2, [r0, #132]	@ 0x84
9000def4:	2a01      	cmp	r2, #1
9000def6:	d037      	beq.n	9000df68 <HAL_UARTEx_SetTxFifoThreshold+0x78>

  huart->gState = HAL_UART_STATE_BUSY;

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000def8:	6802      	ldr	r2, [r0, #0]
9000defa:	4603      	mov	r3, r0
  huart->gState = HAL_UART_STATE_BUSY;
9000defc:	2024      	movs	r0, #36	@ 0x24
{
9000defe:	b530      	push	{r4, r5, lr}
  huart->gState = HAL_UART_STATE_BUSY;
9000df00:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000df04:	6814      	ldr	r4, [r2, #0]

  /* Disable UART */
  __HAL_UART_DISABLE(huart);
9000df06:	6810      	ldr	r0, [r2, #0]
9000df08:	f020 0001 	bic.w	r0, r0, #1
9000df0c:	6010      	str	r0, [r2, #0]

  /* Update TX threshold configuration */
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
9000df0e:	6890      	ldr	r0, [r2, #8]
9000df10:	f020 4060 	bic.w	r0, r0, #3758096384	@ 0xe0000000
9000df14:	4301      	orrs	r1, r0
  uint8_t rx_fifo_threshold;
  uint8_t tx_fifo_threshold;
  static const uint8_t numerator[] = {1U, 1U, 1U, 3U, 7U, 1U, 0U, 0U};
  static const uint8_t denominator[] = {8U, 4U, 2U, 4U, 8U, 1U, 1U, 1U};

  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
9000df16:	6e58      	ldr	r0, [r3, #100]	@ 0x64
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
9000df18:	6091      	str	r1, [r2, #8]
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
9000df1a:	b310      	cbz	r0, 9000df62 <HAL_UARTEx_SetTxFifoThreshold+0x72>
  }
  else
  {
    rx_fifo_depth = RX_FIFO_DEPTH;
    tx_fifo_depth = TX_FIFO_DEPTH;
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
9000df1c:	6891      	ldr	r1, [r2, #8]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
9000df1e:	6890      	ldr	r0, [r2, #8]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
                               (uint16_t)denominator[tx_fifo_threshold];
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000df20:	f3c1 6c42 	ubfx	ip, r1, #25, #3
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000df24:	4911      	ldr	r1, [pc, #68]	@ (9000df6c <HAL_UARTEx_SetTxFifoThreshold+0x7c>)
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
9000df26:	ea4f 7e50 	mov.w	lr, r0, lsr #29
                               (uint16_t)denominator[tx_fifo_threshold];
9000df2a:	4d11      	ldr	r5, [pc, #68]	@ (9000df70 <HAL_UARTEx_SetTxFifoThreshold+0x80>)
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000df2c:	f811 000e 	ldrb.w	r0, [r1, lr]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000df30:	f811 100c 	ldrb.w	r1, [r1, ip]
                               (uint16_t)denominator[tx_fifo_threshold];
9000df34:	f815 e00e 	ldrb.w	lr, [r5, lr]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000df38:	0100      	lsls	r0, r0, #4
                               (uint16_t)denominator[rx_fifo_threshold];
9000df3a:	f815 500c 	ldrb.w	r5, [r5, ip]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000df3e:	0109      	lsls	r1, r1, #4
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000df40:	fbb0 f0fe 	udiv	r0, r0, lr
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000df44:	fbb1 f1f5 	udiv	r1, r1, r5
9000df48:	f8a3 1068 	strh.w	r1, [r3, #104]	@ 0x68
  huart->gState = HAL_UART_STATE_READY;
9000df4c:	2520      	movs	r5, #32
  __HAL_UNLOCK(huart);
9000df4e:	2100      	movs	r1, #0
9000df50:	f8a3 006a 	strh.w	r0, [r3, #106]	@ 0x6a
  WRITE_REG(huart->Instance->CR1, tmpcr1);
9000df54:	6014      	str	r4, [r2, #0]
  return HAL_OK;
9000df56:	4608      	mov	r0, r1
  huart->gState = HAL_UART_STATE_READY;
9000df58:	f8c3 5088 	str.w	r5, [r3, #136]	@ 0x88
  __HAL_UNLOCK(huart);
9000df5c:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
}
9000df60:	bd30      	pop	{r4, r5, pc}
    huart->NbRxDataToProcess = 1U;
9000df62:	2101      	movs	r1, #1
    huart->NbTxDataToProcess = 1U;
9000df64:	4608      	mov	r0, r1
9000df66:	e7ef      	b.n	9000df48 <HAL_UARTEx_SetTxFifoThreshold+0x58>
  __HAL_LOCK(huart);
9000df68:	2002      	movs	r0, #2
}
9000df6a:	4770      	bx	lr
9000df6c:	9002de7c 	.word	0x9002de7c
9000df70:	9002de74 	.word	0x9002de74

9000df74 <HAL_UARTEx_SetRxFifoThreshold>:
  __HAL_LOCK(huart);
9000df74:	f890 2084 	ldrb.w	r2, [r0, #132]	@ 0x84
9000df78:	2a01      	cmp	r2, #1
9000df7a:	d037      	beq.n	9000dfec <HAL_UARTEx_SetRxFifoThreshold+0x78>
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000df7c:	6802      	ldr	r2, [r0, #0]
9000df7e:	4603      	mov	r3, r0
  huart->gState = HAL_UART_STATE_BUSY;
9000df80:	2024      	movs	r0, #36	@ 0x24
{
9000df82:	b530      	push	{r4, r5, lr}
  huart->gState = HAL_UART_STATE_BUSY;
9000df84:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000df88:	6814      	ldr	r4, [r2, #0]
  __HAL_UART_DISABLE(huart);
9000df8a:	6810      	ldr	r0, [r2, #0]
9000df8c:	f020 0001 	bic.w	r0, r0, #1
9000df90:	6010      	str	r0, [r2, #0]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
9000df92:	6890      	ldr	r0, [r2, #8]
9000df94:	f020 6060 	bic.w	r0, r0, #234881024	@ 0xe000000
9000df98:	4301      	orrs	r1, r0
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
9000df9a:	6e58      	ldr	r0, [r3, #100]	@ 0x64
  MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
9000df9c:	6091      	str	r1, [r2, #8]
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
9000df9e:	b310      	cbz	r0, 9000dfe6 <HAL_UARTEx_SetRxFifoThreshold+0x72>
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
9000dfa0:	6891      	ldr	r1, [r2, #8]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
9000dfa2:	6890      	ldr	r0, [r2, #8]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000dfa4:	f3c1 6c42 	ubfx	ip, r1, #25, #3
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000dfa8:	4911      	ldr	r1, [pc, #68]	@ (9000dff0 <HAL_UARTEx_SetRxFifoThreshold+0x7c>)
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
9000dfaa:	ea4f 7e50 	mov.w	lr, r0, lsr #29
                               (uint16_t)denominator[tx_fifo_threshold];
9000dfae:	4d11      	ldr	r5, [pc, #68]	@ (9000dff4 <HAL_UARTEx_SetRxFifoThreshold+0x80>)
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000dfb0:	f811 000e 	ldrb.w	r0, [r1, lr]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000dfb4:	f811 100c 	ldrb.w	r1, [r1, ip]
                               (uint16_t)denominator[tx_fifo_threshold];
9000dfb8:	f815 e00e 	ldrb.w	lr, [r5, lr]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000dfbc:	0100      	lsls	r0, r0, #4
                               (uint16_t)denominator[rx_fifo_threshold];
9000dfbe:	f815 500c 	ldrb.w	r5, [r5, ip]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000dfc2:	0109      	lsls	r1, r1, #4
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000dfc4:	fbb0 f0fe 	udiv	r0, r0, lr
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000dfc8:	fbb1 f1f5 	udiv	r1, r1, r5
9000dfcc:	f8a3 1068 	strh.w	r1, [r3, #104]	@ 0x68
  huart->gState = HAL_UART_STATE_READY;
9000dfd0:	2520      	movs	r5, #32
  __HAL_UNLOCK(huart);
9000dfd2:	2100      	movs	r1, #0
9000dfd4:	f8a3 006a 	strh.w	r0, [r3, #106]	@ 0x6a
  WRITE_REG(huart->Instance->CR1, tmpcr1);
9000dfd8:	6014      	str	r4, [r2, #0]
  return HAL_OK;
9000dfda:	4608      	mov	r0, r1
  huart->gState = HAL_UART_STATE_READY;
9000dfdc:	f8c3 5088 	str.w	r5, [r3, #136]	@ 0x88
  __HAL_UNLOCK(huart);
9000dfe0:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
}
9000dfe4:	bd30      	pop	{r4, r5, pc}
    huart->NbRxDataToProcess = 1U;
9000dfe6:	2101      	movs	r1, #1
    huart->NbTxDataToProcess = 1U;
9000dfe8:	4608      	mov	r0, r1
9000dfea:	e7ef      	b.n	9000dfcc <HAL_UARTEx_SetRxFifoThreshold+0x58>
  __HAL_LOCK(huart);
9000dfec:	2002      	movs	r0, #2
}
9000dfee:	4770      	bx	lr
9000dff0:	9002de7c 	.word	0x9002de7c
9000dff4:	9002de74 	.word	0x9002de74

9000dff8 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, const FMC_SDRAM_InitTypeDef *Init)
{
9000dff8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000dffc:	e9d1 3e07 	ldrd	r3, lr, [r1, #28]
9000e000:	e9d1 8200 	ldrd	r8, r2, [r1]
9000e004:	6a4f      	ldr	r7, [r1, #36]	@ 0x24
9000e006:	ea43 030e 	orr.w	r3, r3, lr
9000e00a:	e9d1 c602 	ldrd	ip, r6, [r1, #8]
9000e00e:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
9000e012:	6989      	ldr	r1, [r1, #24]
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000e014:	f1b8 0f00 	cmp.w	r8, #0
9000e018:	d10f      	bne.n	9000e03a <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000e01a:	433b      	orrs	r3, r7
9000e01c:	4313      	orrs	r3, r2
9000e01e:	6802      	ldr	r2, [r0, #0]
9000e020:	ea43 030c 	orr.w	r3, r3, ip
9000e024:	f36f 020e 	bfc	r2, #0, #15
9000e028:	4333      	orrs	r3, r6
9000e02a:	432b      	orrs	r3, r5
9000e02c:	4323      	orrs	r3, r4
9000e02e:	430b      	orrs	r3, r1
9000e030:	4313      	orrs	r3, r2
9000e032:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
9000e034:	2000      	movs	r0, #0
9000e036:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000e03a:	ea42 020c 	orr.w	r2, r2, ip
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000e03e:	433b      	orrs	r3, r7
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000e040:	4332      	orrs	r2, r6
9000e042:	432a      	orrs	r2, r5
9000e044:	4322      	orrs	r2, r4
9000e046:	430a      	orrs	r2, r1
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000e048:	6801      	ldr	r1, [r0, #0]
9000e04a:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
9000e04e:	430b      	orrs	r3, r1
9000e050:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000e052:	6843      	ldr	r3, [r0, #4]
9000e054:	f36f 030e 	bfc	r3, #0, #15
9000e058:	4313      	orrs	r3, r2
9000e05a:	6043      	str	r3, [r0, #4]
}
9000e05c:	2000      	movs	r0, #0
9000e05e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000e062:	bf00      	nop

9000e064 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        const FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
9000e064:	b5f0      	push	{r4, r5, r6, r7, lr}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000e066:	68cc      	ldr	r4, [r1, #12]
9000e068:	694b      	ldr	r3, [r1, #20]
9000e06a:	3c01      	subs	r4, #1
9000e06c:	688d      	ldr	r5, [r1, #8]
9000e06e:	698f      	ldr	r7, [r1, #24]
9000e070:	3b01      	subs	r3, #1
9000e072:	ea4f 3e04 	mov.w	lr, r4, lsl #12
9000e076:	684c      	ldr	r4, [r1, #4]
9000e078:	680e      	ldr	r6, [r1, #0]
9000e07a:	3d01      	subs	r5, #1
9000e07c:	3c01      	subs	r4, #1
9000e07e:	051b      	lsls	r3, r3, #20
9000e080:	022d      	lsls	r5, r5, #8
9000e082:	3e01      	subs	r6, #1
9000e084:	ea4f 1c04 	mov.w	ip, r4, lsl #4
9000e088:	690c      	ldr	r4, [r1, #16]
9000e08a:	1e79      	subs	r1, r7, #1
9000e08c:	3c01      	subs	r4, #1
9000e08e:	0609      	lsls	r1, r1, #24
9000e090:	0424      	lsls	r4, r4, #16
  if (Bank == FMC_SDRAM_BANK1)
9000e092:	b972      	cbnz	r2, 9000e0b2 <FMC_SDRAM_Timing_Init+0x4e>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000e094:	ea4e 0303 	orr.w	r3, lr, r3
9000e098:	6882      	ldr	r2, [r0, #8]
9000e09a:	4333      	orrs	r3, r6
9000e09c:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
9000e0a0:	ea43 030c 	orr.w	r3, r3, ip
9000e0a4:	432b      	orrs	r3, r5
9000e0a6:	4323      	orrs	r3, r4
9000e0a8:	430b      	orrs	r3, r1
9000e0aa:	4313      	orrs	r3, r2
9000e0ac:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
9000e0ae:	2000      	movs	r0, #0
9000e0b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000e0b2:	ea4e 0e03 	orr.w	lr, lr, r3
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000e0b6:	ea4c 0305 	orr.w	r3, ip, r5
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000e0ba:	4a08      	ldr	r2, [pc, #32]	@ (9000e0dc <FMC_SDRAM_Timing_Init+0x78>)
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000e0bc:	4333      	orrs	r3, r6
9000e0be:	4323      	orrs	r3, r4
9000e0c0:	430b      	orrs	r3, r1
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000e0c2:	6881      	ldr	r1, [r0, #8]
9000e0c4:	400a      	ands	r2, r1
9000e0c6:	ea4e 0202 	orr.w	r2, lr, r2
9000e0ca:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000e0cc:	68c2      	ldr	r2, [r0, #12]
9000e0ce:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
9000e0d2:	4313      	orrs	r3, r2
9000e0d4:	60c3      	str	r3, [r0, #12]
}
9000e0d6:	2000      	movs	r0, #0
9000e0d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000e0da:	bf00      	nop
9000e0dc:	ff0f0fff 	.word	0xff0f0fff

9000e0e0 <FMC_SDRAM_DeInit>:
  * @brief  DeInitializes the FMC_SDRAM peripheral
  * @param  Device Pointer to SDRAM device instance
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_DeInit(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
{
9000e0e0:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
  Device->SDTR[Bank] = 0x0FFFFFFFU;
  Device->SDCMR      = 0x00000000U;
9000e0e2:	2200      	movs	r2, #0
{
9000e0e4:	4603      	mov	r3, r0
  Device->SDCR[Bank] = 0x000002D0U;
9000e0e6:	f44f 7534 	mov.w	r5, #720	@ 0x2d0
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000e0ea:	f06f 4470 	mvn.w	r4, #4026531840	@ 0xf0000000
9000e0ee:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
  Device->SDCR[Bank] = 0x000002D0U;
9000e0f2:	f840 5021 	str.w	r5, [r0, r1, lsl #2]
  Device->SDRTR      = 0x00000000U;
  Device->SDSR       = 0x00000000U;

  return HAL_OK;
}
9000e0f6:	4610      	mov	r0, r2
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000e0f8:	f8cc 4008 	str.w	r4, [ip, #8]
  Device->SDCMR      = 0x00000000U;
9000e0fc:	611a      	str	r2, [r3, #16]
  Device->SDRTR      = 0x00000000U;
9000e0fe:	615a      	str	r2, [r3, #20]
  Device->SDSR       = 0x00000000U;
9000e100:	619a      	str	r2, [r3, #24]
}
9000e102:	bc30      	pop	{r4, r5}
9000e104:	4770      	bx	lr
9000e106:	bf00      	nop

9000e108 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        const FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
9000e108:	b410      	push	{r4}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000e10a:	e9d1 3400 	ldrd	r3, r4, [r1]
{
9000e10e:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000e110:	f8df c024 	ldr.w	ip, [pc, #36]	@ 9000e138 <FMC_SDRAM_SendCommand+0x30>
9000e114:	6900      	ldr	r0, [r0, #16]
9000e116:	4323      	orrs	r3, r4
9000e118:	e9d1 1402 	ldrd	r1, r4, [r1, #8]
9000e11c:	ea00 0c0c 	and.w	ip, r0, ip
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
9000e120:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000e122:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
9000e126:	3901      	subs	r1, #1
}
9000e128:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000e12c:	ea43 030c 	orr.w	r3, r3, ip
9000e130:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
9000e134:	6113      	str	r3, [r2, #16]
}
9000e136:	4770      	bx	lr
9000e138:	ffc00000 	.word	0xffc00000

9000e13c <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
9000e13c:	4602      	mov	r2, r0

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));

  return HAL_OK;
}
9000e13e:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000e140:	6953      	ldr	r3, [r2, #20]
9000e142:	f36f 034d 	bfc	r3, #1, #13
9000e146:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
9000e14a:	6153      	str	r3, [r2, #20]
}
9000e14c:	4770      	bx	lr
9000e14e:	bf00      	nop

9000e150 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
9000e150:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
9000e152:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e156:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
9000e158:	f002 fbec 	bl	90010934 <xTaskGetSchedulerState>
9000e15c:	2801      	cmp	r0, #1
9000e15e:	d100      	bne.n	9000e162 <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
9000e160:	bd08      	pop	{r3, pc}
9000e162:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
9000e166:	f000 bc75 	b.w	9000ea54 <xPortSysTickHandler>
9000e16a:	bf00      	nop

9000e16c <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
9000e16c:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000e170:	b92b      	cbnz	r3, 9000e17e <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
9000e172:	4b06      	ldr	r3, [pc, #24]	@ (9000e18c <osKernelInitialize+0x20>)
9000e174:	6818      	ldr	r0, [r3, #0]
9000e176:	b928      	cbnz	r0, 9000e184 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
9000e178:	2201      	movs	r2, #1
9000e17a:	601a      	str	r2, [r3, #0]
      stat = osOK;
9000e17c:	4770      	bx	lr
    stat = osErrorISR;
9000e17e:	f06f 0005 	mvn.w	r0, #5
9000e182:	4770      	bx	lr
    } else {
      stat = osError;
9000e184:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
9000e188:	4770      	bx	lr
9000e18a:	bf00      	nop
9000e18c:	24008b24 	.word	0x24008b24

9000e190 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
9000e190:	b510      	push	{r4, lr}
9000e192:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000e196:	b974      	cbnz	r4, 9000e1b6 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
9000e198:	4b08      	ldr	r3, [pc, #32]	@ (9000e1bc <osKernelStart+0x2c>)
9000e19a:	681a      	ldr	r2, [r3, #0]
9000e19c:	2a01      	cmp	r2, #1
9000e19e:	d107      	bne.n	9000e1b0 <osKernelStart+0x20>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000e1a0:	4907      	ldr	r1, [pc, #28]	@ (9000e1c0 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
9000e1a2:	2202      	movs	r2, #2
9000e1a4:	77cc      	strb	r4, [r1, #31]
9000e1a6:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
9000e1a8:	f002 f976 	bl	90010498 <vTaskStartScheduler>
      stat = osOK;
9000e1ac:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
9000e1ae:	bd10      	pop	{r4, pc}
      stat = osError;
9000e1b0:	f04f 30ff 	mov.w	r0, #4294967295
}
9000e1b4:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000e1b6:	f06f 0005 	mvn.w	r0, #5
}
9000e1ba:	bd10      	pop	{r4, pc}
9000e1bc:	24008b24 	.word	0x24008b24
9000e1c0:	e000ed00 	.word	0xe000ed00

9000e1c4 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000e1c4:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
9000e1c6:	2500      	movs	r5, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000e1c8:	b087      	sub	sp, #28
  hTask = NULL;
9000e1ca:	9505      	str	r5, [sp, #20]
9000e1cc:	f3ef 8305 	mrs	r3, IPSR

  if (!IS_IRQ() && (func != NULL)) {
9000e1d0:	b340      	cbz	r0, 9000e224 <osThreadNew+0x60>
9000e1d2:	bb3b      	cbnz	r3, 9000e224 <osThreadNew+0x60>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
9000e1d4:	4614      	mov	r4, r2
9000e1d6:	b1d2      	cbz	r2, 9000e20e <osThreadNew+0x4a>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
9000e1d8:	6996      	ldr	r6, [r2, #24]
9000e1da:	bb36      	cbnz	r6, 9000e22a <osThreadNew+0x66>
    prio  = (UBaseType_t)osPriorityNormal;
9000e1dc:	2618      	movs	r6, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000e1de:	6863      	ldr	r3, [r4, #4]
9000e1e0:	07db      	lsls	r3, r3, #31
9000e1e2:	d41f      	bmi.n	9000e224 <osThreadNew+0x60>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
9000e1e4:	6963      	ldr	r3, [r4, #20]
9000e1e6:	b323      	cbz	r3, 9000e232 <osThreadNew+0x6e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
9000e1e8:	089a      	lsrs	r2, r3, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000e1ea:	68a5      	ldr	r5, [r4, #8]
      if (attr->name != NULL) {
9000e1ec:	f8d4 c000 	ldr.w	ip, [r4]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000e1f0:	68e7      	ldr	r7, [r4, #12]
9000e1f2:	b305      	cbz	r5, 9000e236 <osThreadNew+0x72>
9000e1f4:	2fab      	cmp	r7, #171	@ 0xab
9000e1f6:	d915      	bls.n	9000e224 <osThreadNew+0x60>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
9000e1f8:	6924      	ldr	r4, [r4, #16]
9000e1fa:	b19c      	cbz	r4, 9000e224 <osThreadNew+0x60>
9000e1fc:	b193      	cbz	r3, 9000e224 <osThreadNew+0x60>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
9000e1fe:	460b      	mov	r3, r1
9000e200:	9600      	str	r6, [sp, #0]
9000e202:	4661      	mov	r1, ip
9000e204:	e9cd 4501 	strd	r4, r5, [sp, #4]
9000e208:	f002 f800 	bl	9001020c <xTaskCreateStatic>
9000e20c:	e00b      	b.n	9000e226 <osThreadNew+0x62>
9000e20e:	2280      	movs	r2, #128	@ 0x80
    prio  = (UBaseType_t)osPriorityNormal;
9000e210:	2618      	movs	r6, #24
      #endif
    }
    else {
      if (mem == 0) {
        #if (configSUPPORT_DYNAMIC_ALLOCATION == 1)
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000e212:	460b      	mov	r3, r1
9000e214:	4621      	mov	r1, r4
9000e216:	ac05      	add	r4, sp, #20
9000e218:	9600      	str	r6, [sp, #0]
9000e21a:	9401      	str	r4, [sp, #4]
9000e21c:	f002 f830 	bl	90010280 <xTaskCreate>
9000e220:	2801      	cmp	r0, #1
9000e222:	d010      	beq.n	9000e246 <osThreadNew+0x82>
        return (NULL);
9000e224:	2000      	movs	r0, #0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
9000e226:	b007      	add	sp, #28
9000e228:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000e22a:	1e72      	subs	r2, r6, #1
9000e22c:	2a37      	cmp	r2, #55	@ 0x37
9000e22e:	d9d6      	bls.n	9000e1de <osThreadNew+0x1a>
9000e230:	e7f8      	b.n	9000e224 <osThreadNew+0x60>
    stack = configMINIMAL_STACK_SIZE;
9000e232:	2280      	movs	r2, #128	@ 0x80
9000e234:	e7d9      	b.n	9000e1ea <osThreadNew+0x26>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
9000e236:	2f00      	cmp	r7, #0
9000e238:	d1f4      	bne.n	9000e224 <osThreadNew+0x60>
9000e23a:	6923      	ldr	r3, [r4, #16]
9000e23c:	2b00      	cmp	r3, #0
9000e23e:	d1f1      	bne.n	9000e224 <osThreadNew+0x60>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000e240:	b292      	uxth	r2, r2
9000e242:	4664      	mov	r4, ip
9000e244:	e7e5      	b.n	9000e212 <osThreadNew+0x4e>
  return ((osThreadId_t)hTask);
9000e246:	9805      	ldr	r0, [sp, #20]
9000e248:	e7ed      	b.n	9000e226 <osThreadNew+0x62>
9000e24a:	bf00      	nop

9000e24c <osThreadExit>:
}
#endif /* (configUSE_OS2_THREAD_SUSPEND_RESUME == 1) */

__NO_RETURN void osThreadExit (void) {
#ifndef USE_FreeRTOS_HEAP_1
  vTaskDelete (NULL);
9000e24c:	2000      	movs	r0, #0
__NO_RETURN void osThreadExit (void) {
9000e24e:	b508      	push	{r3, lr}
  vTaskDelete (NULL);
9000e250:	f002 f846 	bl	900102e0 <vTaskDelete>
#endif
  for (;;);
9000e254:	e7fe      	b.n	9000e254 <osThreadExit+0x8>
9000e256:	bf00      	nop

9000e258 <osDelay>:
9000e258:	f3ef 8205 	mrs	r2, IPSR
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000e25c:	b93a      	cbnz	r2, 9000e26e <osDelay+0x16>
osStatus_t osDelay (uint32_t ticks) {
9000e25e:	b508      	push	{r3, lr}
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
9000e260:	b908      	cbnz	r0, 9000e266 <osDelay+0xe>
    stat = osOK;
9000e262:	2000      	movs	r0, #0
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
9000e264:	bd08      	pop	{r3, pc}
      vTaskDelay(ticks);
9000e266:	f002 f8c1 	bl	900103ec <vTaskDelay>
    stat = osOK;
9000e26a:	2000      	movs	r0, #0
}
9000e26c:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
9000e26e:	f06f 0005 	mvn.w	r0, #5
}
9000e272:	4770      	bx	lr

9000e274 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
9000e274:	b5f0      	push	{r4, r5, r6, r7, lr}
9000e276:	b083      	sub	sp, #12
9000e278:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
9000e27c:	b98e      	cbnz	r6, 9000e2a2 <osSemaphoreNew+0x2e>
9000e27e:	4605      	mov	r5, r0
9000e280:	b178      	cbz	r0, 9000e2a2 <osSemaphoreNew+0x2e>
9000e282:	4288      	cmp	r0, r1
9000e284:	460f      	mov	r7, r1
9000e286:	d30c      	bcc.n	9000e2a2 <osSemaphoreNew+0x2e>
    mem = -1;

    if (attr != NULL) {
9000e288:	4614      	mov	r4, r2
9000e28a:	b172      	cbz	r2, 9000e2aa <osSemaphoreNew+0x36>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000e28c:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
9000e290:	b14a      	cbz	r2, 9000e2a6 <osSemaphoreNew+0x32>
9000e292:	2b4f      	cmp	r3, #79	@ 0x4f
9000e294:	d905      	bls.n	9000e2a2 <osSemaphoreNew+0x2e>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
9000e296:	2801      	cmp	r0, #1
9000e298:	d02e      	beq.n	9000e2f8 <osSemaphoreNew+0x84>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
9000e29a:	f000 fdbb 	bl	9000ee14 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
9000e29e:	4605      	mov	r5, r0
9000e2a0:	b96d      	cbnz	r5, 9000e2be <osSemaphoreNew+0x4a>
  hSemaphore = NULL;
9000e2a2:	2500      	movs	r5, #0
9000e2a4:	e010      	b.n	9000e2c8 <osSemaphoreNew+0x54>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000e2a6:	2b00      	cmp	r3, #0
9000e2a8:	d1fb      	bne.n	9000e2a2 <osSemaphoreNew+0x2e>
      if (max_count == 1U) {
9000e2aa:	2d01      	cmp	r5, #1
9000e2ac:	d00f      	beq.n	9000e2ce <osSemaphoreNew+0x5a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
9000e2ae:	4628      	mov	r0, r5
9000e2b0:	4639      	mov	r1, r7
9000e2b2:	f000 fe0f 	bl	9000eed4 <xQueueCreateCountingSemaphore>
9000e2b6:	4605      	mov	r5, r0
      if (hSemaphore != NULL) {
9000e2b8:	2d00      	cmp	r5, #0
9000e2ba:	d0f2      	beq.n	9000e2a2 <osSemaphoreNew+0x2e>
        if (attr != NULL) {
9000e2bc:	b104      	cbz	r4, 9000e2c0 <osSemaphoreNew+0x4c>
          name = attr->name;
9000e2be:	6824      	ldr	r4, [r4, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
9000e2c0:	4621      	mov	r1, r4
9000e2c2:	4628      	mov	r0, r5
9000e2c4:	f001 fc3a 	bl	9000fb3c <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
9000e2c8:	4628      	mov	r0, r5
9000e2ca:	b003      	add	sp, #12
9000e2cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
            hSemaphore = xSemaphoreCreateBinary();
9000e2ce:	4628      	mov	r0, r5
9000e2d0:	2203      	movs	r2, #3
9000e2d2:	2100      	movs	r1, #0
9000e2d4:	f000 fd5c 	bl	9000ed90 <xQueueGenericCreate>
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000e2d8:	4605      	mov	r5, r0
9000e2da:	2800      	cmp	r0, #0
9000e2dc:	d0ec      	beq.n	9000e2b8 <osSemaphoreNew+0x44>
9000e2de:	2f00      	cmp	r7, #0
9000e2e0:	d0ea      	beq.n	9000e2b8 <osSemaphoreNew+0x44>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000e2e2:	2300      	movs	r3, #0
9000e2e4:	461a      	mov	r2, r3
9000e2e6:	4619      	mov	r1, r3
9000e2e8:	f000 fe3a 	bl	9000ef60 <xQueueGenericSend>
9000e2ec:	2801      	cmp	r0, #1
9000e2ee:	d0e5      	beq.n	9000e2bc <osSemaphoreNew+0x48>
            vSemaphoreDelete (hSemaphore);
9000e2f0:	4628      	mov	r0, r5
9000e2f2:	f001 fbdd 	bl	9000fab0 <vQueueDelete>
      if (hSemaphore != NULL) {
9000e2f6:	e7d4      	b.n	9000e2a2 <osSemaphoreNew+0x2e>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
9000e2f8:	4613      	mov	r3, r2
9000e2fa:	2203      	movs	r2, #3
9000e2fc:	4631      	mov	r1, r6
9000e2fe:	9200      	str	r2, [sp, #0]
9000e300:	4632      	mov	r2, r6
9000e302:	f000 fcd9 	bl	9000ecb8 <xQueueGenericCreateStatic>
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000e306:	4605      	mov	r5, r0
9000e308:	2800      	cmp	r0, #0
9000e30a:	d0c9      	beq.n	9000e2a0 <osSemaphoreNew+0x2c>
9000e30c:	2f00      	cmp	r7, #0
9000e30e:	d0c7      	beq.n	9000e2a0 <osSemaphoreNew+0x2c>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000e310:	4633      	mov	r3, r6
9000e312:	4632      	mov	r2, r6
9000e314:	4631      	mov	r1, r6
9000e316:	f000 fe23 	bl	9000ef60 <xQueueGenericSend>
9000e31a:	2801      	cmp	r0, #1
9000e31c:	d0cf      	beq.n	9000e2be <osSemaphoreNew+0x4a>
9000e31e:	e7e7      	b.n	9000e2f0 <osSemaphoreNew+0x7c>

9000e320 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000e320:	b360      	cbz	r0, 9000e37c <osSemaphoreAcquire+0x5c>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
9000e322:	b510      	push	{r4, lr}
9000e324:	460c      	mov	r4, r1
9000e326:	b082      	sub	sp, #8
9000e328:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000e32c:	b1b3      	cbz	r3, 9000e35c <osSemaphoreAcquire+0x3c>
    if (timeout != 0U) {
9000e32e:	bb11      	cbnz	r1, 9000e376 <osSemaphoreAcquire+0x56>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000e330:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000e332:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000e334:	f001 fb60 	bl	9000f9f8 <xQueueReceiveFromISR>
9000e338:	2801      	cmp	r0, #1
9000e33a:	d118      	bne.n	9000e36e <osSemaphoreAcquire+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000e33c:	9b01      	ldr	r3, [sp, #4]
9000e33e:	b913      	cbnz	r3, 9000e346 <osSemaphoreAcquire+0x26>
  stat = osOK;
9000e340:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000e342:	b002      	add	sp, #8
9000e344:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
9000e346:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e34a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e34e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e352:	f3bf 8f4f 	dsb	sy
9000e356:	f3bf 8f6f 	isb	sy
9000e35a:	e7f1      	b.n	9000e340 <osSemaphoreAcquire+0x20>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
9000e35c:	f001 f9bc 	bl	9000f6d8 <xQueueSemaphoreTake>
9000e360:	2801      	cmp	r0, #1
9000e362:	d0ed      	beq.n	9000e340 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
9000e364:	b11c      	cbz	r4, 9000e36e <osSemaphoreAcquire+0x4e>
        stat = osErrorTimeout;
9000e366:	f06f 0001 	mvn.w	r0, #1
}
9000e36a:	b002      	add	sp, #8
9000e36c:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
9000e36e:	f06f 0002 	mvn.w	r0, #2
}
9000e372:	b002      	add	sp, #8
9000e374:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
9000e376:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000e37a:	e7e2      	b.n	9000e342 <osSemaphoreAcquire+0x22>
    stat = osErrorParameter;
9000e37c:	f06f 0003 	mvn.w	r0, #3
}
9000e380:	4770      	bx	lr
9000e382:	bf00      	nop

9000e384 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000e384:	b328      	cbz	r0, 9000e3d2 <osSemaphoreRelease+0x4e>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
9000e386:	b500      	push	{lr}
9000e388:	b083      	sub	sp, #12
9000e38a:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000e38e:	b19b      	cbz	r3, 9000e3b8 <osSemaphoreRelease+0x34>
    yield = pdFALSE;
9000e390:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000e392:	a901      	add	r1, sp, #4
    yield = pdFALSE;
9000e394:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000e396:	f000 ffcb 	bl	9000f330 <xQueueGiveFromISR>
9000e39a:	2801      	cmp	r0, #1
9000e39c:	d116      	bne.n	9000e3cc <osSemaphoreRelease+0x48>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
9000e39e:	9b01      	ldr	r3, [sp, #4]
9000e3a0:	b183      	cbz	r3, 9000e3c4 <osSemaphoreRelease+0x40>
9000e3a2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e3a6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e3aa:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e3ae:	f3bf 8f4f 	dsb	sy
9000e3b2:	f3bf 8f6f 	isb	sy
9000e3b6:	e005      	b.n	9000e3c4 <osSemaphoreRelease+0x40>
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000e3b8:	461a      	mov	r2, r3
9000e3ba:	4619      	mov	r1, r3
9000e3bc:	f000 fdd0 	bl	9000ef60 <xQueueGenericSend>
9000e3c0:	2801      	cmp	r0, #1
9000e3c2:	d103      	bne.n	9000e3cc <osSemaphoreRelease+0x48>
  stat = osOK;
9000e3c4:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
9000e3c6:	b003      	add	sp, #12
9000e3c8:	f85d fb04 	ldr.w	pc, [sp], #4
      stat = osErrorResource;
9000e3cc:	f06f 0002 	mvn.w	r0, #2
9000e3d0:	e7f9      	b.n	9000e3c6 <osSemaphoreRelease+0x42>
    stat = osErrorParameter;
9000e3d2:	f06f 0003 	mvn.w	r0, #3
}
9000e3d6:	4770      	bx	lr

9000e3d8 <osSemaphoreDelete>:
  }

  return (count);
}

osStatus_t osSemaphoreDelete (osSemaphoreId_t semaphore_id) {
9000e3d8:	b538      	push	{r3, r4, r5, lr}
9000e3da:	f3ef 8405 	mrs	r4, IPSR
  SemaphoreHandle_t hSemaphore = (SemaphoreHandle_t)semaphore_id;
  osStatus_t stat;

#ifndef USE_FreeRTOS_HEAP_1
  if (IS_IRQ()) {
9000e3de:	b944      	cbnz	r4, 9000e3f2 <osSemaphoreDelete+0x1a>
    stat = osErrorISR;
  }
  else if (hSemaphore == NULL) {
9000e3e0:	4605      	mov	r5, r0
9000e3e2:	b148      	cbz	r0, 9000e3f8 <osSemaphoreDelete+0x20>
    stat = osErrorParameter;
  }
  else {
    #if (configQUEUE_REGISTRY_SIZE > 0)
    vQueueUnregisterQueue (hSemaphore);
9000e3e4:	f001 fbd2 	bl	9000fb8c <vQueueUnregisterQueue>
    #endif

    stat = osOK;
    vSemaphoreDelete (hSemaphore);
9000e3e8:	4628      	mov	r0, r5
9000e3ea:	f001 fb61 	bl	9000fab0 <vQueueDelete>
    stat = osOK;
9000e3ee:	4620      	mov	r0, r4
#else
  stat = osError;
#endif

  return (stat);
}
9000e3f0:	bd38      	pop	{r3, r4, r5, pc}
    stat = osErrorISR;
9000e3f2:	f06f 0005 	mvn.w	r0, #5
}
9000e3f6:	bd38      	pop	{r3, r4, r5, pc}
    stat = osErrorParameter;
9000e3f8:	f06f 0003 	mvn.w	r0, #3
}
9000e3fc:	bd38      	pop	{r3, r4, r5, pc}
9000e3fe:	bf00      	nop

9000e400 <osMessageQueueNew>:

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
9000e400:	b5f0      	push	{r4, r5, r6, r7, lr}
9000e402:	b083      	sub	sp, #12
9000e404:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
9000e408:	b987      	cbnz	r7, 9000e42c <osMessageQueueNew+0x2c>
9000e40a:	4605      	mov	r5, r0
9000e40c:	b170      	cbz	r0, 9000e42c <osMessageQueueNew+0x2c>
9000e40e:	b169      	cbz	r1, 9000e42c <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
9000e410:	4614      	mov	r4, r2
9000e412:	b17a      	cbz	r2, 9000e434 <osMessageQueueNew+0x34>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000e414:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
9000e418:	b1c3      	cbz	r3, 9000e44c <osMessageQueueNew+0x4c>
9000e41a:	2a4f      	cmp	r2, #79	@ 0x4f
9000e41c:	d906      	bls.n	9000e42c <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000e41e:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000e420:	b122      	cbz	r2, 9000e42c <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000e422:	fb01 f505 	mul.w	r5, r1, r5
9000e426:	6966      	ldr	r6, [r4, #20]
9000e428:	42ae      	cmp	r6, r5
9000e42a:	d21e      	bcs.n	9000e46a <osMessageQueueNew+0x6a>
  hQueue = NULL;
9000e42c:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
9000e42e:	4628      	mov	r0, r5
9000e430:	b003      	add	sp, #12
9000e432:	bdf0      	pop	{r4, r5, r6, r7, pc}
          hQueue = xQueueCreate (msg_count, msg_size);
9000e434:	f000 fcac 	bl	9000ed90 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000e438:	4605      	mov	r5, r0
9000e43a:	2800      	cmp	r0, #0
9000e43c:	d0f6      	beq.n	9000e42c <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
9000e43e:	4628      	mov	r0, r5
9000e440:	4621      	mov	r1, r4
9000e442:	f001 fb7b 	bl	9000fb3c <vQueueAddToRegistry>
}
9000e446:	4628      	mov	r0, r5
9000e448:	b003      	add	sp, #12
9000e44a:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
9000e44c:	2a00      	cmp	r2, #0
9000e44e:	d1ed      	bne.n	9000e42c <osMessageQueueNew+0x2c>
9000e450:	6923      	ldr	r3, [r4, #16]
9000e452:	2b00      	cmp	r3, #0
9000e454:	d1ea      	bne.n	9000e42c <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
9000e456:	6962      	ldr	r2, [r4, #20]
9000e458:	2a00      	cmp	r2, #0
9000e45a:	d1e7      	bne.n	9000e42c <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
9000e45c:	f000 fc98 	bl	9000ed90 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000e460:	4605      	mov	r5, r0
9000e462:	2800      	cmp	r0, #0
9000e464:	d0e2      	beq.n	9000e42c <osMessageQueueNew+0x2c>
        name = attr->name;
9000e466:	6824      	ldr	r4, [r4, #0]
9000e468:	e7e9      	b.n	9000e43e <osMessageQueueNew+0x3e>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
9000e46a:	9700      	str	r7, [sp, #0]
9000e46c:	f000 fc24 	bl	9000ecb8 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
9000e470:	4605      	mov	r5, r0
9000e472:	2800      	cmp	r0, #0
9000e474:	d1f7      	bne.n	9000e466 <osMessageQueueNew+0x66>
9000e476:	e7d9      	b.n	9000e42c <osMessageQueueNew+0x2c>

9000e478 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
9000e478:	b560      	push	{r5, r6, lr}
9000e47a:	461e      	mov	r6, r3
9000e47c:	b083      	sub	sp, #12
9000e47e:	f3ef 8205 	mrs	r2, IPSR
  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000e482:	fab0 f580 	clz	r5, r0
9000e486:	fab1 f381 	clz	r3, r1
9000e48a:	096d      	lsrs	r5, r5, #5
9000e48c:	095b      	lsrs	r3, r3, #5
  if (IS_IRQ()) {
9000e48e:	b1da      	cbz	r2, 9000e4c8 <osMessageQueuePut+0x50>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000e490:	2e00      	cmp	r6, #0
9000e492:	bf18      	it	ne
9000e494:	f043 0301 	orrne.w	r3, r3, #1
9000e498:	bb33      	cbnz	r3, 9000e4e8 <osMessageQueuePut+0x70>
9000e49a:	bb2d      	cbnz	r5, 9000e4e8 <osMessageQueuePut+0x70>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000e49c:	462b      	mov	r3, r5
9000e49e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000e4a0:	9501      	str	r5, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000e4a2:	f000 fedf 	bl	9000f264 <xQueueGenericSendFromISR>
9000e4a6:	2801      	cmp	r0, #1
9000e4a8:	d11a      	bne.n	9000e4e0 <osMessageQueuePut+0x68>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000e4aa:	9b01      	ldr	r3, [sp, #4]
9000e4ac:	b14b      	cbz	r3, 9000e4c2 <osMessageQueuePut+0x4a>
9000e4ae:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e4b2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e4b6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e4ba:	f3bf 8f4f 	dsb	sy
9000e4be:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000e4c2:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000e4c4:	b003      	add	sp, #12
9000e4c6:	bd60      	pop	{r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000e4c8:	b975      	cbnz	r5, 9000e4e8 <osMessageQueuePut+0x70>
9000e4ca:	b96b      	cbnz	r3, 9000e4e8 <osMessageQueuePut+0x70>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000e4cc:	4632      	mov	r2, r6
9000e4ce:	f000 fd47 	bl	9000ef60 <xQueueGenericSend>
9000e4d2:	2801      	cmp	r0, #1
9000e4d4:	d0f5      	beq.n	9000e4c2 <osMessageQueuePut+0x4a>
        if (timeout != 0U) {
9000e4d6:	b11e      	cbz	r6, 9000e4e0 <osMessageQueuePut+0x68>
          stat = osErrorTimeout;
9000e4d8:	f06f 0001 	mvn.w	r0, #1
}
9000e4dc:	b003      	add	sp, #12
9000e4de:	bd60      	pop	{r5, r6, pc}
        stat = osErrorResource;
9000e4e0:	f06f 0002 	mvn.w	r0, #2
}
9000e4e4:	b003      	add	sp, #12
9000e4e6:	bd60      	pop	{r5, r6, pc}
      stat = osErrorParameter;
9000e4e8:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000e4ec:	e7ea      	b.n	9000e4c4 <osMessageQueuePut+0x4c>
9000e4ee:	bf00      	nop

9000e4f0 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
9000e4f0:	b570      	push	{r4, r5, r6, lr}
9000e4f2:	461e      	mov	r6, r3
9000e4f4:	b082      	sub	sp, #8
9000e4f6:	f3ef 8305 	mrs	r3, IPSR
  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000e4fa:	fab0 f580 	clz	r5, r0
9000e4fe:	fab1 f481 	clz	r4, r1
9000e502:	096d      	lsrs	r5, r5, #5
9000e504:	0964      	lsrs	r4, r4, #5
  if (IS_IRQ()) {
9000e506:	b1d3      	cbz	r3, 9000e53e <osMessageQueueGet+0x4e>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000e508:	2e00      	cmp	r6, #0
9000e50a:	bf18      	it	ne
9000e50c:	f044 0401 	orrne.w	r4, r4, #1
9000e510:	bb2c      	cbnz	r4, 9000e55e <osMessageQueueGet+0x6e>
9000e512:	bb25      	cbnz	r5, 9000e55e <osMessageQueueGet+0x6e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000e514:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000e516:	9501      	str	r5, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000e518:	f001 fa6e 	bl	9000f9f8 <xQueueReceiveFromISR>
9000e51c:	2801      	cmp	r0, #1
9000e51e:	d11a      	bne.n	9000e556 <osMessageQueueGet+0x66>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000e520:	9b01      	ldr	r3, [sp, #4]
9000e522:	b14b      	cbz	r3, 9000e538 <osMessageQueueGet+0x48>
9000e524:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e528:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e52c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e530:	f3bf 8f4f 	dsb	sy
9000e534:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000e538:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000e53a:	b002      	add	sp, #8
9000e53c:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000e53e:	b975      	cbnz	r5, 9000e55e <osMessageQueueGet+0x6e>
9000e540:	b96c      	cbnz	r4, 9000e55e <osMessageQueueGet+0x6e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000e542:	4632      	mov	r2, r6
9000e544:	f000 ff4a 	bl	9000f3dc <xQueueReceive>
9000e548:	2801      	cmp	r0, #1
9000e54a:	d0f5      	beq.n	9000e538 <osMessageQueueGet+0x48>
        if (timeout != 0U) {
9000e54c:	b11e      	cbz	r6, 9000e556 <osMessageQueueGet+0x66>
          stat = osErrorTimeout;
9000e54e:	f06f 0001 	mvn.w	r0, #1
}
9000e552:	b002      	add	sp, #8
9000e554:	bd70      	pop	{r4, r5, r6, pc}
        stat = osErrorResource;
9000e556:	f06f 0002 	mvn.w	r0, #2
}
9000e55a:	b002      	add	sp, #8
9000e55c:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
9000e55e:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000e562:	e7ea      	b.n	9000e53a <osMessageQueueGet+0x4a>

9000e564 <osMessageQueueDelete>:
  }

  return (stat);
}

osStatus_t osMessageQueueDelete (osMessageQueueId_t mq_id) {
9000e564:	b538      	push	{r3, r4, r5, lr}
9000e566:	f3ef 8405 	mrs	r4, IPSR
9000e56a:	b944      	cbnz	r4, 9000e57e <osMessageQueueDelete+0x1a>
9000e56c:	4605      	mov	r5, r0
9000e56e:	b148      	cbz	r0, 9000e584 <osMessageQueueDelete+0x20>
9000e570:	f001 fb0c 	bl	9000fb8c <vQueueUnregisterQueue>
9000e574:	4628      	mov	r0, r5
9000e576:	f001 fa9b 	bl	9000fab0 <vQueueDelete>
9000e57a:	4620      	mov	r0, r4
9000e57c:	bd38      	pop	{r3, r4, r5, pc}
9000e57e:	f06f 0005 	mvn.w	r0, #5
9000e582:	bd38      	pop	{r3, r4, r5, pc}
9000e584:	f06f 0003 	mvn.w	r0, #3
9000e588:	bd38      	pop	{r3, r4, r5, pc}
9000e58a:	bf00      	nop

9000e58c <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000e58c:	4b04      	ldr	r3, [pc, #16]	@ (9000e5a0 <vApplicationGetIdleTaskMemory+0x14>)
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
9000e58e:	b410      	push	{r4}
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000e590:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000e592:	2380      	movs	r3, #128	@ 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
9000e594:	4c03      	ldr	r4, [pc, #12]	@ (9000e5a4 <vApplicationGetIdleTaskMemory+0x18>)
9000e596:	600c      	str	r4, [r1, #0]
}
9000e598:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000e59c:	6013      	str	r3, [r2, #0]
}
9000e59e:	4770      	bx	lr
9000e5a0:	24008a78 	.word	0x24008a78
9000e5a4:	24008878 	.word	0x24008878

9000e5a8 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000e5a8:	4b05      	ldr	r3, [pc, #20]	@ (9000e5c0 <vApplicationGetTimerTaskMemory+0x18>)
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
9000e5aa:	b410      	push	{r4}
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000e5ac:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000e5ae:	f44f 7380 	mov.w	r3, #256	@ 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
9000e5b2:	4c04      	ldr	r4, [pc, #16]	@ (9000e5c4 <vApplicationGetTimerTaskMemory+0x1c>)
9000e5b4:	600c      	str	r4, [r1, #0]
}
9000e5b6:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000e5ba:	6013      	str	r3, [r2, #0]
}
9000e5bc:	4770      	bx	lr
9000e5be:	bf00      	nop
9000e5c0:	240087cc 	.word	0x240087cc
9000e5c4:	240083cc 	.word	0x240083cc

9000e5c8 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
9000e5c8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000e5cc:	4604      	mov	r4, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
9000e5ce:	f001 ffe7 	bl	900105a0 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
9000e5d2:	4a54      	ldr	r2, [pc, #336]	@ (9000e724 <pvPortMalloc+0x15c>)
9000e5d4:	6815      	ldr	r5, [r2, #0]
9000e5d6:	2d00      	cmp	r5, #0
9000e5d8:	d035      	beq.n	9000e646 <pvPortMalloc+0x7e>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
9000e5da:	4b53      	ldr	r3, [pc, #332]	@ (9000e728 <pvPortMalloc+0x160>)
9000e5dc:	681e      	ldr	r6, [r3, #0]
9000e5de:	4234      	tst	r4, r6
9000e5e0:	d12b      	bne.n	9000e63a <pvPortMalloc+0x72>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
9000e5e2:	b354      	cbz	r4, 9000e63a <pvPortMalloc+0x72>
			{
				xWantedSize += xHeapStructSize;
9000e5e4:	f104 0008 	add.w	r0, r4, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
9000e5e8:	0764      	lsls	r4, r4, #29
9000e5ea:	d002      	beq.n	9000e5f2 <pvPortMalloc+0x2a>
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
9000e5ec:	f020 0007 	bic.w	r0, r0, #7
9000e5f0:	3008      	adds	r0, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
9000e5f2:	b310      	cbz	r0, 9000e63a <pvPortMalloc+0x72>
9000e5f4:	f8df e144 	ldr.w	lr, [pc, #324]	@ 9000e73c <pvPortMalloc+0x174>
9000e5f8:	f8de c000 	ldr.w	ip, [lr]
9000e5fc:	4584      	cmp	ip, r0
9000e5fe:	d31c      	bcc.n	9000e63a <pvPortMalloc+0x72>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
9000e600:	4c4a      	ldr	r4, [pc, #296]	@ (9000e72c <pvPortMalloc+0x164>)
9000e602:	6823      	ldr	r3, [r4, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9000e604:	e003      	b.n	9000e60e <pvPortMalloc+0x46>
9000e606:	681a      	ldr	r2, [r3, #0]
9000e608:	b122      	cbz	r2, 9000e614 <pvPortMalloc+0x4c>
				{
					pxPreviousBlock = pxBlock;
9000e60a:	461c      	mov	r4, r3
					pxBlock = pxBlock->pxNextFreeBlock;
9000e60c:	4613      	mov	r3, r2
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9000e60e:	6859      	ldr	r1, [r3, #4]
9000e610:	4281      	cmp	r1, r0
9000e612:	d3f8      	bcc.n	9000e606 <pvPortMalloc+0x3e>
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
9000e614:	42ab      	cmp	r3, r5
9000e616:	d010      	beq.n	9000e63a <pvPortMalloc+0x72>
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );

					/* This block is being returned for use so must be taken out
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000e618:	681a      	ldr	r2, [r3, #0]
9000e61a:	6022      	str	r2, [r4, #0]

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000e61c:	1a0c      	subs	r4, r1, r0
9000e61e:	2c10      	cmp	r4, #16
9000e620:	d947      	bls.n	9000e6b2 <pvPortMalloc+0xea>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
9000e622:	181a      	adds	r2, r3, r0
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
9000e624:	0751      	lsls	r1, r2, #29
9000e626:	d02d      	beq.n	9000e684 <pvPortMalloc+0xbc>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
9000e628:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e62c:	f383 8811 	msr	BASEPRI, r3
9000e630:	f3bf 8f6f 	isb	sy
9000e634:	f3bf 8f4f 	dsb	sy
9000e638:	e7fe      	b.n	9000e638 <pvPortMalloc+0x70>
void *pvReturn = NULL;
9000e63a:	2400      	movs	r4, #0
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
9000e63c:	f001 ffb8 	bl	900105b0 <xTaskResumeAll>
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
9000e640:	4620      	mov	r0, r4
9000e642:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
uint8_t *pucAlignedHeap;
size_t uxAddress;
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;

	/* Ensure the heap starts on a correctly aligned boundary. */
	uxAddress = ( size_t ) ucHeap;
9000e646:	4b3a      	ldr	r3, [pc, #232]	@ (9000e730 <pvPortMalloc+0x168>)
	/* Only one block exists - and it covers the entire usable heap space. */
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;

	/* Work out the position of the top bit in a size_t variable. */
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000e648:	f04f 4000 	mov.w	r0, #2147483648	@ 0x80000000
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000e64c:	4e37      	ldr	r6, [pc, #220]	@ (9000e72c <pvPortMalloc+0x164>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
9000e64e:	075d      	lsls	r5, r3, #29
	uxAddress -= xHeapStructSize;
9000e650:	4d38      	ldr	r5, [pc, #224]	@ (9000e734 <pvPortMalloc+0x16c>)
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
9000e652:	bf18      	it	ne
9000e654:	3307      	addne	r3, #7
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000e656:	f025 0507 	bic.w	r5, r5, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000e65a:	bf18      	it	ne
9000e65c:	f023 0307 	bicne.w	r3, r3, #7
	pxEnd = ( void * ) uxAddress;
9000e660:	6015      	str	r5, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
9000e662:	2200      	movs	r2, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000e664:	6033      	str	r3, [r6, #0]
9000e666:	4619      	mov	r1, r3
	xStart.xBlockSize = ( size_t ) 0;
9000e668:	6072      	str	r2, [r6, #4]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
9000e66a:	1aeb      	subs	r3, r5, r3
}
9000e66c:	4606      	mov	r6, r0
	pxEnd->pxNextFreeBlock = NULL;
9000e66e:	e9c5 2200 	strd	r2, r2, [r5]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000e672:	4a31      	ldr	r2, [pc, #196]	@ (9000e738 <pvPortMalloc+0x170>)
9000e674:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000e676:	4a31      	ldr	r2, [pc, #196]	@ (9000e73c <pvPortMalloc+0x174>)
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
9000e678:	e9c1 5300 	strd	r5, r3, [r1]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000e67c:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000e67e:	4b2a      	ldr	r3, [pc, #168]	@ (9000e728 <pvPortMalloc+0x160>)
9000e680:	6018      	str	r0, [r3, #0]
}
9000e682:	e7ac      	b.n	9000e5de <pvPortMalloc+0x16>
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000e684:	4929      	ldr	r1, [pc, #164]	@ (9000e72c <pvPortMalloc+0x164>)
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
9000e686:	6054      	str	r4, [r2, #4]
						pxBlock->xBlockSize = xWantedSize;
9000e688:	6058      	str	r0, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000e68a:	460c      	mov	r4, r1
9000e68c:	6809      	ldr	r1, [r1, #0]
9000e68e:	428a      	cmp	r2, r1
9000e690:	d8fb      	bhi.n	9000e68a <pvPortMalloc+0xc2>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000e692:	6867      	ldr	r7, [r4, #4]
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e694:	f8d2 8004 	ldr.w	r8, [r2, #4]
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000e698:	eb04 0907 	add.w	r9, r4, r7
9000e69c:	454a      	cmp	r2, r9
9000e69e:	d028      	beq.n	9000e6f2 <pvPortMalloc+0x12a>
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e6a0:	eb02 0708 	add.w	r7, r2, r8
9000e6a4:	42b9      	cmp	r1, r7
9000e6a6:	d02b      	beq.n	9000e700 <pvPortMalloc+0x138>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
9000e6a8:	6011      	str	r1, [r2, #0]
9000e6aa:	4601      	mov	r1, r0

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
9000e6ac:	42a2      	cmp	r2, r4
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000e6ae:	bf18      	it	ne
9000e6b0:	6022      	strne	r2, [r4, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000e6b2:	4821      	ldr	r0, [pc, #132]	@ (9000e738 <pvPortMalloc+0x170>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000e6b4:	ebac 0201 	sub.w	r2, ip, r1
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000e6b8:	430e      	orrs	r6, r1
					pxBlock->pxNextFreeBlock = NULL;
9000e6ba:	2100      	movs	r1, #0
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000e6bc:	6804      	ldr	r4, [r0, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000e6be:	f8ce 2000 	str.w	r2, [lr]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000e6c2:	42a2      	cmp	r2, r4
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
9000e6c4:	f103 0408 	add.w	r4, r3, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000e6c8:	605e      	str	r6, [r3, #4]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
9000e6ca:	bf38      	it	cc
9000e6cc:	6002      	strcc	r2, [r0, #0]
					xNumberOfSuccessfulAllocations++;
9000e6ce:	481c      	ldr	r0, [pc, #112]	@ (9000e740 <pvPortMalloc+0x178>)
					pxBlock->pxNextFreeBlock = NULL;
9000e6d0:	6019      	str	r1, [r3, #0]
					xNumberOfSuccessfulAllocations++;
9000e6d2:	6802      	ldr	r2, [r0, #0]
9000e6d4:	3201      	adds	r2, #1
9000e6d6:	6002      	str	r2, [r0, #0]
	( void ) xTaskResumeAll();
9000e6d8:	f001 ff6a 	bl	900105b0 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
9000e6dc:	0763      	lsls	r3, r4, #29
9000e6de:	d0af      	beq.n	9000e640 <pvPortMalloc+0x78>
9000e6e0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e6e4:	f383 8811 	msr	BASEPRI, r3
9000e6e8:	f3bf 8f6f 	isb	sy
9000e6ec:	f3bf 8f4f 	dsb	sy
9000e6f0:	e7fe      	b.n	9000e6f0 <pvPortMalloc+0x128>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e6f2:	4447      	add	r7, r8
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e6f4:	19e0      	adds	r0, r4, r7
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e6f6:	6067      	str	r7, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e6f8:	4281      	cmp	r1, r0
9000e6fa:	d00a      	beq.n	9000e712 <pvPortMalloc+0x14a>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000e6fc:	6859      	ldr	r1, [r3, #4]
	if( pxIterator != pxBlockToInsert )
9000e6fe:	e7d8      	b.n	9000e6b2 <pvPortMalloc+0xea>
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000e700:	42a9      	cmp	r1, r5
9000e702:	d0d1      	beq.n	9000e6a8 <pvPortMalloc+0xe0>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e704:	6848      	ldr	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e706:	6809      	ldr	r1, [r1, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e708:	4440      	add	r0, r8
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e70a:	6011      	str	r1, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e70c:	6050      	str	r0, [r2, #4]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000e70e:	6859      	ldr	r1, [r3, #4]
9000e710:	e7cc      	b.n	9000e6ac <pvPortMalloc+0xe4>
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000e712:	42a9      	cmp	r1, r5
9000e714:	d0f2      	beq.n	9000e6fc <pvPortMalloc+0x134>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e716:	6848      	ldr	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e718:	680a      	ldr	r2, [r1, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e71a:	4438      	add	r0, r7
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e71c:	6022      	str	r2, [r4, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e71e:	6060      	str	r0, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e720:	e7ec      	b.n	9000e6fc <pvPortMalloc+0x134>
9000e722:	bf00      	nop
9000e724:	24008b3c 	.word	0x24008b3c
9000e728:	24008b28 	.word	0x24008b28
9000e72c:	24008b40 	.word	0x24008b40
9000e730:	24008b48 	.word	0x24008b48
9000e734:	240211e0 	.word	0x240211e0
9000e738:	24008b34 	.word	0x24008b34
9000e73c:	24008b38 	.word	0x24008b38
9000e740:	24008b30 	.word	0x24008b30

9000e744 <vPortFree>:
	if( pv != NULL )
9000e744:	b1d0      	cbz	r0, 9000e77c <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000e746:	4a2f      	ldr	r2, [pc, #188]	@ (9000e804 <vPortFree+0xc0>)
9000e748:	f850 3c04 	ldr.w	r3, [r0, #-4]
9000e74c:	6812      	ldr	r2, [r2, #0]
9000e74e:	4213      	tst	r3, r2
9000e750:	d00b      	beq.n	9000e76a <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
9000e752:	f850 1c08 	ldr.w	r1, [r0, #-8]
9000e756:	b191      	cbz	r1, 9000e77e <vPortFree+0x3a>
9000e758:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e75c:	f383 8811 	msr	BASEPRI, r3
9000e760:	f3bf 8f6f 	isb	sy
9000e764:	f3bf 8f4f 	dsb	sy
9000e768:	e7fe      	b.n	9000e768 <vPortFree+0x24>
9000e76a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e76e:	f383 8811 	msr	BASEPRI, r3
9000e772:	f3bf 8f6f 	isb	sy
9000e776:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000e77a:	e7fe      	b.n	9000e77a <vPortFree+0x36>
9000e77c:	4770      	bx	lr
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000e77e:	ea23 0302 	bic.w	r3, r3, r2
{
9000e782:	b530      	push	{r4, r5, lr}
9000e784:	b083      	sub	sp, #12
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000e786:	f840 3c04 	str.w	r3, [r0, #-4]
		puc -= xHeapStructSize;
9000e78a:	f1a0 0408 	sub.w	r4, r0, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000e78e:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
9000e790:	f001 ff06 	bl	900105a0 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
9000e794:	4a1c      	ldr	r2, [pc, #112]	@ (9000e808 <vPortFree+0xc4>)
9000e796:	9801      	ldr	r0, [sp, #4]
9000e798:	6813      	ldr	r3, [r2, #0]
9000e79a:	f850 1c04 	ldr.w	r1, [r0, #-4]
9000e79e:	440b      	add	r3, r1
9000e7a0:	6013      	str	r3, [r2, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000e7a2:	4b1a      	ldr	r3, [pc, #104]	@ (9000e80c <vPortFree+0xc8>)
9000e7a4:	461a      	mov	r2, r3
9000e7a6:	681b      	ldr	r3, [r3, #0]
9000e7a8:	429c      	cmp	r4, r3
9000e7aa:	d8fb      	bhi.n	9000e7a4 <vPortFree+0x60>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000e7ac:	6855      	ldr	r5, [r2, #4]
9000e7ae:	eb02 0e05 	add.w	lr, r2, r5
9000e7b2:	4574      	cmp	r4, lr
9000e7b4:	d011      	beq.n	9000e7da <vPortFree+0x96>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e7b6:	eb04 0c01 	add.w	ip, r4, r1
9000e7ba:	4563      	cmp	r3, ip
9000e7bc:	d01d      	beq.n	9000e7fa <vPortFree+0xb6>
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
9000e7be:	f840 3c08 	str.w	r3, [r0, #-8]
	if( pxIterator != pxBlockToInsert )
9000e7c2:	42a2      	cmp	r2, r4
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000e7c4:	bf18      	it	ne
9000e7c6:	6014      	strne	r4, [r2, #0]
					xNumberOfSuccessfulFrees++;
9000e7c8:	4a11      	ldr	r2, [pc, #68]	@ (9000e810 <vPortFree+0xcc>)
9000e7ca:	6813      	ldr	r3, [r2, #0]
9000e7cc:	3301      	adds	r3, #1
9000e7ce:	6013      	str	r3, [r2, #0]
}
9000e7d0:	b003      	add	sp, #12
9000e7d2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
				( void ) xTaskResumeAll();
9000e7d6:	f001 beeb 	b.w	900105b0 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e7da:	4429      	add	r1, r5
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e7dc:	1850      	adds	r0, r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e7de:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e7e0:	4283      	cmp	r3, r0
9000e7e2:	d1f1      	bne.n	9000e7c8 <vPortFree+0x84>
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000e7e4:	480b      	ldr	r0, [pc, #44]	@ (9000e814 <vPortFree+0xd0>)
9000e7e6:	6800      	ldr	r0, [r0, #0]
9000e7e8:	4283      	cmp	r3, r0
9000e7ea:	d0ed      	beq.n	9000e7c8 <vPortFree+0x84>
		pxBlockToInsert = pxIterator;
9000e7ec:	4614      	mov	r4, r2
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e7ee:	e9d3 3000 	ldrd	r3, r0, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e7f2:	4401      	add	r1, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e7f4:	6023      	str	r3, [r4, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e7f6:	6061      	str	r1, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e7f8:	e7e3      	b.n	9000e7c2 <vPortFree+0x7e>
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000e7fa:	4d06      	ldr	r5, [pc, #24]	@ (9000e814 <vPortFree+0xd0>)
9000e7fc:	682d      	ldr	r5, [r5, #0]
9000e7fe:	42ab      	cmp	r3, r5
9000e800:	d1f5      	bne.n	9000e7ee <vPortFree+0xaa>
9000e802:	e7dc      	b.n	9000e7be <vPortFree+0x7a>
9000e804:	24008b28 	.word	0x24008b28
9000e808:	24008b38 	.word	0x24008b38
9000e80c:	24008b40 	.word	0x24008b40
9000e810:	24008b2c 	.word	0x24008b2c
9000e814:	24008b3c 	.word	0x24008b3c

9000e818 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000e818:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000e81c:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000e820:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000e822:	6081      	str	r1, [r0, #8]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000e824:	6002      	str	r2, [r0, #0]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000e826:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000e828:	e9c0 3303 	strd	r3, r3, [r0, #12]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
9000e82c:	4770      	bx	lr
9000e82e:	bf00      	nop

9000e830 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
9000e830:	2300      	movs	r3, #0
9000e832:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
9000e834:	4770      	bx	lr
9000e836:	bf00      	nop

9000e838 <vListInsertEnd>:
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000e838:	6803      	ldr	r3, [r0, #0]
ListItem_t * const pxIndex = pxList->pxIndex;
9000e83a:	6842      	ldr	r2, [r0, #4]
	( pxList->uxNumberOfItems )++;
9000e83c:	3301      	adds	r3, #1
{
9000e83e:	b410      	push	{r4}
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000e840:	6894      	ldr	r4, [r2, #8]
9000e842:	e9c1 2401 	strd	r2, r4, [r1, #4]
	pxIndex->pxPrevious->pxNext = pxNewListItem;
9000e846:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
9000e848:	6091      	str	r1, [r2, #8]
}
9000e84a:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
9000e84e:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000e850:	6003      	str	r3, [r0, #0]
}
9000e852:	4770      	bx	lr

9000e854 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
9000e854:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
9000e856:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
9000e858:	1c6b      	adds	r3, r5, #1
9000e85a:	d010      	beq.n	9000e87e <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
9000e85c:	f100 0308 	add.w	r3, r0, #8
9000e860:	461c      	mov	r4, r3
9000e862:	685b      	ldr	r3, [r3, #4]
9000e864:	681a      	ldr	r2, [r3, #0]
9000e866:	42aa      	cmp	r2, r5
9000e868:	d9fa      	bls.n	9000e860 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000e86a:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000e86c:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
9000e86e:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
9000e870:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
9000e872:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
9000e874:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
9000e876:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000e878:	6002      	str	r2, [r0, #0]
}
9000e87a:	bc30      	pop	{r4, r5}
9000e87c:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
9000e87e:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000e880:	6863      	ldr	r3, [r4, #4]
9000e882:	e7f2      	b.n	9000e86a <vListInsert+0x16>

9000e884 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
9000e884:	6903      	ldr	r3, [r0, #16]
{
9000e886:	b410      	push	{r4}

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
9000e888:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000e88a:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
	if( pxList->pxIndex == pxItemToRemove )
9000e88e:	4284      	cmp	r4, r0

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;

	return pxList->uxNumberOfItems;
}
9000e890:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000e894:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
9000e896:	6051      	str	r1, [r2, #4]
	pxItemToRemove->pxContainer = NULL;
9000e898:	f04f 0100 	mov.w	r1, #0
		pxList->pxIndex = pxItemToRemove->pxPrevious;
9000e89c:	bf08      	it	eq
9000e89e:	605a      	streq	r2, [r3, #4]
	( pxList->uxNumberOfItems )--;
9000e8a0:	681a      	ldr	r2, [r3, #0]
	pxItemToRemove->pxContainer = NULL;
9000e8a2:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
9000e8a4:	3a01      	subs	r2, #1
9000e8a6:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
9000e8a8:	6818      	ldr	r0, [r3, #0]
}
9000e8aa:	4770      	bx	lr

9000e8ac <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
9000e8ac:	4808      	ldr	r0, [pc, #32]	@ (9000e8d0 <prvPortStartFirstTask+0x24>)
9000e8ae:	6800      	ldr	r0, [r0, #0]
9000e8b0:	6800      	ldr	r0, [r0, #0]
9000e8b2:	f380 8808 	msr	MSP, r0
9000e8b6:	f04f 0000 	mov.w	r0, #0
9000e8ba:	f380 8814 	msr	CONTROL, r0
9000e8be:	b662      	cpsie	i
9000e8c0:	b661      	cpsie	f
9000e8c2:	f3bf 8f4f 	dsb	sy
9000e8c6:	f3bf 8f6f 	isb	sy
9000e8ca:	df00      	svc	0
9000e8cc:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
9000e8ce:	0000      	.short	0x0000
9000e8d0:	e000ed08 	.word	0xe000ed08

9000e8d4 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
9000e8d4:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 9000e8e4 <vPortEnableVFP+0x10>
9000e8d8:	6801      	ldr	r1, [r0, #0]
9000e8da:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
9000e8de:	6001      	str	r1, [r0, #0]
9000e8e0:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
9000e8e2:	0000      	.short	0x0000
9000e8e4:	e000ed88 	.word	0xe000ed88

9000e8e8 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
9000e8e8:	4b0e      	ldr	r3, [pc, #56]	@ (9000e924 <prvTaskExitError+0x3c>)
{
9000e8ea:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
9000e8ec:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
9000e8ee:	681b      	ldr	r3, [r3, #0]
volatile uint32_t ulDummy = 0;
9000e8f0:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
9000e8f2:	3301      	adds	r3, #1
9000e8f4:	d008      	beq.n	9000e908 <prvTaskExitError+0x20>
9000e8f6:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e8fa:	f383 8811 	msr	BASEPRI, r3
9000e8fe:	f3bf 8f6f 	isb	sy
9000e902:	f3bf 8f4f 	dsb	sy
9000e906:	e7fe      	b.n	9000e906 <prvTaskExitError+0x1e>
9000e908:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e90c:	f383 8811 	msr	BASEPRI, r3
9000e910:	f3bf 8f6f 	isb	sy
9000e914:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000e918:	9b01      	ldr	r3, [sp, #4]
9000e91a:	2b00      	cmp	r3, #0
9000e91c:	d0fc      	beq.n	9000e918 <prvTaskExitError+0x30>
}
9000e91e:	b002      	add	sp, #8
9000e920:	4770      	bx	lr
9000e922:	bf00      	nop
9000e924:	24000084 	.word	0x24000084

9000e928 <pxPortInitialiseStack>:
{
9000e928:	4603      	mov	r3, r0
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000e92a:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000e92e:	4809      	ldr	r0, [pc, #36]	@ (9000e954 <pxPortInitialiseStack+0x2c>)
{
9000e930:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
9000e932:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000e936:	f843 0c0c 	str.w	r0, [r3, #-12]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
9000e93a:	f843 2c20 	str.w	r2, [r3, #-32]
}
9000e93e:	f1a3 0044 	sub.w	r0, r3, #68	@ 0x44
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000e942:	e943 1402 	strd	r1, r4, [r3, #-8]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000e946:	f06f 0102 	mvn.w	r1, #2
}
9000e94a:	f85d 4b04 	ldr.w	r4, [sp], #4
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000e94e:	f843 1c24 	str.w	r1, [r3, #-36]
}
9000e952:	4770      	bx	lr
9000e954:	9000e8e9 	.word	0x9000e8e9
	...

9000e960 <SVC_Handler>:
	__asm volatile (
9000e960:	4b07      	ldr	r3, [pc, #28]	@ (9000e980 <pxCurrentTCBConst2>)
9000e962:	6819      	ldr	r1, [r3, #0]
9000e964:	6808      	ldr	r0, [r1, #0]
9000e966:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000e96a:	f380 8809 	msr	PSP, r0
9000e96e:	f3bf 8f6f 	isb	sy
9000e972:	f04f 0000 	mov.w	r0, #0
9000e976:	f380 8811 	msr	BASEPRI, r0
9000e97a:	4770      	bx	lr
9000e97c:	f3af 8000 	nop.w

9000e980 <pxCurrentTCBConst2>:
9000e980:	24021728 	.word	0x24021728

9000e984 <vPortEnterCritical>:
9000e984:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e988:	f383 8811 	msr	BASEPRI, r3
9000e98c:	f3bf 8f6f 	isb	sy
9000e990:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
9000e994:	4a0b      	ldr	r2, [pc, #44]	@ (9000e9c4 <vPortEnterCritical+0x40>)
9000e996:	6813      	ldr	r3, [r2, #0]
9000e998:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
9000e99a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
9000e99c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
9000e99e:	d000      	beq.n	9000e9a2 <vPortEnterCritical+0x1e>
}
9000e9a0:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
9000e9a2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e9a6:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
9000e9aa:	b2db      	uxtb	r3, r3
9000e9ac:	2b00      	cmp	r3, #0
9000e9ae:	d0f7      	beq.n	9000e9a0 <vPortEnterCritical+0x1c>
9000e9b0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e9b4:	f383 8811 	msr	BASEPRI, r3
9000e9b8:	f3bf 8f6f 	isb	sy
9000e9bc:	f3bf 8f4f 	dsb	sy
9000e9c0:	e7fe      	b.n	9000e9c0 <vPortEnterCritical+0x3c>
9000e9c2:	bf00      	nop
9000e9c4:	24000084 	.word	0x24000084

9000e9c8 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
9000e9c8:	4a08      	ldr	r2, [pc, #32]	@ (9000e9ec <vPortExitCritical+0x24>)
9000e9ca:	6813      	ldr	r3, [r2, #0]
9000e9cc:	b943      	cbnz	r3, 9000e9e0 <vPortExitCritical+0x18>
9000e9ce:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e9d2:	f383 8811 	msr	BASEPRI, r3
9000e9d6:	f3bf 8f6f 	isb	sy
9000e9da:	f3bf 8f4f 	dsb	sy
9000e9de:	e7fe      	b.n	9000e9de <vPortExitCritical+0x16>
	uxCriticalNesting--;
9000e9e0:	3b01      	subs	r3, #1
9000e9e2:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
9000e9e4:	b90b      	cbnz	r3, 9000e9ea <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
9000e9e6:	f383 8811 	msr	BASEPRI, r3
}
9000e9ea:	4770      	bx	lr
9000e9ec:	24000084 	.word	0x24000084

9000e9f0 <PendSV_Handler>:
	__asm volatile
9000e9f0:	f3ef 8009 	mrs	r0, PSP
9000e9f4:	f3bf 8f6f 	isb	sy
9000e9f8:	4b15      	ldr	r3, [pc, #84]	@ (9000ea50 <pxCurrentTCBConst>)
9000e9fa:	681a      	ldr	r2, [r3, #0]
9000e9fc:	f01e 0f10 	tst.w	lr, #16
9000ea00:	bf08      	it	eq
9000ea02:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
9000ea06:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000ea0a:	6010      	str	r0, [r2, #0]
9000ea0c:	e92d 0009 	stmdb	sp!, {r0, r3}
9000ea10:	f04f 0050 	mov.w	r0, #80	@ 0x50
9000ea14:	f380 8811 	msr	BASEPRI, r0
9000ea18:	f3bf 8f4f 	dsb	sy
9000ea1c:	f3bf 8f6f 	isb	sy
9000ea20:	f001 fe02 	bl	90010628 <vTaskSwitchContext>
9000ea24:	f04f 0000 	mov.w	r0, #0
9000ea28:	f380 8811 	msr	BASEPRI, r0
9000ea2c:	bc09      	pop	{r0, r3}
9000ea2e:	6819      	ldr	r1, [r3, #0]
9000ea30:	6808      	ldr	r0, [r1, #0]
9000ea32:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000ea36:	f01e 0f10 	tst.w	lr, #16
9000ea3a:	bf08      	it	eq
9000ea3c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
9000ea40:	f380 8809 	msr	PSP, r0
9000ea44:	f3bf 8f6f 	isb	sy
9000ea48:	4770      	bx	lr
9000ea4a:	bf00      	nop
9000ea4c:	f3af 8000 	nop.w

9000ea50 <pxCurrentTCBConst>:
9000ea50:	24021728 	.word	0x24021728

9000ea54 <xPortSysTickHandler>:
{
9000ea54:	b508      	push	{r3, lr}
	__asm volatile
9000ea56:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ea5a:	f383 8811 	msr	BASEPRI, r3
9000ea5e:	f3bf 8f6f 	isb	sy
9000ea62:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
9000ea66:	f001 fdb9 	bl	900105dc <xTaskIncrementTick>
9000ea6a:	b128      	cbz	r0, 9000ea78 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
9000ea6c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000ea70:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000ea74:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
9000ea78:	2300      	movs	r3, #0
9000ea7a:	f383 8811 	msr	BASEPRI, r3
}
9000ea7e:	bd08      	pop	{r3, pc}

9000ea80 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000ea80:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
9000ea84:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000ea86:	4806      	ldr	r0, [pc, #24]	@ (9000eaa0 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000ea88:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000ea8a:	4906      	ldr	r1, [pc, #24]	@ (9000eaa4 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
9000ea8c:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000ea8e:	6803      	ldr	r3, [r0, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000ea90:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000ea92:	fba1 1303 	umull	r1, r3, r1, r3
9000ea96:	099b      	lsrs	r3, r3, #6
9000ea98:	3b01      	subs	r3, #1
9000ea9a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000ea9c:	6110      	str	r0, [r2, #16]
}
9000ea9e:	4770      	bx	lr
9000eaa0:	24000078 	.word	0x24000078
9000eaa4:	10624dd3 	.word	0x10624dd3

9000eaa8 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000eaa8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000eaac:	4a48      	ldr	r2, [pc, #288]	@ (9000ebd0 <xPortStartScheduler+0x128>)
9000eaae:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
9000eab2:	4291      	cmp	r1, r2
9000eab4:	d041      	beq.n	9000eb3a <xPortStartScheduler+0x92>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000eab6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
9000eaba:	4b46      	ldr	r3, [pc, #280]	@ (9000ebd4 <xPortStartScheduler+0x12c>)
9000eabc:	429a      	cmp	r2, r3
9000eabe:	d033      	beq.n	9000eb28 <xPortStartScheduler+0x80>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000eac0:	4b45      	ldr	r3, [pc, #276]	@ (9000ebd8 <xPortStartScheduler+0x130>)
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000eac2:	f04f 0cff 	mov.w	ip, #255	@ 0xff
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000eac6:	4845      	ldr	r0, [pc, #276]	@ (9000ebdc <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000eac8:	4945      	ldr	r1, [pc, #276]	@ (9000ebe0 <xPortStartScheduler+0x138>)
{
9000eaca:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000eacc:	781a      	ldrb	r2, [r3, #0]
{
9000eace:	b084      	sub	sp, #16
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000ead0:	b2d2      	uxtb	r2, r2
9000ead2:	9202      	str	r2, [sp, #8]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000ead4:	2207      	movs	r2, #7
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000ead6:	f883 c000 	strb.w	ip, [r3]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000eada:	781b      	ldrb	r3, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000eadc:	6002      	str	r2, [r0, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000eade:	b2db      	uxtb	r3, r3
9000eae0:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000eae4:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000eae8:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000eaec:	f003 0350 	and.w	r3, r3, #80	@ 0x50
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000eaf0:	0612      	lsls	r2, r2, #24
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000eaf2:	700b      	strb	r3, [r1, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000eaf4:	d50f      	bpl.n	9000eb16 <xPortStartScheduler+0x6e>
9000eaf6:	2206      	movs	r2, #6
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000eaf8:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000eafc:	4611      	mov	r1, r2
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000eafe:	3a01      	subs	r2, #1
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000eb00:	005b      	lsls	r3, r3, #1
9000eb02:	b2db      	uxtb	r3, r3
9000eb04:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000eb08:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000eb0c:	061b      	lsls	r3, r3, #24
9000eb0e:	d4f3      	bmi.n	9000eaf8 <xPortStartScheduler+0x50>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
9000eb10:	2903      	cmp	r1, #3
9000eb12:	d01b      	beq.n	9000eb4c <xPortStartScheduler+0xa4>
9000eb14:	6001      	str	r1, [r0, #0]
	__asm volatile
9000eb16:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eb1a:	f383 8811 	msr	BASEPRI, r3
9000eb1e:	f3bf 8f6f 	isb	sy
9000eb22:	f3bf 8f4f 	dsb	sy
9000eb26:	e7fe      	b.n	9000eb26 <xPortStartScheduler+0x7e>
9000eb28:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eb2c:	f383 8811 	msr	BASEPRI, r3
9000eb30:	f3bf 8f6f 	isb	sy
9000eb34:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000eb38:	e7fe      	b.n	9000eb38 <xPortStartScheduler+0x90>
9000eb3a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eb3e:	f383 8811 	msr	BASEPRI, r3
9000eb42:	f3bf 8f6f 	isb	sy
9000eb46:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000eb4a:	e7fe      	b.n	9000eb4a <xPortStartScheduler+0xa2>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000eb4c:	9b02      	ldr	r3, [sp, #8]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000eb4e:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000eb52:	f44f 7140 	mov.w	r1, #768	@ 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000eb56:	4a20      	ldr	r2, [pc, #128]	@ (9000ebd8 <xPortStartScheduler+0x130>)
9000eb58:	b2db      	uxtb	r3, r3
	uxCriticalNesting = 0;
9000eb5a:	4e22      	ldr	r6, [pc, #136]	@ (9000ebe4 <xPortStartScheduler+0x13c>)
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000eb5c:	6001      	str	r1, [r0, #0]
	uxCriticalNesting = 0;
9000eb5e:	2500      	movs	r5, #0
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000eb60:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000eb62:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
9000eb66:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
9000eb6a:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
9000eb6e:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
9000eb72:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
9000eb76:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
9000eb7a:	f7ff ff81 	bl	9000ea80 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
9000eb7e:	6035      	str	r5, [r6, #0]
	vPortEnableVFP();
9000eb80:	f7ff fea8 	bl	9000e8d4 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
9000eb84:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
9000eb88:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
9000eb8c:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
9000eb90:	f7ff fe8c 	bl	9000e8ac <prvPortStartFirstTask>
	vTaskSwitchContext();
9000eb94:	f001 fd48 	bl	90010628 <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
9000eb98:	6833      	ldr	r3, [r6, #0]
volatile uint32_t ulDummy = 0;
9000eb9a:	9503      	str	r5, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
9000eb9c:	3301      	adds	r3, #1
9000eb9e:	d008      	beq.n	9000ebb2 <xPortStartScheduler+0x10a>
9000eba0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eba4:	f383 8811 	msr	BASEPRI, r3
9000eba8:	f3bf 8f6f 	isb	sy
9000ebac:	f3bf 8f4f 	dsb	sy
9000ebb0:	e7fe      	b.n	9000ebb0 <xPortStartScheduler+0x108>
9000ebb2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ebb6:	f383 8811 	msr	BASEPRI, r3
9000ebba:	f3bf 8f6f 	isb	sy
9000ebbe:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000ebc2:	9b03      	ldr	r3, [sp, #12]
9000ebc4:	2b00      	cmp	r3, #0
9000ebc6:	d0fc      	beq.n	9000ebc2 <xPortStartScheduler+0x11a>
}
9000ebc8:	2000      	movs	r0, #0
9000ebca:	b004      	add	sp, #16
9000ebcc:	bd70      	pop	{r4, r5, r6, pc}
9000ebce:	bf00      	nop
9000ebd0:	410fc271 	.word	0x410fc271
9000ebd4:	410fc270 	.word	0x410fc270
9000ebd8:	e000e400 	.word	0xe000e400
9000ebdc:	240211e8 	.word	0x240211e8
9000ebe0:	240211ec 	.word	0x240211ec
9000ebe4:	24000084 	.word	0x24000084

9000ebe8 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
9000ebe8:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
9000ebec:	2b0f      	cmp	r3, #15
9000ebee:	d90e      	bls.n	9000ec0e <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000ebf0:	4911      	ldr	r1, [pc, #68]	@ (9000ec38 <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000ebf2:	4a12      	ldr	r2, [pc, #72]	@ (9000ec3c <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000ebf4:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000ebf6:	7812      	ldrb	r2, [r2, #0]
9000ebf8:	429a      	cmp	r2, r3
9000ebfa:	d908      	bls.n	9000ec0e <vPortValidateInterruptPriority+0x26>
9000ebfc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ec00:	f383 8811 	msr	BASEPRI, r3
9000ec04:	f3bf 8f6f 	isb	sy
9000ec08:	f3bf 8f4f 	dsb	sy
9000ec0c:	e7fe      	b.n	9000ec0c <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
9000ec0e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000ec12:	4a0b      	ldr	r2, [pc, #44]	@ (9000ec40 <vPortValidateInterruptPriority+0x58>)
9000ec14:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
9000ec18:	6812      	ldr	r2, [r2, #0]
9000ec1a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
9000ec1e:	4293      	cmp	r3, r2
9000ec20:	d908      	bls.n	9000ec34 <vPortValidateInterruptPriority+0x4c>
9000ec22:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ec26:	f383 8811 	msr	BASEPRI, r3
9000ec2a:	f3bf 8f6f 	isb	sy
9000ec2e:	f3bf 8f4f 	dsb	sy
9000ec32:	e7fe      	b.n	9000ec32 <vPortValidateInterruptPriority+0x4a>
	}
9000ec34:	4770      	bx	lr
9000ec36:	bf00      	nop
9000ec38:	e000e3f0 	.word	0xe000e3f0
9000ec3c:	240211ec 	.word	0x240211ec
9000ec40:	240211e8 	.word	0x240211e8

9000ec44 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
9000ec44:	b570      	push	{r4, r5, r6, lr}
9000ec46:	4616      	mov	r6, r2

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000ec48:	6c02      	ldr	r2, [r0, #64]	@ 0x40
{
9000ec4a:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000ec4c:	6b85      	ldr	r5, [r0, #56]	@ 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000ec4e:	b92a      	cbnz	r2, 9000ec5c <prvCopyDataToQueue+0x18>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000ec50:	6806      	ldr	r6, [r0, #0]
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000ec52:	3501      	adds	r5, #1
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000ec54:	b32e      	cbz	r6, 9000eca2 <prvCopyDataToQueue+0x5e>
BaseType_t xReturn = pdFALSE;
9000ec56:	4610      	mov	r0, r2
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000ec58:	63a5      	str	r5, [r4, #56]	@ 0x38

	return xReturn;
}
9000ec5a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
9000ec5c:	b97e      	cbnz	r6, 9000ec7e <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000ec5e:	6840      	ldr	r0, [r0, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000ec60:	3501      	adds	r5, #1
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000ec62:	f01b ff54 	bl	9002ab0e <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000ec66:	6863      	ldr	r3, [r4, #4]
9000ec68:	6c21      	ldr	r1, [r4, #64]	@ 0x40
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000ec6a:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000ec6c:	440b      	add	r3, r1
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000ec6e:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000ec70:	6063      	str	r3, [r4, #4]
			pxQueue->pcWriteTo = pxQueue->pcHead;
9000ec72:	bf24      	itt	cs
9000ec74:	6823      	ldrcs	r3, [r4, #0]
9000ec76:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
9000ec78:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000ec7a:	63a5      	str	r5, [r4, #56]	@ 0x38
}
9000ec7c:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
9000ec7e:	68c0      	ldr	r0, [r0, #12]
9000ec80:	f01b ff45 	bl	9002ab0e <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000ec84:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000ec86:	68e3      	ldr	r3, [r4, #12]
9000ec88:	4251      	negs	r1, r2
9000ec8a:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000ec8c:	6822      	ldr	r2, [r4, #0]
9000ec8e:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000ec90:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000ec92:	d202      	bcs.n	9000ec9a <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
9000ec94:	68a3      	ldr	r3, [r4, #8]
9000ec96:	440b      	add	r3, r1
9000ec98:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
9000ec9a:	2e02      	cmp	r6, #2
9000ec9c:	d006      	beq.n	9000ecac <prvCopyDataToQueue+0x68>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000ec9e:	3501      	adds	r5, #1
9000eca0:	e7ea      	b.n	9000ec78 <prvCopyDataToQueue+0x34>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9000eca2:	6880      	ldr	r0, [r0, #8]
9000eca4:	f001 fe96 	bl	900109d4 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
9000eca8:	60a6      	str	r6, [r4, #8]
9000ecaa:	e7d5      	b.n	9000ec58 <prvCopyDataToQueue+0x14>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000ecac:	2d01      	cmp	r5, #1
BaseType_t xReturn = pdFALSE;
9000ecae:	f04f 0000 	mov.w	r0, #0
9000ecb2:	bf38      	it	cc
9000ecb4:	2501      	movcc	r5, #1
9000ecb6:	e7cf      	b.n	9000ec58 <prvCopyDataToQueue+0x14>

9000ecb8 <xQueueGenericCreateStatic>:
	{
9000ecb8:	b530      	push	{r4, r5, lr}
9000ecba:	b083      	sub	sp, #12
9000ecbc:	f89d 5018 	ldrb.w	r5, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000ecc0:	b940      	cbnz	r0, 9000ecd4 <xQueueGenericCreateStatic+0x1c>
9000ecc2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ecc6:	f383 8811 	msr	BASEPRI, r3
9000ecca:	f3bf 8f6f 	isb	sy
9000ecce:	f3bf 8f4f 	dsb	sy
9000ecd2:	e7fe      	b.n	9000ecd2 <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
9000ecd4:	461c      	mov	r4, r3
9000ecd6:	b153      	cbz	r3, 9000ecee <xQueueGenericCreateStatic+0x36>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
9000ecd8:	b30a      	cbz	r2, 9000ed1e <xQueueGenericCreateStatic+0x66>
9000ecda:	b989      	cbnz	r1, 9000ed00 <xQueueGenericCreateStatic+0x48>
9000ecdc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ece0:	f383 8811 	msr	BASEPRI, r3
9000ece4:	f3bf 8f6f 	isb	sy
9000ece8:	f3bf 8f4f 	dsb	sy
9000ecec:	e7fe      	b.n	9000ecec <xQueueGenericCreateStatic+0x34>
9000ecee:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ecf2:	f383 8811 	msr	BASEPRI, r3
9000ecf6:	f3bf 8f6f 	isb	sy
9000ecfa:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000ecfe:	e7fe      	b.n	9000ecfe <xQueueGenericCreateStatic+0x46>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000ed00:	b16a      	cbz	r2, 9000ed1e <xQueueGenericCreateStatic+0x66>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000ed02:	2350      	movs	r3, #80	@ 0x50
9000ed04:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
9000ed06:	9b01      	ldr	r3, [sp, #4]
9000ed08:	2b50      	cmp	r3, #80	@ 0x50
9000ed0a:	d013      	beq.n	9000ed34 <xQueueGenericCreateStatic+0x7c>
9000ed0c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ed10:	f383 8811 	msr	BASEPRI, r3
9000ed14:	f3bf 8f6f 	isb	sy
9000ed18:	f3bf 8f4f 	dsb	sy
9000ed1c:	e7fe      	b.n	9000ed1c <xQueueGenericCreateStatic+0x64>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000ed1e:	2900      	cmp	r1, #0
9000ed20:	d0ef      	beq.n	9000ed02 <xQueueGenericCreateStatic+0x4a>
9000ed22:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ed26:	f383 8811 	msr	BASEPRI, r3
9000ed2a:	f3bf 8f6f 	isb	sy
9000ed2e:	f3bf 8f4f 	dsb	sy
9000ed32:	e7fe      	b.n	9000ed32 <xQueueGenericCreateStatic+0x7a>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000ed34:	2900      	cmp	r1, #0
9000ed36:	bf08      	it	eq
9000ed38:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000ed3a:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000ed3c:	2301      	movs	r3, #1
	pxNewQueue->uxLength = uxQueueLength;
9000ed3e:	63e0      	str	r0, [r4, #60]	@ 0x3c
9000ed40:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9000ed42:	6421      	str	r1, [r4, #64]	@ 0x40
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000ed44:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
	taskENTER_CRITICAL();
9000ed48:	f7ff fe1c 	bl	9000e984 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ed4c:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000ed4e:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000ed52:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ed54:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
9000ed58:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ed5c:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ed5e:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ed60:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ed62:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000ed64:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9000ed66:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ed68:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000ed6a:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000ed6c:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000ed70:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000ed74:	f7ff fd50 	bl	9000e818 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000ed78:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000ed7c:	f7ff fd4c 	bl	9000e818 <vListInitialise>
	taskEXIT_CRITICAL();
9000ed80:	f7ff fe22 	bl	9000e9c8 <vPortExitCritical>
	}
9000ed84:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000ed86:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
	}
9000ed8a:	b003      	add	sp, #12
9000ed8c:	bd30      	pop	{r4, r5, pc}
9000ed8e:	bf00      	nop

9000ed90 <xQueueGenericCreate>:
	{
9000ed90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000ed92:	b940      	cbnz	r0, 9000eda6 <xQueueGenericCreate+0x16>
9000ed94:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ed98:	f383 8811 	msr	BASEPRI, r3
9000ed9c:	f3bf 8f6f 	isb	sy
9000eda0:	f3bf 8f4f 	dsb	sy
9000eda4:	e7fe      	b.n	9000eda4 <xQueueGenericCreate+0x14>
9000eda6:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000eda8:	fb01 f000 	mul.w	r0, r1, r0
9000edac:	460e      	mov	r6, r1
9000edae:	4617      	mov	r7, r2
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000edb0:	3050      	adds	r0, #80	@ 0x50
9000edb2:	f7ff fc09 	bl	9000e5c8 <pvPortMalloc>
		if( pxNewQueue != NULL )
9000edb6:	4604      	mov	r4, r0
9000edb8:	b340      	cbz	r0, 9000ee0c <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000edba:	2300      	movs	r3, #0
9000edbc:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
9000edc0:	b336      	cbz	r6, 9000ee10 <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000edc2:	f100 0350 	add.w	r3, r0, #80	@ 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
9000edc6:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9000edc8:	e9c4 560f 	strd	r5, r6, [r4, #60]	@ 0x3c
	taskENTER_CRITICAL();
9000edcc:	f7ff fdda 	bl	9000e984 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000edd0:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000edd2:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000edd6:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000edd8:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
9000eddc:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ede0:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ede2:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ede4:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ede6:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000ede8:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9000edea:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000edec:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000edee:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000edf0:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000edf4:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000edf8:	f7ff fd0e 	bl	9000e818 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000edfc:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000ee00:	f7ff fd0a 	bl	9000e818 <vListInitialise>
	taskEXIT_CRITICAL();
9000ee04:	f7ff fde0 	bl	9000e9c8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000ee08:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
9000ee0c:	4620      	mov	r0, r4
9000ee0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000ee10:	4603      	mov	r3, r0
9000ee12:	e7d8      	b.n	9000edc6 <xQueueGenericCreate+0x36>

9000ee14 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
9000ee14:	b940      	cbnz	r0, 9000ee28 <xQueueCreateCountingSemaphoreStatic+0x14>
9000ee16:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ee1a:	f383 8811 	msr	BASEPRI, r3
9000ee1e:	f3bf 8f6f 	isb	sy
9000ee22:	f3bf 8f4f 	dsb	sy
9000ee26:	e7fe      	b.n	9000ee26 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
9000ee28:	4288      	cmp	r0, r1
9000ee2a:	d208      	bcs.n	9000ee3e <xQueueCreateCountingSemaphoreStatic+0x2a>
9000ee2c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ee30:	f383 8811 	msr	BASEPRI, r3
9000ee34:	f3bf 8f6f 	isb	sy
9000ee38:	f3bf 8f4f 	dsb	sy
9000ee3c:	e7fe      	b.n	9000ee3c <xQueueCreateCountingSemaphoreStatic+0x28>
	{
9000ee3e:	b530      	push	{r4, r5, lr}
9000ee40:	4614      	mov	r4, r2
9000ee42:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
9000ee44:	2a00      	cmp	r2, #0
9000ee46:	d03b      	beq.n	9000eec0 <xQueueCreateCountingSemaphoreStatic+0xac>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000ee48:	2350      	movs	r3, #80	@ 0x50
9000ee4a:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
9000ee4c:	9b03      	ldr	r3, [sp, #12]
9000ee4e:	2b50      	cmp	r3, #80	@ 0x50
9000ee50:	d008      	beq.n	9000ee64 <xQueueCreateCountingSemaphoreStatic+0x50>
9000ee52:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ee56:	f383 8811 	msr	BASEPRI, r3
9000ee5a:	f3bf 8f6f 	isb	sy
9000ee5e:	f3bf 8f4f 	dsb	sy
9000ee62:	e7fe      	b.n	9000ee62 <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
9000ee64:	2500      	movs	r5, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000ee66:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000ee68:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000ee6a:	63d0      	str	r0, [r2, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000ee6c:	f882 3046 	strb.w	r3, [r2, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000ee70:	6415      	str	r5, [r2, #64]	@ 0x40
9000ee72:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000ee74:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
9000ee76:	f7ff fd85 	bl	9000e984 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ee7a:	6822      	ldr	r2, [r4, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000ee7c:	63a5      	str	r5, [r4, #56]	@ 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000ee7e:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ee80:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	@ 0x3c
9000ee84:	fb00 f303 	mul.w	r3, r0, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ee88:	1a18      	subs	r0, r3, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ee8a:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ee8c:	4402      	add	r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ee8e:	60a3      	str	r3, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000ee90:	23ff      	movs	r3, #255	@ 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000ee92:	f104 0010 	add.w	r0, r4, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ee96:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000ee98:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000ee9c:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000eea0:	f7ff fcba 	bl	9000e818 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000eea4:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000eea8:	f7ff fcb6 	bl	9000e818 <vListInitialise>
	taskEXIT_CRITICAL();
9000eeac:	f7ff fd8c 	bl	9000e9c8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000eeb0:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000eeb2:	9901      	ldr	r1, [sp, #4]
	}
9000eeb4:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000eeb6:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000eeba:	63a1      	str	r1, [r4, #56]	@ 0x38
	}
9000eebc:	b005      	add	sp, #20
9000eebe:	bd30      	pop	{r4, r5, pc}
9000eec0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eec4:	f383 8811 	msr	BASEPRI, r3
9000eec8:	f3bf 8f6f 	isb	sy
9000eecc:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000eed0:	e7fe      	b.n	9000eed0 <xQueueCreateCountingSemaphoreStatic+0xbc>
9000eed2:	bf00      	nop

9000eed4 <xQueueCreateCountingSemaphore>:
	{
9000eed4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
9000eed6:	b940      	cbnz	r0, 9000eeea <xQueueCreateCountingSemaphore+0x16>
9000eed8:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eedc:	f383 8811 	msr	BASEPRI, r3
9000eee0:	f3bf 8f6f 	isb	sy
9000eee4:	f3bf 8f4f 	dsb	sy
9000eee8:	e7fe      	b.n	9000eee8 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
9000eeea:	4288      	cmp	r0, r1
9000eeec:	4604      	mov	r4, r0
9000eeee:	460e      	mov	r6, r1
9000eef0:	d208      	bcs.n	9000ef04 <xQueueCreateCountingSemaphore+0x30>
9000eef2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eef6:	f383 8811 	msr	BASEPRI, r3
9000eefa:	f3bf 8f6f 	isb	sy
9000eefe:	f3bf 8f4f 	dsb	sy
9000ef02:	e7fe      	b.n	9000ef02 <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000ef04:	2050      	movs	r0, #80	@ 0x50
9000ef06:	f7ff fb5f 	bl	9000e5c8 <pvPortMalloc>
		if( pxNewQueue != NULL )
9000ef0a:	4605      	mov	r5, r0
9000ef0c:	b330      	cbz	r0, 9000ef5c <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000ef0e:	2700      	movs	r7, #0
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000ef10:	6000      	str	r0, [r0, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000ef12:	63c4      	str	r4, [r0, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000ef14:	f880 7046 	strb.w	r7, [r0, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000ef18:	6407      	str	r7, [r0, #64]	@ 0x40
	taskENTER_CRITICAL();
9000ef1a:	f7ff fd33 	bl	9000e984 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef1e:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000ef20:	63af      	str	r7, [r5, #56]	@ 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000ef22:	f105 0010 	add.w	r0, r5, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000ef26:	606a      	str	r2, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef28:	e9d5 310f 	ldrd	r3, r1, [r5, #60]	@ 0x3c
9000ef2c:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef30:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef32:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef34:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef36:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000ef38:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef3a:	60ea      	str	r2, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000ef3c:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000ef40:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000ef44:	f7ff fc68 	bl	9000e818 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000ef48:	f105 0024 	add.w	r0, r5, #36	@ 0x24
9000ef4c:	f7ff fc64 	bl	9000e818 <vListInitialise>
	taskEXIT_CRITICAL();
9000ef50:	f7ff fd3a 	bl	9000e9c8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000ef54:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000ef56:	63ae      	str	r6, [r5, #56]	@ 0x38
		pxNewQueue->ucQueueType = ucQueueType;
9000ef58:	f885 304c 	strb.w	r3, [r5, #76]	@ 0x4c
	}
9000ef5c:	4628      	mov	r0, r5
9000ef5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

9000ef60 <xQueueGenericSend>:
{
9000ef60:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000ef64:	b084      	sub	sp, #16
9000ef66:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
9000ef68:	2800      	cmp	r0, #0
9000ef6a:	f000 8103 	beq.w	9000f174 <xQueueGenericSend+0x214>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000ef6e:	4688      	mov	r8, r1
9000ef70:	4604      	mov	r4, r0
9000ef72:	461f      	mov	r7, r3
9000ef74:	2900      	cmp	r1, #0
9000ef76:	f000 8097 	beq.w	9000f0a8 <xQueueGenericSend+0x148>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000ef7a:	2f02      	cmp	r7, #2
9000ef7c:	d10b      	bne.n	9000ef96 <xQueueGenericSend+0x36>
9000ef7e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000ef80:	2b01      	cmp	r3, #1
9000ef82:	d008      	beq.n	9000ef96 <xQueueGenericSend+0x36>
9000ef84:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ef88:	f383 8811 	msr	BASEPRI, r3
9000ef8c:	f3bf 8f6f 	isb	sy
9000ef90:	f3bf 8f4f 	dsb	sy
9000ef94:	e7fe      	b.n	9000ef94 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000ef96:	f001 fccd 	bl	90010934 <xTaskGetSchedulerState>
9000ef9a:	2800      	cmp	r0, #0
9000ef9c:	f000 80f3 	beq.w	9000f186 <xQueueGenericSend+0x226>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000efa0:	f1a7 0902 	sub.w	r9, r7, #2
9000efa4:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000efa6:	f104 0624 	add.w	r6, r4, #36	@ 0x24
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000efaa:	fab9 f989 	clz	r9, r9
9000efae:	ea4f 1959 	mov.w	r9, r9, lsr #5
		taskENTER_CRITICAL();
9000efb2:	f7ff fce7 	bl	9000e984 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000efb6:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000efb8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000efba:	429a      	cmp	r2, r3
9000efbc:	f0c0 80f0 	bcc.w	9000f1a0 <xQueueGenericSend+0x240>
9000efc0:	f1b9 0f00 	cmp.w	r9, #0
9000efc4:	f040 80ec 	bne.w	9000f1a0 <xQueueGenericSend+0x240>
				if( xTicksToWait == ( TickType_t ) 0 )
9000efc8:	9b01      	ldr	r3, [sp, #4]
9000efca:	2b00      	cmp	r3, #0
9000efcc:	f000 8101 	beq.w	9000f1d2 <xQueueGenericSend+0x272>
				else if( xEntryTimeSet == pdFALSE )
9000efd0:	2d00      	cmp	r5, #0
9000efd2:	f000 80cb 	beq.w	9000f16c <xQueueGenericSend+0x20c>
		taskEXIT_CRITICAL();
9000efd6:	f7ff fcf7 	bl	9000e9c8 <vPortExitCritical>
		vTaskSuspendAll();
9000efda:	f001 fae1 	bl	900105a0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000efde:	f7ff fcd1 	bl	9000e984 <vPortEnterCritical>
9000efe2:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000efe6:	2bff      	cmp	r3, #255	@ 0xff
9000efe8:	d102      	bne.n	9000eff0 <xQueueGenericSend+0x90>
9000efea:	2300      	movs	r3, #0
9000efec:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
9000eff0:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000eff4:	2bff      	cmp	r3, #255	@ 0xff
9000eff6:	d102      	bne.n	9000effe <xQueueGenericSend+0x9e>
9000eff8:	2300      	movs	r3, #0
9000effa:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
9000effe:	f7ff fce3 	bl	9000e9c8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000f002:	a901      	add	r1, sp, #4
9000f004:	a802      	add	r0, sp, #8
9000f006:	f001 fc4d 	bl	900108a4 <xTaskCheckForTimeOut>
9000f00a:	2800      	cmp	r0, #0
9000f00c:	f040 80e5 	bne.w	9000f1da <xQueueGenericSend+0x27a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
9000f010:	f7ff fcb8 	bl	9000e984 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
9000f014:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000f016:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000f018:	429a      	cmp	r2, r3
9000f01a:	d052      	beq.n	9000f0c2 <xQueueGenericSend+0x162>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
9000f01c:	f7ff fcd4 	bl	9000e9c8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f020:	f7ff fcb0 	bl	9000e984 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f024:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
9000f028:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f02a:	2d00      	cmp	r5, #0
9000f02c:	dc04      	bgt.n	9000f038 <xQueueGenericSend+0xd8>
9000f02e:	e011      	b.n	9000f054 <xQueueGenericSend+0xf4>
			--cTxLock;
9000f030:	1e6a      	subs	r2, r5, #1
9000f032:	b2d3      	uxtb	r3, r2
9000f034:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f036:	b16b      	cbz	r3, 9000f054 <xQueueGenericSend+0xf4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f038:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f03a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f03c:	b153      	cbz	r3, 9000f054 <xQueueGenericSend+0xf4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f03e:	f001 fbdf 	bl	90010800 <xTaskRemoveFromEventList>
9000f042:	2800      	cmp	r0, #0
9000f044:	d0f4      	beq.n	9000f030 <xQueueGenericSend+0xd0>
						vTaskMissedYield();
9000f046:	f001 fc6f 	bl	90010928 <vTaskMissedYield>
			--cTxLock;
9000f04a:	1e6a      	subs	r2, r5, #1
9000f04c:	b2d3      	uxtb	r3, r2
9000f04e:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f050:	2b00      	cmp	r3, #0
9000f052:	d1f1      	bne.n	9000f038 <xQueueGenericSend+0xd8>
		pxQueue->cTxLock = queueUNLOCKED;
9000f054:	23ff      	movs	r3, #255	@ 0xff
9000f056:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000f05a:	f7ff fcb5 	bl	9000e9c8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f05e:	f7ff fc91 	bl	9000e984 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f062:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
9000f066:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f068:	2d00      	cmp	r5, #0
9000f06a:	dd14      	ble.n	9000f096 <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f06c:	f104 0a10 	add.w	sl, r4, #16
9000f070:	e003      	b.n	9000f07a <xQueueGenericSend+0x11a>
				--cRxLock;
9000f072:	1e6a      	subs	r2, r5, #1
9000f074:	b2d3      	uxtb	r3, r2
9000f076:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f078:	b16b      	cbz	r3, 9000f096 <xQueueGenericSend+0x136>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f07a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f07c:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f07e:	b153      	cbz	r3, 9000f096 <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f080:	f001 fbbe 	bl	90010800 <xTaskRemoveFromEventList>
9000f084:	2800      	cmp	r0, #0
9000f086:	d0f4      	beq.n	9000f072 <xQueueGenericSend+0x112>
					vTaskMissedYield();
9000f088:	f001 fc4e 	bl	90010928 <vTaskMissedYield>
				--cRxLock;
9000f08c:	1e6a      	subs	r2, r5, #1
9000f08e:	b2d3      	uxtb	r3, r2
9000f090:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f092:	2b00      	cmp	r3, #0
9000f094:	d1f1      	bne.n	9000f07a <xQueueGenericSend+0x11a>
		pxQueue->cRxLock = queueUNLOCKED;
9000f096:	23ff      	movs	r3, #255	@ 0xff
9000f098:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000f09c:	f7ff fc94 	bl	9000e9c8 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000f0a0:	f001 fa86 	bl	900105b0 <xTaskResumeAll>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000f0a4:	2501      	movs	r5, #1
9000f0a6:	e784      	b.n	9000efb2 <xQueueGenericSend+0x52>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f0a8:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000f0aa:	2b00      	cmp	r3, #0
9000f0ac:	f43f af65 	beq.w	9000ef7a <xQueueGenericSend+0x1a>
9000f0b0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f0b4:	f383 8811 	msr	BASEPRI, r3
9000f0b8:	f3bf 8f6f 	isb	sy
9000f0bc:	f3bf 8f4f 	dsb	sy
9000f0c0:	e7fe      	b.n	9000f0c0 <xQueueGenericSend+0x160>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000f0c2:	f104 0a10 	add.w	sl, r4, #16
	taskEXIT_CRITICAL();
9000f0c6:	f7ff fc7f 	bl	9000e9c8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000f0ca:	9901      	ldr	r1, [sp, #4]
9000f0cc:	4650      	mov	r0, sl
9000f0ce:	f001 fb09 	bl	900106e4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000f0d2:	f7ff fc57 	bl	9000e984 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f0d6:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000f0da:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f0dc:	2d00      	cmp	r5, #0
9000f0de:	dc04      	bgt.n	9000f0ea <xQueueGenericSend+0x18a>
9000f0e0:	e011      	b.n	9000f106 <xQueueGenericSend+0x1a6>
			--cTxLock;
9000f0e2:	1e6b      	subs	r3, r5, #1
9000f0e4:	b2da      	uxtb	r2, r3
9000f0e6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f0e8:	b16a      	cbz	r2, 9000f106 <xQueueGenericSend+0x1a6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f0ea:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f0ec:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f0ee:	b153      	cbz	r3, 9000f106 <xQueueGenericSend+0x1a6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f0f0:	f001 fb86 	bl	90010800 <xTaskRemoveFromEventList>
9000f0f4:	2800      	cmp	r0, #0
9000f0f6:	d0f4      	beq.n	9000f0e2 <xQueueGenericSend+0x182>
						vTaskMissedYield();
9000f0f8:	f001 fc16 	bl	90010928 <vTaskMissedYield>
			--cTxLock;
9000f0fc:	1e6b      	subs	r3, r5, #1
9000f0fe:	b2da      	uxtb	r2, r3
9000f100:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f102:	2a00      	cmp	r2, #0
9000f104:	d1f1      	bne.n	9000f0ea <xQueueGenericSend+0x18a>
		pxQueue->cTxLock = queueUNLOCKED;
9000f106:	23ff      	movs	r3, #255	@ 0xff
9000f108:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000f10c:	f7ff fc5c 	bl	9000e9c8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f110:	f7ff fc38 	bl	9000e984 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f114:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000f118:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f11a:	2d00      	cmp	r5, #0
9000f11c:	dc04      	bgt.n	9000f128 <xQueueGenericSend+0x1c8>
9000f11e:	e011      	b.n	9000f144 <xQueueGenericSend+0x1e4>
				--cRxLock;
9000f120:	1e6b      	subs	r3, r5, #1
9000f122:	b2da      	uxtb	r2, r3
9000f124:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f126:	b16a      	cbz	r2, 9000f144 <xQueueGenericSend+0x1e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f128:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f12a:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f12c:	b153      	cbz	r3, 9000f144 <xQueueGenericSend+0x1e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f12e:	f001 fb67 	bl	90010800 <xTaskRemoveFromEventList>
9000f132:	2800      	cmp	r0, #0
9000f134:	d0f4      	beq.n	9000f120 <xQueueGenericSend+0x1c0>
					vTaskMissedYield();
9000f136:	f001 fbf7 	bl	90010928 <vTaskMissedYield>
				--cRxLock;
9000f13a:	1e6b      	subs	r3, r5, #1
9000f13c:	b2da      	uxtb	r2, r3
9000f13e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f140:	2a00      	cmp	r2, #0
9000f142:	d1f1      	bne.n	9000f128 <xQueueGenericSend+0x1c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000f144:	23ff      	movs	r3, #255	@ 0xff
9000f146:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000f14a:	f7ff fc3d 	bl	9000e9c8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000f14e:	f001 fa2f 	bl	900105b0 <xTaskResumeAll>
9000f152:	2800      	cmp	r0, #0
9000f154:	d1a6      	bne.n	9000f0a4 <xQueueGenericSend+0x144>
					portYIELD_WITHIN_API();
9000f156:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f15a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f15e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f162:	f3bf 8f4f 	dsb	sy
9000f166:	f3bf 8f6f 	isb	sy
9000f16a:	e79b      	b.n	9000f0a4 <xQueueGenericSend+0x144>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000f16c:	a802      	add	r0, sp, #8
9000f16e:	f001 fb8d 	bl	9001088c <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9000f172:	e730      	b.n	9000efd6 <xQueueGenericSend+0x76>
9000f174:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f178:	f383 8811 	msr	BASEPRI, r3
9000f17c:	f3bf 8f6f 	isb	sy
9000f180:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000f184:	e7fe      	b.n	9000f184 <xQueueGenericSend+0x224>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f186:	9b01      	ldr	r3, [sp, #4]
9000f188:	2b00      	cmp	r3, #0
9000f18a:	f43f af09 	beq.w	9000efa0 <xQueueGenericSend+0x40>
9000f18e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f192:	f383 8811 	msr	BASEPRI, r3
9000f196:	f3bf 8f6f 	isb	sy
9000f19a:	f3bf 8f4f 	dsb	sy
9000f19e:	e7fe      	b.n	9000f19e <xQueueGenericSend+0x23e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000f1a0:	463a      	mov	r2, r7
9000f1a2:	4641      	mov	r1, r8
9000f1a4:	4620      	mov	r0, r4
9000f1a6:	f7ff fd4d 	bl	9000ec44 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f1aa:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000f1ac:	2b00      	cmp	r3, #0
9000f1ae:	d151      	bne.n	9000f254 <xQueueGenericSend+0x2f4>
					else if( xYieldRequired != pdFALSE )
9000f1b0:	b148      	cbz	r0, 9000f1c6 <xQueueGenericSend+0x266>
						queueYIELD_IF_USING_PREEMPTION();
9000f1b2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f1b6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f1ba:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f1be:	f3bf 8f4f 	dsb	sy
9000f1c2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
9000f1c6:	f7ff fbff 	bl	9000e9c8 <vPortExitCritical>
				return pdPASS;
9000f1ca:	2001      	movs	r0, #1
}
9000f1cc:	b004      	add	sp, #16
9000f1ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					taskEXIT_CRITICAL();
9000f1d2:	f7ff fbf9 	bl	9000e9c8 <vPortExitCritical>
					return errQUEUE_FULL;
9000f1d6:	2000      	movs	r0, #0
9000f1d8:	e7f8      	b.n	9000f1cc <xQueueGenericSend+0x26c>
	taskENTER_CRITICAL();
9000f1da:	f7ff fbd3 	bl	9000e984 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f1de:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000f1e2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f1e4:	2d00      	cmp	r5, #0
9000f1e6:	dd10      	ble.n	9000f20a <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f1e8:	f104 0624 	add.w	r6, r4, #36	@ 0x24
9000f1ec:	e003      	b.n	9000f1f6 <xQueueGenericSend+0x296>
			--cTxLock;
9000f1ee:	1e6b      	subs	r3, r5, #1
9000f1f0:	b2da      	uxtb	r2, r3
9000f1f2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f1f4:	b14a      	cbz	r2, 9000f20a <xQueueGenericSend+0x2aa>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f1f6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f1f8:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f1fa:	b133      	cbz	r3, 9000f20a <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f1fc:	f001 fb00 	bl	90010800 <xTaskRemoveFromEventList>
9000f200:	2800      	cmp	r0, #0
9000f202:	d0f4      	beq.n	9000f1ee <xQueueGenericSend+0x28e>
						vTaskMissedYield();
9000f204:	f001 fb90 	bl	90010928 <vTaskMissedYield>
9000f208:	e7f1      	b.n	9000f1ee <xQueueGenericSend+0x28e>
		pxQueue->cTxLock = queueUNLOCKED;
9000f20a:	23ff      	movs	r3, #255	@ 0xff
9000f20c:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000f210:	f7ff fbda 	bl	9000e9c8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f214:	f7ff fbb6 	bl	9000e984 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f218:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000f21c:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f21e:	2d00      	cmp	r5, #0
9000f220:	dd10      	ble.n	9000f244 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f222:	f104 0610 	add.w	r6, r4, #16
9000f226:	e003      	b.n	9000f230 <xQueueGenericSend+0x2d0>
				--cRxLock;
9000f228:	1e6b      	subs	r3, r5, #1
9000f22a:	b2da      	uxtb	r2, r3
9000f22c:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f22e:	b14a      	cbz	r2, 9000f244 <xQueueGenericSend+0x2e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f230:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f232:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f234:	b133      	cbz	r3, 9000f244 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f236:	f001 fae3 	bl	90010800 <xTaskRemoveFromEventList>
9000f23a:	2800      	cmp	r0, #0
9000f23c:	d0f4      	beq.n	9000f228 <xQueueGenericSend+0x2c8>
					vTaskMissedYield();
9000f23e:	f001 fb73 	bl	90010928 <vTaskMissedYield>
9000f242:	e7f1      	b.n	9000f228 <xQueueGenericSend+0x2c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000f244:	23ff      	movs	r3, #255	@ 0xff
9000f246:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000f24a:	f7ff fbbd 	bl	9000e9c8 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000f24e:	f001 f9af 	bl	900105b0 <xTaskResumeAll>
			return errQUEUE_FULL;
9000f252:	e7c0      	b.n	9000f1d6 <xQueueGenericSend+0x276>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f254:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000f258:	f001 fad2 	bl	90010800 <xTaskRemoveFromEventList>
9000f25c:	2800      	cmp	r0, #0
9000f25e:	d0b2      	beq.n	9000f1c6 <xQueueGenericSend+0x266>
9000f260:	e7a7      	b.n	9000f1b2 <xQueueGenericSend+0x252>
9000f262:	bf00      	nop

9000f264 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
9000f264:	2800      	cmp	r0, #0
9000f266:	d04b      	beq.n	9000f300 <xQueueGenericSendFromISR+0x9c>
{
9000f268:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000f26c:	460e      	mov	r6, r1
9000f26e:	4604      	mov	r4, r0
9000f270:	4617      	mov	r7, r2
9000f272:	461d      	mov	r5, r3
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f274:	b339      	cbz	r1, 9000f2c6 <xQueueGenericSendFromISR+0x62>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000f276:	2d02      	cmp	r5, #2
9000f278:	d10b      	bne.n	9000f292 <xQueueGenericSendFromISR+0x2e>
9000f27a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000f27c:	2b01      	cmp	r3, #1
9000f27e:	d008      	beq.n	9000f292 <xQueueGenericSendFromISR+0x2e>
9000f280:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f284:	f383 8811 	msr	BASEPRI, r3
9000f288:	f3bf 8f6f 	isb	sy
9000f28c:	f3bf 8f4f 	dsb	sy
9000f290:	e7fe      	b.n	9000f290 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000f292:	f7ff fca9 	bl	9000ebe8 <vPortValidateInterruptPriority>
	__asm volatile
9000f296:	f3ef 8811 	mrs	r8, BASEPRI
9000f29a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f29e:	f383 8811 	msr	BASEPRI, r3
9000f2a2:	f3bf 8f6f 	isb	sy
9000f2a6:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000f2aa:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000f2ac:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000f2ae:	429a      	cmp	r2, r3
9000f2b0:	d315      	bcc.n	9000f2de <xQueueGenericSendFromISR+0x7a>
9000f2b2:	f1a5 0002 	sub.w	r0, r5, #2
9000f2b6:	fab0 f080 	clz	r0, r0
9000f2ba:	0940      	lsrs	r0, r0, #5
9000f2bc:	b978      	cbnz	r0, 9000f2de <xQueueGenericSendFromISR+0x7a>
	__asm volatile
9000f2be:	f388 8811 	msr	BASEPRI, r8
}
9000f2c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f2c6:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000f2c8:	2b00      	cmp	r3, #0
9000f2ca:	d0d4      	beq.n	9000f276 <xQueueGenericSendFromISR+0x12>
	__asm volatile
9000f2cc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f2d0:	f383 8811 	msr	BASEPRI, r3
9000f2d4:	f3bf 8f6f 	isb	sy
9000f2d8:	f3bf 8f4f 	dsb	sy
9000f2dc:	e7fe      	b.n	9000f2dc <xQueueGenericSendFromISR+0x78>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000f2de:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
9000f2e0:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000f2e4:	4631      	mov	r1, r6
9000f2e6:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
9000f2e8:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f2ea:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000f2ec:	f7ff fcaa 	bl	9000ec44 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
9000f2f0:	1c6b      	adds	r3, r5, #1
9000f2f2:	d00e      	beq.n	9000f312 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000f2f4:	1c6b      	adds	r3, r5, #1
9000f2f6:	b25b      	sxtb	r3, r3
9000f2f8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
9000f2fc:	2001      	movs	r0, #1
9000f2fe:	e7de      	b.n	9000f2be <xQueueGenericSendFromISR+0x5a>
9000f300:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f304:	f383 8811 	msr	BASEPRI, r3
9000f308:	f3bf 8f6f 	isb	sy
9000f30c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000f310:	e7fe      	b.n	9000f310 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f312:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000f314:	2b00      	cmp	r3, #0
9000f316:	d0f1      	beq.n	9000f2fc <xQueueGenericSendFromISR+0x98>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f318:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000f31c:	f001 fa70 	bl	90010800 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000f320:	2f00      	cmp	r7, #0
9000f322:	d0eb      	beq.n	9000f2fc <xQueueGenericSendFromISR+0x98>
9000f324:	2800      	cmp	r0, #0
9000f326:	d0e9      	beq.n	9000f2fc <xQueueGenericSendFromISR+0x98>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000f328:	2301      	movs	r3, #1
9000f32a:	603b      	str	r3, [r7, #0]
9000f32c:	e7e6      	b.n	9000f2fc <xQueueGenericSendFromISR+0x98>
9000f32e:	bf00      	nop

9000f330 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
9000f330:	b360      	cbz	r0, 9000f38c <xQueueGiveFromISR+0x5c>
	configASSERT( pxQueue->uxItemSize == 0 );
9000f332:	6c03      	ldr	r3, [r0, #64]	@ 0x40
{
9000f334:	b570      	push	{r4, r5, r6, lr}
9000f336:	4604      	mov	r4, r0
	configASSERT( pxQueue->uxItemSize == 0 );
9000f338:	b143      	cbz	r3, 9000f34c <xQueueGiveFromISR+0x1c>
9000f33a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f33e:	f383 8811 	msr	BASEPRI, r3
9000f342:	f3bf 8f6f 	isb	sy
9000f346:	f3bf 8f4f 	dsb	sy
9000f34a:	e7fe      	b.n	9000f34a <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000f34c:	6803      	ldr	r3, [r0, #0]
9000f34e:	460d      	mov	r5, r1
9000f350:	b32b      	cbz	r3, 9000f39e <xQueueGiveFromISR+0x6e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000f352:	f7ff fc49 	bl	9000ebe8 <vPortValidateInterruptPriority>
	__asm volatile
9000f356:	f3ef 8611 	mrs	r6, BASEPRI
9000f35a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f35e:	f383 8811 	msr	BASEPRI, r3
9000f362:	f3bf 8f6f 	isb	sy
9000f366:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f36a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
9000f36c:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
9000f36e:	429a      	cmp	r2, r3
9000f370:	d921      	bls.n	9000f3b6 <xQueueGiveFromISR+0x86>
			const int8_t cTxLock = pxQueue->cTxLock;
9000f372:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000f376:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
9000f378:	2aff      	cmp	r2, #255	@ 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000f37a:	63a3      	str	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
9000f37c:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
9000f37e:	d01e      	beq.n	9000f3be <xQueueGiveFromISR+0x8e>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000f380:	3301      	adds	r3, #1
9000f382:	b25b      	sxtb	r3, r3
9000f384:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
9000f388:	2001      	movs	r0, #1
9000f38a:	e015      	b.n	9000f3b8 <xQueueGiveFromISR+0x88>
	__asm volatile
9000f38c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f390:	f383 8811 	msr	BASEPRI, r3
9000f394:	f3bf 8f6f 	isb	sy
9000f398:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000f39c:	e7fe      	b.n	9000f39c <xQueueGiveFromISR+0x6c>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000f39e:	6883      	ldr	r3, [r0, #8]
9000f3a0:	2b00      	cmp	r3, #0
9000f3a2:	d0d6      	beq.n	9000f352 <xQueueGiveFromISR+0x22>
9000f3a4:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f3a8:	f383 8811 	msr	BASEPRI, r3
9000f3ac:	f3bf 8f6f 	isb	sy
9000f3b0:	f3bf 8f4f 	dsb	sy
9000f3b4:	e7fe      	b.n	9000f3b4 <xQueueGiveFromISR+0x84>
			xReturn = errQUEUE_FULL;
9000f3b6:	2000      	movs	r0, #0
	__asm volatile
9000f3b8:	f386 8811 	msr	BASEPRI, r6
}
9000f3bc:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f3be:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000f3c0:	2b00      	cmp	r3, #0
9000f3c2:	d0e1      	beq.n	9000f388 <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f3c4:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000f3c8:	f001 fa1a 	bl	90010800 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000f3cc:	2d00      	cmp	r5, #0
9000f3ce:	d0db      	beq.n	9000f388 <xQueueGiveFromISR+0x58>
9000f3d0:	2800      	cmp	r0, #0
9000f3d2:	d0d9      	beq.n	9000f388 <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000f3d4:	2301      	movs	r3, #1
9000f3d6:	602b      	str	r3, [r5, #0]
9000f3d8:	e7d6      	b.n	9000f388 <xQueueGiveFromISR+0x58>
9000f3da:	bf00      	nop

9000f3dc <xQueueReceive>:
{
9000f3dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000f3e0:	b085      	sub	sp, #20
9000f3e2:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
9000f3e4:	2800      	cmp	r0, #0
9000f3e6:	f000 8147 	beq.w	9000f678 <xQueueReceive+0x29c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f3ea:	460f      	mov	r7, r1
9000f3ec:	4604      	mov	r4, r0
9000f3ee:	2900      	cmp	r1, #0
9000f3f0:	d07b      	beq.n	9000f4ea <xQueueReceive+0x10e>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f3f2:	f001 fa9f 	bl	90010934 <xTaskGetSchedulerState>
9000f3f6:	2800      	cmp	r0, #0
9000f3f8:	f000 8083 	beq.w	9000f502 <xQueueReceive+0x126>
		taskENTER_CRITICAL();
9000f3fc:	f7ff fac2 	bl	9000e984 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f400:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000f402:	2d00      	cmp	r5, #0
9000f404:	f040 8141 	bne.w	9000f68a <xQueueReceive+0x2ae>
				if( xTicksToWait == ( TickType_t ) 0 )
9000f408:	9b01      	ldr	r3, [sp, #4]
9000f40a:	2b00      	cmp	r3, #0
9000f40c:	f000 80d7 	beq.w	9000f5be <xQueueReceive+0x1e2>
		prvLockQueue( pxQueue );
9000f410:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f412:	f104 0624 	add.w	r6, r4, #36	@ 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
9000f416:	a802      	add	r0, sp, #8
9000f418:	f001 fa38 	bl	9001088c <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
9000f41c:	f7ff fad4 	bl	9000e9c8 <vPortExitCritical>
		vTaskSuspendAll();
9000f420:	f001 f8be 	bl	900105a0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000f424:	f7ff faae 	bl	9000e984 <vPortEnterCritical>
9000f428:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000f42c:	2bff      	cmp	r3, #255	@ 0xff
9000f42e:	d101      	bne.n	9000f434 <xQueueReceive+0x58>
9000f430:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
9000f434:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000f438:	2bff      	cmp	r3, #255	@ 0xff
9000f43a:	d101      	bne.n	9000f440 <xQueueReceive+0x64>
9000f43c:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
9000f440:	f7ff fac2 	bl	9000e9c8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000f444:	a901      	add	r1, sp, #4
9000f446:	a802      	add	r0, sp, #8
9000f448:	f001 fa2c 	bl	900108a4 <xTaskCheckForTimeOut>
9000f44c:	2800      	cmp	r0, #0
9000f44e:	d165      	bne.n	9000f51c <xQueueReceive+0x140>
	taskENTER_CRITICAL();
9000f450:	f7ff fa98 	bl	9000e984 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000f454:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000f456:	2b00      	cmp	r3, #0
9000f458:	f000 80b7 	beq.w	9000f5ca <xQueueReceive+0x1ee>
	taskEXIT_CRITICAL();
9000f45c:	f7ff fab4 	bl	9000e9c8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f460:	f7ff fa90 	bl	9000e984 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f464:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000f468:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f46a:	2d00      	cmp	r5, #0
9000f46c:	dd14      	ble.n	9000f498 <xQueueReceive+0xbc>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f46e:	f104 0924 	add.w	r9, r4, #36	@ 0x24
9000f472:	e003      	b.n	9000f47c <xQueueReceive+0xa0>
			--cTxLock;
9000f474:	1e6b      	subs	r3, r5, #1
9000f476:	b2da      	uxtb	r2, r3
9000f478:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f47a:	b16a      	cbz	r2, 9000f498 <xQueueReceive+0xbc>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f47c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f47e:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f480:	b153      	cbz	r3, 9000f498 <xQueueReceive+0xbc>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f482:	f001 f9bd 	bl	90010800 <xTaskRemoveFromEventList>
9000f486:	2800      	cmp	r0, #0
9000f488:	d0f4      	beq.n	9000f474 <xQueueReceive+0x98>
						vTaskMissedYield();
9000f48a:	f001 fa4d 	bl	90010928 <vTaskMissedYield>
			--cTxLock;
9000f48e:	1e6b      	subs	r3, r5, #1
9000f490:	b2da      	uxtb	r2, r3
9000f492:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f494:	2a00      	cmp	r2, #0
9000f496:	d1f1      	bne.n	9000f47c <xQueueReceive+0xa0>
		pxQueue->cTxLock = queueUNLOCKED;
9000f498:	23ff      	movs	r3, #255	@ 0xff
9000f49a:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000f49e:	f7ff fa93 	bl	9000e9c8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f4a2:	f7ff fa6f 	bl	9000e984 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f4a6:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000f4aa:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f4ac:	2d00      	cmp	r5, #0
9000f4ae:	dd14      	ble.n	9000f4da <xQueueReceive+0xfe>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f4b0:	f104 0910 	add.w	r9, r4, #16
9000f4b4:	e003      	b.n	9000f4be <xQueueReceive+0xe2>
				--cRxLock;
9000f4b6:	1e6b      	subs	r3, r5, #1
9000f4b8:	b2da      	uxtb	r2, r3
9000f4ba:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f4bc:	b16a      	cbz	r2, 9000f4da <xQueueReceive+0xfe>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f4be:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f4c0:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f4c2:	b153      	cbz	r3, 9000f4da <xQueueReceive+0xfe>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f4c4:	f001 f99c 	bl	90010800 <xTaskRemoveFromEventList>
9000f4c8:	2800      	cmp	r0, #0
9000f4ca:	d0f4      	beq.n	9000f4b6 <xQueueReceive+0xda>
					vTaskMissedYield();
9000f4cc:	f001 fa2c 	bl	90010928 <vTaskMissedYield>
				--cRxLock;
9000f4d0:	1e6b      	subs	r3, r5, #1
9000f4d2:	b2da      	uxtb	r2, r3
9000f4d4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f4d6:	2a00      	cmp	r2, #0
9000f4d8:	d1f1      	bne.n	9000f4be <xQueueReceive+0xe2>
		pxQueue->cRxLock = queueUNLOCKED;
9000f4da:	23ff      	movs	r3, #255	@ 0xff
9000f4dc:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000f4e0:	f7ff fa72 	bl	9000e9c8 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000f4e4:	f001 f864 	bl	900105b0 <xTaskResumeAll>
9000f4e8:	e060      	b.n	9000f5ac <xQueueReceive+0x1d0>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f4ea:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000f4ec:	2b00      	cmp	r3, #0
9000f4ee:	d080      	beq.n	9000f3f2 <xQueueReceive+0x16>
	__asm volatile
9000f4f0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f4f4:	f383 8811 	msr	BASEPRI, r3
9000f4f8:	f3bf 8f6f 	isb	sy
9000f4fc:	f3bf 8f4f 	dsb	sy
9000f500:	e7fe      	b.n	9000f500 <xQueueReceive+0x124>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f502:	9b01      	ldr	r3, [sp, #4]
9000f504:	2b00      	cmp	r3, #0
9000f506:	f43f af79 	beq.w	9000f3fc <xQueueReceive+0x20>
9000f50a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f50e:	f383 8811 	msr	BASEPRI, r3
9000f512:	f3bf 8f6f 	isb	sy
9000f516:	f3bf 8f4f 	dsb	sy
9000f51a:	e7fe      	b.n	9000f51a <xQueueReceive+0x13e>
	taskENTER_CRITICAL();
9000f51c:	f7ff fa32 	bl	9000e984 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f520:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000f524:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f526:	2d00      	cmp	r5, #0
9000f528:	dc04      	bgt.n	9000f534 <xQueueReceive+0x158>
9000f52a:	e011      	b.n	9000f550 <xQueueReceive+0x174>
			--cTxLock;
9000f52c:	1e6b      	subs	r3, r5, #1
9000f52e:	b2da      	uxtb	r2, r3
9000f530:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f532:	b16a      	cbz	r2, 9000f550 <xQueueReceive+0x174>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f534:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f536:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f538:	b153      	cbz	r3, 9000f550 <xQueueReceive+0x174>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f53a:	f001 f961 	bl	90010800 <xTaskRemoveFromEventList>
9000f53e:	2800      	cmp	r0, #0
9000f540:	d0f4      	beq.n	9000f52c <xQueueReceive+0x150>
						vTaskMissedYield();
9000f542:	f001 f9f1 	bl	90010928 <vTaskMissedYield>
			--cTxLock;
9000f546:	1e6b      	subs	r3, r5, #1
9000f548:	b2da      	uxtb	r2, r3
9000f54a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f54c:	2a00      	cmp	r2, #0
9000f54e:	d1f1      	bne.n	9000f534 <xQueueReceive+0x158>
		pxQueue->cTxLock = queueUNLOCKED;
9000f550:	23ff      	movs	r3, #255	@ 0xff
9000f552:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000f556:	f7ff fa37 	bl	9000e9c8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f55a:	f7ff fa13 	bl	9000e984 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f55e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000f562:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f564:	2d00      	cmp	r5, #0
9000f566:	dd14      	ble.n	9000f592 <xQueueReceive+0x1b6>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f568:	f104 0910 	add.w	r9, r4, #16
9000f56c:	e003      	b.n	9000f576 <xQueueReceive+0x19a>
				--cRxLock;
9000f56e:	1e6b      	subs	r3, r5, #1
9000f570:	b2da      	uxtb	r2, r3
9000f572:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f574:	b16a      	cbz	r2, 9000f592 <xQueueReceive+0x1b6>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f576:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f578:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f57a:	b153      	cbz	r3, 9000f592 <xQueueReceive+0x1b6>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f57c:	f001 f940 	bl	90010800 <xTaskRemoveFromEventList>
9000f580:	2800      	cmp	r0, #0
9000f582:	d0f4      	beq.n	9000f56e <xQueueReceive+0x192>
					vTaskMissedYield();
9000f584:	f001 f9d0 	bl	90010928 <vTaskMissedYield>
				--cRxLock;
9000f588:	1e6b      	subs	r3, r5, #1
9000f58a:	b2da      	uxtb	r2, r3
9000f58c:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f58e:	2a00      	cmp	r2, #0
9000f590:	d1f1      	bne.n	9000f576 <xQueueReceive+0x19a>
		pxQueue->cRxLock = queueUNLOCKED;
9000f592:	23ff      	movs	r3, #255	@ 0xff
9000f594:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000f598:	f7ff fa16 	bl	9000e9c8 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000f59c:	f001 f808 	bl	900105b0 <xTaskResumeAll>
	taskENTER_CRITICAL();
9000f5a0:	f7ff f9f0 	bl	9000e984 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000f5a4:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000f5a6:	b153      	cbz	r3, 9000f5be <xQueueReceive+0x1e2>
	taskEXIT_CRITICAL();
9000f5a8:	f7ff fa0e 	bl	9000e9c8 <vPortExitCritical>
		taskENTER_CRITICAL();
9000f5ac:	f7ff f9ea 	bl	9000e984 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f5b0:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000f5b2:	2d00      	cmp	r5, #0
9000f5b4:	d169      	bne.n	9000f68a <xQueueReceive+0x2ae>
				if( xTicksToWait == ( TickType_t ) 0 )
9000f5b6:	9b01      	ldr	r3, [sp, #4]
9000f5b8:	2b00      	cmp	r3, #0
9000f5ba:	f47f af2f 	bne.w	9000f41c <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
9000f5be:	f7ff fa03 	bl	9000e9c8 <vPortExitCritical>
					return errQUEUE_EMPTY;
9000f5c2:	2000      	movs	r0, #0
}
9000f5c4:	b005      	add	sp, #20
9000f5c6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000f5ca:	f104 0924 	add.w	r9, r4, #36	@ 0x24
	taskEXIT_CRITICAL();
9000f5ce:	f7ff f9fb 	bl	9000e9c8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000f5d2:	9901      	ldr	r1, [sp, #4]
9000f5d4:	4648      	mov	r0, r9
9000f5d6:	f001 f885 	bl	900106e4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000f5da:	f7ff f9d3 	bl	9000e984 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f5de:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000f5e2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f5e4:	2d00      	cmp	r5, #0
9000f5e6:	dc04      	bgt.n	9000f5f2 <xQueueReceive+0x216>
9000f5e8:	e011      	b.n	9000f60e <xQueueReceive+0x232>
			--cTxLock;
9000f5ea:	1e6b      	subs	r3, r5, #1
9000f5ec:	b2da      	uxtb	r2, r3
9000f5ee:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f5f0:	b16a      	cbz	r2, 9000f60e <xQueueReceive+0x232>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f5f2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f5f4:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f5f6:	b153      	cbz	r3, 9000f60e <xQueueReceive+0x232>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f5f8:	f001 f902 	bl	90010800 <xTaskRemoveFromEventList>
9000f5fc:	2800      	cmp	r0, #0
9000f5fe:	d0f4      	beq.n	9000f5ea <xQueueReceive+0x20e>
						vTaskMissedYield();
9000f600:	f001 f992 	bl	90010928 <vTaskMissedYield>
			--cTxLock;
9000f604:	1e6b      	subs	r3, r5, #1
9000f606:	b2da      	uxtb	r2, r3
9000f608:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f60a:	2a00      	cmp	r2, #0
9000f60c:	d1f1      	bne.n	9000f5f2 <xQueueReceive+0x216>
		pxQueue->cTxLock = queueUNLOCKED;
9000f60e:	23ff      	movs	r3, #255	@ 0xff
9000f610:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000f614:	f7ff f9d8 	bl	9000e9c8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f618:	f7ff f9b4 	bl	9000e984 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f61c:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000f620:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f622:	2d00      	cmp	r5, #0
9000f624:	dd14      	ble.n	9000f650 <xQueueReceive+0x274>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f626:	f104 0910 	add.w	r9, r4, #16
9000f62a:	e003      	b.n	9000f634 <xQueueReceive+0x258>
				--cRxLock;
9000f62c:	1e6b      	subs	r3, r5, #1
9000f62e:	b2da      	uxtb	r2, r3
9000f630:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f632:	b16a      	cbz	r2, 9000f650 <xQueueReceive+0x274>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f634:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f636:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f638:	b153      	cbz	r3, 9000f650 <xQueueReceive+0x274>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f63a:	f001 f8e1 	bl	90010800 <xTaskRemoveFromEventList>
9000f63e:	2800      	cmp	r0, #0
9000f640:	d0f4      	beq.n	9000f62c <xQueueReceive+0x250>
					vTaskMissedYield();
9000f642:	f001 f971 	bl	90010928 <vTaskMissedYield>
				--cRxLock;
9000f646:	1e6b      	subs	r3, r5, #1
9000f648:	b2da      	uxtb	r2, r3
9000f64a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f64c:	2a00      	cmp	r2, #0
9000f64e:	d1f1      	bne.n	9000f634 <xQueueReceive+0x258>
		pxQueue->cRxLock = queueUNLOCKED;
9000f650:	23ff      	movs	r3, #255	@ 0xff
9000f652:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000f656:	f7ff f9b7 	bl	9000e9c8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000f65a:	f000 ffa9 	bl	900105b0 <xTaskResumeAll>
9000f65e:	2800      	cmp	r0, #0
9000f660:	d1a4      	bne.n	9000f5ac <xQueueReceive+0x1d0>
					portYIELD_WITHIN_API();
9000f662:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f666:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f66a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f66e:	f3bf 8f4f 	dsb	sy
9000f672:	f3bf 8f6f 	isb	sy
9000f676:	e799      	b.n	9000f5ac <xQueueReceive+0x1d0>
9000f678:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f67c:	f383 8811 	msr	BASEPRI, r3
9000f680:	f3bf 8f6f 	isb	sy
9000f684:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000f688:	e7fe      	b.n	9000f688 <xQueueReceive+0x2ac>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000f68a:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000f68c:	b152      	cbz	r2, 9000f6a4 <xQueueReceive+0x2c8>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f68e:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000f690:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f692:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000f694:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f696:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000f698:	d301      	bcc.n	9000f69e <xQueueReceive+0x2c2>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000f69a:	6821      	ldr	r1, [r4, #0]
9000f69c:	60e1      	str	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000f69e:	4638      	mov	r0, r7
9000f6a0:	f01b fa35 	bl	9002ab0e <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000f6a4:	3d01      	subs	r5, #1
9000f6a6:	63a5      	str	r5, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f6a8:	6923      	ldr	r3, [r4, #16]
9000f6aa:	b91b      	cbnz	r3, 9000f6b4 <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
9000f6ac:	f7ff f98c 	bl	9000e9c8 <vPortExitCritical>
				return pdPASS;
9000f6b0:	2001      	movs	r0, #1
9000f6b2:	e787      	b.n	9000f5c4 <xQueueReceive+0x1e8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f6b4:	f104 0010 	add.w	r0, r4, #16
9000f6b8:	f001 f8a2 	bl	90010800 <xTaskRemoveFromEventList>
9000f6bc:	2800      	cmp	r0, #0
9000f6be:	d0f5      	beq.n	9000f6ac <xQueueReceive+0x2d0>
						queueYIELD_IF_USING_PREEMPTION();
9000f6c0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f6c4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f6c8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f6cc:	f3bf 8f4f 	dsb	sy
9000f6d0:	f3bf 8f6f 	isb	sy
9000f6d4:	e7ea      	b.n	9000f6ac <xQueueReceive+0x2d0>
9000f6d6:	bf00      	nop

9000f6d8 <xQueueSemaphoreTake>:
{
9000f6d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000f6dc:	b085      	sub	sp, #20
9000f6de:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
9000f6e0:	2800      	cmp	r0, #0
9000f6e2:	d05f      	beq.n	9000f7a4 <xQueueSemaphoreTake+0xcc>
	configASSERT( pxQueue->uxItemSize == 0 );
9000f6e4:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000f6e6:	4604      	mov	r4, r0
9000f6e8:	b143      	cbz	r3, 9000f6fc <xQueueSemaphoreTake+0x24>
9000f6ea:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f6ee:	f383 8811 	msr	BASEPRI, r3
9000f6f2:	f3bf 8f6f 	isb	sy
9000f6f6:	f3bf 8f4f 	dsb	sy
9000f6fa:	e7fe      	b.n	9000f6fa <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f6fc:	f001 f91a 	bl	90010934 <xTaskGetSchedulerState>
9000f700:	2800      	cmp	r0, #0
9000f702:	d058      	beq.n	9000f7b6 <xQueueSemaphoreTake+0xde>
		taskENTER_CRITICAL();
9000f704:	f7ff f93e 	bl	9000e984 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
9000f708:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
9000f70a:	2d00      	cmp	r5, #0
9000f70c:	f040 8155 	bne.w	9000f9ba <xQueueSemaphoreTake+0x2e2>
				if( xTicksToWait == ( TickType_t ) 0 )
9000f710:	9b01      	ldr	r3, [sp, #4]
9000f712:	2b00      	cmp	r3, #0
9000f714:	f000 8145 	beq.w	9000f9a2 <xQueueSemaphoreTake+0x2ca>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000f718:	462f      	mov	r7, r5
		prvLockQueue( pxQueue );
9000f71a:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f71c:	f104 0624 	add.w	r6, r4, #36	@ 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
9000f720:	a802      	add	r0, sp, #8
9000f722:	f001 f8b3 	bl	9001088c <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
9000f726:	f7ff f94f 	bl	9000e9c8 <vPortExitCritical>
		vTaskSuspendAll();
9000f72a:	f000 ff39 	bl	900105a0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000f72e:	f7ff f929 	bl	9000e984 <vPortEnterCritical>
9000f732:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000f736:	2bff      	cmp	r3, #255	@ 0xff
9000f738:	d101      	bne.n	9000f73e <xQueueSemaphoreTake+0x66>
9000f73a:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
9000f73e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000f742:	2bff      	cmp	r3, #255	@ 0xff
9000f744:	d101      	bne.n	9000f74a <xQueueSemaphoreTake+0x72>
9000f746:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
9000f74a:	f7ff f93d 	bl	9000e9c8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000f74e:	a901      	add	r1, sp, #4
9000f750:	a802      	add	r0, sp, #8
9000f752:	f001 f8a7 	bl	900108a4 <xTaskCheckForTimeOut>
9000f756:	2800      	cmp	r0, #0
9000f758:	d139      	bne.n	9000f7ce <xQueueSemaphoreTake+0xf6>
	taskENTER_CRITICAL();
9000f75a:	f7ff f913 	bl	9000e984 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000f75e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000f760:	2b00      	cmp	r3, #0
9000f762:	f000 80c0 	beq.w	9000f8e6 <xQueueSemaphoreTake+0x20e>
	taskEXIT_CRITICAL();
9000f766:	f7ff f92f 	bl	9000e9c8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f76a:	f7ff f90b 	bl	9000e984 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f76e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000f772:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f774:	2d00      	cmp	r5, #0
9000f776:	f340 8091 	ble.w	9000f89c <xQueueSemaphoreTake+0x1c4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f77a:	f104 0924 	add.w	r9, r4, #36	@ 0x24
9000f77e:	e005      	b.n	9000f78c <xQueueSemaphoreTake+0xb4>
			--cTxLock;
9000f780:	1e6b      	subs	r3, r5, #1
9000f782:	b2da      	uxtb	r2, r3
9000f784:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f786:	2a00      	cmp	r2, #0
9000f788:	f000 8088 	beq.w	9000f89c <xQueueSemaphoreTake+0x1c4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f78c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f78e:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f790:	2b00      	cmp	r3, #0
9000f792:	f000 8083 	beq.w	9000f89c <xQueueSemaphoreTake+0x1c4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f796:	f001 f833 	bl	90010800 <xTaskRemoveFromEventList>
9000f79a:	2800      	cmp	r0, #0
9000f79c:	d0f0      	beq.n	9000f780 <xQueueSemaphoreTake+0xa8>
						vTaskMissedYield();
9000f79e:	f001 f8c3 	bl	90010928 <vTaskMissedYield>
9000f7a2:	e7ed      	b.n	9000f780 <xQueueSemaphoreTake+0xa8>
9000f7a4:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f7a8:	f383 8811 	msr	BASEPRI, r3
9000f7ac:	f3bf 8f6f 	isb	sy
9000f7b0:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000f7b4:	e7fe      	b.n	9000f7b4 <xQueueSemaphoreTake+0xdc>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f7b6:	9b01      	ldr	r3, [sp, #4]
9000f7b8:	2b00      	cmp	r3, #0
9000f7ba:	d0a3      	beq.n	9000f704 <xQueueSemaphoreTake+0x2c>
9000f7bc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f7c0:	f383 8811 	msr	BASEPRI, r3
9000f7c4:	f3bf 8f6f 	isb	sy
9000f7c8:	f3bf 8f4f 	dsb	sy
9000f7cc:	e7fe      	b.n	9000f7cc <xQueueSemaphoreTake+0xf4>
	taskENTER_CRITICAL();
9000f7ce:	f7ff f8d9 	bl	9000e984 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f7d2:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000f7d6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f7d8:	2d00      	cmp	r5, #0
9000f7da:	dc04      	bgt.n	9000f7e6 <xQueueSemaphoreTake+0x10e>
9000f7dc:	e011      	b.n	9000f802 <xQueueSemaphoreTake+0x12a>
			--cTxLock;
9000f7de:	1e6b      	subs	r3, r5, #1
9000f7e0:	b2da      	uxtb	r2, r3
9000f7e2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f7e4:	b16a      	cbz	r2, 9000f802 <xQueueSemaphoreTake+0x12a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f7e6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f7e8:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f7ea:	b153      	cbz	r3, 9000f802 <xQueueSemaphoreTake+0x12a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f7ec:	f001 f808 	bl	90010800 <xTaskRemoveFromEventList>
9000f7f0:	2800      	cmp	r0, #0
9000f7f2:	d0f4      	beq.n	9000f7de <xQueueSemaphoreTake+0x106>
						vTaskMissedYield();
9000f7f4:	f001 f898 	bl	90010928 <vTaskMissedYield>
			--cTxLock;
9000f7f8:	1e6b      	subs	r3, r5, #1
9000f7fa:	b2da      	uxtb	r2, r3
9000f7fc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f7fe:	2a00      	cmp	r2, #0
9000f800:	d1f1      	bne.n	9000f7e6 <xQueueSemaphoreTake+0x10e>
		pxQueue->cTxLock = queueUNLOCKED;
9000f802:	23ff      	movs	r3, #255	@ 0xff
9000f804:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000f808:	f7ff f8de 	bl	9000e9c8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f80c:	f7ff f8ba 	bl	9000e984 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f810:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000f814:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f816:	2d00      	cmp	r5, #0
9000f818:	dd14      	ble.n	9000f844 <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f81a:	f104 0910 	add.w	r9, r4, #16
9000f81e:	e003      	b.n	9000f828 <xQueueSemaphoreTake+0x150>
				--cRxLock;
9000f820:	1e6b      	subs	r3, r5, #1
9000f822:	b2da      	uxtb	r2, r3
9000f824:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f826:	b16a      	cbz	r2, 9000f844 <xQueueSemaphoreTake+0x16c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f828:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f82a:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f82c:	b153      	cbz	r3, 9000f844 <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f82e:	f000 ffe7 	bl	90010800 <xTaskRemoveFromEventList>
9000f832:	2800      	cmp	r0, #0
9000f834:	d0f4      	beq.n	9000f820 <xQueueSemaphoreTake+0x148>
					vTaskMissedYield();
9000f836:	f001 f877 	bl	90010928 <vTaskMissedYield>
				--cRxLock;
9000f83a:	1e6b      	subs	r3, r5, #1
9000f83c:	b2da      	uxtb	r2, r3
9000f83e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f840:	2a00      	cmp	r2, #0
9000f842:	d1f1      	bne.n	9000f828 <xQueueSemaphoreTake+0x150>
		pxQueue->cRxLock = queueUNLOCKED;
9000f844:	23ff      	movs	r3, #255	@ 0xff
9000f846:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000f84a:	f7ff f8bd 	bl	9000e9c8 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000f84e:	f000 feaf 	bl	900105b0 <xTaskResumeAll>
	taskENTER_CRITICAL();
9000f852:	f7ff f897 	bl	9000e984 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000f856:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000f858:	b943      	cbnz	r3, 9000f86c <xQueueSemaphoreTake+0x194>
	taskEXIT_CRITICAL();
9000f85a:	f7ff f8b5 	bl	9000e9c8 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
9000f85e:	2f00      	cmp	r7, #0
9000f860:	f040 8094 	bne.w	9000f98c <xQueueSemaphoreTake+0x2b4>
					return errQUEUE_EMPTY;
9000f864:	2000      	movs	r0, #0
}
9000f866:	b005      	add	sp, #20
9000f868:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
9000f86c:	f7ff f8ac 	bl	9000e9c8 <vPortExitCritical>
		taskENTER_CRITICAL();
9000f870:	f7ff f888 	bl	9000e984 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
9000f874:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
9000f876:	2d00      	cmp	r5, #0
9000f878:	f040 809f 	bne.w	9000f9ba <xQueueSemaphoreTake+0x2e2>
				if( xTicksToWait == ( TickType_t ) 0 )
9000f87c:	9b01      	ldr	r3, [sp, #4]
9000f87e:	2b00      	cmp	r3, #0
9000f880:	f47f af51 	bne.w	9000f726 <xQueueSemaphoreTake+0x4e>
						configASSERT( xInheritanceOccurred == pdFALSE );
9000f884:	2f00      	cmp	r7, #0
9000f886:	f000 808c 	beq.w	9000f9a2 <xQueueSemaphoreTake+0x2ca>
9000f88a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f88e:	f383 8811 	msr	BASEPRI, r3
9000f892:	f3bf 8f6f 	isb	sy
9000f896:	f3bf 8f4f 	dsb	sy
9000f89a:	e7fe      	b.n	9000f89a <xQueueSemaphoreTake+0x1c2>
		pxQueue->cTxLock = queueUNLOCKED;
9000f89c:	23ff      	movs	r3, #255	@ 0xff
9000f89e:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000f8a2:	f7ff f891 	bl	9000e9c8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f8a6:	f7ff f86d 	bl	9000e984 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f8aa:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000f8ae:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f8b0:	2d00      	cmp	r5, #0
9000f8b2:	dd10      	ble.n	9000f8d6 <xQueueSemaphoreTake+0x1fe>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f8b4:	f104 0910 	add.w	r9, r4, #16
9000f8b8:	e003      	b.n	9000f8c2 <xQueueSemaphoreTake+0x1ea>
				--cRxLock;
9000f8ba:	1e6b      	subs	r3, r5, #1
9000f8bc:	b2da      	uxtb	r2, r3
9000f8be:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f8c0:	b14a      	cbz	r2, 9000f8d6 <xQueueSemaphoreTake+0x1fe>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f8c2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f8c4:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f8c6:	b133      	cbz	r3, 9000f8d6 <xQueueSemaphoreTake+0x1fe>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f8c8:	f000 ff9a 	bl	90010800 <xTaskRemoveFromEventList>
9000f8cc:	2800      	cmp	r0, #0
9000f8ce:	d0f4      	beq.n	9000f8ba <xQueueSemaphoreTake+0x1e2>
					vTaskMissedYield();
9000f8d0:	f001 f82a 	bl	90010928 <vTaskMissedYield>
9000f8d4:	e7f1      	b.n	9000f8ba <xQueueSemaphoreTake+0x1e2>
		pxQueue->cRxLock = queueUNLOCKED;
9000f8d6:	23ff      	movs	r3, #255	@ 0xff
9000f8d8:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000f8dc:	f7ff f874 	bl	9000e9c8 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000f8e0:	f000 fe66 	bl	900105b0 <xTaskResumeAll>
9000f8e4:	e7c4      	b.n	9000f870 <xQueueSemaphoreTake+0x198>
	taskEXIT_CRITICAL();
9000f8e6:	f7ff f86f 	bl	9000e9c8 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000f8ea:	6823      	ldr	r3, [r4, #0]
9000f8ec:	2b00      	cmp	r3, #0
9000f8ee:	d05b      	beq.n	9000f9a8 <xQueueSemaphoreTake+0x2d0>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000f8f0:	f104 0924 	add.w	r9, r4, #36	@ 0x24
9000f8f4:	9901      	ldr	r1, [sp, #4]
9000f8f6:	4648      	mov	r0, r9
9000f8f8:	f000 fef4 	bl	900106e4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000f8fc:	f7ff f842 	bl	9000e984 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f900:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000f904:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f906:	2d00      	cmp	r5, #0
9000f908:	dc04      	bgt.n	9000f914 <xQueueSemaphoreTake+0x23c>
9000f90a:	e00d      	b.n	9000f928 <xQueueSemaphoreTake+0x250>
			--cTxLock;
9000f90c:	1e6b      	subs	r3, r5, #1
9000f90e:	b2da      	uxtb	r2, r3
9000f910:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f912:	b14a      	cbz	r2, 9000f928 <xQueueSemaphoreTake+0x250>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f914:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f916:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f918:	b133      	cbz	r3, 9000f928 <xQueueSemaphoreTake+0x250>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f91a:	f000 ff71 	bl	90010800 <xTaskRemoveFromEventList>
9000f91e:	2800      	cmp	r0, #0
9000f920:	d0f4      	beq.n	9000f90c <xQueueSemaphoreTake+0x234>
						vTaskMissedYield();
9000f922:	f001 f801 	bl	90010928 <vTaskMissedYield>
9000f926:	e7f1      	b.n	9000f90c <xQueueSemaphoreTake+0x234>
		pxQueue->cTxLock = queueUNLOCKED;
9000f928:	23ff      	movs	r3, #255	@ 0xff
9000f92a:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000f92e:	f7ff f84b 	bl	9000e9c8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f932:	f7ff f827 	bl	9000e984 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f936:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000f93a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f93c:	2d00      	cmp	r5, #0
9000f93e:	dd10      	ble.n	9000f962 <xQueueSemaphoreTake+0x28a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f940:	f104 0910 	add.w	r9, r4, #16
9000f944:	e003      	b.n	9000f94e <xQueueSemaphoreTake+0x276>
				--cRxLock;
9000f946:	1e6b      	subs	r3, r5, #1
9000f948:	b2da      	uxtb	r2, r3
9000f94a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f94c:	b14a      	cbz	r2, 9000f962 <xQueueSemaphoreTake+0x28a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f94e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f950:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f952:	b133      	cbz	r3, 9000f962 <xQueueSemaphoreTake+0x28a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f954:	f000 ff54 	bl	90010800 <xTaskRemoveFromEventList>
9000f958:	2800      	cmp	r0, #0
9000f95a:	d0f4      	beq.n	9000f946 <xQueueSemaphoreTake+0x26e>
					vTaskMissedYield();
9000f95c:	f000 ffe4 	bl	90010928 <vTaskMissedYield>
9000f960:	e7f1      	b.n	9000f946 <xQueueSemaphoreTake+0x26e>
		pxQueue->cRxLock = queueUNLOCKED;
9000f962:	23ff      	movs	r3, #255	@ 0xff
9000f964:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000f968:	f7ff f82e 	bl	9000e9c8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000f96c:	f000 fe20 	bl	900105b0 <xTaskResumeAll>
9000f970:	2800      	cmp	r0, #0
9000f972:	f47f af7d 	bne.w	9000f870 <xQueueSemaphoreTake+0x198>
					portYIELD_WITHIN_API();
9000f976:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f97a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f97e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f982:	f3bf 8f4f 	dsb	sy
9000f986:	f3bf 8f6f 	isb	sy
9000f98a:	e771      	b.n	9000f870 <xQueueSemaphoreTake+0x198>
						taskENTER_CRITICAL();
9000f98c:	f7fe fffa 	bl	9000e984 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
9000f990:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000f992:	b119      	cbz	r1, 9000f99c <xQueueSemaphoreTake+0x2c4>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
9000f994:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000f996:	6819      	ldr	r1, [r3, #0]
9000f998:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
9000f99c:	68a0      	ldr	r0, [r4, #8]
9000f99e:	f001 f85d 	bl	90010a5c <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
9000f9a2:	f7ff f811 	bl	9000e9c8 <vPortExitCritical>
9000f9a6:	e75d      	b.n	9000f864 <xQueueSemaphoreTake+0x18c>
						taskENTER_CRITICAL();
9000f9a8:	f7fe ffec 	bl	9000e984 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
9000f9ac:	68a0      	ldr	r0, [r4, #8]
9000f9ae:	f000 ffd1 	bl	90010954 <xTaskPriorityInherit>
9000f9b2:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
9000f9b4:	f7ff f808 	bl	9000e9c8 <vPortExitCritical>
9000f9b8:	e79a      	b.n	9000f8f0 <xQueueSemaphoreTake+0x218>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000f9ba:	3d01      	subs	r5, #1
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000f9bc:	6823      	ldr	r3, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000f9be:	63a5      	str	r5, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000f9c0:	b12b      	cbz	r3, 9000f9ce <xQueueSemaphoreTake+0x2f6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f9c2:	6923      	ldr	r3, [r4, #16]
9000f9c4:	b93b      	cbnz	r3, 9000f9d6 <xQueueSemaphoreTake+0x2fe>
				taskEXIT_CRITICAL();
9000f9c6:	f7fe ffff 	bl	9000e9c8 <vPortExitCritical>
				return pdPASS;
9000f9ca:	2001      	movs	r0, #1
9000f9cc:	e74b      	b.n	9000f866 <xQueueSemaphoreTake+0x18e>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
9000f9ce:	f001 f895 	bl	90010afc <pvTaskIncrementMutexHeldCount>
9000f9d2:	60a0      	str	r0, [r4, #8]
9000f9d4:	e7f5      	b.n	9000f9c2 <xQueueSemaphoreTake+0x2ea>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f9d6:	f104 0010 	add.w	r0, r4, #16
9000f9da:	f000 ff11 	bl	90010800 <xTaskRemoveFromEventList>
9000f9de:	2800      	cmp	r0, #0
9000f9e0:	d0f1      	beq.n	9000f9c6 <xQueueSemaphoreTake+0x2ee>
						queueYIELD_IF_USING_PREEMPTION();
9000f9e2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f9e6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f9ea:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f9ee:	f3bf 8f4f 	dsb	sy
9000f9f2:	f3bf 8f6f 	isb	sy
9000f9f6:	e7e6      	b.n	9000f9c6 <xQueueSemaphoreTake+0x2ee>

9000f9f8 <xQueueReceiveFromISR>:
{
9000f9f8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
9000f9fc:	b310      	cbz	r0, 9000fa44 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f9fe:	460f      	mov	r7, r1
9000fa00:	4604      	mov	r4, r0
9000fa02:	4616      	mov	r6, r2
9000fa04:	b191      	cbz	r1, 9000fa2c <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000fa06:	f7ff f8ef 	bl	9000ebe8 <vPortValidateInterruptPriority>
	__asm volatile
9000fa0a:	f3ef 8911 	mrs	r9, BASEPRI
9000fa0e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fa12:	f383 8811 	msr	BASEPRI, r3
9000fa16:	f3bf 8f6f 	isb	sy
9000fa1a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000fa1e:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000fa20:	b9cd      	cbnz	r5, 9000fa56 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
9000fa22:	4628      	mov	r0, r5
	__asm volatile
9000fa24:	f389 8811 	msr	BASEPRI, r9
}
9000fa28:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000fa2c:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000fa2e:	2b00      	cmp	r3, #0
9000fa30:	d0e9      	beq.n	9000fa06 <xQueueReceiveFromISR+0xe>
	__asm volatile
9000fa32:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fa36:	f383 8811 	msr	BASEPRI, r3
9000fa3a:	f3bf 8f6f 	isb	sy
9000fa3e:	f3bf 8f4f 	dsb	sy
9000fa42:	e7fe      	b.n	9000fa42 <xQueueReceiveFromISR+0x4a>
9000fa44:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fa48:	f383 8811 	msr	BASEPRI, r3
9000fa4c:	f3bf 8f6f 	isb	sy
9000fa50:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000fa54:	e7fe      	b.n	9000fa54 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
9000fa56:	f894 8044 	ldrb.w	r8, [r4, #68]	@ 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000fa5a:	6c22      	ldr	r2, [r4, #64]	@ 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
9000fa5c:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000fa60:	b142      	cbz	r2, 9000fa74 <xQueueReceiveFromISR+0x7c>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000fa62:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000fa64:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000fa66:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000fa68:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000fa6a:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000fa6c:	d21c      	bcs.n	9000faa8 <xQueueReceiveFromISR+0xb0>
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000fa6e:	4638      	mov	r0, r7
9000fa70:	f01b f84d 	bl	9002ab0e <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000fa74:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
9000fa76:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000fa7a:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
9000fa7c:	d006      	beq.n	9000fa8c <xQueueReceiveFromISR+0x94>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
9000fa7e:	f108 0301 	add.w	r3, r8, #1
9000fa82:	b25b      	sxtb	r3, r3
9000fa84:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
			xReturn = pdPASS;
9000fa88:	2001      	movs	r0, #1
9000fa8a:	e7cb      	b.n	9000fa24 <xQueueReceiveFromISR+0x2c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fa8c:	6923      	ldr	r3, [r4, #16]
9000fa8e:	2b00      	cmp	r3, #0
9000fa90:	d0fa      	beq.n	9000fa88 <xQueueReceiveFromISR+0x90>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fa92:	f104 0010 	add.w	r0, r4, #16
9000fa96:	f000 feb3 	bl	90010800 <xTaskRemoveFromEventList>
						if( pxHigherPriorityTaskWoken != NULL )
9000fa9a:	2e00      	cmp	r6, #0
9000fa9c:	d0f4      	beq.n	9000fa88 <xQueueReceiveFromISR+0x90>
9000fa9e:	2800      	cmp	r0, #0
9000faa0:	d0f2      	beq.n	9000fa88 <xQueueReceiveFromISR+0x90>
							*pxHigherPriorityTaskWoken = pdTRUE;
9000faa2:	2301      	movs	r3, #1
9000faa4:	6033      	str	r3, [r6, #0]
9000faa6:	e7ef      	b.n	9000fa88 <xQueueReceiveFromISR+0x90>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000faa8:	6821      	ldr	r1, [r4, #0]
9000faaa:	60e1      	str	r1, [r4, #12]
9000faac:	e7df      	b.n	9000fa6e <xQueueReceiveFromISR+0x76>
9000faae:	bf00      	nop

9000fab0 <vQueueDelete>:
	configASSERT( pxQueue );
9000fab0:	b1e0      	cbz	r0, 9000faec <vQueueDelete+0x3c>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
9000fab2:	4b21      	ldr	r3, [pc, #132]	@ (9000fb38 <vQueueDelete+0x88>)
9000fab4:	685a      	ldr	r2, [r3, #4]
9000fab6:	4290      	cmp	r0, r2
9000fab8:	d02b      	beq.n	9000fb12 <vQueueDelete+0x62>
9000faba:	68da      	ldr	r2, [r3, #12]
9000fabc:	4290      	cmp	r0, r2
9000fabe:	d02a      	beq.n	9000fb16 <vQueueDelete+0x66>
9000fac0:	695a      	ldr	r2, [r3, #20]
9000fac2:	4290      	cmp	r0, r2
9000fac4:	d029      	beq.n	9000fb1a <vQueueDelete+0x6a>
9000fac6:	69da      	ldr	r2, [r3, #28]
9000fac8:	4290      	cmp	r0, r2
9000faca:	d028      	beq.n	9000fb1e <vQueueDelete+0x6e>
9000facc:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
9000face:	4290      	cmp	r0, r2
9000fad0:	d027      	beq.n	9000fb22 <vQueueDelete+0x72>
9000fad2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000fad4:	4290      	cmp	r0, r2
9000fad6:	d014      	beq.n	9000fb02 <vQueueDelete+0x52>
9000fad8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000fada:	4290      	cmp	r0, r2
9000fadc:	d023      	beq.n	9000fb26 <vQueueDelete+0x76>
9000fade:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
9000fae0:	4290      	cmp	r0, r2
9000fae2:	d022      	beq.n	9000fb2a <vQueueDelete+0x7a>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
9000fae4:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
9000fae8:	b14b      	cbz	r3, 9000fafe <vQueueDelete+0x4e>
}
9000faea:	4770      	bx	lr
9000faec:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000faf0:	f383 8811 	msr	BASEPRI, r3
9000faf4:	f3bf 8f6f 	isb	sy
9000faf8:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000fafc:	e7fe      	b.n	9000fafc <vQueueDelete+0x4c>
			vPortFree( pxQueue );
9000fafe:	f7fe be21 	b.w	9000e744 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000fb02:	2205      	movs	r2, #5
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
9000fb04:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
9000fb08:	ed9f 7b09 	vldr	d7, [pc, #36]	@ 9000fb30 <vQueueDelete+0x80>
9000fb0c:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
9000fb10:	e7e8      	b.n	9000fae4 <vQueueDelete+0x34>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000fb12:	2200      	movs	r2, #0
9000fb14:	e7f6      	b.n	9000fb04 <vQueueDelete+0x54>
9000fb16:	2201      	movs	r2, #1
9000fb18:	e7f4      	b.n	9000fb04 <vQueueDelete+0x54>
9000fb1a:	2202      	movs	r2, #2
9000fb1c:	e7f2      	b.n	9000fb04 <vQueueDelete+0x54>
9000fb1e:	2203      	movs	r2, #3
9000fb20:	e7f0      	b.n	9000fb04 <vQueueDelete+0x54>
9000fb22:	2204      	movs	r2, #4
9000fb24:	e7ee      	b.n	9000fb04 <vQueueDelete+0x54>
9000fb26:	2206      	movs	r2, #6
9000fb28:	e7ec      	b.n	9000fb04 <vQueueDelete+0x54>
9000fb2a:	2207      	movs	r2, #7
9000fb2c:	e7ea      	b.n	9000fb04 <vQueueDelete+0x54>
9000fb2e:	bf00      	nop
	...
9000fb38:	240211f0 	.word	0x240211f0

9000fb3c <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
9000fb3c:	4b12      	ldr	r3, [pc, #72]	@ (9000fb88 <vQueueAddToRegistry+0x4c>)
9000fb3e:	681a      	ldr	r2, [r3, #0]
9000fb40:	b17a      	cbz	r2, 9000fb62 <vQueueAddToRegistry+0x26>
9000fb42:	689a      	ldr	r2, [r3, #8]
9000fb44:	b162      	cbz	r2, 9000fb60 <vQueueAddToRegistry+0x24>
9000fb46:	691a      	ldr	r2, [r3, #16]
9000fb48:	b192      	cbz	r2, 9000fb70 <vQueueAddToRegistry+0x34>
9000fb4a:	699a      	ldr	r2, [r3, #24]
9000fb4c:	b192      	cbz	r2, 9000fb74 <vQueueAddToRegistry+0x38>
9000fb4e:	6a1a      	ldr	r2, [r3, #32]
9000fb50:	b192      	cbz	r2, 9000fb78 <vQueueAddToRegistry+0x3c>
9000fb52:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
9000fb54:	b192      	cbz	r2, 9000fb7c <vQueueAddToRegistry+0x40>
9000fb56:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000fb58:	b192      	cbz	r2, 9000fb80 <vQueueAddToRegistry+0x44>
9000fb5a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000fb5c:	b192      	cbz	r2, 9000fb84 <vQueueAddToRegistry+0x48>
	}
9000fb5e:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000fb60:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
9000fb62:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
9000fb66:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
9000fb6a:	f8cc 0004 	str.w	r0, [ip, #4]
	}
9000fb6e:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000fb70:	2202      	movs	r2, #2
9000fb72:	e7f6      	b.n	9000fb62 <vQueueAddToRegistry+0x26>
9000fb74:	2203      	movs	r2, #3
9000fb76:	e7f4      	b.n	9000fb62 <vQueueAddToRegistry+0x26>
9000fb78:	2204      	movs	r2, #4
9000fb7a:	e7f2      	b.n	9000fb62 <vQueueAddToRegistry+0x26>
9000fb7c:	2205      	movs	r2, #5
9000fb7e:	e7f0      	b.n	9000fb62 <vQueueAddToRegistry+0x26>
9000fb80:	2206      	movs	r2, #6
9000fb82:	e7ee      	b.n	9000fb62 <vQueueAddToRegistry+0x26>
9000fb84:	2207      	movs	r2, #7
9000fb86:	e7ec      	b.n	9000fb62 <vQueueAddToRegistry+0x26>
9000fb88:	240211f0 	.word	0x240211f0

9000fb8c <vQueueUnregisterQueue>:
			if( xQueueRegistry[ ux ].xHandle == xQueue )
9000fb8c:	4b17      	ldr	r3, [pc, #92]	@ (9000fbec <vQueueUnregisterQueue+0x60>)
9000fb8e:	685a      	ldr	r2, [r3, #4]
9000fb90:	4290      	cmp	r0, r2
9000fb92:	d015      	beq.n	9000fbc0 <vQueueUnregisterQueue+0x34>
9000fb94:	68da      	ldr	r2, [r3, #12]
9000fb96:	4290      	cmp	r0, r2
9000fb98:	d01a      	beq.n	9000fbd0 <vQueueUnregisterQueue+0x44>
9000fb9a:	695a      	ldr	r2, [r3, #20]
9000fb9c:	4290      	cmp	r0, r2
9000fb9e:	d019      	beq.n	9000fbd4 <vQueueUnregisterQueue+0x48>
9000fba0:	69da      	ldr	r2, [r3, #28]
9000fba2:	4290      	cmp	r0, r2
9000fba4:	d018      	beq.n	9000fbd8 <vQueueUnregisterQueue+0x4c>
9000fba6:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
9000fba8:	4290      	cmp	r0, r2
9000fbaa:	d017      	beq.n	9000fbdc <vQueueUnregisterQueue+0x50>
9000fbac:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000fbae:	4290      	cmp	r0, r2
9000fbb0:	d016      	beq.n	9000fbe0 <vQueueUnregisterQueue+0x54>
9000fbb2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000fbb4:	4290      	cmp	r0, r2
9000fbb6:	d015      	beq.n	9000fbe4 <vQueueUnregisterQueue+0x58>
9000fbb8:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
9000fbba:	4282      	cmp	r2, r0
9000fbbc:	d014      	beq.n	9000fbe8 <vQueueUnregisterQueue+0x5c>
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
9000fbbe:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000fbc0:	2200      	movs	r2, #0
				xQueueRegistry[ ux ].pcQueueName = NULL;
9000fbc2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
9000fbc6:	2000      	movs	r0, #0
9000fbc8:	2100      	movs	r1, #0
9000fbca:	e9c3 0100 	strd	r0, r1, [r3]
	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
9000fbce:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000fbd0:	2201      	movs	r2, #1
9000fbd2:	e7f6      	b.n	9000fbc2 <vQueueUnregisterQueue+0x36>
9000fbd4:	2202      	movs	r2, #2
9000fbd6:	e7f4      	b.n	9000fbc2 <vQueueUnregisterQueue+0x36>
9000fbd8:	2203      	movs	r2, #3
9000fbda:	e7f2      	b.n	9000fbc2 <vQueueUnregisterQueue+0x36>
9000fbdc:	2204      	movs	r2, #4
9000fbde:	e7f0      	b.n	9000fbc2 <vQueueUnregisterQueue+0x36>
9000fbe0:	2205      	movs	r2, #5
9000fbe2:	e7ee      	b.n	9000fbc2 <vQueueUnregisterQueue+0x36>
9000fbe4:	2206      	movs	r2, #6
9000fbe6:	e7ec      	b.n	9000fbc2 <vQueueUnregisterQueue+0x36>
9000fbe8:	2207      	movs	r2, #7
9000fbea:	e7ea      	b.n	9000fbc2 <vQueueUnregisterQueue+0x36>
9000fbec:	240211f0 	.word	0x240211f0

9000fbf0 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
9000fbf0:	b570      	push	{r4, r5, r6, lr}
9000fbf2:	4605      	mov	r5, r0
9000fbf4:	460e      	mov	r6, r1
9000fbf6:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
9000fbf8:	f7fe fec4 	bl	9000e984 <vPortEnterCritical>
9000fbfc:	f895 3044 	ldrb.w	r3, [r5, #68]	@ 0x44
9000fc00:	2bff      	cmp	r3, #255	@ 0xff
9000fc02:	d102      	bne.n	9000fc0a <vQueueWaitForMessageRestricted+0x1a>
9000fc04:	2300      	movs	r3, #0
9000fc06:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
9000fc0a:	f895 3045 	ldrb.w	r3, [r5, #69]	@ 0x45
9000fc0e:	2bff      	cmp	r3, #255	@ 0xff
9000fc10:	d102      	bne.n	9000fc18 <vQueueWaitForMessageRestricted+0x28>
9000fc12:	2300      	movs	r3, #0
9000fc14:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
9000fc18:	f7fe fed6 	bl	9000e9c8 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
9000fc1c:	6bab      	ldr	r3, [r5, #56]	@ 0x38
9000fc1e:	2b00      	cmp	r3, #0
9000fc20:	d043      	beq.n	9000fcaa <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
9000fc22:	f7fe feaf 	bl	9000e984 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000fc26:	f895 3045 	ldrb.w	r3, [r5, #69]	@ 0x45
9000fc2a:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fc2c:	2c00      	cmp	r4, #0
9000fc2e:	dd14      	ble.n	9000fc5a <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fc30:	f105 0624 	add.w	r6, r5, #36	@ 0x24
9000fc34:	e003      	b.n	9000fc3e <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
9000fc36:	1e63      	subs	r3, r4, #1
9000fc38:	b2da      	uxtb	r2, r3
9000fc3a:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fc3c:	b16a      	cbz	r2, 9000fc5a <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000fc3e:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fc40:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000fc42:	b153      	cbz	r3, 9000fc5a <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fc44:	f000 fddc 	bl	90010800 <xTaskRemoveFromEventList>
9000fc48:	2800      	cmp	r0, #0
9000fc4a:	d0f4      	beq.n	9000fc36 <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
9000fc4c:	f000 fe6c 	bl	90010928 <vTaskMissedYield>
			--cTxLock;
9000fc50:	1e63      	subs	r3, r4, #1
9000fc52:	b2da      	uxtb	r2, r3
9000fc54:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fc56:	2a00      	cmp	r2, #0
9000fc58:	d1f1      	bne.n	9000fc3e <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
9000fc5a:	23ff      	movs	r3, #255	@ 0xff
9000fc5c:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000fc60:	f7fe feb2 	bl	9000e9c8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000fc64:	f7fe fe8e 	bl	9000e984 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000fc68:	f895 3044 	ldrb.w	r3, [r5, #68]	@ 0x44
9000fc6c:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fc6e:	2c00      	cmp	r4, #0
9000fc70:	dd14      	ble.n	9000fc9c <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fc72:	f105 0610 	add.w	r6, r5, #16
9000fc76:	e003      	b.n	9000fc80 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
9000fc78:	1e63      	subs	r3, r4, #1
9000fc7a:	b2da      	uxtb	r2, r3
9000fc7c:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fc7e:	b16a      	cbz	r2, 9000fc9c <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fc80:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fc82:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fc84:	b153      	cbz	r3, 9000fc9c <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fc86:	f000 fdbb 	bl	90010800 <xTaskRemoveFromEventList>
9000fc8a:	2800      	cmp	r0, #0
9000fc8c:	d0f4      	beq.n	9000fc78 <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
9000fc8e:	f000 fe4b 	bl	90010928 <vTaskMissedYield>
				--cRxLock;
9000fc92:	1e63      	subs	r3, r4, #1
9000fc94:	b2da      	uxtb	r2, r3
9000fc96:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fc98:	2a00      	cmp	r2, #0
9000fc9a:	d1f1      	bne.n	9000fc80 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
9000fc9c:	23ff      	movs	r3, #255	@ 0xff
9000fc9e:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
9000fca2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
9000fca6:	f7fe be8f 	b.w	9000e9c8 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
9000fcaa:	4622      	mov	r2, r4
9000fcac:	4631      	mov	r1, r6
9000fcae:	f105 0024 	add.w	r0, r5, #36	@ 0x24
9000fcb2:	f000 fd5b 	bl	9001076c <vTaskPlaceOnEventListRestricted>
9000fcb6:	e7b4      	b.n	9000fc22 <vQueueWaitForMessageRestricted+0x32>

9000fcb8 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
9000fcb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000fcbc:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
9000fcbe:	f7fe fe61 	bl	9000e984 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
9000fcc2:	4a33      	ldr	r2, [pc, #204]	@ (9000fd90 <prvAddNewTaskToReadyList+0xd8>)
		if( pxCurrentTCB == NULL )
9000fcc4:	4e33      	ldr	r6, [pc, #204]	@ (9000fd94 <prvAddNewTaskToReadyList+0xdc>)
		uxCurrentNumberOfTasks++;
9000fcc6:	6813      	ldr	r3, [r2, #0]
9000fcc8:	3301      	adds	r3, #1
9000fcca:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
9000fccc:	6833      	ldr	r3, [r6, #0]
9000fcce:	2b00      	cmp	r3, #0
9000fcd0:	d031      	beq.n	9000fd36 <prvAddNewTaskToReadyList+0x7e>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
9000fcd2:	4c31      	ldr	r4, [pc, #196]	@ (9000fd98 <prvAddNewTaskToReadyList+0xe0>)
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000fcd4:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
9000fcd6:	6823      	ldr	r3, [r4, #0]
9000fcd8:	b333      	cbz	r3, 9000fd28 <prvAddNewTaskToReadyList+0x70>
9000fcda:	4f30      	ldr	r7, [pc, #192]	@ (9000fd9c <prvAddNewTaskToReadyList+0xe4>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
9000fcdc:	4a30      	ldr	r2, [pc, #192]	@ (9000fda0 <prvAddNewTaskToReadyList+0xe8>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
9000fcde:	4931      	ldr	r1, [pc, #196]	@ (9000fda4 <prvAddNewTaskToReadyList+0xec>)
		uxTaskNumber++;
9000fce0:	6813      	ldr	r3, [r2, #0]
9000fce2:	3301      	adds	r3, #1
9000fce4:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
9000fce6:	646b      	str	r3, [r5, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
9000fce8:	680b      	ldr	r3, [r1, #0]
9000fcea:	4283      	cmp	r3, r0
9000fcec:	d200      	bcs.n	9000fcf0 <prvAddNewTaskToReadyList+0x38>
9000fcee:	6008      	str	r0, [r1, #0]
9000fcf0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000fcf4:	1d29      	adds	r1, r5, #4
9000fcf6:	eb07 0080 	add.w	r0, r7, r0, lsl #2
9000fcfa:	f7fe fd9d 	bl	9000e838 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
9000fcfe:	f7fe fe63 	bl	9000e9c8 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
9000fd02:	6823      	ldr	r3, [r4, #0]
9000fd04:	b173      	cbz	r3, 9000fd24 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
9000fd06:	6832      	ldr	r2, [r6, #0]
9000fd08:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000fd0a:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
9000fd0c:	429a      	cmp	r2, r3
9000fd0e:	d209      	bcs.n	9000fd24 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
9000fd10:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000fd14:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000fd18:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000fd1c:	f3bf 8f4f 	dsb	sy
9000fd20:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
9000fd24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000fd28:	6833      	ldr	r3, [r6, #0]
9000fd2a:	4f1c      	ldr	r7, [pc, #112]	@ (9000fd9c <prvAddNewTaskToReadyList+0xe4>)
9000fd2c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000fd2e:	4283      	cmp	r3, r0
9000fd30:	d8d4      	bhi.n	9000fcdc <prvAddNewTaskToReadyList+0x24>
					pxCurrentTCB = pxNewTCB;
9000fd32:	6035      	str	r5, [r6, #0]
9000fd34:	e7d2      	b.n	9000fcdc <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
9000fd36:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
9000fd38:	6813      	ldr	r3, [r2, #0]
9000fd3a:	2b01      	cmp	r3, #1
9000fd3c:	d003      	beq.n	9000fd46 <prvAddNewTaskToReadyList+0x8e>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000fd3e:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
9000fd40:	4f16      	ldr	r7, [pc, #88]	@ (9000fd9c <prvAddNewTaskToReadyList+0xe4>)
9000fd42:	4c15      	ldr	r4, [pc, #84]	@ (9000fd98 <prvAddNewTaskToReadyList+0xe0>)
9000fd44:	e7ca      	b.n	9000fcdc <prvAddNewTaskToReadyList+0x24>
9000fd46:	4f15      	ldr	r7, [pc, #84]	@ (9000fd9c <prvAddNewTaskToReadyList+0xe4>)
9000fd48:	463c      	mov	r4, r7
9000fd4a:	f507 688c 	add.w	r8, r7, #1120	@ 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000fd4e:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000fd50:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000fd52:	f7fe fd61 	bl	9000e818 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000fd56:	45a0      	cmp	r8, r4
9000fd58:	d1f9      	bne.n	9000fd4e <prvAddNewTaskToReadyList+0x96>
	}

	vListInitialise( &xDelayedTaskList1 );
9000fd5a:	f8df 8064 	ldr.w	r8, [pc, #100]	@ 9000fdc0 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
9000fd5e:	4c12      	ldr	r4, [pc, #72]	@ (9000fda8 <prvAddNewTaskToReadyList+0xf0>)
	vListInitialise( &xDelayedTaskList1 );
9000fd60:	4640      	mov	r0, r8
9000fd62:	f7fe fd59 	bl	9000e818 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
9000fd66:	4620      	mov	r0, r4
9000fd68:	f7fe fd56 	bl	9000e818 <vListInitialise>
	vListInitialise( &xPendingReadyList );
9000fd6c:	480f      	ldr	r0, [pc, #60]	@ (9000fdac <prvAddNewTaskToReadyList+0xf4>)
9000fd6e:	f7fe fd53 	bl	9000e818 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
9000fd72:	480f      	ldr	r0, [pc, #60]	@ (9000fdb0 <prvAddNewTaskToReadyList+0xf8>)
9000fd74:	f7fe fd50 	bl	9000e818 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
9000fd78:	480e      	ldr	r0, [pc, #56]	@ (9000fdb4 <prvAddNewTaskToReadyList+0xfc>)
9000fd7a:	f7fe fd4d 	bl	9000e818 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
9000fd7e:	4b0e      	ldr	r3, [pc, #56]	@ (9000fdb8 <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
9000fd80:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
9000fd82:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
9000fd86:	4b0d      	ldr	r3, [pc, #52]	@ (9000fdbc <prvAddNewTaskToReadyList+0x104>)
9000fd88:	601c      	str	r4, [r3, #0]
9000fd8a:	4c03      	ldr	r4, [pc, #12]	@ (9000fd98 <prvAddNewTaskToReadyList+0xe0>)
}
9000fd8c:	e7a6      	b.n	9000fcdc <prvAddNewTaskToReadyList+0x24>
9000fd8e:	bf00      	nop
9000fd90:	24021254 	.word	0x24021254
9000fd94:	24021728 	.word	0x24021728
9000fd98:	24021248 	.word	0x24021248
9000fd9c:	240212c8 	.word	0x240212c8
9000fda0:	24021238 	.word	0x24021238
9000fda4:	2402124c 	.word	0x2402124c
9000fda8:	240212a0 	.word	0x240212a0
9000fdac:	24021284 	.word	0x24021284
9000fdb0:	24021270 	.word	0x24021270
9000fdb4:	24021258 	.word	0x24021258
9000fdb8:	2402129c 	.word	0x2402129c
9000fdbc:	24021298 	.word	0x24021298
9000fdc0:	240212b4 	.word	0x240212b4

9000fdc4 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
9000fdc4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000fdc8:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000fdca:	0096      	lsls	r6, r2, #2
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
9000fdcc:	4607      	mov	r7, r0
9000fdce:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000fdd0:	4632      	mov	r2, r6
9000fdd2:	21a5      	movs	r1, #165	@ 0xa5
9000fdd4:	6b20      	ldr	r0, [r4, #48]	@ 0x30
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
9000fdd6:	4698      	mov	r8, r3
9000fdd8:	f8dd 9024 	ldr.w	r9, [sp, #36]	@ 0x24
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000fddc:	3e04      	subs	r6, #4
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000fdde:	f01a fd57 	bl	9002a890 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000fde2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000fde4:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9000fde6:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
9000fdea:	2d00      	cmp	r5, #0
9000fdec:	d074      	beq.n	9000fed8 <prvInitialiseNewTask.constprop.0+0x114>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fdee:	782b      	ldrb	r3, [r5, #0]
9000fdf0:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
			if( pcName[ x ] == ( char ) 0x00 )
9000fdf4:	2b00      	cmp	r3, #0
9000fdf6:	d036      	beq.n	9000fe66 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fdf8:	786b      	ldrb	r3, [r5, #1]
9000fdfa:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
			if( pcName[ x ] == ( char ) 0x00 )
9000fdfe:	b393      	cbz	r3, 9000fe66 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fe00:	78ab      	ldrb	r3, [r5, #2]
9000fe02:	f884 3036 	strb.w	r3, [r4, #54]	@ 0x36
			if( pcName[ x ] == ( char ) 0x00 )
9000fe06:	b373      	cbz	r3, 9000fe66 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fe08:	78eb      	ldrb	r3, [r5, #3]
9000fe0a:	f884 3037 	strb.w	r3, [r4, #55]	@ 0x37
			if( pcName[ x ] == ( char ) 0x00 )
9000fe0e:	b353      	cbz	r3, 9000fe66 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fe10:	792b      	ldrb	r3, [r5, #4]
9000fe12:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
			if( pcName[ x ] == ( char ) 0x00 )
9000fe16:	b333      	cbz	r3, 9000fe66 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fe18:	796b      	ldrb	r3, [r5, #5]
9000fe1a:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
			if( pcName[ x ] == ( char ) 0x00 )
9000fe1e:	b313      	cbz	r3, 9000fe66 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fe20:	79ab      	ldrb	r3, [r5, #6]
9000fe22:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
9000fe26:	b1f3      	cbz	r3, 9000fe66 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fe28:	79eb      	ldrb	r3, [r5, #7]
9000fe2a:	f884 303b 	strb.w	r3, [r4, #59]	@ 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
9000fe2e:	b1d3      	cbz	r3, 9000fe66 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fe30:	7a2b      	ldrb	r3, [r5, #8]
9000fe32:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
9000fe36:	b1b3      	cbz	r3, 9000fe66 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fe38:	7a6b      	ldrb	r3, [r5, #9]
9000fe3a:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
9000fe3e:	b193      	cbz	r3, 9000fe66 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fe40:	7aab      	ldrb	r3, [r5, #10]
9000fe42:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
9000fe46:	b173      	cbz	r3, 9000fe66 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fe48:	7aeb      	ldrb	r3, [r5, #11]
9000fe4a:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
9000fe4e:	b153      	cbz	r3, 9000fe66 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fe50:	7b2b      	ldrb	r3, [r5, #12]
9000fe52:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
			if( pcName[ x ] == ( char ) 0x00 )
9000fe56:	b133      	cbz	r3, 9000fe66 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fe58:	7b6b      	ldrb	r3, [r5, #13]
9000fe5a:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
			if( pcName[ x ] == ( char ) 0x00 )
9000fe5e:	b113      	cbz	r3, 9000fe66 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fe60:	7bab      	ldrb	r3, [r5, #14]
9000fe62:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000fe66:	2300      	movs	r3, #0
9000fe68:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000fe6c:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
9000fe6e:	f04f 0a00 	mov.w	sl, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000fe72:	1d20      	adds	r0, r4, #4
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000fe74:	2d37      	cmp	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
9000fe76:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000fe7a:	bf28      	it	cs
9000fe7c:	2537      	movcs	r5, #55	@ 0x37
	pxNewTCB->uxPriority = uxPriority;
9000fe7e:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9000fe80:	64e5      	str	r5, [r4, #76]	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000fe82:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000fe86:	f7fe fcd3 	bl	9000e830 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000fe8a:	f104 0018 	add.w	r0, r4, #24
9000fe8e:	f7fe fccf 	bl	9000e830 <vListInitialiseItem>
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
9000fe92:	4651      	mov	r1, sl
9000fe94:	224c      	movs	r2, #76	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000fe96:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
9000fe98:	f8c4 a0a4 	str.w	sl, [r4, #164]	@ 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
9000fe9c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000fea0:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000fea2:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
9000fea4:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000fea8:	f884 a0a8 	strb.w	sl, [r4, #168]	@ 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
9000feac:	f01a fcf0 	bl	9002a890 <memset>
9000feb0:	4b0b      	ldr	r3, [pc, #44]	@ (9000fee0 <prvInitialiseNewTask.constprop.0+0x11c>)
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000feb2:	4642      	mov	r2, r8
9000feb4:	4639      	mov	r1, r7
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
9000feb6:	f103 0568 	add.w	r5, r3, #104	@ 0x68
9000feba:	65e3      	str	r3, [r4, #92]	@ 0x5c
9000febc:	33d0      	adds	r3, #208	@ 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000febe:	4630      	mov	r0, r6
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
9000fec0:	6625      	str	r5, [r4, #96]	@ 0x60
9000fec2:	6663      	str	r3, [r4, #100]	@ 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000fec4:	f7fe fd30 	bl	9000e928 <pxPortInitialiseStack>
9000fec8:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
9000feca:	f1b9 0f00 	cmp.w	r9, #0
9000fece:	d001      	beq.n	9000fed4 <prvInitialiseNewTask.constprop.0+0x110>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
9000fed0:	f8c9 4000 	str.w	r4, [r9]
}
9000fed4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
9000fed8:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
9000fedc:	e7c6      	b.n	9000fe6c <prvInitialiseNewTask.constprop.0+0xa8>
9000fede:	bf00      	nop
9000fee0:	240222c8 	.word	0x240222c8

9000fee4 <prvIdleTask>:
{
9000fee4:	b580      	push	{r7, lr}
9000fee6:	4d24      	ldr	r5, [pc, #144]	@ (9000ff78 <prvIdleTask+0x94>)
9000fee8:	4f24      	ldr	r7, [pc, #144]	@ (9000ff7c <prvIdleTask+0x98>)
9000feea:	4e25      	ldr	r6, [pc, #148]	@ (9000ff80 <prvIdleTask+0x9c>)
9000feec:	f8df 8094 	ldr.w	r8, [pc, #148]	@ 9000ff84 <prvIdleTask+0xa0>
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000fef0:	682b      	ldr	r3, [r5, #0]
9000fef2:	b35b      	cbz	r3, 9000ff4c <prvIdleTask+0x68>
		{
			taskENTER_CRITICAL();
9000fef4:	f7fe fd46 	bl	9000e984 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000fef8:	68fb      	ldr	r3, [r7, #12]
9000fefa:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000fefc:	1d20      	adds	r0, r4, #4
9000fefe:	f7fe fcc1 	bl	9000e884 <uxListRemove>
				--uxCurrentNumberOfTasks;
9000ff02:	6833      	ldr	r3, [r6, #0]
9000ff04:	3b01      	subs	r3, #1
9000ff06:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
9000ff08:	682b      	ldr	r3, [r5, #0]
9000ff0a:	3b01      	subs	r3, #1
9000ff0c:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
9000ff0e:	f7fe fd5b 	bl	9000e9c8 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
9000ff12:	f104 0058 	add.w	r0, r4, #88	@ 0x58
9000ff16:	f01a fd15 	bl	9002a944 <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
9000ff1a:	f894 30a9 	ldrb.w	r3, [r4, #169]	@ 0xa9
9000ff1e:	b163      	cbz	r3, 9000ff3a <prvIdleTask+0x56>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
9000ff20:	2b01      	cmp	r3, #1
9000ff22:	d024      	beq.n	9000ff6e <prvIdleTask+0x8a>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
9000ff24:	2b02      	cmp	r3, #2
9000ff26:	d0e3      	beq.n	9000fef0 <prvIdleTask+0xc>
9000ff28:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ff2c:	f383 8811 	msr	BASEPRI, r3
9000ff30:	f3bf 8f6f 	isb	sy
9000ff34:	f3bf 8f4f 	dsb	sy
9000ff38:	e7fe      	b.n	9000ff38 <prvIdleTask+0x54>
				vPortFree( pxTCB->pxStack );
9000ff3a:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000ff3c:	f7fe fc02 	bl	9000e744 <vPortFree>
				vPortFree( pxTCB );
9000ff40:	4620      	mov	r0, r4
9000ff42:	f7fe fbff 	bl	9000e744 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000ff46:	682b      	ldr	r3, [r5, #0]
9000ff48:	2b00      	cmp	r3, #0
9000ff4a:	d1d3      	bne.n	9000fef4 <prvIdleTask+0x10>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
9000ff4c:	f8d8 3000 	ldr.w	r3, [r8]
9000ff50:	2b01      	cmp	r3, #1
9000ff52:	d909      	bls.n	9000ff68 <prvIdleTask+0x84>
				taskYIELD();
9000ff54:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000ff58:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000ff5c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000ff60:	f3bf 8f4f 	dsb	sy
9000ff64:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
9000ff68:	f7f3 fd78 	bl	90003a5c <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
9000ff6c:	e7c0      	b.n	9000fef0 <prvIdleTask+0xc>
				vPortFree( pxTCB );
9000ff6e:	4620      	mov	r0, r4
9000ff70:	f7fe fbe8 	bl	9000e744 <vPortFree>
9000ff74:	e7bc      	b.n	9000fef0 <prvIdleTask+0xc>
9000ff76:	bf00      	nop
9000ff78:	2402126c 	.word	0x2402126c
9000ff7c:	24021270 	.word	0x24021270
9000ff80:	24021254 	.word	0x24021254
9000ff84:	240212c8 	.word	0x240212c8

9000ff88 <xTaskIncrementTick.part.0>:
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000ff88:	4b49      	ldr	r3, [pc, #292]	@ (900100b0 <xTaskIncrementTick.part.0+0x128>)
BaseType_t xTaskIncrementTick( void )
9000ff8a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000ff8e:	681e      	ldr	r6, [r3, #0]
BaseType_t xTaskIncrementTick( void )
9000ff90:	b083      	sub	sp, #12
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000ff92:	3601      	adds	r6, #1
		xTickCount = xConstTickCount;
9000ff94:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
9000ff96:	2e00      	cmp	r6, #0
9000ff98:	d03e      	beq.n	90010018 <xTaskIncrementTick.part.0+0x90>
9000ff9a:	4b46      	ldr	r3, [pc, #280]	@ (900100b4 <xTaskIncrementTick.part.0+0x12c>)
9000ff9c:	9301      	str	r3, [sp, #4]
		if( xConstTickCount >= xNextTaskUnblockTime )
9000ff9e:	681b      	ldr	r3, [r3, #0]
9000ffa0:	429e      	cmp	r6, r3
9000ffa2:	d346      	bcc.n	90010032 <xTaskIncrementTick.part.0+0xaa>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ffa4:	4f44      	ldr	r7, [pc, #272]	@ (900100b8 <xTaskIncrementTick.part.0+0x130>)
9000ffa6:	683b      	ldr	r3, [r7, #0]
9000ffa8:	681d      	ldr	r5, [r3, #0]
9000ffaa:	2d00      	cmp	r5, #0
9000ffac:	d077      	beq.n	9001009e <xTaskIncrementTick.part.0+0x116>
BaseType_t xSwitchRequired = pdFALSE;
9000ffae:	2500      	movs	r5, #0
9000ffb0:	f8df 9114 	ldr.w	r9, [pc, #276]	@ 900100c8 <xTaskIncrementTick.part.0+0x140>
9000ffb4:	f8df a114 	ldr.w	sl, [pc, #276]	@ 900100cc <xTaskIncrementTick.part.0+0x144>
					prvAddTaskToReadyList( pxTCB );
9000ffb8:	f8df 8114 	ldr.w	r8, [pc, #276]	@ 900100d0 <xTaskIncrementTick.part.0+0x148>
9000ffbc:	e020      	b.n	90010000 <xTaskIncrementTick.part.0+0x78>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ffbe:	f7fe fc61 	bl	9000e884 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000ffc2:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000ffc4:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000ffc8:	b10b      	cbz	r3, 9000ffce <xTaskIncrementTick.part.0+0x46>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000ffca:	f7fe fc5b 	bl	9000e884 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
9000ffce:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000ffd0:	4659      	mov	r1, fp
9000ffd2:	f8d8 2000 	ldr.w	r2, [r8]
9000ffd6:	eb03 0083 	add.w	r0, r3, r3, lsl #2
9000ffda:	4293      	cmp	r3, r2
9000ffdc:	eb09 0080 	add.w	r0, r9, r0, lsl #2
9000ffe0:	d901      	bls.n	9000ffe6 <xTaskIncrementTick.part.0+0x5e>
9000ffe2:	f8c8 3000 	str.w	r3, [r8]
9000ffe6:	f7fe fc27 	bl	9000e838 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000ffea:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ffee:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000fff0:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
9000fff2:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000fff4:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
9000fff6:	4291      	cmp	r1, r2
9000fff8:	bf28      	it	cs
9000fffa:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000fffc:	2b00      	cmp	r3, #0
9000fffe:	d052      	beq.n	900100a6 <xTaskIncrementTick.part.0+0x11e>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010000:	683b      	ldr	r3, [r7, #0]
90010002:	68db      	ldr	r3, [r3, #12]
90010004:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
90010006:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90010008:	f104 0b04 	add.w	fp, r4, #4
					if( xConstTickCount < xItemValue )
9001000c:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9001000e:	4658      	mov	r0, fp
					if( xConstTickCount < xItemValue )
90010010:	d2d5      	bcs.n	9000ffbe <xTaskIncrementTick.part.0+0x36>
						xNextTaskUnblockTime = xItemValue;
90010012:	9a01      	ldr	r2, [sp, #4]
90010014:	6013      	str	r3, [r2, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
90010016:	e011      	b.n	9001003c <xTaskIncrementTick.part.0+0xb4>
			taskSWITCH_DELAYED_LISTS();
90010018:	4b27      	ldr	r3, [pc, #156]	@ (900100b8 <xTaskIncrementTick.part.0+0x130>)
9001001a:	681a      	ldr	r2, [r3, #0]
9001001c:	6812      	ldr	r2, [r2, #0]
9001001e:	b30a      	cbz	r2, 90010064 <xTaskIncrementTick.part.0+0xdc>
90010020:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010024:	f383 8811 	msr	BASEPRI, r3
90010028:	f3bf 8f6f 	isb	sy
9001002c:	f3bf 8f4f 	dsb	sy
90010030:	e7fe      	b.n	90010030 <xTaskIncrementTick.part.0+0xa8>
BaseType_t xSwitchRequired = pdFALSE;
90010032:	2500      	movs	r5, #0
90010034:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 900100c8 <xTaskIncrementTick.part.0+0x140>
90010038:	f8df a090 	ldr.w	sl, [pc, #144]	@ 900100cc <xTaskIncrementTick.part.0+0x144>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9001003c:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
90010040:	491e      	ldr	r1, [pc, #120]	@ (900100bc <xTaskIncrementTick.part.0+0x134>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
90010042:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010044:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90010048:	009b      	lsls	r3, r3, #2
9001004a:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
9001004e:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
90010050:	2a02      	cmp	r2, #2
90010052:	bf28      	it	cs
90010054:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
90010056:	2b00      	cmp	r3, #0
}
90010058:	bf0c      	ite	eq
9001005a:	4628      	moveq	r0, r5
9001005c:	2001      	movne	r0, #1
9001005e:	b003      	add	sp, #12
90010060:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
90010064:	4a16      	ldr	r2, [pc, #88]	@ (900100c0 <xTaskIncrementTick.part.0+0x138>)
90010066:	6818      	ldr	r0, [r3, #0]
90010068:	6811      	ldr	r1, [r2, #0]
9001006a:	6019      	str	r1, [r3, #0]
9001006c:	4915      	ldr	r1, [pc, #84]	@ (900100c4 <xTaskIncrementTick.part.0+0x13c>)
9001006e:	6010      	str	r0, [r2, #0]
90010070:	680a      	ldr	r2, [r1, #0]
90010072:	3201      	adds	r2, #1
90010074:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90010076:	681a      	ldr	r2, [r3, #0]
90010078:	6812      	ldr	r2, [r2, #0]
9001007a:	b93a      	cbnz	r2, 9001008c <xTaskIncrementTick.part.0+0x104>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
9001007c:	4b0d      	ldr	r3, [pc, #52]	@ (900100b4 <xTaskIncrementTick.part.0+0x12c>)
9001007e:	461a      	mov	r2, r3
90010080:	9301      	str	r3, [sp, #4]
90010082:	f04f 33ff 	mov.w	r3, #4294967295
90010086:	6013      	str	r3, [r2, #0]
90010088:	4613      	mov	r3, r2
9001008a:	e788      	b.n	9000ff9e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001008c:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9001008e:	4a09      	ldr	r2, [pc, #36]	@ (900100b4 <xTaskIncrementTick.part.0+0x12c>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010090:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90010092:	9201      	str	r2, [sp, #4]
90010094:	68db      	ldr	r3, [r3, #12]
90010096:	685b      	ldr	r3, [r3, #4]
90010098:	6013      	str	r3, [r2, #0]
9001009a:	4613      	mov	r3, r2
	}
}
9001009c:	e77f      	b.n	9000ff9e <xTaskIncrementTick.part.0+0x16>
9001009e:	f8df 9028 	ldr.w	r9, [pc, #40]	@ 900100c8 <xTaskIncrementTick.part.0+0x140>
900100a2:	f8df a028 	ldr.w	sl, [pc, #40]	@ 900100cc <xTaskIncrementTick.part.0+0x144>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900100a6:	f04f 33ff 	mov.w	r3, #4294967295
900100aa:	9a01      	ldr	r2, [sp, #4]
900100ac:	6013      	str	r3, [r2, #0]
					break;
900100ae:	e7c5      	b.n	9001003c <xTaskIncrementTick.part.0+0xb4>
900100b0:	24021250 	.word	0x24021250
900100b4:	24021234 	.word	0x24021234
900100b8:	2402129c 	.word	0x2402129c
900100bc:	24021240 	.word	0x24021240
900100c0:	24021298 	.word	0x24021298
900100c4:	2402123c 	.word	0x2402123c
900100c8:	240212c8 	.word	0x240212c8
900100cc:	24021728 	.word	0x24021728
900100d0:	2402124c 	.word	0x2402124c

900100d4 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
900100d4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
900100d8:	4d42      	ldr	r5, [pc, #264]	@ (900101e4 <xTaskResumeAll.part.0+0x110>)
	taskENTER_CRITICAL();
900100da:	f7fe fc53 	bl	9000e984 <vPortEnterCritical>
		--uxSchedulerSuspended;
900100de:	682b      	ldr	r3, [r5, #0]
900100e0:	3b01      	subs	r3, #1
900100e2:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
900100e4:	682b      	ldr	r3, [r5, #0]
900100e6:	2b00      	cmp	r3, #0
900100e8:	d165      	bne.n	900101b6 <xTaskResumeAll.part.0+0xe2>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
900100ea:	4b3f      	ldr	r3, [pc, #252]	@ (900101e8 <xTaskResumeAll.part.0+0x114>)
900100ec:	681b      	ldr	r3, [r3, #0]
900100ee:	2b00      	cmp	r3, #0
900100f0:	d061      	beq.n	900101b6 <xTaskResumeAll.part.0+0xe2>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
900100f2:	4e3e      	ldr	r6, [pc, #248]	@ (900101ec <xTaskResumeAll.part.0+0x118>)
900100f4:	6833      	ldr	r3, [r6, #0]
900100f6:	2b00      	cmp	r3, #0
900100f8:	d070      	beq.n	900101dc <xTaskResumeAll.part.0+0x108>
900100fa:	4f3d      	ldr	r7, [pc, #244]	@ (900101f0 <xTaskResumeAll.part.0+0x11c>)
900100fc:	f8df 9100 	ldr.w	r9, [pc, #256]	@ 90010200 <xTaskResumeAll.part.0+0x12c>
90010100:	f8df 8100 	ldr.w	r8, [pc, #256]	@ 90010204 <xTaskResumeAll.part.0+0x130>
90010104:	f8df a100 	ldr.w	sl, [pc, #256]	@ 90010208 <xTaskResumeAll.part.0+0x134>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010108:	68f3      	ldr	r3, [r6, #12]
9001010a:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9001010c:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
90010110:	f104 0018 	add.w	r0, r4, #24
90010114:	f7fe fbb6 	bl	9000e884 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90010118:	4658      	mov	r0, fp
9001011a:	f7fe fbb3 	bl	9000e884 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
9001011e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90010120:	683a      	ldr	r2, [r7, #0]
90010122:	4659      	mov	r1, fp
90010124:	eb03 0083 	add.w	r0, r3, r3, lsl #2
90010128:	4293      	cmp	r3, r2
9001012a:	eb09 0080 	add.w	r0, r9, r0, lsl #2
9001012e:	d900      	bls.n	90010132 <xTaskResumeAll.part.0+0x5e>
90010130:	603b      	str	r3, [r7, #0]
90010132:	f7fe fb81 	bl	9000e838 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
90010136:	f8d8 3000 	ldr.w	r3, [r8]
9001013a:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9001013c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001013e:	429a      	cmp	r2, r3
90010140:	d33f      	bcc.n	900101c2 <xTaskResumeAll.part.0+0xee>
						xYieldPending = pdTRUE;
90010142:	2301      	movs	r3, #1
90010144:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
90010148:	6833      	ldr	r3, [r6, #0]
9001014a:	2b00      	cmp	r3, #0
9001014c:	d1dc      	bne.n	90010108 <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9001014e:	4b29      	ldr	r3, [pc, #164]	@ (900101f4 <xTaskResumeAll.part.0+0x120>)
90010150:	681a      	ldr	r2, [r3, #0]
90010152:	6812      	ldr	r2, [r2, #0]
90010154:	2a00      	cmp	r2, #0
90010156:	d03c      	beq.n	900101d2 <xTaskResumeAll.part.0+0xfe>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010158:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9001015a:	4b27      	ldr	r3, [pc, #156]	@ (900101f8 <xTaskResumeAll.part.0+0x124>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001015c:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9001015e:	68d2      	ldr	r2, [r2, #12]
90010160:	6852      	ldr	r2, [r2, #4]
90010162:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
90010164:	4e25      	ldr	r6, [pc, #148]	@ (900101fc <xTaskResumeAll.part.0+0x128>)
90010166:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
90010168:	b194      	cbz	r4, 90010190 <xTaskResumeAll.part.0+0xbc>
								xYieldPending = pdTRUE;
9001016a:	2701      	movs	r7, #1
9001016c:	e006      	b.n	9001017c <xTaskResumeAll.part.0+0xa8>
9001016e:	f7ff ff0b 	bl	9000ff88 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
90010172:	b108      	cbz	r0, 90010178 <xTaskResumeAll.part.0+0xa4>
								xYieldPending = pdTRUE;
90010174:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
90010178:	3c01      	subs	r4, #1
9001017a:	d008      	beq.n	9001018e <xTaskResumeAll.part.0+0xba>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9001017c:	682b      	ldr	r3, [r5, #0]
9001017e:	2b00      	cmp	r3, #0
90010180:	d0f5      	beq.n	9001016e <xTaskResumeAll.part.0+0x9a>
		++xPendedTicks;
90010182:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
90010184:	3c01      	subs	r4, #1
		++xPendedTicks;
90010186:	f103 0301 	add.w	r3, r3, #1
9001018a:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9001018c:	d1f6      	bne.n	9001017c <xTaskResumeAll.part.0+0xa8>
						xPendedTicks = 0;
9001018e:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
90010190:	f8da 3000 	ldr.w	r3, [sl]
90010194:	b17b      	cbz	r3, 900101b6 <xTaskResumeAll.part.0+0xe2>
					taskYIELD_IF_USING_PREEMPTION();
90010196:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9001019a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9001019e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
900101a2:	f3bf 8f4f 	dsb	sy
900101a6:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
900101aa:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
900101ac:	f7fe fc0c 	bl	9000e9c8 <vPortExitCritical>
}
900101b0:	4620      	mov	r0, r4
900101b2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
BaseType_t xAlreadyYielded = pdFALSE;
900101b6:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
900101b8:	f7fe fc06 	bl	9000e9c8 <vPortExitCritical>
}
900101bc:	4620      	mov	r0, r4
900101be:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
900101c2:	6833      	ldr	r3, [r6, #0]
900101c4:	2b00      	cmp	r3, #0
900101c6:	d19f      	bne.n	90010108 <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
900101c8:	4b0a      	ldr	r3, [pc, #40]	@ (900101f4 <xTaskResumeAll.part.0+0x120>)
900101ca:	681a      	ldr	r2, [r3, #0]
900101cc:	6812      	ldr	r2, [r2, #0]
900101ce:	2a00      	cmp	r2, #0
900101d0:	d1c2      	bne.n	90010158 <xTaskResumeAll.part.0+0x84>
		xNextTaskUnblockTime = portMAX_DELAY;
900101d2:	4b09      	ldr	r3, [pc, #36]	@ (900101f8 <xTaskResumeAll.part.0+0x124>)
900101d4:	f04f 32ff 	mov.w	r2, #4294967295
900101d8:	601a      	str	r2, [r3, #0]
900101da:	e7c3      	b.n	90010164 <xTaskResumeAll.part.0+0x90>
900101dc:	f8df a028 	ldr.w	sl, [pc, #40]	@ 90010208 <xTaskResumeAll.part.0+0x134>
900101e0:	e7c0      	b.n	90010164 <xTaskResumeAll.part.0+0x90>
900101e2:	bf00      	nop
900101e4:	24021230 	.word	0x24021230
900101e8:	24021254 	.word	0x24021254
900101ec:	24021284 	.word	0x24021284
900101f0:	2402124c 	.word	0x2402124c
900101f4:	2402129c 	.word	0x2402129c
900101f8:	24021234 	.word	0x24021234
900101fc:	24021244 	.word	0x24021244
90010200:	240212c8 	.word	0x240212c8
90010204:	24021728 	.word	0x24021728
90010208:	24021240 	.word	0x24021240

9001020c <xTaskCreateStatic>:
	{
9001020c:	b530      	push	{r4, r5, lr}
9001020e:	b087      	sub	sp, #28
90010210:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
90010212:	b1c4      	cbz	r4, 90010246 <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
90010214:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90010216:	b16d      	cbz	r5, 90010234 <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
90010218:	25ac      	movs	r5, #172	@ 0xac
9001021a:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
9001021c:	9d05      	ldr	r5, [sp, #20]
9001021e:	2dac      	cmp	r5, #172	@ 0xac
90010220:	d01a      	beq.n	90010258 <xTaskCreateStatic+0x4c>
90010222:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010226:	f383 8811 	msr	BASEPRI, r3
9001022a:	f3bf 8f6f 	isb	sy
9001022e:	f3bf 8f4f 	dsb	sy
90010232:	e7fe      	b.n	90010232 <xTaskCreateStatic+0x26>
90010234:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010238:	f383 8811 	msr	BASEPRI, r3
9001023c:	f3bf 8f6f 	isb	sy
90010240:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
90010244:	e7fe      	b.n	90010244 <xTaskCreateStatic+0x38>
90010246:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001024a:	f383 8811 	msr	BASEPRI, r3
9001024e:	f3bf 8f6f 	isb	sy
90010252:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
90010256:	e7fe      	b.n	90010256 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
90010258:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
9001025a:	632c      	str	r4, [r5, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9001025c:	2402      	movs	r4, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
9001025e:	9502      	str	r5, [sp, #8]
90010260:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
90010262:	9500      	str	r5, [sp, #0]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90010264:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90010266:	f885 40a9 	strb.w	r4, [r5, #169]	@ 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
9001026a:	ac04      	add	r4, sp, #16
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
9001026c:	9d05      	ldr	r5, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
9001026e:	9401      	str	r4, [sp, #4]
90010270:	f7ff fda8 	bl	9000fdc4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
90010274:	980c      	ldr	r0, [sp, #48]	@ 0x30
90010276:	f7ff fd1f 	bl	9000fcb8 <prvAddNewTaskToReadyList>
	}
9001027a:	9804      	ldr	r0, [sp, #16]
9001027c:	b007      	add	sp, #28
9001027e:	bd30      	pop	{r4, r5, pc}

90010280 <xTaskCreate>:
	{
90010280:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010284:	4607      	mov	r7, r0
90010286:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
90010288:	0090      	lsls	r0, r2, #2
	{
9001028a:	4615      	mov	r5, r2
9001028c:	4688      	mov	r8, r1
9001028e:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
90010290:	f7fe f99a 	bl	9000e5c8 <pvPortMalloc>
			if( pxStack != NULL )
90010294:	b1f0      	cbz	r0, 900102d4 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
90010296:	4604      	mov	r4, r0
90010298:	20ac      	movs	r0, #172	@ 0xac
9001029a:	f7fe f995 	bl	9000e5c8 <pvPortMalloc>
				if( pxNewTCB != NULL )
9001029e:	4606      	mov	r6, r0
900102a0:	b1a8      	cbz	r0, 900102ce <xTaskCreate+0x4e>
					pxNewTCB->pxStack = pxStack;
900102a2:	6304      	str	r4, [r0, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
900102a4:	2400      	movs	r4, #0
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
900102a6:	464b      	mov	r3, r9
900102a8:	462a      	mov	r2, r5
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
900102aa:	f886 40a9 	strb.w	r4, [r6, #169]	@ 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
900102ae:	4641      	mov	r1, r8
900102b0:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900102b2:	4638      	mov	r0, r7
900102b4:	9602      	str	r6, [sp, #8]
900102b6:	9401      	str	r4, [sp, #4]
900102b8:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
900102ba:	9400      	str	r4, [sp, #0]
900102bc:	f7ff fd82 	bl	9000fdc4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
900102c0:	4630      	mov	r0, r6
900102c2:	f7ff fcf9 	bl	9000fcb8 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
900102c6:	2001      	movs	r0, #1
	}
900102c8:	b005      	add	sp, #20
900102ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
900102ce:	4620      	mov	r0, r4
900102d0:	f7fe fa38 	bl	9000e744 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
900102d4:	f04f 30ff 	mov.w	r0, #4294967295
	}
900102d8:	b005      	add	sp, #20
900102da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900102de:	bf00      	nop

900102e0 <vTaskDelete>:
	{
900102e0:	b570      	push	{r4, r5, r6, lr}
900102e2:	4604      	mov	r4, r0
			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
900102e4:	4d38      	ldr	r5, [pc, #224]	@ (900103c8 <vTaskDelete+0xe8>)
		taskENTER_CRITICAL();
900102e6:	f7fe fb4d 	bl	9000e984 <vPortEnterCritical>
			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
900102ea:	2c00      	cmp	r4, #0
900102ec:	d048      	beq.n	90010380 <vTaskDelete+0xa0>
			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900102ee:	1d26      	adds	r6, r4, #4
900102f0:	4630      	mov	r0, r6
900102f2:	f7fe fac7 	bl	9000e884 <uxListRemove>
			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
900102f6:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
900102f8:	b11b      	cbz	r3, 90010302 <vTaskDelete+0x22>
				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
900102fa:	f104 0018 	add.w	r0, r4, #24
900102fe:	f7fe fac1 	bl	9000e884 <uxListRemove>
			uxTaskNumber++;
90010302:	4a32      	ldr	r2, [pc, #200]	@ (900103cc <vTaskDelete+0xec>)
90010304:	6813      	ldr	r3, [r2, #0]
90010306:	3301      	adds	r3, #1
90010308:	6013      	str	r3, [r2, #0]
			if( pxTCB == pxCurrentTCB )
9001030a:	682b      	ldr	r3, [r5, #0]
9001030c:	42a3      	cmp	r3, r4
9001030e:	d02e      	beq.n	9001036e <vTaskDelete+0x8e>
				--uxCurrentNumberOfTasks;
90010310:	4a2f      	ldr	r2, [pc, #188]	@ (900103d0 <vTaskDelete+0xf0>)
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
90010312:	f104 0058 	add.w	r0, r4, #88	@ 0x58
				--uxCurrentNumberOfTasks;
90010316:	6813      	ldr	r3, [r2, #0]
90010318:	3b01      	subs	r3, #1
9001031a:	6013      	str	r3, [r2, #0]
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
9001031c:	f01a fb12 	bl	9002a944 <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
90010320:	f894 30a9 	ldrb.w	r3, [r4, #169]	@ 0xa9
90010324:	b163      	cbz	r3, 90010340 <vTaskDelete+0x60>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
90010326:	2b01      	cmp	r3, #1
90010328:	d03f      	beq.n	900103aa <vTaskDelete+0xca>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
9001032a:	2b02      	cmp	r3, #2
9001032c:	d00e      	beq.n	9001034c <vTaskDelete+0x6c>
9001032e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010332:	f383 8811 	msr	BASEPRI, r3
90010336:	f3bf 8f6f 	isb	sy
9001033a:	f3bf 8f4f 	dsb	sy
9001033e:	e7fe      	b.n	9001033e <vTaskDelete+0x5e>
				vPortFree( pxTCB->pxStack );
90010340:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90010342:	f7fe f9ff 	bl	9000e744 <vPortFree>
				vPortFree( pxTCB );
90010346:	4620      	mov	r0, r4
90010348:	f7fe f9fc 	bl	9000e744 <vPortFree>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9001034c:	4b21      	ldr	r3, [pc, #132]	@ (900103d4 <vTaskDelete+0xf4>)
9001034e:	681a      	ldr	r2, [r3, #0]
90010350:	6812      	ldr	r2, [r2, #0]
90010352:	b9ba      	cbnz	r2, 90010384 <vTaskDelete+0xa4>
		xNextTaskUnblockTime = portMAX_DELAY;
90010354:	4b20      	ldr	r3, [pc, #128]	@ (900103d8 <vTaskDelete+0xf8>)
90010356:	f04f 32ff 	mov.w	r2, #4294967295
9001035a:	601a      	str	r2, [r3, #0]
		taskEXIT_CRITICAL();
9001035c:	f7fe fb34 	bl	9000e9c8 <vPortExitCritical>
		if( xSchedulerRunning != pdFALSE )
90010360:	4b1e      	ldr	r3, [pc, #120]	@ (900103dc <vTaskDelete+0xfc>)
90010362:	681b      	ldr	r3, [r3, #0]
90010364:	b113      	cbz	r3, 9001036c <vTaskDelete+0x8c>
			if( pxTCB == pxCurrentTCB )
90010366:	682b      	ldr	r3, [r5, #0]
90010368:	42a3      	cmp	r3, r4
9001036a:	d012      	beq.n	90010392 <vTaskDelete+0xb2>
	}
9001036c:	bd70      	pop	{r4, r5, r6, pc}
				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
9001036e:	4631      	mov	r1, r6
90010370:	481b      	ldr	r0, [pc, #108]	@ (900103e0 <vTaskDelete+0x100>)
90010372:	f7fe fa61 	bl	9000e838 <vListInsertEnd>
				++uxDeletedTasksWaitingCleanUp;
90010376:	4a1b      	ldr	r2, [pc, #108]	@ (900103e4 <vTaskDelete+0x104>)
90010378:	6813      	ldr	r3, [r2, #0]
9001037a:	3301      	adds	r3, #1
9001037c:	6013      	str	r3, [r2, #0]
				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
9001037e:	e7ed      	b.n	9001035c <vTaskDelete+0x7c>
			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
90010380:	682c      	ldr	r4, [r5, #0]
90010382:	e7b4      	b.n	900102ee <vTaskDelete+0xe>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010384:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90010386:	4b14      	ldr	r3, [pc, #80]	@ (900103d8 <vTaskDelete+0xf8>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010388:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9001038a:	68d2      	ldr	r2, [r2, #12]
9001038c:	6852      	ldr	r2, [r2, #4]
9001038e:	601a      	str	r2, [r3, #0]
}
90010390:	e7e4      	b.n	9001035c <vTaskDelete+0x7c>
				configASSERT( uxSchedulerSuspended == 0 );
90010392:	4b15      	ldr	r3, [pc, #84]	@ (900103e8 <vTaskDelete+0x108>)
90010394:	681b      	ldr	r3, [r3, #0]
90010396:	b163      	cbz	r3, 900103b2 <vTaskDelete+0xd2>
90010398:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001039c:	f383 8811 	msr	BASEPRI, r3
900103a0:	f3bf 8f6f 	isb	sy
900103a4:	f3bf 8f4f 	dsb	sy
900103a8:	e7fe      	b.n	900103a8 <vTaskDelete+0xc8>
				vPortFree( pxTCB );
900103aa:	4620      	mov	r0, r4
900103ac:	f7fe f9ca 	bl	9000e744 <vPortFree>
900103b0:	e7cc      	b.n	9001034c <vTaskDelete+0x6c>
				portYIELD_WITHIN_API();
900103b2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
900103b6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
900103ba:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
900103be:	f3bf 8f4f 	dsb	sy
900103c2:	f3bf 8f6f 	isb	sy
	}
900103c6:	bd70      	pop	{r4, r5, r6, pc}
900103c8:	24021728 	.word	0x24021728
900103cc:	24021238 	.word	0x24021238
900103d0:	24021254 	.word	0x24021254
900103d4:	2402129c 	.word	0x2402129c
900103d8:	24021234 	.word	0x24021234
900103dc:	24021248 	.word	0x24021248
900103e0:	24021270 	.word	0x24021270
900103e4:	2402126c 	.word	0x2402126c
900103e8:	24021230 	.word	0x24021230

900103ec <vTaskDelay>:
	{
900103ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
900103ee:	b950      	cbnz	r0, 90010406 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
900103f0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
900103f4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
900103f8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
900103fc:	f3bf 8f4f 	dsb	sy
90010400:	f3bf 8f6f 	isb	sy
	}
90010404:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
90010406:	4d1e      	ldr	r5, [pc, #120]	@ (90010480 <vTaskDelay+0x94>)
90010408:	682b      	ldr	r3, [r5, #0]
9001040a:	b143      	cbz	r3, 9001041e <vTaskDelay+0x32>
9001040c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010410:	f383 8811 	msr	BASEPRI, r3
90010414:	f3bf 8f6f 	isb	sy
90010418:	f3bf 8f4f 	dsb	sy
9001041c:	e7fe      	b.n	9001041c <vTaskDelay+0x30>
	++uxSchedulerSuspended;
9001041e:	682b      	ldr	r3, [r5, #0]
90010420:	4604      	mov	r4, r0
90010422:	3301      	adds	r3, #1
90010424:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
90010426:	4b17      	ldr	r3, [pc, #92]	@ (90010484 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90010428:	4e17      	ldr	r6, [pc, #92]	@ (90010488 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
9001042a:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9001042c:	6830      	ldr	r0, [r6, #0]
9001042e:	3004      	adds	r0, #4
90010430:	f7fe fa28 	bl	9000e884 <uxListRemove>
		else
		{
			/* Calculate the time at which the task should be woken if the event
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;
90010434:	19e4      	adds	r4, r4, r7

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
90010436:	6833      	ldr	r3, [r6, #0]
90010438:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
9001043a:	d315      	bcc.n	90010468 <vTaskDelay+0x7c>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001043c:	4b13      	ldr	r3, [pc, #76]	@ (9001048c <vTaskDelay+0xa0>)
9001043e:	6818      	ldr	r0, [r3, #0]
90010440:	6831      	ldr	r1, [r6, #0]
90010442:	3104      	adds	r1, #4
90010444:	f7fe fa06 	bl	9000e854 <vListInsert>
	configASSERT( uxSchedulerSuspended );
90010448:	682b      	ldr	r3, [r5, #0]
9001044a:	b943      	cbnz	r3, 9001045e <vTaskDelay+0x72>
9001044c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010450:	f383 8811 	msr	BASEPRI, r3
90010454:	f3bf 8f6f 	isb	sy
90010458:	f3bf 8f4f 	dsb	sy
9001045c:	e7fe      	b.n	9001045c <vTaskDelay+0x70>
9001045e:	f7ff fe39 	bl	900100d4 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
90010462:	2800      	cmp	r0, #0
90010464:	d0c4      	beq.n	900103f0 <vTaskDelay+0x4>
	}
90010466:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010468:	4b09      	ldr	r3, [pc, #36]	@ (90010490 <vTaskDelay+0xa4>)
9001046a:	6818      	ldr	r0, [r3, #0]
9001046c:	6831      	ldr	r1, [r6, #0]
9001046e:	3104      	adds	r1, #4
90010470:	f7fe f9f0 	bl	9000e854 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
90010474:	4b07      	ldr	r3, [pc, #28]	@ (90010494 <vTaskDelay+0xa8>)
90010476:	681a      	ldr	r2, [r3, #0]
90010478:	4294      	cmp	r4, r2
9001047a:	d2e5      	bcs.n	90010448 <vTaskDelay+0x5c>
				{
					xNextTaskUnblockTime = xTimeToWake;
9001047c:	601c      	str	r4, [r3, #0]
9001047e:	e7e3      	b.n	90010448 <vTaskDelay+0x5c>
90010480:	24021230 	.word	0x24021230
90010484:	24021250 	.word	0x24021250
90010488:	24021728 	.word	0x24021728
9001048c:	24021298 	.word	0x24021298
90010490:	2402129c 	.word	0x2402129c
90010494:	24021234 	.word	0x24021234

90010498 <vTaskStartScheduler>:
{
90010498:	b530      	push	{r4, r5, lr}
9001049a:	b08b      	sub	sp, #44	@ 0x2c
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
9001049c:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
9001049e:	aa07      	add	r2, sp, #28
900104a0:	a906      	add	r1, sp, #24
900104a2:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
900104a4:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
900104a8:	f7fe f870 	bl	9000e58c <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
900104ac:	9d05      	ldr	r5, [sp, #20]
900104ae:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
		configASSERT( puxStackBuffer != NULL );
900104b2:	b1bb      	cbz	r3, 900104e4 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
900104b4:	b16d      	cbz	r5, 900104d2 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
900104b6:	21ac      	movs	r1, #172	@ 0xac
900104b8:	9109      	str	r1, [sp, #36]	@ 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
900104ba:	9909      	ldr	r1, [sp, #36]	@ 0x24
900104bc:	29ac      	cmp	r1, #172	@ 0xac
900104be:	d01a      	beq.n	900104f6 <vTaskStartScheduler+0x5e>
900104c0:	f04f 0350 	mov.w	r3, #80	@ 0x50
900104c4:	f383 8811 	msr	BASEPRI, r3
900104c8:	f3bf 8f6f 	isb	sy
900104cc:	f3bf 8f4f 	dsb	sy
900104d0:	e7fe      	b.n	900104d0 <vTaskStartScheduler+0x38>
900104d2:	f04f 0350 	mov.w	r3, #80	@ 0x50
900104d6:	f383 8811 	msr	BASEPRI, r3
900104da:	f3bf 8f6f 	isb	sy
900104de:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
900104e2:	e7fe      	b.n	900104e2 <vTaskStartScheduler+0x4a>
900104e4:	f04f 0350 	mov.w	r3, #80	@ 0x50
900104e8:	f383 8811 	msr	BASEPRI, r3
900104ec:	f3bf 8f6f 	isb	sy
900104f0:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
900104f4:	e7fe      	b.n	900104f4 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
900104f6:	2102      	movs	r1, #2
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
900104f8:	632b      	str	r3, [r5, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
900104fa:	4822      	ldr	r0, [pc, #136]	@ (90010584 <vTaskStartScheduler+0xec>)
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
900104fc:	f885 10a9 	strb.w	r1, [r5, #169]	@ 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
90010500:	a908      	add	r1, sp, #32
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
90010502:	9b09      	ldr	r3, [sp, #36]	@ 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
90010504:	4623      	mov	r3, r4
90010506:	9400      	str	r4, [sp, #0]
90010508:	e9cd 1501 	strd	r1, r5, [sp, #4]
9001050c:	491e      	ldr	r1, [pc, #120]	@ (90010588 <vTaskStartScheduler+0xf0>)
9001050e:	f7ff fc59 	bl	9000fdc4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
90010512:	4628      	mov	r0, r5
90010514:	f7ff fbd0 	bl	9000fcb8 <prvAddNewTaskToReadyList>
		return xReturn;
90010518:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
9001051a:	b17b      	cbz	r3, 9001053c <vTaskStartScheduler+0xa4>
			xReturn = xTimerCreateTimerTask();
9001051c:	f000 fc90 	bl	90010e40 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
90010520:	2801      	cmp	r0, #1
			xReturn = xTimerCreateTimerTask();
90010522:	4603      	mov	r3, r0
	if( xReturn == pdPASS )
90010524:	d00c      	beq.n	90010540 <vTaskStartScheduler+0xa8>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
90010526:	3301      	adds	r3, #1
90010528:	d108      	bne.n	9001053c <vTaskStartScheduler+0xa4>
9001052a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001052e:	f383 8811 	msr	BASEPRI, r3
90010532:	f3bf 8f6f 	isb	sy
90010536:	f3bf 8f4f 	dsb	sy
9001053a:	e7fe      	b.n	9001053a <vTaskStartScheduler+0xa2>
}
9001053c:	b00b      	add	sp, #44	@ 0x2c
9001053e:	bd30      	pop	{r4, r5, pc}
90010540:	f04f 0250 	mov.w	r2, #80	@ 0x50
90010544:	f382 8811 	msr	BASEPRI, r2
90010548:	f3bf 8f6f 	isb	sy
9001054c:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
90010550:	4a0e      	ldr	r2, [pc, #56]	@ (9001058c <vTaskStartScheduler+0xf4>)
90010552:	480f      	ldr	r0, [pc, #60]	@ (90010590 <vTaskStartScheduler+0xf8>)
90010554:	6811      	ldr	r1, [r2, #0]
90010556:	3158      	adds	r1, #88	@ 0x58
90010558:	6001      	str	r1, [r0, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
9001055a:	f04f 30ff 	mov.w	r0, #4294967295
9001055e:	490d      	ldr	r1, [pc, #52]	@ (90010594 <vTaskStartScheduler+0xfc>)
90010560:	6008      	str	r0, [r1, #0]
		xSchedulerRunning = pdTRUE;
90010562:	480d      	ldr	r0, [pc, #52]	@ (90010598 <vTaskStartScheduler+0x100>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
90010564:	490d      	ldr	r1, [pc, #52]	@ (9001059c <vTaskStartScheduler+0x104>)
		xSchedulerRunning = pdTRUE;
90010566:	6003      	str	r3, [r0, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
90010568:	600c      	str	r4, [r1, #0]
		traceTASK_SWITCHED_IN();
9001056a:	6813      	ldr	r3, [r2, #0]
		if( xTask == NULL )
9001056c:	b143      	cbz	r3, 90010580 <vTaskStartScheduler+0xe8>
		if( xTCB->pxTaskTag != NULL )
9001056e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90010570:	b10b      	cbz	r3, 90010576 <vTaskStartScheduler+0xde>
			xReturn = xTCB->pxTaskTag( pvParameter );
90010572:	2000      	movs	r0, #0
90010574:	4798      	blx	r3
}
90010576:	b00b      	add	sp, #44	@ 0x2c
90010578:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
9001057c:	f7fe ba94 	b.w	9000eaa8 <xPortStartScheduler>
			xTCB = pxCurrentTCB;
90010580:	6813      	ldr	r3, [r2, #0]
90010582:	e7f4      	b.n	9001056e <vTaskStartScheduler+0xd6>
90010584:	9000fee5 	.word	0x9000fee5
90010588:	9002d040 	.word	0x9002d040
9001058c:	24021728 	.word	0x24021728
90010590:	24000114 	.word	0x24000114
90010594:	24021234 	.word	0x24021234
90010598:	24021248 	.word	0x24021248
9001059c:	24021250 	.word	0x24021250

900105a0 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
900105a0:	4a02      	ldr	r2, [pc, #8]	@ (900105ac <vTaskSuspendAll+0xc>)
900105a2:	6813      	ldr	r3, [r2, #0]
900105a4:	3301      	adds	r3, #1
900105a6:	6013      	str	r3, [r2, #0]
}
900105a8:	4770      	bx	lr
900105aa:	bf00      	nop
900105ac:	24021230 	.word	0x24021230

900105b0 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
900105b0:	4b06      	ldr	r3, [pc, #24]	@ (900105cc <xTaskResumeAll+0x1c>)
900105b2:	681b      	ldr	r3, [r3, #0]
900105b4:	b943      	cbnz	r3, 900105c8 <xTaskResumeAll+0x18>
900105b6:	f04f 0350 	mov.w	r3, #80	@ 0x50
900105ba:	f383 8811 	msr	BASEPRI, r3
900105be:	f3bf 8f6f 	isb	sy
900105c2:	f3bf 8f4f 	dsb	sy
900105c6:	e7fe      	b.n	900105c6 <xTaskResumeAll+0x16>
900105c8:	f7ff bd84 	b.w	900100d4 <xTaskResumeAll.part.0>
900105cc:	24021230 	.word	0x24021230

900105d0 <xTaskGetTickCount>:
		xTicks = xTickCount;
900105d0:	4b01      	ldr	r3, [pc, #4]	@ (900105d8 <xTaskGetTickCount+0x8>)
900105d2:	6818      	ldr	r0, [r3, #0]
}
900105d4:	4770      	bx	lr
900105d6:	bf00      	nop
900105d8:	24021250 	.word	0x24021250

900105dc <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
900105dc:	4b05      	ldr	r3, [pc, #20]	@ (900105f4 <xTaskIncrementTick+0x18>)
900105de:	681b      	ldr	r3, [r3, #0]
900105e0:	b90b      	cbnz	r3, 900105e6 <xTaskIncrementTick+0xa>
900105e2:	f7ff bcd1 	b.w	9000ff88 <xTaskIncrementTick.part.0>
		++xPendedTicks;
900105e6:	4a04      	ldr	r2, [pc, #16]	@ (900105f8 <xTaskIncrementTick+0x1c>)
}
900105e8:	2000      	movs	r0, #0
		++xPendedTicks;
900105ea:	6813      	ldr	r3, [r2, #0]
900105ec:	3301      	adds	r3, #1
900105ee:	6013      	str	r3, [r2, #0]
}
900105f0:	4770      	bx	lr
900105f2:	bf00      	nop
900105f4:	24021230 	.word	0x24021230
900105f8:	24021244 	.word	0x24021244

900105fc <vTaskSetApplicationTaskTag>:
	{
900105fc:	b538      	push	{r3, r4, r5, lr}
900105fe:	460d      	mov	r5, r1
		if( xTask == NULL )
90010600:	b138      	cbz	r0, 90010612 <vTaskSetApplicationTaskTag+0x16>
90010602:	4604      	mov	r4, r0
		taskENTER_CRITICAL();
90010604:	f7fe f9be 	bl	9000e984 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
90010608:	6565      	str	r5, [r4, #84]	@ 0x54
	}
9001060a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
9001060e:	f7fe b9db 	b.w	9000e9c8 <vPortExitCritical>
			xTCB = ( TCB_t * ) pxCurrentTCB;
90010612:	4b04      	ldr	r3, [pc, #16]	@ (90010624 <vTaskSetApplicationTaskTag+0x28>)
90010614:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
90010616:	f7fe f9b5 	bl	9000e984 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
9001061a:	6565      	str	r5, [r4, #84]	@ 0x54
	}
9001061c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
90010620:	f7fe b9d2 	b.w	9000e9c8 <vPortExitCritical>
90010624:	24021728 	.word	0x24021728

90010628 <vTaskSwitchContext>:
{
90010628:	b538      	push	{r3, r4, r5, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
9001062a:	4b28      	ldr	r3, [pc, #160]	@ (900106cc <vTaskSwitchContext+0xa4>)
9001062c:	681b      	ldr	r3, [r3, #0]
9001062e:	b11b      	cbz	r3, 90010638 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
90010630:	4b27      	ldr	r3, [pc, #156]	@ (900106d0 <vTaskSwitchContext+0xa8>)
90010632:	2201      	movs	r2, #1
90010634:	601a      	str	r2, [r3, #0]
}
90010636:	bd38      	pop	{r3, r4, r5, pc}
		xYieldPending = pdFALSE;
90010638:	4a25      	ldr	r2, [pc, #148]	@ (900106d0 <vTaskSwitchContext+0xa8>)
		traceTASK_SWITCHED_OUT();
9001063a:	4c26      	ldr	r4, [pc, #152]	@ (900106d4 <vTaskSwitchContext+0xac>)
		xYieldPending = pdFALSE;
9001063c:	6013      	str	r3, [r2, #0]
		traceTASK_SWITCHED_OUT();
9001063e:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
90010640:	2b00      	cmp	r3, #0
90010642:	d038      	beq.n	900106b6 <vTaskSwitchContext+0x8e>
		if( xTCB->pxTaskTag != NULL )
90010644:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90010646:	b10b      	cbz	r3, 9001064c <vTaskSwitchContext+0x24>
			xReturn = xTCB->pxTaskTag( pvParameter );
90010648:	2001      	movs	r0, #1
9001064a:	4798      	blx	r3
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001064c:	4d22      	ldr	r5, [pc, #136]	@ (900106d8 <vTaskSwitchContext+0xb0>)
9001064e:	4923      	ldr	r1, [pc, #140]	@ (900106dc <vTaskSwitchContext+0xb4>)
90010650:	682b      	ldr	r3, [r5, #0]
90010652:	eb03 0283 	add.w	r2, r3, r3, lsl #2
90010656:	0098      	lsls	r0, r3, #2
90010658:	0092      	lsls	r2, r2, #2
9001065a:	588a      	ldr	r2, [r1, r2]
9001065c:	b942      	cbnz	r2, 90010670 <vTaskSwitchContext+0x48>
9001065e:	b30b      	cbz	r3, 900106a4 <vTaskSwitchContext+0x7c>
90010660:	3b01      	subs	r3, #1
90010662:	eb03 0283 	add.w	r2, r3, r3, lsl #2
90010666:	0098      	lsls	r0, r3, #2
90010668:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
9001066c:	2a00      	cmp	r2, #0
9001066e:	d0f6      	beq.n	9001065e <vTaskSwitchContext+0x36>
90010670:	4418      	add	r0, r3
90010672:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
90010676:	f8dc 1004 	ldr.w	r1, [ip, #4]
9001067a:	4662      	mov	r2, ip
9001067c:	6849      	ldr	r1, [r1, #4]
9001067e:	3208      	adds	r2, #8
90010680:	4291      	cmp	r1, r2
90010682:	f8cc 1004 	str.w	r1, [ip, #4]
90010686:	d01d      	beq.n	900106c4 <vTaskSwitchContext+0x9c>
90010688:	68ca      	ldr	r2, [r1, #12]
9001068a:	6022      	str	r2, [r4, #0]
9001068c:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
9001068e:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
90010690:	b1b3      	cbz	r3, 900106c0 <vTaskSwitchContext+0x98>
		if( xTCB->pxTaskTag != NULL )
90010692:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90010694:	b10b      	cbz	r3, 9001069a <vTaskSwitchContext+0x72>
			xReturn = xTCB->pxTaskTag( pvParameter );
90010696:	2000      	movs	r0, #0
90010698:	4798      	blx	r3
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
9001069a:	6823      	ldr	r3, [r4, #0]
9001069c:	4a10      	ldr	r2, [pc, #64]	@ (900106e0 <vTaskSwitchContext+0xb8>)
9001069e:	3358      	adds	r3, #88	@ 0x58
900106a0:	6013      	str	r3, [r2, #0]
}
900106a2:	bd38      	pop	{r3, r4, r5, pc}
900106a4:	f04f 0350 	mov.w	r3, #80	@ 0x50
900106a8:	f383 8811 	msr	BASEPRI, r3
900106ac:	f3bf 8f6f 	isb	sy
900106b0:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900106b4:	e7fe      	b.n	900106b4 <vTaskSwitchContext+0x8c>
			xTCB = pxCurrentTCB;
900106b6:	6823      	ldr	r3, [r4, #0]
		if( xTCB->pxTaskTag != NULL )
900106b8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
900106ba:	2b00      	cmp	r3, #0
900106bc:	d1c4      	bne.n	90010648 <vTaskSwitchContext+0x20>
900106be:	e7c5      	b.n	9001064c <vTaskSwitchContext+0x24>
			xTCB = pxCurrentTCB;
900106c0:	6823      	ldr	r3, [r4, #0]
900106c2:	e7e6      	b.n	90010692 <vTaskSwitchContext+0x6a>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900106c4:	6849      	ldr	r1, [r1, #4]
900106c6:	f8cc 1004 	str.w	r1, [ip, #4]
900106ca:	e7dd      	b.n	90010688 <vTaskSwitchContext+0x60>
900106cc:	24021230 	.word	0x24021230
900106d0:	24021240 	.word	0x24021240
900106d4:	24021728 	.word	0x24021728
900106d8:	2402124c 	.word	0x2402124c
900106dc:	240212c8 	.word	0x240212c8
900106e0:	24000114 	.word	0x24000114

900106e4 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
900106e4:	b1f0      	cbz	r0, 90010724 <vTaskPlaceOnEventList+0x40>
{
900106e6:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
900106e8:	4d1a      	ldr	r5, [pc, #104]	@ (90010754 <vTaskPlaceOnEventList+0x70>)
900106ea:	460c      	mov	r4, r1
900106ec:	6829      	ldr	r1, [r5, #0]
900106ee:	3118      	adds	r1, #24
900106f0:	f7fe f8b0 	bl	9000e854 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
900106f4:	4b18      	ldr	r3, [pc, #96]	@ (90010758 <vTaskPlaceOnEventList+0x74>)
900106f6:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900106f8:	6828      	ldr	r0, [r5, #0]
900106fa:	3004      	adds	r0, #4
900106fc:	f7fe f8c2 	bl	9000e884 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
90010700:	1c63      	adds	r3, r4, #1
90010702:	d020      	beq.n	90010746 <vTaskPlaceOnEventList+0x62>
			xTimeToWake = xConstTickCount + xTicksToWait;
90010704:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
90010706:	682b      	ldr	r3, [r5, #0]
90010708:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
9001070a:	d214      	bcs.n	90010736 <vTaskPlaceOnEventList+0x52>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001070c:	4b13      	ldr	r3, [pc, #76]	@ (9001075c <vTaskPlaceOnEventList+0x78>)
9001070e:	6818      	ldr	r0, [r3, #0]
90010710:	6829      	ldr	r1, [r5, #0]
90010712:	3104      	adds	r1, #4
90010714:	f7fe f89e 	bl	9000e854 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
90010718:	4b11      	ldr	r3, [pc, #68]	@ (90010760 <vTaskPlaceOnEventList+0x7c>)
9001071a:	681a      	ldr	r2, [r3, #0]
9001071c:	4294      	cmp	r4, r2
9001071e:	d200      	bcs.n	90010722 <vTaskPlaceOnEventList+0x3e>
					xNextTaskUnblockTime = xTimeToWake;
90010720:	601c      	str	r4, [r3, #0]
}
90010722:	bd70      	pop	{r4, r5, r6, pc}
90010724:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010728:	f383 8811 	msr	BASEPRI, r3
9001072c:	f3bf 8f6f 	isb	sy
90010730:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
90010734:	e7fe      	b.n	90010734 <vTaskPlaceOnEventList+0x50>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010736:	4b0b      	ldr	r3, [pc, #44]	@ (90010764 <vTaskPlaceOnEventList+0x80>)
90010738:	6818      	ldr	r0, [r3, #0]
9001073a:	6829      	ldr	r1, [r5, #0]
}
9001073c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010740:	3104      	adds	r1, #4
90010742:	f7fe b887 	b.w	9000e854 <vListInsert>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010746:	6829      	ldr	r1, [r5, #0]
90010748:	4807      	ldr	r0, [pc, #28]	@ (90010768 <vTaskPlaceOnEventList+0x84>)
9001074a:	3104      	adds	r1, #4
}
9001074c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010750:	f7fe b872 	b.w	9000e838 <vListInsertEnd>
90010754:	24021728 	.word	0x24021728
90010758:	24021250 	.word	0x24021250
9001075c:	2402129c 	.word	0x2402129c
90010760:	24021234 	.word	0x24021234
90010764:	24021298 	.word	0x24021298
90010768:	24021258 	.word	0x24021258

9001076c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
9001076c:	b350      	cbz	r0, 900107c4 <vTaskPlaceOnEventListRestricted+0x58>
	{
9001076e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
90010770:	4e1d      	ldr	r6, [pc, #116]	@ (900107e8 <vTaskPlaceOnEventListRestricted+0x7c>)
90010772:	460c      	mov	r4, r1
90010774:	4615      	mov	r5, r2
90010776:	6831      	ldr	r1, [r6, #0]
90010778:	3118      	adds	r1, #24
9001077a:	f7fe f85d 	bl	9000e838 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
9001077e:	4b1b      	ldr	r3, [pc, #108]	@ (900107ec <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
90010780:	b15d      	cbz	r5, 9001079a <vTaskPlaceOnEventListRestricted+0x2e>
const TickType_t xConstTickCount = xTickCount;
90010782:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90010784:	6830      	ldr	r0, [r6, #0]
90010786:	3004      	adds	r0, #4
90010788:	f7fe f87c 	bl	9000e884 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001078c:	6831      	ldr	r1, [r6, #0]
9001078e:	4818      	ldr	r0, [pc, #96]	@ (900107f0 <vTaskPlaceOnEventListRestricted+0x84>)
90010790:	3104      	adds	r1, #4
	}
90010792:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010796:	f7fe b84f 	b.w	9000e838 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
9001079a:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9001079c:	6830      	ldr	r0, [r6, #0]
9001079e:	3004      	adds	r0, #4
900107a0:	f7fe f870 	bl	9000e884 <uxListRemove>
			xTimeToWake = xConstTickCount + xTicksToWait;
900107a4:	1964      	adds	r4, r4, r5
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
900107a6:	6833      	ldr	r3, [r6, #0]
900107a8:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
900107aa:	d214      	bcs.n	900107d6 <vTaskPlaceOnEventListRestricted+0x6a>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900107ac:	4b11      	ldr	r3, [pc, #68]	@ (900107f4 <vTaskPlaceOnEventListRestricted+0x88>)
900107ae:	6818      	ldr	r0, [r3, #0]
900107b0:	6831      	ldr	r1, [r6, #0]
900107b2:	3104      	adds	r1, #4
900107b4:	f7fe f84e 	bl	9000e854 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
900107b8:	4b0f      	ldr	r3, [pc, #60]	@ (900107f8 <vTaskPlaceOnEventListRestricted+0x8c>)
900107ba:	681a      	ldr	r2, [r3, #0]
900107bc:	4294      	cmp	r4, r2
900107be:	d200      	bcs.n	900107c2 <vTaskPlaceOnEventListRestricted+0x56>
					xNextTaskUnblockTime = xTimeToWake;
900107c0:	601c      	str	r4, [r3, #0]
	}
900107c2:	bd70      	pop	{r4, r5, r6, pc}
900107c4:	f04f 0350 	mov.w	r3, #80	@ 0x50
900107c8:	f383 8811 	msr	BASEPRI, r3
900107cc:	f3bf 8f6f 	isb	sy
900107d0:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
900107d4:	e7fe      	b.n	900107d4 <vTaskPlaceOnEventListRestricted+0x68>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900107d6:	4b09      	ldr	r3, [pc, #36]	@ (900107fc <vTaskPlaceOnEventListRestricted+0x90>)
900107d8:	6818      	ldr	r0, [r3, #0]
900107da:	6831      	ldr	r1, [r6, #0]
	}
900107dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900107e0:	3104      	adds	r1, #4
900107e2:	f7fe b837 	b.w	9000e854 <vListInsert>
900107e6:	bf00      	nop
900107e8:	24021728 	.word	0x24021728
900107ec:	24021250 	.word	0x24021250
900107f0:	24021258 	.word	0x24021258
900107f4:	2402129c 	.word	0x2402129c
900107f8:	24021234 	.word	0x24021234
900107fc:	24021298 	.word	0x24021298

90010800 <xTaskRemoveFromEventList>:
{
90010800:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010802:	68c3      	ldr	r3, [r0, #12]
90010804:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
90010806:	b34c      	cbz	r4, 9001085c <xTaskRemoveFromEventList+0x5c>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
90010808:	f104 0518 	add.w	r5, r4, #24
9001080c:	4628      	mov	r0, r5
9001080e:	f7fe f839 	bl	9000e884 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90010812:	4b18      	ldr	r3, [pc, #96]	@ (90010874 <xTaskRemoveFromEventList+0x74>)
90010814:	681b      	ldr	r3, [r3, #0]
90010816:	b173      	cbz	r3, 90010836 <xTaskRemoveFromEventList+0x36>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
90010818:	4629      	mov	r1, r5
9001081a:	4817      	ldr	r0, [pc, #92]	@ (90010878 <xTaskRemoveFromEventList+0x78>)
9001081c:	f7fe f80c 	bl	9000e838 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
90010820:	4b16      	ldr	r3, [pc, #88]	@ (9001087c <xTaskRemoveFromEventList+0x7c>)
90010822:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90010824:	681b      	ldr	r3, [r3, #0]
90010826:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010828:	429a      	cmp	r2, r3
9001082a:	d920      	bls.n	9001086e <xTaskRemoveFromEventList+0x6e>
		xYieldPending = pdTRUE;
9001082c:	2301      	movs	r3, #1
9001082e:	4a14      	ldr	r2, [pc, #80]	@ (90010880 <xTaskRemoveFromEventList+0x80>)
		xReturn = pdTRUE;
90010830:	4618      	mov	r0, r3
		xYieldPending = pdTRUE;
90010832:	6013      	str	r3, [r2, #0]
}
90010834:	bd38      	pop	{r3, r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
90010836:	1d25      	adds	r5, r4, #4
90010838:	4628      	mov	r0, r5
9001083a:	f7fe f823 	bl	9000e884 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
9001083e:	4b11      	ldr	r3, [pc, #68]	@ (90010884 <xTaskRemoveFromEventList+0x84>)
90010840:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
90010842:	681a      	ldr	r2, [r3, #0]
90010844:	4290      	cmp	r0, r2
90010846:	d900      	bls.n	9001084a <xTaskRemoveFromEventList+0x4a>
90010848:	6018      	str	r0, [r3, #0]
9001084a:	4b0f      	ldr	r3, [pc, #60]	@ (90010888 <xTaskRemoveFromEventList+0x88>)
9001084c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90010850:	4629      	mov	r1, r5
90010852:	eb03 0080 	add.w	r0, r3, r0, lsl #2
90010856:	f7fd ffef 	bl	9000e838 <vListInsertEnd>
9001085a:	e7e1      	b.n	90010820 <xTaskRemoveFromEventList+0x20>
9001085c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010860:	f383 8811 	msr	BASEPRI, r3
90010864:	f3bf 8f6f 	isb	sy
90010868:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
9001086c:	e7fe      	b.n	9001086c <xTaskRemoveFromEventList+0x6c>
		xReturn = pdFALSE;
9001086e:	2000      	movs	r0, #0
}
90010870:	bd38      	pop	{r3, r4, r5, pc}
90010872:	bf00      	nop
90010874:	24021230 	.word	0x24021230
90010878:	24021284 	.word	0x24021284
9001087c:	24021728 	.word	0x24021728
90010880:	24021240 	.word	0x24021240
90010884:	2402124c 	.word	0x2402124c
90010888:	240212c8 	.word	0x240212c8

9001088c <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9001088c:	4a03      	ldr	r2, [pc, #12]	@ (9001089c <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
9001088e:	4b04      	ldr	r3, [pc, #16]	@ (900108a0 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
90010890:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
90010892:	681b      	ldr	r3, [r3, #0]
90010894:	e9c0 2300 	strd	r2, r3, [r0]
}
90010898:	4770      	bx	lr
9001089a:	bf00      	nop
9001089c:	2402123c 	.word	0x2402123c
900108a0:	24021250 	.word	0x24021250

900108a4 <xTaskCheckForTimeOut>:
{
900108a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	configASSERT( pxTimeOut );
900108a6:	b308      	cbz	r0, 900108ec <xTaskCheckForTimeOut+0x48>
	configASSERT( pxTicksToWait );
900108a8:	460d      	mov	r5, r1
900108aa:	b1b1      	cbz	r1, 900108da <xTaskCheckForTimeOut+0x36>
900108ac:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
900108ae:	f7fe f869 	bl	9000e984 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
900108b2:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
900108b4:	4a1a      	ldr	r2, [pc, #104]	@ (90010920 <xTaskCheckForTimeOut+0x7c>)
			if( *pxTicksToWait == portMAX_DELAY )
900108b6:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
900108b8:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
900108ba:	d02c      	beq.n	90010916 <xTaskCheckForTimeOut+0x72>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
900108bc:	f8df c064 	ldr.w	ip, [pc, #100]	@ 90010924 <xTaskCheckForTimeOut+0x80>
900108c0:	6826      	ldr	r6, [r4, #0]
900108c2:	f8dc 7000 	ldr.w	r7, [ip]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
900108c6:	6860      	ldr	r0, [r4, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
900108c8:	42be      	cmp	r6, r7
900108ca:	d018      	beq.n	900108fe <xTaskCheckForTimeOut+0x5a>
900108cc:	4288      	cmp	r0, r1
900108ce:	d816      	bhi.n	900108fe <xTaskCheckForTimeOut+0x5a>
			xReturn = pdTRUE;
900108d0:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
900108d2:	f7fe f879 	bl	9000e9c8 <vPortExitCritical>
}
900108d6:	4620      	mov	r0, r4
900108d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900108da:	f04f 0350 	mov.w	r3, #80	@ 0x50
900108de:	f383 8811 	msr	BASEPRI, r3
900108e2:	f3bf 8f6f 	isb	sy
900108e6:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
900108ea:	e7fe      	b.n	900108ea <xTaskCheckForTimeOut+0x46>
900108ec:	f04f 0350 	mov.w	r3, #80	@ 0x50
900108f0:	f383 8811 	msr	BASEPRI, r3
900108f4:	f3bf 8f6f 	isb	sy
900108f8:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
900108fc:	e7fe      	b.n	900108fc <xTaskCheckForTimeOut+0x58>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
900108fe:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
90010902:	4573      	cmp	r3, lr
90010904:	d909      	bls.n	9001091a <xTaskCheckForTimeOut+0x76>
			*pxTicksToWait -= xElapsedTime;
90010906:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
90010908:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
9001090c:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
9001090e:	4403      	add	r3, r0
90010910:	602b      	str	r3, [r5, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
90010912:	e9c4 1200 	strd	r1, r2, [r4]
				xReturn = pdFALSE;
90010916:	2400      	movs	r4, #0
90010918:	e7db      	b.n	900108d2 <xTaskCheckForTimeOut+0x2e>
			*pxTicksToWait = 0;
9001091a:	2300      	movs	r3, #0
9001091c:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
9001091e:	e7d7      	b.n	900108d0 <xTaskCheckForTimeOut+0x2c>
90010920:	24021250 	.word	0x24021250
90010924:	2402123c 	.word	0x2402123c

90010928 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
90010928:	4b01      	ldr	r3, [pc, #4]	@ (90010930 <vTaskMissedYield+0x8>)
9001092a:	2201      	movs	r2, #1
9001092c:	601a      	str	r2, [r3, #0]
}
9001092e:	4770      	bx	lr
90010930:	24021240 	.word	0x24021240

90010934 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
90010934:	4b05      	ldr	r3, [pc, #20]	@ (9001094c <xTaskGetSchedulerState+0x18>)
90010936:	681b      	ldr	r3, [r3, #0]
90010938:	b133      	cbz	r3, 90010948 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9001093a:	4b05      	ldr	r3, [pc, #20]	@ (90010950 <xTaskGetSchedulerState+0x1c>)
9001093c:	6818      	ldr	r0, [r3, #0]
9001093e:	fab0 f080 	clz	r0, r0
90010942:	0940      	lsrs	r0, r0, #5
90010944:	0040      	lsls	r0, r0, #1
90010946:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
90010948:	2001      	movs	r0, #1
	}
9001094a:	4770      	bx	lr
9001094c:	24021248 	.word	0x24021248
90010950:	24021230 	.word	0x24021230

90010954 <xTaskPriorityInherit>:
	{
90010954:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
90010956:	4604      	mov	r4, r0
90010958:	b1c8      	cbz	r0, 9001098e <xTaskPriorityInherit+0x3a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
9001095a:	4d1b      	ldr	r5, [pc, #108]	@ (900109c8 <xTaskPriorityInherit+0x74>)
9001095c:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
9001095e:	682a      	ldr	r2, [r5, #0]
90010960:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
90010962:	4293      	cmp	r3, r2
90010964:	d214      	bcs.n	90010990 <xTaskPriorityInherit+0x3c>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90010966:	6982      	ldr	r2, [r0, #24]
90010968:	2a00      	cmp	r2, #0
9001096a:	db04      	blt.n	90010976 <xTaskPriorityInherit+0x22>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9001096c:	682a      	ldr	r2, [r5, #0]
9001096e:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
90010970:	f1c2 0238 	rsb	r2, r2, #56	@ 0x38
90010974:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
90010976:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9001097a:	4e14      	ldr	r6, [pc, #80]	@ (900109cc <xTaskPriorityInherit+0x78>)
9001097c:	6962      	ldr	r2, [r4, #20]
9001097e:	eb06 0383 	add.w	r3, r6, r3, lsl #2
90010982:	429a      	cmp	r2, r3
90010984:	d00c      	beq.n	900109a0 <xTaskPriorityInherit+0x4c>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90010986:	682b      	ldr	r3, [r5, #0]
90010988:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001098a:	62e3      	str	r3, [r4, #44]	@ 0x2c
				xReturn = pdTRUE;
9001098c:	2001      	movs	r0, #1
	}
9001098e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
90010990:	682b      	ldr	r3, [r5, #0]
90010992:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
90010994:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010996:	4298      	cmp	r0, r3
90010998:	bf2c      	ite	cs
9001099a:	2000      	movcs	r0, #0
9001099c:	2001      	movcc	r0, #1
	}
9001099e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900109a0:	1d27      	adds	r7, r4, #4
900109a2:	4638      	mov	r0, r7
900109a4:	f7fd ff6e 	bl	9000e884 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
900109a8:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
900109aa:	4b09      	ldr	r3, [pc, #36]	@ (900109d0 <xTaskPriorityInherit+0x7c>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
900109ac:	6ad0      	ldr	r0, [r2, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
900109ae:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
900109b0:	62e0      	str	r0, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
900109b2:	4290      	cmp	r0, r2
900109b4:	d900      	bls.n	900109b8 <xTaskPriorityInherit+0x64>
900109b6:	6018      	str	r0, [r3, #0]
900109b8:	eb00 0080 	add.w	r0, r0, r0, lsl #2
900109bc:	4639      	mov	r1, r7
900109be:	eb06 0080 	add.w	r0, r6, r0, lsl #2
900109c2:	f7fd ff39 	bl	9000e838 <vListInsertEnd>
900109c6:	e7e1      	b.n	9001098c <xTaskPriorityInherit+0x38>
900109c8:	24021728 	.word	0x24021728
900109cc:	240212c8 	.word	0x240212c8
900109d0:	2402124c 	.word	0x2402124c

900109d4 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
900109d4:	b308      	cbz	r0, 90010a1a <xTaskPriorityDisinherit+0x46>
	{
900109d6:	b538      	push	{r3, r4, r5, lr}
			configASSERT( pxTCB == pxCurrentTCB );
900109d8:	4b1d      	ldr	r3, [pc, #116]	@ (90010a50 <xTaskPriorityDisinherit+0x7c>)
900109da:	681c      	ldr	r4, [r3, #0]
900109dc:	4284      	cmp	r4, r0
900109de:	d008      	beq.n	900109f2 <xTaskPriorityDisinherit+0x1e>
900109e0:	f04f 0350 	mov.w	r3, #80	@ 0x50
900109e4:	f383 8811 	msr	BASEPRI, r3
900109e8:	f3bf 8f6f 	isb	sy
900109ec:	f3bf 8f4f 	dsb	sy
900109f0:	e7fe      	b.n	900109f0 <xTaskPriorityDisinherit+0x1c>
			configASSERT( pxTCB->uxMutexesHeld );
900109f2:	6d23      	ldr	r3, [r4, #80]	@ 0x50
900109f4:	b143      	cbz	r3, 90010a08 <xTaskPriorityDisinherit+0x34>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
900109f6:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
			( pxTCB->uxMutexesHeld )--;
900109f8:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
900109fa:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
900109fc:	6523      	str	r3, [r4, #80]	@ 0x50
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
900109fe:	4291      	cmp	r1, r2
90010a00:	d000      	beq.n	90010a04 <xTaskPriorityDisinherit+0x30>
90010a02:	b163      	cbz	r3, 90010a1e <xTaskPriorityDisinherit+0x4a>
	BaseType_t xReturn = pdFALSE;
90010a04:	2000      	movs	r0, #0
	}
90010a06:	bd38      	pop	{r3, r4, r5, pc}
90010a08:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010a0c:	f383 8811 	msr	BASEPRI, r3
90010a10:	f3bf 8f6f 	isb	sy
90010a14:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
90010a18:	e7fe      	b.n	90010a18 <xTaskPriorityDisinherit+0x44>
	BaseType_t xReturn = pdFALSE;
90010a1a:	2000      	movs	r0, #0
	}
90010a1c:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90010a1e:	1d25      	adds	r5, r4, #4
90010a20:	4628      	mov	r0, r5
90010a22:	f7fd ff2f 	bl	9000e884 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
90010a26:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
					prvAddTaskToReadyList( pxTCB );
90010a28:	4b0a      	ldr	r3, [pc, #40]	@ (90010a54 <xTaskPriorityDisinherit+0x80>)
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010a2a:	f1c0 0238 	rsb	r2, r0, #56	@ 0x38
					pxTCB->uxPriority = pxTCB->uxBasePriority;
90010a2e:	62e0      	str	r0, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010a30:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
90010a32:	681a      	ldr	r2, [r3, #0]
90010a34:	4290      	cmp	r0, r2
90010a36:	d900      	bls.n	90010a3a <xTaskPriorityDisinherit+0x66>
90010a38:	6018      	str	r0, [r3, #0]
90010a3a:	4b07      	ldr	r3, [pc, #28]	@ (90010a58 <xTaskPriorityDisinherit+0x84>)
90010a3c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90010a40:	4629      	mov	r1, r5
90010a42:	eb03 0080 	add.w	r0, r3, r0, lsl #2
90010a46:	f7fd fef7 	bl	9000e838 <vListInsertEnd>
					xReturn = pdTRUE;
90010a4a:	2001      	movs	r0, #1
	}
90010a4c:	bd38      	pop	{r3, r4, r5, pc}
90010a4e:	bf00      	nop
90010a50:	24021728 	.word	0x24021728
90010a54:	2402124c 	.word	0x2402124c
90010a58:	240212c8 	.word	0x240212c8

90010a5c <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
90010a5c:	2800      	cmp	r0, #0
90010a5e:	d03c      	beq.n	90010ada <vTaskPriorityDisinheritAfterTimeout+0x7e>
			configASSERT( pxTCB->uxMutexesHeld );
90010a60:	6d03      	ldr	r3, [r0, #80]	@ 0x50
	{
90010a62:	b570      	push	{r4, r5, r6, lr}
90010a64:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
90010a66:	b14b      	cbz	r3, 90010a7c <vTaskPriorityDisinheritAfterTimeout+0x20>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
90010a68:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
90010a6a:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
90010a6c:	4281      	cmp	r1, r0
90010a6e:	bf38      	it	cc
90010a70:	4601      	movcc	r1, r0
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
90010a72:	2b01      	cmp	r3, #1
90010a74:	d101      	bne.n	90010a7a <vTaskPriorityDisinheritAfterTimeout+0x1e>
90010a76:	428a      	cmp	r2, r1
90010a78:	d109      	bne.n	90010a8e <vTaskPriorityDisinheritAfterTimeout+0x32>
	}
90010a7a:	bd70      	pop	{r4, r5, r6, pc}
90010a7c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010a80:	f383 8811 	msr	BASEPRI, r3
90010a84:	f3bf 8f6f 	isb	sy
90010a88:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
90010a8c:	e7fe      	b.n	90010a8c <vTaskPriorityDisinheritAfterTimeout+0x30>
					configASSERT( pxTCB != pxCurrentTCB );
90010a8e:	4b18      	ldr	r3, [pc, #96]	@ (90010af0 <vTaskPriorityDisinheritAfterTimeout+0x94>)
90010a90:	681b      	ldr	r3, [r3, #0]
90010a92:	42a3      	cmp	r3, r4
90010a94:	d022      	beq.n	90010adc <vTaskPriorityDisinheritAfterTimeout+0x80>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90010a96:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
90010a98:	62e1      	str	r1, [r4, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90010a9a:	2b00      	cmp	r3, #0
90010a9c:	db02      	blt.n	90010aa4 <vTaskPriorityDisinheritAfterTimeout+0x48>
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010a9e:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
90010aa2:	61a1      	str	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
90010aa4:	eb02 0282 	add.w	r2, r2, r2, lsl #2
90010aa8:	4d12      	ldr	r5, [pc, #72]	@ (90010af4 <vTaskPriorityDisinheritAfterTimeout+0x98>)
90010aaa:	6961      	ldr	r1, [r4, #20]
90010aac:	eb05 0382 	add.w	r3, r5, r2, lsl #2
90010ab0:	4299      	cmp	r1, r3
90010ab2:	d1e2      	bne.n	90010a7a <vTaskPriorityDisinheritAfterTimeout+0x1e>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90010ab4:	1d26      	adds	r6, r4, #4
90010ab6:	4630      	mov	r0, r6
90010ab8:	f7fd fee4 	bl	9000e884 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
90010abc:	4b0e      	ldr	r3, [pc, #56]	@ (90010af8 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
90010abe:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
90010ac0:	681a      	ldr	r2, [r3, #0]
90010ac2:	4290      	cmp	r0, r2
90010ac4:	d900      	bls.n	90010ac8 <vTaskPriorityDisinheritAfterTimeout+0x6c>
90010ac6:	6018      	str	r0, [r3, #0]
90010ac8:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90010acc:	4631      	mov	r1, r6
90010ace:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
90010ad2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
90010ad6:	f7fd beaf 	b.w	9000e838 <vListInsertEnd>
90010ada:	4770      	bx	lr
90010adc:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010ae0:	f383 8811 	msr	BASEPRI, r3
90010ae4:	f3bf 8f6f 	isb	sy
90010ae8:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
90010aec:	e7fe      	b.n	90010aec <vTaskPriorityDisinheritAfterTimeout+0x90>
90010aee:	bf00      	nop
90010af0:	24021728 	.word	0x24021728
90010af4:	240212c8 	.word	0x240212c8
90010af8:	2402124c 	.word	0x2402124c

90010afc <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
90010afc:	4b04      	ldr	r3, [pc, #16]	@ (90010b10 <pvTaskIncrementMutexHeldCount+0x14>)
90010afe:	681a      	ldr	r2, [r3, #0]
90010b00:	b11a      	cbz	r2, 90010b0a <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
90010b02:	6819      	ldr	r1, [r3, #0]
90010b04:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
90010b06:	3201      	adds	r2, #1
90010b08:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
90010b0a:	6818      	ldr	r0, [r3, #0]
	}
90010b0c:	4770      	bx	lr
90010b0e:	bf00      	nop
90010b10:	24021728 	.word	0x24021728

90010b14 <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
90010b14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010b18:	4e21      	ldr	r6, [pc, #132]	@ (90010ba0 <prvSwitchTimerLists+0x8c>)
90010b1a:	b084      	sub	sp, #16

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
90010b1c:	e00d      	b.n	90010b3a <prvSwitchTimerLists+0x26>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90010b1e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010b20:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90010b22:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
90010b24:	1d25      	adds	r5, r4, #4
90010b26:	4628      	mov	r0, r5
90010b28:	f7fd feac 	bl	9000e884 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
90010b2c:	6a23      	ldr	r3, [r4, #32]
90010b2e:	4620      	mov	r0, r4
90010b30:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
90010b32:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
90010b36:	075b      	lsls	r3, r3, #29
90010b38:	d40a      	bmi.n	90010b50 <prvSwitchTimerLists+0x3c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
90010b3a:	6833      	ldr	r3, [r6, #0]
90010b3c:	681a      	ldr	r2, [r3, #0]
90010b3e:	2a00      	cmp	r2, #0
90010b40:	d1ed      	bne.n	90010b1e <prvSwitchTimerLists+0xa>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
90010b42:	4a18      	ldr	r2, [pc, #96]	@ (90010ba4 <prvSwitchTimerLists+0x90>)
90010b44:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
90010b46:	6013      	str	r3, [r2, #0]
	pxCurrentTimerList = pxOverflowTimerList;
90010b48:	6031      	str	r1, [r6, #0]
}
90010b4a:	b004      	add	sp, #16
90010b4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
90010b50:	69a3      	ldr	r3, [r4, #24]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90010b52:	4629      	mov	r1, r5
	if( xTimerQueue != NULL )
90010b54:	f8df 8050 	ldr.w	r8, [pc, #80]	@ 90010ba8 <prvSwitchTimerLists+0x94>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
90010b58:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
90010b5a:	429f      	cmp	r7, r3
90010b5c:	d205      	bcs.n	90010b6a <prvSwitchTimerLists+0x56>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90010b5e:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
90010b60:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90010b62:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90010b64:	f7fd fe76 	bl	9000e854 <vListInsert>
90010b68:	e7e7      	b.n	90010b3a <prvSwitchTimerLists+0x26>
	if( xTimerQueue != NULL )
90010b6a:	f8d8 3000 	ldr.w	r3, [r8]
		xMessage.xMessageID = xCommandID;
90010b6e:	2500      	movs	r5, #0
	if( xTimerQueue != NULL )
90010b70:	b16b      	cbz	r3, 90010b8e <prvSwitchTimerLists+0x7a>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
90010b72:	9402      	str	r4, [sp, #8]
		xMessage.xMessageID = xCommandID;
90010b74:	e9cd 5700 	strd	r5, r7, [sp]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90010b78:	f7ff fedc 	bl	90010934 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
90010b7c:	462b      	mov	r3, r5
90010b7e:	462a      	mov	r2, r5
90010b80:	4669      	mov	r1, sp
90010b82:	f8d8 0000 	ldr.w	r0, [r8]
90010b86:	f7fe f9eb 	bl	9000ef60 <xQueueGenericSend>
				configASSERT( xResult );
90010b8a:	2800      	cmp	r0, #0
90010b8c:	d1d5      	bne.n	90010b3a <prvSwitchTimerLists+0x26>
90010b8e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010b92:	f383 8811 	msr	BASEPRI, r3
90010b96:	f3bf 8f6f 	isb	sy
90010b9a:	f3bf 8f4f 	dsb	sy
90010b9e:	e7fe      	b.n	90010b9e <prvSwitchTimerLists+0x8a>
90010ba0:	2402182c 	.word	0x2402182c
90010ba4:	24021828 	.word	0x24021828
90010ba8:	24021824 	.word	0x24021824

90010bac <prvTimerTask>:
{
90010bac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010bb0:	4e9f      	ldr	r6, [pc, #636]	@ (90010e30 <prvTimerTask+0x284>)
90010bb2:	b089      	sub	sp, #36	@ 0x24
90010bb4:	4d9f      	ldr	r5, [pc, #636]	@ (90010e34 <prvTimerTask+0x288>)
					portYIELD_WITHIN_API();
90010bb6:	f04f 29e0 	mov.w	r9, #3758153728	@ 0xe000e000
90010bba:	4c9f      	ldr	r4, [pc, #636]	@ (90010e38 <prvTimerTask+0x28c>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
90010bbc:	6833      	ldr	r3, [r6, #0]
90010bbe:	681f      	ldr	r7, [r3, #0]
90010bc0:	2f00      	cmp	r7, #0
90010bc2:	f000 80b2 	beq.w	90010d2a <prvTimerTask+0x17e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90010bc6:	68db      	ldr	r3, [r3, #12]
90010bc8:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
90010bca:	f7ff fce9 	bl	900105a0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
90010bce:	f7ff fcff 	bl	900105d0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90010bd2:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
90010bd4:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
90010bd6:	4298      	cmp	r0, r3
90010bd8:	f0c0 80af 	bcc.w	90010d3a <prvTimerTask+0x18e>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
90010bdc:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
90010bde:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
90010be0:	f200 80d0 	bhi.w	90010d84 <prvTimerTask+0x1d8>
				( void ) xTaskResumeAll();
90010be4:	f7ff fce4 	bl	900105b0 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010be8:	6833      	ldr	r3, [r6, #0]
90010bea:	68db      	ldr	r3, [r3, #12]
90010bec:	f8d3 b00c 	ldr.w	fp, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
90010bf0:	f10b 0804 	add.w	r8, fp, #4
90010bf4:	4640      	mov	r0, r8
90010bf6:	f7fd fe45 	bl	9000e884 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
90010bfa:	f89b 3028 	ldrb.w	r3, [fp, #40]	@ 0x28
90010bfe:	0758      	lsls	r0, r3, #29
90010c00:	f100 80d0 	bmi.w	90010da4 <prvTimerTask+0x1f8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
90010c04:	f023 0301 	bic.w	r3, r3, #1
90010c08:	f88b 3028 	strb.w	r3, [fp, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
90010c0c:	f8db 3020 	ldr.w	r3, [fp, #32]
90010c10:	4658      	mov	r0, fp
90010c12:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
90010c14:	2200      	movs	r2, #0
90010c16:	4669      	mov	r1, sp
90010c18:	6820      	ldr	r0, [r4, #0]
90010c1a:	f7fe fbdf 	bl	9000f3dc <xQueueReceive>
90010c1e:	2800      	cmp	r0, #0
90010c20:	d0cc      	beq.n	90010bbc <prvTimerTask+0x10>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
90010c22:	9b00      	ldr	r3, [sp, #0]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
90010c24:	9802      	ldr	r0, [sp, #8]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
90010c26:	2b00      	cmp	r3, #0
90010c28:	db77      	blt.n	90010d1a <prvTimerTask+0x16e>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
90010c2a:	9f02      	ldr	r7, [sp, #8]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
90010c2c:	697b      	ldr	r3, [r7, #20]
90010c2e:	b113      	cbz	r3, 90010c36 <prvTimerTask+0x8a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
90010c30:	1d38      	adds	r0, r7, #4
90010c32:	f7fd fe27 	bl	9000e884 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
90010c36:	f7ff fccb 	bl	900105d0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90010c3a:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
90010c3c:	4683      	mov	fp, r0
	if( xTimeNow < xLastTime )
90010c3e:	4298      	cmp	r0, r3
90010c40:	f0c0 8082 	bcc.w	90010d48 <prvTimerTask+0x19c>
			switch( xMessage.xMessageID )
90010c44:	9b00      	ldr	r3, [sp, #0]
	xLastTime = xTimeNow;
90010c46:	f8c5 b000 	str.w	fp, [r5]
			switch( xMessage.xMessageID )
90010c4a:	2b09      	cmp	r3, #9
90010c4c:	d8e2      	bhi.n	90010c14 <prvTimerTask+0x68>
90010c4e:	e8df f003 	tbb	[pc, r3]
90010c52:	0505      	.short	0x0505
90010c54:	5b3e5405 	.word	0x5b3e5405
90010c58:	3e540505 	.word	0x3e540505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90010c5c:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
90010c60:	9b01      	ldr	r3, [sp, #4]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90010c62:	f042 0201 	orr.w	r2, r2, #1
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90010c66:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90010c68:	f887 2028 	strb.w	r2, [r7, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
90010c6c:	69ba      	ldr	r2, [r7, #24]
90010c6e:	1899      	adds	r1, r3, r2
90010c70:	bf2c      	ite	cs
90010c72:	2001      	movcs	r0, #1
90010c74:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
90010c76:	4559      	cmp	r1, fp
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90010c78:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
90010c7a:	f200 8085 	bhi.w	90010d88 <prvTimerTask+0x1dc>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010c7e:	ebab 0303 	sub.w	r3, fp, r3
90010c82:	429a      	cmp	r2, r3
90010c84:	f200 80be 	bhi.w	90010e04 <prvTimerTask+0x258>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
90010c88:	6a3b      	ldr	r3, [r7, #32]
90010c8a:	4638      	mov	r0, r7
90010c8c:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
90010c8e:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
90010c92:	0759      	lsls	r1, r3, #29
90010c94:	d5be      	bpl.n	90010c14 <prvTimerTask+0x68>
	if( xTimerQueue != NULL )
90010c96:	6821      	ldr	r1, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
90010c98:	9b01      	ldr	r3, [sp, #4]
90010c9a:	69ba      	ldr	r2, [r7, #24]
	if( xTimerQueue != NULL )
90010c9c:	b171      	cbz	r1, 90010cbc <prvTimerTask+0x110>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
90010c9e:	4413      	add	r3, r2
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
90010ca0:	e9cd 3705 	strd	r3, r7, [sp, #20]
		xMessage.xMessageID = xCommandID;
90010ca4:	2700      	movs	r7, #0
90010ca6:	9704      	str	r7, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90010ca8:	f7ff fe44 	bl	90010934 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
90010cac:	463b      	mov	r3, r7
90010cae:	463a      	mov	r2, r7
90010cb0:	a904      	add	r1, sp, #16
90010cb2:	6820      	ldr	r0, [r4, #0]
90010cb4:	f7fe f954 	bl	9000ef60 <xQueueGenericSend>
							configASSERT( xResult );
90010cb8:	2800      	cmp	r0, #0
90010cba:	d1ab      	bne.n	90010c14 <prvTimerTask+0x68>
90010cbc:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010cc0:	f383 8811 	msr	BASEPRI, r3
90010cc4:	f3bf 8f6f 	isb	sy
90010cc8:	f3bf 8f4f 	dsb	sy
90010ccc:	e7fe      	b.n	90010ccc <prvTimerTask+0x120>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90010cce:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
90010cd2:	9b01      	ldr	r3, [sp, #4]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90010cd4:	f042 0201 	orr.w	r2, r2, #1
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
90010cd8:	61bb      	str	r3, [r7, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90010cda:	f887 2028 	strb.w	r2, [r7, #40]	@ 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
90010cde:	2b00      	cmp	r3, #0
90010ce0:	f000 809c 	beq.w	90010e1c <prvTimerTask+0x270>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
90010ce4:	445b      	add	r3, fp
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90010ce6:	1d39      	adds	r1, r7, #4
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90010ce8:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
90010cea:	455b      	cmp	r3, fp
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90010cec:	607b      	str	r3, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
90010cee:	d855      	bhi.n	90010d9c <prvTimerTask+0x1f0>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90010cf0:	4b52      	ldr	r3, [pc, #328]	@ (90010e3c <prvTimerTask+0x290>)
90010cf2:	6818      	ldr	r0, [r3, #0]
90010cf4:	f7fd fdae 	bl	9000e854 <vListInsert>
90010cf8:	e78c      	b.n	90010c14 <prvTimerTask+0x68>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
90010cfa:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
90010cfe:	f023 0301 	bic.w	r3, r3, #1
90010d02:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
					break;
90010d06:	e785      	b.n	90010c14 <prvTimerTask+0x68>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
90010d08:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
90010d0c:	079a      	lsls	r2, r3, #30
90010d0e:	d557      	bpl.n	90010dc0 <prvTimerTask+0x214>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
90010d10:	f023 0301 	bic.w	r3, r3, #1
90010d14:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
90010d18:	e77c      	b.n	90010c14 <prvTimerTask+0x68>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
90010d1a:	9b01      	ldr	r3, [sp, #4]
90010d1c:	9903      	ldr	r1, [sp, #12]
90010d1e:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
90010d20:	9b00      	ldr	r3, [sp, #0]
90010d22:	2b00      	cmp	r3, #0
90010d24:	f6ff af76 	blt.w	90010c14 <prvTimerTask+0x68>
90010d28:	e77f      	b.n	90010c2a <prvTimerTask+0x7e>
	vTaskSuspendAll();
90010d2a:	f7ff fc39 	bl	900105a0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
90010d2e:	f7ff fc4f 	bl	900105d0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90010d32:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
90010d34:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
90010d36:	4283      	cmp	r3, r0
90010d38:	d909      	bls.n	90010d4e <prvTimerTask+0x1a2>
		prvSwitchTimerLists();
90010d3a:	f7ff feeb 	bl	90010b14 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
90010d3e:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
90010d42:	f7ff fc35 	bl	900105b0 <xTaskResumeAll>
90010d46:	e765      	b.n	90010c14 <prvTimerTask+0x68>
		prvSwitchTimerLists();
90010d48:	f7ff fee4 	bl	90010b14 <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
90010d4c:	e77a      	b.n	90010c44 <prvTimerTask+0x98>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
90010d4e:	4b3b      	ldr	r3, [pc, #236]	@ (90010e3c <prvTimerTask+0x290>)
	xLastTime = xTimeNow;
90010d50:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
90010d54:	681b      	ldr	r3, [r3, #0]
90010d56:	681a      	ldr	r2, [r3, #0]
90010d58:	fab2 f282 	clz	r2, r2
90010d5c:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
90010d5e:	eba7 010a 	sub.w	r1, r7, sl
90010d62:	6820      	ldr	r0, [r4, #0]
90010d64:	f7fe ff44 	bl	9000fbf0 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
90010d68:	f7ff fc22 	bl	900105b0 <xTaskResumeAll>
90010d6c:	2800      	cmp	r0, #0
90010d6e:	f47f af51 	bne.w	90010c14 <prvTimerTask+0x68>
					portYIELD_WITHIN_API();
90010d72:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
90010d76:	f8c9 3d04 	str.w	r3, [r9, #3332]	@ 0xd04
90010d7a:	f3bf 8f4f 	dsb	sy
90010d7e:	f3bf 8f6f 	isb	sy
90010d82:	e747      	b.n	90010c14 <prvTimerTask+0x68>
90010d84:	2200      	movs	r2, #0
90010d86:	e7ea      	b.n	90010d5e <prvTimerTask+0x1b2>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
90010d88:	455b      	cmp	r3, fp
90010d8a:	d902      	bls.n	90010d92 <prvTimerTask+0x1e6>
90010d8c:	2800      	cmp	r0, #0
90010d8e:	f43f af7b 	beq.w	90010c88 <prvTimerTask+0xdc>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90010d92:	1d39      	adds	r1, r7, #4
90010d94:	6830      	ldr	r0, [r6, #0]
90010d96:	f7fd fd5d 	bl	9000e854 <vListInsert>
	return xProcessTimerNow;
90010d9a:	e73b      	b.n	90010c14 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90010d9c:	6830      	ldr	r0, [r6, #0]
90010d9e:	f7fd fd59 	bl	9000e854 <vListInsert>
90010da2:	e737      	b.n	90010c14 <prvTimerTask+0x68>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
90010da4:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90010da8:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
90010dac:	18bb      	adds	r3, r7, r2
	if( xNextExpiryTime <= xTimeNow )
90010dae:	459a      	cmp	sl, r3
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90010db0:	f8cb 3004 	str.w	r3, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
90010db4:	d208      	bcs.n	90010dc8 <prvTimerTask+0x21c>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90010db6:	4641      	mov	r1, r8
90010db8:	6830      	ldr	r0, [r6, #0]
90010dba:	f7fd fd4b 	bl	9000e854 <vListInsert>
	return xProcessTimerNow;
90010dbe:	e725      	b.n	90010c0c <prvTimerTask+0x60>
							vPortFree( pxTimer );
90010dc0:	4638      	mov	r0, r7
90010dc2:	f7fd fcbf 	bl	9000e744 <vPortFree>
90010dc6:	e725      	b.n	90010c14 <prvTimerTask+0x68>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010dc8:	ebaa 0a07 	sub.w	sl, sl, r7
90010dcc:	4552      	cmp	r2, sl
90010dce:	d81f      	bhi.n	90010e10 <prvTimerTask+0x264>
	if( xTimerQueue != NULL )
90010dd0:	6823      	ldr	r3, [r4, #0]
90010dd2:	b173      	cbz	r3, 90010df2 <prvTimerTask+0x246>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
90010dd4:	e9cd 7b05 	strd	r7, fp, [sp, #20]
		xMessage.xMessageID = xCommandID;
90010dd8:	2700      	movs	r7, #0
90010dda:	9704      	str	r7, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90010ddc:	f7ff fdaa 	bl	90010934 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
90010de0:	463b      	mov	r3, r7
90010de2:	463a      	mov	r2, r7
90010de4:	a904      	add	r1, sp, #16
90010de6:	6820      	ldr	r0, [r4, #0]
90010de8:	f7fe f8ba 	bl	9000ef60 <xQueueGenericSend>
			configASSERT( xResult );
90010dec:	2800      	cmp	r0, #0
90010dee:	f47f af0d 	bne.w	90010c0c <prvTimerTask+0x60>
90010df2:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010df6:	f383 8811 	msr	BASEPRI, r3
90010dfa:	f3bf 8f6f 	isb	sy
90010dfe:	f3bf 8f4f 	dsb	sy
90010e02:	e7fe      	b.n	90010e02 <prvTimerTask+0x256>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90010e04:	4b0d      	ldr	r3, [pc, #52]	@ (90010e3c <prvTimerTask+0x290>)
90010e06:	1d39      	adds	r1, r7, #4
90010e08:	6818      	ldr	r0, [r3, #0]
90010e0a:	f7fd fd23 	bl	9000e854 <vListInsert>
	return xProcessTimerNow;
90010e0e:	e701      	b.n	90010c14 <prvTimerTask+0x68>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90010e10:	4b0a      	ldr	r3, [pc, #40]	@ (90010e3c <prvTimerTask+0x290>)
90010e12:	4641      	mov	r1, r8
90010e14:	6818      	ldr	r0, [r3, #0]
90010e16:	f7fd fd1d 	bl	9000e854 <vListInsert>
	return xProcessTimerNow;
90010e1a:	e6f7      	b.n	90010c0c <prvTimerTask+0x60>
90010e1c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010e20:	f383 8811 	msr	BASEPRI, r3
90010e24:	f3bf 8f6f 	isb	sy
90010e28:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
90010e2c:	e7fe      	b.n	90010e2c <prvTimerTask+0x280>
90010e2e:	bf00      	nop
90010e30:	2402182c 	.word	0x2402182c
90010e34:	2402181c 	.word	0x2402181c
90010e38:	24021824 	.word	0x24021824
90010e3c:	24021828 	.word	0x24021828

90010e40 <xTimerCreateTimerTask>:
{
90010e40:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
90010e42:	4c23      	ldr	r4, [pc, #140]	@ (90010ed0 <xTimerCreateTimerTask+0x90>)
{
90010e44:	b089      	sub	sp, #36	@ 0x24
	taskENTER_CRITICAL();
90010e46:	f7fd fd9d 	bl	9000e984 <vPortEnterCritical>
		if( xTimerQueue == NULL )
90010e4a:	6825      	ldr	r5, [r4, #0]
90010e4c:	b335      	cbz	r5, 90010e9c <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
90010e4e:	f7fd fdbb 	bl	9000e9c8 <vPortExitCritical>
	if( xTimerQueue != NULL )
90010e52:	6823      	ldr	r3, [r4, #0]
90010e54:	b1cb      	cbz	r3, 90010e8a <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
90010e56:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
90010e58:	aa07      	add	r2, sp, #28
90010e5a:	a906      	add	r1, sp, #24
90010e5c:	a805      	add	r0, sp, #20
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
90010e5e:	2502      	movs	r5, #2
			StackType_t *pxTimerTaskStackBuffer = NULL;
90010e60:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
90010e64:	f7fd fba0 	bl	9000e5a8 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
90010e68:	4623      	mov	r3, r4
90010e6a:	9a07      	ldr	r2, [sp, #28]
90010e6c:	9500      	str	r5, [sp, #0]
90010e6e:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
90010e72:	e9cd 1001 	strd	r1, r0, [sp, #4]
90010e76:	4917      	ldr	r1, [pc, #92]	@ (90010ed4 <xTimerCreateTimerTask+0x94>)
90010e78:	4817      	ldr	r0, [pc, #92]	@ (90010ed8 <xTimerCreateTimerTask+0x98>)
90010e7a:	f7ff f9c7 	bl	9001020c <xTaskCreateStatic>
90010e7e:	4b17      	ldr	r3, [pc, #92]	@ (90010edc <xTimerCreateTimerTask+0x9c>)
90010e80:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
90010e82:	b110      	cbz	r0, 90010e8a <xTimerCreateTimerTask+0x4a>
}
90010e84:	2001      	movs	r0, #1
90010e86:	b009      	add	sp, #36	@ 0x24
90010e88:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010e8a:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010e8e:	f383 8811 	msr	BASEPRI, r3
90010e92:	f3bf 8f6f 	isb	sy
90010e96:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
90010e9a:	e7fe      	b.n	90010e9a <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
90010e9c:	4f10      	ldr	r7, [pc, #64]	@ (90010ee0 <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
90010e9e:	4e11      	ldr	r6, [pc, #68]	@ (90010ee4 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
90010ea0:	4638      	mov	r0, r7
90010ea2:	f7fd fcb9 	bl	9000e818 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
90010ea6:	4630      	mov	r0, r6
90010ea8:	f7fd fcb6 	bl	9000e818 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
90010eac:	4a0e      	ldr	r2, [pc, #56]	@ (90010ee8 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90010eae:	9500      	str	r5, [sp, #0]
90010eb0:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
90010eb2:	6017      	str	r7, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90010eb4:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
90010eb6:	4a0d      	ldr	r2, [pc, #52]	@ (90010eec <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90010eb8:	4b0d      	ldr	r3, [pc, #52]	@ (90010ef0 <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
90010eba:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90010ebc:	4a0d      	ldr	r2, [pc, #52]	@ (90010ef4 <xTimerCreateTimerTask+0xb4>)
90010ebe:	f7fd fefb 	bl	9000ecb8 <xQueueGenericCreateStatic>
90010ec2:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
90010ec4:	2800      	cmp	r0, #0
90010ec6:	d0c2      	beq.n	90010e4e <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
90010ec8:	490b      	ldr	r1, [pc, #44]	@ (90010ef8 <xTimerCreateTimerTask+0xb8>)
90010eca:	f7fe fe37 	bl	9000fb3c <vQueueAddToRegistry>
90010ece:	e7be      	b.n	90010e4e <xTimerCreateTimerTask+0xe>
90010ed0:	24021824 	.word	0x24021824
90010ed4:	9002d050 	.word	0x9002d050
90010ed8:	90010bad 	.word	0x90010bad
90010edc:	24021820 	.word	0x24021820
90010ee0:	24021844 	.word	0x24021844
90010ee4:	24021830 	.word	0x24021830
90010ee8:	2402182c 	.word	0x2402182c
90010eec:	24021828 	.word	0x24021828
90010ef0:	2402172c 	.word	0x2402172c
90010ef4:	2402177c 	.word	0x2402177c
90010ef8:	9002d048 	.word	0x9002d048

90010efc <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
90010efc:	8880      	ldrh	r0, [r0, #4]
90010efe:	4770      	bx	lr

90010f00 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
90010f00:	b570      	push	{r4, r5, r6, lr}
90010f02:	6803      	ldr	r3, [r0, #0]
90010f04:	460c      	mov	r4, r1
90010f06:	2100      	movs	r1, #0
90010f08:	4605      	mov	r5, r0
90010f0a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90010f0c:	4798      	blx	r3
90010f0e:	4606      	mov	r6, r0
90010f10:	682b      	ldr	r3, [r5, #0]
90010f12:	4628      	mov	r0, r5
90010f14:	1ba4      	subs	r4, r4, r6
90010f16:	6a1b      	ldr	r3, [r3, #32]
90010f18:	b2a4      	uxth	r4, r4
90010f1a:	4798      	blx	r3
90010f1c:	fbb4 f0f0 	udiv	r0, r4, r0
90010f20:	bd70      	pop	{r4, r5, r6, pc}

90010f22 <_ZN8touchgfx17AbstractPartition5clearEv>:
90010f22:	2300      	movs	r3, #0
90010f24:	8083      	strh	r3, [r0, #4]
90010f26:	4770      	bx	lr

90010f28 <_ZN8touchgfx17AbstractPartition8allocateEt>:
90010f28:	b510      	push	{r4, lr}
90010f2a:	6803      	ldr	r3, [r0, #0]
90010f2c:	4604      	mov	r4, r0
90010f2e:	8881      	ldrh	r1, [r0, #4]
90010f30:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90010f32:	4798      	blx	r3
90010f34:	88a3      	ldrh	r3, [r4, #4]
90010f36:	3301      	adds	r3, #1
90010f38:	80a3      	strh	r3, [r4, #4]
90010f3a:	bd10      	pop	{r4, pc}

90010f3c <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
90010f3c:	6803      	ldr	r3, [r0, #0]
90010f3e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90010f40:	4718      	bx	r3

90010f42 <_ZN8touchgfx17AbstractPartitionD1Ev>:
90010f42:	4770      	bx	lr

90010f44 <_ZN8touchgfx17AbstractPartitionC1Ev>:
90010f44:	4a02      	ldr	r2, [pc, #8]	@ (90010f50 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
90010f46:	6002      	str	r2, [r0, #0]
90010f48:	2200      	movs	r2, #0
90010f4a:	8082      	strh	r2, [r0, #4]
90010f4c:	4770      	bx	lr
90010f4e:	bf00      	nop
90010f50:	9002de8c 	.word	0x9002de8c

90010f54 <_ZN8touchgfx9Container13getFirstChildEv>:
90010f54:	6a80      	ldr	r0, [r0, #40]	@ 0x28
90010f56:	4770      	bx	lr

90010f58 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
90010f58:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90010f5a:	2000      	movs	r0, #0
90010f5c:	b12b      	cbz	r3, 90010f6a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
90010f5e:	b920      	cbnz	r0, 90010f6a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
90010f60:	1a5a      	subs	r2, r3, r1
90010f62:	699b      	ldr	r3, [r3, #24]
90010f64:	4250      	negs	r0, r2
90010f66:	4150      	adcs	r0, r2
90010f68:	e7f8      	b.n	90010f5c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
90010f6a:	4770      	bx	lr

90010f6c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
90010f6c:	2300      	movs	r3, #0
90010f6e:	6148      	str	r0, [r1, #20]
90010f70:	618b      	str	r3, [r1, #24]
90010f72:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90010f74:	b913      	cbnz	r3, 90010f7c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
90010f76:	6281      	str	r1, [r0, #40]	@ 0x28
90010f78:	4770      	bx	lr
90010f7a:	4613      	mov	r3, r2
90010f7c:	699a      	ldr	r2, [r3, #24]
90010f7e:	2a00      	cmp	r2, #0
90010f80:	d1fb      	bne.n	90010f7a <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
90010f82:	6199      	str	r1, [r3, #24]
90010f84:	4770      	bx	lr

90010f86 <_ZN8touchgfx9Container9removeAllEv>:
90010f86:	2200      	movs	r2, #0
90010f88:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90010f8a:	b123      	cbz	r3, 90010f96 <_ZN8touchgfx9Container9removeAllEv+0x10>
90010f8c:	6999      	ldr	r1, [r3, #24]
90010f8e:	6281      	str	r1, [r0, #40]	@ 0x28
90010f90:	e9c3 2205 	strd	r2, r2, [r3, #20]
90010f94:	e7f8      	b.n	90010f88 <_ZN8touchgfx9Container9removeAllEv+0x2>
90010f96:	4770      	bx	lr

90010f98 <_ZN8touchgfx9Container6unlinkEv>:
90010f98:	2300      	movs	r3, #0
90010f9a:	6283      	str	r3, [r0, #40]	@ 0x28
90010f9c:	4770      	bx	lr

90010f9e <_ZNK8touchgfx9Container12getSolidRectEv>:
90010f9e:	2200      	movs	r2, #0
90010fa0:	8002      	strh	r2, [r0, #0]
90010fa2:	8042      	strh	r2, [r0, #2]
90010fa4:	8082      	strh	r2, [r0, #4]
90010fa6:	80c2      	strh	r2, [r0, #6]
90010fa8:	4770      	bx	lr

90010faa <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
90010faa:	b570      	push	{r4, r5, r6, lr}
90010fac:	460d      	mov	r5, r1
90010fae:	4616      	mov	r6, r2
90010fb0:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90010fb2:	b13c      	cbz	r4, 90010fc4 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
90010fb4:	6823      	ldr	r3, [r4, #0]
90010fb6:	4620      	mov	r0, r4
90010fb8:	4632      	mov	r2, r6
90010fba:	4629      	mov	r1, r5
90010fbc:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90010fbe:	4798      	blx	r3
90010fc0:	69a4      	ldr	r4, [r4, #24]
90010fc2:	e7f6      	b.n	90010fb2 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
90010fc4:	bd70      	pop	{r4, r5, r6, pc}

90010fc6 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
90010fc6:	b538      	push	{r3, r4, r5, lr}
90010fc8:	460d      	mov	r5, r1
90010fca:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90010fcc:	b134      	cbz	r4, 90010fdc <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
90010fce:	682b      	ldr	r3, [r5, #0]
90010fd0:	4621      	mov	r1, r4
90010fd2:	4628      	mov	r0, r5
90010fd4:	689b      	ldr	r3, [r3, #8]
90010fd6:	4798      	blx	r3
90010fd8:	69a4      	ldr	r4, [r4, #24]
90010fda:	e7f7      	b.n	90010fcc <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
90010fdc:	bd38      	pop	{r3, r4, r5, pc}

90010fde <_ZN8touchgfx9ContainerD1Ev>:
90010fde:	4770      	bx	lr

90010fe0 <_ZN8touchgfx9ContainerD0Ev>:
90010fe0:	b510      	push	{r4, lr}
90010fe2:	4604      	mov	r4, r0
90010fe4:	212c      	movs	r1, #44	@ 0x2c
90010fe6:	f018 fe41 	bl	90029c6c <_ZdlPvj>
90010fea:	4620      	mov	r0, r4
90010fec:	bd10      	pop	{r4, pc}

90010fee <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
90010fee:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90010ff0:	b19b      	cbz	r3, 9001101a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
90010ff2:	428b      	cmp	r3, r1
90010ff4:	d109      	bne.n	9001100a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
90010ff6:	699a      	ldr	r2, [r3, #24]
90010ff8:	2100      	movs	r1, #0
90010ffa:	6159      	str	r1, [r3, #20]
90010ffc:	6282      	str	r2, [r0, #40]	@ 0x28
90010ffe:	b902      	cbnz	r2, 90011002 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
90011000:	4770      	bx	lr
90011002:	6199      	str	r1, [r3, #24]
90011004:	4770      	bx	lr
90011006:	4613      	mov	r3, r2
90011008:	b13a      	cbz	r2, 9001101a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
9001100a:	699a      	ldr	r2, [r3, #24]
9001100c:	428a      	cmp	r2, r1
9001100e:	d1fa      	bne.n	90011006 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
90011010:	698a      	ldr	r2, [r1, #24]
90011012:	619a      	str	r2, [r3, #24]
90011014:	2300      	movs	r3, #0
90011016:	e9c1 3305 	strd	r3, r3, [r1, #20]
9001101a:	4770      	bx	lr

9001101c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
9001101c:	b410      	push	{r4}
9001101e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90011020:	4604      	mov	r4, r0
90011022:	b92b      	cbnz	r3, 90011030 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
90011024:	6803      	ldr	r3, [r0, #0]
90011026:	4611      	mov	r1, r2
90011028:	f85d 4b04 	ldr.w	r4, [sp], #4
9001102c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
9001102e:	4718      	bx	r3
90011030:	b941      	cbnz	r1, 90011044 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
90011032:	6193      	str	r3, [r2, #24]
90011034:	6282      	str	r2, [r0, #40]	@ 0x28
90011036:	6154      	str	r4, [r2, #20]
90011038:	f85d 4b04 	ldr.w	r4, [sp], #4
9001103c:	4770      	bx	lr
9001103e:	4603      	mov	r3, r0
90011040:	2800      	cmp	r0, #0
90011042:	d0f9      	beq.n	90011038 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
90011044:	4299      	cmp	r1, r3
90011046:	6998      	ldr	r0, [r3, #24]
90011048:	d1f9      	bne.n	9001103e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
9001104a:	6190      	str	r0, [r2, #24]
9001104c:	618a      	str	r2, [r1, #24]
9001104e:	e7f2      	b.n	90011036 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

90011050 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
90011050:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011054:	461f      	mov	r7, r3
90011056:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
9001105a:	460d      	mov	r5, r1
9001105c:	4616      	mov	r6, r2
9001105e:	b103      	cbz	r3, 90011062 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
90011060:	6038      	str	r0, [r7, #0]
90011062:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90011064:	b314      	cbz	r4, 900110ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
90011066:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
9001106a:	b1eb      	cbz	r3, 900110a8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9001106c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90011070:	428d      	cmp	r5, r1
90011072:	db19      	blt.n	900110a8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90011074:	b289      	uxth	r1, r1
90011076:	8923      	ldrh	r3, [r4, #8]
90011078:	440b      	add	r3, r1
9001107a:	b21b      	sxth	r3, r3
9001107c:	429d      	cmp	r5, r3
9001107e:	da13      	bge.n	900110a8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90011080:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90011084:	4296      	cmp	r6, r2
90011086:	db0f      	blt.n	900110a8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90011088:	b292      	uxth	r2, r2
9001108a:	8963      	ldrh	r3, [r4, #10]
9001108c:	4413      	add	r3, r2
9001108e:	b21b      	sxth	r3, r3
90011090:	429e      	cmp	r6, r3
90011092:	da09      	bge.n	900110a8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90011094:	6823      	ldr	r3, [r4, #0]
90011096:	1ab2      	subs	r2, r6, r2
90011098:	1a69      	subs	r1, r5, r1
9001109a:	4620      	mov	r0, r4
9001109c:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
900110a0:	b212      	sxth	r2, r2
900110a2:	463b      	mov	r3, r7
900110a4:	b209      	sxth	r1, r1
900110a6:	47c0      	blx	r8
900110a8:	69a4      	ldr	r4, [r4, #24]
900110aa:	e7db      	b.n	90011064 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
900110ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900110b0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
900110b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900110b4:	4c6d      	ldr	r4, [pc, #436]	@ (9001126c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
900110b6:	b0a1      	sub	sp, #132	@ 0x84
900110b8:	4606      	mov	r6, r0
900110ba:	6824      	ldr	r4, [r4, #0]
900110bc:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
900110be:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
900110c2:	2400      	movs	r4, #0
900110c4:	9303      	str	r3, [sp, #12]
900110c6:	802c      	strh	r4, [r5, #0]
900110c8:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
900110ca:	802c      	strh	r4, [r5, #0]
900110cc:	601c      	str	r4, [r3, #0]
900110ce:	e9cd 1201 	strd	r1, r2, [sp, #4]
900110d2:	f7ff ffbd 	bl	90011050 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
900110d6:	f1b9 0f03 	cmp.w	r9, #3
900110da:	f340 80c1 	ble.w	90011260 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
900110de:	4631      	mov	r1, r6
900110e0:	a80c      	add	r0, sp, #48	@ 0x30
900110e2:	f007 f9e7 	bl	900184b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900110e6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
900110ea:	9306      	str	r3, [sp, #24]
900110ec:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
900110f0:	9307      	str	r3, [sp, #28]
900110f2:	9b03      	ldr	r3, [sp, #12]
900110f4:	f8d3 a000 	ldr.w	sl, [r3]
900110f8:	f1ba 0f00 	cmp.w	sl, #0
900110fc:	f000 80b3 	beq.w	90011266 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
90011100:	4651      	mov	r1, sl
90011102:	a810      	add	r0, sp, #64	@ 0x40
90011104:	f007 f9d6 	bl	900184b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90011108:	2002      	movs	r0, #2
9001110a:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
9001110e:	9b01      	ldr	r3, [sp, #4]
90011110:	9a06      	ldr	r2, [sp, #24]
90011112:	fb91 f1f0 	sdiv	r1, r1, r0
90011116:	189d      	adds	r5, r3, r2
90011118:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
9001111c:	9a07      	ldr	r2, [sp, #28]
9001111e:	4419      	add	r1, r3
90011120:	9b02      	ldr	r3, [sp, #8]
90011122:	4413      	add	r3, r2
90011124:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
90011128:	1a6d      	subs	r5, r5, r1
9001112a:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
9001112e:	fb92 f2f0 	sdiv	r2, r2, r0
90011132:	440a      	add	r2, r1
90011134:	1a9b      	subs	r3, r3, r2
90011136:	435b      	muls	r3, r3
90011138:	fb05 3505 	mla	r5, r5, r5, r3
9001113c:	4f4c      	ldr	r7, [pc, #304]	@ (90011270 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
9001113e:	ac10      	add	r4, sp, #64	@ 0x40
90011140:	f1b9 0f0c 	cmp.w	r9, #12
90011144:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90011146:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90011148:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9001114a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
9001114c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9001114e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90011150:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
90011154:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
90011158:	f04f 0303 	mov.w	r3, #3
9001115c:	bfd8      	it	le
9001115e:	f109 32ff 	addle.w	r2, r9, #4294967295
90011162:	f04f 0400 	mov.w	r4, #0
90011166:	f8cd 9000 	str.w	r9, [sp]
9001116a:	bfcc      	ite	gt
9001116c:	4698      	movgt	r8, r3
9001116e:	fb92 f8f3 	sdivle	r8, r2, r3
90011172:	1c63      	adds	r3, r4, #1
90011174:	aa10      	add	r2, sp, #64	@ 0x40
90011176:	f004 0401 	and.w	r4, r4, #1
9001117a:	f04f 0b00 	mov.w	fp, #0
9001117e:	9308      	str	r3, [sp, #32]
90011180:	9b00      	ldr	r3, [sp, #0]
90011182:	eb02 1444 	add.w	r4, r2, r4, lsl #5
90011186:	fb93 f3f8 	sdiv	r3, r3, r8
9001118a:	3404      	adds	r4, #4
9001118c:	b29b      	uxth	r3, r3
9001118e:	9304      	str	r3, [sp, #16]
90011190:	9a04      	ldr	r2, [sp, #16]
90011192:	f854 3c04 	ldr.w	r3, [r4, #-4]
90011196:	fb13 f302 	smulbb	r3, r3, r2
9001119a:	9a01      	ldr	r2, [sp, #4]
9001119c:	b29b      	uxth	r3, r3
9001119e:	1899      	adds	r1, r3, r2
900111a0:	9305      	str	r3, [sp, #20]
900111a2:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
900111a6:	b209      	sxth	r1, r1
900111a8:	4299      	cmp	r1, r3
900111aa:	db4d      	blt.n	90011248 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900111ac:	8932      	ldrh	r2, [r6, #8]
900111ae:	4413      	add	r3, r2
900111b0:	b21b      	sxth	r3, r3
900111b2:	4299      	cmp	r1, r3
900111b4:	da48      	bge.n	90011248 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900111b6:	9b04      	ldr	r3, [sp, #16]
900111b8:	6827      	ldr	r7, [r4, #0]
900111ba:	fb17 f703 	smulbb	r7, r7, r3
900111be:	9b02      	ldr	r3, [sp, #8]
900111c0:	b2bf      	uxth	r7, r7
900111c2:	18fa      	adds	r2, r7, r3
900111c4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
900111c8:	b212      	sxth	r2, r2
900111ca:	429a      	cmp	r2, r3
900111cc:	db3c      	blt.n	90011248 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900111ce:	8970      	ldrh	r0, [r6, #10]
900111d0:	4403      	add	r3, r0
900111d2:	b21b      	sxth	r3, r3
900111d4:	429a      	cmp	r2, r3
900111d6:	da37      	bge.n	90011248 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900111d8:	2300      	movs	r3, #0
900111da:	4630      	mov	r0, r6
900111dc:	930b      	str	r3, [sp, #44]	@ 0x2c
900111de:	ab0b      	add	r3, sp, #44	@ 0x2c
900111e0:	f7ff ff36 	bl	90011050 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
900111e4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900111e6:	b37a      	cbz	r2, 90011248 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900111e8:	4552      	cmp	r2, sl
900111ea:	d02d      	beq.n	90011248 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900111ec:	4611      	mov	r1, r2
900111ee:	a80e      	add	r0, sp, #56	@ 0x38
900111f0:	9209      	str	r2, [sp, #36]	@ 0x24
900111f2:	f007 f95f 	bl	900184b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900111f6:	f04f 0e02 	mov.w	lr, #2
900111fa:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
900111fe:	9a06      	ldr	r2, [sp, #24]
90011200:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
90011204:	9b01      	ldr	r3, [sp, #4]
90011206:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
9001120a:	4413      	add	r3, r2
9001120c:	9a07      	ldr	r2, [sp, #28]
9001120e:	fb91 f1fe 	sdiv	r1, r1, lr
90011212:	fb9c fcfe 	sdiv	ip, ip, lr
90011216:	4401      	add	r1, r0
90011218:	1a58      	subs	r0, r3, r1
9001121a:	9b02      	ldr	r3, [sp, #8]
9001121c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
90011220:	4413      	add	r3, r2
90011222:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90011224:	448c      	add	ip, r1
90011226:	eba3 030c 	sub.w	r3, r3, ip
9001122a:	435b      	muls	r3, r3
9001122c:	fb00 3300 	mla	r3, r0, r0, r3
90011230:	42ab      	cmp	r3, r5
90011232:	d208      	bcs.n	90011246 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
90011234:	990b      	ldr	r1, [sp, #44]	@ 0x2c
90011236:	461d      	mov	r5, r3
90011238:	9803      	ldr	r0, [sp, #12]
9001123a:	6001      	str	r1, [r0, #0]
9001123c:	992a      	ldr	r1, [sp, #168]	@ 0xa8
9001123e:	9805      	ldr	r0, [sp, #20]
90011240:	8008      	strh	r0, [r1, #0]
90011242:	992b      	ldr	r1, [sp, #172]	@ 0xac
90011244:	800f      	strh	r7, [r1, #0]
90011246:	4692      	mov	sl, r2
90011248:	f10b 0b01 	add.w	fp, fp, #1
9001124c:	3408      	adds	r4, #8
9001124e:	f1bb 0f04 	cmp.w	fp, #4
90011252:	d19d      	bne.n	90011190 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
90011254:	9b00      	ldr	r3, [sp, #0]
90011256:	9c08      	ldr	r4, [sp, #32]
90011258:	444b      	add	r3, r9
9001125a:	4544      	cmp	r4, r8
9001125c:	9300      	str	r3, [sp, #0]
9001125e:	d188      	bne.n	90011172 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
90011260:	b021      	add	sp, #132	@ 0x84
90011262:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90011266:	f04f 35ff 	mov.w	r5, #4294967295
9001126a:	e767      	b.n	9001113c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
9001126c:	24021864 	.word	0x24021864
90011270:	9002b490 	.word	0x9002b490

90011274 <_ZN8touchgfx4RectaNERKS0_>:
90011274:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011278:	f9b1 7000 	ldrsh.w	r7, [r1]
9001127c:	888c      	ldrh	r4, [r1, #4]
9001127e:	f9b0 9000 	ldrsh.w	r9, [r0]
90011282:	443c      	add	r4, r7
90011284:	b2a4      	uxth	r4, r4
90011286:	fa0f f884 	sxth.w	r8, r4
9001128a:	45c1      	cmp	r9, r8
9001128c:	da2f      	bge.n	900112ee <_ZN8touchgfx4RectaNERKS0_+0x7a>
9001128e:	8882      	ldrh	r2, [r0, #4]
90011290:	444a      	add	r2, r9
90011292:	b292      	uxth	r2, r2
90011294:	fa0f fe82 	sxth.w	lr, r2
90011298:	4577      	cmp	r7, lr
9001129a:	da28      	bge.n	900112ee <_ZN8touchgfx4RectaNERKS0_+0x7a>
9001129c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
900112a0:	88cb      	ldrh	r3, [r1, #6]
900112a2:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
900112a6:	442b      	add	r3, r5
900112a8:	b21b      	sxth	r3, r3
900112aa:	429e      	cmp	r6, r3
900112ac:	da1f      	bge.n	900112ee <_ZN8touchgfx4RectaNERKS0_+0x7a>
900112ae:	88c3      	ldrh	r3, [r0, #6]
900112b0:	4433      	add	r3, r6
900112b2:	b29b      	uxth	r3, r3
900112b4:	fa0f fc83 	sxth.w	ip, r3
900112b8:	4565      	cmp	r5, ip
900112ba:	da18      	bge.n	900112ee <_ZN8touchgfx4RectaNERKS0_+0x7a>
900112bc:	454f      	cmp	r7, r9
900112be:	bfb8      	it	lt
900112c0:	464f      	movlt	r7, r9
900112c2:	42b5      	cmp	r5, r6
900112c4:	bfb8      	it	lt
900112c6:	4635      	movlt	r5, r6
900112c8:	45f0      	cmp	r8, lr
900112ca:	bfd8      	it	le
900112cc:	4622      	movle	r2, r4
900112ce:	1bd2      	subs	r2, r2, r7
900112d0:	8082      	strh	r2, [r0, #4]
900112d2:	884a      	ldrh	r2, [r1, #2]
900112d4:	88c9      	ldrh	r1, [r1, #6]
900112d6:	8007      	strh	r7, [r0, #0]
900112d8:	440a      	add	r2, r1
900112da:	8045      	strh	r5, [r0, #2]
900112dc:	b292      	uxth	r2, r2
900112de:	b211      	sxth	r1, r2
900112e0:	458c      	cmp	ip, r1
900112e2:	bfa8      	it	ge
900112e4:	4613      	movge	r3, r2
900112e6:	1b5b      	subs	r3, r3, r5
900112e8:	80c3      	strh	r3, [r0, #6]
900112ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900112ee:	2300      	movs	r3, #0
900112f0:	8003      	strh	r3, [r0, #0]
900112f2:	8043      	strh	r3, [r0, #2]
900112f4:	8083      	strh	r3, [r0, #4]
900112f6:	80c3      	strh	r3, [r0, #6]
900112f8:	e7f7      	b.n	900112ea <_ZN8touchgfx4RectaNERKS0_+0x76>

900112fa <_ZNK8touchgfx4Rect7isEmptyEv>:
900112fa:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
900112fe:	2b00      	cmp	r3, #0
90011300:	dd06      	ble.n	90011310 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
90011302:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
90011306:	2800      	cmp	r0, #0
90011308:	bfcc      	ite	gt
9001130a:	2000      	movgt	r0, #0
9001130c:	2001      	movle	r0, #1
9001130e:	4770      	bx	lr
90011310:	2001      	movs	r0, #1
90011312:	4770      	bx	lr

90011314 <_ZNK8touchgfx9Container16getContainedAreaEv>:
90011314:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011318:	2300      	movs	r3, #0
9001131a:	4604      	mov	r4, r0
9001131c:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
9001131e:	8003      	strh	r3, [r0, #0]
90011320:	8043      	strh	r3, [r0, #2]
90011322:	8083      	strh	r3, [r0, #4]
90011324:	80c3      	strh	r3, [r0, #6]
90011326:	2d00      	cmp	r5, #0
90011328:	d040      	beq.n	900113ac <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
9001132a:	1d28      	adds	r0, r5, #4
9001132c:	f7ff ffe5 	bl	900112fa <_ZNK8touchgfx4Rect7isEmptyEv>
90011330:	b988      	cbnz	r0, 90011356 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
90011332:	4620      	mov	r0, r4
90011334:	f7ff ffe1 	bl	900112fa <_ZNK8touchgfx4Rect7isEmptyEv>
90011338:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
9001133c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90011340:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
90011344:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
90011348:	b138      	cbz	r0, 9001135a <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
9001134a:	8022      	strh	r2, [r4, #0]
9001134c:	8063      	strh	r3, [r4, #2]
9001134e:	f8a4 e004 	strh.w	lr, [r4, #4]
90011352:	f8a4 c006 	strh.w	ip, [r4, #6]
90011356:	69ad      	ldr	r5, [r5, #24]
90011358:	e7e5      	b.n	90011326 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
9001135a:	f9b4 0000 	ldrsh.w	r0, [r4]
9001135e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
90011362:	4290      	cmp	r0, r2
90011364:	4607      	mov	r7, r0
90011366:	f8b4 8004 	ldrh.w	r8, [r4, #4]
9001136a:	460e      	mov	r6, r1
9001136c:	bfa8      	it	ge
9001136e:	4617      	movge	r7, r2
90011370:	4299      	cmp	r1, r3
90011372:	4472      	add	r2, lr
90011374:	f8b4 e006 	ldrh.w	lr, [r4, #6]
90011378:	bfa8      	it	ge
9001137a:	461e      	movge	r6, r3
9001137c:	4440      	add	r0, r8
9001137e:	4471      	add	r1, lr
90011380:	4463      	add	r3, ip
90011382:	b200      	sxth	r0, r0
90011384:	8027      	strh	r7, [r4, #0]
90011386:	b212      	sxth	r2, r2
90011388:	8066      	strh	r6, [r4, #2]
9001138a:	b209      	sxth	r1, r1
9001138c:	b21b      	sxth	r3, r3
9001138e:	4290      	cmp	r0, r2
90011390:	bfac      	ite	ge
90011392:	ebc7 0200 	rsbge	r2, r7, r0
90011396:	ebc7 0202 	rsblt	r2, r7, r2
9001139a:	4299      	cmp	r1, r3
9001139c:	bfac      	ite	ge
9001139e:	ebc6 0301 	rsbge	r3, r6, r1
900113a2:	ebc6 0303 	rsblt	r3, r6, r3
900113a6:	80a2      	strh	r2, [r4, #4]
900113a8:	80e3      	strh	r3, [r4, #6]
900113aa:	e7d4      	b.n	90011356 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
900113ac:	4620      	mov	r0, r4
900113ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900113b2 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
900113b2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
900113b6:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
900113ba:	b383      	cbz	r3, 9001141e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
900113bc:	6a84      	ldr	r4, [r0, #40]	@ 0x28
900113be:	b374      	cbz	r4, 9001141e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
900113c0:	f9b1 5000 	ldrsh.w	r5, [r1]
900113c4:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
900113c8:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
900113cc:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
900113d0:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
900113d4:	b303      	cbz	r3, 90011418 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
900113d6:	4668      	mov	r0, sp
900113d8:	1d21      	adds	r1, r4, #4
900113da:	f8ad 5000 	strh.w	r5, [sp]
900113de:	f8ad 6002 	strh.w	r6, [sp, #2]
900113e2:	f8ad 7004 	strh.w	r7, [sp, #4]
900113e6:	f8ad 8006 	strh.w	r8, [sp, #6]
900113ea:	f7ff ff43 	bl	90011274 <_ZN8touchgfx4RectaNERKS0_>
900113ee:	4668      	mov	r0, sp
900113f0:	f7ff ff83 	bl	900112fa <_ZNK8touchgfx4Rect7isEmptyEv>
900113f4:	b980      	cbnz	r0, 90011418 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
900113f6:	f8bd 3000 	ldrh.w	r3, [sp]
900113fa:	4669      	mov	r1, sp
900113fc:	88a2      	ldrh	r2, [r4, #4]
900113fe:	4620      	mov	r0, r4
90011400:	1a9b      	subs	r3, r3, r2
90011402:	88e2      	ldrh	r2, [r4, #6]
90011404:	f8ad 3000 	strh.w	r3, [sp]
90011408:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001140c:	1a9b      	subs	r3, r3, r2
9001140e:	f8ad 3002 	strh.w	r3, [sp, #2]
90011412:	6823      	ldr	r3, [r4, #0]
90011414:	689b      	ldr	r3, [r3, #8]
90011416:	4798      	blx	r3
90011418:	69a4      	ldr	r4, [r4, #24]
9001141a:	2c00      	cmp	r4, #0
9001141c:	d1d8      	bne.n	900113d0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
9001141e:	b002      	add	sp, #8
90011420:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90011424 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
90011424:	b573      	push	{r0, r1, r4, r5, r6, lr}
90011426:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
9001142a:	460d      	mov	r5, r1
9001142c:	4616      	mov	r6, r2
9001142e:	b323      	cbz	r3, 9001147a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90011430:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90011432:	b314      	cbz	r4, 9001147a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90011434:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
90011438:	b1eb      	cbz	r3, 90011476 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
9001143a:	6828      	ldr	r0, [r5, #0]
9001143c:	466b      	mov	r3, sp
9001143e:	6869      	ldr	r1, [r5, #4]
90011440:	c303      	stmia	r3!, {r0, r1}
90011442:	4668      	mov	r0, sp
90011444:	1d21      	adds	r1, r4, #4
90011446:	f7ff ff15 	bl	90011274 <_ZN8touchgfx4RectaNERKS0_>
9001144a:	4668      	mov	r0, sp
9001144c:	f7ff ff55 	bl	900112fa <_ZNK8touchgfx4Rect7isEmptyEv>
90011450:	b988      	cbnz	r0, 90011476 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
90011452:	f8bd 3000 	ldrh.w	r3, [sp]
90011456:	4669      	mov	r1, sp
90011458:	88a2      	ldrh	r2, [r4, #4]
9001145a:	4620      	mov	r0, r4
9001145c:	1a9b      	subs	r3, r3, r2
9001145e:	88e2      	ldrh	r2, [r4, #6]
90011460:	f8ad 3000 	strh.w	r3, [sp]
90011464:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90011468:	1a9b      	subs	r3, r3, r2
9001146a:	4632      	mov	r2, r6
9001146c:	f8ad 3002 	strh.w	r3, [sp, #2]
90011470:	6823      	ldr	r3, [r4, #0]
90011472:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
90011474:	4798      	blx	r3
90011476:	69a4      	ldr	r4, [r4, #24]
90011478:	e7db      	b.n	90011432 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
9001147a:	b002      	add	sp, #8
9001147c:	bd70      	pop	{r4, r5, r6, pc}

9001147e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
9001147e:	6803      	ldr	r3, [r0, #0]
90011480:	b513      	push	{r0, r1, r4, lr}
90011482:	f8d3 40b4 	ldr.w	r4, [r3, #180]	@ 0xb4
90011486:	2300      	movs	r3, #0
90011488:	e9cd 3300 	strd	r3, r3, [sp]
9001148c:	466b      	mov	r3, sp
9001148e:	47a0      	blx	r4
90011490:	b002      	add	sp, #8
90011492:	bd10      	pop	{r4, pc}

90011494 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
90011494:	2301      	movs	r3, #1
90011496:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
9001149a:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
9001149e:	4770      	bx	lr

900114a0 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
900114a0:	2301      	movs	r3, #1
900114a2:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
900114a6:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
900114aa:	4770      	bx	lr

900114ac <_ZN8touchgfx3HAL17allowDMATransfersEv>:
900114ac:	6843      	ldr	r3, [r0, #4]
900114ae:	2201      	movs	r2, #1
900114b0:	725a      	strb	r2, [r3, #9]
900114b2:	6840      	ldr	r0, [r0, #4]
900114b4:	6803      	ldr	r3, [r0, #0]
900114b6:	691b      	ldr	r3, [r3, #16]
900114b8:	4718      	bx	r3

900114ba <_ZN8touchgfx3HAL8flushDMAEv>:
900114ba:	6840      	ldr	r0, [r0, #4]
900114bc:	6803      	ldr	r3, [r0, #0]
900114be:	689b      	ldr	r3, [r3, #8]
900114c0:	4718      	bx	r3

900114c2 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
900114c2:	b530      	push	{r4, r5, lr}
900114c4:	b08b      	sub	sp, #44	@ 0x2c
900114c6:	6804      	ldr	r4, [r0, #0]
900114c8:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
900114cc:	9509      	str	r5, [sp, #36]	@ 0x24
900114ce:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
900114d2:	9508      	str	r5, [sp, #32]
900114d4:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
900114d8:	9507      	str	r5, [sp, #28]
900114da:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
900114de:	9506      	str	r5, [sp, #24]
900114e0:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
900114e4:	9505      	str	r5, [sp, #20]
900114e6:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
900114ea:	9504      	str	r5, [sp, #16]
900114ec:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
900114f0:	9503      	str	r5, [sp, #12]
900114f2:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
900114f6:	9502      	str	r5, [sp, #8]
900114f8:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
900114fc:	e9cd 3500 	strd	r3, r5, [sp]
90011500:	4613      	mov	r3, r2
90011502:	6c24      	ldr	r4, [r4, #64]	@ 0x40
90011504:	2200      	movs	r2, #0
90011506:	47a0      	blx	r4
90011508:	b00b      	add	sp, #44	@ 0x2c
9001150a:	bd30      	pop	{r4, r5, pc}

9001150c <_ZN8touchgfx3HAL10beginFrameEv>:
9001150c:	4b04      	ldr	r3, [pc, #16]	@ (90011520 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
9001150e:	781b      	ldrb	r3, [r3, #0]
90011510:	b123      	cbz	r3, 9001151c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
90011512:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
90011516:	f080 0001 	eor.w	r0, r0, #1
9001151a:	4770      	bx	lr
9001151c:	2001      	movs	r0, #1
9001151e:	4770      	bx	lr
90011520:	24021862 	.word	0x24021862

90011524 <_ZN8touchgfx3HAL8endFrameEv>:
90011524:	b510      	push	{r4, lr}
90011526:	4604      	mov	r4, r0
90011528:	6840      	ldr	r0, [r0, #4]
9001152a:	6803      	ldr	r3, [r0, #0]
9001152c:	689b      	ldr	r3, [r3, #8]
9001152e:	4798      	blx	r3
90011530:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
90011534:	b113      	cbz	r3, 9001153c <_ZN8touchgfx3HAL8endFrameEv+0x18>
90011536:	2301      	movs	r3, #1
90011538:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
9001153c:	bd10      	pop	{r4, pc}

9001153e <_ZN8touchgfx3HAL10initializeEv>:
9001153e:	b510      	push	{r4, lr}
90011540:	4604      	mov	r4, r0
90011542:	f7f0 fee7 	bl	90002314 <_ZN8touchgfx10OSWrappers10initializeEv>
90011546:	f7ef fb8b 	bl	90000c60 <_ZN8touchgfx4GPIO4initEv>
9001154a:	6860      	ldr	r0, [r4, #4]
9001154c:	6803      	ldr	r3, [r0, #0]
9001154e:	68db      	ldr	r3, [r3, #12]
90011550:	4798      	blx	r3
90011552:	68e0      	ldr	r0, [r4, #12]
90011554:	6803      	ldr	r3, [r0, #0]
90011556:	689b      	ldr	r3, [r3, #8]
90011558:	4798      	blx	r3
9001155a:	6823      	ldr	r3, [r4, #0]
9001155c:	4620      	mov	r0, r4
9001155e:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
90011560:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90011564:	4718      	bx	r3
	...

90011568 <_ZN8touchgfx3HAL4tickEv>:
90011568:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
9001156a:	6803      	ldr	r3, [r0, #0]
9001156c:	4604      	mov	r4, r0
9001156e:	4d62      	ldr	r5, [pc, #392]	@ (900116f8 <_ZN8touchgfx3HAL4tickEv+0x190>)
90011570:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
90011574:	4798      	blx	r3
90011576:	2800      	cmp	r0, #0
90011578:	f000 809e 	beq.w	900116b8 <_ZN8touchgfx3HAL4tickEv+0x150>
9001157c:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
90011580:	2b02      	cmp	r3, #2
90011582:	d002      	beq.n	9001158a <_ZN8touchgfx3HAL4tickEv+0x22>
90011584:	2001      	movs	r0, #1
90011586:	f7ef fb8d 	bl	90000ca4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
9001158a:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
9001158e:	2600      	movs	r6, #0
90011590:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
90011594:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
90011598:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
9001159c:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
900115a0:	b133      	cbz	r3, 900115b0 <_ZN8touchgfx3HAL4tickEv+0x48>
900115a2:	6823      	ldr	r3, [r4, #0]
900115a4:	4620      	mov	r0, r4
900115a6:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
900115aa:	4798      	blx	r3
900115ac:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
900115b0:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
900115b4:	2601      	movs	r6, #1
900115b6:	6862      	ldr	r2, [r4, #4]
900115b8:	f083 0301 	eor.w	r3, r3, #1
900115bc:	702e      	strb	r6, [r5, #0]
900115be:	7253      	strb	r3, [r2, #9]
900115c0:	f005 fd24 	bl	9001700c <_ZN8touchgfx11Application11getInstanceEv>
900115c4:	6803      	ldr	r3, [r0, #0]
900115c6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
900115c8:	4798      	blx	r3
900115ca:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
900115ce:	b90b      	cbnz	r3, 900115d4 <_ZN8touchgfx3HAL4tickEv+0x6c>
900115d0:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
900115d4:	f005 fd1a 	bl	9001700c <_ZN8touchgfx11Application11getInstanceEv>
900115d8:	6803      	ldr	r3, [r0, #0]
900115da:	695b      	ldr	r3, [r3, #20]
900115dc:	4798      	blx	r3
900115de:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
900115e0:	6803      	ldr	r3, [r0, #0]
900115e2:	691b      	ldr	r3, [r3, #16]
900115e4:	4798      	blx	r3
900115e6:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
900115ea:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
900115ee:	3b01      	subs	r3, #1
900115f0:	b2db      	uxtb	r3, r3
900115f2:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
900115f6:	b10a      	cbz	r2, 900115fc <_ZN8touchgfx3HAL4tickEv+0x94>
900115f8:	2b00      	cmp	r3, #0
900115fa:	d1eb      	bne.n	900115d4 <_ZN8touchgfx3HAL4tickEv+0x6c>
900115fc:	4a3f      	ldr	r2, [pc, #252]	@ (900116fc <_ZN8touchgfx3HAL4tickEv+0x194>)
900115fe:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
90011602:	7813      	ldrb	r3, [r2, #0]
90011604:	3301      	adds	r3, #1
90011606:	b25b      	sxtb	r3, r3
90011608:	4299      	cmp	r1, r3
9001160a:	7013      	strb	r3, [r2, #0]
9001160c:	dc10      	bgt.n	90011630 <_ZN8touchgfx3HAL4tickEv+0xc8>
9001160e:	2300      	movs	r3, #0
90011610:	68e0      	ldr	r0, [r4, #12]
90011612:	a902      	add	r1, sp, #8
90011614:	7013      	strb	r3, [r2, #0]
90011616:	aa03      	add	r2, sp, #12
90011618:	6803      	ldr	r3, [r0, #0]
9001161a:	68db      	ldr	r3, [r3, #12]
9001161c:	4798      	blx	r3
9001161e:	6823      	ldr	r3, [r4, #0]
90011620:	2800      	cmp	r0, #0
90011622:	d059      	beq.n	900116d8 <_ZN8touchgfx3HAL4tickEv+0x170>
90011624:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
90011628:	4620      	mov	r0, r4
9001162a:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
9001162e:	4798      	blx	r3
90011630:	2300      	movs	r3, #0
90011632:	6960      	ldr	r0, [r4, #20]
90011634:	f88d 3007 	strb.w	r3, [sp, #7]
90011638:	b158      	cbz	r0, 90011652 <_ZN8touchgfx3HAL4tickEv+0xea>
9001163a:	6803      	ldr	r3, [r0, #0]
9001163c:	f10d 0107 	add.w	r1, sp, #7
90011640:	68db      	ldr	r3, [r3, #12]
90011642:	4798      	blx	r3
90011644:	b128      	cbz	r0, 90011652 <_ZN8touchgfx3HAL4tickEv+0xea>
90011646:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
90011648:	f89d 1007 	ldrb.w	r1, [sp, #7]
9001164c:	6803      	ldr	r3, [r0, #0]
9001164e:	68db      	ldr	r3, [r3, #12]
90011650:	4798      	blx	r3
90011652:	f104 001c 	add.w	r0, r4, #28
90011656:	f017 fced 	bl	90029034 <_ZN8touchgfx8Gestures4tickEv>
9001165a:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
9001165e:	b30b      	cbz	r3, 900116a4 <_ZN8touchgfx3HAL4tickEv+0x13c>
90011660:	6920      	ldr	r0, [r4, #16]
90011662:	6803      	ldr	r3, [r0, #0]
90011664:	691b      	ldr	r3, [r3, #16]
90011666:	4798      	blx	r3
90011668:	6f63      	ldr	r3, [r4, #116]	@ 0x74
9001166a:	4606      	mov	r6, r0
9001166c:	b903      	cbnz	r3, 90011670 <_ZN8touchgfx3HAL4tickEv+0x108>
9001166e:	6760      	str	r0, [r4, #116]	@ 0x74
90011670:	6f63      	ldr	r3, [r4, #116]	@ 0x74
90011672:	4a23      	ldr	r2, [pc, #140]	@ (90011700 <_ZN8touchgfx3HAL4tickEv+0x198>)
90011674:	1af3      	subs	r3, r6, r3
90011676:	4293      	cmp	r3, r2
90011678:	d914      	bls.n	900116a4 <_ZN8touchgfx3HAL4tickEv+0x13c>
9001167a:	6920      	ldr	r0, [r4, #16]
9001167c:	6803      	ldr	r3, [r0, #0]
9001167e:	699b      	ldr	r3, [r3, #24]
90011680:	4798      	blx	r3
90011682:	6f63      	ldr	r3, [r4, #116]	@ 0x74
90011684:	2264      	movs	r2, #100	@ 0x64
90011686:	1af3      	subs	r3, r6, r3
90011688:	fbb3 f3f2 	udiv	r3, r3, r2
9001168c:	fbb0 f0f3 	udiv	r0, r0, r3
90011690:	2800      	cmp	r0, #0
90011692:	dc26      	bgt.n	900116e2 <_ZN8touchgfx3HAL4tickEv+0x17a>
90011694:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
90011698:	6920      	ldr	r0, [r4, #16]
9001169a:	2100      	movs	r1, #0
9001169c:	6803      	ldr	r3, [r0, #0]
9001169e:	69db      	ldr	r3, [r3, #28]
900116a0:	4798      	blx	r3
900116a2:	6766      	str	r6, [r4, #116]	@ 0x74
900116a4:	6823      	ldr	r3, [r4, #0]
900116a6:	4620      	mov	r0, r4
900116a8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
900116ac:	4798      	blx	r3
900116ae:	f005 fcad 	bl	9001700c <_ZN8touchgfx11Application11getInstanceEv>
900116b2:	6803      	ldr	r3, [r0, #0]
900116b4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900116b6:	4798      	blx	r3
900116b8:	6823      	ldr	r3, [r4, #0]
900116ba:	4620      	mov	r0, r4
900116bc:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
900116c0:	4798      	blx	r3
900116c2:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
900116c6:	2b02      	cmp	r3, #2
900116c8:	d002      	beq.n	900116d0 <_ZN8touchgfx3HAL4tickEv+0x168>
900116ca:	2001      	movs	r0, #1
900116cc:	f7ef fb14 	bl	90000cf8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
900116d0:	2300      	movs	r3, #0
900116d2:	702b      	strb	r3, [r5, #0]
900116d4:	b004      	add	sp, #16
900116d6:	bd70      	pop	{r4, r5, r6, pc}
900116d8:	f8d3 30d0 	ldr.w	r3, [r3, #208]	@ 0xd0
900116dc:	4620      	mov	r0, r4
900116de:	4798      	blx	r3
900116e0:	e7a6      	b.n	90011630 <_ZN8touchgfx3HAL4tickEv+0xc8>
900116e2:	2863      	cmp	r0, #99	@ 0x63
900116e4:	bfcb      	itete	gt
900116e6:	2300      	movgt	r3, #0
900116e8:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
900116ec:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
900116f0:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
900116f4:	e7d0      	b.n	90011698 <_ZN8touchgfx3HAL4tickEv+0x130>
900116f6:	bf00      	nop
900116f8:	24021868 	.word	0x24021868
900116fc:	24021869 	.word	0x24021869
90011700:	05f5e100 	.word	0x05f5e100

90011704 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
90011704:	b510      	push	{r4, lr}
90011706:	4604      	mov	r4, r0
90011708:	f7f0 fe36 	bl	90002378 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
9001170c:	2200      	movs	r2, #0
9001170e:	6863      	ldr	r3, [r4, #4]
90011710:	729a      	strb	r2, [r3, #10]
90011712:	bd10      	pop	{r4, pc}

90011714 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
90011714:	65c1      	str	r1, [r0, #92]	@ 0x5c
90011716:	301c      	adds	r0, #28
90011718:	f017 bc8a 	b.w	90029030 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

9001171c <_ZN8touchgfx3HAL5touchEll>:
9001171c:	b530      	push	{r4, r5, lr}
9001171e:	b087      	sub	sp, #28
90011720:	4604      	mov	r4, r0
90011722:	a804      	add	r0, sp, #16
90011724:	e9cd 1204 	strd	r1, r2, [sp, #16]
90011728:	f005 fa3a 	bl	90016ba0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
9001172c:	9b04      	ldr	r3, [sp, #16]
9001172e:	a906      	add	r1, sp, #24
90011730:	a803      	add	r0, sp, #12
90011732:	f8ad 300c 	strh.w	r3, [sp, #12]
90011736:	9b05      	ldr	r3, [sp, #20]
90011738:	f821 3d0a 	strh.w	r3, [r1, #-10]!
9001173c:	f005 fa82 	bl	90016c44 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
90011740:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
90011744:	f104 001c 	add.w	r0, r4, #28
90011748:	f8bd 200c 	ldrh.w	r2, [sp, #12]
9001174c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
90011750:	b189      	cbz	r1, 90011776 <_ZN8touchgfx3HAL5touchEll+0x5a>
90011752:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
90011756:	9300      	str	r3, [sp, #0]
90011758:	4613      	mov	r3, r2
9001175a:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
9001175e:	462a      	mov	r2, r5
90011760:	f017 fc76 	bl	90029050 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
90011764:	b128      	cbz	r0, 90011772 <_ZN8touchgfx3HAL5touchEll+0x56>
90011766:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001176a:	6623      	str	r3, [r4, #96]	@ 0x60
9001176c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90011770:	6663      	str	r3, [r4, #100]	@ 0x64
90011772:	b007      	add	sp, #28
90011774:	bd30      	pop	{r4, r5, pc}
90011776:	f017 fcab 	bl	900290d0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
9001177a:	2301      	movs	r3, #1
9001177c:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
90011780:	e7f1      	b.n	90011766 <_ZN8touchgfx3HAL5touchEll+0x4a>

90011782 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
90011782:	b510      	push	{r4, lr}
90011784:	2b00      	cmp	r3, #0
90011786:	d046      	beq.n	90011816 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90011788:	ea81 0002 	eor.w	r0, r1, r2
9001178c:	07c4      	lsls	r4, r0, #31
9001178e:	d508      	bpl.n	900117a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
90011790:	440b      	add	r3, r1
90011792:	3a01      	subs	r2, #1
90011794:	428b      	cmp	r3, r1
90011796:	d93e      	bls.n	90011816 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90011798:	f812 0f01 	ldrb.w	r0, [r2, #1]!
9001179c:	f801 0b01 	strb.w	r0, [r1], #1
900117a0:	e7f8      	b.n	90011794 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
900117a2:	07d0      	lsls	r0, r2, #31
900117a4:	bf42      	ittt	mi
900117a6:	f812 0b01 	ldrbmi.w	r0, [r2], #1
900117aa:	f103 33ff 	addmi.w	r3, r3, #4294967295
900117ae:	f801 0b01 	strbmi.w	r0, [r1], #1
900117b2:	2b01      	cmp	r3, #1
900117b4:	d911      	bls.n	900117da <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
900117b6:	ea81 0402 	eor.w	r4, r1, r2
900117ba:	4610      	mov	r0, r2
900117bc:	07a4      	lsls	r4, r4, #30
900117be:	d022      	beq.n	90011806 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
900117c0:	f023 0401 	bic.w	r4, r3, #1
900117c4:	440c      	add	r4, r1
900117c6:	428c      	cmp	r4, r1
900117c8:	4602      	mov	r2, r0
900117ca:	d904      	bls.n	900117d6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
900117cc:	8812      	ldrh	r2, [r2, #0]
900117ce:	3002      	adds	r0, #2
900117d0:	f821 2b02 	strh.w	r2, [r1], #2
900117d4:	e7f7      	b.n	900117c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
900117d6:	f003 0301 	and.w	r3, r3, #1
900117da:	f023 0003 	bic.w	r0, r3, #3
900117de:	4408      	add	r0, r1
900117e0:	4288      	cmp	r0, r1
900117e2:	4614      	mov	r4, r2
900117e4:	d904      	bls.n	900117f0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
900117e6:	6824      	ldr	r4, [r4, #0]
900117e8:	3204      	adds	r2, #4
900117ea:	f841 4b04 	str.w	r4, [r1], #4
900117ee:	e7f7      	b.n	900117e0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
900117f0:	f003 0303 	and.w	r3, r3, #3
900117f4:	3a01      	subs	r2, #1
900117f6:	440b      	add	r3, r1
900117f8:	428b      	cmp	r3, r1
900117fa:	d90c      	bls.n	90011816 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
900117fc:	f812 0f01 	ldrb.w	r0, [r2, #1]!
90011800:	f801 0b01 	strb.w	r0, [r1], #1
90011804:	e7f8      	b.n	900117f8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
90011806:	0790      	lsls	r0, r2, #30
90011808:	d0e7      	beq.n	900117da <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
9001180a:	f832 0b02 	ldrh.w	r0, [r2], #2
9001180e:	3b02      	subs	r3, #2
90011810:	f821 0b02 	strh.w	r0, [r1], #2
90011814:	e7e1      	b.n	900117da <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90011816:	2001      	movs	r0, #1
90011818:	bd10      	pop	{r4, pc}

9001181a <_ZN8touchgfx3HAL7noTouchEv>:
9001181a:	b510      	push	{r4, lr}
9001181c:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
90011820:	4604      	mov	r4, r0
90011822:	b153      	cbz	r3, 9001183a <_ZN8touchgfx3HAL7noTouchEv+0x20>
90011824:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
90011828:	2101      	movs	r1, #1
9001182a:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
9001182e:	301c      	adds	r0, #28
90011830:	f017 fc4e 	bl	900290d0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
90011834:	2300      	movs	r3, #0
90011836:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
9001183a:	bd10      	pop	{r4, pc}

9001183c <_ZN8touchgfx8Drawable5setXYEss>:
9001183c:	b570      	push	{r4, r5, r6, lr}
9001183e:	6803      	ldr	r3, [r0, #0]
90011840:	4604      	mov	r4, r0
90011842:	4615      	mov	r5, r2
90011844:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90011846:	4798      	blx	r3
90011848:	6823      	ldr	r3, [r4, #0]
9001184a:	4629      	mov	r1, r5
9001184c:	4620      	mov	r0, r4
9001184e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90011850:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011854:	4718      	bx	r3
	...

90011858 <_ZN8touchgfx3HAL3lcdEv>:
90011858:	4b04      	ldr	r3, [pc, #16]	@ (9001186c <_ZN8touchgfx3HAL3lcdEv+0x14>)
9001185a:	681b      	ldr	r3, [r3, #0]
9001185c:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90011860:	b10a      	cbz	r2, 90011866 <_ZN8touchgfx3HAL3lcdEv+0xe>
90011862:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90011864:	b900      	cbnz	r0, 90011868 <_ZN8touchgfx3HAL3lcdEv+0x10>
90011866:	6898      	ldr	r0, [r3, #8]
90011868:	4770      	bx	lr
9001186a:	bf00      	nop
9001186c:	24021864 	.word	0x24021864

90011870 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
90011870:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011874:	b085      	sub	sp, #20
90011876:	4604      	mov	r4, r0
90011878:	2000      	movs	r0, #0
9001187a:	4699      	mov	r9, r3
9001187c:	ad04      	add	r5, sp, #16
9001187e:	460f      	mov	r7, r1
90011880:	4690      	mov	r8, r2
90011882:	f845 0d04 	str.w	r0, [r5, #-4]!
90011886:	69a0      	ldr	r0, [r4, #24]
90011888:	6806      	ldr	r6, [r0, #0]
9001188a:	9501      	str	r5, [sp, #4]
9001188c:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
90011890:	9500      	str	r5, [sp, #0]
90011892:	6835      	ldr	r5, [r6, #0]
90011894:	47a8      	blx	r5
90011896:	4d10      	ldr	r5, [pc, #64]	@ (900118d8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
90011898:	4606      	mov	r6, r0
9001189a:	f8a5 9000 	strh.w	r9, [r5]
9001189e:	f7ff ffdb 	bl	90011858 <_ZN8touchgfx3HAL3lcdEv>
900118a2:	6803      	ldr	r3, [r0, #0]
900118a4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900118a6:	4798      	blx	r3
900118a8:	b128      	cbz	r0, 900118b6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
900118aa:	2801      	cmp	r0, #1
900118ac:	d00b      	beq.n	900118c6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
900118ae:	4630      	mov	r0, r6
900118b0:	b005      	add	sp, #20
900118b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900118b6:	882b      	ldrh	r3, [r5, #0]
900118b8:	fb08 7203 	mla	r2, r8, r3, r7
900118bc:	9b03      	ldr	r3, [sp, #12]
900118be:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
900118c2:	63e3      	str	r3, [r4, #60]	@ 0x3c
900118c4:	e7f3      	b.n	900118ae <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
900118c6:	882a      	ldrh	r2, [r5, #0]
900118c8:	9b03      	ldr	r3, [sp, #12]
900118ca:	fb08 7202 	mla	r2, r8, r2, r7
900118ce:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900118d2:	1a9a      	subs	r2, r3, r2
900118d4:	63e2      	str	r2, [r4, #60]	@ 0x3c
900118d6:	e7ea      	b.n	900118ae <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
900118d8:	2402185e 	.word	0x2402185e

900118dc <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs>:
900118dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900118de:	4b15      	ldr	r3, [pc, #84]	@ (90011934 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x58>)
900118e0:	460f      	mov	r7, r1
900118e2:	f890 407d 	ldrb.w	r4, [r0, #125]	@ 0x7d
900118e6:	4606      	mov	r6, r0
900118e8:	881b      	ldrh	r3, [r3, #0]
900118ea:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
900118ec:	fb93 f4f4 	sdiv	r4, r3, r4
900118f0:	f7ff ffb2 	bl	90011858 <_ZN8touchgfx3HAL3lcdEv>
900118f4:	6803      	ldr	r3, [r0, #0]
900118f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900118f8:	4798      	blx	r3
900118fa:	2801      	cmp	r0, #1
900118fc:	d00b      	beq.n	90011916 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x3a>
900118fe:	d303      	bcc.n	90011908 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x2c>
90011900:	2802      	cmp	r0, #2
90011902:	d010      	beq.n	90011926 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x4a>
90011904:	63f5      	str	r5, [r6, #60]	@ 0x3c
90011906:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90011908:	4b0b      	ldr	r3, [pc, #44]	@ (90011938 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
9001190a:	437c      	muls	r4, r7
9001190c:	8819      	ldrh	r1, [r3, #0]
9001190e:	434c      	muls	r4, r1
90011910:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
90011914:	e7f6      	b.n	90011904 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
90011916:	4b08      	ldr	r3, [pc, #32]	@ (90011938 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
90011918:	437c      	muls	r4, r7
9001191a:	8819      	ldrh	r1, [r3, #0]
9001191c:	434c      	muls	r4, r1
9001191e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
90011922:	1b2d      	subs	r5, r5, r4
90011924:	e7ee      	b.n	90011904 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
90011926:	4b04      	ldr	r3, [pc, #16]	@ (90011938 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
90011928:	437c      	muls	r4, r7
9001192a:	8819      	ldrh	r1, [r3, #0]
9001192c:	434c      	muls	r4, r1
9001192e:	eba5 0584 	sub.w	r5, r5, r4, lsl #2
90011932:	e7e7      	b.n	90011904 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
90011934:	24021860 	.word	0x24021860
90011938:	2402185e 	.word	0x2402185e

9001193c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
9001193c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001193e:	b08b      	sub	sp, #44	@ 0x2c
90011940:	4617      	mov	r7, r2
90011942:	4604      	mov	r4, r0
90011944:	460e      	mov	r6, r1
90011946:	461d      	mov	r5, r3
90011948:	f7ff ff86 	bl	90011858 <_ZN8touchgfx3HAL3lcdEv>
9001194c:	6803      	ldr	r3, [r0, #0]
9001194e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011950:	4798      	blx	r3
90011952:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
90011956:	9007      	str	r0, [sp, #28]
90011958:	4631      	mov	r1, r6
9001195a:	6822      	ldr	r2, [r4, #0]
9001195c:	e9cd 0308 	strd	r0, r3, [sp, #32]
90011960:	4b0c      	ldr	r3, [pc, #48]	@ (90011994 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
90011962:	4620      	mov	r0, r4
90011964:	881b      	ldrh	r3, [r3, #0]
90011966:	9306      	str	r3, [sp, #24]
90011968:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
9001196c:	9305      	str	r3, [sp, #20]
9001196e:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
90011972:	9304      	str	r3, [sp, #16]
90011974:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90011978:	9303      	str	r3, [sp, #12]
9001197a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
9001197e:	9302      	str	r3, [sp, #8]
90011980:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90011984:	e9cd 5300 	strd	r5, r3, [sp]
90011988:	463b      	mov	r3, r7
9001198a:	6c15      	ldr	r5, [r2, #64]	@ 0x40
9001198c:	2200      	movs	r2, #0
9001198e:	47a8      	blx	r5
90011990:	b00b      	add	sp, #44	@ 0x2c
90011992:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011994:	2402185e 	.word	0x2402185e

90011998 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
90011998:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001199c:	4698      	mov	r8, r3
9001199e:	6803      	ldr	r3, [r0, #0]
900119a0:	b08b      	sub	sp, #44	@ 0x2c
900119a2:	4617      	mov	r7, r2
900119a4:	6c1d      	ldr	r5, [r3, #64]	@ 0x40
900119a6:	460e      	mov	r6, r1
900119a8:	4b13      	ldr	r3, [pc, #76]	@ (900119f8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
900119aa:	4604      	mov	r4, r0
900119ac:	f8b3 9000 	ldrh.w	r9, [r3]
900119b0:	f7ff ff52 	bl	90011858 <_ZN8touchgfx3HAL3lcdEv>
900119b4:	6803      	ldr	r3, [r0, #0]
900119b6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900119b8:	4798      	blx	r3
900119ba:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
900119be:	2200      	movs	r2, #0
900119c0:	4631      	mov	r1, r6
900119c2:	e9cd 0308 	strd	r0, r3, [sp, #32]
900119c6:	2302      	movs	r3, #2
900119c8:	4620      	mov	r0, r4
900119ca:	e9cd 9306 	strd	r9, r3, [sp, #24]
900119ce:	2301      	movs	r3, #1
900119d0:	9305      	str	r3, [sp, #20]
900119d2:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
900119d6:	9304      	str	r3, [sp, #16]
900119d8:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
900119dc:	9303      	str	r3, [sp, #12]
900119de:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
900119e2:	9302      	str	r3, [sp, #8]
900119e4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
900119e8:	e9cd 8300 	strd	r8, r3, [sp]
900119ec:	463b      	mov	r3, r7
900119ee:	47a8      	blx	r5
900119f0:	b00b      	add	sp, #44	@ 0x2c
900119f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900119f6:	bf00      	nop
900119f8:	2402185e 	.word	0x2402185e

900119fc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
900119fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011a00:	4698      	mov	r8, r3
90011a02:	6803      	ldr	r3, [r0, #0]
90011a04:	b087      	sub	sp, #28
90011a06:	460e      	mov	r6, r1
90011a08:	6ddd      	ldr	r5, [r3, #92]	@ 0x5c
90011a0a:	4617      	mov	r7, r2
90011a0c:	4b0f      	ldr	r3, [pc, #60]	@ (90011a4c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
90011a0e:	4604      	mov	r4, r0
90011a10:	f8b3 9000 	ldrh.w	r9, [r3]
90011a14:	f7ff ff20 	bl	90011858 <_ZN8touchgfx3HAL3lcdEv>
90011a18:	6803      	ldr	r3, [r0, #0]
90011a1a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011a1c:	4798      	blx	r3
90011a1e:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
90011a22:	463a      	mov	r2, r7
90011a24:	4631      	mov	r1, r6
90011a26:	f8cd 900c 	str.w	r9, [sp, #12]
90011a2a:	e9cd 0304 	strd	r0, r3, [sp, #16]
90011a2e:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
90011a32:	4620      	mov	r0, r4
90011a34:	9302      	str	r3, [sp, #8]
90011a36:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
90011a3a:	9301      	str	r3, [sp, #4]
90011a3c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90011a40:	9300      	str	r3, [sp, #0]
90011a42:	4643      	mov	r3, r8
90011a44:	47a8      	blx	r5
90011a46:	b007      	add	sp, #28
90011a48:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90011a4c:	2402185e 	.word	0x2402185e

90011a50 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
90011a50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011a54:	4604      	mov	r4, r0
90011a56:	b08f      	sub	sp, #60	@ 0x3c
90011a58:	4610      	mov	r0, r2
90011a5a:	460d      	mov	r5, r1
90011a5c:	4691      	mov	r9, r2
90011a5e:	461e      	mov	r6, r3
90011a60:	f008 ffc2 	bl	9001a9e8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90011a64:	2800      	cmp	r0, #0
90011a66:	f000 809d 	beq.w	90011ba4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
90011a6a:	6823      	ldr	r3, [r4, #0]
90011a6c:	4620      	mov	r0, r4
90011a6e:	f8df b198 	ldr.w	fp, [pc, #408]	@ 90011c08 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
90011a72:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
90011a76:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011a78:	4798      	blx	r3
90011a7a:	6823      	ldr	r3, [r4, #0]
90011a7c:	4620      	mov	r0, r4
90011a7e:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 90011c0c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
90011a82:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90011a84:	4798      	blx	r3
90011a86:	f8bb 3000 	ldrh.w	r3, [fp]
90011a8a:	4f5c      	ldr	r7, [pc, #368]	@ (90011bfc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90011a8c:	9301      	str	r3, [sp, #4]
90011a8e:	f8ba 3000 	ldrh.w	r3, [sl]
90011a92:	f828 9d1c 	strh.w	r9, [r8, #-28]!
90011a96:	4640      	mov	r0, r8
90011a98:	9302      	str	r3, [sp, #8]
90011a9a:	883b      	ldrh	r3, [r7, #0]
90011a9c:	9303      	str	r3, [sp, #12]
90011a9e:	4b58      	ldr	r3, [pc, #352]	@ (90011c00 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90011aa0:	881a      	ldrh	r2, [r3, #0]
90011aa2:	9305      	str	r3, [sp, #20]
90011aa4:	9204      	str	r2, [sp, #16]
90011aa6:	f009 f833 	bl	9001ab10 <_ZNK8touchgfx6Bitmap8getWidthEv>
90011aaa:	8038      	strh	r0, [r7, #0]
90011aac:	4640      	mov	r0, r8
90011aae:	f009 f863 	bl	9001ab78 <_ZNK8touchgfx6Bitmap9getHeightEv>
90011ab2:	9b05      	ldr	r3, [sp, #20]
90011ab4:	b280      	uxth	r0, r0
90011ab6:	8018      	strh	r0, [r3, #0]
90011ab8:	4b52      	ldr	r3, [pc, #328]	@ (90011c04 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
90011aba:	781b      	ldrb	r3, [r3, #0]
90011abc:	2b00      	cmp	r3, #0
90011abe:	d174      	bne.n	90011baa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
90011ac0:	883b      	ldrh	r3, [r7, #0]
90011ac2:	f8aa 0000 	strh.w	r0, [sl]
90011ac6:	f8ab 3000 	strh.w	r3, [fp]
90011aca:	4648      	mov	r0, r9
90011acc:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
90011ad0:	f008 ff8a 	bl	9001a9e8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90011ad4:	2200      	movs	r2, #0
90011ad6:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
90011ada:	4611      	mov	r1, r2
90011adc:	4628      	mov	r0, r5
90011ade:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
90011ae2:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
90011ae6:	f7ff fea9 	bl	9001183c <_ZN8touchgfx8Drawable5setXYEss>
90011aea:	2301      	movs	r3, #1
90011aec:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
90011af0:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
90011af4:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90011af8:	2b00      	cmp	r3, #0
90011afa:	dd5c      	ble.n	90011bb6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
90011afc:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90011b00:	2b00      	cmp	r3, #0
90011b02:	dd58      	ble.n	90011bb6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
90011b04:	462a      	mov	r2, r5
90011b06:	ab0a      	add	r3, sp, #40	@ 0x28
90011b08:	f852 0f04 	ldr.w	r0, [r2, #4]!
90011b0c:	6851      	ldr	r1, [r2, #4]
90011b0e:	c303      	stmia	r3!, {r0, r1}
90011b10:	4631      	mov	r1, r6
90011b12:	a80a      	add	r0, sp, #40	@ 0x28
90011b14:	f7ff fbae 	bl	90011274 <_ZN8touchgfx4RectaNERKS0_>
90011b18:	4b38      	ldr	r3, [pc, #224]	@ (90011bfc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90011b1a:	2100      	movs	r1, #0
90011b1c:	f9b3 2000 	ldrsh.w	r2, [r3]
90011b20:	4b37      	ldr	r3, [pc, #220]	@ (90011c00 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90011b22:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
90011b26:	aa0a      	add	r2, sp, #40	@ 0x28
90011b28:	f9b3 3000 	ldrsh.w	r3, [r3]
90011b2c:	910c      	str	r1, [sp, #48]	@ 0x30
90011b2e:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90011b32:	ab08      	add	r3, sp, #32
90011b34:	e892 0003 	ldmia.w	r2, {r0, r1}
90011b38:	e883 0003 	stmia.w	r3, {r0, r1}
90011b3c:	4618      	mov	r0, r3
90011b3e:	a90c      	add	r1, sp, #48	@ 0x30
90011b40:	f7ff fb98 	bl	90011274 <_ZN8touchgfx4RectaNERKS0_>
90011b44:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
90011b46:	2b00      	cmp	r3, #0
90011b48:	d13c      	bne.n	90011bc4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
90011b4a:	2000      	movs	r0, #0
90011b4c:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
90011b50:	2600      	movs	r6, #0
90011b52:	696b      	ldr	r3, [r5, #20]
90011b54:	a908      	add	r1, sp, #32
90011b56:	682a      	ldr	r2, [r5, #0]
90011b58:	4628      	mov	r0, r5
90011b5a:	9305      	str	r3, [sp, #20]
90011b5c:	616e      	str	r6, [r5, #20]
90011b5e:	6892      	ldr	r2, [r2, #8]
90011b60:	4790      	blx	r2
90011b62:	9b05      	ldr	r3, [sp, #20]
90011b64:	4652      	mov	r2, sl
90011b66:	4649      	mov	r1, r9
90011b68:	616b      	str	r3, [r5, #20]
90011b6a:	4628      	mov	r0, r5
90011b6c:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
90011b70:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
90011b74:	f7ff fe62 	bl	9001183c <_ZN8touchgfx8Drawable5setXYEss>
90011b78:	9a01      	ldr	r2, [sp, #4]
90011b7a:	4b23      	ldr	r3, [pc, #140]	@ (90011c08 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
90011b7c:	4620      	mov	r0, r4
90011b7e:	801a      	strh	r2, [r3, #0]
90011b80:	9a02      	ldr	r2, [sp, #8]
90011b82:	4b22      	ldr	r3, [pc, #136]	@ (90011c0c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
90011b84:	801a      	strh	r2, [r3, #0]
90011b86:	9a03      	ldr	r2, [sp, #12]
90011b88:	4b1c      	ldr	r3, [pc, #112]	@ (90011bfc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90011b8a:	801a      	strh	r2, [r3, #0]
90011b8c:	4b1c      	ldr	r3, [pc, #112]	@ (90011c00 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90011b8e:	9a04      	ldr	r2, [sp, #16]
90011b90:	801a      	strh	r2, [r3, #0]
90011b92:	6823      	ldr	r3, [r4, #0]
90011b94:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
90011b98:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011b9a:	4798      	blx	r3
90011b9c:	6823      	ldr	r3, [r4, #0]
90011b9e:	4620      	mov	r0, r4
90011ba0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90011ba2:	4798      	blx	r3
90011ba4:	b00f      	add	sp, #60	@ 0x3c
90011ba6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90011baa:	883b      	ldrh	r3, [r7, #0]
90011bac:	f8ab 0000 	strh.w	r0, [fp]
90011bb0:	f8aa 3000 	strh.w	r3, [sl]
90011bb4:	e789      	b.n	90011aca <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
90011bb6:	462a      	mov	r2, r5
90011bb8:	ab0a      	add	r3, sp, #40	@ 0x28
90011bba:	f852 0f04 	ldr.w	r0, [r2, #4]!
90011bbe:	6851      	ldr	r1, [r2, #4]
90011bc0:	c303      	stmia	r3!, {r0, r1}
90011bc2:	e7a9      	b.n	90011b18 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
90011bc4:	a807      	add	r0, sp, #28
90011bc6:	f009 f919 	bl	9001adfc <_ZNK8touchgfx6Bitmap9getFormatEv>
90011bca:	4606      	mov	r6, r0
90011bcc:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
90011bce:	6803      	ldr	r3, [r0, #0]
90011bd0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011bd2:	4798      	blx	r3
90011bd4:	4286      	cmp	r6, r0
90011bd6:	d1b8      	bne.n	90011b4a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
90011bd8:	f7ff fe3e 	bl	90011858 <_ZN8touchgfx3HAL3lcdEv>
90011bdc:	6803      	ldr	r3, [r0, #0]
90011bde:	4606      	mov	r6, r0
90011be0:	a807      	add	r0, sp, #28
90011be2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90011be4:	9305      	str	r3, [sp, #20]
90011be6:	f009 f909 	bl	9001adfc <_ZNK8touchgfx6Bitmap9getFormatEv>
90011bea:	9b05      	ldr	r3, [sp, #20]
90011bec:	4601      	mov	r1, r0
90011bee:	4630      	mov	r0, r6
90011bf0:	4798      	blx	r3
90011bf2:	f080 0001 	eor.w	r0, r0, #1
90011bf6:	b2c0      	uxtb	r0, r0
90011bf8:	e7a8      	b.n	90011b4c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
90011bfa:	bf00      	nop
90011bfc:	24021858 	.word	0x24021858
90011c00:	2402185a 	.word	0x2402185a
90011c04:	2402185c 	.word	0x2402185c
90011c08:	2402185e 	.word	0x2402185e
90011c0c:	24021860 	.word	0x24021860

90011c10 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
90011c10:	4b07      	ldr	r3, [pc, #28]	@ (90011c30 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
90011c12:	b510      	push	{r4, lr}
90011c14:	781b      	ldrb	r3, [r3, #0]
90011c16:	4604      	mov	r4, r0
90011c18:	b13b      	cbz	r3, 90011c2a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90011c1a:	6803      	ldr	r3, [r0, #0]
90011c1c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90011c1e:	4798      	blx	r3
90011c20:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
90011c22:	4283      	cmp	r3, r0
90011c24:	d101      	bne.n	90011c2a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90011c26:	6c20      	ldr	r0, [r4, #64]	@ 0x40
90011c28:	bd10      	pop	{r4, pc}
90011c2a:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
90011c2c:	e7fc      	b.n	90011c28 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
90011c2e:	bf00      	nop
90011c30:	24021862 	.word	0x24021862

90011c34 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
90011c34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011c38:	461d      	mov	r5, r3
90011c3a:	b08a      	sub	sp, #40	@ 0x28
90011c3c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
90011c40:	4690      	mov	r8, r2
90011c42:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
90011c46:	2400      	movs	r4, #0
90011c48:	4607      	mov	r7, r0
90011c4a:	fb06 8505 	mla	r5, r6, r5, r8
90011c4e:	9404      	str	r4, [sp, #16]
90011c50:	f88d 4020 	strb.w	r4, [sp, #32]
90011c54:	e9cd 3101 	strd	r3, r1, [sp, #4]
90011c58:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90011c5c:	f8ad 3018 	strh.w	r3, [sp, #24]
90011c60:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90011c64:	f8ad 301a 	strh.w	r3, [sp, #26]
90011c68:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90011c6c:	f8ad 301c 	strh.w	r3, [sp, #28]
90011c70:	f7ff ffce 	bl	90011c10 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011c74:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90011c78:	6878      	ldr	r0, [r7, #4]
90011c7a:	f8ad 601e 	strh.w	r6, [sp, #30]
90011c7e:	a901      	add	r1, sp, #4
90011c80:	9505      	str	r5, [sp, #20]
90011c82:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90011c86:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
90011c8a:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
90011c8e:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
90011c92:	6803      	ldr	r3, [r0, #0]
90011c94:	685b      	ldr	r3, [r3, #4]
90011c96:	4798      	blx	r3
90011c98:	b00a      	add	sp, #40	@ 0x28
90011c9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90011c9e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
90011c9e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011ca2:	b08b      	sub	sp, #44	@ 0x2c
90011ca4:	2400      	movs	r4, #0
90011ca6:	4691      	mov	r9, r2
90011ca8:	461d      	mov	r5, r3
90011caa:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
90011cae:	f44f 6300 	mov.w	r3, #2048	@ 0x800
90011cb2:	4688      	mov	r8, r1
90011cb4:	4607      	mov	r7, r0
90011cb6:	9404      	str	r4, [sp, #16]
90011cb8:	fb06 9505 	mla	r5, r6, r5, r9
90011cbc:	e9cd 3401 	strd	r3, r4, [sp, #4]
90011cc0:	f7ff ffa6 	bl	90011c10 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011cc4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90011cc8:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90011ccc:	6878      	ldr	r0, [r7, #4]
90011cce:	f8ad 3018 	strh.w	r3, [sp, #24]
90011cd2:	a901      	add	r1, sp, #4
90011cd4:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90011cd8:	9505      	str	r5, [sp, #20]
90011cda:	f8ad 301a 	strh.w	r3, [sp, #26]
90011cde:	f8ad 401c 	strh.w	r4, [sp, #28]
90011ce2:	f8ad 601e 	strh.w	r6, [sp, #30]
90011ce6:	f8cd 8010 	str.w	r8, [sp, #16]
90011cea:	f8ad 4020 	strh.w	r4, [sp, #32]
90011cee:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90011cf2:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
90011cf6:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
90011cfa:	6803      	ldr	r3, [r0, #0]
90011cfc:	685b      	ldr	r3, [r3, #4]
90011cfe:	4798      	blx	r3
90011d00:	b00b      	add	sp, #44	@ 0x2c
90011d02:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

90011d08 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
90011d08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011d0c:	b08a      	sub	sp, #40	@ 0x28
90011d0e:	4698      	mov	r8, r3
90011d10:	2300      	movs	r3, #0
90011d12:	4606      	mov	r6, r0
90011d14:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
90011d18:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
90011d1c:	2d0b      	cmp	r5, #11
90011d1e:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
90011d22:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
90011d26:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
90011d2a:	9304      	str	r3, [sp, #16]
90011d2c:	d137      	bne.n	90011d9e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
90011d2e:	2380      	movs	r3, #128	@ 0x80
90011d30:	f88d 0020 	strb.w	r0, [sp, #32]
90011d34:	4630      	mov	r0, r6
90011d36:	9203      	str	r2, [sp, #12]
90011d38:	e9cd 3101 	strd	r3, r1, [sp, #4]
90011d3c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90011d40:	f8ad 3018 	strh.w	r3, [sp, #24]
90011d44:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90011d48:	f8ad 301a 	strh.w	r3, [sp, #26]
90011d4c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90011d50:	f8ad 301c 	strh.w	r3, [sp, #28]
90011d54:	f7ff ff5c 	bl	90011c10 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011d58:	2c0b      	cmp	r4, #11
90011d5a:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
90011d5e:	f8ad 701e 	strh.w	r7, [sp, #30]
90011d62:	bf94      	ite	ls
90011d64:	4b19      	ldrls	r3, [pc, #100]	@ (90011dcc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
90011d66:	2100      	movhi	r1, #0
90011d68:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
90011d6c:	bf98      	it	ls
90011d6e:	5d19      	ldrbls	r1, [r3, r4]
90011d70:	fb02 8307 	mla	r3, r2, r7, r8
90011d74:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90011d78:	10c9      	asrs	r1, r1, #3
90011d7a:	fb01 0003 	mla	r0, r1, r3, r0
90011d7e:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
90011d82:	a901      	add	r1, sp, #4
90011d84:	9005      	str	r0, [sp, #20]
90011d86:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
90011d8a:	2300      	movs	r3, #0
90011d8c:	6870      	ldr	r0, [r6, #4]
90011d8e:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
90011d92:	6803      	ldr	r3, [r0, #0]
90011d94:	685b      	ldr	r3, [r3, #4]
90011d96:	4798      	blx	r3
90011d98:	b00a      	add	sp, #40	@ 0x28
90011d9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90011d9e:	2d02      	cmp	r5, #2
90011da0:	d109      	bne.n	90011db6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
90011da2:	28ff      	cmp	r0, #255	@ 0xff
90011da4:	d105      	bne.n	90011db2 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
90011da6:	f1bc 0f00 	cmp.w	ip, #0
90011daa:	bf14      	ite	ne
90011dac:	2340      	movne	r3, #64	@ 0x40
90011dae:	2320      	moveq	r3, #32
90011db0:	e7be      	b.n	90011d30 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90011db2:	2340      	movs	r3, #64	@ 0x40
90011db4:	e7bc      	b.n	90011d30 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90011db6:	28ff      	cmp	r0, #255	@ 0xff
90011db8:	d105      	bne.n	90011dc6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
90011dba:	f1bc 0f00 	cmp.w	ip, #0
90011dbe:	bf14      	ite	ne
90011dc0:	2304      	movne	r3, #4
90011dc2:	2301      	moveq	r3, #1
90011dc4:	e7b4      	b.n	90011d30 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90011dc6:	2304      	movs	r3, #4
90011dc8:	e7b2      	b.n	90011d30 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90011dca:	bf00      	nop
90011dcc:	9002df48 	.word	0x9002df48

90011dd0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
90011dd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011dd4:	b08b      	sub	sp, #44	@ 0x2c
90011dd6:	461d      	mov	r5, r3
90011dd8:	2400      	movs	r4, #0
90011dda:	4688      	mov	r8, r1
90011ddc:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
90011de0:	4693      	mov	fp, r2
90011de2:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
90011de6:	4607      	mov	r7, r0
90011de8:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90011dec:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
90011df0:	9404      	str	r4, [sp, #16]
90011df2:	bf14      	ite	ne
90011df4:	2308      	movne	r3, #8
90011df6:	2302      	moveq	r3, #2
90011df8:	fb05 b50a 	mla	r5, r5, sl, fp
90011dfc:	e9cd 3401 	strd	r3, r4, [sp, #4]
90011e00:	f7ff ff06 	bl	90011c10 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011e04:	2e0b      	cmp	r6, #11
90011e06:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
90011e0a:	a901      	add	r1, sp, #4
90011e0c:	bf98      	it	ls
90011e0e:	4b13      	ldrls	r3, [pc, #76]	@ (90011e5c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
90011e10:	f8ad a01e 	strh.w	sl, [sp, #30]
90011e14:	bf98      	it	ls
90011e16:	5d9c      	ldrbls	r4, [r3, r6]
90011e18:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
90011e1c:	10e4      	asrs	r4, r4, #3
90011e1e:	f8cd 8010 	str.w	r8, [sp, #16]
90011e22:	f8ad 3018 	strh.w	r3, [sp, #24]
90011e26:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
90011e2a:	fb04 0405 	mla	r4, r4, r5, r0
90011e2e:	6878      	ldr	r0, [r7, #4]
90011e30:	f8ad 301a 	strh.w	r3, [sp, #26]
90011e34:	2300      	movs	r3, #0
90011e36:	9405      	str	r4, [sp, #20]
90011e38:	f8ad 301c 	strh.w	r3, [sp, #28]
90011e3c:	f88d 9020 	strb.w	r9, [sp, #32]
90011e40:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
90011e44:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
90011e48:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
90011e4c:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
90011e50:	6803      	ldr	r3, [r0, #0]
90011e52:	685b      	ldr	r3, [r3, #4]
90011e54:	4798      	blx	r3
90011e56:	b00b      	add	sp, #44	@ 0x2c
90011e58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90011e5c:	9002df48 	.word	0x9002df48

90011e60 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
90011e60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011e64:	461e      	mov	r6, r3
90011e66:	4b0a      	ldr	r3, [pc, #40]	@ (90011e90 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
90011e68:	460f      	mov	r7, r1
90011e6a:	4690      	mov	r8, r2
90011e6c:	881d      	ldrh	r5, [r3, #0]
90011e6e:	f7ff fcf3 	bl	90011858 <_ZN8touchgfx3HAL3lcdEv>
90011e72:	6803      	ldr	r3, [r0, #0]
90011e74:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011e76:	4798      	blx	r3
90011e78:	280b      	cmp	r0, #11
90011e7a:	bf96      	itet	ls
90011e7c:	4b05      	ldrls	r3, [pc, #20]	@ (90011e94 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
90011e7e:	2400      	movhi	r4, #0
90011e80:	5c1c      	ldrbls	r4, [r3, r0]
90011e82:	fb08 7005 	mla	r0, r8, r5, r7
90011e86:	10e4      	asrs	r4, r4, #3
90011e88:	fb04 6000 	mla	r0, r4, r0, r6
90011e8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90011e90:	2402185e 	.word	0x2402185e
90011e94:	9002df48 	.word	0x9002df48

90011e98 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
90011e98:	b5f0      	push	{r4, r5, r6, r7, lr}
90011e9a:	b08b      	sub	sp, #44	@ 0x2c
90011e9c:	461f      	mov	r7, r3
90011e9e:	4604      	mov	r4, r0
90011ea0:	4616      	mov	r6, r2
90011ea2:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
90011ea6:	2500      	movs	r5, #0
90011ea8:	e9cd 3101 	strd	r3, r1, [sp, #4]
90011eac:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90011eb0:	9504      	str	r5, [sp, #16]
90011eb2:	f8ad 3018 	strh.w	r3, [sp, #24]
90011eb6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90011eba:	f8ad 301a 	strh.w	r3, [sp, #26]
90011ebe:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90011ec2:	f8ad 301c 	strh.w	r3, [sp, #28]
90011ec6:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90011eca:	f88d 3020 	strb.w	r3, [sp, #32]
90011ece:	f7ff fe9f 	bl	90011c10 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011ed2:	463a      	mov	r2, r7
90011ed4:	4631      	mov	r1, r6
90011ed6:	4603      	mov	r3, r0
90011ed8:	4620      	mov	r0, r4
90011eda:	f7ff ffc1 	bl	90011e60 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90011ede:	4b0e      	ldr	r3, [pc, #56]	@ (90011f18 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
90011ee0:	9005      	str	r0, [sp, #20]
90011ee2:	881b      	ldrh	r3, [r3, #0]
90011ee4:	f8ad 301e 	strh.w	r3, [sp, #30]
90011ee8:	f7ff fcb6 	bl	90011858 <_ZN8touchgfx3HAL3lcdEv>
90011eec:	6803      	ldr	r3, [r0, #0]
90011eee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011ef0:	4798      	blx	r3
90011ef2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90011ef4:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
90011ef8:	a901      	add	r1, sp, #4
90011efa:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
90011efe:	9304      	str	r3, [sp, #16]
90011f00:	6860      	ldr	r0, [r4, #4]
90011f02:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
90011f06:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
90011f0a:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
90011f0e:	6803      	ldr	r3, [r0, #0]
90011f10:	685b      	ldr	r3, [r3, #4]
90011f12:	4798      	blx	r3
90011f14:	b00b      	add	sp, #44	@ 0x2c
90011f16:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011f18:	2402185e 	.word	0x2402185e

90011f1c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
90011f1c:	b5f0      	push	{r4, r5, r6, r7, lr}
90011f1e:	b08d      	sub	sp, #52	@ 0x34
90011f20:	2501      	movs	r5, #1
90011f22:	4604      	mov	r4, r0
90011f24:	466b      	mov	r3, sp
90011f26:	9503      	str	r5, [sp, #12]
90011f28:	e883 0006 	stmia.w	r3, {r1, r2}
90011f2c:	2300      	movs	r3, #0
90011f2e:	f8bd 6000 	ldrh.w	r6, [sp]
90011f32:	f8bd 7002 	ldrh.w	r7, [sp, #2]
90011f36:	9306      	str	r3, [sp, #24]
90011f38:	6803      	ldr	r3, [r0, #0]
90011f3a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90011f3c:	4798      	blx	r3
90011f3e:	463a      	mov	r2, r7
90011f40:	4631      	mov	r1, r6
90011f42:	4603      	mov	r3, r0
90011f44:	4620      	mov	r0, r4
90011f46:	f7ff ff8b 	bl	90011e60 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90011f4a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90011f4c:	9004      	str	r0, [sp, #16]
90011f4e:	9307      	str	r3, [sp, #28]
90011f50:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90011f54:	f8ad 3020 	strh.w	r3, [sp, #32]
90011f58:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90011f5c:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
90011f60:	4b0e      	ldr	r3, [pc, #56]	@ (90011f9c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
90011f62:	881b      	ldrh	r3, [r3, #0]
90011f64:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
90011f68:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
90011f6c:	f7ff fc74 	bl	90011858 <_ZN8touchgfx3HAL3lcdEv>
90011f70:	6803      	ldr	r3, [r0, #0]
90011f72:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011f74:	4798      	blx	r3
90011f76:	23ff      	movs	r3, #255	@ 0xff
90011f78:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
90011f7c:	a903      	add	r1, sp, #12
90011f7e:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
90011f82:	6860      	ldr	r0, [r4, #4]
90011f84:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
90011f88:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
90011f8c:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
90011f90:	6803      	ldr	r3, [r0, #0]
90011f92:	685b      	ldr	r3, [r3, #4]
90011f94:	4798      	blx	r3
90011f96:	6c60      	ldr	r0, [r4, #68]	@ 0x44
90011f98:	b00d      	add	sp, #52	@ 0x34
90011f9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011f9c:	2402185e 	.word	0x2402185e

90011fa0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
90011fa0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011fa4:	b08c      	sub	sp, #48	@ 0x30
90011fa6:	461e      	mov	r6, r3
90011fa8:	2300      	movs	r3, #0
90011faa:	4604      	mov	r4, r0
90011fac:	466d      	mov	r5, sp
90011fae:	9306      	str	r3, [sp, #24]
90011fb0:	6803      	ldr	r3, [r0, #0]
90011fb2:	e885 0006 	stmia.w	r5, {r1, r2}
90011fb6:	2501      	movs	r5, #1
90011fb8:	f8bd 7000 	ldrh.w	r7, [sp]
90011fbc:	f8bd 8002 	ldrh.w	r8, [sp, #2]
90011fc0:	9503      	str	r5, [sp, #12]
90011fc2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90011fc4:	4798      	blx	r3
90011fc6:	4642      	mov	r2, r8
90011fc8:	4639      	mov	r1, r7
90011fca:	4603      	mov	r3, r0
90011fcc:	4620      	mov	r0, r4
90011fce:	f7ff ff47 	bl	90011e60 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90011fd2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90011fd6:	9004      	str	r0, [sp, #16]
90011fd8:	f8ad 3020 	strh.w	r3, [sp, #32]
90011fdc:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90011fe0:	9607      	str	r6, [sp, #28]
90011fe2:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
90011fe6:	4b10      	ldr	r3, [pc, #64]	@ (90012028 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
90011fe8:	881b      	ldrh	r3, [r3, #0]
90011fea:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
90011fee:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90011ff0:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
90011ff4:	f7ff fc30 	bl	90011858 <_ZN8touchgfx3HAL3lcdEv>
90011ff8:	6803      	ldr	r3, [r0, #0]
90011ffa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011ffc:	4798      	blx	r3
90011ffe:	23ff      	movs	r3, #255	@ 0xff
90012000:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
90012004:	a903      	add	r1, sp, #12
90012006:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
9001200a:	6860      	ldr	r0, [r4, #4]
9001200c:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
90012010:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
90012014:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
90012018:	6803      	ldr	r3, [r0, #0]
9001201a:	685b      	ldr	r3, [r3, #4]
9001201c:	4798      	blx	r3
9001201e:	4630      	mov	r0, r6
90012020:	b00c      	add	sp, #48	@ 0x30
90012022:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90012026:	bf00      	nop
90012028:	2402185e 	.word	0x2402185e

9001202c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
9001202c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001202e:	b085      	sub	sp, #20
90012030:	4605      	mov	r5, r0
90012032:	ac02      	add	r4, sp, #8
90012034:	e884 0006 	stmia.w	r4, {r1, r2}
90012038:	f8bd 6008 	ldrh.w	r6, [sp, #8]
9001203c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
90012040:	f7ff fde6 	bl	90011c10 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90012044:	4631      	mov	r1, r6
90012046:	4603      	mov	r3, r0
90012048:	463a      	mov	r2, r7
9001204a:	4628      	mov	r0, r5
9001204c:	f7ff ff08 	bl	90011e60 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90012050:	4a05      	ldr	r2, [pc, #20]	@ (90012068 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
90012052:	682b      	ldr	r3, [r5, #0]
90012054:	8812      	ldrh	r2, [r2, #0]
90012056:	9200      	str	r2, [sp, #0]
90012058:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
9001205a:	4603      	mov	r3, r0
9001205c:	4628      	mov	r0, r5
9001205e:	e894 0006 	ldmia.w	r4, {r1, r2}
90012062:	47b0      	blx	r6
90012064:	b005      	add	sp, #20
90012066:	bdf0      	pop	{r4, r5, r6, r7, pc}
90012068:	2402185e 	.word	0x2402185e

9001206c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
9001206c:	b570      	push	{r4, r5, r6, lr}
9001206e:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
90012072:	4604      	mov	r4, r0
90012074:	b19b      	cbz	r3, 9001209e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
90012076:	2002      	movs	r0, #2
90012078:	f7ee fe68 	bl	90000d4c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
9001207c:	2300      	movs	r3, #0
9001207e:	4620      	mov	r0, r4
90012080:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
90012084:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
90012088:	6823      	ldr	r3, [r4, #0]
9001208a:	f8d3 50c8 	ldr.w	r5, [r3, #200]	@ 0xc8
9001208e:	f7ff fdbf 	bl	90011c10 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90012092:	4601      	mov	r1, r0
90012094:	4620      	mov	r0, r4
90012096:	462b      	mov	r3, r5
90012098:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001209c:	4718      	bx	r3
9001209e:	bd70      	pop	{r4, r5, r6, pc}

900120a0 <_ZN8touchgfx3HAL12setMCUActiveEb>:
900120a0:	b570      	push	{r4, r5, r6, lr}
900120a2:	4605      	mov	r5, r0
900120a4:	460c      	mov	r4, r1
900120a6:	2003      	movs	r0, #3
900120a8:	b149      	cbz	r1, 900120be <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
900120aa:	f7ee fdfb 	bl	90000ca4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
900120ae:	6928      	ldr	r0, [r5, #16]
900120b0:	b168      	cbz	r0, 900120ce <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
900120b2:	6803      	ldr	r3, [r0, #0]
900120b4:	2101      	movs	r1, #1
900120b6:	695b      	ldr	r3, [r3, #20]
900120b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900120bc:	4718      	bx	r3
900120be:	f7ee fe1b 	bl	90000cf8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
900120c2:	6928      	ldr	r0, [r5, #16]
900120c4:	b118      	cbz	r0, 900120ce <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
900120c6:	6803      	ldr	r3, [r0, #0]
900120c8:	4621      	mov	r1, r4
900120ca:	695b      	ldr	r3, [r3, #20]
900120cc:	e7f4      	b.n	900120b8 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
900120ce:	bd70      	pop	{r4, r5, r6, pc}

900120d0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
900120d0:	b538      	push	{r3, r4, r5, lr}
900120d2:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
900120d6:	4604      	mov	r4, r0
900120d8:	460d      	mov	r5, r1
900120da:	428b      	cmp	r3, r1
900120dc:	d006      	beq.n	900120ec <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
900120de:	6803      	ldr	r3, [r0, #0]
900120e0:	b929      	cbnz	r1, 900120ee <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
900120e2:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
900120e6:	4798      	blx	r3
900120e8:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
900120ec:	bd38      	pop	{r3, r4, r5, pc}
900120ee:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
900120f2:	e7f8      	b.n	900120e6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

900120f4 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
900120f4:	4b0c      	ldr	r3, [pc, #48]	@ (90012128 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x34>)
900120f6:	b510      	push	{r4, lr}
900120f8:	781b      	ldrb	r3, [r3, #0]
900120fa:	4604      	mov	r4, r0
900120fc:	b953      	cbnz	r3, 90012114 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
900120fe:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
90012102:	b93b      	cbnz	r3, 90012114 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
90012104:	6840      	ldr	r0, [r0, #4]
90012106:	f000 f919 	bl	9001233c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
9001210a:	b118      	cbz	r0, 90012114 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
9001210c:	6862      	ldr	r2, [r4, #4]
9001210e:	7a53      	ldrb	r3, [r2, #9]
90012110:	2b00      	cmp	r3, #0
90012112:	d0fc      	beq.n	9001210e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1a>
90012114:	f7f0 f928 	bl	90002368 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90012118:	4620      	mov	r0, r4
9001211a:	2100      	movs	r1, #0
9001211c:	f7ff ffd8 	bl	900120d0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90012120:	4620      	mov	r0, r4
90012122:	f7ff fd75 	bl	90011c10 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90012126:	bd10      	pop	{r4, pc}
90012128:	24021862 	.word	0x24021862

9001212c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
9001212c:	b570      	push	{r4, r5, r6, lr}
9001212e:	4604      	mov	r4, r0
90012130:	6803      	ldr	r3, [r0, #0]
90012132:	b919      	cbnz	r1, 9001213c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
90012134:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012136:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001213a:	4718      	bx	r3
9001213c:	2200      	movs	r2, #0
9001213e:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
90012142:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
90012146:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012148:	4798      	blx	r3
9001214a:	6863      	ldr	r3, [r4, #4]
9001214c:	2101      	movs	r1, #1
9001214e:	4605      	mov	r5, r0
90012150:	4620      	mov	r0, r4
90012152:	7299      	strb	r1, [r3, #10]
90012154:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
90012158:	f7ff ffba 	bl	900120d0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
9001215c:	4628      	mov	r0, r5
9001215e:	bd70      	pop	{r4, r5, r6, pc}

90012160 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
90012160:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
90012164:	1a13      	subs	r3, r2, r0
90012166:	4258      	negs	r0, r3
90012168:	4158      	adcs	r0, r3
9001216a:	4770      	bx	lr

9001216c <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
9001216c:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
90012170:	1a9b      	subs	r3, r3, r2
90012172:	2b00      	cmp	r3, #0
90012174:	bfdc      	itt	le
90012176:	6882      	ldrle	r2, [r0, #8]
90012178:	189b      	addle	r3, r3, r2
9001217a:	2b01      	cmp	r3, #1
9001217c:	bfcc      	ite	gt
9001217e:	2000      	movgt	r0, #0
90012180:	2001      	movle	r0, #1
90012182:	4770      	bx	lr

90012184 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
90012184:	6902      	ldr	r2, [r0, #16]
90012186:	6843      	ldr	r3, [r0, #4]
90012188:	2024      	movs	r0, #36	@ 0x24
9001218a:	fb00 3002 	mla	r0, r0, r2, r3
9001218e:	4770      	bx	lr

90012190 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
90012190:	6803      	ldr	r3, [r0, #0]
90012192:	691b      	ldr	r3, [r3, #16]
90012194:	4718      	bx	r3

90012196 <_ZN8touchgfx13DMA_Interface7executeEv>:
90012196:	2301      	movs	r3, #1
90012198:	b570      	push	{r4, r5, r6, lr}
9001219a:	7203      	strb	r3, [r0, #8]
9001219c:	4604      	mov	r4, r0
9001219e:	6840      	ldr	r0, [r0, #4]
900121a0:	6803      	ldr	r3, [r0, #0]
900121a2:	699b      	ldr	r3, [r3, #24]
900121a4:	4798      	blx	r3
900121a6:	6803      	ldr	r3, [r0, #0]
900121a8:	4605      	mov	r5, r0
900121aa:	2b40      	cmp	r3, #64	@ 0x40
900121ac:	d00c      	beq.n	900121c8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900121ae:	d810      	bhi.n	900121d2 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
900121b0:	2b04      	cmp	r3, #4
900121b2:	d01d      	beq.n	900121f0 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
900121b4:	d804      	bhi.n	900121c0 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
900121b6:	2b01      	cmp	r3, #1
900121b8:	d006      	beq.n	900121c8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900121ba:	2b02      	cmp	r3, #2
900121bc:	d02c      	beq.n	90012218 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
900121be:	bd70      	pop	{r4, r5, r6, pc}
900121c0:	2b08      	cmp	r3, #8
900121c2:	d01d      	beq.n	90012200 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
900121c4:	2b20      	cmp	r3, #32
900121c6:	d1fa      	bne.n	900121be <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
900121c8:	6823      	ldr	r3, [r4, #0]
900121ca:	4620      	mov	r0, r4
900121cc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900121ce:	4798      	blx	r3
900121d0:	e013      	b.n	900121fa <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
900121d2:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
900121d6:	d0f7      	beq.n	900121c8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900121d8:	d804      	bhi.n	900121e4 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
900121da:	2b80      	cmp	r3, #128	@ 0x80
900121dc:	d0f4      	beq.n	900121c8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900121de:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
900121e2:	e7f0      	b.n	900121c6 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
900121e4:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
900121e8:	d0ee      	beq.n	900121c8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900121ea:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
900121ee:	e7e5      	b.n	900121bc <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
900121f0:	6823      	ldr	r3, [r4, #0]
900121f2:	7f01      	ldrb	r1, [r0, #28]
900121f4:	4620      	mov	r0, r4
900121f6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900121f8:	4798      	blx	r3
900121fa:	6823      	ldr	r3, [r4, #0]
900121fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900121fe:	e006      	b.n	9001220e <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
90012200:	6823      	ldr	r3, [r4, #0]
90012202:	7f01      	ldrb	r1, [r0, #28]
90012204:	4620      	mov	r0, r4
90012206:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90012208:	4798      	blx	r3
9001220a:	6823      	ldr	r3, [r4, #0]
9001220c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
9001220e:	4629      	mov	r1, r5
90012210:	4620      	mov	r0, r4
90012212:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90012216:	4718      	bx	r3
90012218:	6823      	ldr	r3, [r4, #0]
9001221a:	4620      	mov	r0, r4
9001221c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001221e:	4798      	blx	r3
90012220:	e7f3      	b.n	9001220a <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

90012222 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
90012222:	4770      	bx	lr

90012224 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
90012224:	4770      	bx	lr

90012226 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
90012226:	4770      	bx	lr

90012228 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
90012228:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
9001222c:	b510      	push	{r4, lr}
9001222e:	1ad2      	subs	r2, r2, r3
90012230:	2a00      	cmp	r2, #0
90012232:	bfdc      	itt	le
90012234:	6884      	ldrle	r4, [r0, #8]
90012236:	1912      	addle	r2, r2, r4
90012238:	2a01      	cmp	r2, #1
9001223a:	dd16      	ble.n	9001226a <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
9001223c:	6842      	ldr	r2, [r0, #4]
9001223e:	2424      	movs	r4, #36	@ 0x24
90012240:	fb04 2303 	mla	r3, r4, r3, r2
90012244:	f101 0220 	add.w	r2, r1, #32
90012248:	f851 4b04 	ldr.w	r4, [r1], #4
9001224c:	4291      	cmp	r1, r2
9001224e:	f843 4b04 	str.w	r4, [r3], #4
90012252:	d1f9      	bne.n	90012248 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
90012254:	780a      	ldrb	r2, [r1, #0]
90012256:	701a      	strb	r2, [r3, #0]
90012258:	68c3      	ldr	r3, [r0, #12]
9001225a:	6882      	ldr	r2, [r0, #8]
9001225c:	f3bf 8f5b 	dmb	ish
90012260:	3301      	adds	r3, #1
90012262:	429a      	cmp	r2, r3
90012264:	bfd8      	it	le
90012266:	1a9b      	suble	r3, r3, r2
90012268:	60c3      	str	r3, [r0, #12]
9001226a:	bd10      	pop	{r4, pc}

9001226c <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
9001226c:	6903      	ldr	r3, [r0, #16]
9001226e:	6882      	ldr	r2, [r0, #8]
90012270:	f3bf 8f5b 	dmb	ish
90012274:	3301      	adds	r3, #1
90012276:	429a      	cmp	r2, r3
90012278:	bfd8      	it	le
9001227a:	1a9b      	suble	r3, r3, r2
9001227c:	6103      	str	r3, [r0, #16]
9001227e:	4770      	bx	lr

90012280 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
90012280:	b570      	push	{r4, r5, r6, lr}
90012282:	4604      	mov	r4, r0
90012284:	460e      	mov	r6, r1
90012286:	6860      	ldr	r0, [r4, #4]
90012288:	6803      	ldr	r3, [r0, #0]
9001228a:	685b      	ldr	r3, [r3, #4]
9001228c:	4798      	blx	r3
9001228e:	2800      	cmp	r0, #0
90012290:	d1f9      	bne.n	90012286 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
90012292:	4d0d      	ldr	r5, [pc, #52]	@ (900122c8 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
90012294:	6828      	ldr	r0, [r5, #0]
90012296:	6803      	ldr	r3, [r0, #0]
90012298:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
9001229c:	4798      	blx	r3
9001229e:	f7f0 f871 	bl	90002384 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
900122a2:	6828      	ldr	r0, [r5, #0]
900122a4:	2101      	movs	r1, #1
900122a6:	f7ff ff13 	bl	900120d0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
900122aa:	6860      	ldr	r0, [r4, #4]
900122ac:	4631      	mov	r1, r6
900122ae:	6803      	ldr	r3, [r0, #0]
900122b0:	689b      	ldr	r3, [r3, #8]
900122b2:	4798      	blx	r3
900122b4:	6823      	ldr	r3, [r4, #0]
900122b6:	4620      	mov	r0, r4
900122b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900122ba:	4798      	blx	r3
900122bc:	6828      	ldr	r0, [r5, #0]
900122be:	6803      	ldr	r3, [r0, #0]
900122c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900122c4:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
900122c6:	4718      	bx	r3
900122c8:	24021864 	.word	0x24021864

900122cc <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
900122cc:	b508      	push	{r3, lr}
900122ce:	f7f0 f84b 	bl	90002368 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
900122d2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
900122d6:	f7f0 b84f 	b.w	90002378 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

900122da <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
900122da:	b510      	push	{r4, lr}
900122dc:	4604      	mov	r4, r0
900122de:	2114      	movs	r1, #20
900122e0:	f017 fcc4 	bl	90029c6c <_ZdlPvj>
900122e4:	4620      	mov	r0, r4
900122e6:	bd10      	pop	{r4, pc}

900122e8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
900122e8:	b570      	push	{r4, r5, r6, lr}
900122ea:	4604      	mov	r4, r0
900122ec:	6840      	ldr	r0, [r0, #4]
900122ee:	6803      	ldr	r3, [r0, #0]
900122f0:	681b      	ldr	r3, [r3, #0]
900122f2:	4798      	blx	r3
900122f4:	4605      	mov	r5, r0
900122f6:	b930      	cbnz	r0, 90012306 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
900122f8:	7a23      	ldrb	r3, [r4, #8]
900122fa:	b123      	cbz	r3, 90012306 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
900122fc:	6860      	ldr	r0, [r4, #4]
900122fe:	6803      	ldr	r3, [r0, #0]
90012300:	695b      	ldr	r3, [r3, #20]
90012302:	4798      	blx	r3
90012304:	7225      	strb	r5, [r4, #8]
90012306:	6860      	ldr	r0, [r4, #4]
90012308:	6803      	ldr	r3, [r0, #0]
9001230a:	681b      	ldr	r3, [r3, #0]
9001230c:	4798      	blx	r3
9001230e:	b928      	cbnz	r0, 9001231c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
90012310:	6823      	ldr	r3, [r4, #0]
90012312:	4620      	mov	r0, r4
90012314:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90012316:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001231a:	4718      	bx	r3
9001231c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90012320:	f7f0 b838 	b.w	90002394 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

90012324 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
90012324:	b510      	push	{r4, lr}
90012326:	6082      	str	r2, [r0, #8]
90012328:	2200      	movs	r2, #0
9001232a:	4c03      	ldr	r4, [pc, #12]	@ (90012338 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
9001232c:	e9c0 2203 	strd	r2, r2, [r0, #12]
90012330:	e9c0 4100 	strd	r4, r1, [r0]
90012334:	bd10      	pop	{r4, pc}
90012336:	bf00      	nop
90012338:	9002df5c 	.word	0x9002df5c

9001233c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
9001233c:	6840      	ldr	r0, [r0, #4]
9001233e:	6803      	ldr	r3, [r0, #0]
90012340:	681b      	ldr	r3, [r3, #0]
90012342:	4718      	bx	r3
90012344:	0000      	movs	r0, r0
	...

90012348 <_ZN8touchgfxL10applyNoiseEiihhh>:
90012348:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
9001234c:	fb80 0101 	smull	r0, r1, r0, r1
90012350:	4f21      	ldr	r7, [pc, #132]	@ (900123d8 <_ZN8touchgfxL10applyNoiseEiihhh+0x90>)
90012352:	461c      	mov	r4, r3
90012354:	4616      	mov	r6, r2
90012356:	fba0 bc07 	umull	fp, ip, r0, r7
9001235a:	f89d 5018 	ldrb.w	r5, [sp, #24]
9001235e:	fb07 cc01 	mla	ip, r7, r1, ip
90012362:	fbab 010b 	umull	r0, r1, fp, fp
90012366:	fb0b f70c 	mul.w	r7, fp, ip
9001236a:	fb00 f30c 	mul.w	r3, r0, ip
9001236e:	eb01 0147 	add.w	r1, r1, r7, lsl #1
90012372:	fb0b 3301 	mla	r3, fp, r1, r3
90012376:	fba0 010b 	umull	r0, r1, r0, fp
9001237a:	4419      	add	r1, r3
9001237c:	a314      	add	r3, pc, #80	@ (adr r3, 900123d0 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
9001237e:	e9d3 2300 	ldrd	r2, r3, [r3]
90012382:	f7ee f9b9 	bl	900006f8 <__aeabi_ldivmod>
90012386:	2ef7      	cmp	r6, #247	@ 0xf7
90012388:	b290      	uxth	r0, r2
9001238a:	bf9e      	ittt	ls
9001238c:	f002 0207 	andls.w	r2, r2, #7
90012390:	18b6      	addls	r6, r6, r2
90012392:	b2f6      	uxtbls	r6, r6
90012394:	2cfb      	cmp	r4, #251	@ 0xfb
90012396:	bf9e      	ittt	ls
90012398:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
9001239c:	18e4      	addls	r4, r4, r3
9001239e:	b2e4      	uxtbls	r4, r4
900123a0:	2df7      	cmp	r5, #247	@ 0xf7
900123a2:	bf98      	it	ls
900123a4:	f3c0 1042 	ubfxls	r0, r0, #5, #3
900123a8:	ea4f 04c4 	mov.w	r4, r4, lsl #3
900123ac:	bf98      	it	ls
900123ae:	182d      	addls	r5, r5, r0
900123b0:	480a      	ldr	r0, [pc, #40]	@ (900123dc <_ZN8touchgfxL10applyNoiseEiihhh+0x94>)
900123b2:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
900123b6:	ea00 2006 	and.w	r0, r0, r6, lsl #8
900123ba:	bf98      	it	ls
900123bc:	b2ed      	uxtbls	r5, r5
900123be:	4304      	orrs	r4, r0
900123c0:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
900123c4:	b280      	uxth	r0, r0
900123c6:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
900123ca:	bf00      	nop
900123cc:	f3af 8000 	nop.w
900123d0:	797a8d77 	.word	0x797a8d77
900123d4:	00000000 	.word	0x00000000
900123d8:	00ec4ba7 	.word	0x00ec4ba7
900123dc:	fffff800 	.word	0xfffff800

900123e0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
900123e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900123e4:	eb01 0442 	add.w	r4, r1, r2, lsl #1
900123e8:	4605      	mov	r5, r0
900123ea:	ed2d 8b02 	vpush	{d8}
900123ee:	b087      	sub	sp, #28
900123f0:	7c41      	ldrb	r1, [r0, #17]
900123f2:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
900123f6:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
900123fa:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
900123fe:	2900      	cmp	r1, #0
90012400:	f000 809a 	beq.w	90012538 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
90012404:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
90012408:	ed90 7a08 	vldr	s14, [r0, #32]
9001240c:	454a      	cmp	r2, r9
9001240e:	68c0      	ldr	r0, [r0, #12]
90012410:	db25      	blt.n	9001245e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
90012412:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90012416:	f640 72fc 	movw	r2, #4092	@ 0xffc
9001241a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001241e:	bfc8      	it	gt
90012420:	2200      	movgt	r2, #0
90012422:	5882      	ldr	r2, [r0, r2]
90012424:	2100      	movs	r1, #0
90012426:	ea4f 2812 	mov.w	r8, r2, lsr #8
9001242a:	7c2d      	ldrb	r5, [r5, #16]
9001242c:	0950      	lsrs	r0, r2, #5
9001242e:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
90012432:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
90012436:	eb04 0746 	add.w	r7, r4, r6, lsl #1
9001243a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001243e:	2d00      	cmp	r5, #0
90012440:	d044      	beq.n	900124cc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
90012442:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90012446:	d141      	bne.n	900124cc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
90012448:	bb61      	cbnz	r1, 900124a4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
9001244a:	ea4e 0000 	orr.w	r0, lr, r0
9001244e:	ea4c 0500 	orr.w	r5, ip, r0
90012452:	42bc      	cmp	r4, r7
90012454:	f080 8214 	bcs.w	90012880 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90012458:	f824 5b02 	strh.w	r5, [r4], #2
9001245c:	e7f9      	b.n	90012452 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
9001245e:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
90012462:	454f      	cmp	r7, r9
90012464:	dc08      	bgt.n	90012478 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
90012466:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9001246a:	f640 72fc 	movw	r2, #4092	@ 0xffc
9001246e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012472:	bfd8      	it	le
90012474:	2200      	movle	r2, #0
90012476:	e7d4      	b.n	90012422 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
90012478:	eba9 0202 	sub.w	r2, r9, r2
9001247c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90012480:	ee07 2a90 	vmov	s15, r2
90012484:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012488:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001248c:	ee67 7a87 	vmul.f32	s15, s15, s14
90012490:	eefd 7ae7 	vcvt.s32.f32	s15, s15
90012494:	ee17 2a90 	vmov	r2, s15
90012498:	bfd8      	it	le
9001249a:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
9001249e:	0092      	lsls	r2, r2, #2
900124a0:	5882      	ldr	r2, [r0, r2]
900124a2:	e7c0      	b.n	90012426 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
900124a4:	b2d5      	uxtb	r5, r2
900124a6:	f3c2 4a07 	ubfx	sl, r2, #16, #8
900124aa:	fa5f f888 	uxtb.w	r8, r8
900124ae:	461e      	mov	r6, r3
900124b0:	42bc      	cmp	r4, r7
900124b2:	f080 81e5 	bcs.w	90012880 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900124b6:	4630      	mov	r0, r6
900124b8:	9500      	str	r5, [sp, #0]
900124ba:	4643      	mov	r3, r8
900124bc:	4652      	mov	r2, sl
900124be:	4649      	mov	r1, r9
900124c0:	3601      	adds	r6, #1
900124c2:	f7ff ff41 	bl	90012348 <_ZN8touchgfxL10applyNoiseEiihhh>
900124c6:	f824 0b02 	strh.w	r0, [r4], #2
900124ca:	e7f1      	b.n	900124b0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
900124cc:	0e12      	lsrs	r2, r2, #24
900124ce:	26ff      	movs	r6, #255	@ 0xff
900124d0:	fb02 f20a 	mul.w	r2, r2, sl
900124d4:	1c53      	adds	r3, r2, #1
900124d6:	eb03 2222 	add.w	r2, r3, r2, asr #8
900124da:	1212      	asrs	r2, r2, #8
900124dc:	fb02 f50c 	mul.w	r5, r2, ip
900124e0:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 90012894 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
900124e4:	fb02 f10e 	mul.w	r1, r2, lr
900124e8:	4350      	muls	r0, r2
900124ea:	43d2      	mvns	r2, r2
900124ec:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
900124f0:	42bc      	cmp	r4, r7
900124f2:	f080 81c5 	bcs.w	90012880 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900124f6:	f8b4 e000 	ldrh.w	lr, [r4]
900124fa:	ea0e 030c 	and.w	r3, lr, ip
900124fe:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
90012502:	f00e 0e1f 	and.w	lr, lr, #31
90012506:	fb02 1303 	mla	r3, r2, r3, r1
9001250a:	fb02 0808 	mla	r8, r2, r8, r0
9001250e:	fb02 5e0e 	mla	lr, r2, lr, r5
90012512:	fb93 f3f6 	sdiv	r3, r3, r6
90012516:	fb98 f8f6 	sdiv	r8, r8, r6
9001251a:	fb9e fef6 	sdiv	lr, lr, r6
9001251e:	ea03 030c 	and.w	r3, r3, ip
90012522:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90012526:	f00e 0e1f 	and.w	lr, lr, #31
9001252a:	ea43 0308 	orr.w	r3, r3, r8
9001252e:	ea43 030e 	orr.w	r3, r3, lr
90012532:	f824 3b02 	strh.w	r3, [r4], #2
90012536:	e7db      	b.n	900124f0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
90012538:	7c82      	ldrb	r2, [r0, #18]
9001253a:	2a00      	cmp	r2, #0
9001253c:	d04f      	beq.n	900125de <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
9001253e:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
90012542:	ee07 2a90 	vmov	s15, r2
90012546:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001254a:	ee07 3a10 	vmov	s14, r3
9001254e:	461f      	mov	r7, r3
90012550:	eef8 6ac7 	vcvt.f32.s32	s13, s14
90012554:	eef4 6ae7 	vcmpe.f32	s13, s15
90012558:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001255c:	f200 8095 	bhi.w	9001268a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
90012560:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90012564:	f640 71fc 	movw	r1, #4092	@ 0xffc
90012568:	68ea      	ldr	r2, [r5, #12]
9001256a:	f895 c010 	ldrb.w	ip, [r5, #16]
9001256e:	ee37 7a87 	vadd.f32	s14, s15, s14
90012572:	ee37 7a66 	vsub.f32	s14, s14, s13
90012576:	ee06 6a90 	vmov	s13, r6
9001257a:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001257e:	eeb4 7ae6 	vcmpe.f32	s14, s13
90012582:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012586:	bf4a      	itet	mi
90012588:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
9001258c:	9602      	strpl	r6, [sp, #8]
9001258e:	ed8d 7a02 	vstrmi	s14, [sp, #8]
90012592:	ed95 7a08 	vldr	s14, [r5, #32]
90012596:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9001259a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001259e:	bfc8      	it	gt
900125a0:	2100      	movgt	r1, #0
900125a2:	5852      	ldr	r2, [r2, r1]
900125a4:	9902      	ldr	r1, [sp, #8]
900125a6:	ea4f 2b12 	mov.w	fp, r2, lsr #8
900125aa:	eb04 0141 	add.w	r1, r4, r1, lsl #1
900125ae:	0950      	lsrs	r0, r2, #5
900125b0:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
900125b4:	9103      	str	r1, [sp, #12]
900125b6:	f3c2 01c4 	ubfx	r1, r2, #3, #5
900125ba:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900125be:	f1bc 0f00 	cmp.w	ip, #0
900125c2:	d024      	beq.n	9001260e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
900125c4:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
900125c8:	d121      	bne.n	9001260e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
900125ca:	ea4b 0b00 	orr.w	fp, fp, r0
900125ce:	ea41 010b 	orr.w	r1, r1, fp
900125d2:	9a03      	ldr	r2, [sp, #12]
900125d4:	4294      	cmp	r4, r2
900125d6:	d255      	bcs.n	90012684 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
900125d8:	f824 1b02 	strh.w	r1, [r4], #2
900125dc:	e7f9      	b.n	900125d2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
900125de:	ee07 9a10 	vmov	s14, r9
900125e2:	edd0 7a06 	vldr	s15, [r0, #24]
900125e6:	edd0 6a05 	vldr	s13, [r0, #20]
900125ea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900125ee:	ee37 7a67 	vsub.f32	s14, s14, s15
900125f2:	eec7 7a26 	vdiv.f32	s15, s14, s13
900125f6:	ed90 7a08 	vldr	s14, [r0, #32]
900125fa:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
900125fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012602:	bf44      	itt	mi
90012604:	ed90 7a07 	vldrmi	s14, [r0, #28]
90012608:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
9001260c:	e79d      	b.n	9001254a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
9001260e:	0e12      	lsrs	r2, r2, #24
90012610:	f8df 8280 	ldr.w	r8, [pc, #640]	@ 90012894 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
90012614:	f04f 0eff 	mov.w	lr, #255	@ 0xff
90012618:	fb02 f20a 	mul.w	r2, r2, sl
9001261c:	f102 0c01 	add.w	ip, r2, #1
90012620:	eb0c 2222 	add.w	r2, ip, r2, asr #8
90012624:	1212      	asrs	r2, r2, #8
90012626:	4350      	muls	r0, r2
90012628:	4351      	muls	r1, r2
9001262a:	fb02 fb0b 	mul.w	fp, r2, fp
9001262e:	43d2      	mvns	r2, r2
90012630:	9004      	str	r0, [sp, #16]
90012632:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
90012636:	9105      	str	r1, [sp, #20]
90012638:	9903      	ldr	r1, [sp, #12]
9001263a:	428c      	cmp	r4, r1
9001263c:	d222      	bcs.n	90012684 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
9001263e:	8820      	ldrh	r0, [r4, #0]
90012640:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
90012644:	ea00 0c08 	and.w	ip, r0, r8
90012648:	460f      	mov	r7, r1
9001264a:	9904      	ldr	r1, [sp, #16]
9001264c:	fb02 bc0c 	mla	ip, r2, ip, fp
90012650:	fb02 1107 	mla	r1, r2, r7, r1
90012654:	fb9c fcfe 	sdiv	ip, ip, lr
90012658:	fb91 f1fe 	sdiv	r1, r1, lr
9001265c:	ea0c 0c08 	and.w	ip, ip, r8
90012660:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90012664:	ea4c 0101 	orr.w	r1, ip, r1
90012668:	f000 0c1f 	and.w	ip, r0, #31
9001266c:	9805      	ldr	r0, [sp, #20]
9001266e:	fb02 0c0c 	mla	ip, r2, ip, r0
90012672:	fb9c fcfe 	sdiv	ip, ip, lr
90012676:	f00c 0c1f 	and.w	ip, ip, #31
9001267a:	ea41 010c 	orr.w	r1, r1, ip
9001267e:	f824 1b02 	strh.w	r1, [r4], #2
90012682:	e7d9      	b.n	90012638 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
90012684:	9a02      	ldr	r2, [sp, #8]
90012686:	441a      	add	r2, r3
90012688:	4617      	mov	r7, r2
9001268a:	441e      	add	r6, r3
9001268c:	b236      	sxth	r6, r6
9001268e:	42be      	cmp	r6, r7
90012690:	f340 80f6 	ble.w	90012880 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90012694:	ed95 7a07 	vldr	s14, [r5, #28]
90012698:	ee06 7a90 	vmov	s13, r7
9001269c:	ee37 7a87 	vadd.f32	s14, s15, s14
900126a0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
900126a4:	eeb4 7ae6 	vcmpe.f32	s14, s13
900126a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900126ac:	f340 80b2 	ble.w	90012814 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x434>
900126b0:	ee06 6a10 	vmov	s12, r6
900126b4:	ee76 7ae7 	vsub.f32	s15, s13, s15
900126b8:	ed9f 8a74 	vldr	s16, [pc, #464]	@ 9001288c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4ac>
900126bc:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
900126c0:	7c2b      	ldrb	r3, [r5, #16]
900126c2:	eeb4 7ac6 	vcmpe.f32	s14, s12
900126c6:	ed9f 6a72 	vldr	s12, [pc, #456]	@ 90012890 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
900126ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900126ce:	bfd6      	itet	le
900126d0:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
900126d4:	46b0      	movgt	r8, r6
900126d6:	ee17 8a10 	vmovle	r8, s14
900126da:	ed95 7a08 	vldr	s14, [r5, #32]
900126de:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
900126e2:	eba8 0707 	sub.w	r7, r8, r7
900126e6:	eb04 0747 	add.w	r7, r4, r7, lsl #1
900126ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900126ee:	fe38 8a06 	vselgt.f32	s16, s16, s12
900126f2:	eea7 8a27 	vfma.f32	s16, s14, s15
900126f6:	b1db      	cbz	r3, 90012730 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x350>
900126f8:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
900126fc:	d118      	bne.n	90012730 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x350>
900126fe:	42bc      	cmp	r4, r7
90012700:	d262      	bcs.n	900127c8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3e8>
90012702:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90012706:	68eb      	ldr	r3, [r5, #12]
90012708:	4649      	mov	r1, r9
9001270a:	ee17 0a90 	vmov	r0, s15
9001270e:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
90012712:	b2d3      	uxtb	r3, r2
90012714:	9300      	str	r3, [sp, #0]
90012716:	f3c2 2307 	ubfx	r3, r2, #8, #8
9001271a:	f3c2 4207 	ubfx	r2, r2, #16, #8
9001271e:	f7ff fe13 	bl	90012348 <_ZN8touchgfxL10applyNoiseEiihhh>
90012722:	f824 0b02 	strh.w	r0, [r4], #2
90012726:	edd5 7a08 	vldr	s15, [r5, #32]
9001272a:	ee38 8a27 	vadd.f32	s16, s16, s15
9001272e:	e7e6      	b.n	900126fe <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x31e>
90012730:	f8df b160 	ldr.w	fp, [pc, #352]	@ 90012894 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
90012734:	f04f 09ff 	mov.w	r9, #255	@ 0xff
90012738:	42bc      	cmp	r4, r7
9001273a:	d245      	bcs.n	900127c8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3e8>
9001273c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90012740:	68eb      	ldr	r3, [r5, #12]
90012742:	f8b4 e000 	ldrh.w	lr, [r4]
90012746:	ee17 2a90 	vmov	r2, s15
9001274a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
9001274e:	0e13      	lsrs	r3, r2, #24
90012750:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
90012754:	fb03 f30a 	mul.w	r3, r3, sl
90012758:	b289      	uxth	r1, r1
9001275a:	1c58      	adds	r0, r3, #1
9001275c:	eb00 2023 	add.w	r0, r0, r3, asr #8
90012760:	ea0e 030b 	and.w	r3, lr, fp
90012764:	1200      	asrs	r0, r0, #8
90012766:	ea6f 0c00 	mvn.w	ip, r0
9001276a:	fa5f fc8c 	uxtb.w	ip, ip
9001276e:	fb0c f303 	mul.w	r3, ip, r3
90012772:	fb00 3101 	mla	r1, r0, r1, r3
90012776:	fb91 f1f9 	sdiv	r1, r1, r9
9001277a:	ea01 030b 	and.w	r3, r1, fp
9001277e:	9302      	str	r3, [sp, #8]
90012780:	0953      	lsrs	r3, r2, #5
90012782:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90012786:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001278a:	4619      	mov	r1, r3
9001278c:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
90012790:	f00e 0e1f 	and.w	lr, lr, #31
90012794:	fb0c f303 	mul.w	r3, ip, r3
90012798:	fb0c fc0e 	mul.w	ip, ip, lr
9001279c:	fb00 3301 	mla	r3, r0, r1, r3
900127a0:	9902      	ldr	r1, [sp, #8]
900127a2:	fb00 c002 	mla	r0, r0, r2, ip
900127a6:	fb93 f3f9 	sdiv	r3, r3, r9
900127aa:	fb90 f0f9 	sdiv	r0, r0, r9
900127ae:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900127b2:	f000 001f 	and.w	r0, r0, #31
900127b6:	4319      	orrs	r1, r3
900127b8:	4301      	orrs	r1, r0
900127ba:	f824 1b02 	strh.w	r1, [r4], #2
900127be:	edd5 7a08 	vldr	s15, [r5, #32]
900127c2:	ee38 8a27 	vadd.f32	s16, s16, s15
900127c6:	e7b7      	b.n	90012738 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x358>
900127c8:	4546      	cmp	r6, r8
900127ca:	dd59      	ble.n	90012880 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900127cc:	edd5 7a08 	vldr	s15, [r5, #32]
900127d0:	f640 73fc 	movw	r3, #4092	@ 0xffc
900127d4:	68ea      	ldr	r2, [r5, #12]
900127d6:	eba6 0608 	sub.w	r6, r6, r8
900127da:	eef5 7ac0 	vcmpe.f32	s15, #0.0
900127de:	7c29      	ldrb	r1, [r5, #16]
900127e0:	eb04 0646 	add.w	r6, r4, r6, lsl #1
900127e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900127e8:	bfd8      	it	le
900127ea:	2300      	movle	r3, #0
900127ec:	58d2      	ldr	r2, [r2, r3]
900127ee:	0a10      	lsrs	r0, r2, #8
900127f0:	f3c2 07c4 	ubfx	r7, r2, #3, #5
900127f4:	0953      	lsrs	r3, r2, #5
900127f6:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
900127fa:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900127fe:	b159      	cbz	r1, 90012818 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x438>
90012800:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90012804:	d108      	bne.n	90012818 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x438>
90012806:	4318      	orrs	r0, r3
90012808:	4338      	orrs	r0, r7
9001280a:	42b4      	cmp	r4, r6
9001280c:	d238      	bcs.n	90012880 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
9001280e:	f824 0b02 	strh.w	r0, [r4], #2
90012812:	e7fa      	b.n	9001280a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42a>
90012814:	46b8      	mov	r8, r7
90012816:	e7d9      	b.n	900127cc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ec>
90012818:	0e12      	lsrs	r2, r2, #24
9001281a:	f8df c078 	ldr.w	ip, [pc, #120]	@ 90012894 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
9001281e:	fb02 f10a 	mul.w	r1, r2, sl
90012822:	1c4a      	adds	r2, r1, #1
90012824:	eb02 2221 	add.w	r2, r2, r1, asr #8
90012828:	1212      	asrs	r2, r2, #8
9001282a:	fb02 f507 	mul.w	r5, r2, r7
9001282e:	27ff      	movs	r7, #255	@ 0xff
90012830:	4350      	muls	r0, r2
90012832:	4353      	muls	r3, r2
90012834:	43d2      	mvns	r2, r2
90012836:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
9001283a:	42b4      	cmp	r4, r6
9001283c:	d220      	bcs.n	90012880 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
9001283e:	f8b4 e000 	ldrh.w	lr, [r4]
90012842:	ea0e 010c 	and.w	r1, lr, ip
90012846:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
9001284a:	f00e 0e1f 	and.w	lr, lr, #31
9001284e:	fb02 0101 	mla	r1, r2, r1, r0
90012852:	fb02 3808 	mla	r8, r2, r8, r3
90012856:	fb02 5e0e 	mla	lr, r2, lr, r5
9001285a:	fb91 f1f7 	sdiv	r1, r1, r7
9001285e:	fb98 f8f7 	sdiv	r8, r8, r7
90012862:	fb9e fef7 	sdiv	lr, lr, r7
90012866:	ea01 010c 	and.w	r1, r1, ip
9001286a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001286e:	f00e 0e1f 	and.w	lr, lr, #31
90012872:	ea41 0108 	orr.w	r1, r1, r8
90012876:	ea41 010e 	orr.w	r1, r1, lr
9001287a:	f824 1b02 	strh.w	r1, [r4], #2
9001287e:	e7dc      	b.n	9001283a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x45a>
90012880:	b007      	add	sp, #28
90012882:	ecbd 8b02 	vpop	{d8}
90012886:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001288a:	bf00      	nop
9001288c:	00000000 	.word	0x00000000
90012890:	447ffffe 	.word	0x447ffffe
90012894:	fffff800 	.word	0xfffff800

90012898 <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
90012898:	4770      	bx	lr

9001289a <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
9001289a:	4770      	bx	lr

9001289c <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
9001289c:	b510      	push	{r4, lr}
9001289e:	4604      	mov	r4, r0
900128a0:	2124      	movs	r1, #36	@ 0x24
900128a2:	f017 f9e3 	bl	90029c6c <_ZdlPvj>
900128a6:	4620      	mov	r0, r4
900128a8:	bd10      	pop	{r4, pc}
	...

900128ac <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
900128ac:	094a      	lsrs	r2, r1, #5
900128ae:	4b06      	ldr	r3, [pc, #24]	@ (900128c8 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
900128b0:	60c1      	str	r1, [r0, #12]
900128b2:	ea03 2311 	and.w	r3, r3, r1, lsr #8
900128b6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900128ba:	f3c1 01c4 	ubfx	r1, r1, #3, #5
900128be:	4313      	orrs	r3, r2
900128c0:	4319      	orrs	r1, r3
900128c2:	8201      	strh	r1, [r0, #16]
900128c4:	4770      	bx	lr
900128c6:	bf00      	nop
900128c8:	fffff800 	.word	0xfffff800

900128cc <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
900128cc:	f1a0 0008 	sub.w	r0, r0, #8
900128d0:	e7ec      	b.n	900128ac <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
900128d2:	bf00      	nop

900128d4 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
900128d4:	b508      	push	{r3, lr}
900128d6:	4b05      	ldr	r3, [pc, #20]	@ (900128ec <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
900128d8:	6818      	ldr	r0, [r3, #0]
900128da:	6803      	ldr	r3, [r0, #0]
900128dc:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
900128e0:	4798      	blx	r3
900128e2:	1e43      	subs	r3, r0, #1
900128e4:	4258      	negs	r0, r3
900128e6:	4158      	adcs	r0, r3
900128e8:	bd08      	pop	{r3, pc}
900128ea:	bf00      	nop
900128ec:	24021864 	.word	0x24021864

900128f0 <_ZN8touchgfx13PainterRGB565D1Ev>:
900128f0:	4770      	bx	lr

900128f2 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
900128f2:	3808      	subs	r0, #8
900128f4:	4770      	bx	lr

900128f6 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
900128f6:	b430      	push	{r4, r5}
900128f8:	eb01 0442 	add.w	r4, r1, r2, lsl #1
900128fc:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
90012900:	8a02      	ldrh	r2, [r0, #16]
90012902:	f89d 3010 	ldrb.w	r3, [sp, #16]
90012906:	4629      	mov	r1, r5
90012908:	9202      	str	r2, [sp, #8]
9001290a:	68c2      	ldr	r2, [r0, #12]
9001290c:	4620      	mov	r0, r4
9001290e:	bc30      	pop	{r4, r5}
90012910:	f7f0 b834 	b.w	9000297c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

90012914 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
90012914:	f7f0 b80e 	b.w	90002934 <_ZN8touchgfx5paint8tearDownEv>

90012918 <_ZN8touchgfx13PainterRGB565D0Ev>:
90012918:	b510      	push	{r4, lr}
9001291a:	4604      	mov	r4, r0
9001291c:	2114      	movs	r1, #20
9001291e:	f017 f9a5 	bl	90029c6c <_ZdlPvj>
90012922:	4620      	mov	r0, r4
90012924:	bd10      	pop	{r4, pc}

90012926 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
90012926:	f1a0 0008 	sub.w	r0, r0, #8
9001292a:	e7f5      	b.n	90012918 <_ZN8touchgfx13PainterRGB565D0Ev>

9001292c <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
9001292c:	2300      	movs	r3, #0
9001292e:	84c3      	strh	r3, [r0, #38]	@ 0x26
90012930:	8503      	strh	r3, [r0, #40]	@ 0x28
90012932:	8543      	strh	r3, [r0, #42]	@ 0x2a
90012934:	8583      	strh	r3, [r0, #44]	@ 0x2c
90012936:	6980      	ldr	r0, [r0, #24]
90012938:	b110      	cbz	r0, 90012940 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
9001293a:	6803      	ldr	r3, [r0, #0]
9001293c:	691b      	ldr	r3, [r3, #16]
9001293e:	4718      	bx	r3
90012940:	4770      	bx	lr

90012942 <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
90012942:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
90012946:	4770      	bx	lr

90012948 <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
90012948:	b538      	push	{r3, r4, r5, lr}
9001294a:	0e0b      	lsrs	r3, r1, #24
9001294c:	4604      	mov	r4, r0
9001294e:	460d      	mov	r5, r1
90012950:	7783      	strb	r3, [r0, #30]
90012952:	6803      	ldr	r3, [r0, #0]
90012954:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90012956:	4798      	blx	r3
90012958:	6803      	ldr	r3, [r0, #0]
9001295a:	4629      	mov	r1, r5
9001295c:	689b      	ldr	r3, [r3, #8]
9001295e:	4798      	blx	r3
90012960:	6823      	ldr	r3, [r4, #0]
90012962:	4620      	mov	r0, r4
90012964:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90012966:	4798      	blx	r3
90012968:	61a0      	str	r0, [r4, #24]
9001296a:	bd38      	pop	{r3, r4, r5, pc}

9001296c <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
9001296c:	7741      	strb	r1, [r0, #29]
9001296e:	4770      	bx	lr

90012970 <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
90012970:	b530      	push	{r4, r5, lr}
90012972:	460d      	mov	r5, r1
90012974:	f100 0434 	add.w	r4, r0, #52	@ 0x34
90012978:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
9001297a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
9001297c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
9001297e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90012980:	682b      	ldr	r3, [r5, #0]
90012982:	6023      	str	r3, [r4, #0]
90012984:	bd30      	pop	{r4, r5, pc}

90012986 <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
90012986:	b538      	push	{r3, r4, r5, lr}
90012988:	4604      	mov	r4, r0
9001298a:	1d03      	adds	r3, r0, #4
9001298c:	6808      	ldr	r0, [r1, #0]
9001298e:	2500      	movs	r5, #0
90012990:	6849      	ldr	r1, [r1, #4]
90012992:	c303      	stmia	r3!, {r0, r1}
90012994:	6813      	ldr	r3, [r2, #0]
90012996:	f104 0034 	add.w	r0, r4, #52	@ 0x34
9001299a:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
9001299e:	6853      	ldr	r3, [r2, #4]
900129a0:	61a5      	str	r5, [r4, #24]
900129a2:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
900129a6:	f006 f877 	bl	90018a98 <_ZN8touchgfx9Matrix3x35resetEv>
900129aa:	23ff      	movs	r3, #255	@ 0xff
900129ac:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
900129b0:	7763      	strb	r3, [r4, #29]
900129b2:	77a3      	strb	r3, [r4, #30]
900129b4:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
900129b8:	6323      	str	r3, [r4, #48]	@ 0x30
900129ba:	2301      	movs	r3, #1
900129bc:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
900129c0:	bd38      	pop	{r3, r4, r5, pc}
	...

900129c4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
900129c4:	ee70 7a41 	vsub.f32	s15, s0, s2
900129c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900129cc:	eef5 7a40 	vcmp.f32	s15, #0.0
900129d0:	4605      	mov	r5, r0
900129d2:	ed2d 8b0a 	vpush	{d8-d12}
900129d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900129da:	b087      	sub	sp, #28
900129dc:	eef0 9a40 	vmov.f32	s19, s0
900129e0:	6802      	ldr	r2, [r0, #0]
900129e2:	eeb0 aa60 	vmov.f32	s20, s1
900129e6:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
900129ea:	eeb0 9a41 	vmov.f32	s18, s2
900129ee:	9f19      	ldr	r7, [sp, #100]	@ 0x64
900129f0:	eef0 8a61 	vmov.f32	s17, s3
900129f4:	eeb0 ca42 	vmov.f32	s24, s4
900129f8:	eef0 ca62 	vmov.f32	s25, s5
900129fc:	d112      	bne.n	90012a24 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
900129fe:	ee70 7ae1 	vsub.f32	s15, s1, s3
90012a02:	eef5 7a40 	vcmp.f32	s15, #0.0
90012a06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012a0a:	d10b      	bne.n	90012a24 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
90012a0c:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
90012a10:	6a92      	ldr	r2, [r2, #40]	@ 0x28
90012a12:	3901      	subs	r1, #1
90012a14:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
90012a18:	b007      	add	sp, #28
90012a1a:	ecbd 8b0a 	vpop	{d8-d12}
90012a1e:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
90012a22:	4710      	bx	r2
90012a24:	23ff      	movs	r3, #255	@ 0xff
90012a26:	4628      	mov	r0, r5
90012a28:	f105 0834 	add.w	r8, r5, #52	@ 0x34
90012a2c:	f8df 92c4 	ldr.w	r9, [pc, #708]	@ 90012cf4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x330>
90012a30:	77ab      	strb	r3, [r5, #30]
90012a32:	6b93      	ldr	r3, [r2, #56]	@ 0x38
90012a34:	4798      	blx	r3
90012a36:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
90012a3a:	eeb0 0a69 	vmov.f32	s0, s19
90012a3e:	4604      	mov	r4, r0
90012a40:	80c3      	strh	r3, [r0, #6]
90012a42:	eef0 0a4a 	vmov.f32	s1, s20
90012a46:	4640      	mov	r0, r8
90012a48:	f006 f8d5 	bl	90018bf6 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012a4c:	eeb0 ba40 	vmov.f32	s22, s0
90012a50:	ed8d 0a00 	vstr	s0, [sp]
90012a54:	eeb0 0a49 	vmov.f32	s0, s18
90012a58:	eef0 ba60 	vmov.f32	s23, s1
90012a5c:	edcd 0a01 	vstr	s1, [sp, #4]
90012a60:	4640      	mov	r0, r8
90012a62:	eef0 0a68 	vmov.f32	s1, s17
90012a66:	f006 f8c6 	bl	90018bf6 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012a6a:	eeb4 ba40 	vcmp.f32	s22, s0
90012a6e:	eeb0 8a40 	vmov.f32	s16, s0
90012a72:	ed8d 0a02 	vstr	s0, [sp, #8]
90012a76:	eef0 aa60 	vmov.f32	s21, s1
90012a7a:	edcd 0a03 	vstr	s1, [sp, #12]
90012a7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012a82:	eef4 ba60 	vcmp.f32	s23, s1
90012a86:	bf0c      	ite	eq
90012a88:	2301      	moveq	r3, #1
90012a8a:	2300      	movne	r3, #0
90012a8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012a90:	eeb4 ba40 	vcmp.f32	s22, s0
90012a94:	7463      	strb	r3, [r4, #17]
90012a96:	bf0c      	ite	eq
90012a98:	2301      	moveq	r3, #1
90012a9a:	2300      	movne	r3, #0
90012a9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012aa0:	74a3      	strb	r3, [r4, #18]
90012aa2:	d031      	beq.n	90012b08 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x144>
90012aa4:	eef4 ba60 	vcmp.f32	s23, s1
90012aa8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012aac:	d02c      	beq.n	90012b08 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x144>
90012aae:	ee39 9a69 	vsub.f32	s18, s18, s19
90012ab2:	4640      	mov	r0, r8
90012ab4:	ee78 8aca 	vsub.f32	s17, s17, s20
90012ab8:	eef0 0a4a 	vmov.f32	s1, s20
90012abc:	ee89 7a0c 	vdiv.f32	s14, s18, s24
90012ac0:	eec8 7aac 	vdiv.f32	s15, s17, s25
90012ac4:	eeb0 0a69 	vmov.f32	s0, s19
90012ac8:	eeec 0a87 	vfma.f32	s1, s25, s14
90012acc:	eea7 0acc 	vfms.f32	s0, s15, s24
90012ad0:	f006 f891 	bl	90018bf6 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012ad4:	f899 3000 	ldrb.w	r3, [r9]
90012ad8:	edcd 0a05 	vstr	s1, [sp, #20]
90012adc:	ee70 0aeb 	vsub.f32	s1, s1, s23
90012ae0:	2b01      	cmp	r3, #1
90012ae2:	bf08      	it	eq
90012ae4:	eef1 7a60 	vnegeq.f32	s15, s1
90012ae8:	ed8d 0a04 	vstr	s0, [sp, #16]
90012aec:	ee30 0a4b 	vsub.f32	s0, s0, s22
90012af0:	bf04      	itt	eq
90012af2:	eef0 0a40 	vmoveq.f32	s1, s0
90012af6:	eeb0 0a67 	vmoveq.f32	s0, s15
90012afa:	eeb5 0a40 	vcmp.f32	s0, #0.0
90012afe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012b02:	d135      	bne.n	90012b70 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ac>
90012b04:	2301      	movs	r3, #1
90012b06:	74a3      	strb	r3, [r4, #18]
90012b08:	f899 2000 	ldrb.w	r2, [r9]
90012b0c:	7c63      	ldrb	r3, [r4, #17]
90012b0e:	2a01      	cmp	r2, #1
90012b10:	f040 80a3 	bne.w	90012c5a <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x296>
90012b14:	2b00      	cmp	r3, #0
90012b16:	d073      	beq.n	90012c00 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x23c>
90012b18:	ee3a 7aeb 	vsub.f32	s14, s21, s23
90012b1c:	eddf 6a73 	vldr	s13, [pc, #460]	@ 90012cec <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
90012b20:	eef4 baea 	vcmpe.f32	s23, s21
90012b24:	eec6 7a87 	vdiv.f32	s15, s13, s14
90012b28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012b2c:	edc4 7a08 	vstr	s15, [r4, #32]
90012b30:	eefd 7aea 	vcvt.s32.f32	s15, s21
90012b34:	ee17 3a90 	vmov	r3, s15
90012b38:	eefd 7aeb 	vcvt.s32.f32	s15, s23
90012b3c:	b21a      	sxth	r2, r3
90012b3e:	ee17 3a90 	vmov	r3, s15
90012b42:	bf48      	it	mi
90012b44:	8162      	strhmi	r2, [r4, #10]
90012b46:	b21b      	sxth	r3, r3
90012b48:	bf56      	itet	pl
90012b4a:	8122      	strhpl	r2, [r4, #8]
90012b4c:	8123      	strhmi	r3, [r4, #8]
90012b4e:	8163      	strhpl	r3, [r4, #10]
90012b50:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90012b54:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90012b58:	1a9b      	subs	r3, r3, r2
90012b5a:	ee07 3a90 	vmov	s15, r3
90012b5e:	2300      	movs	r3, #0
90012b60:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90012b64:	7463      	strb	r3, [r4, #17]
90012b66:	2301      	movs	r3, #1
90012b68:	edc4 7a07 	vstr	s15, [r4, #28]
90012b6c:	74a3      	strb	r3, [r4, #18]
90012b6e:	e03f      	b.n	90012bf0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90012b70:	ee80 7a80 	vdiv.f32	s14, s1, s0
90012b74:	eeb5 7a40 	vcmp.f32	s14, #0.0
90012b78:	ed84 7a05 	vstr	s14, [r4, #20]
90012b7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012b80:	d102      	bne.n	90012b88 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1c4>
90012b82:	2301      	movs	r3, #1
90012b84:	7463      	strb	r3, [r4, #17]
90012b86:	e7bf      	b.n	90012b08 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x144>
90012b88:	2b01      	cmp	r3, #1
90012b8a:	ee38 8a4b 	vsub.f32	s16, s16, s22
90012b8e:	ee7a aaeb 	vsub.f32	s21, s21, s23
90012b92:	bf0b      	itete	eq
90012b94:	f9b4 2006 	ldrsheq.w	r2, [r4, #6]
90012b98:	eef0 7a6b 	vmovne.f32	s15, s23
90012b9c:	ee07 2a90 	vmoveq	s15, r2
90012ba0:	eeeb 7a47 	vfmsne.f32	s15, s22, s14
90012ba4:	bf02      	ittt	eq
90012ba6:	eef8 7ae7 	vcvteq.f32.s32	s15, s15
90012baa:	ee77 7acb 	vsubeq.f32	s15, s15, s22
90012bae:	eeeb 7ac7 	vfmseq.f32	s15, s23, s14
90012bb2:	2b01      	cmp	r3, #1
90012bb4:	edc4 7a06 	vstr	s15, [r4, #24]
90012bb8:	bf02      	ittt	eq
90012bba:	eef1 7a48 	vnegeq.f32	s15, s16
90012bbe:	eeb0 8a6a 	vmoveq.f32	s16, s21
90012bc2:	eef0 aa67 	vmoveq.f32	s21, s15
90012bc6:	eeca 7a87 	vdiv.f32	s15, s21, s14
90012bca:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 90012cf0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x32c>
90012bce:	ee38 8a67 	vsub.f32	s16, s16, s15
90012bd2:	eec7 7a08 	vdiv.f32	s15, s14, s16
90012bd6:	ed84 8a07 	vstr	s16, [r4, #28]
90012bda:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
90012bde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012be2:	edc4 7a08 	vstr	s15, [r4, #32]
90012be6:	d503      	bpl.n	90012bf0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90012be8:	eeb1 8a48 	vneg.f32	s16, s16
90012bec:	ed84 8a07 	vstr	s16, [r4, #28]
90012bf0:	60e7      	str	r7, [r4, #12]
90012bf2:	7426      	strb	r6, [r4, #16]
90012bf4:	61ac      	str	r4, [r5, #24]
90012bf6:	b007      	add	sp, #28
90012bf8:	ecbd 8b0a 	vpop	{d8-d12}
90012bfc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90012c00:	7ca3      	ldrb	r3, [r4, #18]
90012c02:	2b00      	cmp	r3, #0
90012c04:	d0f4      	beq.n	90012bf0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90012c06:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90012c0a:	eddf 6a38 	vldr	s13, [pc, #224]	@ 90012cec <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
90012c0e:	ee00 3a10 	vmov	s0, r3
90012c12:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
90012c16:	ee30 8a48 	vsub.f32	s16, s0, s16
90012c1a:	ee30 0a4b 	vsub.f32	s0, s0, s22
90012c1e:	ee38 7a40 	vsub.f32	s14, s16, s0
90012c22:	eeb4 8ac0 	vcmpe.f32	s16, s0
90012c26:	eec6 7a87 	vdiv.f32	s15, s13, s14
90012c2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012c2e:	edc4 7a08 	vstr	s15, [r4, #32]
90012c32:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90012c36:	ee17 3a90 	vmov	r3, s15
90012c3a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
90012c3e:	b21a      	sxth	r2, r3
90012c40:	ee17 3a90 	vmov	r3, s15
90012c44:	bfc8      	it	gt
90012c46:	8162      	strhgt	r2, [r4, #10]
90012c48:	b21b      	sxth	r3, r3
90012c4a:	bfd6      	itet	le
90012c4c:	8122      	strhle	r2, [r4, #8]
90012c4e:	8123      	strhgt	r3, [r4, #8]
90012c50:	8163      	strhle	r3, [r4, #10]
90012c52:	2301      	movs	r3, #1
90012c54:	7463      	strb	r3, [r4, #17]
90012c56:	2300      	movs	r3, #0
90012c58:	e788      	b.n	90012b6c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a8>
90012c5a:	b1e3      	cbz	r3, 90012c96 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2d2>
90012c5c:	ee3a 7aeb 	vsub.f32	s14, s21, s23
90012c60:	eddf 6a22 	vldr	s13, [pc, #136]	@ 90012cec <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
90012c64:	eef4 baea 	vcmpe.f32	s23, s21
90012c68:	eec6 7a87 	vdiv.f32	s15, s13, s14
90012c6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012c70:	edc4 7a08 	vstr	s15, [r4, #32]
90012c74:	eefd 7aea 	vcvt.s32.f32	s15, s21
90012c78:	ee17 3a90 	vmov	r3, s15
90012c7c:	eefd 7aeb 	vcvt.s32.f32	s15, s23
90012c80:	b21a      	sxth	r2, r3
90012c82:	ee17 3a90 	vmov	r3, s15
90012c86:	bf48      	it	mi
90012c88:	8162      	strhmi	r2, [r4, #10]
90012c8a:	b21b      	sxth	r3, r3
90012c8c:	bf56      	itet	pl
90012c8e:	8122      	strhpl	r2, [r4, #8]
90012c90:	8123      	strhmi	r3, [r4, #8]
90012c92:	8163      	strhpl	r3, [r4, #10]
90012c94:	e7ac      	b.n	90012bf0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90012c96:	7ca3      	ldrb	r3, [r4, #18]
90012c98:	2b00      	cmp	r3, #0
90012c9a:	d0a9      	beq.n	90012bf0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90012c9c:	ee38 7a4b 	vsub.f32	s14, s16, s22
90012ca0:	eddf 6a12 	vldr	s13, [pc, #72]	@ 90012cec <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
90012ca4:	eeb4 bac8 	vcmpe.f32	s22, s16
90012ca8:	eec6 7a87 	vdiv.f32	s15, s13, s14
90012cac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012cb0:	edc4 7a08 	vstr	s15, [r4, #32]
90012cb4:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90012cb8:	ee17 3a90 	vmov	r3, s15
90012cbc:	eefd 7acb 	vcvt.s32.f32	s15, s22
90012cc0:	b21a      	sxth	r2, r3
90012cc2:	ee17 3a90 	vmov	r3, s15
90012cc6:	bf48      	it	mi
90012cc8:	8162      	strhmi	r2, [r4, #10]
90012cca:	b21b      	sxth	r3, r3
90012ccc:	bf56      	itet	pl
90012cce:	8122      	strhpl	r2, [r4, #8]
90012cd0:	8123      	strhmi	r3, [r4, #8]
90012cd2:	8163      	strhpl	r3, [r4, #10]
90012cd4:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90012cd8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90012cdc:	1a9b      	subs	r3, r3, r2
90012cde:	ee07 3a90 	vmov	s15, r3
90012ce2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90012ce6:	edc4 7a07 	vstr	s15, [r4, #28]
90012cea:	e781      	b.n	90012bf0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90012cec:	447ffffe 	.word	0x447ffffe
90012cf0:	44800000 	.word	0x44800000
90012cf4:	2402185c 	.word	0x2402185c

90012cf8 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
90012cf8:	b510      	push	{r4, lr}
90012cfa:	ed2d 8b02 	vpush	{d8}
90012cfe:	eef0 8a62 	vmov.f32	s17, s5
90012d02:	2100      	movs	r1, #0
90012d04:	4604      	mov	r4, r0
90012d06:	eeb0 8a42 	vmov.f32	s16, s4
90012d0a:	f016 fd21 	bl	90029750 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
90012d0e:	eef0 7a68 	vmov.f32	s15, s17
90012d12:	6823      	ldr	r3, [r4, #0]
90012d14:	4620      	mov	r0, r4
90012d16:	689b      	ldr	r3, [r3, #8]
90012d18:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012d1c:	ee17 2a90 	vmov	r2, s15
90012d20:	eef0 7a48 	vmov.f32	s15, s16
90012d24:	ecbd 8b02 	vpop	{d8}
90012d28:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012d2c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90012d30:	ee17 1a90 	vmov	r1, s15
90012d34:	4718      	bx	r3

90012d36 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
90012d36:	b510      	push	{r4, lr}
90012d38:	ed2d 8b02 	vpush	{d8}
90012d3c:	eef0 8a63 	vmov.f32	s17, s7
90012d40:	2100      	movs	r1, #0
90012d42:	4604      	mov	r4, r0
90012d44:	eeb0 8a43 	vmov.f32	s16, s6
90012d48:	f016 fdc4 	bl	900298d4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
90012d4c:	eef0 7a68 	vmov.f32	s15, s17
90012d50:	6823      	ldr	r3, [r4, #0]
90012d52:	4620      	mov	r0, r4
90012d54:	689b      	ldr	r3, [r3, #8]
90012d56:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012d5a:	ee17 2a90 	vmov	r2, s15
90012d5e:	eef0 7a48 	vmov.f32	s15, s16
90012d62:	ecbd 8b02 	vpop	{d8}
90012d66:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012d6a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90012d6e:	ee17 1a90 	vmov	r1, s15
90012d72:	4718      	bx	r3

90012d74 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
90012d74:	b513      	push	{r0, r1, r4, lr}
90012d76:	4604      	mov	r4, r0
90012d78:	6f40      	ldr	r0, [r0, #116]	@ 0x74
90012d7a:	f005 ff3c 	bl	90018bf6 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012d7e:	eef0 7a60 	vmov.f32	s15, s1
90012d82:	4620      	mov	r0, r4
90012d84:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012d88:	ee17 2a90 	vmov	r2, s15
90012d8c:	eef0 7a40 	vmov.f32	s15, s0
90012d90:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012d94:	ee17 1a90 	vmov	r1, s15
90012d98:	b002      	add	sp, #8
90012d9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90012d9e:	f016 bc31 	b.w	90029604 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

90012da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
90012da2:	b513      	push	{r0, r1, r4, lr}
90012da4:	4604      	mov	r4, r0
90012da6:	6f40      	ldr	r0, [r0, #116]	@ 0x74
90012da8:	f005 ff25 	bl	90018bf6 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012dac:	eef0 7a60 	vmov.f32	s15, s1
90012db0:	4620      	mov	r0, r4
90012db2:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012db6:	ee17 2a90 	vmov	r2, s15
90012dba:	eef0 7a40 	vmov.f32	s15, s0
90012dbe:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012dc2:	ee17 1a90 	vmov	r1, s15
90012dc6:	b002      	add	sp, #8
90012dc8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90012dcc:	f016 bc67 	b.w	9002969e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

90012dd0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
90012dd0:	b5f0      	push	{r4, r5, r6, r7, lr}
90012dd2:	2400      	movs	r4, #0
90012dd4:	9f07      	ldr	r7, [sp, #28]
90012dd6:	f04f 0e01 	mov.w	lr, #1
90012dda:	4626      	mov	r6, r4
90012ddc:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
90012de0:	4463      	add	r3, ip
90012de2:	4563      	cmp	r3, ip
90012de4:	d02d      	beq.n	90012e42 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
90012de6:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
90012dea:	2d06      	cmp	r5, #6
90012dec:	d8f9      	bhi.n	90012de2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90012dee:	fa0e f505 	lsl.w	r5, lr, r5
90012df2:	f015 0f66 	tst.w	r5, #102	@ 0x66
90012df6:	d10d      	bne.n	90012e14 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
90012df8:	f015 0f10 	tst.w	r5, #16
90012dfc:	d117      	bne.n	90012e2e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
90012dfe:	072d      	lsls	r5, r5, #28
90012e00:	d5ef      	bpl.n	90012de2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90012e02:	3801      	subs	r0, #1
90012e04:	b91e      	cbnz	r6, 90012e0e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
90012e06:	eb07 0580 	add.w	r5, r7, r0, lsl #2
90012e0a:	682d      	ldr	r5, [r5, #0]
90012e0c:	600d      	str	r5, [r1, #0]
90012e0e:	b96c      	cbnz	r4, 90012e2c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90012e10:	2601      	movs	r6, #1
90012e12:	e7e6      	b.n	90012de2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90012e14:	b926      	cbnz	r6, 90012e20 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
90012e16:	eb07 0380 	add.w	r3, r7, r0, lsl #2
90012e1a:	f853 3c08 	ldr.w	r3, [r3, #-8]
90012e1e:	600b      	str	r3, [r1, #0]
90012e20:	b924      	cbnz	r4, 90012e2c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90012e22:	eb07 0080 	add.w	r0, r7, r0, lsl #2
90012e26:	f850 3c04 	ldr.w	r3, [r0, #-4]
90012e2a:	6013      	str	r3, [r2, #0]
90012e2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
90012e2e:	3801      	subs	r0, #1
90012e30:	b91c      	cbnz	r4, 90012e3a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
90012e32:	eb07 0480 	add.w	r4, r7, r0, lsl #2
90012e36:	6824      	ldr	r4, [r4, #0]
90012e38:	6014      	str	r4, [r2, #0]
90012e3a:	2e00      	cmp	r6, #0
90012e3c:	d1f6      	bne.n	90012e2c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90012e3e:	2401      	movs	r4, #1
90012e40:	e7cf      	b.n	90012de2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90012e42:	b90e      	cbnz	r6, 90012e48 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
90012e44:	2300      	movs	r3, #0
90012e46:	600b      	str	r3, [r1, #0]
90012e48:	2c00      	cmp	r4, #0
90012e4a:	d1ef      	bne.n	90012e2c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90012e4c:	2300      	movs	r3, #0
90012e4e:	e7ec      	b.n	90012e2a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

90012e50 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
90012e50:	b538      	push	{r3, r4, r5, lr}
90012e52:	ed2d 8b0a 	vpush	{d8-d12}
90012e56:	eef0 ba40 	vmov.f32	s23, s0
90012e5a:	4604      	mov	r4, r0
90012e5c:	eeb0 ca60 	vmov.f32	s24, s1
90012e60:	460d      	mov	r5, r1
90012e62:	eef0 aa41 	vmov.f32	s21, s2
90012e66:	eeb0 ba61 	vmov.f32	s22, s3
90012e6a:	eeb0 9a42 	vmov.f32	s18, s4
90012e6e:	eef0 9a62 	vmov.f32	s19, s5
90012e72:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
90012e76:	ee7b 8a29 	vadd.f32	s17, s22, s19
90012e7a:	ee3a 8a89 	vadd.f32	s16, s21, s18
90012e7e:	ee68 8a8a 	vmul.f32	s17, s17, s20
90012e82:	ee28 8a0a 	vmul.f32	s16, s16, s20
90012e86:	ee3c 0a68 	vsub.f32	s0, s24, s17
90012e8a:	ee7b 7ac8 	vsub.f32	s15, s23, s16
90012e8e:	ee20 0a00 	vmul.f32	s0, s0, s0
90012e92:	eea7 0aa7 	vfma.f32	s0, s15, s15
90012e96:	f016 ff13 	bl	90029cc0 <sqrtf>
90012e9a:	eeb5 0a40 	vcmp.f32	s0, #0.0
90012e9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012ea2:	d12e      	bne.n	90012f02 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
90012ea4:	ee79 7a6a 	vsub.f32	s15, s18, s21
90012ea8:	ee39 7acb 	vsub.f32	s14, s19, s22
90012eac:	eeb0 8a6a 	vmov.f32	s16, s21
90012eb0:	eef0 8a4b 	vmov.f32	s17, s22
90012eb4:	eea7 8a8a 	vfma.f32	s16, s15, s20
90012eb8:	eee7 8a0a 	vfma.f32	s17, s14, s20
90012ebc:	eea7 8a0a 	vfma.f32	s16, s14, s20
90012ec0:	eee7 8aca 	vfms.f32	s17, s15, s20
90012ec4:	2d02      	cmp	r5, #2
90012ec6:	dc2f      	bgt.n	90012f28 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
90012ec8:	3501      	adds	r5, #1
90012eca:	eef0 1a4b 	vmov.f32	s3, s22
90012ece:	eeb0 1a6a 	vmov.f32	s2, s21
90012ed2:	4620      	mov	r0, r4
90012ed4:	4629      	mov	r1, r5
90012ed6:	eef0 2a68 	vmov.f32	s5, s17
90012eda:	eeb0 2a48 	vmov.f32	s4, s16
90012ede:	eef0 0a4c 	vmov.f32	s1, s24
90012ee2:	eeb0 0a6b 	vmov.f32	s0, s23
90012ee6:	f7ff ffb3 	bl	90012e50 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
90012eea:	eef0 0a68 	vmov.f32	s1, s17
90012eee:	eeb0 0a48 	vmov.f32	s0, s16
90012ef2:	4620      	mov	r0, r4
90012ef4:	f7ff ff55 	bl	90012da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012ef8:	eeb0 ba68 	vmov.f32	s22, s17
90012efc:	eef0 aa48 	vmov.f32	s21, s16
90012f00:	e7b9      	b.n	90012e76 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
90012f02:	ee38 8a6b 	vsub.f32	s16, s16, s23
90012f06:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
90012f0a:	ee78 8acc 	vsub.f32	s17, s17, s24
90012f0e:	ee28 7a27 	vmul.f32	s14, s16, s15
90012f12:	ee68 7aa7 	vmul.f32	s15, s17, s15
90012f16:	ee87 8a00 	vdiv.f32	s16, s14, s0
90012f1a:	eec7 8a80 	vdiv.f32	s17, s15, s0
90012f1e:	ee3b 8a88 	vadd.f32	s16, s23, s16
90012f22:	ee7c 8a28 	vadd.f32	s17, s24, s17
90012f26:	e7cd      	b.n	90012ec4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
90012f28:	eef0 0a68 	vmov.f32	s1, s17
90012f2c:	4620      	mov	r0, r4
90012f2e:	eeb0 0a48 	vmov.f32	s0, s16
90012f32:	f7ff ff36 	bl	90012da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012f36:	ecbd 8b0a 	vpop	{d8-d12}
90012f3a:	bd38      	pop	{r3, r4, r5, pc}

90012f3c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
90012f3c:	b510      	push	{r4, lr}
90012f3e:	ed2d 8b0a 	vpush	{d8-d12}
90012f42:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
90012f46:	4604      	mov	r4, r0
90012f48:	eeb0 ca40 	vmov.f32	s24, s0
90012f4c:	2b02      	cmp	r3, #2
90012f4e:	eeb0 9a60 	vmov.f32	s18, s1
90012f52:	eef0 9a41 	vmov.f32	s19, s2
90012f56:	eef0 8a61 	vmov.f32	s17, s3
90012f5a:	eeb0 ba42 	vmov.f32	s22, s4
90012f5e:	eef0 ba62 	vmov.f32	s23, s5
90012f62:	eeb0 aa43 	vmov.f32	s20, s6
90012f66:	eef0 aa63 	vmov.f32	s21, s7
90012f6a:	eeb0 8a44 	vmov.f32	s16, s8
90012f6e:	eef0 ca64 	vmov.f32	s25, s9
90012f72:	d12c      	bne.n	90012fce <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
90012f74:	eef0 0a62 	vmov.f32	s1, s5
90012f78:	eeb0 0a42 	vmov.f32	s0, s4
90012f7c:	f7ff ff11 	bl	90012da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012f80:	ee79 9acb 	vsub.f32	s19, s19, s22
90012f84:	ee7a caec 	vsub.f32	s25, s21, s25
90012f88:	ee78 8aeb 	vsub.f32	s17, s17, s23
90012f8c:	ee3a 8a48 	vsub.f32	s16, s20, s16
90012f90:	ee69 9aac 	vmul.f32	s19, s19, s25
90012f94:	ee28 8a88 	vmul.f32	s16, s17, s16
90012f98:	eef4 9ac8 	vcmpe.f32	s19, s16
90012f9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012fa0:	db0f      	blt.n	90012fc2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
90012fa2:	2101      	movs	r1, #1
90012fa4:	eef0 2a6a 	vmov.f32	s5, s21
90012fa8:	eeb0 2a4a 	vmov.f32	s4, s20
90012fac:	4620      	mov	r0, r4
90012fae:	eef0 1a6b 	vmov.f32	s3, s23
90012fb2:	eeb0 1a4b 	vmov.f32	s2, s22
90012fb6:	eef0 0a49 	vmov.f32	s1, s18
90012fba:	eeb0 0a4c 	vmov.f32	s0, s24
90012fbe:	f7ff ff47 	bl	90012e50 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
90012fc2:	eef0 0a6a 	vmov.f32	s1, s21
90012fc6:	4620      	mov	r0, r4
90012fc8:	eeb0 0a4a 	vmov.f32	s0, s20
90012fcc:	e035      	b.n	9001303a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
90012fce:	2b01      	cmp	r3, #1
90012fd0:	d138      	bne.n	90013044 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
90012fd2:	ee31 4ae2 	vsub.f32	s8, s3, s5
90012fd6:	ee33 6a48 	vsub.f32	s12, s6, s16
90012fda:	ee71 7a42 	vsub.f32	s15, s2, s4
90012fde:	ee73 6ae4 	vsub.f32	s13, s7, s9
90012fe2:	ee26 7a44 	vnmul.f32	s14, s12, s8
90012fe6:	eea7 7aa6 	vfma.f32	s14, s15, s13
90012fea:	eeb5 7a40 	vcmp.f32	s14, #0.0
90012fee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012ff2:	d027      	beq.n	90013044 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
90012ff4:	ee28 8a63 	vnmul.f32	s16, s16, s7
90012ff8:	ee61 8ac2 	vnmul.f32	s17, s3, s4
90012ffc:	eea4 8a83 	vfma.f32	s16, s9, s6
90013000:	eee1 8a22 	vfma.f32	s17, s2, s5
90013004:	ee68 7a67 	vnmul.f32	s15, s16, s15
90013008:	ee28 8a44 	vnmul.f32	s16, s16, s8
9001300c:	eee6 7a28 	vfma.f32	s15, s12, s17
90013010:	eea6 8aa8 	vfma.f32	s16, s13, s17
90013014:	ee87 0a87 	vdiv.f32	s0, s15, s14
90013018:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
9001301c:	eec8 0a07 	vdiv.f32	s1, s16, s14
90013020:	ee3c ca40 	vsub.f32	s24, s24, s0
90013024:	ee39 9a60 	vsub.f32	s18, s18, s1
90013028:	ee29 9a09 	vmul.f32	s18, s18, s18
9001302c:	eeac 9a0c 	vfma.f32	s18, s24, s24
90013030:	eef4 7ac9 	vcmpe.f32	s15, s18
90013034:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013038:	db04      	blt.n	90013044 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
9001303a:	f7ff feb2 	bl	90012da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001303e:	ecbd 8b0a 	vpop	{d8-d12}
90013042:	bd10      	pop	{r4, pc}
90013044:	eef0 0a6b 	vmov.f32	s1, s23
90013048:	4620      	mov	r0, r4
9001304a:	eeb0 0a4b 	vmov.f32	s0, s22
9001304e:	f7ff fea8 	bl	90012da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013052:	e7b6      	b.n	90012fc2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

90013054 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
90013054:	b510      	push	{r4, lr}
90013056:	ed2d 8b0c 	vpush	{d8-d13}
9001305a:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
9001305e:	4604      	mov	r4, r0
90013060:	eeb0 9a40 	vmov.f32	s18, s0
90013064:	eef0 9a60 	vmov.f32	s19, s1
90013068:	eef0 aa41 	vmov.f32	s21, s2
9001306c:	eeb0 ba61 	vmov.f32	s22, s3
90013070:	b933      	cbnz	r3, 90013080 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
90013072:	f7ff fe96 	bl	90012da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013076:	eef0 0a4b 	vmov.f32	s1, s22
9001307a:	eeb0 0a6a 	vmov.f32	s0, s21
9001307e:	e015      	b.n	900130ac <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
90013080:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
90013084:	2b02      	cmp	r3, #2
90013086:	ee71 8a40 	vsub.f32	s17, s2, s0
9001308a:	ee31 8ae0 	vsub.f32	s16, s3, s1
9001308e:	ee68 8aa7 	vmul.f32	s17, s17, s15
90013092:	ee28 8a27 	vmul.f32	s16, s16, s15
90013096:	d10f      	bne.n	900130b8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
90013098:	ee70 0ae8 	vsub.f32	s1, s1, s17
9001309c:	ee30 0a08 	vadd.f32	s0, s0, s16
900130a0:	f7ff fe7f 	bl	90012da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900130a4:	ee7b 0a68 	vsub.f32	s1, s22, s17
900130a8:	ee3a 0a88 	vadd.f32	s0, s21, s16
900130ac:	4620      	mov	r0, r4
900130ae:	f7ff fe78 	bl	90012da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900130b2:	ecbd 8b0c 	vpop	{d8-d13}
900130b6:	bd10      	pop	{r4, pc}
900130b8:	f7ff fe73 	bl	90012da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900130bc:	eef0 0a69 	vmov.f32	s1, s19
900130c0:	eeb0 0a49 	vmov.f32	s0, s18
900130c4:	eddf 7a4b 	vldr	s15, [pc, #300]	@ 900131f4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
900130c8:	eeb1 aa68 	vneg.f32	s20, s17
900130cc:	eddf ba4a 	vldr	s23, [pc, #296]	@ 900131f8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
900130d0:	eee8 0a27 	vfma.f32	s1, s16, s15
900130d4:	4620      	mov	r0, r4
900130d6:	eea8 0aa7 	vfma.f32	s0, s17, s15
900130da:	ed9f ca48 	vldr	s24, [pc, #288]	@ 900131fc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
900130de:	eddf ca48 	vldr	s25, [pc, #288]	@ 90013200 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
900130e2:	ed9f da48 	vldr	s26, [pc, #288]	@ 90013204 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
900130e6:	eeea 0a2b 	vfma.f32	s1, s20, s23
900130ea:	eea8 0a2b 	vfma.f32	s0, s16, s23
900130ee:	f7ff fe58 	bl	90012da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900130f2:	eef0 0a69 	vmov.f32	s1, s19
900130f6:	eeb0 0a49 	vmov.f32	s0, s18
900130fa:	eddf 7a43 	vldr	s15, [pc, #268]	@ 90013208 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
900130fe:	4620      	mov	r0, r4
90013100:	eee8 0a27 	vfma.f32	s1, s16, s15
90013104:	eea8 0aa7 	vfma.f32	s0, s17, s15
90013108:	eeea 0a0c 	vfma.f32	s1, s20, s24
9001310c:	eea8 0a0c 	vfma.f32	s0, s16, s24
90013110:	f7ff fe47 	bl	90012da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013114:	eef0 0a69 	vmov.f32	s1, s19
90013118:	eeb0 0a49 	vmov.f32	s0, s18
9001311c:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 9001320c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
90013120:	4620      	mov	r0, r4
90013122:	eee8 0a27 	vfma.f32	s1, s16, s15
90013126:	eea8 0aa7 	vfma.f32	s0, s17, s15
9001312a:	eeea 0a2c 	vfma.f32	s1, s20, s25
9001312e:	eea8 0a2c 	vfma.f32	s0, s16, s25
90013132:	f7ff fe36 	bl	90012da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013136:	eef0 0a69 	vmov.f32	s1, s19
9001313a:	eeb0 0a49 	vmov.f32	s0, s18
9001313e:	eddf 7a34 	vldr	s15, [pc, #208]	@ 90013210 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
90013142:	4620      	mov	r0, r4
90013144:	eee8 0a27 	vfma.f32	s1, s16, s15
90013148:	eea8 0aa7 	vfma.f32	s0, s17, s15
9001314c:	eeea 0a0d 	vfma.f32	s1, s20, s26
90013150:	eea8 0a0d 	vfma.f32	s0, s16, s26
90013154:	f7ff fe25 	bl	90012da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013158:	ee79 0a88 	vadd.f32	s1, s19, s16
9001315c:	ee39 0a28 	vadd.f32	s0, s18, s17
90013160:	4620      	mov	r0, r4
90013162:	ee70 0ae8 	vsub.f32	s1, s1, s17
90013166:	ee30 0a08 	vadd.f32	s0, s0, s16
9001316a:	f7ff fe1a 	bl	90012da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001316e:	eef0 0a69 	vmov.f32	s1, s19
90013172:	eeb0 0a49 	vmov.f32	s0, s18
90013176:	eddf 7a27 	vldr	s15, [pc, #156]	@ 90013214 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
9001317a:	4620      	mov	r0, r4
9001317c:	eee8 0a27 	vfma.f32	s1, s16, s15
90013180:	eea8 0aa7 	vfma.f32	s0, s17, s15
90013184:	eeea 0a0d 	vfma.f32	s1, s20, s26
90013188:	eea8 0a0d 	vfma.f32	s0, s16, s26
9001318c:	f7ff fe09 	bl	90012da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90013190:	eef0 0a69 	vmov.f32	s1, s19
90013194:	eeb0 0a49 	vmov.f32	s0, s18
90013198:	eddf 7a1f 	vldr	s15, [pc, #124]	@ 90013218 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
9001319c:	4620      	mov	r0, r4
9001319e:	eee8 0a27 	vfma.f32	s1, s16, s15
900131a2:	eea8 0aa7 	vfma.f32	s0, s17, s15
900131a6:	eeea 0a2c 	vfma.f32	s1, s20, s25
900131aa:	eea8 0a2c 	vfma.f32	s0, s16, s25
900131ae:	f7ff fdf8 	bl	90012da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900131b2:	eef0 0a69 	vmov.f32	s1, s19
900131b6:	eeb0 0a49 	vmov.f32	s0, s18
900131ba:	eddf 7a18 	vldr	s15, [pc, #96]	@ 9001321c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
900131be:	4620      	mov	r0, r4
900131c0:	eee8 0a27 	vfma.f32	s1, s16, s15
900131c4:	eea8 0aa7 	vfma.f32	s0, s17, s15
900131c8:	eeea 0a0c 	vfma.f32	s1, s20, s24
900131cc:	eea8 0a0c 	vfma.f32	s0, s16, s24
900131d0:	f7ff fde7 	bl	90012da2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900131d4:	eef0 0a69 	vmov.f32	s1, s19
900131d8:	eeb0 0a49 	vmov.f32	s0, s18
900131dc:	eddf 7a10 	vldr	s15, [pc, #64]	@ 90013220 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
900131e0:	4620      	mov	r0, r4
900131e2:	eee8 0a27 	vfma.f32	s1, s16, s15
900131e6:	eea8 0aa7 	vfma.f32	s0, s17, s15
900131ea:	eeea 0a2b 	vfma.f32	s1, s20, s23
900131ee:	eea8 0a2b 	vfma.f32	s0, s16, s23
900131f2:	e73e      	b.n	90013072 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
900131f4:	3d23d70a 	.word	0x3d23d70a
900131f8:	3e8f5c29 	.word	0x3e8f5c29
900131fc:	3f19999a 	.word	0x3f19999a
90013200:	3f4ccccd 	.word	0x3f4ccccd
90013204:	3f75c28f 	.word	0x3f75c28f
90013208:	3e4ccccd 	.word	0x3e4ccccd
9001320c:	3ecccccd 	.word	0x3ecccccd
90013210:	3f3851ec 	.word	0x3f3851ec
90013214:	3fa3d70a 	.word	0x3fa3d70a
90013218:	3fcccccd 	.word	0x3fcccccd
9001321c:	3fe66666 	.word	0x3fe66666
90013220:	3ffae148 	.word	0x3ffae148

90013224 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
90013224:	b570      	push	{r4, r5, r6, lr}
90013226:	ed2d 8b06 	vpush	{d8-d10}
9001322a:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
9001322e:	eef0 aa40 	vmov.f32	s21, s0
90013232:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
90013236:	4604      	mov	r4, r0
90013238:	ee30 8ac8 	vsub.f32	s16, s1, s16
9001323c:	ee30 9a49 	vsub.f32	s18, s0, s18
90013240:	eeb0 aa60 	vmov.f32	s20, s1
90013244:	ee28 0a08 	vmul.f32	s0, s16, s16
90013248:	eea9 0a09 	vfma.f32	s0, s18, s18
9001324c:	f016 fd38 	bl	90029cc0 <sqrtf>
90013250:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90013254:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013258:	dd36      	ble.n	900132c8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
9001325a:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
9001325e:	2600      	movs	r6, #0
90013260:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
90013264:	eec0 6a27 	vdiv.f32	s13, s0, s15
90013268:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
9001326c:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
90013270:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
90013274:	eec8 8a26 	vdiv.f32	s17, s16, s13
90013278:	ee89 8a26 	vdiv.f32	s16, s18, s13
9001327c:	ee70 9a28 	vadd.f32	s19, s0, s17
90013280:	ee78 8aaa 	vadd.f32	s17, s17, s21
90013284:	ee30 9ac8 	vsub.f32	s18, s1, s16
90013288:	ee3a 8a48 	vsub.f32	s16, s20, s16
9001328c:	b1fd      	cbz	r5, 900132ce <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
9001328e:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
90013292:	eef0 0a49 	vmov.f32	s1, s18
90013296:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
9001329a:	eeb0 0a69 	vmov.f32	s0, s19
9001329e:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
900132a2:	4620      	mov	r0, r4
900132a4:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
900132a8:	f7ff fd64 	bl	90012d74 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
900132ac:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
900132b0:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
900132b4:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
900132b8:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
900132bc:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
900132c0:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
900132c4:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
900132c8:	ecbd 8b06 	vpop	{d8-d10}
900132cc:	bd70      	pop	{r4, r5, r6, pc}
900132ce:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
900132d2:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
900132d6:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
900132da:	b16b      	cbz	r3, 900132f8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
900132dc:	eef0 1a49 	vmov.f32	s3, s18
900132e0:	4620      	mov	r0, r4
900132e2:	eeb0 1a69 	vmov.f32	s2, s19
900132e6:	eef0 0a62 	vmov.f32	s1, s5
900132ea:	eeb0 0a42 	vmov.f32	s0, s4
900132ee:	f7ff feb1 	bl	90013054 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
900132f2:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
900132f6:	e7db      	b.n	900132b0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
900132f8:	eef0 4a48 	vmov.f32	s9, s16
900132fc:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
90013300:	eeb0 4a68 	vmov.f32	s8, s17
90013304:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
90013308:	eef0 3a49 	vmov.f32	s7, s18
9001330c:	4620      	mov	r0, r4
9001330e:	eeb0 3a69 	vmov.f32	s6, s19
90013312:	f7ff fe13 	bl	90012f3c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
90013316:	e7cb      	b.n	900132b0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

90013318 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
90013318:	ee07 2a90 	vmov	s15, r2
9001331c:	ee07 1a10 	vmov	s14, r1
90013320:	eef8 0ae7 	vcvt.f32.s32	s1, s15
90013324:	eddf 7a04 	vldr	s15, [pc, #16]	@ 90013338 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
90013328:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
9001332c:	ee60 0aa7 	vmul.f32	s1, s1, s15
90013330:	ee20 0a27 	vmul.f32	s0, s0, s15
90013334:	f7ff bf76 	b.w	90013224 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90013338:	3d000000 	.word	0x3d000000

9001333c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
9001333c:	b538      	push	{r3, r4, r5, lr}
9001333e:	ed2d 8b02 	vpush	{d8}
90013342:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
90013346:	4604      	mov	r4, r0
90013348:	b31d      	cbz	r5, 90013392 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
9001334a:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
9001334e:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
90013352:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
90013356:	ee78 8a67 	vsub.f32	s17, s16, s15
9001335a:	ee38 8a27 	vadd.f32	s16, s16, s15
9001335e:	eef0 0a68 	vmov.f32	s1, s17
90013362:	f7ff fd07 	bl	90012d74 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
90013366:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
9001336a:	eef0 1a48 	vmov.f32	s3, s16
9001336e:	4620      	mov	r0, r4
90013370:	eeb0 0a41 	vmov.f32	s0, s2
90013374:	eef0 0a68 	vmov.f32	s1, s17
90013378:	f7ff fe6c 	bl	90013054 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
9001337c:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
90013380:	eef0 1a68 	vmov.f32	s3, s17
90013384:	4620      	mov	r0, r4
90013386:	eef0 0a48 	vmov.f32	s1, s16
9001338a:	eeb0 0a41 	vmov.f32	s0, s2
9001338e:	f7ff fe61 	bl	90013054 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
90013392:	4628      	mov	r0, r5
90013394:	ecbd 8b02 	vpop	{d8}
90013398:	bd38      	pop	{r3, r4, r5, pc}

9001339a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
9001339a:	b510      	push	{r4, lr}
9001339c:	ed2d 8b02 	vpush	{d8}
900133a0:	4604      	mov	r4, r0
900133a2:	eeb0 8a40 	vmov.f32	s16, s0
900133a6:	eef0 8a60 	vmov.f32	s17, s1
900133aa:	f7ff ffc7 	bl	9001333c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
900133ae:	b9d0      	cbnz	r0, 900133e6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
900133b0:	4620      	mov	r0, r4
900133b2:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
900133b6:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
900133ba:	eef0 0a68 	vmov.f32	s1, s17
900133be:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
900133c2:	eeb0 0a48 	vmov.f32	s0, s16
900133c6:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
900133ca:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
900133ce:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
900133d2:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
900133d6:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
900133da:	f7ff fdaf 	bl	90012f3c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
900133de:	2001      	movs	r0, #1
900133e0:	ecbd 8b02 	vpop	{d8}
900133e4:	bd10      	pop	{r4, pc}
900133e6:	2000      	movs	r0, #0
900133e8:	e7fa      	b.n	900133e0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

900133ea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
900133ea:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
900133ee:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
900133f2:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
900133f6:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
900133fa:	f7ff be2b 	b.w	90013054 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

90013400 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
90013400:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013404:	b089      	sub	sp, #36	@ 0x24
90013406:	461c      	mov	r4, r3
90013408:	4682      	mov	sl, r0
9001340a:	4615      	mov	r5, r2
9001340c:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90013410:	f10d 0820 	add.w	r8, sp, #32
90013414:	9e15      	ldr	r6, [sp, #84]	@ 0x54
90013416:	9304      	str	r3, [sp, #16]
90013418:	2300      	movs	r3, #0
9001341a:	9105      	str	r1, [sp, #20]
9001341c:	9306      	str	r3, [sp, #24]
9001341e:	f848 3d04 	str.w	r3, [r8, #-4]!
90013422:	9b04      	ldr	r3, [sp, #16]
90013424:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
90013428:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
9001342c:	9b05      	ldr	r3, [sp, #20]
9001342e:	429d      	cmp	r5, r3
90013430:	d96d      	bls.n	9001350e <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
90013432:	3d01      	subs	r5, #1
90013434:	f819 3005 	ldrb.w	r3, [r9, r5]
90013438:	2b06      	cmp	r3, #6
9001343a:	d8f7      	bhi.n	9001342c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
9001343c:	a201      	add	r2, pc, #4	@ (adr r2, 90013444 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
9001343e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
90013442:	bf00      	nop
90013444:	90013463 	.word	0x90013463
90013448:	9001342d 	.word	0x9001342d
9001344c:	90013461 	.word	0x90013461
90013450:	90013485 	.word	0x90013485
90013454:	90013485 	.word	0x90013485
90013458:	90013489 	.word	0x90013489
9001345c:	900134c9 	.word	0x900134c9
90013460:	3c02      	subs	r4, #2
90013462:	4650      	mov	r0, sl
90013464:	9400      	str	r4, [sp, #0]
90013466:	462b      	mov	r3, r5
90013468:	4642      	mov	r2, r8
9001346a:	a906      	add	r1, sp, #24
9001346c:	e9cd 9701 	strd	r9, r7, [sp, #4]
90013470:	f7ff fcae 	bl	90012dd0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
90013474:	eddd 0a07 	vldr	s1, [sp, #28]
90013478:	ed9d 0a06 	vldr	s0, [sp, #24]
9001347c:	4630      	mov	r0, r6
9001347e:	f7ff fed1 	bl	90013224 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90013482:	e7d3      	b.n	9001342c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
90013484:	3c01      	subs	r4, #1
90013486:	e7ec      	b.n	90013462 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
90013488:	f1a4 0b04 	sub.w	fp, r4, #4
9001348c:	3c02      	subs	r4, #2
9001348e:	4650      	mov	r0, sl
90013490:	462b      	mov	r3, r5
90013492:	eb07 0484 	add.w	r4, r7, r4, lsl #2
90013496:	f8cd b000 	str.w	fp, [sp]
9001349a:	4642      	mov	r2, r8
9001349c:	a906      	add	r1, sp, #24
9001349e:	e9cd 9701 	strd	r9, r7, [sp, #4]
900134a2:	f7ff fc95 	bl	90012dd0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
900134a6:	eddd 2a07 	vldr	s5, [sp, #28]
900134aa:	ed9d 2a06 	vldr	s4, [sp, #24]
900134ae:	4630      	mov	r0, r6
900134b0:	ed54 1a01 	vldr	s3, [r4, #-4]
900134b4:	ed14 1a02 	vldr	s2, [r4, #-8]
900134b8:	edd4 0a01 	vldr	s1, [r4, #4]
900134bc:	ed94 0a00 	vldr	s0, [r4]
900134c0:	f7ff fc1a 	bl	90012cf8 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
900134c4:	465c      	mov	r4, fp
900134c6:	e7b1      	b.n	9001342c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
900134c8:	f1a4 0b06 	sub.w	fp, r4, #6
900134cc:	3c02      	subs	r4, #2
900134ce:	4650      	mov	r0, sl
900134d0:	462b      	mov	r3, r5
900134d2:	eb07 0484 	add.w	r4, r7, r4, lsl #2
900134d6:	f8cd b000 	str.w	fp, [sp]
900134da:	4642      	mov	r2, r8
900134dc:	a906      	add	r1, sp, #24
900134de:	e9cd 9701 	strd	r9, r7, [sp, #4]
900134e2:	f7ff fc75 	bl	90012dd0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
900134e6:	eddd 3a07 	vldr	s7, [sp, #28]
900134ea:	ed9d 3a06 	vldr	s6, [sp, #24]
900134ee:	4630      	mov	r0, r6
900134f0:	ed54 2a03 	vldr	s5, [r4, #-12]
900134f4:	ed14 2a04 	vldr	s4, [r4, #-16]
900134f8:	ed54 1a01 	vldr	s3, [r4, #-4]
900134fc:	ed14 1a02 	vldr	s2, [r4, #-8]
90013500:	edd4 0a01 	vldr	s1, [r4, #4]
90013504:	ed94 0a00 	vldr	s0, [r4]
90013508:	f7ff fc15 	bl	90012d36 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
9001350c:	e7da      	b.n	900134c4 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
9001350e:	9b04      	ldr	r3, [sp, #16]
90013510:	b113      	cbz	r3, 90013518 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
90013512:	4630      	mov	r0, r6
90013514:	f7ff ff69 	bl	900133ea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
90013518:	b009      	add	sp, #36	@ 0x24
9001351a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001351e:	bf00      	nop

90013520 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
90013520:	eef0 7a60 	vmov.f32	s15, s1
90013524:	6803      	ldr	r3, [r0, #0]
90013526:	689b      	ldr	r3, [r3, #8]
90013528:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
9001352c:	ee17 2a90 	vmov	r2, s15
90013530:	eef0 7a40 	vmov.f32	s15, s0
90013534:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90013538:	ee17 1a90 	vmov	r1, s15
9001353c:	4718      	bx	r3
	...

90013540 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
90013540:	4b04      	ldr	r3, [pc, #16]	@ (90013554 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
90013542:	b510      	push	{r4, lr}
90013544:	4604      	mov	r4, r0
90013546:	f840 3b14 	str.w	r3, [r0], #20
9001354a:	f001 f9d5 	bl	900148f8 <_ZN8touchgfx7OutlineD1Ev>
9001354e:	4620      	mov	r0, r4
90013550:	bd10      	pop	{r4, pc}
90013552:	bf00      	nop
90013554:	9002e6b0 	.word	0x9002e6b0

90013558 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
90013558:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001355c:	ed2d 8b04 	vpush	{d8-d9}
90013560:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
90013564:	b0b5      	sub	sp, #212	@ 0xd4
90013566:	4605      	mov	r5, r0
90013568:	468b      	mov	fp, r1
9001356a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001356e:	9206      	str	r2, [sp, #24]
90013570:	461e      	mov	r6, r3
90013572:	2400      	movs	r4, #0
90013574:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013578:	f240 814f 	bls.w	9001381a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
9001357c:	23ff      	movs	r3, #255	@ 0xff
9001357e:	1d02      	adds	r2, r0, #4
90013580:	ed9f 9aa7 	vldr	s18, [pc, #668]	@ 90013820 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
90013584:	f04f 0800 	mov.w	r8, #0
90013588:	9300      	str	r3, [sp, #0]
9001358a:	af08      	add	r7, sp, #32
9001358c:	6981      	ldr	r1, [r0, #24]
9001358e:	a808      	add	r0, sp, #32
90013590:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
90013592:	eef0 9a49 	vmov.f32	s19, s18
90013596:	f015 fee9 	bl	9002936c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
9001359a:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
9001359e:	4ba1      	ldr	r3, [pc, #644]	@ (90013824 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
900135a0:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
900135a4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
900135a8:	2201      	movs	r2, #1
900135aa:	9308      	str	r3, [sp, #32]
900135ac:	f105 0334 	add.w	r3, r5, #52	@ 0x34
900135b0:	edd5 6a08 	vldr	s13, [r5, #32]
900135b4:	eeb0 8a49 	vmov.f32	s16, s18
900135b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900135bc:	9325      	str	r3, [sp, #148]	@ 0x94
900135be:	f04f 0300 	mov.w	r3, #0
900135c2:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
900135c6:	7f6a      	ldrb	r2, [r5, #29]
900135c8:	eef0 8a49 	vmov.f32	s17, s18
900135cc:	bf48      	it	mi
900135ce:	eef1 7a67 	vnegmi.f32	s15, s15
900135d2:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
900135d6:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
900135da:	46c1      	mov	r9, r8
900135dc:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
900135e0:	f04f 0a01 	mov.w	sl, #1
900135e4:	ee67 7a87 	vmul.f32	s15, s15, s14
900135e8:	7fab      	ldrb	r3, [r5, #30]
900135ea:	942a      	str	r4, [sp, #168]	@ 0xa8
900135ec:	435a      	muls	r2, r3
900135ee:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
900135f2:	ee26 7aa7 	vmul.f32	s14, s13, s15
900135f6:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
900135fa:	1c53      	adds	r3, r2, #1
900135fc:	942b      	str	r4, [sp, #172]	@ 0xac
900135fe:	942c      	str	r4, [sp, #176]	@ 0xb0
90013600:	ee27 7a26 	vmul.f32	s14, s14, s13
90013604:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90013608:	942d      	str	r4, [sp, #180]	@ 0xb4
9001360a:	942e      	str	r4, [sp, #184]	@ 0xb8
9001360c:	f3c3 2307 	ubfx	r3, r3, #8, #8
90013610:	ee67 7a27 	vmul.f32	s15, s14, s15
90013614:	942f      	str	r4, [sp, #188]	@ 0xbc
90013616:	9430      	str	r4, [sp, #192]	@ 0xc0
90013618:	9431      	str	r4, [sp, #196]	@ 0xc4
9001361a:	9432      	str	r4, [sp, #200]	@ 0xc8
9001361c:	9433      	str	r4, [sp, #204]	@ 0xcc
9001361e:	4644      	mov	r4, r8
90013620:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
90013624:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
90013628:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
9001362c:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
90013630:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
90013634:	9b06      	ldr	r3, [sp, #24]
90013636:	454b      	cmp	r3, r9
90013638:	f000 80cc 	beq.w	900137d4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
9001363c:	f109 0301 	add.w	r3, r9, #1
90013640:	9305      	str	r3, [sp, #20]
90013642:	f81b 3009 	ldrb.w	r3, [fp, r9]
90013646:	2b06      	cmp	r3, #6
90013648:	d839      	bhi.n	900136be <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
9001364a:	e8df f003 	tbb	[pc, r3]
9001364e:	3b04      	.short	0x3b04
90013650:	817c6f60 	.word	0x817c6f60
90013654:	a0          	.byte	0xa0
90013655:	00          	.byte	0x00
90013656:	45c1      	cmp	r9, r8
90013658:	d92b      	bls.n	900136b2 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
9001365a:	eef0 0a49 	vmov.f32	s1, s18
9001365e:	4638      	mov	r0, r7
90013660:	eeb0 0a69 	vmov.f32	s0, s19
90013664:	f7ff fdde 	bl	90013224 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90013668:	4638      	mov	r0, r7
9001366a:	f7ff fe67 	bl	9001333c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
9001366e:	4681      	mov	r9, r0
90013670:	b9f8      	cbnz	r0, 900136b2 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
90013672:	eef0 0a49 	vmov.f32	s1, s18
90013676:	4638      	mov	r0, r7
90013678:	eeb0 0a69 	vmov.f32	s0, s19
9001367c:	f7ff fe8d 	bl	9001339a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
90013680:	4628      	mov	r0, r5
90013682:	4623      	mov	r3, r4
90013684:	9a05      	ldr	r2, [sp, #20]
90013686:	4641      	mov	r1, r8
90013688:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
9001368c:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
90013690:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
90013694:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
90013698:	e9cd 9702 	strd	r9, r7, [sp, #8]
9001369c:	e9cd b600 	strd	fp, r6, [sp]
900136a0:	f7ff feae 	bl	90013400 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
900136a4:	eef0 0a49 	vmov.f32	s1, s18
900136a8:	eeb0 0a69 	vmov.f32	s0, s19
900136ac:	4638      	mov	r0, r7
900136ae:	f7ff fe74 	bl	9001339a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
900136b2:	eeb0 8a49 	vmov.f32	s16, s18
900136b6:	f8dd 8014 	ldr.w	r8, [sp, #20]
900136ba:	eef0 8a69 	vmov.f32	s17, s19
900136be:	f8dd 9014 	ldr.w	r9, [sp, #20]
900136c2:	e7b7      	b.n	90013634 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
900136c4:	45c1      	cmp	r9, r8
900136c6:	d90d      	bls.n	900136e4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
900136c8:	4638      	mov	r0, r7
900136ca:	f7ff fe37 	bl	9001333c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
900136ce:	b948      	cbnz	r0, 900136e4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
900136d0:	4623      	mov	r3, r4
900136d2:	464a      	mov	r2, r9
900136d4:	4641      	mov	r1, r8
900136d6:	4628      	mov	r0, r5
900136d8:	e9cd a702 	strd	sl, r7, [sp, #8]
900136dc:	e9cd b600 	strd	fp, r6, [sp]
900136e0:	f7ff fe8e 	bl	90013400 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
900136e4:	eb06 0384 	add.w	r3, r6, r4, lsl #2
900136e8:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
900136ec:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
900136f0:	3402      	adds	r4, #2
900136f2:	edd3 8a00 	vldr	s17, [r3]
900136f6:	46c8      	mov	r8, r9
900136f8:	ed93 8a01 	vldr	s16, [r3, #4]
900136fc:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
90013700:	eef0 9a68 	vmov.f32	s19, s17
90013704:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
90013708:	eeb0 9a48 	vmov.f32	s18, s16
9001370c:	e7d7      	b.n	900136be <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
9001370e:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90013712:	4638      	mov	r0, r7
90013714:	3402      	adds	r4, #2
90013716:	edd3 8a00 	vldr	s17, [r3]
9001371a:	ed93 8a01 	vldr	s16, [r3, #4]
9001371e:	eeb0 0a68 	vmov.f32	s0, s17
90013722:	eef0 0a48 	vmov.f32	s1, s16
90013726:	f7ff fd7d 	bl	90013224 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
9001372a:	e7c8      	b.n	900136be <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
9001372c:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90013730:	edd3 8a00 	vldr	s17, [r3]
90013734:	eef0 0a48 	vmov.f32	s1, s16
90013738:	4638      	mov	r0, r7
9001373a:	eeb0 0a68 	vmov.f32	s0, s17
9001373e:	3401      	adds	r4, #1
90013740:	f7ff fd70 	bl	90013224 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90013744:	e7bb      	b.n	900136be <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90013746:	eb06 0384 	add.w	r3, r6, r4, lsl #2
9001374a:	ed93 8a00 	vldr	s16, [r3]
9001374e:	e7f1      	b.n	90013734 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
90013750:	00a3      	lsls	r3, r4, #2
90013752:	eef0 0a48 	vmov.f32	s1, s16
90013756:	eeb0 0a68 	vmov.f32	s0, s17
9001375a:	4638      	mov	r0, r7
9001375c:	f103 0208 	add.w	r2, r3, #8
90013760:	f103 090c 	add.w	r9, r3, #12
90013764:	4433      	add	r3, r6
90013766:	3404      	adds	r4, #4
90013768:	4432      	add	r2, r6
9001376a:	44b1      	add	r9, r6
9001376c:	edd3 1a01 	vldr	s3, [r3, #4]
90013770:	ed92 2a00 	vldr	s4, [r2]
90013774:	edd9 2a00 	vldr	s5, [r9]
90013778:	ed93 1a00 	vldr	s2, [r3]
9001377c:	9207      	str	r2, [sp, #28]
9001377e:	f7ff fabb 	bl	90012cf8 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
90013782:	9a07      	ldr	r2, [sp, #28]
90013784:	ed99 8a00 	vldr	s16, [r9]
90013788:	edd2 8a00 	vldr	s17, [r2]
9001378c:	e797      	b.n	900136be <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
9001378e:	00a3      	lsls	r3, r4, #2
90013790:	eef0 0a48 	vmov.f32	s1, s16
90013794:	eeb0 0a68 	vmov.f32	s0, s17
90013798:	4638      	mov	r0, r7
9001379a:	f103 0210 	add.w	r2, r3, #16
9001379e:	f103 0914 	add.w	r9, r3, #20
900137a2:	4433      	add	r3, r6
900137a4:	3406      	adds	r4, #6
900137a6:	4432      	add	r2, r6
900137a8:	44b1      	add	r9, r6
900137aa:	edd3 2a03 	vldr	s5, [r3, #12]
900137ae:	ed92 3a00 	vldr	s6, [r2]
900137b2:	edd9 3a00 	vldr	s7, [r9]
900137b6:	ed93 2a02 	vldr	s4, [r3, #8]
900137ba:	edd3 1a01 	vldr	s3, [r3, #4]
900137be:	ed93 1a00 	vldr	s2, [r3]
900137c2:	9207      	str	r2, [sp, #28]
900137c4:	f7ff fab7 	bl	90012d36 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
900137c8:	9a07      	ldr	r2, [sp, #28]
900137ca:	ed99 8a00 	vldr	s16, [r9]
900137ce:	edd2 8a00 	vldr	s17, [r2]
900137d2:	e774      	b.n	900136be <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
900137d4:	9b06      	ldr	r3, [sp, #24]
900137d6:	af08      	add	r7, sp, #32
900137d8:	4543      	cmp	r3, r8
900137da:	d90f      	bls.n	900137fc <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
900137dc:	4638      	mov	r0, r7
900137de:	f7ff fdad 	bl	9001333c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
900137e2:	b958      	cbnz	r0, 900137fc <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
900137e4:	2301      	movs	r3, #1
900137e6:	9703      	str	r7, [sp, #12]
900137e8:	f8cd b000 	str.w	fp, [sp]
900137ec:	4641      	mov	r1, r8
900137ee:	9a06      	ldr	r2, [sp, #24]
900137f0:	4628      	mov	r0, r5
900137f2:	e9cd 6301 	strd	r6, r3, [sp, #4]
900137f6:	4623      	mov	r3, r4
900137f8:	f7ff fe02 	bl	90013400 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
900137fc:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
90013800:	4638      	mov	r0, r7
90013802:	f015 fe47 	bl	90029494 <_ZN8touchgfx6Canvas6renderEh>
90013806:	4604      	mov	r4, r0
90013808:	4638      	mov	r0, r7
9001380a:	f7ff fe99 	bl	90013540 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
9001380e:	4620      	mov	r0, r4
90013810:	b035      	add	sp, #212	@ 0xd4
90013812:	ecbd 8b04 	vpop	{d8-d9}
90013816:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001381a:	2401      	movs	r4, #1
9001381c:	e7f7      	b.n	9001380e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
9001381e:	bf00      	nop
90013820:	00000000 	.word	0x00000000
90013824:	9002dfd8 	.word	0x9002dfd8

90013828 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
90013828:	b510      	push	{r4, lr}
9001382a:	4604      	mov	r4, r0
9001382c:	f7ff fe88 	bl	90013540 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
90013830:	21b0      	movs	r1, #176	@ 0xb0
90013832:	4620      	mov	r0, r4
90013834:	f016 fa1a 	bl	90029c6c <_ZdlPvj>
90013838:	4620      	mov	r0, r4
9001383a:	bd10      	pop	{r4, pc}

9001383c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
9001383c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90013840:	4698      	mov	r8, r3
90013842:	23ff      	movs	r3, #255	@ 0xff
90013844:	4607      	mov	r7, r0
90013846:	4689      	mov	r9, r1
90013848:	4692      	mov	sl, r2
9001384a:	1d02      	adds	r2, r0, #4
9001384c:	f107 0534 	add.w	r5, r7, #52	@ 0x34
90013850:	2400      	movs	r4, #0
90013852:	44ca      	add	sl, r9
90013854:	ed2d 8b06 	vpush	{d8-d10}
90013858:	b0aa      	sub	sp, #168	@ 0xa8
9001385a:	ed9f 8a81 	vldr	s16, [pc, #516]	@ 90013a60 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
9001385e:	9300      	str	r3, [sp, #0]
90013860:	eef0 8a48 	vmov.f32	s17, s16
90013864:	6981      	ldr	r1, [r0, #24]
90013866:	a80d      	add	r0, sp, #52	@ 0x34
90013868:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
9001386a:	f015 fd7f 	bl	9002936c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
9001386e:	7f3b      	ldrb	r3, [r7, #28]
90013870:	eddf 0a7b 	vldr	s1, [pc, #492]	@ 90013a60 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
90013874:	4628      	mov	r0, r5
90013876:	1e5a      	subs	r2, r3, #1
90013878:	eeb0 0a60 	vmov.f32	s0, s1
9001387c:	4253      	negs	r3, r2
9001387e:	4153      	adcs	r3, r2
90013880:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
90013884:	f005 f9b7 	bl	90018bf6 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90013888:	eeb0 9a40 	vmov.f32	s18, s0
9001388c:	eef0 9a60 	vmov.f32	s19, s1
90013890:	45ca      	cmp	sl, r9
90013892:	f000 80cd 	beq.w	90013a30 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
90013896:	f819 3b01 	ldrb.w	r3, [r9], #1
9001389a:	2b06      	cmp	r3, #6
9001389c:	d8f8      	bhi.n	90013890 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
9001389e:	e8df f003 	tbb	[pc, r3]
900138a2:	0804      	.short	0x0804
900138a4:	58533f2a 	.word	0x58533f2a
900138a8:	8a          	.byte	0x8a
900138a9:	00          	.byte	0x00
900138aa:	a80d      	add	r0, sp, #52	@ 0x34
900138ac:	f015 fdd0 	bl	90029450 <_ZN8touchgfx6Canvas5closeEv>
900138b0:	e7ee      	b.n	90013890 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
900138b2:	eb08 0384 	add.w	r3, r8, r4, lsl #2
900138b6:	4628      	mov	r0, r5
900138b8:	ed93 8a01 	vldr	s16, [r3, #4]
900138bc:	edd3 8a00 	vldr	s17, [r3]
900138c0:	eef0 0a48 	vmov.f32	s1, s16
900138c4:	eeb0 0a68 	vmov.f32	s0, s17
900138c8:	f005 f995 	bl	90018bf6 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900138cc:	a80d      	add	r0, sp, #52	@ 0x34
900138ce:	eef0 7a60 	vmov.f32	s15, s1
900138d2:	eeb0 9a40 	vmov.f32	s18, s0
900138d6:	eef0 9a60 	vmov.f32	s19, s1
900138da:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900138de:	ee17 2a90 	vmov	r2, s15
900138e2:	eef0 7a40 	vmov.f32	s15, s0
900138e6:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900138ea:	ee17 1a90 	vmov	r1, s15
900138ee:	f015 fe89 	bl	90029604 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
900138f2:	3402      	adds	r4, #2
900138f4:	e7cc      	b.n	90013890 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
900138f6:	eb08 0384 	add.w	r3, r8, r4, lsl #2
900138fa:	4628      	mov	r0, r5
900138fc:	edd3 8a00 	vldr	s17, [r3]
90013900:	ed93 8a01 	vldr	s16, [r3, #4]
90013904:	eeb0 0a68 	vmov.f32	s0, s17
90013908:	eef0 0a48 	vmov.f32	s1, s16
9001390c:	f005 f973 	bl	90018bf6 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90013910:	a80d      	add	r0, sp, #52	@ 0x34
90013912:	eeb0 9a40 	vmov.f32	s18, s0
90013916:	eef0 9a60 	vmov.f32	s19, s1
9001391a:	f7ff fe01 	bl	90013520 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
9001391e:	e7e8      	b.n	900138f2 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
90013920:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90013924:	edd3 8a00 	vldr	s17, [r3]
90013928:	eef0 0a48 	vmov.f32	s1, s16
9001392c:	4628      	mov	r0, r5
9001392e:	eeb0 0a68 	vmov.f32	s0, s17
90013932:	3401      	adds	r4, #1
90013934:	f005 f95f 	bl	90018bf6 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90013938:	a80d      	add	r0, sp, #52	@ 0x34
9001393a:	eef0 9a60 	vmov.f32	s19, s1
9001393e:	eeb0 9a40 	vmov.f32	s18, s0
90013942:	f7ff fded 	bl	90013520 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90013946:	e7a3      	b.n	90013890 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90013948:	eb08 0384 	add.w	r3, r8, r4, lsl #2
9001394c:	ed93 8a00 	vldr	s16, [r3]
90013950:	e7ea      	b.n	90013928 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
90013952:	1ca3      	adds	r3, r4, #2
90013954:	4628      	mov	r0, r5
90013956:	3404      	adds	r4, #4
90013958:	eb08 0383 	add.w	r3, r8, r3, lsl #2
9001395c:	ed53 0a01 	vldr	s1, [r3, #-4]
90013960:	ed13 0a02 	vldr	s0, [r3, #-8]
90013964:	edd3 8a00 	vldr	s17, [r3]
90013968:	ed93 8a01 	vldr	s16, [r3, #4]
9001396c:	f005 f943 	bl	90018bf6 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90013970:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
90013974:	eeb0 0a68 	vmov.f32	s0, s17
90013978:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
9001397c:	eef0 0a48 	vmov.f32	s1, s16
90013980:	4628      	mov	r0, r5
90013982:	f005 f938 	bl	90018bf6 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90013986:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
9001398a:	eef0 2a60 	vmov.f32	s5, s1
9001398e:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
90013992:	eeb0 2a40 	vmov.f32	s4, s0
90013996:	a80d      	add	r0, sp, #52	@ 0x34
90013998:	eeb0 aa40 	vmov.f32	s20, s0
9001399c:	eef0 aa60 	vmov.f32	s21, s1
900139a0:	eeb0 0a49 	vmov.f32	s0, s18
900139a4:	eef0 0a69 	vmov.f32	s1, s19
900139a8:	f7ff f9a6 	bl	90012cf8 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
900139ac:	eef0 9a6a 	vmov.f32	s19, s21
900139b0:	eeb0 9a4a 	vmov.f32	s18, s20
900139b4:	e76c      	b.n	90013890 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
900139b6:	1d26      	adds	r6, r4, #4
900139b8:	4628      	mov	r0, r5
900139ba:	3406      	adds	r4, #6
900139bc:	eb08 0686 	add.w	r6, r8, r6, lsl #2
900139c0:	ed56 0a03 	vldr	s1, [r6, #-12]
900139c4:	ed16 0a04 	vldr	s0, [r6, #-16]
900139c8:	edd6 8a00 	vldr	s17, [r6]
900139cc:	ed96 8a01 	vldr	s16, [r6, #4]
900139d0:	f005 f911 	bl	90018bf6 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900139d4:	ed8d 0a07 	vstr	s0, [sp, #28]
900139d8:	4628      	mov	r0, r5
900139da:	ed16 0a02 	vldr	s0, [r6, #-8]
900139de:	edcd 0a08 	vstr	s1, [sp, #32]
900139e2:	ed56 0a01 	vldr	s1, [r6, #-4]
900139e6:	f005 f906 	bl	90018bf6 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900139ea:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
900139ee:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
900139f2:	eeb0 0a68 	vmov.f32	s0, s17
900139f6:	eef0 0a48 	vmov.f32	s1, s16
900139fa:	4628      	mov	r0, r5
900139fc:	f005 f8fb 	bl	90018bf6 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90013a00:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
90013a04:	eeb0 3a40 	vmov.f32	s6, s0
90013a08:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
90013a0c:	eef0 3a60 	vmov.f32	s7, s1
90013a10:	eddd 1a08 	vldr	s3, [sp, #32]
90013a14:	eeb0 aa40 	vmov.f32	s20, s0
90013a18:	ed9d 1a07 	vldr	s2, [sp, #28]
90013a1c:	eef0 aa60 	vmov.f32	s21, s1
90013a20:	a80d      	add	r0, sp, #52	@ 0x34
90013a22:	eef0 0a69 	vmov.f32	s1, s19
90013a26:	eeb0 0a49 	vmov.f32	s0, s18
90013a2a:	f7ff f984 	bl	90012d36 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
90013a2e:	e7bd      	b.n	900139ac <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
90013a30:	7f7b      	ldrb	r3, [r7, #29]
90013a32:	a80d      	add	r0, sp, #52	@ 0x34
90013a34:	7fb9      	ldrb	r1, [r7, #30]
90013a36:	4359      	muls	r1, r3
90013a38:	1c4b      	adds	r3, r1, #1
90013a3a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90013a3e:	f3c1 2107 	ubfx	r1, r1, #8, #8
90013a42:	f015 fd27 	bl	90029494 <_ZN8touchgfx6Canvas6renderEh>
90013a46:	4b07      	ldr	r3, [pc, #28]	@ (90013a64 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
90013a48:	4604      	mov	r4, r0
90013a4a:	a812      	add	r0, sp, #72	@ 0x48
90013a4c:	930d      	str	r3, [sp, #52]	@ 0x34
90013a4e:	f000 ff53 	bl	900148f8 <_ZN8touchgfx7OutlineD1Ev>
90013a52:	4620      	mov	r0, r4
90013a54:	b02a      	add	sp, #168	@ 0xa8
90013a56:	ecbd 8b06 	vpop	{d8-d10}
90013a5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90013a5e:	bf00      	nop
90013a60:	00000000 	.word	0x00000000
90013a64:	9002e6b0 	.word	0x9002e6b0

90013a68 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
90013a68:	b410      	push	{r4}
90013a6a:	7f04      	ldrb	r4, [r0, #28]
90013a6c:	b11c      	cbz	r4, 90013a76 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
90013a6e:	f85d 4b04 	ldr.w	r4, [sp], #4
90013a72:	f7ff bee3 	b.w	9001383c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
90013a76:	f85d 4b04 	ldr.w	r4, [sp], #4
90013a7a:	f7ff bd6d 	b.w	90013558 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>
	...

90013a80 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
90013a80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013a84:	4691      	mov	r9, r2
90013a86:	4602      	mov	r2, r0
90013a88:	b085      	sub	sp, #20
90013a8a:	4605      	mov	r5, r0
90013a8c:	f852 0f26 	ldr.w	r0, [r2, #38]!
90013a90:	4688      	mov	r8, r1
90013a92:	469a      	mov	sl, r3
90013a94:	ab02      	add	r3, sp, #8
90013a96:	6851      	ldr	r1, [r2, #4]
90013a98:	af02      	add	r7, sp, #8
90013a9a:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
90013a9e:	c303      	stmia	r3!, {r0, r1}
90013aa0:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90013aa4:	2b00      	cmp	r3, #0
90013aa6:	dd08      	ble.n	90013aba <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
90013aa8:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
90013aac:	2c00      	cmp	r4, #0
90013aae:	dd04      	ble.n	90013aba <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
90013ab0:	4a2e      	ldr	r2, [pc, #184]	@ (90013b6c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xec>)
90013ab2:	7812      	ldrb	r2, [r2, #0]
90013ab4:	b122      	cbz	r2, 90013ac0 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x40>
90013ab6:	2a01      	cmp	r2, #1
90013ab8:	d02d      	beq.n	90013b16 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x96>
90013aba:	b005      	add	sp, #20
90013abc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013ac0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90013ac4:	441c      	add	r4, r3
90013ac6:	b2a4      	uxth	r4, r4
90013ac8:	b226      	sxth	r6, r4
90013aca:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
90013ace:	42b3      	cmp	r3, r6
90013ad0:	daf3      	bge.n	90013aba <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
90013ad2:	4653      	mov	r3, sl
90013ad4:	464a      	mov	r2, r9
90013ad6:	4641      	mov	r1, r8
90013ad8:	4628      	mov	r0, r5
90013ada:	e9cd b700 	strd	fp, r7, [sp]
90013ade:	f7ff ffc3 	bl	90013a68 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
90013ae2:	b940      	cbnz	r0, 90013af6 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
90013ae4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90013ae8:	2b01      	cmp	r3, #1
90013aea:	d004      	beq.n	90013af6 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
90013aec:	3301      	adds	r3, #1
90013aee:	105b      	asrs	r3, r3, #1
90013af0:	f8ad 300e 	strh.w	r3, [sp, #14]
90013af4:	e7ed      	b.n	90013ad2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x52>
90013af6:	f8bd 200e 	ldrh.w	r2, [sp, #14]
90013afa:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90013afe:	4413      	add	r3, r2
90013b00:	b29b      	uxth	r3, r3
90013b02:	441a      	add	r2, r3
90013b04:	f8ad 300a 	strh.w	r3, [sp, #10]
90013b08:	b212      	sxth	r2, r2
90013b0a:	4296      	cmp	r6, r2
90013b0c:	dadd      	bge.n	90013aca <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
90013b0e:	1ae3      	subs	r3, r4, r3
90013b10:	f8ad 300e 	strh.w	r3, [sp, #14]
90013b14:	e7d9      	b.n	90013aca <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
90013b16:	f8bd 4008 	ldrh.w	r4, [sp, #8]
90013b1a:	441c      	add	r4, r3
90013b1c:	b2a4      	uxth	r4, r4
90013b1e:	b226      	sxth	r6, r4
90013b20:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
90013b24:	42b3      	cmp	r3, r6
90013b26:	dac8      	bge.n	90013aba <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
90013b28:	4653      	mov	r3, sl
90013b2a:	464a      	mov	r2, r9
90013b2c:	4641      	mov	r1, r8
90013b2e:	4628      	mov	r0, r5
90013b30:	e9cd b700 	strd	fp, r7, [sp]
90013b34:	f7ff ff98 	bl	90013a68 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
90013b38:	b940      	cbnz	r0, 90013b4c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
90013b3a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90013b3e:	2b01      	cmp	r3, #1
90013b40:	d004      	beq.n	90013b4c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
90013b42:	3301      	adds	r3, #1
90013b44:	105b      	asrs	r3, r3, #1
90013b46:	f8ad 300c 	strh.w	r3, [sp, #12]
90013b4a:	e7ed      	b.n	90013b28 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa8>
90013b4c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90013b50:	f8bd 3008 	ldrh.w	r3, [sp, #8]
90013b54:	4413      	add	r3, r2
90013b56:	b29b      	uxth	r3, r3
90013b58:	441a      	add	r2, r3
90013b5a:	f8ad 3008 	strh.w	r3, [sp, #8]
90013b5e:	b212      	sxth	r2, r2
90013b60:	4296      	cmp	r6, r2
90013b62:	dadd      	bge.n	90013b20 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
90013b64:	1ae3      	subs	r3, r4, r3
90013b66:	f8ad 300c 	strh.w	r3, [sp, #12]
90013b6a:	e7d9      	b.n	90013b20 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
90013b6c:	2402185c 	.word	0x2402185c

90013b70 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
90013b70:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90013b72:	6803      	ldr	r3, [r0, #0]
90013b74:	460d      	mov	r5, r1
90013b76:	4604      	mov	r4, r0
90013b78:	4601      	mov	r1, r0
90013b7a:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90013b7c:	a802      	add	r0, sp, #8
90013b7e:	4798      	blx	r3
90013b80:	6828      	ldr	r0, [r5, #0]
90013b82:	6869      	ldr	r1, [r5, #4]
90013b84:	466b      	mov	r3, sp
90013b86:	c303      	stmia	r3!, {r0, r1}
90013b88:	4668      	mov	r0, sp
90013b8a:	4619      	mov	r1, r3
90013b8c:	f7fd fb72 	bl	90011274 <_ZN8touchgfx4RectaNERKS0_>
90013b90:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
90013b92:	b188      	cbz	r0, 90013bb8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013b94:	6803      	ldr	r3, [r0, #0]
90013b96:	1d21      	adds	r1, r4, #4
90013b98:	68db      	ldr	r3, [r3, #12]
90013b9a:	4798      	blx	r3
90013b9c:	b160      	cbz	r0, 90013bb8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013b9e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90013ba2:	2b00      	cmp	r3, #0
90013ba4:	dd08      	ble.n	90013bb8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013ba6:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
90013baa:	2d00      	cmp	r5, #0
90013bac:	dd04      	ble.n	90013bb8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013bae:	4a2b      	ldr	r2, [pc, #172]	@ (90013c5c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
90013bb0:	7812      	ldrb	r2, [r2, #0]
90013bb2:	b11a      	cbz	r2, 90013bbc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
90013bb4:	2a01      	cmp	r2, #1
90013bb6:	d029      	beq.n	90013c0c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
90013bb8:	b004      	add	sp, #16
90013bba:	bd70      	pop	{r4, r5, r6, pc}
90013bbc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90013bc0:	441d      	add	r5, r3
90013bc2:	b2ad      	uxth	r5, r5
90013bc4:	b22e      	sxth	r6, r5
90013bc6:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90013bca:	42b3      	cmp	r3, r6
90013bcc:	daf4      	bge.n	90013bb8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013bce:	6823      	ldr	r3, [r4, #0]
90013bd0:	4669      	mov	r1, sp
90013bd2:	4620      	mov	r0, r4
90013bd4:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
90013bd6:	4798      	blx	r3
90013bd8:	b940      	cbnz	r0, 90013bec <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90013bda:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90013bde:	2b01      	cmp	r3, #1
90013be0:	d004      	beq.n	90013bec <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90013be2:	3301      	adds	r3, #1
90013be4:	105b      	asrs	r3, r3, #1
90013be6:	f8ad 3006 	strh.w	r3, [sp, #6]
90013bea:	e7f0      	b.n	90013bce <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
90013bec:	f8bd 2006 	ldrh.w	r2, [sp, #6]
90013bf0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90013bf4:	4413      	add	r3, r2
90013bf6:	b29b      	uxth	r3, r3
90013bf8:	441a      	add	r2, r3
90013bfa:	f8ad 3002 	strh.w	r3, [sp, #2]
90013bfe:	b212      	sxth	r2, r2
90013c00:	4296      	cmp	r6, r2
90013c02:	dae0      	bge.n	90013bc6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90013c04:	1aeb      	subs	r3, r5, r3
90013c06:	f8ad 3006 	strh.w	r3, [sp, #6]
90013c0a:	e7dc      	b.n	90013bc6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90013c0c:	f8bd 5000 	ldrh.w	r5, [sp]
90013c10:	441d      	add	r5, r3
90013c12:	b2ad      	uxth	r5, r5
90013c14:	b22e      	sxth	r6, r5
90013c16:	f9bd 3000 	ldrsh.w	r3, [sp]
90013c1a:	42b3      	cmp	r3, r6
90013c1c:	dacc      	bge.n	90013bb8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013c1e:	6823      	ldr	r3, [r4, #0]
90013c20:	4669      	mov	r1, sp
90013c22:	4620      	mov	r0, r4
90013c24:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
90013c26:	4798      	blx	r3
90013c28:	b940      	cbnz	r0, 90013c3c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
90013c2a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90013c2e:	2b01      	cmp	r3, #1
90013c30:	d004      	beq.n	90013c3c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
90013c32:	3301      	adds	r3, #1
90013c34:	105b      	asrs	r3, r3, #1
90013c36:	f8ad 3004 	strh.w	r3, [sp, #4]
90013c3a:	e7f0      	b.n	90013c1e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
90013c3c:	f8bd 2004 	ldrh.w	r2, [sp, #4]
90013c40:	f8bd 3000 	ldrh.w	r3, [sp]
90013c44:	4413      	add	r3, r2
90013c46:	b29b      	uxth	r3, r3
90013c48:	441a      	add	r2, r3
90013c4a:	f8ad 3000 	strh.w	r3, [sp]
90013c4e:	b212      	sxth	r2, r2
90013c50:	4296      	cmp	r6, r2
90013c52:	dae0      	bge.n	90013c16 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
90013c54:	1aeb      	subs	r3, r5, r3
90013c56:	f8ad 3004 	strh.w	r3, [sp, #4]
90013c5a:	e7dc      	b.n	90013c16 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
90013c5c:	2402185c 	.word	0x2402185c

90013c60 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
90013c60:	b51f      	push	{r0, r1, r2, r3, r4, lr}
90013c62:	6803      	ldr	r3, [r0, #0]
90013c64:	4604      	mov	r4, r0
90013c66:	4601      	mov	r1, r0
90013c68:	4668      	mov	r0, sp
90013c6a:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90013c6c:	4798      	blx	r3
90013c6e:	2100      	movs	r1, #0
90013c70:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90013c74:	4668      	mov	r0, sp
90013c76:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90013c7a:	9102      	str	r1, [sp, #8]
90013c7c:	a902      	add	r1, sp, #8
90013c7e:	f8ad 200c 	strh.w	r2, [sp, #12]
90013c82:	f8ad 300e 	strh.w	r3, [sp, #14]
90013c86:	f7fd faf5 	bl	90011274 <_ZN8touchgfx4RectaNERKS0_>
90013c8a:	6823      	ldr	r3, [r4, #0]
90013c8c:	4669      	mov	r1, sp
90013c8e:	4620      	mov	r0, r4
90013c90:	691b      	ldr	r3, [r3, #16]
90013c92:	4798      	blx	r3
90013c94:	b004      	add	sp, #16
90013c96:	bd10      	pop	{r4, pc}

90013c98 <_ZN8touchgfx12CanvasWidgetC1Ev>:
90013c98:	2101      	movs	r1, #1
90013c9a:	2200      	movs	r2, #0
90013c9c:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
90013ca0:	490a      	ldr	r1, [pc, #40]	@ (90013ccc <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
90013ca2:	8082      	strh	r2, [r0, #4]
90013ca4:	6001      	str	r1, [r0, #0]
90013ca6:	21ff      	movs	r1, #255	@ 0xff
90013ca8:	80c2      	strh	r2, [r0, #6]
90013caa:	8102      	strh	r2, [r0, #8]
90013cac:	8142      	strh	r2, [r0, #10]
90013cae:	8182      	strh	r2, [r0, #12]
90013cb0:	81c2      	strh	r2, [r0, #14]
90013cb2:	8202      	strh	r2, [r0, #16]
90013cb4:	8242      	strh	r2, [r0, #18]
90013cb6:	61c2      	str	r2, [r0, #28]
90013cb8:	8402      	strh	r2, [r0, #32]
90013cba:	8442      	strh	r2, [r0, #34]	@ 0x22
90013cbc:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
90013cc0:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
90013cc4:	6282      	str	r2, [r0, #40]	@ 0x28
90013cc6:	e9c0 2205 	strd	r2, r2, [r0, #20]
90013cca:	4770      	bx	lr
90013ccc:	9002e038 	.word	0x9002e038

90013cd0 <_ZNK8touchgfx5Image17invalidateContentEv>:
90013cd0:	b508      	push	{r3, lr}
90013cd2:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
90013cd6:	b10b      	cbz	r3, 90013cdc <_ZNK8touchgfx5Image17invalidateContentEv+0xc>
90013cd8:	f7ef f8b0 	bl	90002e3c <_ZNK8touchgfx8Drawable17invalidateContentEv>
90013cdc:	bd08      	pop	{r3, pc}

90013cde <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
90013cde:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
90013ce2:	4770      	bx	lr

90013ce4 <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
90013ce4:	f890 0029 	ldrb.w	r0, [r0, #41]	@ 0x29
90013ce8:	4770      	bx	lr

90013cea <_ZN8touchgfx13ScalableImageD1Ev>:
90013cea:	4770      	bx	lr

90013cec <_ZN8touchgfx13ScalableImageD0Ev>:
90013cec:	b510      	push	{r4, lr}
90013cee:	4604      	mov	r4, r0
90013cf0:	212c      	movs	r1, #44	@ 0x2c
90013cf2:	f015 ffbb 	bl	90029c6c <_ZdlPvj>
90013cf6:	4620      	mov	r0, r4
90013cf8:	bd10      	pop	{r4, pc}

90013cfa <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
90013cfa:	b5f0      	push	{r4, r5, r6, r7, lr}
90013cfc:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
90013d00:	b085      	sub	sp, #20
90013d02:	4604      	mov	r4, r0
90013d04:	460d      	mov	r5, r1
90013d06:	2bff      	cmp	r3, #255	@ 0xff
90013d08:	d128      	bne.n	90013d5c <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
90013d0a:	f101 0626 	add.w	r6, r1, #38	@ 0x26
90013d0e:	4668      	mov	r0, sp
90013d10:	4631      	mov	r1, r6
90013d12:	f006 ff65 	bl	9001abe0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90013d16:	f9bd 7004 	ldrsh.w	r7, [sp, #4]
90013d1a:	4630      	mov	r0, r6
90013d1c:	f006 fef8 	bl	9001ab10 <_ZNK8touchgfx6Bitmap8getWidthEv>
90013d20:	4287      	cmp	r7, r0
90013d22:	d11b      	bne.n	90013d5c <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
90013d24:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
90013d28:	4630      	mov	r0, r6
90013d2a:	f006 ff25 	bl	9001ab78 <_ZNK8touchgfx6Bitmap9getHeightEv>
90013d2e:	4287      	cmp	r7, r0
90013d30:	d114      	bne.n	90013d5c <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
90013d32:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
90013d36:	2100      	movs	r1, #0
90013d38:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
90013d3c:	f8ad 300e 	strh.w	r3, [sp, #14]
90013d40:	466b      	mov	r3, sp
90013d42:	9102      	str	r1, [sp, #8]
90013d44:	f8ad 200c 	strh.w	r2, [sp, #12]
90013d48:	cb03      	ldmia	r3!, {r0, r1}
90013d4a:	6020      	str	r0, [r4, #0]
90013d4c:	4620      	mov	r0, r4
90013d4e:	6061      	str	r1, [r4, #4]
90013d50:	4619      	mov	r1, r3
90013d52:	f7fd fa8f 	bl	90011274 <_ZN8touchgfx4RectaNERKS0_>
90013d56:	4620      	mov	r0, r4
90013d58:	b005      	add	sp, #20
90013d5a:	bdf0      	pop	{r4, r5, r6, r7, pc}
90013d5c:	2300      	movs	r3, #0
90013d5e:	8023      	strh	r3, [r4, #0]
90013d60:	8063      	strh	r3, [r4, #2]
90013d62:	80a3      	strh	r3, [r4, #4]
90013d64:	80e3      	strh	r3, [r4, #6]
90013d66:	e7f6      	b.n	90013d56 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x5c>

90013d68 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
90013d68:	b538      	push	{r3, r4, r5, lr}
90013d6a:	2300      	movs	r3, #0
90013d6c:	2501      	movs	r5, #1
90013d6e:	4604      	mov	r4, r0
90013d70:	8083      	strh	r3, [r0, #4]
90013d72:	80c3      	strh	r3, [r0, #6]
90013d74:	8103      	strh	r3, [r0, #8]
90013d76:	8143      	strh	r3, [r0, #10]
90013d78:	8183      	strh	r3, [r0, #12]
90013d7a:	81c3      	strh	r3, [r0, #14]
90013d7c:	8203      	strh	r3, [r0, #16]
90013d7e:	8243      	strh	r3, [r0, #18]
90013d80:	61c3      	str	r3, [r0, #28]
90013d82:	8403      	strh	r3, [r0, #32]
90013d84:	8443      	strh	r3, [r0, #34]	@ 0x22
90013d86:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
90013d8a:	f880 5025 	strb.w	r5, [r0, #37]	@ 0x25
90013d8e:	e9c0 3305 	strd	r3, r3, [r0, #20]
90013d92:	4b07      	ldr	r3, [pc, #28]	@ (90013db0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
90013d94:	6003      	str	r3, [r0, #0]
90013d96:	880b      	ldrh	r3, [r1, #0]
90013d98:	84c3      	strh	r3, [r0, #38]	@ 0x26
90013d9a:	23ff      	movs	r3, #255	@ 0xff
90013d9c:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
90013da0:	f000 fc45 	bl	9001462e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90013da4:	4b03      	ldr	r3, [pc, #12]	@ (90013db4 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
90013da6:	f884 5029 	strb.w	r5, [r4, #41]	@ 0x29
90013daa:	4620      	mov	r0, r4
90013dac:	6023      	str	r3, [r4, #0]
90013dae:	bd38      	pop	{r3, r4, r5, pc}
90013db0:	9002e18c 	.word	0x9002e18c
90013db4:	9002e0b0 	.word	0x9002e0b0

90013db8 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
90013db8:	4603      	mov	r3, r0
90013dba:	3026      	adds	r0, #38	@ 0x26
90013dbc:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
90013dc0:	b90b      	cbnz	r3, 90013dc6 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
90013dc2:	f004 bfc5 	b.w	90018d50 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
90013dc6:	f004 bfd3 	b.w	90018d70 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

90013dcc <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
90013dcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013dd0:	4604      	mov	r4, r0
90013dd2:	b0b3      	sub	sp, #204	@ 0xcc
90013dd4:	469b      	mov	fp, r3
90013dd6:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
90013dda:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90013dde:	2500      	movs	r5, #0
90013de0:	f8ad 0048 	strh.w	r0, [sp, #72]	@ 0x48
90013de4:	f8ad 304a 	strh.w	r3, [sp, #74]	@ 0x4a
90013de8:	ab11      	add	r3, sp, #68	@ 0x44
90013dea:	9206      	str	r2, [sp, #24]
90013dec:	4618      	mov	r0, r3
90013dee:	9511      	str	r5, [sp, #68]	@ 0x44
90013df0:	9307      	str	r3, [sp, #28]
90013df2:	ad13      	add	r5, sp, #76	@ 0x4c
90013df4:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	@ 0xf0
90013df8:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	@ 0xf8
90013dfc:	f7fd fa3a 	bl	90011274 <_ZN8touchgfx4RectaNERKS0_>
90013e00:	9b07      	ldr	r3, [sp, #28]
90013e02:	e893 0003 	ldmia.w	r3, {r0, r1}
90013e06:	e885 0003 	stmia.w	r5, {r0, r1}
90013e0a:	6821      	ldr	r1, [r4, #0]
90013e0c:	4620      	mov	r0, r4
90013e0e:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
90013e10:	4629      	mov	r1, r5
90013e12:	47b0      	blx	r6
90013e14:	4621      	mov	r1, r4
90013e16:	a815      	add	r0, sp, #84	@ 0x54
90013e18:	1d26      	adds	r6, r4, #4
90013e1a:	f004 fb4b 	bl	900184b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90013e1e:	a815      	add	r0, sp, #84	@ 0x54
90013e20:	f002 ff3e 	bl	90016ca0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90013e24:	9b07      	ldr	r3, [sp, #28]
90013e26:	4631      	mov	r1, r6
90013e28:	4618      	mov	r0, r3
90013e2a:	f002 ff7d 	bl	90016d28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90013e2e:	4628      	mov	r0, r5
90013e30:	f104 0526 	add.w	r5, r4, #38	@ 0x26
90013e34:	f002 ff34 	bl	90016ca0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90013e38:	4628      	mov	r0, r5
90013e3a:	f006 ff5b 	bl	9001acf4 <_ZNK8touchgfx6Bitmap7getDataEv>
90013e3e:	9007      	str	r0, [sp, #28]
90013e40:	2800      	cmp	r0, #0
90013e42:	f000 80ce 	beq.w	90013fe2 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x216>
90013e46:	f8db 200c 	ldr.w	r2, [fp, #12]
90013e4a:	a809      	add	r0, sp, #36	@ 0x24
90013e4c:	f8db 1000 	ldr.w	r1, [fp]
90013e50:	920c      	str	r2, [sp, #48]	@ 0x30
90013e52:	f8da 2000 	ldr.w	r2, [sl]
90013e56:	9109      	str	r1, [sp, #36]	@ 0x24
90013e58:	920d      	str	r2, [sp, #52]	@ 0x34
90013e5a:	f8da 2004 	ldr.w	r2, [sl, #4]
90013e5e:	f8db 1004 	ldr.w	r1, [fp, #4]
90013e62:	920e      	str	r2, [sp, #56]	@ 0x38
90013e64:	f8da 2008 	ldr.w	r2, [sl, #8]
90013e68:	910a      	str	r1, [sp, #40]	@ 0x28
90013e6a:	920f      	str	r2, [sp, #60]	@ 0x3c
90013e6c:	f8db 1008 	ldr.w	r1, [fp, #8]
90013e70:	f8da 200c 	ldr.w	r2, [sl, #12]
90013e74:	910b      	str	r1, [sp, #44]	@ 0x2c
90013e76:	a90d      	add	r1, sp, #52	@ 0x34
90013e78:	9210      	str	r2, [sp, #64]	@ 0x40
90013e7a:	4632      	mov	r2, r6
90013e7c:	f002 ff38 	bl	90016cf0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90013e80:	4632      	mov	r2, r6
90013e82:	a90e      	add	r1, sp, #56	@ 0x38
90013e84:	a80a      	add	r0, sp, #40	@ 0x28
90013e86:	f002 ff33 	bl	90016cf0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90013e8a:	4632      	mov	r2, r6
90013e8c:	a90f      	add	r1, sp, #60	@ 0x3c
90013e8e:	a80b      	add	r0, sp, #44	@ 0x2c
90013e90:	f002 ff2e 	bl	90016cf0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90013e94:	4632      	mov	r2, r6
90013e96:	a910      	add	r1, sp, #64	@ 0x40
90013e98:	a80c      	add	r0, sp, #48	@ 0x30
90013e9a:	f002 ff29 	bl	90016cf0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90013e9e:	eddd 7a0d 	vldr	s15, [sp, #52]	@ 0x34
90013ea2:	ed97 3a00 	vldr	s6, [r7]
90013ea6:	eef0 6a67 	vmov.f32	s13, s15
90013eaa:	eddd 7a0a 	vldr	s15, [sp, #40]	@ 0x28
90013eae:	edd7 4a01 	vldr	s9, [r7, #4]
90013eb2:	eeb0 7a67 	vmov.f32	s14, s15
90013eb6:	eddd 7a0e 	vldr	s15, [sp, #56]	@ 0x38
90013eba:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
90013ebe:	ed99 2a00 	vldr	s4, [r9]
90013ec2:	eeb0 6a67 	vmov.f32	s12, s15
90013ec6:	eddd 7a0b 	vldr	s15, [sp, #44]	@ 0x2c
90013eca:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
90013ece:	edd8 2a00 	vldr	s5, [r8]
90013ed2:	edd9 3a01 	vldr	s7, [r9, #4]
90013ed6:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90013eda:	ed98 4a01 	vldr	s8, [r8, #4]
90013ede:	ed99 5a02 	vldr	s10, [r9, #8]
90013ee2:	edd8 5a02 	vldr	s11, [r8, #8]
90013ee6:	ee16 6a10 	vmov	r6, s12
90013eea:	eeb0 6a67 	vmov.f32	s12, s15
90013eee:	eddd 7a0f 	vldr	s15, [sp, #60]	@ 0x3c
90013ef2:	f8d9 e00c 	ldr.w	lr, [r9, #12]
90013ef6:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90013efa:	f8d8 c00c 	ldr.w	ip, [r8, #12]
90013efe:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
90013f02:	ed8d 2a20 	vstr	s4, [sp, #128]	@ 0x80
90013f06:	ee16 0a10 	vmov	r0, s12
90013f0a:	eeb0 6a67 	vmov.f32	s12, s15
90013f0e:	eddd 7a0c 	vldr	s15, [sp, #48]	@ 0x30
90013f12:	edcd 2a21 	vstr	s5, [sp, #132]	@ 0x84
90013f16:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90013f1a:	ed8d 3a22 	vstr	s6, [sp, #136]	@ 0x88
90013f1e:	ed8d 7a23 	vstr	s14, [sp, #140]	@ 0x8c
90013f22:	edcd 3a25 	vstr	s7, [sp, #148]	@ 0x94
90013f26:	ee16 1a10 	vmov	r1, s12
90013f2a:	eeb0 6a67 	vmov.f32	s12, s15
90013f2e:	eddd 7a10 	vldr	s15, [sp, #64]	@ 0x40
90013f32:	ed8d 4a26 	vstr	s8, [sp, #152]	@ 0x98
90013f36:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90013f3a:	edcd 4a27 	vstr	s9, [sp, #156]	@ 0x9c
90013f3e:	f8d7 a008 	ldr.w	sl, [r7, #8]
90013f42:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
90013f46:	68ff      	ldr	r7, [r7, #12]
90013f48:	ee16 2a10 	vmov	r2, s12
90013f4c:	ed9d 6a09 	vldr	s12, [sp, #36]	@ 0x24
90013f50:	9624      	str	r6, [sp, #144]	@ 0x90
90013f52:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90013f56:	e9cd 0128 	strd	r0, r1, [sp, #160]	@ 0xa0
90013f5a:	ed8d 6a1e 	vstr	s12, [sp, #120]	@ 0x78
90013f5e:	4628      	mov	r0, r5
90013f60:	ed8d 5a2a 	vstr	s10, [sp, #168]	@ 0xa8
90013f64:	9b06      	ldr	r3, [sp, #24]
90013f66:	922d      	str	r2, [sp, #180]	@ 0xb4
90013f68:	4a1f      	ldr	r2, [pc, #124]	@ (90013fe8 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21c>)
90013f6a:	9317      	str	r3, [sp, #92]	@ 0x5c
90013f6c:	8812      	ldrh	r2, [r2, #0]
90013f6e:	9b07      	ldr	r3, [sp, #28]
90013f70:	9218      	str	r2, [sp, #96]	@ 0x60
90013f72:	9319      	str	r3, [sp, #100]	@ 0x64
90013f74:	edcd 5a2b 	vstr	s11, [sp, #172]	@ 0xac
90013f78:	edcd 7a2e 	vstr	s15, [sp, #184]	@ 0xb8
90013f7c:	f8cd e0bc 	str.w	lr, [sp, #188]	@ 0xbc
90013f80:	f8cd c0c0 	str.w	ip, [sp, #192]	@ 0xc0
90013f84:	f8cd a0b0 	str.w	sl, [sp, #176]	@ 0xb0
90013f88:	9731      	str	r7, [sp, #196]	@ 0xc4
90013f8a:	f006 fee3 	bl	9001ad54 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
90013f8e:	901a      	str	r0, [sp, #104]	@ 0x68
90013f90:	4628      	mov	r0, r5
90013f92:	f006 fdbd 	bl	9001ab10 <_ZNK8touchgfx6Bitmap8getWidthEv>
90013f96:	901b      	str	r0, [sp, #108]	@ 0x6c
90013f98:	4628      	mov	r0, r5
90013f9a:	f006 fded 	bl	9001ab78 <_ZNK8touchgfx6Bitmap9getHeightEv>
90013f9e:	901c      	str	r0, [sp, #112]	@ 0x70
90013fa0:	4628      	mov	r0, r5
90013fa2:	f006 fdb5 	bl	9001ab10 <_ZNK8touchgfx6Bitmap8getWidthEv>
90013fa6:	4b11      	ldr	r3, [pc, #68]	@ (90013fec <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
90013fa8:	901d      	str	r0, [sp, #116]	@ 0x74
90013faa:	681b      	ldr	r3, [r3, #0]
90013fac:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90013fb0:	b10a      	cbz	r2, 90013fb6 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
90013fb2:	6cdd      	ldr	r5, [r3, #76]	@ 0x4c
90013fb4:	b905      	cbnz	r5, 90013fb8 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ec>
90013fb6:	689d      	ldr	r5, [r3, #8]
90013fb8:	682b      	ldr	r3, [r5, #0]
90013fba:	4620      	mov	r0, r4
90013fbc:	6c1e      	ldr	r6, [r3, #64]	@ 0x40
90013fbe:	f7ff fefb 	bl	90013db8 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
90013fc2:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90013fc6:	aa1e      	add	r2, sp, #120	@ 0x78
90013fc8:	a917      	add	r1, sp, #92	@ 0x5c
90013fca:	9304      	str	r3, [sp, #16]
90013fcc:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
90013fd0:	e9cd 0302 	strd	r0, r3, [sp, #8]
90013fd4:	ab13      	add	r3, sp, #76	@ 0x4c
90013fd6:	4628      	mov	r0, r5
90013fd8:	9301      	str	r3, [sp, #4]
90013fda:	ab15      	add	r3, sp, #84	@ 0x54
90013fdc:	9300      	str	r3, [sp, #0]
90013fde:	ab19      	add	r3, sp, #100	@ 0x64
90013fe0:	47b0      	blx	r6
90013fe2:	b033      	add	sp, #204	@ 0xcc
90013fe4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013fe8:	2402185e 	.word	0x2402185e
90013fec:	24021864 	.word	0x24021864

90013ff0 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
90013ff0:	b570      	push	{r4, r5, r6, lr}
90013ff2:	ed2d 8b04 	vpush	{d8-d9}
90013ff6:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
90013ffa:	b098      	sub	sp, #96	@ 0x60
90013ffc:	4604      	mov	r4, r0
90013ffe:	460e      	mov	r6, r1
90014000:	2b00      	cmp	r3, #0
90014002:	d065      	beq.n	900140d0 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
90014004:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90014008:	f100 0526 	add.w	r5, r0, #38	@ 0x26
9001400c:	ed9f 8a37 	vldr	s16, [pc, #220]	@ 900140ec <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
90014010:	ee09 3a10 	vmov	s18, r3
90014014:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90014018:	4628      	mov	r0, r5
9001401a:	ee08 3a90 	vmov	s17, r3
9001401e:	4b34      	ldr	r3, [pc, #208]	@ (900140f0 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
90014020:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
90014024:	930c      	str	r3, [sp, #48]	@ 0x30
90014026:	eef8 8ae8 	vcvt.f32.s32	s17, s17
9001402a:	930d      	str	r3, [sp, #52]	@ 0x34
9001402c:	930e      	str	r3, [sp, #56]	@ 0x38
9001402e:	ee39 9a08 	vadd.f32	s18, s18, s16
90014032:	930f      	str	r3, [sp, #60]	@ 0x3c
90014034:	f006 fd6c 	bl	9001ab10 <_ZNK8touchgfx6Bitmap8getWidthEv>
90014038:	ee07 0a90 	vmov	s15, r0
9001403c:	4628      	mov	r0, r5
9001403e:	ee78 8a88 	vadd.f32	s17, s17, s16
90014042:	eef8 9ae7 	vcvt.f32.s32	s19, s15
90014046:	f006 fd97 	bl	9001ab78 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001404a:	4b2a      	ldr	r3, [pc, #168]	@ (900140f4 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
9001404c:	ee07 0a90 	vmov	s15, r0
90014050:	781b      	ldrb	r3, [r3, #0]
90014052:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
90014056:	eef0 7a48 	vmov.f32	s15, s16
9001405a:	2b01      	cmp	r3, #1
9001405c:	d13c      	bne.n	900140d8 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
9001405e:	eef0 6a69 	vmov.f32	s13, s19
90014062:	ee19 3a90 	vmov	r3, s19
90014066:	eeb0 6a47 	vmov.f32	s12, s14
9001406a:	eef0 5a47 	vmov.f32	s11, s14
9001406e:	eef0 9a48 	vmov.f32	s19, s16
90014072:	eeb0 7a48 	vmov.f32	s14, s16
90014076:	9314      	str	r3, [sp, #80]	@ 0x50
90014078:	ab14      	add	r3, sp, #80	@ 0x50
9001407a:	2200      	movs	r2, #0
9001407c:	4631      	mov	r1, r6
9001407e:	9303      	str	r3, [sp, #12]
90014080:	ab10      	add	r3, sp, #64	@ 0x40
90014082:	4620      	mov	r0, r4
90014084:	edcd 7a04 	vstr	s15, [sp, #16]
90014088:	9302      	str	r3, [sp, #8]
9001408a:	ab0c      	add	r3, sp, #48	@ 0x30
9001408c:	ed8d 9a05 	vstr	s18, [sp, #20]
90014090:	9301      	str	r3, [sp, #4]
90014092:	ab08      	add	r3, sp, #32
90014094:	ed8d 9a06 	vstr	s18, [sp, #24]
90014098:	9300      	str	r3, [sp, #0]
9001409a:	ab04      	add	r3, sp, #16
9001409c:	edcd 7a07 	vstr	s15, [sp, #28]
900140a0:	edcd 7a08 	vstr	s15, [sp, #32]
900140a4:	edcd 7a09 	vstr	s15, [sp, #36]	@ 0x24
900140a8:	edcd 8a0a 	vstr	s17, [sp, #40]	@ 0x28
900140ac:	edcd 8a0b 	vstr	s17, [sp, #44]	@ 0x2c
900140b0:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
900140b4:	edcd 9a11 	vstr	s19, [sp, #68]	@ 0x44
900140b8:	edcd 5a12 	vstr	s11, [sp, #72]	@ 0x48
900140bc:	ed8d 6a13 	vstr	s12, [sp, #76]	@ 0x4c
900140c0:	edcd 7a15 	vstr	s15, [sp, #84]	@ 0x54
900140c4:	ed8d 7a16 	vstr	s14, [sp, #88]	@ 0x58
900140c8:	edcd 6a17 	vstr	s13, [sp, #92]	@ 0x5c
900140cc:	f7ff fe7e 	bl	90013dcc <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
900140d0:	b018      	add	sp, #96	@ 0x60
900140d2:	ecbd 8b04 	vpop	{d8-d9}
900140d6:	bd70      	pop	{r4, r5, r6, pc}
900140d8:	eef0 6a47 	vmov.f32	s13, s14
900140dc:	ee18 3a10 	vmov	r3, s16
900140e0:	eef0 5a69 	vmov.f32	s11, s19
900140e4:	eeb0 6a48 	vmov.f32	s12, s16
900140e8:	e7c5      	b.n	90014076 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
900140ea:	bf00      	nop
900140ec:	00000000 	.word	0x00000000
900140f0:	42c80000 	.word	0x42c80000
900140f4:	2402185c 	.word	0x2402185c

900140f8 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
900140f8:	4b07      	ldr	r3, [pc, #28]	@ (90014118 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
900140fa:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
900140fc:	881b      	ldrh	r3, [r3, #0]
900140fe:	4293      	cmp	r3, r2
90014100:	bf81      	itttt	hi
90014102:	4b06      	ldrhi	r3, [pc, #24]	@ (9001411c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
90014104:	681b      	ldrhi	r3, [r3, #0]
90014106:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
9001410a:	7858      	ldrbhi	r0, [r3, #1]
9001410c:	bf8c      	ite	hi
9001410e:	f000 0003 	andhi.w	r0, r0, #3
90014112:	2000      	movls	r0, #0
90014114:	4770      	bx	lr
90014116:	bf00      	nop
90014118:	240218c0 	.word	0x240218c0
9001411c:	240218bc 	.word	0x240218bc

90014120 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
90014120:	4b11      	ldr	r3, [pc, #68]	@ (90014168 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
90014122:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90014126:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
90014128:	4604      	mov	r4, r0
9001412a:	881b      	ldrh	r3, [r3, #0]
9001412c:	428b      	cmp	r3, r1
9001412e:	d918      	bls.n	90014162 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
90014130:	6803      	ldr	r3, [r0, #0]
90014132:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
90014134:	4b0d      	ldr	r3, [pc, #52]	@ (9001416c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
90014136:	6818      	ldr	r0, [r3, #0]
90014138:	f7f1 fa2c 	bl	90005594 <_ZNK8touchgfx5Texts7getTextEt>
9001413c:	6823      	ldr	r3, [r4, #0]
9001413e:	4606      	mov	r6, r0
90014140:	4620      	mov	r0, r4
90014142:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90014144:	4798      	blx	r3
90014146:	6823      	ldr	r3, [r4, #0]
90014148:	4607      	mov	r7, r0
9001414a:	4620      	mov	r0, r4
9001414c:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90014150:	4798      	blx	r3
90014152:	463a      	mov	r2, r7
90014154:	4603      	mov	r3, r0
90014156:	4631      	mov	r1, r6
90014158:	4620      	mov	r0, r4
9001415a:	46ac      	mov	ip, r5
9001415c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90014160:	4760      	bx	ip
90014162:	2000      	movs	r0, #0
90014164:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90014168:	240218c0 	.word	0x240218c0
9001416c:	240218c8 	.word	0x240218c8

90014170 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
90014170:	4b18      	ldr	r3, [pc, #96]	@ (900141d4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
90014172:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
90014176:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
90014178:	4604      	mov	r4, r0
9001417a:	881b      	ldrh	r3, [r3, #0]
9001417c:	428b      	cmp	r3, r1
9001417e:	d926      	bls.n	900141ce <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
90014180:	4b15      	ldr	r3, [pc, #84]	@ (900141d8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
90014182:	681b      	ldr	r3, [r3, #0]
90014184:	eb03 0241 	add.w	r2, r3, r1, lsl #1
90014188:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
9001418c:	4b13      	ldr	r3, [pc, #76]	@ (900141dc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
9001418e:	7855      	ldrb	r5, [r2, #1]
90014190:	681b      	ldr	r3, [r3, #0]
90014192:	f3c5 0581 	ubfx	r5, r5, #2, #2
90014196:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
9001419a:	6833      	ldr	r3, [r6, #0]
9001419c:	69df      	ldr	r7, [r3, #28]
9001419e:	4b10      	ldr	r3, [pc, #64]	@ (900141e0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
900141a0:	6818      	ldr	r0, [r3, #0]
900141a2:	f7f1 f9f7 	bl	90005594 <_ZNK8touchgfx5Texts7getTextEt>
900141a6:	6823      	ldr	r3, [r4, #0]
900141a8:	4680      	mov	r8, r0
900141aa:	4620      	mov	r0, r4
900141ac:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
900141ae:	4798      	blx	r3
900141b0:	6823      	ldr	r3, [r4, #0]
900141b2:	4681      	mov	r9, r0
900141b4:	4620      	mov	r0, r4
900141b6:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
900141ba:	4798      	blx	r3
900141bc:	464b      	mov	r3, r9
900141be:	9000      	str	r0, [sp, #0]
900141c0:	4642      	mov	r2, r8
900141c2:	4629      	mov	r1, r5
900141c4:	4630      	mov	r0, r6
900141c6:	47b8      	blx	r7
900141c8:	b003      	add	sp, #12
900141ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900141ce:	2000      	movs	r0, #0
900141d0:	e7fa      	b.n	900141c8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
900141d2:	bf00      	nop
900141d4:	240218c0 	.word	0x240218c0
900141d8:	240218bc 	.word	0x240218bc
900141dc:	240218c4 	.word	0x240218c4
900141e0:	240218c8 	.word	0x240218c8

900141e4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
900141e4:	b40e      	push	{r1, r2, r3}
900141e6:	4b30      	ldr	r3, [pc, #192]	@ (900142a8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
900141e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900141ec:	881a      	ldrh	r2, [r3, #0]
900141ee:	b09d      	sub	sp, #116	@ 0x74
900141f0:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
900141f2:	4604      	mov	r4, r0
900141f4:	429a      	cmp	r2, r3
900141f6:	d954      	bls.n	900142a2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
900141f8:	aa26      	add	r2, sp, #152	@ 0x98
900141fa:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 900142ac <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
900141fe:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 900142b0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
90014202:	9202      	str	r2, [sp, #8]
90014204:	f8d9 2000 	ldr.w	r2, [r9]
90014208:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
9001420c:	f8d8 3000 	ldr.w	r3, [r8]
90014210:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90014214:	682b      	ldr	r3, [r5, #0]
90014216:	4628      	mov	r0, r5
90014218:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001421a:	4798      	blx	r3
9001421c:	4606      	mov	r6, r0
9001421e:	b207      	sxth	r7, r0
90014220:	a803      	add	r0, sp, #12
90014222:	f005 f8d3 	bl	900193cc <_ZN8touchgfx12TextProviderC1Ev>
90014226:	682b      	ldr	r3, [r5, #0]
90014228:	4628      	mov	r0, r5
9001422a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001422c:	4798      	blx	r3
9001422e:	682b      	ldr	r3, [r5, #0]
90014230:	4682      	mov	sl, r0
90014232:	4628      	mov	r0, r5
90014234:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90014236:	4798      	blx	r3
90014238:	4653      	mov	r3, sl
9001423a:	9000      	str	r0, [sp, #0]
9001423c:	a803      	add	r0, sp, #12
9001423e:	9a02      	ldr	r2, [sp, #8]
90014240:	9925      	ldr	r1, [sp, #148]	@ 0x94
90014242:	f005 f916 	bl	90019472 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90014246:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
90014248:	f8d9 3000 	ldr.w	r3, [r9]
9001424c:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
90014250:	8925      	ldrh	r5, [r4, #8]
90014252:	eb03 0142 	add.w	r1, r3, r2, lsl #1
90014256:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
9001425a:	eba5 050c 	sub.w	r5, r5, ip
9001425e:	784a      	ldrb	r2, [r1, #1]
90014260:	f8d8 3000 	ldr.w	r3, [r8]
90014264:	b22d      	sxth	r5, r5
90014266:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
9001426a:	f3c2 0281 	ubfx	r2, r2, #2, #2
9001426e:	9500      	str	r5, [sp, #0]
90014270:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
90014274:	a803      	add	r0, sp, #12
90014276:	f002 fa19 	bl	900166ac <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
9001427a:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
9001427e:	b203      	sxth	r3, r0
90014280:	18b9      	adds	r1, r7, r2
90014282:	2900      	cmp	r1, #0
90014284:	dd0b      	ble.n	9001429e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
90014286:	3b01      	subs	r3, #1
90014288:	fb13 f302 	smulbb	r3, r3, r2
9001428c:	fb16 3300 	smlabb	r3, r6, r0, r3
90014290:	b21f      	sxth	r7, r3
90014292:	4638      	mov	r0, r7
90014294:	b01d      	add	sp, #116	@ 0x74
90014296:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001429a:	b003      	add	sp, #12
9001429c:	4770      	bx	lr
9001429e:	2b00      	cmp	r3, #0
900142a0:	dcf7      	bgt.n	90014292 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
900142a2:	2700      	movs	r7, #0
900142a4:	e7f5      	b.n	90014292 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
900142a6:	bf00      	nop
900142a8:	240218c0 	.word	0x240218c0
900142ac:	240218bc 	.word	0x240218bc
900142b0:	240218c4 	.word	0x240218c4

900142b4 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
900142b4:	b570      	push	{r4, r5, r6, lr}
900142b6:	6803      	ldr	r3, [r0, #0]
900142b8:	4604      	mov	r4, r0
900142ba:	4615      	mov	r5, r2
900142bc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900142be:	4798      	blx	r3
900142c0:	6823      	ldr	r3, [r4, #0]
900142c2:	4629      	mov	r1, r5
900142c4:	4620      	mov	r0, r4
900142c6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900142c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900142cc:	4718      	bx	r3
	...

900142d0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
900142d0:	b538      	push	{r3, r4, r5, lr}
900142d2:	4b0e      	ldr	r3, [pc, #56]	@ (9001430c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
900142d4:	4604      	mov	r4, r0
900142d6:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
900142d8:	881b      	ldrh	r3, [r3, #0]
900142da:	429a      	cmp	r2, r3
900142dc:	d214      	bcs.n	90014308 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
900142de:	6803      	ldr	r3, [r0, #0]
900142e0:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
900142e2:	4798      	blx	r3
900142e4:	6823      	ldr	r3, [r4, #0]
900142e6:	4605      	mov	r5, r0
900142e8:	4620      	mov	r0, r4
900142ea:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
900142ec:	4798      	blx	r3
900142ee:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
900142f2:	b22d      	sxth	r5, r5
900142f4:	4601      	mov	r1, r0
900142f6:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
900142fa:	bf06      	itte	eq
900142fc:	4602      	moveq	r2, r0
900142fe:	4629      	moveq	r1, r5
90014300:	462a      	movne	r2, r5
90014302:	4620      	mov	r0, r4
90014304:	f7ff ffd6 	bl	900142b4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
90014308:	bd38      	pop	{r3, r4, r5, pc}
9001430a:	bf00      	nop
9001430c:	240218c0 	.word	0x240218c0

90014310 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
90014310:	b530      	push	{r4, r5, lr}
90014312:	888b      	ldrh	r3, [r1, #4]
90014314:	b085      	sub	sp, #20
90014316:	4604      	mov	r4, r0
90014318:	8583      	strh	r3, [r0, #44]	@ 0x2c
9001431a:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
9001431e:	b923      	cbnz	r3, 9001432a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90014320:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90014324:	b90b      	cbnz	r3, 9001432a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90014326:	f7ff ffd3 	bl	900142d0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
9001432a:	6823      	ldr	r3, [r4, #0]
9001432c:	466d      	mov	r5, sp
9001432e:	4621      	mov	r1, r4
90014330:	343c      	adds	r4, #60	@ 0x3c
90014332:	4628      	mov	r0, r5
90014334:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90014338:	4798      	blx	r3
9001433a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
9001433e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
90014342:	b005      	add	sp, #20
90014344:	bd30      	pop	{r4, r5, pc}

90014346 <_ZNK8touchgfx3Box12getSolidRectEv>:
90014346:	2300      	movs	r3, #0
90014348:	8083      	strh	r3, [r0, #4]
9001434a:	80c3      	strh	r3, [r0, #6]
9001434c:	8003      	strh	r3, [r0, #0]
9001434e:	8043      	strh	r3, [r0, #2]
90014350:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
90014354:	2bff      	cmp	r3, #255	@ 0xff
90014356:	bf01      	itttt	eq
90014358:	890b      	ldrheq	r3, [r1, #8]
9001435a:	8083      	strheq	r3, [r0, #4]
9001435c:	894b      	ldrheq	r3, [r1, #10]
9001435e:	80c3      	strheq	r3, [r0, #6]
90014360:	4770      	bx	lr
	...

90014364 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
90014364:	b537      	push	{r0, r1, r2, r4, r5, lr}
90014366:	4604      	mov	r4, r0
90014368:	466b      	mov	r3, sp
9001436a:	6808      	ldr	r0, [r1, #0]
9001436c:	6849      	ldr	r1, [r1, #4]
9001436e:	c303      	stmia	r3!, {r0, r1}
90014370:	6823      	ldr	r3, [r4, #0]
90014372:	4669      	mov	r1, sp
90014374:	4620      	mov	r0, r4
90014376:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90014378:	4798      	blx	r3
9001437a:	4b08      	ldr	r3, [pc, #32]	@ (9001439c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
9001437c:	681b      	ldr	r3, [r3, #0]
9001437e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90014382:	b10a      	cbz	r2, 90014388 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
90014384:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90014386:	b900      	cbnz	r0, 9001438a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
90014388:	6898      	ldr	r0, [r3, #8]
9001438a:	6803      	ldr	r3, [r0, #0]
9001438c:	4669      	mov	r1, sp
9001438e:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
90014390:	6a1d      	ldr	r5, [r3, #32]
90014392:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
90014396:	47a8      	blx	r5
90014398:	b003      	add	sp, #12
9001439a:	bd30      	pop	{r4, r5, pc}
9001439c:	24021864 	.word	0x24021864

900143a0 <_ZN8touchgfx3BoxD1Ev>:
900143a0:	4770      	bx	lr

900143a2 <_ZN8touchgfx3BoxD0Ev>:
900143a2:	b510      	push	{r4, lr}
900143a4:	4604      	mov	r4, r0
900143a6:	212c      	movs	r1, #44	@ 0x2c
900143a8:	f015 fc60 	bl	90029c6c <_ZdlPvj>
900143ac:	4620      	mov	r0, r4
900143ae:	bd10      	pop	{r4, pc}

900143b0 <_ZNK8touchgfx3Box17invalidateContentEv>:
900143b0:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
900143b4:	b12a      	cbz	r2, 900143c2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
900143b6:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
900143ba:	b112      	cbz	r2, 900143c2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
900143bc:	6803      	ldr	r3, [r0, #0]
900143be:	695b      	ldr	r3, [r3, #20]
900143c0:	4718      	bx	r3
900143c2:	4770      	bx	lr

900143c4 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
900143c4:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
900143c8:	4770      	bx	lr

900143ca <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
900143ca:	b570      	push	{r4, r5, r6, lr}
900143cc:	880b      	ldrh	r3, [r1, #0]
900143ce:	4605      	mov	r5, r0
900143d0:	4604      	mov	r4, r0
900143d2:	85c3      	strh	r3, [r0, #46]	@ 0x2e
900143d4:	8813      	ldrh	r3, [r2, #0]
900143d6:	f825 3f30 	strh.w	r3, [r5, #48]!
900143da:	4628      	mov	r0, r5
900143dc:	f006 fb98 	bl	9001ab10 <_ZNK8touchgfx6Bitmap8getWidthEv>
900143e0:	4606      	mov	r6, r0
900143e2:	4628      	mov	r0, r5
900143e4:	f006 fbc8 	bl	9001ab78 <_ZNK8touchgfx6Bitmap9getHeightEv>
900143e8:	6823      	ldr	r3, [r4, #0]
900143ea:	4605      	mov	r5, r0
900143ec:	4631      	mov	r1, r6
900143ee:	4620      	mov	r0, r4
900143f0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900143f2:	4798      	blx	r3
900143f4:	6823      	ldr	r3, [r4, #0]
900143f6:	4629      	mov	r1, r5
900143f8:	4620      	mov	r0, r4
900143fa:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900143fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014400:	4718      	bx	r3

90014402 <_ZN8touchgfx14AbstractButton13executeActionEv>:
90014402:	b510      	push	{r4, lr}
90014404:	4604      	mov	r4, r0
90014406:	6a80      	ldr	r0, [r0, #40]	@ 0x28
90014408:	b150      	cbz	r0, 90014420 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
9001440a:	6803      	ldr	r3, [r0, #0]
9001440c:	68db      	ldr	r3, [r3, #12]
9001440e:	4798      	blx	r3
90014410:	b130      	cbz	r0, 90014420 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
90014412:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
90014414:	4621      	mov	r1, r4
90014416:	6803      	ldr	r3, [r0, #0]
90014418:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001441c:	689b      	ldr	r3, [r3, #8]
9001441e:	4718      	bx	r3
90014420:	bd10      	pop	{r4, pc}

90014422 <_ZNK8touchgfx6Button12getSolidRectEv>:
90014422:	b510      	push	{r4, lr}
90014424:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
90014428:	4604      	mov	r4, r0
9001442a:	2bff      	cmp	r3, #255	@ 0xff
9001442c:	d006      	beq.n	9001443c <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
9001442e:	2300      	movs	r3, #0
90014430:	8003      	strh	r3, [r0, #0]
90014432:	8043      	strh	r3, [r0, #2]
90014434:	8083      	strh	r3, [r0, #4]
90014436:	80c3      	strh	r3, [r0, #6]
90014438:	4620      	mov	r0, r4
9001443a:	bd10      	pop	{r4, pc}
9001443c:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
90014440:	b11b      	cbz	r3, 9001444a <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
90014442:	3130      	adds	r1, #48	@ 0x30
90014444:	f006 fbcc 	bl	9001abe0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90014448:	e7f6      	b.n	90014438 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
9001444a:	312e      	adds	r1, #46	@ 0x2e
9001444c:	e7fa      	b.n	90014444 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

90014450 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
90014450:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90014454:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
90014458:	b08a      	sub	sp, #40	@ 0x28
9001445a:	4604      	mov	r4, r0
9001445c:	4688      	mov	r8, r1
9001445e:	2b00      	cmp	r3, #0
90014460:	d066      	beq.n	90014530 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
90014462:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
90014464:	a805      	add	r0, sp, #20
90014466:	f8ad 3014 	strh.w	r3, [sp, #20]
9001446a:	f006 fb51 	bl	9001ab10 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001446e:	4607      	mov	r7, r0
90014470:	a805      	add	r0, sp, #20
90014472:	f006 fb81 	bl	9001ab78 <_ZNK8touchgfx6Bitmap9getHeightEv>
90014476:	f9b8 6000 	ldrsh.w	r6, [r8]
9001447a:	f8b8 2004 	ldrh.w	r2, [r8, #4]
9001447e:	2300      	movs	r3, #0
90014480:	4432      	add	r2, r6
90014482:	9306      	str	r3, [sp, #24]
90014484:	b292      	uxth	r2, r2
90014486:	fa0f fc82 	sxth.w	ip, r2
9001448a:	459c      	cmp	ip, r3
9001448c:	dd52      	ble.n	90014534 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
9001448e:	42b7      	cmp	r7, r6
90014490:	dd50      	ble.n	90014534 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90014492:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
90014496:	f8b8 3006 	ldrh.w	r3, [r8, #6]
9001449a:	442b      	add	r3, r5
9001449c:	b29b      	uxth	r3, r3
9001449e:	b219      	sxth	r1, r3
900144a0:	2900      	cmp	r1, #0
900144a2:	dd47      	ble.n	90014534 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
900144a4:	42a8      	cmp	r0, r5
900144a6:	dd45      	ble.n	90014534 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
900144a8:	4567      	cmp	r7, ip
900144aa:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
900144ae:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
900144b2:	bfb8      	it	lt
900144b4:	b2ba      	uxthlt	r2, r7
900144b6:	4288      	cmp	r0, r1
900144b8:	f8ad 6018 	strh.w	r6, [sp, #24]
900144bc:	bfb8      	it	lt
900144be:	b283      	uxthlt	r3, r0
900144c0:	1b92      	subs	r2, r2, r6
900144c2:	f8ad 501a 	strh.w	r5, [sp, #26]
900144c6:	1b5b      	subs	r3, r3, r5
900144c8:	f8ad 201c 	strh.w	r2, [sp, #28]
900144cc:	f8ad 301e 	strh.w	r3, [sp, #30]
900144d0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
900144d4:	f64f 73ff 	movw	r3, #65535	@ 0xffff
900144d8:	429a      	cmp	r2, r3
900144da:	d026      	beq.n	9001452a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
900144dc:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
900144e0:	2b00      	cmp	r3, #0
900144e2:	dd22      	ble.n	9001452a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
900144e4:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
900144e8:	2b00      	cmp	r3, #0
900144ea:	dd1e      	ble.n	9001452a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
900144ec:	2300      	movs	r3, #0
900144ee:	a908      	add	r1, sp, #32
900144f0:	4620      	mov	r0, r4
900144f2:	e9cd 3308 	strd	r3, r3, [sp, #32]
900144f6:	6823      	ldr	r3, [r4, #0]
900144f8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900144fa:	4798      	blx	r3
900144fc:	4b0f      	ldr	r3, [pc, #60]	@ (9001453c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
900144fe:	681b      	ldr	r3, [r3, #0]
90014500:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90014504:	b10a      	cbz	r2, 9001450a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
90014506:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90014508:	b900      	cbnz	r0, 9001450c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
9001450a:	6898      	ldr	r0, [r3, #8]
9001450c:	2501      	movs	r5, #1
9001450e:	6801      	ldr	r1, [r0, #0]
90014510:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
90014514:	9502      	str	r5, [sp, #8]
90014516:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
9001451a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9001451e:	9401      	str	r4, [sp, #4]
90014520:	ac06      	add	r4, sp, #24
90014522:	9400      	str	r4, [sp, #0]
90014524:	688c      	ldr	r4, [r1, #8]
90014526:	a905      	add	r1, sp, #20
90014528:	47a0      	blx	r4
9001452a:	b00a      	add	sp, #40	@ 0x28
9001452c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90014530:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
90014532:	e797      	b.n	90014464 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
90014534:	2300      	movs	r3, #0
90014536:	9307      	str	r3, [sp, #28]
90014538:	e7ca      	b.n	900144d0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
9001453a:	bf00      	nop
9001453c:	24021864 	.word	0x24021864

90014540 <_ZNK8touchgfx6Button17invalidateContentEv>:
90014540:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
90014544:	b12a      	cbz	r2, 90014552 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
90014546:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
9001454a:	b112      	cbz	r2, 90014552 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
9001454c:	6803      	ldr	r3, [r0, #0]
9001454e:	695b      	ldr	r3, [r3, #20]
90014550:	4718      	bx	r3
90014552:	4770      	bx	lr

90014554 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
90014554:	4b30      	ldr	r3, [pc, #192]	@ (90014618 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
90014556:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001455a:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
9001455c:	b08d      	sub	sp, #52	@ 0x34
9001455e:	881b      	ldrh	r3, [r3, #0]
90014560:	4604      	mov	r4, r0
90014562:	460f      	mov	r7, r1
90014564:	4293      	cmp	r3, r2
90014566:	d954      	bls.n	90014612 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
90014568:	4b2c      	ldr	r3, [pc, #176]	@ (9001461c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
9001456a:	6819      	ldr	r1, [r3, #0]
9001456c:	eb01 0342 	add.w	r3, r1, r2, lsl #1
90014570:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
90014574:	4a2a      	ldr	r2, [pc, #168]	@ (90014620 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
90014576:	6812      	ldr	r2, [r2, #0]
90014578:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
9001457c:	2900      	cmp	r1, #0
9001457e:	d048      	beq.n	90014612 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
90014580:	785a      	ldrb	r2, [r3, #1]
90014582:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
90014586:	f3c2 0801 	ubfx	r8, r2, #0, #2
9001458a:	f3c2 0281 	ubfx	r2, r2, #2, #2
9001458e:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
90014592:	4b24      	ldr	r3, [pc, #144]	@ (90014624 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
90014594:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
90014598:	681a      	ldr	r2, [r3, #0]
9001459a:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
9001459e:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
900145a2:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
900145a6:	6b26      	ldr	r6, [r4, #48]	@ 0x30
900145a8:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
900145ac:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
900145b0:	9107      	str	r1, [sp, #28]
900145b2:	f88d 8020 	strb.w	r8, [sp, #32]
900145b6:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
900145ba:	9609      	str	r6, [sp, #36]	@ 0x24
900145bc:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
900145c0:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
900145c4:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
900145c8:	b10b      	cbz	r3, 900145ce <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
900145ca:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
900145cc:	b905      	cbnz	r5, 900145d0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
900145ce:	6895      	ldr	r5, [r2, #8]
900145d0:	ae05      	add	r6, sp, #20
900145d2:	4621      	mov	r1, r4
900145d4:	4630      	mov	r0, r6
900145d6:	f003 ff6d 	bl	900184b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900145da:	4b13      	ldr	r3, [pc, #76]	@ (90014628 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
900145dc:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
900145de:	6818      	ldr	r0, [r3, #0]
900145e0:	f7f0 ffd8 	bl	90005594 <_ZNK8touchgfx5Texts7getTextEt>
900145e4:	6823      	ldr	r3, [r4, #0]
900145e6:	4680      	mov	r8, r0
900145e8:	4620      	mov	r0, r4
900145ea:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
900145ec:	4798      	blx	r3
900145ee:	6823      	ldr	r3, [r4, #0]
900145f0:	4681      	mov	r9, r0
900145f2:	4620      	mov	r0, r4
900145f4:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
900145f8:	4798      	blx	r3
900145fa:	ab07      	add	r3, sp, #28
900145fc:	f8cd 8004 	str.w	r8, [sp, #4]
90014600:	9300      	str	r3, [sp, #0]
90014602:	463b      	mov	r3, r7
90014604:	e9cd 9002 	strd	r9, r0, [sp, #8]
90014608:	4628      	mov	r0, r5
9001460a:	e896 0006 	ldmia.w	r6, {r1, r2}
9001460e:	f7f0 ff71 	bl	900054f4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90014612:	b00d      	add	sp, #52	@ 0x34
90014614:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90014618:	240218c0 	.word	0x240218c0
9001461c:	240218bc 	.word	0x240218bc
90014620:	240218c4 	.word	0x240218c4
90014624:	24021864 	.word	0x24021864
90014628:	240218c8 	.word	0x240218c8

9001462c <_ZN8touchgfx5ImageD1Ev>:
9001462c:	4770      	bx	lr

9001462e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
9001462e:	b570      	push	{r4, r5, r6, lr}
90014630:	880b      	ldrh	r3, [r1, #0]
90014632:	460d      	mov	r5, r1
90014634:	4604      	mov	r4, r0
90014636:	84c3      	strh	r3, [r0, #38]	@ 0x26
90014638:	4608      	mov	r0, r1
9001463a:	f006 fa69 	bl	9001ab10 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001463e:	4606      	mov	r6, r0
90014640:	4628      	mov	r0, r5
90014642:	f006 fa99 	bl	9001ab78 <_ZNK8touchgfx6Bitmap9getHeightEv>
90014646:	6823      	ldr	r3, [r4, #0]
90014648:	4605      	mov	r5, r0
9001464a:	4631      	mov	r1, r6
9001464c:	4620      	mov	r0, r4
9001464e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90014650:	4798      	blx	r3
90014652:	6823      	ldr	r3, [r4, #0]
90014654:	4629      	mov	r1, r5
90014656:	4620      	mov	r0, r4
90014658:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001465a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001465e:	4718      	bx	r3

90014660 <_ZN8touchgfx5ImageD0Ev>:
90014660:	b510      	push	{r4, lr}
90014662:	4604      	mov	r4, r0
90014664:	212c      	movs	r1, #44	@ 0x2c
90014666:	f015 fb01 	bl	90029c6c <_ZdlPvj>
9001466a:	4620      	mov	r0, r4
9001466c:	bd10      	pop	{r4, pc}

9001466e <_ZNK8touchgfx5Image12getSolidRectEv>:
9001466e:	b510      	push	{r4, lr}
90014670:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
90014674:	4604      	mov	r4, r0
90014676:	2bff      	cmp	r3, #255	@ 0xff
90014678:	d006      	beq.n	90014688 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
9001467a:	2300      	movs	r3, #0
9001467c:	8003      	strh	r3, [r0, #0]
9001467e:	8043      	strh	r3, [r0, #2]
90014680:	8083      	strh	r3, [r0, #4]
90014682:	80c3      	strh	r3, [r0, #6]
90014684:	4620      	mov	r0, r4
90014686:	bd10      	pop	{r4, pc}
90014688:	3126      	adds	r1, #38	@ 0x26
9001468a:	f006 faa9 	bl	9001abe0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001468e:	e7f9      	b.n	90014684 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

90014690 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
90014690:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90014694:	4604      	mov	r4, r0
90014696:	b088      	sub	sp, #32
90014698:	2500      	movs	r5, #0
9001469a:	460f      	mov	r7, r1
9001469c:	f854 3b26 	ldr.w	r3, [r4], #38
900146a0:	a904      	add	r1, sp, #16
900146a2:	4606      	mov	r6, r0
900146a4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900146a6:	e9cd 5504 	strd	r5, r5, [sp, #16]
900146aa:	4798      	blx	r3
900146ac:	4620      	mov	r0, r4
900146ae:	f006 fa2f 	bl	9001ab10 <_ZNK8touchgfx6Bitmap8getWidthEv>
900146b2:	4680      	mov	r8, r0
900146b4:	4620      	mov	r0, r4
900146b6:	f006 fa5f 	bl	9001ab78 <_ZNK8touchgfx6Bitmap9getHeightEv>
900146ba:	9506      	str	r5, [sp, #24]
900146bc:	ad06      	add	r5, sp, #24
900146be:	f8ad 001e 	strh.w	r0, [sp, #30]
900146c2:	4639      	mov	r1, r7
900146c4:	f8ad 801c 	strh.w	r8, [sp, #28]
900146c8:	4628      	mov	r0, r5
900146ca:	f7fc fdd3 	bl	90011274 <_ZN8touchgfx4RectaNERKS0_>
900146ce:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
900146d2:	2b00      	cmp	r3, #0
900146d4:	dd19      	ble.n	9001470a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
900146d6:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
900146da:	2b00      	cmp	r3, #0
900146dc:	dd15      	ble.n	9001470a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
900146de:	4b0c      	ldr	r3, [pc, #48]	@ (90014710 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
900146e0:	681b      	ldr	r3, [r3, #0]
900146e2:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900146e6:	b10a      	cbz	r2, 900146ec <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
900146e8:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900146ea:	b900      	cbnz	r0, 900146ee <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
900146ec:	6898      	ldr	r0, [r3, #8]
900146ee:	2701      	movs	r7, #1
900146f0:	6801      	ldr	r1, [r0, #0]
900146f2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
900146f6:	9702      	str	r7, [sp, #8]
900146f8:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
900146fc:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90014700:	e9cd 5600 	strd	r5, r6, [sp]
90014704:	688d      	ldr	r5, [r1, #8]
90014706:	4621      	mov	r1, r4
90014708:	47a8      	blx	r5
9001470a:	b008      	add	sp, #32
9001470c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90014710:	24021864 	.word	0x24021864

90014714 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
90014714:	4770      	bx	lr

90014716 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
90014716:	b510      	push	{r4, lr}
90014718:	4604      	mov	r4, r0
9001471a:	2148      	movs	r1, #72	@ 0x48
9001471c:	f015 faa6 	bl	90029c6c <_ZdlPvj>
90014720:	4620      	mov	r0, r4
90014722:	bd10      	pop	{r4, pc}

90014724 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
90014724:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90014728:	b08d      	sub	sp, #52	@ 0x34
9001472a:	4604      	mov	r4, r0
9001472c:	460f      	mov	r7, r1
9001472e:	f7ff fe8f 	bl	90014450 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
90014732:	4a55      	ldr	r2, [pc, #340]	@ (90014888 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
90014734:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90014736:	8812      	ldrh	r2, [r2, #0]
90014738:	429a      	cmp	r2, r3
9001473a:	f240 8082 	bls.w	90014842 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
9001473e:	4d53      	ldr	r5, [pc, #332]	@ (9001488c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
90014740:	682a      	ldr	r2, [r5, #0]
90014742:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
90014746:	4b52      	ldr	r3, [pc, #328]	@ (90014890 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
90014748:	681b      	ldr	r3, [r3, #0]
9001474a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
9001474e:	2200      	movs	r2, #0
90014750:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	@ 0x46
90014754:	e9cd 2203 	strd	r2, r2, [sp, #12]
90014758:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
9001475c:	2a03      	cmp	r2, #3
9001475e:	d811      	bhi.n	90014784 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
90014760:	e8df f002 	tbb	[pc, r2]
90014764:	89727902 	.word	0x89727902
90014768:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
9001476c:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90014770:	1ad2      	subs	r2, r2, r3
90014772:	2002      	movs	r0, #2
90014774:	f8ad 1010 	strh.w	r1, [sp, #16]
90014778:	f8ad 3012 	strh.w	r3, [sp, #18]
9001477c:	fb92 f2f0 	sdiv	r2, r2, r0
90014780:	f8ad 200e 	strh.w	r2, [sp, #14]
90014784:	f10d 080c 	add.w	r8, sp, #12
90014788:	f10d 0914 	add.w	r9, sp, #20
9001478c:	e898 0003 	ldmia.w	r8, {r0, r1}
90014790:	e889 0003 	stmia.w	r9, {r0, r1}
90014794:	4639      	mov	r1, r7
90014796:	4648      	mov	r0, r9
90014798:	f7fc fd6c 	bl	90011274 <_ZN8touchgfx4RectaNERKS0_>
9001479c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
900147a0:	2b00      	cmp	r3, #0
900147a2:	dd4e      	ble.n	90014842 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
900147a4:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
900147a8:	2b00      	cmp	r3, #0
900147aa:	dd4a      	ble.n	90014842 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
900147ac:	f8bd 3014 	ldrh.w	r3, [sp, #20]
900147b0:	4641      	mov	r1, r8
900147b2:	f8bd 200c 	ldrh.w	r2, [sp, #12]
900147b6:	4620      	mov	r0, r4
900147b8:	1a9b      	subs	r3, r3, r2
900147ba:	f8bd 200e 	ldrh.w	r2, [sp, #14]
900147be:	f8ad 3014 	strh.w	r3, [sp, #20]
900147c2:	f8bd 3016 	ldrh.w	r3, [sp, #22]
900147c6:	1a9b      	subs	r3, r3, r2
900147c8:	f8ad 3016 	strh.w	r3, [sp, #22]
900147cc:	6823      	ldr	r3, [r4, #0]
900147ce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900147d0:	4798      	blx	r3
900147d2:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
900147d6:	2b00      	cmp	r3, #0
900147d8:	d053      	beq.n	90014882 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
900147da:	6c22      	ldr	r2, [r4, #64]	@ 0x40
900147dc:	8f21      	ldrh	r1, [r4, #56]	@ 0x38
900147de:	682b      	ldr	r3, [r5, #0]
900147e0:	f894 0032 	ldrb.w	r0, [r4, #50]	@ 0x32
900147e4:	eb03 0341 	add.w	r3, r3, r1, lsl #1
900147e8:	f894 4044 	ldrb.w	r4, [r4, #68]	@ 0x44
900147ec:	785b      	ldrb	r3, [r3, #1]
900147ee:	9209      	str	r2, [sp, #36]	@ 0x24
900147f0:	f3c3 0501 	ubfx	r5, r3, #0, #2
900147f4:	f3c3 0381 	ubfx	r3, r3, #2, #2
900147f8:	9607      	str	r6, [sp, #28]
900147fa:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
900147fe:	2300      	movs	r3, #0
90014800:	f88d 5020 	strb.w	r5, [sp, #32]
90014804:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
90014808:	f88d 302b 	strb.w	r3, [sp, #43]	@ 0x2b
9001480c:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
90014810:	4b20      	ldr	r3, [pc, #128]	@ (90014894 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
90014812:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90014816:	681b      	ldr	r3, [r3, #0]
90014818:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
9001481c:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90014820:	b10a      	cbz	r2, 90014826 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
90014822:	6cdc      	ldr	r4, [r3, #76]	@ 0x4c
90014824:	b904      	cbnz	r4, 90014828 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
90014826:	689c      	ldr	r4, [r3, #8]
90014828:	4b1b      	ldr	r3, [pc, #108]	@ (90014898 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
9001482a:	6818      	ldr	r0, [r3, #0]
9001482c:	f7f0 feb2 	bl	90005594 <_ZNK8touchgfx5Texts7getTextEt>
90014830:	ab07      	add	r3, sp, #28
90014832:	9001      	str	r0, [sp, #4]
90014834:	4620      	mov	r0, r4
90014836:	9300      	str	r3, [sp, #0]
90014838:	464b      	mov	r3, r9
9001483a:	e898 0006 	ldmia.w	r8, {r1, r2}
9001483e:	f7f0 fe59 	bl	900054f4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90014842:	b00d      	add	sp, #52	@ 0x34
90014844:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90014848:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
9001484c:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90014850:	1ad2      	subs	r2, r2, r3
90014852:	3201      	adds	r2, #1
90014854:	e78d      	b.n	90014772 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
90014856:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
9001485a:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
9001485e:	1ad2      	subs	r2, r2, r3
90014860:	3201      	adds	r2, #1
90014862:	2002      	movs	r0, #2
90014864:	f8ad 3010 	strh.w	r3, [sp, #16]
90014868:	f8ad 1012 	strh.w	r1, [sp, #18]
9001486c:	fb92 f2f0 	sdiv	r2, r2, r0
90014870:	f8ad 200c 	strh.w	r2, [sp, #12]
90014874:	e786      	b.n	90014784 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
90014876:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
9001487a:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
9001487e:	1ad2      	subs	r2, r2, r3
90014880:	e7ef      	b.n	90014862 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
90014882:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
90014884:	e7aa      	b.n	900147dc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
90014886:	bf00      	nop
90014888:	240218c0 	.word	0x240218c0
9001488c:	240218bc 	.word	0x240218bc
90014890:	240218c4 	.word	0x240218c4
90014894:	24021864 	.word	0x24021864
90014898:	240218c8 	.word	0x240218c8

9001489c <_ZN8touchgfx15ButtonWithLabelC1Ev>:
9001489c:	2101      	movs	r1, #1
9001489e:	2200      	movs	r2, #0
900148a0:	b510      	push	{r4, lr}
900148a2:	4c13      	ldr	r4, [pc, #76]	@ (900148f0 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
900148a4:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
900148a8:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
900148ac:	f64f 71ff 	movw	r1, #65535	@ 0xffff
900148b0:	6004      	str	r4, [r0, #0]
900148b2:	4c10      	ldr	r4, [pc, #64]	@ (900148f4 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
900148b4:	8082      	strh	r2, [r0, #4]
900148b6:	80c2      	strh	r2, [r0, #6]
900148b8:	8102      	strh	r2, [r0, #8]
900148ba:	8142      	strh	r2, [r0, #10]
900148bc:	8182      	strh	r2, [r0, #12]
900148be:	81c2      	strh	r2, [r0, #14]
900148c0:	8202      	strh	r2, [r0, #16]
900148c2:	8242      	strh	r2, [r0, #18]
900148c4:	61c2      	str	r2, [r0, #28]
900148c6:	8402      	strh	r2, [r0, #32]
900148c8:	8442      	strh	r2, [r0, #34]	@ 0x22
900148ca:	6282      	str	r2, [r0, #40]	@ 0x28
900148cc:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
900148d0:	85c1      	strh	r1, [r0, #46]	@ 0x2e
900148d2:	8601      	strh	r1, [r0, #48]	@ 0x30
900148d4:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
900148d8:	6344      	str	r4, [r0, #52]	@ 0x34
900148da:	8701      	strh	r1, [r0, #56]	@ 0x38
900148dc:	f880 2044 	strb.w	r2, [r0, #68]	@ 0x44
900148e0:	f8a0 2046 	strh.w	r2, [r0, #70]	@ 0x46
900148e4:	e9c0 2205 	strd	r2, r2, [r0, #20]
900148e8:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
900148ec:	bd10      	pop	{r4, pc}
900148ee:	bf00      	nop
900148f0:	9002e1f8 	.word	0x9002e1f8
900148f4:	9002d4dc 	.word	0x9002d4dc

900148f8 <_ZN8touchgfx7OutlineD1Ev>:
900148f8:	4770      	bx	lr

900148fa <_ZN8touchgfx7OutlineD0Ev>:
900148fa:	b510      	push	{r4, lr}
900148fc:	4604      	mov	r4, r0
900148fe:	2130      	movs	r1, #48	@ 0x30
90014900:	f015 f9b4 	bl	90029c6c <_ZdlPvj>
90014904:	4620      	mov	r0, r4
90014906:	bd10      	pop	{r4, pc}

90014908 <_ZN8touchgfx7Outline5resetEv>:
90014908:	b510      	push	{r4, lr}
9001490a:	4604      	mov	r4, r0
9001490c:	f000 fe72 	bl	900155f4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
90014910:	60e0      	str	r0, [r4, #12]
90014912:	f000 fe75 	bl	90015600 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
90014916:	68e3      	ldr	r3, [r4, #12]
90014918:	08c0      	lsrs	r0, r0, #3
9001491a:	2200      	movs	r2, #0
9001491c:	f647 71ff 	movw	r1, #32767	@ 0x7fff
90014920:	6123      	str	r3, [r4, #16]
90014922:	3801      	subs	r0, #1
90014924:	60a2      	str	r2, [r4, #8]
90014926:	6060      	str	r0, [r4, #4]
90014928:	8019      	strh	r1, [r3, #0]
9001492a:	8059      	strh	r1, [r3, #2]
9001492c:	809a      	strh	r2, [r3, #4]
9001492e:	80da      	strh	r2, [r3, #6]
90014930:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90014932:	f023 0301 	bic.w	r3, r3, #1
90014936:	f043 0302 	orr.w	r3, r3, #2
9001493a:	6263      	str	r3, [r4, #36]	@ 0x24
9001493c:	bd10      	pop	{r4, pc}
	...

90014940 <_ZN8touchgfx7OutlineC1Ev>:
90014940:	4b0a      	ldr	r3, [pc, #40]	@ (9001496c <_ZN8touchgfx7OutlineC1Ev+0x2c>)
90014942:	b510      	push	{r4, lr}
90014944:	6003      	str	r3, [r0, #0]
90014946:	2300      	movs	r3, #0
90014948:	4604      	mov	r4, r0
9001494a:	6243      	str	r3, [r0, #36]	@ 0x24
9001494c:	e9c0 3301 	strd	r3, r3, [r0, #4]
90014950:	e9c0 3303 	strd	r3, r3, [r0, #12]
90014954:	e9c0 3305 	strd	r3, r3, [r0, #20]
90014958:	e9c0 3307 	strd	r3, r3, [r0, #28]
9001495c:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
90014960:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
90014964:	f7ff ffd0 	bl	90014908 <_ZN8touchgfx7Outline5resetEv>
90014968:	4620      	mov	r0, r4
9001496a:	bd10      	pop	{r4, pc}
9001496c:	9002e26c 	.word	0x9002e26c

90014970 <_ZN8touchgfx7Outline10renderLineEiiii>:
90014970:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014974:	b093      	sub	sp, #76	@ 0x4c
90014976:	1156      	asrs	r6, r2, #5
90014978:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
9001497a:	9305      	str	r3, [sp, #20]
9001497c:	1153      	asrs	r3, r2, #5
9001497e:	f004 051f 	and.w	r5, r4, #31
90014982:	9303      	str	r3, [sp, #12]
90014984:	1163      	asrs	r3, r4, #5
90014986:	9504      	str	r5, [sp, #16]
90014988:	1165      	asrs	r5, r4, #5
9001498a:	9306      	str	r3, [sp, #24]
9001498c:	f002 031f 	and.w	r3, r2, #31
90014990:	42ae      	cmp	r6, r5
90014992:	f040 80f4 	bne.w	90014b7e <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
90014996:	9c04      	ldr	r4, [sp, #16]
90014998:	9a05      	ldr	r2, [sp, #20]
9001499a:	42a3      	cmp	r3, r4
9001499c:	ea4f 1e62 	mov.w	lr, r2, asr #5
900149a0:	6902      	ldr	r2, [r0, #16]
900149a2:	d125      	bne.n	900149f0 <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
900149a4:	f9b2 3000 	ldrsh.w	r3, [r2]
900149a8:	459e      	cmp	lr, r3
900149aa:	d103      	bne.n	900149b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
900149ac:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
900149b0:	429e      	cmp	r6, r3
900149b2:	d035      	beq.n	90014a20 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900149b4:	88d1      	ldrh	r1, [r2, #6]
900149b6:	8893      	ldrh	r3, [r2, #4]
900149b8:	430b      	orrs	r3, r1
900149ba:	d010      	beq.n	900149de <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
900149bc:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
900149c0:	2b00      	cmp	r3, #0
900149c2:	db0c      	blt.n	900149de <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
900149c4:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
900149c6:	428b      	cmp	r3, r1
900149c8:	da09      	bge.n	900149de <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
900149ca:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
900149ce:	428b      	cmp	r3, r1
900149d0:	f103 0301 	add.w	r3, r3, #1
900149d4:	bf38      	it	cc
900149d6:	3208      	addcc	r2, #8
900149d8:	6083      	str	r3, [r0, #8]
900149da:	bf38      	it	cc
900149dc:	6102      	strcc	r2, [r0, #16]
900149de:	6903      	ldr	r3, [r0, #16]
900149e0:	9a03      	ldr	r2, [sp, #12]
900149e2:	f8a3 e000 	strh.w	lr, [r3]
900149e6:	805a      	strh	r2, [r3, #2]
900149e8:	2200      	movs	r2, #0
900149ea:	809a      	strh	r2, [r3, #4]
900149ec:	80da      	strh	r2, [r3, #6]
900149ee:	e017      	b.n	90014a20 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900149f0:	9c05      	ldr	r4, [sp, #20]
900149f2:	114e      	asrs	r6, r1, #5
900149f4:	f001 0c1f 	and.w	ip, r1, #31
900149f8:	f8b2 8004 	ldrh.w	r8, [r2, #4]
900149fc:	f004 041f 	and.w	r4, r4, #31
90014a00:	4576      	cmp	r6, lr
90014a02:	f8b2 a006 	ldrh.w	sl, [r2, #6]
90014a06:	9402      	str	r4, [sp, #8]
90014a08:	9c04      	ldr	r4, [sp, #16]
90014a0a:	eba4 0403 	sub.w	r4, r4, r3
90014a0e:	d10a      	bne.n	90014a26 <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
90014a10:	9b02      	ldr	r3, [sp, #8]
90014a12:	44a0      	add	r8, r4
90014a14:	449c      	add	ip, r3
90014a16:	f8a2 8004 	strh.w	r8, [r2, #4]
90014a1a:	fb04 a40c 	mla	r4, r4, ip, sl
90014a1e:	80d4      	strh	r4, [r2, #6]
90014a20:	b013      	add	sp, #76	@ 0x4c
90014a22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014a26:	9d05      	ldr	r5, [sp, #20]
90014a28:	1a69      	subs	r1, r5, r1
90014a2a:	bf51      	iteee	pl
90014a2c:	f1cc 0520 	rsbpl	r5, ip, #32
90014a30:	fb04 f40c 	mulmi.w	r4, r4, ip
90014a34:	4249      	negmi	r1, r1
90014a36:	2500      	movmi	r5, #0
90014a38:	bf5d      	ittte	pl
90014a3a:	436c      	mulpl	r4, r5
90014a3c:	2520      	movpl	r5, #32
90014a3e:	f04f 0901 	movpl.w	r9, #1
90014a42:	f04f 39ff 	movmi.w	r9, #4294967295
90014a46:	9501      	str	r5, [sp, #4]
90014a48:	9f01      	ldr	r7, [sp, #4]
90014a4a:	444e      	add	r6, r9
90014a4c:	fb94 f5f1 	sdiv	r5, r4, r1
90014a50:	fb01 4415 	mls	r4, r1, r5, r4
90014a54:	44bc      	add	ip, r7
90014a56:	2c00      	cmp	r4, #0
90014a58:	bfbc      	itt	lt
90014a5a:	f105 35ff 	addlt.w	r5, r5, #4294967295
90014a5e:	1864      	addlt	r4, r4, r1
90014a60:	44a8      	add	r8, r5
90014a62:	fb05 ac0c 	mla	ip, r5, ip, sl
90014a66:	f8a2 8004 	strh.w	r8, [r2, #4]
90014a6a:	f8a2 c006 	strh.w	ip, [r2, #6]
90014a6e:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014a72:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90014a76:	f8bc 2004 	ldrh.w	r2, [ip, #4]
90014a7a:	ea58 0202 	orrs.w	r2, r8, r2
90014a7e:	d011      	beq.n	90014aa4 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90014a80:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90014a84:	f1b8 0f00 	cmp.w	r8, #0
90014a88:	db0c      	blt.n	90014aa4 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90014a8a:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
90014a8c:	4590      	cmp	r8, r2
90014a8e:	da09      	bge.n	90014aa4 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90014a90:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
90014a94:	4590      	cmp	r8, r2
90014a96:	bf3c      	itt	cc
90014a98:	f10c 0208 	addcc.w	r2, ip, #8
90014a9c:	6102      	strcc	r2, [r0, #16]
90014a9e:	f108 0201 	add.w	r2, r8, #1
90014aa2:	6082      	str	r2, [r0, #8]
90014aa4:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014aa8:	2700      	movs	r7, #0
90014aaa:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90014aae:	45b6      	cmp	lr, r6
90014ab0:	f8ac 6000 	strh.w	r6, [ip]
90014ab4:	442b      	add	r3, r5
90014ab6:	f8ac 2002 	strh.w	r2, [ip, #2]
90014aba:	f8ac 7004 	strh.w	r7, [ip, #4]
90014abe:	f8ac 7006 	strh.w	r7, [ip, #6]
90014ac2:	d04b      	beq.n	90014b5c <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
90014ac4:	9f04      	ldr	r7, [sp, #16]
90014ac6:	1a64      	subs	r4, r4, r1
90014ac8:	f04f 0a00 	mov.w	sl, #0
90014acc:	1aff      	subs	r7, r7, r3
90014ace:	443d      	add	r5, r7
90014ad0:	016d      	lsls	r5, r5, #5
90014ad2:	fb95 f8f1 	sdiv	r8, r5, r1
90014ad6:	fb01 5518 	mls	r5, r1, r8, r5
90014ada:	2d00      	cmp	r5, #0
90014adc:	bfbc      	itt	lt
90014ade:	f108 38ff 	addlt.w	r8, r8, #4294967295
90014ae2:	186d      	addlt	r5, r5, r1
90014ae4:	f108 0701 	add.w	r7, r8, #1
90014ae8:	9703      	str	r7, [sp, #12]
90014aea:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014aee:	1964      	adds	r4, r4, r5
90014af0:	444e      	add	r6, r9
90014af2:	bf54      	ite	pl
90014af4:	9f03      	ldrpl	r7, [sp, #12]
90014af6:	4647      	movmi	r7, r8
90014af8:	f8bc b004 	ldrh.w	fp, [ip, #4]
90014afc:	bf58      	it	pl
90014afe:	1a64      	subpl	r4, r4, r1
90014b00:	443b      	add	r3, r7
90014b02:	44bb      	add	fp, r7
90014b04:	f8ac b004 	strh.w	fp, [ip, #4]
90014b08:	f8bc b006 	ldrh.w	fp, [ip, #6]
90014b0c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90014b10:	f8ac b006 	strh.w	fp, [ip, #6]
90014b14:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014b18:	f8bc b006 	ldrh.w	fp, [ip, #6]
90014b1c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90014b20:	ea5b 0707 	orrs.w	r7, fp, r7
90014b24:	d011      	beq.n	90014b4a <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90014b26:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90014b2a:	f1bb 0f00 	cmp.w	fp, #0
90014b2e:	db0c      	blt.n	90014b4a <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90014b30:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90014b32:	45bb      	cmp	fp, r7
90014b34:	da09      	bge.n	90014b4a <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90014b36:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90014b3a:	45bb      	cmp	fp, r7
90014b3c:	bf3c      	itt	cc
90014b3e:	f10c 0708 	addcc.w	r7, ip, #8
90014b42:	6107      	strcc	r7, [r0, #16]
90014b44:	f10b 0701 	add.w	r7, fp, #1
90014b48:	6087      	str	r7, [r0, #8]
90014b4a:	6907      	ldr	r7, [r0, #16]
90014b4c:	45b6      	cmp	lr, r6
90014b4e:	803e      	strh	r6, [r7, #0]
90014b50:	807a      	strh	r2, [r7, #2]
90014b52:	f8a7 a004 	strh.w	sl, [r7, #4]
90014b56:	f8a7 a006 	strh.w	sl, [r7, #6]
90014b5a:	d1c6      	bne.n	90014aea <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
90014b5c:	9a04      	ldr	r2, [sp, #16]
90014b5e:	1ad3      	subs	r3, r2, r3
90014b60:	6902      	ldr	r2, [r0, #16]
90014b62:	8891      	ldrh	r1, [r2, #4]
90014b64:	88d6      	ldrh	r6, [r2, #6]
90014b66:	4419      	add	r1, r3
90014b68:	8091      	strh	r1, [r2, #4]
90014b6a:	9902      	ldr	r1, [sp, #8]
90014b6c:	f101 0c20 	add.w	ip, r1, #32
90014b70:	9901      	ldr	r1, [sp, #4]
90014b72:	ebac 0c01 	sub.w	ip, ip, r1
90014b76:	fb03 630c 	mla	r3, r3, ip, r6
90014b7a:	80d3      	strh	r3, [r2, #6]
90014b7c:	e750      	b.n	90014a20 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014b7e:	9d05      	ldr	r5, [sp, #20]
90014b80:	1aa2      	subs	r2, r4, r2
90014b82:	eba5 0501 	sub.w	r5, r5, r1
90014b86:	9202      	str	r2, [sp, #8]
90014b88:	9508      	str	r5, [sp, #32]
90014b8a:	f140 8128 	bpl.w	90014dde <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
90014b8e:	9a03      	ldr	r2, [sp, #12]
90014b90:	2a00      	cmp	r2, #0
90014b92:	f6ff af45 	blt.w	90014a20 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014b96:	9a02      	ldr	r2, [sp, #8]
90014b98:	f04f 34ff 	mov.w	r4, #4294967295
90014b9c:	4252      	negs	r2, r2
90014b9e:	940b      	str	r4, [sp, #44]	@ 0x2c
90014ba0:	2400      	movs	r4, #0
90014ba2:	9202      	str	r2, [sp, #8]
90014ba4:	9a06      	ldr	r2, [sp, #24]
90014ba6:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
90014baa:	9206      	str	r2, [sp, #24]
90014bac:	462a      	mov	r2, r5
90014bae:	435a      	muls	r2, r3
90014bb0:	9401      	str	r4, [sp, #4]
90014bb2:	9c02      	ldr	r4, [sp, #8]
90014bb4:	9d02      	ldr	r5, [sp, #8]
90014bb6:	fb92 f4f4 	sdiv	r4, r2, r4
90014bba:	fb05 2214 	mls	r2, r5, r4, r2
90014bbe:	2a00      	cmp	r2, #0
90014bc0:	9207      	str	r2, [sp, #28]
90014bc2:	bfbc      	itt	lt
90014bc4:	1952      	addlt	r2, r2, r5
90014bc6:	f104 34ff 	addlt.w	r4, r4, #4294967295
90014bca:	6905      	ldr	r5, [r0, #16]
90014bcc:	bfb8      	it	lt
90014bce:	9207      	strlt	r2, [sp, #28]
90014bd0:	eb04 0901 	add.w	r9, r4, r1
90014bd4:	9a01      	ldr	r2, [sp, #4]
90014bd6:	ea4f 1669 	mov.w	r6, r9, asr #5
90014bda:	429a      	cmp	r2, r3
90014bdc:	f040 8111 	bne.w	90014e02 <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
90014be0:	f9b5 3000 	ldrsh.w	r3, [r5]
90014be4:	429e      	cmp	r6, r3
90014be6:	d104      	bne.n	90014bf2 <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
90014be8:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90014bec:	9a03      	ldr	r2, [sp, #12]
90014bee:	429a      	cmp	r2, r3
90014bf0:	d01b      	beq.n	90014c2a <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90014bf2:	88ea      	ldrh	r2, [r5, #6]
90014bf4:	88ab      	ldrh	r3, [r5, #4]
90014bf6:	4313      	orrs	r3, r2
90014bf8:	d010      	beq.n	90014c1c <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90014bfa:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90014bfe:	2a00      	cmp	r2, #0
90014c00:	db0c      	blt.n	90014c1c <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90014c02:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90014c04:	429a      	cmp	r2, r3
90014c06:	da09      	bge.n	90014c1c <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90014c08:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
90014c0c:	429a      	cmp	r2, r3
90014c0e:	f102 0201 	add.w	r2, r2, #1
90014c12:	bf38      	it	cc
90014c14:	3508      	addcc	r5, #8
90014c16:	6082      	str	r2, [r0, #8]
90014c18:	bf38      	it	cc
90014c1a:	6105      	strcc	r5, [r0, #16]
90014c1c:	6903      	ldr	r3, [r0, #16]
90014c1e:	9a03      	ldr	r2, [sp, #12]
90014c20:	801e      	strh	r6, [r3, #0]
90014c22:	805a      	strh	r2, [r3, #2]
90014c24:	2200      	movs	r2, #0
90014c26:	809a      	strh	r2, [r3, #4]
90014c28:	80da      	strh	r2, [r3, #6]
90014c2a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90014c2c:	9a03      	ldr	r2, [sp, #12]
90014c2e:	6901      	ldr	r1, [r0, #16]
90014c30:	441a      	add	r2, r3
90014c32:	f9b1 3000 	ldrsh.w	r3, [r1]
90014c36:	42b3      	cmp	r3, r6
90014c38:	d103      	bne.n	90014c42 <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
90014c3a:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90014c3e:	429a      	cmp	r2, r3
90014c40:	d01a      	beq.n	90014c78 <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
90014c42:	88cc      	ldrh	r4, [r1, #6]
90014c44:	888b      	ldrh	r3, [r1, #4]
90014c46:	4323      	orrs	r3, r4
90014c48:	d010      	beq.n	90014c6c <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90014c4a:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90014c4e:	2c00      	cmp	r4, #0
90014c50:	db0c      	blt.n	90014c6c <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90014c52:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90014c54:	429c      	cmp	r4, r3
90014c56:	da09      	bge.n	90014c6c <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90014c58:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90014c5c:	429c      	cmp	r4, r3
90014c5e:	f104 0401 	add.w	r4, r4, #1
90014c62:	bf38      	it	cc
90014c64:	3108      	addcc	r1, #8
90014c66:	6084      	str	r4, [r0, #8]
90014c68:	bf38      	it	cc
90014c6a:	6101      	strcc	r1, [r0, #16]
90014c6c:	6903      	ldr	r3, [r0, #16]
90014c6e:	2100      	movs	r1, #0
90014c70:	801e      	strh	r6, [r3, #0]
90014c72:	805a      	strh	r2, [r3, #2]
90014c74:	8099      	strh	r1, [r3, #4]
90014c76:	80d9      	strh	r1, [r3, #6]
90014c78:	9b06      	ldr	r3, [sp, #24]
90014c7a:	4293      	cmp	r3, r2
90014c7c:	f000 8082 	beq.w	90014d84 <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
90014c80:	9b08      	ldr	r3, [sp, #32]
90014c82:	9902      	ldr	r1, [sp, #8]
90014c84:	015b      	lsls	r3, r3, #5
90014c86:	9c02      	ldr	r4, [sp, #8]
90014c88:	fb93 f1f1 	sdiv	r1, r3, r1
90014c8c:	fb04 3311 	mls	r3, r4, r1, r3
90014c90:	9103      	str	r1, [sp, #12]
90014c92:	2b00      	cmp	r3, #0
90014c94:	9308      	str	r3, [sp, #32]
90014c96:	da04      	bge.n	90014ca2 <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
90014c98:	1e4b      	subs	r3, r1, #1
90014c9a:	9303      	str	r3, [sp, #12]
90014c9c:	9b08      	ldr	r3, [sp, #32]
90014c9e:	4423      	add	r3, r4
90014ca0:	9308      	str	r3, [sp, #32]
90014ca2:	9b07      	ldr	r3, [sp, #28]
90014ca4:	464f      	mov	r7, r9
90014ca6:	9902      	ldr	r1, [sp, #8]
90014ca8:	2600      	movs	r6, #0
90014caa:	1a5b      	subs	r3, r3, r1
90014cac:	9307      	str	r3, [sp, #28]
90014cae:	9b01      	ldr	r3, [sp, #4]
90014cb0:	f1c3 0320 	rsb	r3, r3, #32
90014cb4:	930e      	str	r3, [sp, #56]	@ 0x38
90014cb6:	990e      	ldr	r1, [sp, #56]	@ 0x38
90014cb8:	9b01      	ldr	r3, [sp, #4]
90014cba:	1a5b      	subs	r3, r3, r1
90014cbc:	930a      	str	r3, [sp, #40]	@ 0x28
90014cbe:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
90014cc2:	185b      	adds	r3, r3, r1
90014cc4:	bf58      	it	pl
90014cc6:	9902      	ldrpl	r1, [sp, #8]
90014cc8:	9307      	str	r3, [sp, #28]
90014cca:	bf57      	itett	pl
90014ccc:	1a5b      	subpl	r3, r3, r1
90014cce:	9903      	ldrmi	r1, [sp, #12]
90014cd0:	9307      	strpl	r3, [sp, #28]
90014cd2:	9b03      	ldrpl	r3, [sp, #12]
90014cd4:	bf58      	it	pl
90014cd6:	1c59      	addpl	r1, r3, #1
90014cd8:	2a00      	cmp	r2, #0
90014cda:	4489      	add	r9, r1
90014cdc:	ea4f 1a69 	mov.w	sl, r9, asr #5
90014ce0:	db2e      	blt.n	90014d40 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90014ce2:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90014ce4:	4293      	cmp	r3, r2
90014ce6:	dd2b      	ble.n	90014d40 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90014ce8:	9c01      	ldr	r4, [sp, #4]
90014cea:	6905      	ldr	r5, [r0, #16]
90014cec:	46a0      	mov	r8, r4
90014cee:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90014cf0:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
90014cf4:	45a0      	cmp	r8, r4
90014cf6:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
90014cfa:	f040 814c 	bne.w	90014f96 <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
90014cfe:	f9b5 1000 	ldrsh.w	r1, [r5]
90014d02:	4551      	cmp	r1, sl
90014d04:	d103      	bne.n	90014d0e <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
90014d06:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90014d0a:	4291      	cmp	r1, r2
90014d0c:	d018      	beq.n	90014d40 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90014d0e:	ea5c 010e 	orrs.w	r1, ip, lr
90014d12:	d00f      	beq.n	90014d34 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90014d14:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90014d18:	2900      	cmp	r1, #0
90014d1a:	db0b      	blt.n	90014d34 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90014d1c:	428b      	cmp	r3, r1
90014d1e:	dd09      	ble.n	90014d34 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90014d20:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
90014d24:	4299      	cmp	r1, r3
90014d26:	f101 0101 	add.w	r1, r1, #1
90014d2a:	bf38      	it	cc
90014d2c:	3508      	addcc	r5, #8
90014d2e:	6081      	str	r1, [r0, #8]
90014d30:	bf38      	it	cc
90014d32:	6105      	strcc	r5, [r0, #16]
90014d34:	6903      	ldr	r3, [r0, #16]
90014d36:	f8a3 a000 	strh.w	sl, [r3]
90014d3a:	805a      	strh	r2, [r3, #2]
90014d3c:	809e      	strh	r6, [r3, #4]
90014d3e:	80de      	strh	r6, [r3, #6]
90014d40:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90014d42:	6901      	ldr	r1, [r0, #16]
90014d44:	441a      	add	r2, r3
90014d46:	88cc      	ldrh	r4, [r1, #6]
90014d48:	888b      	ldrh	r3, [r1, #4]
90014d4a:	4323      	orrs	r3, r4
90014d4c:	d010      	beq.n	90014d70 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90014d4e:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90014d52:	2c00      	cmp	r4, #0
90014d54:	db0c      	blt.n	90014d70 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90014d56:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90014d58:	429c      	cmp	r4, r3
90014d5a:	da09      	bge.n	90014d70 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90014d5c:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90014d60:	429c      	cmp	r4, r3
90014d62:	f104 0401 	add.w	r4, r4, #1
90014d66:	bf38      	it	cc
90014d68:	3108      	addcc	r1, #8
90014d6a:	6084      	str	r4, [r0, #8]
90014d6c:	bf38      	it	cc
90014d6e:	6101      	strcc	r1, [r0, #16]
90014d70:	6903      	ldr	r3, [r0, #16]
90014d72:	464f      	mov	r7, r9
90014d74:	f8a3 a000 	strh.w	sl, [r3]
90014d78:	805a      	strh	r2, [r3, #2]
90014d7a:	809e      	strh	r6, [r3, #4]
90014d7c:	80de      	strh	r6, [r3, #6]
90014d7e:	9b06      	ldr	r3, [sp, #24]
90014d80:	4293      	cmp	r3, r2
90014d82:	d19c      	bne.n	90014cbe <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
90014d84:	9b01      	ldr	r3, [sp, #4]
90014d86:	6907      	ldr	r7, [r0, #16]
90014d88:	f1c3 0620 	rsb	r6, r3, #32
90014d8c:	9b05      	ldr	r3, [sp, #20]
90014d8e:	ea4f 1e63 	mov.w	lr, r3, asr #5
90014d92:	9b04      	ldr	r3, [sp, #16]
90014d94:	429e      	cmp	r6, r3
90014d96:	f040 81c7 	bne.w	90015128 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
90014d9a:	f9b7 3000 	ldrsh.w	r3, [r7]
90014d9e:	459e      	cmp	lr, r3
90014da0:	d104      	bne.n	90014dac <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
90014da2:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90014da6:	429a      	cmp	r2, r3
90014da8:	f43f ae3a 	beq.w	90014a20 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014dac:	88f9      	ldrh	r1, [r7, #6]
90014dae:	88bb      	ldrh	r3, [r7, #4]
90014db0:	430b      	orrs	r3, r1
90014db2:	d010      	beq.n	90014dd6 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90014db4:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90014db8:	2b00      	cmp	r3, #0
90014dba:	db0c      	blt.n	90014dd6 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90014dbc:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
90014dbe:	428b      	cmp	r3, r1
90014dc0:	da09      	bge.n	90014dd6 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90014dc2:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90014dc6:	428b      	cmp	r3, r1
90014dc8:	f103 0301 	add.w	r3, r3, #1
90014dcc:	bf38      	it	cc
90014dce:	3708      	addcc	r7, #8
90014dd0:	6083      	str	r3, [r0, #8]
90014dd2:	bf38      	it	cc
90014dd4:	6107      	strcc	r7, [r0, #16]
90014dd6:	6903      	ldr	r3, [r0, #16]
90014dd8:	f8a3 e000 	strh.w	lr, [r3]
90014ddc:	e603      	b.n	900149e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
90014dde:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
90014de0:	9c03      	ldr	r4, [sp, #12]
90014de2:	42a2      	cmp	r2, r4
90014de4:	f6ff ae1c 	blt.w	90014a20 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014de8:	9c06      	ldr	r4, [sp, #24]
90014dea:	42a2      	cmp	r2, r4
90014dec:	9c08      	ldr	r4, [sp, #32]
90014dee:	bfbc      	itt	lt
90014df0:	3201      	addlt	r2, #1
90014df2:	9206      	strlt	r2, [sp, #24]
90014df4:	f1c3 0220 	rsb	r2, r3, #32
90014df8:	4362      	muls	r2, r4
90014dfa:	2401      	movs	r4, #1
90014dfc:	940b      	str	r4, [sp, #44]	@ 0x2c
90014dfe:	2420      	movs	r4, #32
90014e00:	e6d6      	b.n	90014bb0 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
90014e02:	ea4f 1861 	mov.w	r8, r1, asr #5
90014e06:	f009 021f 	and.w	r2, r9, #31
90014e0a:	f001 011f 	and.w	r1, r1, #31
90014e0e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
90014e12:	920c      	str	r2, [sp, #48]	@ 0x30
90014e14:	45b0      	cmp	r8, r6
90014e16:	9a01      	ldr	r2, [sp, #4]
90014e18:	f8b5 a006 	ldrh.w	sl, [r5, #6]
90014e1c:	eba2 0203 	sub.w	r2, r2, r3
90014e20:	d108      	bne.n	90014e34 <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
90014e22:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90014e24:	4496      	add	lr, r2
90014e26:	4419      	add	r1, r3
90014e28:	f8a5 e004 	strh.w	lr, [r5, #4]
90014e2c:	fb02 a101 	mla	r1, r2, r1, sl
90014e30:	80e9      	strh	r1, [r5, #6]
90014e32:	e6fa      	b.n	90014c2a <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90014e34:	2c00      	cmp	r4, #0
90014e36:	f2c0 80a7 	blt.w	90014f88 <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
90014e3a:	2701      	movs	r7, #1
90014e3c:	f1c1 0c20 	rsb	ip, r1, #32
90014e40:	970a      	str	r7, [sp, #40]	@ 0x28
90014e42:	2720      	movs	r7, #32
90014e44:	fb02 f20c 	mul.w	r2, r2, ip
90014e48:	9709      	str	r7, [sp, #36]	@ 0x24
90014e4a:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90014e4c:	fb92 fcf4 	sdiv	ip, r2, r4
90014e50:	fb04 221c 	mls	r2, r4, ip, r2
90014e54:	4439      	add	r1, r7
90014e56:	2a00      	cmp	r2, #0
90014e58:	bfbc      	itt	lt
90014e5a:	f10c 3cff 	addlt.w	ip, ip, #4294967295
90014e5e:	1912      	addlt	r2, r2, r4
90014e60:	fb0c a101 	mla	r1, ip, r1, sl
90014e64:	44e6      	add	lr, ip
90014e66:	80e9      	strh	r1, [r5, #6]
90014e68:	990a      	ldr	r1, [sp, #40]	@ 0x28
90014e6a:	f8a5 e004 	strh.w	lr, [r5, #4]
90014e6e:	eb08 0501 	add.w	r5, r8, r1
90014e72:	6901      	ldr	r1, [r0, #16]
90014e74:	f8b1 8006 	ldrh.w	r8, [r1, #6]
90014e78:	f8b1 e004 	ldrh.w	lr, [r1, #4]
90014e7c:	ea58 070e 	orrs.w	r7, r8, lr
90014e80:	d010      	beq.n	90014ea4 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90014e82:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
90014e86:	f1be 0f00 	cmp.w	lr, #0
90014e8a:	db0b      	blt.n	90014ea4 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90014e8c:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90014e8e:	45be      	cmp	lr, r7
90014e90:	da08      	bge.n	90014ea4 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90014e92:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90014e96:	45be      	cmp	lr, r7
90014e98:	bf3c      	itt	cc
90014e9a:	3108      	addcc	r1, #8
90014e9c:	6101      	strcc	r1, [r0, #16]
90014e9e:	f10e 0101 	add.w	r1, lr, #1
90014ea2:	6081      	str	r1, [r0, #8]
90014ea4:	6901      	ldr	r1, [r0, #16]
90014ea6:	f04f 0e00 	mov.w	lr, #0
90014eaa:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
90014eae:	42ae      	cmp	r6, r5
90014eb0:	800d      	strh	r5, [r1, #0]
90014eb2:	4463      	add	r3, ip
90014eb4:	f8a1 8002 	strh.w	r8, [r1, #2]
90014eb8:	f8a1 e004 	strh.w	lr, [r1, #4]
90014ebc:	f8a1 e006 	strh.w	lr, [r1, #6]
90014ec0:	d053      	beq.n	90014f6a <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
90014ec2:	9901      	ldr	r1, [sp, #4]
90014ec4:	1b12      	subs	r2, r2, r4
90014ec6:	1ac9      	subs	r1, r1, r3
90014ec8:	4461      	add	r1, ip
90014eca:	0149      	lsls	r1, r1, #5
90014ecc:	fb91 fef4 	sdiv	lr, r1, r4
90014ed0:	fb04 111e 	mls	r1, r4, lr, r1
90014ed4:	2900      	cmp	r1, #0
90014ed6:	bfbc      	itt	lt
90014ed8:	f10e 3eff 	addlt.w	lr, lr, #4294967295
90014edc:	1909      	addlt	r1, r1, r4
90014ede:	f10e 0701 	add.w	r7, lr, #1
90014ee2:	970d      	str	r7, [sp, #52]	@ 0x34
90014ee4:	f8d0 a010 	ldr.w	sl, [r0, #16]
90014ee8:	1852      	adds	r2, r2, r1
90014eea:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90014eec:	bf54      	ite	pl
90014eee:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
90014ef2:	46f4      	movmi	ip, lr
90014ef4:	f8ba b004 	ldrh.w	fp, [sl, #4]
90014ef8:	bf58      	it	pl
90014efa:	1b12      	subpl	r2, r2, r4
90014efc:	4463      	add	r3, ip
90014efe:	443d      	add	r5, r7
90014f00:	44e3      	add	fp, ip
90014f02:	f8aa b004 	strh.w	fp, [sl, #4]
90014f06:	f8ba b006 	ldrh.w	fp, [sl, #6]
90014f0a:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
90014f0e:	f8aa b006 	strh.w	fp, [sl, #6]
90014f12:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014f16:	f8bc b006 	ldrh.w	fp, [ip, #6]
90014f1a:	f8bc a004 	ldrh.w	sl, [ip, #4]
90014f1e:	ea5b 070a 	orrs.w	r7, fp, sl
90014f22:	d014      	beq.n	90014f4e <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90014f24:	f9bc a002 	ldrsh.w	sl, [ip, #2]
90014f28:	f1ba 0f00 	cmp.w	sl, #0
90014f2c:	db0f      	blt.n	90014f4e <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90014f2e:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90014f30:	45ba      	cmp	sl, r7
90014f32:	da0c      	bge.n	90014f4e <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90014f34:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
90014f38:	45ba      	cmp	sl, r7
90014f3a:	f10a 0a01 	add.w	sl, sl, #1
90014f3e:	bf38      	it	cc
90014f40:	f10c 0c08 	addcc.w	ip, ip, #8
90014f44:	f8c0 a008 	str.w	sl, [r0, #8]
90014f48:	bf38      	it	cc
90014f4a:	f8c0 c010 	strcc.w	ip, [r0, #16]
90014f4e:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014f52:	f04f 0700 	mov.w	r7, #0
90014f56:	42ae      	cmp	r6, r5
90014f58:	f8ac 5000 	strh.w	r5, [ip]
90014f5c:	f8ac 8002 	strh.w	r8, [ip, #2]
90014f60:	f8ac 7004 	strh.w	r7, [ip, #4]
90014f64:	f8ac 7006 	strh.w	r7, [ip, #6]
90014f68:	d1bc      	bne.n	90014ee4 <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
90014f6a:	6904      	ldr	r4, [r0, #16]
90014f6c:	9a01      	ldr	r2, [sp, #4]
90014f6e:	990c      	ldr	r1, [sp, #48]	@ 0x30
90014f70:	1ad3      	subs	r3, r2, r3
90014f72:	88a2      	ldrh	r2, [r4, #4]
90014f74:	3120      	adds	r1, #32
90014f76:	441a      	add	r2, r3
90014f78:	80a2      	strh	r2, [r4, #4]
90014f7a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90014f7c:	1a89      	subs	r1, r1, r2
90014f7e:	88e2      	ldrh	r2, [r4, #6]
90014f80:	fb03 2301 	mla	r3, r3, r1, r2
90014f84:	80e3      	strh	r3, [r4, #6]
90014f86:	e650      	b.n	90014c2a <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90014f88:	f04f 37ff 	mov.w	r7, #4294967295
90014f8c:	434a      	muls	r2, r1
90014f8e:	4264      	negs	r4, r4
90014f90:	970a      	str	r7, [sp, #40]	@ 0x28
90014f92:	2700      	movs	r7, #0
90014f94:	e758      	b.n	90014e48 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
90014f96:	ea4f 1867 	mov.w	r8, r7, asr #5
90014f9a:	f009 031f 	and.w	r3, r9, #31
90014f9e:	f007 071f 	and.w	r7, r7, #31
90014fa2:	fa1f fc8c 	uxth.w	ip, ip
90014fa6:	45d0      	cmp	r8, sl
90014fa8:	930f      	str	r3, [sp, #60]	@ 0x3c
90014faa:	fa1f fe8e 	uxth.w	lr, lr
90014fae:	d10a      	bne.n	90014fc6 <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
90014fb0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90014fb2:	449c      	add	ip, r3
90014fb4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90014fb6:	441f      	add	r7, r3
90014fb8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90014fba:	f8a5 c004 	strh.w	ip, [r5, #4]
90014fbe:	fb03 e707 	mla	r7, r3, r7, lr
90014fc2:	80ef      	strh	r7, [r5, #6]
90014fc4:	e6bc      	b.n	90014d40 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90014fc6:	2900      	cmp	r1, #0
90014fc8:	f2c0 80a6 	blt.w	90015118 <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
90014fcc:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90014fce:	f1c7 0320 	rsb	r3, r7, #32
90014fd2:	4363      	muls	r3, r4
90014fd4:	2401      	movs	r4, #1
90014fd6:	940d      	str	r4, [sp, #52]	@ 0x34
90014fd8:	2420      	movs	r4, #32
90014fda:	940c      	str	r4, [sp, #48]	@ 0x30
90014fdc:	fb93 f4f1 	sdiv	r4, r3, r1
90014fe0:	fb01 3b14 	mls	fp, r1, r4, r3
90014fe4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90014fe6:	f1bb 0f00 	cmp.w	fp, #0
90014fea:	441f      	add	r7, r3
90014fec:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90014fee:	bfbc      	itt	lt
90014ff0:	f104 34ff 	addlt.w	r4, r4, #4294967295
90014ff4:	448b      	addlt	fp, r1
90014ff6:	fb04 e707 	mla	r7, r4, r7, lr
90014ffa:	44a4      	add	ip, r4
90014ffc:	80ef      	strh	r7, [r5, #6]
90014ffe:	f8a5 c004 	strh.w	ip, [r5, #4]
90015002:	eb08 0503 	add.w	r5, r8, r3
90015006:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001500a:	f8bc e006 	ldrh.w	lr, [ip, #6]
9001500e:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90015012:	ea5e 0307 	orrs.w	r3, lr, r7
90015016:	d011      	beq.n	9001503c <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90015018:	f9bc e002 	ldrsh.w	lr, [ip, #2]
9001501c:	f1be 0f00 	cmp.w	lr, #0
90015020:	db0c      	blt.n	9001503c <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90015022:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90015024:	45be      	cmp	lr, r7
90015026:	da09      	bge.n	9001503c <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90015028:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
9001502c:	45be      	cmp	lr, r7
9001502e:	bf3c      	itt	cc
90015030:	f10c 0708 	addcc.w	r7, ip, #8
90015034:	6107      	strcc	r7, [r0, #16]
90015036:	f10e 0701 	add.w	r7, lr, #1
9001503a:	6087      	str	r7, [r0, #8]
9001503c:	6907      	ldr	r7, [r0, #16]
9001503e:	b213      	sxth	r3, r2
90015040:	4555      	cmp	r5, sl
90015042:	9310      	str	r3, [sp, #64]	@ 0x40
90015044:	807b      	strh	r3, [r7, #2]
90015046:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90015048:	803d      	strh	r5, [r7, #0]
9001504a:	80be      	strh	r6, [r7, #4]
9001504c:	eb04 0c03 	add.w	ip, r4, r3
90015050:	80fe      	strh	r6, [r7, #6]
90015052:	d050      	beq.n	900150f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
90015054:	9b01      	ldr	r3, [sp, #4]
90015056:	eba3 070c 	sub.w	r7, r3, ip
9001505a:	ebab 0301 	sub.w	r3, fp, r1
9001505e:	443c      	add	r4, r7
90015060:	9309      	str	r3, [sp, #36]	@ 0x24
90015062:	0164      	lsls	r4, r4, #5
90015064:	fb94 f8f1 	sdiv	r8, r4, r1
90015068:	fb01 4418 	mls	r4, r1, r8, r4
9001506c:	2c00      	cmp	r4, #0
9001506e:	bfbc      	itt	lt
90015070:	f108 38ff 	addlt.w	r8, r8, #4294967295
90015074:	1864      	addlt	r4, r4, r1
90015076:	f108 0701 	add.w	r7, r8, #1
9001507a:	9711      	str	r7, [sp, #68]	@ 0x44
9001507c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001507e:	f8d0 e010 	ldr.w	lr, [r0, #16]
90015082:	191b      	adds	r3, r3, r4
90015084:	f8be b004 	ldrh.w	fp, [lr, #4]
90015088:	bf54      	ite	pl
9001508a:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
9001508c:	4647      	movmi	r7, r8
9001508e:	9309      	str	r3, [sp, #36]	@ 0x24
90015090:	bf58      	it	pl
90015092:	1a5b      	subpl	r3, r3, r1
90015094:	44bb      	add	fp, r7
90015096:	44bc      	add	ip, r7
90015098:	bf58      	it	pl
9001509a:	9309      	strpl	r3, [sp, #36]	@ 0x24
9001509c:	f8ae b004 	strh.w	fp, [lr, #4]
900150a0:	f8be b006 	ldrh.w	fp, [lr, #6]
900150a4:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
900150a8:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
900150aa:	f8ae b006 	strh.w	fp, [lr, #6]
900150ae:	443d      	add	r5, r7
900150b0:	f8d0 e010 	ldr.w	lr, [r0, #16]
900150b4:	f8be b006 	ldrh.w	fp, [lr, #6]
900150b8:	f8be 7004 	ldrh.w	r7, [lr, #4]
900150bc:	ea5b 0307 	orrs.w	r3, fp, r7
900150c0:	d011      	beq.n	900150e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
900150c2:	f9be b002 	ldrsh.w	fp, [lr, #2]
900150c6:	f1bb 0f00 	cmp.w	fp, #0
900150ca:	db0c      	blt.n	900150e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
900150cc:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
900150ce:	45bb      	cmp	fp, r7
900150d0:	da09      	bge.n	900150e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
900150d2:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
900150d6:	45bb      	cmp	fp, r7
900150d8:	bf3c      	itt	cc
900150da:	f10e 0708 	addcc.w	r7, lr, #8
900150de:	6107      	strcc	r7, [r0, #16]
900150e0:	f10b 0701 	add.w	r7, fp, #1
900150e4:	6087      	str	r7, [r0, #8]
900150e6:	6907      	ldr	r7, [r0, #16]
900150e8:	4555      	cmp	r5, sl
900150ea:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900150ec:	803d      	strh	r5, [r7, #0]
900150ee:	807b      	strh	r3, [r7, #2]
900150f0:	80be      	strh	r6, [r7, #4]
900150f2:	80fe      	strh	r6, [r7, #6]
900150f4:	d1c2      	bne.n	9001507c <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
900150f6:	9b01      	ldr	r3, [sp, #4]
900150f8:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
900150fa:	eba3 0c0c 	sub.w	ip, r3, ip
900150fe:	6903      	ldr	r3, [r0, #16]
90015100:	3720      	adds	r7, #32
90015102:	8899      	ldrh	r1, [r3, #4]
90015104:	4461      	add	r1, ip
90015106:	8099      	strh	r1, [r3, #4]
90015108:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001510a:	1a7f      	subs	r7, r7, r1
9001510c:	88d9      	ldrh	r1, [r3, #6]
9001510e:	fb0c 1c07 	mla	ip, ip, r7, r1
90015112:	f8a3 c006 	strh.w	ip, [r3, #6]
90015116:	e613      	b.n	90014d40 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90015118:	f04f 34ff 	mov.w	r4, #4294967295
9001511c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001511e:	4249      	negs	r1, r1
90015120:	940d      	str	r4, [sp, #52]	@ 0x34
90015122:	2400      	movs	r4, #0
90015124:	437b      	muls	r3, r7
90015126:	e758      	b.n	90014fda <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
90015128:	9905      	ldr	r1, [sp, #20]
9001512a:	ea4f 1b69 	mov.w	fp, r9, asr #5
9001512e:	f009 0c1f 	and.w	ip, r9, #31
90015132:	f8b7 8004 	ldrh.w	r8, [r7, #4]
90015136:	f001 011f 	and.w	r1, r1, #31
9001513a:	45f3      	cmp	fp, lr
9001513c:	f8b7 a006 	ldrh.w	sl, [r7, #6]
90015140:	9102      	str	r1, [sp, #8]
90015142:	9904      	ldr	r1, [sp, #16]
90015144:	eba1 0406 	sub.w	r4, r1, r6
90015148:	d108      	bne.n	9001515c <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
9001514a:	9b02      	ldr	r3, [sp, #8]
9001514c:	44a0      	add	r8, r4
9001514e:	449c      	add	ip, r3
90015150:	f8a7 8004 	strh.w	r8, [r7, #4]
90015154:	fb04 a40c 	mla	r4, r4, ip, sl
90015158:	80fc      	strh	r4, [r7, #6]
9001515a:	e461      	b.n	90014a20 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
9001515c:	9905      	ldr	r1, [sp, #20]
9001515e:	ebb1 0109 	subs.w	r1, r1, r9
90015162:	bf51      	iteee	pl
90015164:	f1cc 0520 	rsbpl	r5, ip, #32
90015168:	fb04 f40c 	mulmi.w	r4, r4, ip
9001516c:	4249      	negmi	r1, r1
9001516e:	2500      	movmi	r5, #0
90015170:	bf5d      	ittte	pl
90015172:	436c      	mulpl	r4, r5
90015174:	2520      	movpl	r5, #32
90015176:	f04f 0901 	movpl.w	r9, #1
9001517a:	f04f 39ff 	movmi.w	r9, #4294967295
9001517e:	9501      	str	r5, [sp, #4]
90015180:	9b01      	ldr	r3, [sp, #4]
90015182:	fb94 f5f1 	sdiv	r5, r4, r1
90015186:	fb01 4415 	mls	r4, r1, r5, r4
9001518a:	449c      	add	ip, r3
9001518c:	eb0b 0309 	add.w	r3, fp, r9
90015190:	2c00      	cmp	r4, #0
90015192:	bfbc      	itt	lt
90015194:	f105 35ff 	addlt.w	r5, r5, #4294967295
90015198:	1864      	addlt	r4, r4, r1
9001519a:	44a8      	add	r8, r5
9001519c:	fb05 ac0c 	mla	ip, r5, ip, sl
900151a0:	f8a7 8004 	strh.w	r8, [r7, #4]
900151a4:	f8a7 c006 	strh.w	ip, [r7, #6]
900151a8:	f8d0 c010 	ldr.w	ip, [r0, #16]
900151ac:	f8bc 8006 	ldrh.w	r8, [ip, #6]
900151b0:	f8bc 7004 	ldrh.w	r7, [ip, #4]
900151b4:	ea58 0707 	orrs.w	r7, r8, r7
900151b8:	d011      	beq.n	900151de <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
900151ba:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
900151be:	f1b8 0f00 	cmp.w	r8, #0
900151c2:	db0c      	blt.n	900151de <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
900151c4:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
900151c6:	45b8      	cmp	r8, r7
900151c8:	da09      	bge.n	900151de <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
900151ca:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
900151ce:	45b8      	cmp	r8, r7
900151d0:	bf3c      	itt	cc
900151d2:	f10c 0708 	addcc.w	r7, ip, #8
900151d6:	6107      	strcc	r7, [r0, #16]
900151d8:	f108 0701 	add.w	r7, r8, #1
900151dc:	6087      	str	r7, [r0, #8]
900151de:	6907      	ldr	r7, [r0, #16]
900151e0:	f04f 0c00 	mov.w	ip, #0
900151e4:	b212      	sxth	r2, r2
900151e6:	459e      	cmp	lr, r3
900151e8:	803b      	strh	r3, [r7, #0]
900151ea:	442e      	add	r6, r5
900151ec:	807a      	strh	r2, [r7, #2]
900151ee:	f8a7 c004 	strh.w	ip, [r7, #4]
900151f2:	f8a7 c006 	strh.w	ip, [r7, #6]
900151f6:	d04b      	beq.n	90015290 <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
900151f8:	9f04      	ldr	r7, [sp, #16]
900151fa:	1a64      	subs	r4, r4, r1
900151fc:	f04f 0a00 	mov.w	sl, #0
90015200:	1bbf      	subs	r7, r7, r6
90015202:	443d      	add	r5, r7
90015204:	016d      	lsls	r5, r5, #5
90015206:	fb95 f8f1 	sdiv	r8, r5, r1
9001520a:	fb01 5518 	mls	r5, r1, r8, r5
9001520e:	4565      	cmp	r5, ip
90015210:	bfbc      	itt	lt
90015212:	f108 38ff 	addlt.w	r8, r8, #4294967295
90015216:	186d      	addlt	r5, r5, r1
90015218:	f108 0701 	add.w	r7, r8, #1
9001521c:	9703      	str	r7, [sp, #12]
9001521e:	f8d0 c010 	ldr.w	ip, [r0, #16]
90015222:	1964      	adds	r4, r4, r5
90015224:	444b      	add	r3, r9
90015226:	bf54      	ite	pl
90015228:	9f03      	ldrpl	r7, [sp, #12]
9001522a:	4647      	movmi	r7, r8
9001522c:	f8bc b004 	ldrh.w	fp, [ip, #4]
90015230:	bf58      	it	pl
90015232:	1a64      	subpl	r4, r4, r1
90015234:	443e      	add	r6, r7
90015236:	44bb      	add	fp, r7
90015238:	f8ac b004 	strh.w	fp, [ip, #4]
9001523c:	f8bc b006 	ldrh.w	fp, [ip, #6]
90015240:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90015244:	f8ac b006 	strh.w	fp, [ip, #6]
90015248:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001524c:	f8bc b006 	ldrh.w	fp, [ip, #6]
90015250:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90015254:	ea5b 0707 	orrs.w	r7, fp, r7
90015258:	d011      	beq.n	9001527e <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
9001525a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
9001525e:	f1bb 0f00 	cmp.w	fp, #0
90015262:	db0c      	blt.n	9001527e <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90015264:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90015266:	45bb      	cmp	fp, r7
90015268:	da09      	bge.n	9001527e <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
9001526a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
9001526e:	45bb      	cmp	fp, r7
90015270:	bf3c      	itt	cc
90015272:	f10c 0708 	addcc.w	r7, ip, #8
90015276:	6107      	strcc	r7, [r0, #16]
90015278:	f10b 0701 	add.w	r7, fp, #1
9001527c:	6087      	str	r7, [r0, #8]
9001527e:	6907      	ldr	r7, [r0, #16]
90015280:	459e      	cmp	lr, r3
90015282:	803b      	strh	r3, [r7, #0]
90015284:	807a      	strh	r2, [r7, #2]
90015286:	f8a7 a004 	strh.w	sl, [r7, #4]
9001528a:	f8a7 a006 	strh.w	sl, [r7, #6]
9001528e:	d1c6      	bne.n	9001521e <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
90015290:	9b04      	ldr	r3, [sp, #16]
90015292:	1b9e      	subs	r6, r3, r6
90015294:	6903      	ldr	r3, [r0, #16]
90015296:	889a      	ldrh	r2, [r3, #4]
90015298:	4432      	add	r2, r6
9001529a:	809a      	strh	r2, [r3, #4]
9001529c:	9a02      	ldr	r2, [sp, #8]
9001529e:	f102 0c20 	add.w	ip, r2, #32
900152a2:	9a01      	ldr	r2, [sp, #4]
900152a4:	ebac 0c02 	sub.w	ip, ip, r2
900152a8:	88da      	ldrh	r2, [r3, #6]
900152aa:	fb06 260c 	mla	r6, r6, ip, r2
900152ae:	80de      	strh	r6, [r3, #6]
900152b0:	f7ff bbb6 	b.w	90014a20 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

900152b4 <_ZN8touchgfx7Outline6lineToEii>:
900152b4:	6a43      	ldr	r3, [r0, #36]	@ 0x24
900152b6:	079b      	lsls	r3, r3, #30
900152b8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
900152ba:	460e      	mov	r6, r1
900152bc:	4615      	mov	r5, r2
900152be:	d511      	bpl.n	900152e4 <_ZN8touchgfx7Outline6lineToEii+0x30>
900152c0:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
900152c4:	ea86 0701 	eor.w	r7, r6, r1
900152c8:	ea85 0302 	eor.w	r3, r5, r2
900152cc:	433b      	orrs	r3, r7
900152ce:	d009      	beq.n	900152e4 <_ZN8touchgfx7Outline6lineToEii+0x30>
900152d0:	4633      	mov	r3, r6
900152d2:	9500      	str	r5, [sp, #0]
900152d4:	f7ff fb4c 	bl	90014970 <_ZN8touchgfx7Outline10renderLineEiiii>
900152d8:	6a43      	ldr	r3, [r0, #36]	@ 0x24
900152da:	f043 0301 	orr.w	r3, r3, #1
900152de:	e9c0 6505 	strd	r6, r5, [r0, #20]
900152e2:	6243      	str	r3, [r0, #36]	@ 0x24
900152e4:	b003      	add	sp, #12
900152e6:	bdf0      	pop	{r4, r5, r6, r7, pc}

900152e8 <_ZN8touchgfx7Outline6moveToEii>:
900152e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900152ea:	6a43      	ldr	r3, [r0, #36]	@ 0x24
900152ec:	4615      	mov	r5, r2
900152ee:	4604      	mov	r4, r0
900152f0:	460e      	mov	r6, r1
900152f2:	079a      	lsls	r2, r3, #30
900152f4:	d401      	bmi.n	900152fa <_ZN8touchgfx7Outline6moveToEii+0x12>
900152f6:	f7ff fb07 	bl	90014908 <_ZN8touchgfx7Outline5resetEv>
900152fa:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900152fc:	07db      	lsls	r3, r3, #31
900152fe:	d504      	bpl.n	9001530a <_ZN8touchgfx7Outline6moveToEii+0x22>
90015300:	4620      	mov	r0, r4
90015302:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
90015306:	f7ff ffd5 	bl	900152b4 <_ZN8touchgfx7Outline6lineToEii>
9001530a:	6923      	ldr	r3, [r4, #16]
9001530c:	1170      	asrs	r0, r6, #5
9001530e:	1169      	asrs	r1, r5, #5
90015310:	f9b3 2000 	ldrsh.w	r2, [r3]
90015314:	4290      	cmp	r0, r2
90015316:	d103      	bne.n	90015320 <_ZN8touchgfx7Outline6moveToEii+0x38>
90015318:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
9001531c:	4291      	cmp	r1, r2
9001531e:	d01a      	beq.n	90015356 <_ZN8touchgfx7Outline6moveToEii+0x6e>
90015320:	88df      	ldrh	r7, [r3, #6]
90015322:	889a      	ldrh	r2, [r3, #4]
90015324:	433a      	orrs	r2, r7
90015326:	d010      	beq.n	9001534a <_ZN8touchgfx7Outline6moveToEii+0x62>
90015328:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
9001532c:	2a00      	cmp	r2, #0
9001532e:	db0c      	blt.n	9001534a <_ZN8touchgfx7Outline6moveToEii+0x62>
90015330:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
90015332:	42ba      	cmp	r2, r7
90015334:	da09      	bge.n	9001534a <_ZN8touchgfx7Outline6moveToEii+0x62>
90015336:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
9001533a:	42ba      	cmp	r2, r7
9001533c:	f102 0201 	add.w	r2, r2, #1
90015340:	bf38      	it	cc
90015342:	3308      	addcc	r3, #8
90015344:	60a2      	str	r2, [r4, #8]
90015346:	bf38      	it	cc
90015348:	6123      	strcc	r3, [r4, #16]
9001534a:	6923      	ldr	r3, [r4, #16]
9001534c:	2200      	movs	r2, #0
9001534e:	8018      	strh	r0, [r3, #0]
90015350:	8059      	strh	r1, [r3, #2]
90015352:	809a      	strh	r2, [r3, #4]
90015354:	80da      	strh	r2, [r3, #6]
90015356:	6166      	str	r6, [r4, #20]
90015358:	6225      	str	r5, [r4, #32]
9001535a:	e9c4 5606 	strd	r5, r6, [r4, #24]
9001535e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90015360 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
90015360:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90015364:	b0d0      	sub	sp, #320	@ 0x140
90015366:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
9001536a:	466c      	mov	r4, sp
9001536c:	4627      	mov	r7, r4
9001536e:	1a0d      	subs	r5, r1, r0
90015370:	f100 0308 	add.w	r3, r0, #8
90015374:	2d48      	cmp	r5, #72	@ 0x48
90015376:	f340 80d5 	ble.w	90015524 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
9001537a:	112d      	asrs	r5, r5, #4
9001537c:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
90015380:	f9b0 9000 	ldrsh.w	r9, [r0]
90015384:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
90015388:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
9001538c:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90015390:	6816      	ldr	r6, [r2, #0]
90015392:	6006      	str	r6, [r0, #0]
90015394:	6856      	ldr	r6, [r2, #4]
90015396:	6046      	str	r6, [r0, #4]
90015398:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
9001539c:	f8a2 8002 	strh.w	r8, [r2, #2]
900153a0:	f8a2 e004 	strh.w	lr, [r2, #4]
900153a4:	f8a2 c006 	strh.w	ip, [r2, #6]
900153a8:	f1a1 0208 	sub.w	r2, r1, #8
900153ac:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
900153b0:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
900153b4:	4565      	cmp	r5, ip
900153b6:	db06      	blt.n	900153c6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
900153b8:	d119      	bne.n	900153ee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
900153ba:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
900153be:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
900153c2:	42ae      	cmp	r6, r5
900153c4:	dd13      	ble.n	900153ee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
900153c6:	460e      	mov	r6, r1
900153c8:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
900153cc:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
900153d0:	f856 5d08 	ldr.w	r5, [r6, #-8]!
900153d4:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
900153d8:	601d      	str	r5, [r3, #0]
900153da:	6875      	ldr	r5, [r6, #4]
900153dc:	605d      	str	r5, [r3, #4]
900153de:	f821 9c08 	strh.w	r9, [r1, #-8]
900153e2:	f821 cc06 	strh.w	ip, [r1, #-6]
900153e6:	f821 8c04 	strh.w	r8, [r1, #-4]
900153ea:	f821 ec02 	strh.w	lr, [r1, #-2]
900153ee:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
900153f2:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
900153f6:	42ae      	cmp	r6, r5
900153f8:	db06      	blt.n	90015408 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
900153fa:	d116      	bne.n	9001542a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
900153fc:	f9b0 c000 	ldrsh.w	ip, [r0]
90015400:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
90015404:	45ac      	cmp	ip, r5
90015406:	da10      	bge.n	9001542a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90015408:	681d      	ldr	r5, [r3, #0]
9001540a:	f9b0 8000 	ldrsh.w	r8, [r0]
9001540e:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90015412:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
90015416:	6005      	str	r5, [r0, #0]
90015418:	685d      	ldr	r5, [r3, #4]
9001541a:	f8a0 8008 	strh.w	r8, [r0, #8]
9001541e:	6045      	str	r5, [r0, #4]
90015420:	8146      	strh	r6, [r0, #10]
90015422:	f8a0 e00c 	strh.w	lr, [r0, #12]
90015426:	f8a0 c00e 	strh.w	ip, [r0, #14]
9001542a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
9001542e:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
90015432:	4565      	cmp	r5, ip
90015434:	db06      	blt.n	90015444 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
90015436:	d119      	bne.n	9001546c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90015438:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
9001543c:	f9b0 5000 	ldrsh.w	r5, [r0]
90015440:	42ae      	cmp	r6, r5
90015442:	da13      	bge.n	9001546c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90015444:	460e      	mov	r6, r1
90015446:	f9b0 9000 	ldrsh.w	r9, [r0]
9001544a:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
9001544e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
90015452:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
90015456:	6005      	str	r5, [r0, #0]
90015458:	6875      	ldr	r5, [r6, #4]
9001545a:	6045      	str	r5, [r0, #4]
9001545c:	f821 9c08 	strh.w	r9, [r1, #-8]
90015460:	f821 cc06 	strh.w	ip, [r1, #-6]
90015464:	f821 8c04 	strh.w	r8, [r1, #-4]
90015468:	f821 ec02 	strh.w	lr, [r1, #-2]
9001546c:	3308      	adds	r3, #8
9001546e:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
90015472:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
90015476:	45e6      	cmp	lr, ip
90015478:	dbf8      	blt.n	9001546c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
9001547a:	d105      	bne.n	90015488 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
9001547c:	f9b3 6000 	ldrsh.w	r6, [r3]
90015480:	f9b0 5000 	ldrsh.w	r5, [r0]
90015484:	42ae      	cmp	r6, r5
90015486:	dbf1      	blt.n	9001546c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90015488:	4615      	mov	r5, r2
9001548a:	3a08      	subs	r2, #8
9001548c:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
90015490:	45b4      	cmp	ip, r6
90015492:	dbf9      	blt.n	90015488 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90015494:	d105      	bne.n	900154a2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
90015496:	f9b0 8000 	ldrsh.w	r8, [r0]
9001549a:	f9b2 6000 	ldrsh.w	r6, [r2]
9001549e:	45b0      	cmp	r8, r6
900154a0:	dbf2      	blt.n	90015488 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
900154a2:	4293      	cmp	r3, r2
900154a4:	f1a5 0608 	sub.w	r6, r5, #8
900154a8:	d816      	bhi.n	900154d8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
900154aa:	f8d6 c000 	ldr.w	ip, [r6]
900154ae:	f9b3 a000 	ldrsh.w	sl, [r3]
900154b2:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
900154b6:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
900154ba:	f8c3 c000 	str.w	ip, [r3]
900154be:	f8d6 c004 	ldr.w	ip, [r6, #4]
900154c2:	f8c3 c004 	str.w	ip, [r3, #4]
900154c6:	f825 ac08 	strh.w	sl, [r5, #-8]
900154ca:	f825 ec06 	strh.w	lr, [r5, #-6]
900154ce:	f825 9c04 	strh.w	r9, [r5, #-4]
900154d2:	f825 8c02 	strh.w	r8, [r5, #-2]
900154d6:	e7c9      	b.n	9001546c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900154d8:	f8d6 e000 	ldr.w	lr, [r6]
900154dc:	f9b0 a000 	ldrsh.w	sl, [r0]
900154e0:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
900154e4:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
900154e8:	f8c0 e000 	str.w	lr, [r0]
900154ec:	f8d6 e004 	ldr.w	lr, [r6, #4]
900154f0:	1a16      	subs	r6, r2, r0
900154f2:	f8c0 e004 	str.w	lr, [r0, #4]
900154f6:	f825 ac08 	strh.w	sl, [r5, #-8]
900154fa:	f825 cc06 	strh.w	ip, [r5, #-6]
900154fe:	f825 9c04 	strh.w	r9, [r5, #-4]
90015502:	f825 8c02 	strh.w	r8, [r5, #-2]
90015506:	1acd      	subs	r5, r1, r3
90015508:	10ed      	asrs	r5, r5, #3
9001550a:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
9001550e:	bfb5      	itete	lt
90015510:	e9c4 0200 	strdlt	r0, r2, [r4]
90015514:	e9c4 3100 	strdge	r3, r1, [r4]
90015518:	460a      	movlt	r2, r1
9001551a:	4603      	movge	r3, r0
9001551c:	3408      	adds	r4, #8
9001551e:	4618      	mov	r0, r3
90015520:	4611      	mov	r1, r2
90015522:	e724      	b.n	9001536e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
90015524:	4299      	cmp	r1, r3
90015526:	d927      	bls.n	90015578 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
90015528:	f1a3 0210 	sub.w	r2, r3, #16
9001552c:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
90015530:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
90015534:	45ac      	cmp	ip, r5
90015536:	db06      	blt.n	90015546 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
90015538:	d11c      	bne.n	90015574 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
9001553a:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
9001553e:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
90015542:	42ae      	cmp	r6, r5
90015544:	da16      	bge.n	90015574 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
90015546:	4615      	mov	r5, r2
90015548:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
9001554c:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
90015550:	3a08      	subs	r2, #8
90015552:	f855 6f08 	ldr.w	r6, [r5, #8]!
90015556:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
9001555a:	6196      	str	r6, [r2, #24]
9001555c:	42a8      	cmp	r0, r5
9001555e:	686e      	ldr	r6, [r5, #4]
90015560:	f8a2 9010 	strh.w	r9, [r2, #16]
90015564:	61d6      	str	r6, [r2, #28]
90015566:	f8a2 c012 	strh.w	ip, [r2, #18]
9001556a:	f8a2 8014 	strh.w	r8, [r2, #20]
9001556e:	f8a2 e016 	strh.w	lr, [r2, #22]
90015572:	d1db      	bne.n	9001552c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
90015574:	3308      	adds	r3, #8
90015576:	e7d5      	b.n	90015524 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90015578:	42bc      	cmp	r4, r7
9001557a:	d903      	bls.n	90015584 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
9001557c:	e954 0102 	ldrd	r0, r1, [r4, #-8]
90015580:	3c08      	subs	r4, #8
90015582:	e6f4      	b.n	9001536e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
90015584:	b050      	add	sp, #320	@ 0x140
90015586:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

9001558a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
9001558a:	b510      	push	{r4, lr}
9001558c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
9001558e:	4604      	mov	r4, r0
90015590:	07da      	lsls	r2, r3, #31
90015592:	d507      	bpl.n	900155a4 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
90015594:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
90015598:	f7ff fe8c 	bl	900152b4 <_ZN8touchgfx7Outline6lineToEii>
9001559c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
9001559e:	f023 0301 	bic.w	r3, r3, #1
900155a2:	6243      	str	r3, [r0, #36]	@ 0x24
900155a4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900155a6:	079b      	lsls	r3, r3, #30
900155a8:	d521      	bpl.n	900155ee <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
900155aa:	6923      	ldr	r3, [r4, #16]
900155ac:	88d9      	ldrh	r1, [r3, #6]
900155ae:	889a      	ldrh	r2, [r3, #4]
900155b0:	430a      	orrs	r2, r1
900155b2:	d010      	beq.n	900155d6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
900155b4:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
900155b8:	2a00      	cmp	r2, #0
900155ba:	db0c      	blt.n	900155d6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
900155bc:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
900155be:	428a      	cmp	r2, r1
900155c0:	da09      	bge.n	900155d6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
900155c2:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
900155c6:	4291      	cmp	r1, r2
900155c8:	f102 0201 	add.w	r2, r2, #1
900155cc:	bf88      	it	hi
900155ce:	3308      	addhi	r3, #8
900155d0:	60a2      	str	r2, [r4, #8]
900155d2:	bf88      	it	hi
900155d4:	6123      	strhi	r3, [r4, #16]
900155d6:	68a1      	ldr	r1, [r4, #8]
900155d8:	b129      	cbz	r1, 900155e6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
900155da:	6863      	ldr	r3, [r4, #4]
900155dc:	4299      	cmp	r1, r3
900155de:	d802      	bhi.n	900155e6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
900155e0:	68e0      	ldr	r0, [r4, #12]
900155e2:	f7ff febd 	bl	90015360 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
900155e6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900155e8:	f023 0302 	bic.w	r3, r3, #2
900155ec:	6263      	str	r3, [r4, #36]	@ 0x24
900155ee:	68e0      	ldr	r0, [r4, #12]
900155f0:	bd10      	pop	{r4, pc}
	...

900155f4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
900155f4:	4b01      	ldr	r3, [pc, #4]	@ (900155fc <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
900155f6:	6818      	ldr	r0, [r3, #0]
900155f8:	4770      	bx	lr
900155fa:	bf00      	nop
900155fc:	2402186c 	.word	0x2402186c

90015600 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
90015600:	4b01      	ldr	r3, [pc, #4]	@ (90015608 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
90015602:	6818      	ldr	r0, [r3, #0]
90015604:	4770      	bx	lr
90015606:	bf00      	nop
90015608:	24021870 	.word	0x24021870

9001560c <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
9001560c:	b510      	push	{r4, lr}
9001560e:	6803      	ldr	r3, [r0, #0]
90015610:	460c      	mov	r4, r1
90015612:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90015614:	4798      	blx	r3
90015616:	1b03      	subs	r3, r0, r4
90015618:	4258      	negs	r0, r3
9001561a:	4158      	adcs	r0, r3
9001561c:	bd10      	pop	{r4, pc}
	...

90015620 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
90015620:	4b01      	ldr	r3, [pc, #4]	@ (90015628 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
90015622:	6019      	str	r1, [r3, #0]
90015624:	4770      	bx	lr
90015626:	bf00      	nop
90015628:	24021874 	.word	0x24021874

9001562c <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
9001562c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015630:	4696      	mov	lr, r2
90015632:	b097      	sub	sp, #92	@ 0x5c
90015634:	4605      	mov	r5, r0
90015636:	4614      	mov	r4, r2
90015638:	460e      	mov	r6, r1
9001563a:	461f      	mov	r7, r3
9001563c:	f10d 0c1c 	add.w	ip, sp, #28
90015640:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
90015644:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
90015648:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
9001564c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90015650:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90015654:	f8de 3000 	ldr.w	r3, [lr]
90015658:	f104 0e14 	add.w	lr, r4, #20
9001565c:	f8cc 3000 	str.w	r3, [ip]
90015660:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90015664:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90015668:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
9001566c:	f8de 3000 	ldr.w	r3, [lr]
90015670:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
90015674:	f8cc 3000 	str.w	r3, [ip]
90015678:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
9001567c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90015680:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90015684:	f8de 3000 	ldr.w	r3, [lr]
90015688:	4631      	mov	r1, r6
9001568a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
9001568c:	4628      	mov	r0, r5
9001568e:	f8cc 3000 	str.w	r3, [ip]
90015692:	682b      	ldr	r3, [r5, #0]
90015694:	9201      	str	r2, [sp, #4]
90015696:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90015698:	f8cd 8008 	str.w	r8, [sp, #8]
9001569c:	9200      	str	r2, [sp, #0]
9001569e:	aa07      	add	r2, sp, #28
900156a0:	e9cd 9a03 	strd	r9, sl, [sp, #12]
900156a4:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
900156a8:	463b      	mov	r3, r7
900156aa:	47d8      	blx	fp
900156ac:	46a6      	mov	lr, r4
900156ae:	f10d 0c1c 	add.w	ip, sp, #28
900156b2:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900156b6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900156ba:	f8de 3000 	ldr.w	r3, [lr]
900156be:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
900156c2:	343c      	adds	r4, #60	@ 0x3c
900156c4:	f8cc 3000 	str.w	r3, [ip]
900156c8:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
900156cc:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900156d0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900156d4:	f8de 3000 	ldr.w	r3, [lr]
900156d8:	f8cc 3000 	str.w	r3, [ip]
900156dc:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
900156e0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
900156e2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900156e6:	6823      	ldr	r3, [r4, #0]
900156e8:	4631      	mov	r1, r6
900156ea:	4628      	mov	r0, r5
900156ec:	f8cc 3000 	str.w	r3, [ip]
900156f0:	682b      	ldr	r3, [r5, #0]
900156f2:	e9cd 9a03 	strd	r9, sl, [sp, #12]
900156f6:	9a21      	ldr	r2, [sp, #132]	@ 0x84
900156f8:	f8cd 8008 	str.w	r8, [sp, #8]
900156fc:	9201      	str	r2, [sp, #4]
900156fe:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90015700:	9200      	str	r2, [sp, #0]
90015702:	aa07      	add	r2, sp, #28
90015704:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
90015706:	463b      	mov	r3, r7
90015708:	47a0      	blx	r4
9001570a:	b017      	add	sp, #92	@ 0x5c
9001570c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90015710 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
90015710:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015714:	b08d      	sub	sp, #52	@ 0x34
90015716:	4688      	mov	r8, r1
90015718:	f8d3 c000 	ldr.w	ip, [r3]
9001571c:	9916      	ldr	r1, [sp, #88]	@ 0x58
9001571e:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
90015722:	680f      	ldr	r7, [r1, #0]
90015724:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
90015728:	eba7 070c 	sub.w	r7, r7, ip
9001572c:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
90015730:	edd3 6a07 	vldr	s13, [r3, #28]
90015734:	42bc      	cmp	r4, r7
90015736:	9918      	ldr	r1, [sp, #96]	@ 0x60
90015738:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
9001573c:	bfa8      	it	ge
9001573e:	463c      	movge	r4, r7
90015740:	f9b1 9000 	ldrsh.w	r9, [r1]
90015744:	f9ba 1000 	ldrsh.w	r1, [sl]
90015748:	ee07 4a90 	vmov	s15, r4
9001574c:	eb09 0e0c 	add.w	lr, r9, ip
90015750:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
90015754:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
90015758:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
9001575c:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
90015760:	4571      	cmp	r1, lr
90015762:	ee25 4a04 	vmul.f32	s8, s10, s8
90015766:	ee65 4a24 	vmul.f32	s9, s10, s9
9001576a:	ee25 5a27 	vmul.f32	s10, s10, s15
9001576e:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
90015772:	ee71 0aa4 	vadd.f32	s1, s3, s9
90015776:	ee32 1a05 	vadd.f32	s2, s4, s10
9001577a:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9001577e:	ee36 0a84 	vadd.f32	s0, s13, s8
90015782:	ee61 1a87 	vmul.f32	s3, s3, s14
90015786:	ee22 2a07 	vmul.f32	s4, s4, s14
9001578a:	f340 808c 	ble.w	900158a6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
9001578e:	eba1 060e 	sub.w	r6, r1, lr
90015792:	fb96 f5f4 	sdiv	r5, r6, r4
90015796:	ee07 5a10 	vmov	s14, r5
9001579a:	2d00      	cmp	r5, #0
9001579c:	fb04 6615 	mls	r6, r4, r5, r6
900157a0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900157a4:	eea7 0a04 	vfma.f32	s0, s14, s8
900157a8:	eee7 0a24 	vfma.f32	s1, s14, s9
900157ac:	eea7 1a05 	vfma.f32	s2, s14, s10
900157b0:	dd12      	ble.n	900157d8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
900157b2:	ee70 6a44 	vsub.f32	s13, s0, s8
900157b6:	ee70 1ae4 	vsub.f32	s3, s1, s9
900157ba:	ee31 2a45 	vsub.f32	s4, s2, s10
900157be:	eef5 6a40 	vcmp.f32	s13, #0.0
900157c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900157c6:	bf14      	ite	ne
900157c8:	ee87 7aa6 	vdivne.f32	s14, s15, s13
900157cc:	eeb0 7a67 	vmoveq.f32	s14, s15
900157d0:	ee61 1a87 	vmul.f32	s3, s3, s14
900157d4:	ee22 2a07 	vmul.f32	s4, s4, s14
900157d8:	fb05 f204 	mul.w	r2, r5, r4
900157dc:	1abf      	subs	r7, r7, r2
900157de:	4494      	add	ip, r2
900157e0:	f8ba 2004 	ldrh.w	r2, [sl, #4]
900157e4:	4411      	add	r1, r2
900157e6:	eb09 020c 	add.w	r2, r9, ip
900157ea:	b209      	sxth	r1, r1
900157ec:	443a      	add	r2, r7
900157ee:	428a      	cmp	r2, r1
900157f0:	bfc4      	itt	gt
900157f2:	eba1 0209 	subgt.w	r2, r1, r9
900157f6:	eba2 070c 	subgt.w	r7, r2, ip
900157fa:	2f00      	cmp	r7, #0
900157fc:	dd50      	ble.n	900158a0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
900157fe:	fb97 f1f4 	sdiv	r1, r7, r4
90015802:	fb04 7211 	mls	r2, r4, r1, r7
90015806:	b90a      	cbnz	r2, 9001580c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
90015808:	3901      	subs	r1, #1
9001580a:	4622      	mov	r2, r4
9001580c:	eec7 3a80 	vdiv.f32	s7, s15, s0
90015810:	6840      	ldr	r0, [r0, #4]
90015812:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
90015816:	44b6      	add	lr, r6
90015818:	f8d0 a000 	ldr.w	sl, [r0]
9001581c:	2900      	cmp	r1, #0
9001581e:	bfcc      	ite	gt
90015820:	46a1      	movgt	r9, r4
90015822:	4691      	movle	r9, r2
90015824:	900b      	str	r0, [sp, #44]	@ 0x2c
90015826:	9817      	ldr	r0, [sp, #92]	@ 0x5c
90015828:	fb04 e505 	mla	r5, r4, r5, lr
9001582c:	eef0 6a42 	vmov.f32	s13, s4
90015830:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
90015834:	9008      	str	r0, [sp, #32]
90015836:	eeb0 7a61 	vmov.f32	s14, s3
9001583a:	9818      	ldr	r0, [sp, #96]	@ 0x60
9001583c:	695b      	ldr	r3, [r3, #20]
9001583e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90015842:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
90015846:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
9001584a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9001584c:	445b      	add	r3, fp
9001584e:	9307      	str	r3, [sp, #28]
90015850:	ee16 3a90 	vmov	r3, s13
90015854:	e9cd 8505 	strd	r8, r5, [sp, #20]
90015858:	ee60 2aa3 	vmul.f32	s5, s1, s7
9001585c:	ee21 3a23 	vmul.f32	s6, s2, s7
90015860:	ee72 7ae1 	vsub.f32	s15, s5, s3
90015864:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90015868:	ee17 7a90 	vmov	r7, s15
9001586c:	ee73 7a42 	vsub.f32	s15, s6, s4
90015870:	fb97 f7f4 	sdiv	r7, r7, r4
90015874:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90015878:	ee17 ca90 	vmov	ip, s15
9001587c:	fb9c fcf4 	sdiv	ip, ip, r4
90015880:	fb0c 3306 	mla	r3, ip, r6, r3
90015884:	9302      	str	r3, [sp, #8]
90015886:	ee17 3a10 	vmov	r3, s14
9001588a:	e9cd 7c03 	strd	r7, ip, [sp, #12]
9001588e:	fb07 3706 	mla	r7, r7, r6, r3
90015892:	eba9 0306 	sub.w	r3, r9, r6
90015896:	e9cd 4700 	strd	r4, r7, [sp]
9001589a:	f8da 4008 	ldr.w	r4, [sl, #8]
9001589e:	47a0      	blx	r4
900158a0:	b00d      	add	sp, #52	@ 0x34
900158a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900158a6:	2500      	movs	r5, #0
900158a8:	462e      	mov	r6, r5
900158aa:	e799      	b.n	900157e0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

900158ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
900158ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900158b0:	b0db      	sub	sp, #364	@ 0x16c
900158b2:	461d      	mov	r5, r3
900158b4:	4614      	mov	r4, r2
900158b6:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
900158ba:	910f      	str	r1, [sp, #60]	@ 0x3c
900158bc:	4629      	mov	r1, r5
900158be:	930a      	str	r3, [sp, #40]	@ 0x28
900158c0:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
900158c4:	9009      	str	r0, [sp, #36]	@ 0x24
900158c6:	930b      	str	r3, [sp, #44]	@ 0x2c
900158c8:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
900158cc:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
900158d0:	9310      	str	r3, [sp, #64]	@ 0x40
900158d2:	6803      	ldr	r3, [r0, #0]
900158d4:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
900158d6:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
900158da:	47b8      	blx	r7
900158dc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900158de:	6058      	str	r0, [r3, #4]
900158e0:	2800      	cmp	r0, #0
900158e2:	f000 83a1 	beq.w	90016028 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900158e6:	682b      	ldr	r3, [r5, #0]
900158e8:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
900158ec:	ed94 7a02 	vldr	s14, [r4, #8]
900158f0:	9314      	str	r3, [sp, #80]	@ 0x50
900158f2:	686b      	ldr	r3, [r5, #4]
900158f4:	eeb4 7ae7 	vcmpe.f32	s14, s15
900158f8:	9315      	str	r3, [sp, #84]	@ 0x54
900158fa:	4bc1      	ldr	r3, [pc, #772]	@ (90015c00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
900158fc:	7819      	ldrb	r1, [r3, #0]
900158fe:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
90015902:	2900      	cmp	r1, #0
90015904:	bf16      	itet	ne
90015906:	4619      	movne	r1, r3
90015908:	4611      	moveq	r1, r2
9001590a:	4613      	movne	r3, r2
9001590c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90015910:	9116      	str	r1, [sp, #88]	@ 0x58
90015912:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
90015916:	f240 8387 	bls.w	90016028 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001591a:	ed94 7a07 	vldr	s14, [r4, #28]
9001591e:	eeb4 7ae7 	vcmpe.f32	s14, s15
90015922:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90015926:	f240 837f 	bls.w	90016028 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001592a:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
9001592e:	eeb4 7ae7 	vcmpe.f32	s14, s15
90015932:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90015936:	f240 8377 	bls.w	90016028 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001593a:	6822      	ldr	r2, [r4, #0]
9001593c:	4bb1      	ldr	r3, [pc, #708]	@ (90015c04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
9001593e:	429a      	cmp	r2, r3
90015940:	f2c0 8372 	blt.w	90016028 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015944:	49b0      	ldr	r1, [pc, #704]	@ (90015c08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
90015946:	6963      	ldr	r3, [r4, #20]
90015948:	428a      	cmp	r2, r1
9001594a:	f300 836d 	bgt.w	90016028 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001594e:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
90015952:	48ae      	ldr	r0, [pc, #696]	@ (90015c0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
90015954:	33ff      	adds	r3, #255	@ 0xff
90015956:	4283      	cmp	r3, r0
90015958:	f200 8366 	bhi.w	90016028 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001595c:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9001595e:	4dac      	ldr	r5, [pc, #688]	@ (90015c10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
90015960:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
90015964:	33ff      	adds	r3, #255	@ 0xff
90015966:	42ab      	cmp	r3, r5
90015968:	f200 835e 	bhi.w	90016028 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001596c:	6862      	ldr	r2, [r4, #4]
9001596e:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
90015972:	33ff      	adds	r3, #255	@ 0xff
90015974:	4283      	cmp	r3, r0
90015976:	f200 8357 	bhi.w	90016028 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001597a:	69a1      	ldr	r1, [r4, #24]
9001597c:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
90015980:	33ff      	adds	r3, #255	@ 0xff
90015982:	4283      	cmp	r3, r0
90015984:	f200 8350 	bhi.w	90016028 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015988:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9001598a:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
9001598e:	30ff      	adds	r0, #255	@ 0xff
90015990:	42a8      	cmp	r0, r5
90015992:	f200 8349 	bhi.w	90016028 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015996:	428a      	cmp	r2, r1
90015998:	f280 8110 	bge.w	90015bbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
9001599c:	429a      	cmp	r2, r3
9001599e:	f300 8119 	bgt.w	90015bd4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
900159a2:	4299      	cmp	r1, r3
900159a4:	f280 811d 	bge.w	90015be2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
900159a8:	2502      	movs	r5, #2
900159aa:	2701      	movs	r7, #1
900159ac:	46a9      	mov	r9, r5
900159ae:	46b8      	mov	r8, r7
900159b0:	f04f 0a00 	mov.w	sl, #0
900159b4:	4621      	mov	r1, r4
900159b6:	a849      	add	r0, sp, #292	@ 0x124
900159b8:	f004 fa68 	bl	90019e8c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
900159bc:	4622      	mov	r2, r4
900159be:	4653      	mov	r3, sl
900159c0:	a949      	add	r1, sp, #292	@ 0x124
900159c2:	f8cd 9000 	str.w	r9, [sp]
900159c6:	a819      	add	r0, sp, #100	@ 0x64
900159c8:	f004 fb90 	bl	9001a0ec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
900159cc:	4622      	mov	r2, r4
900159ce:	4653      	mov	r3, sl
900159d0:	a949      	add	r1, sp, #292	@ 0x124
900159d2:	f8cd 8000 	str.w	r8, [sp]
900159d6:	a829      	add	r0, sp, #164	@ 0xa4
900159d8:	f004 fb88 	bl	9001a0ec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
900159dc:	4643      	mov	r3, r8
900159de:	4622      	mov	r2, r4
900159e0:	a949      	add	r1, sp, #292	@ 0x124
900159e2:	f8cd 9000 	str.w	r9, [sp]
900159e6:	a839      	add	r0, sp, #228	@ 0xe4
900159e8:	f004 fb80 	bl	9001a0ec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
900159ec:	42af      	cmp	r7, r5
900159ee:	af12      	add	r7, sp, #72	@ 0x48
900159f0:	bfb7      	itett	lt
900159f2:	2300      	movlt	r3, #0
900159f4:	2301      	movge	r3, #1
900159f6:	ad29      	addlt	r5, sp, #164	@ 0xa4
900159f8:	ac19      	addlt	r4, sp, #100	@ 0x64
900159fa:	bfb1      	iteee	lt
900159fc:	930e      	strlt	r3, [sp, #56]	@ 0x38
900159fe:	ad19      	addge	r5, sp, #100	@ 0x64
90015a00:	930e      	strge	r3, [sp, #56]	@ 0x38
90015a02:	ac29      	addge	r4, sp, #164	@ 0xa4
90015a04:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90015a06:	e893 0003 	ldmia.w	r3, {r0, r1}
90015a0a:	e887 0003 	stmia.w	r7, {r0, r1}
90015a0e:	b928      	cbnz	r0, 90015a1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
90015a10:	4b80      	ldr	r3, [pc, #512]	@ (90015c14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
90015a12:	6818      	ldr	r0, [r3, #0]
90015a14:	6803      	ldr	r3, [r0, #0]
90015a16:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90015a18:	4798      	blx	r3
90015a1a:	6038      	str	r0, [r7, #0]
90015a1c:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90015a1e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90015a22:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90015a26:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
90015a28:	930c      	str	r3, [sp, #48]	@ 0x30
90015a2a:	990c      	ldr	r1, [sp, #48]	@ 0x30
90015a2c:	6963      	ldr	r3, [r4, #20]
90015a2e:	440b      	add	r3, r1
90015a30:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90015a34:	4408      	add	r0, r1
90015a36:	b200      	sxth	r0, r0
90015a38:	4283      	cmp	r3, r0
90015a3a:	900d      	str	r0, [sp, #52]	@ 0x34
90015a3c:	f280 80dd 	bge.w	90015bfa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
90015a40:	428b      	cmp	r3, r1
90015a42:	da08      	bge.n	90015a56 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90015a44:	2a00      	cmp	r2, #0
90015a46:	dd06      	ble.n	90015a56 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90015a48:	1acb      	subs	r3, r1, r3
90015a4a:	429a      	cmp	r2, r3
90015a4c:	f2c0 80e4 	blt.w	90015c18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
90015a50:	2b00      	cmp	r3, #0
90015a52:	f300 80e2 	bgt.w	90015c1a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
90015a56:	6967      	ldr	r7, [r4, #20]
90015a58:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
90015a5c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90015a5e:	443b      	add	r3, r7
90015a60:	461f      	mov	r7, r3
90015a62:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90015a64:	1bdf      	subs	r7, r3, r7
90015a66:	4297      	cmp	r7, r2
90015a68:	bfa8      	it	ge
90015a6a:	4617      	movge	r7, r2
90015a6c:	2f00      	cmp	r7, #0
90015a6e:	f340 8166 	ble.w	90015d3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
90015a72:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90015a74:	6829      	ldr	r1, [r5, #0]
90015a76:	f9b3 2000 	ldrsh.w	r2, [r3]
90015a7a:	f9bb 3000 	ldrsh.w	r3, [fp]
90015a7e:	4411      	add	r1, r2
90015a80:	6820      	ldr	r0, [r4, #0]
90015a82:	4299      	cmp	r1, r3
90015a84:	dd1a      	ble.n	90015abc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90015a86:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90015a8a:	4402      	add	r2, r0
90015a8c:	440b      	add	r3, r1
90015a8e:	b21b      	sxth	r3, r3
90015a90:	429a      	cmp	r2, r3
90015a92:	dc13      	bgt.n	90015abc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90015a94:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90015a96:	a912      	add	r1, sp, #72	@ 0x48
90015a98:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90015a9a:	9809      	ldr	r0, [sp, #36]	@ 0x24
90015a9c:	681b      	ldr	r3, [r3, #0]
90015a9e:	9206      	str	r2, [sp, #24]
90015aa0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90015aa2:	9500      	str	r5, [sp, #0]
90015aa4:	9205      	str	r2, [sp, #20]
90015aa6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90015aa8:	e9cd b203 	strd	fp, r2, [sp, #12]
90015aac:	9a64      	ldr	r2, [sp, #400]	@ 0x190
90015aae:	e9cd 8201 	strd	r8, r2, [sp, #4]
90015ab2:	aa49      	add	r2, sp, #292	@ 0x124
90015ab4:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
90015ab8:	4623      	mov	r3, r4
90015aba:	47c8      	blx	r9
90015abc:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
90015ac0:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
90015ac4:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
90015ac8:	ee37 7a27 	vadd.f32	s14, s14, s15
90015acc:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
90015ad0:	68a1      	ldr	r1, [r4, #8]
90015ad2:	ee77 7aa6 	vadd.f32	s15, s15, s13
90015ad6:	ed94 6a08 	vldr	s12, [r4, #32]
90015ada:	edd4 6a07 	vldr	s13, [r4, #28]
90015ade:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90015ae2:	ee76 6a86 	vadd.f32	s13, s13, s12
90015ae6:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90015aea:	e9d4 2300 	ldrd	r2, r3, [r4]
90015aee:	edc4 6a07 	vstr	s13, [r4, #28]
90015af2:	441a      	add	r2, r3
90015af4:	6963      	ldr	r3, [r4, #20]
90015af6:	3301      	adds	r3, #1
90015af8:	6022      	str	r2, [r4, #0]
90015afa:	6163      	str	r3, [r4, #20]
90015afc:	69a3      	ldr	r3, [r4, #24]
90015afe:	3b01      	subs	r3, #1
90015b00:	61a3      	str	r3, [r4, #24]
90015b02:	6923      	ldr	r3, [r4, #16]
90015b04:	440b      	add	r3, r1
90015b06:	68e1      	ldr	r1, [r4, #12]
90015b08:	428b      	cmp	r3, r1
90015b0a:	6123      	str	r3, [r4, #16]
90015b0c:	db15      	blt.n	90015b3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
90015b0e:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
90015b12:	3201      	adds	r2, #1
90015b14:	1a5b      	subs	r3, r3, r1
90015b16:	ee76 6a26 	vadd.f32	s13, s12, s13
90015b1a:	6022      	str	r2, [r4, #0]
90015b1c:	6123      	str	r3, [r4, #16]
90015b1e:	edc4 6a07 	vstr	s13, [r4, #28]
90015b22:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
90015b26:	ee36 7a87 	vadd.f32	s14, s13, s14
90015b2a:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90015b2e:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
90015b32:	ee77 7a27 	vadd.f32	s15, s14, s15
90015b36:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90015b3a:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
90015b3e:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
90015b42:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
90015b46:	ee37 7a27 	vadd.f32	s14, s14, s15
90015b4a:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
90015b4e:	68a9      	ldr	r1, [r5, #8]
90015b50:	ee77 7aa6 	vadd.f32	s15, s15, s13
90015b54:	ed95 6a08 	vldr	s12, [r5, #32]
90015b58:	edd5 6a07 	vldr	s13, [r5, #28]
90015b5c:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90015b60:	ee76 6a86 	vadd.f32	s13, s13, s12
90015b64:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90015b68:	e9d5 2300 	ldrd	r2, r3, [r5]
90015b6c:	edc5 6a07 	vstr	s13, [r5, #28]
90015b70:	441a      	add	r2, r3
90015b72:	696b      	ldr	r3, [r5, #20]
90015b74:	3301      	adds	r3, #1
90015b76:	602a      	str	r2, [r5, #0]
90015b78:	616b      	str	r3, [r5, #20]
90015b7a:	69ab      	ldr	r3, [r5, #24]
90015b7c:	3b01      	subs	r3, #1
90015b7e:	61ab      	str	r3, [r5, #24]
90015b80:	692b      	ldr	r3, [r5, #16]
90015b82:	440b      	add	r3, r1
90015b84:	68e9      	ldr	r1, [r5, #12]
90015b86:	428b      	cmp	r3, r1
90015b88:	612b      	str	r3, [r5, #16]
90015b8a:	db15      	blt.n	90015bb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
90015b8c:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
90015b90:	3201      	adds	r2, #1
90015b92:	1a5b      	subs	r3, r3, r1
90015b94:	ee76 6a26 	vadd.f32	s13, s12, s13
90015b98:	602a      	str	r2, [r5, #0]
90015b9a:	612b      	str	r3, [r5, #16]
90015b9c:	edc5 6a07 	vstr	s13, [r5, #28]
90015ba0:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
90015ba4:	ee36 7a87 	vadd.f32	s14, s13, s14
90015ba8:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90015bac:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
90015bb0:	ee77 7a27 	vadd.f32	s15, s14, s15
90015bb4:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90015bb8:	3f01      	subs	r7, #1
90015bba:	e757      	b.n	90015a6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
90015bbc:	4299      	cmp	r1, r3
90015bbe:	dc13      	bgt.n	90015be8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
90015bc0:	429a      	cmp	r2, r3
90015bc2:	da14      	bge.n	90015bee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
90015bc4:	2502      	movs	r5, #2
90015bc6:	2703      	movs	r7, #3
90015bc8:	f04f 0800 	mov.w	r8, #0
90015bcc:	46a9      	mov	r9, r5
90015bce:	f04f 0a01 	mov.w	sl, #1
90015bd2:	e6ef      	b.n	900159b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90015bd4:	2501      	movs	r5, #1
90015bd6:	2700      	movs	r7, #0
90015bd8:	46a9      	mov	r9, r5
90015bda:	46b8      	mov	r8, r7
90015bdc:	f04f 0a02 	mov.w	sl, #2
90015be0:	e6e8      	b.n	900159b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90015be2:	2501      	movs	r5, #1
90015be4:	2702      	movs	r7, #2
90015be6:	e6e1      	b.n	900159ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
90015be8:	2500      	movs	r5, #0
90015bea:	2701      	movs	r7, #1
90015bec:	e7f4      	b.n	90015bd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
90015bee:	2702      	movs	r7, #2
90015bf0:	2503      	movs	r5, #3
90015bf2:	f04f 0900 	mov.w	r9, #0
90015bf6:	46b8      	mov	r8, r7
90015bf8:	e7e9      	b.n	90015bce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
90015bfa:	4613      	mov	r3, r2
90015bfc:	e728      	b.n	90015a50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
90015bfe:	bf00      	nop
90015c00:	2402185c 	.word	0x2402185c
90015c04:	fffd8f01 	.word	0xfffd8f01
90015c08:	00027100 	.word	0x00027100
90015c0c:	0004e1ff 	.word	0x0004e1ff
90015c10:	0004e1fe 	.word	0x0004e1fe
90015c14:	24021864 	.word	0x24021864
90015c18:	4613      	mov	r3, r2
90015c1a:	992b      	ldr	r1, [sp, #172]	@ 0xac
90015c1c:	469e      	mov	lr, r3
90015c1e:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
90015c20:	469c      	mov	ip, r3
90015c22:	9111      	str	r1, [sp, #68]	@ 0x44
90015c24:	f04f 0900 	mov.w	r9, #0
90015c28:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
90015c2c:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
90015c30:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
90015c34:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
90015c38:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
90015c3c:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
90015c40:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
90015c44:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
90015c48:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
90015c4c:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
90015c50:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
90015c54:	f1bc 0f00 	cmp.w	ip, #0
90015c58:	d147      	bne.n	90015cea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
90015c5a:	eb03 0c07 	add.w	ip, r3, r7
90015c5e:	1ad7      	subs	r7, r2, r3
90015c60:	f1b9 0f00 	cmp.w	r9, #0
90015c64:	d009      	beq.n	90015c7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
90015c66:	9029      	str	r0, [sp, #164]	@ 0xa4
90015c68:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
90015c6c:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
90015c70:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
90015c74:	912d      	str	r1, [sp, #180]	@ 0xb4
90015c76:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
90015c7a:	991b      	ldr	r1, [sp, #108]	@ 0x6c
90015c7c:	f04f 0800 	mov.w	r8, #0
90015c80:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
90015c84:	9111      	str	r1, [sp, #68]	@ 0x44
90015c86:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
90015c8a:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
90015c8e:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
90015c92:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
90015c96:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
90015c9a:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
90015c9e:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
90015ca2:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
90015ca6:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
90015caa:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
90015cae:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
90015cb2:	f1be 0f00 	cmp.w	lr, #0
90015cb6:	d031      	beq.n	90015d1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
90015cb8:	9e11      	ldr	r6, [sp, #68]	@ 0x44
90015cba:	4450      	add	r0, sl
90015cbc:	ee76 6aa4 	vadd.f32	s13, s13, s9
90015cc0:	4431      	add	r1, r6
90015cc2:	ee37 7a04 	vadd.f32	s14, s14, s8
90015cc6:	ee77 7aa3 	vadd.f32	s15, s15, s7
90015cca:	4549      	cmp	r1, r9
90015ccc:	db08      	blt.n	90015ce0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
90015cce:	ee77 7a85 	vadd.f32	s15, s15, s10
90015cd2:	3001      	adds	r0, #1
90015cd4:	ee76 6aa5 	vadd.f32	s13, s13, s11
90015cd8:	eba1 0109 	sub.w	r1, r1, r9
90015cdc:	ee37 7a06 	vadd.f32	s14, s14, s12
90015ce0:	f10e 3eff 	add.w	lr, lr, #4294967295
90015ce4:	f04f 0801 	mov.w	r8, #1
90015ce8:	e7e3      	b.n	90015cb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
90015cea:	9e11      	ldr	r6, [sp, #68]	@ 0x44
90015cec:	4450      	add	r0, sl
90015cee:	ee37 7a24 	vadd.f32	s14, s14, s9
90015cf2:	4431      	add	r1, r6
90015cf4:	ee77 7a84 	vadd.f32	s15, s15, s8
90015cf8:	ee76 6aa3 	vadd.f32	s13, s13, s7
90015cfc:	4541      	cmp	r1, r8
90015cfe:	db08      	blt.n	90015d12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
90015d00:	ee76 6a85 	vadd.f32	s13, s13, s10
90015d04:	3001      	adds	r0, #1
90015d06:	ee37 7a25 	vadd.f32	s14, s14, s11
90015d0a:	eba1 0108 	sub.w	r1, r1, r8
90015d0e:	ee77 7a86 	vadd.f32	s15, s15, s12
90015d12:	f10c 3cff 	add.w	ip, ip, #4294967295
90015d16:	f04f 0901 	mov.w	r9, #1
90015d1a:	e79b      	b.n	90015c54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
90015d1c:	449c      	add	ip, r3
90015d1e:	1aff      	subs	r7, r7, r3
90015d20:	f1b8 0f00 	cmp.w	r8, #0
90015d24:	d009      	beq.n	90015d3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
90015d26:	9019      	str	r0, [sp, #100]	@ 0x64
90015d28:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
90015d2c:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
90015d30:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
90015d34:	911d      	str	r1, [sp, #116]	@ 0x74
90015d36:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
90015d3a:	1ad2      	subs	r2, r2, r3
90015d3c:	e68b      	b.n	90015a56 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90015d3e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90015d40:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
90015d42:	2b00      	cmp	r3, #0
90015d44:	f000 80d1 	beq.w	90015eea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
90015d48:	ad19      	add	r5, sp, #100	@ 0x64
90015d4a:	ac39      	add	r4, sp, #228	@ 0xe4
90015d4c:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90015d4e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90015d52:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90015d56:	930c      	str	r3, [sp, #48]	@ 0x30
90015d58:	990c      	ldr	r1, [sp, #48]	@ 0x30
90015d5a:	6963      	ldr	r3, [r4, #20]
90015d5c:	440b      	add	r3, r1
90015d5e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90015d62:	4408      	add	r0, r1
90015d64:	b200      	sxth	r0, r0
90015d66:	4283      	cmp	r3, r0
90015d68:	900d      	str	r0, [sp, #52]	@ 0x34
90015d6a:	f280 80c1 	bge.w	90015ef0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
90015d6e:	428b      	cmp	r3, r1
90015d70:	da08      	bge.n	90015d84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90015d72:	2a00      	cmp	r2, #0
90015d74:	dd06      	ble.n	90015d84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90015d76:	1acb      	subs	r3, r1, r3
90015d78:	429a      	cmp	r2, r3
90015d7a:	f2c0 80bb 	blt.w	90015ef4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
90015d7e:	2b00      	cmp	r3, #0
90015d80:	f300 80b9 	bgt.w	90015ef6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
90015d84:	6967      	ldr	r7, [r4, #20]
90015d86:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
90015d8a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90015d8c:	443b      	add	r3, r7
90015d8e:	461f      	mov	r7, r3
90015d90:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90015d92:	1bdf      	subs	r7, r3, r7
90015d94:	4297      	cmp	r7, r2
90015d96:	bfa8      	it	ge
90015d98:	4617      	movge	r7, r2
90015d9a:	2f00      	cmp	r7, #0
90015d9c:	f340 813c 	ble.w	90016018 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
90015da0:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90015da2:	6829      	ldr	r1, [r5, #0]
90015da4:	f9b3 2000 	ldrsh.w	r2, [r3]
90015da8:	f9bb 3000 	ldrsh.w	r3, [fp]
90015dac:	4411      	add	r1, r2
90015dae:	6820      	ldr	r0, [r4, #0]
90015db0:	4299      	cmp	r1, r3
90015db2:	dd1a      	ble.n	90015dea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90015db4:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90015db8:	4402      	add	r2, r0
90015dba:	440b      	add	r3, r1
90015dbc:	b21b      	sxth	r3, r3
90015dbe:	429a      	cmp	r2, r3
90015dc0:	dc13      	bgt.n	90015dea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90015dc2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90015dc4:	a912      	add	r1, sp, #72	@ 0x48
90015dc6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90015dc8:	9809      	ldr	r0, [sp, #36]	@ 0x24
90015dca:	681b      	ldr	r3, [r3, #0]
90015dcc:	9206      	str	r2, [sp, #24]
90015dce:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90015dd0:	9500      	str	r5, [sp, #0]
90015dd2:	9205      	str	r2, [sp, #20]
90015dd4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90015dd6:	e9cd b203 	strd	fp, r2, [sp, #12]
90015dda:	9a64      	ldr	r2, [sp, #400]	@ 0x190
90015ddc:	e9cd 8201 	strd	r8, r2, [sp, #4]
90015de0:	aa49      	add	r2, sp, #292	@ 0x124
90015de2:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
90015de6:	4623      	mov	r3, r4
90015de8:	47c8      	blx	r9
90015dea:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
90015dee:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
90015df2:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
90015df6:	ee37 7a27 	vadd.f32	s14, s14, s15
90015dfa:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
90015dfe:	68a1      	ldr	r1, [r4, #8]
90015e00:	ee77 7aa6 	vadd.f32	s15, s15, s13
90015e04:	ed94 6a08 	vldr	s12, [r4, #32]
90015e08:	edd4 6a07 	vldr	s13, [r4, #28]
90015e0c:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90015e10:	ee76 6a86 	vadd.f32	s13, s13, s12
90015e14:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90015e18:	e9d4 2300 	ldrd	r2, r3, [r4]
90015e1c:	edc4 6a07 	vstr	s13, [r4, #28]
90015e20:	441a      	add	r2, r3
90015e22:	6963      	ldr	r3, [r4, #20]
90015e24:	3301      	adds	r3, #1
90015e26:	6022      	str	r2, [r4, #0]
90015e28:	6163      	str	r3, [r4, #20]
90015e2a:	69a3      	ldr	r3, [r4, #24]
90015e2c:	3b01      	subs	r3, #1
90015e2e:	61a3      	str	r3, [r4, #24]
90015e30:	6923      	ldr	r3, [r4, #16]
90015e32:	440b      	add	r3, r1
90015e34:	68e1      	ldr	r1, [r4, #12]
90015e36:	428b      	cmp	r3, r1
90015e38:	6123      	str	r3, [r4, #16]
90015e3a:	db15      	blt.n	90015e68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
90015e3c:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
90015e40:	3201      	adds	r2, #1
90015e42:	1a5b      	subs	r3, r3, r1
90015e44:	ee76 6a26 	vadd.f32	s13, s12, s13
90015e48:	6022      	str	r2, [r4, #0]
90015e4a:	6123      	str	r3, [r4, #16]
90015e4c:	edc4 6a07 	vstr	s13, [r4, #28]
90015e50:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
90015e54:	ee36 7a87 	vadd.f32	s14, s13, s14
90015e58:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90015e5c:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
90015e60:	ee77 7a27 	vadd.f32	s15, s14, s15
90015e64:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90015e68:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
90015e6c:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
90015e70:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
90015e74:	ee37 7a27 	vadd.f32	s14, s14, s15
90015e78:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
90015e7c:	68a9      	ldr	r1, [r5, #8]
90015e7e:	ee77 7aa6 	vadd.f32	s15, s15, s13
90015e82:	ed95 6a08 	vldr	s12, [r5, #32]
90015e86:	edd5 6a07 	vldr	s13, [r5, #28]
90015e8a:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90015e8e:	ee76 6a86 	vadd.f32	s13, s13, s12
90015e92:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90015e96:	e9d5 2300 	ldrd	r2, r3, [r5]
90015e9a:	edc5 6a07 	vstr	s13, [r5, #28]
90015e9e:	441a      	add	r2, r3
90015ea0:	696b      	ldr	r3, [r5, #20]
90015ea2:	3301      	adds	r3, #1
90015ea4:	602a      	str	r2, [r5, #0]
90015ea6:	616b      	str	r3, [r5, #20]
90015ea8:	69ab      	ldr	r3, [r5, #24]
90015eaa:	3b01      	subs	r3, #1
90015eac:	61ab      	str	r3, [r5, #24]
90015eae:	692b      	ldr	r3, [r5, #16]
90015eb0:	440b      	add	r3, r1
90015eb2:	68e9      	ldr	r1, [r5, #12]
90015eb4:	428b      	cmp	r3, r1
90015eb6:	612b      	str	r3, [r5, #16]
90015eb8:	db15      	blt.n	90015ee6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
90015eba:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
90015ebe:	3201      	adds	r2, #1
90015ec0:	1a5b      	subs	r3, r3, r1
90015ec2:	ee76 6a26 	vadd.f32	s13, s12, s13
90015ec6:	602a      	str	r2, [r5, #0]
90015ec8:	612b      	str	r3, [r5, #16]
90015eca:	edc5 6a07 	vstr	s13, [r5, #28]
90015ece:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
90015ed2:	ee36 7a87 	vadd.f32	s14, s13, s14
90015ed6:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90015eda:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
90015ede:	ee77 7a27 	vadd.f32	s15, s14, s15
90015ee2:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90015ee6:	3f01      	subs	r7, #1
90015ee8:	e757      	b.n	90015d9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
90015eea:	ad39      	add	r5, sp, #228	@ 0xe4
90015eec:	ac19      	add	r4, sp, #100	@ 0x64
90015eee:	e72d      	b.n	90015d4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
90015ef0:	4613      	mov	r3, r2
90015ef2:	e744      	b.n	90015d7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
90015ef4:	4613      	mov	r3, r2
90015ef6:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
90015ef8:	469e      	mov	lr, r3
90015efa:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
90015efe:	461f      	mov	r7, r3
90015f00:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
90015f04:	f04f 0900 	mov.w	r9, #0
90015f08:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
90015f0c:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
90015f10:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
90015f14:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
90015f18:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
90015f1c:	993d      	ldr	r1, [sp, #244]	@ 0xf4
90015f1e:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
90015f22:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
90015f26:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
90015f2a:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
90015f2e:	960e      	str	r6, [sp, #56]	@ 0x38
90015f30:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
90015f34:	2f00      	cmp	r7, #0
90015f36:	d146      	bne.n	90015fc6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
90015f38:	449c      	add	ip, r3
90015f3a:	1ad7      	subs	r7, r2, r3
90015f3c:	f1b9 0f00 	cmp.w	r9, #0
90015f40:	d009      	beq.n	90015f56 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
90015f42:	9039      	str	r0, [sp, #228]	@ 0xe4
90015f44:	913d      	str	r1, [sp, #244]	@ 0xf4
90015f46:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
90015f4a:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
90015f4e:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
90015f52:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
90015f56:	991b      	ldr	r1, [sp, #108]	@ 0x6c
90015f58:	f04f 0800 	mov.w	r8, #0
90015f5c:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
90015f60:	910e      	str	r1, [sp, #56]	@ 0x38
90015f62:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
90015f66:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
90015f6a:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
90015f6e:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
90015f72:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
90015f76:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
90015f7a:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
90015f7e:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
90015f82:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
90015f86:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
90015f8a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
90015f8e:	f1be 0f00 	cmp.w	lr, #0
90015f92:	d030      	beq.n	90015ff6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
90015f94:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
90015f96:	4450      	add	r0, sl
90015f98:	ee76 6aa4 	vadd.f32	s13, s13, s9
90015f9c:	4431      	add	r1, r6
90015f9e:	ee37 7a04 	vadd.f32	s14, s14, s8
90015fa2:	ee77 7aa3 	vadd.f32	s15, s15, s7
90015fa6:	4549      	cmp	r1, r9
90015fa8:	db08      	blt.n	90015fbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
90015faa:	ee77 7a85 	vadd.f32	s15, s15, s10
90015fae:	3001      	adds	r0, #1
90015fb0:	ee76 6aa5 	vadd.f32	s13, s13, s11
90015fb4:	eba1 0109 	sub.w	r1, r1, r9
90015fb8:	ee37 7a06 	vadd.f32	s14, s14, s12
90015fbc:	f10e 3eff 	add.w	lr, lr, #4294967295
90015fc0:	f04f 0801 	mov.w	r8, #1
90015fc4:	e7e3      	b.n	90015f8e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
90015fc6:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
90015fc8:	4450      	add	r0, sl
90015fca:	ee37 7a24 	vadd.f32	s14, s14, s9
90015fce:	4431      	add	r1, r6
90015fd0:	ee77 7a84 	vadd.f32	s15, s15, s8
90015fd4:	ee76 6aa3 	vadd.f32	s13, s13, s7
90015fd8:	4541      	cmp	r1, r8
90015fda:	db08      	blt.n	90015fee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
90015fdc:	ee76 6a85 	vadd.f32	s13, s13, s10
90015fe0:	3001      	adds	r0, #1
90015fe2:	ee37 7a25 	vadd.f32	s14, s14, s11
90015fe6:	eba1 0108 	sub.w	r1, r1, r8
90015fea:	ee77 7a86 	vadd.f32	s15, s15, s12
90015fee:	3f01      	subs	r7, #1
90015ff0:	f04f 0901 	mov.w	r9, #1
90015ff4:	e79e      	b.n	90015f34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
90015ff6:	449c      	add	ip, r3
90015ff8:	1aff      	subs	r7, r7, r3
90015ffa:	f1b8 0f00 	cmp.w	r8, #0
90015ffe:	d009      	beq.n	90016014 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
90016000:	9019      	str	r0, [sp, #100]	@ 0x64
90016002:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
90016006:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
9001600a:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
9001600e:	911d      	str	r1, [sp, #116]	@ 0x74
90016010:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
90016014:	1ad2      	subs	r2, r2, r3
90016016:	e6b5      	b.n	90015d84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90016018:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001601a:	681b      	ldr	r3, [r3, #0]
9001601c:	b923      	cbnz	r3, 90016028 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001601e:	4b04      	ldr	r3, [pc, #16]	@ (90016030 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
90016020:	6818      	ldr	r0, [r3, #0]
90016022:	6803      	ldr	r3, [r0, #0]
90016024:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90016026:	4798      	blx	r3
90016028:	b05b      	add	sp, #364	@ 0x16c
9001602a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001602e:	bf00      	nop
90016030:	24021864 	.word	0x24021864

90016034 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
90016034:	b570      	push	{r4, r5, r6, lr}
90016036:	4604      	mov	r4, r0
90016038:	2500      	movs	r5, #0
9001603a:	9805      	ldr	r0, [sp, #20]
9001603c:	f89d 601c 	ldrb.w	r6, [sp, #28]
90016040:	6061      	str	r1, [r4, #4]
90016042:	8263      	strh	r3, [r4, #18]
90016044:	f89d 1010 	ldrb.w	r1, [sp, #16]
90016048:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
9001604c:	8025      	strh	r5, [r4, #0]
9001604e:	7221      	strb	r1, [r4, #8]
90016050:	7266      	strb	r6, [r4, #9]
90016052:	60e0      	str	r0, [r4, #12]
90016054:	8222      	strh	r2, [r4, #16]
90016056:	82a3      	strh	r3, [r4, #20]
90016058:	82e5      	strh	r5, [r4, #22]
9001605a:	8325      	strh	r5, [r4, #24]
9001605c:	8365      	strh	r5, [r4, #26]
9001605e:	83a5      	strh	r5, [r4, #28]
90016060:	83e5      	strh	r5, [r4, #30]
90016062:	8425      	strh	r5, [r4, #32]
90016064:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
90016068:	b32e      	cbz	r6, 900160b6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
9001606a:	6803      	ldr	r3, [r0, #0]
9001606c:	695b      	ldr	r3, [r3, #20]
9001606e:	4798      	blx	r3
90016070:	4606      	mov	r6, r0
90016072:	b300      	cbz	r0, 900160b6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90016074:	68e0      	ldr	r0, [r4, #12]
90016076:	4631      	mov	r1, r6
90016078:	6803      	ldr	r3, [r0, #0]
9001607a:	68db      	ldr	r3, [r3, #12]
9001607c:	4798      	blx	r3
9001607e:	4605      	mov	r5, r0
90016080:	b1c8      	cbz	r0, 900160b6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90016082:	7b43      	ldrb	r3, [r0, #13]
90016084:	7a82      	ldrb	r2, [r0, #10]
90016086:	005b      	lsls	r3, r3, #1
90016088:	f403 7380 	and.w	r3, r3, #256	@ 0x100
9001608c:	4313      	orrs	r3, r2
9001608e:	8423      	strh	r3, [r4, #32]
90016090:	7a63      	ldrb	r3, [r4, #9]
90016092:	2b06      	cmp	r3, #6
90016094:	d10f      	bne.n	900160b6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90016096:	68e0      	ldr	r0, [r4, #12]
90016098:	462a      	mov	r2, r5
9001609a:	4631      	mov	r1, r6
9001609c:	6803      	ldr	r3, [r0, #0]
9001609e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900160a0:	4798      	blx	r3
900160a2:	7b6b      	ldrb	r3, [r5, #13]
900160a4:	005b      	lsls	r3, r3, #1
900160a6:	f403 7280 	and.w	r2, r3, #256	@ 0x100
900160aa:	7aab      	ldrb	r3, [r5, #10]
900160ac:	4313      	orrs	r3, r2
900160ae:	4418      	add	r0, r3
900160b0:	8c23      	ldrh	r3, [r4, #32]
900160b2:	4418      	add	r0, r3
900160b4:	8420      	strh	r0, [r4, #32]
900160b6:	4620      	mov	r0, r4
900160b8:	bd70      	pop	{r4, r5, r6, pc}

900160ba <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
900160ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900160be:	2400      	movs	r4, #0
900160c0:	b085      	sub	sp, #20
900160c2:	4681      	mov	r9, r0
900160c4:	4688      	mov	r8, r1
900160c6:	4692      	mov	sl, r2
900160c8:	469b      	mov	fp, r3
900160ca:	4627      	mov	r7, r4
900160cc:	4625      	mov	r5, r4
900160ce:	4626      	mov	r6, r4
900160d0:	4554      	cmp	r4, sl
900160d2:	da2a      	bge.n	9001612a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
900160d4:	2300      	movs	r3, #0
900160d6:	9303      	str	r3, [sp, #12]
900160d8:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
900160dc:	429d      	cmp	r5, r3
900160de:	d004      	beq.n	900160ea <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
900160e0:	f242 030b 	movw	r3, #8203	@ 0x200b
900160e4:	429d      	cmp	r5, r3
900160e6:	bf18      	it	ne
900160e8:	462f      	movne	r7, r5
900160ea:	ab03      	add	r3, sp, #12
900160ec:	4642      	mov	r2, r8
900160ee:	4659      	mov	r1, fp
900160f0:	4648      	mov	r0, r9
900160f2:	f003 fce1 	bl	90019ab8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900160f6:	4605      	mov	r5, r0
900160f8:	b1b8      	cbz	r0, 9001612a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
900160fa:	280a      	cmp	r0, #10
900160fc:	d015      	beq.n	9001612a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
900160fe:	9a03      	ldr	r2, [sp, #12]
90016100:	b18a      	cbz	r2, 90016126 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
90016102:	7b50      	ldrb	r0, [r2, #13]
90016104:	4639      	mov	r1, r7
90016106:	7a93      	ldrb	r3, [r2, #10]
90016108:	0040      	lsls	r0, r0, #1
9001610a:	8895      	ldrh	r5, [r2, #4]
9001610c:	f400 7080 	and.w	r0, r0, #256	@ 0x100
90016110:	4303      	orrs	r3, r0
90016112:	4640      	mov	r0, r8
90016114:	9301      	str	r3, [sp, #4]
90016116:	f8d8 3000 	ldr.w	r3, [r8]
9001611a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001611c:	4798      	blx	r3
9001611e:	9b01      	ldr	r3, [sp, #4]
90016120:	4418      	add	r0, r3
90016122:	4406      	add	r6, r0
90016124:	b2b6      	uxth	r6, r6
90016126:	3401      	adds	r4, #1
90016128:	e7d2      	b.n	900160d0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
9001612a:	4630      	mov	r0, r6
9001612c:	b005      	add	sp, #20
9001612e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90016132 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
90016132:	2a02      	cmp	r2, #2
90016134:	b530      	push	{r4, r5, lr}
90016136:	d011      	beq.n	9001615c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
90016138:	2a03      	cmp	r2, #3
9001613a:	d01c      	beq.n	90016176 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
9001613c:	2a01      	cmp	r2, #1
9001613e:	d10c      	bne.n	9001615a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
90016140:	888b      	ldrh	r3, [r1, #4]
90016142:	8801      	ldrh	r1, [r0, #0]
90016144:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
90016148:	1a5b      	subs	r3, r3, r1
9001614a:	8844      	ldrh	r4, [r0, #2]
9001614c:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90016150:	1a9b      	subs	r3, r3, r2
90016152:	8004      	strh	r4, [r0, #0]
90016154:	8081      	strh	r1, [r0, #4]
90016156:	8043      	strh	r3, [r0, #2]
90016158:	80c2      	strh	r2, [r0, #6]
9001615a:	bd30      	pop	{r4, r5, pc}
9001615c:	88cb      	ldrh	r3, [r1, #6]
9001615e:	8842      	ldrh	r2, [r0, #2]
90016160:	1a9b      	subs	r3, r3, r2
90016162:	88c2      	ldrh	r2, [r0, #6]
90016164:	1a9b      	subs	r3, r3, r2
90016166:	888a      	ldrh	r2, [r1, #4]
90016168:	8801      	ldrh	r1, [r0, #0]
9001616a:	8043      	strh	r3, [r0, #2]
9001616c:	1a52      	subs	r2, r2, r1
9001616e:	8881      	ldrh	r1, [r0, #4]
90016170:	1a52      	subs	r2, r2, r1
90016172:	8002      	strh	r2, [r0, #0]
90016174:	e7f1      	b.n	9001615a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
90016176:	88cb      	ldrh	r3, [r1, #6]
90016178:	8841      	ldrh	r1, [r0, #2]
9001617a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
9001617e:	1a5b      	subs	r3, r3, r1
90016180:	f9b0 5000 	ldrsh.w	r5, [r0]
90016184:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
90016188:	1a9b      	subs	r3, r3, r2
9001618a:	8045      	strh	r5, [r0, #2]
9001618c:	8082      	strh	r2, [r0, #4]
9001618e:	8003      	strh	r3, [r0, #0]
90016190:	80c4      	strh	r4, [r0, #6]
90016192:	e7e2      	b.n	9001615a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

90016194 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
90016194:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016198:	b09f      	sub	sp, #124	@ 0x7c
9001619a:	920f      	str	r2, [sp, #60]	@ 0x3c
9001619c:	9312      	str	r3, [sp, #72]	@ 0x48
9001619e:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
900161a0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900161a2:	8812      	ldrh	r2, [r2, #0]
900161a4:	889b      	ldrh	r3, [r3, #4]
900161a6:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
900161a8:	4413      	add	r3, r2
900161aa:	900e      	str	r0, [sp, #56]	@ 0x38
900161ac:	6828      	ldr	r0, [r5, #0]
900161ae:	b21b      	sxth	r3, r3
900161b0:	9117      	str	r1, [sp, #92]	@ 0x5c
900161b2:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
900161b6:	9311      	str	r3, [sp, #68]	@ 0x44
900161b8:	6803      	ldr	r3, [r0, #0]
900161ba:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
900161be:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
900161c0:	4798      	blx	r3
900161c2:	682b      	ldr	r3, [r5, #0]
900161c4:	9013      	str	r0, [sp, #76]	@ 0x4c
900161c6:	7b1a      	ldrb	r2, [r3, #12]
900161c8:	7adb      	ldrb	r3, [r3, #11]
900161ca:	9215      	str	r2, [sp, #84]	@ 0x54
900161cc:	9316      	str	r3, [sp, #88]	@ 0x58
900161ce:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
900161d2:	2c00      	cmp	r4, #0
900161d4:	d067      	beq.n	900162a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
900161d6:	7c2b      	ldrb	r3, [r5, #16]
900161d8:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
900161da:	2b06      	cmp	r3, #6
900161dc:	bf14      	ite	ne
900161de:	2301      	movne	r3, #1
900161e0:	2302      	moveq	r3, #2
900161e2:	4413      	add	r3, r2
900161e4:	f04f 0900 	mov.w	r9, #0
900161e8:	9310      	str	r3, [sp, #64]	@ 0x40
900161ea:	464c      	mov	r4, r9
900161ec:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
900161f0:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
900161f4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900161f6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
900161f8:	4293      	cmp	r3, r2
900161fa:	f280 808b 	bge.w	90016314 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
900161fe:	2300      	movs	r3, #0
90016200:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
90016204:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
90016208:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
9001620c:	429c      	cmp	r4, r3
9001620e:	d006      	beq.n	9001621e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
90016210:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90016212:	f242 020b 	movw	r2, #8203	@ 0x200b
90016216:	4294      	cmp	r4, r2
90016218:	bf18      	it	ne
9001621a:	4623      	movne	r3, r4
9001621c:	930c      	str	r3, [sp, #48]	@ 0x30
9001621e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90016220:	992d      	ldr	r1, [sp, #180]	@ 0xb4
90016222:	682a      	ldr	r2, [r5, #0]
90016224:	428b      	cmp	r3, r1
90016226:	db40      	blt.n	900162aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
90016228:	6813      	ldr	r3, [r2, #0]
9001622a:	4610      	mov	r0, r2
9001622c:	695b      	ldr	r3, [r3, #20]
9001622e:	4798      	blx	r3
90016230:	4604      	mov	r4, r0
90016232:	6828      	ldr	r0, [r5, #0]
90016234:	aa1d      	add	r2, sp, #116	@ 0x74
90016236:	4621      	mov	r1, r4
90016238:	6803      	ldr	r3, [r0, #0]
9001623a:	689f      	ldr	r7, [r3, #8]
9001623c:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
90016240:	47b8      	blx	r7
90016242:	901c      	str	r0, [sp, #112]	@ 0x70
90016244:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90016248:	429c      	cmp	r4, r3
9001624a:	f000 80eb 	beq.w	90016424 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001624e:	f242 030b 	movw	r3, #8203	@ 0x200b
90016252:	429c      	cmp	r4, r3
90016254:	f000 80e6 	beq.w	90016424 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90016258:	2c00      	cmp	r4, #0
9001625a:	f000 810d 	beq.w	90016478 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
9001625e:	2c0a      	cmp	r4, #10
90016260:	d05e      	beq.n	90016320 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
90016262:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
90016264:	b36a      	cbz	r2, 900162c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
90016266:	8894      	ldrh	r4, [r2, #4]
90016268:	f1bb 0f00 	cmp.w	fp, #0
9001626c:	d03a      	beq.n	900162e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
9001626e:	f892 900d 	ldrb.w	r9, [r2, #13]
90016272:	f1bb 0f01 	cmp.w	fp, #1
90016276:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001627a:	f409 7380 	and.w	r3, r9, #256	@ 0x100
9001627e:	f892 900a 	ldrb.w	r9, [r2, #10]
90016282:	ea49 0903 	orr.w	r9, r9, r3
90016286:	d133      	bne.n	900162f0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
90016288:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001628a:	eba6 0609 	sub.w	r6, r6, r9
9001628e:	2b00      	cmp	r3, #0
90016290:	d14d      	bne.n	9001632e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
90016292:	9a15      	ldr	r2, [sp, #84]	@ 0x54
90016294:	eb09 0306 	add.w	r3, r9, r6
90016298:	4413      	add	r3, r2
9001629a:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
9001629c:	f9b2 2000 	ldrsh.w	r2, [r2]
900162a0:	4293      	cmp	r3, r2
900162a2:	da4e      	bge.n	90016342 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
900162a4:	e036      	b.n	90016314 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
900162a6:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
900162a8:	e79c      	b.n	900161e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
900162aa:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
900162ae:	4659      	mov	r1, fp
900162b0:	982c      	ldr	r0, [sp, #176]	@ 0xb0
900162b2:	9301      	str	r3, [sp, #4]
900162b4:	ab1d      	add	r3, sp, #116	@ 0x74
900162b6:	9300      	str	r3, [sp, #0]
900162b8:	ab1c      	add	r3, sp, #112	@ 0x70
900162ba:	f003 fc46 	bl	90019b4a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
900162be:	4604      	mov	r4, r0
900162c0:	e7c0      	b.n	90016244 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
900162c2:	6828      	ldr	r0, [r5, #0]
900162c4:	6803      	ldr	r3, [r0, #0]
900162c6:	691b      	ldr	r3, [r3, #16]
900162c8:	4798      	blx	r3
900162ca:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
900162ce:	4298      	cmp	r0, r3
900162d0:	f000 80a8 	beq.w	90016424 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900162d4:	f242 030b 	movw	r3, #8203	@ 0x200b
900162d8:	4298      	cmp	r0, r3
900162da:	f000 80a3 	beq.w	90016424 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900162de:	f1bb 0f00 	cmp.w	fp, #0
900162e2:	d100      	bne.n	900162e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
900162e4:	444e      	add	r6, r9
900162e6:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
900162e8:	2a00      	cmp	r2, #0
900162ea:	d1c0      	bne.n	9001626e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
900162ec:	4691      	mov	r9, r2
900162ee:	e099      	b.n	90016424 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900162f0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900162f2:	2b00      	cmp	r3, #0
900162f4:	f000 80c2 	beq.w	9001647c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e8>
900162f8:	f1bb 0f00 	cmp.w	fp, #0
900162fc:	d117      	bne.n	9001632e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
900162fe:	6828      	ldr	r0, [r5, #0]
90016300:	990c      	ldr	r1, [sp, #48]	@ 0x30
90016302:	6803      	ldr	r3, [r0, #0]
90016304:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90016306:	4798      	blx	r3
90016308:	4406      	add	r6, r0
9001630a:	9b16      	ldr	r3, [sp, #88]	@ 0x58
9001630c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001630e:	1af3      	subs	r3, r6, r3
90016310:	4293      	cmp	r3, r2
90016312:	dd16      	ble.n	90016342 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
90016314:	2c00      	cmp	r4, #0
90016316:	f000 80af 	beq.w	90016478 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
9001631a:	2c0a      	cmp	r4, #10
9001631c:	f040 809d 	bne.w	9001645a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
90016320:	240a      	movs	r4, #10
90016322:	fab4 f084 	clz	r0, r4
90016326:	0940      	lsrs	r0, r0, #5
90016328:	b01f      	add	sp, #124	@ 0x7c
9001632a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001632e:	6828      	ldr	r0, [r5, #0]
90016330:	990c      	ldr	r1, [sp, #48]	@ 0x30
90016332:	6803      	ldr	r3, [r0, #0]
90016334:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90016336:	4798      	blx	r3
90016338:	f1bb 0f01 	cmp.w	fp, #1
9001633c:	eba6 0600 	sub.w	r6, r6, r0
90016340:	d0a7      	beq.n	90016292 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
90016342:	981c      	ldr	r0, [sp, #112]	@ 0x70
90016344:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90016346:	f990 1009 	ldrsb.w	r1, [r0, #9]
9001634a:	f9b3 8000 	ldrsh.w	r8, [r3]
9001634e:	7b43      	ldrb	r3, [r0, #13]
90016350:	4431      	add	r1, r6
90016352:	015b      	lsls	r3, r3, #5
90016354:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90016358:	7983      	ldrb	r3, [r0, #6]
9001635a:	4313      	orrs	r3, r2
9001635c:	440b      	add	r3, r1
9001635e:	4543      	cmp	r3, r8
90016360:	db60      	blt.n	90016424 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90016362:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90016364:	4299      	cmp	r1, r3
90016366:	da5d      	bge.n	90016424 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90016368:	6828      	ldr	r0, [r5, #0]
9001636a:	45b0      	cmp	r8, r6
9001636c:	6803      	ldr	r3, [r0, #0]
9001636e:	bfcc      	ite	gt
90016370:	eba8 0806 	subgt.w	r8, r8, r6
90016374:	f04f 0800 	movle.w	r8, #0
90016378:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001637a:	bfc8      	it	gt
9001637c:	fa1f f888 	uxthgt.w	r8, r8
90016380:	4798      	blx	r3
90016382:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
90016384:	7b53      	ldrb	r3, [r2, #13]
90016386:	00d9      	lsls	r1, r3, #3
90016388:	f401 7780 	and.w	r7, r1, #256	@ 0x100
9001638c:	7a11      	ldrb	r1, [r2, #8]
9001638e:	4339      	orrs	r1, r7
90016390:	065f      	lsls	r7, r3, #25
90016392:	9f12      	ldr	r7, [sp, #72]	@ 0x48
90016394:	bf48      	it	mi
90016396:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
9001639a:	4407      	add	r7, r0
9001639c:	bf48      	it	mi
9001639e:	b209      	sxthmi	r1, r1
900163a0:	1a7f      	subs	r7, r7, r1
900163a2:	9929      	ldr	r1, [sp, #164]	@ 0xa4
900163a4:	b2bf      	uxth	r7, r7
900163a6:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
900163aa:	fa0f fa87 	sxth.w	sl, r7
900163ae:	4551      	cmp	r1, sl
900163b0:	dd3c      	ble.n	9001642c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
900163b2:	011b      	lsls	r3, r3, #4
900163b4:	79d0      	ldrb	r0, [r2, #7]
900163b6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
900163ba:	4303      	orrs	r3, r0
900163bc:	449a      	add	sl, r3
900163be:	4551      	cmp	r1, sl
900163c0:	dc30      	bgt.n	90016424 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900163c2:	1bcf      	subs	r7, r1, r7
900163c4:	468a      	mov	sl, r1
900163c6:	b23f      	sxth	r7, r7
900163c8:	9219      	str	r2, [sp, #100]	@ 0x64
900163ca:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
900163cc:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
900163ce:	6828      	ldr	r0, [r5, #0]
900163d0:	2a00      	cmp	r2, #0
900163d2:	d12d      	bne.n	90016430 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
900163d4:	9318      	str	r3, [sp, #96]	@ 0x60
900163d6:	b2bf      	uxth	r7, r7
900163d8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900163da:	6819      	ldr	r1, [r3, #0]
900163dc:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
900163de:	6801      	ldr	r1, [r0, #0]
900163e0:	9314      	str	r3, [sp, #80]	@ 0x50
900163e2:	6c09      	ldr	r1, [r1, #64]	@ 0x40
900163e4:	4788      	blx	r1
900163e6:	79a9      	ldrb	r1, [r5, #6]
900163e8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900163ea:	910b      	str	r1, [sp, #44]	@ 0x2c
900163ec:	7ba9      	ldrb	r1, [r5, #14]
900163ee:	9a19      	ldr	r2, [sp, #100]	@ 0x64
900163f0:	910a      	str	r1, [sp, #40]	@ 0x28
900163f2:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
900163f6:	9109      	str	r1, [sp, #36]	@ 0x24
900163f8:	68a9      	ldr	r1, [r5, #8]
900163fa:	9306      	str	r3, [sp, #24]
900163fc:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900163fe:	9205      	str	r2, [sp, #20]
90016400:	9304      	str	r3, [sp, #16]
90016402:	f8cd a004 	str.w	sl, [sp, #4]
90016406:	e9cd 8702 	strd	r8, r7, [sp, #8]
9001640a:	44b0      	add	r8, r6
9001640c:	9f14      	ldr	r7, [sp, #80]	@ 0x50
9001640e:	fa0f f388 	sxth.w	r3, r8
90016412:	9300      	str	r3, [sp, #0]
90016414:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90016416:	e9cd 0107 	strd	r0, r1, [sp, #28]
9001641a:	9917      	ldr	r1, [sp, #92]	@ 0x5c
9001641c:	681a      	ldr	r2, [r3, #0]
9001641e:	980e      	ldr	r0, [sp, #56]	@ 0x38
90016420:	685b      	ldr	r3, [r3, #4]
90016422:	47b8      	blx	r7
90016424:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90016426:	3301      	adds	r3, #1
90016428:	930d      	str	r3, [sp, #52]	@ 0x34
9001642a:	e6e3      	b.n	900161f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
9001642c:	2700      	movs	r7, #0
9001642e:	e7cb      	b.n	900163c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
90016430:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90016432:	f8d2 c008 	ldr.w	ip, [r2, #8]
90016436:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90016438:	f8dc 1000 	ldr.w	r1, [ip]
9001643c:	e9cd 6204 	strd	r6, r2, [sp, #16]
90016440:	79aa      	ldrb	r2, [r5, #6]
90016442:	9203      	str	r2, [sp, #12]
90016444:	7baa      	ldrb	r2, [r5, #14]
90016446:	9202      	str	r2, [sp, #8]
90016448:	68aa      	ldr	r2, [r5, #8]
9001644a:	e9cd 0200 	strd	r0, r2, [sp]
9001644e:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90016450:	4660      	mov	r0, ip
90016452:	688f      	ldr	r7, [r1, #8]
90016454:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90016456:	47b8      	blx	r7
90016458:	e7e4      	b.n	90016424 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001645a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
9001645c:	3501      	adds	r5, #1
9001645e:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
90016460:	429d      	cmp	r5, r3
90016462:	f6bf af5e 	bge.w	90016322 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
90016466:	4659      	mov	r1, fp
90016468:	982c      	ldr	r0, [sp, #176]	@ 0xb0
9001646a:	f7ee fff1 	bl	90005450 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001646e:	4604      	mov	r4, r0
90016470:	b110      	cbz	r0, 90016478 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
90016472:	280a      	cmp	r0, #10
90016474:	d1f2      	bne.n	9001645c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c8>
90016476:	e753      	b.n	90016320 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
90016478:	2400      	movs	r4, #0
9001647a:	e752      	b.n	90016322 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
9001647c:	f1bb 0f00 	cmp.w	fp, #0
90016480:	f43f af43 	beq.w	9001630a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
90016484:	e75d      	b.n	90016342 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

90016486 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
90016486:	b530      	push	{r4, r5, lr}
90016488:	8ac4      	ldrh	r4, [r0, #22]
9001648a:	8b45      	ldrh	r5, [r0, #26]
9001648c:	8343      	strh	r3, [r0, #26]
9001648e:	442c      	add	r4, r5
90016490:	1ae4      	subs	r4, r4, r3
90016492:	8b83      	ldrh	r3, [r0, #28]
90016494:	82c4      	strh	r4, [r0, #22]
90016496:	8b04      	ldrh	r4, [r0, #24]
90016498:	4422      	add	r2, r4
9001649a:	440c      	add	r4, r1
9001649c:	1a59      	subs	r1, r3, r1
9001649e:	83c2      	strh	r2, [r0, #30]
900164a0:	8304      	strh	r4, [r0, #24]
900164a2:	8381      	strh	r1, [r0, #28]
900164a4:	bd30      	pop	{r4, r5, pc}

900164a6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
900164a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900164aa:	4604      	mov	r4, r0
900164ac:	8a47      	ldrh	r7, [r0, #18]
900164ae:	68c0      	ldr	r0, [r0, #12]
900164b0:	b085      	sub	sp, #20
900164b2:	6803      	ldr	r3, [r0, #0]
900164b4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900164b6:	4798      	blx	r3
900164b8:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
900164bc:	7a63      	ldrb	r3, [r4, #9]
900164be:	eb06 0640 	add.w	r6, r6, r0, lsl #1
900164c2:	3b01      	subs	r3, #1
900164c4:	42b7      	cmp	r7, r6
900164c6:	bfac      	ite	ge
900164c8:	f04f 0900 	movge.w	r9, #0
900164cc:	f04f 0901 	movlt.w	r9, #1
900164d0:	2b05      	cmp	r3, #5
900164d2:	d804      	bhi.n	900164de <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
900164d4:	e8df f003 	tbb	[pc, r3]
900164d8:	470f0854 	.word	0x470f0854
900164dc:	4c4c      	.short	0x4c4c
900164de:	2500      	movs	r5, #0
900164e0:	46a9      	mov	r9, r5
900164e2:	462e      	mov	r6, r5
900164e4:	462f      	mov	r7, r5
900164e6:	e00e      	b.n	90016506 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
900164e8:	42b7      	cmp	r7, r6
900164ea:	f04f 0500 	mov.w	r5, #0
900164ee:	bfb4      	ite	lt
900164f0:	2600      	movlt	r6, #0
900164f2:	2601      	movge	r6, #1
900164f4:	e7f6      	b.n	900164e4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
900164f6:	42b7      	cmp	r7, r6
900164f8:	464d      	mov	r5, r9
900164fa:	f04f 0900 	mov.w	r9, #0
900164fe:	bfb4      	ite	lt
90016500:	2600      	movlt	r6, #0
90016502:	2601      	movge	r6, #1
90016504:	464f      	mov	r7, r9
90016506:	f04f 0800 	mov.w	r8, #0
9001650a:	f8a4 8016 	strh.w	r8, [r4, #22]
9001650e:	f8a4 8018 	strh.w	r8, [r4, #24]
90016512:	f8cd 8004 	str.w	r8, [sp, #4]
90016516:	2300      	movs	r3, #0
90016518:	9303      	str	r3, [sp, #12]
9001651a:	8823      	ldrh	r3, [r4, #0]
9001651c:	2b20      	cmp	r3, #32
9001651e:	d033      	beq.n	90016588 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
90016520:	f242 010b 	movw	r1, #8203	@ 0x200b
90016524:	1a5a      	subs	r2, r3, r1
90016526:	f1d2 0a00 	rsbs	sl, r2, #0
9001652a:	eb4a 0a02 	adc.w	sl, sl, r2
9001652e:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
90016532:	4293      	cmp	r3, r2
90016534:	d008      	beq.n	90016548 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
90016536:	428b      	cmp	r3, r1
90016538:	9a01      	ldr	r2, [sp, #4]
9001653a:	bf0e      	itee	eq
9001653c:	f04f 0a01 	moveq.w	sl, #1
90016540:	461a      	movne	r2, r3
90016542:	f04f 0a00 	movne.w	sl, #0
90016546:	9201      	str	r2, [sp, #4]
90016548:	ab03      	add	r3, sp, #12
9001654a:	68e2      	ldr	r2, [r4, #12]
9001654c:	7a21      	ldrb	r1, [r4, #8]
9001654e:	6860      	ldr	r0, [r4, #4]
90016550:	f003 fab2 	bl	90019ab8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90016554:	8020      	strh	r0, [r4, #0]
90016556:	b9d8      	cbnz	r0, 90016590 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
90016558:	8ba2      	ldrh	r2, [r4, #28]
9001655a:	2300      	movs	r3, #0
9001655c:	4611      	mov	r1, r2
9001655e:	4620      	mov	r0, r4
90016560:	f7ff ff91 	bl	90016486 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90016564:	e06e      	b.n	90016644 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90016566:	2500      	movs	r5, #0
90016568:	2701      	movs	r7, #1
9001656a:	46a9      	mov	r9, r5
9001656c:	462e      	mov	r6, r5
9001656e:	e7ca      	b.n	90016506 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90016570:	42b7      	cmp	r7, r6
90016572:	f04f 0500 	mov.w	r5, #0
90016576:	bfb4      	ite	lt
90016578:	2700      	movlt	r7, #0
9001657a:	2701      	movge	r7, #1
9001657c:	462e      	mov	r6, r5
9001657e:	e7c2      	b.n	90016506 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90016580:	2500      	movs	r5, #0
90016582:	2601      	movs	r6, #1
90016584:	46a9      	mov	r9, r5
90016586:	e7ad      	b.n	900164e4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
90016588:	9301      	str	r3, [sp, #4]
9001658a:	f04f 0a01 	mov.w	sl, #1
9001658e:	e7db      	b.n	90016548 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
90016590:	8b63      	ldrh	r3, [r4, #26]
90016592:	280a      	cmp	r0, #10
90016594:	f103 0301 	add.w	r3, r3, #1
90016598:	8363      	strh	r3, [r4, #26]
9001659a:	d0dd      	beq.n	90016558 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
9001659c:	9a03      	ldr	r2, [sp, #12]
9001659e:	bb62      	cbnz	r2, 900165fa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
900165a0:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
900165a4:	4298      	cmp	r0, r3
900165a6:	d003      	beq.n	900165b0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
900165a8:	f242 030b 	movw	r3, #8203	@ 0x200b
900165ac:	4298      	cmp	r0, r3
900165ae:	d1b2      	bne.n	90016516 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900165b0:	8823      	ldrh	r3, [r4, #0]
900165b2:	8ba1      	ldrh	r1, [r4, #28]
900165b4:	2b20      	cmp	r3, #32
900165b6:	d003      	beq.n	900165c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
900165b8:	f242 000b 	movw	r0, #8203	@ 0x200b
900165bc:	4283      	cmp	r3, r0
900165be:	d131      	bne.n	90016624 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
900165c0:	f1ba 0f00 	cmp.w	sl, #0
900165c4:	bf0a      	itet	eq
900165c6:	4688      	moveq	r8, r1
900165c8:	4650      	movne	r0, sl
900165ca:	2001      	moveq	r0, #1
900165cc:	440a      	add	r2, r1
900165ce:	8b23      	ldrh	r3, [r4, #24]
900165d0:	f8b4 c010 	ldrh.w	ip, [r4, #16]
900165d4:	b292      	uxth	r2, r2
900165d6:	83a2      	strh	r2, [r4, #28]
900165d8:	4413      	add	r3, r2
900165da:	f1b9 0f00 	cmp.w	r9, #0
900165de:	d102      	bne.n	900165e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
900165e0:	2d00      	cmp	r5, #0
900165e2:	d042      	beq.n	9001666a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
900165e4:	b300      	cbz	r0, 90016628 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
900165e6:	8c21      	ldrh	r1, [r4, #32]
900165e8:	4419      	add	r1, r3
900165ea:	458c      	cmp	ip, r1
900165ec:	da37      	bge.n	9001665e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
900165ee:	8ae1      	ldrh	r1, [r4, #22]
900165f0:	2900      	cmp	r1, #0
900165f2:	d034      	beq.n	9001665e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
900165f4:	4563      	cmp	r3, ip
900165f6:	dd8e      	ble.n	90016516 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900165f8:	e01d      	b.n	90016636 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
900165fa:	8893      	ldrh	r3, [r2, #4]
900165fc:	9901      	ldr	r1, [sp, #4]
900165fe:	8023      	strh	r3, [r4, #0]
90016600:	f892 b00d 	ldrb.w	fp, [r2, #13]
90016604:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
90016608:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
9001660c:	f892 b00a 	ldrb.w	fp, [r2, #10]
90016610:	ea4b 0b00 	orr.w	fp, fp, r0
90016614:	68e0      	ldr	r0, [r4, #12]
90016616:	6803      	ldr	r3, [r0, #0]
90016618:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001661a:	4798      	blx	r3
9001661c:	eb0b 0200 	add.w	r2, fp, r0
90016620:	b292      	uxth	r2, r2
90016622:	e7c5      	b.n	900165b0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90016624:	2000      	movs	r0, #0
90016626:	e7d1      	b.n	900165cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
90016628:	4563      	cmp	r3, ip
9001662a:	f77f af74 	ble.w	90016516 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001662e:	8ae3      	ldrh	r3, [r4, #22]
90016630:	2b00      	cmp	r3, #0
90016632:	f43f af70 	beq.w	90016516 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90016636:	2301      	movs	r3, #1
90016638:	8c22      	ldrh	r2, [r4, #32]
9001663a:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
9001663e:	8be3      	ldrh	r3, [r4, #30]
90016640:	4413      	add	r3, r2
90016642:	83e3      	strh	r3, [r4, #30]
90016644:	68e0      	ldr	r0, [r4, #12]
90016646:	6803      	ldr	r3, [r0, #0]
90016648:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001664a:	4798      	blx	r3
9001664c:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
90016650:	4418      	add	r0, r3
90016652:	8a63      	ldrh	r3, [r4, #18]
90016654:	1a18      	subs	r0, r3, r0
90016656:	8260      	strh	r0, [r4, #18]
90016658:	b005      	add	sp, #20
9001665a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001665e:	2300      	movs	r3, #0
90016660:	4611      	mov	r1, r2
90016662:	4620      	mov	r0, r4
90016664:	f7ff ff0f 	bl	90016486 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90016668:	e755      	b.n	90016516 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001666a:	4563      	cmp	r3, ip
9001666c:	dd14      	ble.n	90016698 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
9001666e:	b117      	cbz	r7, 90016676 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
90016670:	2301      	movs	r3, #1
90016672:	460a      	mov	r2, r1
90016674:	e772      	b.n	9001655c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
90016676:	2e00      	cmp	r6, #0
90016678:	f43f af4d 	beq.w	90016516 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001667c:	2800      	cmp	r0, #0
9001667e:	f47f af4a 	bne.w	90016516 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90016682:	f1ba 0f00 	cmp.w	sl, #0
90016686:	d002      	beq.n	9001668e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
90016688:	2301      	movs	r3, #1
9001668a:	4642      	mov	r2, r8
9001668c:	e767      	b.n	9001655e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
9001668e:	8ae3      	ldrh	r3, [r4, #22]
90016690:	2b00      	cmp	r3, #0
90016692:	f43f af40 	beq.w	90016516 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90016696:	e7d5      	b.n	90016644 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90016698:	2800      	cmp	r0, #0
9001669a:	f47f af3c 	bne.w	90016516 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001669e:	f1ba 0f00 	cmp.w	sl, #0
900166a2:	f43f af38 	beq.w	90016516 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900166a6:	2301      	movs	r3, #1
900166a8:	4642      	mov	r2, r8
900166aa:	e7da      	b.n	90016662 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

900166ac <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
900166ac:	b5f0      	push	{r4, r5, r6, r7, lr}
900166ae:	4605      	mov	r5, r0
900166b0:	b08f      	sub	sp, #60	@ 0x3c
900166b2:	4617      	mov	r7, r2
900166b4:	461c      	mov	r4, r3
900166b6:	460e      	mov	r6, r1
900166b8:	b1d1      	cbz	r1, 900166f0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
900166ba:	681b      	ldr	r3, [r3, #0]
900166bc:	4620      	mov	r0, r4
900166be:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900166c0:	4798      	blx	r3
900166c2:	4240      	negs	r0, r0
900166c4:	9603      	str	r6, [sp, #12]
900166c6:	f64f 73ff 	movw	r3, #65535	@ 0xffff
900166ca:	b200      	sxth	r0, r0
900166cc:	9700      	str	r7, [sp, #0]
900166ce:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
900166d2:	4629      	mov	r1, r5
900166d4:	e9cd 4001 	strd	r4, r0, [sp, #4]
900166d8:	2401      	movs	r4, #1
900166da:	a805      	add	r0, sp, #20
900166dc:	f7ff fcaa 	bl	90016034 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
900166e0:	a805      	add	r0, sp, #20
900166e2:	f7ff fee0 	bl	900164a6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
900166e6:	f8bd 3014 	ldrh.w	r3, [sp, #20]
900166ea:	b163      	cbz	r3, 90016706 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
900166ec:	3401      	adds	r4, #1
900166ee:	e7f7      	b.n	900166e0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
900166f0:	2401      	movs	r4, #1
900166f2:	f003 faad 	bl	90019c50 <_ZN8touchgfx12TextProvider11getNextCharEv>
900166f6:	280a      	cmp	r0, #10
900166f8:	4628      	mov	r0, r5
900166fa:	bf08      	it	eq
900166fc:	3401      	addeq	r4, #1
900166fe:	f003 faa7 	bl	90019c50 <_ZN8touchgfx12TextProvider11getNextCharEv>
90016702:	2800      	cmp	r0, #0
90016704:	d1f7      	bne.n	900166f6 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
90016706:	b2a0      	uxth	r0, r4
90016708:	b00f      	add	sp, #60	@ 0x3c
9001670a:	bdf0      	pop	{r4, r5, r6, r7, pc}

9001670c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
9001670c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016710:	b0e3      	sub	sp, #396	@ 0x18c
90016712:	461c      	mov	r4, r3
90016714:	4683      	mov	fp, r0
90016716:	4688      	mov	r8, r1
90016718:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
9001671a:	2b00      	cmp	r3, #0
9001671c:	f000 8112 	beq.w	90016944 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90016720:	6823      	ldr	r3, [r4, #0]
90016722:	2b00      	cmp	r3, #0
90016724:	f000 810e 	beq.w	90016944 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90016728:	7ba3      	ldrb	r3, [r4, #14]
9001672a:	2b00      	cmp	r3, #0
9001672c:	f000 810a 	beq.w	90016944 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90016730:	ad0a      	add	r5, sp, #40	@ 0x28
90016732:	6810      	ldr	r0, [r2, #0]
90016734:	6851      	ldr	r1, [r2, #4]
90016736:	462b      	mov	r3, r5
90016738:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
9001673c:	c303      	stmia	r3!, {r0, r1}
9001673e:	2100      	movs	r1, #0
90016740:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90016744:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
90016748:	4628      	mov	r0, r5
9001674a:	910c      	str	r1, [sp, #48]	@ 0x30
9001674c:	a90c      	add	r1, sp, #48	@ 0x30
9001674e:	79a2      	ldrb	r2, [r4, #6]
90016750:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90016754:	f7ff fced 	bl	90016132 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
90016758:	a90c      	add	r1, sp, #48	@ 0x30
9001675a:	79a2      	ldrb	r2, [r4, #6]
9001675c:	4608      	mov	r0, r1
9001675e:	f7ff fce8 	bl	90016132 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
90016762:	a817      	add	r0, sp, #92	@ 0x5c
90016764:	f002 fe32 	bl	900193cc <_ZN8touchgfx12TextProviderC1Ev>
90016768:	6820      	ldr	r0, [r4, #0]
9001676a:	6803      	ldr	r3, [r0, #0]
9001676c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001676e:	4798      	blx	r3
90016770:	4606      	mov	r6, r0
90016772:	6820      	ldr	r0, [r4, #0]
90016774:	6803      	ldr	r3, [r0, #0]
90016776:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90016778:	4798      	blx	r3
9001677a:	4633      	mov	r3, r6
9001677c:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
9001677e:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
90016780:	9000      	str	r0, [sp, #0]
90016782:	a817      	add	r0, sp, #92	@ 0x5c
90016784:	f002 fe75 	bl	90019472 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90016788:	6820      	ldr	r0, [r4, #0]
9001678a:	f894 a004 	ldrb.w	sl, [r4, #4]
9001678e:	6803      	ldr	r3, [r0, #0]
90016790:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90016792:	4798      	blx	r3
90016794:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
90016798:	6823      	ldr	r3, [r4, #0]
9001679a:	4607      	mov	r7, r0
9001679c:	4406      	add	r6, r0
9001679e:	a830      	add	r0, sp, #192	@ 0xc0
900167a0:	f893 9009 	ldrb.w	r9, [r3, #9]
900167a4:	f002 fe12 	bl	900193cc <_ZN8touchgfx12TextProviderC1Ev>
900167a8:	7c23      	ldrb	r3, [r4, #16]
900167aa:	b17b      	cbz	r3, 900167cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
900167ac:	6820      	ldr	r0, [r4, #0]
900167ae:	6803      	ldr	r3, [r0, #0]
900167b0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
900167b2:	4798      	blx	r3
900167b4:	9009      	str	r0, [sp, #36]	@ 0x24
900167b6:	6820      	ldr	r0, [r4, #0]
900167b8:	6802      	ldr	r2, [r0, #0]
900167ba:	6d12      	ldr	r2, [r2, #80]	@ 0x50
900167bc:	4790      	blx	r2
900167be:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900167c0:	9000      	str	r0, [sp, #0]
900167c2:	a830      	add	r0, sp, #192	@ 0xc0
900167c4:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
900167c6:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
900167c8:	f002 fe53 	bl	90019472 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900167cc:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
900167d0:	a80e      	add	r0, sp, #56	@ 0x38
900167d2:	7be2      	ldrb	r2, [r4, #15]
900167d4:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
900167d8:	1a8a      	subs	r2, r1, r2
900167da:	7c21      	ldrb	r1, [r4, #16]
900167dc:	9103      	str	r1, [sp, #12]
900167de:	b292      	uxth	r2, r2
900167e0:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
900167e4:	9102      	str	r1, [sp, #8]
900167e6:	6821      	ldr	r1, [r4, #0]
900167e8:	9101      	str	r1, [sp, #4]
900167ea:	7961      	ldrb	r1, [r4, #5]
900167ec:	9100      	str	r1, [sp, #0]
900167ee:	a930      	add	r1, sp, #192	@ 0xc0
900167f0:	f7ff fc20 	bl	90016034 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
900167f4:	2e00      	cmp	r6, #0
900167f6:	dc5b      	bgt.n	900168b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
900167f8:	af17      	add	r7, sp, #92	@ 0x5c
900167fa:	f04f 0900 	mov.w	r9, #0
900167fe:	7c23      	ldrb	r3, [r4, #16]
90016800:	2b00      	cmp	r3, #0
90016802:	f000 80b1 	beq.w	90016968 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
90016806:	a80e      	add	r0, sp, #56	@ 0x38
90016808:	f7ff fe4d 	bl	900164a6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
9001680c:	f1ba 0f00 	cmp.w	sl, #0
90016810:	f000 80a5 	beq.w	9001695e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
90016814:	7c23      	ldrb	r3, [r4, #16]
90016816:	2264      	movs	r2, #100	@ 0x64
90016818:	4639      	mov	r1, r7
9001681a:	a849      	add	r0, sp, #292	@ 0x124
9001681c:	9309      	str	r3, [sp, #36]	@ 0x24
9001681e:	f014 f976 	bl	9002ab0e <memcpy>
90016822:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90016824:	2b00      	cmp	r3, #0
90016826:	f000 80a7 	beq.w	90016978 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
9001682a:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
9001682e:	7922      	ldrb	r2, [r4, #4]
90016830:	2a01      	cmp	r2, #1
90016832:	f040 808a 	bne.w	9001694a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
90016836:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
9001683a:	1ac0      	subs	r0, r0, r3
9001683c:	2302      	movs	r3, #2
9001683e:	fb90 f0f3 	sdiv	r0, r0, r3
90016842:	b200      	sxth	r0, r0
90016844:	7c23      	ldrb	r3, [r4, #16]
90016846:	2b00      	cmp	r3, #0
90016848:	f000 808b 	beq.w	90016962 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
9001684c:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
90016850:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
90016854:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90016858:	e9cd 2105 	strd	r2, r1, [sp, #20]
9001685c:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
90016860:	2100      	movs	r1, #0
90016862:	4410      	add	r0, r2
90016864:	4642      	mov	r2, r8
90016866:	b200      	sxth	r0, r0
90016868:	e9cd 9703 	strd	r9, r7, [sp, #12]
9001686c:	9000      	str	r0, [sp, #0]
9001686e:	4658      	mov	r0, fp
90016870:	e9cd 5401 	strd	r5, r4, [sp, #4]
90016874:	f7ff fc8e 	bl	90016194 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
90016878:	2800      	cmp	r0, #0
9001687a:	d163      	bne.n	90016944 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
9001687c:	b2b2      	uxth	r2, r6
9001687e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90016882:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
90016886:	4413      	add	r3, r2
90016888:	1a8a      	subs	r2, r1, r2
9001688a:	b21b      	sxth	r3, r3
9001688c:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
90016890:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
90016894:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90016898:	2a00      	cmp	r2, #0
9001689a:	d153      	bne.n	90016944 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
9001689c:	6822      	ldr	r2, [r4, #0]
9001689e:	8869      	ldrh	r1, [r5, #2]
900168a0:	7a12      	ldrb	r2, [r2, #8]
900168a2:	1a9b      	subs	r3, r3, r2
900168a4:	88ea      	ldrh	r2, [r5, #6]
900168a6:	440a      	add	r2, r1
900168a8:	b212      	sxth	r2, r2
900168aa:	4293      	cmp	r3, r2
900168ac:	dda7      	ble.n	900167fe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
900168ae:	e049      	b.n	90016944 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900168b0:	7c23      	ldrb	r3, [r4, #16]
900168b2:	444f      	add	r7, r9
900168b4:	b1c3      	cbz	r3, 900168e8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
900168b6:	f64f 79ff 	movw	r9, #65535	@ 0xffff
900168ba:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
900168be:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
900168c2:	443b      	add	r3, r7
900168c4:	4293      	cmp	r3, r2
900168c6:	da97      	bge.n	900167f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
900168c8:	a80e      	add	r0, sp, #56	@ 0x38
900168ca:	f7ff fdec 	bl	900164a6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
900168ce:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
900168d2:	3b01      	subs	r3, #1
900168d4:	b29b      	uxth	r3, r3
900168d6:	454b      	cmp	r3, r9
900168d8:	9309      	str	r3, [sp, #36]	@ 0x24
900168da:	d021      	beq.n	90016920 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
900168dc:	7961      	ldrb	r1, [r4, #5]
900168de:	a817      	add	r0, sp, #92	@ 0x5c
900168e0:	f7ee fdb6 	bl	90005450 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
900168e4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900168e6:	e7f4      	b.n	900168d2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
900168e8:	fa1f f986 	uxth.w	r9, r6
900168ec:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
900168f0:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
900168f4:	443b      	add	r3, r7
900168f6:	4293      	cmp	r3, r2
900168f8:	f6bf af7e 	bge.w	900167f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
900168fc:	a817      	add	r0, sp, #92	@ 0x5c
900168fe:	f003 f9a7 	bl	90019c50 <_ZN8touchgfx12TextProvider11getNextCharEv>
90016902:	b1f8      	cbz	r0, 90016944 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90016904:	280a      	cmp	r0, #10
90016906:	d1f1      	bne.n	900168ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90016908:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
9001690c:	444b      	add	r3, r9
9001690e:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90016912:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
90016916:	eba3 0309 	sub.w	r3, r3, r9
9001691a:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
9001691e:	e7e5      	b.n	900168ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90016920:	b2b3      	uxth	r3, r6
90016922:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
90016926:	441a      	add	r2, r3
90016928:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
9001692c:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
90016930:	1ad3      	subs	r3, r2, r3
90016932:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90016936:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
9001693a:	b11b      	cbz	r3, 90016944 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
9001693c:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
90016940:	2b00      	cmp	r3, #0
90016942:	d0ba      	beq.n	900168ba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
90016944:	b063      	add	sp, #396	@ 0x18c
90016946:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001694a:	2a02      	cmp	r2, #2
9001694c:	d105      	bne.n	9001695a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
9001694e:	7be2      	ldrb	r2, [r4, #15]
90016950:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
90016954:	1a80      	subs	r0, r0, r2
90016956:	1ac0      	subs	r0, r0, r3
90016958:	e773      	b.n	90016842 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
9001695a:	2000      	movs	r0, #0
9001695c:	e772      	b.n	90016844 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
9001695e:	7be0      	ldrb	r0, [r4, #15]
90016960:	e770      	b.n	90016844 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
90016962:	f647 72ff 	movw	r2, #32767	@ 0x7fff
90016966:	e773      	b.n	90016850 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
90016968:	f1ba 0f00 	cmp.w	sl, #0
9001696c:	d0f7      	beq.n	9001695e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
9001696e:	2264      	movs	r2, #100	@ 0x64
90016970:	4639      	mov	r1, r7
90016972:	a849      	add	r0, sp, #292	@ 0x124
90016974:	f014 f8cb 	bl	9002ab0e <memcpy>
90016978:	2300      	movs	r3, #0
9001697a:	f647 72ff 	movw	r2, #32767	@ 0x7fff
9001697e:	6821      	ldr	r1, [r4, #0]
90016980:	a849      	add	r0, sp, #292	@ 0x124
90016982:	f7ff fb9a 	bl	900160ba <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90016986:	b203      	sxth	r3, r0
90016988:	e751      	b.n	9001682e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

9001698a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
9001698a:	2b03      	cmp	r3, #3
9001698c:	d818      	bhi.n	900169c0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
9001698e:	e8df f003 	tbb	[pc, r3]
90016992:	0602      	.short	0x0602
90016994:	130d      	.short	0x130d
90016996:	f9b0 2000 	ldrsh.w	r2, [r0]
9001699a:	1850      	adds	r0, r2, r1
9001699c:	4770      	bx	lr
9001699e:	8803      	ldrh	r3, [r0, #0]
900169a0:	8880      	ldrh	r0, [r0, #4]
900169a2:	4418      	add	r0, r3
900169a4:	b200      	sxth	r0, r0
900169a6:	1a80      	subs	r0, r0, r2
900169a8:	3801      	subs	r0, #1
900169aa:	4770      	bx	lr
900169ac:	8803      	ldrh	r3, [r0, #0]
900169ae:	8880      	ldrh	r0, [r0, #4]
900169b0:	4418      	add	r0, r3
900169b2:	b200      	sxth	r0, r0
900169b4:	1a40      	subs	r0, r0, r1
900169b6:	e7f7      	b.n	900169a8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
900169b8:	f9b0 0000 	ldrsh.w	r0, [r0]
900169bc:	4410      	add	r0, r2
900169be:	4770      	bx	lr
900169c0:	2000      	movs	r0, #0
900169c2:	4770      	bx	lr

900169c4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
900169c4:	2b03      	cmp	r3, #3
900169c6:	d817      	bhi.n	900169f8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
900169c8:	e8df f003 	tbb	[pc, r3]
900169cc:	10090602 	.word	0x10090602
900169d0:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
900169d4:	1850      	adds	r0, r2, r1
900169d6:	4770      	bx	lr
900169d8:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
900169dc:	e7fa      	b.n	900169d4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
900169de:	8843      	ldrh	r3, [r0, #2]
900169e0:	88c0      	ldrh	r0, [r0, #6]
900169e2:	4418      	add	r0, r3
900169e4:	b200      	sxth	r0, r0
900169e6:	1a80      	subs	r0, r0, r2
900169e8:	3801      	subs	r0, #1
900169ea:	4770      	bx	lr
900169ec:	8843      	ldrh	r3, [r0, #2]
900169ee:	88c0      	ldrh	r0, [r0, #6]
900169f0:	4418      	add	r0, r3
900169f2:	b200      	sxth	r0, r0
900169f4:	1a40      	subs	r0, r0, r1
900169f6:	e7f7      	b.n	900169e8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
900169f8:	2000      	movs	r0, #0
900169fa:	4770      	bx	lr

900169fc <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
900169fc:	4b01      	ldr	r3, [pc, #4]	@ (90016a04 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
900169fe:	2200      	movs	r2, #0
90016a00:	601a      	str	r2, [r3, #0]
90016a02:	4770      	bx	lr
90016a04:	24021874 	.word	0x24021874

90016a08 <_ZN8touchgfx16TouchCalibration4clzuEm>:
90016a08:	4603      	mov	r3, r0
90016a0a:	b1c8      	cbz	r0, 90016a40 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
90016a0c:	0c02      	lsrs	r2, r0, #16
90016a0e:	0412      	lsls	r2, r2, #16
90016a10:	b9a2      	cbnz	r2, 90016a3c <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
90016a12:	0403      	lsls	r3, r0, #16
90016a14:	2010      	movs	r0, #16
90016a16:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
90016a1a:	bf04      	itt	eq
90016a1c:	021b      	lsleq	r3, r3, #8
90016a1e:	3008      	addeq	r0, #8
90016a20:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
90016a24:	bf04      	itt	eq
90016a26:	011b      	lsleq	r3, r3, #4
90016a28:	3004      	addeq	r0, #4
90016a2a:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
90016a2e:	bf04      	itt	eq
90016a30:	009b      	lsleq	r3, r3, #2
90016a32:	3002      	addeq	r0, #2
90016a34:	2b00      	cmp	r3, #0
90016a36:	db04      	blt.n	90016a42 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
90016a38:	3001      	adds	r0, #1
90016a3a:	4770      	bx	lr
90016a3c:	2000      	movs	r0, #0
90016a3e:	e7ea      	b.n	90016a16 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
90016a40:	2020      	movs	r0, #32
90016a42:	4770      	bx	lr

90016a44 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
90016a44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016a48:	b087      	sub	sp, #28
90016a4a:	460d      	mov	r5, r1
90016a4c:	4616      	mov	r6, r2
90016a4e:	4698      	mov	r8, r3
90016a50:	4601      	mov	r1, r0
90016a52:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
90016a56:	b120      	cbz	r0, 90016a62 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90016a58:	b11a      	cbz	r2, 90016a62 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90016a5a:	2d1f      	cmp	r5, #31
90016a5c:	d801      	bhi.n	90016a62 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90016a5e:	2b1f      	cmp	r3, #31
90016a60:	d904      	bls.n	90016a6c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
90016a62:	2000      	movs	r0, #0
90016a64:	6038      	str	r0, [r7, #0]
90016a66:	b007      	add	sp, #28
90016a68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016a6c:	b97d      	cbnz	r5, 90016a8e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
90016a6e:	b143      	cbz	r3, 90016a82 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
90016a70:	4602      	mov	r2, r0
90016a72:	462b      	mov	r3, r5
90016a74:	4641      	mov	r1, r8
90016a76:	4630      	mov	r0, r6
90016a78:	e9cd 4700 	strd	r4, r7, [sp]
90016a7c:	f7ff ffe2 	bl	90016a44 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90016a80:	e7f1      	b.n	90016a66 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90016a82:	f04f 33ff 	mov.w	r3, #4294967295
90016a86:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
90016a8a:	603b      	str	r3, [r7, #0]
90016a8c:	e7eb      	b.n	90016a66 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90016a8e:	fa32 fa05 	lsrs.w	sl, r2, r5
90016a92:	d106      	bne.n	90016aa2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
90016a94:	4346      	muls	r6, r0
90016a96:	fbb6 f0f4 	udiv	r0, r6, r4
90016a9a:	fb04 6610 	mls	r6, r4, r0, r6
90016a9e:	603e      	str	r6, [r7, #0]
90016aa0:	e7e1      	b.n	90016a66 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90016aa2:	2201      	movs	r2, #1
90016aa4:	fa00 fb05 	lsl.w	fp, r0, r5
90016aa8:	40aa      	lsls	r2, r5
90016aaa:	fbbb f9f4 	udiv	r9, fp, r4
90016aae:	3a01      	subs	r2, #1
90016ab0:	fb0a f309 	mul.w	r3, sl, r9
90016ab4:	fb04 b919 	mls	r9, r4, r9, fp
90016ab8:	4016      	ands	r6, r2
90016aba:	9303      	str	r3, [sp, #12]
90016abc:	4630      	mov	r0, r6
90016abe:	f7ff ffa3 	bl	90016a08 <_ZN8touchgfx16TouchCalibration4clzuEm>
90016ac2:	462b      	mov	r3, r5
90016ac4:	460a      	mov	r2, r1
90016ac6:	4601      	mov	r1, r0
90016ac8:	4630      	mov	r0, r6
90016aca:	e9cd 4700 	strd	r4, r7, [sp]
90016ace:	f7ff ffb9 	bl	90016a44 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90016ad2:	4606      	mov	r6, r0
90016ad4:	4648      	mov	r0, r9
90016ad6:	eb05 0108 	add.w	r1, r5, r8
90016ada:	f7ff ff95 	bl	90016a08 <_ZN8touchgfx16TouchCalibration4clzuEm>
90016ade:	ab05      	add	r3, sp, #20
90016ae0:	464a      	mov	r2, r9
90016ae2:	e9cd 4300 	strd	r4, r3, [sp]
90016ae6:	4603      	mov	r3, r0
90016ae8:	4650      	mov	r0, sl
90016aea:	f7ff ffab 	bl	90016a44 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90016aee:	6839      	ldr	r1, [r7, #0]
90016af0:	9a05      	ldr	r2, [sp, #20]
90016af2:	9b03      	ldr	r3, [sp, #12]
90016af4:	4411      	add	r1, r2
90016af6:	fbb1 f2f4 	udiv	r2, r1, r4
90016afa:	18d3      	adds	r3, r2, r3
90016afc:	fb04 1412 	mls	r4, r4, r2, r1
90016b00:	441e      	add	r6, r3
90016b02:	603c      	str	r4, [r7, #0]
90016b04:	4430      	add	r0, r6
90016b06:	e7ae      	b.n	90016a66 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

90016b08 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
90016b08:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90016b0c:	b085      	sub	sp, #20
90016b0e:	f1b0 0900 	subs.w	r9, r0, #0
90016b12:	461d      	mov	r5, r3
90016b14:	4617      	mov	r7, r2
90016b16:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90016b18:	bfbb      	ittet	lt
90016b1a:	f1c9 0900 	rsblt	r9, r9, #0
90016b1e:	f04f 36ff 	movlt.w	r6, #4294967295
90016b22:	2601      	movge	r6, #1
90016b24:	6823      	ldrlt	r3, [r4, #0]
90016b26:	bfbc      	itt	lt
90016b28:	425b      	neglt	r3, r3
90016b2a:	6023      	strlt	r3, [r4, #0]
90016b2c:	2a00      	cmp	r2, #0
90016b2e:	da04      	bge.n	90016b3a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
90016b30:	6823      	ldr	r3, [r4, #0]
90016b32:	4257      	negs	r7, r2
90016b34:	4276      	negs	r6, r6
90016b36:	425b      	negs	r3, r3
90016b38:	6023      	str	r3, [r4, #0]
90016b3a:	2d00      	cmp	r5, #0
90016b3c:	4638      	mov	r0, r7
90016b3e:	bfba      	itte	lt
90016b40:	426d      	neglt	r5, r5
90016b42:	f04f 38ff 	movlt.w	r8, #4294967295
90016b46:	f04f 0801 	movge.w	r8, #1
90016b4a:	f7ff ff5d 	bl	90016a08 <_ZN8touchgfx16TouchCalibration4clzuEm>
90016b4e:	ab03      	add	r3, sp, #12
90016b50:	463a      	mov	r2, r7
90016b52:	e9cd 5300 	strd	r5, r3, [sp]
90016b56:	4603      	mov	r3, r0
90016b58:	4648      	mov	r0, r9
90016b5a:	f7ff ff73 	bl	90016a44 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90016b5e:	6823      	ldr	r3, [r4, #0]
90016b60:	9a03      	ldr	r2, [sp, #12]
90016b62:	4546      	cmp	r6, r8
90016b64:	441a      	add	r2, r3
90016b66:	fb92 f3f5 	sdiv	r3, r2, r5
90016b6a:	4418      	add	r0, r3
90016b6c:	fb05 2313 	mls	r3, r5, r3, r2
90016b70:	bf18      	it	ne
90016b72:	4240      	negne	r0, r0
90016b74:	1c72      	adds	r2, r6, #1
90016b76:	6023      	str	r3, [r4, #0]
90016b78:	d105      	bne.n	90016b86 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
90016b7a:	2b00      	cmp	r3, #0
90016b7c:	f1c3 0200 	rsb	r2, r3, #0
90016b80:	db0b      	blt.n	90016b9a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
90016b82:	6022      	str	r2, [r4, #0]
90016b84:	e006      	b.n	90016b94 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90016b86:	2e01      	cmp	r6, #1
90016b88:	d104      	bne.n	90016b94 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90016b8a:	2b00      	cmp	r3, #0
90016b8c:	da02      	bge.n	90016b94 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90016b8e:	442b      	add	r3, r5
90016b90:	3801      	subs	r0, #1
90016b92:	6023      	str	r3, [r4, #0]
90016b94:	b005      	add	sp, #20
90016b96:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90016b9a:	3801      	subs	r0, #1
90016b9c:	1b52      	subs	r2, r2, r5
90016b9e:	e7f0      	b.n	90016b82 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

90016ba0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
90016ba0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90016ba4:	4c1c      	ldr	r4, [pc, #112]	@ (90016c18 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
90016ba6:	4605      	mov	r5, r0
90016ba8:	6807      	ldr	r7, [r0, #0]
90016baa:	69a3      	ldr	r3, [r4, #24]
90016bac:	b92b      	cbnz	r3, 90016bba <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
90016bae:	6840      	ldr	r0, [r0, #4]
90016bb0:	e9c5 7000 	strd	r7, r0, [r5]
90016bb4:	b004      	add	sp, #16
90016bb6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90016bba:	f04f 0802 	mov.w	r8, #2
90016bbe:	68a2      	ldr	r2, [r4, #8]
90016bc0:	ae04      	add	r6, sp, #16
90016bc2:	6820      	ldr	r0, [r4, #0]
90016bc4:	fb93 f1f8 	sdiv	r1, r3, r8
90016bc8:	440a      	add	r2, r1
90016bca:	69e1      	ldr	r1, [r4, #28]
90016bcc:	f846 2d04 	str.w	r2, [r6, #-4]!
90016bd0:	463a      	mov	r2, r7
90016bd2:	9600      	str	r6, [sp, #0]
90016bd4:	f7ff ff98 	bl	90016b08 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90016bd8:	69a3      	ldr	r3, [r4, #24]
90016bda:	4607      	mov	r7, r0
90016bdc:	686a      	ldr	r2, [r5, #4]
90016bde:	6a21      	ldr	r1, [r4, #32]
90016be0:	9600      	str	r6, [sp, #0]
90016be2:	6860      	ldr	r0, [r4, #4]
90016be4:	f7ff ff90 	bl	90016b08 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90016be8:	69a3      	ldr	r3, [r4, #24]
90016bea:	6962      	ldr	r2, [r4, #20]
90016bec:	4407      	add	r7, r0
90016bee:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90016bf0:	9600      	str	r6, [sp, #0]
90016bf2:	68e0      	ldr	r0, [r4, #12]
90016bf4:	fb93 f8f8 	sdiv	r8, r3, r8
90016bf8:	4442      	add	r2, r8
90016bfa:	9203      	str	r2, [sp, #12]
90016bfc:	682a      	ldr	r2, [r5, #0]
90016bfe:	f7ff ff83 	bl	90016b08 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90016c02:	4680      	mov	r8, r0
90016c04:	9600      	str	r6, [sp, #0]
90016c06:	69a3      	ldr	r3, [r4, #24]
90016c08:	686a      	ldr	r2, [r5, #4]
90016c0a:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
90016c0c:	6920      	ldr	r0, [r4, #16]
90016c0e:	f7ff ff7b 	bl	90016b08 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90016c12:	4440      	add	r0, r8
90016c14:	e7cc      	b.n	90016bb0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
90016c16:	bf00      	nop
90016c18:	24021878 	.word	0x24021878

90016c1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
90016c1c:	4b07      	ldr	r3, [pc, #28]	@ (90016c3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
90016c1e:	781b      	ldrb	r3, [r3, #0]
90016c20:	2b01      	cmp	r3, #1
90016c22:	d109      	bne.n	90016c38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
90016c24:	f9b1 3000 	ldrsh.w	r3, [r1]
90016c28:	f9b0 2000 	ldrsh.w	r2, [r0]
90016c2c:	8003      	strh	r3, [r0, #0]
90016c2e:	4b04      	ldr	r3, [pc, #16]	@ (90016c40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
90016c30:	881b      	ldrh	r3, [r3, #0]
90016c32:	3b01      	subs	r3, #1
90016c34:	1a9b      	subs	r3, r3, r2
90016c36:	800b      	strh	r3, [r1, #0]
90016c38:	4770      	bx	lr
90016c3a:	bf00      	nop
90016c3c:	2402185c 	.word	0x2402185c
90016c40:	24021858 	.word	0x24021858

90016c44 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
90016c44:	4b07      	ldr	r3, [pc, #28]	@ (90016c64 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
90016c46:	b510      	push	{r4, lr}
90016c48:	781b      	ldrb	r3, [r3, #0]
90016c4a:	2b01      	cmp	r3, #1
90016c4c:	d108      	bne.n	90016c60 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
90016c4e:	4b06      	ldr	r3, [pc, #24]	@ (90016c68 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
90016c50:	880c      	ldrh	r4, [r1, #0]
90016c52:	881b      	ldrh	r3, [r3, #0]
90016c54:	f9b0 2000 	ldrsh.w	r2, [r0]
90016c58:	3b01      	subs	r3, #1
90016c5a:	1b1b      	subs	r3, r3, r4
90016c5c:	8003      	strh	r3, [r0, #0]
90016c5e:	800a      	strh	r2, [r1, #0]
90016c60:	bd10      	pop	{r4, pc}
90016c62:	bf00      	nop
90016c64:	2402185c 	.word	0x2402185c
90016c68:	24021858 	.word	0x24021858

90016c6c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
90016c6c:	4b0a      	ldr	r3, [pc, #40]	@ (90016c98 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
90016c6e:	b510      	push	{r4, lr}
90016c70:	781b      	ldrb	r3, [r3, #0]
90016c72:	2b01      	cmp	r3, #1
90016c74:	d10e      	bne.n	90016c94 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
90016c76:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90016c7a:	8843      	ldrh	r3, [r0, #2]
90016c7c:	f9b0 4000 	ldrsh.w	r4, [r0]
90016c80:	18ca      	adds	r2, r1, r3
90016c82:	4b06      	ldr	r3, [pc, #24]	@ (90016c9c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
90016c84:	8044      	strh	r4, [r0, #2]
90016c86:	881b      	ldrh	r3, [r3, #0]
90016c88:	1a9b      	subs	r3, r3, r2
90016c8a:	8003      	strh	r3, [r0, #0]
90016c8c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90016c90:	8081      	strh	r1, [r0, #4]
90016c92:	80c3      	strh	r3, [r0, #6]
90016c94:	bd10      	pop	{r4, pc}
90016c96:	bf00      	nop
90016c98:	2402185c 	.word	0x2402185c
90016c9c:	24021858 	.word	0x24021858

90016ca0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
90016ca0:	4b08      	ldr	r3, [pc, #32]	@ (90016cc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
90016ca2:	781b      	ldrb	r3, [r3, #0]
90016ca4:	2b01      	cmp	r3, #1
90016ca6:	d10c      	bne.n	90016cc2 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
90016ca8:	8803      	ldrh	r3, [r0, #0]
90016caa:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
90016cae:	8842      	ldrh	r2, [r0, #2]
90016cb0:	8002      	strh	r2, [r0, #0]
90016cb2:	185a      	adds	r2, r3, r1
90016cb4:	4b04      	ldr	r3, [pc, #16]	@ (90016cc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
90016cb6:	881b      	ldrh	r3, [r3, #0]
90016cb8:	1a9b      	subs	r3, r3, r2
90016cba:	8043      	strh	r3, [r0, #2]
90016cbc:	88c3      	ldrh	r3, [r0, #6]
90016cbe:	80c1      	strh	r1, [r0, #6]
90016cc0:	8083      	strh	r3, [r0, #4]
90016cc2:	4770      	bx	lr
90016cc4:	2402185c 	.word	0x2402185c
90016cc8:	24021858 	.word	0x24021858

90016ccc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
90016ccc:	4b07      	ldr	r3, [pc, #28]	@ (90016cec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
90016cce:	b510      	push	{r4, lr}
90016cd0:	781b      	ldrb	r3, [r3, #0]
90016cd2:	2b01      	cmp	r3, #1
90016cd4:	d108      	bne.n	90016ce8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
90016cd6:	f9b1 3000 	ldrsh.w	r3, [r1]
90016cda:	f9b0 4000 	ldrsh.w	r4, [r0]
90016cde:	8003      	strh	r3, [r0, #0]
90016ce0:	8893      	ldrh	r3, [r2, #4]
90016ce2:	3b01      	subs	r3, #1
90016ce4:	1b1b      	subs	r3, r3, r4
90016ce6:	800b      	strh	r3, [r1, #0]
90016ce8:	bd10      	pop	{r4, pc}
90016cea:	bf00      	nop
90016cec:	2402185c 	.word	0x2402185c

90016cf0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
90016cf0:	4b0b      	ldr	r3, [pc, #44]	@ (90016d20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
90016cf2:	781b      	ldrb	r3, [r3, #0]
90016cf4:	2b01      	cmp	r3, #1
90016cf6:	d111      	bne.n	90016d1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
90016cf8:	680b      	ldr	r3, [r1, #0]
90016cfa:	ed90 7a00 	vldr	s14, [r0]
90016cfe:	6003      	str	r3, [r0, #0]
90016d00:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
90016d04:	eddf 6a07 	vldr	s13, [pc, #28]	@ 90016d24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
90016d08:	ee07 3a90 	vmov	s15, r3
90016d0c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90016d10:	ee77 7ae6 	vsub.f32	s15, s15, s13
90016d14:	ee77 7ac7 	vsub.f32	s15, s15, s14
90016d18:	edc1 7a00 	vstr	s15, [r1]
90016d1c:	4770      	bx	lr
90016d1e:	bf00      	nop
90016d20:	2402185c 	.word	0x2402185c
90016d24:	38d1b717 	.word	0x38d1b717

90016d28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
90016d28:	4b0a      	ldr	r3, [pc, #40]	@ (90016d54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
90016d2a:	460a      	mov	r2, r1
90016d2c:	b510      	push	{r4, lr}
90016d2e:	781b      	ldrb	r3, [r3, #0]
90016d30:	2b01      	cmp	r3, #1
90016d32:	d10d      	bne.n	90016d50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
90016d34:	8881      	ldrh	r1, [r0, #4]
90016d36:	8803      	ldrh	r3, [r0, #0]
90016d38:	440b      	add	r3, r1
90016d3a:	4601      	mov	r1, r0
90016d3c:	3b01      	subs	r3, #1
90016d3e:	f821 3b02 	strh.w	r3, [r1], #2
90016d42:	f7ff ffc3 	bl	90016ccc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
90016d46:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90016d4a:	88c2      	ldrh	r2, [r0, #6]
90016d4c:	80c3      	strh	r3, [r0, #6]
90016d4e:	8082      	strh	r2, [r0, #4]
90016d50:	bd10      	pop	{r4, pc}
90016d52:	bf00      	nop
90016d54:	2402185c 	.word	0x2402185c

90016d58 <_ZN8touchgfx11Application19changeToStartScreenEv>:
90016d58:	4770      	bx	lr
	...

90016d5c <_ZN8touchgfx11Application13requestRedrawEv>:
90016d5c:	4b06      	ldr	r3, [pc, #24]	@ (90016d78 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
90016d5e:	2100      	movs	r1, #0
90016d60:	f9b3 2000 	ldrsh.w	r2, [r3]
90016d64:	4b05      	ldr	r3, [pc, #20]	@ (90016d7c <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
90016d66:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
90016d6a:	f9b3 3000 	ldrsh.w	r3, [r3]
90016d6e:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
90016d72:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
90016d76:	4770      	bx	lr
90016d78:	24021858 	.word	0x24021858
90016d7c:	2402185a 	.word	0x2402185a

90016d80 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
90016d80:	4b03      	ldr	r3, [pc, #12]	@ (90016d90 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
90016d82:	6818      	ldr	r0, [r3, #0]
90016d84:	b110      	cbz	r0, 90016d8c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
90016d86:	6803      	ldr	r3, [r0, #0]
90016d88:	699b      	ldr	r3, [r3, #24]
90016d8a:	4718      	bx	r3
90016d8c:	4770      	bx	lr
90016d8e:	bf00      	nop
90016d90:	240218a8 	.word	0x240218a8

90016d94 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
90016d94:	4770      	bx	lr
	...

90016d98 <_ZN8touchgfx11Application4drawEv>:
90016d98:	4b09      	ldr	r3, [pc, #36]	@ (90016dc0 <_ZN8touchgfx11Application4drawEv+0x28>)
90016d9a:	b507      	push	{r0, r1, r2, lr}
90016d9c:	f9b3 2000 	ldrsh.w	r2, [r3]
90016da0:	2100      	movs	r1, #0
90016da2:	4b08      	ldr	r3, [pc, #32]	@ (90016dc4 <_ZN8touchgfx11Application4drawEv+0x2c>)
90016da4:	9100      	str	r1, [sp, #0]
90016da6:	4669      	mov	r1, sp
90016da8:	f9b3 3000 	ldrsh.w	r3, [r3]
90016dac:	f8ad 2004 	strh.w	r2, [sp, #4]
90016db0:	f8ad 3006 	strh.w	r3, [sp, #6]
90016db4:	6803      	ldr	r3, [r0, #0]
90016db6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90016db8:	4798      	blx	r3
90016dba:	b003      	add	sp, #12
90016dbc:	f85d fb04 	ldr.w	pc, [sp], #4
90016dc0:	24021858 	.word	0x24021858
90016dc4:	2402185a 	.word	0x2402185a

90016dc8 <_ZN8touchgfx11Application10invalidateEv>:
90016dc8:	4b09      	ldr	r3, [pc, #36]	@ (90016df0 <_ZN8touchgfx11Application10invalidateEv+0x28>)
90016dca:	b082      	sub	sp, #8
90016dcc:	2100      	movs	r1, #0
90016dce:	f9b3 2000 	ldrsh.w	r2, [r3]
90016dd2:	4b08      	ldr	r3, [pc, #32]	@ (90016df4 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
90016dd4:	f8ad 2004 	strh.w	r2, [sp, #4]
90016dd8:	aa02      	add	r2, sp, #8
90016dda:	f9b3 3000 	ldrsh.w	r3, [r3]
90016dde:	9100      	str	r1, [sp, #0]
90016de0:	f8ad 3006 	strh.w	r3, [sp, #6]
90016de4:	6803      	ldr	r3, [r0, #0]
90016de6:	e912 0006 	ldmdb	r2, {r1, r2}
90016dea:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90016dec:	b002      	add	sp, #8
90016dee:	4718      	bx	r3
90016df0:	24021858 	.word	0x24021858
90016df4:	2402185a 	.word	0x2402185a

90016df8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
90016df8:	4b03      	ldr	r3, [pc, #12]	@ (90016e08 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
90016dfa:	6818      	ldr	r0, [r3, #0]
90016dfc:	b110      	cbz	r0, 90016e04 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
90016dfe:	6803      	ldr	r3, [r0, #0]
90016e00:	69db      	ldr	r3, [r3, #28]
90016e02:	4718      	bx	r3
90016e04:	4770      	bx	lr
90016e06:	bf00      	nop
90016e08:	240218a8 	.word	0x240218a8

90016e0c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
90016e0c:	4b03      	ldr	r3, [pc, #12]	@ (90016e1c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
90016e0e:	6818      	ldr	r0, [r3, #0]
90016e10:	b110      	cbz	r0, 90016e18 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
90016e12:	6803      	ldr	r3, [r0, #0]
90016e14:	6a1b      	ldr	r3, [r3, #32]
90016e16:	4718      	bx	r3
90016e18:	4770      	bx	lr
90016e1a:	bf00      	nop
90016e1c:	240218a8 	.word	0x240218a8

90016e20 <_ZN8touchgfx11Application16clearCachedAreasEv>:
90016e20:	2300      	movs	r3, #0
90016e22:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
90016e26:	4770      	bx	lr

90016e28 <_ZN8touchgfx11Application14handleKeyEventEh>:
90016e28:	4b03      	ldr	r3, [pc, #12]	@ (90016e38 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
90016e2a:	6818      	ldr	r0, [r3, #0]
90016e2c:	b110      	cbz	r0, 90016e34 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
90016e2e:	6803      	ldr	r3, [r0, #0]
90016e30:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90016e32:	4718      	bx	r3
90016e34:	4770      	bx	lr
90016e36:	bf00      	nop
90016e38:	240218a8 	.word	0x240218a8

90016e3c <_ZN8touchgfx11ApplicationD1Ev>:
90016e3c:	4770      	bx	lr

90016e3e <_ZN8touchgfx11ApplicationD0Ev>:
90016e3e:	b510      	push	{r4, lr}
90016e40:	4604      	mov	r4, r0
90016e42:	f44f 719e 	mov.w	r1, #316	@ 0x13c
90016e46:	f012 ff11 	bl	90029c6c <_ZdlPvj>
90016e4a:	4620      	mov	r0, r4
90016e4c:	bd10      	pop	{r4, pc}

90016e4e <_ZNK8touchgfx4Rect9intersectERKS0_>:
90016e4e:	b510      	push	{r4, lr}
90016e50:	f9b1 4000 	ldrsh.w	r4, [r1]
90016e54:	888a      	ldrh	r2, [r1, #4]
90016e56:	f9b0 3000 	ldrsh.w	r3, [r0]
90016e5a:	4422      	add	r2, r4
90016e5c:	b212      	sxth	r2, r2
90016e5e:	4293      	cmp	r3, r2
90016e60:	da15      	bge.n	90016e8e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90016e62:	8882      	ldrh	r2, [r0, #4]
90016e64:	4413      	add	r3, r2
90016e66:	b21b      	sxth	r3, r3
90016e68:	429c      	cmp	r4, r3
90016e6a:	da10      	bge.n	90016e8e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90016e6c:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90016e70:	88c9      	ldrh	r1, [r1, #6]
90016e72:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90016e76:	4419      	add	r1, r3
90016e78:	b209      	sxth	r1, r1
90016e7a:	428a      	cmp	r2, r1
90016e7c:	da07      	bge.n	90016e8e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90016e7e:	88c0      	ldrh	r0, [r0, #6]
90016e80:	4410      	add	r0, r2
90016e82:	b200      	sxth	r0, r0
90016e84:	4283      	cmp	r3, r0
90016e86:	bfac      	ite	ge
90016e88:	2000      	movge	r0, #0
90016e8a:	2001      	movlt	r0, #1
90016e8c:	bd10      	pop	{r4, pc}
90016e8e:	2000      	movs	r0, #0
90016e90:	e7fc      	b.n	90016e8c <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

90016e92 <_ZN8touchgfx4Rect10restrictToEss>:
90016e92:	f9b0 3000 	ldrsh.w	r3, [r0]
90016e96:	2b00      	cmp	r3, #0
90016e98:	b510      	push	{r4, lr}
90016e9a:	da04      	bge.n	90016ea6 <_ZN8touchgfx4Rect10restrictToEss+0x14>
90016e9c:	8884      	ldrh	r4, [r0, #4]
90016e9e:	4423      	add	r3, r4
90016ea0:	8083      	strh	r3, [r0, #4]
90016ea2:	2300      	movs	r3, #0
90016ea4:	8003      	strh	r3, [r0, #0]
90016ea6:	f9b0 4000 	ldrsh.w	r4, [r0]
90016eaa:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90016eae:	1b09      	subs	r1, r1, r4
90016eb0:	428b      	cmp	r3, r1
90016eb2:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90016eb6:	bfc8      	it	gt
90016eb8:	8081      	strhgt	r1, [r0, #4]
90016eba:	2b00      	cmp	r3, #0
90016ebc:	da04      	bge.n	90016ec8 <_ZN8touchgfx4Rect10restrictToEss+0x36>
90016ebe:	88c1      	ldrh	r1, [r0, #6]
90016ec0:	440b      	add	r3, r1
90016ec2:	80c3      	strh	r3, [r0, #6]
90016ec4:	2300      	movs	r3, #0
90016ec6:	8043      	strh	r3, [r0, #2]
90016ec8:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90016ecc:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
90016ed0:	1a52      	subs	r2, r2, r1
90016ed2:	4293      	cmp	r3, r2
90016ed4:	bfc8      	it	gt
90016ed6:	80c2      	strhgt	r2, [r0, #6]
90016ed8:	bd10      	pop	{r4, pc}
	...

90016edc <_ZN8touchgfx11Application4drawERNS_4RectE>:
90016edc:	4b10      	ldr	r3, [pc, #64]	@ (90016f20 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
90016ede:	b510      	push	{r4, lr}
90016ee0:	460c      	mov	r4, r1
90016ee2:	f9b3 2000 	ldrsh.w	r2, [r3]
90016ee6:	4b0f      	ldr	r3, [pc, #60]	@ (90016f24 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
90016ee8:	4620      	mov	r0, r4
90016eea:	f9b3 1000 	ldrsh.w	r1, [r3]
90016eee:	f7ff ffd0 	bl	90016e92 <_ZN8touchgfx4Rect10restrictToEss>
90016ef2:	4b0d      	ldr	r3, [pc, #52]	@ (90016f28 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
90016ef4:	6818      	ldr	r0, [r3, #0]
90016ef6:	b190      	cbz	r0, 90016f1e <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
90016ef8:	6803      	ldr	r3, [r0, #0]
90016efa:	4621      	mov	r1, r4
90016efc:	689b      	ldr	r3, [r3, #8]
90016efe:	4798      	blx	r3
90016f00:	4b0a      	ldr	r3, [pc, #40]	@ (90016f2c <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
90016f02:	6818      	ldr	r0, [r3, #0]
90016f04:	b118      	cbz	r0, 90016f0e <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
90016f06:	6803      	ldr	r3, [r0, #0]
90016f08:	4621      	mov	r1, r4
90016f0a:	689b      	ldr	r3, [r3, #8]
90016f0c:	4798      	blx	r3
90016f0e:	4b08      	ldr	r3, [pc, #32]	@ (90016f30 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
90016f10:	4621      	mov	r1, r4
90016f12:	6818      	ldr	r0, [r3, #0]
90016f14:	6803      	ldr	r3, [r0, #0]
90016f16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90016f1a:	69db      	ldr	r3, [r3, #28]
90016f1c:	4718      	bx	r3
90016f1e:	bd10      	pop	{r4, pc}
90016f20:	2402185a 	.word	0x2402185a
90016f24:	24021858 	.word	0x24021858
90016f28:	240218a8 	.word	0x240218a8
90016f2c:	240218a4 	.word	0x240218a4
90016f30:	24021864 	.word	0x24021864

90016f34 <_ZNK8touchgfx4Rect8includesERKS0_>:
90016f34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90016f36:	4606      	mov	r6, r0
90016f38:	4608      	mov	r0, r1
90016f3a:	460f      	mov	r7, r1
90016f3c:	f7fa f9dd 	bl	900112fa <_ZNK8touchgfx4Rect7isEmptyEv>
90016f40:	b9e8      	cbnz	r0, 90016f7e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90016f42:	f9b7 5000 	ldrsh.w	r5, [r7]
90016f46:	f9b6 4000 	ldrsh.w	r4, [r6]
90016f4a:	42a5      	cmp	r5, r4
90016f4c:	db17      	blt.n	90016f7e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90016f4e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
90016f52:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
90016f56:	429a      	cmp	r2, r3
90016f58:	db11      	blt.n	90016f7e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90016f5a:	88b9      	ldrh	r1, [r7, #4]
90016f5c:	440d      	add	r5, r1
90016f5e:	88b1      	ldrh	r1, [r6, #4]
90016f60:	440c      	add	r4, r1
90016f62:	b22d      	sxth	r5, r5
90016f64:	b224      	sxth	r4, r4
90016f66:	42a5      	cmp	r5, r4
90016f68:	dc09      	bgt.n	90016f7e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90016f6a:	88f8      	ldrh	r0, [r7, #6]
90016f6c:	4410      	add	r0, r2
90016f6e:	88f2      	ldrh	r2, [r6, #6]
90016f70:	4413      	add	r3, r2
90016f72:	b200      	sxth	r0, r0
90016f74:	b21b      	sxth	r3, r3
90016f76:	4298      	cmp	r0, r3
90016f78:	bfcc      	ite	gt
90016f7a:	2000      	movgt	r0, #0
90016f7c:	2001      	movle	r0, #1
90016f7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90016f80 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
90016f80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90016f82:	4604      	mov	r4, r0
90016f84:	4608      	mov	r0, r1
90016f86:	460d      	mov	r5, r1
90016f88:	f7fa f9b7 	bl	900112fa <_ZNK8touchgfx4Rect7isEmptyEv>
90016f8c:	b978      	cbnz	r0, 90016fae <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
90016f8e:	4620      	mov	r0, r4
90016f90:	f7fa f9b3 	bl	900112fa <_ZNK8touchgfx4Rect7isEmptyEv>
90016f94:	f9b5 6000 	ldrsh.w	r6, [r5]
90016f98:	b150      	cbz	r0, 90016fb0 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
90016f9a:	8026      	strh	r6, [r4, #0]
90016f9c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90016fa0:	8063      	strh	r3, [r4, #2]
90016fa2:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
90016fa6:	80a3      	strh	r3, [r4, #4]
90016fa8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90016fac:	80e3      	strh	r3, [r4, #6]
90016fae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90016fb0:	f9b4 1000 	ldrsh.w	r1, [r4]
90016fb4:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90016fb8:	42b1      	cmp	r1, r6
90016fba:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
90016fbe:	f8b5 c004 	ldrh.w	ip, [r5, #4]
90016fc2:	460f      	mov	r7, r1
90016fc4:	88ed      	ldrh	r5, [r5, #6]
90016fc6:	bfa8      	it	ge
90016fc8:	4637      	movge	r7, r6
90016fca:	4293      	cmp	r3, r2
90016fcc:	4618      	mov	r0, r3
90016fce:	4466      	add	r6, ip
90016fd0:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90016fd4:	bfa8      	it	ge
90016fd6:	4610      	movge	r0, r2
90016fd8:	442a      	add	r2, r5
90016fda:	88e5      	ldrh	r5, [r4, #6]
90016fdc:	4461      	add	r1, ip
90016fde:	b236      	sxth	r6, r6
90016fe0:	8027      	strh	r7, [r4, #0]
90016fe2:	442b      	add	r3, r5
90016fe4:	b209      	sxth	r1, r1
90016fe6:	b212      	sxth	r2, r2
90016fe8:	8060      	strh	r0, [r4, #2]
90016fea:	b21b      	sxth	r3, r3
90016fec:	428e      	cmp	r6, r1
90016fee:	bfac      	ite	ge
90016ff0:	ebc7 0106 	rsbge	r1, r7, r6
90016ff4:	ebc7 0101 	rsblt	r1, r7, r1
90016ff8:	429a      	cmp	r2, r3
90016ffa:	bfac      	ite	ge
90016ffc:	ebc0 0202 	rsbge	r2, r0, r2
90017000:	ebc0 0203 	rsblt	r2, r0, r3
90017004:	80a1      	strh	r1, [r4, #4]
90017006:	80e2      	strh	r2, [r4, #6]
90017008:	e7d1      	b.n	90016fae <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

9001700c <_ZN8touchgfx11Application11getInstanceEv>:
9001700c:	4b01      	ldr	r3, [pc, #4]	@ (90017014 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
9001700e:	6818      	ldr	r0, [r3, #0]
90017010:	4770      	bx	lr
90017012:	bf00      	nop
90017014:	240218b8 	.word	0x240218b8

90017018 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
90017018:	2300      	movs	r3, #0
9001701a:	b510      	push	{r4, lr}
9001701c:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
90017020:	4604      	mov	r4, r0
90017022:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
90017026:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
9001702a:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
9001702e:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
90017032:	429a      	cmp	r2, r3
90017034:	d90e      	bls.n	90017054 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
90017036:	18e2      	adds	r2, r4, r3
90017038:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
9001703c:	b122      	cbz	r2, 90017048 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
9001703e:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
90017042:	6803      	ldr	r3, [r0, #0]
90017044:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90017046:	4798      	blx	r3
90017048:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
9001704c:	3301      	adds	r3, #1
9001704e:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
90017052:	e7ea      	b.n	9001702a <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
90017054:	bd10      	pop	{r4, pc}

90017056 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
90017056:	2300      	movs	r3, #0
90017058:	f100 0284 	add.w	r2, r0, #132	@ 0x84
9001705c:	30a4      	adds	r0, #164	@ 0xa4
9001705e:	f820 3c24 	strh.w	r3, [r0, #-36]
90017062:	f802 3b01 	strb.w	r3, [r2], #1
90017066:	4282      	cmp	r2, r0
90017068:	d1fb      	bne.n	90017062 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
9001706a:	4770      	bx	lr

9001706c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
9001706c:	b570      	push	{r4, r5, r6, lr}
9001706e:	4c0b      	ldr	r4, [pc, #44]	@ (9001709c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
90017070:	4605      	mov	r5, r0
90017072:	460e      	mov	r6, r1
90017074:	6820      	ldr	r0, [r4, #0]
90017076:	b110      	cbz	r0, 9001707e <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
90017078:	6803      	ldr	r3, [r0, #0]
9001707a:	695b      	ldr	r3, [r3, #20]
9001707c:	4798      	blx	r3
9001707e:	1d28      	adds	r0, r5, #4
90017080:	f7ff ffe9 	bl	90017056 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
90017084:	6026      	str	r6, [r4, #0]
90017086:	6833      	ldr	r3, [r6, #0]
90017088:	4630      	mov	r0, r6
9001708a:	68db      	ldr	r3, [r3, #12]
9001708c:	4798      	blx	r3
9001708e:	682b      	ldr	r3, [r5, #0]
90017090:	4628      	mov	r0, r5
90017092:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90017094:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90017098:	4718      	bx	r3
9001709a:	bf00      	nop
9001709c:	240218a8 	.word	0x240218a8

900170a0 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
900170a0:	2300      	movs	r3, #0
900170a2:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
900170a6:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
900170aa:	461a      	mov	r2, r3
900170ac:	b5f0      	push	{r4, r5, r6, r7, lr}
900170ae:	461c      	mov	r4, r3
900170b0:	461d      	mov	r5, r3
900170b2:	459c      	cmp	ip, r3
900170b4:	dd1a      	ble.n	900170ec <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
900170b6:	18c6      	adds	r6, r0, r3
900170b8:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
900170bc:	b16e      	cbz	r6, 900170da <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
900170be:	429a      	cmp	r2, r3
900170c0:	d008      	beq.n	900170d4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
900170c2:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
900170c6:	fa1f fe82 	uxth.w	lr, r2
900170ca:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
900170ce:	1887      	adds	r7, r0, r2
900170d0:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
900170d4:	3201      	adds	r2, #1
900170d6:	3301      	adds	r3, #1
900170d8:	e7eb      	b.n	900170b2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
900170da:	4299      	cmp	r1, r3
900170dc:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
900170e0:	bfa8      	it	ge
900170e2:	3501      	addge	r5, #1
900170e4:	429e      	cmp	r6, r3
900170e6:	bfc8      	it	gt
900170e8:	3401      	addgt	r4, #1
900170ea:	e7f4      	b.n	900170d6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
900170ec:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
900170f0:	1b49      	subs	r1, r1, r5
900170f2:	1b1b      	subs	r3, r3, r4
900170f4:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
900170f8:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
900170fc:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
90017100:	4293      	cmp	r3, r2
90017102:	dd03      	ble.n	9001710c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
90017104:	3b01      	subs	r3, #1
90017106:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
9001710a:	e7f7      	b.n	900170fc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
9001710c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

90017110 <_ZN8touchgfx11Application15handleTickEventEv>:
90017110:	b570      	push	{r4, r5, r6, lr}
90017112:	4d16      	ldr	r5, [pc, #88]	@ (9001716c <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
90017114:	4604      	mov	r4, r0
90017116:	6828      	ldr	r0, [r5, #0]
90017118:	b140      	cbz	r0, 9001712c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
9001711a:	7a03      	ldrb	r3, [r0, #8]
9001711c:	b933      	cbnz	r3, 9001712c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
9001711e:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
90017122:	6803      	ldr	r3, [r0, #0]
90017124:	689b      	ldr	r3, [r3, #8]
90017126:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001712a:	4718      	bx	r3
9001712c:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
90017130:	4e0f      	ldr	r6, [pc, #60]	@ (90017170 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
90017132:	b973      	cbnz	r3, 90017152 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90017134:	b168      	cbz	r0, 90017152 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90017136:	7a03      	ldrb	r3, [r0, #8]
90017138:	b15b      	cbz	r3, 90017152 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
9001713a:	6830      	ldr	r0, [r6, #0]
9001713c:	b110      	cbz	r0, 90017144 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
9001713e:	6803      	ldr	r3, [r0, #0]
90017140:	691b      	ldr	r3, [r3, #16]
90017142:	4798      	blx	r3
90017144:	6828      	ldr	r0, [r5, #0]
90017146:	6803      	ldr	r3, [r0, #0]
90017148:	68db      	ldr	r3, [r3, #12]
9001714a:	4798      	blx	r3
9001714c:	2301      	movs	r3, #1
9001714e:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
90017152:	3404      	adds	r4, #4
90017154:	4620      	mov	r0, r4
90017156:	f7ff ff5f 	bl	90017018 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
9001715a:	4620      	mov	r0, r4
9001715c:	f7ff ffa0 	bl	900170a0 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
90017160:	6830      	ldr	r0, [r6, #0]
90017162:	b110      	cbz	r0, 9001716a <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
90017164:	6803      	ldr	r3, [r0, #0]
90017166:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90017168:	e7dd      	b.n	90017126 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
9001716a:	bd70      	pop	{r4, r5, r6, pc}
9001716c:	240218ac 	.word	0x240218ac
90017170:	240218a8 	.word	0x240218a8

90017174 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
90017174:	4603      	mov	r3, r0
90017176:	f100 0140 	add.w	r1, r0, #64	@ 0x40
9001717a:	2200      	movs	r2, #0
9001717c:	801a      	strh	r2, [r3, #0]
9001717e:	3308      	adds	r3, #8
90017180:	f823 2c06 	strh.w	r2, [r3, #-6]
90017184:	f823 2c04 	strh.w	r2, [r3, #-4]
90017188:	f823 2c02 	strh.w	r2, [r3, #-2]
9001718c:	428b      	cmp	r3, r1
9001718e:	d1f5      	bne.n	9001717c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
90017190:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
90017194:	4770      	bx	lr
	...

90017198 <_ZN8touchgfx11ApplicationC1Ev>:
90017198:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001719a:	4b1d      	ldr	r3, [pc, #116]	@ (90017210 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
9001719c:	4606      	mov	r6, r0
9001719e:	4604      	mov	r4, r0
900171a0:	2500      	movs	r5, #0
900171a2:	f846 3b04 	str.w	r3, [r6], #4
900171a6:	22a8      	movs	r2, #168	@ 0xa8
900171a8:	2100      	movs	r1, #0
900171aa:	4630      	mov	r0, r6
900171ac:	f013 fb70 	bl	9002a890 <memset>
900171b0:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
900171b4:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
900171b8:	4f16      	ldr	r7, [pc, #88]	@ (90017214 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
900171ba:	f7ff ffdb 	bl	90017174 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
900171be:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
900171c2:	f7ff ffd7 	bl	90017174 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
900171c6:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
900171ca:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
900171ce:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
900171d2:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
900171d6:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
900171da:	490f      	ldr	r1, [pc, #60]	@ (90017218 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
900171dc:	480f      	ldr	r0, [pc, #60]	@ (9001721c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
900171de:	f011 feb5 	bl	90028f4c <CRC_Lock>
900171e2:	4b0f      	ldr	r3, [pc, #60]	@ (90017220 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
900171e4:	b158      	cbz	r0, 900171fe <_ZN8touchgfx11ApplicationC1Ev+0x66>
900171e6:	801d      	strh	r5, [r3, #0]
900171e8:	2300      	movs	r3, #0
900171ea:	4a0e      	ldr	r2, [pc, #56]	@ (90017224 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
900171ec:	4630      	mov	r0, r6
900171ee:	6013      	str	r3, [r2, #0]
900171f0:	4a0d      	ldr	r2, [pc, #52]	@ (90017228 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
900171f2:	603b      	str	r3, [r7, #0]
900171f4:	6013      	str	r3, [r2, #0]
900171f6:	f7ff ff2e 	bl	90017056 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
900171fa:	4620      	mov	r0, r4
900171fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900171fe:	f44f 6280 	mov.w	r2, #1024	@ 0x400
90017202:	2002      	movs	r0, #2
90017204:	801a      	strh	r2, [r3, #0]
90017206:	6038      	str	r0, [r7, #0]
90017208:	f001 ff66 	bl	900190d8 <_ZN8touchgfx6Screen4drawEv>
9001720c:	e7ec      	b.n	900171e8 <_ZN8touchgfx11ApplicationC1Ev+0x50>
9001720e:	bf00      	nop
90017210:	9002e27c 	.word	0x9002e27c
90017214:	240218a8 	.word	0x240218a8
90017218:	b5e8b5cd 	.word	0xb5e8b5cd
9001721c:	f407a5c2 	.word	0xf407a5c2
90017220:	24000088 	.word	0x24000088
90017224:	240218b8 	.word	0x240218b8
90017228:	240218ac 	.word	0x240218ac

9001722c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
9001722c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
90017230:	3b01      	subs	r3, #1
90017232:	b29b      	uxth	r3, r3
90017234:	428b      	cmp	r3, r1
90017236:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
9001723a:	b510      	push	{r4, lr}
9001723c:	d908      	bls.n	90017250 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
9001723e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
90017242:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
90017246:	681a      	ldr	r2, [r3, #0]
90017248:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
9001724c:	685a      	ldr	r2, [r3, #4]
9001724e:	6062      	str	r2, [r4, #4]
90017250:	bd10      	pop	{r4, pc}
	...

90017254 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
90017254:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017258:	b08f      	sub	sp, #60	@ 0x3c
9001725a:	4b92      	ldr	r3, [pc, #584]	@ (900174a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x250>)
9001725c:	4683      	mov	fp, r0
9001725e:	ac0a      	add	r4, sp, #40	@ 0x28
90017260:	e884 0006 	stmia.w	r4, {r1, r2}
90017264:	f9b3 2000 	ldrsh.w	r2, [r3]
90017268:	4620      	mov	r0, r4
9001726a:	4b8f      	ldr	r3, [pc, #572]	@ (900174a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x254>)
9001726c:	f9b3 1000 	ldrsh.w	r1, [r3]
90017270:	f7ff fe0f 	bl	90016e92 <_ZN8touchgfx4Rect10restrictToEss>
90017274:	4620      	mov	r0, r4
90017276:	f7fa f840 	bl	900112fa <_ZNK8touchgfx4Rect7isEmptyEv>
9001727a:	2800      	cmp	r0, #0
9001727c:	d170      	bne.n	90017360 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
9001727e:	4b8b      	ldr	r3, [pc, #556]	@ (900174ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
90017280:	681b      	ldr	r3, [r3, #0]
90017282:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
90017286:	2b02      	cmp	r3, #2
90017288:	d06a      	beq.n	90017360 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
9001728a:	9403      	str	r4, [sp, #12]
9001728c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
90017290:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
90017294:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
90017298:	9301      	str	r3, [sp, #4]
9001729a:	35a4      	adds	r5, #164	@ 0xa4
9001729c:	b15c      	cbz	r4, 900172b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
9001729e:	4629      	mov	r1, r5
900172a0:	9803      	ldr	r0, [sp, #12]
900172a2:	f7ff fe47 	bl	90016f34 <_ZNK8touchgfx4Rect8includesERKS0_>
900172a6:	3c01      	subs	r4, #1
900172a8:	b118      	cbz	r0, 900172b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
900172aa:	b2a1      	uxth	r1, r4
900172ac:	9801      	ldr	r0, [sp, #4]
900172ae:	f7ff ffbd 	bl	9001722c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900172b2:	3d08      	subs	r5, #8
900172b4:	e7f2      	b.n	9001729c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
900172b6:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
900172ba:	f10a 33ff 	add.w	r3, sl, #4294967295
900172be:	f8cd a010 	str.w	sl, [sp, #16]
900172c2:	9302      	str	r3, [sp, #8]
900172c4:	ea4f 03ca 	mov.w	r3, sl, lsl #3
900172c8:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
900172cc:	9306      	str	r3, [sp, #24]
900172ce:	445c      	add	r4, fp
900172d0:	2500      	movs	r5, #0
900172d2:	4626      	mov	r6, r4
900172d4:	f8cd a014 	str.w	sl, [sp, #20]
900172d8:	462f      	mov	r7, r5
900172da:	9b05      	ldr	r3, [sp, #20]
900172dc:	2b00      	cmp	r3, #0
900172de:	d073      	beq.n	900173c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x174>
900172e0:	9903      	ldr	r1, [sp, #12]
900172e2:	4630      	mov	r0, r6
900172e4:	f7ff fdb3 	bl	90016e4e <_ZNK8touchgfx4Rect9intersectERKS0_>
900172e8:	b350      	cbz	r0, 90017340 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
900172ea:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
900172ee:	f9b6 c000 	ldrsh.w	ip, [r6]
900172f2:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
900172f6:	45e6      	cmp	lr, ip
900172f8:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
900172fc:	db33      	blt.n	90017366 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
900172fe:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
90017302:	88b3      	ldrh	r3, [r6, #4]
90017304:	4472      	add	r2, lr
90017306:	4463      	add	r3, ip
90017308:	b212      	sxth	r2, r2
9001730a:	b21b      	sxth	r3, r3
9001730c:	429a      	cmp	r2, r3
9001730e:	dc2a      	bgt.n	90017366 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
90017310:	fa1f f289 	uxth.w	r2, r9
90017314:	88f3      	ldrh	r3, [r6, #6]
90017316:	45c8      	cmp	r8, r9
90017318:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
9001731c:	4413      	add	r3, r2
9001731e:	fa1f fc88 	uxth.w	ip, r8
90017322:	b29b      	uxth	r3, r3
90017324:	fa0f fe83 	sxth.w	lr, r3
90017328:	db0f      	blt.n	9001734a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf6>
9001732a:	eba3 030c 	sub.w	r3, r3, ip
9001732e:	1ac9      	subs	r1, r1, r3
90017330:	b209      	sxth	r1, r1
90017332:	2900      	cmp	r1, #0
90017334:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90017338:	dd12      	ble.n	90017360 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
9001733a:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
9001733e:	4605      	mov	r5, r0
90017340:	9b05      	ldr	r3, [sp, #20]
90017342:	3e08      	subs	r6, #8
90017344:	3b01      	subs	r3, #1
90017346:	9305      	str	r3, [sp, #20]
90017348:	e7c7      	b.n	900172da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x86>
9001734a:	4461      	add	r1, ip
9001734c:	b209      	sxth	r1, r1
9001734e:	4571      	cmp	r1, lr
90017350:	dc38      	bgt.n	900173c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
90017352:	eba2 020c 	sub.w	r2, r2, ip
90017356:	b212      	sxth	r2, r2
90017358:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
9001735c:	2a00      	cmp	r2, #0
9001735e:	dcee      	bgt.n	9001733e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
90017360:	b00f      	add	sp, #60	@ 0x3c
90017362:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017366:	45c8      	cmp	r8, r9
90017368:	db2c      	blt.n	900173c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
9001736a:	88f3      	ldrh	r3, [r6, #6]
9001736c:	4499      	add	r9, r3
9001736e:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
90017372:	4498      	add	r8, r3
90017374:	fa0f f989 	sxth.w	r9, r9
90017378:	fa0f f888 	sxth.w	r8, r8
9001737c:	45c1      	cmp	r9, r8
9001737e:	db21      	blt.n	900173c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
90017380:	fa1f f28c 	uxth.w	r2, ip
90017384:	88b3      	ldrh	r3, [r6, #4]
90017386:	45e6      	cmp	lr, ip
90017388:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
9001738c:	4413      	add	r3, r2
9001738e:	fa1f f88e 	uxth.w	r8, lr
90017392:	b29b      	uxth	r3, r3
90017394:	fa0f f983 	sxth.w	r9, r3
90017398:	db0a      	blt.n	900173b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15c>
9001739a:	eba3 0308 	sub.w	r3, r3, r8
9001739e:	1ac9      	subs	r1, r1, r3
900173a0:	b209      	sxth	r1, r1
900173a2:	2900      	cmp	r1, #0
900173a4:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
900173a8:	ddda      	ble.n	90017360 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
900173aa:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
900173ae:	e7c6      	b.n	9001733e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
900173b0:	4441      	add	r1, r8
900173b2:	b209      	sxth	r1, r1
900173b4:	4549      	cmp	r1, r9
900173b6:	dc05      	bgt.n	900173c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
900173b8:	eba2 0208 	sub.w	r2, r2, r8
900173bc:	b212      	sxth	r2, r2
900173be:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
900173c2:	e7cb      	b.n	9001735c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x108>
900173c4:	4607      	mov	r7, r0
900173c6:	e7bb      	b.n	90017340 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
900173c8:	2d00      	cmp	r5, #0
900173ca:	d181      	bne.n	900172d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7c>
900173cc:	2f00      	cmp	r7, #0
900173ce:	f000 81df 	beq.w	90017790 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
900173d2:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
900173d6:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
900173da:	b2b3      	uxth	r3, r6
900173dc:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
900173e0:	9305      	str	r3, [sp, #20]
900173e2:	9a05      	ldr	r2, [sp, #20]
900173e4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
900173e8:	4413      	add	r3, r2
900173ea:	b2ba      	uxth	r2, r7
900173ec:	4492      	add	sl, r2
900173ee:	b29b      	uxth	r3, r3
900173f0:	fa1f fa8a 	uxth.w	sl, sl
900173f4:	fa0f f883 	sxth.w	r8, r3
900173f8:	fa0f f98a 	sxth.w	r9, sl
900173fc:	e9cd 2307 	strd	r2, r3, [sp, #28]
90017400:	9b04      	ldr	r3, [sp, #16]
90017402:	2b00      	cmp	r3, #0
90017404:	d054      	beq.n	900174b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>
90017406:	9903      	ldr	r1, [sp, #12]
90017408:	4620      	mov	r0, r4
9001740a:	f7ff fd20 	bl	90016e4e <_ZNK8touchgfx4Rect9intersectERKS0_>
9001740e:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
90017412:	b1c0      	cbz	r0, 90017446 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
90017414:	f9b4 e000 	ldrsh.w	lr, [r4]
90017418:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
9001741c:	4576      	cmp	r6, lr
9001741e:	dc22      	bgt.n	90017466 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
90017420:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90017424:	44f4      	add	ip, lr
90017426:	fa0f fc8c 	sxth.w	ip, ip
9001742a:	45e0      	cmp	r8, ip
9001742c:	db1b      	blt.n	90017466 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
9001742e:	428f      	cmp	r7, r1
90017430:	fa1f fc81 	uxth.w	ip, r1
90017434:	88e1      	ldrh	r1, [r4, #6]
90017436:	dc0d      	bgt.n	90017454 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x200>
90017438:	ebaa 0c0c 	sub.w	ip, sl, ip
9001743c:	f8a4 9002 	strh.w	r9, [r4, #2]
90017440:	eba1 010c 	sub.w	r1, r1, ip
90017444:	80e1      	strh	r1, [r4, #6]
90017446:	4628      	mov	r0, r5
90017448:	9904      	ldr	r1, [sp, #16]
9001744a:	3c08      	subs	r4, #8
9001744c:	4605      	mov	r5, r0
9001744e:	3901      	subs	r1, #1
90017450:	9104      	str	r1, [sp, #16]
90017452:	e7d3      	b.n	900173fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a8>
90017454:	4461      	add	r1, ip
90017456:	b209      	sxth	r1, r1
90017458:	4549      	cmp	r1, r9
9001745a:	dcf5      	bgt.n	90017448 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
9001745c:	eba2 0c0c 	sub.w	ip, r2, ip
90017460:	f8a4 c006 	strh.w	ip, [r4, #6]
90017464:	e7ef      	b.n	90017446 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
90017466:	428f      	cmp	r7, r1
90017468:	dcee      	bgt.n	90017448 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
9001746a:	f8b4 c006 	ldrh.w	ip, [r4, #6]
9001746e:	4461      	add	r1, ip
90017470:	b209      	sxth	r1, r1
90017472:	4589      	cmp	r9, r1
90017474:	dbe8      	blt.n	90017448 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
90017476:	4576      	cmp	r6, lr
90017478:	fa1f fc8e 	uxth.w	ip, lr
9001747c:	88a1      	ldrh	r1, [r4, #4]
9001747e:	dc07      	bgt.n	90017490 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x23c>
90017480:	eba3 0c0c 	sub.w	ip, r3, ip
90017484:	f8a4 8000 	strh.w	r8, [r4]
90017488:	eba1 010c 	sub.w	r1, r1, ip
9001748c:	80a1      	strh	r1, [r4, #4]
9001748e:	e7da      	b.n	90017446 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
90017490:	4461      	add	r1, ip
90017492:	b209      	sxth	r1, r1
90017494:	4588      	cmp	r8, r1
90017496:	dbd7      	blt.n	90017448 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
90017498:	9905      	ldr	r1, [sp, #20]
9001749a:	eba1 0c0c 	sub.w	ip, r1, ip
9001749e:	f8a4 c004 	strh.w	ip, [r4, #4]
900174a2:	e7d0      	b.n	90017446 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
900174a4:	2402185a 	.word	0x2402185a
900174a8:	24021858 	.word	0x24021858
900174ac:	24021864 	.word	0x24021864
900174b0:	2d00      	cmp	r5, #0
900174b2:	f000 816d 	beq.w	90017790 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
900174b6:	9b06      	ldr	r3, [sp, #24]
900174b8:	445b      	add	r3, fp
900174ba:	461c      	mov	r4, r3
900174bc:	9b02      	ldr	r3, [sp, #8]
900174be:	3301      	adds	r3, #1
900174c0:	f000 8166 	beq.w	90017790 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
900174c4:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
900174c8:	9803      	ldr	r0, [sp, #12]
900174ca:	4629      	mov	r1, r5
900174cc:	f7ff fd32 	bl	90016f34 <_ZNK8touchgfx4Rect8includesERKS0_>
900174d0:	b120      	cbz	r0, 900174dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x288>
900174d2:	f8bd 1008 	ldrh.w	r1, [sp, #8]
900174d6:	9801      	ldr	r0, [sp, #4]
900174d8:	f7ff fea8 	bl	9001722c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900174dc:	9903      	ldr	r1, [sp, #12]
900174de:	4628      	mov	r0, r5
900174e0:	f7ff fcb5 	bl	90016e4e <_ZNK8touchgfx4Rect9intersectERKS0_>
900174e4:	2800      	cmp	r0, #0
900174e6:	f000 809c 	beq.w	90017622 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
900174ea:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
900174ee:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
900174f2:	fa1f f189 	uxth.w	r1, r9
900174f6:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
900174fa:	9309      	str	r3, [sp, #36]	@ 0x24
900174fc:	eb01 0c03 	add.w	ip, r1, r3
90017500:	b283      	uxth	r3, r0
90017502:	4548      	cmp	r0, r9
90017504:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
90017508:	fa1f fa8c 	uxth.w	sl, ip
9001750c:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
90017510:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
90017514:	eb03 050c 	add.w	r5, r3, ip
90017518:	b2ad      	uxth	r5, r5
9001751a:	9505      	str	r5, [sp, #20]
9001751c:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
90017520:	9504      	str	r5, [sp, #16]
90017522:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
90017526:	f340 8099 	ble.w	9001765c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
9001752a:	1a5b      	subs	r3, r3, r1
9001752c:	4596      	cmp	lr, r2
9001752e:	fa0f f08a 	sxth.w	r0, sl
90017532:	b29b      	uxth	r3, r3
90017534:	b21e      	sxth	r6, r3
90017536:	dd2e      	ble.n	90017596 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x342>
90017538:	9f02      	ldr	r7, [sp, #8]
9001753a:	fa1f fe8e 	uxth.w	lr, lr
9001753e:	b292      	uxth	r2, r2
90017540:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
90017544:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
90017548:	9f04      	ldr	r7, [sp, #16]
9001754a:	ebae 0102 	sub.w	r1, lr, r2
9001754e:	44a6      	add	lr, r4
90017550:	1a3f      	subs	r7, r7, r0
90017552:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
90017556:	b289      	uxth	r1, r1
90017558:	4402      	add	r2, r0
9001755a:	fa0f fe8e 	sxth.w	lr, lr
9001755e:	b20d      	sxth	r5, r1
90017560:	b212      	sxth	r2, r2
90017562:	436f      	muls	r7, r5
90017564:	ebae 0202 	sub.w	r2, lr, r2
90017568:	4372      	muls	r2, r6
9001756a:	4297      	cmp	r7, r2
9001756c:	db09      	blt.n	90017582 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32e>
9001756e:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
90017572:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
90017576:	449c      	add	ip, r3
90017578:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
9001757c:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
90017580:	e684      	b.n	9001728c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
90017582:	4421      	add	r1, r4
90017584:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
90017588:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
9001758c:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90017590:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
90017594:	e67a      	b.n	9001728c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
90017596:	9f04      	ldr	r7, [sp, #16]
90017598:	42b8      	cmp	r0, r7
9001759a:	da27      	bge.n	900175ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x398>
9001759c:	9902      	ldr	r1, [sp, #8]
9001759e:	1a3f      	subs	r7, r7, r0
900175a0:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
900175a4:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
900175a8:	eb05 010e 	add.w	r1, r5, lr
900175ac:	fa1f f881 	uxth.w	r8, r1
900175b0:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
900175b4:	4411      	add	r1, r2
900175b6:	fa0f f988 	sxth.w	r9, r8
900175ba:	eba2 020e 	sub.w	r2, r2, lr
900175be:	eba1 0108 	sub.w	r1, r1, r8
900175c2:	4372      	muls	r2, r6
900175c4:	b289      	uxth	r1, r1
900175c6:	fa0f f881 	sxth.w	r8, r1
900175ca:	fb08 f707 	mul.w	r7, r8, r7
900175ce:	42ba      	cmp	r2, r7
900175d0:	dc06      	bgt.n	900175e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38c>
900175d2:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
900175d6:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
900175da:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
900175de:	e7ca      	b.n	90017576 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
900175e0:	4429      	add	r1, r5
900175e2:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
900175e6:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
900175ea:	e64f      	b.n	9001728c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
900175ec:	9805      	ldr	r0, [sp, #20]
900175ee:	2d06      	cmp	r5, #6
900175f0:	ebaa 0000 	sub.w	r0, sl, r0
900175f4:	b280      	uxth	r0, r0
900175f6:	fa0f fe80 	sxth.w	lr, r0
900175fa:	d817      	bhi.n	9001762c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d8>
900175fc:	9b04      	ldr	r3, [sp, #16]
900175fe:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
90017602:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
90017606:	1c6b      	adds	r3, r5, #1
90017608:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
9001760c:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
90017610:	9b01      	ldr	r3, [sp, #4]
90017612:	9801      	ldr	r0, [sp, #4]
90017614:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90017618:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
9001761c:	805a      	strh	r2, [r3, #2]
9001761e:	809e      	strh	r6, [r3, #4]
90017620:	80d9      	strh	r1, [r3, #6]
90017622:	9b02      	ldr	r3, [sp, #8]
90017624:	3c08      	subs	r4, #8
90017626:	3b01      	subs	r3, #1
90017628:	9302      	str	r3, [sp, #8]
9001762a:	e747      	b.n	900174bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x268>
9001762c:	9a02      	ldr	r2, [sp, #8]
9001762e:	45b6      	cmp	lr, r6
90017630:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90017634:	db0d      	blt.n	90017652 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fe>
90017636:	449c      	add	ip, r3
90017638:	445a      	add	r2, fp
9001763a:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
9001763e:	fa1f fc8c 	uxth.w	ip, ip
90017642:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
90017646:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
9001764a:	448c      	add	ip, r1
9001764c:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
90017650:	e61c      	b.n	9001728c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
90017652:	445a      	add	r2, fp
90017654:	4484      	add	ip, r0
90017656:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
9001765a:	e78f      	b.n	9001757c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
9001765c:	fa1f f18e 	uxth.w	r1, lr
90017660:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
90017664:	b293      	uxth	r3, r2
90017666:	4596      	cmp	lr, r2
90017668:	eb01 0806 	add.w	r8, r1, r6
9001766c:	9306      	str	r3, [sp, #24]
9001766e:	fa1f f888 	uxth.w	r8, r8
90017672:	9f06      	ldr	r7, [sp, #24]
90017674:	fa0f f388 	sxth.w	r3, r8
90017678:	9307      	str	r3, [sp, #28]
9001767a:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
9001767e:	443b      	add	r3, r7
90017680:	b29b      	uxth	r3, r3
90017682:	9308      	str	r3, [sp, #32]
90017684:	da24      	bge.n	900176d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
90017686:	9905      	ldr	r1, [sp, #20]
90017688:	eba3 0308 	sub.w	r3, r3, r8
9001768c:	eba2 020e 	sub.w	r2, r2, lr
90017690:	eba9 0000 	sub.w	r0, r9, r0
90017694:	ebaa 0401 	sub.w	r4, sl, r1
90017698:	b29b      	uxth	r3, r3
9001769a:	b2a4      	uxth	r4, r4
9001769c:	b219      	sxth	r1, r3
9001769e:	b225      	sxth	r5, r4
900176a0:	4348      	muls	r0, r1
900176a2:	436a      	muls	r2, r5
900176a4:	4282      	cmp	r2, r0
900176a6:	9a02      	ldr	r2, [sp, #8]
900176a8:	ea4f 02c2 	mov.w	r2, r2, lsl #3
900176ac:	445a      	add	r2, fp
900176ae:	dc06      	bgt.n	900176be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
900176b0:	9b07      	ldr	r3, [sp, #28]
900176b2:	44a4      	add	ip, r4
900176b4:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
900176b8:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
900176bc:	e75e      	b.n	9001757c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
900176be:	9904      	ldr	r1, [sp, #16]
900176c0:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
900176c4:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
900176c8:	4433      	add	r3, r6
900176ca:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
900176ce:	e5dd      	b.n	9001728c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
900176d0:	9f06      	ldr	r7, [sp, #24]
900176d2:	9b04      	ldr	r3, [sp, #16]
900176d4:	1bc9      	subs	r1, r1, r7
900176d6:	fa0f f78a 	sxth.w	r7, sl
900176da:	b289      	uxth	r1, r1
900176dc:	429f      	cmp	r7, r3
900176de:	fa0f fe81 	sxth.w	lr, r1
900176e2:	dd23      	ble.n	9001772c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d8>
900176e4:	9a05      	ldr	r2, [sp, #20]
900176e6:	eba9 0000 	sub.w	r0, r9, r0
900176ea:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
900176ee:	ebaa 0202 	sub.w	r2, sl, r2
900176f2:	9d07      	ldr	r5, [sp, #28]
900176f4:	fb0e f000 	mul.w	r0, lr, r0
900176f8:	b292      	uxth	r2, r2
900176fa:	eba5 0a03 	sub.w	sl, r5, r3
900176fe:	9b02      	ldr	r3, [sp, #8]
90017700:	b214      	sxth	r4, r2
90017702:	00db      	lsls	r3, r3, #3
90017704:	fb04 fa0a 	mul.w	sl, r4, sl
90017708:	445b      	add	r3, fp
9001770a:	4550      	cmp	r0, sl
9001770c:	db03      	blt.n	90017716 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
9001770e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
90017712:	4494      	add	ip, r2
90017714:	e732      	b.n	9001757c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
90017716:	9a04      	ldr	r2, [sp, #16]
90017718:	4431      	add	r1, r6
9001771a:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
9001771e:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
90017722:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
90017726:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
9001772a:	e75c      	b.n	900175e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x392>
9001772c:	9b08      	ldr	r3, [sp, #32]
9001772e:	2d06      	cmp	r5, #6
90017730:	eba3 0308 	sub.w	r3, r3, r8
90017734:	b29b      	uxth	r3, r3
90017736:	b218      	sxth	r0, r3
90017738:	d813      	bhi.n	90017762 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50e>
9001773a:	9b07      	ldr	r3, [sp, #28]
9001773c:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
90017740:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
90017744:	1c6b      	adds	r3, r5, #1
90017746:	9901      	ldr	r1, [sp, #4]
90017748:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
9001774c:	9b01      	ldr	r3, [sp, #4]
9001774e:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
90017752:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90017756:	805a      	strh	r2, [r3, #2]
90017758:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001775a:	f8a3 e006 	strh.w	lr, [r3, #6]
9001775e:	809a      	strh	r2, [r3, #4]
90017760:	e75f      	b.n	90017622 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
90017762:	9c02      	ldr	r4, [sp, #8]
90017764:	4570      	cmp	r0, lr
90017766:	ea4f 04c4 	mov.w	r4, r4, lsl #3
9001776a:	db0d      	blt.n	90017788 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x534>
9001776c:	4431      	add	r1, r6
9001776e:	9b06      	ldr	r3, [sp, #24]
90017770:	445c      	add	r4, fp
90017772:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
90017776:	b289      	uxth	r1, r1
90017778:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
9001777c:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90017780:	4419      	add	r1, r3
90017782:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
90017786:	e581      	b.n	9001728c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
90017788:	445c      	add	r4, fp
9001778a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
9001778e:	e79b      	b.n	900176c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
90017790:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
90017794:	f64f 76ff 	movw	r6, #65535	@ 0xffff
90017798:	1e65      	subs	r5, r4, #1
9001779a:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
9001779e:	b2ad      	uxth	r5, r5
900177a0:	42b5      	cmp	r5, r6
900177a2:	d044      	beq.n	9001782e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5da>
900177a4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
900177a8:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
900177ac:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
900177b0:	4282      	cmp	r2, r0
900177b2:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
900177b6:	d11f      	bne.n	900177f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
900177b8:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
900177bc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
900177c0:	459c      	cmp	ip, r3
900177c2:	d119      	bne.n	900177f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
900177c4:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
900177c8:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
900177cc:	19d8      	adds	r0, r3, r7
900177ce:	b200      	sxth	r0, r0
900177d0:	4288      	cmp	r0, r1
900177d2:	d109      	bne.n	900177e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
900177d4:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
900177d8:	4413      	add	r3, r2
900177da:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
900177de:	4629      	mov	r1, r5
900177e0:	9801      	ldr	r0, [sp, #4]
900177e2:	f7ff fd23 	bl	9001722c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900177e6:	e003      	b.n	900177f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
900177e8:	4411      	add	r1, r2
900177ea:	b209      	sxth	r1, r1
900177ec:	42b9      	cmp	r1, r7
900177ee:	d0f3      	beq.n	900177d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
900177f0:	3d01      	subs	r5, #1
900177f2:	3c08      	subs	r4, #8
900177f4:	b2ad      	uxth	r5, r5
900177f6:	e7d3      	b.n	900177a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54c>
900177f8:	42b9      	cmp	r1, r7
900177fa:	d1f9      	bne.n	900177f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
900177fc:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
90017800:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90017804:	4299      	cmp	r1, r3
90017806:	d1f3      	bne.n	900177f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
90017808:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
9001780c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
90017810:	181f      	adds	r7, r3, r0
90017812:	b23f      	sxth	r7, r7
90017814:	42ba      	cmp	r2, r7
90017816:	d105      	bne.n	90017824 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5d0>
90017818:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
9001781c:	440b      	add	r3, r1
9001781e:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90017822:	e7dc      	b.n	900177de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58a>
90017824:	440a      	add	r2, r1
90017826:	b212      	sxth	r2, r2
90017828:	4290      	cmp	r0, r2
9001782a:	d1e1      	bne.n	900177f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
9001782c:	e7f6      	b.n	9001781c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c8>
9001782e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
90017832:	2e07      	cmp	r6, #7
90017834:	ea4f 04c6 	mov.w	r4, r6, lsl #3
90017838:	d812      	bhi.n	90017860 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60c>
9001783a:	1c75      	adds	r5, r6, #1
9001783c:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
90017840:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
90017844:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
90017848:	9d01      	ldr	r5, [sp, #4]
9001784a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9001784e:	442c      	add	r4, r5
90017850:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
90017854:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
90017858:	8061      	strh	r1, [r4, #2]
9001785a:	80a2      	strh	r2, [r4, #4]
9001785c:	80e3      	strh	r3, [r4, #6]
9001785e:	e57f      	b.n	90017360 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
90017860:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
90017864:	3e01      	subs	r6, #1
90017866:	445c      	add	r4, fp
90017868:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
9001786c:	f04f 37ff 	mov.w	r7, #4294967295
90017870:	2500      	movs	r5, #0
90017872:	9305      	str	r3, [sp, #20]
90017874:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90017878:	1e72      	subs	r2, r6, #1
9001787a:	9302      	str	r3, [sp, #8]
9001787c:	4691      	mov	r9, r2
9001787e:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
90017882:	9304      	str	r3, [sp, #16]
90017884:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
90017888:	f1b9 3fff 	cmp.w	r9, #4294967295
9001788c:	6818      	ldr	r0, [r3, #0]
9001788e:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90017892:	9207      	str	r2, [sp, #28]
90017894:	bf16      	itet	ne
90017896:	9905      	ldrne	r1, [sp, #20]
90017898:	f8dd e00c 	ldreq.w	lr, [sp, #12]
9001789c:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
900178a0:	9306      	str	r3, [sp, #24]
900178a2:	f8be 1006 	ldrh.w	r1, [lr, #6]
900178a6:	f8be 8004 	ldrh.w	r8, [lr, #4]
900178aa:	fb18 f801 	smulbb	r8, r8, r1
900178ae:	6859      	ldr	r1, [r3, #4]
900178b0:	e8ac 0003 	stmia.w	ip!, {r0, r1}
900178b4:	4671      	mov	r1, lr
900178b6:	a80c      	add	r0, sp, #48	@ 0x30
900178b8:	f7ff fb62 	bl	90016f80 <_ZN8touchgfx4Rect11expandToFitERKS0_>
900178bc:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
900178c0:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
900178c4:	f04f 0c08 	mov.w	ip, #8
900178c8:	9b04      	ldr	r3, [sp, #16]
900178ca:	9a02      	ldr	r2, [sp, #8]
900178cc:	fb10 f001 	smulbb	r0, r0, r1
900178d0:	fb02 8803 	mla	r8, r2, r3, r8
900178d4:	eba0 0108 	sub.w	r1, r0, r8
900178d8:	fb90 f0fc 	sdiv	r0, r0, ip
900178dc:	4288      	cmp	r0, r1
900178de:	dc20      	bgt.n	90017922 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6ce>
900178e0:	4551      	cmp	r1, sl
900178e2:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
900178e6:	da03      	bge.n	900178f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x69c>
900178e8:	b1d9      	cbz	r1, 90017922 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6ce>
900178ea:	468a      	mov	sl, r1
900178ec:	464f      	mov	r7, r9
900178ee:	4635      	mov	r5, r6
900178f0:	f109 39ff 	add.w	r9, r9, #4294967295
900178f4:	f119 0f02 	cmn.w	r9, #2
900178f8:	d1c6      	bne.n	90017888 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x634>
900178fa:	4616      	mov	r6, r2
900178fc:	3201      	adds	r2, #1
900178fe:	f1a4 0408 	sub.w	r4, r4, #8
90017902:	d1b7      	bne.n	90017874 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x620>
90017904:	9b01      	ldr	r3, [sp, #4]
90017906:	b2ac      	uxth	r4, r5
90017908:	00ed      	lsls	r5, r5, #3
9001790a:	1958      	adds	r0, r3, r5
9001790c:	1c7b      	adds	r3, r7, #1
9001790e:	d10b      	bne.n	90017928 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d4>
90017910:	4601      	mov	r1, r0
90017912:	9803      	ldr	r0, [sp, #12]
90017914:	f7ff fb34 	bl	90016f80 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90017918:	4621      	mov	r1, r4
9001791a:	9801      	ldr	r0, [sp, #4]
9001791c:	f7ff fc86 	bl	9001722c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90017920:	e4b4      	b.n	9001728c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
90017922:	464f      	mov	r7, r9
90017924:	4635      	mov	r5, r6
90017926:	e7ed      	b.n	90017904 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b0>
90017928:	9b01      	ldr	r3, [sp, #4]
9001792a:	00ff      	lsls	r7, r7, #3
9001792c:	445d      	add	r5, fp
9001792e:	19d9      	adds	r1, r3, r7
90017930:	445f      	add	r7, fp
90017932:	f7ff fb25 	bl	90016f80 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90017936:	9b03      	ldr	r3, [sp, #12]
90017938:	cb03      	ldmia	r3!, {r0, r1}
9001793a:	9b03      	ldr	r3, [sp, #12]
9001793c:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
90017940:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
90017944:	f855 0fac 	ldr.w	r0, [r5, #172]!
90017948:	6869      	ldr	r1, [r5, #4]
9001794a:	c303      	stmia	r3!, {r0, r1}
9001794c:	e7e4      	b.n	90017918 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
9001794e:	bf00      	nop

90017950 <_ZN8touchgfx11Application15drawCachedAreasEv>:
90017950:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017954:	f500 7698 	add.w	r6, r0, #304	@ 0x130
90017958:	b0a1      	sub	sp, #132	@ 0x84
9001795a:	4604      	mov	r4, r0
9001795c:	4630      	mov	r0, r6
9001795e:	f7f9 fccc 	bl	900112fa <_ZNK8touchgfx4Rect7isEmptyEv>
90017962:	4605      	mov	r5, r0
90017964:	b948      	cbnz	r0, 9001797a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
90017966:	6823      	ldr	r3, [r4, #0]
90017968:	4620      	mov	r0, r4
9001796a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
9001796c:	e896 0006 	ldmia.w	r6, {r1, r2}
90017970:	4798      	blx	r3
90017972:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
90017976:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
9001797a:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
9001797e:	2b00      	cmp	r3, #0
90017980:	d149      	bne.n	90017a16 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc6>
90017982:	4bb2      	ldr	r3, [pc, #712]	@ (90017c4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
90017984:	681b      	ldr	r3, [r3, #0]
90017986:	f893 7048 	ldrb.w	r7, [r3, #72]	@ 0x48
9001798a:	1ebb      	subs	r3, r7, #2
9001798c:	425f      	negs	r7, r3
9001798e:	415f      	adcs	r7, r3
90017990:	4baf      	ldr	r3, [pc, #700]	@ (90017c50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x300>)
90017992:	681b      	ldr	r3, [r3, #0]
90017994:	2b00      	cmp	r3, #0
90017996:	d040      	beq.n	90017a1a <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
90017998:	4dae      	ldr	r5, [pc, #696]	@ (90017c54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x304>)
9001799a:	4628      	mov	r0, r5
9001799c:	f7f9 fcad 	bl	900112fa <_ZNK8touchgfx4Rect7isEmptyEv>
900179a0:	4606      	mov	r6, r0
900179a2:	2800      	cmp	r0, #0
900179a4:	d139      	bne.n	90017a1a <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
900179a6:	4628      	mov	r0, r5
900179a8:	f7ff f960 	bl	90016c6c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
900179ac:	6823      	ldr	r3, [r4, #0]
900179ae:	6829      	ldr	r1, [r5, #0]
900179b0:	4620      	mov	r0, r4
900179b2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
900179b4:	686a      	ldr	r2, [r5, #4]
900179b6:	4798      	blx	r3
900179b8:	802e      	strh	r6, [r5, #0]
900179ba:	806e      	strh	r6, [r5, #2]
900179bc:	80ae      	strh	r6, [r5, #4]
900179be:	80ee      	strh	r6, [r5, #6]
900179c0:	af0f      	add	r7, sp, #60	@ 0x3c
900179c2:	4ea5      	ldr	r6, [pc, #660]	@ (90017c58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x308>)
900179c4:	4638      	mov	r0, r7
900179c6:	f7ff fbd5 	bl	90017174 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
900179ca:	8835      	ldrh	r5, [r6, #0]
900179cc:	f8b4 c0ec 	ldrh.w	ip, [r4, #236]	@ 0xec
900179d0:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
900179d4:	462b      	mov	r3, r5
900179d6:	4563      	cmp	r3, ip
900179d8:	d224      	bcs.n	90017a24 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
900179da:	f8bd 107c 	ldrh.w	r1, [sp, #124]	@ 0x7c
900179de:	2907      	cmp	r1, #7
900179e0:	d816      	bhi.n	90017a10 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
900179e2:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
900179e6:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
900179ea:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
900179ee:	f9b2 8004 	ldrsh.w	r8, [r2, #4]
900179f2:	f9b2 e006 	ldrsh.w	lr, [r2, #6]
900179f6:	1c4a      	adds	r2, r1, #1
900179f8:	f8ad 207c 	strh.w	r2, [sp, #124]	@ 0x7c
900179fc:	eb07 02c1 	add.w	r2, r7, r1, lsl #3
90017a00:	f827 9031 	strh.w	r9, [r7, r1, lsl #3]
90017a04:	f8a2 a002 	strh.w	sl, [r2, #2]
90017a08:	f8a2 8004 	strh.w	r8, [r2, #4]
90017a0c:	f8a2 e006 	strh.w	lr, [r2, #6]
90017a10:	3301      	adds	r3, #1
90017a12:	b29b      	uxth	r3, r3
90017a14:	e7df      	b.n	900179d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
90017a16:	2701      	movs	r7, #1
90017a18:	e7ba      	b.n	90017990 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40>
90017a1a:	2f00      	cmp	r7, #0
90017a1c:	d1d0      	bne.n	900179c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x70>
90017a1e:	b021      	add	sp, #132	@ 0x84
90017a20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017a24:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
90017a28:	42ab      	cmp	r3, r5
90017a2a:	d90c      	bls.n	90017a46 <_ZN8touchgfx11Application15drawCachedAreasEv+0xf6>
90017a2c:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
90017a30:	6822      	ldr	r2, [r4, #0]
90017a32:	3501      	adds	r5, #1
90017a34:	4620      	mov	r0, r4
90017a36:	6c17      	ldr	r7, [r2, #64]	@ 0x40
90017a38:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
90017a3c:	b2ad      	uxth	r5, r5
90017a3e:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
90017a42:	47b8      	blx	r7
90017a44:	e7ee      	b.n	90017a24 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
90017a46:	4d81      	ldr	r5, [pc, #516]	@ (90017c4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
90017a48:	6828      	ldr	r0, [r5, #0]
90017a4a:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
90017a4e:	2b01      	cmp	r3, #1
90017a50:	f040 813d 	bne.w	90017cce <_ZN8touchgfx11Application15drawCachedAreasEv+0x37e>
90017a54:	4a81      	ldr	r2, [pc, #516]	@ (90017c5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>)
90017a56:	8833      	ldrh	r3, [r6, #0]
90017a58:	7812      	ldrb	r2, [r2, #0]
90017a5a:	f8b4 00ec 	ldrh.w	r0, [r4, #236]	@ 0xec
90017a5e:	2a01      	cmp	r2, #1
90017a60:	d014      	beq.n	90017a8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
90017a62:	eb04 02c3 	add.w	r2, r4, r3, lsl #3
90017a66:	f04f 0900 	mov.w	r9, #0
90017a6a:	32ae      	adds	r2, #174	@ 0xae
90017a6c:	4283      	cmp	r3, r0
90017a6e:	f102 0208 	add.w	r2, r2, #8
90017a72:	f280 8083 	bge.w	90017b7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
90017a76:	f832 1c04 	ldrh.w	r1, [r2, #-4]
90017a7a:	3301      	adds	r3, #1
90017a7c:	f832 7c08 	ldrh.w	r7, [r2, #-8]
90017a80:	4439      	add	r1, r7
90017a82:	b209      	sxth	r1, r1
90017a84:	4589      	cmp	r9, r1
90017a86:	bfb8      	it	lt
90017a88:	4689      	movlt	r9, r1
90017a8a:	e7ef      	b.n	90017a6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x11c>
90017a8c:	4f74      	ldr	r7, [pc, #464]	@ (90017c60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>)
90017a8e:	883a      	ldrh	r2, [r7, #0]
90017a90:	4693      	mov	fp, r2
90017a92:	4283      	cmp	r3, r0
90017a94:	da08      	bge.n	90017aa8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x158>
90017a96:	eb04 01c3 	add.w	r1, r4, r3, lsl #3
90017a9a:	3301      	adds	r3, #1
90017a9c:	f9b1 10ac 	ldrsh.w	r1, [r1, #172]	@ 0xac
90017aa0:	458b      	cmp	fp, r1
90017aa2:	bfa8      	it	ge
90017aa4:	468b      	movge	fp, r1
90017aa6:	e7f4      	b.n	90017a92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x142>
90017aa8:	2a0f      	cmp	r2, #15
90017aaa:	f04f 0300 	mov.w	r3, #0
90017aae:	f8df 91b4 	ldr.w	r9, [pc, #436]	@ 90017c64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
90017ab2:	bf8c      	ite	hi
90017ab4:	ea4f 08d2 	movhi.w	r8, r2, lsr #3
90017ab8:	f04f 0801 	movls.w	r8, #1
90017abc:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
90017ac0:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90017ac4:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
90017ac8:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90017acc:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90017ad0:	6828      	ldr	r0, [r5, #0]
90017ad2:	455b      	cmp	r3, fp
90017ad4:	f340 80c8 	ble.w	90017c68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90017ad8:	6803      	ldr	r3, [r0, #0]
90017ada:	f8b7 a000 	ldrh.w	sl, [r7]
90017ade:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90017ae2:	4798      	blx	r3
90017ae4:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
90017ae8:	ebaa 0000 	sub.w	r0, sl, r0
90017aec:	682b      	ldr	r3, [r5, #0]
90017aee:	ebac 0e08 	sub.w	lr, ip, r8
90017af2:	b280      	uxth	r0, r0
90017af4:	f893 107c 	ldrb.w	r1, [r3, #124]	@ 0x7c
90017af8:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
90017afc:	4570      	cmp	r0, lr
90017afe:	dd05      	ble.n	90017b0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x1bc>
90017b00:	4558      	cmp	r0, fp
90017b02:	dd03      	ble.n	90017b0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x1bc>
90017b04:	b901      	cbnz	r1, 90017b08 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b8>
90017b06:	b392      	cbz	r2, 90017b6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x21e>
90017b08:	4658      	mov	r0, fp
90017b0a:	e006      	b.n	90017b1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ca>
90017b0c:	2900      	cmp	r1, #0
90017b0e:	d1fb      	bne.n	90017b08 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b8>
90017b10:	2a00      	cmp	r2, #0
90017b12:	d1f9      	bne.n	90017b08 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b8>
90017b14:	4558      	cmp	r0, fp
90017b16:	bfb8      	it	lt
90017b18:	4658      	movlt	r0, fp
90017b1a:	f9b9 3000 	ldrsh.w	r3, [r9]
90017b1e:	2200      	movs	r2, #0
90017b20:	f8ad 002c 	strh.w	r0, [sp, #44]	@ 0x2c
90017b24:	ebac 0000 	sub.w	r0, ip, r0
90017b28:	f8b6 a000 	ldrh.w	sl, [r6]
90017b2c:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
90017b30:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
90017b34:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90017b38:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90017b3c:	4553      	cmp	r3, sl
90017b3e:	ddc5      	ble.n	90017acc <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
90017b40:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
90017b44:	ab0d      	add	r3, sp, #52	@ 0x34
90017b46:	f852 0fac 	ldr.w	r0, [r2, #172]!
90017b4a:	6851      	ldr	r1, [r2, #4]
90017b4c:	c303      	stmia	r3!, {r0, r1}
90017b4e:	a80d      	add	r0, sp, #52	@ 0x34
90017b50:	a90b      	add	r1, sp, #44	@ 0x2c
90017b52:	f7f9 fb8f 	bl	90011274 <_ZN8touchgfx4RectaNERKS0_>
90017b56:	a80d      	add	r0, sp, #52	@ 0x34
90017b58:	f7f9 fbcf 	bl	900112fa <_ZNK8touchgfx4Rect7isEmptyEv>
90017b5c:	b920      	cbnz	r0, 90017b68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x218>
90017b5e:	6823      	ldr	r3, [r4, #0]
90017b60:	a90d      	add	r1, sp, #52	@ 0x34
90017b62:	4620      	mov	r0, r4
90017b64:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90017b66:	4798      	blx	r3
90017b68:	f10a 0a01 	add.w	sl, sl, #1
90017b6c:	e7e4      	b.n	90017b38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1e8>
90017b6e:	681a      	ldr	r2, [r3, #0]
90017b70:	2101      	movs	r1, #1
90017b72:	4618      	mov	r0, r3
90017b74:	f8d2 20a4 	ldr.w	r2, [r2, #164]	@ 0xa4
90017b78:	4790      	blx	r2
90017b7a:	e7a7      	b.n	90017acc <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
90017b7c:	4b39      	ldr	r3, [pc, #228]	@ (90017c64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>)
90017b7e:	f8df 80e0 	ldr.w	r8, [pc, #224]	@ 90017c60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>
90017b82:	881f      	ldrh	r7, [r3, #0]
90017b84:	2300      	movs	r3, #0
90017b86:	2f0f      	cmp	r7, #15
90017b88:	bf8c      	ite	hi
90017b8a:	08ff      	lsrhi	r7, r7, #3
90017b8c:	2701      	movls	r7, #1
90017b8e:	e9cd 330b 	strd	r3, r3, [sp, #44]	@ 0x2c
90017b92:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90017b96:	f8bd 202e 	ldrh.w	r2, [sp, #46]	@ 0x2e
90017b9a:	6828      	ldr	r0, [r5, #0]
90017b9c:	4413      	add	r3, r2
90017b9e:	b21b      	sxth	r3, r3
90017ba0:	454b      	cmp	r3, r9
90017ba2:	da61      	bge.n	90017c68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90017ba4:	6803      	ldr	r3, [r0, #0]
90017ba6:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90017baa:	4798      	blx	r3
90017bac:	f8bd e02e 	ldrh.w	lr, [sp, #46]	@ 0x2e
90017bb0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90017bb4:	682a      	ldr	r2, [r5, #0]
90017bb6:	4473      	add	r3, lr
90017bb8:	f892 c07c 	ldrb.w	ip, [r2, #124]	@ 0x7c
90017bbc:	b21b      	sxth	r3, r3
90017bbe:	f892 106a 	ldrb.w	r1, [r2, #106]	@ 0x6a
90017bc2:	eb03 0e07 	add.w	lr, r3, r7
90017bc6:	4570      	cmp	r0, lr
90017bc8:	da0d      	bge.n	90017be6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x296>
90017bca:	4548      	cmp	r0, r9
90017bcc:	da0b      	bge.n	90017be6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x296>
90017bce:	f1bc 0f00 	cmp.w	ip, #0
90017bd2:	d138      	bne.n	90017c46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
90017bd4:	2900      	cmp	r1, #0
90017bd6:	d136      	bne.n	90017c46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
90017bd8:	6813      	ldr	r3, [r2, #0]
90017bda:	2101      	movs	r1, #1
90017bdc:	4610      	mov	r0, r2
90017bde:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
90017be2:	4798      	blx	r3
90017be4:	e7d5      	b.n	90017b92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x242>
90017be6:	f1bc 0f00 	cmp.w	ip, #0
90017bea:	d12c      	bne.n	90017c46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
90017bec:	bb59      	cbnz	r1, 90017c46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
90017bee:	4548      	cmp	r0, r9
90017bf0:	bfa8      	it	ge
90017bf2:	4648      	movge	r0, r9
90017bf4:	f9b8 2000 	ldrsh.w	r2, [r8]
90017bf8:	2100      	movs	r1, #0
90017bfa:	1ac0      	subs	r0, r0, r3
90017bfc:	f8b6 a000 	ldrh.w	sl, [r6]
90017c00:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
90017c04:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90017c08:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
90017c0c:	f8ad 0032 	strh.w	r0, [sp, #50]	@ 0x32
90017c10:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90017c14:	4553      	cmp	r3, sl
90017c16:	ddbc      	ble.n	90017b92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x242>
90017c18:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
90017c1c:	ab0d      	add	r3, sp, #52	@ 0x34
90017c1e:	f852 0fac 	ldr.w	r0, [r2, #172]!
90017c22:	6851      	ldr	r1, [r2, #4]
90017c24:	c303      	stmia	r3!, {r0, r1}
90017c26:	a80d      	add	r0, sp, #52	@ 0x34
90017c28:	a90b      	add	r1, sp, #44	@ 0x2c
90017c2a:	f7f9 fb23 	bl	90011274 <_ZN8touchgfx4RectaNERKS0_>
90017c2e:	a80d      	add	r0, sp, #52	@ 0x34
90017c30:	f7f9 fb63 	bl	900112fa <_ZNK8touchgfx4Rect7isEmptyEv>
90017c34:	b920      	cbnz	r0, 90017c40 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f0>
90017c36:	6823      	ldr	r3, [r4, #0]
90017c38:	a90d      	add	r1, sp, #52	@ 0x34
90017c3a:	4620      	mov	r0, r4
90017c3c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90017c3e:	4798      	blx	r3
90017c40:	f10a 0a01 	add.w	sl, sl, #1
90017c44:	e7e4      	b.n	90017c10 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c0>
90017c46:	4648      	mov	r0, r9
90017c48:	e7d4      	b.n	90017bf4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a4>
90017c4a:	bf00      	nop
90017c4c:	24021864 	.word	0x24021864
90017c50:	240218a4 	.word	0x240218a4
90017c54:	240218b0 	.word	0x240218b0
90017c58:	24000088 	.word	0x24000088
90017c5c:	2402185c 	.word	0x2402185c
90017c60:	24021858 	.word	0x24021858
90017c64:	2402185a 	.word	0x2402185a
90017c68:	6828      	ldr	r0, [r5, #0]
90017c6a:	6803      	ldr	r3, [r0, #0]
90017c6c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90017c6e:	4798      	blx	r3
90017c70:	4ba4      	ldr	r3, [pc, #656]	@ (90017f04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b4>)
90017c72:	781b      	ldrb	r3, [r3, #0]
90017c74:	2b00      	cmp	r3, #0
90017c76:	f43f aed2 	beq.w	90017a1e <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
90017c7a:	2300      	movs	r3, #0
90017c7c:	f8bd 607c 	ldrh.w	r6, [sp, #124]	@ 0x7c
90017c80:	a80f      	add	r0, sp, #60	@ 0x3c
90017c82:	f104 05ee 	add.w	r5, r4, #238	@ 0xee
90017c86:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
90017c8a:	4b9f      	ldr	r3, [pc, #636]	@ (90017f08 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b8>)
90017c8c:	881b      	ldrh	r3, [r3, #0]
90017c8e:	42b3      	cmp	r3, r6
90017c90:	f4bf aec5 	bcs.w	90017a1e <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
90017c94:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
90017c98:	2907      	cmp	r1, #7
90017c9a:	d815      	bhi.n	90017cc8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x378>
90017c9c:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
90017ca0:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
90017ca4:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
90017ca8:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
90017cac:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
90017cb0:	1c4a      	adds	r2, r1, #1
90017cb2:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
90017cb6:	eb05 02c1 	add.w	r2, r5, r1, lsl #3
90017cba:	f825 8031 	strh.w	r8, [r5, r1, lsl #3]
90017cbe:	f8a2 e002 	strh.w	lr, [r2, #2]
90017cc2:	f8a2 c004 	strh.w	ip, [r2, #4]
90017cc6:	80d7      	strh	r7, [r2, #6]
90017cc8:	3301      	adds	r3, #1
90017cca:	b29b      	uxth	r3, r3
90017ccc:	e7df      	b.n	90017c8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x33e>
90017cce:	2b02      	cmp	r3, #2
90017cd0:	f040 80ce 	bne.w	90017e70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
90017cd4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
90017cd8:	f890 b07d 	ldrb.w	fp, [r0, #125]	@ 0x7d
90017cdc:	9308      	str	r3, [sp, #32]
90017cde:	f8b0 307e 	ldrh.w	r3, [r0, #126]	@ 0x7e
90017ce2:	f10b 37ff 	add.w	r7, fp, #4294967295
90017ce6:	9307      	str	r3, [sp, #28]
90017ce8:	b2bf      	uxth	r7, r7
90017cea:	6803      	ldr	r3, [r0, #0]
90017cec:	fa0f f887 	sxth.w	r8, r7
90017cf0:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90017cf4:	4798      	blx	r3
90017cf6:	4b85      	ldr	r3, [pc, #532]	@ (90017f0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5bc>)
90017cf8:	4682      	mov	sl, r0
90017cfa:	2000      	movs	r0, #0
90017cfc:	881b      	ldrh	r3, [r3, #0]
90017cfe:	9302      	str	r3, [sp, #8]
90017d00:	4b83      	ldr	r3, [pc, #524]	@ (90017f10 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c0>)
90017d02:	881e      	ldrh	r6, [r3, #0]
90017d04:	4b83      	ldr	r3, [pc, #524]	@ (90017f14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
90017d06:	781b      	ldrb	r3, [r3, #0]
90017d08:	2b01      	cmp	r3, #1
90017d0a:	bf1e      	ittt	ne
90017d0c:	9b02      	ldrne	r3, [sp, #8]
90017d0e:	9602      	strne	r6, [sp, #8]
90017d10:	461e      	movne	r6, r3
90017d12:	f7e8 ffc7 	bl	90000ca4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90017d16:	fb96 fbfb 	sdiv	fp, r6, fp
90017d1a:	fb0b f808 	mul.w	r8, fp, r8
90017d1e:	45c2      	cmp	sl, r8
90017d20:	da0c      	bge.n	90017d3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ec>
90017d22:	6828      	ldr	r0, [r5, #0]
90017d24:	210a      	movs	r1, #10
90017d26:	6803      	ldr	r3, [r0, #0]
90017d28:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
90017d2c:	4798      	blx	r3
90017d2e:	6828      	ldr	r0, [r5, #0]
90017d30:	6803      	ldr	r3, [r0, #0]
90017d32:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90017d36:	4798      	blx	r3
90017d38:	4682      	mov	sl, r0
90017d3a:	e7f0      	b.n	90017d1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ce>
90017d3c:	2000      	movs	r0, #0
90017d3e:	f04f 0800 	mov.w	r8, #0
90017d42:	f7e8 ffd9 	bl	90000cf8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90017d46:	fa1f f38b 	uxth.w	r3, fp
90017d4a:	4645      	mov	r5, r8
90017d4c:	fb17 f703 	smulbb	r7, r7, r3
90017d50:	9304      	str	r3, [sp, #16]
90017d52:	b2bb      	uxth	r3, r7
90017d54:	4f70      	ldr	r7, [pc, #448]	@ (90017f18 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c8>)
90017d56:	9305      	str	r3, [sp, #20]
90017d58:	0973      	lsrs	r3, r6, #5
90017d5a:	9306      	str	r3, [sp, #24]
90017d5c:	42b5      	cmp	r5, r6
90017d5e:	d087      	beq.n	90017c70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
90017d60:	6838      	ldr	r0, [r7, #0]
90017d62:	6803      	ldr	r3, [r0, #0]
90017d64:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90017d68:	4798      	blx	r3
90017d6a:	4582      	cmp	sl, r0
90017d6c:	4681      	mov	r9, r0
90017d6e:	d907      	bls.n	90017d80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x430>
90017d70:	f1b8 0f00 	cmp.w	r8, #0
90017d74:	d007      	beq.n	90017d86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x436>
90017d76:	6838      	ldr	r0, [r7, #0]
90017d78:	6803      	ldr	r3, [r0, #0]
90017d7a:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
90017d7e:	e776      	b.n	90017c6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
90017d80:	f1b8 0f00 	cmp.w	r8, #0
90017d84:	d003      	beq.n	90017d8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x43e>
90017d86:	454d      	cmp	r5, r9
90017d88:	d3f5      	bcc.n	90017d76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x426>
90017d8a:	f04f 0801 	mov.w	r8, #1
90017d8e:	9a04      	ldr	r2, [sp, #16]
90017d90:	fb95 f3fb 	sdiv	r3, r5, fp
90017d94:	9303      	str	r3, [sp, #12]
90017d96:	3301      	adds	r3, #1
90017d98:	fb13 f302 	smulbb	r3, r3, r2
90017d9c:	b299      	uxth	r1, r3
90017d9e:	f1b8 0f00 	cmp.w	r8, #0
90017da2:	d04d      	beq.n	90017e40 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f0>
90017da4:	eb09 030b 	add.w	r3, r9, fp
90017da8:	42b3      	cmp	r3, r6
90017daa:	bfa8      	it	ge
90017dac:	4633      	movge	r3, r6
90017dae:	b29b      	uxth	r3, r3
90017db0:	9807      	ldr	r0, [sp, #28]
90017db2:	428b      	cmp	r3, r1
90017db4:	bf94      	ite	ls
90017db6:	ebc5 0203 	rsbls	r2, r5, r3
90017dba:	ebc5 0201 	rsbhi	r2, r5, r1
90017dbe:	4282      	cmp	r2, r0
90017dc0:	bfa8      	it	ge
90017dc2:	4602      	movge	r2, r0
90017dc4:	9808      	ldr	r0, [sp, #32]
90017dc6:	fa1f fa82 	uxth.w	sl, r2
90017dca:	4582      	cmp	sl, r0
90017dcc:	d205      	bcs.n	90017dda <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
90017dce:	fa15 f082 	uxtah	r0, r5, r2
90017dd2:	4286      	cmp	r6, r0
90017dd4:	d001      	beq.n	90017dda <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
90017dd6:	4299      	cmp	r1, r3
90017dd8:	d23f      	bcs.n	90017e5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x50a>
90017dda:	2001      	movs	r0, #1
90017ddc:	9209      	str	r2, [sp, #36]	@ 0x24
90017dde:	f7e8 ff61 	bl	90000ca4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90017de2:	6838      	ldr	r0, [r7, #0]
90017de4:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
90017de8:	6803      	ldr	r3, [r0, #0]
90017dea:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
90017dee:	4798      	blx	r3
90017df0:	4b48      	ldr	r3, [pc, #288]	@ (90017f14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
90017df2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90017df4:	2000      	movs	r0, #0
90017df6:	781b      	ldrb	r3, [r3, #0]
90017df8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
90017dfc:	b212      	sxth	r2, r2
90017dfe:	2b01      	cmp	r3, #1
90017e00:	d122      	bne.n	90017e48 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f8>
90017e02:	1b73      	subs	r3, r6, r5
90017e04:	f8ad 0036 	strh.w	r0, [sp, #54]	@ 0x36
90017e08:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
90017e0c:	eba3 030a 	sub.w	r3, r3, sl
90017e10:	f8ad 103a 	strh.w	r1, [sp, #58]	@ 0x3a
90017e14:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
90017e18:	6823      	ldr	r3, [r4, #0]
90017e1a:	a90d      	add	r1, sp, #52	@ 0x34
90017e1c:	4620      	mov	r0, r4
90017e1e:	4455      	add	r5, sl
90017e20:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90017e22:	4798      	blx	r3
90017e24:	6838      	ldr	r0, [r7, #0]
90017e26:	9b03      	ldr	r3, [sp, #12]
90017e28:	b2ad      	uxth	r5, r5
90017e2a:	4259      	negs	r1, r3
90017e2c:	6803      	ldr	r3, [r0, #0]
90017e2e:	b209      	sxth	r1, r1
90017e30:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
90017e34:	4798      	blx	r3
90017e36:	2001      	movs	r0, #1
90017e38:	f7e8 ff5e 	bl	90000cf8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90017e3c:	46ca      	mov	sl, r9
90017e3e:	e78d      	b.n	90017d5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x40c>
90017e40:	9b05      	ldr	r3, [sp, #20]
90017e42:	eba9 0303 	sub.w	r3, r9, r3
90017e46:	e7b2      	b.n	90017dae <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
90017e48:	f8ad 0034 	strh.w	r0, [sp, #52]	@ 0x34
90017e4c:	f8ad 5036 	strh.w	r5, [sp, #54]	@ 0x36
90017e50:	f8ad 1038 	strh.w	r1, [sp, #56]	@ 0x38
90017e54:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
90017e58:	e7de      	b.n	90017e18 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4c8>
90017e5a:	6838      	ldr	r0, [r7, #0]
90017e5c:	6803      	ldr	r3, [r0, #0]
90017e5e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90017e60:	4798      	blx	r3
90017e62:	6838      	ldr	r0, [r7, #0]
90017e64:	9906      	ldr	r1, [sp, #24]
90017e66:	6803      	ldr	r3, [r0, #0]
90017e68:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
90017e6c:	4798      	blx	r3
90017e6e:	e7e5      	b.n	90017e3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ec>
90017e70:	2b03      	cmp	r3, #3
90017e72:	f040 8133 	bne.w	900180dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x78c>
90017e76:	4b27      	ldr	r3, [pc, #156]	@ (90017f14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
90017e78:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
90017e7c:	f9b0 9082 	ldrsh.w	r9, [r0, #130]	@ 0x82
90017e80:	781b      	ldrb	r3, [r3, #0]
90017e82:	2b01      	cmp	r3, #1
90017e84:	f000 8095 	beq.w	90017fb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x662>
90017e88:	8832      	ldrh	r2, [r6, #0]
90017e8a:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
90017e8e:	3201      	adds	r2, #1
90017e90:	b292      	uxth	r2, r2
90017e92:	2900      	cmp	r1, #0
90017e94:	f43f aeec 	beq.w	90017c70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
90017e98:	f8b4 50b2 	ldrh.w	r5, [r4, #178]	@ 0xb2
90017e9c:	4694      	mov	ip, r2
90017e9e:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	@ 0xae
90017ea2:	f04f 0800 	mov.w	r8, #0
90017ea6:	441d      	add	r5, r3
90017ea8:	b22d      	sxth	r5, r5
90017eaa:	fa1f f38c 	uxth.w	r3, ip
90017eae:	ea4f 07c8 	mov.w	r7, r8, lsl #3
90017eb2:	4299      	cmp	r1, r3
90017eb4:	f240 80bc 	bls.w	90018030 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e0>
90017eb8:	4427      	add	r7, r4
90017eba:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
90017ebe:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
90017ec2:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
90017ec6:	4283      	cmp	r3, r0
90017ec8:	f340 809e 	ble.w	90018008 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b8>
90017ecc:	f8be 50b2 	ldrh.w	r5, [lr, #178]	@ 0xb2
90017ed0:	46e0      	mov	r8, ip
90017ed2:	4405      	add	r5, r0
90017ed4:	b22d      	sxth	r5, r5
90017ed6:	429d      	cmp	r5, r3
90017ed8:	bfa8      	it	ge
90017eda:	461d      	movge	r5, r3
90017edc:	f10c 0c01 	add.w	ip, ip, #1
90017ee0:	e7e3      	b.n	90017eaa <_ZN8touchgfx11Application15drawCachedAreasEv+0x55a>
90017ee2:	d10a      	bne.n	90017efa <_ZN8touchgfx11Application15drawCachedAreasEv+0x5aa>
90017ee4:	4562      	cmp	r2, ip
90017ee6:	f9b7 00b2 	ldrsh.w	r0, [r7, #178]	@ 0xb2
90017eea:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
90017eee:	bfb8      	it	lt
90017ef0:	4662      	movlt	r2, ip
90017ef2:	4288      	cmp	r0, r1
90017ef4:	bfb8      	it	lt
90017ef6:	4698      	movlt	r8, r3
90017ef8:	e084      	b.n	90018004 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b4>
90017efa:	428a      	cmp	r2, r1
90017efc:	bfb8      	it	lt
90017efe:	460a      	movlt	r2, r1
90017f00:	e080      	b.n	90018004 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b4>
90017f02:	bf00      	nop
90017f04:	24021862 	.word	0x24021862
90017f08:	24000088 	.word	0x24000088
90017f0c:	2402185a 	.word	0x2402185a
90017f10:	24021858 	.word	0x24021858
90017f14:	2402185c 	.word	0x2402185c
90017f18:	24021864 	.word	0x24021864
90017f1c:	19e1      	adds	r1, r4, r7
90017f1e:	ab0d      	add	r3, sp, #52	@ 0x34
90017f20:	f851 0fac 	ldr.w	r0, [r1, #172]!
90017f24:	6849      	ldr	r1, [r1, #4]
90017f26:	c303      	stmia	r3!, {r0, r1}
90017f28:	f9bd 3038 	ldrsh.w	r3, [sp, #56]	@ 0x38
90017f2c:	a80d      	add	r0, sp, #52	@ 0x34
90017f2e:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
90017f32:	454b      	cmp	r3, r9
90017f34:	440b      	add	r3, r1
90017f36:	bfb8      	it	lt
90017f38:	f9bd 2034 	ldrshlt.w	r2, [sp, #52]	@ 0x34
90017f3c:	1a9b      	subs	r3, r3, r2
90017f3e:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
90017f42:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
90017f46:	f7fe feab 	bl	90016ca0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90017f4a:	a80d      	add	r0, sp, #52	@ 0x34
90017f4c:	f7f9 f9d5 	bl	900112fa <_ZNK8touchgfx4Rect7isEmptyEv>
90017f50:	bb78      	cbnz	r0, 90017fb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x662>
90017f52:	f9bd c03a 	ldrsh.w	ip, [sp, #58]	@ 0x3a
90017f56:	4427      	add	r7, r4
90017f58:	6828      	ldr	r0, [r5, #0]
90017f5a:	45cc      	cmp	ip, r9
90017f5c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90017f60:	f8d0 e000 	ldr.w	lr, [r0]
90017f64:	bfd8      	it	le
90017f66:	fa1f fc8c 	uxthle.w	ip, ip
90017f6a:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
90017f6e:	bfc8      	it	gt
90017f70:	fa1f fc89 	uxthgt.w	ip, r9
90017f74:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
90017f78:	f8cd c000 	str.w	ip, [sp]
90017f7c:	f8de b094 	ldr.w	fp, [lr, #148]	@ 0x94
90017f80:	47d8      	blx	fp
90017f82:	4683      	mov	fp, r0
90017f84:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
90017f88:	a80d      	add	r0, sp, #52	@ 0x34
90017f8a:	f7fe fe6f 	bl	90016c6c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90017f8e:	6823      	ldr	r3, [r4, #0]
90017f90:	4620      	mov	r0, r4
90017f92:	a90d      	add	r1, sp, #52	@ 0x34
90017f94:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90017f96:	4798      	blx	r3
90017f98:	f8b7 00b0 	ldrh.w	r0, [r7, #176]	@ 0xb0
90017f9c:	eba0 000b 	sub.w	r0, r0, fp
90017fa0:	b200      	sxth	r0, r0
90017fa2:	f8a7 00b0 	strh.w	r0, [r7, #176]	@ 0xb0
90017fa6:	b920      	cbnz	r0, 90017fb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x662>
90017fa8:	fa1f f188 	uxth.w	r1, r8
90017fac:	4650      	mov	r0, sl
90017fae:	f7ff f93d 	bl	9001722c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90017fb2:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
90017fb6:	f1bb 0f00 	cmp.w	fp, #0
90017fba:	f43f ae59 	beq.w	90017c70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
90017fbe:	8833      	ldrh	r3, [r6, #0]
90017fc0:	f04f 0800 	mov.w	r8, #0
90017fc4:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
90017fc8:	3301      	adds	r3, #1
90017fca:	b29b      	uxth	r3, r3
90017fcc:	b299      	uxth	r1, r3
90017fce:	ea4f 07c8 	mov.w	r7, r8, lsl #3
90017fd2:	458b      	cmp	fp, r1
90017fd4:	d9a2      	bls.n	90017f1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5cc>
90017fd6:	4427      	add	r7, r4
90017fd8:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
90017fdc:	f8b7 10b0 	ldrh.w	r1, [r7, #176]	@ 0xb0
90017fe0:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	@ 0xac
90017fe4:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
90017fe8:	4408      	add	r0, r1
90017fea:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
90017fee:	4461      	add	r1, ip
90017ff0:	b200      	sxth	r0, r0
90017ff2:	b209      	sxth	r1, r1
90017ff4:	4288      	cmp	r0, r1
90017ff6:	f6bf af74 	bge.w	90017ee2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x592>
90017ffa:	4584      	cmp	ip, r0
90017ffc:	4662      	mov	r2, ip
90017ffe:	4698      	mov	r8, r3
90018000:	bfb8      	it	lt
90018002:	4602      	movlt	r2, r0
90018004:	3301      	adds	r3, #1
90018006:	e7e1      	b.n	90017fcc <_ZN8touchgfx11Application15drawCachedAreasEv+0x67c>
90018008:	d10e      	bne.n	90018028 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6d8>
9001800a:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
9001800e:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
90018012:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
90018016:	4473      	add	r3, lr
90018018:	b21b      	sxth	r3, r3
9001801a:	429d      	cmp	r5, r3
9001801c:	bfa8      	it	ge
9001801e:	461d      	movge	r5, r3
90018020:	4287      	cmp	r7, r0
90018022:	bfb8      	it	lt
90018024:	46e0      	movlt	r8, ip
90018026:	e759      	b.n	90017edc <_ZN8touchgfx11Application15drawCachedAreasEv+0x58c>
90018028:	4285      	cmp	r5, r0
9001802a:	bfa8      	it	ge
9001802c:	4605      	movge	r5, r0
9001802e:	e755      	b.n	90017edc <_ZN8touchgfx11Application15drawCachedAreasEv+0x58c>
90018030:	eb0a 0007 	add.w	r0, sl, r7
90018034:	4427      	add	r7, r4
90018036:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
9001803a:	45cb      	cmp	fp, r9
9001803c:	bfbc      	itt	lt
9001803e:	f8b7 50ae 	ldrhlt.w	r5, [r7, #174]	@ 0xae
90018042:	445d      	addlt	r5, fp
90018044:	e9cd 2102 	strd	r2, r1, [sp, #8]
90018048:	bfb8      	it	lt
9001804a:	b22d      	sxthlt	r5, r5
9001804c:	f7f9 f955 	bl	900112fa <_ZNK8touchgfx4Rect7isEmptyEv>
90018050:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
90018054:	2800      	cmp	r0, #0
90018056:	f47f af1c 	bne.w	90017e92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x542>
9001805a:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
9001805e:	fa1f fb8b 	uxth.w	fp, fp
90018062:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
90018066:	1aad      	subs	r5, r5, r2
90018068:	4829      	ldr	r0, [pc, #164]	@ (90018110 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7c0>)
9001806a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
9001806e:	454d      	cmp	r5, r9
90018070:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
90018074:	6800      	ldr	r0, [r0, #0]
90018076:	bfa8      	it	ge
90018078:	464d      	movge	r5, r9
9001807a:	f8ad 1034 	strh.w	r1, [sp, #52]	@ 0x34
9001807e:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
90018082:	b289      	uxth	r1, r1
90018084:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
90018088:	b2ad      	uxth	r5, r5
9001808a:	f8d0 c000 	ldr.w	ip, [r0]
9001808e:	b292      	uxth	r2, r2
90018090:	455d      	cmp	r5, fp
90018092:	bf94      	ite	ls
90018094:	9500      	strls	r5, [sp, #0]
90018096:	f8cd b000 	strhi.w	fp, [sp]
9001809a:	b29b      	uxth	r3, r3
9001809c:	f8dc 5094 	ldr.w	r5, [ip, #148]	@ 0x94
900180a0:	47a8      	blx	r5
900180a2:	6823      	ldr	r3, [r4, #0]
900180a4:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
900180a8:	a90d      	add	r1, sp, #52	@ 0x34
900180aa:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
900180ac:	4620      	mov	r0, r4
900180ae:	4798      	blx	r3
900180b0:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
900180b4:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
900180b8:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
900180bc:	1a5b      	subs	r3, r3, r1
900180be:	440a      	add	r2, r1
900180c0:	b21b      	sxth	r3, r3
900180c2:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
900180c6:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
900180ca:	2b00      	cmp	r3, #0
900180cc:	f47f aedc 	bne.w	90017e88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x538>
900180d0:	fa1f f188 	uxth.w	r1, r8
900180d4:	4650      	mov	r0, sl
900180d6:	f7ff f8a9 	bl	9001722c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900180da:	e6d5      	b.n	90017e88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x538>
900180dc:	8835      	ldrh	r5, [r6, #0]
900180de:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
900180e2:	42ab      	cmp	r3, r5
900180e4:	f67f adc4 	bls.w	90017c70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
900180e8:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
900180ec:	ab0d      	add	r3, sp, #52	@ 0x34
900180ee:	f852 0fac 	ldr.w	r0, [r2, #172]!
900180f2:	6851      	ldr	r1, [r2, #4]
900180f4:	c303      	stmia	r3!, {r0, r1}
900180f6:	a80d      	add	r0, sp, #52	@ 0x34
900180f8:	f7f9 f8ff 	bl	900112fa <_ZNK8touchgfx4Rect7isEmptyEv>
900180fc:	b920      	cbnz	r0, 90018108 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7b8>
900180fe:	6823      	ldr	r3, [r4, #0]
90018100:	a90d      	add	r1, sp, #52	@ 0x34
90018102:	4620      	mov	r0, r4
90018104:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90018106:	4798      	blx	r3
90018108:	3501      	adds	r5, #1
9001810a:	b2ad      	uxth	r5, r5
9001810c:	e7e7      	b.n	900180de <_ZN8touchgfx11Application15drawCachedAreasEv+0x78e>
9001810e:	bf00      	nop
90018110:	24021864 	.word	0x24021864

90018114 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
90018114:	4b03      	ldr	r3, [pc, #12]	@ (90018124 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
90018116:	2200      	movs	r2, #0
90018118:	801a      	strh	r2, [r3, #0]
9001811a:	805a      	strh	r2, [r3, #2]
9001811c:	809a      	strh	r2, [r3, #4]
9001811e:	80da      	strh	r2, [r3, #6]
90018120:	4770      	bx	lr
90018122:	bf00      	nop
90018124:	240218b0 	.word	0x240218b0

90018128 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
90018128:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001812c:	b09d      	sub	sp, #116	@ 0x74
9001812e:	4606      	mov	r6, r0
90018130:	4614      	mov	r4, r2
90018132:	468a      	mov	sl, r1
90018134:	a803      	add	r0, sp, #12
90018136:	461d      	mov	r5, r3
90018138:	f001 f948 	bl	900193cc <_ZN8touchgfx12TextProviderC1Ev>
9001813c:	6833      	ldr	r3, [r6, #0]
9001813e:	4630      	mov	r0, r6
90018140:	f242 0b0b 	movw	fp, #8203	@ 0x200b
90018144:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90018146:	4798      	blx	r3
90018148:	6833      	ldr	r3, [r6, #0]
9001814a:	4607      	mov	r7, r0
9001814c:	4630      	mov	r0, r6
9001814e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90018150:	4798      	blx	r3
90018152:	462a      	mov	r2, r5
90018154:	2500      	movs	r5, #0
90018156:	4621      	mov	r1, r4
90018158:	9000      	str	r0, [sp, #0]
9001815a:	463b      	mov	r3, r7
9001815c:	462c      	mov	r4, r5
9001815e:	46a9      	mov	r9, r5
90018160:	46a8      	mov	r8, r5
90018162:	a803      	add	r0, sp, #12
90018164:	f001 f985 	bl	90019472 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90018168:	2300      	movs	r3, #0
9001816a:	9302      	str	r3, [sp, #8]
9001816c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90018170:	429c      	cmp	r4, r3
90018172:	d002      	beq.n	9001817a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
90018174:	455c      	cmp	r4, fp
90018176:	bf18      	it	ne
90018178:	4625      	movne	r5, r4
9001817a:	ab02      	add	r3, sp, #8
9001817c:	4632      	mov	r2, r6
9001817e:	4651      	mov	r1, sl
90018180:	a803      	add	r0, sp, #12
90018182:	f001 fc99 	bl	90019ab8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90018186:	4604      	mov	r4, r0
90018188:	b108      	cbz	r0, 9001818e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
9001818a:	280a      	cmp	r0, #10
9001818c:	d10a      	bne.n	900181a4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
9001818e:	45c1      	cmp	r9, r8
90018190:	bf38      	it	cc
90018192:	46c1      	movcc	r9, r8
90018194:	f04f 0800 	mov.w	r8, #0
90018198:	2c00      	cmp	r4, #0
9001819a:	d1e5      	bne.n	90018168 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
9001819c:	4648      	mov	r0, r9
9001819e:	b01d      	add	sp, #116	@ 0x74
900181a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900181a4:	9a02      	ldr	r2, [sp, #8]
900181a6:	2a00      	cmp	r2, #0
900181a8:	d0de      	beq.n	90018168 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
900181aa:	7b57      	ldrb	r7, [r2, #13]
900181ac:	4629      	mov	r1, r5
900181ae:	6833      	ldr	r3, [r6, #0]
900181b0:	007f      	lsls	r7, r7, #1
900181b2:	8894      	ldrh	r4, [r2, #4]
900181b4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900181b6:	f407 7080 	and.w	r0, r7, #256	@ 0x100
900181ba:	7a97      	ldrb	r7, [r2, #10]
900181bc:	4307      	orrs	r7, r0
900181be:	4630      	mov	r0, r6
900181c0:	4798      	blx	r3
900181c2:	4438      	add	r0, r7
900181c4:	4480      	add	r8, r0
900181c6:	fa1f f888 	uxth.w	r8, r8
900181ca:	e7e5      	b.n	90018198 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

900181cc <_ZNK8touchgfx4Font12getCharWidthEt>:
900181cc:	b508      	push	{r3, lr}
900181ce:	6803      	ldr	r3, [r0, #0]
900181d0:	68db      	ldr	r3, [r3, #12]
900181d2:	4798      	blx	r3
900181d4:	b128      	cbz	r0, 900181e2 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
900181d6:	7b43      	ldrb	r3, [r0, #13]
900181d8:	7a80      	ldrb	r0, [r0, #10]
900181da:	005b      	lsls	r3, r3, #1
900181dc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
900181e0:	4318      	orrs	r0, r3
900181e2:	bd08      	pop	{r3, pc}

900181e4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
900181e4:	b40e      	push	{r1, r2, r3}
900181e6:	b5f0      	push	{r4, r5, r6, r7, lr}
900181e8:	b09e      	sub	sp, #120	@ 0x78
900181ea:	4605      	mov	r5, r0
900181ec:	ab23      	add	r3, sp, #140	@ 0x8c
900181ee:	a805      	add	r0, sp, #20
900181f0:	f853 4b04 	ldr.w	r4, [r3], #4
900181f4:	9303      	str	r3, [sp, #12]
900181f6:	f001 f8e9 	bl	900193cc <_ZN8touchgfx12TextProviderC1Ev>
900181fa:	682b      	ldr	r3, [r5, #0]
900181fc:	4628      	mov	r0, r5
900181fe:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90018200:	4798      	blx	r3
90018202:	682b      	ldr	r3, [r5, #0]
90018204:	4606      	mov	r6, r0
90018206:	4628      	mov	r0, r5
90018208:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001820a:	4798      	blx	r3
9001820c:	4633      	mov	r3, r6
9001820e:	4621      	mov	r1, r4
90018210:	ae1e      	add	r6, sp, #120	@ 0x78
90018212:	2400      	movs	r4, #0
90018214:	9000      	str	r0, [sp, #0]
90018216:	9a03      	ldr	r2, [sp, #12]
90018218:	a805      	add	r0, sp, #20
9001821a:	f001 f92a 	bl	90019472 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001821e:	f846 4d68 	str.w	r4, [r6, #-104]!
90018222:	462a      	mov	r2, r5
90018224:	4633      	mov	r3, r6
90018226:	4621      	mov	r1, r4
90018228:	a805      	add	r0, sp, #20
9001822a:	f001 fc45 	bl	90019ab8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001822e:	b300      	cbz	r0, 90018272 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
90018230:	280a      	cmp	r0, #10
90018232:	d01a      	beq.n	9001826a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
90018234:	9f04      	ldr	r7, [sp, #16]
90018236:	b1c7      	cbz	r7, 9001826a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
90018238:	7b78      	ldrb	r0, [r7, #13]
9001823a:	7a3b      	ldrb	r3, [r7, #8]
9001823c:	00c1      	lsls	r1, r0, #3
9001823e:	88ea      	ldrh	r2, [r5, #6]
90018240:	f401 7180 	and.w	r1, r1, #256	@ 0x100
90018244:	4319      	orrs	r1, r3
90018246:	0643      	lsls	r3, r0, #25
90018248:	ea4f 1000 	mov.w	r0, r0, lsl #4
9001824c:	bf48      	it	mi
9001824e:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
90018252:	f400 7080 	and.w	r0, r0, #256	@ 0x100
90018256:	bf48      	it	mi
90018258:	b219      	sxthmi	r1, r3
9001825a:	79fb      	ldrb	r3, [r7, #7]
9001825c:	4303      	orrs	r3, r0
9001825e:	4413      	add	r3, r2
90018260:	1a5b      	subs	r3, r3, r1
90018262:	b21b      	sxth	r3, r3
90018264:	429c      	cmp	r4, r3
90018266:	bfb8      	it	lt
90018268:	461c      	movlt	r4, r3
9001826a:	4633      	mov	r3, r6
9001826c:	462a      	mov	r2, r5
9001826e:	2100      	movs	r1, #0
90018270:	e7da      	b.n	90018228 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
90018272:	b2a0      	uxth	r0, r4
90018274:	b01e      	add	sp, #120	@ 0x78
90018276:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9001827a:	b003      	add	sp, #12
9001827c:	4770      	bx	lr

9001827e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
9001827e:	7a43      	ldrb	r3, [r0, #9]
90018280:	8880      	ldrh	r0, [r0, #4]
90018282:	4418      	add	r0, r3
90018284:	b280      	uxth	r0, r0
90018286:	4770      	bx	lr

90018288 <_ZNK8touchgfx4Font13getFontHeightEv>:
90018288:	6803      	ldr	r3, [r0, #0]
9001828a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001828c:	4718      	bx	r3

9001828e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
9001828e:	b40e      	push	{r1, r2, r3}
90018290:	b570      	push	{r4, r5, r6, lr}
90018292:	b09d      	sub	sp, #116	@ 0x74
90018294:	4604      	mov	r4, r0
90018296:	ab21      	add	r3, sp, #132	@ 0x84
90018298:	a803      	add	r0, sp, #12
9001829a:	f853 5b04 	ldr.w	r5, [r3], #4
9001829e:	9302      	str	r3, [sp, #8]
900182a0:	f001 f894 	bl	900193cc <_ZN8touchgfx12TextProviderC1Ev>
900182a4:	6823      	ldr	r3, [r4, #0]
900182a6:	4620      	mov	r0, r4
900182a8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
900182aa:	4798      	blx	r3
900182ac:	6823      	ldr	r3, [r4, #0]
900182ae:	4606      	mov	r6, r0
900182b0:	4620      	mov	r0, r4
900182b2:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900182b4:	2401      	movs	r4, #1
900182b6:	4798      	blx	r3
900182b8:	4633      	mov	r3, r6
900182ba:	9000      	str	r0, [sp, #0]
900182bc:	4629      	mov	r1, r5
900182be:	9a02      	ldr	r2, [sp, #8]
900182c0:	a803      	add	r0, sp, #12
900182c2:	f001 f8d6 	bl	90019472 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900182c6:	a803      	add	r0, sp, #12
900182c8:	f001 fcc2 	bl	90019c50 <_ZN8touchgfx12TextProvider11getNextCharEv>
900182cc:	b2a3      	uxth	r3, r4
900182ce:	b138      	cbz	r0, 900182e0 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
900182d0:	280a      	cmp	r0, #10
900182d2:	a803      	add	r0, sp, #12
900182d4:	bf04      	itt	eq
900182d6:	3301      	addeq	r3, #1
900182d8:	b21c      	sxtheq	r4, r3
900182da:	f001 fcb9 	bl	90019c50 <_ZN8touchgfx12TextProvider11getNextCharEv>
900182de:	e7f5      	b.n	900182cc <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
900182e0:	4618      	mov	r0, r3
900182e2:	b01d      	add	sp, #116	@ 0x74
900182e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900182e8:	b003      	add	sp, #12
900182ea:	4770      	bx	lr

900182ec <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
900182ec:	b40e      	push	{r1, r2, r3}
900182ee:	b5f0      	push	{r4, r5, r6, r7, lr}
900182f0:	b09e      	sub	sp, #120	@ 0x78
900182f2:	4604      	mov	r4, r0
900182f4:	ab23      	add	r3, sp, #140	@ 0x8c
900182f6:	a805      	add	r0, sp, #20
900182f8:	f853 5b04 	ldr.w	r5, [r3], #4
900182fc:	9303      	str	r3, [sp, #12]
900182fe:	f001 f865 	bl	900193cc <_ZN8touchgfx12TextProviderC1Ev>
90018302:	6823      	ldr	r3, [r4, #0]
90018304:	4620      	mov	r0, r4
90018306:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90018308:	4798      	blx	r3
9001830a:	6823      	ldr	r3, [r4, #0]
9001830c:	4606      	mov	r6, r0
9001830e:	4620      	mov	r0, r4
90018310:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90018312:	4798      	blx	r3
90018314:	4633      	mov	r3, r6
90018316:	4629      	mov	r1, r5
90018318:	9000      	str	r0, [sp, #0]
9001831a:	9a03      	ldr	r2, [sp, #12]
9001831c:	a805      	add	r0, sp, #20
9001831e:	f001 f8a8 	bl	90019472 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90018322:	ad1e      	add	r5, sp, #120	@ 0x78
90018324:	2100      	movs	r1, #0
90018326:	f647 76ff 	movw	r6, #32767	@ 0x7fff
9001832a:	4622      	mov	r2, r4
9001832c:	a805      	add	r0, sp, #20
9001832e:	f845 1d68 	str.w	r1, [r5, #-104]!
90018332:	462b      	mov	r3, r5
90018334:	f001 fbc0 	bl	90019ab8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90018338:	b1d8      	cbz	r0, 90018372 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
9001833a:	280a      	cmp	r0, #10
9001833c:	d012      	beq.n	90018364 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
9001833e:	9804      	ldr	r0, [sp, #16]
90018340:	b180      	cbz	r0, 90018364 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
90018342:	7b47      	ldrb	r7, [r0, #13]
90018344:	88e2      	ldrh	r2, [r4, #6]
90018346:	00fb      	lsls	r3, r7, #3
90018348:	f403 7180 	and.w	r1, r3, #256	@ 0x100
9001834c:	7a03      	ldrb	r3, [r0, #8]
9001834e:	430b      	orrs	r3, r1
90018350:	0679      	lsls	r1, r7, #25
90018352:	bf44      	itt	mi
90018354:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90018358:	b21b      	sxthmi	r3, r3
9001835a:	1ad3      	subs	r3, r2, r3
9001835c:	b21b      	sxth	r3, r3
9001835e:	429e      	cmp	r6, r3
90018360:	bfa8      	it	ge
90018362:	461e      	movge	r6, r3
90018364:	462b      	mov	r3, r5
90018366:	4622      	mov	r2, r4
90018368:	2100      	movs	r1, #0
9001836a:	a805      	add	r0, sp, #20
9001836c:	f001 fba4 	bl	90019ab8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90018370:	e7e2      	b.n	90018338 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
90018372:	4630      	mov	r0, r6
90018374:	b01e      	add	sp, #120	@ 0x78
90018376:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9001837a:	b003      	add	sp, #12
9001837c:	4770      	bx	lr

9001837e <_ZNK8touchgfx8Drawable10invalidateEv>:
9001837e:	b513      	push	{r0, r1, r4, lr}
90018380:	6803      	ldr	r3, [r0, #0]
90018382:	2400      	movs	r4, #0
90018384:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
90018388:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9001838c:	f8ad 1004 	strh.w	r1, [sp, #4]
90018390:	4669      	mov	r1, sp
90018392:	691b      	ldr	r3, [r3, #16]
90018394:	9400      	str	r4, [sp, #0]
90018396:	f8ad 2006 	strh.w	r2, [sp, #6]
9001839a:	4798      	blx	r3
9001839c:	b002      	add	sp, #8
9001839e:	bd10      	pop	{r4, pc}

900183a0 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
900183a0:	b538      	push	{r3, r4, r5, lr}
900183a2:	680b      	ldr	r3, [r1, #0]
900183a4:	460c      	mov	r4, r1
900183a6:	4605      	mov	r5, r0
900183a8:	68db      	ldr	r3, [r3, #12]
900183aa:	4798      	blx	r3
900183ac:	6823      	ldr	r3, [r4, #0]
900183ae:	4620      	mov	r0, r4
900183b0:	4629      	mov	r1, r5
900183b2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900183b4:	4798      	blx	r3
900183b6:	4628      	mov	r0, r5
900183b8:	bd38      	pop	{r3, r4, r5, pc}

900183ba <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
900183ba:	b410      	push	{r4}
900183bc:	880a      	ldrh	r2, [r1, #0]
900183be:	8884      	ldrh	r4, [r0, #4]
900183c0:	4422      	add	r2, r4
900183c2:	800a      	strh	r2, [r1, #0]
900183c4:	884a      	ldrh	r2, [r1, #2]
900183c6:	88c4      	ldrh	r4, [r0, #6]
900183c8:	4422      	add	r2, r4
900183ca:	804a      	strh	r2, [r1, #2]
900183cc:	6940      	ldr	r0, [r0, #20]
900183ce:	b120      	cbz	r0, 900183da <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
900183d0:	6803      	ldr	r3, [r0, #0]
900183d2:	f85d 4b04 	ldr.w	r4, [sp], #4
900183d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900183d8:	4718      	bx	r3
900183da:	f85d 4b04 	ldr.w	r4, [sp], #4
900183de:	4770      	bx	lr

900183e0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
900183e0:	b570      	push	{r4, r5, r6, lr}
900183e2:	8882      	ldrh	r2, [r0, #4]
900183e4:	460c      	mov	r4, r1
900183e6:	880b      	ldrh	r3, [r1, #0]
900183e8:	4605      	mov	r5, r0
900183ea:	4413      	add	r3, r2
900183ec:	800b      	strh	r3, [r1, #0]
900183ee:	884b      	ldrh	r3, [r1, #2]
900183f0:	88c2      	ldrh	r2, [r0, #6]
900183f2:	4413      	add	r3, r2
900183f4:	804b      	strh	r3, [r1, #2]
900183f6:	1d01      	adds	r1, r0, #4
900183f8:	4620      	mov	r0, r4
900183fa:	f7f8 ff3b 	bl	90011274 <_ZN8touchgfx4RectaNERKS0_>
900183fe:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90018402:	2b00      	cmp	r3, #0
90018404:	dd0b      	ble.n	9001841e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90018406:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9001840a:	2b00      	cmp	r3, #0
9001840c:	dd07      	ble.n	9001841e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001840e:	6968      	ldr	r0, [r5, #20]
90018410:	b128      	cbz	r0, 9001841e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90018412:	6803      	ldr	r3, [r0, #0]
90018414:	4621      	mov	r1, r4
90018416:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90018418:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001841c:	4718      	bx	r3
9001841e:	bd70      	pop	{r4, r5, r6, pc}

90018420 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
90018420:	b570      	push	{r4, r5, r6, lr}
90018422:	8882      	ldrh	r2, [r0, #4]
90018424:	460c      	mov	r4, r1
90018426:	880b      	ldrh	r3, [r1, #0]
90018428:	4605      	mov	r5, r0
9001842a:	4413      	add	r3, r2
9001842c:	800b      	strh	r3, [r1, #0]
9001842e:	884b      	ldrh	r3, [r1, #2]
90018430:	88c2      	ldrh	r2, [r0, #6]
90018432:	4413      	add	r3, r2
90018434:	804b      	strh	r3, [r1, #2]
90018436:	1d01      	adds	r1, r0, #4
90018438:	4620      	mov	r0, r4
9001843a:	f7f8 ff1b 	bl	90011274 <_ZN8touchgfx4RectaNERKS0_>
9001843e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90018442:	2b00      	cmp	r3, #0
90018444:	dd19      	ble.n	9001847a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90018446:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9001844a:	2b00      	cmp	r3, #0
9001844c:	dd15      	ble.n	9001847a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
9001844e:	6968      	ldr	r0, [r5, #20]
90018450:	b128      	cbz	r0, 9001845e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
90018452:	6803      	ldr	r3, [r0, #0]
90018454:	4621      	mov	r1, r4
90018456:	691b      	ldr	r3, [r3, #16]
90018458:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001845c:	4718      	bx	r3
9001845e:	4b07      	ldr	r3, [pc, #28]	@ (9001847c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
90018460:	681b      	ldr	r3, [r3, #0]
90018462:	3304      	adds	r3, #4
90018464:	429d      	cmp	r5, r3
90018466:	d108      	bne.n	9001847a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90018468:	f7fe fdd0 	bl	9001700c <_ZN8touchgfx11Application11getInstanceEv>
9001846c:	6803      	ldr	r3, [r0, #0]
9001846e:	6821      	ldr	r1, [r4, #0]
90018470:	6862      	ldr	r2, [r4, #4]
90018472:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90018474:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90018478:	4718      	bx	r3
9001847a:	bd70      	pop	{r4, r5, r6, pc}
9001847c:	240218a8 	.word	0x240218a8

90018480 <_ZN8touchgfx8Drawable12moveRelativeEss>:
90018480:	b570      	push	{r4, r5, r6, lr}
90018482:	4604      	mov	r4, r0
90018484:	4616      	mov	r6, r2
90018486:	460d      	mov	r5, r1
90018488:	b901      	cbnz	r1, 9001848c <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
9001848a:	b192      	cbz	r2, 900184b2 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
9001848c:	6823      	ldr	r3, [r4, #0]
9001848e:	4620      	mov	r0, r4
90018490:	699b      	ldr	r3, [r3, #24]
90018492:	4798      	blx	r3
90018494:	88e2      	ldrh	r2, [r4, #6]
90018496:	88a1      	ldrh	r1, [r4, #4]
90018498:	4620      	mov	r0, r4
9001849a:	4432      	add	r2, r6
9001849c:	4429      	add	r1, r5
9001849e:	b212      	sxth	r2, r2
900184a0:	b209      	sxth	r1, r1
900184a2:	f7f9 f9cb 	bl	9001183c <_ZN8touchgfx8Drawable5setXYEss>
900184a6:	6823      	ldr	r3, [r4, #0]
900184a8:	4620      	mov	r0, r4
900184aa:	699b      	ldr	r3, [r3, #24]
900184ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900184b0:	4718      	bx	r3
900184b2:	bd70      	pop	{r4, r5, r6, pc}

900184b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
900184b4:	b510      	push	{r4, lr}
900184b6:	2300      	movs	r3, #0
900184b8:	4604      	mov	r4, r0
900184ba:	4608      	mov	r0, r1
900184bc:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
900184c0:	8023      	strh	r3, [r4, #0]
900184c2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900184c6:	8063      	strh	r3, [r4, #2]
900184c8:	6803      	ldr	r3, [r0, #0]
900184ca:	80a1      	strh	r1, [r4, #4]
900184cc:	4621      	mov	r1, r4
900184ce:	80e2      	strh	r2, [r4, #6]
900184d0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900184d2:	4798      	blx	r3
900184d4:	4620      	mov	r0, r4
900184d6:	bd10      	pop	{r4, pc}

900184d8 <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
900184d8:	4770      	bx	lr

900184da <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
900184da:	b510      	push	{r4, lr}
900184dc:	4604      	mov	r4, r0
900184de:	211c      	movs	r1, #28
900184e0:	f011 fbc4 	bl	90029c6c <_ZdlPvj>
900184e4:	4620      	mov	r0, r4
900184e6:	bd10      	pop	{r4, pc}

900184e8 <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
900184e8:	4a04      	ldr	r2, [pc, #16]	@ (900184fc <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
900184ea:	6002      	str	r2, [r0, #0]
900184ec:	2200      	movs	r2, #0
900184ee:	e9c0 2201 	strd	r2, r2, [r0, #4]
900184f2:	e9c0 2203 	strd	r2, r2, [r0, #12]
900184f6:	e9c0 2205 	strd	r2, r2, [r0, #20]
900184fa:	4770      	bx	lr
900184fc:	9002e2d0 	.word	0x9002e2d0

90018500 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
90018500:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018504:	4604      	mov	r4, r0
90018506:	b087      	sub	sp, #28
90018508:	8b45      	ldrh	r5, [r0, #26]
9001850a:	f8b2 c000 	ldrh.w	ip, [r2]
9001850e:	9105      	str	r1, [sp, #20]
90018510:	1c68      	adds	r0, r5, #1
90018512:	68e1      	ldr	r1, [r4, #12]
90018514:	9203      	str	r2, [sp, #12]
90018516:	b280      	uxth	r0, r0
90018518:	eb01 0185 	add.w	r1, r1, r5, lsl #2
9001851c:	f01c 0501 	ands.w	r5, ip, #1
90018520:	f9b3 2000 	ldrsh.w	r2, [r3]
90018524:	9502      	str	r5, [sp, #8]
90018526:	d07d      	beq.n	90018624 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x124>
90018528:	ee07 2a90 	vmov	s15, r2
9001852c:	8360      	strh	r0, [r4, #26]
9001852e:	f04f 0e00 	mov.w	lr, #0
90018532:	eef8 6ae7 	vcvt.f32.s32	s13, s15
90018536:	ee06 ea10 	vmov	s12, lr
9001853a:	edc1 6a00 	vstr	s13, [r1]
9001853e:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90018542:	8b61      	ldrh	r1, [r4, #26]
90018544:	ee07 2a10 	vmov	s14, r2
90018548:	68e2      	ldr	r2, [r4, #12]
9001854a:	1c48      	adds	r0, r1, #1
9001854c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90018550:	eb02 0281 	add.w	r2, r2, r1, lsl #2
90018554:	8360      	strh	r0, [r4, #26]
90018556:	ed82 7a00 	vstr	s14, [r2]
9001855a:	8b21      	ldrh	r1, [r4, #24]
9001855c:	2501      	movs	r5, #1
9001855e:	68a2      	ldr	r2, [r4, #8]
90018560:	3304      	adds	r3, #4
90018562:	1c48      	adds	r0, r1, #1
90018564:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
90018568:	9300      	str	r3, [sp, #0]
9001856a:	46aa      	mov	sl, r5
9001856c:	8320      	strh	r0, [r4, #24]
9001856e:	462e      	mov	r6, r5
90018570:	5455      	strb	r5, [r2, r1]
90018572:	2200      	movs	r2, #0
90018574:	ee07 2a90 	vmov	s15, r2
90018578:	4613      	mov	r3, r2
9001857a:	4611      	mov	r1, r2
9001857c:	9201      	str	r2, [sp, #4]
9001857e:	f8b4 8018 	ldrh.w	r8, [r4, #24]
90018582:	9805      	ldr	r0, [sp, #20]
90018584:	f108 0701 	add.w	r7, r8, #1
90018588:	f8d4 b008 	ldr.w	fp, [r4, #8]
9001858c:	42a8      	cmp	r0, r5
9001858e:	b2bf      	uxth	r7, r7
90018590:	eb0b 0908 	add.w	r9, fp, r8
90018594:	f340 80db 	ble.w	9001874e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x24e>
90018598:	fa4c f906 	asr.w	r9, ip, r6
9001859c:	f009 0901 	and.w	r9, r9, #1
900185a0:	fa5f f389 	uxtb.w	r3, r9
900185a4:	9304      	str	r3, [sp, #16]
900185a6:	9b00      	ldr	r3, [sp, #0]
900185a8:	f9b3 1000 	ldrsh.w	r1, [r3]
900185ac:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
900185b0:	f1b9 0f00 	cmp.w	r9, #0
900185b4:	d07d      	beq.n	900186b2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1b2>
900185b6:	ee05 1a10 	vmov	s10, r1
900185ba:	8327      	strh	r7, [r4, #24]
900185bc:	eef8 4ac5 	vcvt.f32.s32	s9, s10
900185c0:	ee05 3a10 	vmov	s10, r3
900185c4:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
900185c8:	f1ba 0f00 	cmp.w	sl, #0
900185cc:	d050      	beq.n	90018670 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x170>
900185ce:	f04f 0002 	mov.w	r0, #2
900185d2:	f80b 0008 	strb.w	r0, [fp, r8]
900185d6:	f8b4 801a 	ldrh.w	r8, [r4, #26]
900185da:	68e7      	ldr	r7, [r4, #12]
900185dc:	f108 0901 	add.w	r9, r8, #1
900185e0:	eb07 0788 	add.w	r7, r7, r8, lsl #2
900185e4:	f8a4 901a 	strh.w	r9, [r4, #26]
900185e8:	edc7 4a00 	vstr	s9, [r7]
900185ec:	f8b4 801a 	ldrh.w	r8, [r4, #26]
900185f0:	68e7      	ldr	r7, [r4, #12]
900185f2:	f108 0901 	add.w	r9, r8, #1
900185f6:	eb07 0788 	add.w	r7, r7, r8, lsl #2
900185fa:	f8a4 901a 	strh.w	r9, [r4, #26]
900185fe:	ed87 5a00 	vstr	s10, [r7]
90018602:	3601      	adds	r6, #1
90018604:	2e10      	cmp	r6, #16
90018606:	d106      	bne.n	90018616 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x116>
90018608:	9e01      	ldr	r6, [sp, #4]
9001860a:	9803      	ldr	r0, [sp, #12]
9001860c:	3601      	adds	r6, #1
9001860e:	9601      	str	r6, [sp, #4]
90018610:	f830 c016 	ldrh.w	ip, [r0, r6, lsl #1]
90018614:	2600      	movs	r6, #0
90018616:	9800      	ldr	r0, [sp, #0]
90018618:	3501      	adds	r5, #1
9001861a:	f8dd a010 	ldr.w	sl, [sp, #16]
9001861e:	3004      	adds	r0, #4
90018620:	9000      	str	r0, [sp, #0]
90018622:	e7ac      	b.n	9001857e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x7e>
90018624:	ee06 2a10 	vmov	s12, r2
90018628:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
9001862c:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
90018630:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
90018634:	ee16 5a10 	vmov	r5, s12
90018638:	442a      	add	r2, r5
9001863a:	ee06 2a90 	vmov	s13, r2
9001863e:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
90018642:	8360      	strh	r0, [r4, #26]
90018644:	4472      	add	r2, lr
90018646:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001864a:	ee07 2a10 	vmov	s14, r2
9001864e:	ee66 6aa7 	vmul.f32	s13, s13, s15
90018652:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90018656:	edc1 6a00 	vstr	s13, [r1]
9001865a:	8b61      	ldrh	r1, [r4, #26]
9001865c:	ee27 7a27 	vmul.f32	s14, s14, s15
90018660:	68e2      	ldr	r2, [r4, #12]
90018662:	1c48      	adds	r0, r1, #1
90018664:	eb02 0281 	add.w	r2, r2, r1, lsl #2
90018668:	8360      	strh	r0, [r4, #26]
9001866a:	ed82 7a00 	vstr	s14, [r2]
9001866e:	e774      	b.n	9001855a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x5a>
90018670:	f04f 0005 	mov.w	r0, #5
90018674:	eeb8 4ae7 	vcvt.f32.s32	s8, s15
90018678:	f80b 0008 	strb.w	r0, [fp, r8]
9001867c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90018680:	68e7      	ldr	r7, [r4, #12]
90018682:	f108 0901 	add.w	r9, r8, #1
90018686:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001868a:	f8a4 901a 	strh.w	r9, [r4, #26]
9001868e:	ed87 4a00 	vstr	s8, [r7]
90018692:	ee04 2a10 	vmov	s8, r2
90018696:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001869a:	68e7      	ldr	r7, [r4, #12]
9001869c:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
900186a0:	f108 0901 	add.w	r9, r8, #1
900186a4:	eb07 0788 	add.w	r7, r7, r8, lsl #2
900186a8:	f8a4 901a 	strh.w	r9, [r4, #26]
900186ac:	ed87 4a00 	vstr	s8, [r7]
900186b0:	e791      	b.n	900185d6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xd6>
900186b2:	f1ba 0f00 	cmp.w	sl, #0
900186b6:	d146      	bne.n	90018746 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x246>
900186b8:	f04f 0005 	mov.w	r0, #5
900186bc:	8327      	strh	r7, [r4, #24]
900186be:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
900186c2:	f80b 0008 	strb.w	r0, [fp, r8]
900186c6:	ee17 0a90 	vmov	r0, s15
900186ca:	f8b4 801a 	ldrh.w	r8, [r4, #26]
900186ce:	68e7      	ldr	r7, [r4, #12]
900186d0:	4408      	add	r0, r1
900186d2:	f108 0901 	add.w	r9, r8, #1
900186d6:	eb07 0788 	add.w	r7, r7, r8, lsl #2
900186da:	ee07 0a90 	vmov	s15, r0
900186de:	f8a4 901a 	strh.w	r9, [r4, #26]
900186e2:	ed87 5a00 	vstr	s10, [r7]
900186e6:	ee05 2a10 	vmov	s10, r2
900186ea:	f8b4 801a 	ldrh.w	r8, [r4, #26]
900186ee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900186f2:	68e7      	ldr	r7, [r4, #12]
900186f4:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
900186f8:	f108 0901 	add.w	r9, r8, #1
900186fc:	441a      	add	r2, r3
900186fe:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90018702:	ee67 7aa5 	vmul.f32	s15, s15, s11
90018706:	f8a4 901a 	strh.w	r9, [r4, #26]
9001870a:	ed87 5a00 	vstr	s10, [r7]
9001870e:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90018712:	68e7      	ldr	r7, [r4, #12]
90018714:	f108 0901 	add.w	r9, r8, #1
90018718:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001871c:	f8a4 901a 	strh.w	r9, [r4, #26]
90018720:	edc7 7a00 	vstr	s15, [r7]
90018724:	ee07 2a90 	vmov	s15, r2
90018728:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001872c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018730:	68e7      	ldr	r7, [r4, #12]
90018732:	f108 0901 	add.w	r9, r8, #1
90018736:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001873a:	ee67 7aa5 	vmul.f32	s15, s15, s11
9001873e:	f8a4 901a 	strh.w	r9, [r4, #26]
90018742:	edc7 7a00 	vstr	s15, [r7]
90018746:	461a      	mov	r2, r3
90018748:	ee07 1a90 	vmov	s15, r1
9001874c:	e759      	b.n	90018602 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
9001874e:	f1ba 0f00 	cmp.w	sl, #0
90018752:	d045      	beq.n	900187e0 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
90018754:	ee05 1a90 	vmov	s11, r1
90018758:	eef8 5ae5 	vcvt.f32.s32	s11, s11
9001875c:	eef4 5a66 	vcmp.f32	s11, s13
90018760:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90018764:	d108      	bne.n	90018778 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x278>
90018766:	ee05 3a90 	vmov	s11, r3
9001876a:	eef8 5ae5 	vcvt.f32.s32	s11, s11
9001876e:	eef4 5a47 	vcmp.f32	s11, s14
90018772:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90018776:	d033      	beq.n	900187e0 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
90018778:	9b02      	ldr	r3, [sp, #8]
9001877a:	8327      	strh	r7, [r4, #24]
9001877c:	b1b3      	cbz	r3, 900187ac <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2ac>
9001877e:	2302      	movs	r3, #2
90018780:	f889 3000 	strb.w	r3, [r9]
90018784:	8b62      	ldrh	r2, [r4, #26]
90018786:	68e3      	ldr	r3, [r4, #12]
90018788:	1c51      	adds	r1, r2, #1
9001878a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
9001878e:	8361      	strh	r1, [r4, #26]
90018790:	edc3 6a00 	vstr	s13, [r3]
90018794:	8b62      	ldrh	r2, [r4, #26]
90018796:	68e3      	ldr	r3, [r4, #12]
90018798:	1c51      	adds	r1, r2, #1
9001879a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
9001879e:	8361      	strh	r1, [r4, #26]
900187a0:	ed83 7a00 	vstr	s14, [r3]
900187a4:	9800      	ldr	r0, [sp, #0]
900187a6:	b007      	add	sp, #28
900187a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900187ac:	2305      	movs	r3, #5
900187ae:	f889 3000 	strb.w	r3, [r9]
900187b2:	8b62      	ldrh	r2, [r4, #26]
900187b4:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
900187b8:	68e3      	ldr	r3, [r4, #12]
900187ba:	ee07 ea90 	vmov	s15, lr
900187be:	1c51      	adds	r1, r2, #1
900187c0:	eb03 0382 	add.w	r3, r3, r2, lsl #2
900187c4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900187c8:	8361      	strh	r1, [r4, #26]
900187ca:	ed83 6a00 	vstr	s12, [r3]
900187ce:	8b62      	ldrh	r2, [r4, #26]
900187d0:	68e3      	ldr	r3, [r4, #12]
900187d2:	1c51      	adds	r1, r2, #1
900187d4:	eb03 0382 	add.w	r3, r3, r2, lsl #2
900187d8:	8361      	strh	r1, [r4, #26]
900187da:	edc3 7a00 	vstr	s15, [r3]
900187de:	e7d1      	b.n	90018784 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
900187e0:	ee05 2a90 	vmov	s11, r2
900187e4:	2305      	movs	r3, #5
900187e6:	9902      	ldr	r1, [sp, #8]
900187e8:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
900187ec:	8327      	strh	r7, [r4, #24]
900187ee:	eef8 5ae5 	vcvt.f32.s32	s11, s11
900187f2:	f889 3000 	strb.w	r3, [r9]
900187f6:	b181      	cbz	r1, 9001881a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x31a>
900187f8:	8b62      	ldrh	r2, [r4, #26]
900187fa:	68e3      	ldr	r3, [r4, #12]
900187fc:	1c51      	adds	r1, r2, #1
900187fe:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90018802:	8361      	strh	r1, [r4, #26]
90018804:	ed83 5a00 	vstr	s10, [r3]
90018808:	8b62      	ldrh	r2, [r4, #26]
9001880a:	68e3      	ldr	r3, [r4, #12]
9001880c:	1c51      	adds	r1, r2, #1
9001880e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90018812:	8361      	strh	r1, [r4, #26]
90018814:	edc3 5a00 	vstr	s11, [r3]
90018818:	e7b4      	b.n	90018784 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
9001881a:	8b65      	ldrh	r5, [r4, #26]
9001881c:	ee17 0a90 	vmov	r0, s15
90018820:	68e1      	ldr	r1, [r4, #12]
90018822:	4472      	add	r2, lr
90018824:	1c6e      	adds	r6, r5, #1
90018826:	eb01 0185 	add.w	r1, r1, r5, lsl #2
9001882a:	8366      	strh	r6, [r4, #26]
9001882c:	ed81 5a00 	vstr	s10, [r1]
90018830:	8b65      	ldrh	r5, [r4, #26]
90018832:	68e1      	ldr	r1, [r4, #12]
90018834:	1c6e      	adds	r6, r5, #1
90018836:	eb01 0185 	add.w	r1, r1, r5, lsl #2
9001883a:	8366      	strh	r6, [r4, #26]
9001883c:	edc1 5a00 	vstr	s11, [r1]
90018840:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
90018844:	8b65      	ldrh	r5, [r4, #26]
90018846:	68e1      	ldr	r1, [r4, #12]
90018848:	1c6e      	adds	r6, r5, #1
9001884a:	eb01 0185 	add.w	r1, r1, r5, lsl #2
9001884e:	ee16 5a10 	vmov	r5, s12
90018852:	8366      	strh	r6, [r4, #26]
90018854:	4428      	add	r0, r5
90018856:	ee07 0a90 	vmov	s15, r0
9001885a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001885e:	ee67 7aa5 	vmul.f32	s15, s15, s11
90018862:	edc1 7a00 	vstr	s15, [r1]
90018866:	ee07 2a90 	vmov	s15, r2
9001886a:	8b61      	ldrh	r1, [r4, #26]
9001886c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018870:	68e5      	ldr	r5, [r4, #12]
90018872:	1c4e      	adds	r6, r1, #1
90018874:	eb05 0181 	add.w	r1, r5, r1, lsl #2
90018878:	ee67 7aa5 	vmul.f32	s15, s15, s11
9001887c:	8366      	strh	r6, [r4, #26]
9001887e:	edc1 7a00 	vstr	s15, [r1]
90018882:	8b22      	ldrh	r2, [r4, #24]
90018884:	68a1      	ldr	r1, [r4, #8]
90018886:	1c55      	adds	r5, r2, #1
90018888:	8325      	strh	r5, [r4, #24]
9001888a:	548b      	strb	r3, [r1, r2]
9001888c:	e791      	b.n	900187b2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2b2>
	...

90018890 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
90018890:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90018894:	4604      	mov	r4, r0
90018896:	b08e      	sub	sp, #56	@ 0x38
90018898:	4699      	mov	r9, r3
9001889a:	4688      	mov	r8, r1
9001889c:	4615      	mov	r5, r2
9001889e:	9e16      	ldr	r6, [sp, #88]	@ 0x58
900188a0:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
900188a4:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
900188a6:	f7ea fe51 	bl	9000354c <_ZN8touchgfx14VectorRenderer11getInstanceEv>
900188aa:	6060      	str	r0, [r4, #4]
900188ac:	f1b9 0f00 	cmp.w	r9, #0
900188b0:	f000 80e8 	beq.w	90018a84 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
900188b4:	2800      	cmp	r0, #0
900188b6:	f000 80e5 	beq.w	90018a84 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
900188ba:	a805      	add	r0, sp, #20
900188bc:	f000 f8f9 	bl	90018ab2 <_ZN8touchgfx9Matrix3x3C1Ev>
900188c0:	6833      	ldr	r3, [r6, #0]
900188c2:	4630      	mov	r0, r6
900188c4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
900188c6:	4798      	blx	r3
900188c8:	a805      	add	r0, sp, #20
900188ca:	eef0 0a40 	vmov.f32	s1, s0
900188ce:	f000 f8f4 	bl	90018aba <_ZN8touchgfx9Matrix3x35scaleEff>
900188d2:	6860      	ldr	r0, [r4, #4]
900188d4:	f1ba 0f03 	cmp.w	sl, #3
900188d8:	d83b      	bhi.n	90018952 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
900188da:	e8df f00a 	tbb	[pc, sl]
900188de:	1002      	.short	0x1002
900188e0:	9f71      	.short	0x9f71
900188e2:	6803      	ldr	r3, [r0, #0]
900188e4:	462a      	mov	r2, r5
900188e6:	4641      	mov	r1, r8
900188e8:	689b      	ldr	r3, [r3, #8]
900188ea:	4798      	blx	r3
900188ec:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
900188f0:	eef8 0ae7 	vcvt.f32.s32	s1, s15
900188f4:	ee07 7a90 	vmov	s15, r7
900188f8:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
900188fc:	e026      	b.n	9001894c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
900188fe:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
90018902:	f8b8 3004 	ldrh.w	r3, [r8, #4]
90018906:	8869      	ldrh	r1, [r5, #2]
90018908:	1a9b      	subs	r3, r3, r2
9001890a:	f8ad 2010 	strh.w	r2, [sp, #16]
9001890e:	aa03      	add	r2, sp, #12
90018910:	1a5b      	subs	r3, r3, r1
90018912:	4641      	mov	r1, r8
90018914:	f8ad 300c 	strh.w	r3, [sp, #12]
90018918:	882b      	ldrh	r3, [r5, #0]
9001891a:	f8ad 300e 	strh.w	r3, [sp, #14]
9001891e:	88ab      	ldrh	r3, [r5, #4]
90018920:	f8ad 3012 	strh.w	r3, [sp, #18]
90018924:	6803      	ldr	r3, [r0, #0]
90018926:	689b      	ldr	r3, [r3, #8]
90018928:	4798      	blx	r3
9001892a:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 90018a8c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
9001892e:	a805      	add	r0, sp, #20
90018930:	f000 f8e8 	bl	90018b04 <_ZN8touchgfx9Matrix3x36rotateEf>
90018934:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
90018938:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
9001893a:	ee07 7a90 	vmov	s15, r7
9001893e:	1a9b      	subs	r3, r3, r2
90018940:	eef8 0ae7 	vcvt.f32.s32	s1, s15
90018944:	ee00 3a10 	vmov	s0, r3
90018948:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
9001894c:	a805      	add	r0, sp, #20
9001894e:	f000 f927 	bl	90018ba0 <_ZN8touchgfx9Matrix3x39translateEff>
90018952:	6860      	ldr	r0, [r4, #4]
90018954:	a905      	add	r1, sp, #20
90018956:	2500      	movs	r5, #0
90018958:	f109 0602 	add.w	r6, r9, #2
9001895c:	6803      	ldr	r3, [r0, #0]
9001895e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90018960:	4798      	blx	r3
90018962:	6860      	ldr	r0, [r4, #4]
90018964:	9917      	ldr	r1, [sp, #92]	@ 0x5c
90018966:	6803      	ldr	r3, [r0, #0]
90018968:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
9001896c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001896e:	4798      	blx	r3
90018970:	6860      	ldr	r0, [r4, #4]
90018972:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
90018976:	6803      	ldr	r3, [r0, #0]
90018978:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001897a:	4798      	blx	r3
9001897c:	6860      	ldr	r0, [r4, #4]
9001897e:	2101      	movs	r1, #1
90018980:	6803      	ldr	r3, [r0, #0]
90018982:	68db      	ldr	r3, [r3, #12]
90018984:	4798      	blx	r3
90018986:	f8b9 7000 	ldrh.w	r7, [r9]
9001898a:	f104 0310 	add.w	r3, r4, #16
9001898e:	61a5      	str	r5, [r4, #24]
90018990:	f104 0208 	add.w	r2, r4, #8
90018994:	f104 0114 	add.w	r1, r4, #20
90018998:	f104 000c 	add.w	r0, r4, #12
9001899c:	f7ec fe1c 	bl	900055d8 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
900189a0:	42af      	cmp	r7, r5
900189a2:	dd60      	ble.n	90018a66 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
900189a4:	8831      	ldrh	r1, [r6, #0]
900189a6:	1cb2      	adds	r2, r6, #2
900189a8:	4620      	mov	r0, r4
900189aa:	3501      	adds	r5, #1
900189ac:	f101 030f 	add.w	r3, r1, #15
900189b0:	f3c3 1307 	ubfx	r3, r3, #4, #8
900189b4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900189b8:	f7ff fda2 	bl	90018500 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
900189bc:	4606      	mov	r6, r0
900189be:	e7ef      	b.n	900189a0 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
900189c0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
900189c4:	f8b8 3004 	ldrh.w	r3, [r8, #4]
900189c8:	8829      	ldrh	r1, [r5, #0]
900189ca:	1a9b      	subs	r3, r3, r2
900189cc:	f8ad 2010 	strh.w	r2, [sp, #16]
900189d0:	aa03      	add	r2, sp, #12
900189d2:	1a5b      	subs	r3, r3, r1
900189d4:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
900189d8:	886d      	ldrh	r5, [r5, #2]
900189da:	f8ad 300c 	strh.w	r3, [sp, #12]
900189de:	f8b8 3006 	ldrh.w	r3, [r8, #6]
900189e2:	f8ad 1012 	strh.w	r1, [sp, #18]
900189e6:	1a5b      	subs	r3, r3, r1
900189e8:	4641      	mov	r1, r8
900189ea:	1b5b      	subs	r3, r3, r5
900189ec:	f8ad 300e 	strh.w	r3, [sp, #14]
900189f0:	6803      	ldr	r3, [r0, #0]
900189f2:	689b      	ldr	r3, [r3, #8]
900189f4:	4798      	blx	r3
900189f6:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 90018a90 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
900189fa:	a805      	add	r0, sp, #20
900189fc:	f000 f882 	bl	90018b04 <_ZN8touchgfx9Matrix3x36rotateEf>
90018a00:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90018a04:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
90018a06:	1a9b      	subs	r3, r3, r2
90018a08:	ee00 3a90 	vmov	s1, r3
90018a0c:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
90018a10:	1bdb      	subs	r3, r3, r7
90018a12:	eef8 0ae0 	vcvt.f32.s32	s1, s1
90018a16:	ee00 3a10 	vmov	s0, r3
90018a1a:	e795      	b.n	90018948 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
90018a1c:	886b      	ldrh	r3, [r5, #2]
90018a1e:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90018a22:	f8ad 300c 	strh.w	r3, [sp, #12]
90018a26:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90018a2a:	8829      	ldrh	r1, [r5, #0]
90018a2c:	1a9b      	subs	r3, r3, r2
90018a2e:	f8ad 2012 	strh.w	r2, [sp, #18]
90018a32:	aa03      	add	r2, sp, #12
90018a34:	1a5b      	subs	r3, r3, r1
90018a36:	4641      	mov	r1, r8
90018a38:	f8ad 300e 	strh.w	r3, [sp, #14]
90018a3c:	88eb      	ldrh	r3, [r5, #6]
90018a3e:	f8ad 3010 	strh.w	r3, [sp, #16]
90018a42:	6803      	ldr	r3, [r0, #0]
90018a44:	689b      	ldr	r3, [r3, #8]
90018a46:	4798      	blx	r3
90018a48:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 90018a94 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
90018a4c:	a805      	add	r0, sp, #20
90018a4e:	f000 f859 	bl	90018b04 <_ZN8touchgfx9Matrix3x36rotateEf>
90018a52:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90018a56:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
90018a5a:	1bdb      	subs	r3, r3, r7
90018a5c:	ee00 3a90 	vmov	s1, r3
90018a60:	eef8 0ae0 	vcvt.f32.s32	s1, s1
90018a64:	e748      	b.n	900188f8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
90018a66:	6860      	ldr	r0, [r4, #4]
90018a68:	2100      	movs	r1, #0
90018a6a:	8b22      	ldrh	r2, [r4, #24]
90018a6c:	6803      	ldr	r3, [r0, #0]
90018a6e:	9101      	str	r1, [sp, #4]
90018a70:	8b61      	ldrh	r1, [r4, #26]
90018a72:	9100      	str	r1, [sp, #0]
90018a74:	6a1d      	ldr	r5, [r3, #32]
90018a76:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
90018a7a:	47a8      	blx	r5
90018a7c:	6860      	ldr	r0, [r4, #4]
90018a7e:	6803      	ldr	r3, [r0, #0]
90018a80:	69db      	ldr	r3, [r3, #28]
90018a82:	4798      	blx	r3
90018a84:	b00e      	add	sp, #56	@ 0x38
90018a86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90018a8a:	bf00      	nop
90018a8c:	42b40000 	.word	0x42b40000
90018a90:	43340000 	.word	0x43340000
90018a94:	43870000 	.word	0x43870000

90018a98 <_ZN8touchgfx9Matrix3x35resetEv>:
90018a98:	2300      	movs	r3, #0
90018a9a:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
90018a9e:	6043      	str	r3, [r0, #4]
90018aa0:	6002      	str	r2, [r0, #0]
90018aa2:	6083      	str	r3, [r0, #8]
90018aa4:	60c3      	str	r3, [r0, #12]
90018aa6:	6102      	str	r2, [r0, #16]
90018aa8:	6143      	str	r3, [r0, #20]
90018aaa:	6183      	str	r3, [r0, #24]
90018aac:	61c3      	str	r3, [r0, #28]
90018aae:	6202      	str	r2, [r0, #32]
90018ab0:	4770      	bx	lr

90018ab2 <_ZN8touchgfx9Matrix3x3C1Ev>:
90018ab2:	b508      	push	{r3, lr}
90018ab4:	f7ff fff0 	bl	90018a98 <_ZN8touchgfx9Matrix3x35resetEv>
90018ab8:	bd08      	pop	{r3, pc}

90018aba <_ZN8touchgfx9Matrix3x35scaleEff>:
90018aba:	edd0 7a00 	vldr	s15, [r0]
90018abe:	ee67 7a80 	vmul.f32	s15, s15, s0
90018ac2:	edc0 7a00 	vstr	s15, [r0]
90018ac6:	edd0 7a01 	vldr	s15, [r0, #4]
90018aca:	ee67 7a80 	vmul.f32	s15, s15, s0
90018ace:	edc0 7a01 	vstr	s15, [r0, #4]
90018ad2:	edd0 7a02 	vldr	s15, [r0, #8]
90018ad6:	ee27 0a80 	vmul.f32	s0, s15, s0
90018ada:	edd0 7a03 	vldr	s15, [r0, #12]
90018ade:	ee67 7aa0 	vmul.f32	s15, s15, s1
90018ae2:	ed80 0a02 	vstr	s0, [r0, #8]
90018ae6:	edc0 7a03 	vstr	s15, [r0, #12]
90018aea:	edd0 7a04 	vldr	s15, [r0, #16]
90018aee:	ee67 7aa0 	vmul.f32	s15, s15, s1
90018af2:	edc0 7a04 	vstr	s15, [r0, #16]
90018af6:	edd0 7a05 	vldr	s15, [r0, #20]
90018afa:	ee67 0aa0 	vmul.f32	s1, s15, s1
90018afe:	edc0 0a05 	vstr	s1, [r0, #20]
90018b02:	4770      	bx	lr

90018b04 <_ZN8touchgfx9Matrix3x36rotateEf>:
90018b04:	eddf 7a24 	vldr	s15, [pc, #144]	@ 90018b98 <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
90018b08:	ee20 0a27 	vmul.f32	s0, s0, s15
90018b0c:	eddf 7a23 	vldr	s15, [pc, #140]	@ 90018b9c <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
90018b10:	b510      	push	{r4, lr}
90018b12:	ed2d 8b02 	vpush	{d8}
90018b16:	eec0 8a27 	vdiv.f32	s17, s0, s15
90018b1a:	4604      	mov	r4, r0
90018b1c:	eeb0 0a68 	vmov.f32	s0, s17
90018b20:	f011 f9da 	bl	90029ed8 <cosf>
90018b24:	eeb0 8a40 	vmov.f32	s16, s0
90018b28:	eeb0 0a68 	vmov.f32	s0, s17
90018b2c:	f011 f910 	bl	90029d50 <sinf>
90018b30:	edd4 6a03 	vldr	s13, [r4, #12]
90018b34:	edd4 4a00 	vldr	s9, [r4]
90018b38:	ee60 7a66 	vnmul.f32	s15, s0, s13
90018b3c:	ed94 7a04 	vldr	s14, [r4, #16]
90018b40:	ed94 5a01 	vldr	s10, [r4, #4]
90018b44:	ee66 6a88 	vmul.f32	s13, s13, s16
90018b48:	edd4 5a02 	vldr	s11, [r4, #8]
90018b4c:	eee8 7a24 	vfma.f32	s15, s16, s9
90018b50:	eee0 6a24 	vfma.f32	s13, s0, s9
90018b54:	edc4 7a00 	vstr	s15, [r4]
90018b58:	ee60 7a47 	vnmul.f32	s15, s0, s14
90018b5c:	ee27 7a08 	vmul.f32	s14, s14, s16
90018b60:	edc4 6a03 	vstr	s13, [r4, #12]
90018b64:	eee8 7a05 	vfma.f32	s15, s16, s10
90018b68:	eea0 7a05 	vfma.f32	s14, s0, s10
90018b6c:	edc4 7a01 	vstr	s15, [r4, #4]
90018b70:	edd4 7a05 	vldr	s15, [r4, #20]
90018b74:	ed84 7a04 	vstr	s14, [r4, #16]
90018b78:	ee20 6a67 	vnmul.f32	s12, s0, s15
90018b7c:	ee67 7a88 	vmul.f32	s15, s15, s16
90018b80:	eea8 6a25 	vfma.f32	s12, s16, s11
90018b84:	eee0 7a25 	vfma.f32	s15, s0, s11
90018b88:	ecbd 8b02 	vpop	{d8}
90018b8c:	ed84 6a02 	vstr	s12, [r4, #8]
90018b90:	edc4 7a05 	vstr	s15, [r4, #20]
90018b94:	bd10      	pop	{r4, pc}
90018b96:	bf00      	nop
90018b98:	40490fdb 	.word	0x40490fdb
90018b9c:	43340000 	.word	0x43340000

90018ba0 <_ZN8touchgfx9Matrix3x39translateEff>:
90018ba0:	ed90 6a06 	vldr	s12, [r0, #24]
90018ba4:	edd0 7a00 	vldr	s15, [r0]
90018ba8:	edd0 6a07 	vldr	s13, [r0, #28]
90018bac:	eee6 7a00 	vfma.f32	s15, s12, s0
90018bb0:	ed90 7a08 	vldr	s14, [r0, #32]
90018bb4:	edc0 7a00 	vstr	s15, [r0]
90018bb8:	edd0 7a01 	vldr	s15, [r0, #4]
90018bbc:	eee6 7a80 	vfma.f32	s15, s13, s0
90018bc0:	edc0 7a01 	vstr	s15, [r0, #4]
90018bc4:	edd0 7a02 	vldr	s15, [r0, #8]
90018bc8:	eee7 7a00 	vfma.f32	s15, s14, s0
90018bcc:	edc0 7a02 	vstr	s15, [r0, #8]
90018bd0:	edd0 7a03 	vldr	s15, [r0, #12]
90018bd4:	eee6 7a20 	vfma.f32	s15, s12, s1
90018bd8:	edc0 7a03 	vstr	s15, [r0, #12]
90018bdc:	edd0 7a04 	vldr	s15, [r0, #16]
90018be0:	eee6 7aa0 	vfma.f32	s15, s13, s1
90018be4:	edc0 7a04 	vstr	s15, [r0, #16]
90018be8:	edd0 7a05 	vldr	s15, [r0, #20]
90018bec:	eee7 7a20 	vfma.f32	s15, s14, s1
90018bf0:	edc0 7a05 	vstr	s15, [r0, #20]
90018bf4:	4770      	bx	lr

90018bf6 <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
90018bf6:	edd0 6a01 	vldr	s13, [r0, #4]
90018bfa:	b084      	sub	sp, #16
90018bfc:	edd0 7a04 	vldr	s15, [r0, #16]
90018c00:	ed90 7a03 	vldr	s14, [r0, #12]
90018c04:	ee60 7aa7 	vmul.f32	s15, s1, s15
90018c08:	ee60 0aa6 	vmul.f32	s1, s1, s13
90018c0c:	edd0 6a00 	vldr	s13, [r0]
90018c10:	eee7 7a00 	vfma.f32	s15, s14, s0
90018c14:	ed90 7a05 	vldr	s14, [r0, #20]
90018c18:	eee6 0a80 	vfma.f32	s1, s13, s0
90018c1c:	ed90 0a02 	vldr	s0, [r0, #8]
90018c20:	ee30 0a80 	vadd.f32	s0, s1, s0
90018c24:	ee77 0a87 	vadd.f32	s1, s15, s14
90018c28:	b004      	add	sp, #16
90018c2a:	4770      	bx	lr

90018c2c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
90018c2c:	b530      	push	{r4, r5, lr}
90018c2e:	8083      	strh	r3, [r0, #4]
90018c30:	f8bd 300c 	ldrh.w	r3, [sp, #12]
90018c34:	f89d 5018 	ldrb.w	r5, [sp, #24]
90018c38:	80c3      	strh	r3, [r0, #6]
90018c3a:	f89d 3010 	ldrb.w	r3, [sp, #16]
90018c3e:	6141      	str	r1, [r0, #20]
90018c40:	7203      	strb	r3, [r0, #8]
90018c42:	f89d 3014 	ldrb.w	r3, [sp, #20]
90018c46:	8302      	strh	r2, [r0, #24]
90018c48:	7243      	strb	r3, [r0, #9]
90018c4a:	7a83      	ldrb	r3, [r0, #10]
90018c4c:	f365 0306 	bfi	r3, r5, #0, #7
90018c50:	f89d 501c 	ldrb.w	r5, [sp, #28]
90018c54:	f365 13c7 	bfi	r3, r5, #7, #1
90018c58:	7283      	strb	r3, [r0, #10]
90018c5a:	f89d 3020 	ldrb.w	r3, [sp, #32]
90018c5e:	72c3      	strb	r3, [r0, #11]
90018c60:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
90018c64:	7303      	strb	r3, [r0, #12]
90018c66:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90018c6a:	81c3      	strh	r3, [r0, #14]
90018c6c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
90018c70:	8203      	strh	r3, [r0, #16]
90018c72:	4b01      	ldr	r3, [pc, #4]	@ (90018c78 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
90018c74:	6003      	str	r3, [r0, #0]
90018c76:	bd30      	pop	{r4, r5, pc}
90018c78:	9002e2e4 	.word	0x9002e2e4

90018c7c <_ZNK8touchgfx9ConstFont4findEt>:
90018c7c:	b5f0      	push	{r4, r5, r6, r7, lr}
90018c7e:	6944      	ldr	r4, [r0, #20]
90018c80:	b3bc      	cbz	r4, 90018cf2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90018c82:	88a3      	ldrh	r3, [r4, #4]
90018c84:	8b02      	ldrh	r2, [r0, #24]
90018c86:	1acb      	subs	r3, r1, r3
90018c88:	f102 32ff 	add.w	r2, r2, #4294967295
90018c8c:	d431      	bmi.n	90018cf2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90018c8e:	4293      	cmp	r3, r2
90018c90:	dd0c      	ble.n	90018cac <_ZNK8touchgfx9ConstFont4findEt+0x30>
90018c92:	230e      	movs	r3, #14
90018c94:	fb03 4302 	mla	r3, r3, r2, r4
90018c98:	889b      	ldrh	r3, [r3, #4]
90018c9a:	1a5b      	subs	r3, r3, r1
90018c9c:	1ad3      	subs	r3, r2, r3
90018c9e:	429a      	cmp	r2, r3
90018ca0:	db27      	blt.n	90018cf2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90018ca2:	2b00      	cmp	r3, #0
90018ca4:	bfbc      	itt	lt
90018ca6:	2302      	movlt	r3, #2
90018ca8:	fb92 f3f3 	sdivlt	r3, r2, r3
90018cac:	2500      	movs	r5, #0
90018cae:	260e      	movs	r6, #14
90018cb0:	4295      	cmp	r5, r2
90018cb2:	dc1e      	bgt.n	90018cf2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90018cb4:	fb06 4003 	mla	r0, r6, r3, r4
90018cb8:	8887      	ldrh	r7, [r0, #4]
90018cba:	42b9      	cmp	r1, r7
90018cbc:	d01a      	beq.n	90018cf4 <_ZNK8touchgfx9ConstFont4findEt+0x78>
90018cbe:	d20d      	bcs.n	90018cdc <_ZNK8touchgfx9ConstFont4findEt+0x60>
90018cc0:	1e5a      	subs	r2, r3, #1
90018cc2:	4295      	cmp	r5, r2
90018cc4:	dc15      	bgt.n	90018cf2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90018cc6:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
90018cca:	1a5b      	subs	r3, r3, r1
90018ccc:	1ad3      	subs	r3, r2, r3
90018cce:	429a      	cmp	r2, r3
90018cd0:	db0f      	blt.n	90018cf2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90018cd2:	429d      	cmp	r5, r3
90018cd4:	ddec      	ble.n	90018cb0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90018cd6:	1953      	adds	r3, r2, r5
90018cd8:	105b      	asrs	r3, r3, #1
90018cda:	e7e9      	b.n	90018cb0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90018cdc:	1c5d      	adds	r5, r3, #1
90018cde:	42aa      	cmp	r2, r5
90018ce0:	db07      	blt.n	90018cf2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90018ce2:	8a43      	ldrh	r3, [r0, #18]
90018ce4:	1acb      	subs	r3, r1, r3
90018ce6:	442b      	add	r3, r5
90018ce8:	429d      	cmp	r5, r3
90018cea:	dc02      	bgt.n	90018cf2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90018cec:	429a      	cmp	r2, r3
90018cee:	dadf      	bge.n	90018cb0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90018cf0:	e7f1      	b.n	90018cd6 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
90018cf2:	2000      	movs	r0, #0
90018cf4:	bdf0      	pop	{r4, r5, r6, r7, pc}

90018cf6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
90018cf6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90018cf8:	4604      	mov	r4, r0
90018cfa:	4617      	mov	r7, r2
90018cfc:	461e      	mov	r6, r3
90018cfe:	b911      	cbnz	r1, 90018d06 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
90018d00:	2500      	movs	r5, #0
90018d02:	4628      	mov	r0, r5
90018d04:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90018d06:	290a      	cmp	r1, #10
90018d08:	d0fa      	beq.n	90018d00 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90018d0a:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
90018d0e:	4291      	cmp	r1, r2
90018d10:	d0f6      	beq.n	90018d00 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90018d12:	f242 020b 	movw	r2, #8203	@ 0x200b
90018d16:	4291      	cmp	r1, r2
90018d18:	d0f2      	beq.n	90018d00 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90018d1a:	f7ff ffaf 	bl	90018c7c <_ZNK8touchgfx9ConstFont4findEt>
90018d1e:	4605      	mov	r5, r0
90018d20:	b950      	cbnz	r0, 90018d38 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
90018d22:	6823      	ldr	r3, [r4, #0]
90018d24:	4620      	mov	r0, r4
90018d26:	691b      	ldr	r3, [r3, #16]
90018d28:	4798      	blx	r3
90018d2a:	4601      	mov	r1, r0
90018d2c:	4620      	mov	r0, r4
90018d2e:	f7ff ffa5 	bl	90018c7c <_ZNK8touchgfx9ConstFont4findEt>
90018d32:	4605      	mov	r5, r0
90018d34:	2800      	cmp	r0, #0
90018d36:	d0e3      	beq.n	90018d00 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90018d38:	6823      	ldr	r3, [r4, #0]
90018d3a:	4629      	mov	r1, r5
90018d3c:	4620      	mov	r0, r4
90018d3e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
90018d40:	4798      	blx	r3
90018d42:	6038      	str	r0, [r7, #0]
90018d44:	6823      	ldr	r3, [r4, #0]
90018d46:	4620      	mov	r0, r4
90018d48:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90018d4a:	4798      	blx	r3
90018d4c:	7030      	strb	r0, [r6, #0]
90018d4e:	e7d8      	b.n	90018d02 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

90018d50 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
90018d50:	b538      	push	{r3, r4, r5, lr}
90018d52:	4605      	mov	r5, r0
90018d54:	f002 f852 	bl	9001adfc <_ZNK8touchgfx6Bitmap9getFormatEv>
90018d58:	4604      	mov	r4, r0
90018d5a:	4628      	mov	r0, r5
90018d5c:	f001 ff92 	bl	9001ac84 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90018d60:	2800      	cmp	r0, #0
90018d62:	bf14      	ite	ne
90018d64:	2002      	movne	r0, #2
90018d66:	2000      	moveq	r0, #0
90018d68:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
90018d6c:	b280      	uxth	r0, r0
90018d6e:	bd38      	pop	{r3, r4, r5, pc}

90018d70 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
90018d70:	b538      	push	{r3, r4, r5, lr}
90018d72:	4605      	mov	r5, r0
90018d74:	f002 f842 	bl	9001adfc <_ZNK8touchgfx6Bitmap9getFormatEv>
90018d78:	4604      	mov	r4, r0
90018d7a:	4628      	mov	r0, r5
90018d7c:	f001 ff82 	bl	9001ac84 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90018d80:	2800      	cmp	r0, #0
90018d82:	bf14      	ite	ne
90018d84:	2002      	movne	r0, #2
90018d86:	2000      	moveq	r0, #0
90018d88:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
90018d8c:	f040 0001 	orr.w	r0, r0, #1
90018d90:	b280      	uxth	r0, r0
90018d92:	bd38      	pop	{r3, r4, r5, pc}

90018d94 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
90018d94:	2000      	movs	r0, #0
90018d96:	4770      	bx	lr

90018d98 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
90018d98:	2001      	movs	r0, #1
90018d9a:	4770      	bx	lr

90018d9c <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
90018d9c:	2002      	movs	r0, #2
90018d9e:	4770      	bx	lr

90018da0 <_ZN8touchgfx6ScreenD1Ev>:
90018da0:	4770      	bx	lr

90018da2 <_ZN8touchgfx6Screen11setupScreenEv>:
90018da2:	4770      	bx	lr

90018da4 <_ZN8touchgfx12GestureEventD1Ev>:
90018da4:	4770      	bx	lr

90018da6 <_ZN8touchgfx9DragEventD1Ev>:
90018da6:	4770      	bx	lr

90018da8 <_ZN8touchgfx10ClickEventD1Ev>:
90018da8:	4770      	bx	lr

90018daa <_ZN8touchgfx10ClickEventD0Ev>:
90018daa:	b510      	push	{r4, lr}
90018dac:	4604      	mov	r4, r0
90018dae:	210c      	movs	r1, #12
90018db0:	f010 ff5c 	bl	90029c6c <_ZdlPvj>
90018db4:	4620      	mov	r0, r4
90018db6:	bd10      	pop	{r4, pc}

90018db8 <_ZN8touchgfx9DragEventD0Ev>:
90018db8:	b510      	push	{r4, lr}
90018dba:	4604      	mov	r4, r0
90018dbc:	2110      	movs	r1, #16
90018dbe:	f010 ff55 	bl	90029c6c <_ZdlPvj>
90018dc2:	4620      	mov	r0, r4
90018dc4:	bd10      	pop	{r4, pc}

90018dc6 <_ZN8touchgfx12GestureEventD0Ev>:
90018dc6:	b510      	push	{r4, lr}
90018dc8:	4604      	mov	r4, r0
90018dca:	210c      	movs	r1, #12
90018dcc:	f010 ff4e 	bl	90029c6c <_ZdlPvj>
90018dd0:	4620      	mov	r0, r4
90018dd2:	bd10      	pop	{r4, pc}

90018dd4 <_ZN8touchgfx6ScreenD0Ev>:
90018dd4:	b510      	push	{r4, lr}
90018dd6:	4604      	mov	r4, r0
90018dd8:	213c      	movs	r1, #60	@ 0x3c
90018dda:	f010 ff47 	bl	90029c6c <_ZdlPvj>
90018dde:	4620      	mov	r0, r4
90018de0:	bd10      	pop	{r4, pc}
	...

90018de4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
90018de4:	b530      	push	{r4, r5, lr}
90018de6:	460d      	mov	r5, r1
90018de8:	6b01      	ldr	r1, [r0, #48]	@ 0x30
90018dea:	b087      	sub	sp, #28
90018dec:	4604      	mov	r4, r0
90018dee:	b301      	cbz	r1, 90018e32 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
90018df0:	a801      	add	r0, sp, #4
90018df2:	f7ff fb5f 	bl	900184b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90018df6:	892a      	ldrh	r2, [r5, #8]
90018df8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90018dfc:	7928      	ldrb	r0, [r5, #4]
90018dfe:	1ad2      	subs	r2, r2, r3
90018e00:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
90018e02:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90018e06:	441a      	add	r2, r3
90018e08:	896b      	ldrh	r3, [r5, #10]
90018e0a:	f8bd 5006 	ldrh.w	r5, [sp, #6]
90018e0e:	f88d 0010 	strb.w	r0, [sp, #16]
90018e12:	1b5b      	subs	r3, r3, r5
90018e14:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
90018e16:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90018e18:	442b      	add	r3, r5
90018e1a:	4d07      	ldr	r5, [pc, #28]	@ (90018e38 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
90018e1c:	f8ad 1012 	strh.w	r1, [sp, #18]
90018e20:	a903      	add	r1, sp, #12
90018e22:	9503      	str	r5, [sp, #12]
90018e24:	f8ad 2014 	strh.w	r2, [sp, #20]
90018e28:	f8ad 3016 	strh.w	r3, [sp, #22]
90018e2c:	6803      	ldr	r3, [r0, #0]
90018e2e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90018e30:	4798      	blx	r3
90018e32:	b007      	add	sp, #28
90018e34:	bd30      	pop	{r4, r5, pc}
90018e36:	bf00      	nop
90018e38:	9002e374 	.word	0x9002e374

90018e3c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
90018e3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90018e40:	6b03      	ldr	r3, [r0, #48]	@ 0x30
90018e42:	b08a      	sub	sp, #40	@ 0x28
90018e44:	4604      	mov	r4, r0
90018e46:	460d      	mov	r5, r1
90018e48:	b113      	cbz	r3, 90018e50 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
90018e4a:	790b      	ldrb	r3, [r1, #4]
90018e4c:	2b00      	cmp	r3, #0
90018e4e:	d044      	beq.n	90018eda <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90018e50:	f104 0804 	add.w	r8, r4, #4
90018e54:	a803      	add	r0, sp, #12
90018e56:	4641      	mov	r1, r8
90018e58:	f7ff fb2c 	bl	900184b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90018e5c:	792b      	ldrb	r3, [r5, #4]
90018e5e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
90018e62:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
90018e66:	b983      	cbnz	r3, 90018e8a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
90018e68:	f104 0336 	add.w	r3, r4, #54	@ 0x36
90018e6c:	892a      	ldrh	r2, [r5, #8]
90018e6e:	88e9      	ldrh	r1, [r5, #6]
90018e70:	4640      	mov	r0, r8
90018e72:	1b92      	subs	r2, r2, r6
90018e74:	9301      	str	r3, [sp, #4]
90018e76:	1bc9      	subs	r1, r1, r7
90018e78:	f104 0334 	add.w	r3, r4, #52	@ 0x34
90018e7c:	b212      	sxth	r2, r2
90018e7e:	9300      	str	r3, [sp, #0]
90018e80:	b209      	sxth	r1, r1
90018e82:	f104 0330 	add.w	r3, r4, #48	@ 0x30
90018e86:	f7f8 f913 	bl	900110b0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
90018e8a:	6b21      	ldr	r1, [r4, #48]	@ 0x30
90018e8c:	b329      	cbz	r1, 90018eda <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90018e8e:	a805      	add	r0, sp, #20
90018e90:	f7ff fb10 	bl	900184b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90018e94:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90018e98:	792b      	ldrb	r3, [r5, #4]
90018e9a:	a907      	add	r1, sp, #28
90018e9c:	1abf      	subs	r7, r7, r2
90018e9e:	88ea      	ldrh	r2, [r5, #6]
90018ea0:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90018ea2:	4417      	add	r7, r2
90018ea4:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
90018ea6:	f88d 3020 	strb.w	r3, [sp, #32]
90018eaa:	4417      	add	r7, r2
90018eac:	f8bd 2016 	ldrh.w	r2, [sp, #22]
90018eb0:	1ab6      	subs	r6, r6, r2
90018eb2:	892a      	ldrh	r2, [r5, #8]
90018eb4:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
90018eb8:	4416      	add	r6, r2
90018eba:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90018ebc:	4416      	add	r6, r2
90018ebe:	4a08      	ldr	r2, [pc, #32]	@ (90018ee0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
90018ec0:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
90018ec4:	2600      	movs	r6, #0
90018ec6:	9207      	str	r2, [sp, #28]
90018ec8:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
90018ecc:	6803      	ldr	r3, [r0, #0]
90018ece:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90018ed0:	4798      	blx	r3
90018ed2:	792b      	ldrb	r3, [r5, #4]
90018ed4:	b10b      	cbz	r3, 90018eda <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90018ed6:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
90018eda:	b00a      	add	sp, #40	@ 0x28
90018edc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90018ee0:	9002e34c 	.word	0x9002e34c

90018ee4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
90018ee4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90018ee8:	460c      	mov	r4, r1
90018eea:	6b01      	ldr	r1, [r0, #48]	@ 0x30
90018eec:	b088      	sub	sp, #32
90018eee:	4605      	mov	r5, r0
90018ef0:	2900      	cmp	r1, #0
90018ef2:	d06d      	beq.n	90018fd0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
90018ef4:	4668      	mov	r0, sp
90018ef6:	f7ff fadd 	bl	900184b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90018efa:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
90018efc:	88e3      	ldrh	r3, [r4, #6]
90018efe:	f9bd 8000 	ldrsh.w	r8, [sp]
90018f02:	440b      	add	r3, r1
90018f04:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
90018f08:	b21b      	sxth	r3, r3
90018f0a:	4543      	cmp	r3, r8
90018f0c:	db31      	blt.n	90018f72 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90018f0e:	f8bd c004 	ldrh.w	ip, [sp, #4]
90018f12:	44c4      	add	ip, r8
90018f14:	fa0f fc8c 	sxth.w	ip, ip
90018f18:	4563      	cmp	r3, ip
90018f1a:	da2a      	bge.n	90018f72 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90018f1c:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
90018f1e:	8926      	ldrh	r6, [r4, #8]
90018f20:	4416      	add	r6, r2
90018f22:	b236      	sxth	r6, r6
90018f24:	42be      	cmp	r6, r7
90018f26:	db24      	blt.n	90018f72 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90018f28:	f8bd 0006 	ldrh.w	r0, [sp, #6]
90018f2c:	4438      	add	r0, r7
90018f2e:	b200      	sxth	r0, r0
90018f30:	4286      	cmp	r6, r0
90018f32:	da1e      	bge.n	90018f72 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90018f34:	8963      	ldrh	r3, [r4, #10]
90018f36:	4419      	add	r1, r3
90018f38:	b209      	sxth	r1, r1
90018f3a:	4541      	cmp	r1, r8
90018f3c:	db08      	blt.n	90018f50 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90018f3e:	4561      	cmp	r1, ip
90018f40:	da06      	bge.n	90018f50 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90018f42:	89a3      	ldrh	r3, [r4, #12]
90018f44:	441a      	add	r2, r3
90018f46:	b212      	sxth	r2, r2
90018f48:	42ba      	cmp	r2, r7
90018f4a:	db01      	blt.n	90018f50 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90018f4c:	4282      	cmp	r2, r0
90018f4e:	db10      	blt.n	90018f72 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90018f50:	4b21      	ldr	r3, [pc, #132]	@ (90018fd8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
90018f52:	a904      	add	r1, sp, #16
90018f54:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90018f56:	9304      	str	r3, [sp, #16]
90018f58:	2302      	movs	r3, #2
90018f5a:	f88d 3014 	strb.w	r3, [sp, #20]
90018f5e:	2300      	movs	r3, #0
90018f60:	f8ad 3016 	strh.w	r3, [sp, #22]
90018f64:	f8ad 3018 	strh.w	r3, [sp, #24]
90018f68:	f8ad 301a 	strh.w	r3, [sp, #26]
90018f6c:	6803      	ldr	r3, [r0, #0]
90018f6e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90018f70:	4798      	blx	r3
90018f72:	1d29      	adds	r1, r5, #4
90018f74:	a802      	add	r0, sp, #8
90018f76:	f7ff fa9d 	bl	900184b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90018f7a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
90018f7e:	88e0      	ldrh	r0, [r4, #6]
90018f80:	eba3 0808 	sub.w	r8, r3, r8
90018f84:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90018f88:	7921      	ldrb	r1, [r4, #4]
90018f8a:	fa1f f888 	uxth.w	r8, r8
90018f8e:	1bdf      	subs	r7, r3, r7
90018f90:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
90018f94:	b2bb      	uxth	r3, r7
90018f96:	4440      	add	r0, r8
90018f98:	8922      	ldrh	r2, [r4, #8]
90018f9a:	8967      	ldrh	r7, [r4, #10]
90018f9c:	4460      	add	r0, ip
90018f9e:	89a4      	ldrh	r4, [r4, #12]
90018fa0:	441a      	add	r2, r3
90018fa2:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
90018fa4:	44b8      	add	r8, r7
90018fa6:	4423      	add	r3, r4
90018fa8:	f8ad 0016 	strh.w	r0, [sp, #22]
90018fac:	4432      	add	r2, r6
90018fae:	44e0      	add	r8, ip
90018fb0:	4433      	add	r3, r6
90018fb2:	4c0a      	ldr	r4, [pc, #40]	@ (90018fdc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
90018fb4:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90018fb6:	f88d 1014 	strb.w	r1, [sp, #20]
90018fba:	a904      	add	r1, sp, #16
90018fbc:	9404      	str	r4, [sp, #16]
90018fbe:	f8ad 2018 	strh.w	r2, [sp, #24]
90018fc2:	f8ad 801a 	strh.w	r8, [sp, #26]
90018fc6:	f8ad 301c 	strh.w	r3, [sp, #28]
90018fca:	6803      	ldr	r3, [r0, #0]
90018fcc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90018fce:	4798      	blx	r3
90018fd0:	b008      	add	sp, #32
90018fd2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90018fd6:	bf00      	nop
90018fd8:	9002e34c 	.word	0x9002e34c
90018fdc:	9002e360 	.word	0x9002e360

90018fe0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
90018fe0:	b537      	push	{r0, r1, r2, r4, r5, lr}
90018fe2:	4604      	mov	r4, r0
90018fe4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
90018fe8:	3201      	adds	r2, #1
90018fea:	d112      	bne.n	90019012 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
90018fec:	2500      	movs	r5, #0
90018fee:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
90018ff2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90018ff6:	6803      	ldr	r3, [r0, #0]
90018ff8:	9500      	str	r5, [sp, #0]
90018ffa:	466d      	mov	r5, sp
90018ffc:	f8ad 1004 	strh.w	r1, [sp, #4]
90019000:	f8ad 2006 	strh.w	r2, [sp, #6]
90019004:	4629      	mov	r1, r5
90019006:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90019008:	4798      	blx	r3
9001900a:	e895 0003 	ldmia.w	r5, {r0, r1}
9001900e:	e884 0003 	stmia.w	r4, {r0, r1}
90019012:	4620      	mov	r0, r4
90019014:	b003      	add	sp, #12
90019016:	bd30      	pop	{r4, r5, pc}

90019018 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
90019018:	b513      	push	{r0, r1, r4, lr}
9001901a:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
9001901e:	4604      	mov	r4, r0
90019020:	3301      	adds	r3, #1
90019022:	d109      	bne.n	90019038 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
90019024:	4601      	mov	r1, r0
90019026:	4668      	mov	r0, sp
90019028:	f7ff fa44 	bl	900184b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001902c:	f8bd 3000 	ldrh.w	r3, [sp]
90019030:	8423      	strh	r3, [r4, #32]
90019032:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90019036:	8463      	strh	r3, [r4, #34]	@ 0x22
90019038:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
9001903c:	b002      	add	sp, #8
9001903e:	bd10      	pop	{r4, pc}

90019040 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
90019040:	b513      	push	{r0, r1, r4, lr}
90019042:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
90019046:	4604      	mov	r4, r0
90019048:	3301      	adds	r3, #1
9001904a:	d109      	bne.n	90019060 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
9001904c:	4601      	mov	r1, r0
9001904e:	4668      	mov	r0, sp
90019050:	f7ff fa30 	bl	900184b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90019054:	f8bd 3000 	ldrh.w	r3, [sp]
90019058:	8423      	strh	r3, [r4, #32]
9001905a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001905e:	8463      	strh	r3, [r4, #34]	@ 0x22
90019060:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
90019064:	b002      	add	sp, #8
90019066:	bd10      	pop	{r4, pc}

90019068 <_ZN8touchgfx6ScreenC1Ev>:
90019068:	b570      	push	{r4, r5, r6, lr}
9001906a:	4b17      	ldr	r3, [pc, #92]	@ (900190c8 <_ZN8touchgfx6ScreenC1Ev+0x60>)
9001906c:	4605      	mov	r5, r0
9001906e:	4a17      	ldr	r2, [pc, #92]	@ (900190cc <_ZN8touchgfx6ScreenC1Ev+0x64>)
90019070:	2101      	movs	r1, #1
90019072:	f845 3b04 	str.w	r3, [r5], #4
90019076:	2300      	movs	r3, #0
90019078:	6042      	str	r2, [r0, #4]
9001907a:	4604      	mov	r4, r0
9001907c:	8103      	strh	r3, [r0, #8]
9001907e:	8143      	strh	r3, [r0, #10]
90019080:	8183      	strh	r3, [r0, #12]
90019082:	81c3      	strh	r3, [r0, #14]
90019084:	8203      	strh	r3, [r0, #16]
90019086:	8243      	strh	r3, [r0, #18]
90019088:	8283      	strh	r3, [r0, #20]
9001908a:	82c3      	strh	r3, [r0, #22]
9001908c:	6203      	str	r3, [r0, #32]
9001908e:	8483      	strh	r3, [r0, #36]	@ 0x24
90019090:	84c3      	strh	r3, [r0, #38]	@ 0x26
90019092:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
90019096:	6343      	str	r3, [r0, #52]	@ 0x34
90019098:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
9001909c:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
900190a0:	e9c0 3306 	strd	r3, r3, [r0, #24]
900190a4:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
900190a8:	4b09      	ldr	r3, [pc, #36]	@ (900190d0 <_ZN8touchgfx6ScreenC1Ev+0x68>)
900190aa:	4628      	mov	r0, r5
900190ac:	f9b3 6000 	ldrsh.w	r6, [r3]
900190b0:	6b93      	ldr	r3, [r2, #56]	@ 0x38
900190b2:	4a08      	ldr	r2, [pc, #32]	@ (900190d4 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
900190b4:	f9b2 1000 	ldrsh.w	r1, [r2]
900190b8:	4798      	blx	r3
900190ba:	6863      	ldr	r3, [r4, #4]
900190bc:	4628      	mov	r0, r5
900190be:	4631      	mov	r1, r6
900190c0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900190c2:	4798      	blx	r3
900190c4:	4620      	mov	r0, r4
900190c6:	bd70      	pop	{r4, r5, r6, pc}
900190c8:	9002e388 	.word	0x9002e388
900190cc:	9002dec0 	.word	0x9002dec0
900190d0:	2402185a 	.word	0x2402185a
900190d4:	24021858 	.word	0x24021858

900190d8 <_ZN8touchgfx6Screen4drawEv>:
900190d8:	4b09      	ldr	r3, [pc, #36]	@ (90019100 <_ZN8touchgfx6Screen4drawEv+0x28>)
900190da:	b507      	push	{r0, r1, r2, lr}
900190dc:	f9b3 2000 	ldrsh.w	r2, [r3]
900190e0:	2100      	movs	r1, #0
900190e2:	4b08      	ldr	r3, [pc, #32]	@ (90019104 <_ZN8touchgfx6Screen4drawEv+0x2c>)
900190e4:	9100      	str	r1, [sp, #0]
900190e6:	4669      	mov	r1, sp
900190e8:	f9b3 3000 	ldrsh.w	r3, [r3]
900190ec:	f8ad 2004 	strh.w	r2, [sp, #4]
900190f0:	f8ad 3006 	strh.w	r3, [sp, #6]
900190f4:	6803      	ldr	r3, [r0, #0]
900190f6:	689b      	ldr	r3, [r3, #8]
900190f8:	4798      	blx	r3
900190fa:	b003      	add	sp, #12
900190fc:	f85d fb04 	ldr.w	pc, [sp], #4
90019100:	24021858 	.word	0x24021858
90019104:	2402185a 	.word	0x2402185a

90019108 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
90019108:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001910c:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
90019110:	b089      	sub	sp, #36	@ 0x24
90019112:	4680      	mov	r8, r0
90019114:	460c      	mov	r4, r1
90019116:	2b00      	cmp	r3, #0
90019118:	4615      	mov	r5, r2
9001911a:	dd0e      	ble.n	9001913a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001911c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
90019120:	2b00      	cmp	r3, #0
90019122:	dd0a      	ble.n	9001913a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90019124:	4628      	mov	r0, r5
90019126:	f7ff ff5b 	bl	90018fe0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001912a:	4621      	mov	r1, r4
9001912c:	f7fd fe8f 	bl	90016e4e <_ZNK8touchgfx4Rect9intersectERKS0_>
90019130:	69eb      	ldr	r3, [r5, #28]
90019132:	b928      	cbnz	r0, 90019140 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
90019134:	461d      	mov	r5, r3
90019136:	2b00      	cmp	r3, #0
90019138:	d1f4      	bne.n	90019124 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
9001913a:	b009      	add	sp, #36	@ 0x24
9001913c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90019140:	ae04      	add	r6, sp, #16
90019142:	2b00      	cmp	r3, #0
90019144:	f000 80b5 	beq.w	900192b2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90019148:	682b      	ldr	r3, [r5, #0]
9001914a:	4629      	mov	r1, r5
9001914c:	a802      	add	r0, sp, #8
9001914e:	68db      	ldr	r3, [r3, #12]
90019150:	4798      	blx	r3
90019152:	4628      	mov	r0, r5
90019154:	f7ff ff60 	bl	90019018 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
90019158:	f8bd 7008 	ldrh.w	r7, [sp, #8]
9001915c:	4407      	add	r7, r0
9001915e:	4628      	mov	r0, r5
90019160:	f7ff ff6e 	bl	90019040 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
90019164:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90019168:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
9001916c:	b23f      	sxth	r7, r7
9001916e:	4418      	add	r0, r3
90019170:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90019174:	4621      	mov	r1, r4
90019176:	f8ad 2014 	strh.w	r2, [sp, #20]
9001917a:	f8ad 0012 	strh.w	r0, [sp, #18]
9001917e:	4630      	mov	r0, r6
90019180:	f8ad 3016 	strh.w	r3, [sp, #22]
90019184:	f8ad 7010 	strh.w	r7, [sp, #16]
90019188:	f7f8 f874 	bl	90011274 <_ZN8touchgfx4RectaNERKS0_>
9001918c:	4628      	mov	r0, r5
9001918e:	f7ff ff27 	bl	90018fe0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90019192:	ab06      	add	r3, sp, #24
90019194:	4602      	mov	r2, r0
90019196:	e896 0003 	ldmia.w	r6, {r0, r1}
9001919a:	e883 0003 	stmia.w	r3, {r0, r1}
9001919e:	4611      	mov	r1, r2
900191a0:	4618      	mov	r0, r3
900191a2:	f7f8 f867 	bl	90011274 <_ZN8touchgfx4RectaNERKS0_>
900191a6:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
900191aa:	f9b4 1000 	ldrsh.w	r1, [r4]
900191ae:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
900191b2:	4299      	cmp	r1, r3
900191b4:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
900191b8:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
900191bc:	d10b      	bne.n	900191d6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
900191be:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
900191c2:	4552      	cmp	r2, sl
900191c4:	d107      	bne.n	900191d6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
900191c6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
900191ca:	455a      	cmp	r2, fp
900191cc:	d103      	bne.n	900191d6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
900191ce:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
900191d2:	454a      	cmp	r2, r9
900191d4:	d06d      	beq.n	900192b2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
900191d6:	f1bb 0f00 	cmp.w	fp, #0
900191da:	dd65      	ble.n	900192a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
900191dc:	f1b9 0f00 	cmp.w	r9, #0
900191e0:	dd62      	ble.n	900192a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
900191e2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
900191e6:	fa1f f08a 	uxth.w	r0, sl
900191ea:	4552      	cmp	r2, sl
900191ec:	9000      	str	r0, [sp, #0]
900191ee:	da12      	bge.n	90019216 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
900191f0:	9301      	str	r3, [sp, #4]
900191f2:	9b00      	ldr	r3, [sp, #0]
900191f4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
900191f8:	f8ad 2012 	strh.w	r2, [sp, #18]
900191fc:	1a9a      	subs	r2, r3, r2
900191fe:	f8ad 1010 	strh.w	r1, [sp, #16]
90019202:	4631      	mov	r1, r6
90019204:	f8ad 0014 	strh.w	r0, [sp, #20]
90019208:	4640      	mov	r0, r8
9001920a:	f8ad 2016 	strh.w	r2, [sp, #22]
9001920e:	69ea      	ldr	r2, [r5, #28]
90019210:	f7ff ff7a 	bl	90019108 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90019214:	9b01      	ldr	r3, [sp, #4]
90019216:	f9b4 2000 	ldrsh.w	r2, [r4]
9001921a:	b29f      	uxth	r7, r3
9001921c:	429a      	cmp	r2, r3
9001921e:	da0d      	bge.n	9001923c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
90019220:	f8ad 2010 	strh.w	r2, [sp, #16]
90019224:	1aba      	subs	r2, r7, r2
90019226:	f8ad a012 	strh.w	sl, [sp, #18]
9001922a:	4631      	mov	r1, r6
9001922c:	f8ad 2014 	strh.w	r2, [sp, #20]
90019230:	4640      	mov	r0, r8
90019232:	f8ad 9016 	strh.w	r9, [sp, #22]
90019236:	69ea      	ldr	r2, [r5, #28]
90019238:	f7ff ff66 	bl	90019108 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001923c:	8822      	ldrh	r2, [r4, #0]
9001923e:	445f      	add	r7, fp
90019240:	88a3      	ldrh	r3, [r4, #4]
90019242:	b2bf      	uxth	r7, r7
90019244:	4413      	add	r3, r2
90019246:	b23a      	sxth	r2, r7
90019248:	b29b      	uxth	r3, r3
9001924a:	b219      	sxth	r1, r3
9001924c:	4291      	cmp	r1, r2
9001924e:	dd0d      	ble.n	9001926c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
90019250:	1bdb      	subs	r3, r3, r7
90019252:	f8ad 2010 	strh.w	r2, [sp, #16]
90019256:	f8ad a012 	strh.w	sl, [sp, #18]
9001925a:	4631      	mov	r1, r6
9001925c:	f8ad 3014 	strh.w	r3, [sp, #20]
90019260:	4640      	mov	r0, r8
90019262:	f8ad 9016 	strh.w	r9, [sp, #22]
90019266:	69ea      	ldr	r2, [r5, #28]
90019268:	f7ff ff4e 	bl	90019108 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001926c:	88e2      	ldrh	r2, [r4, #6]
9001926e:	8863      	ldrh	r3, [r4, #2]
90019270:	4413      	add	r3, r2
90019272:	9a00      	ldr	r2, [sp, #0]
90019274:	444a      	add	r2, r9
90019276:	b29b      	uxth	r3, r3
90019278:	fa1f f982 	uxth.w	r9, r2
9001927c:	b219      	sxth	r1, r3
9001927e:	fa0f f289 	sxth.w	r2, r9
90019282:	428a      	cmp	r2, r1
90019284:	da15      	bge.n	900192b2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90019286:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001928a:	eba3 0309 	sub.w	r3, r3, r9
9001928e:	f9b4 0000 	ldrsh.w	r0, [r4]
90019292:	f8ad 1014 	strh.w	r1, [sp, #20]
90019296:	4631      	mov	r1, r6
90019298:	f8ad 0010 	strh.w	r0, [sp, #16]
9001929c:	f8ad 2012 	strh.w	r2, [sp, #18]
900192a0:	f8ad 3016 	strh.w	r3, [sp, #22]
900192a4:	69ea      	ldr	r2, [r5, #28]
900192a6:	e001      	b.n	900192ac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
900192a8:	69ea      	ldr	r2, [r5, #28]
900192aa:	4621      	mov	r1, r4
900192ac:	4640      	mov	r0, r8
900192ae:	f7ff ff2b 	bl	90019108 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
900192b2:	4628      	mov	r0, r5
900192b4:	f7ff fe94 	bl	90018fe0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
900192b8:	6861      	ldr	r1, [r4, #4]
900192ba:	4602      	mov	r2, r0
900192bc:	4633      	mov	r3, r6
900192be:	6820      	ldr	r0, [r4, #0]
900192c0:	c303      	stmia	r3!, {r0, r1}
900192c2:	4611      	mov	r1, r2
900192c4:	4630      	mov	r0, r6
900192c6:	f7f7 ffd5 	bl	90011274 <_ZN8touchgfx4RectaNERKS0_>
900192ca:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
900192ce:	2b00      	cmp	r3, #0
900192d0:	f77f af33 	ble.w	9001913a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900192d4:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
900192d8:	2b00      	cmp	r3, #0
900192da:	f77f af2e 	ble.w	9001913a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900192de:	4628      	mov	r0, r5
900192e0:	f7ff fe9a 	bl	90019018 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
900192e4:	f8bd 3010 	ldrh.w	r3, [sp, #16]
900192e8:	1a18      	subs	r0, r3, r0
900192ea:	f8ad 0010 	strh.w	r0, [sp, #16]
900192ee:	4628      	mov	r0, r5
900192f0:	f7ff fea6 	bl	90019040 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
900192f4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
900192f8:	4631      	mov	r1, r6
900192fa:	1a18      	subs	r0, r3, r0
900192fc:	f8ad 0012 	strh.w	r0, [sp, #18]
90019300:	4628      	mov	r0, r5
90019302:	682b      	ldr	r3, [r5, #0]
90019304:	689b      	ldr	r3, [r3, #8]
90019306:	4798      	blx	r3
90019308:	e717      	b.n	9001913a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

9001930a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
9001930a:	b570      	push	{r4, r5, r6, lr}
9001930c:	1d06      	adds	r6, r0, #4
9001930e:	b086      	sub	sp, #24
90019310:	460c      	mov	r4, r1
90019312:	2300      	movs	r3, #0
90019314:	4631      	mov	r1, r6
90019316:	4605      	mov	r5, r0
90019318:	a802      	add	r0, sp, #8
9001931a:	9301      	str	r3, [sp, #4]
9001931c:	f7ff f8ca 	bl	900184b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90019320:	f8bd 3008 	ldrh.w	r3, [sp, #8]
90019324:	8822      	ldrh	r2, [r4, #0]
90019326:	f8bd 100a 	ldrh.w	r1, [sp, #10]
9001932a:	1ad2      	subs	r2, r2, r3
9001932c:	8863      	ldrh	r3, [r4, #2]
9001932e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90019332:	1a5b      	subs	r3, r3, r1
90019334:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
90019338:	f8ad 2010 	strh.w	r2, [sp, #16]
9001933c:	aa01      	add	r2, sp, #4
9001933e:	f8ad 0014 	strh.w	r0, [sp, #20]
90019342:	4630      	mov	r0, r6
90019344:	f8ad 1016 	strh.w	r1, [sp, #22]
90019348:	a904      	add	r1, sp, #16
9001934a:	f8ad 3012 	strh.w	r3, [sp, #18]
9001934e:	f7f8 f869 	bl	90011424 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
90019352:	9a01      	ldr	r2, [sp, #4]
90019354:	b11a      	cbz	r2, 9001935e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
90019356:	4621      	mov	r1, r4
90019358:	4628      	mov	r0, r5
9001935a:	f7ff fed5 	bl	90019108 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001935e:	b006      	add	sp, #24
90019360:	bd70      	pop	{r4, r5, r6, pc}

90019362 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
90019362:	4602      	mov	r2, r0
90019364:	b530      	push	{r4, r5, lr}
90019366:	4604      	mov	r4, r0
90019368:	b085      	sub	sp, #20
9001936a:	f852 0f08 	ldr.w	r0, [r2, #8]!
9001936e:	460d      	mov	r5, r1
90019370:	466b      	mov	r3, sp
90019372:	6851      	ldr	r1, [r2, #4]
90019374:	c303      	stmia	r3!, {r0, r1}
90019376:	4629      	mov	r1, r5
90019378:	4668      	mov	r0, sp
9001937a:	f7f7 ff7b 	bl	90011274 <_ZN8touchgfx4RectaNERKS0_>
9001937e:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
90019382:	b12b      	cbz	r3, 90019390 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
90019384:	4669      	mov	r1, sp
90019386:	4620      	mov	r0, r4
90019388:	f7ff ffbf 	bl	9001930a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
9001938c:	b005      	add	sp, #20
9001938e:	bd30      	pop	{r4, r5, pc}
90019390:	3404      	adds	r4, #4
90019392:	a802      	add	r0, sp, #8
90019394:	4621      	mov	r1, r4
90019396:	f7ff f88d 	bl	900184b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001939a:	f8bd 3000 	ldrh.w	r3, [sp]
9001939e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
900193a2:	4669      	mov	r1, sp
900193a4:	4620      	mov	r0, r4
900193a6:	1a9b      	subs	r3, r3, r2
900193a8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
900193ac:	f8ad 3000 	strh.w	r3, [sp]
900193b0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900193b4:	1a9b      	subs	r3, r3, r2
900193b6:	f8ad 3002 	strh.w	r3, [sp, #2]
900193ba:	f7f7 fffa 	bl	900113b2 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
900193be:	e7e5      	b.n	9001938c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

900193c0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
900193c0:	460b      	mov	r3, r1
900193c2:	680a      	ldr	r2, [r1, #0]
900193c4:	1d01      	adds	r1, r0, #4
900193c6:	6992      	ldr	r2, [r2, #24]
900193c8:	4618      	mov	r0, r3
900193ca:	4710      	bx	r2

900193cc <_ZN8touchgfx12TextProviderC1Ev>:
900193cc:	b538      	push	{r3, r4, r5, lr}
900193ce:	2500      	movs	r5, #0
900193d0:	2302      	movs	r3, #2
900193d2:	4604      	mov	r4, r0
900193d4:	220e      	movs	r2, #14
900193d6:	7403      	strb	r3, [r0, #16]
900193d8:	4629      	mov	r1, r5
900193da:	6145      	str	r5, [r0, #20]
900193dc:	7605      	strb	r5, [r0, #24]
900193de:	83c5      	strh	r5, [r0, #30]
900193e0:	8405      	strh	r5, [r0, #32]
900193e2:	86c5      	strh	r5, [r0, #54]	@ 0x36
900193e4:	8705      	strh	r5, [r0, #56]	@ 0x38
900193e6:	87c5      	strh	r5, [r0, #62]	@ 0x3e
900193e8:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
900193ec:	e9c0 5500 	strd	r5, r5, [r0]
900193f0:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
900193f4:	304c      	adds	r0, #76	@ 0x4c
900193f6:	f011 fa4b 	bl	9002a890 <memset>
900193fa:	2301      	movs	r3, #1
900193fc:	4620      	mov	r0, r4
900193fe:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
90019402:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
90019406:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
9001940a:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
9001940e:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
90019412:	f7ec f86d 	bl	900054f0 <_ZN8touchgfx12TextProvider18initializeInternalEv>
90019416:	4620      	mov	r0, r4
90019418:	bd38      	pop	{r3, r4, r5, pc}

9001941a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
9001941a:	b530      	push	{r4, r5, lr}
9001941c:	2500      	movs	r5, #0
9001941e:	2401      	movs	r4, #1
90019420:	6843      	ldr	r3, [r0, #4]
90019422:	b913      	cbnz	r3, 9001942a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
90019424:	6803      	ldr	r3, [r0, #0]
90019426:	b313      	cbz	r3, 9001946e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
90019428:	6043      	str	r3, [r0, #4]
9001942a:	7e03      	ldrb	r3, [r0, #24]
9001942c:	b143      	cbz	r3, 90019440 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
9001942e:	6943      	ldr	r3, [r0, #20]
90019430:	b12b      	cbz	r3, 9001943e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90019432:	881a      	ldrh	r2, [r3, #0]
90019434:	b11a      	cbz	r2, 9001943e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90019436:	1c9a      	adds	r2, r3, #2
90019438:	6142      	str	r2, [r0, #20]
9001943a:	8818      	ldrh	r0, [r3, #0]
9001943c:	bd30      	pop	{r4, r5, pc}
9001943e:	7605      	strb	r5, [r0, #24]
90019440:	6843      	ldr	r3, [r0, #4]
90019442:	8819      	ldrh	r1, [r3, #0]
90019444:	b199      	cbz	r1, 9001946e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
90019446:	1c9a      	adds	r2, r3, #2
90019448:	2902      	cmp	r1, #2
9001944a:	6042      	str	r2, [r0, #4]
9001944c:	d1f5      	bne.n	9001943a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
9001944e:	7c03      	ldrb	r3, [r0, #16]
90019450:	2b01      	cmp	r3, #1
90019452:	d8e5      	bhi.n	90019420 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90019454:	1c5a      	adds	r2, r3, #1
90019456:	3302      	adds	r3, #2
90019458:	7402      	strb	r2, [r0, #16]
9001945a:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
9001945e:	6143      	str	r3, [r0, #20]
90019460:	2b00      	cmp	r3, #0
90019462:	d0dd      	beq.n	90019420 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90019464:	881b      	ldrh	r3, [r3, #0]
90019466:	2b00      	cmp	r3, #0
90019468:	d0da      	beq.n	90019420 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001946a:	7604      	strb	r4, [r0, #24]
9001946c:	e7d8      	b.n	90019420 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001946e:	2000      	movs	r0, #0
90019470:	e7e4      	b.n	9001943c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

90019472 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
90019472:	6001      	str	r1, [r0, #0]
90019474:	2100      	movs	r1, #0
90019476:	b430      	push	{r4, r5}
90019478:	6041      	str	r1, [r0, #4]
9001947a:	6815      	ldr	r5, [r2, #0]
9001947c:	6085      	str	r5, [r0, #8]
9001947e:	6852      	ldr	r2, [r2, #4]
90019480:	6443      	str	r3, [r0, #68]	@ 0x44
90019482:	9b02      	ldr	r3, [sp, #8]
90019484:	60c2      	str	r2, [r0, #12]
90019486:	7401      	strb	r1, [r0, #16]
90019488:	6141      	str	r1, [r0, #20]
9001948a:	7601      	strb	r1, [r0, #24]
9001948c:	8701      	strh	r1, [r0, #56]	@ 0x38
9001948e:	8401      	strh	r1, [r0, #32]
90019490:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
90019494:	6483      	str	r3, [r0, #72]	@ 0x48
90019496:	bc30      	pop	{r4, r5}
90019498:	f7ec b82a 	b.w	900054f0 <_ZN8touchgfx12TextProvider18initializeInternalEv>

9001949c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
9001949c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001949e:	4605      	mov	r5, r0
900194a0:	4608      	mov	r0, r1
900194a2:	b1f1      	cbz	r1, 900194e2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
900194a4:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
900194a8:	460b      	mov	r3, r1
900194aa:	f101 0708 	add.w	r7, r1, #8
900194ae:	4622      	mov	r2, r4
900194b0:	6818      	ldr	r0, [r3, #0]
900194b2:	3308      	adds	r3, #8
900194b4:	f853 1c04 	ldr.w	r1, [r3, #-4]
900194b8:	4626      	mov	r6, r4
900194ba:	42bb      	cmp	r3, r7
900194bc:	c603      	stmia	r6!, {r0, r1}
900194be:	4634      	mov	r4, r6
900194c0:	d1f6      	bne.n	900194b0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
900194c2:	6818      	ldr	r0, [r3, #0]
900194c4:	6030      	str	r0, [r6, #0]
900194c6:	4610      	mov	r0, r2
900194c8:	889b      	ldrh	r3, [r3, #4]
900194ca:	80b3      	strh	r3, [r6, #4]
900194cc:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
900194d0:	015b      	lsls	r3, r3, #5
900194d2:	f403 7180 	and.w	r1, r3, #256	@ 0x100
900194d6:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
900194da:	430b      	orrs	r3, r1
900194dc:	425b      	negs	r3, r3
900194de:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
900194e2:	bdf0      	pop	{r4, r5, r6, r7, pc}

900194e4 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
900194e4:	b538      	push	{r3, r4, r5, lr}
900194e6:	460c      	mov	r4, r1
900194e8:	6811      	ldr	r1, [r2, #0]
900194ea:	4610      	mov	r0, r2
900194ec:	68cd      	ldr	r5, [r1, #12]
900194ee:	4619      	mov	r1, r3
900194f0:	47a8      	blx	r5
900194f2:	2800      	cmp	r0, #0
900194f4:	bf08      	it	eq
900194f6:	4620      	moveq	r0, r4
900194f8:	bd38      	pop	{r3, r4, r5, pc}
	...

900194fc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
900194fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90019500:	468c      	mov	ip, r1
90019502:	4605      	mov	r5, r0
90019504:	4614      	mov	r4, r2
90019506:	b942      	cbnz	r2, 9001951a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
90019508:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
9001950c:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
90019510:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
90019514:	4620      	mov	r0, r4
90019516:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001951a:	7b50      	ldrb	r0, [r2, #13]
9001951c:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
90019520:	8893      	ldrh	r3, [r2, #4]
90019522:	0106      	lsls	r6, r0, #4
90019524:	f406 7280 	and.w	r2, r6, #256	@ 0x100
90019528:	79e6      	ldrb	r6, [r4, #7]
9001952a:	4316      	orrs	r6, r2
9001952c:	185a      	adds	r2, r3, r1
9001952e:	b291      	uxth	r1, r2
90019530:	b2b7      	uxth	r7, r6
90019532:	291d      	cmp	r1, #29
90019534:	d87f      	bhi.n	90019636 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
90019536:	2201      	movs	r2, #1
90019538:	10f6      	asrs	r6, r6, #3
9001953a:	408a      	lsls	r2, r1
9001953c:	498b      	ldr	r1, [pc, #556]	@ (9001976c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x270>)
9001953e:	420a      	tst	r2, r1
90019540:	d12e      	bne.n	900195a0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
90019542:	f412 7f60 	tst.w	r2, #896	@ 0x380
90019546:	d076      	beq.n	90019636 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
90019548:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
9001954c:	4623      	mov	r3, r4
9001954e:	f104 0e08 	add.w	lr, r4, #8
90019552:	4614      	mov	r4, r2
90019554:	6818      	ldr	r0, [r3, #0]
90019556:	3308      	adds	r3, #8
90019558:	f853 1c04 	ldr.w	r1, [r3, #-4]
9001955c:	4694      	mov	ip, r2
9001955e:	4573      	cmp	r3, lr
90019560:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90019564:	4662      	mov	r2, ip
90019566:	d1f5      	bne.n	90019554 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
90019568:	6818      	ldr	r0, [r3, #0]
9001956a:	f8cc 0000 	str.w	r0, [ip]
9001956e:	889b      	ldrh	r3, [r3, #4]
90019570:	f8ac 3004 	strh.w	r3, [ip, #4]
90019574:	b2b3      	uxth	r3, r6
90019576:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
9001957a:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
9001957e:	1aca      	subs	r2, r1, r3
90019580:	1bcf      	subs	r7, r1, r7
90019582:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
90019586:	b292      	uxth	r2, r2
90019588:	1afb      	subs	r3, r7, r3
9001958a:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
9001958e:	10d2      	asrs	r2, r2, #3
90019590:	f002 0260 	and.w	r2, r2, #96	@ 0x60
90019594:	4302      	orrs	r2, r0
90019596:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
9001959a:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
9001959e:	e7b9      	b.n	90019514 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
900195a0:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
900195a4:	4623      	mov	r3, r4
900195a6:	f104 0808 	add.w	r8, r4, #8
900195aa:	4614      	mov	r4, r2
900195ac:	6818      	ldr	r0, [r3, #0]
900195ae:	3308      	adds	r3, #8
900195b0:	f853 1c04 	ldr.w	r1, [r3, #-4]
900195b4:	4696      	mov	lr, r2
900195b6:	4543      	cmp	r3, r8
900195b8:	e8ae 0003 	stmia.w	lr!, {r0, r1}
900195bc:	4672      	mov	r2, lr
900195be:	d1f5      	bne.n	900195ac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
900195c0:	6818      	ldr	r0, [r3, #0]
900195c2:	f8ce 0000 	str.w	r0, [lr]
900195c6:	889b      	ldrh	r3, [r3, #4]
900195c8:	f8ae 3004 	strh.w	r3, [lr, #4]
900195cc:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
900195ce:	eb05 0343 	add.w	r3, r5, r3, lsl #1
900195d2:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
900195d4:	f640 6333 	movw	r3, #3635	@ 0xe33
900195d8:	4299      	cmp	r1, r3
900195da:	d111      	bne.n	90019600 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x104>
900195dc:	f8dc 3000 	ldr.w	r3, [ip]
900195e0:	4660      	mov	r0, ip
900195e2:	68db      	ldr	r3, [r3, #12]
900195e4:	4798      	blx	r3
900195e6:	7b41      	ldrb	r1, [r0, #13]
900195e8:	00cb      	lsls	r3, r1, #3
900195ea:	f403 7280 	and.w	r2, r3, #256	@ 0x100
900195ee:	7a03      	ldrb	r3, [r0, #8]
900195f0:	4313      	orrs	r3, r2
900195f2:	064a      	lsls	r2, r1, #25
900195f4:	bf44      	itt	mi
900195f6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
900195fa:	b21b      	sxthmi	r3, r3
900195fc:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
90019600:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
90019604:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
90019608:	443b      	add	r3, r7
9001960a:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
9001960e:	4433      	add	r3, r6
90019610:	b29b      	uxth	r3, r3
90019612:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
90019616:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
9001961a:	10db      	asrs	r3, r3, #3
9001961c:	f003 0360 	and.w	r3, r3, #96	@ 0x60
90019620:	4313      	orrs	r3, r2
90019622:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
90019626:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
9001962a:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
9001962e:	1a9b      	subs	r3, r3, r2
90019630:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
90019634:	e76e      	b.n	90019514 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
90019636:	f023 0204 	bic.w	r2, r3, #4
9001963a:	f640 611b 	movw	r1, #3611	@ 0xe1b
9001963e:	428a      	cmp	r2, r1
90019640:	d003      	beq.n	9001964a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14e>
90019642:	f640 621d 	movw	r2, #3613	@ 0xe1d
90019646:	4293      	cmp	r3, r2
90019648:	d138      	bne.n	900196bc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1c0>
9001964a:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
9001964e:	4622      	mov	r2, r4
90019650:	f104 0808 	add.w	r8, r4, #8
90019654:	4634      	mov	r4, r6
90019656:	6810      	ldr	r0, [r2, #0]
90019658:	3208      	adds	r2, #8
9001965a:	f852 1c04 	ldr.w	r1, [r2, #-4]
9001965e:	46b6      	mov	lr, r6
90019660:	4542      	cmp	r2, r8
90019662:	e8ae 0003 	stmia.w	lr!, {r0, r1}
90019666:	4676      	mov	r6, lr
90019668:	d1f5      	bne.n	90019656 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x15a>
9001966a:	6810      	ldr	r0, [r2, #0]
9001966c:	3b01      	subs	r3, #1
9001966e:	4621      	mov	r1, r4
90019670:	f8ce 0000 	str.w	r0, [lr]
90019674:	b29b      	uxth	r3, r3
90019676:	8892      	ldrh	r2, [r2, #4]
90019678:	4628      	mov	r0, r5
9001967a:	f8ae 2004 	strh.w	r2, [lr, #4]
9001967e:	4662      	mov	r2, ip
90019680:	f7ff ff30 	bl	900194e4 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
90019684:	7b41      	ldrb	r1, [r0, #13]
90019686:	00cb      	lsls	r3, r1, #3
90019688:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001968c:	7a03      	ldrb	r3, [r0, #8]
9001968e:	0648      	lsls	r0, r1, #25
90019690:	ea43 0302 	orr.w	r3, r3, r2
90019694:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
90019698:	bf44      	itt	mi
9001969a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001969e:	b21b      	sxthmi	r3, r3
900196a0:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
900196a4:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
900196a8:	005b      	lsls	r3, r3, #1
900196aa:	f403 7380 	and.w	r3, r3, #256	@ 0x100
900196ae:	4313      	orrs	r3, r2
900196b0:	115a      	asrs	r2, r3, #5
900196b2:	eb02 0393 	add.w	r3, r2, r3, lsr #2
900196b6:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
900196ba:	e047      	b.n	9001974c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x250>
900196bc:	00c2      	lsls	r2, r0, #3
900196be:	f402 7180 	and.w	r1, r2, #256	@ 0x100
900196c2:	7a22      	ldrb	r2, [r4, #8]
900196c4:	430a      	orrs	r2, r1
900196c6:	0641      	lsls	r1, r0, #25
900196c8:	f640 6109 	movw	r1, #3593	@ 0xe09
900196cc:	bf44      	itt	mi
900196ce:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
900196d2:	b212      	sxthmi	r2, r2
900196d4:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
900196d8:	f023 0210 	bic.w	r2, r3, #16
900196dc:	428a      	cmp	r2, r1
900196de:	d003      	beq.n	900196e8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ec>
900196e0:	f640 6213 	movw	r2, #3603	@ 0xe13
900196e4:	4293      	cmp	r3, r2
900196e6:	d13e      	bne.n	90019766 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x26a>
900196e8:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
900196ec:	f104 0808 	add.w	r8, r4, #8
900196f0:	4696      	mov	lr, r2
900196f2:	6820      	ldr	r0, [r4, #0]
900196f4:	3408      	adds	r4, #8
900196f6:	f854 1c04 	ldr.w	r1, [r4, #-4]
900196fa:	4616      	mov	r6, r2
900196fc:	4544      	cmp	r4, r8
900196fe:	c603      	stmia	r6!, {r0, r1}
90019700:	4632      	mov	r2, r6
90019702:	d1f6      	bne.n	900196f2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f6>
90019704:	6820      	ldr	r0, [r4, #0]
90019706:	6030      	str	r0, [r6, #0]
90019708:	4628      	mov	r0, r5
9001970a:	88a1      	ldrh	r1, [r4, #4]
9001970c:	4674      	mov	r4, lr
9001970e:	80b1      	strh	r1, [r6, #4]
90019710:	4671      	mov	r1, lr
90019712:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
90019716:	0076      	lsls	r6, r6, #1
90019718:	f406 7280 	and.w	r2, r6, #256	@ 0x100
9001971c:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
90019720:	4316      	orrs	r6, r2
90019722:	f640 6213 	movw	r2, #3603	@ 0xe13
90019726:	4293      	cmp	r3, r2
90019728:	4662      	mov	r2, ip
9001972a:	bf16      	itet	ne
9001972c:	f103 33ff 	addne.w	r3, r3, #4294967295
90019730:	f640 630c 	movweq	r3, #3596	@ 0xe0c
90019734:	b29b      	uxthne	r3, r3
90019736:	f7ff fed5 	bl	900194e4 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
9001973a:	7b43      	ldrb	r3, [r0, #13]
9001973c:	7a82      	ldrb	r2, [r0, #10]
9001973e:	005b      	lsls	r3, r3, #1
90019740:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90019744:	4313      	orrs	r3, r2
90019746:	1af6      	subs	r6, r6, r3
90019748:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
9001974c:	7b61      	ldrb	r1, [r4, #13]
9001974e:	00cb      	lsls	r3, r1, #3
90019750:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90019754:	7a23      	ldrb	r3, [r4, #8]
90019756:	4313      	orrs	r3, r2
90019758:	064a      	lsls	r2, r1, #25
9001975a:	bf44      	itt	mi
9001975c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90019760:	b21b      	sxthmi	r3, r3
90019762:	1bdb      	subs	r3, r3, r7
90019764:	e719      	b.n	9001959a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
90019766:	2300      	movs	r3, #0
90019768:	e7a5      	b.n	900196b6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
9001976a:	bf00      	nop
9001976c:	3fc00079 	.word	0x3fc00079

90019770 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
90019770:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90019774:	4604      	mov	r4, r0
90019776:	b942      	cbnz	r2, 9001978a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
90019778:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001977c:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
90019780:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
90019784:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
90019788:	e047      	b.n	9001981a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
9001978a:	7b51      	ldrb	r1, [r2, #13]
9001978c:	8893      	ldrh	r3, [r2, #4]
9001978e:	010d      	lsls	r5, r1, #4
90019790:	f405 7080 	and.w	r0, r5, #256	@ 0x100
90019794:	79d5      	ldrb	r5, [r2, #7]
90019796:	4305      	orrs	r5, r0
90019798:	2d04      	cmp	r5, #4
9001979a:	bfcc      	ite	gt
9001979c:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
900197a0:	f04f 0e01 	movle.w	lr, #1
900197a4:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
900197a8:	f200 80ab 	bhi.w	90019902 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
900197ac:	f240 60e7 	movw	r0, #1767	@ 0x6e7
900197b0:	4283      	cmp	r3, r0
900197b2:	d216      	bcs.n	900197e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900197b4:	f240 605b 	movw	r0, #1627	@ 0x65b
900197b8:	4283      	cmp	r3, r0
900197ba:	d859      	bhi.n	90019870 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
900197bc:	f240 6057 	movw	r0, #1623	@ 0x657
900197c0:	4283      	cmp	r3, r0
900197c2:	d20e      	bcs.n	900197e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900197c4:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
900197c8:	d24a      	bcs.n	90019860 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
900197ca:	f240 604e 	movw	r0, #1614	@ 0x64e
900197ce:	4283      	cmp	r3, r0
900197d0:	d207      	bcs.n	900197e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900197d2:	f240 601a 	movw	r0, #1562	@ 0x61a
900197d6:	4283      	cmp	r3, r0
900197d8:	d02a      	beq.n	90019830 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900197da:	d821      	bhi.n	90019820 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
900197dc:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
900197e0:	d35b      	bcc.n	9001989a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
900197e2:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
900197e6:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
900197ea:	f040 80d0 	bne.w	9001998e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
900197ee:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
900197f2:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
900197f6:	f040 80ca 	bne.w	9001998e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
900197fa:	00cb      	lsls	r3, r1, #3
900197fc:	0649      	lsls	r1, r1, #25
900197fe:	f403 7080 	and.w	r0, r3, #256	@ 0x100
90019802:	7a13      	ldrb	r3, [r2, #8]
90019804:	ea43 0300 	orr.w	r3, r3, r0
90019808:	bf44      	itt	mi
9001980a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001980e:	b21b      	sxthmi	r3, r3
90019810:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
90019814:	1b5d      	subs	r5, r3, r5
90019816:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
9001981a:	4610      	mov	r0, r2
9001981c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90019820:	f240 604b 	movw	r0, #1611	@ 0x64b
90019824:	4283      	cmp	r3, r0
90019826:	d338      	bcc.n	9001989a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90019828:	f240 604c 	movw	r0, #1612	@ 0x64c
9001982c:	4283      	cmp	r3, r0
9001982e:	d9d8      	bls.n	900197e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019830:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
90019834:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
90019838:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
9001983c:	f040 80f3 	bne.w	90019a26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
90019840:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
90019844:	f040 80ef 	bne.w	90019a26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
90019848:	00cb      	lsls	r3, r1, #3
9001984a:	064e      	lsls	r6, r1, #25
9001984c:	f403 7080 	and.w	r0, r3, #256	@ 0x100
90019850:	7a13      	ldrb	r3, [r2, #8]
90019852:	ea43 0300 	orr.w	r3, r3, r0
90019856:	bf44      	itt	mi
90019858:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001985c:	b21b      	sxthmi	r3, r3
9001985e:	e7d9      	b.n	90019814 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
90019860:	f240 6054 	movw	r0, #1620	@ 0x654
90019864:	4283      	cmp	r3, r0
90019866:	d8e3      	bhi.n	90019830 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019868:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
9001986c:	d9e0      	bls.n	90019830 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001986e:	e7b8      	b.n	900197e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019870:	f240 6074 	movw	r0, #1652	@ 0x674
90019874:	4283      	cmp	r3, r0
90019876:	d0b4      	beq.n	900197e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019878:	d82d      	bhi.n	900198d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
9001987a:	f240 605e 	movw	r0, #1630	@ 0x65e
9001987e:	4283      	cmp	r3, r0
90019880:	d804      	bhi.n	9001988c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
90019882:	f240 605d 	movw	r0, #1629	@ 0x65d
90019886:	4283      	cmp	r3, r0
90019888:	d3d2      	bcc.n	90019830 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001988a:	e7aa      	b.n	900197e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001988c:	f240 605f 	movw	r0, #1631	@ 0x65f
90019890:	4283      	cmp	r3, r0
90019892:	d0cd      	beq.n	90019830 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019894:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
90019898:	d0a3      	beq.n	900197e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001989a:	00cb      	lsls	r3, r1, #3
9001989c:	0649      	lsls	r1, r1, #25
9001989e:	f403 7080 	and.w	r0, r3, #256	@ 0x100
900198a2:	7a13      	ldrb	r3, [r2, #8]
900198a4:	ea43 0300 	orr.w	r3, r3, r0
900198a8:	bf44      	itt	mi
900198aa:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
900198ae:	b21b      	sxthmi	r3, r3
900198b0:	1b5d      	subs	r5, r3, r5
900198b2:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
900198b6:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
900198ba:	7b53      	ldrb	r3, [r2, #13]
900198bc:	015b      	lsls	r3, r3, #5
900198be:	f403 7180 	and.w	r1, r3, #256	@ 0x100
900198c2:	7993      	ldrb	r3, [r2, #6]
900198c4:	430b      	orrs	r3, r1
900198c6:	2105      	movs	r1, #5
900198c8:	005b      	lsls	r3, r3, #1
900198ca:	fb93 f3f1 	sdiv	r3, r3, r1
900198ce:	f992 1009 	ldrsb.w	r1, [r2, #9]
900198d2:	440b      	add	r3, r1
900198d4:	e756      	b.n	90019784 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
900198d6:	f240 60e2 	movw	r0, #1762	@ 0x6e2
900198da:	4283      	cmp	r3, r0
900198dc:	d809      	bhi.n	900198f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
900198de:	f240 60df 	movw	r0, #1759	@ 0x6df
900198e2:	4283      	cmp	r3, r0
900198e4:	f4bf af7d 	bcs.w	900197e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900198e8:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
900198ec:	2b05      	cmp	r3, #5
900198ee:	d8d4      	bhi.n	9001989a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
900198f0:	e777      	b.n	900197e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900198f2:	f240 60e3 	movw	r0, #1763	@ 0x6e3
900198f6:	4283      	cmp	r3, r0
900198f8:	d09a      	beq.n	90019830 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900198fa:	f240 60e4 	movw	r0, #1764	@ 0x6e4
900198fe:	4283      	cmp	r3, r0
90019900:	e7ca      	b.n	90019898 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
90019902:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
90019906:	d22b      	bcs.n	90019960 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
90019908:	f640 00ed 	movw	r0, #2285	@ 0x8ed
9001990c:	4283      	cmp	r3, r0
9001990e:	d28f      	bcs.n	90019830 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019910:	f640 00e5 	movw	r0, #2277	@ 0x8e5
90019914:	4283      	cmp	r3, r0
90019916:	d816      	bhi.n	90019946 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
90019918:	f640 00e4 	movw	r0, #2276	@ 0x8e4
9001991c:	4283      	cmp	r3, r0
9001991e:	f4bf af60 	bcs.w	900197e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019922:	f240 60ec 	movw	r0, #1772	@ 0x6ec
90019926:	4283      	cmp	r3, r0
90019928:	d80a      	bhi.n	90019940 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
9001992a:	f240 60eb 	movw	r0, #1771	@ 0x6eb
9001992e:	4283      	cmp	r3, r0
90019930:	f4bf af57 	bcs.w	900197e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019934:	f240 60ea 	movw	r0, #1770	@ 0x6ea
90019938:	4283      	cmp	r3, r0
9001993a:	f43f af79 	beq.w	90019830 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001993e:	e7ac      	b.n	9001989a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90019940:	f240 60ed 	movw	r0, #1773	@ 0x6ed
90019944:	e7f8      	b.n	90019938 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
90019946:	f640 00e8 	movw	r0, #2280	@ 0x8e8
9001994a:	4283      	cmp	r3, r0
9001994c:	d802      	bhi.n	90019954 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
9001994e:	f640 00e7 	movw	r0, #2279	@ 0x8e7
90019952:	e798      	b.n	90019886 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
90019954:	f640 00e9 	movw	r0, #2281	@ 0x8e9
90019958:	4283      	cmp	r3, r0
9001995a:	f47f af42 	bne.w	900197e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001995e:	e767      	b.n	90019830 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019960:	f640 00f6 	movw	r0, #2294	@ 0x8f6
90019964:	4283      	cmp	r3, r0
90019966:	f43f af63 	beq.w	90019830 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001996a:	d802      	bhi.n	90019972 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
9001996c:	f640 00f2 	movw	r0, #2290	@ 0x8f2
90019970:	e7f2      	b.n	90019958 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
90019972:	f640 00fa 	movw	r0, #2298	@ 0x8fa
90019976:	4283      	cmp	r3, r0
90019978:	d805      	bhi.n	90019986 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
9001997a:	f640 00f9 	movw	r0, #2297	@ 0x8f9
9001997e:	4283      	cmp	r3, r0
90019980:	f4ff af2f 	bcc.w	900197e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019984:	e754      	b.n	90019830 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019986:	f640 00fe 	movw	r0, #2302	@ 0x8fe
9001998a:	4283      	cmp	r3, r0
9001998c:	e7af      	b.n	900198ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
9001998e:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
90019992:	4617      	mov	r7, r2
90019994:	f102 0808 	add.w	r8, r2, #8
90019998:	4666      	mov	r6, ip
9001999a:	6838      	ldr	r0, [r7, #0]
9001999c:	3708      	adds	r7, #8
9001999e:	f857 1c04 	ldr.w	r1, [r7, #-4]
900199a2:	46e6      	mov	lr, ip
900199a4:	4547      	cmp	r7, r8
900199a6:	e8ae 0003 	stmia.w	lr!, {r0, r1}
900199aa:	46f4      	mov	ip, lr
900199ac:	d1f5      	bne.n	9001999a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
900199ae:	6838      	ldr	r0, [r7, #0]
900199b0:	f8ce 0000 	str.w	r0, [lr]
900199b4:	88b9      	ldrh	r1, [r7, #4]
900199b6:	f8ae 1004 	strh.w	r1, [lr, #4]
900199ba:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
900199be:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
900199c2:	d009      	beq.n	900199d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
900199c4:	7b51      	ldrb	r1, [r2, #13]
900199c6:	7992      	ldrb	r2, [r2, #6]
900199c8:	0149      	lsls	r1, r1, #5
900199ca:	f401 7180 	and.w	r1, r1, #256	@ 0x100
900199ce:	4311      	orrs	r1, r2
900199d0:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
900199d4:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
900199d8:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
900199dc:	b2ad      	uxth	r5, r5
900199de:	d00d      	beq.n	900199fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
900199e0:	442b      	add	r3, r5
900199e2:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
900199e6:	b29b      	uxth	r3, r3
900199e8:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
900199ec:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
900199f0:	10db      	asrs	r3, r3, #3
900199f2:	f003 0360 	and.w	r3, r3, #96	@ 0x60
900199f6:	4313      	orrs	r3, r2
900199f8:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
900199fc:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
90019a00:	00cb      	lsls	r3, r1, #3
90019a02:	064f      	lsls	r7, r1, #25
90019a04:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90019a08:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
90019a0c:	ea43 0302 	orr.w	r3, r3, r2
90019a10:	bf44      	itt	mi
90019a12:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90019a16:	b21b      	sxthmi	r3, r3
90019a18:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
90019a1c:	1b5b      	subs	r3, r3, r5
90019a1e:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
90019a22:	4632      	mov	r2, r6
90019a24:	e6f9      	b.n	9001981a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
90019a26:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
90019a2a:	4617      	mov	r7, r2
90019a2c:	f102 0908 	add.w	r9, r2, #8
90019a30:	4666      	mov	r6, ip
90019a32:	6838      	ldr	r0, [r7, #0]
90019a34:	3708      	adds	r7, #8
90019a36:	f857 1c04 	ldr.w	r1, [r7, #-4]
90019a3a:	46e0      	mov	r8, ip
90019a3c:	454f      	cmp	r7, r9
90019a3e:	e8a8 0003 	stmia.w	r8!, {r0, r1}
90019a42:	46c4      	mov	ip, r8
90019a44:	d1f5      	bne.n	90019a32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
90019a46:	6838      	ldr	r0, [r7, #0]
90019a48:	f8c8 0000 	str.w	r0, [r8]
90019a4c:	88b9      	ldrh	r1, [r7, #4]
90019a4e:	f8a8 1004 	strh.w	r1, [r8, #4]
90019a52:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
90019a56:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
90019a5a:	d009      	beq.n	90019a70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
90019a5c:	7b51      	ldrb	r1, [r2, #13]
90019a5e:	7992      	ldrb	r2, [r2, #6]
90019a60:	0149      	lsls	r1, r1, #5
90019a62:	f401 7180 	and.w	r1, r1, #256	@ 0x100
90019a66:	4311      	orrs	r1, r2
90019a68:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
90019a6c:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
90019a70:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
90019a74:	d00e      	beq.n	90019a94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
90019a76:	eba3 030e 	sub.w	r3, r3, lr
90019a7a:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
90019a7e:	b29b      	uxth	r3, r3
90019a80:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
90019a84:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
90019a88:	10db      	asrs	r3, r3, #3
90019a8a:	f003 0360 	and.w	r3, r3, #96	@ 0x60
90019a8e:	4313      	orrs	r3, r2
90019a90:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
90019a94:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
90019a98:	00cb      	lsls	r3, r1, #3
90019a9a:	0648      	lsls	r0, r1, #25
90019a9c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90019aa0:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
90019aa4:	ea43 0302 	orr.w	r3, r3, r2
90019aa8:	bf44      	itt	mi
90019aaa:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90019aae:	b21b      	sxthmi	r3, r3
90019ab0:	1b5d      	subs	r5, r3, r5
90019ab2:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
90019ab6:	e7b4      	b.n	90019a22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

90019ab8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
90019ab8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90019abc:	461e      	mov	r6, r3
90019abe:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90019ac0:	4604      	mov	r4, r0
90019ac2:	4617      	mov	r7, r2
90019ac4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90019ac8:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
90019acc:	f7eb fcc0 	bl	90005450 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90019ad0:	4605      	mov	r5, r0
90019ad2:	b918      	cbnz	r0, 90019adc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
90019ad4:	6030      	str	r0, [r6, #0]
90019ad6:	4628      	mov	r0, r5
90019ad8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90019adc:	683b      	ldr	r3, [r7, #0]
90019ade:	4601      	mov	r1, r0
90019ae0:	4638      	mov	r0, r7
90019ae2:	68db      	ldr	r3, [r3, #12]
90019ae4:	4798      	blx	r3
90019ae6:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
90019aea:	4602      	mov	r2, r0
90019aec:	6030      	str	r0, [r6, #0]
90019aee:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
90019af2:	d213      	bcs.n	90019b1c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
90019af4:	4643      	mov	r3, r8
90019af6:	4639      	mov	r1, r7
90019af8:	4620      	mov	r0, r4
90019afa:	f7ff fe39 	bl	90019770 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
90019afe:	6030      	str	r0, [r6, #0]
90019b00:	6833      	ldr	r3, [r6, #0]
90019b02:	b143      	cbz	r3, 90019b16 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
90019b04:	7b5a      	ldrb	r2, [r3, #13]
90019b06:	7a9b      	ldrb	r3, [r3, #10]
90019b08:	0052      	lsls	r2, r2, #1
90019b0a:	f402 7280 	and.w	r2, r2, #256	@ 0x100
90019b0e:	4313      	orrs	r3, r2
90019b10:	bf0c      	ite	eq
90019b12:	2301      	moveq	r3, #1
90019b14:	2300      	movne	r3, #0
90019b16:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
90019b1a:	e7dc      	b.n	90019ad6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
90019b1c:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
90019b20:	b29b      	uxth	r3, r3
90019b22:	2b7f      	cmp	r3, #127	@ 0x7f
90019b24:	d804      	bhi.n	90019b30 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
90019b26:	4639      	mov	r1, r7
90019b28:	4620      	mov	r0, r4
90019b2a:	f7ff fce7 	bl	900194fc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
90019b2e:	e7e6      	b.n	90019afe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
90019b30:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
90019b34:	2b00      	cmp	r3, #0
90019b36:	d0e3      	beq.n	90019b00 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
90019b38:	f640 1302 	movw	r3, #2306	@ 0x902
90019b3c:	429d      	cmp	r5, r3
90019b3e:	d1df      	bne.n	90019b00 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
90019b40:	4601      	mov	r1, r0
90019b42:	4620      	mov	r0, r4
90019b44:	f7ff fcaa 	bl	9001949c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
90019b48:	e7d9      	b.n	90019afe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

90019b4a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
90019b4a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90019b4e:	461e      	mov	r6, r3
90019b50:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90019b52:	4604      	mov	r4, r0
90019b54:	4617      	mov	r7, r2
90019b56:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90019b5a:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
90019b5e:	f7eb fc77 	bl	90005450 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90019b62:	4605      	mov	r5, r0
90019b64:	b918      	cbnz	r0, 90019b6e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
90019b66:	6030      	str	r0, [r6, #0]
90019b68:	4628      	mov	r0, r5
90019b6a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90019b6e:	683b      	ldr	r3, [r7, #0]
90019b70:	4601      	mov	r1, r0
90019b72:	4638      	mov	r0, r7
90019b74:	f8d3 9008 	ldr.w	r9, [r3, #8]
90019b78:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
90019b7c:	47c8      	blx	r9
90019b7e:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
90019b82:	4602      	mov	r2, r0
90019b84:	6030      	str	r0, [r6, #0]
90019b86:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
90019b8a:	d213      	bcs.n	90019bb4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
90019b8c:	4643      	mov	r3, r8
90019b8e:	4639      	mov	r1, r7
90019b90:	4620      	mov	r0, r4
90019b92:	f7ff fded 	bl	90019770 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
90019b96:	6030      	str	r0, [r6, #0]
90019b98:	6833      	ldr	r3, [r6, #0]
90019b9a:	b143      	cbz	r3, 90019bae <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
90019b9c:	7b5a      	ldrb	r2, [r3, #13]
90019b9e:	7a9b      	ldrb	r3, [r3, #10]
90019ba0:	0052      	lsls	r2, r2, #1
90019ba2:	f402 7280 	and.w	r2, r2, #256	@ 0x100
90019ba6:	4313      	orrs	r3, r2
90019ba8:	bf0c      	ite	eq
90019baa:	2301      	moveq	r3, #1
90019bac:	2300      	movne	r3, #0
90019bae:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
90019bb2:	e7d9      	b.n	90019b68 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
90019bb4:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
90019bb8:	b29b      	uxth	r3, r3
90019bba:	2b7f      	cmp	r3, #127	@ 0x7f
90019bbc:	d804      	bhi.n	90019bc8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
90019bbe:	4639      	mov	r1, r7
90019bc0:	4620      	mov	r0, r4
90019bc2:	f7ff fc9b 	bl	900194fc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
90019bc6:	e7e6      	b.n	90019b96 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
90019bc8:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
90019bcc:	2b00      	cmp	r3, #0
90019bce:	d0e3      	beq.n	90019b98 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
90019bd0:	f640 1302 	movw	r3, #2306	@ 0x902
90019bd4:	429d      	cmp	r5, r3
90019bd6:	d1df      	bne.n	90019b98 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
90019bd8:	4601      	mov	r1, r0
90019bda:	4620      	mov	r0, r4
90019bdc:	f7ff fc5e 	bl	9001949c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
90019be0:	e7d9      	b.n	90019b96 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

90019be2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
90019be2:	b510      	push	{r4, lr}
90019be4:	4604      	mov	r4, r0
90019be6:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
90019bea:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90019bec:	b1e1      	cbz	r1, 90019c28 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
90019bee:	2b0a      	cmp	r3, #10
90019bf0:	d02d      	beq.n	90019c4e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
90019bf2:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
90019bf4:	3901      	subs	r1, #1
90019bf6:	eb04 0042 	add.w	r0, r4, r2, lsl #1
90019bfa:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
90019bfc:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
90019c00:	1c51      	adds	r1, r2, #1
90019c02:	b289      	uxth	r1, r1
90019c04:	2901      	cmp	r1, #1
90019c06:	bf8a      	itet	hi
90019c08:	f102 32ff 	addhi.w	r2, r2, #4294967295
90019c0c:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
90019c0e:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
90019c10:	1c5a      	adds	r2, r3, #1
90019c12:	8722      	strh	r2, [r4, #56]	@ 0x38
90019c14:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90019c16:	4413      	add	r3, r2
90019c18:	b29b      	uxth	r3, r3
90019c1a:	2b09      	cmp	r3, #9
90019c1c:	bf88      	it	hi
90019c1e:	3b0a      	subhi	r3, #10
90019c20:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90019c24:	8458      	strh	r0, [r3, #34]	@ 0x22
90019c26:	e7de      	b.n	90019be6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
90019c28:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90019c2a:	2b0a      	cmp	r3, #10
90019c2c:	d00f      	beq.n	90019c4e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
90019c2e:	4620      	mov	r0, r4
90019c30:	f7ff fbf3 	bl	9001941a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
90019c34:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90019c36:	1c5a      	adds	r2, r3, #1
90019c38:	8722      	strh	r2, [r4, #56]	@ 0x38
90019c3a:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90019c3c:	4413      	add	r3, r2
90019c3e:	b29b      	uxth	r3, r3
90019c40:	2b09      	cmp	r3, #9
90019c42:	bf88      	it	hi
90019c44:	3b0a      	subhi	r3, #10
90019c46:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90019c4a:	8458      	strh	r0, [r3, #34]	@ 0x22
90019c4c:	e7ec      	b.n	90019c28 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
90019c4e:	bd10      	pop	{r4, pc}

90019c50 <_ZN8touchgfx12TextProvider11getNextCharEv>:
90019c50:	b538      	push	{r3, r4, r5, lr}
90019c52:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90019c54:	4604      	mov	r4, r0
90019c56:	eb00 0243 	add.w	r2, r0, r3, lsl #1
90019c5a:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
90019c5c:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
90019c5e:	3a01      	subs	r2, #1
90019c60:	8702      	strh	r2, [r0, #56]	@ 0x38
90019c62:	1c5a      	adds	r2, r3, #1
90019c64:	b292      	uxth	r2, r2
90019c66:	2a09      	cmp	r2, #9
90019c68:	bf8a      	itet	hi
90019c6a:	3b09      	subhi	r3, #9
90019c6c:	86c2      	strhls	r2, [r0, #54]	@ 0x36
90019c6e:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
90019c70:	f7ff ffb7 	bl	90019be2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
90019c74:	8c23      	ldrh	r3, [r4, #32]
90019c76:	2b01      	cmp	r3, #1
90019c78:	bf9c      	itt	ls
90019c7a:	3301      	addls	r3, #1
90019c7c:	8423      	strhls	r3, [r4, #32]
90019c7e:	8be3      	ldrh	r3, [r4, #30]
90019c80:	b90b      	cbnz	r3, 90019c86 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
90019c82:	2302      	movs	r3, #2
90019c84:	83e3      	strh	r3, [r4, #30]
90019c86:	8be3      	ldrh	r3, [r4, #30]
90019c88:	4628      	mov	r0, r5
90019c8a:	3b01      	subs	r3, #1
90019c8c:	b29b      	uxth	r3, r3
90019c8e:	83e3      	strh	r3, [r4, #30]
90019c90:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90019c94:	8365      	strh	r5, [r4, #26]
90019c96:	bd38      	pop	{r3, r4, r5, pc}

90019c98 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
90019c98:	428a      	cmp	r2, r1
90019c9a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90019c9e:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
90019ca0:	d932      	bls.n	90019d08 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
90019ca2:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
90019ca4:	1a54      	subs	r4, r2, r1
90019ca6:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
90019caa:	19ee      	adds	r6, r5, r7
90019cac:	fa1f fe84 	uxth.w	lr, r4
90019cb0:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
90019cb4:	3e01      	subs	r6, #1
90019cb6:	b2b4      	uxth	r4, r6
90019cb8:	eba4 090e 	sub.w	r9, r4, lr
90019cbc:	fa1f f989 	uxth.w	r9, r9
90019cc0:	2c09      	cmp	r4, #9
90019cc2:	4626      	mov	r6, r4
90019cc4:	bf88      	it	hi
90019cc6:	f1a4 060a 	subhi.w	r6, r4, #10
90019cca:	f1bc 0f00 	cmp.w	ip, #0
90019cce:	f104 34ff 	add.w	r4, r4, #4294967295
90019cd2:	bf08      	it	eq
90019cd4:	f04f 0c02 	moveq.w	ip, #2
90019cd8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
90019cdc:	b2a4      	uxth	r4, r4
90019cde:	f10c 3cff 	add.w	ip, ip, #4294967295
90019ce2:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
90019ce6:	454c      	cmp	r4, r9
90019ce8:	fa1f fc8c 	uxth.w	ip, ip
90019cec:	eb00 064c 	add.w	r6, r0, ip, lsl #1
90019cf0:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
90019cf4:	d1e4      	bne.n	90019cc0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
90019cf6:	eba5 050e 	sub.w	r5, r5, lr
90019cfa:	eb0e 0408 	add.w	r4, lr, r8
90019cfe:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
90019d02:	8705      	strh	r5, [r0, #56]	@ 0x38
90019d04:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
90019d08:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
90019d0a:	250a      	movs	r5, #10
90019d0c:	1a64      	subs	r4, r4, r1
90019d0e:	4439      	add	r1, r7
90019d10:	b289      	uxth	r1, r1
90019d12:	8704      	strh	r4, [r0, #56]	@ 0x38
90019d14:	2909      	cmp	r1, #9
90019d16:	bf88      	it	hi
90019d18:	390a      	subhi	r1, #10
90019d1a:	86c1      	strh	r1, [r0, #54]	@ 0x36
90019d1c:	b18a      	cbz	r2, 90019d42 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
90019d1e:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
90019d20:	3a01      	subs	r2, #1
90019d22:	3101      	adds	r1, #1
90019d24:	b292      	uxth	r2, r2
90019d26:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
90019d2a:	8701      	strh	r1, [r0, #56]	@ 0x38
90019d2c:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
90019d2e:	b901      	cbnz	r1, 90019d32 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
90019d30:	86c5      	strh	r5, [r0, #54]	@ 0x36
90019d32:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
90019d34:	3901      	subs	r1, #1
90019d36:	b289      	uxth	r1, r1
90019d38:	86c1      	strh	r1, [r0, #54]	@ 0x36
90019d3a:	eb00 0141 	add.w	r1, r0, r1, lsl #1
90019d3e:	844c      	strh	r4, [r1, #34]	@ 0x22
90019d40:	e7ec      	b.n	90019d1c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
90019d42:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90019d46:	f7ff bf4c 	b.w	90019be2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

90019d4a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
90019d4a:	b570      	push	{r4, r5, r6, lr}
90019d4c:	2500      	movs	r5, #0
90019d4e:	4295      	cmp	r5, r2
90019d50:	d011      	beq.n	90019d76 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
90019d52:	8bc4      	ldrh	r4, [r0, #30]
90019d54:	f831 6b02 	ldrh.w	r6, [r1], #2
90019d58:	4414      	add	r4, r2
90019d5a:	3c01      	subs	r4, #1
90019d5c:	1b64      	subs	r4, r4, r5
90019d5e:	b2a4      	uxth	r4, r4
90019d60:	2c01      	cmp	r4, #1
90019d62:	bf88      	it	hi
90019d64:	3c02      	subhi	r4, #2
90019d66:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90019d6a:	8b64      	ldrh	r4, [r4, #26]
90019d6c:	42b4      	cmp	r4, r6
90019d6e:	d117      	bne.n	90019da0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
90019d70:	3501      	adds	r5, #1
90019d72:	b2ad      	uxth	r5, r5
90019d74:	e7eb      	b.n	90019d4e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
90019d76:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90019d7a:	2400      	movs	r4, #0
90019d7c:	4413      	add	r3, r2
90019d7e:	b2a2      	uxth	r2, r4
90019d80:	429a      	cmp	r2, r3
90019d82:	da0f      	bge.n	90019da4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
90019d84:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
90019d86:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
90019d8a:	3401      	adds	r4, #1
90019d8c:	4432      	add	r2, r6
90019d8e:	b292      	uxth	r2, r2
90019d90:	2a09      	cmp	r2, #9
90019d92:	bf88      	it	hi
90019d94:	3a0a      	subhi	r2, #10
90019d96:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90019d9a:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
90019d9c:	42aa      	cmp	r2, r5
90019d9e:	d0ee      	beq.n	90019d7e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
90019da0:	2000      	movs	r0, #0
90019da2:	bd70      	pop	{r4, r5, r6, pc}
90019da4:	2001      	movs	r0, #1
90019da6:	e7fc      	b.n	90019da2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

90019da8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
90019da8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019dac:	4605      	mov	r5, r0
90019dae:	4616      	mov	r6, r2
90019db0:	1c8c      	adds	r4, r1, #2
90019db2:	8809      	ldrh	r1, [r1, #0]
90019db4:	ea4f 3a11 	mov.w	sl, r1, lsr #12
90019db8:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
90019dbc:	42b3      	cmp	r3, r6
90019dbe:	d124      	bne.n	90019e0a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
90019dc0:	f3c1 2903 	ubfx	r9, r1, #8, #4
90019dc4:	f3c1 1803 	ubfx	r8, r1, #4, #4
90019dc8:	f001 070f 	and.w	r7, r1, #15
90019dcc:	4652      	mov	r2, sl
90019dce:	f8cd 8000 	str.w	r8, [sp]
90019dd2:	464b      	mov	r3, r9
90019dd4:	4621      	mov	r1, r4
90019dd6:	4628      	mov	r0, r5
90019dd8:	f7ff ffb7 	bl	90019d4a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
90019ddc:	4683      	mov	fp, r0
90019dde:	b168      	cbz	r0, 90019dfc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
90019de0:	eb0a 0109 	add.w	r1, sl, r9
90019de4:	463a      	mov	r2, r7
90019de6:	4628      	mov	r0, r5
90019de8:	4441      	add	r1, r8
90019dea:	eb04 0341 	add.w	r3, r4, r1, lsl #1
90019dee:	4649      	mov	r1, r9
90019df0:	f7ff ff52 	bl	90019c98 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
90019df4:	4658      	mov	r0, fp
90019df6:	b003      	add	sp, #12
90019df8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90019dfc:	eb07 010a 	add.w	r1, r7, sl
90019e00:	4449      	add	r1, r9
90019e02:	4441      	add	r1, r8
90019e04:	eb04 0141 	add.w	r1, r4, r1, lsl #1
90019e08:	e7d2      	b.n	90019db0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
90019e0a:	f04f 0b00 	mov.w	fp, #0
90019e0e:	e7f1      	b.n	90019df4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

90019e10 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
90019e10:	b570      	push	{r4, r5, r6, lr}
90019e12:	8810      	ldrh	r0, [r2, #0]
90019e14:	4298      	cmp	r0, r3
90019e16:	d817      	bhi.n	90019e48 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90019e18:	1e48      	subs	r0, r1, #1
90019e1a:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
90019e1e:	4298      	cmp	r0, r3
90019e20:	d312      	bcc.n	90019e48 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90019e22:	2400      	movs	r4, #0
90019e24:	428c      	cmp	r4, r1
90019e26:	d20f      	bcs.n	90019e48 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90019e28:	1860      	adds	r0, r4, r1
90019e2a:	1040      	asrs	r0, r0, #1
90019e2c:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
90019e30:	0085      	lsls	r5, r0, #2
90019e32:	42b3      	cmp	r3, r6
90019e34:	d902      	bls.n	90019e3c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
90019e36:	3001      	adds	r0, #1
90019e38:	b284      	uxth	r4, r0
90019e3a:	e7f3      	b.n	90019e24 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
90019e3c:	d201      	bcs.n	90019e42 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
90019e3e:	b281      	uxth	r1, r0
90019e40:	e7f0      	b.n	90019e24 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
90019e42:	442a      	add	r2, r5
90019e44:	8850      	ldrh	r0, [r2, #2]
90019e46:	bd70      	pop	{r4, r5, r6, pc}
90019e48:	2000      	movs	r0, #0
90019e4a:	e7fc      	b.n	90019e46 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

90019e4c <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
90019e4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90019e50:	6c45      	ldr	r5, [r0, #68]	@ 0x44
90019e52:	4604      	mov	r4, r0
90019e54:	260b      	movs	r6, #11
90019e56:	886f      	ldrh	r7, [r5, #2]
90019e58:	087f      	lsrs	r7, r7, #1
90019e5a:	3e01      	subs	r6, #1
90019e5c:	d013      	beq.n	90019e86 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
90019e5e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
90019e60:	462a      	mov	r2, r5
90019e62:	4639      	mov	r1, r7
90019e64:	4620      	mov	r0, r4
90019e66:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90019e6a:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
90019e6e:	4643      	mov	r3, r8
90019e70:	f7ff ffce 	bl	90019e10 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
90019e74:	b138      	cbz	r0, 90019e86 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
90019e76:	eb05 0140 	add.w	r1, r5, r0, lsl #1
90019e7a:	4642      	mov	r2, r8
90019e7c:	4620      	mov	r0, r4
90019e7e:	f7ff ff93 	bl	90019da8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
90019e82:	2800      	cmp	r0, #0
90019e84:	d1e9      	bne.n	90019e5a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
90019e86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

90019e8c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
90019e8c:	b570      	push	{r4, r5, r6, lr}
90019e8e:	694a      	ldr	r2, [r1, #20]
90019e90:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
90019e92:	684b      	ldr	r3, [r1, #4]
90019e94:	1b54      	subs	r4, r2, r5
90019e96:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
90019e98:	f000 8106 	beq.w	9001a0a8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
90019e9c:	1b9b      	subs	r3, r3, r6
90019e9e:	d003      	beq.n	90019ea8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
90019ea0:	4363      	muls	r3, r4
90019ea2:	2210      	movs	r2, #16
90019ea4:	fb93 f3f2 	sdiv	r3, r3, r2
90019ea8:	680c      	ldr	r4, [r1, #0]
90019eaa:	698a      	ldr	r2, [r1, #24]
90019eac:	1b65      	subs	r5, r4, r5
90019eae:	f000 80fd 	beq.w	9001a0ac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
90019eb2:	1b92      	subs	r2, r2, r6
90019eb4:	d003      	beq.n	90019ebe <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
90019eb6:	436a      	muls	r2, r5
90019eb8:	2410      	movs	r4, #16
90019eba:	fb92 f2f4 	sdiv	r2, r2, r4
90019ebe:	1a9b      	subs	r3, r3, r2
90019ec0:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 9001a0e8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
90019ec4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90019ec8:	460a      	mov	r2, r1
90019eca:	ee07 3a90 	vmov	s15, r3
90019ece:	f100 040c 	add.w	r4, r0, #12
90019ed2:	4603      	mov	r3, r0
90019ed4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90019ed8:	ee67 7a84 	vmul.f32	s15, s15, s8
90019edc:	ee87 3a27 	vdiv.f32	s6, s14, s15
90019ee0:	eeb1 6a43 	vneg.f32	s12, s6
90019ee4:	edd2 7a02 	vldr	s15, [r2, #8]
90019ee8:	3214      	adds	r2, #20
90019eea:	eec7 6a27 	vdiv.f32	s13, s14, s15
90019eee:	ece3 6a01 	vstmia	r3!, {s13}
90019ef2:	429c      	cmp	r4, r3
90019ef4:	ed52 7a02 	vldr	s15, [r2, #-8]
90019ef8:	ee67 7aa6 	vmul.f32	s15, s15, s13
90019efc:	edc3 7a02 	vstr	s15, [r3, #8]
90019f00:	ed52 7a01 	vldr	s15, [r2, #-4]
90019f04:	ee67 7aa6 	vmul.f32	s15, s15, s13
90019f08:	edc3 7a05 	vstr	s15, [r3, #20]
90019f0c:	d1ea      	bne.n	90019ee4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
90019f0e:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
90019f10:	698b      	ldr	r3, [r1, #24]
90019f12:	edd0 4a02 	vldr	s9, [r0, #8]
90019f16:	1a9b      	subs	r3, r3, r2
90019f18:	edd0 3a00 	vldr	s7, [r0]
90019f1c:	edd0 6a01 	vldr	s13, [r0, #4]
90019f20:	ee07 3a90 	vmov	s15, r3
90019f24:	684b      	ldr	r3, [r1, #4]
90019f26:	ee76 6ae4 	vsub.f32	s13, s13, s9
90019f2a:	ed90 5a05 	vldr	s10, [r0, #20]
90019f2e:	1a9b      	subs	r3, r3, r2
90019f30:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90019f34:	ee73 4ae4 	vsub.f32	s9, s7, s9
90019f38:	ed90 2a03 	vldr	s4, [r0, #12]
90019f3c:	ee07 3a10 	vmov	s14, r3
90019f40:	edd0 5a04 	vldr	s11, [r0, #16]
90019f44:	ee67 7a84 	vmul.f32	s15, s15, s8
90019f48:	ed90 1a07 	vldr	s2, [r0, #28]
90019f4c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90019f50:	edd0 2a06 	vldr	s5, [r0, #24]
90019f54:	ee75 5ac5 	vsub.f32	s11, s11, s10
90019f58:	ee64 7ae7 	vnmul.f32	s15, s9, s15
90019f5c:	ee27 7a04 	vmul.f32	s14, s14, s8
90019f60:	ee32 5a45 	vsub.f32	s10, s4, s10
90019f64:	eee6 7a87 	vfma.f32	s15, s13, s14
90019f68:	ee67 7a83 	vmul.f32	s15, s15, s6
90019f6c:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
90019f70:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
90019f72:	694a      	ldr	r2, [r1, #20]
90019f74:	1b13      	subs	r3, r2, r4
90019f76:	ee07 3a10 	vmov	s14, r3
90019f7a:	680b      	ldr	r3, [r1, #0]
90019f7c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90019f80:	1b1b      	subs	r3, r3, r4
90019f82:	ee27 7a04 	vmul.f32	s14, s14, s8
90019f86:	ee64 4ac7 	vnmul.f32	s9, s9, s14
90019f8a:	ee07 3a10 	vmov	s14, r3
90019f8e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90019f92:	ee27 7a04 	vmul.f32	s14, s14, s8
90019f96:	eee6 4a87 	vfma.f32	s9, s13, s14
90019f9a:	ee64 4a86 	vmul.f32	s9, s9, s12
90019f9e:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
90019fa2:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
90019fa4:	698b      	ldr	r3, [r1, #24]
90019fa6:	1a9b      	subs	r3, r3, r2
90019fa8:	ee06 3a90 	vmov	s13, r3
90019fac:	684b      	ldr	r3, [r1, #4]
90019fae:	1a9b      	subs	r3, r3, r2
90019fb0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90019fb4:	ee07 3a10 	vmov	s14, r3
90019fb8:	ee66 6a84 	vmul.f32	s13, s13, s8
90019fbc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90019fc0:	ee65 6a66 	vnmul.f32	s13, s10, s13
90019fc4:	ee27 7a04 	vmul.f32	s14, s14, s8
90019fc8:	eee5 6a87 	vfma.f32	s13, s11, s14
90019fcc:	ee66 6a83 	vmul.f32	s13, s13, s6
90019fd0:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
90019fd4:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
90019fd6:	694a      	ldr	r2, [r1, #20]
90019fd8:	1b13      	subs	r3, r2, r4
90019fda:	ee07 3a10 	vmov	s14, r3
90019fde:	680b      	ldr	r3, [r1, #0]
90019fe0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90019fe4:	1b1b      	subs	r3, r3, r4
90019fe6:	ee27 7a04 	vmul.f32	s14, s14, s8
90019fea:	ee25 5a47 	vnmul.f32	s10, s10, s14
90019fee:	ee07 3a10 	vmov	s14, r3
90019ff2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90019ff6:	ee27 7a04 	vmul.f32	s14, s14, s8
90019ffa:	eea5 5a87 	vfma.f32	s10, s11, s14
90019ffe:	edd0 5a08 	vldr	s11, [r0, #32]
9001a002:	ee31 1a65 	vsub.f32	s2, s2, s11
9001a006:	ee72 5ae5 	vsub.f32	s11, s5, s11
9001a00a:	ee25 5a06 	vmul.f32	s10, s10, s12
9001a00e:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
9001a012:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001a014:	698b      	ldr	r3, [r1, #24]
9001a016:	1a9b      	subs	r3, r3, r2
9001a018:	ee07 3a10 	vmov	s14, r3
9001a01c:	684b      	ldr	r3, [r1, #4]
9001a01e:	1a9b      	subs	r3, r3, r2
9001a020:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a024:	ee01 3a90 	vmov	s3, r3
9001a028:	ee27 7a04 	vmul.f32	s14, s14, s8
9001a02c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
9001a030:	ee25 7ac7 	vnmul.f32	s14, s11, s14
9001a034:	ee61 1a84 	vmul.f32	s3, s3, s8
9001a038:	eea1 7a21 	vfma.f32	s14, s2, s3
9001a03c:	ee27 7a03 	vmul.f32	s14, s14, s6
9001a040:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
9001a044:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
9001a046:	694a      	ldr	r2, [r1, #20]
9001a048:	1b13      	subs	r3, r2, r4
9001a04a:	ee03 3a10 	vmov	s6, r3
9001a04e:	680b      	ldr	r3, [r1, #0]
9001a050:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001a054:	1b1b      	subs	r3, r3, r4
9001a056:	ee23 3a04 	vmul.f32	s6, s6, s8
9001a05a:	ee65 5ac3 	vnmul.f32	s11, s11, s6
9001a05e:	ee03 3a10 	vmov	s6, r3
9001a062:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001a066:	ee23 4a04 	vmul.f32	s8, s6, s8
9001a06a:	eee1 5a04 	vfma.f32	s11, s2, s8
9001a06e:	ee25 6a86 	vmul.f32	s12, s11, s12
9001a072:	ee62 5a67 	vnmul.f32	s11, s4, s15
9001a076:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
9001a07a:	eee3 5aa6 	vfma.f32	s11, s7, s13
9001a07e:	eef5 5ac0 	vcmpe.f32	s11, #0.0
9001a082:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001a086:	dd13      	ble.n	9001a0b0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
9001a088:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001a08c:	ee62 7ae7 	vnmul.f32	s15, s5, s15
9001a090:	63c3      	str	r3, [r0, #60]	@ 0x3c
9001a092:	eee3 7a87 	vfma.f32	s15, s7, s14
9001a096:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001a09a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001a09e:	dd15      	ble.n	9001a0cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
9001a0a0:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001a0a4:	6403      	str	r3, [r0, #64]	@ 0x40
9001a0a6:	bd70      	pop	{r4, r5, r6, pc}
9001a0a8:	4623      	mov	r3, r4
9001a0aa:	e6fd      	b.n	90019ea8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
9001a0ac:	462a      	mov	r2, r5
9001a0ae:	e706      	b.n	90019ebe <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
9001a0b0:	d502      	bpl.n	9001a0b8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
9001a0b2:	f647 73ff 	movw	r3, #32767	@ 0x7fff
9001a0b6:	e7e9      	b.n	9001a08c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
9001a0b8:	ee22 2a64 	vnmul.f32	s4, s4, s9
9001a0bc:	eea3 2a85 	vfma.f32	s4, s7, s10
9001a0c0:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
9001a0c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001a0c8:	dade      	bge.n	9001a088 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
9001a0ca:	e7f2      	b.n	9001a0b2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
9001a0cc:	d502      	bpl.n	9001a0d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
9001a0ce:	f647 73ff 	movw	r3, #32767	@ 0x7fff
9001a0d2:	e7e7      	b.n	9001a0a4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
9001a0d4:	ee62 4ae4 	vnmul.f32	s9, s5, s9
9001a0d8:	eee3 4a86 	vfma.f32	s9, s7, s12
9001a0dc:	eef5 4ac0 	vcmpe.f32	s9, #0.0
9001a0e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001a0e4:	dadc      	bge.n	9001a0a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
9001a0e6:	e7f2      	b.n	9001a0ce <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
9001a0e8:	3d800000 	.word	0x3d800000

9001a0ec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
9001a0ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001a0f0:	2714      	movs	r7, #20
9001a0f2:	435f      	muls	r7, r3
9001a0f4:	eb02 0c07 	add.w	ip, r2, r7
9001a0f8:	f8dc 5004 	ldr.w	r5, [ip, #4]
9001a0fc:	f115 0e0f 	adds.w	lr, r5, #15
9001a100:	f100 80a2 	bmi.w	9001a248 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
9001a104:	ea4f 1e2e 	mov.w	lr, lr, asr #4
9001a108:	9c08      	ldr	r4, [sp, #32]
9001a10a:	2614      	movs	r6, #20
9001a10c:	f8c0 e014 	str.w	lr, [r0, #20]
9001a110:	4366      	muls	r6, r4
9001a112:	eb02 0806 	add.w	r8, r2, r6
9001a116:	f8d8 5004 	ldr.w	r5, [r8, #4]
9001a11a:	f115 040f 	adds.w	r4, r5, #15
9001a11e:	f100 809f 	bmi.w	9001a260 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
9001a122:	1124      	asrs	r4, r4, #4
9001a124:	eba4 040e 	sub.w	r4, r4, lr
9001a128:	6184      	str	r4, [r0, #24]
9001a12a:	2c00      	cmp	r4, #0
9001a12c:	f000 808a 	beq.w	9001a244 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
9001a130:	f8dc 9004 	ldr.w	r9, [ip, #4]
9001a134:	f8d8 4004 	ldr.w	r4, [r8, #4]
9001a138:	5995      	ldr	r5, [r2, r6]
9001a13a:	eba4 0809 	sub.w	r8, r4, r9
9001a13e:	59d4      	ldr	r4, [r2, r7]
9001a140:	eba5 0a04 	sub.w	sl, r5, r4
9001a144:	ea4f 1608 	mov.w	r6, r8, lsl #4
9001a148:	ea4f 150a 	mov.w	r5, sl, lsl #4
9001a14c:	fb0e fe05 	mul.w	lr, lr, r5
9001a150:	fb0a ee19 	mls	lr, sl, r9, lr
9001a154:	fb08 e404 	mla	r4, r8, r4, lr
9001a158:	3c01      	subs	r4, #1
9001a15a:	19a4      	adds	r4, r4, r6
9001a15c:	f100 808c 	bmi.w	9001a278 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
9001a160:	fb94 fef6 	sdiv	lr, r4, r6
9001a164:	fb06 441e 	mls	r4, r6, lr, r4
9001a168:	f8c0 e000 	str.w	lr, [r0]
9001a16c:	6104      	str	r4, [r0, #16]
9001a16e:	2d00      	cmp	r5, #0
9001a170:	f2c0 8095 	blt.w	9001a29e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
9001a174:	fb95 f4f6 	sdiv	r4, r5, r6
9001a178:	fb06 5514 	mls	r5, r6, r4, r5
9001a17c:	6044      	str	r4, [r0, #4]
9001a17e:	6085      	str	r5, [r0, #8]
9001a180:	60c6      	str	r6, [r0, #12]
9001a182:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001a186:	f8dc 4004 	ldr.w	r4, [ip, #4]
9001a18a:	6945      	ldr	r5, [r0, #20]
9001a18c:	59d2      	ldr	r2, [r2, r7]
9001a18e:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
9001a192:	eddf 6a4b 	vldr	s13, [pc, #300]	@ 9001a2c0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
9001a196:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
9001a19a:	ee07 4a10 	vmov	s14, r4
9001a19e:	6804      	ldr	r4, [r0, #0]
9001a1a0:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
9001a1a4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a1a8:	ee07 2a90 	vmov	s15, r2
9001a1ac:	ee27 7a26 	vmul.f32	s14, s14, s13
9001a1b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001a1b4:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001a1b8:	edd3 6a00 	vldr	s13, [r3]
9001a1bc:	eee6 6a07 	vfma.f32	s13, s12, s14
9001a1c0:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
9001a1c4:	eee6 6a27 	vfma.f32	s13, s12, s15
9001a1c8:	edc0 6a07 	vstr	s13, [r0, #28]
9001a1cc:	edd0 6a01 	vldr	s13, [r0, #4]
9001a1d0:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
9001a1d4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001a1d8:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
9001a1dc:	eea6 6aa5 	vfma.f32	s12, s13, s11
9001a1e0:	ed80 6a08 	vstr	s12, [r0, #32]
9001a1e4:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
9001a1e6:	6242      	str	r2, [r0, #36]	@ 0x24
9001a1e8:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
9001a1ec:	ed93 6a03 	vldr	s12, [r3, #12]
9001a1f0:	eea5 6a87 	vfma.f32	s12, s11, s14
9001a1f4:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
9001a1f8:	eea5 6aa7 	vfma.f32	s12, s11, s15
9001a1fc:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
9001a200:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
9001a204:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
9001a208:	eea6 6aa5 	vfma.f32	s12, s13, s11
9001a20c:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
9001a210:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001a212:	6302      	str	r2, [r0, #48]	@ 0x30
9001a214:	ed93 6a06 	vldr	s12, [r3, #24]
9001a218:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
9001a21c:	eea5 6a87 	vfma.f32	s12, s11, s14
9001a220:	eeb0 7a46 	vmov.f32	s14, s12
9001a224:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
9001a228:	eea6 7a27 	vfma.f32	s14, s12, s15
9001a22c:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
9001a230:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
9001a234:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
9001a238:	eee6 7a87 	vfma.f32	s15, s13, s14
9001a23c:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
9001a240:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
9001a242:	63c3      	str	r3, [r0, #60]	@ 0x3c
9001a244:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001a248:	2410      	movs	r4, #16
9001a24a:	f1c5 0501 	rsb	r5, r5, #1
9001a24e:	fb9e fef4 	sdiv	lr, lr, r4
9001a252:	f015 050f 	ands.w	r5, r5, #15
9001a256:	bf18      	it	ne
9001a258:	2501      	movne	r5, #1
9001a25a:	ebae 0e05 	sub.w	lr, lr, r5
9001a25e:	e753      	b.n	9001a108 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
9001a260:	f04f 0910 	mov.w	r9, #16
9001a264:	f1c5 0501 	rsb	r5, r5, #1
9001a268:	fb94 f4f9 	sdiv	r4, r4, r9
9001a26c:	f015 050f 	ands.w	r5, r5, #15
9001a270:	bf18      	it	ne
9001a272:	2501      	movne	r5, #1
9001a274:	1b64      	subs	r4, r4, r5
9001a276:	e755      	b.n	9001a124 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
9001a278:	4264      	negs	r4, r4
9001a27a:	fb94 fef6 	sdiv	lr, r4, r6
9001a27e:	f1ce 0800 	rsb	r8, lr, #0
9001a282:	fb06 441e 	mls	r4, r6, lr, r4
9001a286:	f8c0 8000 	str.w	r8, [r0]
9001a28a:	6104      	str	r4, [r0, #16]
9001a28c:	2c00      	cmp	r4, #0
9001a28e:	f43f af6e 	beq.w	9001a16e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
9001a292:	ea6f 0e0e 	mvn.w	lr, lr
9001a296:	1b34      	subs	r4, r6, r4
9001a298:	f8c0 e000 	str.w	lr, [r0]
9001a29c:	e766      	b.n	9001a16c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
9001a29e:	426d      	negs	r5, r5
9001a2a0:	fb95 f4f6 	sdiv	r4, r5, r6
9001a2a4:	f1c4 0e00 	rsb	lr, r4, #0
9001a2a8:	fb06 5514 	mls	r5, r6, r4, r5
9001a2ac:	f8c0 e004 	str.w	lr, [r0, #4]
9001a2b0:	6085      	str	r5, [r0, #8]
9001a2b2:	2d00      	cmp	r5, #0
9001a2b4:	f43f af64 	beq.w	9001a180 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
9001a2b8:	43e4      	mvns	r4, r4
9001a2ba:	1b75      	subs	r5, r6, r5
9001a2bc:	6044      	str	r4, [r0, #4]
9001a2be:	e75e      	b.n	9001a17e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
9001a2c0:	3d800000 	.word	0x3d800000

9001a2c4 <_ZN8touchgfx7Unicode6strlenEPKt>:
9001a2c4:	4602      	mov	r2, r0
9001a2c6:	b148      	cbz	r0, 9001a2dc <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
9001a2c8:	2300      	movs	r3, #0
9001a2ca:	b298      	uxth	r0, r3
9001a2cc:	3301      	adds	r3, #1
9001a2ce:	eb02 0143 	add.w	r1, r2, r3, lsl #1
9001a2d2:	f831 1c02 	ldrh.w	r1, [r1, #-2]
9001a2d6:	2900      	cmp	r1, #0
9001a2d8:	d1f7      	bne.n	9001a2ca <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
9001a2da:	4770      	bx	lr
9001a2dc:	4770      	bx	lr

9001a2de <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
9001a2de:	b530      	push	{r4, r5, lr}
9001a2e0:	4604      	mov	r4, r0
9001a2e2:	b159      	cbz	r1, 9001a2fc <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
9001a2e4:	b148      	cbz	r0, 9001a2fa <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
9001a2e6:	2300      	movs	r3, #0
9001a2e8:	b298      	uxth	r0, r3
9001a2ea:	4282      	cmp	r2, r0
9001a2ec:	d905      	bls.n	9001a2fa <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
9001a2ee:	5ccd      	ldrb	r5, [r1, r3]
9001a2f0:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
9001a2f4:	3301      	adds	r3, #1
9001a2f6:	2d00      	cmp	r5, #0
9001a2f8:	d1f6      	bne.n	9001a2e8 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
9001a2fa:	bd30      	pop	{r4, r5, pc}
9001a2fc:	4608      	mov	r0, r1
9001a2fe:	e7fc      	b.n	9001a2fa <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

9001a300 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
9001a300:	b5f0      	push	{r4, r5, r6, r7, lr}
9001a302:	b08b      	sub	sp, #44	@ 0x2c
9001a304:	468c      	mov	ip, r1
9001a306:	4604      	mov	r4, r0
9001a308:	2100      	movs	r1, #0
9001a30a:	261f      	movs	r6, #31
9001a30c:	af01      	add	r7, sp, #4
9001a30e:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
9001a312:	1e71      	subs	r1, r6, #1
9001a314:	fb94 fef3 	sdiv	lr, r4, r3
9001a318:	fb03 441e 	mls	r4, r3, lr, r4
9001a31c:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
9001a320:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
9001a324:	b2ec      	uxtb	r4, r5
9001a326:	2d09      	cmp	r5, #9
9001a328:	bfd4      	ite	le
9001a32a:	3430      	addle	r4, #48	@ 0x30
9001a32c:	3457      	addgt	r4, #87	@ 0x57
9001a32e:	b2e4      	uxtb	r4, r4
9001a330:	55bc      	strb	r4, [r7, r6]
9001a332:	4674      	mov	r4, lr
9001a334:	b974      	cbnz	r4, 9001a354 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
9001a336:	2800      	cmp	r0, #0
9001a338:	da05      	bge.n	9001a346 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
9001a33a:	ab0a      	add	r3, sp, #40	@ 0x28
9001a33c:	4419      	add	r1, r3
9001a33e:	232d      	movs	r3, #45	@ 0x2d
9001a340:	f801 3c24 	strb.w	r3, [r1, #-36]
9001a344:	1eb1      	subs	r1, r6, #2
9001a346:	3101      	adds	r1, #1
9001a348:	4660      	mov	r0, ip
9001a34a:	4439      	add	r1, r7
9001a34c:	f7ff ffc7 	bl	9001a2de <_ZN8touchgfx7Unicode7strncpyEPtPKct>
9001a350:	b00b      	add	sp, #44	@ 0x2c
9001a352:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001a354:	460e      	mov	r6, r1
9001a356:	e7dc      	b.n	9001a312 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

9001a358 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
9001a358:	b5f0      	push	{r4, r5, r6, r7, lr}
9001a35a:	468c      	mov	ip, r1
9001a35c:	b08b      	sub	sp, #44	@ 0x2c
9001a35e:	2100      	movs	r1, #0
9001a360:	ae01      	add	r6, sp, #4
9001a362:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
9001a366:	211f      	movs	r1, #31
9001a368:	fbb0 f7f3 	udiv	r7, r0, r3
9001a36c:	fb03 0517 	mls	r5, r3, r7, r0
9001a370:	4638      	mov	r0, r7
9001a372:	b2ec      	uxtb	r4, r5
9001a374:	2d09      	cmp	r5, #9
9001a376:	bfd4      	ite	le
9001a378:	3430      	addle	r4, #48	@ 0x30
9001a37a:	3457      	addgt	r4, #87	@ 0x57
9001a37c:	b2e4      	uxtb	r4, r4
9001a37e:	558c      	strb	r4, [r1, r6]
9001a380:	1e4c      	subs	r4, r1, #1
9001a382:	b92f      	cbnz	r7, 9001a390 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
9001a384:	4431      	add	r1, r6
9001a386:	4660      	mov	r0, ip
9001a388:	f7ff ffa9 	bl	9001a2de <_ZN8touchgfx7Unicode7strncpyEPtPKct>
9001a38c:	b00b      	add	sp, #44	@ 0x2c
9001a38e:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001a390:	4621      	mov	r1, r4
9001a392:	e7e9      	b.n	9001a368 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

9001a394 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
9001a394:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a398:	b085      	sub	sp, #20
9001a39a:	4691      	mov	r9, r2
9001a39c:	6802      	ldr	r2, [r0, #0]
9001a39e:	4688      	mov	r8, r1
9001a3a0:	461c      	mov	r4, r3
9001a3a2:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
9001a3a6:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
9001a3aa:	4683      	mov	fp, r0
9001a3ac:	4610      	mov	r0, r2
9001a3ae:	9103      	str	r1, [sp, #12]
9001a3b0:	9302      	str	r3, [sp, #8]
9001a3b2:	9201      	str	r2, [sp, #4]
9001a3b4:	f7ff ff86 	bl	9001a2c4 <_ZN8touchgfx7Unicode6strlenEPKt>
9001a3b8:	f1b8 0f00 	cmp.w	r8, #0
9001a3bc:	bf0c      	ite	eq
9001a3be:	4684      	moveq	ip, r0
9001a3c0:	f100 0c01 	addne.w	ip, r0, #1
9001a3c4:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
9001a3c8:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
9001a3cc:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001a3ce:	fa1f fc8c 	uxth.w	ip, ip
9001a3d2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001a3d4:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
9001a3d8:	9903      	ldr	r1, [sp, #12]
9001a3da:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
9001a3de:	d041      	beq.n	9001a464 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
9001a3e0:	d834      	bhi.n	9001a44c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
9001a3e2:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
9001a3e6:	d059      	beq.n	9001a49c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
9001a3e8:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
9001a3ec:	d03a      	beq.n	9001a464 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
9001a3ee:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
9001a3f2:	d034      	beq.n	9001a45e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
9001a3f4:	2400      	movs	r4, #0
9001a3f6:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
9001a3fa:	3a01      	subs	r2, #1
9001a3fc:	b169      	cbz	r1, 9001a41a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001a3fe:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001a400:	458c      	cmp	ip, r1
9001a402:	da09      	bge.n	9001a418 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
9001a404:	eba1 010c 	sub.w	r1, r1, ip
9001a408:	b289      	uxth	r1, r1
9001a40a:	b933      	cbnz	r3, 9001a41a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001a40c:	2e00      	cmp	r6, #0
9001a40e:	d051      	beq.n	9001a4b4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
9001a410:	2800      	cmp	r0, #0
9001a412:	d04f      	beq.n	9001a4b4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
9001a414:	440c      	add	r4, r1
9001a416:	b2a4      	uxth	r4, r4
9001a418:	2100      	movs	r1, #0
9001a41a:	682b      	ldr	r3, [r5, #0]
9001a41c:	4293      	cmp	r3, r2
9001a41e:	da07      	bge.n	9001a430 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
9001a420:	f1b8 0f00 	cmp.w	r8, #0
9001a424:	d004      	beq.n	9001a430 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
9001a426:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
9001a42a:	682b      	ldr	r3, [r5, #0]
9001a42c:	3301      	adds	r3, #1
9001a42e:	602b      	str	r3, [r5, #0]
9001a430:	2730      	movs	r7, #48	@ 0x30
9001a432:	2c00      	cmp	r4, #0
9001a434:	d04e      	beq.n	9001a4d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001a436:	682e      	ldr	r6, [r5, #0]
9001a438:	3c01      	subs	r4, #1
9001a43a:	42b2      	cmp	r2, r6
9001a43c:	b2a4      	uxth	r4, r4
9001a43e:	dd49      	ble.n	9001a4d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001a440:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
9001a444:	682b      	ldr	r3, [r5, #0]
9001a446:	3301      	adds	r3, #1
9001a448:	602b      	str	r3, [r5, #0]
9001a44a:	e7f2      	b.n	9001a432 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
9001a44c:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
9001a450:	d01d      	beq.n	9001a48e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
9001a452:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
9001a456:	d002      	beq.n	9001a45e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
9001a458:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
9001a45c:	e7c9      	b.n	9001a3f2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
9001a45e:	4684      	mov	ip, r0
9001a460:	f04f 0800 	mov.w	r8, #0
9001a464:	2c00      	cmp	r4, #0
9001a466:	d0c6      	beq.n	9001a3f6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001a468:	b947      	cbnz	r7, 9001a47c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
9001a46a:	2801      	cmp	r0, #1
9001a46c:	d106      	bne.n	9001a47c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
9001a46e:	8814      	ldrh	r4, [r2, #0]
9001a470:	2c30      	cmp	r4, #48	@ 0x30
9001a472:	bf02      	ittt	eq
9001a474:	3202      	addeq	r2, #2
9001a476:	4638      	moveq	r0, r7
9001a478:	f8cb 2000 	streq.w	r2, [fp]
9001a47c:	45bc      	cmp	ip, r7
9001a47e:	da14      	bge.n	9001a4aa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
9001a480:	b2bf      	uxth	r7, r7
9001a482:	eba7 040c 	sub.w	r4, r7, ip
9001a486:	46bc      	mov	ip, r7
9001a488:	b2a4      	uxth	r4, r4
9001a48a:	2600      	movs	r6, #0
9001a48c:	e7b3      	b.n	9001a3f6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001a48e:	4684      	mov	ip, r0
9001a490:	b16c      	cbz	r4, 9001a4ae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
9001a492:	42b8      	cmp	r0, r7
9001a494:	dd00      	ble.n	9001a498 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
9001a496:	b2b8      	uxth	r0, r7
9001a498:	2400      	movs	r4, #0
9001a49a:	e003      	b.n	9001a4a4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
9001a49c:	f04f 0c01 	mov.w	ip, #1
9001a4a0:	2400      	movs	r4, #0
9001a4a2:	4660      	mov	r0, ip
9001a4a4:	4626      	mov	r6, r4
9001a4a6:	46a0      	mov	r8, r4
9001a4a8:	e7a5      	b.n	9001a3f6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001a4aa:	2400      	movs	r4, #0
9001a4ac:	e7ed      	b.n	9001a48a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
9001a4ae:	4626      	mov	r6, r4
9001a4b0:	46a0      	mov	r8, r4
9001a4b2:	e7a0      	b.n	9001a3f6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001a4b4:	2900      	cmp	r1, #0
9001a4b6:	d0b0      	beq.n	9001a41a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001a4b8:	2720      	movs	r7, #32
9001a4ba:	682e      	ldr	r6, [r5, #0]
9001a4bc:	2900      	cmp	r1, #0
9001a4be:	d0ac      	beq.n	9001a41a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001a4c0:	3901      	subs	r1, #1
9001a4c2:	4296      	cmp	r6, r2
9001a4c4:	b289      	uxth	r1, r1
9001a4c6:	daa7      	bge.n	9001a418 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
9001a4c8:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
9001a4cc:	682b      	ldr	r3, [r5, #0]
9001a4ce:	3301      	adds	r3, #1
9001a4d0:	602b      	str	r3, [r5, #0]
9001a4d2:	e7f2      	b.n	9001a4ba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
9001a4d4:	b188      	cbz	r0, 9001a4fa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
9001a4d6:	682b      	ldr	r3, [r5, #0]
9001a4d8:	3801      	subs	r0, #1
9001a4da:	429a      	cmp	r2, r3
9001a4dc:	b280      	uxth	r0, r0
9001a4de:	dd0c      	ble.n	9001a4fa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
9001a4e0:	f8db 3000 	ldr.w	r3, [fp]
9001a4e4:	1c9c      	adds	r4, r3, #2
9001a4e6:	f8cb 4000 	str.w	r4, [fp]
9001a4ea:	881c      	ldrh	r4, [r3, #0]
9001a4ec:	682b      	ldr	r3, [r5, #0]
9001a4ee:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
9001a4f2:	682b      	ldr	r3, [r5, #0]
9001a4f4:	3301      	adds	r3, #1
9001a4f6:	602b      	str	r3, [r5, #0]
9001a4f8:	e7ec      	b.n	9001a4d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001a4fa:	2620      	movs	r6, #32
9001a4fc:	b151      	cbz	r1, 9001a514 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
9001a4fe:	6828      	ldr	r0, [r5, #0]
9001a500:	3901      	subs	r1, #1
9001a502:	4282      	cmp	r2, r0
9001a504:	b289      	uxth	r1, r1
9001a506:	dd05      	ble.n	9001a514 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
9001a508:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
9001a50c:	682b      	ldr	r3, [r5, #0]
9001a50e:	3301      	adds	r3, #1
9001a510:	602b      	str	r3, [r5, #0]
9001a512:	e7f3      	b.n	9001a4fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
9001a514:	b005      	add	sp, #20
9001a516:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001a51a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
9001a51a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001a51e:	2400      	movs	r4, #0
9001a520:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
9001a524:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
9001a528:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
9001a52c:	8014      	strh	r4, [r2, #0]
9001a52e:	701c      	strb	r4, [r3, #0]
9001a530:	f888 4000 	strb.w	r4, [r8]
9001a534:	f88c 4000 	strb.w	r4, [ip]
9001a538:	f88e 4000 	strb.w	r4, [lr]
9001a53c:	703c      	strb	r4, [r7, #0]
9001a53e:	6804      	ldr	r4, [r0, #0]
9001a540:	b1a4      	cbz	r4, 9001a56c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
9001a542:	8824      	ldrh	r4, [r4, #0]
9001a544:	f04f 0901 	mov.w	r9, #1
9001a548:	b314      	cbz	r4, 9001a590 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001a54a:	2c2b      	cmp	r4, #43	@ 0x2b
9001a54c:	d001      	beq.n	9001a552 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
9001a54e:	2c20      	cmp	r4, #32
9001a550:	d110      	bne.n	9001a574 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
9001a552:	8014      	strh	r4, [r2, #0]
9001a554:	6804      	ldr	r4, [r0, #0]
9001a556:	b10c      	cbz	r4, 9001a55c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
9001a558:	3402      	adds	r4, #2
9001a55a:	6004      	str	r4, [r0, #0]
9001a55c:	680c      	ldr	r4, [r1, #0]
9001a55e:	b10c      	cbz	r4, 9001a564 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
9001a560:	3401      	adds	r4, #1
9001a562:	600c      	str	r4, [r1, #0]
9001a564:	6804      	ldr	r4, [r0, #0]
9001a566:	b17c      	cbz	r4, 9001a588 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
9001a568:	8824      	ldrh	r4, [r4, #0]
9001a56a:	e7ed      	b.n	9001a548 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
9001a56c:	680c      	ldr	r4, [r1, #0]
9001a56e:	b17c      	cbz	r4, 9001a590 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001a570:	7824      	ldrb	r4, [r4, #0]
9001a572:	e7e7      	b.n	9001a544 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
9001a574:	2c2d      	cmp	r4, #45	@ 0x2d
9001a576:	d102      	bne.n	9001a57e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
9001a578:	f883 9000 	strb.w	r9, [r3]
9001a57c:	e7ea      	b.n	9001a554 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
9001a57e:	2c23      	cmp	r4, #35	@ 0x23
9001a580:	d107      	bne.n	9001a592 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
9001a582:	f888 9000 	strb.w	r9, [r8]
9001a586:	e7e5      	b.n	9001a554 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
9001a588:	680c      	ldr	r4, [r1, #0]
9001a58a:	b10c      	cbz	r4, 9001a590 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001a58c:	7824      	ldrb	r4, [r4, #0]
9001a58e:	e7db      	b.n	9001a548 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
9001a590:	2400      	movs	r4, #0
9001a592:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
9001a596:	2b09      	cmp	r3, #9
9001a598:	d901      	bls.n	9001a59e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
9001a59a:	2c2a      	cmp	r4, #42	@ 0x2a
9001a59c:	d122      	bne.n	9001a5e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001a59e:	2301      	movs	r3, #1
9001a5a0:	2c30      	cmp	r4, #48	@ 0x30
9001a5a2:	f88e 3000 	strb.w	r3, [lr]
9001a5a6:	d10d      	bne.n	9001a5c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
9001a5a8:	f88c 3000 	strb.w	r3, [ip]
9001a5ac:	6803      	ldr	r3, [r0, #0]
9001a5ae:	b10b      	cbz	r3, 9001a5b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
9001a5b0:	3302      	adds	r3, #2
9001a5b2:	6003      	str	r3, [r0, #0]
9001a5b4:	680b      	ldr	r3, [r1, #0]
9001a5b6:	b10b      	cbz	r3, 9001a5bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
9001a5b8:	3301      	adds	r3, #1
9001a5ba:	600b      	str	r3, [r1, #0]
9001a5bc:	6803      	ldr	r3, [r0, #0]
9001a5be:	2b00      	cmp	r3, #0
9001a5c0:	d02f      	beq.n	9001a622 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
9001a5c2:	881c      	ldrh	r4, [r3, #0]
9001a5c4:	2c2a      	cmp	r4, #42	@ 0x2a
9001a5c6:	d135      	bne.n	9001a634 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
9001a5c8:	f04f 33ff 	mov.w	r3, #4294967295
9001a5cc:	6033      	str	r3, [r6, #0]
9001a5ce:	6803      	ldr	r3, [r0, #0]
9001a5d0:	b10b      	cbz	r3, 9001a5d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
9001a5d2:	3302      	adds	r3, #2
9001a5d4:	6003      	str	r3, [r0, #0]
9001a5d6:	680b      	ldr	r3, [r1, #0]
9001a5d8:	b10b      	cbz	r3, 9001a5de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
9001a5da:	3301      	adds	r3, #1
9001a5dc:	600b      	str	r3, [r1, #0]
9001a5de:	6803      	ldr	r3, [r0, #0]
9001a5e0:	b31b      	cbz	r3, 9001a62a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
9001a5e2:	881c      	ldrh	r4, [r3, #0]
9001a5e4:	2c2e      	cmp	r4, #46	@ 0x2e
9001a5e6:	d11a      	bne.n	9001a61e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001a5e8:	2301      	movs	r3, #1
9001a5ea:	703b      	strb	r3, [r7, #0]
9001a5ec:	6803      	ldr	r3, [r0, #0]
9001a5ee:	b10b      	cbz	r3, 9001a5f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
9001a5f0:	3302      	adds	r3, #2
9001a5f2:	6003      	str	r3, [r0, #0]
9001a5f4:	680b      	ldr	r3, [r1, #0]
9001a5f6:	b10b      	cbz	r3, 9001a5fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
9001a5f8:	3301      	adds	r3, #1
9001a5fa:	600b      	str	r3, [r1, #0]
9001a5fc:	6803      	ldr	r3, [r0, #0]
9001a5fe:	2b00      	cmp	r3, #0
9001a600:	d036      	beq.n	9001a670 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
9001a602:	881b      	ldrh	r3, [r3, #0]
9001a604:	2b2a      	cmp	r3, #42	@ 0x2a
9001a606:	d137      	bne.n	9001a678 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
9001a608:	f04f 33ff 	mov.w	r3, #4294967295
9001a60c:	602b      	str	r3, [r5, #0]
9001a60e:	6803      	ldr	r3, [r0, #0]
9001a610:	b10b      	cbz	r3, 9001a616 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
9001a612:	3302      	adds	r3, #2
9001a614:	6003      	str	r3, [r0, #0]
9001a616:	680b      	ldr	r3, [r1, #0]
9001a618:	b10b      	cbz	r3, 9001a61e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001a61a:	3301      	adds	r3, #1
9001a61c:	600b      	str	r3, [r1, #0]
9001a61e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001a622:	680c      	ldr	r4, [r1, #0]
9001a624:	b134      	cbz	r4, 9001a634 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
9001a626:	7824      	ldrb	r4, [r4, #0]
9001a628:	e7cc      	b.n	9001a5c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
9001a62a:	680b      	ldr	r3, [r1, #0]
9001a62c:	2b00      	cmp	r3, #0
9001a62e:	d0f6      	beq.n	9001a61e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001a630:	781c      	ldrb	r4, [r3, #0]
9001a632:	e7d7      	b.n	9001a5e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001a634:	2300      	movs	r3, #0
9001a636:	220a      	movs	r2, #10
9001a638:	6033      	str	r3, [r6, #0]
9001a63a:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
9001a63e:	fa1f f38c 	uxth.w	r3, ip
9001a642:	2b09      	cmp	r3, #9
9001a644:	d8ce      	bhi.n	9001a5e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001a646:	6833      	ldr	r3, [r6, #0]
9001a648:	fb02 c303 	mla	r3, r2, r3, ip
9001a64c:	6033      	str	r3, [r6, #0]
9001a64e:	6803      	ldr	r3, [r0, #0]
9001a650:	b10b      	cbz	r3, 9001a656 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
9001a652:	3302      	adds	r3, #2
9001a654:	6003      	str	r3, [r0, #0]
9001a656:	680b      	ldr	r3, [r1, #0]
9001a658:	b10b      	cbz	r3, 9001a65e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
9001a65a:	3301      	adds	r3, #1
9001a65c:	600b      	str	r3, [r1, #0]
9001a65e:	6803      	ldr	r3, [r0, #0]
9001a660:	b10b      	cbz	r3, 9001a666 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
9001a662:	881c      	ldrh	r4, [r3, #0]
9001a664:	e7e9      	b.n	9001a63a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001a666:	680c      	ldr	r4, [r1, #0]
9001a668:	2c00      	cmp	r4, #0
9001a66a:	d0e6      	beq.n	9001a63a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001a66c:	7824      	ldrb	r4, [r4, #0]
9001a66e:	e7e4      	b.n	9001a63a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001a670:	680b      	ldr	r3, [r1, #0]
9001a672:	b10b      	cbz	r3, 9001a678 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
9001a674:	781b      	ldrb	r3, [r3, #0]
9001a676:	e7c5      	b.n	9001a604 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
9001a678:	2200      	movs	r2, #0
9001a67a:	240a      	movs	r4, #10
9001a67c:	602a      	str	r2, [r5, #0]
9001a67e:	3b30      	subs	r3, #48	@ 0x30
9001a680:	682a      	ldr	r2, [r5, #0]
9001a682:	b29e      	uxth	r6, r3
9001a684:	2e09      	cmp	r6, #9
9001a686:	d813      	bhi.n	9001a6b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
9001a688:	fb04 3302 	mla	r3, r4, r2, r3
9001a68c:	602b      	str	r3, [r5, #0]
9001a68e:	6803      	ldr	r3, [r0, #0]
9001a690:	b10b      	cbz	r3, 9001a696 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
9001a692:	3302      	adds	r3, #2
9001a694:	6003      	str	r3, [r0, #0]
9001a696:	680b      	ldr	r3, [r1, #0]
9001a698:	b10b      	cbz	r3, 9001a69e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
9001a69a:	3301      	adds	r3, #1
9001a69c:	600b      	str	r3, [r1, #0]
9001a69e:	6803      	ldr	r3, [r0, #0]
9001a6a0:	b10b      	cbz	r3, 9001a6a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
9001a6a2:	881b      	ldrh	r3, [r3, #0]
9001a6a4:	e7eb      	b.n	9001a67e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001a6a6:	680b      	ldr	r3, [r1, #0]
9001a6a8:	2b00      	cmp	r3, #0
9001a6aa:	d0e8      	beq.n	9001a67e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001a6ac:	781b      	ldrb	r3, [r3, #0]
9001a6ae:	e7e6      	b.n	9001a67e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001a6b0:	2a06      	cmp	r2, #6
9001a6b2:	bfa8      	it	ge
9001a6b4:	2206      	movge	r2, #6
9001a6b6:	602a      	str	r2, [r5, #0]
9001a6b8:	e7b1      	b.n	9001a61e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

9001a6ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
9001a6ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a6be:	b0a3      	sub	sp, #140	@ 0x8c
9001a6c0:	2600      	movs	r6, #0
9001a6c2:	4607      	mov	r7, r0
9001a6c4:	4688      	mov	r8, r1
9001a6c6:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
9001a6ca:	4631      	mov	r1, r6
9001a6cc:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
9001a6ce:	4648      	mov	r0, r9
9001a6d0:	960d      	str	r6, [sp, #52]	@ 0x34
9001a6d2:	e9cd 3208 	strd	r3, r2, [sp, #32]
9001a6d6:	2242      	movs	r2, #66	@ 0x42
9001a6d8:	f010 f8da 	bl	9002a890 <memset>
9001a6dc:	b15f      	cbz	r7, 9001a6f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
9001a6de:	f108 3aff 	add.w	sl, r8, #4294967295
9001a6e2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001a6e4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001a6e6:	b152      	cbz	r2, 9001a6fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
9001a6e8:	8812      	ldrh	r2, [r2, #0]
9001a6ea:	b10a      	cbz	r2, 9001a6f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
9001a6ec:	459a      	cmp	sl, r3
9001a6ee:	dc2e      	bgt.n	9001a74e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
9001a6f0:	2200      	movs	r2, #0
9001a6f2:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
9001a6f6:	4638      	mov	r0, r7
9001a6f8:	b023      	add	sp, #140	@ 0x8c
9001a6fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a6fe:	9a08      	ldr	r2, [sp, #32]
9001a700:	2a00      	cmp	r2, #0
9001a702:	d0f5      	beq.n	9001a6f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
9001a704:	7812      	ldrb	r2, [r2, #0]
9001a706:	e7f0      	b.n	9001a6ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
9001a708:	2d00      	cmp	r5, #0
9001a70a:	d0ea      	beq.n	9001a6e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001a70c:	782a      	ldrb	r2, [r5, #0]
9001a70e:	b142      	cbz	r2, 9001a722 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
9001a710:	2a25      	cmp	r2, #37	@ 0x25
9001a712:	d001      	beq.n	9001a718 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
9001a714:	459a      	cmp	sl, r3
9001a716:	dc08      	bgt.n	9001a72a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
9001a718:	f1bb 0f00 	cmp.w	fp, #0
9001a71c:	d121      	bne.n	9001a762 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
9001a71e:	2d00      	cmp	r5, #0
9001a720:	d0df      	beq.n	9001a6e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001a722:	782a      	ldrb	r2, [r5, #0]
9001a724:	f04f 0b00 	mov.w	fp, #0
9001a728:	e01d      	b.n	9001a766 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
9001a72a:	f1bb 0f00 	cmp.w	fp, #0
9001a72e:	d077      	beq.n	9001a820 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
9001a730:	f8bb 2000 	ldrh.w	r2, [fp]
9001a734:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
9001a738:	f1bb 0f00 	cmp.w	fp, #0
9001a73c:	d002      	beq.n	9001a744 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
9001a73e:	f10b 0202 	add.w	r2, fp, #2
9001a742:	9209      	str	r2, [sp, #36]	@ 0x24
9001a744:	b10d      	cbz	r5, 9001a74a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
9001a746:	3501      	adds	r5, #1
9001a748:	9508      	str	r5, [sp, #32]
9001a74a:	3301      	adds	r3, #1
9001a74c:	930d      	str	r3, [sp, #52]	@ 0x34
9001a74e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001a750:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
9001a754:	f1bb 0f00 	cmp.w	fp, #0
9001a758:	d0d6      	beq.n	9001a708 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
9001a75a:	f8bb 2000 	ldrh.w	r2, [fp]
9001a75e:	2a00      	cmp	r2, #0
9001a760:	d1d6      	bne.n	9001a710 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
9001a762:	f8bb 2000 	ldrh.w	r2, [fp]
9001a766:	2a00      	cmp	r2, #0
9001a768:	d0bb      	beq.n	9001a6e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001a76a:	459a      	cmp	sl, r3
9001a76c:	ddb9      	ble.n	9001a6e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001a76e:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
9001a772:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
9001a776:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
9001a77a:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
9001a77e:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
9001a782:	960e      	str	r6, [sp, #56]	@ 0x38
9001a784:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
9001a788:	960f      	str	r6, [sp, #60]	@ 0x3c
9001a78a:	f1bb 0f00 	cmp.w	fp, #0
9001a78e:	d002      	beq.n	9001a796 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
9001a790:	f10b 0302 	add.w	r3, fp, #2
9001a794:	9309      	str	r3, [sp, #36]	@ 0x24
9001a796:	b10d      	cbz	r5, 9001a79c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
9001a798:	1c6b      	adds	r3, r5, #1
9001a79a:	9308      	str	r3, [sp, #32]
9001a79c:	ab0f      	add	r3, sp, #60	@ 0x3c
9001a79e:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
9001a7a2:	a908      	add	r1, sp, #32
9001a7a4:	a809      	add	r0, sp, #36	@ 0x24
9001a7a6:	9305      	str	r3, [sp, #20]
9001a7a8:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
9001a7ac:	9304      	str	r3, [sp, #16]
9001a7ae:	ab0e      	add	r3, sp, #56	@ 0x38
9001a7b0:	9303      	str	r3, [sp, #12]
9001a7b2:	ab0c      	add	r3, sp, #48	@ 0x30
9001a7b4:	9302      	str	r3, [sp, #8]
9001a7b6:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
9001a7ba:	9301      	str	r3, [sp, #4]
9001a7bc:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
9001a7c0:	9300      	str	r3, [sp, #0]
9001a7c2:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
9001a7c6:	f7ff fea8 	bl	9001a51a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
9001a7ca:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001a7cc:	2b00      	cmp	r3, #0
9001a7ce:	bfbf      	itttt	lt
9001a7d0:	6823      	ldrlt	r3, [r4, #0]
9001a7d2:	3404      	addlt	r4, #4
9001a7d4:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
9001a7d8:	930e      	strlt	r3, [sp, #56]	@ 0x38
9001a7da:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001a7dc:	2b00      	cmp	r3, #0
9001a7de:	bfbe      	ittt	lt
9001a7e0:	6823      	ldrlt	r3, [r4, #0]
9001a7e2:	3404      	addlt	r4, #4
9001a7e4:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
9001a7e8:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001a7ec:	bfb8      	it	lt
9001a7ee:	930f      	strlt	r3, [sp, #60]	@ 0x3c
9001a7f0:	b1d9      	cbz	r1, 9001a82a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
9001a7f2:	880b      	ldrh	r3, [r1, #0]
9001a7f4:	2b69      	cmp	r3, #105	@ 0x69
9001a7f6:	d01f      	beq.n	9001a838 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001a7f8:	d82f      	bhi.n	9001a85a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
9001a7fa:	2b58      	cmp	r3, #88	@ 0x58
9001a7fc:	d01c      	beq.n	9001a838 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001a7fe:	d818      	bhi.n	9001a832 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
9001a800:	2b25      	cmp	r3, #37	@ 0x25
9001a802:	d034      	beq.n	9001a86e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
9001a804:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001a806:	e9cd 5b08 	strd	r5, fp, [sp, #32]
9001a80a:	f1bb 0f00 	cmp.w	fp, #0
9001a80e:	f000 80b7 	beq.w	9001a980 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
9001a812:	f8bb 5000 	ldrh.w	r5, [fp]
9001a816:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
9001a81a:	3301      	adds	r3, #1
9001a81c:	930d      	str	r3, [sp, #52]	@ 0x34
9001a81e:	e029      	b.n	9001a874 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
9001a820:	b10d      	cbz	r5, 9001a826 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
9001a822:	782a      	ldrb	r2, [r5, #0]
9001a824:	e786      	b.n	9001a734 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
9001a826:	462a      	mov	r2, r5
9001a828:	e784      	b.n	9001a734 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
9001a82a:	2a00      	cmp	r2, #0
9001a82c:	d0ea      	beq.n	9001a804 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001a82e:	7813      	ldrb	r3, [r2, #0]
9001a830:	e7e0      	b.n	9001a7f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
9001a832:	3b63      	subs	r3, #99	@ 0x63
9001a834:	2b01      	cmp	r3, #1
9001a836:	d8e5      	bhi.n	9001a804 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001a838:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
9001a83c:	b329      	cbz	r1, 9001a88a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
9001a83e:	880b      	ldrh	r3, [r1, #0]
9001a840:	2b69      	cmp	r3, #105	@ 0x69
9001a842:	d063      	beq.n	9001a90c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
9001a844:	d825      	bhi.n	9001a892 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
9001a846:	2b63      	cmp	r3, #99	@ 0x63
9001a848:	d038      	beq.n	9001a8bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
9001a84a:	2b64      	cmp	r3, #100	@ 0x64
9001a84c:	d05e      	beq.n	9001a90c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
9001a84e:	2b58      	cmp	r3, #88	@ 0x58
9001a850:	d07a      	beq.n	9001a948 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
9001a852:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
9001a856:	4625      	mov	r5, r4
9001a858:	e036      	b.n	9001a8c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001a85a:	2b73      	cmp	r3, #115	@ 0x73
9001a85c:	d0ec      	beq.n	9001a838 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001a85e:	d802      	bhi.n	9001a866 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
9001a860:	2b6f      	cmp	r3, #111	@ 0x6f
9001a862:	d1cf      	bne.n	9001a804 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001a864:	e7e8      	b.n	9001a838 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001a866:	2b75      	cmp	r3, #117	@ 0x75
9001a868:	d0e6      	beq.n	9001a838 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001a86a:	2b78      	cmp	r3, #120	@ 0x78
9001a86c:	e7f9      	b.n	9001a862 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
9001a86e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001a870:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
9001a874:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001a876:	b10b      	cbz	r3, 9001a87c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
9001a878:	3302      	adds	r3, #2
9001a87a:	9309      	str	r3, [sp, #36]	@ 0x24
9001a87c:	9b08      	ldr	r3, [sp, #32]
9001a87e:	2b00      	cmp	r3, #0
9001a880:	f43f af2f 	beq.w	9001a6e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001a884:	3301      	adds	r3, #1
9001a886:	9308      	str	r3, [sp, #32]
9001a888:	e72b      	b.n	9001a6e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001a88a:	2a00      	cmp	r2, #0
9001a88c:	d0e1      	beq.n	9001a852 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001a88e:	7813      	ldrb	r3, [r2, #0]
9001a890:	e7d6      	b.n	9001a840 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
9001a892:	2b73      	cmp	r3, #115	@ 0x73
9001a894:	d036      	beq.n	9001a904 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
9001a896:	d807      	bhi.n	9001a8a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
9001a898:	2b6f      	cmp	r3, #111	@ 0x6f
9001a89a:	d1da      	bne.n	9001a852 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001a89c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001a89e:	1d25      	adds	r5, r4, #4
9001a8a0:	2308      	movs	r3, #8
9001a8a2:	eba8 0202 	sub.w	r2, r8, r2
9001a8a6:	e049      	b.n	9001a93c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
9001a8a8:	2b75      	cmp	r3, #117	@ 0x75
9001a8aa:	d042      	beq.n	9001a932 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
9001a8ac:	2b78      	cmp	r3, #120	@ 0x78
9001a8ae:	d1d0      	bne.n	9001a852 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001a8b0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001a8b2:	1d25      	adds	r5, r4, #4
9001a8b4:	2310      	movs	r3, #16
9001a8b6:	eba8 0202 	sub.w	r2, r8, r2
9001a8ba:	e03f      	b.n	9001a93c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
9001a8bc:	6823      	ldr	r3, [r4, #0]
9001a8be:	1d25      	adds	r5, r4, #4
9001a8c0:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
9001a8c4:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
9001a8c8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001a8ca:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
9001a8ce:	2b00      	cmp	r3, #0
9001a8d0:	d051      	beq.n	9001a976 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
9001a8d2:	881a      	ldrh	r2, [r3, #0]
9001a8d4:	a80d      	add	r0, sp, #52	@ 0x34
9001a8d6:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
9001a8da:	462c      	mov	r4, r5
9001a8dc:	9005      	str	r0, [sp, #20]
9001a8de:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
9001a8e2:	9004      	str	r0, [sp, #16]
9001a8e4:	980e      	ldr	r0, [sp, #56]	@ 0x38
9001a8e6:	9003      	str	r0, [sp, #12]
9001a8e8:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
9001a8ec:	9002      	str	r0, [sp, #8]
9001a8ee:	980f      	ldr	r0, [sp, #60]	@ 0x3c
9001a8f0:	9001      	str	r0, [sp, #4]
9001a8f2:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
9001a8f6:	e9cd 8706 	strd	r8, r7, [sp, #24]
9001a8fa:	9000      	str	r0, [sp, #0]
9001a8fc:	a810      	add	r0, sp, #64	@ 0x40
9001a8fe:	f7ff fd49 	bl	9001a394 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
9001a902:	e7b7      	b.n	9001a874 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
9001a904:	1d25      	adds	r5, r4, #4
9001a906:	6823      	ldr	r3, [r4, #0]
9001a908:	9310      	str	r3, [sp, #64]	@ 0x40
9001a90a:	e7dd      	b.n	9001a8c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001a90c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001a90e:	230a      	movs	r3, #10
9001a910:	4649      	mov	r1, r9
9001a912:	6820      	ldr	r0, [r4, #0]
9001a914:	eba8 0202 	sub.w	r2, r8, r2
9001a918:	1d25      	adds	r5, r4, #4
9001a91a:	b292      	uxth	r2, r2
9001a91c:	f7ff fcf0 	bl	9001a300 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
9001a920:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
9001a924:	2b2d      	cmp	r3, #45	@ 0x2d
9001a926:	d1cf      	bne.n	9001a8c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001a928:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001a92c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a92e:	3302      	adds	r3, #2
9001a930:	e7ea      	b.n	9001a908 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
9001a932:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001a934:	1d25      	adds	r5, r4, #4
9001a936:	230a      	movs	r3, #10
9001a938:	eba8 0202 	sub.w	r2, r8, r2
9001a93c:	b292      	uxth	r2, r2
9001a93e:	4649      	mov	r1, r9
9001a940:	6820      	ldr	r0, [r4, #0]
9001a942:	f7ff fd09 	bl	9001a358 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
9001a946:	e7bf      	b.n	9001a8c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001a948:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001a94a:	2310      	movs	r3, #16
9001a94c:	4649      	mov	r1, r9
9001a94e:	6820      	ldr	r0, [r4, #0]
9001a950:	eba8 0202 	sub.w	r2, r8, r2
9001a954:	1d25      	adds	r5, r4, #4
9001a956:	b292      	uxth	r2, r2
9001a958:	f7ff fcfe 	bl	9001a358 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
9001a95c:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
9001a960:	f832 3f02 	ldrh.w	r3, [r2, #2]!
9001a964:	2b00      	cmp	r3, #0
9001a966:	d0af      	beq.n	9001a8c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001a968:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
9001a96c:	2919      	cmp	r1, #25
9001a96e:	d8f7      	bhi.n	9001a960 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
9001a970:	3b20      	subs	r3, #32
9001a972:	8013      	strh	r3, [r2, #0]
9001a974:	e7f4      	b.n	9001a960 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
9001a976:	9a08      	ldr	r2, [sp, #32]
9001a978:	2a00      	cmp	r2, #0
9001a97a:	d0ab      	beq.n	9001a8d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
9001a97c:	7812      	ldrb	r2, [r2, #0]
9001a97e:	e7a9      	b.n	9001a8d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
9001a980:	2d00      	cmp	r5, #0
9001a982:	f43f af48 	beq.w	9001a816 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
9001a986:	782d      	ldrb	r5, [r5, #0]
9001a988:	e745      	b.n	9001a816 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

9001a98a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
9001a98a:	b507      	push	{r0, r1, r2, lr}
9001a98c:	9300      	str	r3, [sp, #0]
9001a98e:	4613      	mov	r3, r2
9001a990:	2200      	movs	r2, #0
9001a992:	f7ff fe92 	bl	9001a6ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
9001a996:	b003      	add	sp, #12
9001a998:	f85d fb04 	ldr.w	pc, [sp], #4

9001a99c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
9001a99c:	b40c      	push	{r2, r3}
9001a99e:	b507      	push	{r0, r1, r2, lr}
9001a9a0:	ab04      	add	r3, sp, #16
9001a9a2:	f853 2b04 	ldr.w	r2, [r3], #4
9001a9a6:	9301      	str	r3, [sp, #4]
9001a9a8:	f7ff ffef 	bl	9001a98a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
9001a9ac:	b003      	add	sp, #12
9001a9ae:	f85d eb04 	ldr.w	lr, [sp], #4
9001a9b2:	b002      	add	sp, #8
9001a9b4:	4770      	bx	lr
	...

9001a9b8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
9001a9b8:	4b01      	ldr	r3, [pc, #4]	@ (9001a9c0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
9001a9ba:	6018      	str	r0, [r3, #0]
9001a9bc:	4770      	bx	lr
9001a9be:	bf00      	nop
9001a9c0:	240218cc 	.word	0x240218cc

9001a9c4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
9001a9c4:	4b06      	ldr	r3, [pc, #24]	@ (9001a9e0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
9001a9c6:	881a      	ldrh	r2, [r3, #0]
9001a9c8:	4282      	cmp	r2, r0
9001a9ca:	d807      	bhi.n	9001a9dc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
9001a9cc:	4b05      	ldr	r3, [pc, #20]	@ (9001a9e4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
9001a9ce:	881b      	ldrh	r3, [r3, #0]
9001a9d0:	4413      	add	r3, r2
9001a9d2:	4298      	cmp	r0, r3
9001a9d4:	bfac      	ite	ge
9001a9d6:	2000      	movge	r0, #0
9001a9d8:	2001      	movlt	r0, #1
9001a9da:	4770      	bx	lr
9001a9dc:	2000      	movs	r0, #0
9001a9de:	4770      	bx	lr
9001a9e0:	240218ec 	.word	0x240218ec
9001a9e4:	240218f0 	.word	0x240218f0

9001a9e8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
9001a9e8:	b508      	push	{r3, lr}
9001a9ea:	4601      	mov	r1, r0
9001a9ec:	f7ff ffea 	bl	9001a9c4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
9001a9f0:	b118      	cbz	r0, 9001a9fa <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
9001a9f2:	4b02      	ldr	r3, [pc, #8]	@ (9001a9fc <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
9001a9f4:	681b      	ldr	r3, [r3, #0]
9001a9f6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
9001a9fa:	bd08      	pop	{r3, pc}
9001a9fc:	240218d0 	.word	0x240218d0

9001aa00 <_ZN8touchgfx6Bitmap10clearCacheEv>:
9001aa00:	b5f0      	push	{r4, r5, r6, r7, lr}
9001aa02:	4c24      	ldr	r4, [pc, #144]	@ (9001aa94 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
9001aa04:	6823      	ldr	r3, [r4, #0]
9001aa06:	2b00      	cmp	r3, #0
9001aa08:	d042      	beq.n	9001aa90 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001aa0a:	4a23      	ldr	r2, [pc, #140]	@ (9001aa98 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
9001aa0c:	4d23      	ldr	r5, [pc, #140]	@ (9001aa9c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
9001aa0e:	8811      	ldrh	r1, [r2, #0]
9001aa10:	f8b5 c000 	ldrh.w	ip, [r5]
9001aa14:	4822      	ldr	r0, [pc, #136]	@ (9001aaa0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
9001aa16:	4461      	add	r1, ip
9001aa18:	1c4a      	adds	r2, r1, #1
9001aa1a:	008f      	lsls	r7, r1, #2
9001aa1c:	f022 0201 	bic.w	r2, r2, #1
9001aa20:	19de      	adds	r6, r3, r7
9001aa22:	0412      	lsls	r2, r2, #16
9001aa24:	6006      	str	r6, [r0, #0]
9001aa26:	4e1f      	ldr	r6, [pc, #124]	@ (9001aaa4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
9001aa28:	0c12      	lsrs	r2, r2, #16
9001aa2a:	eb07 0742 	add.w	r7, r7, r2, lsl #1
9001aa2e:	19da      	adds	r2, r3, r7
9001aa30:	6032      	str	r2, [r6, #0]
9001aa32:	220e      	movs	r2, #14
9001aa34:	fb02 f20c 	mul.w	r2, r2, ip
9001aa38:	3203      	adds	r2, #3
9001aa3a:	f022 0203 	bic.w	r2, r2, #3
9001aa3e:	443a      	add	r2, r7
9001aa40:	4f19      	ldr	r7, [pc, #100]	@ (9001aaa8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
9001aa42:	4413      	add	r3, r2
9001aa44:	603b      	str	r3, [r7, #0]
9001aa46:	2300      	movs	r3, #0
9001aa48:	4f18      	ldr	r7, [pc, #96]	@ (9001aaac <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
9001aa4a:	469c      	mov	ip, r3
9001aa4c:	803b      	strh	r3, [r7, #0]
9001aa4e:	4f18      	ldr	r7, [pc, #96]	@ (9001aab0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
9001aa50:	683f      	ldr	r7, [r7, #0]
9001aa52:	1aba      	subs	r2, r7, r2
9001aa54:	4f17      	ldr	r7, [pc, #92]	@ (9001aab4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
9001aa56:	603a      	str	r2, [r7, #0]
9001aa58:	f64f 77ff 	movw	r7, #65535	@ 0xffff
9001aa5c:	4a16      	ldr	r2, [pc, #88]	@ (9001aab8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
9001aa5e:	8013      	strh	r3, [r2, #0]
9001aa60:	428b      	cmp	r3, r1
9001aa62:	d10d      	bne.n	9001aa80 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
9001aa64:	882d      	ldrh	r5, [r5, #0]
9001aa66:	2300      	movs	r3, #0
9001aa68:	6830      	ldr	r0, [r6, #0]
9001aa6a:	240e      	movs	r4, #14
9001aa6c:	429d      	cmp	r5, r3
9001aa6e:	d90f      	bls.n	9001aa90 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001aa70:	fb04 0203 	mla	r2, r4, r3, r0
9001aa74:	3301      	adds	r3, #1
9001aa76:	7b11      	ldrb	r1, [r2, #12]
9001aa78:	f36f 1145 	bfc	r1, #5, #1
9001aa7c:	7311      	strb	r1, [r2, #12]
9001aa7e:	e7f5      	b.n	9001aa6c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
9001aa80:	6822      	ldr	r2, [r4, #0]
9001aa82:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
9001aa86:	6802      	ldr	r2, [r0, #0]
9001aa88:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
9001aa8c:	3301      	adds	r3, #1
9001aa8e:	e7e7      	b.n	9001aa60 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
9001aa90:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001aa92:	bf00      	nop
9001aa94:	240218d0 	.word	0x240218d0
9001aa98:	240218ec 	.word	0x240218ec
9001aa9c:	240218f0 	.word	0x240218f0
9001aaa0:	240218e4 	.word	0x240218e4
9001aaa4:	240218d4 	.word	0x240218d4
9001aaa8:	240218dc 	.word	0x240218dc
9001aaac:	240218ee 	.word	0x240218ee
9001aab0:	240218d8 	.word	0x240218d8
9001aab4:	240218e8 	.word	0x240218e8
9001aab8:	240218e0 	.word	0x240218e0

9001aabc <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
9001aabc:	4b06      	ldr	r3, [pc, #24]	@ (9001aad8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
9001aabe:	681b      	ldr	r3, [r3, #0]
9001aac0:	b943      	cbnz	r3, 9001aad4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001aac2:	b139      	cbz	r1, 9001aad4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001aac4:	4b05      	ldr	r3, [pc, #20]	@ (9001aadc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
9001aac6:	801a      	strh	r2, [r3, #0]
9001aac8:	4b05      	ldr	r3, [pc, #20]	@ (9001aae0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
9001aaca:	6019      	str	r1, [r3, #0]
9001aacc:	4b05      	ldr	r3, [pc, #20]	@ (9001aae4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
9001aace:	6018      	str	r0, [r3, #0]
9001aad0:	f7ff bf96 	b.w	9001aa00 <_ZN8touchgfx6Bitmap10clearCacheEv>
9001aad4:	4770      	bx	lr
9001aad6:	bf00      	nop
9001aad8:	240218dc 	.word	0x240218dc
9001aadc:	240218f0 	.word	0x240218f0
9001aae0:	240218d8 	.word	0x240218d8
9001aae4:	240218d0 	.word	0x240218d0

9001aae8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
9001aae8:	b470      	push	{r4, r5, r6}
9001aaea:	4c07      	ldr	r4, [pc, #28]	@ (9001ab08 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
9001aaec:	4605      	mov	r5, r0
9001aaee:	4610      	mov	r0, r2
9001aaf0:	9a03      	ldr	r2, [sp, #12]
9001aaf2:	6826      	ldr	r6, [r4, #0]
9001aaf4:	b936      	cbnz	r6, 9001ab04 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
9001aaf6:	6025      	str	r5, [r4, #0]
9001aaf8:	4c04      	ldr	r4, [pc, #16]	@ (9001ab0c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
9001aafa:	8021      	strh	r1, [r4, #0]
9001aafc:	4619      	mov	r1, r3
9001aafe:	bc70      	pop	{r4, r5, r6}
9001ab00:	f7ff bfdc 	b.w	9001aabc <_ZN8touchgfx6Bitmap8setCacheEPtmm>
9001ab04:	bc70      	pop	{r4, r5, r6}
9001ab06:	4770      	bx	lr
9001ab08:	240218f4 	.word	0x240218f4
9001ab0c:	240218ec 	.word	0x240218ec

9001ab10 <_ZNK8touchgfx6Bitmap8getWidthEv>:
9001ab10:	4a12      	ldr	r2, [pc, #72]	@ (9001ab5c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
9001ab12:	8803      	ldrh	r3, [r0, #0]
9001ab14:	8812      	ldrh	r2, [r2, #0]
9001ab16:	4293      	cmp	r3, r2
9001ab18:	d207      	bcs.n	9001ab2a <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
9001ab1a:	4a11      	ldr	r2, [pc, #68]	@ (9001ab60 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
9001ab1c:	2114      	movs	r1, #20
9001ab1e:	6812      	ldr	r2, [r2, #0]
9001ab20:	fb01 2303 	mla	r3, r1, r3, r2
9001ab24:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
9001ab28:	4770      	bx	lr
9001ab2a:	490e      	ldr	r1, [pc, #56]	@ (9001ab64 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
9001ab2c:	8809      	ldrh	r1, [r1, #0]
9001ab2e:	4411      	add	r1, r2
9001ab30:	428b      	cmp	r3, r1
9001ab32:	da04      	bge.n	9001ab3e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
9001ab34:	1a9b      	subs	r3, r3, r2
9001ab36:	4a0c      	ldr	r2, [pc, #48]	@ (9001ab68 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
9001ab38:	210e      	movs	r1, #14
9001ab3a:	6812      	ldr	r2, [r2, #0]
9001ab3c:	e7f0      	b.n	9001ab20 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
9001ab3e:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001ab42:	4293      	cmp	r3, r2
9001ab44:	d108      	bne.n	9001ab58 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
9001ab46:	4b09      	ldr	r3, [pc, #36]	@ (9001ab6c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
9001ab48:	781b      	ldrb	r3, [r3, #0]
9001ab4a:	b91b      	cbnz	r3, 9001ab54 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
9001ab4c:	4b08      	ldr	r3, [pc, #32]	@ (9001ab70 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
9001ab4e:	f9b3 0000 	ldrsh.w	r0, [r3]
9001ab52:	4770      	bx	lr
9001ab54:	4b07      	ldr	r3, [pc, #28]	@ (9001ab74 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
9001ab56:	e7fa      	b.n	9001ab4e <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
9001ab58:	2000      	movs	r0, #0
9001ab5a:	4770      	bx	lr
9001ab5c:	240218ec 	.word	0x240218ec
9001ab60:	240218f4 	.word	0x240218f4
9001ab64:	240218f0 	.word	0x240218f0
9001ab68:	240218d4 	.word	0x240218d4
9001ab6c:	2402185c 	.word	0x2402185c
9001ab70:	2402185e 	.word	0x2402185e
9001ab74:	24021860 	.word	0x24021860

9001ab78 <_ZNK8touchgfx6Bitmap9getHeightEv>:
9001ab78:	4a12      	ldr	r2, [pc, #72]	@ (9001abc4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
9001ab7a:	8803      	ldrh	r3, [r0, #0]
9001ab7c:	8812      	ldrh	r2, [r2, #0]
9001ab7e:	4293      	cmp	r3, r2
9001ab80:	d207      	bcs.n	9001ab92 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
9001ab82:	4a11      	ldr	r2, [pc, #68]	@ (9001abc8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
9001ab84:	2114      	movs	r1, #20
9001ab86:	6812      	ldr	r2, [r2, #0]
9001ab88:	fb01 2303 	mla	r3, r1, r3, r2
9001ab8c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
9001ab90:	4770      	bx	lr
9001ab92:	490e      	ldr	r1, [pc, #56]	@ (9001abcc <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
9001ab94:	8809      	ldrh	r1, [r1, #0]
9001ab96:	4411      	add	r1, r2
9001ab98:	428b      	cmp	r3, r1
9001ab9a:	da04      	bge.n	9001aba6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
9001ab9c:	1a9b      	subs	r3, r3, r2
9001ab9e:	4a0c      	ldr	r2, [pc, #48]	@ (9001abd0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
9001aba0:	210e      	movs	r1, #14
9001aba2:	6812      	ldr	r2, [r2, #0]
9001aba4:	e7f0      	b.n	9001ab88 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
9001aba6:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001abaa:	4293      	cmp	r3, r2
9001abac:	d108      	bne.n	9001abc0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
9001abae:	4b09      	ldr	r3, [pc, #36]	@ (9001abd4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
9001abb0:	781b      	ldrb	r3, [r3, #0]
9001abb2:	b91b      	cbnz	r3, 9001abbc <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
9001abb4:	4b08      	ldr	r3, [pc, #32]	@ (9001abd8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
9001abb6:	f9b3 0000 	ldrsh.w	r0, [r3]
9001abba:	4770      	bx	lr
9001abbc:	4b07      	ldr	r3, [pc, #28]	@ (9001abdc <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
9001abbe:	e7fa      	b.n	9001abb6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
9001abc0:	2000      	movs	r0, #0
9001abc2:	4770      	bx	lr
9001abc4:	240218ec 	.word	0x240218ec
9001abc8:	240218f4 	.word	0x240218f4
9001abcc:	240218f0 	.word	0x240218f0
9001abd0:	240218d4 	.word	0x240218d4
9001abd4:	2402185c 	.word	0x2402185c
9001abd8:	24021860 	.word	0x24021860
9001abdc:	2402185e 	.word	0x2402185e

9001abe0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
9001abe0:	4a22      	ldr	r2, [pc, #136]	@ (9001ac6c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
9001abe2:	b530      	push	{r4, r5, lr}
9001abe4:	880b      	ldrh	r3, [r1, #0]
9001abe6:	8812      	ldrh	r2, [r2, #0]
9001abe8:	4293      	cmp	r3, r2
9001abea:	d213      	bcs.n	9001ac14 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
9001abec:	4a20      	ldr	r2, [pc, #128]	@ (9001ac70 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
9001abee:	2114      	movs	r1, #20
9001abf0:	6812      	ldr	r2, [r2, #0]
9001abf2:	fb01 2303 	mla	r3, r1, r3, r2
9001abf6:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
9001abfa:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
9001abfe:	8a1a      	ldrh	r2, [r3, #16]
9001ac00:	8a5b      	ldrh	r3, [r3, #18]
9001ac02:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001ac06:	8004      	strh	r4, [r0, #0]
9001ac08:	f3c3 030c 	ubfx	r3, r3, #0, #13
9001ac0c:	8041      	strh	r1, [r0, #2]
9001ac0e:	8082      	strh	r2, [r0, #4]
9001ac10:	80c3      	strh	r3, [r0, #6]
9001ac12:	e024      	b.n	9001ac5e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
9001ac14:	4917      	ldr	r1, [pc, #92]	@ (9001ac74 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
9001ac16:	8809      	ldrh	r1, [r1, #0]
9001ac18:	4411      	add	r1, r2
9001ac1a:	428b      	cmp	r3, r1
9001ac1c:	da10      	bge.n	9001ac40 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
9001ac1e:	1a9b      	subs	r3, r3, r2
9001ac20:	220e      	movs	r2, #14
9001ac22:	4353      	muls	r3, r2
9001ac24:	4a14      	ldr	r2, [pc, #80]	@ (9001ac78 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
9001ac26:	6811      	ldr	r1, [r2, #0]
9001ac28:	18ca      	adds	r2, r1, r3
9001ac2a:	5ecd      	ldrsh	r5, [r1, r3]
9001ac2c:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
9001ac30:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
9001ac34:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
9001ac38:	8005      	strh	r5, [r0, #0]
9001ac3a:	8044      	strh	r4, [r0, #2]
9001ac3c:	8081      	strh	r1, [r0, #4]
9001ac3e:	e7e7      	b.n	9001ac10 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
9001ac40:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001ac44:	4293      	cmp	r3, r2
9001ac46:	d10b      	bne.n	9001ac60 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
9001ac48:	4b0c      	ldr	r3, [pc, #48]	@ (9001ac7c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
9001ac4a:	f9b3 1000 	ldrsh.w	r1, [r3]
9001ac4e:	4b0c      	ldr	r3, [pc, #48]	@ (9001ac80 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
9001ac50:	8081      	strh	r1, [r0, #4]
9001ac52:	f9b3 2000 	ldrsh.w	r2, [r3]
9001ac56:	2300      	movs	r3, #0
9001ac58:	80c2      	strh	r2, [r0, #6]
9001ac5a:	8003      	strh	r3, [r0, #0]
9001ac5c:	8043      	strh	r3, [r0, #2]
9001ac5e:	bd30      	pop	{r4, r5, pc}
9001ac60:	2300      	movs	r3, #0
9001ac62:	8003      	strh	r3, [r0, #0]
9001ac64:	8043      	strh	r3, [r0, #2]
9001ac66:	8083      	strh	r3, [r0, #4]
9001ac68:	e7d2      	b.n	9001ac10 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
9001ac6a:	bf00      	nop
9001ac6c:	240218ec 	.word	0x240218ec
9001ac70:	240218f4 	.word	0x240218f4
9001ac74:	240218f0 	.word	0x240218f0
9001ac78:	240218d4 	.word	0x240218d4
9001ac7c:	24021858 	.word	0x24021858
9001ac80:	2402185a 	.word	0x2402185a

9001ac84 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
9001ac84:	4a17      	ldr	r2, [pc, #92]	@ (9001ace4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
9001ac86:	8803      	ldrh	r3, [r0, #0]
9001ac88:	8812      	ldrh	r2, [r2, #0]
9001ac8a:	4293      	cmp	r3, r2
9001ac8c:	d213      	bcs.n	9001acb6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
9001ac8e:	4a16      	ldr	r2, [pc, #88]	@ (9001ace8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
9001ac90:	2114      	movs	r1, #20
9001ac92:	6812      	ldr	r2, [r2, #0]
9001ac94:	fb01 2303 	mla	r3, r1, r3, r2
9001ac98:	8a1a      	ldrh	r2, [r3, #16]
9001ac9a:	8919      	ldrh	r1, [r3, #8]
9001ac9c:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001aca0:	428a      	cmp	r2, r1
9001aca2:	db1d      	blt.n	9001ace0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001aca4:	8a58      	ldrh	r0, [r3, #18]
9001aca6:	f3c0 000c 	ubfx	r0, r0, #0, #13
9001acaa:	895b      	ldrh	r3, [r3, #10]
9001acac:	4298      	cmp	r0, r3
9001acae:	bfac      	ite	ge
9001acb0:	2000      	movge	r0, #0
9001acb2:	2001      	movlt	r0, #1
9001acb4:	4770      	bx	lr
9001acb6:	490d      	ldr	r1, [pc, #52]	@ (9001acec <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
9001acb8:	8809      	ldrh	r1, [r1, #0]
9001acba:	4411      	add	r1, r2
9001acbc:	428b      	cmp	r3, r1
9001acbe:	da0d      	bge.n	9001acdc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
9001acc0:	1a9b      	subs	r3, r3, r2
9001acc2:	4a0b      	ldr	r2, [pc, #44]	@ (9001acf0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
9001acc4:	210e      	movs	r1, #14
9001acc6:	6812      	ldr	r2, [r2, #0]
9001acc8:	fb01 2303 	mla	r3, r1, r3, r2
9001accc:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
9001acd0:	891a      	ldrh	r2, [r3, #8]
9001acd2:	4291      	cmp	r1, r2
9001acd4:	db04      	blt.n	9001ace0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001acd6:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
9001acda:	e7e6      	b.n	9001acaa <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
9001acdc:	2000      	movs	r0, #0
9001acde:	4770      	bx	lr
9001ace0:	2001      	movs	r0, #1
9001ace2:	4770      	bx	lr
9001ace4:	240218ec 	.word	0x240218ec
9001ace8:	240218f4 	.word	0x240218f4
9001acec:	240218f0 	.word	0x240218f0
9001acf0:	240218d4 	.word	0x240218d4

9001acf4 <_ZNK8touchgfx6Bitmap7getDataEv>:
9001acf4:	4a12      	ldr	r2, [pc, #72]	@ (9001ad40 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
9001acf6:	8803      	ldrh	r3, [r0, #0]
9001acf8:	8811      	ldrh	r1, [r2, #0]
9001acfa:	428b      	cmp	r3, r1
9001acfc:	d20b      	bcs.n	9001ad16 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
9001acfe:	4a11      	ldr	r2, [pc, #68]	@ (9001ad44 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001ad00:	6812      	ldr	r2, [r2, #0]
9001ad02:	b112      	cbz	r2, 9001ad0a <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
9001ad04:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001ad08:	b9c0      	cbnz	r0, 9001ad3c <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
9001ad0a:	4a0f      	ldr	r2, [pc, #60]	@ (9001ad48 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
9001ad0c:	6811      	ldr	r1, [r2, #0]
9001ad0e:	2214      	movs	r2, #20
9001ad10:	4353      	muls	r3, r2
9001ad12:	58c8      	ldr	r0, [r1, r3]
9001ad14:	4770      	bx	lr
9001ad16:	4a0d      	ldr	r2, [pc, #52]	@ (9001ad4c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
9001ad18:	8812      	ldrh	r2, [r2, #0]
9001ad1a:	440a      	add	r2, r1
9001ad1c:	4293      	cmp	r3, r2
9001ad1e:	da04      	bge.n	9001ad2a <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
9001ad20:	4a08      	ldr	r2, [pc, #32]	@ (9001ad44 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001ad22:	6812      	ldr	r2, [r2, #0]
9001ad24:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001ad28:	4770      	bx	lr
9001ad2a:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001ad2e:	4293      	cmp	r3, r2
9001ad30:	d103      	bne.n	9001ad3a <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
9001ad32:	4b07      	ldr	r3, [pc, #28]	@ (9001ad50 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
9001ad34:	681b      	ldr	r3, [r3, #0]
9001ad36:	6c58      	ldr	r0, [r3, #68]	@ 0x44
9001ad38:	4770      	bx	lr
9001ad3a:	2000      	movs	r0, #0
9001ad3c:	4770      	bx	lr
9001ad3e:	bf00      	nop
9001ad40:	240218ec 	.word	0x240218ec
9001ad44:	240218d0 	.word	0x240218d0
9001ad48:	240218f4 	.word	0x240218f4
9001ad4c:	240218f0 	.word	0x240218f0
9001ad50:	24021864 	.word	0x24021864

9001ad54 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
9001ad54:	4b24      	ldr	r3, [pc, #144]	@ (9001ade8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
9001ad56:	8802      	ldrh	r2, [r0, #0]
9001ad58:	8818      	ldrh	r0, [r3, #0]
9001ad5a:	4282      	cmp	r2, r0
9001ad5c:	d221      	bcs.n	9001ada2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
9001ad5e:	4b23      	ldr	r3, [pc, #140]	@ (9001adec <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
9001ad60:	6819      	ldr	r1, [r3, #0]
9001ad62:	2314      	movs	r3, #20
9001ad64:	fb03 1302 	mla	r3, r3, r2, r1
9001ad68:	6858      	ldr	r0, [r3, #4]
9001ad6a:	2800      	cmp	r0, #0
9001ad6c:	d03a      	beq.n	9001ade4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001ad6e:	4920      	ldr	r1, [pc, #128]	@ (9001adf0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001ad70:	6809      	ldr	r1, [r1, #0]
9001ad72:	2900      	cmp	r1, #0
9001ad74:	d036      	beq.n	9001ade4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001ad76:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
9001ad7a:	2900      	cmp	r1, #0
9001ad7c:	d032      	beq.n	9001ade4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001ad7e:	891a      	ldrh	r2, [r3, #8]
9001ad80:	8958      	ldrh	r0, [r3, #10]
9001ad82:	4350      	muls	r0, r2
9001ad84:	7c5a      	ldrb	r2, [r3, #17]
9001ad86:	7cdb      	ldrb	r3, [r3, #19]
9001ad88:	0952      	lsrs	r2, r2, #5
9001ad8a:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001ad8e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9001ad92:	2b0b      	cmp	r3, #11
9001ad94:	bf18      	it	ne
9001ad96:	0040      	lslne	r0, r0, #1
9001ad98:	3003      	adds	r0, #3
9001ad9a:	f020 0003 	bic.w	r0, r0, #3
9001ad9e:	4408      	add	r0, r1
9001ada0:	4770      	bx	lr
9001ada2:	4b14      	ldr	r3, [pc, #80]	@ (9001adf4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
9001ada4:	881b      	ldrh	r3, [r3, #0]
9001ada6:	4403      	add	r3, r0
9001ada8:	429a      	cmp	r2, r3
9001adaa:	da1a      	bge.n	9001ade2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001adac:	4b12      	ldr	r3, [pc, #72]	@ (9001adf8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
9001adae:	1a10      	subs	r0, r2, r0
9001adb0:	210e      	movs	r1, #14
9001adb2:	681b      	ldr	r3, [r3, #0]
9001adb4:	fb01 3000 	mla	r0, r1, r0, r3
9001adb8:	7b03      	ldrb	r3, [r0, #12]
9001adba:	f003 031f 	and.w	r3, r3, #31
9001adbe:	2b0b      	cmp	r3, #11
9001adc0:	d10b      	bne.n	9001adda <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
9001adc2:	8903      	ldrh	r3, [r0, #8]
9001adc4:	8940      	ldrh	r0, [r0, #10]
9001adc6:	4358      	muls	r0, r3
9001adc8:	4b09      	ldr	r3, [pc, #36]	@ (9001adf0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001adca:	3003      	adds	r0, #3
9001adcc:	6819      	ldr	r1, [r3, #0]
9001adce:	f020 0303 	bic.w	r3, r0, #3
9001add2:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
9001add6:	4418      	add	r0, r3
9001add8:	4770      	bx	lr
9001adda:	2b0d      	cmp	r3, #13
9001addc:	d101      	bne.n	9001ade2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001adde:	300d      	adds	r0, #13
9001ade0:	4770      	bx	lr
9001ade2:	2000      	movs	r0, #0
9001ade4:	4770      	bx	lr
9001ade6:	bf00      	nop
9001ade8:	240218ec 	.word	0x240218ec
9001adec:	240218f4 	.word	0x240218f4
9001adf0:	240218d0 	.word	0x240218d0
9001adf4:	240218f0 	.word	0x240218f0
9001adf8:	240218d4 	.word	0x240218d4

9001adfc <_ZNK8touchgfx6Bitmap9getFormatEv>:
9001adfc:	4b1f      	ldr	r3, [pc, #124]	@ (9001ae7c <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
9001adfe:	b510      	push	{r4, lr}
9001ae00:	8802      	ldrh	r2, [r0, #0]
9001ae02:	881b      	ldrh	r3, [r3, #0]
9001ae04:	429a      	cmp	r2, r3
9001ae06:	d21a      	bcs.n	9001ae3e <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
9001ae08:	4b1d      	ldr	r3, [pc, #116]	@ (9001ae80 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
9001ae0a:	2114      	movs	r1, #20
9001ae0c:	681b      	ldr	r3, [r3, #0]
9001ae0e:	fb01 3102 	mla	r1, r1, r2, r3
9001ae12:	7c4b      	ldrb	r3, [r1, #17]
9001ae14:	0958      	lsrs	r0, r3, #5
9001ae16:	7ccb      	ldrb	r3, [r1, #19]
9001ae18:	491a      	ldr	r1, [pc, #104]	@ (9001ae84 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
9001ae1a:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001ae1e:	6809      	ldr	r1, [r1, #0]
9001ae20:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
9001ae24:	b2d8      	uxtb	r0, r3
9001ae26:	b149      	cbz	r1, 9001ae3c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001ae28:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
9001ae2c:	b132      	cbz	r2, 9001ae3c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001ae2e:	2b0e      	cmp	r3, #14
9001ae30:	d021      	beq.n	9001ae76 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
9001ae32:	280f      	cmp	r0, #15
9001ae34:	d01d      	beq.n	9001ae72 <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
9001ae36:	2810      	cmp	r0, #16
9001ae38:	bf08      	it	eq
9001ae3a:	2002      	moveq	r0, #2
9001ae3c:	bd10      	pop	{r4, pc}
9001ae3e:	4912      	ldr	r1, [pc, #72]	@ (9001ae88 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
9001ae40:	8809      	ldrh	r1, [r1, #0]
9001ae42:	4419      	add	r1, r3
9001ae44:	428a      	cmp	r2, r1
9001ae46:	da09      	bge.n	9001ae5c <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
9001ae48:	1ad3      	subs	r3, r2, r3
9001ae4a:	4a10      	ldr	r2, [pc, #64]	@ (9001ae8c <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
9001ae4c:	210e      	movs	r1, #14
9001ae4e:	6812      	ldr	r2, [r2, #0]
9001ae50:	fb01 2303 	mla	r3, r1, r3, r2
9001ae54:	7b18      	ldrb	r0, [r3, #12]
9001ae56:	f000 001f 	and.w	r0, r0, #31
9001ae5a:	e7ef      	b.n	9001ae3c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001ae5c:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
9001ae60:	429a      	cmp	r2, r3
9001ae62:	d108      	bne.n	9001ae76 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
9001ae64:	f7f6 fcf8 	bl	90011858 <_ZN8touchgfx3HAL3lcdEv>
9001ae68:	6803      	ldr	r3, [r0, #0]
9001ae6a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001ae6e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001ae70:	4718      	bx	r3
9001ae72:	2001      	movs	r0, #1
9001ae74:	e7e2      	b.n	9001ae3c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001ae76:	2000      	movs	r0, #0
9001ae78:	e7e0      	b.n	9001ae3c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001ae7a:	bf00      	nop
9001ae7c:	240218ec 	.word	0x240218ec
9001ae80:	240218f4 	.word	0x240218f4
9001ae84:	240218d0 	.word	0x240218d0
9001ae88:	240218f0 	.word	0x240218f0
9001ae8c:	240218d4 	.word	0x240218d4

9001ae90 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
9001ae90:	2010      	movs	r0, #16
9001ae92:	4770      	bx	lr

9001ae94 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
9001ae94:	4b02      	ldr	r3, [pc, #8]	@ (9001aea0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
9001ae96:	8818      	ldrh	r0, [r3, #0]
9001ae98:	0040      	lsls	r0, r0, #1
9001ae9a:	b280      	uxth	r0, r0
9001ae9c:	4770      	bx	lr
9001ae9e:	bf00      	nop
9001aea0:	2402185e 	.word	0x2402185e

9001aea4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
9001aea4:	2bff      	cmp	r3, #255	@ 0xff
9001aea6:	d05e      	beq.n	9001af66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
9001aea8:	2a0b      	cmp	r2, #11
9001aeaa:	d058      	beq.n	9001af5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
9001aeac:	d80e      	bhi.n	9001aecc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
9001aeae:	2a03      	cmp	r2, #3
9001aeb0:	d04d      	beq.n	9001af4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
9001aeb2:	d804      	bhi.n	9001aebe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
9001aeb4:	2a01      	cmp	r2, #1
9001aeb6:	d04c      	beq.n	9001af52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
9001aeb8:	d94d      	bls.n	9001af56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
9001aeba:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
9001aebc:	e031      	b.n	9001af22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001aebe:	2a09      	cmp	r2, #9
9001aec0:	d04d      	beq.n	9001af5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
9001aec2:	d84a      	bhi.n	9001af5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
9001aec4:	2a08      	cmp	r2, #8
9001aec6:	d048      	beq.n	9001af5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
9001aec8:	2300      	movs	r3, #0
9001aeca:	e02a      	b.n	9001af22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001aecc:	2a2f      	cmp	r2, #47	@ 0x2f
9001aece:	d02c      	beq.n	9001af2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
9001aed0:	d811      	bhi.n	9001aef6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
9001aed2:	2a2d      	cmp	r2, #45	@ 0x2d
9001aed4:	d018      	beq.n	9001af08 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
9001aed6:	d831      	bhi.n	9001af3c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
9001aed8:	2a2c      	cmp	r2, #44	@ 0x2c
9001aeda:	d1f5      	bne.n	9001aec8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001aedc:	684a      	ldr	r2, [r1, #4]
9001aede:	7813      	ldrb	r3, [r2, #0]
9001aee0:	7852      	ldrb	r2, [r2, #1]
9001aee2:	2a00      	cmp	r2, #0
9001aee4:	d1f0      	bne.n	9001aec8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001aee6:	2b01      	cmp	r3, #1
9001aee8:	d01d      	beq.n	9001af26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
9001aeea:	2b00      	cmp	r3, #0
9001aeec:	d02d      	beq.n	9001af4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
9001aeee:	2b02      	cmp	r3, #2
9001aef0:	d1ea      	bne.n	9001aec8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001aef2:	68c3      	ldr	r3, [r0, #12]
9001aef4:	e015      	b.n	9001af22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001aef6:	2a31      	cmp	r2, #49	@ 0x31
9001aef8:	d004      	beq.n	9001af04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
9001aefa:	d332      	bcc.n	9001af62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
9001aefc:	2a32      	cmp	r2, #50	@ 0x32
9001aefe:	d030      	beq.n	9001af62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
9001af00:	2a33      	cmp	r2, #51	@ 0x33
9001af02:	d1e1      	bne.n	9001aec8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001af04:	6f43      	ldr	r3, [r0, #116]	@ 0x74
9001af06:	e00c      	b.n	9001af22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001af08:	684a      	ldr	r2, [r1, #4]
9001af0a:	7813      	ldrb	r3, [r2, #0]
9001af0c:	7852      	ldrb	r2, [r2, #1]
9001af0e:	2a00      	cmp	r2, #0
9001af10:	d1da      	bne.n	9001aec8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001af12:	2b01      	cmp	r3, #1
9001af14:	d004      	beq.n	9001af20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
9001af16:	d30f      	bcc.n	9001af38 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
9001af18:	2b02      	cmp	r3, #2
9001af1a:	d1d5      	bne.n	9001aec8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001af1c:	6943      	ldr	r3, [r0, #20]
9001af1e:	e000      	b.n	9001af22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001af20:	6a43      	ldr	r3, [r0, #36]	@ 0x24
9001af22:	4618      	mov	r0, r3
9001af24:	4770      	bx	lr
9001af26:	69c3      	ldr	r3, [r0, #28]
9001af28:	e7fb      	b.n	9001af22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001af2a:	684b      	ldr	r3, [r1, #4]
9001af2c:	781a      	ldrb	r2, [r3, #0]
9001af2e:	785b      	ldrb	r3, [r3, #1]
9001af30:	2b00      	cmp	r3, #0
9001af32:	d1c9      	bne.n	9001aec8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001af34:	2a00      	cmp	r2, #0
9001af36:	d1f4      	bne.n	9001af22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001af38:	6b43      	ldr	r3, [r0, #52]	@ 0x34
9001af3a:	e7f2      	b.n	9001af22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001af3c:	684b      	ldr	r3, [r1, #4]
9001af3e:	781a      	ldrb	r2, [r3, #0]
9001af40:	785b      	ldrb	r3, [r3, #1]
9001af42:	2b00      	cmp	r3, #0
9001af44:	d1c0      	bne.n	9001aec8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001af46:	2a00      	cmp	r2, #0
9001af48:	d1eb      	bne.n	9001af22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001af4a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
9001af4c:	e7e9      	b.n	9001af22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001af4e:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
9001af50:	e7e7      	b.n	9001af22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001af52:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9001af54:	e7e5      	b.n	9001af22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001af56:	6c43      	ldr	r3, [r0, #68]	@ 0x44
9001af58:	e7e3      	b.n	9001af22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001af5a:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
9001af5c:	e7e1      	b.n	9001af22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001af5e:	6e43      	ldr	r3, [r0, #100]	@ 0x64
9001af60:	e7df      	b.n	9001af22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001af62:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
9001af64:	e7dd      	b.n	9001af22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001af66:	2a0b      	cmp	r2, #11
9001af68:	d059      	beq.n	9001b01e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
9001af6a:	d80e      	bhi.n	9001af8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
9001af6c:	2a03      	cmp	r2, #3
9001af6e:	d050      	beq.n	9001b012 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
9001af70:	d804      	bhi.n	9001af7c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
9001af72:	2a01      	cmp	r2, #1
9001af74:	d04f      	beq.n	9001b016 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
9001af76:	d950      	bls.n	9001b01a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
9001af78:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9001af7a:	e7d2      	b.n	9001af22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001af7c:	2a09      	cmp	r2, #9
9001af7e:	d04e      	beq.n	9001b01e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
9001af80:	d801      	bhi.n	9001af86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
9001af82:	2a08      	cmp	r2, #8
9001af84:	d1a0      	bne.n	9001aec8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001af86:	6e03      	ldr	r3, [r0, #96]	@ 0x60
9001af88:	e7cb      	b.n	9001af22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001af8a:	2a2f      	cmp	r2, #47	@ 0x2f
9001af8c:	d02d      	beq.n	9001afea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
9001af8e:	d811      	bhi.n	9001afb4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
9001af90:	2a2d      	cmp	r2, #45	@ 0x2d
9001af92:	d018      	beq.n	9001afc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
9001af94:	d833      	bhi.n	9001affe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
9001af96:	2a2c      	cmp	r2, #44	@ 0x2c
9001af98:	d196      	bne.n	9001aec8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001af9a:	684a      	ldr	r2, [r1, #4]
9001af9c:	7813      	ldrb	r3, [r2, #0]
9001af9e:	7852      	ldrb	r2, [r2, #1]
9001afa0:	2a00      	cmp	r2, #0
9001afa2:	d191      	bne.n	9001aec8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001afa4:	2b01      	cmp	r3, #1
9001afa6:	d01e      	beq.n	9001afe6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001afa8:	2b00      	cmp	r3, #0
9001afaa:	d030      	beq.n	9001b00e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
9001afac:	2b02      	cmp	r3, #2
9001afae:	d18b      	bne.n	9001aec8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001afb0:	6903      	ldr	r3, [r0, #16]
9001afb2:	e7b6      	b.n	9001af22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001afb4:	2a31      	cmp	r2, #49	@ 0x31
9001afb6:	d004      	beq.n	9001afc2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
9001afb8:	d333      	bcc.n	9001b022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
9001afba:	2a32      	cmp	r2, #50	@ 0x32
9001afbc:	d031      	beq.n	9001b022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
9001afbe:	2a33      	cmp	r2, #51	@ 0x33
9001afc0:	d182      	bne.n	9001aec8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001afc2:	6f83      	ldr	r3, [r0, #120]	@ 0x78
9001afc4:	e7ad      	b.n	9001af22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001afc6:	684a      	ldr	r2, [r1, #4]
9001afc8:	7813      	ldrb	r3, [r2, #0]
9001afca:	7852      	ldrb	r2, [r2, #1]
9001afcc:	2a00      	cmp	r2, #0
9001afce:	f47f af7b 	bne.w	9001aec8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001afd2:	2b01      	cmp	r3, #1
9001afd4:	d005      	beq.n	9001afe2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
9001afd6:	d310      	bcc.n	9001affa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
9001afd8:	2b02      	cmp	r3, #2
9001afda:	f47f af75 	bne.w	9001aec8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001afde:	6983      	ldr	r3, [r0, #24]
9001afe0:	e79f      	b.n	9001af22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001afe2:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9001afe4:	e79d      	b.n	9001af22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001afe6:	6a03      	ldr	r3, [r0, #32]
9001afe8:	e79b      	b.n	9001af22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001afea:	684b      	ldr	r3, [r1, #4]
9001afec:	781a      	ldrb	r2, [r3, #0]
9001afee:	785b      	ldrb	r3, [r3, #1]
9001aff0:	2b00      	cmp	r3, #0
9001aff2:	f47f af69 	bne.w	9001aec8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001aff6:	2a00      	cmp	r2, #0
9001aff8:	d193      	bne.n	9001af22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001affa:	6b83      	ldr	r3, [r0, #56]	@ 0x38
9001affc:	e791      	b.n	9001af22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001affe:	684b      	ldr	r3, [r1, #4]
9001b000:	781a      	ldrb	r2, [r3, #0]
9001b002:	785b      	ldrb	r3, [r3, #1]
9001b004:	2b00      	cmp	r3, #0
9001b006:	f47f af5f 	bne.w	9001aec8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b00a:	2a00      	cmp	r2, #0
9001b00c:	d189      	bne.n	9001af22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b00e:	6b03      	ldr	r3, [r0, #48]	@ 0x30
9001b010:	e787      	b.n	9001af22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b012:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9001b014:	e785      	b.n	9001af22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b016:	6d83      	ldr	r3, [r0, #88]	@ 0x58
9001b018:	e783      	b.n	9001af22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b01a:	6c83      	ldr	r3, [r0, #72]	@ 0x48
9001b01c:	e781      	b.n	9001af22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b01e:	6e83      	ldr	r3, [r0, #104]	@ 0x68
9001b020:	e77f      	b.n	9001af22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b022:	6f03      	ldr	r3, [r0, #112]	@ 0x70
9001b024:	e77d      	b.n	9001af22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

9001b026 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b026:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b02a:	b087      	sub	sp, #28
9001b02c:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001b02e:	9205      	str	r2, [sp, #20]
9001b030:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001b034:	9101      	str	r1, [sp, #4]
9001b036:	9202      	str	r2, [sp, #8]
9001b038:	6841      	ldr	r1, [r0, #4]
9001b03a:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
9001b03e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001b042:	fb01 2404 	mla	r4, r1, r4, r2
9001b046:	6802      	ldr	r2, [r0, #0]
9001b048:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001b04c:	f8de 2000 	ldr.w	r2, [lr]
9001b050:	9203      	str	r2, [sp, #12]
9001b052:	f8de 2004 	ldr.w	r2, [lr, #4]
9001b056:	3204      	adds	r2, #4
9001b058:	9204      	str	r2, [sp, #16]
9001b05a:	9a02      	ldr	r2, [sp, #8]
9001b05c:	43d6      	mvns	r6, r2
9001b05e:	b2f6      	uxtb	r6, r6
9001b060:	9a01      	ldr	r2, [sp, #4]
9001b062:	2a00      	cmp	r2, #0
9001b064:	dc03      	bgt.n	9001b06e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001b066:	9a05      	ldr	r2, [sp, #20]
9001b068:	2a00      	cmp	r2, #0
9001b06a:	f340 8129 	ble.w	9001b2c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001b06e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001b070:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001b074:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001b078:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001b07a:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001b07e:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001b082:	2b00      	cmp	r3, #0
9001b084:	dd0e      	ble.n	9001b0a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001b086:	1408      	asrs	r0, r1, #16
9001b088:	d405      	bmi.n	9001b096 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001b08a:	4560      	cmp	r0, ip
9001b08c:	da03      	bge.n	9001b096 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001b08e:	1410      	asrs	r0, r2, #16
9001b090:	d401      	bmi.n	9001b096 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001b092:	42b8      	cmp	r0, r7
9001b094:	db07      	blt.n	9001b0a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001b096:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001b098:	3b01      	subs	r3, #1
9001b09a:	3402      	adds	r4, #2
9001b09c:	4401      	add	r1, r0
9001b09e:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001b0a0:	4402      	add	r2, r0
9001b0a2:	e7ee      	b.n	9001b082 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001b0a4:	d071      	beq.n	9001b18a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001b0a6:	1e58      	subs	r0, r3, #1
9001b0a8:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001b0aa:	fb05 1500 	mla	r5, r5, r0, r1
9001b0ae:	142d      	asrs	r5, r5, #16
9001b0b0:	d45f      	bmi.n	9001b172 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001b0b2:	4565      	cmp	r5, ip
9001b0b4:	da5d      	bge.n	9001b172 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001b0b6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001b0b8:	fb05 2000 	mla	r0, r5, r0, r2
9001b0bc:	1400      	asrs	r0, r0, #16
9001b0be:	d458      	bmi.n	9001b172 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001b0c0:	42b8      	cmp	r0, r7
9001b0c2:	da56      	bge.n	9001b172 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001b0c4:	4699      	mov	r9, r3
9001b0c6:	46a2      	mov	sl, r4
9001b0c8:	f8bd b008 	ldrh.w	fp, [sp, #8]
9001b0cc:	f1b9 0f00 	cmp.w	r9, #0
9001b0d0:	dd57      	ble.n	9001b182 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
9001b0d2:	ea4f 4c22 	mov.w	ip, r2, asr #16
9001b0d6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001b0da:	9803      	ldr	r0, [sp, #12]
9001b0dc:	140d      	asrs	r5, r1, #16
9001b0de:	f109 39ff 	add.w	r9, r9, #4294967295
9001b0e2:	fb07 000c 	mla	r0, r7, ip, r0
9001b0e6:	5d40      	ldrb	r0, [r0, r5]
9001b0e8:	9d04      	ldr	r5, [sp, #16]
9001b0ea:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001b0ee:	f8ba 5000 	ldrh.w	r5, [sl]
9001b0f2:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001b0f6:	122f      	asrs	r7, r5, #8
9001b0f8:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001b0fc:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001b100:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001b104:	00ed      	lsls	r5, r5, #3
9001b106:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
9001b10a:	fb17 f706 	smulbb	r7, r7, r6
9001b10e:	b2ed      	uxtb	r5, r5
9001b110:	fb18 f806 	smulbb	r8, r8, r6
9001b114:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001b118:	10c7      	asrs	r7, r0, #3
9001b11a:	fb15 f506 	smulbb	r5, r5, r6
9001b11e:	00c0      	lsls	r0, r0, #3
9001b120:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001b124:	fa1f fc8c 	uxth.w	ip, ip
9001b128:	b2c0      	uxtb	r0, r0
9001b12a:	fb07 870b 	mla	r7, r7, fp, r8
9001b12e:	fb00 500b 	mla	r0, r0, fp, r5
9001b132:	f10c 0501 	add.w	r5, ip, #1
9001b136:	b2bf      	uxth	r7, r7
9001b138:	b280      	uxth	r0, r0
9001b13a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001b13e:	f107 0801 	add.w	r8, r7, #1
9001b142:	1c45      	adds	r5, r0, #1
9001b144:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001b148:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001b14c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001b150:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001b152:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001b156:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001b15a:	4401      	add	r1, r0
9001b15c:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001b160:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001b162:	ea45 0c0c 	orr.w	ip, r5, ip
9001b166:	4402      	add	r2, r0
9001b168:	ea4c 0c08 	orr.w	ip, ip, r8
9001b16c:	f82a cb02 	strh.w	ip, [sl], #2
9001b170:	e7ac      	b.n	9001b0cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001b172:	f04f 0800 	mov.w	r8, #0
9001b176:	f8bd a008 	ldrh.w	sl, [sp, #8]
9001b17a:	eb03 0008 	add.w	r0, r3, r8
9001b17e:	2800      	cmp	r0, #0
9001b180:	dc41      	bgt.n	9001b206 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9001b182:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b186:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b18a:	9b01      	ldr	r3, [sp, #4]
9001b18c:	2b00      	cmp	r3, #0
9001b18e:	f340 8097 	ble.w	9001b2c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001b192:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001b196:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b198:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b19c:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b1a0:	eef0 6a62 	vmov.f32	s13, s5
9001b1a4:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001b1a8:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b1ac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001b1b0:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
9001b1b4:	eef0 6a43 	vmov.f32	s13, s6
9001b1b8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001b1bc:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
9001b1c0:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b1c4:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b1c8:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b1cc:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b1d0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b1d4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b1d8:	ee12 2a90 	vmov	r2, s5
9001b1dc:	eef0 2a47 	vmov.f32	s5, s14
9001b1e0:	fb92 f3f3 	sdiv	r3, r2, r3
9001b1e4:	ee13 2a10 	vmov	r2, s6
9001b1e8:	9313      	str	r3, [sp, #76]	@ 0x4c
9001b1ea:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b1ec:	eeb0 3a67 	vmov.f32	s6, s15
9001b1f0:	fb92 f3f3 	sdiv	r3, r2, r3
9001b1f4:	9314      	str	r3, [sp, #80]	@ 0x50
9001b1f6:	9b01      	ldr	r3, [sp, #4]
9001b1f8:	9a05      	ldr	r2, [sp, #20]
9001b1fa:	3b01      	subs	r3, #1
9001b1fc:	9301      	str	r3, [sp, #4]
9001b1fe:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b200:	bf08      	it	eq
9001b202:	4613      	moveq	r3, r2
9001b204:	e72c      	b.n	9001b060 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001b206:	140f      	asrs	r7, r1, #16
9001b208:	d453      	bmi.n	9001b2b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001b20a:	f8de 5008 	ldr.w	r5, [lr, #8]
9001b20e:	42bd      	cmp	r5, r7
9001b210:	dd4f      	ble.n	9001b2b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001b212:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001b216:	d44c      	bmi.n	9001b2b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001b218:	f8de 000c 	ldr.w	r0, [lr, #12]
9001b21c:	4560      	cmp	r0, ip
9001b21e:	dd48      	ble.n	9001b2b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001b220:	9803      	ldr	r0, [sp, #12]
9001b222:	b22d      	sxth	r5, r5
9001b224:	fb0c 0505 	mla	r5, ip, r5, r0
9001b228:	5de8      	ldrb	r0, [r5, r7]
9001b22a:	9d04      	ldr	r5, [sp, #16]
9001b22c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001b230:	f06f 0501 	mvn.w	r5, #1
9001b234:	fb05 fb08 	mul.w	fp, r5, r8
9001b238:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001b23c:	f834 500b 	ldrh.w	r5, [r4, fp]
9001b240:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001b244:	122f      	asrs	r7, r5, #8
9001b246:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001b24a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001b24e:	00ed      	lsls	r5, r5, #3
9001b250:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001b254:	fb17 f706 	smulbb	r7, r7, r6
9001b258:	b2ed      	uxtb	r5, r5
9001b25a:	fb19 f906 	smulbb	r9, r9, r6
9001b25e:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001b262:	10c7      	asrs	r7, r0, #3
9001b264:	fb15 f506 	smulbb	r5, r5, r6
9001b268:	00c0      	lsls	r0, r0, #3
9001b26a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001b26e:	fa1f fc8c 	uxth.w	ip, ip
9001b272:	b2c0      	uxtb	r0, r0
9001b274:	fb07 970a 	mla	r7, r7, sl, r9
9001b278:	fb00 500a 	mla	r0, r0, sl, r5
9001b27c:	f10c 0501 	add.w	r5, ip, #1
9001b280:	b2bf      	uxth	r7, r7
9001b282:	b280      	uxth	r0, r0
9001b284:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001b288:	f107 0901 	add.w	r9, r7, #1
9001b28c:	1c45      	adds	r5, r0, #1
9001b28e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001b292:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001b296:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001b29a:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001b29e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001b2a2:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001b2a6:	ea45 0c0c 	orr.w	ip, r5, ip
9001b2aa:	ea4c 0c09 	orr.w	ip, ip, r9
9001b2ae:	f824 c00b 	strh.w	ip, [r4, fp]
9001b2b2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001b2b4:	f108 38ff 	add.w	r8, r8, #4294967295
9001b2b8:	4401      	add	r1, r0
9001b2ba:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001b2bc:	4402      	add	r2, r0
9001b2be:	e75c      	b.n	9001b17a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9001b2c0:	b007      	add	sp, #28
9001b2c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001b2c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b2c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b2ca:	b085      	sub	sp, #20
9001b2cc:	4693      	mov	fp, r2
9001b2ce:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001b2d2:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001b2d4:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001b2d6:	6870      	ldr	r0, [r6, #4]
9001b2d8:	9100      	str	r1, [sp, #0]
9001b2da:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001b2de:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
9001b2e2:	fb00 2404 	mla	r4, r0, r4, r2
9001b2e6:	6832      	ldr	r2, [r6, #0]
9001b2e8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001b2ec:	682a      	ldr	r2, [r5, #0]
9001b2ee:	9201      	str	r2, [sp, #4]
9001b2f0:	686a      	ldr	r2, [r5, #4]
9001b2f2:	3204      	adds	r2, #4
9001b2f4:	9202      	str	r2, [sp, #8]
9001b2f6:	9a00      	ldr	r2, [sp, #0]
9001b2f8:	2a00      	cmp	r2, #0
9001b2fa:	dc03      	bgt.n	9001b304 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001b2fc:	f1bb 0f00 	cmp.w	fp, #0
9001b300:	f340 80a0 	ble.w	9001b444 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001b304:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001b306:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001b30a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001b30e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001b310:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001b314:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001b318:	2b00      	cmp	r3, #0
9001b31a:	dd0c      	ble.n	9001b336 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001b31c:	1406      	asrs	r6, r0, #16
9001b31e:	d405      	bmi.n	9001b32c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001b320:	454e      	cmp	r6, r9
9001b322:	da03      	bge.n	9001b32c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001b324:	1416      	asrs	r6, r2, #16
9001b326:	d401      	bmi.n	9001b32c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001b328:	4546      	cmp	r6, r8
9001b32a:	db05      	blt.n	9001b338 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001b32c:	4470      	add	r0, lr
9001b32e:	4462      	add	r2, ip
9001b330:	3b01      	subs	r3, #1
9001b332:	3402      	adds	r4, #2
9001b334:	e7f0      	b.n	9001b318 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001b336:	d00f      	beq.n	9001b358 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001b338:	1e5e      	subs	r6, r3, #1
9001b33a:	fb0e 0706 	mla	r7, lr, r6, r0
9001b33e:	143f      	asrs	r7, r7, #16
9001b340:	d541      	bpl.n	9001b3c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
9001b342:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001b346:	4698      	mov	r8, r3
9001b348:	9603      	str	r6, [sp, #12]
9001b34a:	f1b8 0f00 	cmp.w	r8, #0
9001b34e:	dc59      	bgt.n	9001b404 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001b350:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b354:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b358:	9b00      	ldr	r3, [sp, #0]
9001b35a:	2b00      	cmp	r3, #0
9001b35c:	dd72      	ble.n	9001b444 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001b35e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b362:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b364:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b368:	eeb0 6a62 	vmov.f32	s12, s5
9001b36c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b370:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b374:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b378:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001b37c:	eeb0 6a43 	vmov.f32	s12, s6
9001b380:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b384:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001b388:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b38c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b390:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b394:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b398:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b39c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b3a0:	ee12 2a90 	vmov	r2, s5
9001b3a4:	eef0 2a47 	vmov.f32	s5, s14
9001b3a8:	fb92 fef3 	sdiv	lr, r2, r3
9001b3ac:	ee13 2a10 	vmov	r2, s6
9001b3b0:	eeb0 3a67 	vmov.f32	s6, s15
9001b3b4:	fb92 fcf3 	sdiv	ip, r2, r3
9001b3b8:	9b00      	ldr	r3, [sp, #0]
9001b3ba:	3b01      	subs	r3, #1
9001b3bc:	9300      	str	r3, [sp, #0]
9001b3be:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b3c0:	bf08      	it	eq
9001b3c2:	465b      	moveq	r3, fp
9001b3c4:	e797      	b.n	9001b2f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001b3c6:	454f      	cmp	r7, r9
9001b3c8:	dabb      	bge.n	9001b342 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001b3ca:	fb0c 2606 	mla	r6, ip, r6, r2
9001b3ce:	1436      	asrs	r6, r6, #16
9001b3d0:	d4b7      	bmi.n	9001b342 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001b3d2:	4546      	cmp	r6, r8
9001b3d4:	dab5      	bge.n	9001b342 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001b3d6:	461e      	mov	r6, r3
9001b3d8:	46a0      	mov	r8, r4
9001b3da:	2e00      	cmp	r6, #0
9001b3dc:	ddb8      	ble.n	9001b350 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001b3de:	1417      	asrs	r7, r2, #16
9001b3e0:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001b3e4:	9901      	ldr	r1, [sp, #4]
9001b3e6:	ea4f 4920 	mov.w	r9, r0, asr #16
9001b3ea:	4462      	add	r2, ip
9001b3ec:	4470      	add	r0, lr
9001b3ee:	fb0a 1707 	mla	r7, sl, r7, r1
9001b3f2:	9902      	ldr	r1, [sp, #8]
9001b3f4:	3e01      	subs	r6, #1
9001b3f6:	f817 7009 	ldrb.w	r7, [r7, r9]
9001b3fa:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001b3fe:	f828 7b02 	strh.w	r7, [r8], #2
9001b402:	e7ea      	b.n	9001b3da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
9001b404:	ea5f 4920 	movs.w	r9, r0, asr #16
9001b408:	d417      	bmi.n	9001b43a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001b40a:	68ae      	ldr	r6, [r5, #8]
9001b40c:	454e      	cmp	r6, r9
9001b40e:	dd14      	ble.n	9001b43a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001b410:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001b414:	d411      	bmi.n	9001b43a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001b416:	68ef      	ldr	r7, [r5, #12]
9001b418:	4557      	cmp	r7, sl
9001b41a:	dd0e      	ble.n	9001b43a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001b41c:	9f01      	ldr	r7, [sp, #4]
9001b41e:	b236      	sxth	r6, r6
9001b420:	f06f 0101 	mvn.w	r1, #1
9001b424:	fb0a 7606 	mla	r6, sl, r6, r7
9001b428:	9f02      	ldr	r7, [sp, #8]
9001b42a:	f816 6009 	ldrb.w	r6, [r6, r9]
9001b42e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001b432:	fb01 f608 	mul.w	r6, r1, r8
9001b436:	9903      	ldr	r1, [sp, #12]
9001b438:	538f      	strh	r7, [r1, r6]
9001b43a:	4470      	add	r0, lr
9001b43c:	4462      	add	r2, ip
9001b43e:	f108 38ff 	add.w	r8, r8, #4294967295
9001b442:	e782      	b.n	9001b34a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001b444:	b005      	add	sp, #20
9001b446:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001b44a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b44a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b44e:	b087      	sub	sp, #28
9001b450:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9001b452:	9205      	str	r2, [sp, #20]
9001b454:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001b458:	9102      	str	r1, [sp, #8]
9001b45a:	9203      	str	r2, [sp, #12]
9001b45c:	6861      	ldr	r1, [r4, #4]
9001b45e:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
9001b462:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
9001b466:	fb01 2000 	mla	r0, r1, r0, r2
9001b46a:	6822      	ldr	r2, [r4, #0]
9001b46c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
9001b470:	9200      	str	r2, [sp, #0]
9001b472:	f8dc 2000 	ldr.w	r2, [ip]
9001b476:	9204      	str	r2, [sp, #16]
9001b478:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001b47c:	3204      	adds	r2, #4
9001b47e:	9201      	str	r2, [sp, #4]
9001b480:	9a03      	ldr	r2, [sp, #12]
9001b482:	43d5      	mvns	r5, r2
9001b484:	b2ed      	uxtb	r5, r5
9001b486:	9a02      	ldr	r2, [sp, #8]
9001b488:	2a00      	cmp	r2, #0
9001b48a:	dc03      	bgt.n	9001b494 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001b48c:	9a05      	ldr	r2, [sp, #20]
9001b48e:	2a00      	cmp	r2, #0
9001b490:	f340 812c 	ble.w	9001b6ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001b494:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001b496:	f9bc e008 	ldrsh.w	lr, [ip, #8]
9001b49a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001b49e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001b4a0:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
9001b4a4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001b4a8:	2b00      	cmp	r3, #0
9001b4aa:	dd10      	ble.n	9001b4ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001b4ac:	140c      	asrs	r4, r1, #16
9001b4ae:	d405      	bmi.n	9001b4bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001b4b0:	4574      	cmp	r4, lr
9001b4b2:	da03      	bge.n	9001b4bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001b4b4:	1414      	asrs	r4, r2, #16
9001b4b6:	d401      	bmi.n	9001b4bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001b4b8:	42bc      	cmp	r4, r7
9001b4ba:	db09      	blt.n	9001b4d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001b4bc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001b4be:	3b01      	subs	r3, #1
9001b4c0:	9800      	ldr	r0, [sp, #0]
9001b4c2:	4421      	add	r1, r4
9001b4c4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001b4c6:	3002      	adds	r0, #2
9001b4c8:	4422      	add	r2, r4
9001b4ca:	9000      	str	r0, [sp, #0]
9001b4cc:	e7ec      	b.n	9001b4a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001b4ce:	d071      	beq.n	9001b5b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
9001b4d0:	1e5c      	subs	r4, r3, #1
9001b4d2:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001b4d4:	fb06 1604 	mla	r6, r6, r4, r1
9001b4d8:	1436      	asrs	r6, r6, #16
9001b4da:	d45d      	bmi.n	9001b598 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001b4dc:	4576      	cmp	r6, lr
9001b4de:	da5b      	bge.n	9001b598 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001b4e0:	9e14      	ldr	r6, [sp, #80]	@ 0x50
9001b4e2:	fb06 2404 	mla	r4, r6, r4, r2
9001b4e6:	1424      	asrs	r4, r4, #16
9001b4e8:	d456      	bmi.n	9001b598 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001b4ea:	42bc      	cmp	r4, r7
9001b4ec:	da54      	bge.n	9001b598 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001b4ee:	4698      	mov	r8, r3
9001b4f0:	f8dd 9000 	ldr.w	r9, [sp]
9001b4f4:	f8bd a00c 	ldrh.w	sl, [sp, #12]
9001b4f8:	f1b8 0f00 	cmp.w	r8, #0
9001b4fc:	dd54      	ble.n	9001b5a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001b4fe:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001b502:	1414      	asrs	r4, r2, #16
9001b504:	9804      	ldr	r0, [sp, #16]
9001b506:	140e      	asrs	r6, r1, #16
9001b508:	f108 38ff 	add.w	r8, r8, #4294967295
9001b50c:	fb07 0404 	mla	r4, r7, r4, r0
9001b510:	9801      	ldr	r0, [sp, #4]
9001b512:	f814 e006 	ldrb.w	lr, [r4, r6]
9001b516:	f8b9 4000 	ldrh.w	r4, [r9]
9001b51a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001b51e:	1227      	asrs	r7, r4, #8
9001b520:	eb00 0b0e 	add.w	fp, r0, lr
9001b524:	f810 e00e 	ldrb.w	lr, [r0, lr]
9001b528:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001b52c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001b52e:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001b532:	f89b b001 	ldrb.w	fp, [fp, #1]
9001b536:	4401      	add	r1, r0
9001b538:	fb16 f60a 	smulbb	r6, r6, sl
9001b53c:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001b53e:	fb1b fb0a 	smulbb	fp, fp, sl
9001b542:	fb07 6705 	mla	r7, r7, r5, r6
9001b546:	10e6      	asrs	r6, r4, #3
9001b548:	00e4      	lsls	r4, r4, #3
9001b54a:	4402      	add	r2, r0
9001b54c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001b550:	b2bf      	uxth	r7, r7
9001b552:	b2e4      	uxtb	r4, r4
9001b554:	fb06 b605 	mla	r6, r6, r5, fp
9001b558:	fb14 f405 	smulbb	r4, r4, r5
9001b55c:	b2b6      	uxth	r6, r6
9001b55e:	fb0e 4e0a 	mla	lr, lr, sl, r4
9001b562:	1c7c      	adds	r4, r7, #1
9001b564:	f106 0b01 	add.w	fp, r6, #1
9001b568:	fa1f fe8e 	uxth.w	lr, lr
9001b56c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001b570:	f10e 0401 	add.w	r4, lr, #1
9001b574:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001b578:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001b57c:	eb04 241e 	add.w	r4, r4, lr, lsr #8
9001b580:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001b584:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001b588:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9001b58c:	4327      	orrs	r7, r4
9001b58e:	ea47 070b 	orr.w	r7, r7, fp
9001b592:	f829 7b02 	strh.w	r7, [r9], #2
9001b596:	e7af      	b.n	9001b4f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
9001b598:	f04f 0e00 	mov.w	lr, #0
9001b59c:	f8bd 900c 	ldrh.w	r9, [sp, #12]
9001b5a0:	eb03 040e 	add.w	r4, r3, lr
9001b5a4:	2c00      	cmp	r4, #0
9001b5a6:	dc43      	bgt.n	9001b630 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
9001b5a8:	9a00      	ldr	r2, [sp, #0]
9001b5aa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b5ae:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001b5b2:	9300      	str	r3, [sp, #0]
9001b5b4:	9b02      	ldr	r3, [sp, #8]
9001b5b6:	2b00      	cmp	r3, #0
9001b5b8:	f340 8098 	ble.w	9001b6ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001b5bc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001b5c0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b5c2:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b5c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b5ca:	eef0 6a62 	vmov.f32	s13, s5
9001b5ce:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001b5d2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b5d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001b5da:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
9001b5de:	eef0 6a43 	vmov.f32	s13, s6
9001b5e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001b5e6:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
9001b5ea:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b5ee:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b5f2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b5f6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b5fa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b5fe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b602:	ee12 2a90 	vmov	r2, s5
9001b606:	eef0 2a47 	vmov.f32	s5, s14
9001b60a:	fb92 f3f3 	sdiv	r3, r2, r3
9001b60e:	ee13 2a10 	vmov	r2, s6
9001b612:	9313      	str	r3, [sp, #76]	@ 0x4c
9001b614:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b616:	eeb0 3a67 	vmov.f32	s6, s15
9001b61a:	fb92 f3f3 	sdiv	r3, r2, r3
9001b61e:	9314      	str	r3, [sp, #80]	@ 0x50
9001b620:	9b02      	ldr	r3, [sp, #8]
9001b622:	9a05      	ldr	r2, [sp, #20]
9001b624:	3b01      	subs	r3, #1
9001b626:	9302      	str	r3, [sp, #8]
9001b628:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b62a:	bf08      	it	eq
9001b62c:	4613      	moveq	r3, r2
9001b62e:	e72a      	b.n	9001b486 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001b630:	140f      	asrs	r7, r1, #16
9001b632:	d454      	bmi.n	9001b6de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001b634:	f8dc 6008 	ldr.w	r6, [ip, #8]
9001b638:	42be      	cmp	r6, r7
9001b63a:	dd50      	ble.n	9001b6de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001b63c:	ea5f 4822 	movs.w	r8, r2, asr #16
9001b640:	d44d      	bmi.n	9001b6de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001b642:	f8dc 400c 	ldr.w	r4, [ip, #12]
9001b646:	4544      	cmp	r4, r8
9001b648:	dd49      	ble.n	9001b6de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001b64a:	9c04      	ldr	r4, [sp, #16]
9001b64c:	b236      	sxth	r6, r6
9001b64e:	f06f 0001 	mvn.w	r0, #1
9001b652:	fb08 4606 	mla	r6, r8, r6, r4
9001b656:	9c01      	ldr	r4, [sp, #4]
9001b658:	fb00 fa0e 	mul.w	sl, r0, lr
9001b65c:	9800      	ldr	r0, [sp, #0]
9001b65e:	f816 8007 	ldrb.w	r8, [r6, r7]
9001b662:	eb08 0848 	add.w	r8, r8, r8, lsl #1
9001b666:	eb04 0b08 	add.w	fp, r4, r8
9001b66a:	f830 400a 	ldrh.w	r4, [r0, sl]
9001b66e:	9801      	ldr	r0, [sp, #4]
9001b670:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001b674:	1227      	asrs	r7, r4, #8
9001b676:	f89b b001 	ldrb.w	fp, [fp, #1]
9001b67a:	fb16 f609 	smulbb	r6, r6, r9
9001b67e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001b682:	f810 8008 	ldrb.w	r8, [r0, r8]
9001b686:	fb1b fb09 	smulbb	fp, fp, r9
9001b68a:	fb07 6705 	mla	r7, r7, r5, r6
9001b68e:	10e6      	asrs	r6, r4, #3
9001b690:	00e4      	lsls	r4, r4, #3
9001b692:	9800      	ldr	r0, [sp, #0]
9001b694:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001b698:	b2bf      	uxth	r7, r7
9001b69a:	b2e4      	uxtb	r4, r4
9001b69c:	fb06 b605 	mla	r6, r6, r5, fp
9001b6a0:	fb14 f405 	smulbb	r4, r4, r5
9001b6a4:	b2b6      	uxth	r6, r6
9001b6a6:	fb08 4809 	mla	r8, r8, r9, r4
9001b6aa:	1c7c      	adds	r4, r7, #1
9001b6ac:	f106 0b01 	add.w	fp, r6, #1
9001b6b0:	fa1f f888 	uxth.w	r8, r8
9001b6b4:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001b6b8:	f108 0401 	add.w	r4, r8, #1
9001b6bc:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001b6c0:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001b6c4:	eb04 2418 	add.w	r4, r4, r8, lsr #8
9001b6c8:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001b6cc:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001b6d0:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9001b6d4:	4327      	orrs	r7, r4
9001b6d6:	ea47 070b 	orr.w	r7, r7, fp
9001b6da:	f820 700a 	strh.w	r7, [r0, sl]
9001b6de:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001b6e0:	f10e 3eff 	add.w	lr, lr, #4294967295
9001b6e4:	4401      	add	r1, r0
9001b6e6:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001b6e8:	4402      	add	r2, r0
9001b6ea:	e759      	b.n	9001b5a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001b6ec:	b007      	add	sp, #28
9001b6ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001b6f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b6f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b6f8:	b085      	sub	sp, #20
9001b6fa:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001b6fe:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001b700:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001b702:	9203      	str	r2, [sp, #12]
9001b704:	6870      	ldr	r0, [r6, #4]
9001b706:	686f      	ldr	r7, [r5, #4]
9001b708:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
9001b70c:	3704      	adds	r7, #4
9001b70e:	9101      	str	r1, [sp, #4]
9001b710:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001b714:	fb00 2404 	mla	r4, r0, r4, r2
9001b718:	6832      	ldr	r2, [r6, #0]
9001b71a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001b71e:	682a      	ldr	r2, [r5, #0]
9001b720:	9202      	str	r2, [sp, #8]
9001b722:	9a01      	ldr	r2, [sp, #4]
9001b724:	2a00      	cmp	r2, #0
9001b726:	dc03      	bgt.n	9001b730 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001b728:	9a03      	ldr	r2, [sp, #12]
9001b72a:	2a00      	cmp	r2, #0
9001b72c:	f340 80cc 	ble.w	9001b8c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001b730:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001b732:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001b736:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001b73a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001b73c:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001b740:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001b744:	2b00      	cmp	r3, #0
9001b746:	dd0d      	ble.n	9001b764 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001b748:	1406      	asrs	r6, r0, #16
9001b74a:	d405      	bmi.n	9001b758 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001b74c:	454e      	cmp	r6, r9
9001b74e:	da03      	bge.n	9001b758 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001b750:	1416      	asrs	r6, r2, #16
9001b752:	d401      	bmi.n	9001b758 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001b754:	4546      	cmp	r6, r8
9001b756:	db06      	blt.n	9001b766 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001b758:	9e12      	ldr	r6, [sp, #72]	@ 0x48
9001b75a:	4460      	add	r0, ip
9001b75c:	3b01      	subs	r3, #1
9001b75e:	3402      	adds	r4, #2
9001b760:	4432      	add	r2, r6
9001b762:	e7ef      	b.n	9001b744 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
9001b764:	d00f      	beq.n	9001b786 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001b766:	1e5e      	subs	r6, r3, #1
9001b768:	fb0c 0e06 	mla	lr, ip, r6, r0
9001b76c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
9001b770:	d543      	bpl.n	9001b7fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
9001b772:	4698      	mov	r8, r3
9001b774:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
9001b778:	f1b8 0f00 	cmp.w	r8, #0
9001b77c:	dc71      	bgt.n	9001b862 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
9001b77e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b782:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b786:	9b01      	ldr	r3, [sp, #4]
9001b788:	2b00      	cmp	r3, #0
9001b78a:	f340 809d 	ble.w	9001b8c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001b78e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b792:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b794:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b798:	eeb0 6a62 	vmov.f32	s12, s5
9001b79c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b7a0:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b7a4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b7a8:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001b7ac:	eeb0 6a43 	vmov.f32	s12, s6
9001b7b0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b7b4:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001b7b8:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b7bc:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b7c0:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b7c4:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b7c8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b7cc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b7d0:	ee12 2a90 	vmov	r2, s5
9001b7d4:	eef0 2a47 	vmov.f32	s5, s14
9001b7d8:	fb92 fcf3 	sdiv	ip, r2, r3
9001b7dc:	ee13 2a10 	vmov	r2, s6
9001b7e0:	eeb0 3a67 	vmov.f32	s6, s15
9001b7e4:	fb92 f3f3 	sdiv	r3, r2, r3
9001b7e8:	9312      	str	r3, [sp, #72]	@ 0x48
9001b7ea:	9b01      	ldr	r3, [sp, #4]
9001b7ec:	9a03      	ldr	r2, [sp, #12]
9001b7ee:	3b01      	subs	r3, #1
9001b7f0:	9301      	str	r3, [sp, #4]
9001b7f2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b7f4:	bf08      	it	eq
9001b7f6:	4613      	moveq	r3, r2
9001b7f8:	e793      	b.n	9001b722 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
9001b7fa:	45ce      	cmp	lr, r9
9001b7fc:	dab9      	bge.n	9001b772 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001b7fe:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001b800:	fb01 2606 	mla	r6, r1, r6, r2
9001b804:	1436      	asrs	r6, r6, #16
9001b806:	d4b4      	bmi.n	9001b772 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001b808:	4546      	cmp	r6, r8
9001b80a:	dab2      	bge.n	9001b772 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001b80c:	4698      	mov	r8, r3
9001b80e:	46a2      	mov	sl, r4
9001b810:	f1b8 0f00 	cmp.w	r8, #0
9001b814:	ddb3      	ble.n	9001b77e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001b816:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001b81a:	1416      	asrs	r6, r2, #16
9001b81c:	9902      	ldr	r1, [sp, #8]
9001b81e:	ea4f 4e20 	mov.w	lr, r0, asr #16
9001b822:	f108 38ff 	add.w	r8, r8, #4294967295
9001b826:	4460      	add	r0, ip
9001b828:	fb09 1606 	mla	r6, r9, r6, r1
9001b82c:	4928      	ldr	r1, [pc, #160]	@ (9001b8d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
9001b82e:	f816 e00e 	ldrb.w	lr, [r6, lr]
9001b832:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001b836:	eb07 0b0e 	add.w	fp, r7, lr
9001b83a:	f89b 6001 	ldrb.w	r6, [fp, #1]
9001b83e:	f89b 9002 	ldrb.w	r9, [fp, #2]
9001b842:	00f6      	lsls	r6, r6, #3
9001b844:	ea01 2909 	and.w	r9, r1, r9, lsl #8
9001b848:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001b84a:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001b84e:	440a      	add	r2, r1
9001b850:	ea49 0606 	orr.w	r6, r9, r6
9001b854:	f817 900e 	ldrb.w	r9, [r7, lr]
9001b858:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
9001b85c:	f82a 6b02 	strh.w	r6, [sl], #2
9001b860:	e7d6      	b.n	9001b810 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001b862:	ea5f 4920 	movs.w	r9, r0, asr #16
9001b866:	d429      	bmi.n	9001b8bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001b868:	68ae      	ldr	r6, [r5, #8]
9001b86a:	454e      	cmp	r6, r9
9001b86c:	dd26      	ble.n	9001b8bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001b86e:	ea5f 4b22 	movs.w	fp, r2, asr #16
9001b872:	d423      	bmi.n	9001b8bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001b874:	68e9      	ldr	r1, [r5, #12]
9001b876:	4559      	cmp	r1, fp
9001b878:	dd20      	ble.n	9001b8bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001b87a:	fa0f fe86 	sxth.w	lr, r6
9001b87e:	9902      	ldr	r1, [sp, #8]
9001b880:	fb0b 1e0e 	mla	lr, fp, lr, r1
9001b884:	f06f 0101 	mvn.w	r1, #1
9001b888:	f81e e009 	ldrb.w	lr, [lr, r9]
9001b88c:	fb01 f908 	mul.w	r9, r1, r8
9001b890:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
9001b894:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001b898:	eb07 060e 	add.w	r6, r7, lr
9001b89c:	f896 b002 	ldrb.w	fp, [r6, #2]
9001b8a0:	7876      	ldrb	r6, [r6, #1]
9001b8a2:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
9001b8a6:	00f6      	lsls	r6, r6, #3
9001b8a8:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001b8ac:	ea4b 0606 	orr.w	r6, fp, r6
9001b8b0:	f817 b00e 	ldrb.w	fp, [r7, lr]
9001b8b4:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
9001b8b8:	f82a 6009 	strh.w	r6, [sl, r9]
9001b8bc:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001b8be:	4460      	add	r0, ip
9001b8c0:	f108 38ff 	add.w	r8, r8, #4294967295
9001b8c4:	440a      	add	r2, r1
9001b8c6:	e757      	b.n	9001b778 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001b8c8:	b005      	add	sp, #20
9001b8ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b8ce:	bf00      	nop
9001b8d0:	fffff800 	.word	0xfffff800

9001b8d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b8d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b8d8:	b087      	sub	sp, #28
9001b8da:	468b      	mov	fp, r1
9001b8dc:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001b8e0:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001b8e2:	9204      	str	r2, [sp, #16]
9001b8e4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001b8e8:	6841      	ldr	r1, [r0, #4]
9001b8ea:	9205      	str	r2, [sp, #20]
9001b8ec:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
9001b8f0:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001b8f4:	fb01 2404 	mla	r4, r1, r4, r2
9001b8f8:	6802      	ldr	r2, [r0, #0]
9001b8fa:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001b8fe:	f8dc 2000 	ldr.w	r2, [ip]
9001b902:	9201      	str	r2, [sp, #4]
9001b904:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001b908:	3204      	adds	r2, #4
9001b90a:	9202      	str	r2, [sp, #8]
9001b90c:	f1bb 0f00 	cmp.w	fp, #0
9001b910:	dc03      	bgt.n	9001b91a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
9001b912:	9a04      	ldr	r2, [sp, #16]
9001b914:	2a00      	cmp	r2, #0
9001b916:	f340 8138 	ble.w	9001bb8a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001b91a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001b91c:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001b920:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001b924:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001b926:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
9001b92a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001b92e:	2b00      	cmp	r3, #0
9001b930:	dd0e      	ble.n	9001b950 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001b932:	1402      	asrs	r2, r0, #16
9001b934:	d405      	bmi.n	9001b942 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001b936:	42ba      	cmp	r2, r7
9001b938:	da03      	bge.n	9001b942 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001b93a:	140a      	asrs	r2, r1, #16
9001b93c:	d401      	bmi.n	9001b942 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001b93e:	42b2      	cmp	r2, r6
9001b940:	db07      	blt.n	9001b952 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001b942:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001b944:	3b01      	subs	r3, #1
9001b946:	3402      	adds	r4, #2
9001b948:	4410      	add	r0, r2
9001b94a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001b94c:	4411      	add	r1, r2
9001b94e:	e7ee      	b.n	9001b92e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
9001b950:	d019      	beq.n	9001b986 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001b952:	1e5a      	subs	r2, r3, #1
9001b954:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001b956:	fb05 0502 	mla	r5, r5, r2, r0
9001b95a:	142d      	asrs	r5, r5, #16
9001b95c:	d409      	bmi.n	9001b972 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001b95e:	42bd      	cmp	r5, r7
9001b960:	da07      	bge.n	9001b972 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001b962:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001b964:	fb05 1202 	mla	r2, r5, r2, r1
9001b968:	1412      	asrs	r2, r2, #16
9001b96a:	d402      	bmi.n	9001b972 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001b96c:	42b2      	cmp	r2, r6
9001b96e:	f2c0 80ac 	blt.w	9001baca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
9001b972:	f04f 0e00 	mov.w	lr, #0
9001b976:	eb03 020e 	add.w	r2, r3, lr
9001b97a:	2a00      	cmp	r2, #0
9001b97c:	dc3e      	bgt.n	9001b9fc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001b97e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b982:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b986:	f1bb 0f00 	cmp.w	fp, #0
9001b98a:	f340 80fe 	ble.w	9001bb8a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001b98e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b992:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b994:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b998:	f1bb 0b01 	subs.w	fp, fp, #1
9001b99c:	eeb0 6a62 	vmov.f32	s12, s5
9001b9a0:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b9a4:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b9a8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b9ac:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001b9b0:	eeb0 6a43 	vmov.f32	s12, s6
9001b9b4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b9b8:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001b9bc:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b9c0:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b9c4:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b9c8:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b9cc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b9d0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b9d4:	ee12 2a90 	vmov	r2, s5
9001b9d8:	eef0 2a47 	vmov.f32	s5, s14
9001b9dc:	fb92 f3f3 	sdiv	r3, r2, r3
9001b9e0:	ee13 2a10 	vmov	r2, s6
9001b9e4:	9313      	str	r3, [sp, #76]	@ 0x4c
9001b9e6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b9e8:	eeb0 3a67 	vmov.f32	s6, s15
9001b9ec:	fb92 f3f3 	sdiv	r3, r2, r3
9001b9f0:	9a04      	ldr	r2, [sp, #16]
9001b9f2:	9314      	str	r3, [sp, #80]	@ 0x50
9001b9f4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b9f6:	bf08      	it	eq
9001b9f8:	4613      	moveq	r3, r2
9001b9fa:	e787      	b.n	9001b90c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001b9fc:	1406      	asrs	r6, r0, #16
9001b9fe:	d45d      	bmi.n	9001babc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001ba00:	f8dc 5008 	ldr.w	r5, [ip, #8]
9001ba04:	42b5      	cmp	r5, r6
9001ba06:	dd59      	ble.n	9001babc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001ba08:	140f      	asrs	r7, r1, #16
9001ba0a:	d457      	bmi.n	9001babc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001ba0c:	f8dc 200c 	ldr.w	r2, [ip, #12]
9001ba10:	42ba      	cmp	r2, r7
9001ba12:	dd53      	ble.n	9001babc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001ba14:	9a01      	ldr	r2, [sp, #4]
9001ba16:	b22d      	sxth	r5, r5
9001ba18:	fb07 2505 	mla	r5, r7, r5, r2
9001ba1c:	5daa      	ldrb	r2, [r5, r6]
9001ba1e:	9d02      	ldr	r5, [sp, #8]
9001ba20:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001ba24:	0e2e      	lsrs	r6, r5, #24
9001ba26:	d049      	beq.n	9001babc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001ba28:	f06f 0201 	mvn.w	r2, #1
9001ba2c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001ba30:	fb02 f20e 	mul.w	r2, r2, lr
9001ba34:	f834 8002 	ldrh.w	r8, [r4, r2]
9001ba38:	9203      	str	r2, [sp, #12]
9001ba3a:	9a05      	ldr	r2, [sp, #20]
9001ba3c:	ea4f 2728 	mov.w	r7, r8, asr #8
9001ba40:	4356      	muls	r6, r2
9001ba42:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001ba46:	1c72      	adds	r2, r6, #1
9001ba48:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001ba4c:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001ba50:	b2ed      	uxtb	r5, r5
9001ba52:	1212      	asrs	r2, r2, #8
9001ba54:	fa1f f982 	uxth.w	r9, r2
9001ba58:	43d2      	mvns	r2, r2
9001ba5a:	fb16 f609 	smulbb	r6, r6, r9
9001ba5e:	b2d2      	uxtb	r2, r2
9001ba60:	fb15 f509 	smulbb	r5, r5, r9
9001ba64:	fb07 6702 	mla	r7, r7, r2, r6
9001ba68:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001ba6c:	fb1a fa09 	smulbb	sl, sl, r9
9001ba70:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001ba74:	b2bf      	uxth	r7, r7
9001ba76:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001ba7a:	fa5f f888 	uxtb.w	r8, r8
9001ba7e:	fb06 a602 	mla	r6, r6, r2, sl
9001ba82:	fb08 5502 	mla	r5, r8, r2, r5
9001ba86:	1c7a      	adds	r2, r7, #1
9001ba88:	b2b6      	uxth	r6, r6
9001ba8a:	b2ad      	uxth	r5, r5
9001ba8c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001ba90:	9a03      	ldr	r2, [sp, #12]
9001ba92:	f105 0a01 	add.w	sl, r5, #1
9001ba96:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001ba9a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001ba9e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001baa2:	ea4a 0707 	orr.w	r7, sl, r7
9001baa6:	f106 0a01 	add.w	sl, r6, #1
9001baaa:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001baae:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001bab2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001bab6:	ea47 070a 	orr.w	r7, r7, sl
9001baba:	52a7      	strh	r7, [r4, r2]
9001babc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001babe:	f10e 3eff 	add.w	lr, lr, #4294967295
9001bac2:	4410      	add	r0, r2
9001bac4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001bac6:	4411      	add	r1, r2
9001bac8:	e755      	b.n	9001b976 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001baca:	f04f 0800 	mov.w	r8, #0
9001bace:	eba3 0208 	sub.w	r2, r3, r8
9001bad2:	2a00      	cmp	r2, #0
9001bad4:	f77f af53 	ble.w	9001b97e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001bad8:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
9001badc:	140a      	asrs	r2, r1, #16
9001bade:	9f01      	ldr	r7, [sp, #4]
9001bae0:	1405      	asrs	r5, r0, #16
9001bae2:	fb06 7202 	mla	r2, r6, r2, r7
9001bae6:	5d52      	ldrb	r2, [r2, r5]
9001bae8:	9d02      	ldr	r5, [sp, #8]
9001baea:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001baee:	0e2e      	lsrs	r6, r5, #24
9001baf0:	d044      	beq.n	9001bb7c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
9001baf2:	9a05      	ldr	r2, [sp, #20]
9001baf4:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001baf8:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001bafc:	4356      	muls	r6, r2
9001bafe:	ea4f 272e 	mov.w	r7, lr, asr #8
9001bb02:	1c72      	adds	r2, r6, #1
9001bb04:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001bb08:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001bb0c:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001bb10:	b2ed      	uxtb	r5, r5
9001bb12:	1212      	asrs	r2, r2, #8
9001bb14:	fa1f f982 	uxth.w	r9, r2
9001bb18:	43d2      	mvns	r2, r2
9001bb1a:	fb16 f609 	smulbb	r6, r6, r9
9001bb1e:	b2d2      	uxtb	r2, r2
9001bb20:	fb15 f509 	smulbb	r5, r5, r9
9001bb24:	fb07 6702 	mla	r7, r7, r2, r6
9001bb28:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001bb2c:	fb1a fa09 	smulbb	sl, sl, r9
9001bb30:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001bb34:	b2bf      	uxth	r7, r7
9001bb36:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001bb3a:	fa5f fe8e 	uxtb.w	lr, lr
9001bb3e:	fb06 a602 	mla	r6, r6, r2, sl
9001bb42:	fb0e 5502 	mla	r5, lr, r2, r5
9001bb46:	1c7a      	adds	r2, r7, #1
9001bb48:	b2b6      	uxth	r6, r6
9001bb4a:	b2ad      	uxth	r5, r5
9001bb4c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001bb50:	f105 0a01 	add.w	sl, r5, #1
9001bb54:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001bb58:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001bb5c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001bb60:	ea4a 0707 	orr.w	r7, sl, r7
9001bb64:	f106 0a01 	add.w	sl, r6, #1
9001bb68:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001bb6c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001bb70:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001bb74:	ea47 070a 	orr.w	r7, r7, sl
9001bb78:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001bb7c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001bb7e:	f108 0801 	add.w	r8, r8, #1
9001bb82:	4410      	add	r0, r2
9001bb84:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001bb86:	4411      	add	r1, r2
9001bb88:	e7a1      	b.n	9001bace <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
9001bb8a:	b007      	add	sp, #28
9001bb8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001bb90 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001bb90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001bb94:	b085      	sub	sp, #20
9001bb96:	468b      	mov	fp, r1
9001bb98:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001bb9c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001bb9e:	9203      	str	r2, [sp, #12]
9001bba0:	6841      	ldr	r1, [r0, #4]
9001bba2:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
9001bba6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001bbaa:	fb01 2404 	mla	r4, r1, r4, r2
9001bbae:	6802      	ldr	r2, [r0, #0]
9001bbb0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001bbb4:	f8de 2000 	ldr.w	r2, [lr]
9001bbb8:	9200      	str	r2, [sp, #0]
9001bbba:	f8de 2004 	ldr.w	r2, [lr, #4]
9001bbbe:	3204      	adds	r2, #4
9001bbc0:	9201      	str	r2, [sp, #4]
9001bbc2:	f1bb 0f00 	cmp.w	fp, #0
9001bbc6:	dc03      	bgt.n	9001bbd0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001bbc8:	9a03      	ldr	r2, [sp, #12]
9001bbca:	2a00      	cmp	r2, #0
9001bbcc:	f340 8153 	ble.w	9001be76 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001bbd0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001bbd2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001bbd6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001bbda:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001bbdc:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001bbe0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001bbe4:	2b00      	cmp	r3, #0
9001bbe6:	dd0e      	ble.n	9001bc06 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001bbe8:	1408      	asrs	r0, r1, #16
9001bbea:	d405      	bmi.n	9001bbf8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001bbec:	42b8      	cmp	r0, r7
9001bbee:	da03      	bge.n	9001bbf8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001bbf0:	1410      	asrs	r0, r2, #16
9001bbf2:	d401      	bmi.n	9001bbf8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001bbf4:	42b0      	cmp	r0, r6
9001bbf6:	db07      	blt.n	9001bc08 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001bbf8:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001bbfa:	3b01      	subs	r3, #1
9001bbfc:	3402      	adds	r4, #2
9001bbfe:	4401      	add	r1, r0
9001bc00:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001bc02:	4402      	add	r2, r0
9001bc04:	e7ee      	b.n	9001bbe4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001bc06:	d017      	beq.n	9001bc38 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001bc08:	1e58      	subs	r0, r3, #1
9001bc0a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001bc0c:	fb05 1500 	mla	r5, r5, r0, r1
9001bc10:	142d      	asrs	r5, r5, #16
9001bc12:	d409      	bmi.n	9001bc28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001bc14:	42bd      	cmp	r5, r7
9001bc16:	da07      	bge.n	9001bc28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001bc18:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001bc1a:	fb05 2000 	mla	r0, r5, r0, r2
9001bc1e:	1400      	asrs	r0, r0, #16
9001bc20:	d402      	bmi.n	9001bc28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001bc22:	42b0      	cmp	r0, r6
9001bc24:	f2c0 80bc 	blt.w	9001bda0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
9001bc28:	2600      	movs	r6, #0
9001bc2a:	1998      	adds	r0, r3, r6
9001bc2c:	2800      	cmp	r0, #0
9001bc2e:	dc3e      	bgt.n	9001bcae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
9001bc30:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001bc34:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001bc38:	f1bb 0f00 	cmp.w	fp, #0
9001bc3c:	f340 811b 	ble.w	9001be76 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001bc40:	ee30 0a04 	vadd.f32	s0, s0, s8
9001bc44:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001bc46:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001bc4a:	f1bb 0b01 	subs.w	fp, fp, #1
9001bc4e:	eeb0 6a62 	vmov.f32	s12, s5
9001bc52:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001bc56:	ee31 1a05 	vadd.f32	s2, s2, s10
9001bc5a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bc5e:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001bc62:	eeb0 6a43 	vmov.f32	s12, s6
9001bc66:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bc6a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001bc6e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001bc72:	ee61 7a27 	vmul.f32	s15, s2, s15
9001bc76:	ee77 2a62 	vsub.f32	s5, s14, s5
9001bc7a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001bc7e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001bc82:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001bc86:	ee12 2a90 	vmov	r2, s5
9001bc8a:	eef0 2a47 	vmov.f32	s5, s14
9001bc8e:	fb92 f3f3 	sdiv	r3, r2, r3
9001bc92:	ee13 2a10 	vmov	r2, s6
9001bc96:	9311      	str	r3, [sp, #68]	@ 0x44
9001bc98:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001bc9a:	eeb0 3a67 	vmov.f32	s6, s15
9001bc9e:	fb92 f3f3 	sdiv	r3, r2, r3
9001bca2:	9a03      	ldr	r2, [sp, #12]
9001bca4:	9312      	str	r3, [sp, #72]	@ 0x48
9001bca6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001bca8:	bf08      	it	eq
9001bcaa:	4613      	moveq	r3, r2
9001bcac:	e789      	b.n	9001bbc2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001bcae:	140f      	asrs	r7, r1, #16
9001bcb0:	d426      	bmi.n	9001bd00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001bcb2:	f8de 5008 	ldr.w	r5, [lr, #8]
9001bcb6:	42bd      	cmp	r5, r7
9001bcb8:	dd22      	ble.n	9001bd00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001bcba:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001bcbe:	d41f      	bmi.n	9001bd00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001bcc0:	f8de 000c 	ldr.w	r0, [lr, #12]
9001bcc4:	4560      	cmp	r0, ip
9001bcc6:	dd1b      	ble.n	9001bd00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001bcc8:	9800      	ldr	r0, [sp, #0]
9001bcca:	b22d      	sxth	r5, r5
9001bccc:	fb0c 0505 	mla	r5, ip, r5, r0
9001bcd0:	5de8      	ldrb	r0, [r5, r7]
9001bcd2:	9d01      	ldr	r5, [sp, #4]
9001bcd4:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
9001bcd8:	0e07      	lsrs	r7, r0, #24
9001bcda:	2fff      	cmp	r7, #255	@ 0xff
9001bcdc:	d116      	bne.n	9001bd0c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001bcde:	f06f 0501 	mvn.w	r5, #1
9001bce2:	fb05 f706 	mul.w	r7, r5, r6
9001bce6:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
9001bcea:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001bcee:	0945      	lsrs	r5, r0, #5
9001bcf0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001bcf4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001bcf8:	ea4c 0505 	orr.w	r5, ip, r5
9001bcfc:	4305      	orrs	r5, r0
9001bcfe:	53e5      	strh	r5, [r4, r7]
9001bd00:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001bd02:	3e01      	subs	r6, #1
9001bd04:	4401      	add	r1, r0
9001bd06:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001bd08:	4402      	add	r2, r0
9001bd0a:	e78e      	b.n	9001bc2a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001bd0c:	b2fd      	uxtb	r5, r7
9001bd0e:	2f00      	cmp	r7, #0
9001bd10:	d0f6      	beq.n	9001bd00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001bd12:	f06f 0701 	mvn.w	r7, #1
9001bd16:	fa1f f985 	uxth.w	r9, r5
9001bd1a:	43ed      	mvns	r5, r5
9001bd1c:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001bd20:	4377      	muls	r7, r6
9001bd22:	fb1a fa09 	smulbb	sl, sl, r9
9001bd26:	b2ed      	uxtb	r5, r5
9001bd28:	f834 8007 	ldrh.w	r8, [r4, r7]
9001bd2c:	9702      	str	r7, [sp, #8]
9001bd2e:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001bd32:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001bd36:	fb17 f709 	smulbb	r7, r7, r9
9001bd3a:	b2c0      	uxtb	r0, r0
9001bd3c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001bd40:	fb10 f009 	smulbb	r0, r0, r9
9001bd44:	fb0c 7c05 	mla	ip, ip, r5, r7
9001bd48:	ea4f 07e8 	mov.w	r7, r8, asr #3
9001bd4c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001bd50:	fa1f fc8c 	uxth.w	ip, ip
9001bd54:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001bd58:	fa5f f888 	uxtb.w	r8, r8
9001bd5c:	fb07 a705 	mla	r7, r7, r5, sl
9001bd60:	fb08 0005 	mla	r0, r8, r5, r0
9001bd64:	f10c 0501 	add.w	r5, ip, #1
9001bd68:	b2bf      	uxth	r7, r7
9001bd6a:	b280      	uxth	r0, r0
9001bd6c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001bd70:	f100 0a01 	add.w	sl, r0, #1
9001bd74:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001bd78:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001bd7c:	9802      	ldr	r0, [sp, #8]
9001bd7e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001bd82:	ea4a 0c0c 	orr.w	ip, sl, ip
9001bd86:	f107 0a01 	add.w	sl, r7, #1
9001bd8a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001bd8e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001bd92:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001bd96:	ea4c 0c0a 	orr.w	ip, ip, sl
9001bd9a:	f824 c000 	strh.w	ip, [r4, r0]
9001bd9e:	e7af      	b.n	9001bd00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001bda0:	f04f 0800 	mov.w	r8, #0
9001bda4:	eba3 0008 	sub.w	r0, r3, r8
9001bda8:	2800      	cmp	r0, #0
9001bdaa:	f77f af41 	ble.w	9001bc30 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001bdae:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001bdb2:	1410      	asrs	r0, r2, #16
9001bdb4:	9f00      	ldr	r7, [sp, #0]
9001bdb6:	140d      	asrs	r5, r1, #16
9001bdb8:	fb06 7000 	mla	r0, r6, r0, r7
9001bdbc:	5d40      	ldrb	r0, [r0, r5]
9001bdbe:	9d01      	ldr	r5, [sp, #4]
9001bdc0:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001bdc4:	0e2e      	lsrs	r6, r5, #24
9001bdc6:	2eff      	cmp	r6, #255	@ 0xff
9001bdc8:	d112      	bne.n	9001bdf0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
9001bdca:	482c      	ldr	r0, [pc, #176]	@ (9001be7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
9001bdcc:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001bdd0:	0968      	lsrs	r0, r5, #5
9001bdd2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001bdd6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001bdda:	4330      	orrs	r0, r6
9001bddc:	4328      	orrs	r0, r5
9001bdde:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
9001bde2:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001bde4:	f108 0801 	add.w	r8, r8, #1
9001bde8:	4401      	add	r1, r0
9001bdea:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001bdec:	4402      	add	r2, r0
9001bdee:	e7d9      	b.n	9001bda4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001bdf0:	b2f0      	uxtb	r0, r6
9001bdf2:	2e00      	cmp	r6, #0
9001bdf4:	d0f5      	beq.n	9001bde2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001bdf6:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
9001bdfa:	fa1f f980 	uxth.w	r9, r0
9001bdfe:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001be02:	43c0      	mvns	r0, r0
9001be04:	ea4f 272c 	mov.w	r7, ip, asr #8
9001be08:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001be0c:	fb16 f609 	smulbb	r6, r6, r9
9001be10:	b2c0      	uxtb	r0, r0
9001be12:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001be16:	b2ed      	uxtb	r5, r5
9001be18:	fb1a fa09 	smulbb	sl, sl, r9
9001be1c:	fb07 6700 	mla	r7, r7, r0, r6
9001be20:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001be24:	fb15 f509 	smulbb	r5, r5, r9
9001be28:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001be2c:	b2bf      	uxth	r7, r7
9001be2e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001be32:	fa5f fc8c 	uxtb.w	ip, ip
9001be36:	fb06 a600 	mla	r6, r6, r0, sl
9001be3a:	fb0c 5500 	mla	r5, ip, r0, r5
9001be3e:	1c78      	adds	r0, r7, #1
9001be40:	b2b6      	uxth	r6, r6
9001be42:	b2ad      	uxth	r5, r5
9001be44:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001be48:	f105 0a01 	add.w	sl, r5, #1
9001be4c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001be50:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001be54:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001be58:	ea4a 0707 	orr.w	r7, sl, r7
9001be5c:	f106 0a01 	add.w	sl, r6, #1
9001be60:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001be64:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001be68:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001be6c:	ea47 070a 	orr.w	r7, r7, sl
9001be70:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001be74:	e7b5      	b.n	9001bde2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001be76:	b005      	add	sp, #20
9001be78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001be7c:	fffff800 	.word	0xfffff800

9001be80 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001be80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001be84:	b087      	sub	sp, #28
9001be86:	468b      	mov	fp, r1
9001be88:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001be8c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9001be8e:	9204      	str	r2, [sp, #16]
9001be90:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001be94:	6861      	ldr	r1, [r4, #4]
9001be96:	9205      	str	r2, [sp, #20]
9001be98:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
9001be9c:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
9001bea0:	fb01 2000 	mla	r0, r1, r0, r2
9001bea4:	6822      	ldr	r2, [r4, #0]
9001bea6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001beaa:	f8de 2000 	ldr.w	r2, [lr]
9001beae:	9201      	str	r2, [sp, #4]
9001beb0:	f8de 2004 	ldr.w	r2, [lr, #4]
9001beb4:	9202      	str	r2, [sp, #8]
9001beb6:	f1bb 0f00 	cmp.w	fp, #0
9001beba:	dc03      	bgt.n	9001bec4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
9001bebc:	9a04      	ldr	r2, [sp, #16]
9001bebe:	2a00      	cmp	r2, #0
9001bec0:	f340 8142 	ble.w	9001c148 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001bec4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001bec6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001beca:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001bece:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001bed0:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001bed4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001bed8:	2b00      	cmp	r3, #0
9001beda:	dd0e      	ble.n	9001befa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001bedc:	140c      	asrs	r4, r1, #16
9001bede:	d405      	bmi.n	9001beec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001bee0:	42bc      	cmp	r4, r7
9001bee2:	da03      	bge.n	9001beec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001bee4:	1414      	asrs	r4, r2, #16
9001bee6:	d401      	bmi.n	9001beec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001bee8:	42b4      	cmp	r4, r6
9001beea:	db07      	blt.n	9001befc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001beec:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001beee:	3b01      	subs	r3, #1
9001bef0:	3002      	adds	r0, #2
9001bef2:	4421      	add	r1, r4
9001bef4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001bef6:	4422      	add	r2, r4
9001bef8:	e7ee      	b.n	9001bed8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9001befa:	d019      	beq.n	9001bf30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001befc:	1e5c      	subs	r4, r3, #1
9001befe:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001bf00:	fb05 1504 	mla	r5, r5, r4, r1
9001bf04:	142d      	asrs	r5, r5, #16
9001bf06:	d409      	bmi.n	9001bf1c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001bf08:	42bd      	cmp	r5, r7
9001bf0a:	da07      	bge.n	9001bf1c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001bf0c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001bf0e:	fb05 2404 	mla	r4, r5, r4, r2
9001bf12:	1424      	asrs	r4, r4, #16
9001bf14:	d402      	bmi.n	9001bf1c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001bf16:	42b4      	cmp	r4, r6
9001bf18:	f2c0 80b1 	blt.w	9001c07e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9001bf1c:	f04f 0800 	mov.w	r8, #0
9001bf20:	eb03 0408 	add.w	r4, r3, r8
9001bf24:	2c00      	cmp	r4, #0
9001bf26:	dc3e      	bgt.n	9001bfa6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
9001bf28:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001bf2c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001bf30:	f1bb 0f00 	cmp.w	fp, #0
9001bf34:	f340 8108 	ble.w	9001c148 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001bf38:	ee30 0a04 	vadd.f32	s0, s0, s8
9001bf3c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001bf3e:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001bf42:	f1bb 0b01 	subs.w	fp, fp, #1
9001bf46:	eeb0 6a62 	vmov.f32	s12, s5
9001bf4a:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001bf4e:	ee31 1a05 	vadd.f32	s2, s2, s10
9001bf52:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bf56:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001bf5a:	eeb0 6a43 	vmov.f32	s12, s6
9001bf5e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bf62:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001bf66:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001bf6a:	ee61 7a27 	vmul.f32	s15, s2, s15
9001bf6e:	ee77 2a62 	vsub.f32	s5, s14, s5
9001bf72:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001bf76:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001bf7a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001bf7e:	ee12 2a90 	vmov	r2, s5
9001bf82:	eef0 2a47 	vmov.f32	s5, s14
9001bf86:	fb92 f3f3 	sdiv	r3, r2, r3
9001bf8a:	ee13 2a10 	vmov	r2, s6
9001bf8e:	9313      	str	r3, [sp, #76]	@ 0x4c
9001bf90:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001bf92:	eeb0 3a67 	vmov.f32	s6, s15
9001bf96:	fb92 f3f3 	sdiv	r3, r2, r3
9001bf9a:	9a04      	ldr	r2, [sp, #16]
9001bf9c:	9314      	str	r3, [sp, #80]	@ 0x50
9001bf9e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001bfa0:	bf08      	it	eq
9001bfa2:	4613      	moveq	r3, r2
9001bfa4:	e787      	b.n	9001beb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
9001bfa6:	140e      	asrs	r6, r1, #16
9001bfa8:	d462      	bmi.n	9001c070 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001bfaa:	f8de 5008 	ldr.w	r5, [lr, #8]
9001bfae:	42b5      	cmp	r5, r6
9001bfb0:	dd5e      	ble.n	9001c070 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001bfb2:	1417      	asrs	r7, r2, #16
9001bfb4:	d45c      	bmi.n	9001c070 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001bfb6:	f8de 400c 	ldr.w	r4, [lr, #12]
9001bfba:	42bc      	cmp	r4, r7
9001bfbc:	dd58      	ble.n	9001c070 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001bfbe:	b22d      	sxth	r5, r5
9001bfc0:	9c02      	ldr	r4, [sp, #8]
9001bfc2:	fb07 6505 	mla	r5, r7, r5, r6
9001bfc6:	5d66      	ldrb	r6, [r4, r5]
9001bfc8:	2e00      	cmp	r6, #0
9001bfca:	d051      	beq.n	9001c070 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001bfcc:	9c01      	ldr	r4, [sp, #4]
9001bfce:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
9001bfd2:	f06f 0401 	mvn.w	r4, #1
9001bfd6:	fb04 f408 	mul.w	r4, r4, r8
9001bfda:	ea4f 2c29 	mov.w	ip, r9, asr #8
9001bfde:	5b05      	ldrh	r5, [r0, r4]
9001bfe0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001bfe4:	9403      	str	r4, [sp, #12]
9001bfe6:	9c05      	ldr	r4, [sp, #20]
9001bfe8:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001bfec:	4366      	muls	r6, r4
9001bfee:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001bff2:	1c74      	adds	r4, r6, #1
9001bff4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001bff8:	122e      	asrs	r6, r5, #8
9001bffa:	1224      	asrs	r4, r4, #8
9001bffc:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001c000:	00ed      	lsls	r5, r5, #3
9001c002:	b2a7      	uxth	r7, r4
9001c004:	43e4      	mvns	r4, r4
9001c006:	b2ed      	uxtb	r5, r5
9001c008:	b2e4      	uxtb	r4, r4
9001c00a:	fb16 f604 	smulbb	r6, r6, r4
9001c00e:	fb15 f504 	smulbb	r5, r5, r4
9001c012:	fb0c 6c07 	mla	ip, ip, r7, r6
9001c016:	ea4f 06e9 	mov.w	r6, r9, asr #3
9001c01a:	fb1a fa04 	smulbb	sl, sl, r4
9001c01e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001c022:	fa1f fc8c 	uxth.w	ip, ip
9001c026:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001c02a:	fa5f f989 	uxtb.w	r9, r9
9001c02e:	fb06 a607 	mla	r6, r6, r7, sl
9001c032:	f10c 0401 	add.w	r4, ip, #1
9001c036:	fb09 5507 	mla	r5, r9, r7, r5
9001c03a:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001c03e:	9c03      	ldr	r4, [sp, #12]
9001c040:	b2ad      	uxth	r5, r5
9001c042:	b2b6      	uxth	r6, r6
9001c044:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001c048:	f105 0a01 	add.w	sl, r5, #1
9001c04c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c050:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c054:	ea4a 0c0c 	orr.w	ip, sl, ip
9001c058:	f106 0a01 	add.w	sl, r6, #1
9001c05c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001c060:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c064:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001c068:	ea4c 0c0a 	orr.w	ip, ip, sl
9001c06c:	f820 c004 	strh.w	ip, [r0, r4]
9001c070:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001c072:	f108 38ff 	add.w	r8, r8, #4294967295
9001c076:	4421      	add	r1, r4
9001c078:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001c07a:	4422      	add	r2, r4
9001c07c:	e750      	b.n	9001bf20 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001c07e:	f04f 0900 	mov.w	r9, #0
9001c082:	eba3 0409 	sub.w	r4, r3, r9
9001c086:	2c00      	cmp	r4, #0
9001c088:	f77f af4e 	ble.w	9001bf28 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001c08c:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001c090:	140d      	asrs	r5, r1, #16
9001c092:	1414      	asrs	r4, r2, #16
9001c094:	fb06 5404 	mla	r4, r6, r4, r5
9001c098:	9d02      	ldr	r5, [sp, #8]
9001c09a:	5d2e      	ldrb	r6, [r5, r4]
9001c09c:	2e00      	cmp	r6, #0
9001c09e:	d04c      	beq.n	9001c13a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
9001c0a0:	9d01      	ldr	r5, [sp, #4]
9001c0a2:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
9001c0a6:	9c05      	ldr	r4, [sp, #20]
9001c0a8:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001c0ac:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001c0b0:	4366      	muls	r6, r4
9001c0b2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001c0b6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001c0ba:	1c74      	adds	r4, r6, #1
9001c0bc:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001c0c0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001c0c4:	122e      	asrs	r6, r5, #8
9001c0c6:	1224      	asrs	r4, r4, #8
9001c0c8:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001c0cc:	00ed      	lsls	r5, r5, #3
9001c0ce:	b2a7      	uxth	r7, r4
9001c0d0:	43e4      	mvns	r4, r4
9001c0d2:	b2ed      	uxtb	r5, r5
9001c0d4:	b2e4      	uxtb	r4, r4
9001c0d6:	fb16 f604 	smulbb	r6, r6, r4
9001c0da:	fb15 f504 	smulbb	r5, r5, r4
9001c0de:	fb0c 6c07 	mla	ip, ip, r7, r6
9001c0e2:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001c0e6:	fb1a fa04 	smulbb	sl, sl, r4
9001c0ea:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001c0ee:	fa1f fc8c 	uxth.w	ip, ip
9001c0f2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001c0f6:	fa5f f888 	uxtb.w	r8, r8
9001c0fa:	fb06 a607 	mla	r6, r6, r7, sl
9001c0fe:	f10c 0401 	add.w	r4, ip, #1
9001c102:	fb08 5507 	mla	r5, r8, r7, r5
9001c106:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001c10a:	b2ad      	uxth	r5, r5
9001c10c:	b2b6      	uxth	r6, r6
9001c10e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001c112:	f105 0a01 	add.w	sl, r5, #1
9001c116:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c11a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c11e:	ea4a 0c0c 	orr.w	ip, sl, ip
9001c122:	f106 0a01 	add.w	sl, r6, #1
9001c126:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001c12a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c12e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001c132:	ea4c 0c0a 	orr.w	ip, ip, sl
9001c136:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001c13a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001c13c:	f109 0901 	add.w	r9, r9, #1
9001c140:	4421      	add	r1, r4
9001c142:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001c144:	4422      	add	r2, r4
9001c146:	e79c      	b.n	9001c082 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
9001c148:	b007      	add	sp, #28
9001c14a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001c14e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c14e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c152:	b085      	sub	sp, #20
9001c154:	468b      	mov	fp, r1
9001c156:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001c15a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001c15c:	9203      	str	r2, [sp, #12]
9001c15e:	6861      	ldr	r1, [r4, #4]
9001c160:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
9001c164:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
9001c168:	fb01 2000 	mla	r0, r1, r0, r2
9001c16c:	6822      	ldr	r2, [r4, #0]
9001c16e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001c172:	f8d8 2000 	ldr.w	r2, [r8]
9001c176:	9200      	str	r2, [sp, #0]
9001c178:	f8d8 2004 	ldr.w	r2, [r8, #4]
9001c17c:	9201      	str	r2, [sp, #4]
9001c17e:	f1bb 0f00 	cmp.w	fp, #0
9001c182:	dc03      	bgt.n	9001c18c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001c184:	9a03      	ldr	r2, [sp, #12]
9001c186:	2a00      	cmp	r2, #0
9001c188:	f340 8146 	ble.w	9001c418 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001c18c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001c18e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001c192:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001c196:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001c198:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001c19c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001c1a0:	2b00      	cmp	r3, #0
9001c1a2:	dd0e      	ble.n	9001c1c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001c1a4:	140c      	asrs	r4, r1, #16
9001c1a6:	d405      	bmi.n	9001c1b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001c1a8:	42bc      	cmp	r4, r7
9001c1aa:	da03      	bge.n	9001c1b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001c1ac:	1414      	asrs	r4, r2, #16
9001c1ae:	d401      	bmi.n	9001c1b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001c1b0:	42b4      	cmp	r4, r6
9001c1b2:	db07      	blt.n	9001c1c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001c1b4:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001c1b6:	3b01      	subs	r3, #1
9001c1b8:	3002      	adds	r0, #2
9001c1ba:	4421      	add	r1, r4
9001c1bc:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001c1be:	4422      	add	r2, r4
9001c1c0:	e7ee      	b.n	9001c1a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001c1c2:	d017      	beq.n	9001c1f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001c1c4:	1e5c      	subs	r4, r3, #1
9001c1c6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001c1c8:	fb05 1504 	mla	r5, r5, r4, r1
9001c1cc:	142d      	asrs	r5, r5, #16
9001c1ce:	d409      	bmi.n	9001c1e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001c1d0:	42bd      	cmp	r5, r7
9001c1d2:	da07      	bge.n	9001c1e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001c1d4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001c1d6:	fb05 2404 	mla	r4, r5, r4, r2
9001c1da:	1424      	asrs	r4, r4, #16
9001c1dc:	d402      	bmi.n	9001c1e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001c1de:	42b4      	cmp	r4, r6
9001c1e0:	f2c0 80b3 	blt.w	9001c34a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
9001c1e4:	2600      	movs	r6, #0
9001c1e6:	199c      	adds	r4, r3, r6
9001c1e8:	2c00      	cmp	r4, #0
9001c1ea:	dc3e      	bgt.n	9001c26a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001c1ec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c1f0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001c1f4:	f1bb 0f00 	cmp.w	fp, #0
9001c1f8:	f340 810e 	ble.w	9001c418 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001c1fc:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c200:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c202:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c206:	f1bb 0b01 	subs.w	fp, fp, #1
9001c20a:	eeb0 6a62 	vmov.f32	s12, s5
9001c20e:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c212:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c216:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c21a:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001c21e:	eeb0 6a43 	vmov.f32	s12, s6
9001c222:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c226:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001c22a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c22e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c232:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c236:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c23a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c23e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c242:	ee12 2a90 	vmov	r2, s5
9001c246:	eef0 2a47 	vmov.f32	s5, s14
9001c24a:	fb92 f3f3 	sdiv	r3, r2, r3
9001c24e:	ee13 2a10 	vmov	r2, s6
9001c252:	9311      	str	r3, [sp, #68]	@ 0x44
9001c254:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c256:	eeb0 3a67 	vmov.f32	s6, s15
9001c25a:	fb92 f3f3 	sdiv	r3, r2, r3
9001c25e:	9a03      	ldr	r2, [sp, #12]
9001c260:	9312      	str	r3, [sp, #72]	@ 0x48
9001c262:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c264:	bf08      	it	eq
9001c266:	4613      	moveq	r3, r2
9001c268:	e789      	b.n	9001c17e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001c26a:	140f      	asrs	r7, r1, #16
9001c26c:	d418      	bmi.n	9001c2a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001c26e:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001c272:	42bd      	cmp	r5, r7
9001c274:	dd14      	ble.n	9001c2a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001c276:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001c27a:	d411      	bmi.n	9001c2a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001c27c:	f8d8 400c 	ldr.w	r4, [r8, #12]
9001c280:	4564      	cmp	r4, ip
9001c282:	dd0d      	ble.n	9001c2a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001c284:	b22d      	sxth	r5, r5
9001c286:	9c01      	ldr	r4, [sp, #4]
9001c288:	fb0c 7505 	mla	r5, ip, r5, r7
9001c28c:	5d64      	ldrb	r4, [r4, r5]
9001c28e:	2cff      	cmp	r4, #255	@ 0xff
9001c290:	d10c      	bne.n	9001c2ac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001c292:	9c00      	ldr	r4, [sp, #0]
9001c294:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
9001c298:	f06f 0401 	mvn.w	r4, #1
9001c29c:	4374      	muls	r4, r6
9001c29e:	5305      	strh	r5, [r0, r4]
9001c2a0:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001c2a2:	3e01      	subs	r6, #1
9001c2a4:	4421      	add	r1, r4
9001c2a6:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001c2a8:	4422      	add	r2, r4
9001c2aa:	e79c      	b.n	9001c1e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001c2ac:	2c00      	cmp	r4, #0
9001c2ae:	d0f7      	beq.n	9001c2a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001c2b0:	9f00      	ldr	r7, [sp, #0]
9001c2b2:	fa1f fc84 	uxth.w	ip, r4
9001c2b6:	43e4      	mvns	r4, r4
9001c2b8:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
9001c2bc:	f06f 0501 	mvn.w	r5, #1
9001c2c0:	b2e4      	uxtb	r4, r4
9001c2c2:	4375      	muls	r5, r6
9001c2c4:	ea4f 2e29 	mov.w	lr, r9, asr #8
9001c2c8:	9502      	str	r5, [sp, #8]
9001c2ca:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001c2ce:	5b45      	ldrh	r5, [r0, r5]
9001c2d0:	122f      	asrs	r7, r5, #8
9001c2d2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001c2d6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001c2da:	00ed      	lsls	r5, r5, #3
9001c2dc:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001c2e0:	fb17 f704 	smulbb	r7, r7, r4
9001c2e4:	b2ed      	uxtb	r5, r5
9001c2e6:	fb1a fa04 	smulbb	sl, sl, r4
9001c2ea:	fb0e 7e0c 	mla	lr, lr, ip, r7
9001c2ee:	ea4f 07e9 	mov.w	r7, r9, asr #3
9001c2f2:	fb15 f504 	smulbb	r5, r5, r4
9001c2f6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001c2fa:	fa1f fe8e 	uxth.w	lr, lr
9001c2fe:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001c302:	fa5f f989 	uxtb.w	r9, r9
9001c306:	fb07 a70c 	mla	r7, r7, ip, sl
9001c30a:	f10e 0401 	add.w	r4, lr, #1
9001c30e:	fb09 550c 	mla	r5, r9, ip, r5
9001c312:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
9001c316:	9c02      	ldr	r4, [sp, #8]
9001c318:	b2ad      	uxth	r5, r5
9001c31a:	b2bf      	uxth	r7, r7
9001c31c:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001c320:	f105 0a01 	add.w	sl, r5, #1
9001c324:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c328:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c32c:	ea4a 0e0e 	orr.w	lr, sl, lr
9001c330:	f107 0a01 	add.w	sl, r7, #1
9001c334:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001c338:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c33c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001c340:	ea4e 0e0a 	orr.w	lr, lr, sl
9001c344:	f820 e004 	strh.w	lr, [r0, r4]
9001c348:	e7aa      	b.n	9001c2a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001c34a:	f04f 0900 	mov.w	r9, #0
9001c34e:	eba3 0409 	sub.w	r4, r3, r9
9001c352:	2c00      	cmp	r4, #0
9001c354:	f77f af4a 	ble.w	9001c1ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001c358:	1414      	asrs	r4, r2, #16
9001c35a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001c35e:	140d      	asrs	r5, r1, #16
9001c360:	fb06 5504 	mla	r5, r6, r4, r5
9001c364:	9c01      	ldr	r4, [sp, #4]
9001c366:	5d64      	ldrb	r4, [r4, r5]
9001c368:	2cff      	cmp	r4, #255	@ 0xff
9001c36a:	d10b      	bne.n	9001c384 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001c36c:	9c00      	ldr	r4, [sp, #0]
9001c36e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
9001c372:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
9001c376:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001c378:	f109 0901 	add.w	r9, r9, #1
9001c37c:	4421      	add	r1, r4
9001c37e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001c380:	4422      	add	r2, r4
9001c382:	e7e4      	b.n	9001c34e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9001c384:	2c00      	cmp	r4, #0
9001c386:	d0f6      	beq.n	9001c376 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001c388:	9e00      	ldr	r6, [sp, #0]
9001c38a:	b2a7      	uxth	r7, r4
9001c38c:	43e4      	mvns	r4, r4
9001c38e:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
9001c392:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001c396:	b2e4      	uxtb	r4, r4
9001c398:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001c39c:	122e      	asrs	r6, r5, #8
9001c39e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001c3a2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001c3a6:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001c3aa:	00ed      	lsls	r5, r5, #3
9001c3ac:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001c3b0:	fb16 f604 	smulbb	r6, r6, r4
9001c3b4:	b2ed      	uxtb	r5, r5
9001c3b6:	fb1a fa04 	smulbb	sl, sl, r4
9001c3ba:	fb0c 6c07 	mla	ip, ip, r7, r6
9001c3be:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001c3c2:	fb15 f504 	smulbb	r5, r5, r4
9001c3c6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001c3ca:	fa1f fc8c 	uxth.w	ip, ip
9001c3ce:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001c3d2:	fa5f fe8e 	uxtb.w	lr, lr
9001c3d6:	fb06 a607 	mla	r6, r6, r7, sl
9001c3da:	f10c 0401 	add.w	r4, ip, #1
9001c3de:	fb0e 5507 	mla	r5, lr, r7, r5
9001c3e2:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001c3e6:	b2ad      	uxth	r5, r5
9001c3e8:	b2b6      	uxth	r6, r6
9001c3ea:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001c3ee:	f105 0a01 	add.w	sl, r5, #1
9001c3f2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c3f6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c3fa:	ea4a 0c0c 	orr.w	ip, sl, ip
9001c3fe:	f106 0a01 	add.w	sl, r6, #1
9001c402:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001c406:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c40a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001c40e:	ea4c 0c0a 	orr.w	ip, ip, sl
9001c412:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001c416:	e7ae      	b.n	9001c376 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001c418:	b005      	add	sp, #20
9001c41a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001c41e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c41e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c422:	b085      	sub	sp, #20
9001c424:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001c426:	9203      	str	r2, [sp, #12]
9001c428:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
9001c42c:	9100      	str	r1, [sp, #0]
9001c42e:	9201      	str	r2, [sp, #4]
9001c430:	6841      	ldr	r1, [r0, #4]
9001c432:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
9001c436:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001c43a:	fb01 2404 	mla	r4, r1, r4, r2
9001c43e:	6802      	ldr	r2, [r0, #0]
9001c440:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c444:	f8de 2000 	ldr.w	r2, [lr]
9001c448:	9202      	str	r2, [sp, #8]
9001c44a:	9a01      	ldr	r2, [sp, #4]
9001c44c:	43d6      	mvns	r6, r2
9001c44e:	b2f6      	uxtb	r6, r6
9001c450:	9a00      	ldr	r2, [sp, #0]
9001c452:	2a00      	cmp	r2, #0
9001c454:	dc03      	bgt.n	9001c45e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001c456:	9a03      	ldr	r2, [sp, #12]
9001c458:	2a00      	cmp	r2, #0
9001c45a:	f340 8124 	ble.w	9001c6a6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001c45e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001c460:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001c464:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001c468:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001c46a:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001c46e:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001c472:	2b00      	cmp	r3, #0
9001c474:	dd0e      	ble.n	9001c494 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001c476:	1408      	asrs	r0, r1, #16
9001c478:	d405      	bmi.n	9001c486 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001c47a:	4560      	cmp	r0, ip
9001c47c:	da03      	bge.n	9001c486 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001c47e:	1410      	asrs	r0, r2, #16
9001c480:	d401      	bmi.n	9001c486 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001c482:	42b8      	cmp	r0, r7
9001c484:	db07      	blt.n	9001c496 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001c486:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001c488:	3b01      	subs	r3, #1
9001c48a:	3402      	adds	r4, #2
9001c48c:	4401      	add	r1, r0
9001c48e:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001c490:	4402      	add	r2, r0
9001c492:	e7ee      	b.n	9001c472 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001c494:	d06e      	beq.n	9001c574 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001c496:	1e58      	subs	r0, r3, #1
9001c498:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001c49a:	fb05 1500 	mla	r5, r5, r0, r1
9001c49e:	142d      	asrs	r5, r5, #16
9001c4a0:	d45c      	bmi.n	9001c55c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001c4a2:	4565      	cmp	r5, ip
9001c4a4:	da5a      	bge.n	9001c55c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001c4a6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001c4a8:	fb05 2000 	mla	r0, r5, r0, r2
9001c4ac:	1400      	asrs	r0, r0, #16
9001c4ae:	d455      	bmi.n	9001c55c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001c4b0:	42b8      	cmp	r0, r7
9001c4b2:	da53      	bge.n	9001c55c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001c4b4:	4699      	mov	r9, r3
9001c4b6:	46a2      	mov	sl, r4
9001c4b8:	f8bd b004 	ldrh.w	fp, [sp, #4]
9001c4bc:	f1b9 0f00 	cmp.w	r9, #0
9001c4c0:	dd54      	ble.n	9001c56c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001c4c2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001c4c6:	140d      	asrs	r5, r1, #16
9001c4c8:	1410      	asrs	r0, r2, #16
9001c4ca:	f109 39ff 	add.w	r9, r9, #4294967295
9001c4ce:	fb07 5000 	mla	r0, r7, r0, r5
9001c4d2:	9d02      	ldr	r5, [sp, #8]
9001c4d4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001c4d8:	f8ba 5000 	ldrh.w	r5, [sl]
9001c4dc:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001c4e0:	122f      	asrs	r7, r5, #8
9001c4e2:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001c4e6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001c4ea:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001c4ee:	00ed      	lsls	r5, r5, #3
9001c4f0:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
9001c4f4:	fb17 f706 	smulbb	r7, r7, r6
9001c4f8:	b2ed      	uxtb	r5, r5
9001c4fa:	fb18 f806 	smulbb	r8, r8, r6
9001c4fe:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001c502:	10c7      	asrs	r7, r0, #3
9001c504:	fb15 f506 	smulbb	r5, r5, r6
9001c508:	00c0      	lsls	r0, r0, #3
9001c50a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001c50e:	fa1f fc8c 	uxth.w	ip, ip
9001c512:	b2c0      	uxtb	r0, r0
9001c514:	fb07 870b 	mla	r7, r7, fp, r8
9001c518:	fb00 500b 	mla	r0, r0, fp, r5
9001c51c:	f10c 0501 	add.w	r5, ip, #1
9001c520:	b2bf      	uxth	r7, r7
9001c522:	b280      	uxth	r0, r0
9001c524:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001c528:	f107 0801 	add.w	r8, r7, #1
9001c52c:	1c45      	adds	r5, r0, #1
9001c52e:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001c532:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001c536:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001c53a:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001c53c:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001c540:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001c544:	4401      	add	r1, r0
9001c546:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001c54a:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001c54c:	ea45 0c0c 	orr.w	ip, r5, ip
9001c550:	4402      	add	r2, r0
9001c552:	ea4c 0c08 	orr.w	ip, ip, r8
9001c556:	f82a cb02 	strh.w	ip, [sl], #2
9001c55a:	e7af      	b.n	9001c4bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001c55c:	f04f 0800 	mov.w	r8, #0
9001c560:	f8bd a004 	ldrh.w	sl, [sp, #4]
9001c564:	eb03 0008 	add.w	r0, r3, r8
9001c568:	2800      	cmp	r0, #0
9001c56a:	dc41      	bgt.n	9001c5f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
9001c56c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c570:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c574:	9b00      	ldr	r3, [sp, #0]
9001c576:	2b00      	cmp	r3, #0
9001c578:	f340 8095 	ble.w	9001c6a6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001c57c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001c580:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c582:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c586:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c58a:	eef0 6a62 	vmov.f32	s13, s5
9001c58e:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001c592:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c596:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001c59a:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
9001c59e:	eef0 6a43 	vmov.f32	s13, s6
9001c5a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001c5a6:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
9001c5aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c5ae:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c5b2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c5b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c5ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c5be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c5c2:	ee12 2a90 	vmov	r2, s5
9001c5c6:	eef0 2a47 	vmov.f32	s5, s14
9001c5ca:	fb92 f3f3 	sdiv	r3, r2, r3
9001c5ce:	ee13 2a10 	vmov	r2, s6
9001c5d2:	9311      	str	r3, [sp, #68]	@ 0x44
9001c5d4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c5d6:	eeb0 3a67 	vmov.f32	s6, s15
9001c5da:	fb92 f3f3 	sdiv	r3, r2, r3
9001c5de:	9312      	str	r3, [sp, #72]	@ 0x48
9001c5e0:	9b00      	ldr	r3, [sp, #0]
9001c5e2:	9a03      	ldr	r2, [sp, #12]
9001c5e4:	3b01      	subs	r3, #1
9001c5e6:	9300      	str	r3, [sp, #0]
9001c5e8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c5ea:	bf08      	it	eq
9001c5ec:	4613      	moveq	r3, r2
9001c5ee:	e72f      	b.n	9001c450 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001c5f0:	140f      	asrs	r7, r1, #16
9001c5f2:	d451      	bmi.n	9001c698 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001c5f4:	f8de 5008 	ldr.w	r5, [lr, #8]
9001c5f8:	42bd      	cmp	r5, r7
9001c5fa:	dd4d      	ble.n	9001c698 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001c5fc:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001c600:	d44a      	bmi.n	9001c698 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001c602:	f8de 000c 	ldr.w	r0, [lr, #12]
9001c606:	4560      	cmp	r0, ip
9001c608:	dd46      	ble.n	9001c698 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001c60a:	b22d      	sxth	r5, r5
9001c60c:	9802      	ldr	r0, [sp, #8]
9001c60e:	fb0c 7505 	mla	r5, ip, r5, r7
9001c612:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
9001c616:	f06f 0501 	mvn.w	r5, #1
9001c61a:	fb05 fb08 	mul.w	fp, r5, r8
9001c61e:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001c622:	f834 500b 	ldrh.w	r5, [r4, fp]
9001c626:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001c62a:	122f      	asrs	r7, r5, #8
9001c62c:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001c630:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001c634:	00ed      	lsls	r5, r5, #3
9001c636:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001c63a:	fb17 f706 	smulbb	r7, r7, r6
9001c63e:	b2ed      	uxtb	r5, r5
9001c640:	fb19 f906 	smulbb	r9, r9, r6
9001c644:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001c648:	10c7      	asrs	r7, r0, #3
9001c64a:	fb15 f506 	smulbb	r5, r5, r6
9001c64e:	00c0      	lsls	r0, r0, #3
9001c650:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001c654:	fa1f fc8c 	uxth.w	ip, ip
9001c658:	b2c0      	uxtb	r0, r0
9001c65a:	fb07 970a 	mla	r7, r7, sl, r9
9001c65e:	fb00 500a 	mla	r0, r0, sl, r5
9001c662:	f10c 0501 	add.w	r5, ip, #1
9001c666:	b2bf      	uxth	r7, r7
9001c668:	b280      	uxth	r0, r0
9001c66a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001c66e:	f107 0901 	add.w	r9, r7, #1
9001c672:	1c45      	adds	r5, r0, #1
9001c674:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001c678:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001c67c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001c680:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001c684:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001c688:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001c68c:	ea45 0c0c 	orr.w	ip, r5, ip
9001c690:	ea4c 0c09 	orr.w	ip, ip, r9
9001c694:	f824 c00b 	strh.w	ip, [r4, fp]
9001c698:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001c69a:	f108 38ff 	add.w	r8, r8, #4294967295
9001c69e:	4401      	add	r1, r0
9001c6a0:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001c6a2:	4402      	add	r2, r0
9001c6a4:	e75e      	b.n	9001c564 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
9001c6a6:	b005      	add	sp, #20
9001c6a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001c6ac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c6ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c6b0:	b085      	sub	sp, #20
9001c6b2:	4693      	mov	fp, r2
9001c6b4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001c6b8:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001c6ba:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001c6bc:	6870      	ldr	r0, [r6, #4]
9001c6be:	9101      	str	r1, [sp, #4]
9001c6c0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001c6c4:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
9001c6c8:	fb00 2404 	mla	r4, r0, r4, r2
9001c6cc:	6832      	ldr	r2, [r6, #0]
9001c6ce:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c6d2:	682a      	ldr	r2, [r5, #0]
9001c6d4:	9202      	str	r2, [sp, #8]
9001c6d6:	9a01      	ldr	r2, [sp, #4]
9001c6d8:	2a00      	cmp	r2, #0
9001c6da:	dc03      	bgt.n	9001c6e4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001c6dc:	f1bb 0f00 	cmp.w	fp, #0
9001c6e0:	f340 809a 	ble.w	9001c818 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001c6e4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001c6e6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001c6ea:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001c6ee:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001c6f0:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001c6f4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001c6f8:	2b00      	cmp	r3, #0
9001c6fa:	dd0c      	ble.n	9001c716 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
9001c6fc:	1406      	asrs	r6, r0, #16
9001c6fe:	d405      	bmi.n	9001c70c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001c700:	454e      	cmp	r6, r9
9001c702:	da03      	bge.n	9001c70c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001c704:	1416      	asrs	r6, r2, #16
9001c706:	d401      	bmi.n	9001c70c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001c708:	4546      	cmp	r6, r8
9001c70a:	db05      	blt.n	9001c718 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001c70c:	4470      	add	r0, lr
9001c70e:	4462      	add	r2, ip
9001c710:	3b01      	subs	r3, #1
9001c712:	3402      	adds	r4, #2
9001c714:	e7f0      	b.n	9001c6f8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001c716:	d00f      	beq.n	9001c738 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001c718:	1e5e      	subs	r6, r3, #1
9001c71a:	fb0e 0706 	mla	r7, lr, r6, r0
9001c71e:	143f      	asrs	r7, r7, #16
9001c720:	d541      	bpl.n	9001c7a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
9001c722:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001c726:	4698      	mov	r8, r3
9001c728:	9603      	str	r6, [sp, #12]
9001c72a:	f1b8 0f00 	cmp.w	r8, #0
9001c72e:	dc56      	bgt.n	9001c7de <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
9001c730:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c734:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c738:	9b01      	ldr	r3, [sp, #4]
9001c73a:	2b00      	cmp	r3, #0
9001c73c:	dd6c      	ble.n	9001c818 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001c73e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c742:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c744:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c748:	eeb0 6a62 	vmov.f32	s12, s5
9001c74c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c750:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c754:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c758:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001c75c:	eeb0 6a43 	vmov.f32	s12, s6
9001c760:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c764:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001c768:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c76c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c770:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c774:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c778:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c77c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c780:	ee12 2a90 	vmov	r2, s5
9001c784:	eef0 2a47 	vmov.f32	s5, s14
9001c788:	fb92 fef3 	sdiv	lr, r2, r3
9001c78c:	ee13 2a10 	vmov	r2, s6
9001c790:	eeb0 3a67 	vmov.f32	s6, s15
9001c794:	fb92 fcf3 	sdiv	ip, r2, r3
9001c798:	9b01      	ldr	r3, [sp, #4]
9001c79a:	3b01      	subs	r3, #1
9001c79c:	9301      	str	r3, [sp, #4]
9001c79e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c7a0:	bf08      	it	eq
9001c7a2:	465b      	moveq	r3, fp
9001c7a4:	e797      	b.n	9001c6d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001c7a6:	454f      	cmp	r7, r9
9001c7a8:	dabb      	bge.n	9001c722 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001c7aa:	fb0c 2606 	mla	r6, ip, r6, r2
9001c7ae:	1436      	asrs	r6, r6, #16
9001c7b0:	d4b7      	bmi.n	9001c722 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001c7b2:	4546      	cmp	r6, r8
9001c7b4:	dab5      	bge.n	9001c722 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001c7b6:	461e      	mov	r6, r3
9001c7b8:	46a0      	mov	r8, r4
9001c7ba:	2e00      	cmp	r6, #0
9001c7bc:	ddb8      	ble.n	9001c730 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001c7be:	1417      	asrs	r7, r2, #16
9001c7c0:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001c7c4:	ea4f 4920 	mov.w	r9, r0, asr #16
9001c7c8:	9902      	ldr	r1, [sp, #8]
9001c7ca:	4470      	add	r0, lr
9001c7cc:	4462      	add	r2, ip
9001c7ce:	fb0a 9707 	mla	r7, sl, r7, r9
9001c7d2:	3e01      	subs	r6, #1
9001c7d4:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001c7d8:	f828 7b02 	strh.w	r7, [r8], #2
9001c7dc:	e7ed      	b.n	9001c7ba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
9001c7de:	ea5f 4920 	movs.w	r9, r0, asr #16
9001c7e2:	d414      	bmi.n	9001c80e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001c7e4:	68ae      	ldr	r6, [r5, #8]
9001c7e6:	454e      	cmp	r6, r9
9001c7e8:	dd11      	ble.n	9001c80e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001c7ea:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001c7ee:	d40e      	bmi.n	9001c80e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001c7f0:	68ef      	ldr	r7, [r5, #12]
9001c7f2:	4557      	cmp	r7, sl
9001c7f4:	dd0b      	ble.n	9001c80e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001c7f6:	b236      	sxth	r6, r6
9001c7f8:	f06f 0101 	mvn.w	r1, #1
9001c7fc:	9f02      	ldr	r7, [sp, #8]
9001c7fe:	fb0a 9606 	mla	r6, sl, r6, r9
9001c802:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001c806:	fb01 f608 	mul.w	r6, r1, r8
9001c80a:	9903      	ldr	r1, [sp, #12]
9001c80c:	538f      	strh	r7, [r1, r6]
9001c80e:	4470      	add	r0, lr
9001c810:	4462      	add	r2, ip
9001c812:	f108 38ff 	add.w	r8, r8, #4294967295
9001c816:	e788      	b.n	9001c72a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001c818:	b005      	add	sp, #20
9001c81a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001c81e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c81e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c822:	b087      	sub	sp, #28
9001c824:	468b      	mov	fp, r1
9001c826:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001c82a:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001c82c:	9203      	str	r2, [sp, #12]
9001c82e:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001c832:	6841      	ldr	r1, [r0, #4]
9001c834:	9204      	str	r2, [sp, #16]
9001c836:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
9001c83a:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
9001c83e:	fb01 2505 	mla	r5, r1, r5, r2
9001c842:	6802      	ldr	r2, [r0, #0]
9001c844:	eb02 0545 	add.w	r5, r2, r5, lsl #1
9001c848:	f8d9 2000 	ldr.w	r2, [r9]
9001c84c:	9201      	str	r2, [sp, #4]
9001c84e:	f1bb 0f00 	cmp.w	fp, #0
9001c852:	dc03      	bgt.n	9001c85c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001c854:	9a03      	ldr	r2, [sp, #12]
9001c856:	2a00      	cmp	r2, #0
9001c858:	f340 8158 	ble.w	9001cb0c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001c85c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001c85e:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001c862:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001c866:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001c868:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001c86c:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001c870:	2b00      	cmp	r3, #0
9001c872:	dd0e      	ble.n	9001c892 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001c874:	1402      	asrs	r2, r0, #16
9001c876:	d405      	bmi.n	9001c884 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001c878:	42ba      	cmp	r2, r7
9001c87a:	da03      	bge.n	9001c884 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001c87c:	140a      	asrs	r2, r1, #16
9001c87e:	d401      	bmi.n	9001c884 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001c880:	42b2      	cmp	r2, r6
9001c882:	db07      	blt.n	9001c894 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001c884:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001c886:	3b01      	subs	r3, #1
9001c888:	3502      	adds	r5, #2
9001c88a:	4410      	add	r0, r2
9001c88c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001c88e:	4411      	add	r1, r2
9001c890:	e7ee      	b.n	9001c870 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001c892:	d017      	beq.n	9001c8c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001c894:	1e5a      	subs	r2, r3, #1
9001c896:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001c898:	fb04 0402 	mla	r4, r4, r2, r0
9001c89c:	1424      	asrs	r4, r4, #16
9001c89e:	d409      	bmi.n	9001c8b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001c8a0:	42bc      	cmp	r4, r7
9001c8a2:	da07      	bge.n	9001c8b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001c8a4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001c8a6:	fb04 1202 	mla	r2, r4, r2, r1
9001c8aa:	1412      	asrs	r2, r2, #16
9001c8ac:	d402      	bmi.n	9001c8b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001c8ae:	42b2      	cmp	r2, r6
9001c8b0:	f2c0 80bf 	blt.w	9001ca32 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001c8b4:	2700      	movs	r7, #0
9001c8b6:	19da      	adds	r2, r3, r7
9001c8b8:	2a00      	cmp	r2, #0
9001c8ba:	dc3e      	bgt.n	9001c93a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001c8bc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c8c0:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001c8c4:	f1bb 0f00 	cmp.w	fp, #0
9001c8c8:	f340 8120 	ble.w	9001cb0c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001c8cc:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c8d0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c8d2:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c8d6:	f1bb 0b01 	subs.w	fp, fp, #1
9001c8da:	eeb0 6a62 	vmov.f32	s12, s5
9001c8de:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c8e2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c8e6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c8ea:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001c8ee:	eeb0 6a43 	vmov.f32	s12, s6
9001c8f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c8f6:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001c8fa:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c8fe:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c902:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c906:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c90a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c90e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c912:	ee12 2a90 	vmov	r2, s5
9001c916:	eef0 2a47 	vmov.f32	s5, s14
9001c91a:	fb92 f3f3 	sdiv	r3, r2, r3
9001c91e:	ee13 2a10 	vmov	r2, s6
9001c922:	9313      	str	r3, [sp, #76]	@ 0x4c
9001c924:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c926:	eeb0 3a67 	vmov.f32	s6, s15
9001c92a:	fb92 f3f3 	sdiv	r3, r2, r3
9001c92e:	9a03      	ldr	r2, [sp, #12]
9001c930:	9314      	str	r3, [sp, #80]	@ 0x50
9001c932:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c934:	bf08      	it	eq
9001c936:	4613      	moveq	r3, r2
9001c938:	e789      	b.n	9001c84e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001c93a:	1406      	asrs	r6, r0, #16
9001c93c:	d42d      	bmi.n	9001c99a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001c93e:	f8d9 4008 	ldr.w	r4, [r9, #8]
9001c942:	42b4      	cmp	r4, r6
9001c944:	dd29      	ble.n	9001c99a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001c946:	ea5f 4c21 	movs.w	ip, r1, asr #16
9001c94a:	d426      	bmi.n	9001c99a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001c94c:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001c950:	4562      	cmp	r2, ip
9001c952:	dd22      	ble.n	9001c99a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001c954:	b224      	sxth	r4, r4
9001c956:	9a01      	ldr	r2, [sp, #4]
9001c958:	fb0c 6404 	mla	r4, ip, r4, r6
9001c95c:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
9001c960:	0e22      	lsrs	r2, r4, #24
9001c962:	d01a      	beq.n	9001c99a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001c964:	9e04      	ldr	r6, [sp, #16]
9001c966:	4372      	muls	r2, r6
9001c968:	1c56      	adds	r6, r2, #1
9001c96a:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001c96e:	0a26      	lsrs	r6, r4, #8
9001c970:	1212      	asrs	r2, r2, #8
9001c972:	9605      	str	r6, [sp, #20]
9001c974:	2aff      	cmp	r2, #255	@ 0xff
9001c976:	d116      	bne.n	9001c9a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
9001c978:	f06f 0201 	mvn.w	r2, #1
9001c97c:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001c980:	fb02 fc07 	mul.w	ip, r2, r7
9001c984:	0962      	lsrs	r2, r4, #5
9001c986:	f026 0607 	bic.w	r6, r6, #7
9001c98a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001c98e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001c992:	4316      	orrs	r6, r2
9001c994:	4326      	orrs	r6, r4
9001c996:	f825 600c 	strh.w	r6, [r5, ip]
9001c99a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001c99c:	3f01      	subs	r7, #1
9001c99e:	4410      	add	r0, r2
9001c9a0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001c9a2:	4411      	add	r1, r2
9001c9a4:	e787      	b.n	9001c8b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001c9a6:	f06f 0601 	mvn.w	r6, #1
9001c9aa:	fa1f fa82 	uxth.w	sl, r2
9001c9ae:	f3c4 4c07 	ubfx	ip, r4, #16, #8
9001c9b2:	43d2      	mvns	r2, r2
9001c9b4:	437e      	muls	r6, r7
9001c9b6:	b2e4      	uxtb	r4, r4
9001c9b8:	fb1c fc0a 	smulbb	ip, ip, sl
9001c9bc:	b2d2      	uxtb	r2, r2
9001c9be:	f835 8006 	ldrh.w	r8, [r5, r6]
9001c9c2:	fb14 f40a 	smulbb	r4, r4, sl
9001c9c6:	9602      	str	r6, [sp, #8]
9001c9c8:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001c9cc:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001c9d0:	fb16 f60a 	smulbb	r6, r6, sl
9001c9d4:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001c9d8:	fb0e ce02 	mla	lr, lr, r2, ip
9001c9dc:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001c9e0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001c9e4:	fa1f fe8e 	uxth.w	lr, lr
9001c9e8:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001c9ec:	fa5f f888 	uxtb.w	r8, r8
9001c9f0:	fb0c 6c02 	mla	ip, ip, r2, r6
9001c9f4:	fb08 4402 	mla	r4, r8, r2, r4
9001c9f8:	f10e 0201 	add.w	r2, lr, #1
9001c9fc:	fa1f fc8c 	uxth.w	ip, ip
9001ca00:	b2a4      	uxth	r4, r4
9001ca02:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001ca06:	9a02      	ldr	r2, [sp, #8]
9001ca08:	1c66      	adds	r6, r4, #1
9001ca0a:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001ca0e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001ca12:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001ca16:	ea46 0e0e 	orr.w	lr, r6, lr
9001ca1a:	f10c 0601 	add.w	r6, ip, #1
9001ca1e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001ca22:	0976      	lsrs	r6, r6, #5
9001ca24:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001ca28:	ea4e 0e06 	orr.w	lr, lr, r6
9001ca2c:	f825 e002 	strh.w	lr, [r5, r2]
9001ca30:	e7b3      	b.n	9001c99a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001ca32:	f04f 0800 	mov.w	r8, #0
9001ca36:	eba3 0208 	sub.w	r2, r3, r8
9001ca3a:	2a00      	cmp	r2, #0
9001ca3c:	f77f af3e 	ble.w	9001c8bc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001ca40:	1404      	asrs	r4, r0, #16
9001ca42:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
9001ca46:	140a      	asrs	r2, r1, #16
9001ca48:	fb06 4202 	mla	r2, r6, r2, r4
9001ca4c:	9c01      	ldr	r4, [sp, #4]
9001ca4e:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
9001ca52:	0e22      	lsrs	r2, r4, #24
9001ca54:	d015      	beq.n	9001ca82 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001ca56:	9e04      	ldr	r6, [sp, #16]
9001ca58:	4372      	muls	r2, r6
9001ca5a:	1c56      	adds	r6, r2, #1
9001ca5c:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001ca60:	0a26      	lsrs	r6, r4, #8
9001ca62:	1212      	asrs	r2, r2, #8
9001ca64:	2aff      	cmp	r2, #255	@ 0xff
9001ca66:	d113      	bne.n	9001ca90 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001ca68:	0962      	lsrs	r2, r4, #5
9001ca6a:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001ca6e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001ca72:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001ca76:	f026 0607 	bic.w	r6, r6, #7
9001ca7a:	4316      	orrs	r6, r2
9001ca7c:	4326      	orrs	r6, r4
9001ca7e:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
9001ca82:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001ca84:	f108 0801 	add.w	r8, r8, #1
9001ca88:	4410      	add	r0, r2
9001ca8a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001ca8c:	4411      	add	r1, r2
9001ca8e:	e7d2      	b.n	9001ca36 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
9001ca90:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
9001ca94:	fa1f fa82 	uxth.w	sl, r2
9001ca98:	f3c4 4707 	ubfx	r7, r4, #16, #8
9001ca9c:	43d2      	mvns	r2, r2
9001ca9e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001caa2:	fb17 f70a 	smulbb	r7, r7, sl
9001caa6:	b2d2      	uxtb	r2, r2
9001caa8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001caac:	b2e4      	uxtb	r4, r4
9001caae:	b2f6      	uxtb	r6, r6
9001cab0:	fb0c 7c02 	mla	ip, ip, r2, r7
9001cab4:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001cab8:	fb14 f40a 	smulbb	r4, r4, sl
9001cabc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001cac0:	fa1f fc8c 	uxth.w	ip, ip
9001cac4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001cac8:	fb16 f60a 	smulbb	r6, r6, sl
9001cacc:	fa5f fe8e 	uxtb.w	lr, lr
9001cad0:	fb0e 4402 	mla	r4, lr, r2, r4
9001cad4:	fb07 6702 	mla	r7, r7, r2, r6
9001cad8:	f10c 0201 	add.w	r2, ip, #1
9001cadc:	b2a4      	uxth	r4, r4
9001cade:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001cae2:	1c66      	adds	r6, r4, #1
9001cae4:	b2bf      	uxth	r7, r7
9001cae6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001caea:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001caee:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001caf2:	ea46 0c0c 	orr.w	ip, r6, ip
9001caf6:	1c7e      	adds	r6, r7, #1
9001caf8:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001cafc:	0976      	lsrs	r6, r6, #5
9001cafe:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001cb02:	ea4c 0c06 	orr.w	ip, ip, r6
9001cb06:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
9001cb0a:	e7ba      	b.n	9001ca82 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001cb0c:	b007      	add	sp, #28
9001cb0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001cb14 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001cb14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cb18:	b085      	sub	sp, #20
9001cb1a:	468b      	mov	fp, r1
9001cb1c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001cb20:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001cb22:	9203      	str	r2, [sp, #12]
9001cb24:	6841      	ldr	r1, [r0, #4]
9001cb26:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
9001cb2a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001cb2e:	fb01 2404 	mla	r4, r1, r4, r2
9001cb32:	6802      	ldr	r2, [r0, #0]
9001cb34:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001cb38:	f8d8 2000 	ldr.w	r2, [r8]
9001cb3c:	9201      	str	r2, [sp, #4]
9001cb3e:	f1bb 0f00 	cmp.w	fp, #0
9001cb42:	dc03      	bgt.n	9001cb4c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001cb44:	9a03      	ldr	r2, [sp, #12]
9001cb46:	2a00      	cmp	r2, #0
9001cb48:	f340 814f 	ble.w	9001cdea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001cb4c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001cb4e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001cb52:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001cb56:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001cb58:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001cb5c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001cb60:	2b00      	cmp	r3, #0
9001cb62:	dd0e      	ble.n	9001cb82 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001cb64:	1408      	asrs	r0, r1, #16
9001cb66:	d405      	bmi.n	9001cb74 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001cb68:	42b8      	cmp	r0, r7
9001cb6a:	da03      	bge.n	9001cb74 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001cb6c:	1410      	asrs	r0, r2, #16
9001cb6e:	d401      	bmi.n	9001cb74 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001cb70:	42b0      	cmp	r0, r6
9001cb72:	db07      	blt.n	9001cb84 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001cb74:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001cb76:	3b01      	subs	r3, #1
9001cb78:	3402      	adds	r4, #2
9001cb7a:	4401      	add	r1, r0
9001cb7c:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001cb7e:	4402      	add	r2, r0
9001cb80:	e7ee      	b.n	9001cb60 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001cb82:	d017      	beq.n	9001cbb4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001cb84:	1e58      	subs	r0, r3, #1
9001cb86:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001cb88:	fb05 1500 	mla	r5, r5, r0, r1
9001cb8c:	142d      	asrs	r5, r5, #16
9001cb8e:	d409      	bmi.n	9001cba4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001cb90:	42bd      	cmp	r5, r7
9001cb92:	da07      	bge.n	9001cba4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001cb94:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001cb96:	fb05 2000 	mla	r0, r5, r0, r2
9001cb9a:	1400      	asrs	r0, r0, #16
9001cb9c:	d402      	bmi.n	9001cba4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001cb9e:	42b0      	cmp	r0, r6
9001cba0:	f2c0 80ba 	blt.w	9001cd18 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001cba4:	2600      	movs	r6, #0
9001cba6:	1998      	adds	r0, r3, r6
9001cba8:	2800      	cmp	r0, #0
9001cbaa:	dc3e      	bgt.n	9001cc2a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001cbac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001cbb0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001cbb4:	f1bb 0f00 	cmp.w	fp, #0
9001cbb8:	f340 8117 	ble.w	9001cdea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001cbbc:	ee30 0a04 	vadd.f32	s0, s0, s8
9001cbc0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001cbc2:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001cbc6:	f1bb 0b01 	subs.w	fp, fp, #1
9001cbca:	eeb0 6a62 	vmov.f32	s12, s5
9001cbce:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001cbd2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001cbd6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001cbda:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001cbde:	eeb0 6a43 	vmov.f32	s12, s6
9001cbe2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001cbe6:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001cbea:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001cbee:	ee61 7a27 	vmul.f32	s15, s2, s15
9001cbf2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001cbf6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001cbfa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001cbfe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001cc02:	ee12 2a90 	vmov	r2, s5
9001cc06:	eef0 2a47 	vmov.f32	s5, s14
9001cc0a:	fb92 f3f3 	sdiv	r3, r2, r3
9001cc0e:	ee13 2a10 	vmov	r2, s6
9001cc12:	9311      	str	r3, [sp, #68]	@ 0x44
9001cc14:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001cc16:	eeb0 3a67 	vmov.f32	s6, s15
9001cc1a:	fb92 f3f3 	sdiv	r3, r2, r3
9001cc1e:	9a03      	ldr	r2, [sp, #12]
9001cc20:	9312      	str	r3, [sp, #72]	@ 0x48
9001cc22:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001cc24:	bf08      	it	eq
9001cc26:	4613      	moveq	r3, r2
9001cc28:	e789      	b.n	9001cb3e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001cc2a:	140f      	asrs	r7, r1, #16
9001cc2c:	d424      	bmi.n	9001cc78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001cc2e:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001cc32:	42bd      	cmp	r5, r7
9001cc34:	dd20      	ble.n	9001cc78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001cc36:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001cc3a:	d41d      	bmi.n	9001cc78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001cc3c:	f8d8 000c 	ldr.w	r0, [r8, #12]
9001cc40:	4560      	cmp	r0, ip
9001cc42:	dd19      	ble.n	9001cc78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001cc44:	b22d      	sxth	r5, r5
9001cc46:	9801      	ldr	r0, [sp, #4]
9001cc48:	fb0c 7505 	mla	r5, ip, r5, r7
9001cc4c:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
9001cc50:	0e07      	lsrs	r7, r0, #24
9001cc52:	2fff      	cmp	r7, #255	@ 0xff
9001cc54:	d116      	bne.n	9001cc84 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001cc56:	f06f 0501 	mvn.w	r5, #1
9001cc5a:	fb05 f706 	mul.w	r7, r5, r6
9001cc5e:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
9001cc62:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001cc66:	0945      	lsrs	r5, r0, #5
9001cc68:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001cc6c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001cc70:	ea4c 0505 	orr.w	r5, ip, r5
9001cc74:	4305      	orrs	r5, r0
9001cc76:	53e5      	strh	r5, [r4, r7]
9001cc78:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001cc7a:	3e01      	subs	r6, #1
9001cc7c:	4401      	add	r1, r0
9001cc7e:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001cc80:	4402      	add	r2, r0
9001cc82:	e790      	b.n	9001cba6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001cc84:	b2fd      	uxtb	r5, r7
9001cc86:	2f00      	cmp	r7, #0
9001cc88:	d0f6      	beq.n	9001cc78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001cc8a:	f06f 0701 	mvn.w	r7, #1
9001cc8e:	fa1f f985 	uxth.w	r9, r5
9001cc92:	43ed      	mvns	r5, r5
9001cc94:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001cc98:	4377      	muls	r7, r6
9001cc9a:	fb1a fa09 	smulbb	sl, sl, r9
9001cc9e:	b2ed      	uxtb	r5, r5
9001cca0:	f834 e007 	ldrh.w	lr, [r4, r7]
9001cca4:	9702      	str	r7, [sp, #8]
9001cca6:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001ccaa:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001ccae:	fb17 f709 	smulbb	r7, r7, r9
9001ccb2:	b2c0      	uxtb	r0, r0
9001ccb4:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001ccb8:	fb10 f009 	smulbb	r0, r0, r9
9001ccbc:	fb0c 7c05 	mla	ip, ip, r5, r7
9001ccc0:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001ccc4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001ccc8:	fa1f fc8c 	uxth.w	ip, ip
9001cccc:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001ccd0:	fa5f fe8e 	uxtb.w	lr, lr
9001ccd4:	fb07 a705 	mla	r7, r7, r5, sl
9001ccd8:	fb0e 0005 	mla	r0, lr, r5, r0
9001ccdc:	f10c 0501 	add.w	r5, ip, #1
9001cce0:	b2bf      	uxth	r7, r7
9001cce2:	b280      	uxth	r0, r0
9001cce4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001cce8:	f100 0a01 	add.w	sl, r0, #1
9001ccec:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001ccf0:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001ccf4:	9802      	ldr	r0, [sp, #8]
9001ccf6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001ccfa:	ea4a 0c0c 	orr.w	ip, sl, ip
9001ccfe:	f107 0a01 	add.w	sl, r7, #1
9001cd02:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001cd06:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001cd0a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001cd0e:	ea4c 0c0a 	orr.w	ip, ip, sl
9001cd12:	f824 c000 	strh.w	ip, [r4, r0]
9001cd16:	e7af      	b.n	9001cc78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001cd18:	f04f 0e00 	mov.w	lr, #0
9001cd1c:	eba3 000e 	sub.w	r0, r3, lr
9001cd20:	2800      	cmp	r0, #0
9001cd22:	f77f af43 	ble.w	9001cbac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001cd26:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001cd2a:	140d      	asrs	r5, r1, #16
9001cd2c:	1410      	asrs	r0, r2, #16
9001cd2e:	fb06 5000 	mla	r0, r6, r0, r5
9001cd32:	9d01      	ldr	r5, [sp, #4]
9001cd34:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001cd38:	0e2e      	lsrs	r6, r5, #24
9001cd3a:	2eff      	cmp	r6, #255	@ 0xff
9001cd3c:	d112      	bne.n	9001cd64 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
9001cd3e:	482c      	ldr	r0, [pc, #176]	@ (9001cdf0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
9001cd40:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001cd44:	0968      	lsrs	r0, r5, #5
9001cd46:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001cd4a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001cd4e:	4330      	orrs	r0, r6
9001cd50:	4328      	orrs	r0, r5
9001cd52:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
9001cd56:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001cd58:	f10e 0e01 	add.w	lr, lr, #1
9001cd5c:	4401      	add	r1, r0
9001cd5e:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001cd60:	4402      	add	r2, r0
9001cd62:	e7db      	b.n	9001cd1c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
9001cd64:	b2f0      	uxtb	r0, r6
9001cd66:	2e00      	cmp	r6, #0
9001cd68:	d0f5      	beq.n	9001cd56 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001cd6a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001cd6e:	fa1f f980 	uxth.w	r9, r0
9001cd72:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001cd76:	43c0      	mvns	r0, r0
9001cd78:	ea4f 272c 	mov.w	r7, ip, asr #8
9001cd7c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001cd80:	fb16 f609 	smulbb	r6, r6, r9
9001cd84:	b2c0      	uxtb	r0, r0
9001cd86:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001cd8a:	b2ed      	uxtb	r5, r5
9001cd8c:	fb1a fa09 	smulbb	sl, sl, r9
9001cd90:	fb07 6700 	mla	r7, r7, r0, r6
9001cd94:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001cd98:	fb15 f509 	smulbb	r5, r5, r9
9001cd9c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001cda0:	b2bf      	uxth	r7, r7
9001cda2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001cda6:	fa5f fc8c 	uxtb.w	ip, ip
9001cdaa:	fb06 a600 	mla	r6, r6, r0, sl
9001cdae:	fb0c 5500 	mla	r5, ip, r0, r5
9001cdb2:	1c78      	adds	r0, r7, #1
9001cdb4:	b2b6      	uxth	r6, r6
9001cdb6:	b2ad      	uxth	r5, r5
9001cdb8:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001cdbc:	f105 0a01 	add.w	sl, r5, #1
9001cdc0:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001cdc4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001cdc8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001cdcc:	ea4a 0707 	orr.w	r7, sl, r7
9001cdd0:	f106 0a01 	add.w	sl, r6, #1
9001cdd4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001cdd8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001cddc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001cde0:	ea47 070a 	orr.w	r7, r7, sl
9001cde4:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
9001cde8:	e7b5      	b.n	9001cd56 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001cdea:	b005      	add	sp, #20
9001cdec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001cdf0:	fffff800 	.word	0xfffff800

9001cdf4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001cdf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cdf8:	b087      	sub	sp, #28
9001cdfa:	468b      	mov	fp, r1
9001cdfc:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001ce00:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001ce02:	9203      	str	r2, [sp, #12]
9001ce04:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001ce08:	6841      	ldr	r1, [r0, #4]
9001ce0a:	9204      	str	r2, [sp, #16]
9001ce0c:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
9001ce10:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001ce14:	fb01 2404 	mla	r4, r1, r4, r2
9001ce18:	6802      	ldr	r2, [r0, #0]
9001ce1a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001ce1e:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001ce22:	3201      	adds	r2, #1
9001ce24:	f022 0201 	bic.w	r2, r2, #1
9001ce28:	9200      	str	r2, [sp, #0]
9001ce2a:	f8d9 2000 	ldr.w	r2, [r9]
9001ce2e:	9201      	str	r2, [sp, #4]
9001ce30:	f1bb 0f00 	cmp.w	fp, #0
9001ce34:	dc03      	bgt.n	9001ce3e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001ce36:	9a03      	ldr	r2, [sp, #12]
9001ce38:	2a00      	cmp	r2, #0
9001ce3a:	f340 816a 	ble.w	9001d112 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001ce3e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001ce40:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001ce44:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001ce48:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001ce4a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001ce4e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001ce52:	2b00      	cmp	r3, #0
9001ce54:	dd0e      	ble.n	9001ce74 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001ce56:	1402      	asrs	r2, r0, #16
9001ce58:	d405      	bmi.n	9001ce66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001ce5a:	42ba      	cmp	r2, r7
9001ce5c:	da03      	bge.n	9001ce66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001ce5e:	140a      	asrs	r2, r1, #16
9001ce60:	d401      	bmi.n	9001ce66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001ce62:	42b2      	cmp	r2, r6
9001ce64:	db07      	blt.n	9001ce76 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9001ce66:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001ce68:	3b01      	subs	r3, #1
9001ce6a:	3402      	adds	r4, #2
9001ce6c:	4410      	add	r0, r2
9001ce6e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001ce70:	4411      	add	r1, r2
9001ce72:	e7ee      	b.n	9001ce52 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001ce74:	d017      	beq.n	9001cea6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001ce76:	1e5a      	subs	r2, r3, #1
9001ce78:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001ce7a:	fb05 0502 	mla	r5, r5, r2, r0
9001ce7e:	142d      	asrs	r5, r5, #16
9001ce80:	d409      	bmi.n	9001ce96 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001ce82:	42bd      	cmp	r5, r7
9001ce84:	da07      	bge.n	9001ce96 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001ce86:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001ce88:	fb05 1202 	mla	r2, r5, r2, r1
9001ce8c:	1412      	asrs	r2, r2, #16
9001ce8e:	d402      	bmi.n	9001ce96 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001ce90:	42b2      	cmp	r2, r6
9001ce92:	f2c0 80c8 	blt.w	9001d026 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
9001ce96:	2700      	movs	r7, #0
9001ce98:	19da      	adds	r2, r3, r7
9001ce9a:	2a00      	cmp	r2, #0
9001ce9c:	dc3e      	bgt.n	9001cf1c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001ce9e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001cea2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001cea6:	f1bb 0f00 	cmp.w	fp, #0
9001ceaa:	f340 8132 	ble.w	9001d112 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001ceae:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ceb2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ceb4:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ceb8:	f1bb 0b01 	subs.w	fp, fp, #1
9001cebc:	eeb0 6a62 	vmov.f32	s12, s5
9001cec0:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001cec4:	ee31 1a05 	vadd.f32	s2, s2, s10
9001cec8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001cecc:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001ced0:	eeb0 6a43 	vmov.f32	s12, s6
9001ced4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ced8:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001cedc:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001cee0:	ee61 7a27 	vmul.f32	s15, s2, s15
9001cee4:	ee77 2a62 	vsub.f32	s5, s14, s5
9001cee8:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001ceec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001cef0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001cef4:	ee12 2a90 	vmov	r2, s5
9001cef8:	eef0 2a47 	vmov.f32	s5, s14
9001cefc:	fb92 f3f3 	sdiv	r3, r2, r3
9001cf00:	ee13 2a10 	vmov	r2, s6
9001cf04:	9313      	str	r3, [sp, #76]	@ 0x4c
9001cf06:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001cf08:	eeb0 3a67 	vmov.f32	s6, s15
9001cf0c:	fb92 f3f3 	sdiv	r3, r2, r3
9001cf10:	9a03      	ldr	r2, [sp, #12]
9001cf12:	9314      	str	r3, [sp, #80]	@ 0x50
9001cf14:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001cf16:	bf08      	it	eq
9001cf18:	4613      	moveq	r3, r2
9001cf1a:	e789      	b.n	9001ce30 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001cf1c:	1405      	asrs	r5, r0, #16
9001cf1e:	d436      	bmi.n	9001cf8e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001cf20:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001cf24:	42aa      	cmp	r2, r5
9001cf26:	dd32      	ble.n	9001cf8e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001cf28:	140e      	asrs	r6, r1, #16
9001cf2a:	d430      	bmi.n	9001cf8e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001cf2c:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001cf30:	42b2      	cmp	r2, r6
9001cf32:	dd2c      	ble.n	9001cf8e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001cf34:	9a00      	ldr	r2, [sp, #0]
9001cf36:	fb06 5502 	mla	r5, r6, r2, r5
9001cf3a:	9e01      	ldr	r6, [sp, #4]
9001cf3c:	086a      	lsrs	r2, r5, #1
9001cf3e:	5cb2      	ldrb	r2, [r6, r2]
9001cf40:	07ee      	lsls	r6, r5, #31
9001cf42:	bf54      	ite	pl
9001cf44:	f002 020f 	andpl.w	r2, r2, #15
9001cf48:	1112      	asrmi	r2, r2, #4
9001cf4a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001cf4e:	b2d2      	uxtb	r2, r2
9001cf50:	b1ea      	cbz	r2, 9001cf8e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001cf52:	9d04      	ldr	r5, [sp, #16]
9001cf54:	436a      	muls	r2, r5
9001cf56:	1c55      	adds	r5, r2, #1
9001cf58:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001cf5c:	4d6e      	ldr	r5, [pc, #440]	@ (9001d118 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001cf5e:	1212      	asrs	r2, r2, #8
9001cf60:	682d      	ldr	r5, [r5, #0]
9001cf62:	2aff      	cmp	r2, #255	@ 0xff
9001cf64:	ea4f 2615 	mov.w	r6, r5, lsr #8
9001cf68:	9605      	str	r6, [sp, #20]
9001cf6a:	d116      	bne.n	9001cf9a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
9001cf6c:	f06f 0201 	mvn.w	r2, #1
9001cf70:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001cf74:	fb02 fc07 	mul.w	ip, r2, r7
9001cf78:	096a      	lsrs	r2, r5, #5
9001cf7a:	f026 0607 	bic.w	r6, r6, #7
9001cf7e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001cf82:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001cf86:	4316      	orrs	r6, r2
9001cf88:	432e      	orrs	r6, r5
9001cf8a:	f824 600c 	strh.w	r6, [r4, ip]
9001cf8e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001cf90:	3f01      	subs	r7, #1
9001cf92:	4410      	add	r0, r2
9001cf94:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001cf96:	4411      	add	r1, r2
9001cf98:	e77e      	b.n	9001ce98 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
9001cf9a:	f06f 0601 	mvn.w	r6, #1
9001cf9e:	fa1f fa82 	uxth.w	sl, r2
9001cfa2:	f3c5 4c07 	ubfx	ip, r5, #16, #8
9001cfa6:	43d2      	mvns	r2, r2
9001cfa8:	437e      	muls	r6, r7
9001cfaa:	b2ed      	uxtb	r5, r5
9001cfac:	fb1c fc0a 	smulbb	ip, ip, sl
9001cfb0:	b2d2      	uxtb	r2, r2
9001cfb2:	f834 8006 	ldrh.w	r8, [r4, r6]
9001cfb6:	fb15 f50a 	smulbb	r5, r5, sl
9001cfba:	9602      	str	r6, [sp, #8]
9001cfbc:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001cfc0:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001cfc4:	fb16 f60a 	smulbb	r6, r6, sl
9001cfc8:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001cfcc:	fb0e ce02 	mla	lr, lr, r2, ip
9001cfd0:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001cfd4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001cfd8:	fa1f fe8e 	uxth.w	lr, lr
9001cfdc:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001cfe0:	fa5f f888 	uxtb.w	r8, r8
9001cfe4:	fb0c 6c02 	mla	ip, ip, r2, r6
9001cfe8:	fb08 5502 	mla	r5, r8, r2, r5
9001cfec:	f10e 0201 	add.w	r2, lr, #1
9001cff0:	fa1f fc8c 	uxth.w	ip, ip
9001cff4:	b2ad      	uxth	r5, r5
9001cff6:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001cffa:	9a02      	ldr	r2, [sp, #8]
9001cffc:	1c6e      	adds	r6, r5, #1
9001cffe:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001d002:	eb06 2615 	add.w	r6, r6, r5, lsr #8
9001d006:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001d00a:	ea46 0e0e 	orr.w	lr, r6, lr
9001d00e:	f10c 0601 	add.w	r6, ip, #1
9001d012:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001d016:	0976      	lsrs	r6, r6, #5
9001d018:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001d01c:	ea4e 0e06 	orr.w	lr, lr, r6
9001d020:	f824 e002 	strh.w	lr, [r4, r2]
9001d024:	e7b3      	b.n	9001cf8e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001d026:	f04f 0800 	mov.w	r8, #0
9001d02a:	eba3 0208 	sub.w	r2, r3, r8
9001d02e:	2a00      	cmp	r2, #0
9001d030:	f77f af35 	ble.w	9001ce9e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001d034:	1402      	asrs	r2, r0, #16
9001d036:	9e00      	ldr	r6, [sp, #0]
9001d038:	140d      	asrs	r5, r1, #16
9001d03a:	fb06 2505 	mla	r5, r6, r5, r2
9001d03e:	9e01      	ldr	r6, [sp, #4]
9001d040:	086a      	lsrs	r2, r5, #1
9001d042:	07ed      	lsls	r5, r5, #31
9001d044:	5cb2      	ldrb	r2, [r6, r2]
9001d046:	bf54      	ite	pl
9001d048:	f002 020f 	andpl.w	r2, r2, #15
9001d04c:	1112      	asrmi	r2, r2, #4
9001d04e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001d052:	b2d2      	uxtb	r2, r2
9001d054:	b1c2      	cbz	r2, 9001d088 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001d056:	9d04      	ldr	r5, [sp, #16]
9001d058:	436a      	muls	r2, r5
9001d05a:	1c55      	adds	r5, r2, #1
9001d05c:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001d060:	4d2d      	ldr	r5, [pc, #180]	@ (9001d118 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001d062:	1212      	asrs	r2, r2, #8
9001d064:	682e      	ldr	r6, [r5, #0]
9001d066:	2aff      	cmp	r2, #255	@ 0xff
9001d068:	ea4f 2516 	mov.w	r5, r6, lsr #8
9001d06c:	d113      	bne.n	9001d096 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001d06e:	0972      	lsrs	r2, r6, #5
9001d070:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
9001d074:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001d078:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001d07c:	f025 0507 	bic.w	r5, r5, #7
9001d080:	4315      	orrs	r5, r2
9001d082:	4335      	orrs	r5, r6
9001d084:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
9001d088:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001d08a:	f108 0801 	add.w	r8, r8, #1
9001d08e:	4410      	add	r0, r2
9001d090:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001d092:	4411      	add	r1, r2
9001d094:	e7c9      	b.n	9001d02a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001d096:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001d09a:	fa1f fa82 	uxth.w	sl, r2
9001d09e:	f3c6 4707 	ubfx	r7, r6, #16, #8
9001d0a2:	43d2      	mvns	r2, r2
9001d0a4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001d0a8:	fb17 f70a 	smulbb	r7, r7, sl
9001d0ac:	b2d2      	uxtb	r2, r2
9001d0ae:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001d0b2:	b2f6      	uxtb	r6, r6
9001d0b4:	b2ed      	uxtb	r5, r5
9001d0b6:	fb0c 7c02 	mla	ip, ip, r2, r7
9001d0ba:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001d0be:	fb16 f60a 	smulbb	r6, r6, sl
9001d0c2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001d0c6:	fa1f fc8c 	uxth.w	ip, ip
9001d0ca:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001d0ce:	fb15 f50a 	smulbb	r5, r5, sl
9001d0d2:	fa5f fe8e 	uxtb.w	lr, lr
9001d0d6:	fb0e 6602 	mla	r6, lr, r2, r6
9001d0da:	fb07 5702 	mla	r7, r7, r2, r5
9001d0de:	f10c 0201 	add.w	r2, ip, #1
9001d0e2:	b2b6      	uxth	r6, r6
9001d0e4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001d0e8:	1c75      	adds	r5, r6, #1
9001d0ea:	b2bf      	uxth	r7, r7
9001d0ec:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001d0f0:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001d0f4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001d0f8:	ea45 0c0c 	orr.w	ip, r5, ip
9001d0fc:	1c7d      	adds	r5, r7, #1
9001d0fe:	eb05 2517 	add.w	r5, r5, r7, lsr #8
9001d102:	096d      	lsrs	r5, r5, #5
9001d104:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001d108:	ea4c 0c05 	orr.w	ip, ip, r5
9001d10c:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
9001d110:	e7ba      	b.n	9001d088 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001d112:	b007      	add	sp, #28
9001d114:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d118:	24021874 	.word	0x24021874

9001d11c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d11c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d120:	b087      	sub	sp, #28
9001d122:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001d126:	f8df 8308 	ldr.w	r8, [pc, #776]	@ 9001d430 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
9001d12a:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001d12c:	9101      	str	r1, [sp, #4]
9001d12e:	9205      	str	r2, [sp, #20]
9001d130:	6841      	ldr	r1, [r0, #4]
9001d132:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
9001d136:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001d13a:	fb01 2404 	mla	r4, r1, r4, r2
9001d13e:	6802      	ldr	r2, [r0, #0]
9001d140:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001d144:	f8db 2008 	ldr.w	r2, [fp, #8]
9001d148:	3201      	adds	r2, #1
9001d14a:	f022 0201 	bic.w	r2, r2, #1
9001d14e:	9202      	str	r2, [sp, #8]
9001d150:	f8db 2000 	ldr.w	r2, [fp]
9001d154:	9203      	str	r2, [sp, #12]
9001d156:	9a01      	ldr	r2, [sp, #4]
9001d158:	2a00      	cmp	r2, #0
9001d15a:	dc03      	bgt.n	9001d164 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001d15c:	9a05      	ldr	r2, [sp, #20]
9001d15e:	2a00      	cmp	r2, #0
9001d160:	f340 8162 	ble.w	9001d428 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001d164:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001d166:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
9001d16a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001d16e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001d170:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
9001d174:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001d178:	2b00      	cmp	r3, #0
9001d17a:	dd0e      	ble.n	9001d19a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001d17c:	1402      	asrs	r2, r0, #16
9001d17e:	d405      	bmi.n	9001d18c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001d180:	42ba      	cmp	r2, r7
9001d182:	da03      	bge.n	9001d18c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001d184:	140a      	asrs	r2, r1, #16
9001d186:	d401      	bmi.n	9001d18c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001d188:	42b2      	cmp	r2, r6
9001d18a:	db07      	blt.n	9001d19c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001d18c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001d18e:	3b01      	subs	r3, #1
9001d190:	3402      	adds	r4, #2
9001d192:	4410      	add	r0, r2
9001d194:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001d196:	4411      	add	r1, r2
9001d198:	e7ee      	b.n	9001d178 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001d19a:	d017      	beq.n	9001d1cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001d19c:	1e5a      	subs	r2, r3, #1
9001d19e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001d1a0:	fb05 0502 	mla	r5, r5, r2, r0
9001d1a4:	142d      	asrs	r5, r5, #16
9001d1a6:	d409      	bmi.n	9001d1bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001d1a8:	42bd      	cmp	r5, r7
9001d1aa:	da07      	bge.n	9001d1bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001d1ac:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001d1ae:	fb05 1202 	mla	r2, r5, r2, r1
9001d1b2:	1412      	asrs	r2, r2, #16
9001d1b4:	d402      	bmi.n	9001d1bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001d1b6:	42b2      	cmp	r2, r6
9001d1b8:	f2c0 80c3 	blt.w	9001d342 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
9001d1bc:	2500      	movs	r5, #0
9001d1be:	195a      	adds	r2, r3, r5
9001d1c0:	2a00      	cmp	r2, #0
9001d1c2:	dc3f      	bgt.n	9001d244 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001d1c4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d1c8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d1cc:	9b01      	ldr	r3, [sp, #4]
9001d1ce:	2b00      	cmp	r3, #0
9001d1d0:	f340 812a 	ble.w	9001d428 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001d1d4:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d1d8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d1da:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d1de:	eeb0 6a62 	vmov.f32	s12, s5
9001d1e2:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d1e6:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d1ea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d1ee:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001d1f2:	eeb0 6a43 	vmov.f32	s12, s6
9001d1f6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d1fa:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001d1fe:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d202:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d206:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d20a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d20e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d212:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d216:	ee12 2a90 	vmov	r2, s5
9001d21a:	eef0 2a47 	vmov.f32	s5, s14
9001d21e:	fb92 f3f3 	sdiv	r3, r2, r3
9001d222:	ee13 2a10 	vmov	r2, s6
9001d226:	9313      	str	r3, [sp, #76]	@ 0x4c
9001d228:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d22a:	eeb0 3a67 	vmov.f32	s6, s15
9001d22e:	fb92 f3f3 	sdiv	r3, r2, r3
9001d232:	9314      	str	r3, [sp, #80]	@ 0x50
9001d234:	9b01      	ldr	r3, [sp, #4]
9001d236:	9a05      	ldr	r2, [sp, #20]
9001d238:	3b01      	subs	r3, #1
9001d23a:	9301      	str	r3, [sp, #4]
9001d23c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d23e:	bf08      	it	eq
9001d240:	4613      	moveq	r3, r2
9001d242:	e788      	b.n	9001d156 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001d244:	1406      	asrs	r6, r0, #16
9001d246:	d42c      	bmi.n	9001d2a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001d248:	f8db 2008 	ldr.w	r2, [fp, #8]
9001d24c:	42b2      	cmp	r2, r6
9001d24e:	dd28      	ble.n	9001d2a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001d250:	140f      	asrs	r7, r1, #16
9001d252:	d426      	bmi.n	9001d2a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001d254:	f8db 200c 	ldr.w	r2, [fp, #12]
9001d258:	42ba      	cmp	r2, r7
9001d25a:	dd22      	ble.n	9001d2a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001d25c:	9a02      	ldr	r2, [sp, #8]
9001d25e:	fb07 6602 	mla	r6, r7, r2, r6
9001d262:	9f03      	ldr	r7, [sp, #12]
9001d264:	0872      	lsrs	r2, r6, #1
9001d266:	07f6      	lsls	r6, r6, #31
9001d268:	5cba      	ldrb	r2, [r7, r2]
9001d26a:	bf54      	ite	pl
9001d26c:	f002 020f 	andpl.w	r2, r2, #15
9001d270:	1112      	asrmi	r2, r2, #4
9001d272:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001d276:	b2d2      	uxtb	r2, r2
9001d278:	2aff      	cmp	r2, #255	@ 0xff
9001d27a:	d118      	bne.n	9001d2ae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
9001d27c:	f06f 0601 	mvn.w	r6, #1
9001d280:	f8d8 2000 	ldr.w	r2, [r8]
9001d284:	fb06 f705 	mul.w	r7, r6, r5
9001d288:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
9001d28c:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
9001d290:	0956      	lsrs	r6, r2, #5
9001d292:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001d296:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001d29a:	ea4c 0606 	orr.w	r6, ip, r6
9001d29e:	4316      	orrs	r6, r2
9001d2a0:	53e6      	strh	r6, [r4, r7]
9001d2a2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001d2a4:	3d01      	subs	r5, #1
9001d2a6:	4410      	add	r0, r2
9001d2a8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001d2aa:	4411      	add	r1, r2
9001d2ac:	e787      	b.n	9001d1be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001d2ae:	2a00      	cmp	r2, #0
9001d2b0:	d0f7      	beq.n	9001d2a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001d2b2:	f06f 0601 	mvn.w	r6, #1
9001d2b6:	f8d8 c000 	ldr.w	ip, [r8]
9001d2ba:	fa1f f982 	uxth.w	r9, r2
9001d2be:	43d2      	mvns	r2, r2
9001d2c0:	436e      	muls	r6, r5
9001d2c2:	f3cc 2a07 	ubfx	sl, ip, #8, #8
9001d2c6:	b2d2      	uxtb	r2, r2
9001d2c8:	f834 e006 	ldrh.w	lr, [r4, r6]
9001d2cc:	fb1a fa09 	smulbb	sl, sl, r9
9001d2d0:	9604      	str	r6, [sp, #16]
9001d2d2:	f3cc 4607 	ubfx	r6, ip, #16, #8
9001d2d6:	ea4f 272e 	mov.w	r7, lr, asr #8
9001d2da:	fb16 f609 	smulbb	r6, r6, r9
9001d2de:	fa5f fc8c 	uxtb.w	ip, ip
9001d2e2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001d2e6:	fb1c fc09 	smulbb	ip, ip, r9
9001d2ea:	fb07 6702 	mla	r7, r7, r2, r6
9001d2ee:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001d2f2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001d2f6:	b2bf      	uxth	r7, r7
9001d2f8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001d2fc:	fa5f fe8e 	uxtb.w	lr, lr
9001d300:	fb06 a602 	mla	r6, r6, r2, sl
9001d304:	fb0e cc02 	mla	ip, lr, r2, ip
9001d308:	1c7a      	adds	r2, r7, #1
9001d30a:	b2b6      	uxth	r6, r6
9001d30c:	fa1f fc8c 	uxth.w	ip, ip
9001d310:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001d314:	9a04      	ldr	r2, [sp, #16]
9001d316:	f10c 0a01 	add.w	sl, ip, #1
9001d31a:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001d31e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
9001d322:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001d326:	ea4a 0707 	orr.w	r7, sl, r7
9001d32a:	f106 0a01 	add.w	sl, r6, #1
9001d32e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001d332:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d336:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001d33a:	ea47 070a 	orr.w	r7, r7, sl
9001d33e:	52a7      	strh	r7, [r4, r2]
9001d340:	e7af      	b.n	9001d2a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001d342:	f04f 0e00 	mov.w	lr, #0
9001d346:	eba3 020e 	sub.w	r2, r3, lr
9001d34a:	2a00      	cmp	r2, #0
9001d34c:	f77f af3a 	ble.w	9001d1c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001d350:	1402      	asrs	r2, r0, #16
9001d352:	9e02      	ldr	r6, [sp, #8]
9001d354:	140d      	asrs	r5, r1, #16
9001d356:	fb06 2505 	mla	r5, r6, r5, r2
9001d35a:	9e03      	ldr	r6, [sp, #12]
9001d35c:	086a      	lsrs	r2, r5, #1
9001d35e:	07ed      	lsls	r5, r5, #31
9001d360:	5cb2      	ldrb	r2, [r6, r2]
9001d362:	bf54      	ite	pl
9001d364:	f002 020f 	andpl.w	r2, r2, #15
9001d368:	1112      	asrmi	r2, r2, #4
9001d36a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001d36e:	b2d2      	uxtb	r2, r2
9001d370:	2aff      	cmp	r2, #255	@ 0xff
9001d372:	d115      	bne.n	9001d3a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
9001d374:	f8d8 5000 	ldr.w	r5, [r8]
9001d378:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
9001d37c:	ea02 2615 	and.w	r6, r2, r5, lsr #8
9001d380:	096a      	lsrs	r2, r5, #5
9001d382:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001d386:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001d38a:	4332      	orrs	r2, r6
9001d38c:	432a      	orrs	r2, r5
9001d38e:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
9001d392:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001d394:	f10e 0e01 	add.w	lr, lr, #1
9001d398:	4410      	add	r0, r2
9001d39a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001d39c:	4411      	add	r1, r2
9001d39e:	e7d2      	b.n	9001d346 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001d3a0:	2a00      	cmp	r2, #0
9001d3a2:	d0f6      	beq.n	9001d392 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001d3a4:	f8d8 7000 	ldr.w	r7, [r8]
9001d3a8:	fa1f f982 	uxth.w	r9, r2
9001d3ac:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001d3b0:	43d2      	mvns	r2, r2
9001d3b2:	f3c7 4507 	ubfx	r5, r7, #16, #8
9001d3b6:	f3c7 2a07 	ubfx	sl, r7, #8, #8
9001d3ba:	ea4f 262c 	mov.w	r6, ip, asr #8
9001d3be:	fb15 f509 	smulbb	r5, r5, r9
9001d3c2:	b2d2      	uxtb	r2, r2
9001d3c4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001d3c8:	b2ff      	uxtb	r7, r7
9001d3ca:	fb1a fa09 	smulbb	sl, sl, r9
9001d3ce:	fb06 5602 	mla	r6, r6, r2, r5
9001d3d2:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001d3d6:	fb17 f709 	smulbb	r7, r7, r9
9001d3da:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001d3de:	b2b6      	uxth	r6, r6
9001d3e0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001d3e4:	fa5f fc8c 	uxtb.w	ip, ip
9001d3e8:	fb05 a502 	mla	r5, r5, r2, sl
9001d3ec:	fb0c 7702 	mla	r7, ip, r2, r7
9001d3f0:	1c72      	adds	r2, r6, #1
9001d3f2:	b2ad      	uxth	r5, r5
9001d3f4:	b2bf      	uxth	r7, r7
9001d3f6:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9001d3fa:	f107 0a01 	add.w	sl, r7, #1
9001d3fe:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001d402:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001d406:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001d40a:	ea4a 0606 	orr.w	r6, sl, r6
9001d40e:	f105 0a01 	add.w	sl, r5, #1
9001d412:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001d416:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d41a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001d41e:	ea46 060a 	orr.w	r6, r6, sl
9001d422:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
9001d426:	e7b4      	b.n	9001d392 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001d428:	b007      	add	sp, #28
9001d42a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d42e:	bf00      	nop
9001d430:	24021874 	.word	0x24021874

9001d434 <_ZN8touchgfx8LCD16bppD1Ev>:
9001d434:	4770      	bx	lr

9001d436 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
9001d436:	4770      	bx	lr

9001d438 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
9001d438:	4770      	bx	lr

9001d43a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
9001d43a:	4770      	bx	lr

9001d43c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
9001d43c:	4770      	bx	lr

9001d43e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
9001d43e:	4770      	bx	lr

9001d440 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
9001d440:	4770      	bx	lr

9001d442 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
9001d442:	4770      	bx	lr

9001d444 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
9001d444:	4770      	bx	lr

9001d446 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001d446:	4770      	bx	lr

9001d448 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001d448:	4770      	bx	lr

9001d44a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001d44a:	4770      	bx	lr

9001d44c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001d44c:	4770      	bx	lr

9001d44e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001d44e:	4770      	bx	lr

9001d450 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001d450:	4770      	bx	lr

9001d452 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001d452:	4770      	bx	lr

9001d454 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001d454:	4770      	bx	lr

9001d456 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001d456:	4770      	bx	lr

9001d458 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001d458:	4770      	bx	lr

9001d45a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001d45a:	4770      	bx	lr

9001d45c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
9001d45c:	4770      	bx	lr

9001d45e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001d45e:	4770      	bx	lr

9001d460 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001d460:	4770      	bx	lr

9001d462 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001d462:	4770      	bx	lr

9001d464 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001d464:	4770      	bx	lr

9001d466 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001d466:	4770      	bx	lr

9001d468 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
9001d468:	4770      	bx	lr

9001d46a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
9001d46a:	4770      	bx	lr

9001d46c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
9001d46c:	4770      	bx	lr

9001d46e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001d46e:	4770      	bx	lr

9001d470 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001d470:	4770      	bx	lr

9001d472 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001d472:	4770      	bx	lr

9001d474 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001d474:	4770      	bx	lr

9001d476 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
9001d476:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001d47a:	b088      	sub	sp, #32
9001d47c:	4606      	mov	r6, r0
9001d47e:	4688      	mov	r8, r1
9001d480:	4691      	mov	r9, r2
9001d482:	ac08      	add	r4, sp, #32
9001d484:	f824 3d0c 	strh.w	r3, [r4, #-12]!
9001d488:	4620      	mov	r0, r4
9001d48a:	f7fd fc33 	bl	9001acf4 <_ZNK8touchgfx6Bitmap7getDataEv>
9001d48e:	6833      	ldr	r3, [r6, #0]
9001d490:	4605      	mov	r5, r0
9001d492:	4620      	mov	r0, r4
9001d494:	699f      	ldr	r7, [r3, #24]
9001d496:	f7fd fb3b 	bl	9001ab10 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001d49a:	4682      	mov	sl, r0
9001d49c:	4620      	mov	r0, r4
9001d49e:	f7fd fb6b 	bl	9001ab78 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001d4a2:	9500      	str	r5, [sp, #0]
9001d4a4:	464b      	mov	r3, r9
9001d4a6:	4642      	mov	r2, r8
9001d4a8:	4631      	mov	r1, r6
9001d4aa:	e9cd a001 	strd	sl, r0, [sp, #4]
9001d4ae:	a806      	add	r0, sp, #24
9001d4b0:	47b8      	blx	r7
9001d4b2:	4628      	mov	r0, r5
9001d4b4:	b008      	add	sp, #32
9001d4b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

9001d4bc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
9001d4bc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9001d4c0:	2300      	movs	r3, #0
9001d4c2:	9300      	str	r3, [sp, #0]
9001d4c4:	4b3d      	ldr	r3, [pc, #244]	@ (9001d5bc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
9001d4c6:	781b      	ldrb	r3, [r3, #0]
9001d4c8:	2b00      	cmp	r3, #0
9001d4ca:	d137      	bne.n	9001d53c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
9001d4cc:	4a3c      	ldr	r2, [pc, #240]	@ (9001d5c0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001d4ce:	f9b2 2000 	ldrsh.w	r2, [r2]
9001d4d2:	f8ad 2004 	strh.w	r2, [sp, #4]
9001d4d6:	2b00      	cmp	r3, #0
9001d4d8:	d132      	bne.n	9001d540 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
9001d4da:	4b3a      	ldr	r3, [pc, #232]	@ (9001d5c4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001d4dc:	f9b3 3000 	ldrsh.w	r3, [r3]
9001d4e0:	ac02      	add	r4, sp, #8
9001d4e2:	6808      	ldr	r0, [r1, #0]
9001d4e4:	f8ad 3006 	strh.w	r3, [sp, #6]
9001d4e8:	ab02      	add	r3, sp, #8
9001d4ea:	6849      	ldr	r1, [r1, #4]
9001d4ec:	4d36      	ldr	r5, [pc, #216]	@ (9001d5c8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
9001d4ee:	c303      	stmia	r3!, {r0, r1}
9001d4f0:	4669      	mov	r1, sp
9001d4f2:	4620      	mov	r0, r4
9001d4f4:	f7f9 fc18 	bl	90016d28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d4f8:	4668      	mov	r0, sp
9001d4fa:	f7f9 fbd1 	bl	90016ca0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d4fe:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001d502:	f8bd 2000 	ldrh.w	r2, [sp]
9001d506:	462f      	mov	r7, r5
9001d508:	6828      	ldr	r0, [r5, #0]
9001d50a:	4413      	add	r3, r2
9001d50c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001d510:	f8ad 3008 	strh.w	r3, [sp, #8]
9001d514:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001d518:	4413      	add	r3, r2
9001d51a:	f8ad 300a 	strh.w	r3, [sp, #10]
9001d51e:	6803      	ldr	r3, [r0, #0]
9001d520:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001d522:	4798      	blx	r3
9001d524:	f010 0f01 	tst.w	r0, #1
9001d528:	d00c      	beq.n	9001d544 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
9001d52a:	6828      	ldr	r0, [r5, #0]
9001d52c:	6803      	ldr	r3, [r0, #0]
9001d52e:	e894 0006 	ldmia.w	r4, {r1, r2}
9001d532:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
9001d534:	4798      	blx	r3
9001d536:	b004      	add	sp, #16
9001d538:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001d53c:	4a21      	ldr	r2, [pc, #132]	@ (9001d5c4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001d53e:	e7c6      	b.n	9001d4ce <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
9001d540:	4b1f      	ldr	r3, [pc, #124]	@ (9001d5c0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001d542:	e7cb      	b.n	9001d4dc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
9001d544:	6838      	ldr	r0, [r7, #0]
9001d546:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
9001d54a:	6803      	ldr	r3, [r0, #0]
9001d54c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
9001d550:	ea4f 0848 	mov.w	r8, r8, lsl #1
9001d554:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
9001d556:	4798      	blx	r3
9001d558:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
9001d55c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001d560:	f8bd 6004 	ldrh.w	r6, [sp, #4]
9001d564:	fb16 3602 	smlabb	r6, r6, r2, r3
9001d568:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001d56c:	6838      	ldr	r0, [r7, #0]
9001d56e:	6803      	ldr	r3, [r0, #0]
9001d570:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001d572:	4798      	blx	r3
9001d574:	4a12      	ldr	r2, [pc, #72]	@ (9001d5c0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001d576:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
9001d57a:	8813      	ldrh	r3, [r2, #0]
9001d57c:	4691      	mov	r9, r2
9001d57e:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001d582:	435d      	muls	r5, r3
9001d584:	fb03 1404 	mla	r4, r3, r4, r1
9001d588:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001d58c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001d590:	6838      	ldr	r0, [r7, #0]
9001d592:	42ac      	cmp	r4, r5
9001d594:	6803      	ldr	r3, [r0, #0]
9001d596:	d20e      	bcs.n	9001d5b6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
9001d598:	f8d3 a038 	ldr.w	sl, [r3, #56]	@ 0x38
9001d59c:	4632      	mov	r2, r6
9001d59e:	4643      	mov	r3, r8
9001d5a0:	4621      	mov	r1, r4
9001d5a2:	47d0      	blx	sl
9001d5a4:	f8b9 3000 	ldrh.w	r3, [r9]
9001d5a8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d5ac:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001d5b0:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001d5b4:	e7ec      	b.n	9001d590 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
9001d5b6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001d5b8:	4798      	blx	r3
9001d5ba:	e7bc      	b.n	9001d536 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
9001d5bc:	2402185c 	.word	0x2402185c
9001d5c0:	2402185e 	.word	0x2402185e
9001d5c4:	24021860 	.word	0x24021860
9001d5c8:	24021864 	.word	0x24021864

9001d5cc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
9001d5cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d5d0:	b08b      	sub	sp, #44	@ 0x2c
9001d5d2:	460f      	mov	r7, r1
9001d5d4:	4616      	mov	r6, r2
9001d5d6:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
9001d5da:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
9001d5de:	f1bb 0f00 	cmp.w	fp, #0
9001d5e2:	d04a      	beq.n	9001d67a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001d5e4:	6810      	ldr	r0, [r2, #0]
9001d5e6:	ad06      	add	r5, sp, #24
9001d5e8:	6851      	ldr	r1, [r2, #4]
9001d5ea:	c503      	stmia	r5!, {r0, r1}
9001d5ec:	6818      	ldr	r0, [r3, #0]
9001d5ee:	ad08      	add	r5, sp, #32
9001d5f0:	6859      	ldr	r1, [r3, #4]
9001d5f2:	c503      	stmia	r5!, {r0, r1}
9001d5f4:	a806      	add	r0, sp, #24
9001d5f6:	f7f9 fb53 	bl	90016ca0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d5fa:	4631      	mov	r1, r6
9001d5fc:	a808      	add	r0, sp, #32
9001d5fe:	f7f9 fb93 	bl	90016d28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d602:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9001d606:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
9001d60a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
9001d60e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
9001d612:	fb16 2103 	smlabb	r1, r6, r3, r2
9001d616:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
9001d61a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
9001d61e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
9001d622:	4f5f      	ldr	r7, [pc, #380]	@ (9001d7a0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001d624:	440a      	add	r2, r1
9001d626:	6838      	ldr	r0, [r7, #0]
9001d628:	46b9      	mov	r9, r7
9001d62a:	f8ad 2020 	strh.w	r2, [sp, #32]
9001d62e:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001d632:	4413      	add	r3, r2
9001d634:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
9001d638:	6803      	ldr	r3, [r0, #0]
9001d63a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001d63c:	4798      	blx	r3
9001d63e:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
9001d642:	d11d      	bne.n	9001d680 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
9001d644:	b9fc      	cbnz	r4, 9001d686 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001d646:	f010 0f01 	tst.w	r0, #1
9001d64a:	d01c      	beq.n	9001d686 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001d64c:	f8d9 0000 	ldr.w	r0, [r9]
9001d650:	2700      	movs	r7, #0
9001d652:	b2ad      	uxth	r5, r5
9001d654:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
9001d658:	6801      	ldr	r1, [r0, #0]
9001d65a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9001d65e:	f8cd b00c 	str.w	fp, [sp, #12]
9001d662:	9501      	str	r5, [sp, #4]
9001d664:	e9cd 4704 	strd	r4, r7, [sp, #16]
9001d668:	f8bd 401c 	ldrh.w	r4, [sp, #28]
9001d66c:	9402      	str	r4, [sp, #8]
9001d66e:	fa1f f488 	uxth.w	r4, r8
9001d672:	9400      	str	r4, [sp, #0]
9001d674:	6c8c      	ldr	r4, [r1, #72]	@ 0x48
9001d676:	4631      	mov	r1, r6
9001d678:	47a0      	blx	r4
9001d67a:	b00b      	add	sp, #44	@ 0x2c
9001d67c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d680:	f010 0f04 	tst.w	r0, #4
9001d684:	e7e1      	b.n	9001d64a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
9001d686:	f8d9 0000 	ldr.w	r0, [r9]
9001d68a:	ea4f 0748 	mov.w	r7, r8, lsl #1
9001d68e:	6803      	ldr	r3, [r0, #0]
9001d690:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001d692:	4798      	blx	r3
9001d694:	4b43      	ldr	r3, [pc, #268]	@ (9001d7a4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
9001d696:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
9001d69a:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
9001d69e:	881a      	ldrh	r2, [r3, #0]
9001d6a0:	469a      	mov	sl, r3
9001d6a2:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
9001d6a6:	fb05 f502 	mul.w	r5, r5, r2
9001d6aa:	fb02 1404 	mla	r4, r2, r4, r1
9001d6ae:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001d6b2:	d059      	beq.n	9001d768 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
9001d6b4:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
9001d6b8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001d6bc:	fa1f f28b 	uxth.w	r2, fp
9001d6c0:	469e      	mov	lr, r3
9001d6c2:	fa1f f989 	uxth.w	r9, r9
9001d6c6:	42ac      	cmp	r4, r5
9001d6c8:	d264      	bcs.n	9001d794 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001d6ca:	eb04 0a07 	add.w	sl, r4, r7
9001d6ce:	4554      	cmp	r4, sl
9001d6d0:	d23d      	bcs.n	9001d74e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
9001d6d2:	8821      	ldrh	r1, [r4, #0]
9001d6d4:	f836 3b02 	ldrh.w	r3, [r6], #2
9001d6d8:	1208      	asrs	r0, r1, #8
9001d6da:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001d6de:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9001d6e2:	ea4f 0be1 	mov.w	fp, r1, asr #3
9001d6e6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001d6ea:	00c9      	lsls	r1, r1, #3
9001d6ec:	fb10 f009 	smulbb	r0, r0, r9
9001d6f0:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9001d6f4:	b2c9      	uxtb	r1, r1
9001d6f6:	fb0c 0c02 	mla	ip, ip, r2, r0
9001d6fa:	10d8      	asrs	r0, r3, #3
9001d6fc:	fb1b fb09 	smulbb	fp, fp, r9
9001d700:	00db      	lsls	r3, r3, #3
9001d702:	fa1f fc8c 	uxth.w	ip, ip
9001d706:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9001d70a:	fb11 f109 	smulbb	r1, r1, r9
9001d70e:	b2db      	uxtb	r3, r3
9001d710:	fb00 b002 	mla	r0, r0, r2, fp
9001d714:	f10c 0b01 	add.w	fp, ip, #1
9001d718:	fb03 1302 	mla	r3, r3, r2, r1
9001d71c:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
9001d720:	b29b      	uxth	r3, r3
9001d722:	b280      	uxth	r0, r0
9001d724:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
9001d728:	f103 0c01 	add.w	ip, r3, #1
9001d72c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001d730:	1c43      	adds	r3, r0, #1
9001d732:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001d736:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001d73a:	0940      	lsrs	r0, r0, #5
9001d73c:	ea4c 0c0b 	orr.w	ip, ip, fp
9001d740:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001d744:	ea4c 0c00 	orr.w	ip, ip, r0
9001d748:	f824 cb02 	strh.w	ip, [r4], #2
9001d74c:	e7bf      	b.n	9001d6ce <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
9001d74e:	f8be 3000 	ldrh.w	r3, [lr]
9001d752:	eba3 0308 	sub.w	r3, r3, r8
9001d756:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d75a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001d75e:	eba3 0308 	sub.w	r3, r3, r8
9001d762:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001d766:	e7ae      	b.n	9001d6c6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
9001d768:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001d76c:	f8d9 0000 	ldr.w	r0, [r9]
9001d770:	42ac      	cmp	r4, r5
9001d772:	6803      	ldr	r3, [r0, #0]
9001d774:	d20e      	bcs.n	9001d794 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001d776:	f8d3 8038 	ldr.w	r8, [r3, #56]	@ 0x38
9001d77a:	4632      	mov	r2, r6
9001d77c:	463b      	mov	r3, r7
9001d77e:	4621      	mov	r1, r4
9001d780:	47c0      	blx	r8
9001d782:	f8ba 3000 	ldrh.w	r3, [sl]
9001d786:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d78a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001d78e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001d792:	e7eb      	b.n	9001d76c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
9001d794:	4b02      	ldr	r3, [pc, #8]	@ (9001d7a0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001d796:	6818      	ldr	r0, [r3, #0]
9001d798:	6803      	ldr	r3, [r0, #0]
9001d79a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001d79c:	4798      	blx	r3
9001d79e:	e76c      	b.n	9001d67a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001d7a0:	24021864 	.word	0x24021864
9001d7a4:	2402185e 	.word	0x2402185e

9001d7a8 <_ZN8touchgfx8LCD16bppD0Ev>:
9001d7a8:	b510      	push	{r4, lr}
9001d7aa:	4604      	mov	r4, r0
9001d7ac:	218c      	movs	r1, #140	@ 0x8c
9001d7ae:	f00c fa5d 	bl	90029c6c <_ZdlPvj>
9001d7b2:	4620      	mov	r0, r4
9001d7b4:	bd10      	pop	{r4, pc}

9001d7b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
9001d7b6:	b510      	push	{r4, lr}
9001d7b8:	4604      	mov	r4, r0
9001d7ba:	2104      	movs	r1, #4
9001d7bc:	f00c fa56 	bl	90029c6c <_ZdlPvj>
9001d7c0:	4620      	mov	r0, r4
9001d7c2:	bd10      	pop	{r4, pc}

9001d7c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
9001d7c4:	b510      	push	{r4, lr}
9001d7c6:	4604      	mov	r4, r0
9001d7c8:	2104      	movs	r1, #4
9001d7ca:	f00c fa4f 	bl	90029c6c <_ZdlPvj>
9001d7ce:	4620      	mov	r0, r4
9001d7d0:	bd10      	pop	{r4, pc}

9001d7d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
9001d7d2:	b510      	push	{r4, lr}
9001d7d4:	4604      	mov	r4, r0
9001d7d6:	f640 0144 	movw	r1, #2116	@ 0x844
9001d7da:	f00c fa47 	bl	90029c6c <_ZdlPvj>
9001d7de:	4620      	mov	r0, r4
9001d7e0:	bd10      	pop	{r4, pc}

9001d7e2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
9001d7e2:	b510      	push	{r4, lr}
9001d7e4:	4604      	mov	r4, r0
9001d7e6:	f44f 7182 	mov.w	r1, #260	@ 0x104
9001d7ea:	f00c fa3f 	bl	90029c6c <_ZdlPvj>
9001d7ee:	4620      	mov	r0, r4
9001d7f0:	bd10      	pop	{r4, pc}

9001d7f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001d7f2:	b510      	push	{r4, lr}
9001d7f4:	4604      	mov	r4, r0
9001d7f6:	2104      	movs	r1, #4
9001d7f8:	f00c fa38 	bl	90029c6c <_ZdlPvj>
9001d7fc:	4620      	mov	r0, r4
9001d7fe:	bd10      	pop	{r4, pc}

9001d800 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001d800:	b510      	push	{r4, lr}
9001d802:	4604      	mov	r4, r0
9001d804:	2104      	movs	r1, #4
9001d806:	f00c fa31 	bl	90029c6c <_ZdlPvj>
9001d80a:	4620      	mov	r0, r4
9001d80c:	bd10      	pop	{r4, pc}

9001d80e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001d80e:	b510      	push	{r4, lr}
9001d810:	4604      	mov	r4, r0
9001d812:	2104      	movs	r1, #4
9001d814:	f00c fa2a 	bl	90029c6c <_ZdlPvj>
9001d818:	4620      	mov	r0, r4
9001d81a:	bd10      	pop	{r4, pc}

9001d81c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001d81c:	b510      	push	{r4, lr}
9001d81e:	4604      	mov	r4, r0
9001d820:	2104      	movs	r1, #4
9001d822:	f00c fa23 	bl	90029c6c <_ZdlPvj>
9001d826:	4620      	mov	r0, r4
9001d828:	bd10      	pop	{r4, pc}

9001d82a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001d82a:	b510      	push	{r4, lr}
9001d82c:	4604      	mov	r4, r0
9001d82e:	2104      	movs	r1, #4
9001d830:	f00c fa1c 	bl	90029c6c <_ZdlPvj>
9001d834:	4620      	mov	r0, r4
9001d836:	bd10      	pop	{r4, pc}

9001d838 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
9001d838:	b510      	push	{r4, lr}
9001d83a:	4604      	mov	r4, r0
9001d83c:	2104      	movs	r1, #4
9001d83e:	f00c fa15 	bl	90029c6c <_ZdlPvj>
9001d842:	4620      	mov	r0, r4
9001d844:	bd10      	pop	{r4, pc}

9001d846 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
9001d846:	b510      	push	{r4, lr}
9001d848:	4604      	mov	r4, r0
9001d84a:	2104      	movs	r1, #4
9001d84c:	f00c fa0e 	bl	90029c6c <_ZdlPvj>
9001d850:	4620      	mov	r0, r4
9001d852:	bd10      	pop	{r4, pc}

9001d854 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
9001d854:	b510      	push	{r4, lr}
9001d856:	4604      	mov	r4, r0
9001d858:	2104      	movs	r1, #4
9001d85a:	f00c fa07 	bl	90029c6c <_ZdlPvj>
9001d85e:	4620      	mov	r0, r4
9001d860:	bd10      	pop	{r4, pc}

9001d862 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001d862:	b510      	push	{r4, lr}
9001d864:	4604      	mov	r4, r0
9001d866:	2104      	movs	r1, #4
9001d868:	f00c fa00 	bl	90029c6c <_ZdlPvj>
9001d86c:	4620      	mov	r0, r4
9001d86e:	bd10      	pop	{r4, pc}

9001d870 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001d870:	b510      	push	{r4, lr}
9001d872:	4604      	mov	r4, r0
9001d874:	2104      	movs	r1, #4
9001d876:	f00c f9f9 	bl	90029c6c <_ZdlPvj>
9001d87a:	4620      	mov	r0, r4
9001d87c:	bd10      	pop	{r4, pc}

9001d87e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001d87e:	b510      	push	{r4, lr}
9001d880:	4604      	mov	r4, r0
9001d882:	2104      	movs	r1, #4
9001d884:	f00c f9f2 	bl	90029c6c <_ZdlPvj>
9001d888:	4620      	mov	r0, r4
9001d88a:	bd10      	pop	{r4, pc}

9001d88c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001d88c:	b510      	push	{r4, lr}
9001d88e:	4604      	mov	r4, r0
9001d890:	2104      	movs	r1, #4
9001d892:	f00c f9eb 	bl	90029c6c <_ZdlPvj>
9001d896:	4620      	mov	r0, r4
9001d898:	bd10      	pop	{r4, pc}

9001d89a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001d89a:	b510      	push	{r4, lr}
9001d89c:	4604      	mov	r4, r0
9001d89e:	2104      	movs	r1, #4
9001d8a0:	f00c f9e4 	bl	90029c6c <_ZdlPvj>
9001d8a4:	4620      	mov	r0, r4
9001d8a6:	bd10      	pop	{r4, pc}

9001d8a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001d8a8:	b510      	push	{r4, lr}
9001d8aa:	4604      	mov	r4, r0
9001d8ac:	2104      	movs	r1, #4
9001d8ae:	f00c f9dd 	bl	90029c6c <_ZdlPvj>
9001d8b2:	4620      	mov	r0, r4
9001d8b4:	bd10      	pop	{r4, pc}

9001d8b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001d8b6:	b510      	push	{r4, lr}
9001d8b8:	4604      	mov	r4, r0
9001d8ba:	2104      	movs	r1, #4
9001d8bc:	f00c f9d6 	bl	90029c6c <_ZdlPvj>
9001d8c0:	4620      	mov	r0, r4
9001d8c2:	bd10      	pop	{r4, pc}

9001d8c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001d8c4:	b510      	push	{r4, lr}
9001d8c6:	4604      	mov	r4, r0
9001d8c8:	2104      	movs	r1, #4
9001d8ca:	f00c f9cf 	bl	90029c6c <_ZdlPvj>
9001d8ce:	4620      	mov	r0, r4
9001d8d0:	bd10      	pop	{r4, pc}

9001d8d2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001d8d2:	b510      	push	{r4, lr}
9001d8d4:	4604      	mov	r4, r0
9001d8d6:	2104      	movs	r1, #4
9001d8d8:	f00c f9c8 	bl	90029c6c <_ZdlPvj>
9001d8dc:	4620      	mov	r0, r4
9001d8de:	bd10      	pop	{r4, pc}

9001d8e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001d8e0:	b510      	push	{r4, lr}
9001d8e2:	4604      	mov	r4, r0
9001d8e4:	2104      	movs	r1, #4
9001d8e6:	f00c f9c1 	bl	90029c6c <_ZdlPvj>
9001d8ea:	4620      	mov	r0, r4
9001d8ec:	bd10      	pop	{r4, pc}

9001d8ee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001d8ee:	b510      	push	{r4, lr}
9001d8f0:	4604      	mov	r4, r0
9001d8f2:	2104      	movs	r1, #4
9001d8f4:	f00c f9ba 	bl	90029c6c <_ZdlPvj>
9001d8f8:	4620      	mov	r0, r4
9001d8fa:	bd10      	pop	{r4, pc}

9001d8fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
9001d8fc:	b510      	push	{r4, lr}
9001d8fe:	4604      	mov	r4, r0
9001d900:	2104      	movs	r1, #4
9001d902:	f00c f9b3 	bl	90029c6c <_ZdlPvj>
9001d906:	4620      	mov	r0, r4
9001d908:	bd10      	pop	{r4, pc}

9001d90a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001d90a:	b510      	push	{r4, lr}
9001d90c:	4604      	mov	r4, r0
9001d90e:	2104      	movs	r1, #4
9001d910:	f00c f9ac 	bl	90029c6c <_ZdlPvj>
9001d914:	4620      	mov	r0, r4
9001d916:	bd10      	pop	{r4, pc}

9001d918 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001d918:	b510      	push	{r4, lr}
9001d91a:	4604      	mov	r4, r0
9001d91c:	2104      	movs	r1, #4
9001d91e:	f00c f9a5 	bl	90029c6c <_ZdlPvj>
9001d922:	4620      	mov	r0, r4
9001d924:	bd10      	pop	{r4, pc}

9001d926 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001d926:	b510      	push	{r4, lr}
9001d928:	4604      	mov	r4, r0
9001d92a:	2104      	movs	r1, #4
9001d92c:	f00c f99e 	bl	90029c6c <_ZdlPvj>
9001d930:	4620      	mov	r0, r4
9001d932:	bd10      	pop	{r4, pc}

9001d934 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001d934:	b510      	push	{r4, lr}
9001d936:	4604      	mov	r4, r0
9001d938:	2104      	movs	r1, #4
9001d93a:	f00c f997 	bl	90029c6c <_ZdlPvj>
9001d93e:	4620      	mov	r0, r4
9001d940:	bd10      	pop	{r4, pc}

9001d942 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
9001d942:	b510      	push	{r4, lr}
9001d944:	4604      	mov	r4, r0
9001d946:	2104      	movs	r1, #4
9001d948:	f00c f990 	bl	90029c6c <_ZdlPvj>
9001d94c:	4620      	mov	r0, r4
9001d94e:	bd10      	pop	{r4, pc}

9001d950 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
9001d950:	b510      	push	{r4, lr}
9001d952:	4604      	mov	r4, r0
9001d954:	2104      	movs	r1, #4
9001d956:	f00c f989 	bl	90029c6c <_ZdlPvj>
9001d95a:	4620      	mov	r0, r4
9001d95c:	bd10      	pop	{r4, pc}

9001d95e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
9001d95e:	b510      	push	{r4, lr}
9001d960:	4604      	mov	r4, r0
9001d962:	2104      	movs	r1, #4
9001d964:	f00c f982 	bl	90029c6c <_ZdlPvj>
9001d968:	4620      	mov	r0, r4
9001d96a:	bd10      	pop	{r4, pc}

9001d96c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
9001d96c:	b510      	push	{r4, lr}
9001d96e:	4604      	mov	r4, r0
9001d970:	2104      	movs	r1, #4
9001d972:	f00c f97b 	bl	90029c6c <_ZdlPvj>
9001d976:	4620      	mov	r0, r4
9001d978:	bd10      	pop	{r4, pc}
	...

9001d97c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
9001d97c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d980:	b08f      	sub	sp, #60	@ 0x3c
9001d982:	4616      	mov	r6, r2
9001d984:	4682      	mov	sl, r0
9001d986:	460d      	mov	r5, r1
9001d988:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
9001d98c:	9205      	str	r2, [sp, #20]
9001d98e:	2a00      	cmp	r2, #0
9001d990:	f000 82b7 	beq.w	9001df02 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
9001d994:	6830      	ldr	r0, [r6, #0]
9001d996:	ac0a      	add	r4, sp, #40	@ 0x28
9001d998:	6871      	ldr	r1, [r6, #4]
9001d99a:	c403      	stmia	r4!, {r0, r1}
9001d99c:	6818      	ldr	r0, [r3, #0]
9001d99e:	ac0c      	add	r4, sp, #48	@ 0x30
9001d9a0:	6859      	ldr	r1, [r3, #4]
9001d9a2:	c403      	stmia	r4!, {r0, r1}
9001d9a4:	a80a      	add	r0, sp, #40	@ 0x28
9001d9a6:	f7f9 f97b 	bl	90016ca0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d9aa:	4631      	mov	r1, r6
9001d9ac:	a80c      	add	r0, sp, #48	@ 0x30
9001d9ae:	f7f9 f9bb 	bl	90016d28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d9b2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9001d9b6:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
9001d9ba:	bfdb      	ittet	le
9001d9bc:	b293      	uxthle	r3, r2
9001d9be:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001d9c2:	2301      	movgt	r3, #1
9001d9c4:	fb91 f3f3 	sdivle	r3, r1, r3
9001d9c8:	9300      	str	r3, [sp, #0]
9001d9ca:	f105 0308 	add.w	r3, r5, #8
9001d9ce:	9900      	ldr	r1, [sp, #0]
9001d9d0:	9306      	str	r3, [sp, #24]
9001d9d2:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
9001d9d6:	440b      	add	r3, r1
9001d9d8:	3b01      	subs	r3, #1
9001d9da:	fb93 f3f1 	sdiv	r3, r3, r1
9001d9de:	3b01      	subs	r3, #1
9001d9e0:	9906      	ldr	r1, [sp, #24]
9001d9e2:	b29b      	uxth	r3, r3
9001d9e4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001d9e8:	9900      	ldr	r1, [sp, #0]
9001d9ea:	9307      	str	r3, [sp, #28]
9001d9ec:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9001d9f0:	fb93 f0f1 	sdiv	r0, r3, r1
9001d9f4:	b284      	uxth	r4, r0
9001d9f6:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
9001d9fa:	9402      	str	r4, [sp, #8]
9001d9fc:	9d02      	ldr	r5, [sp, #8]
9001d9fe:	9c00      	ldr	r4, [sp, #0]
9001da00:	fb05 3414 	mls	r4, r5, r4, r3
9001da04:	fb14 f402 	smulbb	r4, r4, r2
9001da08:	440c      	add	r4, r1
9001da0a:	b2a4      	uxth	r4, r4
9001da0c:	2d00      	cmp	r5, #0
9001da0e:	d06c      	beq.n	9001daea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
9001da10:	1e6a      	subs	r2, r5, #1
9001da12:	9806      	ldr	r0, [sp, #24]
9001da14:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
9001da18:	9a07      	ldr	r2, [sp, #28]
9001da1a:	ba36      	rev	r6, r6
9001da1c:	4416      	add	r6, r2
9001da1e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
9001da22:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
9001da26:	4411      	add	r1, r2
9001da28:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
9001da2c:	f8df 932c 	ldr.w	r9, [pc, #812]	@ 9001dd5c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
9001da30:	4413      	add	r3, r2
9001da32:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
9001da36:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001da3a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001da3e:	9301      	str	r3, [sp, #4]
9001da40:	4bc4      	ldr	r3, [pc, #784]	@ (9001dd54 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
9001da42:	6818      	ldr	r0, [r3, #0]
9001da44:	6803      	ldr	r3, [r0, #0]
9001da46:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001da48:	4798      	blx	r3
9001da4a:	4bc3      	ldr	r3, [pc, #780]	@ (9001dd58 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
9001da4c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9001da50:	881b      	ldrh	r3, [r3, #0]
9001da52:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
9001da56:	fb03 2808 	mla	r8, r3, r8, r2
9001da5a:	f44f 7280 	mov.w	r2, #256	@ 0x100
9001da5e:	436b      	muls	r3, r5
9001da60:	2500      	movs	r5, #0
9001da62:	eb00 0848 	add.w	r8, r0, r8, lsl #1
9001da66:	4629      	mov	r1, r5
9001da68:	eb08 0343 	add.w	r3, r8, r3, lsl #1
9001da6c:	9309      	str	r3, [sp, #36]	@ 0x24
9001da6e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9001da72:	fb94 f3f3 	sdiv	r3, r4, r3
9001da76:	9304      	str	r3, [sp, #16]
9001da78:	f10a 0304 	add.w	r3, sl, #4
9001da7c:	4618      	mov	r0, r3
9001da7e:	9308      	str	r3, [sp, #32]
9001da80:	f00c ff06 	bl	9002a890 <memset>
9001da84:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001da86:	4543      	cmp	r3, r8
9001da88:	f240 8236 	bls.w	9001def8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
9001da8c:	2203      	movs	r2, #3
9001da8e:	2107      	movs	r1, #7
9001da90:	200b      	movs	r0, #11
9001da92:	2c00      	cmp	r4, #0
9001da94:	f000 8131 	beq.w	9001dcfa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
9001da98:	7833      	ldrb	r3, [r6, #0]
9001da9a:	b2db      	uxtb	r3, r3
9001da9c:	2bfe      	cmp	r3, #254	@ 0xfe
9001da9e:	d126      	bne.n	9001daee <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
9001daa0:	f896 e001 	ldrb.w	lr, [r6, #1]
9001daa4:	3c01      	subs	r4, #1
9001daa6:	f896 c002 	ldrb.w	ip, [r6, #2]
9001daaa:	1d37      	adds	r7, r6, #4
9001daac:	fa5f fe8e 	uxtb.w	lr, lr
9001dab0:	f896 b003 	ldrb.w	fp, [r6, #3]
9001dab4:	fa5f fc8c 	uxtb.w	ip, ip
9001dab8:	f36e 0507 	bfi	r5, lr, #0, #8
9001dabc:	fa5f fb8b 	uxtb.w	fp, fp
9001dac0:	b2a4      	uxth	r4, r4
9001dac2:	f36c 250f 	bfi	r5, ip, #8, #8
9001dac6:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
9001daca:	fb12 cc0b 	smlabb	ip, r2, fp, ip
9001dace:	f36b 4517 	bfi	r5, fp, #16, #8
9001dad2:	fb11 cc0e 	smlabb	ip, r1, lr, ip
9001dad6:	0e2b      	lsrs	r3, r5, #24
9001dad8:	fb10 c303 	smlabb	r3, r0, r3, ip
9001dadc:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001dae0:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001dae4:	605d      	str	r5, [r3, #4]
9001dae6:	463e      	mov	r6, r7
9001dae8:	e7d3      	b.n	9001da92 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
9001daea:	9e07      	ldr	r6, [sp, #28]
9001daec:	e797      	b.n	9001da1e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
9001daee:	2bff      	cmp	r3, #255	@ 0xff
9001daf0:	d127      	bne.n	9001db42 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
9001daf2:	f896 c001 	ldrb.w	ip, [r6, #1]
9001daf6:	3c01      	subs	r4, #1
9001daf8:	78b3      	ldrb	r3, [r6, #2]
9001dafa:	1d77      	adds	r7, r6, #5
9001dafc:	fa5f fc8c 	uxtb.w	ip, ip
9001db00:	f896 e003 	ldrb.w	lr, [r6, #3]
9001db04:	b2db      	uxtb	r3, r3
9001db06:	f896 b004 	ldrb.w	fp, [r6, #4]
9001db0a:	f36c 0507 	bfi	r5, ip, #0, #8
9001db0e:	fa5f fe8e 	uxtb.w	lr, lr
9001db12:	fa5f fb8b 	uxtb.w	fp, fp
9001db16:	f363 250f 	bfi	r5, r3, #8, #8
9001db1a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9001db1e:	b2a4      	uxth	r4, r4
9001db20:	fb12 330e 	smlabb	r3, r2, lr, r3
9001db24:	f36e 4517 	bfi	r5, lr, #16, #8
9001db28:	fb11 330c 	smlabb	r3, r1, ip, r3
9001db2c:	f36b 651f 	bfi	r5, fp, #24, #8
9001db30:	fb10 3b0b 	smlabb	fp, r0, fp, r3
9001db34:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
9001db38:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
9001db3c:	f8cb 5004 	str.w	r5, [fp, #4]
9001db40:	e7d1      	b.n	9001dae6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001db42:	ea5f 1ca3 	movs.w	ip, r3, asr #6
9001db46:	f106 0701 	add.w	r7, r6, #1
9001db4a:	d107      	bne.n	9001db5c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
9001db4c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001db50:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001db54:	685d      	ldr	r5, [r3, #4]
9001db56:	3c01      	subs	r4, #1
9001db58:	b2a4      	uxth	r4, r4
9001db5a:	e7c4      	b.n	9001dae6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001db5c:	f1bc 0f01 	cmp.w	ip, #1
9001db60:	d12c      	bne.n	9001dbbc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
9001db62:	f003 0e03 	and.w	lr, r3, #3
9001db66:	f003 0c0c 	and.w	ip, r3, #12
9001db6a:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001db6e:	f1ae 0e02 	sub.w	lr, lr, #2
9001db72:	f1ac 0c08 	sub.w	ip, ip, #8
9001db76:	3b02      	subs	r3, #2
9001db78:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
9001db7c:	fa5f fe8e 	uxtb.w	lr, lr
9001db80:	f36e 0507 	bfi	r5, lr, #0, #8
9001db84:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001db88:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
9001db8c:	f36c 250f 	bfi	r5, ip, #8, #8
9001db90:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
9001db94:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001db98:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
9001db9c:	b2db      	uxtb	r3, r3
9001db9e:	fb12 cc03 	smlabb	ip, r2, r3, ip
9001dba2:	f363 4517 	bfi	r5, r3, #16, #8
9001dba6:	fb11 cc0e 	smlabb	ip, r1, lr, ip
9001dbaa:	0e2e      	lsrs	r6, r5, #24
9001dbac:	fb10 c606 	smlabb	r6, r0, r6, ip
9001dbb0:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
9001dbb4:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
9001dbb8:	6075      	str	r5, [r6, #4]
9001dbba:	e7cc      	b.n	9001db56 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
9001dbbc:	f1bc 0f02 	cmp.w	ip, #2
9001dbc0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001dbc4:	d12a      	bne.n	9001dc1c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
9001dbc6:	1cb7      	adds	r7, r6, #2
9001dbc8:	7876      	ldrb	r6, [r6, #1]
9001dbca:	3b20      	subs	r3, #32
9001dbcc:	b2f6      	uxtb	r6, r6
9001dbce:	f006 0c0f 	and.w	ip, r6, #15
9001dbd2:	1136      	asrs	r6, r6, #4
9001dbd4:	f1ac 0c08 	sub.w	ip, ip, #8
9001dbd8:	3e08      	subs	r6, #8
9001dbda:	449c      	add	ip, r3
9001dbdc:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
9001dbe0:	fa5f fc8c 	uxtb.w	ip, ip
9001dbe4:	f36c 0507 	bfi	r5, ip, #0, #8
9001dbe8:	f3c5 2e07 	ubfx	lr, r5, #8, #8
9001dbec:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
9001dbf0:	4433      	add	r3, r6
9001dbf2:	fa5f fe8e 	uxtb.w	lr, lr
9001dbf6:	f36e 250f 	bfi	r5, lr, #8, #8
9001dbfa:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
9001dbfe:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001dc02:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
9001dc06:	b2db      	uxtb	r3, r3
9001dc08:	fb12 ee03 	smlabb	lr, r2, r3, lr
9001dc0c:	f363 4517 	bfi	r5, r3, #16, #8
9001dc10:	fb11 ee0c 	smlabb	lr, r1, ip, lr
9001dc14:	0e2e      	lsrs	r6, r5, #24
9001dc16:	fb10 e606 	smlabb	r6, r0, r6, lr
9001dc1a:	e7c9      	b.n	9001dbb0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
9001dc1c:	1c5e      	adds	r6, r3, #1
9001dc1e:	42a6      	cmp	r6, r4
9001dc20:	dd4e      	ble.n	9001dcc0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
9001dc22:	1b36      	subs	r6, r6, r4
9001dc24:	2e00      	cmp	r6, #0
9001dc26:	dc4e      	bgt.n	9001dcc6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
9001dc28:	f8dd b004 	ldr.w	fp, [sp, #4]
9001dc2c:	2400      	movs	r4, #0
9001dc2e:	f1bb 0f00 	cmp.w	fp, #0
9001dc32:	f340 8122 	ble.w	9001de7a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
9001dc36:	1c7b      	adds	r3, r7, #1
9001dc38:	9303      	str	r3, [sp, #12]
9001dc3a:	783b      	ldrb	r3, [r7, #0]
9001dc3c:	b2db      	uxtb	r3, r3
9001dc3e:	2bfe      	cmp	r3, #254	@ 0xfe
9001dc40:	d160      	bne.n	9001dd04 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
9001dc42:	7879      	ldrb	r1, [r7, #1]
9001dc44:	1d3b      	adds	r3, r7, #4
9001dc46:	78ba      	ldrb	r2, [r7, #2]
9001dc48:	b2c9      	uxtb	r1, r1
9001dc4a:	78f8      	ldrb	r0, [r7, #3]
9001dc4c:	b2d2      	uxtb	r2, r2
9001dc4e:	9303      	str	r3, [sp, #12]
9001dc50:	f361 0507 	bfi	r5, r1, #0, #8
9001dc54:	b2c0      	uxtb	r0, r0
9001dc56:	2303      	movs	r3, #3
9001dc58:	f362 250f 	bfi	r5, r2, #8, #8
9001dc5c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001dc60:	fb13 2200 	smlabb	r2, r3, r0, r2
9001dc64:	f360 4517 	bfi	r5, r0, #16, #8
9001dc68:	2307      	movs	r3, #7
9001dc6a:	0e2e      	lsrs	r6, r5, #24
9001dc6c:	fb13 2101 	smlabb	r1, r3, r1, r2
9001dc70:	230b      	movs	r3, #11
9001dc72:	fb13 1306 	smlabb	r3, r3, r6, r1
9001dc76:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001dc7a:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001dc7e:	605d      	str	r5, [r3, #4]
9001dc80:	2601      	movs	r6, #1
9001dc82:	4637      	mov	r7, r6
9001dc84:	0e2b      	lsrs	r3, r5, #24
9001dc86:	ebab 0b07 	sub.w	fp, fp, r7
9001dc8a:	eba6 0607 	sub.w	r6, r6, r7
9001dc8e:	f040 80d3 	bne.w	9001de38 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
9001dc92:	b18c      	cbz	r4, 9001dcb8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
9001dc94:	4648      	mov	r0, r9
9001dc96:	00a1      	lsls	r1, r4, #2
9001dc98:	f7e4 fe56 	bl	90002948 <_ZN8touchgfx5paint9flushLineEPmi>
9001dc9c:	9b05      	ldr	r3, [sp, #20]
9001dc9e:	4622      	mov	r2, r4
9001dca0:	4649      	mov	r1, r9
9001dca2:	4640      	mov	r0, r8
9001dca4:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001dca8:	f7e4 febc 	bl	90002a24 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001dcac:	4b2b      	ldr	r3, [pc, #172]	@ (9001dd5c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
9001dcae:	4a2c      	ldr	r2, [pc, #176]	@ (9001dd60 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
9001dcb0:	4599      	cmp	r9, r3
9001dcb2:	bf08      	it	eq
9001dcb4:	4613      	moveq	r3, r2
9001dcb6:	4699      	mov	r9, r3
9001dcb8:	eb08 0847 	add.w	r8, r8, r7, lsl #1
9001dcbc:	2400      	movs	r4, #0
9001dcbe:	e0da      	b.n	9001de76 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
9001dcc0:	1ba6      	subs	r6, r4, r6
9001dcc2:	b2b4      	uxth	r4, r6
9001dcc4:	e70f      	b.n	9001dae6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001dcc6:	9b01      	ldr	r3, [sp, #4]
9001dcc8:	9a01      	ldr	r2, [sp, #4]
9001dcca:	42b3      	cmp	r3, r6
9001dccc:	bfa8      	it	ge
9001dcce:	4633      	movge	r3, r6
9001dcd0:	0e2c      	lsrs	r4, r5, #24
9001dcd2:	eba2 0b03 	sub.w	fp, r2, r3
9001dcd6:	eba6 0603 	sub.w	r6, r6, r3
9001dcda:	d00b      	beq.n	9001dcf4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
9001dcdc:	f1a9 0104 	sub.w	r1, r9, #4
9001dce0:	461a      	mov	r2, r3
9001dce2:	2a00      	cmp	r2, #0
9001dce4:	dc02      	bgt.n	9001dcec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
9001dce6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9001dcea:	e7a0      	b.n	9001dc2e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001dcec:	f841 5f04 	str.w	r5, [r1, #4]!
9001dcf0:	3a01      	subs	r2, #1
9001dcf2:	e7f6      	b.n	9001dce2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
9001dcf4:	eb08 0843 	add.w	r8, r8, r3, lsl #1
9001dcf8:	e799      	b.n	9001dc2e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001dcfa:	4637      	mov	r7, r6
9001dcfc:	f8dd b004 	ldr.w	fp, [sp, #4]
9001dd00:	4626      	mov	r6, r4
9001dd02:	e794      	b.n	9001dc2e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001dd04:	2bff      	cmp	r3, #255	@ 0xff
9001dd06:	d11d      	bne.n	9001dd44 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
9001dd08:	7878      	ldrb	r0, [r7, #1]
9001dd0a:	1d7b      	adds	r3, r7, #5
9001dd0c:	78ba      	ldrb	r2, [r7, #2]
9001dd0e:	b2c0      	uxtb	r0, r0
9001dd10:	78fe      	ldrb	r6, [r7, #3]
9001dd12:	b2d2      	uxtb	r2, r2
9001dd14:	9303      	str	r3, [sp, #12]
9001dd16:	f360 0507 	bfi	r5, r0, #0, #8
9001dd1a:	793b      	ldrb	r3, [r7, #4]
9001dd1c:	b2f6      	uxtb	r6, r6
9001dd1e:	b2d9      	uxtb	r1, r3
9001dd20:	f362 250f 	bfi	r5, r2, #8, #8
9001dd24:	2303      	movs	r3, #3
9001dd26:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001dd2a:	f366 4517 	bfi	r5, r6, #16, #8
9001dd2e:	fb13 2206 	smlabb	r2, r3, r6, r2
9001dd32:	2307      	movs	r3, #7
9001dd34:	f361 651f 	bfi	r5, r1, #24, #8
9001dd38:	fb13 2000 	smlabb	r0, r3, r0, r2
9001dd3c:	230b      	movs	r3, #11
9001dd3e:	fb13 0301 	smlabb	r3, r3, r1, r0
9001dd42:	e798      	b.n	9001dc76 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
9001dd44:	119e      	asrs	r6, r3, #6
9001dd46:	d10d      	bne.n	9001dd64 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
9001dd48:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001dd4c:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001dd50:	685d      	ldr	r5, [r3, #4]
9001dd52:	e795      	b.n	9001dc80 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
9001dd54:	24021864 	.word	0x24021864
9001dd58:	2402185e 	.word	0x2402185e
9001dd5c:	24005b80 	.word	0x24005b80
9001dd60:	24005c80 	.word	0x24005c80
9001dd64:	2e01      	cmp	r6, #1
9001dd66:	ea4f 6115 	mov.w	r1, r5, lsr #24
9001dd6a:	d12b      	bne.n	9001ddc4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
9001dd6c:	f003 0003 	and.w	r0, r3, #3
9001dd70:	f003 020c 	and.w	r2, r3, #12
9001dd74:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001dd78:	3802      	subs	r0, #2
9001dd7a:	3a08      	subs	r2, #8
9001dd7c:	1e9f      	subs	r7, r3, #2
9001dd7e:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
9001dd82:	b2c0      	uxtb	r0, r0
9001dd84:	f360 0507 	bfi	r5, r0, #0, #8
9001dd88:	eb02 2215 	add.w	r2, r2, r5, lsr #8
9001dd8c:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
9001dd90:	f362 250f 	bfi	r5, r2, #8, #8
9001dd94:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001dd98:	f3c5 4307 	ubfx	r3, r5, #16, #8
9001dd9c:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
9001dda0:	2703      	movs	r7, #3
9001dda2:	b2db      	uxtb	r3, r3
9001dda4:	fb17 2203 	smlabb	r2, r7, r3, r2
9001dda8:	2707      	movs	r7, #7
9001ddaa:	f363 4517 	bfi	r5, r3, #16, #8
9001ddae:	230b      	movs	r3, #11
9001ddb0:	fb17 2000 	smlabb	r0, r7, r0, r2
9001ddb4:	fb13 0101 	smlabb	r1, r3, r1, r0
9001ddb8:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
9001ddbc:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
9001ddc0:	604d      	str	r5, [r1, #4]
9001ddc2:	e75e      	b.n	9001dc82 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
9001ddc4:	2e02      	cmp	r6, #2
9001ddc6:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001ddca:	d12f      	bne.n	9001de2c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
9001ddcc:	7878      	ldrb	r0, [r7, #1]
9001ddce:	1cba      	adds	r2, r7, #2
9001ddd0:	3b20      	subs	r3, #32
9001ddd2:	b2c0      	uxtb	r0, r0
9001ddd4:	9203      	str	r2, [sp, #12]
9001ddd6:	f000 020f 	and.w	r2, r0, #15
9001ddda:	1100      	asrs	r0, r0, #4
9001dddc:	3a08      	subs	r2, #8
9001ddde:	3808      	subs	r0, #8
9001dde0:	441a      	add	r2, r3
9001dde2:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
9001dde6:	b2d2      	uxtb	r2, r2
9001dde8:	f362 0507 	bfi	r5, r2, #0, #8
9001ddec:	f3c5 2607 	ubfx	r6, r5, #8, #8
9001ddf0:	eb06 0683 	add.w	r6, r6, r3, lsl #2
9001ddf4:	4403      	add	r3, r0
9001ddf6:	b2f6      	uxtb	r6, r6
9001ddf8:	f366 250f 	bfi	r5, r6, #8, #8
9001ddfc:	eb06 0686 	add.w	r6, r6, r6, lsl #2
9001de00:	f3c5 4007 	ubfx	r0, r5, #16, #8
9001de04:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
9001de08:	2003      	movs	r0, #3
9001de0a:	b2db      	uxtb	r3, r3
9001de0c:	fb10 6603 	smlabb	r6, r0, r3, r6
9001de10:	2007      	movs	r0, #7
9001de12:	f363 4517 	bfi	r5, r3, #16, #8
9001de16:	230b      	movs	r3, #11
9001de18:	fb10 6202 	smlabb	r2, r0, r2, r6
9001de1c:	fb13 2101 	smlabb	r1, r3, r1, r2
9001de20:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
9001de24:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
9001de28:	604d      	str	r5, [r1, #4]
9001de2a:	e729      	b.n	9001dc80 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
9001de2c:	1c5e      	adds	r6, r3, #1
9001de2e:	465f      	mov	r7, fp
9001de30:	45b3      	cmp	fp, r6
9001de32:	bfa8      	it	ge
9001de34:	4637      	movge	r7, r6
9001de36:	e725      	b.n	9001dc84 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
9001de38:	193b      	adds	r3, r7, r4
9001de3a:	2b40      	cmp	r3, #64	@ 0x40
9001de3c:	dd13      	ble.n	9001de66 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
9001de3e:	4648      	mov	r0, r9
9001de40:	00a1      	lsls	r1, r4, #2
9001de42:	f7e4 fd81 	bl	90002948 <_ZN8touchgfx5paint9flushLineEPmi>
9001de46:	4649      	mov	r1, r9
9001de48:	9b05      	ldr	r3, [sp, #20]
9001de4a:	4622      	mov	r2, r4
9001de4c:	4640      	mov	r0, r8
9001de4e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001de52:	f7e4 fde7 	bl	90002a24 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001de56:	4b2c      	ldr	r3, [pc, #176]	@ (9001df08 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
9001de58:	2400      	movs	r4, #0
9001de5a:	4599      	cmp	r9, r3
9001de5c:	bf0c      	ite	eq
9001de5e:	f8df 90b4 	ldreq.w	r9, [pc, #180]	@ 9001df14 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
9001de62:	f8df 90a4 	ldrne.w	r9, [pc, #164]	@ 9001df08 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
9001de66:	eb09 0284 	add.w	r2, r9, r4, lsl #2
9001de6a:	463b      	mov	r3, r7
9001de6c:	3b01      	subs	r3, #1
9001de6e:	f842 5b04 	str.w	r5, [r2], #4
9001de72:	d1fb      	bne.n	9001de6c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
9001de74:	443c      	add	r4, r7
9001de76:	9f03      	ldr	r7, [sp, #12]
9001de78:	e6d9      	b.n	9001dc2e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001de7a:	b15c      	cbz	r4, 9001de94 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
9001de7c:	00a1      	lsls	r1, r4, #2
9001de7e:	4648      	mov	r0, r9
9001de80:	f7e4 fd62 	bl	90002948 <_ZN8touchgfx5paint9flushLineEPmi>
9001de84:	4640      	mov	r0, r8
9001de86:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001de8a:	9b05      	ldr	r3, [sp, #20]
9001de8c:	4622      	mov	r2, r4
9001de8e:	4649      	mov	r1, r9
9001de90:	f7e4 fdc8 	bl	90002a24 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001de94:	4b1d      	ldr	r3, [pc, #116]	@ (9001df0c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
9001de96:	9a01      	ldr	r2, [sp, #4]
9001de98:	881b      	ldrh	r3, [r3, #0]
9001de9a:	1a9b      	subs	r3, r3, r2
9001de9c:	eb08 0843 	add.w	r8, r8, r3, lsl #1
9001dea0:	9b04      	ldr	r3, [sp, #16]
9001dea2:	3301      	adds	r3, #1
9001dea4:	9304      	str	r3, [sp, #16]
9001dea6:	9a04      	ldr	r2, [sp, #16]
9001dea8:	9b00      	ldr	r3, [sp, #0]
9001deaa:	4293      	cmp	r3, r2
9001deac:	d11d      	bne.n	9001deea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
9001deae:	9b02      	ldr	r3, [sp, #8]
9001deb0:	2500      	movs	r5, #0
9001deb2:	9a02      	ldr	r2, [sp, #8]
9001deb4:	f103 0b01 	add.w	fp, r3, #1
9001deb8:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
9001debc:	9b06      	ldr	r3, [sp, #24]
9001debe:	4629      	mov	r1, r5
9001dec0:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
9001dec4:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
9001dec8:	f44f 7280 	mov.w	r2, #256	@ 0x100
9001decc:	1ba4      	subs	r4, r4, r6
9001dece:	9b07      	ldr	r3, [sp, #28]
9001ded0:	ba3f      	rev	r7, r7
9001ded2:	9808      	ldr	r0, [sp, #32]
9001ded4:	b2a4      	uxth	r4, r4
9001ded6:	441f      	add	r7, r3
9001ded8:	f00c fcda 	bl	9002a890 <memset>
9001dedc:	f8cd b008 	str.w	fp, [sp, #8]
9001dee0:	9504      	str	r5, [sp, #16]
9001dee2:	f7e4 fd27 	bl	90002934 <_ZN8touchgfx5paint8tearDownEv>
9001dee6:	463e      	mov	r6, r7
9001dee8:	e5cc      	b.n	9001da84 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
9001deea:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001deee:	9b01      	ldr	r3, [sp, #4]
9001def0:	1ae4      	subs	r4, r4, r3
9001def2:	1ba4      	subs	r4, r4, r6
9001def4:	b2a4      	uxth	r4, r4
9001def6:	e7f4      	b.n	9001dee2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
9001def8:	4b05      	ldr	r3, [pc, #20]	@ (9001df10 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
9001defa:	6818      	ldr	r0, [r3, #0]
9001defc:	6803      	ldr	r3, [r0, #0]
9001defe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001df00:	4798      	blx	r3
9001df02:	b00f      	add	sp, #60	@ 0x3c
9001df04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001df08:	24005b80 	.word	0x24005b80
9001df0c:	2402185e 	.word	0x2402185e
9001df10:	24021864 	.word	0x24021864
9001df14:	24005c80 	.word	0x24005c80

9001df18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001df18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001df1c:	b08f      	sub	sp, #60	@ 0x3c
9001df1e:	461c      	mov	r4, r3
9001df20:	9205      	str	r2, [sp, #20]
9001df22:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001df26:	9100      	str	r1, [sp, #0]
9001df28:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001df2a:	9201      	str	r2, [sp, #4]
9001df2c:	2a00      	cmp	r2, #0
9001df2e:	f000 8116 	beq.w	9001e15e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
9001df32:	6820      	ldr	r0, [r4, #0]
9001df34:	aa0a      	add	r2, sp, #40	@ 0x28
9001df36:	6861      	ldr	r1, [r4, #4]
9001df38:	c203      	stmia	r2!, {r0, r1}
9001df3a:	6818      	ldr	r0, [r3, #0]
9001df3c:	aa0c      	add	r2, sp, #48	@ 0x30
9001df3e:	6859      	ldr	r1, [r3, #4]
9001df40:	c203      	stmia	r2!, {r0, r1}
9001df42:	a80a      	add	r0, sp, #40	@ 0x28
9001df44:	f7f8 feac 	bl	90016ca0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001df48:	4621      	mov	r1, r4
9001df4a:	a80c      	add	r0, sp, #48	@ 0x30
9001df4c:	f7f8 feec 	bl	90016d28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001df50:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001df54:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
9001df58:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001df5c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
9001df60:	bfdb      	ittet	le
9001df62:	b2b3      	uxthle	r3, r6
9001df64:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001df68:	2301      	movgt	r3, #1
9001df6a:	fb92 f3f3 	sdivle	r3, r2, r3
9001df6e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001df72:	441d      	add	r5, r3
9001df74:	fb92 f1f3 	sdiv	r1, r2, r3
9001df78:	fa1f fc81 	uxth.w	ip, r1
9001df7c:	3d01      	subs	r5, #1
9001df7e:	fb0c 2413 	mls	r4, ip, r3, r2
9001df82:	4661      	mov	r1, ip
9001df84:	fb14 f406 	smulbb	r4, r4, r6
9001df88:	4404      	add	r4, r0
9001df8a:	fb95 f5f3 	sdiv	r5, r5, r3
9001df8e:	b2a4      	uxth	r4, r4
9001df90:	b131      	cbz	r1, 9001dfa0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
9001df92:	9b05      	ldr	r3, [sp, #20]
9001df94:	9900      	ldr	r1, [sp, #0]
9001df96:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001df9a:	ba1b      	rev	r3, r3
9001df9c:	4419      	add	r1, r3
9001df9e:	9100      	str	r1, [sp, #0]
9001dfa0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001dfa4:	b2ad      	uxth	r5, r5
9001dfa6:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
9001dfaa:	4418      	add	r0, r3
9001dfac:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001dfb0:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001dfb4:	00ad      	lsls	r5, r5, #2
9001dfb6:	441a      	add	r2, r3
9001dfb8:	4b6a      	ldr	r3, [pc, #424]	@ (9001e164 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001dfba:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
9001dfbe:	6818      	ldr	r0, [r3, #0]
9001dfc0:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
9001dfc4:	6803      	ldr	r3, [r0, #0]
9001dfc6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001dfc8:	4798      	blx	r3
9001dfca:	4967      	ldr	r1, [pc, #412]	@ (9001e168 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
9001dfcc:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001dfd0:	2c00      	cmp	r4, #0
9001dfd2:	880b      	ldrh	r3, [r1, #0]
9001dfd4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
9001dfd8:	bf0c      	ite	eq
9001dfda:	46c6      	moveq	lr, r8
9001dfdc:	f04f 0e00 	movne.w	lr, #0
9001dfe0:	9109      	str	r1, [sp, #36]	@ 0x24
9001dfe2:	fb03 c202 	mla	r2, r3, r2, ip
9001dfe6:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001dfea:	4373      	muls	r3, r6
9001dfec:	fa1f fe8e 	uxth.w	lr, lr
9001dff0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001dff4:	9103      	str	r1, [sp, #12]
9001dff6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001dffa:	9306      	str	r3, [sp, #24]
9001dffc:	1d2b      	adds	r3, r5, #4
9001dffe:	9307      	str	r3, [sp, #28]
9001e000:	9b01      	ldr	r3, [sp, #4]
9001e002:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
9001e006:	2300      	movs	r3, #0
9001e008:	b292      	uxth	r2, r2
9001e00a:	9302      	str	r3, [sp, #8]
9001e00c:	9204      	str	r2, [sp, #16]
9001e00e:	9a06      	ldr	r2, [sp, #24]
9001e010:	4282      	cmp	r2, r0
9001e012:	f240 809f 	bls.w	9001e154 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
9001e016:	b963      	cbnz	r3, 9001e032 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001e018:	9b00      	ldr	r3, [sp, #0]
9001e01a:	781a      	ldrb	r2, [r3, #0]
9001e01c:	0993      	lsrs	r3, r2, #6
9001e01e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001e022:	9202      	str	r2, [sp, #8]
9001e024:	1e5a      	subs	r2, r3, #1
9001e026:	2a02      	cmp	r2, #2
9001e028:	d815      	bhi.n	9001e056 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
9001e02a:	9a00      	ldr	r2, [sp, #0]
9001e02c:	b29b      	uxth	r3, r3
9001e02e:	3201      	adds	r2, #1
9001e030:	9200      	str	r2, [sp, #0]
9001e032:	b1b4      	cbz	r4, 9001e062 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
9001e034:	429c      	cmp	r4, r3
9001e036:	bf91      	iteee	ls
9001e038:	1b1c      	subls	r4, r3, r4
9001e03a:	1ae4      	subhi	r4, r4, r3
9001e03c:	4671      	movhi	r1, lr
9001e03e:	f04f 0a00 	movhi.w	sl, #0
9001e042:	bf9b      	ittet	ls
9001e044:	fa1f fa84 	uxthls.w	sl, r4
9001e048:	2400      	movls	r4, #0
9001e04a:	b2a4      	uxthhi	r4, r4
9001e04c:	fa1f f188 	uxthls.w	r1, r8
9001e050:	4653      	mov	r3, sl
9001e052:	468e      	mov	lr, r1
9001e054:	e7db      	b.n	9001e00e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
9001e056:	9a00      	ldr	r2, [sp, #0]
9001e058:	9b00      	ldr	r3, [sp, #0]
9001e05a:	3202      	adds	r2, #2
9001e05c:	785b      	ldrb	r3, [r3, #1]
9001e05e:	9200      	str	r2, [sp, #0]
9001e060:	e7e7      	b.n	9001e032 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001e062:	2202      	movs	r2, #2
9001e064:	9907      	ldr	r1, [sp, #28]
9001e066:	4573      	cmp	r3, lr
9001e068:	4615      	mov	r5, r2
9001e06a:	9a02      	ldr	r2, [sp, #8]
9001e06c:	bf24      	itt	cs
9001e06e:	eba3 0a0e 	subcs.w	sl, r3, lr
9001e072:	46f1      	movcs	r9, lr
9001e074:	fb15 1202 	smlabb	r2, r5, r2, r1
9001e078:	9905      	ldr	r1, [sp, #20]
9001e07a:	bf34      	ite	cc
9001e07c:	4699      	movcc	r9, r3
9001e07e:	fa1f fa8a 	uxthcs.w	sl, sl
9001e082:	f831 c002 	ldrh.w	ip, [r1, r2]
9001e086:	bf38      	it	cc
9001e088:	ebae 0103 	subcc.w	r1, lr, r3
9001e08c:	9a01      	ldr	r2, [sp, #4]
9001e08e:	bf2e      	itee	cs
9001e090:	4621      	movcs	r1, r4
9001e092:	b289      	uxthcc	r1, r1
9001e094:	46a2      	movcc	sl, r4
9001e096:	2aff      	cmp	r2, #255	@ 0xff
9001e098:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001e09c:	d105      	bne.n	9001e0aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
9001e09e:	4481      	add	r9, r0
9001e0a0:	4581      	cmp	r9, r0
9001e0a2:	d045      	beq.n	9001e130 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001e0a4:	f820 cb02 	strh.w	ip, [r0], #2
9001e0a8:	e7fa      	b.n	9001e0a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
9001e0aa:	ea4f 222c 	mov.w	r2, ip, asr #8
9001e0ae:	9d03      	ldr	r5, [sp, #12]
9001e0b0:	ea4f 0bec 	mov.w	fp, ip, asr #3
9001e0b4:	4481      	add	r9, r0
9001e0b6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001e0ba:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
9001e0be:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9001e0c2:	fa5f fc8c 	uxtb.w	ip, ip
9001e0c6:	436a      	muls	r2, r5
9001e0c8:	fb0b fb05 	mul.w	fp, fp, r5
9001e0cc:	fb0c fc05 	mul.w	ip, ip, r5
9001e0d0:	9208      	str	r2, [sp, #32]
9001e0d2:	4581      	cmp	r9, r0
9001e0d4:	d02c      	beq.n	9001e130 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001e0d6:	8802      	ldrh	r2, [r0, #0]
9001e0d8:	9d04      	ldr	r5, [sp, #16]
9001e0da:	1216      	asrs	r6, r2, #8
9001e0dc:	9f04      	ldr	r7, [sp, #16]
9001e0de:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001e0e2:	fb16 f605 	smulbb	r6, r6, r5
9001e0e6:	9d08      	ldr	r5, [sp, #32]
9001e0e8:	442e      	add	r6, r5
9001e0ea:	10d5      	asrs	r5, r2, #3
9001e0ec:	00d2      	lsls	r2, r2, #3
9001e0ee:	b2b6      	uxth	r6, r6
9001e0f0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001e0f4:	b2d2      	uxtb	r2, r2
9001e0f6:	fb15 f507 	smulbb	r5, r5, r7
9001e0fa:	fb12 f207 	smulbb	r2, r2, r7
9001e0fe:	1c77      	adds	r7, r6, #1
9001e100:	445d      	add	r5, fp
9001e102:	4462      	add	r2, ip
9001e104:	eb07 2616 	add.w	r6, r7, r6, lsr #8
9001e108:	b2ad      	uxth	r5, r5
9001e10a:	b292      	uxth	r2, r2
9001e10c:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001e110:	1c57      	adds	r7, r2, #1
9001e112:	eb07 2212 	add.w	r2, r7, r2, lsr #8
9001e116:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001e11a:	4316      	orrs	r6, r2
9001e11c:	1c6a      	adds	r2, r5, #1
9001e11e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001e122:	096d      	lsrs	r5, r5, #5
9001e124:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001e128:	432e      	orrs	r6, r5
9001e12a:	f820 6b02 	strh.w	r6, [r0], #2
9001e12e:	e7d0      	b.n	9001e0d2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
9001e130:	4573      	cmp	r3, lr
9001e132:	d38d      	bcc.n	9001e050 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001e134:	fa1f f188 	uxth.w	r1, r8
9001e138:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001e13c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001e13e:	1a64      	subs	r4, r4, r1
9001e140:	881b      	ldrh	r3, [r3, #0]
9001e142:	b2a4      	uxth	r4, r4
9001e144:	eba3 0308 	sub.w	r3, r3, r8
9001e148:	2c00      	cmp	r4, #0
9001e14a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e14e:	bf18      	it	ne
9001e150:	2100      	movne	r1, #0
9001e152:	e77d      	b.n	9001e050 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001e154:	4b03      	ldr	r3, [pc, #12]	@ (9001e164 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001e156:	6818      	ldr	r0, [r3, #0]
9001e158:	6803      	ldr	r3, [r0, #0]
9001e15a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001e15c:	4798      	blx	r3
9001e15e:	b00f      	add	sp, #60	@ 0x3c
9001e160:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e164:	24021864 	.word	0x24021864
9001e168:	2402185e 	.word	0x2402185e

9001e16c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001e16c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e170:	b09f      	sub	sp, #124	@ 0x7c
9001e172:	461d      	mov	r5, r3
9001e174:	4604      	mov	r4, r0
9001e176:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9001e178:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
9001e17c:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
9001e180:	9209      	str	r2, [sp, #36]	@ 0x24
9001e182:	2a00      	cmp	r2, #0
9001e184:	f000 81ed 	beq.w	9001e562 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
9001e188:	6828      	ldr	r0, [r5, #0]
9001e18a:	aa1a      	add	r2, sp, #104	@ 0x68
9001e18c:	6869      	ldr	r1, [r5, #4]
9001e18e:	c203      	stmia	r2!, {r0, r1}
9001e190:	6818      	ldr	r0, [r3, #0]
9001e192:	aa1c      	add	r2, sp, #112	@ 0x70
9001e194:	6859      	ldr	r1, [r3, #4]
9001e196:	c203      	stmia	r2!, {r0, r1}
9001e198:	a81a      	add	r0, sp, #104	@ 0x68
9001e19a:	f7f8 fd81 	bl	90016ca0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e19e:	4629      	mov	r1, r5
9001e1a0:	a81c      	add	r0, sp, #112	@ 0x70
9001e1a2:	f7f8 fdc1 	bl	90016d28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e1a6:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001e1aa:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
9001e1ae:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001e1b2:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
9001e1b6:	bfdb      	ittet	le
9001e1b8:	b29a      	uxthle	r2, r3
9001e1ba:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001e1be:	2201      	movgt	r2, #1
9001e1c0:	fb91 f2f2 	sdivle	r2, r1, r2
9001e1c4:	9202      	str	r2, [sp, #8]
9001e1c6:	9802      	ldr	r0, [sp, #8]
9001e1c8:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
9001e1cc:	9902      	ldr	r1, [sp, #8]
9001e1ce:	fb92 f0f0 	sdiv	r0, r2, r0
9001e1d2:	b280      	uxth	r0, r0
9001e1d4:	4488      	add	r8, r1
9001e1d6:	9010      	str	r0, [sp, #64]	@ 0x40
9001e1d8:	f108 38ff 	add.w	r8, r8, #4294967295
9001e1dc:	9802      	ldr	r0, [sp, #8]
9001e1de:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9001e1e0:	fb05 2510 	mls	r5, r5, r0, r2
9001e1e4:	fb98 f8f1 	sdiv	r8, r8, r1
9001e1e8:	fb15 f503 	smulbb	r5, r5, r3
9001e1ec:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
9001e1f0:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
9001e1f4:	f108 0801 	add.w	r8, r8, #1
9001e1f8:	440d      	add	r5, r1
9001e1fa:	4419      	add	r1, r3
9001e1fc:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
9001e200:	fa1f f888 	uxth.w	r8, r8
9001e204:	441a      	add	r2, r3
9001e206:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
9001e20a:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
9001e20e:	b2ad      	uxth	r5, r5
9001e210:	9304      	str	r3, [sp, #16]
9001e212:	4b94      	ldr	r3, [pc, #592]	@ (9001e464 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
9001e214:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
9001e218:	6818      	ldr	r0, [r3, #0]
9001e21a:	6803      	ldr	r3, [r0, #0]
9001e21c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001e21e:	4798      	blx	r3
9001e220:	4b91      	ldr	r3, [pc, #580]	@ (9001e468 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001e222:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
9001e226:	2d00      	cmp	r5, #0
9001e228:	881a      	ldrh	r2, [r3, #0]
9001e22a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
9001e22e:	fb02 f606 	mul.w	r6, r2, r6
9001e232:	fb02 7101 	mla	r1, r2, r1, r7
9001e236:	9318      	str	r3, [sp, #96]	@ 0x60
9001e238:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001e23c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
9001e240:	f04f 0100 	mov.w	r1, #0
9001e244:	eb00 0246 	add.w	r2, r0, r6, lsl #1
9001e248:	930f      	str	r3, [sp, #60]	@ 0x3c
9001e24a:	4b88      	ldr	r3, [pc, #544]	@ (9001e46c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
9001e24c:	920a      	str	r2, [sp, #40]	@ 0x28
9001e24e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001e250:	eba3 0304 	sub.w	r3, r3, r4
9001e254:	910d      	str	r1, [sp, #52]	@ 0x34
9001e256:	eb02 0888 	add.w	r8, r2, r8, lsl #2
9001e25a:	9319      	str	r3, [sp, #100]	@ 0x64
9001e25c:	f108 0204 	add.w	r2, r8, #4
9001e260:	9211      	str	r2, [sp, #68]	@ 0x44
9001e262:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001e264:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
9001e268:	9215      	str	r2, [sp, #84]	@ 0x54
9001e26a:	9a04      	ldr	r2, [sp, #16]
9001e26c:	bf18      	it	ne
9001e26e:	2200      	movne	r2, #0
9001e270:	b292      	uxth	r2, r2
9001e272:	9910      	ldr	r1, [sp, #64]	@ 0x40
9001e274:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001e276:	fa11 f383 	uxtah	r3, r1, r3
9001e27a:	9914      	ldr	r1, [sp, #80]	@ 0x50
9001e27c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001e280:	3304      	adds	r3, #4
9001e282:	9306      	str	r3, [sp, #24]
9001e284:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001e286:	4283      	cmp	r3, r0
9001e288:	f240 8166 	bls.w	9001e558 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
9001e28c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
9001e290:	f04f 0a01 	mov.w	sl, #1
9001e294:	9902      	ldr	r1, [sp, #8]
9001e296:	9e06      	ldr	r6, [sp, #24]
9001e298:	46d3      	mov	fp, sl
9001e29a:	4657      	mov	r7, sl
9001e29c:	7836      	ldrb	r6, [r6, #0]
9001e29e:	fbb5 f3f3 	udiv	r3, r5, r3
9001e2a2:	1acb      	subs	r3, r1, r3
9001e2a4:	9612      	str	r6, [sp, #72]	@ 0x48
9001e2a6:	3601      	adds	r6, #1
9001e2a8:	b29b      	uxth	r3, r3
9001e2aa:	9605      	str	r6, [sp, #20]
9001e2ac:	9316      	str	r3, [sp, #88]	@ 0x58
9001e2ae:	9b06      	ldr	r3, [sp, #24]
9001e2b0:	7859      	ldrb	r1, [r3, #1]
9001e2b2:	789b      	ldrb	r3, [r3, #2]
9001e2b4:	021b      	lsls	r3, r3, #8
9001e2b6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9001e2ba:	9906      	ldr	r1, [sp, #24]
9001e2bc:	78c9      	ldrb	r1, [r1, #3]
9001e2be:	430b      	orrs	r3, r1
9001e2c0:	9913      	ldr	r1, [sp, #76]	@ 0x4c
9001e2c2:	4419      	add	r1, r3
9001e2c4:	1c4e      	adds	r6, r1, #1
9001e2c6:	7849      	ldrb	r1, [r1, #1]
9001e2c8:	9603      	str	r6, [sp, #12]
9001e2ca:	0209      	lsls	r1, r1, #8
9001e2cc:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001e2ce:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
9001e2d2:	5cf3      	ldrb	r3, [r6, r3]
9001e2d4:	4319      	orrs	r1, r3
9001e2d6:	b28b      	uxth	r3, r1
9001e2d8:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
9001e2dc:	930c      	str	r3, [sp, #48]	@ 0x30
9001e2de:	2300      	movs	r3, #0
9001e2e0:	9307      	str	r3, [sp, #28]
9001e2e2:	469c      	mov	ip, r3
9001e2e4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001e2e8:	930e      	str	r3, [sp, #56]	@ 0x38
9001e2ea:	2d00      	cmp	r5, #0
9001e2ec:	d07e      	beq.n	9001e3ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
9001e2ee:	42af      	cmp	r7, r5
9001e2f0:	d26e      	bcs.n	9001e3d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
9001e2f2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001e2f4:	1bed      	subs	r5, r5, r7
9001e2f6:	9201      	str	r2, [sp, #4]
9001e2f8:	4283      	cmp	r3, r0
9001e2fa:	b2ad      	uxth	r5, r5
9001e2fc:	d802      	bhi.n	9001e304 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
9001e2fe:	e073      	b.n	9001e3e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
9001e300:	2b00      	cmp	r3, #0
9001e302:	d15f      	bne.n	9001e3c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
9001e304:	9b03      	ldr	r3, [sp, #12]
9001e306:	f1cb 0207 	rsb	r2, fp, #7
9001e30a:	785b      	ldrb	r3, [r3, #1]
9001e30c:	4093      	lsls	r3, r2
9001e30e:	005b      	lsls	r3, r3, #1
9001e310:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001e314:	9b03      	ldr	r3, [sp, #12]
9001e316:	781b      	ldrb	r3, [r3, #0]
9001e318:	fa43 f30b 	asr.w	r3, r3, fp
9001e31c:	b2db      	uxtb	r3, r3
9001e31e:	4313      	orrs	r3, r2
9001e320:	f10b 0201 	add.w	r2, fp, #1
9001e324:	fa5f fb82 	uxtb.w	fp, r2
9001e328:	9a03      	ldr	r2, [sp, #12]
9001e32a:	b29f      	uxth	r7, r3
9001e32c:	f1bb 0f08 	cmp.w	fp, #8
9001e330:	bf13      	iteet	ne
9001e332:	3201      	addne	r2, #1
9001e334:	3202      	addeq	r2, #2
9001e336:	f04f 0b00 	moveq.w	fp, #0
9001e33a:	9203      	strne	r2, [sp, #12]
9001e33c:	bf08      	it	eq
9001e33e:	9203      	streq	r2, [sp, #12]
9001e340:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001e342:	42ba      	cmp	r2, r7
9001e344:	d309      	bcc.n	9001e35a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
9001e346:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
9001e34a:	2301      	movs	r3, #1
9001e34c:	9a05      	ldr	r2, [sp, #20]
9001e34e:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
9001e352:	d30e      	bcc.n	9001e372 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9001e354:	469a      	mov	sl, r3
9001e356:	2600      	movs	r6, #0
9001e358:	e035      	b.n	9001e3c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
9001e35a:	9b05      	ldr	r3, [sp, #20]
9001e35c:	429f      	cmp	r7, r3
9001e35e:	d318      	bcc.n	9001e392 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
9001e360:	eb04 030a 	add.w	r3, r4, sl
9001e364:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
9001e368:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
9001e36c:	f10a 0301 	add.w	r3, sl, #1
9001e370:	b29b      	uxth	r3, r3
9001e372:	9a05      	ldr	r2, [sp, #20]
9001e374:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
9001e378:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001e37c:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001e37e:	7116      	strb	r6, [r2, #4]
9001e380:	f10a 0601 	add.w	r6, sl, #1
9001e384:	80d1      	strh	r1, [r2, #6]
9001e386:	7156      	strb	r6, [r2, #5]
9001e388:	9a05      	ldr	r2, [sp, #20]
9001e38a:	3201      	adds	r2, #1
9001e38c:	b292      	uxth	r2, r2
9001e38e:	9205      	str	r2, [sp, #20]
9001e390:	e7e0      	b.n	9001e354 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
9001e392:	eb04 0387 	add.w	r3, r4, r7, lsl #2
9001e396:	463a      	mov	r2, r7
9001e398:	795b      	ldrb	r3, [r3, #5]
9001e39a:	f603 0604 	addw	r6, r3, #2052	@ 0x804
9001e39e:	4426      	add	r6, r4
9001e3a0:	9919      	ldr	r1, [sp, #100]	@ 0x64
9001e3a2:	eb01 0c06 	add.w	ip, r1, r6
9001e3a6:	f1bc 0f00 	cmp.w	ip, #0
9001e3aa:	dd07      	ble.n	9001e3bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
9001e3ac:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001e3b0:	f892 c004 	ldrb.w	ip, [r2, #4]
9001e3b4:	f806 cd01 	strb.w	ip, [r6, #-1]!
9001e3b8:	88d2      	ldrh	r2, [r2, #6]
9001e3ba:	e7f1      	b.n	9001e3a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
9001e3bc:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
9001e3c0:	b29b      	uxth	r3, r3
9001e3c2:	e7c3      	b.n	9001e34c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
9001e3c4:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
9001e3c6:	970c      	str	r7, [sp, #48]	@ 0x30
9001e3c8:	46b4      	mov	ip, r6
9001e3ca:	9a01      	ldr	r2, [sp, #4]
9001e3cc:	461f      	mov	r7, r3
9001e3ce:	e78c      	b.n	9001e2ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
9001e3d0:	1b7b      	subs	r3, r7, r5
9001e3d2:	eb0c 0605 	add.w	r6, ip, r5
9001e3d6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001e3da:	b29b      	uxth	r3, r3
9001e3dc:	b2b6      	uxth	r6, r6
9001e3de:	9201      	str	r2, [sp, #4]
9001e3e0:	2500      	movs	r5, #0
9001e3e2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001e3e4:	4282      	cmp	r2, r0
9001e3e6:	d88b      	bhi.n	9001e300 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
9001e3e8:	9a01      	ldr	r2, [sp, #4]
9001e3ea:	e74b      	b.n	9001e284 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
9001e3ec:	4297      	cmp	r7, r2
9001e3ee:	d332      	bcc.n	9001e456 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
9001e3f0:	1abb      	subs	r3, r7, r2
9001e3f2:	9208      	str	r2, [sp, #32]
9001e3f4:	9501      	str	r5, [sp, #4]
9001e3f6:	b29b      	uxth	r3, r3
9001e3f8:	9909      	ldr	r1, [sp, #36]	@ 0x24
9001e3fa:	29ff      	cmp	r1, #255	@ 0xff
9001e3fc:	9908      	ldr	r1, [sp, #32]
9001e3fe:	eb0c 0601 	add.w	r6, ip, r1
9001e402:	d135      	bne.n	9001e470 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
9001e404:	f1a0 0e02 	sub.w	lr, r0, #2
9001e408:	b2b6      	uxth	r6, r6
9001e40a:	45b4      	cmp	ip, r6
9001e40c:	f040 808c 	bne.w	9001e528 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
9001e410:	9908      	ldr	r1, [sp, #32]
9001e412:	4297      	cmp	r7, r2
9001e414:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001e418:	d3e2      	bcc.n	9001e3e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
9001e41a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
9001e41c:	9904      	ldr	r1, [sp, #16]
9001e41e:	8812      	ldrh	r2, [r2, #0]
9001e420:	1a52      	subs	r2, r2, r1
9001e422:	9916      	ldr	r1, [sp, #88]	@ 0x58
9001e424:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e428:	9a07      	ldr	r2, [sp, #28]
9001e42a:	3201      	adds	r2, #1
9001e42c:	428a      	cmp	r2, r1
9001e42e:	9207      	str	r2, [sp, #28]
9001e430:	f040 8087 	bne.w	9001e542 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
9001e434:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
9001e438:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
9001e43c:	9b04      	ldr	r3, [sp, #16]
9001e43e:	1bed      	subs	r5, r5, r7
9001e440:	b2ad      	uxth	r5, r5
9001e442:	2d00      	cmp	r5, #0
9001e444:	bf08      	it	eq
9001e446:	461a      	moveq	r2, r3
9001e448:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001e44a:	bf18      	it	ne
9001e44c:	2200      	movne	r2, #0
9001e44e:	3301      	adds	r3, #1
9001e450:	b292      	uxth	r2, r2
9001e452:	930d      	str	r3, [sp, #52]	@ 0x34
9001e454:	e70d      	b.n	9001e272 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
9001e456:	1bd1      	subs	r1, r2, r7
9001e458:	9708      	str	r7, [sp, #32]
9001e45a:	b28b      	uxth	r3, r1
9001e45c:	9301      	str	r3, [sp, #4]
9001e45e:	462b      	mov	r3, r5
9001e460:	e7ca      	b.n	9001e3f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
9001e462:	bf00      	nop
9001e464:	24021864 	.word	0x24021864
9001e468:	2402185e 	.word	0x2402185e
9001e46c:	fffff7fb 	.word	0xfffff7fb
9001e470:	b2b6      	uxth	r6, r6
9001e472:	900b      	str	r0, [sp, #44]	@ 0x2c
9001e474:	45b4      	cmp	ip, r6
9001e476:	d0cb      	beq.n	9001e410 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
9001e478:	f10c 0101 	add.w	r1, ip, #1
9001e47c:	44a4      	add	ip, r4
9001e47e:	9117      	str	r1, [sp, #92]	@ 0x5c
9001e480:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
9001e484:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001e486:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001e48a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001e48c:	ea4f 2825 	mov.w	r8, r5, asr #8
9001e490:	f8b1 c000 	ldrh.w	ip, [r1]
9001e494:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001e496:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
9001e49a:	ea4f 2e2c 	mov.w	lr, ip, asr #8
9001e49e:	ea4f 09ec 	mov.w	r9, ip, asr #3
9001e4a2:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001e4a6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001e4aa:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001e4ae:	fb1e fe01 	smulbb	lr, lr, r1
9001e4b2:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001e4b4:	fa5f fc8c 	uxtb.w	ip, ip
9001e4b8:	fb08 e801 	mla	r8, r8, r1, lr
9001e4bc:	ea4f 0ee5 	mov.w	lr, r5, asr #3
9001e4c0:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001e4c2:	00ed      	lsls	r5, r5, #3
9001e4c4:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9001e4c8:	fa1f f888 	uxth.w	r8, r8
9001e4cc:	fb19 f901 	smulbb	r9, r9, r1
9001e4d0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001e4d2:	b2ed      	uxtb	r5, r5
9001e4d4:	fb0e 9e01 	mla	lr, lr, r1, r9
9001e4d8:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001e4da:	fb1c fc01 	smulbb	ip, ip, r1
9001e4de:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001e4e0:	fa1f fe8e 	uxth.w	lr, lr
9001e4e4:	fb05 c501 	mla	r5, r5, r1, ip
9001e4e8:	f108 0c01 	add.w	ip, r8, #1
9001e4ec:	f10e 0901 	add.w	r9, lr, #1
9001e4f0:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001e4f2:	b2ad      	uxth	r5, r5
9001e4f4:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
9001e4f8:	f105 0c01 	add.w	ip, r5, #1
9001e4fc:	eb09 291e 	add.w	r9, r9, lr, lsr #8
9001e500:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
9001e504:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001e508:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001e50c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001e510:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001e514:	ea4c 0808 	orr.w	r8, ip, r8
9001e518:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
9001e51c:	ea48 0809 	orr.w	r8, r8, r9
9001e520:	f821 8b02 	strh.w	r8, [r1], #2
9001e524:	910b      	str	r1, [sp, #44]	@ 0x2c
9001e526:	e7a5      	b.n	9001e474 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
9001e528:	f10c 0801 	add.w	r8, ip, #1
9001e52c:	44a4      	add	ip, r4
9001e52e:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001e530:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
9001e534:	fa1f fc88 	uxth.w	ip, r8
9001e538:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001e53c:	f82e 5f02 	strh.w	r5, [lr, #2]!
9001e540:	e763      	b.n	9001e40a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
9001e542:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001e546:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
9001e54a:	1aad      	subs	r5, r5, r2
9001e54c:	b2ad      	uxth	r5, r5
9001e54e:	2d00      	cmp	r5, #0
9001e550:	bf18      	it	ne
9001e552:	2200      	movne	r2, #0
9001e554:	9201      	str	r2, [sp, #4]
9001e556:	e744      	b.n	9001e3e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
9001e558:	4b03      	ldr	r3, [pc, #12]	@ (9001e568 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
9001e55a:	6818      	ldr	r0, [r3, #0]
9001e55c:	6803      	ldr	r3, [r0, #0]
9001e55e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001e560:	4798      	blx	r3
9001e562:	b01f      	add	sp, #124	@ 0x7c
9001e564:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e568:	24021864 	.word	0x24021864

9001e56c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
9001e56c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e570:	b093      	sub	sp, #76	@ 0x4c
9001e572:	4616      	mov	r6, r2
9001e574:	460d      	mov	r5, r1
9001e576:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
9001e57a:	9003      	str	r0, [sp, #12]
9001e57c:	9201      	str	r2, [sp, #4]
9001e57e:	2a00      	cmp	r2, #0
9001e580:	f000 8303 	beq.w	9001eb8a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x61e>
9001e584:	6830      	ldr	r0, [r6, #0]
9001e586:	ac0e      	add	r4, sp, #56	@ 0x38
9001e588:	6871      	ldr	r1, [r6, #4]
9001e58a:	c403      	stmia	r4!, {r0, r1}
9001e58c:	6818      	ldr	r0, [r3, #0]
9001e58e:	ac10      	add	r4, sp, #64	@ 0x40
9001e590:	6859      	ldr	r1, [r3, #4]
9001e592:	c403      	stmia	r4!, {r0, r1}
9001e594:	a80e      	add	r0, sp, #56	@ 0x38
9001e596:	f7f8 fb83 	bl	90016ca0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e59a:	4631      	mov	r1, r6
9001e59c:	a810      	add	r0, sp, #64	@ 0x40
9001e59e:	f7f8 fbc3 	bl	90016d28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e5a2:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
9001e5a6:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
9001e5aa:	bfdb      	ittet	le
9001e5ac:	b293      	uxthle	r3, r2
9001e5ae:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001e5b2:	2301      	movgt	r3, #1
9001e5b4:	fb91 f3f3 	sdivle	r3, r1, r3
9001e5b8:	9304      	str	r3, [sp, #16]
9001e5ba:	f105 0308 	add.w	r3, r5, #8
9001e5be:	9904      	ldr	r1, [sp, #16]
9001e5c0:	9308      	str	r3, [sp, #32]
9001e5c2:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
9001e5c6:	440b      	add	r3, r1
9001e5c8:	3b01      	subs	r3, #1
9001e5ca:	fb93 f3f1 	sdiv	r3, r3, r1
9001e5ce:	3b01      	subs	r3, #1
9001e5d0:	9908      	ldr	r1, [sp, #32]
9001e5d2:	b29b      	uxth	r3, r3
9001e5d4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001e5d8:	9904      	ldr	r1, [sp, #16]
9001e5da:	9309      	str	r3, [sp, #36]	@ 0x24
9001e5dc:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
9001e5e0:	fb93 f0f1 	sdiv	r0, r3, r1
9001e5e4:	b284      	uxth	r4, r0
9001e5e6:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
9001e5ea:	9405      	str	r4, [sp, #20]
9001e5ec:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
9001e5f0:	fb05 3914 	mls	r9, r5, r4, r3
9001e5f4:	fb19 f902 	smulbb	r9, r9, r2
9001e5f8:	4489      	add	r9, r1
9001e5fa:	fa1f f989 	uxth.w	r9, r9
9001e5fe:	2d00      	cmp	r5, #0
9001e600:	d05d      	beq.n	9001e6be <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
9001e602:	1e6a      	subs	r2, r5, #1
9001e604:	9808      	ldr	r0, [sp, #32]
9001e606:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
9001e60a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001e60c:	fa9a fa8a 	rev.w	sl, sl
9001e610:	4492      	add	sl, r2
9001e612:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
9001e616:	f04f 0600 	mov.w	r6, #0
9001e61a:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
9001e61e:	4411      	add	r1, r2
9001e620:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
9001e624:	4413      	add	r3, r2
9001e626:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
9001e62a:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
9001e62e:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
9001e632:	9302      	str	r3, [sp, #8]
9001e634:	4bca      	ldr	r3, [pc, #808]	@ (9001e960 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
9001e636:	6818      	ldr	r0, [r3, #0]
9001e638:	6803      	ldr	r3, [r0, #0]
9001e63a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001e63c:	4798      	blx	r3
9001e63e:	4bc9      	ldr	r3, [pc, #804]	@ (9001e964 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
9001e640:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
9001e644:	2100      	movs	r1, #0
9001e646:	881b      	ldrh	r3, [r3, #0]
9001e648:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
9001e64c:	fb03 2404 	mla	r4, r3, r4, r2
9001e650:	2280      	movs	r2, #128	@ 0x80
9001e652:	436b      	muls	r3, r5
9001e654:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001e658:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001e65c:	930d      	str	r3, [sp, #52]	@ 0x34
9001e65e:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
9001e662:	fb99 f3f3 	sdiv	r3, r9, r3
9001e666:	9306      	str	r3, [sp, #24]
9001e668:	9b01      	ldr	r3, [sp, #4]
9001e66a:	43db      	mvns	r3, r3
9001e66c:	b2db      	uxtb	r3, r3
9001e66e:	930a      	str	r3, [sp, #40]	@ 0x28
9001e670:	9b03      	ldr	r3, [sp, #12]
9001e672:	3304      	adds	r3, #4
9001e674:	4618      	mov	r0, r3
9001e676:	930b      	str	r3, [sp, #44]	@ 0x2c
9001e678:	f00c f90a 	bl	9002a890 <memset>
9001e67c:	4bba      	ldr	r3, [pc, #744]	@ (9001e968 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
9001e67e:	9300      	str	r3, [sp, #0]
9001e680:	2300      	movs	r3, #0
9001e682:	9307      	str	r3, [sp, #28]
9001e684:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001e686:	42a3      	cmp	r3, r4
9001e688:	f240 827a 	bls.w	9001eb80 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x614>
9001e68c:	f04f 0e07 	mov.w	lr, #7
9001e690:	f1b9 0f00 	cmp.w	r9, #0
9001e694:	f000 8159 	beq.w	9001e94a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
9001e698:	f89a 5000 	ldrb.w	r5, [sl]
9001e69c:	f10a 0701 	add.w	r7, sl, #1
9001e6a0:	b2ed      	uxtb	r5, r5
9001e6a2:	11aa      	asrs	r2, r5, #6
9001e6a4:	d10e      	bne.n	9001e6c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
9001e6a6:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
9001e6aa:	9b03      	ldr	r3, [sp, #12]
9001e6ac:	eb03 0545 	add.w	r5, r3, r5, lsl #1
9001e6b0:	88ae      	ldrh	r6, [r5, #4]
9001e6b2:	f109 39ff 	add.w	r9, r9, #4294967295
9001e6b6:	fa1f f989 	uxth.w	r9, r9
9001e6ba:	46ba      	mov	sl, r7
9001e6bc:	e7e8      	b.n	9001e690 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
9001e6be:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
9001e6c2:	e7a6      	b.n	9001e612 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
9001e6c4:	2a01      	cmp	r2, #1
9001e6c6:	d129      	bne.n	9001e71c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
9001e6c8:	f3c6 0304 	ubfx	r3, r6, #0, #5
9001e6cc:	f005 0203 	and.w	r2, r5, #3
9001e6d0:	2103      	movs	r1, #3
9001e6d2:	3b02      	subs	r3, #2
9001e6d4:	4413      	add	r3, r2
9001e6d6:	f3c5 0281 	ubfx	r2, r5, #2, #2
9001e6da:	f3c5 1501 	ubfx	r5, r5, #4, #2
9001e6de:	f003 031f 	and.w	r3, r3, #31
9001e6e2:	3a02      	subs	r2, #2
9001e6e4:	3d02      	subs	r5, #2
9001e6e6:	f363 0604 	bfi	r6, r3, #0, #5
9001e6ea:	eb02 1256 	add.w	r2, r2, r6, lsr #5
9001e6ee:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001e6f2:	f362 164a 	bfi	r6, r2, #5, #6
9001e6f6:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001e6fa:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
9001e6fe:	f005 051f 	and.w	r5, r5, #31
9001e702:	fb11 2205 	smlabb	r2, r1, r5, r2
9001e706:	f365 26cf 	bfi	r6, r5, #11, #5
9001e70a:	fb1e 2303 	smlabb	r3, lr, r3, r2
9001e70e:	9a03      	ldr	r2, [sp, #12]
9001e710:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001e714:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001e718:	809e      	strh	r6, [r3, #4]
9001e71a:	e7ca      	b.n	9001e6b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
9001e71c:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
9001e720:	2a02      	cmp	r2, #2
9001e722:	b2ab      	uxth	r3, r5
9001e724:	d136      	bne.n	9001e794 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
9001e726:	2101      	movs	r1, #1
9001e728:	fb12 1205 	smlabb	r2, r2, r5, r1
9001e72c:	4492      	add	sl, r2
9001e72e:	463a      	mov	r2, r7
9001e730:	4552      	cmp	r2, sl
9001e732:	d01c      	beq.n	9001e76e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
9001e734:	4694      	mov	ip, r2
9001e736:	f04f 0b03 	mov.w	fp, #3
9001e73a:	f81c 1b02 	ldrb.w	r1, [ip], #2
9001e73e:	7852      	ldrb	r2, [r2, #1]
9001e740:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
9001e744:	f3c1 1045 	ubfx	r0, r1, #5, #6
9001e748:	ea4f 28d1 	mov.w	r8, r1, lsr #11
9001e74c:	f001 021f 	and.w	r2, r1, #31
9001e750:	460e      	mov	r6, r1
9001e752:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001e756:	fb1b 0008 	smlabb	r0, fp, r8, r0
9001e75a:	fb1e 0002 	smlabb	r0, lr, r2, r0
9001e75e:	9a03      	ldr	r2, [sp, #12]
9001e760:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
9001e764:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001e768:	4662      	mov	r2, ip
9001e76a:	8081      	strh	r1, [r0, #4]
9001e76c:	e7e0      	b.n	9001e730 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
9001e76e:	4599      	cmp	r9, r3
9001e770:	d20b      	bcs.n	9001e78a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
9001e772:	eba5 0509 	sub.w	r5, r5, r9
9001e776:	eb07 0749 	add.w	r7, r7, r9, lsl #1
9001e77a:	2d00      	cmp	r5, #0
9001e77c:	f300 8208 	bgt.w	9001eb90 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x624>
9001e780:	f8dd 8008 	ldr.w	r8, [sp, #8]
9001e784:	2301      	movs	r3, #1
9001e786:	9307      	str	r3, [sp, #28]
9001e788:	e00c      	b.n	9001e7a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001e78a:	eb07 0745 	add.w	r7, r7, r5, lsl #1
9001e78e:	eba9 0903 	sub.w	r9, r9, r3
9001e792:	e790      	b.n	9001e6b6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
9001e794:	4599      	cmp	r9, r3
9001e796:	d2fa      	bcs.n	9001e78e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
9001e798:	eba5 0509 	sub.w	r5, r5, r9
9001e79c:	2d00      	cmp	r5, #0
9001e79e:	dc1d      	bgt.n	9001e7dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
9001e7a0:	f8dd 8008 	ldr.w	r8, [sp, #8]
9001e7a4:	f04f 0b00 	mov.w	fp, #0
9001e7a8:	f1b8 0f00 	cmp.w	r8, #0
9001e7ac:	f340 81a0 	ble.w	9001eaf0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x584>
9001e7b0:	783b      	ldrb	r3, [r7, #0]
9001e7b2:	f107 0a01 	add.w	sl, r7, #1
9001e7b6:	b2db      	uxtb	r3, r3
9001e7b8:	119a      	asrs	r2, r3, #6
9001e7ba:	f040 80d7 	bne.w	9001e96c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
9001e7be:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001e7c2:	9a03      	ldr	r2, [sp, #12]
9001e7c4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001e7c8:	889e      	ldrh	r6, [r3, #4]
9001e7ca:	9b01      	ldr	r3, [sp, #4]
9001e7cc:	2bff      	cmp	r3, #255	@ 0xff
9001e7ce:	f040 81e8 	bne.w	9001eba2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x636>
9001e7d2:	8026      	strh	r6, [r4, #0]
9001e7d4:	f108 38ff 	add.w	r8, r8, #4294967295
9001e7d8:	3402      	adds	r4, #2
9001e7da:	e0be      	b.n	9001e95a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
9001e7dc:	9b02      	ldr	r3, [sp, #8]
9001e7de:	9a02      	ldr	r2, [sp, #8]
9001e7e0:	42ab      	cmp	r3, r5
9001e7e2:	bfa8      	it	ge
9001e7e4:	462b      	movge	r3, r5
9001e7e6:	eba2 0803 	sub.w	r8, r2, r3
9001e7ea:	9a07      	ldr	r2, [sp, #28]
9001e7ec:	1aed      	subs	r5, r5, r3
9001e7ee:	2a00      	cmp	r2, #0
9001e7f0:	d05a      	beq.n	9001e8a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
9001e7f2:	9a01      	ldr	r2, [sp, #4]
9001e7f4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001e7f8:	2aff      	cmp	r2, #255	@ 0xff
9001e7fa:	d049      	beq.n	9001e890 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
9001e7fc:	f8bd e004 	ldrh.w	lr, [sp, #4]
9001e800:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
9001e804:	42a3      	cmp	r3, r4
9001e806:	f240 80a5 	bls.w	9001e954 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
9001e80a:	46bc      	mov	ip, r7
9001e80c:	8820      	ldrh	r0, [r4, #0]
9001e80e:	f81c 2b02 	ldrb.w	r2, [ip], #2
9001e812:	ea4f 2a20 	mov.w	sl, r0, asr #8
9001e816:	7879      	ldrb	r1, [r7, #1]
9001e818:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
9001e81c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9001e820:	fb1a fa09 	smulbb	sl, sl, r9
9001e824:	b212      	sxth	r2, r2
9001e826:	b291      	uxth	r1, r2
9001e828:	00d2      	lsls	r2, r2, #3
9001e82a:	120f      	asrs	r7, r1, #8
9001e82c:	10c9      	asrs	r1, r1, #3
9001e82e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001e832:	b2d2      	uxtb	r2, r2
9001e834:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9001e838:	fb07 a70e 	mla	r7, r7, lr, sl
9001e83c:	ea4f 0ae0 	mov.w	sl, r0, asr #3
9001e840:	00c0      	lsls	r0, r0, #3
9001e842:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001e846:	b2bf      	uxth	r7, r7
9001e848:	b2c0      	uxtb	r0, r0
9001e84a:	fb1a fa09 	smulbb	sl, sl, r9
9001e84e:	fb10 f009 	smulbb	r0, r0, r9
9001e852:	fb01 a10e 	mla	r1, r1, lr, sl
9001e856:	fb02 020e 	mla	r2, r2, lr, r0
9001e85a:	1c78      	adds	r0, r7, #1
9001e85c:	b289      	uxth	r1, r1
9001e85e:	b292      	uxth	r2, r2
9001e860:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001e864:	f101 0a01 	add.w	sl, r1, #1
9001e868:	1c50      	adds	r0, r2, #1
9001e86a:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
9001e86e:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001e872:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9001e876:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001e87a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9001e87e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001e882:	4307      	orrs	r7, r0
9001e884:	ea47 070a 	orr.w	r7, r7, sl
9001e888:	f824 7b02 	strh.w	r7, [r4], #2
9001e88c:	4667      	mov	r7, ip
9001e88e:	e7b9      	b.n	9001e804 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
9001e890:	42a3      	cmp	r3, r4
9001e892:	d95f      	bls.n	9001e954 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
9001e894:	463a      	mov	r2, r7
9001e896:	f812 1b02 	ldrb.w	r1, [r2], #2
9001e89a:	7878      	ldrb	r0, [r7, #1]
9001e89c:	4617      	mov	r7, r2
9001e89e:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
9001e8a2:	f824 1b02 	strh.w	r1, [r4], #2
9001e8a6:	e7f3      	b.n	9001e890 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
9001e8a8:	9901      	ldr	r1, [sp, #4]
9001e8aa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001e8ae:	b2b2      	uxth	r2, r6
9001e8b0:	29ff      	cmp	r1, #255	@ 0xff
9001e8b2:	d044      	beq.n	9001e93e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
9001e8b4:	ea4f 2922 	mov.w	r9, r2, asr #8
9001e8b8:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001e8bc:	ea4f 0ee2 	mov.w	lr, r2, asr #3
9001e8c0:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
9001e8c4:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
9001e8c8:	4608      	mov	r0, r1
9001e8ca:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9001e8ce:	fb09 f901 	mul.w	r9, r9, r1
9001e8d2:	fb0e fe01 	mul.w	lr, lr, r1
9001e8d6:	00d1      	lsls	r1, r2, #3
9001e8d8:	b2c9      	uxtb	r1, r1
9001e8da:	4341      	muls	r1, r0
9001e8dc:	429c      	cmp	r4, r3
9001e8de:	f4bf af61 	bcs.w	9001e7a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001e8e2:	8822      	ldrh	r2, [r4, #0]
9001e8e4:	1210      	asrs	r0, r2, #8
9001e8e6:	ea4f 0ce2 	mov.w	ip, r2, asr #3
9001e8ea:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9001e8ee:	00d2      	lsls	r2, r2, #3
9001e8f0:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001e8f4:	fb00 900a 	mla	r0, r0, sl, r9
9001e8f8:	b2d2      	uxtb	r2, r2
9001e8fa:	fb0c ec0a 	mla	ip, ip, sl, lr
9001e8fe:	b280      	uxth	r0, r0
9001e900:	fb02 120a 	mla	r2, r2, sl, r1
9001e904:	fa1f fc8c 	uxth.w	ip, ip
9001e908:	b292      	uxth	r2, r2
9001e90a:	f100 0b01 	add.w	fp, r0, #1
9001e90e:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
9001e912:	1c50      	adds	r0, r2, #1
9001e914:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9001e918:	f10c 0201 	add.w	r2, ip, #1
9001e91c:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
9001e920:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001e924:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9001e928:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
9001e92c:	ea40 0b0b 	orr.w	fp, r0, fp
9001e930:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
9001e934:	ea4b 0b0c 	orr.w	fp, fp, ip
9001e938:	f824 bb02 	strh.w	fp, [r4], #2
9001e93c:	e7ce      	b.n	9001e8dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
9001e93e:	429c      	cmp	r4, r3
9001e940:	f4bf af30 	bcs.w	9001e7a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001e944:	f824 2b02 	strh.w	r2, [r4], #2
9001e948:	e7f9      	b.n	9001e93e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
9001e94a:	f8dd 8008 	ldr.w	r8, [sp, #8]
9001e94e:	4657      	mov	r7, sl
9001e950:	464d      	mov	r5, r9
9001e952:	e727      	b.n	9001e7a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001e954:	2300      	movs	r3, #0
9001e956:	e716      	b.n	9001e786 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
9001e958:	44bb      	add	fp, r7
9001e95a:	4657      	mov	r7, sl
9001e95c:	e724      	b.n	9001e7a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
9001e95e:	bf00      	nop
9001e960:	24021864 	.word	0x24021864
9001e964:	2402185e 	.word	0x2402185e
9001e968:	24005b80 	.word	0x24005b80
9001e96c:	2a01      	cmp	r2, #1
9001e96e:	d12a      	bne.n	9001e9c6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
9001e970:	f3c6 0104 	ubfx	r1, r6, #0, #5
9001e974:	f003 0203 	and.w	r2, r3, #3
9001e978:	f3c3 0081 	ubfx	r0, r3, #2, #2
9001e97c:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001e980:	3902      	subs	r1, #2
9001e982:	3802      	subs	r0, #2
9001e984:	3b02      	subs	r3, #2
9001e986:	4411      	add	r1, r2
9001e988:	f001 011f 	and.w	r1, r1, #31
9001e98c:	f361 0604 	bfi	r6, r1, #0, #5
9001e990:	eb00 1056 	add.w	r0, r0, r6, lsr #5
9001e994:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
9001e998:	f360 164a 	bfi	r6, r0, #5, #6
9001e99c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001e9a0:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
9001e9a4:	f002 031f 	and.w	r3, r2, #31
9001e9a8:	2203      	movs	r2, #3
9001e9aa:	f363 26cf 	bfi	r6, r3, #11, #5
9001e9ae:	fb12 0303 	smlabb	r3, r2, r3, r0
9001e9b2:	2207      	movs	r2, #7
9001e9b4:	fb12 3301 	smlabb	r3, r2, r1, r3
9001e9b8:	9a03      	ldr	r2, [sp, #12]
9001e9ba:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001e9be:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001e9c2:	809e      	strh	r6, [r3, #4]
9001e9c4:	e701      	b.n	9001e7ca <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
9001e9c6:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
9001e9ca:	4647      	mov	r7, r8
9001e9cc:	45a8      	cmp	r8, r5
9001e9ce:	bfa8      	it	ge
9001e9d0:	462f      	movge	r7, r5
9001e9d2:	2a02      	cmp	r2, #2
9001e9d4:	d154      	bne.n	9001ea80 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
9001e9d6:	9b01      	ldr	r3, [sp, #4]
9001e9d8:	2bff      	cmp	r3, #255	@ 0xff
9001e9da:	d01a      	beq.n	9001ea12 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
9001e9dc:	eb0b 0307 	add.w	r3, fp, r7
9001e9e0:	2b40      	cmp	r3, #64	@ 0x40
9001e9e2:	dd16      	ble.n	9001ea12 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
9001e9e4:	ea4f 094b 	mov.w	r9, fp, lsl #1
9001e9e8:	9800      	ldr	r0, [sp, #0]
9001e9ea:	4649      	mov	r1, r9
9001e9ec:	f7e3 ffac 	bl	90002948 <_ZN8touchgfx5paint9flushLineEPmi>
9001e9f0:	465a      	mov	r2, fp
9001e9f2:	9b01      	ldr	r3, [sp, #4]
9001e9f4:	4620      	mov	r0, r4
9001e9f6:	9900      	ldr	r1, [sp, #0]
9001e9f8:	444c      	add	r4, r9
9001e9fa:	f7e3 ffeb 	bl	900029d4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9001e9fe:	9b00      	ldr	r3, [sp, #0]
9001ea00:	f04f 0b00 	mov.w	fp, #0
9001ea04:	461a      	mov	r2, r3
9001ea06:	4b6a      	ldr	r3, [pc, #424]	@ (9001ebb0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001ea08:	429a      	cmp	r2, r3
9001ea0a:	bf0c      	ite	eq
9001ea0c:	4b69      	ldreq	r3, [pc, #420]	@ (9001ebb4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
9001ea0e:	4b68      	ldrne	r3, [pc, #416]	@ (9001ebb0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001ea10:	9300      	str	r3, [sp, #0]
9001ea12:	4652      	mov	r2, sl
9001ea14:	2100      	movs	r1, #0
9001ea16:	42a9      	cmp	r1, r5
9001ea18:	da2c      	bge.n	9001ea74 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
9001ea1a:	4694      	mov	ip, r2
9001ea1c:	f04f 0903 	mov.w	r9, #3
9001ea20:	42b9      	cmp	r1, r7
9001ea22:	f81c 3b02 	ldrb.w	r3, [ip], #2
9001ea26:	7852      	ldrb	r2, [r2, #1]
9001ea28:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
9001ea2c:	f3c3 1045 	ubfx	r0, r3, #5, #6
9001ea30:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
9001ea34:	f003 021f 	and.w	r2, r3, #31
9001ea38:	461e      	mov	r6, r3
9001ea3a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001ea3e:	fb19 000e 	smlabb	r0, r9, lr, r0
9001ea42:	f04f 0e07 	mov.w	lr, #7
9001ea46:	fb1e 0002 	smlabb	r0, lr, r2, r0
9001ea4a:	9a03      	ldr	r2, [sp, #12]
9001ea4c:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
9001ea50:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001ea54:	8083      	strh	r3, [r0, #4]
9001ea56:	da0a      	bge.n	9001ea6e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
9001ea58:	9a01      	ldr	r2, [sp, #4]
9001ea5a:	2aff      	cmp	r2, #255	@ 0xff
9001ea5c:	bf13      	iteet	ne
9001ea5e:	9a00      	ldrne	r2, [sp, #0]
9001ea60:	8023      	strheq	r3, [r4, #0]
9001ea62:	3402      	addeq	r4, #2
9001ea64:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
9001ea68:	bf18      	it	ne
9001ea6a:	f10b 0b01 	addne.w	fp, fp, #1
9001ea6e:	3101      	adds	r1, #1
9001ea70:	4662      	mov	r2, ip
9001ea72:	e7d0      	b.n	9001ea16 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
9001ea74:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
9001ea78:	eba8 0807 	sub.w	r8, r8, r7
9001ea7c:	1bed      	subs	r5, r5, r7
9001ea7e:	e76c      	b.n	9001e95a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
9001ea80:	9b01      	ldr	r3, [sp, #4]
9001ea82:	eba8 0807 	sub.w	r8, r8, r7
9001ea86:	1bed      	subs	r5, r5, r7
9001ea88:	fa1f f986 	uxth.w	r9, r6
9001ea8c:	2bff      	cmp	r3, #255	@ 0xff
9001ea8e:	d027      	beq.n	9001eae0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x574>
9001ea90:	eb0b 0307 	add.w	r3, fp, r7
9001ea94:	2b40      	cmp	r3, #64	@ 0x40
9001ea96:	dd18      	ble.n	9001eaca <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x55e>
9001ea98:	ea4f 034b 	mov.w	r3, fp, lsl #1
9001ea9c:	9800      	ldr	r0, [sp, #0]
9001ea9e:	4619      	mov	r1, r3
9001eaa0:	930c      	str	r3, [sp, #48]	@ 0x30
9001eaa2:	f7e3 ff51 	bl	90002948 <_ZN8touchgfx5paint9flushLineEPmi>
9001eaa6:	465a      	mov	r2, fp
9001eaa8:	9b01      	ldr	r3, [sp, #4]
9001eaaa:	4620      	mov	r0, r4
9001eaac:	9900      	ldr	r1, [sp, #0]
9001eaae:	f04f 0b00 	mov.w	fp, #0
9001eab2:	f7e3 ff8f 	bl	900029d4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9001eab6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001eab8:	441c      	add	r4, r3
9001eaba:	9b00      	ldr	r3, [sp, #0]
9001eabc:	461a      	mov	r2, r3
9001eabe:	4b3c      	ldr	r3, [pc, #240]	@ (9001ebb0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001eac0:	429a      	cmp	r2, r3
9001eac2:	bf0c      	ite	eq
9001eac4:	4b3b      	ldreq	r3, [pc, #236]	@ (9001ebb4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
9001eac6:	4b3a      	ldrne	r3, [pc, #232]	@ (9001ebb0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001eac8:	9300      	str	r3, [sp, #0]
9001eaca:	9b00      	ldr	r3, [sp, #0]
9001eacc:	eb03 024b 	add.w	r2, r3, fp, lsl #1
9001ead0:	463b      	mov	r3, r7
9001ead2:	2b00      	cmp	r3, #0
9001ead4:	f43f af40 	beq.w	9001e958 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
9001ead8:	f822 9b02 	strh.w	r9, [r2], #2
9001eadc:	3b01      	subs	r3, #1
9001eade:	e7f8      	b.n	9001ead2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x566>
9001eae0:	eb04 0747 	add.w	r7, r4, r7, lsl #1
9001eae4:	42a7      	cmp	r7, r4
9001eae6:	f67f af38 	bls.w	9001e95a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
9001eaea:	f824 9b02 	strh.w	r9, [r4], #2
9001eaee:	e7f9      	b.n	9001eae4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x578>
9001eaf0:	f1bb 0f00 	cmp.w	fp, #0
9001eaf4:	d00c      	beq.n	9001eb10 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a4>
9001eaf6:	ea4f 084b 	mov.w	r8, fp, lsl #1
9001eafa:	9800      	ldr	r0, [sp, #0]
9001eafc:	4641      	mov	r1, r8
9001eafe:	f7e3 ff23 	bl	90002948 <_ZN8touchgfx5paint9flushLineEPmi>
9001eb02:	4620      	mov	r0, r4
9001eb04:	4444      	add	r4, r8
9001eb06:	9b01      	ldr	r3, [sp, #4]
9001eb08:	465a      	mov	r2, fp
9001eb0a:	9900      	ldr	r1, [sp, #0]
9001eb0c:	f7e3 ff62 	bl	900029d4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9001eb10:	4b29      	ldr	r3, [pc, #164]	@ (9001ebb8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
9001eb12:	9a02      	ldr	r2, [sp, #8]
9001eb14:	881b      	ldrh	r3, [r3, #0]
9001eb16:	1a9b      	subs	r3, r3, r2
9001eb18:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001eb1c:	9b06      	ldr	r3, [sp, #24]
9001eb1e:	3301      	adds	r3, #1
9001eb20:	9306      	str	r3, [sp, #24]
9001eb22:	9a06      	ldr	r2, [sp, #24]
9001eb24:	9b04      	ldr	r3, [sp, #16]
9001eb26:	4293      	cmp	r3, r2
9001eb28:	d120      	bne.n	9001eb6c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x600>
9001eb2a:	9b05      	ldr	r3, [sp, #20]
9001eb2c:	2100      	movs	r1, #0
9001eb2e:	9a05      	ldr	r2, [sp, #20]
9001eb30:	f04f 0600 	mov.w	r6, #0
9001eb34:	f103 0801 	add.w	r8, r3, #1
9001eb38:	9b08      	ldr	r3, [sp, #32]
9001eb3a:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
9001eb3e:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
9001eb42:	2280      	movs	r2, #128	@ 0x80
9001eb44:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
9001eb48:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001eb4a:	ba3f      	rev	r7, r7
9001eb4c:	eba9 0905 	sub.w	r9, r9, r5
9001eb50:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9001eb52:	441f      	add	r7, r3
9001eb54:	f00b fe9c 	bl	9002a890 <memset>
9001eb58:	fa1f f989 	uxth.w	r9, r9
9001eb5c:	2300      	movs	r3, #0
9001eb5e:	f8cd 8014 	str.w	r8, [sp, #20]
9001eb62:	9306      	str	r3, [sp, #24]
9001eb64:	f7e3 fee6 	bl	90002934 <_ZN8touchgfx5paint8tearDownEv>
9001eb68:	46ba      	mov	sl, r7
9001eb6a:	e58b      	b.n	9001e684 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
9001eb6c:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
9001eb70:	9b02      	ldr	r3, [sp, #8]
9001eb72:	eba9 0903 	sub.w	r9, r9, r3
9001eb76:	eba9 0505 	sub.w	r5, r9, r5
9001eb7a:	fa1f f985 	uxth.w	r9, r5
9001eb7e:	e7f1      	b.n	9001eb64 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5f8>
9001eb80:	4b0e      	ldr	r3, [pc, #56]	@ (9001ebbc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
9001eb82:	6818      	ldr	r0, [r3, #0]
9001eb84:	6803      	ldr	r3, [r0, #0]
9001eb86:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001eb88:	4798      	blx	r3
9001eb8a:	b013      	add	sp, #76	@ 0x4c
9001eb8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001eb90:	9b02      	ldr	r3, [sp, #8]
9001eb92:	9a02      	ldr	r2, [sp, #8]
9001eb94:	42ab      	cmp	r3, r5
9001eb96:	bfa8      	it	ge
9001eb98:	462b      	movge	r3, r5
9001eb9a:	eba2 0803 	sub.w	r8, r2, r3
9001eb9e:	1aed      	subs	r5, r5, r3
9001eba0:	e627      	b.n	9001e7f2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
9001eba2:	f108 38ff 	add.w	r8, r8, #4294967295
9001eba6:	fa1f f986 	uxth.w	r9, r6
9001ebaa:	2500      	movs	r5, #0
9001ebac:	2701      	movs	r7, #1
9001ebae:	e76f      	b.n	9001ea90 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x524>
9001ebb0:	24005b80 	.word	0x24005b80
9001ebb4:	24005c80 	.word	0x24005c80
9001ebb8:	2402185e 	.word	0x2402185e
9001ebbc:	24021864 	.word	0x24021864

9001ebc0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001ebc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ebc4:	b08f      	sub	sp, #60	@ 0x3c
9001ebc6:	461c      	mov	r4, r3
9001ebc8:	460f      	mov	r7, r1
9001ebca:	9203      	str	r2, [sp, #12]
9001ebcc:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001ebd0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001ebd2:	9202      	str	r2, [sp, #8]
9001ebd4:	2a00      	cmp	r2, #0
9001ebd6:	f000 8128 	beq.w	9001ee2a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
9001ebda:	6820      	ldr	r0, [r4, #0]
9001ebdc:	aa0a      	add	r2, sp, #40	@ 0x28
9001ebde:	6861      	ldr	r1, [r4, #4]
9001ebe0:	c203      	stmia	r2!, {r0, r1}
9001ebe2:	6818      	ldr	r0, [r3, #0]
9001ebe4:	aa0c      	add	r2, sp, #48	@ 0x30
9001ebe6:	6859      	ldr	r1, [r3, #4]
9001ebe8:	c203      	stmia	r2!, {r0, r1}
9001ebea:	a80a      	add	r0, sp, #40	@ 0x28
9001ebec:	f7f8 f858 	bl	90016ca0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ebf0:	4621      	mov	r1, r4
9001ebf2:	a80c      	add	r0, sp, #48	@ 0x30
9001ebf4:	f7f8 f898 	bl	90016d28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ebf8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001ebfc:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
9001ec00:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001ec04:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
9001ec08:	bfdb      	ittet	le
9001ec0a:	b2b3      	uxthle	r3, r6
9001ec0c:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001ec10:	2301      	movgt	r3, #1
9001ec12:	fb92 f3f3 	sdivle	r3, r2, r3
9001ec16:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001ec1a:	441d      	add	r5, r3
9001ec1c:	fb92 f1f3 	sdiv	r1, r2, r3
9001ec20:	fa1f fc81 	uxth.w	ip, r1
9001ec24:	3d01      	subs	r5, #1
9001ec26:	fb0c 2413 	mls	r4, ip, r3, r2
9001ec2a:	4661      	mov	r1, ip
9001ec2c:	fb14 f406 	smulbb	r4, r4, r6
9001ec30:	4404      	add	r4, r0
9001ec32:	fb95 f5f3 	sdiv	r5, r5, r3
9001ec36:	b2a4      	uxth	r4, r4
9001ec38:	b121      	cbz	r1, 9001ec44 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
9001ec3a:	9b03      	ldr	r3, [sp, #12]
9001ec3c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001ec40:	ba1b      	rev	r3, r3
9001ec42:	441f      	add	r7, r3
9001ec44:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001ec48:	b2ad      	uxth	r5, r5
9001ec4a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
9001ec4e:	4418      	add	r0, r3
9001ec50:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001ec54:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001ec58:	00ad      	lsls	r5, r5, #2
9001ec5a:	441a      	add	r2, r3
9001ec5c:	4b74      	ldr	r3, [pc, #464]	@ (9001ee30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001ec5e:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
9001ec62:	6818      	ldr	r0, [r3, #0]
9001ec64:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
9001ec68:	6803      	ldr	r3, [r0, #0]
9001ec6a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001ec6c:	4798      	blx	r3
9001ec6e:	4a71      	ldr	r2, [pc, #452]	@ (9001ee34 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
9001ec70:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
9001ec74:	2c00      	cmp	r4, #0
9001ec76:	8813      	ldrh	r3, [r2, #0]
9001ec78:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
9001ec7c:	bf0c      	ite	eq
9001ec7e:	46c8      	moveq	r8, r9
9001ec80:	f04f 0800 	movne.w	r8, #0
9001ec84:	9209      	str	r2, [sp, #36]	@ 0x24
9001ec86:	fb03 c101 	mla	r1, r3, r1, ip
9001ec8a:	4373      	muls	r3, r6
9001ec8c:	fa1f f888 	uxth.w	r8, r8
9001ec90:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001ec94:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001ec98:	9304      	str	r3, [sp, #16]
9001ec9a:	1d2b      	adds	r3, r5, #4
9001ec9c:	9305      	str	r3, [sp, #20]
9001ec9e:	2300      	movs	r3, #0
9001eca0:	9301      	str	r3, [sp, #4]
9001eca2:	9a04      	ldr	r2, [sp, #16]
9001eca4:	4282      	cmp	r2, r0
9001eca6:	f240 80bb 	bls.w	9001ee20 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
9001ecaa:	b95b      	cbnz	r3, 9001ecc4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
9001ecac:	783a      	ldrb	r2, [r7, #0]
9001ecae:	0993      	lsrs	r3, r2, #6
9001ecb0:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001ecb4:	9201      	str	r2, [sp, #4]
9001ecb6:	1e5a      	subs	r2, r3, #1
9001ecb8:	2a02      	cmp	r2, #2
9001ecba:	bf8d      	iteet	hi
9001ecbc:	787b      	ldrbhi	r3, [r7, #1]
9001ecbe:	3701      	addls	r7, #1
9001ecc0:	b29b      	uxthls	r3, r3
9001ecc2:	3702      	addhi	r7, #2
9001ecc4:	b184      	cbz	r4, 9001ece8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
9001ecc6:	429c      	cmp	r4, r3
9001ecc8:	bf91      	iteee	ls
9001ecca:	1b1c      	subls	r4, r3, r4
9001eccc:	1ae4      	subhi	r4, r4, r3
9001ecce:	46c4      	movhi	ip, r8
9001ecd0:	f04f 0a00 	movhi.w	sl, #0
9001ecd4:	bf9b      	ittet	ls
9001ecd6:	fa1f fa84 	uxthls.w	sl, r4
9001ecda:	2400      	movls	r4, #0
9001ecdc:	b2a4      	uxthhi	r4, r4
9001ecde:	fa1f fc89 	uxthls.w	ip, r9
9001ece2:	4653      	mov	r3, sl
9001ece4:	46e0      	mov	r8, ip
9001ece6:	e7dc      	b.n	9001eca2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
9001ece8:	2204      	movs	r2, #4
9001ecea:	9905      	ldr	r1, [sp, #20]
9001ecec:	4543      	cmp	r3, r8
9001ecee:	4615      	mov	r5, r2
9001ecf0:	9a01      	ldr	r2, [sp, #4]
9001ecf2:	bf24      	itt	cs
9001ecf4:	eba3 0a08 	subcs.w	sl, r3, r8
9001ecf8:	46c6      	movcs	lr, r8
9001ecfa:	fb15 1202 	smlabb	r2, r5, r2, r1
9001ecfe:	9903      	ldr	r1, [sp, #12]
9001ed00:	bf3c      	itt	cc
9001ed02:	eba8 0c03 	subcc.w	ip, r8, r3
9001ed06:	469e      	movcc	lr, r3
9001ed08:	588a      	ldr	r2, [r1, r2]
9001ed0a:	bf26      	itte	cs
9001ed0c:	fa1f fa8a 	uxthcs.w	sl, sl
9001ed10:	46a4      	movcs	ip, r4
9001ed12:	fa1f fc8c 	uxthcc.w	ip, ip
9001ed16:	ea4f 6112 	mov.w	r1, r2, lsr #24
9001ed1a:	bf38      	it	cc
9001ed1c:	46a2      	movcc	sl, r4
9001ed1e:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
9001ed22:	2900      	cmp	r1, #0
9001ed24:	d066      	beq.n	9001edf4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
9001ed26:	29ff      	cmp	r1, #255	@ 0xff
9001ed28:	ea4f 2612 	mov.w	r6, r2, lsr #8
9001ed2c:	d114      	bne.n	9001ed58 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001ed2e:	9d02      	ldr	r5, [sp, #8]
9001ed30:	2dff      	cmp	r5, #255	@ 0xff
9001ed32:	d111      	bne.n	9001ed58 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001ed34:	0951      	lsrs	r1, r2, #5
9001ed36:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001ed3a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001ed3e:	4486      	add	lr, r0
9001ed40:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001ed44:	f026 0607 	bic.w	r6, r6, #7
9001ed48:	430e      	orrs	r6, r1
9001ed4a:	4316      	orrs	r6, r2
9001ed4c:	b2b6      	uxth	r6, r6
9001ed4e:	4586      	cmp	lr, r0
9001ed50:	d051      	beq.n	9001edf6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001ed52:	f820 6b02 	strh.w	r6, [r0], #2
9001ed56:	e7fa      	b.n	9001ed4e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
9001ed58:	9d02      	ldr	r5, [sp, #8]
9001ed5a:	b2f6      	uxtb	r6, r6
9001ed5c:	4486      	add	lr, r0
9001ed5e:	4369      	muls	r1, r5
9001ed60:	1c4d      	adds	r5, r1, #1
9001ed62:	eb05 2521 	add.w	r5, r5, r1, asr #8
9001ed66:	f3c2 4107 	ubfx	r1, r2, #16, #8
9001ed6a:	b2d2      	uxtb	r2, r2
9001ed6c:	122d      	asrs	r5, r5, #8
9001ed6e:	ea6f 0b05 	mvn.w	fp, r5
9001ed72:	b2ad      	uxth	r5, r5
9001ed74:	fb11 f105 	smulbb	r1, r1, r5
9001ed78:	fa5f fb8b 	uxtb.w	fp, fp
9001ed7c:	fb16 f605 	smulbb	r6, r6, r5
9001ed80:	fb12 f205 	smulbb	r2, r2, r5
9001ed84:	b289      	uxth	r1, r1
9001ed86:	b2b6      	uxth	r6, r6
9001ed88:	b292      	uxth	r2, r2
9001ed8a:	9106      	str	r1, [sp, #24]
9001ed8c:	9607      	str	r6, [sp, #28]
9001ed8e:	9208      	str	r2, [sp, #32]
9001ed90:	4586      	cmp	lr, r0
9001ed92:	d030      	beq.n	9001edf6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001ed94:	8802      	ldrh	r2, [r0, #0]
9001ed96:	9906      	ldr	r1, [sp, #24]
9001ed98:	1216      	asrs	r6, r2, #8
9001ed9a:	10d5      	asrs	r5, r2, #3
9001ed9c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001eda0:	00d2      	lsls	r2, r2, #3
9001eda2:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001eda6:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001edaa:	b2d2      	uxtb	r2, r2
9001edac:	fb06 160b 	mla	r6, r6, fp, r1
9001edb0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001edb4:	9907      	ldr	r1, [sp, #28]
9001edb6:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001edba:	b2b6      	uxth	r6, r6
9001edbc:	fb05 150b 	mla	r5, r5, fp, r1
9001edc0:	9908      	ldr	r1, [sp, #32]
9001edc2:	fb02 120b 	mla	r2, r2, fp, r1
9001edc6:	1c71      	adds	r1, r6, #1
9001edc8:	b2ad      	uxth	r5, r5
9001edca:	b292      	uxth	r2, r2
9001edcc:	eb01 2616 	add.w	r6, r1, r6, lsr #8
9001edd0:	1c51      	adds	r1, r2, #1
9001edd2:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001edd6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001edda:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001edde:	4316      	orrs	r6, r2
9001ede0:	1c6a      	adds	r2, r5, #1
9001ede2:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001ede6:	096d      	lsrs	r5, r5, #5
9001ede8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001edec:	432e      	orrs	r6, r5
9001edee:	f820 6b02 	strh.w	r6, [r0], #2
9001edf2:	e7cd      	b.n	9001ed90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
9001edf4:	4470      	add	r0, lr
9001edf6:	4543      	cmp	r3, r8
9001edf8:	f4ff af73 	bcc.w	9001ece2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001edfc:	fa1f fc89 	uxth.w	ip, r9
9001ee00:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001ee04:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001ee06:	eba4 040c 	sub.w	r4, r4, ip
9001ee0a:	881b      	ldrh	r3, [r3, #0]
9001ee0c:	b2a4      	uxth	r4, r4
9001ee0e:	eba3 0309 	sub.w	r3, r3, r9
9001ee12:	2c00      	cmp	r4, #0
9001ee14:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ee18:	bf18      	it	ne
9001ee1a:	f04f 0c00 	movne.w	ip, #0
9001ee1e:	e760      	b.n	9001ece2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001ee20:	4b03      	ldr	r3, [pc, #12]	@ (9001ee30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001ee22:	6818      	ldr	r0, [r3, #0]
9001ee24:	6803      	ldr	r3, [r0, #0]
9001ee26:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001ee28:	4798      	blx	r3
9001ee2a:	b00f      	add	sp, #60	@ 0x3c
9001ee2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ee30:	24021864 	.word	0x24021864
9001ee34:	2402185e 	.word	0x2402185e

9001ee38 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001ee38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ee3c:	b093      	sub	sp, #76	@ 0x4c
9001ee3e:	461c      	mov	r4, r3
9001ee40:	9205      	str	r2, [sp, #20]
9001ee42:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
9001ee46:	9101      	str	r1, [sp, #4]
9001ee48:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9001ee4a:	9202      	str	r2, [sp, #8]
9001ee4c:	2a00      	cmp	r2, #0
9001ee4e:	f000 812e 	beq.w	9001f0ae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
9001ee52:	6820      	ldr	r0, [r4, #0]
9001ee54:	aa0e      	add	r2, sp, #56	@ 0x38
9001ee56:	6861      	ldr	r1, [r4, #4]
9001ee58:	c203      	stmia	r2!, {r0, r1}
9001ee5a:	6818      	ldr	r0, [r3, #0]
9001ee5c:	aa10      	add	r2, sp, #64	@ 0x40
9001ee5e:	6859      	ldr	r1, [r3, #4]
9001ee60:	c203      	stmia	r2!, {r0, r1}
9001ee62:	a80e      	add	r0, sp, #56	@ 0x38
9001ee64:	f7f7 ff1c 	bl	90016ca0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ee68:	4621      	mov	r1, r4
9001ee6a:	a810      	add	r0, sp, #64	@ 0x40
9001ee6c:	f7f7 ff5c 	bl	90016d28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ee70:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
9001ee74:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
9001ee78:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001ee7c:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
9001ee80:	bfdb      	ittet	le
9001ee82:	b2b3      	uxthle	r3, r6
9001ee84:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001ee88:	2301      	movgt	r3, #1
9001ee8a:	fb92 f3f3 	sdivle	r3, r2, r3
9001ee8e:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9001ee92:	441d      	add	r5, r3
9001ee94:	fb92 f1f3 	sdiv	r1, r2, r3
9001ee98:	fa1f fc81 	uxth.w	ip, r1
9001ee9c:	3d01      	subs	r5, #1
9001ee9e:	fb0c 2413 	mls	r4, ip, r3, r2
9001eea2:	4661      	mov	r1, ip
9001eea4:	fb14 f406 	smulbb	r4, r4, r6
9001eea8:	4404      	add	r4, r0
9001eeaa:	fb95 f5f3 	sdiv	r5, r5, r3
9001eeae:	b2a4      	uxth	r4, r4
9001eeb0:	b131      	cbz	r1, 9001eec0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
9001eeb2:	9b05      	ldr	r3, [sp, #20]
9001eeb4:	9901      	ldr	r1, [sp, #4]
9001eeb6:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001eeba:	ba1b      	rev	r3, r3
9001eebc:	4419      	add	r1, r3
9001eebe:	9101      	str	r1, [sp, #4]
9001eec0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
9001eec4:	b2ad      	uxth	r5, r5
9001eec6:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
9001eeca:	4418      	add	r0, r3
9001eecc:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
9001eed0:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
9001eed4:	00ad      	lsls	r5, r5, #2
9001eed6:	441a      	add	r2, r3
9001eed8:	4b76      	ldr	r3, [pc, #472]	@ (9001f0b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001eeda:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
9001eede:	6818      	ldr	r0, [r3, #0]
9001eee0:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
9001eee4:	6803      	ldr	r3, [r0, #0]
9001eee6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001eee8:	4798      	blx	r3
9001eeea:	4973      	ldr	r1, [pc, #460]	@ (9001f0b8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
9001eeec:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
9001eef0:	2c00      	cmp	r4, #0
9001eef2:	880b      	ldrh	r3, [r1, #0]
9001eef4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9001eef8:	910d      	str	r1, [sp, #52]	@ 0x34
9001eefa:	fb03 c202 	mla	r2, r3, r2, ip
9001eefe:	bf08      	it	eq
9001ef00:	46dc      	moveq	ip, fp
9001ef02:	fb03 f306 	mul.w	r3, r3, r6
9001ef06:	bf18      	it	ne
9001ef08:	f04f 0c00 	movne.w	ip, #0
9001ef0c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001ef10:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001ef14:	fa1f fc8c 	uxth.w	ip, ip
9001ef18:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001ef1c:	9106      	str	r1, [sp, #24]
9001ef1e:	9308      	str	r3, [sp, #32]
9001ef20:	1d2b      	adds	r3, r5, #4
9001ef22:	9309      	str	r3, [sp, #36]	@ 0x24
9001ef24:	9b02      	ldr	r3, [sp, #8]
9001ef26:	43da      	mvns	r2, r3
9001ef28:	2300      	movs	r3, #0
9001ef2a:	b2d2      	uxtb	r2, r2
9001ef2c:	9303      	str	r3, [sp, #12]
9001ef2e:	9207      	str	r2, [sp, #28]
9001ef30:	9a08      	ldr	r2, [sp, #32]
9001ef32:	4282      	cmp	r2, r0
9001ef34:	f240 80b6 	bls.w	9001f0a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
9001ef38:	b963      	cbnz	r3, 9001ef54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001ef3a:	9b01      	ldr	r3, [sp, #4]
9001ef3c:	781a      	ldrb	r2, [r3, #0]
9001ef3e:	0993      	lsrs	r3, r2, #6
9001ef40:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001ef44:	9203      	str	r2, [sp, #12]
9001ef46:	1e5a      	subs	r2, r3, #1
9001ef48:	2a02      	cmp	r2, #2
9001ef4a:	d815      	bhi.n	9001ef78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
9001ef4c:	9a01      	ldr	r2, [sp, #4]
9001ef4e:	b29b      	uxth	r3, r3
9001ef50:	3201      	adds	r2, #1
9001ef52:	9201      	str	r2, [sp, #4]
9001ef54:	b1b4      	cbz	r4, 9001ef84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
9001ef56:	429c      	cmp	r4, r3
9001ef58:	bf91      	iteee	ls
9001ef5a:	1b1c      	subls	r4, r3, r4
9001ef5c:	1ae4      	subhi	r4, r4, r3
9001ef5e:	4666      	movhi	r6, ip
9001ef60:	f04f 0800 	movhi.w	r8, #0
9001ef64:	bf9b      	ittet	ls
9001ef66:	fa1f f884 	uxthls.w	r8, r4
9001ef6a:	2400      	movls	r4, #0
9001ef6c:	b2a4      	uxthhi	r4, r4
9001ef6e:	fa1f f68b 	uxthls.w	r6, fp
9001ef72:	4643      	mov	r3, r8
9001ef74:	46b4      	mov	ip, r6
9001ef76:	e7db      	b.n	9001ef30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
9001ef78:	9a01      	ldr	r2, [sp, #4]
9001ef7a:	9b01      	ldr	r3, [sp, #4]
9001ef7c:	3202      	adds	r2, #2
9001ef7e:	785b      	ldrb	r3, [r3, #1]
9001ef80:	9201      	str	r2, [sp, #4]
9001ef82:	e7e7      	b.n	9001ef54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001ef84:	2203      	movs	r2, #3
9001ef86:	9909      	ldr	r1, [sp, #36]	@ 0x24
9001ef88:	4563      	cmp	r3, ip
9001ef8a:	4615      	mov	r5, r2
9001ef8c:	9a03      	ldr	r2, [sp, #12]
9001ef8e:	bf2c      	ite	cs
9001ef90:	eba3 080c 	subcs.w	r8, r3, ip
9001ef94:	ebac 0603 	subcc.w	r6, ip, r3
9001ef98:	fb15 1202 	smlabb	r2, r5, r2, r1
9001ef9c:	9905      	ldr	r1, [sp, #20]
9001ef9e:	bf24      	itt	cs
9001efa0:	fa1f f888 	uxthcs.w	r8, r8
9001efa4:	46e1      	movcs	r9, ip
9001efa6:	eb01 0502 	add.w	r5, r1, r2
9001efaa:	9902      	ldr	r1, [sp, #8]
9001efac:	bf2f      	iteee	cs
9001efae:	4626      	movcs	r6, r4
9001efb0:	b2b6      	uxthcc	r6, r6
9001efb2:	4699      	movcc	r9, r3
9001efb4:	46a0      	movcc	r8, r4
9001efb6:	29ff      	cmp	r1, #255	@ 0xff
9001efb8:	d04a      	beq.n	9001f050 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
9001efba:	9f06      	ldr	r7, [sp, #24]
9001efbc:	46ca      	mov	sl, r9
9001efbe:	78a9      	ldrb	r1, [r5, #2]
9001efc0:	9004      	str	r0, [sp, #16]
9001efc2:	4379      	muls	r1, r7
9001efc4:	910a      	str	r1, [sp, #40]	@ 0x28
9001efc6:	7869      	ldrb	r1, [r5, #1]
9001efc8:	4379      	muls	r1, r7
9001efca:	910b      	str	r1, [sp, #44]	@ 0x2c
9001efcc:	9905      	ldr	r1, [sp, #20]
9001efce:	5c8a      	ldrb	r2, [r1, r2]
9001efd0:	437a      	muls	r2, r7
9001efd2:	920c      	str	r2, [sp, #48]	@ 0x30
9001efd4:	f1ba 0f00 	cmp.w	sl, #0
9001efd8:	d03d      	beq.n	9001f056 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
9001efda:	9a04      	ldr	r2, [sp, #16]
9001efdc:	f10a 3aff 	add.w	sl, sl, #4294967295
9001efe0:	9f07      	ldr	r7, [sp, #28]
9001efe2:	8812      	ldrh	r2, [r2, #0]
9001efe4:	fa1f fa8a 	uxth.w	sl, sl
9001efe8:	46be      	mov	lr, r7
9001efea:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
9001efec:	1215      	asrs	r5, r2, #8
9001efee:	10d1      	asrs	r1, r2, #3
9001eff0:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9001eff4:	00d2      	lsls	r2, r2, #3
9001eff6:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9001effa:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001effe:	b2d2      	uxtb	r2, r2
9001f000:	fb05 750e 	mla	r5, r5, lr, r7
9001f004:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001f008:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
9001f00a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001f00e:	b2ad      	uxth	r5, r5
9001f010:	fb01 710e 	mla	r1, r1, lr, r7
9001f014:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
9001f016:	fb02 720e 	mla	r2, r2, lr, r7
9001f01a:	f105 0e01 	add.w	lr, r5, #1
9001f01e:	b289      	uxth	r1, r1
9001f020:	b292      	uxth	r2, r2
9001f022:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001f026:	f102 0e01 	add.w	lr, r2, #1
9001f02a:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9001f02e:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
9001f032:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001f036:	4315      	orrs	r5, r2
9001f038:	1c4a      	adds	r2, r1, #1
9001f03a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001f03e:	9a04      	ldr	r2, [sp, #16]
9001f040:	0949      	lsrs	r1, r1, #5
9001f042:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001f046:	430d      	orrs	r5, r1
9001f048:	f822 5b02 	strh.w	r5, [r2], #2
9001f04c:	9204      	str	r2, [sp, #16]
9001f04e:	e7c1      	b.n	9001efd4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
9001f050:	4649      	mov	r1, r9
9001f052:	4686      	mov	lr, r0
9001f054:	b999      	cbnz	r1, 9001f07e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
9001f056:	4563      	cmp	r3, ip
9001f058:	eb00 0049 	add.w	r0, r0, r9, lsl #1
9001f05c:	d389      	bcc.n	9001ef72 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001f05e:	fa1f f68b 	uxth.w	r6, fp
9001f062:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
9001f066:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001f068:	1ba4      	subs	r4, r4, r6
9001f06a:	881b      	ldrh	r3, [r3, #0]
9001f06c:	b2a4      	uxth	r4, r4
9001f06e:	eba3 030b 	sub.w	r3, r3, fp
9001f072:	2c00      	cmp	r4, #0
9001f074:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001f078:	bf18      	it	ne
9001f07a:	2600      	movne	r6, #0
9001f07c:	e779      	b.n	9001ef72 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001f07e:	78aa      	ldrb	r2, [r5, #2]
9001f080:	3901      	subs	r1, #1
9001f082:	4f0e      	ldr	r7, [pc, #56]	@ (9001f0bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
9001f084:	b289      	uxth	r1, r1
9001f086:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
9001f08a:	786a      	ldrb	r2, [r5, #1]
9001f08c:	00d2      	lsls	r2, r2, #3
9001f08e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001f092:	ea4a 0202 	orr.w	r2, sl, r2
9001f096:	f895 a000 	ldrb.w	sl, [r5]
9001f09a:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
9001f09e:	f82e 2b02 	strh.w	r2, [lr], #2
9001f0a2:	e7d7      	b.n	9001f054 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
9001f0a4:	4b03      	ldr	r3, [pc, #12]	@ (9001f0b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001f0a6:	6818      	ldr	r0, [r3, #0]
9001f0a8:	6803      	ldr	r3, [r0, #0]
9001f0aa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001f0ac:	4798      	blx	r3
9001f0ae:	b013      	add	sp, #76	@ 0x4c
9001f0b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f0b4:	24021864 	.word	0x24021864
9001f0b8:	2402185e 	.word	0x2402185e
9001f0bc:	fffff800 	.word	0xfffff800

9001f0c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001f0c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f0c4:	b09d      	sub	sp, #116	@ 0x74
9001f0c6:	461c      	mov	r4, r3
9001f0c8:	4683      	mov	fp, r0
9001f0ca:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9001f0cc:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
9001f0d0:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
9001f0d4:	920e      	str	r2, [sp, #56]	@ 0x38
9001f0d6:	2a00      	cmp	r2, #0
9001f0d8:	f000 81e4 	beq.w	9001f4a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
9001f0dc:	6820      	ldr	r0, [r4, #0]
9001f0de:	aa18      	add	r2, sp, #96	@ 0x60
9001f0e0:	6861      	ldr	r1, [r4, #4]
9001f0e2:	c203      	stmia	r2!, {r0, r1}
9001f0e4:	6818      	ldr	r0, [r3, #0]
9001f0e6:	aa1a      	add	r2, sp, #104	@ 0x68
9001f0e8:	6859      	ldr	r1, [r3, #4]
9001f0ea:	c203      	stmia	r2!, {r0, r1}
9001f0ec:	a818      	add	r0, sp, #96	@ 0x60
9001f0ee:	f7f7 fdd7 	bl	90016ca0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f0f2:	4621      	mov	r1, r4
9001f0f4:	a81a      	add	r0, sp, #104	@ 0x68
9001f0f6:	f7f7 fe17 	bl	90016d28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f0fa:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
9001f0fe:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
9001f102:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001f106:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
9001f10a:	bfdb      	ittet	le
9001f10c:	b29a      	uxthle	r2, r3
9001f10e:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001f112:	2201      	movgt	r2, #1
9001f114:	fb91 f2f2 	sdivle	r2, r1, r2
9001f118:	9202      	str	r2, [sp, #8]
9001f11a:	9802      	ldr	r0, [sp, #8]
9001f11c:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
9001f120:	9902      	ldr	r1, [sp, #8]
9001f122:	fb92 f0f0 	sdiv	r0, r2, r0
9001f126:	b280      	uxth	r0, r0
9001f128:	440c      	add	r4, r1
9001f12a:	900f      	str	r0, [sp, #60]	@ 0x3c
9001f12c:	3c01      	subs	r4, #1
9001f12e:	9802      	ldr	r0, [sp, #8]
9001f130:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
9001f132:	fb05 2510 	mls	r5, r5, r0, r2
9001f136:	fb94 f4f1 	sdiv	r4, r4, r1
9001f13a:	fb15 f503 	smulbb	r5, r5, r3
9001f13e:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
9001f142:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
9001f146:	3401      	adds	r4, #1
9001f148:	440d      	add	r5, r1
9001f14a:	4419      	add	r1, r3
9001f14c:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
9001f150:	b2a4      	uxth	r4, r4
9001f152:	441a      	add	r2, r3
9001f154:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001f158:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
9001f15c:	00a4      	lsls	r4, r4, #2
9001f15e:	9306      	str	r3, [sp, #24]
9001f160:	b2ad      	uxth	r5, r5
9001f162:	4bb3      	ldr	r3, [pc, #716]	@ (9001f430 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
9001f164:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
9001f168:	6818      	ldr	r0, [r3, #0]
9001f16a:	6803      	ldr	r3, [r0, #0]
9001f16c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f16e:	4798      	blx	r3
9001f170:	4bb0      	ldr	r3, [pc, #704]	@ (9001f434 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
9001f172:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
9001f176:	2d00      	cmp	r5, #0
9001f178:	881a      	ldrh	r2, [r3, #0]
9001f17a:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
9001f17e:	fb02 f606 	mul.w	r6, r2, r6
9001f182:	fb02 7101 	mla	r1, r2, r1, r7
9001f186:	9316      	str	r3, [sp, #88]	@ 0x58
9001f188:	eb00 0841 	add.w	r8, r0, r1, lsl #1
9001f18c:	4baa      	ldr	r3, [pc, #680]	@ (9001f438 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
9001f18e:	bf18      	it	ne
9001f190:	2100      	movne	r1, #0
9001f192:	eb08 0246 	add.w	r2, r8, r6, lsl #1
9001f196:	eba3 030b 	sub.w	r3, r3, fp
9001f19a:	920a      	str	r2, [sp, #40]	@ 0x28
9001f19c:	f104 0204 	add.w	r2, r4, #4
9001f1a0:	9317      	str	r3, [sp, #92]	@ 0x5c
9001f1a2:	9213      	str	r2, [sp, #76]	@ 0x4c
9001f1a4:	9a06      	ldr	r2, [sp, #24]
9001f1a6:	bf08      	it	eq
9001f1a8:	4611      	moveq	r1, r2
9001f1aa:	2200      	movs	r2, #0
9001f1ac:	b289      	uxth	r1, r1
9001f1ae:	920d      	str	r2, [sp, #52]	@ 0x34
9001f1b0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001f1b2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001f1b4:	fa12 f383 	uxtah	r3, r2, r3
9001f1b8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001f1ba:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001f1be:	3304      	adds	r3, #4
9001f1c0:	9308      	str	r3, [sp, #32]
9001f1c2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001f1c4:	4543      	cmp	r3, r8
9001f1c6:	f240 8168 	bls.w	9001f49a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
9001f1ca:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
9001f1ce:	f04f 0e01 	mov.w	lr, #1
9001f1d2:	9a02      	ldr	r2, [sp, #8]
9001f1d4:	9808      	ldr	r0, [sp, #32]
9001f1d6:	fbb5 f3f3 	udiv	r3, r5, r3
9001f1da:	1ad3      	subs	r3, r2, r3
9001f1dc:	7800      	ldrb	r0, [r0, #0]
9001f1de:	b29b      	uxth	r3, r3
9001f1e0:	9010      	str	r0, [sp, #64]	@ 0x40
9001f1e2:	3001      	adds	r0, #1
9001f1e4:	9314      	str	r3, [sp, #80]	@ 0x50
9001f1e6:	9b08      	ldr	r3, [sp, #32]
9001f1e8:	9007      	str	r0, [sp, #28]
9001f1ea:	785a      	ldrb	r2, [r3, #1]
9001f1ec:	789b      	ldrb	r3, [r3, #2]
9001f1ee:	021b      	lsls	r3, r3, #8
9001f1f0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001f1f4:	9a08      	ldr	r2, [sp, #32]
9001f1f6:	78d2      	ldrb	r2, [r2, #3]
9001f1f8:	4313      	orrs	r3, r2
9001f1fa:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001f1fc:	441a      	add	r2, r3
9001f1fe:	1c50      	adds	r0, r2, #1
9001f200:	7852      	ldrb	r2, [r2, #1]
9001f202:	9005      	str	r0, [sp, #20]
9001f204:	0212      	lsls	r2, r2, #8
9001f206:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001f208:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
9001f20c:	5cc3      	ldrb	r3, [r0, r3]
9001f20e:	431a      	orrs	r2, r3
9001f210:	b293      	uxth	r3, r2
9001f212:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
9001f216:	930b      	str	r3, [sp, #44]	@ 0x2c
9001f218:	2300      	movs	r3, #0
9001f21a:	9309      	str	r3, [sp, #36]	@ 0x24
9001f21c:	2301      	movs	r3, #1
9001f21e:	9301      	str	r3, [sp, #4]
9001f220:	9304      	str	r3, [sp, #16]
9001f222:	2300      	movs	r3, #0
9001f224:	9303      	str	r3, [sp, #12]
9001f226:	2d00      	cmp	r5, #0
9001f228:	d07d      	beq.n	9001f326 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
9001f22a:	45ae      	cmp	lr, r5
9001f22c:	d26c      	bcs.n	9001f308 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
9001f22e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001f230:	eba5 050e 	sub.w	r5, r5, lr
9001f234:	460c      	mov	r4, r1
9001f236:	4543      	cmp	r3, r8
9001f238:	b2ad      	uxth	r5, r5
9001f23a:	d802      	bhi.n	9001f242 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
9001f23c:	e071      	b.n	9001f322 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
9001f23e:	2b00      	cmp	r3, #0
9001f240:	d15d      	bne.n	9001f2fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
9001f242:	9b05      	ldr	r3, [sp, #20]
9001f244:	9a04      	ldr	r2, [sp, #16]
9001f246:	785b      	ldrb	r3, [r3, #1]
9001f248:	f1c2 0207 	rsb	r2, r2, #7
9001f24c:	9904      	ldr	r1, [sp, #16]
9001f24e:	4093      	lsls	r3, r2
9001f250:	005b      	lsls	r3, r3, #1
9001f252:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001f256:	9b05      	ldr	r3, [sp, #20]
9001f258:	781b      	ldrb	r3, [r3, #0]
9001f25a:	410b      	asrs	r3, r1
9001f25c:	3101      	adds	r1, #1
9001f25e:	b2c9      	uxtb	r1, r1
9001f260:	b2db      	uxtb	r3, r3
9001f262:	2908      	cmp	r1, #8
9001f264:	9104      	str	r1, [sp, #16]
9001f266:	9905      	ldr	r1, [sp, #20]
9001f268:	ea43 0302 	orr.w	r3, r3, r2
9001f26c:	bf0c      	ite	eq
9001f26e:	3102      	addeq	r1, #2
9001f270:	3101      	addne	r1, #1
9001f272:	b29a      	uxth	r2, r3
9001f274:	bf05      	ittet	eq
9001f276:	9105      	streq	r1, [sp, #20]
9001f278:	2100      	moveq	r1, #0
9001f27a:	9105      	strne	r1, [sp, #20]
9001f27c:	9104      	streq	r1, [sp, #16]
9001f27e:	9910      	ldr	r1, [sp, #64]	@ 0x40
9001f280:	4291      	cmp	r1, r2
9001f282:	d30a      	bcc.n	9001f29a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
9001f284:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
9001f288:	2301      	movs	r3, #1
9001f28a:	9907      	ldr	r1, [sp, #28]
9001f28c:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
9001f290:	d30f      	bcc.n	9001f2b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001f292:	2100      	movs	r1, #0
9001f294:	9301      	str	r3, [sp, #4]
9001f296:	9103      	str	r1, [sp, #12]
9001f298:	e032      	b.n	9001f300 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
9001f29a:	9b07      	ldr	r3, [sp, #28]
9001f29c:	429a      	cmp	r2, r3
9001f29e:	d318      	bcc.n	9001f2d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
9001f2a0:	9b01      	ldr	r3, [sp, #4]
9001f2a2:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
9001f2a6:	445b      	add	r3, fp
9001f2a8:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
9001f2ac:	9b01      	ldr	r3, [sp, #4]
9001f2ae:	3301      	adds	r3, #1
9001f2b0:	b29b      	uxth	r3, r3
9001f2b2:	9907      	ldr	r1, [sp, #28]
9001f2b4:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
9001f2b8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001f2bc:	7108      	strb	r0, [r1, #4]
9001f2be:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9001f2c0:	80c8      	strh	r0, [r1, #6]
9001f2c2:	9801      	ldr	r0, [sp, #4]
9001f2c4:	3001      	adds	r0, #1
9001f2c6:	7148      	strb	r0, [r1, #5]
9001f2c8:	9907      	ldr	r1, [sp, #28]
9001f2ca:	3101      	adds	r1, #1
9001f2cc:	b289      	uxth	r1, r1
9001f2ce:	9107      	str	r1, [sp, #28]
9001f2d0:	e7df      	b.n	9001f292 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
9001f2d2:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
9001f2d6:	4611      	mov	r1, r2
9001f2d8:	795b      	ldrb	r3, [r3, #5]
9001f2da:	f603 0004 	addw	r0, r3, #2052	@ 0x804
9001f2de:	4458      	add	r0, fp
9001f2e0:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
9001f2e2:	4406      	add	r6, r0
9001f2e4:	2e00      	cmp	r6, #0
9001f2e6:	dd06      	ble.n	9001f2f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001f2e8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001f2ec:	790e      	ldrb	r6, [r1, #4]
9001f2ee:	f800 6d01 	strb.w	r6, [r0, #-1]!
9001f2f2:	88c9      	ldrh	r1, [r1, #6]
9001f2f4:	e7f4      	b.n	9001f2e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
9001f2f6:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
9001f2fa:	b29b      	uxth	r3, r3
9001f2fc:	e7c5      	b.n	9001f28a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
9001f2fe:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001f300:	4621      	mov	r1, r4
9001f302:	920b      	str	r2, [sp, #44]	@ 0x2c
9001f304:	469e      	mov	lr, r3
9001f306:	e78e      	b.n	9001f226 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
9001f308:	9a03      	ldr	r2, [sp, #12]
9001f30a:	ebae 0305 	sub.w	r3, lr, r5
9001f30e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001f312:	442a      	add	r2, r5
9001f314:	b29b      	uxth	r3, r3
9001f316:	b292      	uxth	r2, r2
9001f318:	9203      	str	r2, [sp, #12]
9001f31a:	2500      	movs	r5, #0
9001f31c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001f31e:	4542      	cmp	r2, r8
9001f320:	d88d      	bhi.n	9001f23e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
9001f322:	4621      	mov	r1, r4
9001f324:	e74d      	b.n	9001f1c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
9001f326:	458e      	cmp	lr, r1
9001f328:	f04f 0900 	mov.w	r9, #0
9001f32c:	bf2b      	itete	cs
9001f32e:	ebae 0301 	subcs.w	r3, lr, r1
9001f332:	eba1 040e 	subcc.w	r4, r1, lr
9001f336:	462c      	movcs	r4, r5
9001f338:	462b      	movcc	r3, r5
9001f33a:	bf27      	ittee	cs
9001f33c:	b29b      	uxthcs	r3, r3
9001f33e:	910c      	strcs	r1, [sp, #48]	@ 0x30
9001f340:	b2a4      	uxthcc	r4, r4
9001f342:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
9001f346:	9a03      	ldr	r2, [sp, #12]
9001f348:	980c      	ldr	r0, [sp, #48]	@ 0x30
9001f34a:	444a      	add	r2, r9
9001f34c:	4548      	cmp	r0, r9
9001f34e:	b292      	uxth	r2, r2
9001f350:	d074      	beq.n	9001f43c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
9001f352:	2004      	movs	r0, #4
9001f354:	445a      	add	r2, fp
9001f356:	4605      	mov	r5, r0
9001f358:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
9001f35c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001f35e:	fb15 0202 	smlabb	r2, r5, r2, r0
9001f362:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001f364:	5880      	ldr	r0, [r0, r2]
9001f366:	ea5f 6a10 	movs.w	sl, r0, lsr #24
9001f36a:	d014      	beq.n	9001f396 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001f36c:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001f370:	ea4f 2510 	mov.w	r5, r0, lsr #8
9001f374:	d112      	bne.n	9001f39c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001f376:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9001f378:	2aff      	cmp	r2, #255	@ 0xff
9001f37a:	d10f      	bne.n	9001f39c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001f37c:	0942      	lsrs	r2, r0, #5
9001f37e:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
9001f382:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001f386:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001f38a:	f025 0507 	bic.w	r5, r5, #7
9001f38e:	4315      	orrs	r5, r2
9001f390:	4305      	orrs	r5, r0
9001f392:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
9001f396:	f109 0901 	add.w	r9, r9, #1
9001f39a:	e7d4      	b.n	9001f346 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
9001f39c:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
9001f3a0:	b2ed      	uxtb	r5, r5
9001f3a2:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001f3a6:	ea4f 272c 	mov.w	r7, ip, asr #8
9001f3aa:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
9001f3ae:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001f3b2:	f3c0 4607 	ubfx	r6, r0, #16, #8
9001f3b6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001f3ba:	9215      	str	r2, [sp, #84]	@ 0x54
9001f3bc:	fa5f fc8c 	uxtb.w	ip, ip
9001f3c0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9001f3c2:	b2c0      	uxtb	r0, r0
9001f3c4:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001f3c8:	fb02 fa0a 	mul.w	sl, r2, sl
9001f3cc:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
9001f3d0:	f10a 0201 	add.w	r2, sl, #1
9001f3d4:	eb02 222a 	add.w	r2, r2, sl, asr #8
9001f3d8:	1212      	asrs	r2, r2, #8
9001f3da:	fa1f fa82 	uxth.w	sl, r2
9001f3de:	43d2      	mvns	r2, r2
9001f3e0:	fb16 f60a 	smulbb	r6, r6, sl
9001f3e4:	b2d2      	uxtb	r2, r2
9001f3e6:	fb10 f00a 	smulbb	r0, r0, sl
9001f3ea:	fb07 6702 	mla	r7, r7, r2, r6
9001f3ee:	9e15      	ldr	r6, [sp, #84]	@ 0x54
9001f3f0:	fb0c 0002 	mla	r0, ip, r2, r0
9001f3f4:	fb15 f50a 	smulbb	r5, r5, sl
9001f3f8:	b2bf      	uxth	r7, r7
9001f3fa:	b280      	uxth	r0, r0
9001f3fc:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001f400:	fb06 5602 	mla	r6, r6, r2, r5
9001f404:	1c7a      	adds	r2, r7, #1
9001f406:	1c45      	adds	r5, r0, #1
9001f408:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001f40c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001f410:	b2b6      	uxth	r6, r6
9001f412:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001f416:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001f41a:	432f      	orrs	r7, r5
9001f41c:	1c75      	adds	r5, r6, #1
9001f41e:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001f422:	096d      	lsrs	r5, r5, #5
9001f424:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001f428:	432f      	orrs	r7, r5
9001f42a:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
9001f42e:	e7b2      	b.n	9001f396 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001f430:	24021864 	.word	0x24021864
9001f434:	2402185e 	.word	0x2402185e
9001f438:	fffff7fb 	.word	0xfffff7fb
9001f43c:	9203      	str	r2, [sp, #12]
9001f43e:	458e      	cmp	lr, r1
9001f440:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9001f442:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001f446:	f4ff af68 	bcc.w	9001f31a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
9001f44a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
9001f44c:	9906      	ldr	r1, [sp, #24]
9001f44e:	8812      	ldrh	r2, [r2, #0]
9001f450:	1a52      	subs	r2, r2, r1
9001f452:	9914      	ldr	r1, [sp, #80]	@ 0x50
9001f454:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001f458:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001f45a:	3201      	adds	r2, #1
9001f45c:	428a      	cmp	r2, r1
9001f45e:	9209      	str	r2, [sp, #36]	@ 0x24
9001f460:	d111      	bne.n	9001f486 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
9001f462:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
9001f466:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
9001f46a:	9b06      	ldr	r3, [sp, #24]
9001f46c:	eba5 0509 	sub.w	r5, r5, r9
9001f470:	b2ad      	uxth	r5, r5
9001f472:	2d00      	cmp	r5, #0
9001f474:	bf08      	it	eq
9001f476:	4619      	moveq	r1, r3
9001f478:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001f47a:	bf18      	it	ne
9001f47c:	2100      	movne	r1, #0
9001f47e:	3301      	adds	r3, #1
9001f480:	b289      	uxth	r1, r1
9001f482:	930d      	str	r3, [sp, #52]	@ 0x34
9001f484:	e694      	b.n	9001f1b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
9001f486:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001f48a:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
9001f48e:	1b2d      	subs	r5, r5, r4
9001f490:	b2ad      	uxth	r5, r5
9001f492:	2d00      	cmp	r5, #0
9001f494:	bf18      	it	ne
9001f496:	2400      	movne	r4, #0
9001f498:	e740      	b.n	9001f31c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
9001f49a:	4b04      	ldr	r3, [pc, #16]	@ (9001f4ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
9001f49c:	6818      	ldr	r0, [r3, #0]
9001f49e:	6803      	ldr	r3, [r0, #0]
9001f4a0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001f4a2:	4798      	blx	r3
9001f4a4:	b01d      	add	sp, #116	@ 0x74
9001f4a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f4aa:	bf00      	nop
9001f4ac:	24021864 	.word	0x24021864

9001f4b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001f4b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f4b4:	b09f      	sub	sp, #124	@ 0x7c
9001f4b6:	461d      	mov	r5, r3
9001f4b8:	4604      	mov	r4, r0
9001f4ba:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9001f4bc:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
9001f4c0:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
9001f4c4:	920a      	str	r2, [sp, #40]	@ 0x28
9001f4c6:	2a00      	cmp	r2, #0
9001f4c8:	f000 81fe 	beq.w	9001f8c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
9001f4cc:	6828      	ldr	r0, [r5, #0]
9001f4ce:	aa1a      	add	r2, sp, #104	@ 0x68
9001f4d0:	6869      	ldr	r1, [r5, #4]
9001f4d2:	c203      	stmia	r2!, {r0, r1}
9001f4d4:	6818      	ldr	r0, [r3, #0]
9001f4d6:	aa1c      	add	r2, sp, #112	@ 0x70
9001f4d8:	6859      	ldr	r1, [r3, #4]
9001f4da:	c203      	stmia	r2!, {r0, r1}
9001f4dc:	a81a      	add	r0, sp, #104	@ 0x68
9001f4de:	f7f7 fbdf 	bl	90016ca0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f4e2:	4629      	mov	r1, r5
9001f4e4:	a81c      	add	r0, sp, #112	@ 0x70
9001f4e6:	f7f7 fc1f 	bl	90016d28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f4ea:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001f4ee:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
9001f4f2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001f4f6:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
9001f4fa:	bfdb      	ittet	le
9001f4fc:	b29a      	uxthle	r2, r3
9001f4fe:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001f502:	2201      	movgt	r2, #1
9001f504:	fb91 f2f2 	sdivle	r2, r1, r2
9001f508:	9201      	str	r2, [sp, #4]
9001f50a:	9801      	ldr	r0, [sp, #4]
9001f50c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
9001f510:	9901      	ldr	r1, [sp, #4]
9001f512:	fb92 f0f0 	sdiv	r0, r2, r0
9001f516:	b280      	uxth	r0, r0
9001f518:	440e      	add	r6, r1
9001f51a:	9010      	str	r0, [sp, #64]	@ 0x40
9001f51c:	3e01      	subs	r6, #1
9001f51e:	9801      	ldr	r0, [sp, #4]
9001f520:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9001f522:	fb05 2510 	mls	r5, r5, r0, r2
9001f526:	fb96 f6f1 	sdiv	r6, r6, r1
9001f52a:	fb15 f503 	smulbb	r5, r5, r3
9001f52e:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
9001f532:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
9001f536:	3601      	adds	r6, #1
9001f538:	440d      	add	r5, r1
9001f53a:	4419      	add	r1, r3
9001f53c:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
9001f540:	b2b6      	uxth	r6, r6
9001f542:	441a      	add	r2, r3
9001f544:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
9001f548:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
9001f54c:	b2ad      	uxth	r5, r5
9001f54e:	9304      	str	r3, [sp, #16]
9001f550:	4b96      	ldr	r3, [pc, #600]	@ (9001f7ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001f552:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
9001f556:	6818      	ldr	r0, [r3, #0]
9001f558:	6803      	ldr	r3, [r0, #0]
9001f55a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f55c:	4798      	blx	r3
9001f55e:	4b94      	ldr	r3, [pc, #592]	@ (9001f7b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
9001f560:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
9001f564:	2d00      	cmp	r5, #0
9001f566:	881a      	ldrh	r2, [r3, #0]
9001f568:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
9001f56c:	fb02 f707 	mul.w	r7, r2, r7
9001f570:	fb02 c101 	mla	r1, r2, r1, ip
9001f574:	9318      	str	r3, [sp, #96]	@ 0x60
9001f576:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
9001f57a:	4b8e      	ldr	r3, [pc, #568]	@ (9001f7b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
9001f57c:	bf18      	it	ne
9001f57e:	2100      	movne	r1, #0
9001f580:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
9001f584:	eba3 0304 	sub.w	r3, r3, r4
9001f588:	920b      	str	r2, [sp, #44]	@ 0x2c
9001f58a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001f58c:	9319      	str	r3, [sp, #100]	@ 0x64
9001f58e:	eb02 0686 	add.w	r6, r2, r6, lsl #2
9001f592:	f106 0204 	add.w	r2, r6, #4
9001f596:	9206      	str	r2, [sp, #24]
9001f598:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001f59a:	ea6f 0202 	mvn.w	r2, r2
9001f59e:	b2d2      	uxtb	r2, r2
9001f5a0:	9215      	str	r2, [sp, #84]	@ 0x54
9001f5a2:	9a04      	ldr	r2, [sp, #16]
9001f5a4:	bf08      	it	eq
9001f5a6:	4611      	moveq	r1, r2
9001f5a8:	2200      	movs	r2, #0
9001f5aa:	b289      	uxth	r1, r1
9001f5ac:	920d      	str	r2, [sp, #52]	@ 0x34
9001f5ae:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001f5b0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001f5b2:	fa12 f383 	uxtah	r3, r2, r3
9001f5b6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001f5b8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001f5bc:	3304      	adds	r3, #4
9001f5be:	9307      	str	r3, [sp, #28]
9001f5c0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001f5c2:	455b      	cmp	r3, fp
9001f5c4:	f240 817b 	bls.w	9001f8be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
9001f5c8:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
9001f5cc:	f04f 0801 	mov.w	r8, #1
9001f5d0:	9a01      	ldr	r2, [sp, #4]
9001f5d2:	9807      	ldr	r0, [sp, #28]
9001f5d4:	46c4      	mov	ip, r8
9001f5d6:	f8cd 8008 	str.w	r8, [sp, #8]
9001f5da:	7800      	ldrb	r0, [r0, #0]
9001f5dc:	fbb5 f3f3 	udiv	r3, r5, r3
9001f5e0:	1ad3      	subs	r3, r2, r3
9001f5e2:	9011      	str	r0, [sp, #68]	@ 0x44
9001f5e4:	3001      	adds	r0, #1
9001f5e6:	b29b      	uxth	r3, r3
9001f5e8:	9005      	str	r0, [sp, #20]
9001f5ea:	9316      	str	r3, [sp, #88]	@ 0x58
9001f5ec:	9b07      	ldr	r3, [sp, #28]
9001f5ee:	785a      	ldrb	r2, [r3, #1]
9001f5f0:	789b      	ldrb	r3, [r3, #2]
9001f5f2:	021b      	lsls	r3, r3, #8
9001f5f4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001f5f8:	9a07      	ldr	r2, [sp, #28]
9001f5fa:	78d2      	ldrb	r2, [r2, #3]
9001f5fc:	4313      	orrs	r3, r2
9001f5fe:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001f600:	441a      	add	r2, r3
9001f602:	1c50      	adds	r0, r2, #1
9001f604:	7852      	ldrb	r2, [r2, #1]
9001f606:	9003      	str	r0, [sp, #12]
9001f608:	0212      	lsls	r2, r2, #8
9001f60a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001f60c:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
9001f610:	5cc3      	ldrb	r3, [r0, r3]
9001f612:	431a      	orrs	r2, r3
9001f614:	b293      	uxth	r3, r2
9001f616:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
9001f61a:	930c      	str	r3, [sp, #48]	@ 0x30
9001f61c:	2300      	movs	r3, #0
9001f61e:	9308      	str	r3, [sp, #32]
9001f620:	461a      	mov	r2, r3
9001f622:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001f626:	930e      	str	r3, [sp, #56]	@ 0x38
9001f628:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001f62c:	930f      	str	r3, [sp, #60]	@ 0x3c
9001f62e:	2d00      	cmp	r5, #0
9001f630:	d07d      	beq.n	9001f72e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
9001f632:	45ac      	cmp	ip, r5
9001f634:	d26d      	bcs.n	9001f712 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
9001f636:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001f638:	eba5 050c 	sub.w	r5, r5, ip
9001f63c:	4608      	mov	r0, r1
9001f63e:	455b      	cmp	r3, fp
9001f640:	b2ad      	uxth	r5, r5
9001f642:	d802      	bhi.n	9001f64a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
9001f644:	e071      	b.n	9001f72a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
9001f646:	2b00      	cmp	r3, #0
9001f648:	d15d      	bne.n	9001f706 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
9001f64a:	9b03      	ldr	r3, [sp, #12]
9001f64c:	9a02      	ldr	r2, [sp, #8]
9001f64e:	785b      	ldrb	r3, [r3, #1]
9001f650:	f1c2 0207 	rsb	r2, r2, #7
9001f654:	9902      	ldr	r1, [sp, #8]
9001f656:	4093      	lsls	r3, r2
9001f658:	005b      	lsls	r3, r3, #1
9001f65a:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001f65e:	9b03      	ldr	r3, [sp, #12]
9001f660:	781b      	ldrb	r3, [r3, #0]
9001f662:	410b      	asrs	r3, r1
9001f664:	3101      	adds	r1, #1
9001f666:	b2c9      	uxtb	r1, r1
9001f668:	b2db      	uxtb	r3, r3
9001f66a:	2908      	cmp	r1, #8
9001f66c:	9102      	str	r1, [sp, #8]
9001f66e:	9903      	ldr	r1, [sp, #12]
9001f670:	ea43 0302 	orr.w	r3, r3, r2
9001f674:	bf0c      	ite	eq
9001f676:	3102      	addeq	r1, #2
9001f678:	3101      	addne	r1, #1
9001f67a:	b29a      	uxth	r2, r3
9001f67c:	bf05      	ittet	eq
9001f67e:	9103      	streq	r1, [sp, #12]
9001f680:	2100      	moveq	r1, #0
9001f682:	9103      	strne	r1, [sp, #12]
9001f684:	9102      	streq	r1, [sp, #8]
9001f686:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001f688:	4291      	cmp	r1, r2
9001f68a:	d30a      	bcc.n	9001f6a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001f68c:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
9001f690:	2301      	movs	r3, #1
9001f692:	9905      	ldr	r1, [sp, #20]
9001f694:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
9001f698:	d30f      	bcc.n	9001f6ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
9001f69a:	2100      	movs	r1, #0
9001f69c:	4698      	mov	r8, r3
9001f69e:	9100      	str	r1, [sp, #0]
9001f6a0:	e032      	b.n	9001f708 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
9001f6a2:	9b05      	ldr	r3, [sp, #20]
9001f6a4:	429a      	cmp	r2, r3
9001f6a6:	d318      	bcc.n	9001f6da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
9001f6a8:	eb04 0308 	add.w	r3, r4, r8
9001f6ac:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
9001f6b0:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
9001f6b4:	f108 0301 	add.w	r3, r8, #1
9001f6b8:	b29b      	uxth	r3, r3
9001f6ba:	9905      	ldr	r1, [sp, #20]
9001f6bc:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
9001f6c0:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001f6c4:	710e      	strb	r6, [r1, #4]
9001f6c6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9001f6c8:	80ce      	strh	r6, [r1, #6]
9001f6ca:	f108 0601 	add.w	r6, r8, #1
9001f6ce:	714e      	strb	r6, [r1, #5]
9001f6d0:	9905      	ldr	r1, [sp, #20]
9001f6d2:	3101      	adds	r1, #1
9001f6d4:	b289      	uxth	r1, r1
9001f6d6:	9105      	str	r1, [sp, #20]
9001f6d8:	e7df      	b.n	9001f69a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
9001f6da:	eb04 0382 	add.w	r3, r4, r2, lsl #2
9001f6de:	4611      	mov	r1, r2
9001f6e0:	795b      	ldrb	r3, [r3, #5]
9001f6e2:	f603 0604 	addw	r6, r3, #2052	@ 0x804
9001f6e6:	4426      	add	r6, r4
9001f6e8:	9f19      	ldr	r7, [sp, #100]	@ 0x64
9001f6ea:	4437      	add	r7, r6
9001f6ec:	2f00      	cmp	r7, #0
9001f6ee:	dd06      	ble.n	9001f6fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
9001f6f0:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001f6f4:	790f      	ldrb	r7, [r1, #4]
9001f6f6:	f806 7d01 	strb.w	r7, [r6, #-1]!
9001f6fa:	88c9      	ldrh	r1, [r1, #6]
9001f6fc:	e7f4      	b.n	9001f6e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
9001f6fe:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
9001f702:	b29b      	uxth	r3, r3
9001f704:	e7c5      	b.n	9001f692 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
9001f706:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9001f708:	920c      	str	r2, [sp, #48]	@ 0x30
9001f70a:	4601      	mov	r1, r0
9001f70c:	9a00      	ldr	r2, [sp, #0]
9001f70e:	469c      	mov	ip, r3
9001f710:	e78d      	b.n	9001f62e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
9001f712:	ebac 0305 	sub.w	r3, ip, r5
9001f716:	1957      	adds	r7, r2, r5
9001f718:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001f71c:	b2ba      	uxth	r2, r7
9001f71e:	b29b      	uxth	r3, r3
9001f720:	9200      	str	r2, [sp, #0]
9001f722:	2500      	movs	r5, #0
9001f724:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001f726:	455a      	cmp	r2, fp
9001f728:	d88d      	bhi.n	9001f646 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
9001f72a:	4601      	mov	r1, r0
9001f72c:	e748      	b.n	9001f5c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
9001f72e:	458c      	cmp	ip, r1
9001f730:	bf27      	ittee	cs
9001f732:	ebac 0301 	subcs.w	r3, ip, r1
9001f736:	4628      	movcs	r0, r5
9001f738:	eba1 000c 	subcc.w	r0, r1, ip
9001f73c:	462b      	movcc	r3, r5
9001f73e:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
9001f740:	bf27      	ittee	cs
9001f742:	b29b      	uxthcs	r3, r3
9001f744:	9109      	strcs	r1, [sp, #36]	@ 0x24
9001f746:	b280      	uxthcc	r0, r0
9001f748:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
9001f74c:	2dff      	cmp	r5, #255	@ 0xff
9001f74e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
9001f750:	eb02 0705 	add.w	r7, r2, r5
9001f754:	b2bd      	uxth	r5, r7
9001f756:	9500      	str	r5, [sp, #0]
9001f758:	d12e      	bne.n	9001f7b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
9001f75a:	465e      	mov	r6, fp
9001f75c:	9d00      	ldr	r5, [sp, #0]
9001f75e:	42aa      	cmp	r2, r5
9001f760:	f040 8083 	bne.w	9001f86a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
9001f764:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001f766:	458c      	cmp	ip, r1
9001f768:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001f76c:	d3d9      	bcc.n	9001f722 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
9001f76e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
9001f770:	9904      	ldr	r1, [sp, #16]
9001f772:	8812      	ldrh	r2, [r2, #0]
9001f774:	1a52      	subs	r2, r2, r1
9001f776:	9916      	ldr	r1, [sp, #88]	@ 0x58
9001f778:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001f77c:	9a08      	ldr	r2, [sp, #32]
9001f77e:	3201      	adds	r2, #1
9001f780:	428a      	cmp	r2, r1
9001f782:	9208      	str	r2, [sp, #32]
9001f784:	f040 8091 	bne.w	9001f8aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
9001f788:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
9001f78c:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
9001f790:	9b04      	ldr	r3, [sp, #16]
9001f792:	eba5 050c 	sub.w	r5, r5, ip
9001f796:	b2ad      	uxth	r5, r5
9001f798:	2d00      	cmp	r5, #0
9001f79a:	bf08      	it	eq
9001f79c:	4619      	moveq	r1, r3
9001f79e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001f7a0:	bf18      	it	ne
9001f7a2:	2100      	movne	r1, #0
9001f7a4:	3301      	adds	r3, #1
9001f7a6:	b289      	uxth	r1, r1
9001f7a8:	930d      	str	r3, [sp, #52]	@ 0x34
9001f7aa:	e700      	b.n	9001f5ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
9001f7ac:	24021864 	.word	0x24021864
9001f7b0:	2402185e 	.word	0x2402185e
9001f7b4:	fffff7fb 	.word	0xfffff7fb
9001f7b8:	46d9      	mov	r9, fp
9001f7ba:	9d00      	ldr	r5, [sp, #0]
9001f7bc:	42aa      	cmp	r2, r5
9001f7be:	d0d1      	beq.n	9001f764 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
9001f7c0:	1c55      	adds	r5, r2, #1
9001f7c2:	4422      	add	r2, r4
9001f7c4:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
9001f7c8:	9a06      	ldr	r2, [sp, #24]
9001f7ca:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001f7ce:	9517      	str	r5, [sp, #92]	@ 0x5c
9001f7d0:	4472      	add	r2, lr
9001f7d2:	9212      	str	r2, [sp, #72]	@ 0x48
9001f7d4:	f8b9 2000 	ldrh.w	r2, [r9]
9001f7d8:	9f12      	ldr	r7, [sp, #72]	@ 0x48
9001f7da:	1216      	asrs	r6, r2, #8
9001f7dc:	f897 a002 	ldrb.w	sl, [r7, #2]
9001f7e0:	10d5      	asrs	r5, r2, #3
9001f7e2:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001f7e4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001f7e8:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001f7ec:	00d2      	lsls	r2, r2, #3
9001f7ee:	fb1a fa07 	smulbb	sl, sl, r7
9001f7f2:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001f7f6:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001f7f8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001f7fc:	b2d2      	uxtb	r2, r2
9001f7fe:	fb06 a607 	mla	r6, r6, r7, sl
9001f802:	9f12      	ldr	r7, [sp, #72]	@ 0x48
9001f804:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001f808:	f897 a001 	ldrb.w	sl, [r7, #1]
9001f80c:	b2b6      	uxth	r6, r6
9001f80e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001f810:	fb1a fa07 	smulbb	sl, sl, r7
9001f814:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001f816:	fb05 a507 	mla	r5, r5, r7, sl
9001f81a:	9f06      	ldr	r7, [sp, #24]
9001f81c:	f106 0a01 	add.w	sl, r6, #1
9001f820:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001f824:	b2ad      	uxth	r5, r5
9001f826:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001f828:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001f82c:	f105 0a01 	add.w	sl, r5, #1
9001f830:	fb1e fe07 	smulbb	lr, lr, r7
9001f834:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001f836:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001f83a:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001f83e:	fb02 e207 	mla	r2, r2, r7, lr
9001f842:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001f846:	b292      	uxth	r2, r2
9001f848:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001f84c:	f102 0e01 	add.w	lr, r2, #1
9001f850:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
9001f854:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
9001f858:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001f85c:	ea4e 0606 	orr.w	r6, lr, r6
9001f860:	ea46 060a 	orr.w	r6, r6, sl
9001f864:	f829 6b02 	strh.w	r6, [r9], #2
9001f868:	e7a7      	b.n	9001f7ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
9001f86a:	f102 0e01 	add.w	lr, r2, #1
9001f86e:	4422      	add	r2, r4
9001f870:	9f06      	ldr	r7, [sp, #24]
9001f872:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
9001f876:	9a06      	ldr	r2, [sp, #24]
9001f878:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001f87c:	eb02 0a05 	add.w	sl, r2, r5
9001f880:	4a13      	ldr	r2, [pc, #76]	@ (9001f8d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
9001f882:	f89a 9002 	ldrb.w	r9, [sl, #2]
9001f886:	ea02 2909 	and.w	r9, r2, r9, lsl #8
9001f88a:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001f88e:	00d2      	lsls	r2, r2, #3
9001f890:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001f894:	ea49 0202 	orr.w	r2, r9, r2
9001f898:	f817 9005 	ldrb.w	r9, [r7, r5]
9001f89c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9001f8a0:	f826 2b02 	strh.w	r2, [r6], #2
9001f8a4:	fa1f f28e 	uxth.w	r2, lr
9001f8a8:	e758      	b.n	9001f75c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
9001f8aa:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001f8ae:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
9001f8b2:	1a2d      	subs	r5, r5, r0
9001f8b4:	b2ad      	uxth	r5, r5
9001f8b6:	2d00      	cmp	r5, #0
9001f8b8:	bf18      	it	ne
9001f8ba:	2000      	movne	r0, #0
9001f8bc:	e732      	b.n	9001f724 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
9001f8be:	4b05      	ldr	r3, [pc, #20]	@ (9001f8d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
9001f8c0:	6818      	ldr	r0, [r3, #0]
9001f8c2:	6803      	ldr	r3, [r0, #0]
9001f8c4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001f8c6:	4798      	blx	r3
9001f8c8:	b01f      	add	sp, #124	@ 0x7c
9001f8ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f8ce:	bf00      	nop
9001f8d0:	fffff800 	.word	0xfffff800
9001f8d4:	24021864 	.word	0x24021864

9001f8d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
9001f8d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f8dc:	b091      	sub	sp, #68	@ 0x44
9001f8de:	469b      	mov	fp, r3
9001f8e0:	4616      	mov	r6, r2
9001f8e2:	f9b3 2000 	ldrsh.w	r2, [r3]
9001f8e6:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
9001f8ea:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9001f8ee:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
9001f8f2:	4604      	mov	r4, r0
9001f8f4:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
9001f8f8:	4640      	mov	r0, r8
9001f8fa:	460d      	mov	r5, r1
9001f8fc:	4659      	mov	r1, fp
9001f8fe:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
9001f902:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
9001f906:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
9001f90a:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
9001f90e:	f7f1 fcb1 	bl	90011274 <_ZN8touchgfx4RectaNERKS0_>
9001f912:	4631      	mov	r1, r6
9001f914:	4640      	mov	r0, r8
9001f916:	f7f1 fcad 	bl	90011274 <_ZN8touchgfx4RectaNERKS0_>
9001f91a:	4b74      	ldr	r3, [pc, #464]	@ (9001faec <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
9001f91c:	8818      	ldrh	r0, [r3, #0]
9001f91e:	4b74      	ldr	r3, [pc, #464]	@ (9001faf0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
9001f920:	b202      	sxth	r2, r0
9001f922:	8819      	ldrh	r1, [r3, #0]
9001f924:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
9001f928:	b20e      	sxth	r6, r1
9001f92a:	2b00      	cmp	r3, #0
9001f92c:	da07      	bge.n	9001f93e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
9001f92e:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
9001f932:	4463      	add	r3, ip
9001f934:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
9001f938:	2300      	movs	r3, #0
9001f93a:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
9001f93e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
9001f942:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
9001f946:	1ad2      	subs	r2, r2, r3
9001f948:	4594      	cmp	ip, r2
9001f94a:	bfc4      	itt	gt
9001f94c:	1ac2      	subgt	r2, r0, r3
9001f94e:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
9001f952:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001f956:	2a00      	cmp	r2, #0
9001f958:	da07      	bge.n	9001f96a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
9001f95a:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
9001f95e:	4462      	add	r2, ip
9001f960:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
9001f964:	2200      	movs	r2, #0
9001f966:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
9001f96a:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
9001f96e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
9001f972:	eba6 060a 	sub.w	r6, r6, sl
9001f976:	42b2      	cmp	r2, r6
9001f978:	bfc4      	itt	gt
9001f97a:	eba1 020a 	subgt.w	r2, r1, sl
9001f97e:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
9001f982:	4a5c      	ldr	r2, [pc, #368]	@ (9001faf4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
9001f984:	7812      	ldrb	r2, [r2, #0]
9001f986:	b9a2      	cbnz	r2, 9001f9b2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
9001f988:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001f98c:	4286      	cmp	r6, r0
9001f98e:	4640      	mov	r0, r8
9001f990:	9303      	str	r3, [sp, #12]
9001f992:	bf14      	ite	ne
9001f994:	2600      	movne	r6, #0
9001f996:	2601      	moveq	r6, #1
9001f998:	f7f1 fcaf 	bl	900112fa <_ZNK8touchgfx4Rect7isEmptyEv>
9001f99c:	9b03      	ldr	r3, [sp, #12]
9001f99e:	b160      	cbz	r0, 9001f9ba <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
9001f9a0:	2300      	movs	r3, #0
9001f9a2:	8023      	strh	r3, [r4, #0]
9001f9a4:	8063      	strh	r3, [r4, #2]
9001f9a6:	80a3      	strh	r3, [r4, #4]
9001f9a8:	4620      	mov	r0, r4
9001f9aa:	80e3      	strh	r3, [r4, #6]
9001f9ac:	b011      	add	sp, #68	@ 0x44
9001f9ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f9b2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
9001f9b6:	428e      	cmp	r6, r1
9001f9b8:	e7e9      	b.n	9001f98e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
9001f9ba:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9001f9be:	a90e      	add	r1, sp, #56	@ 0x38
9001f9c0:	900e      	str	r0, [sp, #56]	@ 0x38
9001f9c2:	a80c      	add	r0, sp, #48	@ 0x30
9001f9c4:	9205      	str	r2, [sp, #20]
9001f9c6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
9001f9ca:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
9001f9ce:	9206      	str	r2, [sp, #24]
9001f9d0:	f8bb 2000 	ldrh.w	r2, [fp]
9001f9d4:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
9001f9d8:	1a9b      	subs	r3, r3, r2
9001f9da:	b21b      	sxth	r3, r3
9001f9dc:	9303      	str	r3, [sp, #12]
9001f9de:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9001f9e2:	f8df b118 	ldr.w	fp, [pc, #280]	@ 9001fafc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001f9e6:	ebaa 0a03 	sub.w	sl, sl, r3
9001f9ea:	fa0f f38a 	sxth.w	r3, sl
9001f9ee:	9304      	str	r3, [sp, #16]
9001f9f0:	9b03      	ldr	r3, [sp, #12]
9001f9f2:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
9001f9f6:	9b04      	ldr	r3, [sp, #16]
9001f9f8:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001f9fc:	9b05      	ldr	r3, [sp, #20]
9001f9fe:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
9001fa02:	9b06      	ldr	r3, [sp, #24]
9001fa04:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
9001fa08:	f7f7 f98e 	bl	90016d28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001fa0c:	4640      	mov	r0, r8
9001fa0e:	f7f7 f947 	bl	90016ca0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fa12:	a80e      	add	r0, sp, #56	@ 0x38
9001fa14:	f7f7 f944 	bl	90016ca0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fa18:	4b37      	ldr	r3, [pc, #220]	@ (9001faf8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
9001fa1a:	4628      	mov	r0, r5
9001fa1c:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
9001fa20:	881b      	ldrh	r3, [r3, #0]
9001fa22:	9307      	str	r3, [sp, #28]
9001fa24:	682b      	ldr	r3, [r5, #0]
9001fa26:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001fa28:	4798      	blx	r3
9001fa2a:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
9001fa2e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
9001fa32:	4681      	mov	r9, r0
9001fa34:	f8db 0000 	ldr.w	r0, [fp]
9001fa38:	fb1a 3305 	smlabb	r3, sl, r5, r3
9001fa3c:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
9001fa3e:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001fa42:	6803      	ldr	r3, [r0, #0]
9001fa44:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
9001fa46:	4798      	blx	r3
9001fa48:	4607      	mov	r7, r0
9001fa4a:	f8db 0000 	ldr.w	r0, [fp]
9001fa4e:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
9001fa52:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001fa56:	6803      	ldr	r3, [r0, #0]
9001fa58:	9109      	str	r1, [sp, #36]	@ 0x24
9001fa5a:	9208      	str	r2, [sp, #32]
9001fa5c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001fa5e:	4798      	blx	r3
9001fa60:	f010 0f01 	tst.w	r0, #1
9001fa64:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001fa68:	d012      	beq.n	9001fa90 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
9001fa6a:	f8db 0000 	ldr.w	r0, [fp]
9001fa6e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
9001fa72:	6803      	ldr	r3, [r0, #0]
9001fa74:	9200      	str	r2, [sp, #0]
9001fa76:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
9001fa78:	462b      	mov	r3, r5
9001fa7a:	e898 0006 	ldmia.w	r8, {r1, r2}
9001fa7e:	47b0      	blx	r6
9001fa80:	9b03      	ldr	r3, [sp, #12]
9001fa82:	8023      	strh	r3, [r4, #0]
9001fa84:	9b04      	ldr	r3, [sp, #16]
9001fa86:	8063      	strh	r3, [r4, #2]
9001fa88:	9b05      	ldr	r3, [sp, #20]
9001fa8a:	80a3      	strh	r3, [r4, #4]
9001fa8c:	9b06      	ldr	r3, [sp, #24]
9001fa8e:	e78b      	b.n	9001f9a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
9001fa90:	fb09 f202 	mul.w	r2, r9, r2
9001fa94:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
9001fa98:	eb02 0141 	add.w	r1, r2, r1, lsl #1
9001fa9c:	440f      	add	r7, r1
9001fa9e:	b166      	cbz	r6, 9001faba <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001faa0:	9a07      	ldr	r2, [sp, #28]
9001faa2:	4592      	cmp	sl, r2
9001faa4:	d109      	bne.n	9001faba <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001faa6:	f8db 0000 	ldr.w	r0, [fp]
9001faaa:	fb09 f303 	mul.w	r3, r9, r3
9001faae:	4629      	mov	r1, r5
9001fab0:	6802      	ldr	r2, [r0, #0]
9001fab2:	6b96      	ldr	r6, [r2, #56]	@ 0x38
9001fab4:	463a      	mov	r2, r7
9001fab6:	47b0      	blx	r6
9001fab8:	e7e2      	b.n	9001fa80 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001faba:	fb0a f303 	mul.w	r3, sl, r3
9001fabe:	ea4f 064a 	mov.w	r6, sl, lsl #1
9001fac2:	f8df b038 	ldr.w	fp, [pc, #56]	@ 9001fafc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001fac6:	eb05 0843 	add.w	r8, r5, r3, lsl #1
9001faca:	4545      	cmp	r5, r8
9001facc:	d2d8      	bcs.n	9001fa80 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001face:	f8db 0000 	ldr.w	r0, [fp]
9001fad2:	4629      	mov	r1, r5
9001fad4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001fad8:	4435      	add	r5, r6
9001fada:	6802      	ldr	r2, [r0, #0]
9001fadc:	005b      	lsls	r3, r3, #1
9001fade:	f8d2 a038 	ldr.w	sl, [r2, #56]	@ 0x38
9001fae2:	463a      	mov	r2, r7
9001fae4:	47d0      	blx	sl
9001fae6:	444f      	add	r7, r9
9001fae8:	e7ef      	b.n	9001faca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
9001faea:	bf00      	nop
9001faec:	24021858 	.word	0x24021858
9001faf0:	2402185a 	.word	0x2402185a
9001faf4:	2402185c 	.word	0x2402185c
9001faf8:	2402185e 	.word	0x2402185e
9001fafc:	24021864 	.word	0x24021864

9001fb00 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
9001fb00:	b5f0      	push	{r4, r5, r6, r7, lr}
9001fb02:	4606      	mov	r6, r0
9001fb04:	b087      	sub	sp, #28
9001fb06:	460c      	mov	r4, r1
9001fb08:	4617      	mov	r7, r2
9001fb0a:	461d      	mov	r5, r3
9001fb0c:	b333      	cbz	r3, 9001fb5c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001fb0e:	4608      	mov	r0, r1
9001fb10:	f7f1 fbf3 	bl	900112fa <_ZNK8touchgfx4Rect7isEmptyEv>
9001fb14:	bb10      	cbnz	r0, 9001fb5c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001fb16:	6820      	ldr	r0, [r4, #0]
9001fb18:	ab04      	add	r3, sp, #16
9001fb1a:	6861      	ldr	r1, [r4, #4]
9001fb1c:	4c1b      	ldr	r4, [pc, #108]	@ (9001fb8c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
9001fb1e:	c303      	stmia	r3!, {r0, r1}
9001fb20:	a804      	add	r0, sp, #16
9001fb22:	f7f7 f8bd 	bl	90016ca0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fb26:	6820      	ldr	r0, [r4, #0]
9001fb28:	6803      	ldr	r3, [r0, #0]
9001fb2a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001fb2c:	4798      	blx	r3
9001fb2e:	2dff      	cmp	r5, #255	@ 0xff
9001fb30:	d016      	beq.n	9001fb60 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
9001fb32:	f010 0f08 	tst.w	r0, #8
9001fb36:	6820      	ldr	r0, [r4, #0]
9001fb38:	d015      	beq.n	9001fb66 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
9001fb3a:	2400      	movs	r4, #0
9001fb3c:	6801      	ldr	r1, [r0, #0]
9001fb3e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
9001fb42:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001fb46:	e9cd 5402 	strd	r5, r4, [sp, #8]
9001fb4a:	f8bd 4016 	ldrh.w	r4, [sp, #22]
9001fb4e:	9401      	str	r4, [sp, #4]
9001fb50:	f8bd 4014 	ldrh.w	r4, [sp, #20]
9001fb54:	9400      	str	r4, [sp, #0]
9001fb56:	6e4c      	ldr	r4, [r1, #100]	@ 0x64
9001fb58:	4639      	mov	r1, r7
9001fb5a:	47a0      	blx	r4
9001fb5c:	b007      	add	sp, #28
9001fb5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001fb60:	f010 0f02 	tst.w	r0, #2
9001fb64:	e7e7      	b.n	9001fb36 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
9001fb66:	6803      	ldr	r3, [r0, #0]
9001fb68:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001fb6a:	4798      	blx	r3
9001fb6c:	4b08      	ldr	r3, [pc, #32]	@ (9001fb90 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
9001fb6e:	4601      	mov	r1, r0
9001fb70:	4630      	mov	r0, r6
9001fb72:	881a      	ldrh	r2, [r3, #0]
9001fb74:	6833      	ldr	r3, [r6, #0]
9001fb76:	e9cd 7500 	strd	r7, r5, [sp]
9001fb7a:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
9001fb7c:	ab04      	add	r3, sp, #16
9001fb7e:	47a8      	blx	r5
9001fb80:	6820      	ldr	r0, [r4, #0]
9001fb82:	6803      	ldr	r3, [r0, #0]
9001fb84:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001fb86:	4798      	blx	r3
9001fb88:	e7e8      	b.n	9001fb5c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001fb8a:	bf00      	nop
9001fb8c:	24021864 	.word	0x24021864
9001fb90:	2402185e 	.word	0x2402185e

9001fb94 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
9001fb94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001fb98:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
9001fb9c:	4688      	mov	r8, r1
9001fb9e:	4614      	mov	r4, r2
9001fba0:	461d      	mov	r5, r3
9001fba2:	9e08      	ldr	r6, [sp, #32]
9001fba4:	2f00      	cmp	r7, #0
9001fba6:	f000 80ab 	beq.w	9001fd00 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001fbaa:	4618      	mov	r0, r3
9001fbac:	f7f1 fba5 	bl	900112fa <_ZNK8touchgfx4Rect7isEmptyEv>
9001fbb0:	2800      	cmp	r0, #0
9001fbb2:	f040 80a5 	bne.w	9001fd00 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001fbb6:	f9b5 1000 	ldrsh.w	r1, [r5]
9001fbba:	2fff      	cmp	r7, #255	@ 0xff
9001fbbc:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
9001fbc0:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
9001fbc4:	fb04 1303 	mla	r3, r4, r3, r1
9001fbc8:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
9001fbcc:	eba4 0200 	sub.w	r2, r4, r0
9001fbd0:	eb08 0143 	add.w	r1, r8, r3, lsl #1
9001fbd4:	fb04 f505 	mul.w	r5, r4, r5
9001fbd8:	ea4f 2816 	mov.w	r8, r6, lsr #8
9001fbdc:	eb01 0545 	add.w	r5, r1, r5, lsl #1
9001fbe0:	d04a      	beq.n	9001fc78 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
9001fbe2:	b2bc      	uxth	r4, r7
9001fbe4:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
9001fbe8:	f3c6 4e07 	ubfx	lr, r6, #16, #8
9001fbec:	fa5f f788 	uxtb.w	r7, r8
9001fbf0:	b2f3      	uxtb	r3, r6
9001fbf2:	0040      	lsls	r0, r0, #1
9001fbf4:	fb0e fe04 	mul.w	lr, lr, r4
9001fbf8:	4367      	muls	r7, r4
9001fbfa:	ea4f 0842 	mov.w	r8, r2, lsl #1
9001fbfe:	4363      	muls	r3, r4
9001fc00:	fa1f fc8c 	uxth.w	ip, ip
9001fc04:	42a9      	cmp	r1, r5
9001fc06:	d27b      	bcs.n	9001fd00 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001fc08:	eb01 0900 	add.w	r9, r1, r0
9001fc0c:	4549      	cmp	r1, r9
9001fc0e:	d231      	bcs.n	9001fc74 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
9001fc10:	880a      	ldrh	r2, [r1, #0]
9001fc12:	1214      	asrs	r4, r2, #8
9001fc14:	10d6      	asrs	r6, r2, #3
9001fc16:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
9001fc1a:	00d2      	lsls	r2, r2, #3
9001fc1c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001fc20:	b2d2      	uxtb	r2, r2
9001fc22:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9001fc26:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001fc2a:	fb14 f40c 	smulbb	r4, r4, ip
9001fc2e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001fc32:	fb12 f20c 	smulbb	r2, r2, ip
9001fc36:	fb16 f60c 	smulbb	r6, r6, ip
9001fc3a:	4474      	add	r4, lr
9001fc3c:	441a      	add	r2, r3
9001fc3e:	b2a4      	uxth	r4, r4
9001fc40:	443e      	add	r6, r7
9001fc42:	b292      	uxth	r2, r2
9001fc44:	f104 0a01 	add.w	sl, r4, #1
9001fc48:	b2b6      	uxth	r6, r6
9001fc4a:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
9001fc4e:	f102 0a01 	add.w	sl, r2, #1
9001fc52:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
9001fc56:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
9001fc5a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001fc5e:	4322      	orrs	r2, r4
9001fc60:	1c74      	adds	r4, r6, #1
9001fc62:	eb04 2616 	add.w	r6, r4, r6, lsr #8
9001fc66:	0976      	lsrs	r6, r6, #5
9001fc68:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001fc6c:	4332      	orrs	r2, r6
9001fc6e:	f821 2b02 	strh.w	r2, [r1], #2
9001fc72:	e7cb      	b.n	9001fc0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
9001fc74:	4441      	add	r1, r8
9001fc76:	e7c5      	b.n	9001fc04 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
9001fc78:	0973      	lsrs	r3, r6, #5
9001fc7a:	4f22      	ldr	r7, [pc, #136]	@ (9001fd04 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
9001fc7c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001fc80:	ea08 0707 	and.w	r7, r8, r7
9001fc84:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001fc88:	433b      	orrs	r3, r7
9001fc8a:	07e7      	lsls	r7, r4, #31
9001fc8c:	ea43 0306 	orr.w	r3, r3, r6
9001fc90:	b29b      	uxth	r3, r3
9001fc92:	d50b      	bpl.n	9001fcac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
9001fc94:	0040      	lsls	r0, r0, #1
9001fc96:	0052      	lsls	r2, r2, #1
9001fc98:	42a9      	cmp	r1, r5
9001fc9a:	d231      	bcs.n	9001fd00 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001fc9c:	180c      	adds	r4, r1, r0
9001fc9e:	42a1      	cmp	r1, r4
9001fca0:	d202      	bcs.n	9001fca8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
9001fca2:	f821 3b02 	strh.w	r3, [r1], #2
9001fca6:	e7fa      	b.n	9001fc9e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
9001fca8:	4411      	add	r1, r2
9001fcaa:	e7f5      	b.n	9001fc98 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
9001fcac:	078e      	lsls	r6, r1, #30
9001fcae:	d008      	beq.n	9001fcc2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
9001fcb0:	0066      	lsls	r6, r4, #1
9001fcb2:	460a      	mov	r2, r1
9001fcb4:	42aa      	cmp	r2, r5
9001fcb6:	d202      	bcs.n	9001fcbe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
9001fcb8:	8013      	strh	r3, [r2, #0]
9001fcba:	4432      	add	r2, r6
9001fcbc:	e7fa      	b.n	9001fcb4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
9001fcbe:	3102      	adds	r1, #2
9001fcc0:	3801      	subs	r0, #1
9001fcc2:	07c2      	lsls	r2, r0, #31
9001fcc4:	d50b      	bpl.n	9001fcde <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
9001fcc6:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
9001fcca:	0066      	lsls	r6, r4, #1
9001fccc:	3a01      	subs	r2, #1
9001fcce:	eb01 0242 	add.w	r2, r1, r2, lsl #1
9001fcd2:	42aa      	cmp	r2, r5
9001fcd4:	d202      	bcs.n	9001fcdc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
9001fcd6:	8013      	strh	r3, [r2, #0]
9001fcd8:	4432      	add	r2, r6
9001fcda:	e7fa      	b.n	9001fcd2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
9001fcdc:	3801      	subs	r0, #1
9001fcde:	b178      	cbz	r0, 9001fd00 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001fce0:	1040      	asrs	r0, r0, #1
9001fce2:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
9001fce6:	0080      	lsls	r0, r0, #2
9001fce8:	0064      	lsls	r4, r4, #1
9001fcea:	42a9      	cmp	r1, r5
9001fcec:	d208      	bcs.n	9001fd00 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001fcee:	180e      	adds	r6, r1, r0
9001fcf0:	460a      	mov	r2, r1
9001fcf2:	42b2      	cmp	r2, r6
9001fcf4:	d202      	bcs.n	9001fcfc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
9001fcf6:	f842 3b04 	str.w	r3, [r2], #4
9001fcfa:	e7fa      	b.n	9001fcf2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
9001fcfc:	4421      	add	r1, r4
9001fcfe:	e7f4      	b.n	9001fcea <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
9001fd00:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001fd04:	00fff800 	.word	0x00fff800

9001fd08 <_ZN8touchgfx8LCD16bppC1Ev>:
9001fd08:	2200      	movs	r2, #0
9001fd0a:	4912      	ldr	r1, [pc, #72]	@ (9001fd54 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
9001fd0c:	e9c0 2201 	strd	r2, r2, [r0, #4]
9001fd10:	6001      	str	r1, [r0, #0]
9001fd12:	e9c0 2203 	strd	r2, r2, [r0, #12]
9001fd16:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001fd1a:	e9c0 2207 	strd	r2, r2, [r0, #28]
9001fd1e:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
9001fd22:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
9001fd26:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
9001fd2a:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
9001fd2e:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
9001fd32:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
9001fd36:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
9001fd3a:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
9001fd3e:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
9001fd42:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
9001fd46:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
9001fd4a:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
9001fd4e:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
9001fd52:	4770      	bx	lr
9001fd54:	9002e658 	.word	0x9002e658

9001fd58 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
9001fd58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fd5c:	b08d      	sub	sp, #52	@ 0x34
9001fd5e:	460d      	mov	r5, r1
9001fd60:	4604      	mov	r4, r0
9001fd62:	4699      	mov	r9, r3
9001fd64:	6808      	ldr	r0, [r1, #0]
9001fd66:	ab08      	add	r3, sp, #32
9001fd68:	6849      	ldr	r1, [r1, #4]
9001fd6a:	c303      	stmia	r3!, {r0, r1}
9001fd6c:	6810      	ldr	r0, [r2, #0]
9001fd6e:	ab0a      	add	r3, sp, #40	@ 0x28
9001fd70:	6851      	ldr	r1, [r2, #4]
9001fd72:	c303      	stmia	r3!, {r0, r1}
9001fd74:	a808      	add	r0, sp, #32
9001fd76:	f7f6 ff93 	bl	90016ca0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fd7a:	4629      	mov	r1, r5
9001fd7c:	a80a      	add	r0, sp, #40	@ 0x28
9001fd7e:	4d67      	ldr	r5, [pc, #412]	@ (9001ff1c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001fd80:	f7f6 ffd2 	bl	90016d28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001fd84:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
9001fd88:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
9001fd8c:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
9001fd90:	6828      	ldr	r0, [r5, #0]
9001fd92:	fb11 2103 	smlabb	r1, r1, r3, r2
9001fd96:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
9001fd9a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
9001fd9e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001fda2:	f8bd 1020 	ldrh.w	r1, [sp, #32]
9001fda6:	440a      	add	r2, r1
9001fda8:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
9001fdac:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
9001fdb0:	4413      	add	r3, r2
9001fdb2:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
9001fdb6:	6803      	ldr	r3, [r0, #0]
9001fdb8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001fdba:	4798      	blx	r3
9001fdbc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
9001fdc0:	d119      	bne.n	9001fdf6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
9001fdc2:	f010 0f20 	tst.w	r0, #32
9001fdc6:	6828      	ldr	r0, [r5, #0]
9001fdc8:	d018      	beq.n	9001fdfc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
9001fdca:	2500      	movs	r5, #0
9001fdcc:	6801      	ldr	r1, [r0, #0]
9001fdce:	b2b6      	uxth	r6, r6
9001fdd0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001fdd4:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
9001fdd8:	9601      	str	r6, [sp, #4]
9001fdda:	e9cd 9503 	strd	r9, r5, [sp, #12]
9001fdde:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
9001fde2:	9502      	str	r5, [sp, #8]
9001fde4:	fa1f f588 	uxth.w	r5, r8
9001fde8:	9500      	str	r5, [sp, #0]
9001fdea:	6d4d      	ldr	r5, [r1, #84]	@ 0x54
9001fdec:	4621      	mov	r1, r4
9001fdee:	47a8      	blx	r5
9001fdf0:	b00d      	add	sp, #52	@ 0x34
9001fdf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001fdf6:	f010 0f40 	tst.w	r0, #64	@ 0x40
9001fdfa:	e7e4      	b.n	9001fdc6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
9001fdfc:	6803      	ldr	r3, [r0, #0]
9001fdfe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001fe00:	4798      	blx	r3
9001fe02:	4947      	ldr	r1, [pc, #284]	@ (9001ff20 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
9001fe04:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001fe08:	880b      	ldrh	r3, [r1, #0]
9001fe0a:	468a      	mov	sl, r1
9001fe0c:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
9001fe10:	fb03 5202 	mla	r2, r3, r2, r5
9001fe14:	4373      	muls	r3, r6
9001fe16:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001fe1a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001fe1e:	9307      	str	r3, [sp, #28]
9001fe20:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001fe24:	9306      	str	r3, [sp, #24]
9001fe26:	9b07      	ldr	r3, [sp, #28]
9001fe28:	4298      	cmp	r0, r3
9001fe2a:	d270      	bcs.n	9001ff0e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
9001fe2c:	9b06      	ldr	r3, [sp, #24]
9001fe2e:	4621      	mov	r1, r4
9001fe30:	eb00 0b03 	add.w	fp, r0, r3
9001fe34:	4558      	cmp	r0, fp
9001fe36:	d25d      	bcs.n	9001fef4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
9001fe38:	f851 4b04 	ldr.w	r4, [r1], #4
9001fe3c:	0e23      	lsrs	r3, r4, #24
9001fe3e:	d014      	beq.n	9001fe6a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001fe40:	2bff      	cmp	r3, #255	@ 0xff
9001fe42:	ea4f 2c14 	mov.w	ip, r4, lsr #8
9001fe46:	d112      	bne.n	9001fe6e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001fe48:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
9001fe4c:	d10f      	bne.n	9001fe6e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001fe4e:	0963      	lsrs	r3, r4, #5
9001fe50:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
9001fe54:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001fe58:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001fe5c:	f02c 0c07 	bic.w	ip, ip, #7
9001fe60:	ea43 0c0c 	orr.w	ip, r3, ip
9001fe64:	ea4c 0404 	orr.w	r4, ip, r4
9001fe68:	8004      	strh	r4, [r0, #0]
9001fe6a:	3002      	adds	r0, #2
9001fe6c:	e7e2      	b.n	9001fe34 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
9001fe6e:	fb09 f303 	mul.w	r3, r9, r3
9001fe72:	8807      	ldrh	r7, [r0, #0]
9001fe74:	f3c4 4e07 	ubfx	lr, r4, #16, #8
9001fe78:	fa5f fc8c 	uxtb.w	ip, ip
9001fe7c:	1c5a      	adds	r2, r3, #1
9001fe7e:	123e      	asrs	r6, r7, #8
9001fe80:	10fd      	asrs	r5, r7, #3
9001fe82:	eb02 2223 	add.w	r2, r2, r3, asr #8
9001fe86:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001fe8a:	00ff      	lsls	r7, r7, #3
9001fe8c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001fe90:	1212      	asrs	r2, r2, #8
9001fe92:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001fe96:	b293      	uxth	r3, r2
9001fe98:	43d2      	mvns	r2, r2
9001fe9a:	b2ff      	uxtb	r7, r7
9001fe9c:	fb1e fe03 	smulbb	lr, lr, r3
9001fea0:	b2d2      	uxtb	r2, r2
9001fea2:	fb1c fc03 	smulbb	ip, ip, r3
9001fea6:	b2e4      	uxtb	r4, r4
9001fea8:	fb06 e602 	mla	r6, r6, r2, lr
9001feac:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001feb0:	fb14 f403 	smulbb	r4, r4, r3
9001feb4:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001feb8:	b2b6      	uxth	r6, r6
9001feba:	fb05 c502 	mla	r5, r5, r2, ip
9001febe:	fb07 4702 	mla	r7, r7, r2, r4
9001fec2:	f106 0e01 	add.w	lr, r6, #1
9001fec6:	b2ad      	uxth	r5, r5
9001fec8:	b2bf      	uxth	r7, r7
9001feca:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
9001fece:	f105 0c01 	add.w	ip, r5, #1
9001fed2:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
9001fed6:	1c7e      	adds	r6, r7, #1
9001fed8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001fedc:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001fee0:	096d      	lsrs	r5, r5, #5
9001fee2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001fee6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001feea:	ea46 060e 	orr.w	r6, r6, lr
9001feee:	432e      	orrs	r6, r5
9001fef0:	8006      	strh	r6, [r0, #0]
9001fef2:	e7ba      	b.n	9001fe6a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001fef4:	f8ba 3000 	ldrh.w	r3, [sl]
9001fef8:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
9001fefc:	eba3 0308 	sub.w	r3, r3, r8
9001ff00:	eba4 0408 	sub.w	r4, r4, r8
9001ff04:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ff08:	eb01 0484 	add.w	r4, r1, r4, lsl #2
9001ff0c:	e78b      	b.n	9001fe26 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
9001ff0e:	4b03      	ldr	r3, [pc, #12]	@ (9001ff1c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001ff10:	6818      	ldr	r0, [r3, #0]
9001ff12:	6803      	ldr	r3, [r0, #0]
9001ff14:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001ff16:	4798      	blx	r3
9001ff18:	e76a      	b.n	9001fdf0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
9001ff1a:	bf00      	nop
9001ff1c:	24021864 	.word	0x24021864
9001ff20:	2402185e 	.word	0x2402185e

9001ff24 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
9001ff24:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001ff28:	b085      	sub	sp, #20
9001ff2a:	6810      	ldr	r0, [r2, #0]
9001ff2c:	460c      	mov	r4, r1
9001ff2e:	6851      	ldr	r1, [r2, #4]
9001ff30:	466d      	mov	r5, sp
9001ff32:	4616      	mov	r6, r2
9001ff34:	c503      	stmia	r5!, {r0, r1}
9001ff36:	6818      	ldr	r0, [r3, #0]
9001ff38:	6859      	ldr	r1, [r3, #4]
9001ff3a:	c503      	stmia	r5!, {r0, r1}
9001ff3c:	4668      	mov	r0, sp
9001ff3e:	4d2e      	ldr	r5, [pc, #184]	@ (9001fff8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
9001ff40:	f7f6 feae 	bl	90016ca0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ff44:	4631      	mov	r1, r6
9001ff46:	a802      	add	r0, sp, #8
9001ff48:	4e2c      	ldr	r6, [pc, #176]	@ (9001fffc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
9001ff4a:	f7f6 feed 	bl	90016d28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ff4e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
9001ff52:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
9001ff56:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001ff5a:	6828      	ldr	r0, [r5, #0]
9001ff5c:	fb11 2103 	smlabb	r1, r1, r3, r2
9001ff60:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
9001ff64:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
9001ff68:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001ff6c:	f8bd 1000 	ldrh.w	r1, [sp]
9001ff70:	440a      	add	r2, r1
9001ff72:	f8ad 2008 	strh.w	r2, [sp, #8]
9001ff76:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001ff7a:	4413      	add	r3, r2
9001ff7c:	f8ad 300a 	strh.w	r3, [sp, #10]
9001ff80:	6803      	ldr	r3, [r0, #0]
9001ff82:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001ff84:	4798      	blx	r3
9001ff86:	8833      	ldrh	r3, [r6, #0]
9001ff88:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
9001ff8c:	ea4f 0c47 	mov.w	ip, r7, lsl #1
9001ff90:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001ff94:	f8df e068 	ldr.w	lr, [pc, #104]	@ 90020000 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
9001ff98:	fb03 1202 	mla	r2, r3, r2, r1
9001ff9c:	fb08 f303 	mul.w	r3, r8, r3
9001ffa0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001ffa4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001ffa8:	4298      	cmp	r0, r3
9001ffaa:	d21d      	bcs.n	9001ffe8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
9001ffac:	eb00 080c 	add.w	r8, r0, ip
9001ffb0:	4540      	cmp	r0, r8
9001ffb2:	d20f      	bcs.n	9001ffd4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
9001ffb4:	f854 1b04 	ldr.w	r1, [r4], #4
9001ffb8:	ea4f 1951 	mov.w	r9, r1, lsr #5
9001ffbc:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
9001ffc0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9001ffc4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001ffc8:	ea42 0209 	orr.w	r2, r2, r9
9001ffcc:	430a      	orrs	r2, r1
9001ffce:	f820 2b02 	strh.w	r2, [r0], #2
9001ffd2:	e7ed      	b.n	9001ffb0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
9001ffd4:	8832      	ldrh	r2, [r6, #0]
9001ffd6:	1bd2      	subs	r2, r2, r7
9001ffd8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001ffdc:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
9001ffe0:	1bd2      	subs	r2, r2, r7
9001ffe2:	eb04 0482 	add.w	r4, r4, r2, lsl #2
9001ffe6:	e7df      	b.n	9001ffa8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
9001ffe8:	6828      	ldr	r0, [r5, #0]
9001ffea:	6803      	ldr	r3, [r0, #0]
9001ffec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001ffee:	4798      	blx	r3
9001fff0:	b005      	add	sp, #20
9001fff2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001fff6:	bf00      	nop
9001fff8:	24021864 	.word	0x24021864
9001fffc:	2402185e 	.word	0x2402185e
90020000:	fffff800 	.word	0xfffff800

90020004 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
90020004:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90020008:	b08e      	sub	sp, #56	@ 0x38
9002000a:	460e      	mov	r6, r1
9002000c:	4604      	mov	r4, r0
9002000e:	461d      	mov	r5, r3
90020010:	6808      	ldr	r0, [r1, #0]
90020012:	ab0a      	add	r3, sp, #40	@ 0x28
90020014:	6849      	ldr	r1, [r1, #4]
90020016:	f8df 81d4 	ldr.w	r8, [pc, #468]	@ 900201ec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
9002001a:	f8df 91d4 	ldr.w	r9, [pc, #468]	@ 900201f0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
9002001e:	c303      	stmia	r3!, {r0, r1}
90020020:	6810      	ldr	r0, [r2, #0]
90020022:	ab0c      	add	r3, sp, #48	@ 0x30
90020024:	6851      	ldr	r1, [r2, #4]
90020026:	c303      	stmia	r3!, {r0, r1}
90020028:	a80a      	add	r0, sp, #40	@ 0x28
9002002a:	f7f6 fe39 	bl	90016ca0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002002e:	4631      	mov	r1, r6
90020030:	a80c      	add	r0, sp, #48	@ 0x30
90020032:	f7f6 fe79 	bl	90016d28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020036:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9002003a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9002003e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
90020042:	f8d8 0000 	ldr.w	r0, [r8]
90020046:	fb11 2103 	smlabb	r1, r1, r3, r2
9002004a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
9002004e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
90020052:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90020056:	440c      	add	r4, r1
90020058:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
9002005c:	440a      	add	r2, r1
9002005e:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
90020062:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
90020066:	4413      	add	r3, r2
90020068:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9002006c:	6803      	ldr	r3, [r0, #0]
9002006e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90020070:	4798      	blx	r3
90020072:	2dff      	cmp	r5, #255	@ 0xff
90020074:	d124      	bne.n	900200c0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
90020076:	f010 0f01 	tst.w	r0, #1
9002007a:	f8d8 0000 	ldr.w	r0, [r8]
9002007e:	d022      	beq.n	900200c6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
90020080:	2100      	movs	r1, #0
90020082:	f04f 0e01 	mov.w	lr, #1
90020086:	f8d0 c000 	ldr.w	ip, [r0]
9002008a:	b2b6      	uxth	r6, r6
9002008c:	f8cd e018 	str.w	lr, [sp, #24]
90020090:	b2bf      	uxth	r7, r7
90020092:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90020096:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
9002009a:	e9cd 1107 	strd	r1, r1, [sp, #28]
9002009e:	f8b9 e000 	ldrh.w	lr, [r9]
900200a2:	9503      	str	r5, [sp, #12]
900200a4:	9601      	str	r6, [sp, #4]
900200a6:	9700      	str	r7, [sp, #0]
900200a8:	e9cd 1e04 	strd	r1, lr, [sp, #16]
900200ac:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
900200b0:	9102      	str	r1, [sp, #8]
900200b2:	4621      	mov	r1, r4
900200b4:	f8dc 5044 	ldr.w	r5, [ip, #68]	@ 0x44
900200b8:	47a8      	blx	r5
900200ba:	b00e      	add	sp, #56	@ 0x38
900200bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900200c0:	f010 0f04 	tst.w	r0, #4
900200c4:	e7d9      	b.n	9002007a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
900200c6:	6803      	ldr	r3, [r0, #0]
900200c8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900200ca:	4798      	blx	r3
900200cc:	f8b9 3000 	ldrh.w	r3, [r9]
900200d0:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
900200d4:	ea4f 0e47 	mov.w	lr, r7, lsl #1
900200d8:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
900200dc:	435e      	muls	r6, r3
900200de:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
900200e2:	2dff      	cmp	r5, #255	@ 0xff
900200e4:	fb03 1202 	mla	r2, r3, r2, r1
900200e8:	ebac 0c07 	sub.w	ip, ip, r7
900200ec:	eba3 0707 	sub.w	r7, r3, r7
900200f0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
900200f4:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
900200f8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
900200fc:	ea4f 0747 	mov.w	r7, r7, lsl #1
90020100:	d049      	beq.n	90020196 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
90020102:	43eb      	mvns	r3, r5
90020104:	fa1f f985 	uxth.w	r9, r5
90020108:	b2db      	uxtb	r3, r3
9002010a:	42b0      	cmp	r0, r6
9002010c:	d266      	bcs.n	900201dc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9002010e:	eb00 0a0e 	add.w	sl, r0, lr
90020112:	4550      	cmp	r0, sl
90020114:	4621      	mov	r1, r4
90020116:	f104 0403 	add.w	r4, r4, #3
9002011a:	d25b      	bcs.n	900201d4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
9002011c:	8802      	ldrh	r2, [r0, #0]
9002011e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
90020122:	ea4f 2822 	mov.w	r8, r2, asr #8
90020126:	fb11 f109 	smulbb	r1, r1, r9
9002012a:	10d5      	asrs	r5, r2, #3
9002012c:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
90020130:	00d2      	lsls	r2, r2, #3
90020132:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90020136:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
9002013a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9002013e:	fb08 1803 	mla	r8, r8, r3, r1
90020142:	f814 1c02 	ldrb.w	r1, [r4, #-2]
90020146:	b2d2      	uxtb	r2, r2
90020148:	fb11 f109 	smulbb	r1, r1, r9
9002014c:	fa1f f888 	uxth.w	r8, r8
90020150:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90020154:	fb05 1503 	mla	r5, r5, r3, r1
90020158:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9002015c:	fb11 f109 	smulbb	r1, r1, r9
90020160:	b2ad      	uxth	r5, r5
90020162:	fb02 1203 	mla	r2, r2, r3, r1
90020166:	f108 0101 	add.w	r1, r8, #1
9002016a:	b292      	uxth	r2, r2
9002016c:	eb01 2818 	add.w	r8, r1, r8, lsr #8
90020170:	1c51      	adds	r1, r2, #1
90020172:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
90020176:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9002017a:	1c69      	adds	r1, r5, #1
9002017c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
90020180:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90020184:	096d      	lsrs	r5, r5, #5
90020186:	ea42 0208 	orr.w	r2, r2, r8
9002018a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9002018e:	432a      	orrs	r2, r5
90020190:	f820 2b02 	strh.w	r2, [r0], #2
90020194:	e7bd      	b.n	90020112 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
90020196:	4a14      	ldr	r2, [pc, #80]	@ (900201e8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
90020198:	42b0      	cmp	r0, r6
9002019a:	d21f      	bcs.n	900201dc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9002019c:	eb00 050e 	add.w	r5, r0, lr
900201a0:	42a8      	cmp	r0, r5
900201a2:	4621      	mov	r1, r4
900201a4:	f104 0403 	add.w	r4, r4, #3
900201a8:	d210      	bcs.n	900201cc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
900201aa:	f814 3c02 	ldrb.w	r3, [r4, #-2]
900201ae:	f814 1c01 	ldrb.w	r1, [r4, #-1]
900201b2:	00db      	lsls	r3, r3, #3
900201b4:	ea02 2101 	and.w	r1, r2, r1, lsl #8
900201b8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900201bc:	430b      	orrs	r3, r1
900201be:	f814 1c03 	ldrb.w	r1, [r4, #-3]
900201c2:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
900201c6:	f820 3b02 	strh.w	r3, [r0], #2
900201ca:	e7e9      	b.n	900201a0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
900201cc:	4438      	add	r0, r7
900201ce:	eb01 040c 	add.w	r4, r1, ip
900201d2:	e7e1      	b.n	90020198 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
900201d4:	4438      	add	r0, r7
900201d6:	eb01 040c 	add.w	r4, r1, ip
900201da:	e796      	b.n	9002010a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
900201dc:	4b03      	ldr	r3, [pc, #12]	@ (900201ec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
900201de:	6818      	ldr	r0, [r3, #0]
900201e0:	6803      	ldr	r3, [r0, #0]
900201e2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900201e4:	4798      	blx	r3
900201e6:	e768      	b.n	900200ba <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
900201e8:	fffff800 	.word	0xfffff800
900201ec:	24021864 	.word	0x24021864
900201f0:	2402185e 	.word	0x2402185e

900201f4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
900201f4:	b4f0      	push	{r4, r5, r6, r7}
900201f6:	4616      	mov	r6, r2
900201f8:	461c      	mov	r4, r3
900201fa:	460d      	mov	r5, r1
900201fc:	9a04      	ldr	r2, [sp, #16]
900201fe:	2e01      	cmp	r6, #1
90020200:	f89d 3014 	ldrb.w	r3, [sp, #20]
90020204:	f89d 7018 	ldrb.w	r7, [sp, #24]
90020208:	d012      	beq.n	90020230 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
9002020a:	d303      	bcc.n	90020214 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
9002020c:	2e02      	cmp	r6, #2
9002020e:	d00a      	beq.n	90020226 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
90020210:	bcf0      	pop	{r4, r5, r6, r7}
90020212:	4770      	bx	lr
90020214:	6805      	ldr	r5, [r0, #0]
90020216:	e9cd 3704 	strd	r3, r7, [sp, #16]
9002021a:	68ed      	ldr	r5, [r5, #12]
9002021c:	4613      	mov	r3, r2
9002021e:	4622      	mov	r2, r4
90020220:	46ac      	mov	ip, r5
90020222:	bcf0      	pop	{r4, r5, r6, r7}
90020224:	4760      	bx	ip
90020226:	4621      	mov	r1, r4
90020228:	4628      	mov	r0, r5
9002022a:	bcf0      	pop	{r4, r5, r6, r7}
9002022c:	f7ff bd94 	b.w	9001fd58 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90020230:	4621      	mov	r1, r4
90020232:	4628      	mov	r0, r5
90020234:	bcf0      	pop	{r4, r5, r6, r7}
90020236:	f7ff bee5 	b.w	90020004 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

9002023c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
9002023c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020240:	b093      	sub	sp, #76	@ 0x4c
90020242:	4681      	mov	r9, r0
90020244:	4688      	mov	r8, r1
90020246:	6810      	ldr	r0, [r2, #0]
90020248:	6851      	ldr	r1, [r2, #4]
9002024a:	ac0e      	add	r4, sp, #56	@ 0x38
9002024c:	4616      	mov	r6, r2
9002024e:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
90020252:	4f6b      	ldr	r7, [pc, #428]	@ (90020400 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
90020254:	c403      	stmia	r4!, {r0, r1}
90020256:	6818      	ldr	r0, [r3, #0]
90020258:	ac10      	add	r4, sp, #64	@ 0x40
9002025a:	6859      	ldr	r1, [r3, #4]
9002025c:	c403      	stmia	r4!, {r0, r1}
9002025e:	a80e      	add	r0, sp, #56	@ 0x38
90020260:	f7f6 fd1e 	bl	90016ca0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020264:	4631      	mov	r1, r6
90020266:	a810      	add	r0, sp, #64	@ 0x40
90020268:	4e66      	ldr	r6, [pc, #408]	@ (90020404 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9002026a:	f7f6 fd5d 	bl	90016d28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002026e:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
90020272:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
90020276:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
9002027a:	6830      	ldr	r0, [r6, #0]
9002027c:	fb11 2103 	smlabb	r1, r1, r3, r2
90020280:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
90020284:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
90020288:	4489      	add	r9, r1
9002028a:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
9002028e:	440a      	add	r2, r1
90020290:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
90020294:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
90020298:	4413      	add	r3, r2
9002029a:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
9002029e:	6803      	ldr	r3, [r0, #0]
900202a0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900202a2:	4798      	blx	r3
900202a4:	f010 0f80 	tst.w	r0, #128	@ 0x80
900202a8:	6830      	ldr	r0, [r6, #0]
900202aa:	d01d      	beq.n	900202e8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
900202ac:	2200      	movs	r2, #0
900202ae:	6801      	ldr	r1, [r0, #0]
900202b0:	b2a4      	uxth	r4, r4
900202b2:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
900202b6:	b2ad      	uxth	r5, r5
900202b8:	e9cd 2208 	strd	r2, r2, [sp, #32]
900202bc:	220b      	movs	r2, #11
900202be:	9207      	str	r2, [sp, #28]
900202c0:	883a      	ldrh	r2, [r7, #0]
900202c2:	9502      	str	r5, [sp, #8]
900202c4:	9206      	str	r2, [sp, #24]
900202c6:	2201      	movs	r2, #1
900202c8:	9401      	str	r4, [sp, #4]
900202ca:	e9cd a204 	strd	sl, r2, [sp, #16]
900202ce:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
900202d2:	9203      	str	r2, [sp, #12]
900202d4:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
900202d8:	9200      	str	r2, [sp, #0]
900202da:	4642      	mov	r2, r8
900202dc:	6c0c      	ldr	r4, [r1, #64]	@ 0x40
900202de:	4649      	mov	r1, r9
900202e0:	47a0      	blx	r4
900202e2:	b013      	add	sp, #76	@ 0x4c
900202e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900202e8:	6803      	ldr	r3, [r0, #0]
900202ea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900202ec:	4798      	blx	r3
900202ee:	883b      	ldrh	r3, [r7, #0]
900202f0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
900202f4:	f04f 0e04 	mov.w	lr, #4
900202f8:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
900202fc:	435d      	muls	r5, r3
900202fe:	fb03 1202 	mla	r2, r3, r2, r1
90020302:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90020306:	eb00 0245 	add.w	r2, r0, r5, lsl #1
9002030a:	920c      	str	r2, [sp, #48]	@ 0x30
9002030c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
90020310:	1b12      	subs	r2, r2, r4
90020312:	920d      	str	r2, [sp, #52]	@ 0x34
90020314:	0062      	lsls	r2, r4, #1
90020316:	1b1c      	subs	r4, r3, r4
90020318:	920a      	str	r2, [sp, #40]	@ 0x28
9002031a:	0063      	lsls	r3, r4, #1
9002031c:	930b      	str	r3, [sp, #44]	@ 0x2c
9002031e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90020320:	4298      	cmp	r0, r3
90020322:	d266      	bcs.n	900203f2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
90020324:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90020326:	eb00 0b03 	add.w	fp, r0, r3
9002032a:	4558      	cmp	r0, fp
9002032c:	d25c      	bcs.n	900203e8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
9002032e:	f819 3b01 	ldrb.w	r3, [r9], #1
90020332:	fb1e e303 	smlabb	r3, lr, r3, lr
90020336:	f858 2003 	ldr.w	r2, [r8, r3]
9002033a:	0e11      	lsrs	r1, r2, #24
9002033c:	d012      	beq.n	90020364 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9002033e:	29ff      	cmp	r1, #255	@ 0xff
90020340:	ea4f 2712 	mov.w	r7, r2, lsr #8
90020344:	d110      	bne.n	90020368 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
90020346:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9002034a:	d10d      	bne.n	90020368 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9002034c:	0953      	lsrs	r3, r2, #5
9002034e:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
90020352:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90020356:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002035a:	f027 0707 	bic.w	r7, r7, #7
9002035e:	431f      	orrs	r7, r3
90020360:	433a      	orrs	r2, r7
90020362:	8002      	strh	r2, [r0, #0]
90020364:	3002      	adds	r0, #2
90020366:	e7e0      	b.n	9002032a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
90020368:	fb0a f101 	mul.w	r1, sl, r1
9002036c:	8806      	ldrh	r6, [r0, #0]
9002036e:	f3c2 4c07 	ubfx	ip, r2, #16, #8
90020372:	b2d2      	uxtb	r2, r2
90020374:	1c4b      	adds	r3, r1, #1
90020376:	1235      	asrs	r5, r6, #8
90020378:	10f4      	asrs	r4, r6, #3
9002037a:	eb03 2321 	add.w	r3, r3, r1, asr #8
9002037e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90020382:	00f6      	lsls	r6, r6, #3
90020384:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
90020388:	121b      	asrs	r3, r3, #8
9002038a:	b2f6      	uxtb	r6, r6
9002038c:	b299      	uxth	r1, r3
9002038e:	43db      	mvns	r3, r3
90020390:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
90020394:	fb1c fc01 	smulbb	ip, ip, r1
90020398:	b2db      	uxtb	r3, r3
9002039a:	fb12 f201 	smulbb	r2, r2, r1
9002039e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
900203a2:	fb05 c503 	mla	r5, r5, r3, ip
900203a6:	b2ff      	uxtb	r7, r7
900203a8:	fb06 2203 	mla	r2, r6, r3, r2
900203ac:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
900203b0:	fb17 f701 	smulbb	r7, r7, r1
900203b4:	b2ad      	uxth	r5, r5
900203b6:	b292      	uxth	r2, r2
900203b8:	fb04 7403 	mla	r4, r4, r3, r7
900203bc:	f105 0c01 	add.w	ip, r5, #1
900203c0:	1c57      	adds	r7, r2, #1
900203c2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900203c6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
900203ca:	b2a4      	uxth	r4, r4
900203cc:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900203d0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900203d4:	433d      	orrs	r5, r7
900203d6:	1c67      	adds	r7, r4, #1
900203d8:	eb07 2414 	add.w	r4, r7, r4, lsr #8
900203dc:	0964      	lsrs	r4, r4, #5
900203de:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
900203e2:	4325      	orrs	r5, r4
900203e4:	8005      	strh	r5, [r0, #0]
900203e6:	e7bd      	b.n	90020364 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
900203e8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900203ea:	4418      	add	r0, r3
900203ec:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900203ee:	4499      	add	r9, r3
900203f0:	e795      	b.n	9002031e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
900203f2:	4b04      	ldr	r3, [pc, #16]	@ (90020404 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
900203f4:	6818      	ldr	r0, [r3, #0]
900203f6:	6803      	ldr	r3, [r0, #0]
900203f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900203fa:	4798      	blx	r3
900203fc:	e771      	b.n	900202e2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
900203fe:	bf00      	nop
90020400:	2402185e 	.word	0x2402185e
90020404:	24021864 	.word	0x24021864

90020408 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
90020408:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002040c:	b087      	sub	sp, #28
9002040e:	4680      	mov	r8, r0
90020410:	460d      	mov	r5, r1
90020412:	4614      	mov	r4, r2
90020414:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
90020418:	2e00      	cmp	r6, #0
9002041a:	f000 80b9 	beq.w	90020590 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
9002041e:	6810      	ldr	r0, [r2, #0]
90020420:	af02      	add	r7, sp, #8
90020422:	6851      	ldr	r1, [r2, #4]
90020424:	c703      	stmia	r7!, {r0, r1}
90020426:	6818      	ldr	r0, [r3, #0]
90020428:	af04      	add	r7, sp, #16
9002042a:	6859      	ldr	r1, [r3, #4]
9002042c:	c703      	stmia	r7!, {r0, r1}
9002042e:	a802      	add	r0, sp, #8
90020430:	f7f6 fc36 	bl	90016ca0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020434:	4621      	mov	r1, r4
90020436:	a804      	add	r0, sp, #16
90020438:	f7f6 fc76 	bl	90016d28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002043c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90020440:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90020444:	f8bd 400c 	ldrh.w	r4, [sp, #12]
90020448:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
9002044c:	fb14 2103 	smlabb	r1, r4, r3, r2
90020450:	eb08 0401 	add.w	r4, r8, r1
90020454:	f8bd 1008 	ldrh.w	r1, [sp, #8]
90020458:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9002045c:	440a      	add	r2, r1
9002045e:	ea4f 0a48 	mov.w	sl, r8, lsl #1
90020462:	f8ad 2010 	strh.w	r2, [sp, #16]
90020466:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9002046a:	4413      	add	r3, r2
9002046c:	f8ad 3012 	strh.w	r3, [sp, #18]
90020470:	4b49      	ldr	r3, [pc, #292]	@ (90020598 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
90020472:	6818      	ldr	r0, [r3, #0]
90020474:	6803      	ldr	r3, [r0, #0]
90020476:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90020478:	4798      	blx	r3
9002047a:	4b48      	ldr	r3, [pc, #288]	@ (9002059c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
9002047c:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
90020480:	2eff      	cmp	r6, #255	@ 0xff
90020482:	881a      	ldrh	r2, [r3, #0]
90020484:	f9bd c010 	ldrsh.w	ip, [sp, #16]
90020488:	fb02 c101 	mla	r1, r2, r1, ip
9002048c:	fb02 f207 	mul.w	r2, r2, r7
90020490:	eb00 0041 	add.w	r0, r0, r1, lsl #1
90020494:	f105 0104 	add.w	r1, r5, #4
90020498:	461d      	mov	r5, r3
9002049a:	d05a      	beq.n	90020552 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
9002049c:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
900204a0:	eb00 0242 	add.w	r2, r0, r2, lsl #1
900204a4:	b2b6      	uxth	r6, r6
900204a6:	9301      	str	r3, [sp, #4]
900204a8:	fa1f fe8e 	uxth.w	lr, lr
900204ac:	4282      	cmp	r2, r0
900204ae:	d96a      	bls.n	90020586 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
900204b0:	eb00 0b0a 	add.w	fp, r0, sl
900204b4:	4583      	cmp	fp, r0
900204b6:	d940      	bls.n	9002053a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
900204b8:	8805      	ldrh	r5, [r0, #0]
900204ba:	f814 3b01 	ldrb.w	r3, [r4], #1
900204be:	122f      	asrs	r7, r5, #8
900204c0:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
900204c4:	ea4f 09e5 	mov.w	r9, r5, asr #3
900204c8:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
900204cc:	00ed      	lsls	r5, r5, #3
900204ce:	ea4f 2c23 	mov.w	ip, r3, asr #8
900204d2:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
900204d6:	fb17 f70e 	smulbb	r7, r7, lr
900204da:	b2ed      	uxtb	r5, r5
900204dc:	fb19 f90e 	smulbb	r9, r9, lr
900204e0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
900204e4:	fb15 f50e 	smulbb	r5, r5, lr
900204e8:	fb0c 7c06 	mla	ip, ip, r6, r7
900204ec:	10df      	asrs	r7, r3, #3
900204ee:	00db      	lsls	r3, r3, #3
900204f0:	fa1f fc8c 	uxth.w	ip, ip
900204f4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
900204f8:	b2db      	uxtb	r3, r3
900204fa:	fb07 9706 	mla	r7, r7, r6, r9
900204fe:	f10c 0901 	add.w	r9, ip, #1
90020502:	fb03 5306 	mla	r3, r3, r6, r5
90020506:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
9002050a:	b29b      	uxth	r3, r3
9002050c:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
90020510:	b2bf      	uxth	r7, r7
90020512:	f103 0c01 	add.w	ip, r3, #1
90020516:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9002051a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9002051e:	ea4c 0c09 	orr.w	ip, ip, r9
90020522:	f107 0901 	add.w	r9, r7, #1
90020526:	eb09 2717 	add.w	r7, r9, r7, lsr #8
9002052a:	097f      	lsrs	r7, r7, #5
9002052c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90020530:	ea4c 0c07 	orr.w	ip, ip, r7
90020534:	f820 cb02 	strh.w	ip, [r0], #2
90020538:	e7bc      	b.n	900204b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
9002053a:	9b01      	ldr	r3, [sp, #4]
9002053c:	881b      	ldrh	r3, [r3, #0]
9002053e:	eba3 0308 	sub.w	r3, r3, r8
90020542:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020546:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9002054a:	eba3 0308 	sub.w	r3, r3, r8
9002054e:	441c      	add	r4, r3
90020550:	e7ac      	b.n	900204ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
90020552:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90020556:	4282      	cmp	r2, r0
90020558:	d915      	bls.n	90020586 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9002055a:	eb00 060a 	add.w	r6, r0, sl
9002055e:	4286      	cmp	r6, r0
90020560:	d906      	bls.n	90020570 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
90020562:	f814 3b01 	ldrb.w	r3, [r4], #1
90020566:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9002056a:	f820 3b02 	strh.w	r3, [r0], #2
9002056e:	e7f6      	b.n	9002055e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
90020570:	882b      	ldrh	r3, [r5, #0]
90020572:	eba3 0308 	sub.w	r3, r3, r8
90020576:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9002057a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9002057e:	eba3 0308 	sub.w	r3, r3, r8
90020582:	441c      	add	r4, r3
90020584:	e7e7      	b.n	90020556 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
90020586:	4b04      	ldr	r3, [pc, #16]	@ (90020598 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
90020588:	6818      	ldr	r0, [r3, #0]
9002058a:	6803      	ldr	r3, [r0, #0]
9002058c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9002058e:	4798      	blx	r3
90020590:	b007      	add	sp, #28
90020592:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020596:	bf00      	nop
90020598:	24021864 	.word	0x24021864
9002059c:	2402185e 	.word	0x2402185e

900205a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
900205a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900205a4:	b091      	sub	sp, #68	@ 0x44
900205a6:	4680      	mov	r8, r0
900205a8:	460f      	mov	r7, r1
900205aa:	4614      	mov	r4, r2
900205ac:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
900205b0:	2d00      	cmp	r5, #0
900205b2:	d051      	beq.n	90020658 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
900205b4:	6810      	ldr	r0, [r2, #0]
900205b6:	ae0c      	add	r6, sp, #48	@ 0x30
900205b8:	6851      	ldr	r1, [r2, #4]
900205ba:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 900207bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
900205be:	c603      	stmia	r6!, {r0, r1}
900205c0:	6818      	ldr	r0, [r3, #0]
900205c2:	ae0e      	add	r6, sp, #56	@ 0x38
900205c4:	6859      	ldr	r1, [r3, #4]
900205c6:	c603      	stmia	r6!, {r0, r1}
900205c8:	a80c      	add	r0, sp, #48	@ 0x30
900205ca:	f7f6 fb69 	bl	90016ca0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900205ce:	4621      	mov	r1, r4
900205d0:	a80e      	add	r0, sp, #56	@ 0x38
900205d2:	f7f6 fba9 	bl	90016d28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900205d6:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
900205da:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
900205de:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
900205e2:	f8d9 0000 	ldr.w	r0, [r9]
900205e6:	fb11 2103 	smlabb	r1, r1, r3, r2
900205ea:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
900205ee:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
900205f2:	eb08 0401 	add.w	r4, r8, r1
900205f6:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
900205fa:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 900207c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
900205fe:	440a      	add	r2, r1
90020600:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
90020604:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
90020608:	4413      	add	r3, r2
9002060a:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
9002060e:	6803      	ldr	r3, [r0, #0]
90020610:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90020612:	4798      	blx	r3
90020614:	f010 0f80 	tst.w	r0, #128	@ 0x80
90020618:	f8d9 0000 	ldr.w	r0, [r9]
9002061c:	d01f      	beq.n	9002065e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
9002061e:	2200      	movs	r2, #0
90020620:	6801      	ldr	r1, [r0, #0]
90020622:	b2b6      	uxth	r6, r6
90020624:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90020628:	e9cd 2208 	strd	r2, r2, [sp, #32]
9002062c:	220b      	movs	r2, #11
9002062e:	9207      	str	r2, [sp, #28]
90020630:	f8b8 2000 	ldrh.w	r2, [r8]
90020634:	9601      	str	r6, [sp, #4]
90020636:	9206      	str	r2, [sp, #24]
90020638:	2201      	movs	r2, #1
9002063a:	e9cd 5204 	strd	r5, r2, [sp, #16]
9002063e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
90020642:	9203      	str	r2, [sp, #12]
90020644:	fa1f f28a 	uxth.w	r2, sl
90020648:	9202      	str	r2, [sp, #8]
9002064a:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
9002064e:	9200      	str	r2, [sp, #0]
90020650:	463a      	mov	r2, r7
90020652:	6c0d      	ldr	r5, [r1, #64]	@ 0x40
90020654:	4621      	mov	r1, r4
90020656:	47a8      	blx	r5
90020658:	b011      	add	sp, #68	@ 0x44
9002065a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002065e:	6803      	ldr	r3, [r0, #0]
90020660:	ea4f 0946 	mov.w	r9, r6, lsl #1
90020664:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90020666:	4798      	blx	r3
90020668:	f8b8 2000 	ldrh.w	r2, [r8]
9002066c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
90020670:	2dff      	cmp	r5, #255	@ 0xff
90020672:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
90020676:	fb0a fa02 	mul.w	sl, sl, r2
9002067a:	fb02 1303 	mla	r3, r2, r3, r1
9002067e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020682:	d062      	beq.n	9002074a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
90020684:	ea6f 0c05 	mvn.w	ip, r5
90020688:	eb00 034a 	add.w	r3, r0, sl, lsl #1
9002068c:	b2ad      	uxth	r5, r5
9002068e:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
90020692:	fa5f fc8c 	uxtb.w	ip, ip
90020696:	930a      	str	r3, [sp, #40]	@ 0x28
90020698:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002069a:	4298      	cmp	r0, r3
9002069c:	f080 8085 	bcs.w	900207aa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
900206a0:	eb00 0b09 	add.w	fp, r0, r9
900206a4:	4558      	cmp	r0, fp
900206a6:	d246      	bcs.n	90020736 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
900206a8:	f814 eb01 	ldrb.w	lr, [r4], #1
900206ac:	2303      	movs	r3, #3
900206ae:	2204      	movs	r2, #4
900206b0:	fb13 2e0e 	smlabb	lr, r3, lr, r2
900206b4:	8803      	ldrh	r3, [r0, #0]
900206b6:	eb07 0a0e 	add.w	sl, r7, lr
900206ba:	1219      	asrs	r1, r3, #8
900206bc:	10da      	asrs	r2, r3, #3
900206be:	f817 e00e 	ldrb.w	lr, [r7, lr]
900206c2:	f89a 8002 	ldrb.w	r8, [sl, #2]
900206c6:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
900206ca:	00db      	lsls	r3, r3, #3
900206cc:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
900206d0:	fb18 f805 	smulbb	r8, r8, r5
900206d4:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
900206d8:	fb1e fe05 	smulbb	lr, lr, r5
900206dc:	b2db      	uxtb	r3, r3
900206de:	fb01 810c 	mla	r1, r1, ip, r8
900206e2:	f89a 8001 	ldrb.w	r8, [sl, #1]
900206e6:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
900206ea:	fb18 f805 	smulbb	r8, r8, r5
900206ee:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
900206f2:	b289      	uxth	r1, r1
900206f4:	fb02 820c 	mla	r2, r2, ip, r8
900206f8:	fb03 e30c 	mla	r3, r3, ip, lr
900206fc:	f101 0801 	add.w	r8, r1, #1
90020700:	b292      	uxth	r2, r2
90020702:	b29b      	uxth	r3, r3
90020704:	eb08 2111 	add.w	r1, r8, r1, lsr #8
90020708:	f102 0801 	add.w	r8, r2, #1
9002070c:	f103 0e01 	add.w	lr, r3, #1
90020710:	eb08 2812 	add.w	r8, r8, r2, lsr #8
90020714:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90020718:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
9002071c:	ea4f 1858 	mov.w	r8, r8, lsr #5
90020720:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
90020724:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90020728:	ea4e 0101 	orr.w	r1, lr, r1
9002072c:	ea41 0108 	orr.w	r1, r1, r8
90020730:	f820 1b02 	strh.w	r1, [r0], #2
90020734:	e7b6      	b.n	900206a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
90020736:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90020738:	881b      	ldrh	r3, [r3, #0]
9002073a:	1b9b      	subs	r3, r3, r6
9002073c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020740:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
90020744:	1b9b      	subs	r3, r3, r6
90020746:	441c      	add	r4, r3
90020748:	e7a6      	b.n	90020698 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
9002074a:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
9002074e:	2203      	movs	r2, #3
90020750:	2504      	movs	r5, #4
90020752:	4919      	ldr	r1, [pc, #100]	@ (900207b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
90020754:	4550      	cmp	r0, sl
90020756:	d228      	bcs.n	900207aa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
90020758:	eb00 0c09 	add.w	ip, r0, r9
9002075c:	4560      	cmp	r0, ip
9002075e:	4623      	mov	r3, r4
90020760:	d219      	bcs.n	90020796 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
90020762:	f893 e000 	ldrb.w	lr, [r3]
90020766:	3401      	adds	r4, #1
90020768:	fb12 5e0e 	smlabb	lr, r2, lr, r5
9002076c:	eb07 0b0e 	add.w	fp, r7, lr
90020770:	f817 e00e 	ldrb.w	lr, [r7, lr]
90020774:	f89b 3002 	ldrb.w	r3, [fp, #2]
90020778:	f89b b001 	ldrb.w	fp, [fp, #1]
9002077c:	ea01 2303 	and.w	r3, r1, r3, lsl #8
90020780:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
90020784:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
90020788:	ea43 030b 	orr.w	r3, r3, fp
9002078c:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
90020790:	f820 3b02 	strh.w	r3, [r0], #2
90020794:	e7e2      	b.n	9002075c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
90020796:	f8b8 3000 	ldrh.w	r3, [r8]
9002079a:	1b9b      	subs	r3, r3, r6
9002079c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900207a0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
900207a4:	1b9b      	subs	r3, r3, r6
900207a6:	441c      	add	r4, r3
900207a8:	e7d4      	b.n	90020754 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
900207aa:	4b04      	ldr	r3, [pc, #16]	@ (900207bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
900207ac:	6818      	ldr	r0, [r3, #0]
900207ae:	6803      	ldr	r3, [r0, #0]
900207b0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900207b2:	4798      	blx	r3
900207b4:	e750      	b.n	90020658 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
900207b6:	bf00      	nop
900207b8:	fffff800 	.word	0xfffff800
900207bc:	24021864 	.word	0x24021864
900207c0:	2402185e 	.word	0x2402185e

900207c4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
900207c4:	b4f0      	push	{r4, r5, r6, r7}
900207c6:	460c      	mov	r4, r1
900207c8:	4611      	mov	r1, r2
900207ca:	f89d 5014 	ldrb.w	r5, [sp, #20]
900207ce:	461a      	mov	r2, r3
900207d0:	780f      	ldrb	r7, [r1, #0]
900207d2:	9b04      	ldr	r3, [sp, #16]
900207d4:	2f01      	cmp	r7, #1
900207d6:	784e      	ldrb	r6, [r1, #1]
900207d8:	d038      	beq.n	9002084c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
900207da:	d31f      	bcc.n	9002081c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
900207dc:	2f02      	cmp	r7, #2
900207de:	d14d      	bne.n	9002087c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
900207e0:	2e03      	cmp	r6, #3
900207e2:	d84b      	bhi.n	9002087c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
900207e4:	e8df f006 	tbb	[pc, r6]
900207e8:	17140702 	.word	0x17140702
900207ec:	9504      	str	r5, [sp, #16]
900207ee:	4620      	mov	r0, r4
900207f0:	bcf0      	pop	{r4, r5, r6, r7}
900207f2:	f7ff be09 	b.w	90020408 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
900207f6:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
900207f8:	2800      	cmp	r0, #0
900207fa:	d03f      	beq.n	9002087c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
900207fc:	6806      	ldr	r6, [r0, #0]
900207fe:	e9cd 3504 	strd	r3, r5, [sp, #16]
90020802:	68b5      	ldr	r5, [r6, #8]
90020804:	4613      	mov	r3, r2
90020806:	46ac      	mov	ip, r5
90020808:	460a      	mov	r2, r1
9002080a:	4621      	mov	r1, r4
9002080c:	bcf0      	pop	{r4, r5, r6, r7}
9002080e:	4760      	bx	ip
90020810:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
90020814:	e7f0      	b.n	900207f8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
90020816:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
9002081a:	e7ed      	b.n	900207f8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
9002081c:	2e03      	cmp	r6, #3
9002081e:	d82d      	bhi.n	9002087c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020820:	e8df f006 	tbb	[pc, r6]
90020824:	110e0702 	.word	0x110e0702
90020828:	9504      	str	r5, [sp, #16]
9002082a:	4620      	mov	r0, r4
9002082c:	bcf0      	pop	{r4, r5, r6, r7}
9002082e:	f7ff bd05 	b.w	9002023c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
90020832:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
90020834:	b310      	cbz	r0, 9002087c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020836:	6806      	ldr	r6, [r0, #0]
90020838:	e9cd 3504 	strd	r3, r5, [sp, #16]
9002083c:	68f5      	ldr	r5, [r6, #12]
9002083e:	e7e1      	b.n	90020804 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
90020840:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
90020844:	e7f6      	b.n	90020834 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
90020846:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
9002084a:	e7f3      	b.n	90020834 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
9002084c:	2e03      	cmp	r6, #3
9002084e:	d815      	bhi.n	9002087c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020850:	e8df f006 	tbb	[pc, r6]
90020854:	110e0702 	.word	0x110e0702
90020858:	9504      	str	r5, [sp, #16]
9002085a:	4620      	mov	r0, r4
9002085c:	bcf0      	pop	{r4, r5, r6, r7}
9002085e:	f7ff be9f 	b.w	900205a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
90020862:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
90020864:	b150      	cbz	r0, 9002087c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020866:	6806      	ldr	r6, [r0, #0]
90020868:	e9cd 3504 	strd	r3, r5, [sp, #16]
9002086c:	6935      	ldr	r5, [r6, #16]
9002086e:	e7c9      	b.n	90020804 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
90020870:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
90020874:	e7f6      	b.n	90020864 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
90020876:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
9002087a:	e7f3      	b.n	90020864 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
9002087c:	bcf0      	pop	{r4, r5, r6, r7}
9002087e:	4770      	bx	lr

90020880 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
90020880:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020884:	b087      	sub	sp, #28
90020886:	4604      	mov	r4, r0
90020888:	460e      	mov	r6, r1
9002088a:	6810      	ldr	r0, [r2, #0]
9002088c:	6851      	ldr	r1, [r2, #4]
9002088e:	ad02      	add	r5, sp, #8
90020890:	4617      	mov	r7, r2
90020892:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
90020896:	f8df 9230 	ldr.w	r9, [pc, #560]	@ 90020ac8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
9002089a:	c503      	stmia	r5!, {r0, r1}
9002089c:	6818      	ldr	r0, [r3, #0]
9002089e:	ad04      	add	r5, sp, #16
900208a0:	6859      	ldr	r1, [r3, #4]
900208a2:	c503      	stmia	r5!, {r0, r1}
900208a4:	a802      	add	r0, sp, #8
900208a6:	f7f6 f9fb 	bl	90016ca0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900208aa:	4639      	mov	r1, r7
900208ac:	a804      	add	r0, sp, #16
900208ae:	f7f6 fa3b 	bl	90016d28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900208b2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
900208b6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
900208ba:	f8bd 100c 	ldrh.w	r1, [sp, #12]
900208be:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
900208c2:	fb11 2103 	smlabb	r1, r1, r3, r2
900208c6:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
900208ca:	eb04 0441 	add.w	r4, r4, r1, lsl #1
900208ce:	440e      	add	r6, r1
900208d0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
900208d4:	440a      	add	r2, r1
900208d6:	f8ad 2010 	strh.w	r2, [sp, #16]
900208da:	f8bd 200a 	ldrh.w	r2, [sp, #10]
900208de:	4413      	add	r3, r2
900208e0:	f8ad 3012 	strh.w	r3, [sp, #18]
900208e4:	4b77      	ldr	r3, [pc, #476]	@ (90020ac4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
900208e6:	6818      	ldr	r0, [r3, #0]
900208e8:	6803      	ldr	r3, [r0, #0]
900208ea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900208ec:	4798      	blx	r3
900208ee:	f8b9 b000 	ldrh.w	fp, [r9]
900208f2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
900208f6:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
900208fa:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
900208fe:	fb05 f50b 	mul.w	r5, r5, fp
90020902:	fb0b 2303 	mla	r3, fp, r3, r2
90020906:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9002090a:	ea4f 0348 	mov.w	r3, r8, lsl #1
9002090e:	9300      	str	r3, [sp, #0]
90020910:	d069      	beq.n	900209e6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
90020912:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
90020916:	4558      	cmp	r0, fp
90020918:	f080 80cc 	bcs.w	90020ab4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9002091c:	9b00      	ldr	r3, [sp, #0]
9002091e:	4631      	mov	r1, r6
90020920:	18c3      	adds	r3, r0, r3
90020922:	9301      	str	r3, [sp, #4]
90020924:	9b01      	ldr	r3, [sp, #4]
90020926:	4298      	cmp	r0, r3
90020928:	d24f      	bcs.n	900209ca <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
9002092a:	f811 2b01 	ldrb.w	r2, [r1], #1
9002092e:	2a00      	cmp	r2, #0
90020930:	d048      	beq.n	900209c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
90020932:	fb0a f202 	mul.w	r2, sl, r2
90020936:	1c53      	adds	r3, r2, #1
90020938:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002093c:	121b      	asrs	r3, r3, #8
9002093e:	d041      	beq.n	900209c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
90020940:	8802      	ldrh	r2, [r0, #0]
90020942:	b29e      	uxth	r6, r3
90020944:	f8b4 c000 	ldrh.w	ip, [r4]
90020948:	43db      	mvns	r3, r3
9002094a:	1215      	asrs	r5, r2, #8
9002094c:	b2db      	uxtb	r3, r3
9002094e:	ea4f 272c 	mov.w	r7, ip, asr #8
90020952:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90020956:	ea4f 0ee2 	mov.w	lr, r2, asr #3
9002095a:	fb15 f503 	smulbb	r5, r5, r3
9002095e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90020962:	00d2      	lsls	r2, r2, #3
90020964:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
90020968:	fb07 5706 	mla	r7, r7, r6, r5
9002096c:	ea4f 05ec 	mov.w	r5, ip, asr #3
90020970:	b2d2      	uxtb	r2, r2
90020972:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90020976:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9002097a:	fb1e fe03 	smulbb	lr, lr, r3
9002097e:	b2bf      	uxth	r7, r7
90020980:	fb12 f203 	smulbb	r2, r2, r3
90020984:	fa5f fc8c 	uxtb.w	ip, ip
90020988:	fb05 e506 	mla	r5, r5, r6, lr
9002098c:	f107 0e01 	add.w	lr, r7, #1
90020990:	fb0c 2c06 	mla	ip, ip, r6, r2
90020994:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
90020998:	fa1f fc8c 	uxth.w	ip, ip
9002099c:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
900209a0:	b2ad      	uxth	r5, r5
900209a2:	f10c 0701 	add.w	r7, ip, #1
900209a6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900209aa:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900209ae:	ea47 070e 	orr.w	r7, r7, lr
900209b2:	f105 0e01 	add.w	lr, r5, #1
900209b6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
900209ba:	096d      	lsrs	r5, r5, #5
900209bc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900209c0:	432f      	orrs	r7, r5
900209c2:	8007      	strh	r7, [r0, #0]
900209c4:	3002      	adds	r0, #2
900209c6:	3402      	adds	r4, #2
900209c8:	e7ac      	b.n	90020924 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
900209ca:	f8b9 3000 	ldrh.w	r3, [r9]
900209ce:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
900209d2:	eba3 0308 	sub.w	r3, r3, r8
900209d6:	eba6 0608 	sub.w	r6, r6, r8
900209da:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900209de:	eb04 0446 	add.w	r4, r4, r6, lsl #1
900209e2:	440e      	add	r6, r1
900209e4:	e797      	b.n	90020916 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
900209e6:	eb00 0545 	add.w	r5, r0, r5, lsl #1
900209ea:	42a8      	cmp	r0, r5
900209ec:	d262      	bcs.n	90020ab4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
900209ee:	9b00      	ldr	r3, [sp, #0]
900209f0:	4631      	mov	r1, r6
900209f2:	eb00 0b03 	add.w	fp, r0, r3
900209f6:	4558      	cmp	r0, fp
900209f8:	d24e      	bcs.n	90020a98 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
900209fa:	f811 3b01 	ldrb.w	r3, [r1], #1
900209fe:	b12b      	cbz	r3, 90020a0c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
90020a00:	2bff      	cmp	r3, #255	@ 0xff
90020a02:	f8b4 e000 	ldrh.w	lr, [r4]
90020a06:	d104      	bne.n	90020a12 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
90020a08:	f8a0 e000 	strh.w	lr, [r0]
90020a0c:	3002      	adds	r0, #2
90020a0e:	3402      	adds	r4, #2
90020a10:	e7f1      	b.n	900209f6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
90020a12:	8802      	ldrh	r2, [r0, #0]
90020a14:	b29f      	uxth	r7, r3
90020a16:	43db      	mvns	r3, r3
90020a18:	ea4f 2c2e 	mov.w	ip, lr, asr #8
90020a1c:	1216      	asrs	r6, r2, #8
90020a1e:	b2db      	uxtb	r3, r3
90020a20:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90020a24:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
90020a28:	ea4f 0ae2 	mov.w	sl, r2, asr #3
90020a2c:	00d2      	lsls	r2, r2, #3
90020a2e:	fb16 f603 	smulbb	r6, r6, r3
90020a32:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
90020a36:	b2d2      	uxtb	r2, r2
90020a38:	fb0c 6c07 	mla	ip, ip, r7, r6
90020a3c:	ea4f 06ee 	mov.w	r6, lr, asr #3
90020a40:	fb1a fa03 	smulbb	sl, sl, r3
90020a44:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90020a48:	fa1f fc8c 	uxth.w	ip, ip
90020a4c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90020a50:	fb12 f303 	smulbb	r3, r2, r3
90020a54:	fa5f fe8e 	uxtb.w	lr, lr
90020a58:	fb06 a607 	mla	r6, r6, r7, sl
90020a5c:	f10c 0201 	add.w	r2, ip, #1
90020a60:	fb0e 3307 	mla	r3, lr, r7, r3
90020a64:	b2b6      	uxth	r6, r6
90020a66:	b29b      	uxth	r3, r3
90020a68:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
90020a6c:	f106 0a01 	add.w	sl, r6, #1
90020a70:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
90020a74:	f103 0c01 	add.w	ip, r3, #1
90020a78:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
90020a7c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90020a80:	0976      	lsrs	r6, r6, #5
90020a82:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90020a86:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
90020a8a:	ea4c 0c02 	orr.w	ip, ip, r2
90020a8e:	ea4c 0c06 	orr.w	ip, ip, r6
90020a92:	f8a0 c000 	strh.w	ip, [r0]
90020a96:	e7b9      	b.n	90020a0c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
90020a98:	f8b9 3000 	ldrh.w	r3, [r9]
90020a9c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
90020aa0:	eba3 0308 	sub.w	r3, r3, r8
90020aa4:	eba6 0608 	sub.w	r6, r6, r8
90020aa8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020aac:	eb04 0446 	add.w	r4, r4, r6, lsl #1
90020ab0:	440e      	add	r6, r1
90020ab2:	e79a      	b.n	900209ea <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
90020ab4:	4b03      	ldr	r3, [pc, #12]	@ (90020ac4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
90020ab6:	6818      	ldr	r0, [r3, #0]
90020ab8:	6803      	ldr	r3, [r0, #0]
90020aba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90020abc:	4798      	blx	r3
90020abe:	b007      	add	sp, #28
90020ac0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020ac4:	24021864 	.word	0x24021864
90020ac8:	2402185e 	.word	0x2402185e

90020acc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
90020acc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020ad0:	b089      	sub	sp, #36	@ 0x24
90020ad2:	4607      	mov	r7, r0
90020ad4:	4688      	mov	r8, r1
90020ad6:	4692      	mov	sl, r2
90020ad8:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
90020adc:	4699      	mov	r9, r3
90020ade:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90020ae0:	2e00      	cmp	r6, #0
90020ae2:	d048      	beq.n	90020b76 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020ae4:	4608      	mov	r0, r1
90020ae6:	f7fa f813 	bl	9001ab10 <_ZNK8touchgfx6Bitmap8getWidthEv>
90020aea:	4605      	mov	r5, r0
90020aec:	4640      	mov	r0, r8
90020aee:	f7fa f843 	bl	9001ab78 <_ZNK8touchgfx6Bitmap9getHeightEv>
90020af2:	f8ad 000e 	strh.w	r0, [sp, #14]
90020af6:	4640      	mov	r0, r8
90020af8:	f8ad a008 	strh.w	sl, [sp, #8]
90020afc:	f8ad 500c 	strh.w	r5, [sp, #12]
90020b00:	f8ad 900a 	strh.w	r9, [sp, #10]
90020b04:	f7fa f8f6 	bl	9001acf4 <_ZNK8touchgfx6Bitmap7getDataEv>
90020b08:	4605      	mov	r5, r0
90020b0a:	4640      	mov	r0, r8
90020b0c:	f7fa f922 	bl	9001ad54 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
90020b10:	4682      	mov	sl, r0
90020b12:	4640      	mov	r0, r8
90020b14:	f7fa f972 	bl	9001adfc <_ZNK8touchgfx6Bitmap9getFormatEv>
90020b18:	2810      	cmp	r0, #16
90020b1a:	d82c      	bhi.n	90020b76 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020b1c:	e8df f010 	tbh	[pc, r0, lsl #1]
90020b20:	00ba00ca 	.word	0x00ba00ca
90020b24:	002b0011 	.word	0x002b0011
90020b28:	002b002b 	.word	0x002b002b
90020b2c:	002b002b 	.word	0x002b002b
90020b30:	002b002b 	.word	0x002b002b
90020b34:	00c1002b 	.word	0x00c1002b
90020b38:	002b002b 	.word	0x002b002b
90020b3c:	002b0180 	.word	0x002b0180
90020b40:	0173      	.short	0x0173
90020b42:	4bbc      	ldr	r3, [pc, #752]	@ (90020e34 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
90020b44:	6818      	ldr	r0, [r3, #0]
90020b46:	6803      	ldr	r3, [r0, #0]
90020b48:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90020b4a:	4798      	blx	r3
90020b4c:	2eff      	cmp	r6, #255	@ 0xff
90020b4e:	d101      	bne.n	90020b54 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
90020b50:	0683      	lsls	r3, r0, #26
90020b52:	d506      	bpl.n	90020b62 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
90020b54:	4633      	mov	r3, r6
90020b56:	4622      	mov	r2, r4
90020b58:	a902      	add	r1, sp, #8
90020b5a:	4628      	mov	r0, r5
90020b5c:	f7ff f8fc 	bl	9001fd58 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90020b60:	e009      	b.n	90020b76 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020b62:	4640      	mov	r0, r8
90020b64:	f7fa f88e 	bl	9001ac84 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90020b68:	b940      	cbnz	r0, 90020b7c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
90020b6a:	4623      	mov	r3, r4
90020b6c:	aa02      	add	r2, sp, #8
90020b6e:	4629      	mov	r1, r5
90020b70:	4638      	mov	r0, r7
90020b72:	f7ff f9d7 	bl	9001ff24 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
90020b76:	b009      	add	sp, #36	@ 0x24
90020b78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020b7c:	f10d 0918 	add.w	r9, sp, #24
90020b80:	4641      	mov	r1, r8
90020b82:	f10d 0810 	add.w	r8, sp, #16
90020b86:	4648      	mov	r0, r9
90020b88:	f7fa f82a 	bl	9001abe0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90020b8c:	e899 0003 	ldmia.w	r9, {r0, r1}
90020b90:	e888 0003 	stmia.w	r8, {r0, r1}
90020b94:	4640      	mov	r0, r8
90020b96:	4621      	mov	r1, r4
90020b98:	f7f0 fb6c 	bl	90011274 <_ZN8touchgfx4RectaNERKS0_>
90020b9c:	4640      	mov	r0, r8
90020b9e:	f7f0 fbac 	bl	900112fa <_ZNK8touchgfx4Rect7isEmptyEv>
90020ba2:	2800      	cmp	r0, #0
90020ba4:	d1d6      	bne.n	90020b54 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
90020ba6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90020baa:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90020bae:	4293      	cmp	r3, r2
90020bb0:	dd12      	ble.n	90020bd8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
90020bb2:	1a9b      	subs	r3, r3, r2
90020bb4:	f9b4 0000 	ldrsh.w	r0, [r4]
90020bb8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90020bbc:	f8ad 0018 	strh.w	r0, [sp, #24]
90020bc0:	4628      	mov	r0, r5
90020bc2:	f8ad 201a 	strh.w	r2, [sp, #26]
90020bc6:	464a      	mov	r2, r9
90020bc8:	f8ad 101c 	strh.w	r1, [sp, #28]
90020bcc:	a902      	add	r1, sp, #8
90020bce:	f8ad 301e 	strh.w	r3, [sp, #30]
90020bd2:	4633      	mov	r3, r6
90020bd4:	f7ff f8c0 	bl	9001fd58 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90020bd8:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
90020bdc:	f9b4 2000 	ldrsh.w	r2, [r4]
90020be0:	4293      	cmp	r3, r2
90020be2:	dd12      	ble.n	90020c0a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
90020be4:	1a9b      	subs	r3, r3, r2
90020be6:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
90020bea:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
90020bee:	f8ad 2018 	strh.w	r2, [sp, #24]
90020bf2:	464a      	mov	r2, r9
90020bf4:	f8ad 001a 	strh.w	r0, [sp, #26]
90020bf8:	4628      	mov	r0, r5
90020bfa:	f8ad 301c 	strh.w	r3, [sp, #28]
90020bfe:	23ff      	movs	r3, #255	@ 0xff
90020c00:	f8ad 101e 	strh.w	r1, [sp, #30]
90020c04:	a902      	add	r1, sp, #8
90020c06:	f7ff f8a7 	bl	9001fd58 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90020c0a:	4643      	mov	r3, r8
90020c0c:	aa02      	add	r2, sp, #8
90020c0e:	4629      	mov	r1, r5
90020c10:	4638      	mov	r0, r7
90020c12:	f7ff f987 	bl	9001ff24 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
90020c16:	88a2      	ldrh	r2, [r4, #4]
90020c18:	8823      	ldrh	r3, [r4, #0]
90020c1a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
90020c1e:	4413      	add	r3, r2
90020c20:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90020c24:	440a      	add	r2, r1
90020c26:	b29b      	uxth	r3, r3
90020c28:	b292      	uxth	r2, r2
90020c2a:	b218      	sxth	r0, r3
90020c2c:	b211      	sxth	r1, r2
90020c2e:	4288      	cmp	r0, r1
90020c30:	dd12      	ble.n	90020c58 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
90020c32:	1a9b      	subs	r3, r3, r2
90020c34:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
90020c38:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
90020c3c:	464a      	mov	r2, r9
90020c3e:	f8ad 1018 	strh.w	r1, [sp, #24]
90020c42:	a902      	add	r1, sp, #8
90020c44:	f8ad 301c 	strh.w	r3, [sp, #28]
90020c48:	23ff      	movs	r3, #255	@ 0xff
90020c4a:	f8ad 001e 	strh.w	r0, [sp, #30]
90020c4e:	4628      	mov	r0, r5
90020c50:	f8ad 601a 	strh.w	r6, [sp, #26]
90020c54:	f7ff f880 	bl	9001fd58 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90020c58:	88e2      	ldrh	r2, [r4, #6]
90020c5a:	8863      	ldrh	r3, [r4, #2]
90020c5c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
90020c60:	4413      	add	r3, r2
90020c62:	f8bd 2012 	ldrh.w	r2, [sp, #18]
90020c66:	440a      	add	r2, r1
90020c68:	b29b      	uxth	r3, r3
90020c6a:	b292      	uxth	r2, r2
90020c6c:	b218      	sxth	r0, r3
90020c6e:	b211      	sxth	r1, r2
90020c70:	4288      	cmp	r0, r1
90020c72:	dd80      	ble.n	90020b76 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020c74:	1a9b      	subs	r3, r3, r2
90020c76:	f9b4 6000 	ldrsh.w	r6, [r4]
90020c7a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90020c7e:	464a      	mov	r2, r9
90020c80:	f8ad 301e 	strh.w	r3, [sp, #30]
90020c84:	23ff      	movs	r3, #255	@ 0xff
90020c86:	f8ad 6018 	strh.w	r6, [sp, #24]
90020c8a:	f8ad 101a 	strh.w	r1, [sp, #26]
90020c8e:	f8ad 001c 	strh.w	r0, [sp, #28]
90020c92:	e761      	b.n	90020b58 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
90020c94:	4633      	mov	r3, r6
90020c96:	4622      	mov	r2, r4
90020c98:	a902      	add	r1, sp, #8
90020c9a:	4628      	mov	r0, r5
90020c9c:	f7ff f9b2 	bl	90020004 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
90020ca0:	e769      	b.n	90020b76 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020ca2:	e9cd 4600 	strd	r4, r6, [sp]
90020ca6:	ab02      	add	r3, sp, #8
90020ca8:	4652      	mov	r2, sl
90020caa:	4629      	mov	r1, r5
90020cac:	4638      	mov	r0, r7
90020cae:	f7ff fd89 	bl	900207c4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
90020cb2:	e760      	b.n	90020b76 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020cb4:	4640      	mov	r0, r8
90020cb6:	f7f9 ffe5 	bl	9001ac84 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90020cba:	b948      	cbnz	r0, 90020cd0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
90020cbc:	683b      	ldr	r3, [r7, #0]
90020cbe:	aa02      	add	r2, sp, #8
90020cc0:	4629      	mov	r1, r5
90020cc2:	e9cd 6000 	strd	r6, r0, [sp]
90020cc6:	4638      	mov	r0, r7
90020cc8:	68de      	ldr	r6, [r3, #12]
90020cca:	4623      	mov	r3, r4
90020ccc:	47b0      	blx	r6
90020cce:	e752      	b.n	90020b76 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020cd0:	f10d 0918 	add.w	r9, sp, #24
90020cd4:	4641      	mov	r1, r8
90020cd6:	f10d 0810 	add.w	r8, sp, #16
90020cda:	4648      	mov	r0, r9
90020cdc:	f7f9 ff80 	bl	9001abe0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90020ce0:	e899 0003 	ldmia.w	r9, {r0, r1}
90020ce4:	e888 0003 	stmia.w	r8, {r0, r1}
90020ce8:	4640      	mov	r0, r8
90020cea:	4621      	mov	r1, r4
90020cec:	f7f0 fac2 	bl	90011274 <_ZN8touchgfx4RectaNERKS0_>
90020cf0:	4640      	mov	r0, r8
90020cf2:	f7f0 fb02 	bl	900112fa <_ZNK8touchgfx4Rect7isEmptyEv>
90020cf6:	b138      	cbz	r0, 90020d08 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
90020cf8:	4623      	mov	r3, r4
90020cfa:	9600      	str	r6, [sp, #0]
90020cfc:	aa02      	add	r2, sp, #8
90020cfe:	4651      	mov	r1, sl
90020d00:	4628      	mov	r0, r5
90020d02:	f7ff fdbd 	bl	90020880 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90020d06:	e736      	b.n	90020b76 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020d08:	683b      	ldr	r3, [r7, #0]
90020d0a:	aa02      	add	r2, sp, #8
90020d0c:	4629      	mov	r1, r5
90020d0e:	e9cd 6000 	strd	r6, r0, [sp]
90020d12:	4638      	mov	r0, r7
90020d14:	f8d3 b00c 	ldr.w	fp, [r3, #12]
90020d18:	4643      	mov	r3, r8
90020d1a:	47d8      	blx	fp
90020d1c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90020d20:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90020d24:	4293      	cmp	r3, r2
90020d26:	dd13      	ble.n	90020d50 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
90020d28:	f9b4 0000 	ldrsh.w	r0, [r4]
90020d2c:	1a9b      	subs	r3, r3, r2
90020d2e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90020d32:	f8ad 0018 	strh.w	r0, [sp, #24]
90020d36:	4628      	mov	r0, r5
90020d38:	f8ad 201a 	strh.w	r2, [sp, #26]
90020d3c:	aa02      	add	r2, sp, #8
90020d3e:	f8ad 101c 	strh.w	r1, [sp, #28]
90020d42:	4651      	mov	r1, sl
90020d44:	f8ad 301e 	strh.w	r3, [sp, #30]
90020d48:	464b      	mov	r3, r9
90020d4a:	9600      	str	r6, [sp, #0]
90020d4c:	f7ff fd98 	bl	90020880 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90020d50:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
90020d54:	f9b4 2000 	ldrsh.w	r2, [r4]
90020d58:	4293      	cmp	r3, r2
90020d5a:	dd13      	ble.n	90020d84 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
90020d5c:	1a9b      	subs	r3, r3, r2
90020d5e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
90020d62:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
90020d66:	f8ad 2018 	strh.w	r2, [sp, #24]
90020d6a:	aa02      	add	r2, sp, #8
90020d6c:	f8ad 001a 	strh.w	r0, [sp, #26]
90020d70:	4628      	mov	r0, r5
90020d72:	f8ad 301c 	strh.w	r3, [sp, #28]
90020d76:	464b      	mov	r3, r9
90020d78:	f8ad 101e 	strh.w	r1, [sp, #30]
90020d7c:	4651      	mov	r1, sl
90020d7e:	9600      	str	r6, [sp, #0]
90020d80:	f7ff fd7e 	bl	90020880 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90020d84:	88a2      	ldrh	r2, [r4, #4]
90020d86:	8823      	ldrh	r3, [r4, #0]
90020d88:	f8bd 1014 	ldrh.w	r1, [sp, #20]
90020d8c:	4413      	add	r3, r2
90020d8e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90020d92:	440a      	add	r2, r1
90020d94:	b29b      	uxth	r3, r3
90020d96:	b292      	uxth	r2, r2
90020d98:	b218      	sxth	r0, r3
90020d9a:	b211      	sxth	r1, r2
90020d9c:	4288      	cmp	r0, r1
90020d9e:	dd13      	ble.n	90020dc8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
90020da0:	1a9b      	subs	r3, r3, r2
90020da2:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
90020da6:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
90020daa:	aa02      	add	r2, sp, #8
90020dac:	f8ad 1018 	strh.w	r1, [sp, #24]
90020db0:	4651      	mov	r1, sl
90020db2:	f8ad 301c 	strh.w	r3, [sp, #28]
90020db6:	464b      	mov	r3, r9
90020db8:	f8ad 001e 	strh.w	r0, [sp, #30]
90020dbc:	4628      	mov	r0, r5
90020dbe:	9600      	str	r6, [sp, #0]
90020dc0:	f8ad 701a 	strh.w	r7, [sp, #26]
90020dc4:	f7ff fd5c 	bl	90020880 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90020dc8:	88e2      	ldrh	r2, [r4, #6]
90020dca:	8863      	ldrh	r3, [r4, #2]
90020dcc:	f8bd 1016 	ldrh.w	r1, [sp, #22]
90020dd0:	4413      	add	r3, r2
90020dd2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
90020dd6:	440a      	add	r2, r1
90020dd8:	b29b      	uxth	r3, r3
90020dda:	b292      	uxth	r2, r2
90020ddc:	b218      	sxth	r0, r3
90020dde:	b211      	sxth	r1, r2
90020de0:	4288      	cmp	r0, r1
90020de2:	f77f aec8 	ble.w	90020b76 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020de6:	f9b4 7000 	ldrsh.w	r7, [r4]
90020dea:	1a9b      	subs	r3, r3, r2
90020dec:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90020df0:	f8ad 301e 	strh.w	r3, [sp, #30]
90020df4:	464b      	mov	r3, r9
90020df6:	f8ad 7018 	strh.w	r7, [sp, #24]
90020dfa:	f8ad 101a 	strh.w	r1, [sp, #26]
90020dfe:	f8ad 001c 	strh.w	r0, [sp, #28]
90020e02:	9600      	str	r6, [sp, #0]
90020e04:	e77a      	b.n	90020cfc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
90020e06:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
90020e0a:	2800      	cmp	r0, #0
90020e0c:	f43f aeb3 	beq.w	90020b76 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020e10:	6803      	ldr	r3, [r0, #0]
90020e12:	9600      	str	r6, [sp, #0]
90020e14:	68de      	ldr	r6, [r3, #12]
90020e16:	4623      	mov	r3, r4
90020e18:	aa02      	add	r2, sp, #8
90020e1a:	4629      	mov	r1, r5
90020e1c:	47b0      	blx	r6
90020e1e:	e6aa      	b.n	90020b76 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020e20:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
90020e24:	2800      	cmp	r0, #0
90020e26:	f43f aea6 	beq.w	90020b76 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020e2a:	6803      	ldr	r3, [r0, #0]
90020e2c:	9600      	str	r6, [sp, #0]
90020e2e:	689e      	ldr	r6, [r3, #8]
90020e30:	e7f1      	b.n	90020e16 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
90020e32:	bf00      	nop
90020e34:	24021864 	.word	0x24021864

90020e38 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
90020e38:	b180      	cbz	r0, 90020e5c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
90020e3a:	2903      	cmp	r1, #3
90020e3c:	d81c      	bhi.n	90020e78 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
90020e3e:	e8df f001 	tbb	[pc, r1]
90020e42:	1d02      	.short	0x1d02
90020e44:	1f08      	.short	0x1f08
90020e46:	4b10      	ldr	r3, [pc, #64]	@ (90020e88 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
90020e48:	8818      	ldrh	r0, [r3, #0]
90020e4a:	f3c0 000e 	ubfx	r0, r0, #0, #15
90020e4e:	4240      	negs	r0, r0
90020e50:	4770      	bx	lr
90020e52:	4b0d      	ldr	r3, [pc, #52]	@ (90020e88 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
90020e54:	8818      	ldrh	r0, [r3, #0]
90020e56:	f3c0 000e 	ubfx	r0, r0, #0, #15
90020e5a:	4770      	bx	lr
90020e5c:	2903      	cmp	r1, #3
90020e5e:	d80b      	bhi.n	90020e78 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
90020e60:	a301      	add	r3, pc, #4	@ (adr r3, 90020e68 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
90020e62:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
90020e66:	bf00      	nop
90020e68:	90020e7d 	.word	0x90020e7d
90020e6c:	90020e53 	.word	0x90020e53
90020e70:	90020e81 	.word	0x90020e81
90020e74:	90020e47 	.word	0x90020e47
90020e78:	2000      	movs	r0, #0
90020e7a:	4770      	bx	lr
90020e7c:	2001      	movs	r0, #1
90020e7e:	4770      	bx	lr
90020e80:	f04f 30ff 	mov.w	r0, #4294967295
90020e84:	4770      	bx	lr
90020e86:	bf00      	nop
90020e88:	2402185e 	.word	0x2402185e

90020e8c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
90020e8c:	b180      	cbz	r0, 90020eb0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
90020e8e:	2903      	cmp	r1, #3
90020e90:	d81c      	bhi.n	90020ecc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
90020e92:	e8df f001 	tbb	[pc, r1]
90020e96:	021d      	.short	0x021d
90020e98:	071f      	.short	0x071f
90020e9a:	4b10      	ldr	r3, [pc, #64]	@ (90020edc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
90020e9c:	8818      	ldrh	r0, [r3, #0]
90020e9e:	f3c0 000e 	ubfx	r0, r0, #0, #15
90020ea2:	4770      	bx	lr
90020ea4:	4b0d      	ldr	r3, [pc, #52]	@ (90020edc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
90020ea6:	8818      	ldrh	r0, [r3, #0]
90020ea8:	f3c0 000e 	ubfx	r0, r0, #0, #15
90020eac:	4240      	negs	r0, r0
90020eae:	4770      	bx	lr
90020eb0:	2903      	cmp	r1, #3
90020eb2:	d80b      	bhi.n	90020ecc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
90020eb4:	a301      	add	r3, pc, #4	@ (adr r3, 90020ebc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
90020eb6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
90020eba:	bf00      	nop
90020ebc:	90020e9b 	.word	0x90020e9b
90020ec0:	90020ed5 	.word	0x90020ed5
90020ec4:	90020ea5 	.word	0x90020ea5
90020ec8:	90020ed1 	.word	0x90020ed1
90020ecc:	2000      	movs	r0, #0
90020ece:	4770      	bx	lr
90020ed0:	2001      	movs	r0, #1
90020ed2:	4770      	bx	lr
90020ed4:	f04f 30ff 	mov.w	r0, #4294967295
90020ed8:	4770      	bx	lr
90020eda:	bf00      	nop
90020edc:	2402185e 	.word	0x2402185e

90020ee0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
90020ee0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020ee4:	b099      	sub	sp, #100	@ 0x64
90020ee6:	910d      	str	r1, [sp, #52]	@ 0x34
90020ee8:	a914      	add	r1, sp, #80	@ 0x50
90020eea:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
90020eee:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
90020ef2:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
90020ef6:	9f28      	ldr	r7, [sp, #160]	@ 0xa0
90020ef8:	f8dd 90a8 	ldr.w	r9, [sp, #168]	@ 0xa8
90020efc:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
90020f00:	e881 000c 	stmia.w	r1, {r2, r3}
90020f04:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
90020f08:	930b      	str	r3, [sp, #44]	@ 0x2c
90020f0a:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
90020f0e:	9310      	str	r3, [sp, #64]	@ 0x40
90020f10:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
90020f14:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
90020f18:	9308      	str	r3, [sp, #32]
90020f1a:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
90020f1e:	9309      	str	r3, [sp, #36]	@ 0x24
90020f20:	7b4b      	ldrb	r3, [r1, #13]
90020f22:	ea4f 1843 	mov.w	r8, r3, lsl #5
90020f26:	f408 7080 	and.w	r0, r8, #256	@ 0x100
90020f2a:	f891 8006 	ldrb.w	r8, [r1, #6]
90020f2e:	ea58 0800 	orrs.w	r8, r8, r0
90020f32:	f000 81d0 	beq.w	900212d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
90020f36:	011b      	lsls	r3, r3, #4
90020f38:	79c8      	ldrb	r0, [r1, #7]
90020f3a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90020f3e:	4303      	orrs	r3, r0
90020f40:	930c      	str	r3, [sp, #48]	@ 0x30
90020f42:	f000 81c8 	beq.w	900212d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
90020f46:	f991 3009 	ldrsb.w	r3, [r1, #9]
90020f4a:	b29b      	uxth	r3, r3
90020f4c:	2d00      	cmp	r5, #0
90020f4e:	f000 812d 	beq.w	900211ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2cc>
90020f52:	1aed      	subs	r5, r5, r3
90020f54:	b2ad      	uxth	r5, r5
90020f56:	0429      	lsls	r1, r5, #16
90020f58:	d502      	bpl.n	90020f60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
90020f5a:	1b64      	subs	r4, r4, r5
90020f5c:	2500      	movs	r5, #0
90020f5e:	b224      	sxth	r4, r4
90020f60:	f9b2 0000 	ldrsh.w	r0, [r2]
90020f64:	8891      	ldrh	r1, [r2, #4]
90020f66:	4284      	cmp	r4, r0
90020f68:	b283      	uxth	r3, r0
90020f6a:	bfb8      	it	lt
90020f6c:	18ed      	addlt	r5, r5, r3
90020f6e:	440b      	add	r3, r1
90020f70:	b21b      	sxth	r3, r3
90020f72:	bfb8      	it	lt
90020f74:	1b2c      	sublt	r4, r5, r4
90020f76:	930a      	str	r3, [sp, #40]	@ 0x28
90020f78:	bfb8      	it	lt
90020f7a:	b2a5      	uxthlt	r5, r4
90020f7c:	88d3      	ldrh	r3, [r2, #6]
90020f7e:	bfb8      	it	lt
90020f80:	4604      	movlt	r4, r0
90020f82:	8852      	ldrh	r2, [r2, #2]
90020f84:	a814      	add	r0, sp, #80	@ 0x50
90020f86:	4621      	mov	r1, r4
90020f88:	4413      	add	r3, r2
90020f8a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90020f8c:	b21b      	sxth	r3, r3
90020f8e:	930f      	str	r3, [sp, #60]	@ 0x3c
90020f90:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90020f92:	930e      	str	r3, [sp, #56]	@ 0x38
90020f94:	4bb2      	ldr	r3, [pc, #712]	@ (90021260 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
90020f96:	f893 b000 	ldrb.w	fp, [r3]
90020f9a:	4653      	mov	r3, sl
90020f9c:	f7f5 fcf5 	bl	9001698a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
90020fa0:	4621      	mov	r1, r4
90020fa2:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
90020fa6:	4653      	mov	r3, sl
90020fa8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90020faa:	a814      	add	r0, sp, #80	@ 0x50
90020fac:	f7f5 fd0a 	bl	900169c4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
90020fb0:	a918      	add	r1, sp, #96	@ 0x60
90020fb2:	f821 0d02 	strh.w	r0, [r1, #-2]!
90020fb6:	a817      	add	r0, sp, #92	@ 0x5c
90020fb8:	f7f5 fe30 	bl	90016c1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
90020fbc:	f1ba 0f00 	cmp.w	sl, #0
90020fc0:	f040 80f7 	bne.w	900211b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d2>
90020fc4:	f1bb 0f01 	cmp.w	fp, #1
90020fc8:	f040 80fb 	bne.w	900211c2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
90020fcc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90020fce:	2b00      	cmp	r3, #0
90020fd0:	f040 81a9 	bne.w	90021326 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x446>
90020fd4:	fa1f f288 	uxth.w	r2, r8
90020fd8:	b905      	cbnz	r5, 90020fdc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
90020fda:	b15e      	cbz	r6, 90020ff4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x114>
90020fdc:	fb06 5302 	mla	r3, r6, r2, r5
90020fe0:	9808      	ldr	r0, [sp, #32]
90020fe2:	4631      	mov	r1, r6
90020fe4:	4343      	muls	r3, r0
90020fe6:	f003 0607 	and.w	r6, r3, #7
90020fea:	eb07 07d3 	add.w	r7, r7, r3, lsr #3
90020fee:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90020ff0:	1a5b      	subs	r3, r3, r1
90020ff2:	930e      	str	r3, [sp, #56]	@ 0x38
90020ff4:	f10b 31ff 	add.w	r1, fp, #4294967295
90020ff8:	424b      	negs	r3, r1
90020ffa:	414b      	adcs	r3, r1
90020ffc:	4651      	mov	r1, sl
90020ffe:	4618      	mov	r0, r3
90021000:	930c      	str	r3, [sp, #48]	@ 0x30
90021002:	f7ff ff19 	bl	90020e38 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
90021006:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90021008:	4683      	mov	fp, r0
9002100a:	4618      	mov	r0, r3
9002100c:	f7ff ff3e 	bl	90020e8c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
90021010:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90021012:	4603      	mov	r3, r0
90021014:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90021016:	eba1 0a00 	sub.w	sl, r1, r0
9002101a:	990e      	ldr	r1, [sp, #56]	@ 0x38
9002101c:	458a      	cmp	sl, r1
9002101e:	bfa8      	it	ge
90021020:	468a      	movge	sl, r1
90021022:	f1ba 0f00 	cmp.w	sl, #0
90021026:	f340 8156 	ble.w	900212d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
9002102a:	1b64      	subs	r4, r4, r5
9002102c:	990a      	ldr	r1, [sp, #40]	@ 0x28
9002102e:	1b0c      	subs	r4, r1, r4
90021030:	4544      	cmp	r4, r8
90021032:	bfd4      	ite	le
90021034:	ebc5 0504 	rsble	r5, r5, r4
90021038:	ebc5 0508 	rsbgt	r5, r5, r8
9002103c:	2d00      	cmp	r5, #0
9002103e:	f340 814a 	ble.w	900212d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
90021042:	1b52      	subs	r2, r2, r5
90021044:	9908      	ldr	r1, [sp, #32]
90021046:	434a      	muls	r2, r1
90021048:	920e      	str	r2, [sp, #56]	@ 0x38
9002104a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9002104c:	2a00      	cmp	r2, #0
9002104e:	f040 8176 	bne.w	9002133e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45e>
90021052:	4a84      	ldr	r2, [pc, #528]	@ (90021264 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
90021054:	930a      	str	r3, [sp, #40]	@ 0x28
90021056:	6810      	ldr	r0, [r2, #0]
90021058:	6802      	ldr	r2, [r0, #0]
9002105a:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
9002105c:	4790      	blx	r2
9002105e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90021060:	9908      	ldr	r1, [sp, #32]
90021062:	2201      	movs	r2, #1
90021064:	408a      	lsls	r2, r1
90021066:	4980      	ldr	r1, [pc, #512]	@ (90021268 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
90021068:	3a01      	subs	r2, #1
9002106a:	880c      	ldrh	r4, [r1, #0]
9002106c:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	@ 0x5c
90021070:	b2d2      	uxtb	r2, r2
90021072:	920c      	str	r2, [sp, #48]	@ 0x30
90021074:	f9bd 205e 	ldrsh.w	r2, [sp, #94]	@ 0x5e
90021078:	fb04 1202 	mla	r2, r4, r2, r1
9002107c:	ea4f 2419 	mov.w	r4, r9, lsr #8
90021080:	ea4f 1159 	mov.w	r1, r9, lsr #5
90021084:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90021088:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002108c:	920a      	str	r2, [sp, #40]	@ 0x28
9002108e:	f3c9 4207 	ubfx	r2, r9, #16, #8
90021092:	9212      	str	r2, [sp, #72]	@ 0x48
90021094:	b2e2      	uxtb	r2, r4
90021096:	9211      	str	r2, [sp, #68]	@ 0x44
90021098:	fa5f f289 	uxtb.w	r2, r9
9002109c:	f3c9 09c4 	ubfx	r9, r9, #3, #5
900210a0:	9210      	str	r2, [sp, #64]	@ 0x40
900210a2:	4a72      	ldr	r2, [pc, #456]	@ (9002126c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>)
900210a4:	4022      	ands	r2, r4
900210a6:	430a      	orrs	r2, r1
900210a8:	ea4f 014b 	mov.w	r1, fp, lsl #1
900210ac:	fb05 3b1b 	mls	fp, r5, fp, r3
900210b0:	ea42 0209 	orr.w	r2, r2, r9
900210b4:	460b      	mov	r3, r1
900210b6:	910b      	str	r1, [sp, #44]	@ 0x2c
900210b8:	b292      	uxth	r2, r2
900210ba:	436b      	muls	r3, r5
900210bc:	920f      	str	r2, [sp, #60]	@ 0x3c
900210be:	eb03 034b 	add.w	r3, r3, fp, lsl #1
900210c2:	783a      	ldrb	r2, [r7, #0]
900210c4:	9313      	str	r3, [sp, #76]	@ 0x4c
900210c6:	4132      	asrs	r2, r6
900210c8:	b2d2      	uxtb	r2, r2
900210ca:	f11a 3aff 	adds.w	sl, sl, #4294967295
900210ce:	f0c0 814a 	bcc.w	90021366 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x486>
900210d2:	46a9      	mov	r9, r5
900210d4:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
900210d8:	f119 39ff 	adds.w	r9, r9, #4294967295
900210dc:	f0c0 8133 	bcc.w	90021346 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x466>
900210e0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900210e2:	4013      	ands	r3, r2
900210e4:	d054      	beq.n	90021190 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2b0>
900210e6:	20ff      	movs	r0, #255	@ 0xff
900210e8:	990c      	ldr	r1, [sp, #48]	@ 0x30
900210ea:	fb90 f1f1 	sdiv	r1, r0, r1
900210ee:	434b      	muls	r3, r1
900210f0:	2bfe      	cmp	r3, #254	@ 0xfe
900210f2:	dd03      	ble.n	900210fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x21c>
900210f4:	9909      	ldr	r1, [sp, #36]	@ 0x24
900210f6:	4281      	cmp	r1, r0
900210f8:	f000 8123 	beq.w	90021342 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x462>
900210fc:	9909      	ldr	r1, [sp, #36]	@ 0x24
900210fe:	f8b8 4000 	ldrh.w	r4, [r8]
90021102:	fb11 f303 	smulbb	r3, r1, r3
90021106:	9812      	ldr	r0, [sp, #72]	@ 0x48
90021108:	ea4f 0ce4 	mov.w	ip, r4, asr #3
9002110c:	b29b      	uxth	r3, r3
9002110e:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
90021112:	1c59      	adds	r1, r3, #1
90021114:	ea4c 1c9c 	orr.w	ip, ip, ip, lsr #6
90021118:	eb01 2313 	add.w	r3, r1, r3, lsr #8
9002111c:	1221      	asrs	r1, r4, #8
9002111e:	f3c3 2307 	ubfx	r3, r3, #8, #8
90021122:	00e4      	lsls	r4, r4, #3
90021124:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90021128:	fa1f fe83 	uxth.w	lr, r3
9002112c:	43db      	mvns	r3, r3
9002112e:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
90021132:	fb10 fb0e 	smulbb	fp, r0, lr
90021136:	b2db      	uxtb	r3, r3
90021138:	9811      	ldr	r0, [sp, #68]	@ 0x44
9002113a:	b2e4      	uxtb	r4, r4
9002113c:	fb01 b103 	mla	r1, r1, r3, fp
90021140:	fb10 fb0e 	smulbb	fp, r0, lr
90021144:	9810      	ldr	r0, [sp, #64]	@ 0x40
90021146:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9002114a:	fb10 fe0e 	smulbb	lr, r0, lr
9002114e:	b289      	uxth	r1, r1
90021150:	fb0c bc03 	mla	ip, ip, r3, fp
90021154:	fb04 e403 	mla	r4, r4, r3, lr
90021158:	1c4b      	adds	r3, r1, #1
9002115a:	fa1f fc8c 	uxth.w	ip, ip
9002115e:	b2a4      	uxth	r4, r4
90021160:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90021164:	f104 0b01 	add.w	fp, r4, #1
90021168:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
9002116c:	eb0b 2b14 	add.w	fp, fp, r4, lsr #8
90021170:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
90021174:	ea4b 0101 	orr.w	r1, fp, r1
90021178:	f10c 0b01 	add.w	fp, ip, #1
9002117c:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
90021180:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
90021184:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
90021188:	ea41 010b 	orr.w	r1, r1, fp
9002118c:	f8a8 1000 	strh.w	r1, [r8]
90021190:	9b08      	ldr	r3, [sp, #32]
90021192:	441e      	add	r6, r3
90021194:	b2b6      	uxth	r6, r6
90021196:	2e07      	cmp	r6, #7
90021198:	bf98      	it	ls
9002119a:	411a      	asrls	r2, r3
9002119c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002119e:	bf85      	ittet	hi
900211a0:	787a      	ldrbhi	r2, [r7, #1]
900211a2:	2600      	movhi	r6, #0
900211a4:	b2d2      	uxtbls	r2, r2
900211a6:	3701      	addhi	r7, #1
900211a8:	4498      	add	r8, r3
900211aa:	e795      	b.n	900210d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f8>
900211ac:	441c      	add	r4, r3
900211ae:	b224      	sxth	r4, r4
900211b0:	e6d6      	b.n	90020f60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
900211b2:	f1ba 0f01 	cmp.w	sl, #1
900211b6:	f47f af09 	bne.w	90020fcc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
900211ba:	f1bb 0f01 	cmp.w	fp, #1
900211be:	f47f af05 	bne.w	90020fcc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
900211c2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900211c4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900211c6:	1a99      	subs	r1, r3, r2
900211c8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900211ca:	1b9b      	subs	r3, r3, r6
900211cc:	4299      	cmp	r1, r3
900211ce:	bfa8      	it	ge
900211d0:	4619      	movge	r1, r3
900211d2:	2900      	cmp	r1, #0
900211d4:	9112      	str	r1, [sp, #72]	@ 0x48
900211d6:	dd7e      	ble.n	900212d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
900211d8:	4a22      	ldr	r2, [pc, #136]	@ (90021264 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
900211da:	6810      	ldr	r0, [r2, #0]
900211dc:	9211      	str	r2, [sp, #68]	@ 0x44
900211de:	6803      	ldr	r3, [r0, #0]
900211e0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900211e2:	4798      	blx	r3
900211e4:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
900211e8:	9912      	ldr	r1, [sp, #72]	@ 0x48
900211ea:	d006      	beq.n	900211fa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31a>
900211ec:	9b08      	ldr	r3, [sp, #32]
900211ee:	2b04      	cmp	r3, #4
900211f0:	d133      	bne.n	9002125a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37a>
900211f2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900211f4:	3300      	adds	r3, #0
900211f6:	bf18      	it	ne
900211f8:	2301      	movne	r3, #1
900211fa:	0582      	lsls	r2, r0, #22
900211fc:	fa1f fc88 	uxth.w	ip, r8
90021200:	f140 80ba 	bpl.w	90021378 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x498>
90021204:	9808      	ldr	r0, [sp, #32]
90021206:	2808      	cmp	r0, #8
90021208:	f040 80b6 	bne.w	90021378 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x498>
9002120c:	2b00      	cmp	r3, #0
9002120e:	d065      	beq.n	900212dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3fc>
90021210:	f10c 0c01 	add.w	ip, ip, #1
90021214:	f02c 0301 	bic.w	r3, ip, #1
90021218:	b29b      	uxth	r3, r3
9002121a:	bb4d      	cbnz	r5, 90021270 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
9002121c:	eb08 0004 	add.w	r0, r8, r4
90021220:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90021222:	4290      	cmp	r0, r2
90021224:	dc24      	bgt.n	90021270 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
90021226:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90021228:	b289      	uxth	r1, r1
9002122a:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
9002122e:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
90021232:	6810      	ldr	r0, [r2, #0]
90021234:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
90021238:	6804      	ldr	r4, [r0, #0]
9002123a:	9506      	str	r5, [sp, #24]
9002123c:	f44f 7580 	mov.w	r5, #256	@ 0x100
90021240:	9302      	str	r3, [sp, #8]
90021242:	9505      	str	r5, [sp, #20]
90021244:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90021246:	e9cd 3100 	strd	r3, r1, [sp]
9002124a:	e9cd 9503 	strd	r9, r5, [sp, #12]
9002124e:	4673      	mov	r3, lr
90021250:	6da4      	ldr	r4, [r4, #88]	@ 0x58
90021252:	fb06 710c 	mla	r1, r6, ip, r7
90021256:	47a0      	blx	r4
90021258:	e03d      	b.n	900212d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
9002125a:	2300      	movs	r3, #0
9002125c:	e7cd      	b.n	900211fa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31a>
9002125e:	bf00      	nop
90021260:	2402185c 	.word	0x2402185c
90021264:	24021864 	.word	0x24021864
90021268:	2402185e 	.word	0x2402185e
9002126c:	00fff800 	.word	0x00fff800
90021270:	eba4 0e05 	sub.w	lr, r4, r5
90021274:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90021276:	eba2 0e0e 	sub.w	lr, r2, lr
9002127a:	45c6      	cmp	lr, r8
9002127c:	bfd4      	ite	le
9002127e:	ebc5 0e0e 	rsble	lr, r5, lr
90021282:	ebc5 0e08 	rsbgt	lr, r5, r8
90021286:	f1be 0f00 	cmp.w	lr, #0
9002128a:	d024      	beq.n	900212d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
9002128c:	07e8      	lsls	r0, r5, #31
9002128e:	f53f ae9d 	bmi.w	90020fcc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
90021292:	f01e 0001 	ands.w	r0, lr, #1
90021296:	f47f ae99 	bne.w	90020fcc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
9002129a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9002129c:	086d      	lsrs	r5, r5, #1
9002129e:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
900212a2:	f8bd 805e 	ldrh.w	r8, [sp, #94]	@ 0x5e
900212a6:	6814      	ldr	r4, [r2, #0]
900212a8:	b289      	uxth	r1, r1
900212aa:	fb06 560c 	mla	r6, r6, ip, r5
900212ae:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
900212b2:	6825      	ldr	r5, [r4, #0]
900212b4:	9006      	str	r0, [sp, #24]
900212b6:	f44f 7080 	mov.w	r0, #256	@ 0x100
900212ba:	9302      	str	r3, [sp, #8]
900212bc:	fa1f f38e 	uxth.w	r3, lr
900212c0:	9005      	str	r0, [sp, #20]
900212c2:	9809      	ldr	r0, [sp, #36]	@ 0x24
900212c4:	9101      	str	r1, [sp, #4]
900212c6:	19b9      	adds	r1, r7, r6
900212c8:	9300      	str	r3, [sp, #0]
900212ca:	4643      	mov	r3, r8
900212cc:	e9cd 9003 	strd	r9, r0, [sp, #12]
900212d0:	4620      	mov	r0, r4
900212d2:	6dad      	ldr	r5, [r5, #88]	@ 0x58
900212d4:	47a8      	blx	r5
900212d6:	b019      	add	sp, #100	@ 0x64
900212d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900212dc:	4a28      	ldr	r2, [pc, #160]	@ (90021380 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x4a0>)
900212de:	1b64      	subs	r4, r4, r5
900212e0:	fb06 5608 	mla	r6, r6, r8, r5
900212e4:	b289      	uxth	r1, r1
900212e6:	6810      	ldr	r0, [r2, #0]
900212e8:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
900212ec:	f8d0 a000 	ldr.w	sl, [r0]
900212f0:	9306      	str	r3, [sp, #24]
900212f2:	f44f 7300 	mov.w	r3, #512	@ 0x200
900212f6:	9101      	str	r1, [sp, #4]
900212f8:	19b9      	adds	r1, r7, r6
900212fa:	9305      	str	r3, [sp, #20]
900212fc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900212fe:	f8cd c008 	str.w	ip, [sp, #8]
90021302:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
90021306:	e9cd 9303 	strd	r9, r3, [sp, #12]
9002130a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002130c:	1b1c      	subs	r4, r3, r4
9002130e:	4673      	mov	r3, lr
90021310:	4544      	cmp	r4, r8
90021312:	bfd4      	ite	le
90021314:	ebc5 0504 	rsble	r5, r5, r4
90021318:	ebc5 0508 	rsbgt	r5, r5, r8
9002131c:	b2ad      	uxth	r5, r5
9002131e:	9500      	str	r5, [sp, #0]
90021320:	f8da 4058 	ldr.w	r4, [sl, #88]	@ 0x58
90021324:	e797      	b.n	90021256 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90021326:	2208      	movs	r2, #8
90021328:	9b08      	ldr	r3, [sp, #32]
9002132a:	fb92 f3f3 	sdiv	r3, r2, r3
9002132e:	1e5a      	subs	r2, r3, #1
90021330:	4442      	add	r2, r8
90021332:	fb92 f2f3 	sdiv	r2, r2, r3
90021336:	fb12 f203 	smulbb	r2, r2, r3
9002133a:	b292      	uxth	r2, r2
9002133c:	e64c      	b.n	90020fd8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
9002133e:	980d      	ldr	r0, [sp, #52]	@ 0x34
90021340:	e68e      	b.n	90021060 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x180>
90021342:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90021344:	e722      	b.n	9002118c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ac>
90021346:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90021348:	b143      	cbz	r3, 9002135c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x47c>
9002134a:	441e      	add	r6, r3
9002134c:	b2b6      	uxth	r6, r6
9002134e:	eb07 07d6 	add.w	r7, r7, r6, lsr #3
90021352:	f006 0607 	and.w	r6, r6, #7
90021356:	783a      	ldrb	r2, [r7, #0]
90021358:	4132      	asrs	r2, r6
9002135a:	b2d2      	uxtb	r2, r2
9002135c:	990a      	ldr	r1, [sp, #40]	@ 0x28
9002135e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90021360:	4419      	add	r1, r3
90021362:	910a      	str	r1, [sp, #40]	@ 0x28
90021364:	e6b1      	b.n	900210ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ea>
90021366:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90021368:	2b00      	cmp	r3, #0
9002136a:	d1b4      	bne.n	900212d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
9002136c:	4b04      	ldr	r3, [pc, #16]	@ (90021380 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x4a0>)
9002136e:	6818      	ldr	r0, [r3, #0]
90021370:	6803      	ldr	r3, [r0, #0]
90021372:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90021374:	4798      	blx	r3
90021376:	e7ae      	b.n	900212d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
90021378:	2b00      	cmp	r3, #0
9002137a:	f47f af49 	bne.w	90021210 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x330>
9002137e:	e625      	b.n	90020fcc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
90021380:	24021864 	.word	0x24021864

90021384 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
90021384:	b538      	push	{r3, r4, r5, lr}
90021386:	4c15      	ldr	r4, [pc, #84]	@ (900213dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
90021388:	4605      	mov	r5, r0
9002138a:	7823      	ldrb	r3, [r4, #0]
9002138c:	f3bf 8f5b 	dmb	ish
90021390:	07da      	lsls	r2, r3, #31
90021392:	d40b      	bmi.n	900213ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
90021394:	4620      	mov	r0, r4
90021396:	f008 fc6b 	bl	90029c70 <__cxa_guard_acquire>
9002139a:	b138      	cbz	r0, 900213ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
9002139c:	4620      	mov	r0, r4
9002139e:	f008 fc73 	bl	90029c88 <__cxa_guard_release>
900213a2:	4a0f      	ldr	r2, [pc, #60]	@ (900213e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
900213a4:	490f      	ldr	r1, [pc, #60]	@ (900213e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
900213a6:	4810      	ldr	r0, [pc, #64]	@ (900213e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
900213a8:	f008 fc5b 	bl	90029c62 <__aeabi_atexit>
900213ac:	4c0f      	ldr	r4, [pc, #60]	@ (900213ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
900213ae:	7823      	ldrb	r3, [r4, #0]
900213b0:	f3bf 8f5b 	dmb	ish
900213b4:	07db      	lsls	r3, r3, #31
900213b6:	d40b      	bmi.n	900213d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
900213b8:	4620      	mov	r0, r4
900213ba:	f008 fc59 	bl	90029c70 <__cxa_guard_acquire>
900213be:	b138      	cbz	r0, 900213d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
900213c0:	4620      	mov	r0, r4
900213c2:	f008 fc61 	bl	90029c88 <__cxa_guard_release>
900213c6:	4a06      	ldr	r2, [pc, #24]	@ (900213e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
900213c8:	4909      	ldr	r1, [pc, #36]	@ (900213f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
900213ca:	480a      	ldr	r0, [pc, #40]	@ (900213f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
900213cc:	f008 fc49 	bl	90029c62 <__aeabi_atexit>
900213d0:	4b05      	ldr	r3, [pc, #20]	@ (900213e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
900213d2:	616b      	str	r3, [r5, #20]
900213d4:	4b07      	ldr	r3, [pc, #28]	@ (900213f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
900213d6:	61ab      	str	r3, [r5, #24]
900213d8:	bd38      	pop	{r3, r4, r5, pc}
900213da:	bf00      	nop
900213dc:	24021948 	.word	0x24021948
900213e0:	24000000 	.word	0x24000000
900213e4:	9001d471 	.word	0x9001d471
900213e8:	240000d4 	.word	0x240000d4
900213ec:	2402194c 	.word	0x2402194c
900213f0:	9001d46f 	.word	0x9001d46f
900213f4:	240000d8 	.word	0x240000d8

900213f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
900213f8:	b538      	push	{r3, r4, r5, lr}
900213fa:	4c15      	ldr	r4, [pc, #84]	@ (90021450 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
900213fc:	4605      	mov	r5, r0
900213fe:	7823      	ldrb	r3, [r4, #0]
90021400:	f3bf 8f5b 	dmb	ish
90021404:	07da      	lsls	r2, r3, #31
90021406:	d40b      	bmi.n	90021420 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
90021408:	4620      	mov	r0, r4
9002140a:	f008 fc31 	bl	90029c70 <__cxa_guard_acquire>
9002140e:	b138      	cbz	r0, 90021420 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
90021410:	4620      	mov	r0, r4
90021412:	f008 fc39 	bl	90029c88 <__cxa_guard_release>
90021416:	4a0f      	ldr	r2, [pc, #60]	@ (90021454 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
90021418:	490f      	ldr	r1, [pc, #60]	@ (90021458 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
9002141a:	4810      	ldr	r0, [pc, #64]	@ (9002145c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9002141c:	f008 fc21 	bl	90029c62 <__aeabi_atexit>
90021420:	4c0f      	ldr	r4, [pc, #60]	@ (90021460 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
90021422:	7823      	ldrb	r3, [r4, #0]
90021424:	f3bf 8f5b 	dmb	ish
90021428:	07db      	lsls	r3, r3, #31
9002142a:	d40b      	bmi.n	90021444 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
9002142c:	4620      	mov	r0, r4
9002142e:	f008 fc1f 	bl	90029c70 <__cxa_guard_acquire>
90021432:	b138      	cbz	r0, 90021444 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
90021434:	4620      	mov	r0, r4
90021436:	f008 fc27 	bl	90029c88 <__cxa_guard_release>
9002143a:	4a06      	ldr	r2, [pc, #24]	@ (90021454 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
9002143c:	4909      	ldr	r1, [pc, #36]	@ (90021464 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
9002143e:	480a      	ldr	r0, [pc, #40]	@ (90021468 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
90021440:	f008 fc0f 	bl	90029c62 <__aeabi_atexit>
90021444:	4b05      	ldr	r3, [pc, #20]	@ (9002145c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
90021446:	60eb      	str	r3, [r5, #12]
90021448:	4b07      	ldr	r3, [pc, #28]	@ (90021468 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9002144a:	612b      	str	r3, [r5, #16]
9002144c:	bd38      	pop	{r3, r4, r5, pc}
9002144e:	bf00      	nop
90021450:	24021920 	.word	0x24021920
90021454:	24000000 	.word	0x24000000
90021458:	9001d475 	.word	0x9001d475
9002145c:	240000ac 	.word	0x240000ac
90021460:	24021924 	.word	0x24021924
90021464:	9001d473 	.word	0x9001d473
90021468:	240000b0 	.word	0x240000b0

9002146c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
9002146c:	b510      	push	{r4, lr}
9002146e:	4604      	mov	r4, r0
90021470:	f7ff ff88 	bl	90021384 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
90021474:	4620      	mov	r0, r4
90021476:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002147a:	f7ff bfbd 	b.w	900213f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

90021480 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
90021480:	b538      	push	{r3, r4, r5, lr}
90021482:	4c15      	ldr	r4, [pc, #84]	@ (900214d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
90021484:	4605      	mov	r5, r0
90021486:	7823      	ldrb	r3, [r4, #0]
90021488:	f3bf 8f5b 	dmb	ish
9002148c:	07da      	lsls	r2, r3, #31
9002148e:	d40b      	bmi.n	900214a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
90021490:	4620      	mov	r0, r4
90021492:	f008 fbed 	bl	90029c70 <__cxa_guard_acquire>
90021496:	b138      	cbz	r0, 900214a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
90021498:	4620      	mov	r0, r4
9002149a:	f008 fbf5 	bl	90029c88 <__cxa_guard_release>
9002149e:	4a0f      	ldr	r2, [pc, #60]	@ (900214dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
900214a0:	490f      	ldr	r1, [pc, #60]	@ (900214e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
900214a2:	4810      	ldr	r0, [pc, #64]	@ (900214e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
900214a4:	f008 fbdd 	bl	90029c62 <__aeabi_atexit>
900214a8:	4c0f      	ldr	r4, [pc, #60]	@ (900214e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
900214aa:	7823      	ldrb	r3, [r4, #0]
900214ac:	f3bf 8f5b 	dmb	ish
900214b0:	07db      	lsls	r3, r3, #31
900214b2:	d40b      	bmi.n	900214cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
900214b4:	4620      	mov	r0, r4
900214b6:	f008 fbdb 	bl	90029c70 <__cxa_guard_acquire>
900214ba:	b138      	cbz	r0, 900214cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
900214bc:	4620      	mov	r0, r4
900214be:	f008 fbe3 	bl	90029c88 <__cxa_guard_release>
900214c2:	4a06      	ldr	r2, [pc, #24]	@ (900214dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
900214c4:	4909      	ldr	r1, [pc, #36]	@ (900214ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
900214c6:	480a      	ldr	r0, [pc, #40]	@ (900214f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
900214c8:	f008 fbcb 	bl	90029c62 <__aeabi_atexit>
900214cc:	4b05      	ldr	r3, [pc, #20]	@ (900214e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
900214ce:	626b      	str	r3, [r5, #36]	@ 0x24
900214d0:	4b07      	ldr	r3, [pc, #28]	@ (900214f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
900214d2:	62ab      	str	r3, [r5, #40]	@ 0x28
900214d4:	bd38      	pop	{r3, r4, r5, pc}
900214d6:	bf00      	nop
900214d8:	24021950 	.word	0x24021950
900214dc:	24000000 	.word	0x24000000
900214e0:	9001d469 	.word	0x9001d469
900214e4:	240000dc 	.word	0x240000dc
900214e8:	24021954 	.word	0x24021954
900214ec:	9001d467 	.word	0x9001d467
900214f0:	240000e0 	.word	0x240000e0

900214f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
900214f4:	b538      	push	{r3, r4, r5, lr}
900214f6:	4c15      	ldr	r4, [pc, #84]	@ (9002154c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
900214f8:	4605      	mov	r5, r0
900214fa:	7823      	ldrb	r3, [r4, #0]
900214fc:	f3bf 8f5b 	dmb	ish
90021500:	07da      	lsls	r2, r3, #31
90021502:	d40b      	bmi.n	9002151c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
90021504:	4620      	mov	r0, r4
90021506:	f008 fbb3 	bl	90029c70 <__cxa_guard_acquire>
9002150a:	b138      	cbz	r0, 9002151c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
9002150c:	4620      	mov	r0, r4
9002150e:	f008 fbbb 	bl	90029c88 <__cxa_guard_release>
90021512:	4a0f      	ldr	r2, [pc, #60]	@ (90021550 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
90021514:	490f      	ldr	r1, [pc, #60]	@ (90021554 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
90021516:	4810      	ldr	r0, [pc, #64]	@ (90021558 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
90021518:	f008 fba3 	bl	90029c62 <__aeabi_atexit>
9002151c:	4c0f      	ldr	r4, [pc, #60]	@ (9002155c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
9002151e:	7823      	ldrb	r3, [r4, #0]
90021520:	f3bf 8f5b 	dmb	ish
90021524:	07db      	lsls	r3, r3, #31
90021526:	d40b      	bmi.n	90021540 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
90021528:	4620      	mov	r0, r4
9002152a:	f008 fba1 	bl	90029c70 <__cxa_guard_acquire>
9002152e:	b138      	cbz	r0, 90021540 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
90021530:	4620      	mov	r0, r4
90021532:	f008 fba9 	bl	90029c88 <__cxa_guard_release>
90021536:	4a06      	ldr	r2, [pc, #24]	@ (90021550 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
90021538:	4909      	ldr	r1, [pc, #36]	@ (90021560 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
9002153a:	480a      	ldr	r0, [pc, #40]	@ (90021564 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9002153c:	f008 fb91 	bl	90029c62 <__aeabi_atexit>
90021540:	4b05      	ldr	r3, [pc, #20]	@ (90021558 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
90021542:	61eb      	str	r3, [r5, #28]
90021544:	4b07      	ldr	r3, [pc, #28]	@ (90021564 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
90021546:	622b      	str	r3, [r5, #32]
90021548:	bd38      	pop	{r3, r4, r5, pc}
9002154a:	bf00      	nop
9002154c:	24021928 	.word	0x24021928
90021550:	24000000 	.word	0x24000000
90021554:	9001d46d 	.word	0x9001d46d
90021558:	240000b4 	.word	0x240000b4
9002155c:	2402192c 	.word	0x2402192c
90021560:	9001d46b 	.word	0x9001d46b
90021564:	240000b8 	.word	0x240000b8

90021568 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
90021568:	b510      	push	{r4, lr}
9002156a:	4604      	mov	r4, r0
9002156c:	f7ff ff88 	bl	90021480 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
90021570:	4620      	mov	r0, r4
90021572:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021576:	f7ff bfbd 	b.w	900214f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

9002157c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
9002157c:	b538      	push	{r3, r4, r5, lr}
9002157e:	4c15      	ldr	r4, [pc, #84]	@ (900215d4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
90021580:	4605      	mov	r5, r0
90021582:	7823      	ldrb	r3, [r4, #0]
90021584:	f3bf 8f5b 	dmb	ish
90021588:	07da      	lsls	r2, r3, #31
9002158a:	d40b      	bmi.n	900215a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
9002158c:	4620      	mov	r0, r4
9002158e:	f008 fb6f 	bl	90029c70 <__cxa_guard_acquire>
90021592:	b138      	cbz	r0, 900215a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
90021594:	4620      	mov	r0, r4
90021596:	f008 fb77 	bl	90029c88 <__cxa_guard_release>
9002159a:	4a0f      	ldr	r2, [pc, #60]	@ (900215d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
9002159c:	490f      	ldr	r1, [pc, #60]	@ (900215dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
9002159e:	4810      	ldr	r0, [pc, #64]	@ (900215e0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
900215a0:	f008 fb5f 	bl	90029c62 <__aeabi_atexit>
900215a4:	4c0f      	ldr	r4, [pc, #60]	@ (900215e4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
900215a6:	7823      	ldrb	r3, [r4, #0]
900215a8:	f3bf 8f5b 	dmb	ish
900215ac:	07db      	lsls	r3, r3, #31
900215ae:	d40b      	bmi.n	900215c8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
900215b0:	4620      	mov	r0, r4
900215b2:	f008 fb5d 	bl	90029c70 <__cxa_guard_acquire>
900215b6:	b138      	cbz	r0, 900215c8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
900215b8:	4620      	mov	r0, r4
900215ba:	f008 fb65 	bl	90029c88 <__cxa_guard_release>
900215be:	4a06      	ldr	r2, [pc, #24]	@ (900215d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
900215c0:	4909      	ldr	r1, [pc, #36]	@ (900215e8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
900215c2:	480a      	ldr	r0, [pc, #40]	@ (900215ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
900215c4:	f008 fb4d 	bl	90029c62 <__aeabi_atexit>
900215c8:	4b05      	ldr	r3, [pc, #20]	@ (900215e0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
900215ca:	636b      	str	r3, [r5, #52]	@ 0x34
900215cc:	4b07      	ldr	r3, [pc, #28]	@ (900215ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
900215ce:	63ab      	str	r3, [r5, #56]	@ 0x38
900215d0:	bd38      	pop	{r3, r4, r5, pc}
900215d2:	bf00      	nop
900215d4:	24021960 	.word	0x24021960
900215d8:	24000000 	.word	0x24000000
900215dc:	9001d461 	.word	0x9001d461
900215e0:	240000ec 	.word	0x240000ec
900215e4:	24021964 	.word	0x24021964
900215e8:	9001d45f 	.word	0x9001d45f
900215ec:	240000f0 	.word	0x240000f0

900215f0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
900215f0:	b538      	push	{r3, r4, r5, lr}
900215f2:	4c15      	ldr	r4, [pc, #84]	@ (90021648 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
900215f4:	4605      	mov	r5, r0
900215f6:	7823      	ldrb	r3, [r4, #0]
900215f8:	f3bf 8f5b 	dmb	ish
900215fc:	07da      	lsls	r2, r3, #31
900215fe:	d40b      	bmi.n	90021618 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
90021600:	4620      	mov	r0, r4
90021602:	f008 fb35 	bl	90029c70 <__cxa_guard_acquire>
90021606:	b138      	cbz	r0, 90021618 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
90021608:	4620      	mov	r0, r4
9002160a:	f008 fb3d 	bl	90029c88 <__cxa_guard_release>
9002160e:	4a0f      	ldr	r2, [pc, #60]	@ (9002164c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
90021610:	490f      	ldr	r1, [pc, #60]	@ (90021650 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
90021612:	4810      	ldr	r0, [pc, #64]	@ (90021654 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
90021614:	f008 fb25 	bl	90029c62 <__aeabi_atexit>
90021618:	4c0f      	ldr	r4, [pc, #60]	@ (90021658 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
9002161a:	7823      	ldrb	r3, [r4, #0]
9002161c:	f3bf 8f5b 	dmb	ish
90021620:	07db      	lsls	r3, r3, #31
90021622:	d40b      	bmi.n	9002163c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
90021624:	4620      	mov	r0, r4
90021626:	f008 fb23 	bl	90029c70 <__cxa_guard_acquire>
9002162a:	b138      	cbz	r0, 9002163c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
9002162c:	4620      	mov	r0, r4
9002162e:	f008 fb2b 	bl	90029c88 <__cxa_guard_release>
90021632:	4a06      	ldr	r2, [pc, #24]	@ (9002164c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
90021634:	4909      	ldr	r1, [pc, #36]	@ (9002165c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
90021636:	480a      	ldr	r0, [pc, #40]	@ (90021660 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
90021638:	f008 fb13 	bl	90029c62 <__aeabi_atexit>
9002163c:	4b05      	ldr	r3, [pc, #20]	@ (90021654 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
9002163e:	62eb      	str	r3, [r5, #44]	@ 0x2c
90021640:	4b07      	ldr	r3, [pc, #28]	@ (90021660 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
90021642:	632b      	str	r3, [r5, #48]	@ 0x30
90021644:	bd38      	pop	{r3, r4, r5, pc}
90021646:	bf00      	nop
90021648:	24021930 	.word	0x24021930
9002164c:	24000000 	.word	0x24000000
90021650:	9001d465 	.word	0x9001d465
90021654:	240000bc 	.word	0x240000bc
90021658:	24021934 	.word	0x24021934
9002165c:	9001d463 	.word	0x9001d463
90021660:	240000c0 	.word	0x240000c0

90021664 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
90021664:	b510      	push	{r4, lr}
90021666:	4604      	mov	r4, r0
90021668:	f7ff ff88 	bl	9002157c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
9002166c:	4620      	mov	r0, r4
9002166e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021672:	f7ff bfbd 	b.w	900215f0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

90021678 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
90021678:	b538      	push	{r3, r4, r5, lr}
9002167a:	4c15      	ldr	r4, [pc, #84]	@ (900216d0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
9002167c:	4605      	mov	r5, r0
9002167e:	7823      	ldrb	r3, [r4, #0]
90021680:	f3bf 8f5b 	dmb	ish
90021684:	07da      	lsls	r2, r3, #31
90021686:	d40b      	bmi.n	900216a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
90021688:	4620      	mov	r0, r4
9002168a:	f008 faf1 	bl	90029c70 <__cxa_guard_acquire>
9002168e:	b138      	cbz	r0, 900216a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
90021690:	4620      	mov	r0, r4
90021692:	f008 faf9 	bl	90029c88 <__cxa_guard_release>
90021696:	4a0f      	ldr	r2, [pc, #60]	@ (900216d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
90021698:	490f      	ldr	r1, [pc, #60]	@ (900216d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
9002169a:	4810      	ldr	r0, [pc, #64]	@ (900216dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
9002169c:	f008 fae1 	bl	90029c62 <__aeabi_atexit>
900216a0:	4c0f      	ldr	r4, [pc, #60]	@ (900216e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
900216a2:	7823      	ldrb	r3, [r4, #0]
900216a4:	f3bf 8f5b 	dmb	ish
900216a8:	07db      	lsls	r3, r3, #31
900216aa:	d40b      	bmi.n	900216c4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
900216ac:	4620      	mov	r0, r4
900216ae:	f008 fadf 	bl	90029c70 <__cxa_guard_acquire>
900216b2:	b138      	cbz	r0, 900216c4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
900216b4:	4620      	mov	r0, r4
900216b6:	f008 fae7 	bl	90029c88 <__cxa_guard_release>
900216ba:	4a06      	ldr	r2, [pc, #24]	@ (900216d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
900216bc:	4909      	ldr	r1, [pc, #36]	@ (900216e4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
900216be:	480a      	ldr	r0, [pc, #40]	@ (900216e8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
900216c0:	f008 facf 	bl	90029c62 <__aeabi_atexit>
900216c4:	4b05      	ldr	r3, [pc, #20]	@ (900216dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
900216c6:	656b      	str	r3, [r5, #84]	@ 0x54
900216c8:	4b07      	ldr	r3, [pc, #28]	@ (900216e8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
900216ca:	65ab      	str	r3, [r5, #88]	@ 0x58
900216cc:	bd38      	pop	{r3, r4, r5, pc}
900216ce:	bf00      	nop
900216d0:	24021968 	.word	0x24021968
900216d4:	24000000 	.word	0x24000000
900216d8:	9001d451 	.word	0x9001d451
900216dc:	240000f4 	.word	0x240000f4
900216e0:	2402196c 	.word	0x2402196c
900216e4:	9001d44f 	.word	0x9001d44f
900216e8:	240000f8 	.word	0x240000f8

900216ec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
900216ec:	b538      	push	{r3, r4, r5, lr}
900216ee:	4c15      	ldr	r4, [pc, #84]	@ (90021744 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
900216f0:	4605      	mov	r5, r0
900216f2:	7823      	ldrb	r3, [r4, #0]
900216f4:	f3bf 8f5b 	dmb	ish
900216f8:	07da      	lsls	r2, r3, #31
900216fa:	d40b      	bmi.n	90021714 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
900216fc:	4620      	mov	r0, r4
900216fe:	f008 fab7 	bl	90029c70 <__cxa_guard_acquire>
90021702:	b138      	cbz	r0, 90021714 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
90021704:	4620      	mov	r0, r4
90021706:	f008 fabf 	bl	90029c88 <__cxa_guard_release>
9002170a:	4a0f      	ldr	r2, [pc, #60]	@ (90021748 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
9002170c:	490f      	ldr	r1, [pc, #60]	@ (9002174c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
9002170e:	4810      	ldr	r0, [pc, #64]	@ (90021750 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
90021710:	f008 faa7 	bl	90029c62 <__aeabi_atexit>
90021714:	4c0f      	ldr	r4, [pc, #60]	@ (90021754 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
90021716:	7823      	ldrb	r3, [r4, #0]
90021718:	f3bf 8f5b 	dmb	ish
9002171c:	07db      	lsls	r3, r3, #31
9002171e:	d40b      	bmi.n	90021738 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
90021720:	4620      	mov	r0, r4
90021722:	f008 faa5 	bl	90029c70 <__cxa_guard_acquire>
90021726:	b138      	cbz	r0, 90021738 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
90021728:	4620      	mov	r0, r4
9002172a:	f008 faad 	bl	90029c88 <__cxa_guard_release>
9002172e:	4a06      	ldr	r2, [pc, #24]	@ (90021748 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
90021730:	4909      	ldr	r1, [pc, #36]	@ (90021758 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
90021732:	480a      	ldr	r0, [pc, #40]	@ (9002175c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
90021734:	f008 fa95 	bl	90029c62 <__aeabi_atexit>
90021738:	4b05      	ldr	r3, [pc, #20]	@ (90021750 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
9002173a:	64eb      	str	r3, [r5, #76]	@ 0x4c
9002173c:	4b07      	ldr	r3, [pc, #28]	@ (9002175c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
9002173e:	652b      	str	r3, [r5, #80]	@ 0x50
90021740:	bd38      	pop	{r3, r4, r5, pc}
90021742:	bf00      	nop
90021744:	24021970 	.word	0x24021970
90021748:	24000000 	.word	0x24000000
9002174c:	9001d455 	.word	0x9001d455
90021750:	240000fc 	.word	0x240000fc
90021754:	24021974 	.word	0x24021974
90021758:	9001d453 	.word	0x9001d453
9002175c:	24000100 	.word	0x24000100

90021760 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
90021760:	b538      	push	{r3, r4, r5, lr}
90021762:	4c15      	ldr	r4, [pc, #84]	@ (900217b8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
90021764:	4605      	mov	r5, r0
90021766:	7823      	ldrb	r3, [r4, #0]
90021768:	f3bf 8f5b 	dmb	ish
9002176c:	07da      	lsls	r2, r3, #31
9002176e:	d40b      	bmi.n	90021788 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
90021770:	4620      	mov	r0, r4
90021772:	f008 fa7d 	bl	90029c70 <__cxa_guard_acquire>
90021776:	b138      	cbz	r0, 90021788 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
90021778:	4620      	mov	r0, r4
9002177a:	f008 fa85 	bl	90029c88 <__cxa_guard_release>
9002177e:	4a0f      	ldr	r2, [pc, #60]	@ (900217bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
90021780:	490f      	ldr	r1, [pc, #60]	@ (900217c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
90021782:	4810      	ldr	r0, [pc, #64]	@ (900217c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
90021784:	f008 fa6d 	bl	90029c62 <__aeabi_atexit>
90021788:	4c0f      	ldr	r4, [pc, #60]	@ (900217c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
9002178a:	7823      	ldrb	r3, [r4, #0]
9002178c:	f3bf 8f5b 	dmb	ish
90021790:	07db      	lsls	r3, r3, #31
90021792:	d40b      	bmi.n	900217ac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
90021794:	4620      	mov	r0, r4
90021796:	f008 fa6b 	bl	90029c70 <__cxa_guard_acquire>
9002179a:	b138      	cbz	r0, 900217ac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
9002179c:	4620      	mov	r0, r4
9002179e:	f008 fa73 	bl	90029c88 <__cxa_guard_release>
900217a2:	4a06      	ldr	r2, [pc, #24]	@ (900217bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
900217a4:	4909      	ldr	r1, [pc, #36]	@ (900217cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
900217a6:	480a      	ldr	r0, [pc, #40]	@ (900217d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
900217a8:	f008 fa5b 	bl	90029c62 <__aeabi_atexit>
900217ac:	4b05      	ldr	r3, [pc, #20]	@ (900217c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
900217ae:	646b      	str	r3, [r5, #68]	@ 0x44
900217b0:	4b07      	ldr	r3, [pc, #28]	@ (900217d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
900217b2:	64ab      	str	r3, [r5, #72]	@ 0x48
900217b4:	bd38      	pop	{r3, r4, r5, pc}
900217b6:	bf00      	nop
900217b8:	24021938 	.word	0x24021938
900217bc:	24000000 	.word	0x24000000
900217c0:	9001d459 	.word	0x9001d459
900217c4:	240000c4 	.word	0x240000c4
900217c8:	2402193c 	.word	0x2402193c
900217cc:	9001d457 	.word	0x9001d457
900217d0:	240000c8 	.word	0x240000c8

900217d4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
900217d4:	b538      	push	{r3, r4, r5, lr}
900217d6:	4c15      	ldr	r4, [pc, #84]	@ (9002182c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
900217d8:	4605      	mov	r5, r0
900217da:	7823      	ldrb	r3, [r4, #0]
900217dc:	f3bf 8f5b 	dmb	ish
900217e0:	07da      	lsls	r2, r3, #31
900217e2:	d40b      	bmi.n	900217fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
900217e4:	4620      	mov	r0, r4
900217e6:	f008 fa43 	bl	90029c70 <__cxa_guard_acquire>
900217ea:	b138      	cbz	r0, 900217fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
900217ec:	4620      	mov	r0, r4
900217ee:	f008 fa4b 	bl	90029c88 <__cxa_guard_release>
900217f2:	4a0f      	ldr	r2, [pc, #60]	@ (90021830 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
900217f4:	490f      	ldr	r1, [pc, #60]	@ (90021834 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
900217f6:	4810      	ldr	r0, [pc, #64]	@ (90021838 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
900217f8:	f008 fa33 	bl	90029c62 <__aeabi_atexit>
900217fc:	4c0f      	ldr	r4, [pc, #60]	@ (9002183c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
900217fe:	7823      	ldrb	r3, [r4, #0]
90021800:	f3bf 8f5b 	dmb	ish
90021804:	07db      	lsls	r3, r3, #31
90021806:	d40b      	bmi.n	90021820 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
90021808:	4620      	mov	r0, r4
9002180a:	f008 fa31 	bl	90029c70 <__cxa_guard_acquire>
9002180e:	b138      	cbz	r0, 90021820 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
90021810:	4620      	mov	r0, r4
90021812:	f008 fa39 	bl	90029c88 <__cxa_guard_release>
90021816:	4a06      	ldr	r2, [pc, #24]	@ (90021830 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
90021818:	4909      	ldr	r1, [pc, #36]	@ (90021840 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
9002181a:	480a      	ldr	r0, [pc, #40]	@ (90021844 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
9002181c:	f008 fa21 	bl	90029c62 <__aeabi_atexit>
90021820:	4b05      	ldr	r3, [pc, #20]	@ (90021838 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
90021822:	63eb      	str	r3, [r5, #60]	@ 0x3c
90021824:	4b07      	ldr	r3, [pc, #28]	@ (90021844 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
90021826:	642b      	str	r3, [r5, #64]	@ 0x40
90021828:	bd38      	pop	{r3, r4, r5, pc}
9002182a:	bf00      	nop
9002182c:	24021958 	.word	0x24021958
90021830:	24000000 	.word	0x24000000
90021834:	9001d45d 	.word	0x9001d45d
90021838:	240000e4 	.word	0x240000e4
9002183c:	2402195c 	.word	0x2402195c
90021840:	9001d45b 	.word	0x9001d45b
90021844:	240000e8 	.word	0x240000e8

90021848 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
90021848:	b510      	push	{r4, lr}
9002184a:	4604      	mov	r4, r0
9002184c:	f7ff ff14 	bl	90021678 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
90021850:	4620      	mov	r0, r4
90021852:	f7ff ff85 	bl	90021760 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
90021856:	4620      	mov	r0, r4
90021858:	f7ff ff48 	bl	900216ec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
9002185c:	4620      	mov	r0, r4
9002185e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021862:	f7ff bfb7 	b.w	900217d4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

90021868 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
90021868:	b538      	push	{r3, r4, r5, lr}
9002186a:	4c15      	ldr	r4, [pc, #84]	@ (900218c0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
9002186c:	4605      	mov	r5, r0
9002186e:	7823      	ldrb	r3, [r4, #0]
90021870:	f3bf 8f5b 	dmb	ish
90021874:	07da      	lsls	r2, r3, #31
90021876:	d40b      	bmi.n	90021890 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
90021878:	4620      	mov	r0, r4
9002187a:	f008 f9f9 	bl	90029c70 <__cxa_guard_acquire>
9002187e:	b138      	cbz	r0, 90021890 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
90021880:	4620      	mov	r0, r4
90021882:	f008 fa01 	bl	90029c88 <__cxa_guard_release>
90021886:	4a0f      	ldr	r2, [pc, #60]	@ (900218c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
90021888:	490f      	ldr	r1, [pc, #60]	@ (900218c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
9002188a:	4810      	ldr	r0, [pc, #64]	@ (900218cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
9002188c:	f008 f9e9 	bl	90029c62 <__aeabi_atexit>
90021890:	4c0f      	ldr	r4, [pc, #60]	@ (900218d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
90021892:	7823      	ldrb	r3, [r4, #0]
90021894:	f3bf 8f5b 	dmb	ish
90021898:	07db      	lsls	r3, r3, #31
9002189a:	d40b      	bmi.n	900218b4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
9002189c:	4620      	mov	r0, r4
9002189e:	f008 f9e7 	bl	90029c70 <__cxa_guard_acquire>
900218a2:	b138      	cbz	r0, 900218b4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
900218a4:	4620      	mov	r0, r4
900218a6:	f008 f9ef 	bl	90029c88 <__cxa_guard_release>
900218aa:	4a06      	ldr	r2, [pc, #24]	@ (900218c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
900218ac:	4909      	ldr	r1, [pc, #36]	@ (900218d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
900218ae:	480a      	ldr	r0, [pc, #40]	@ (900218d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
900218b0:	f008 f9d7 	bl	90029c62 <__aeabi_atexit>
900218b4:	4b05      	ldr	r3, [pc, #20]	@ (900218cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
900218b6:	666b      	str	r3, [r5, #100]	@ 0x64
900218b8:	4b07      	ldr	r3, [pc, #28]	@ (900218d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
900218ba:	66ab      	str	r3, [r5, #104]	@ 0x68
900218bc:	bd38      	pop	{r3, r4, r5, pc}
900218be:	bf00      	nop
900218c0:	24021940 	.word	0x24021940
900218c4:	24000000 	.word	0x24000000
900218c8:	9001d449 	.word	0x9001d449
900218cc:	240000cc 	.word	0x240000cc
900218d0:	24021944 	.word	0x24021944
900218d4:	9001d447 	.word	0x9001d447
900218d8:	240000d0 	.word	0x240000d0

900218dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
900218dc:	b538      	push	{r3, r4, r5, lr}
900218de:	4c15      	ldr	r4, [pc, #84]	@ (90021934 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
900218e0:	4605      	mov	r5, r0
900218e2:	7823      	ldrb	r3, [r4, #0]
900218e4:	f3bf 8f5b 	dmb	ish
900218e8:	07da      	lsls	r2, r3, #31
900218ea:	d40b      	bmi.n	90021904 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
900218ec:	4620      	mov	r0, r4
900218ee:	f008 f9bf 	bl	90029c70 <__cxa_guard_acquire>
900218f2:	b138      	cbz	r0, 90021904 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
900218f4:	4620      	mov	r0, r4
900218f6:	f008 f9c7 	bl	90029c88 <__cxa_guard_release>
900218fa:	4a0f      	ldr	r2, [pc, #60]	@ (90021938 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
900218fc:	490f      	ldr	r1, [pc, #60]	@ (9002193c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
900218fe:	4810      	ldr	r0, [pc, #64]	@ (90021940 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
90021900:	f008 f9af 	bl	90029c62 <__aeabi_atexit>
90021904:	4c0f      	ldr	r4, [pc, #60]	@ (90021944 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
90021906:	7823      	ldrb	r3, [r4, #0]
90021908:	f3bf 8f5b 	dmb	ish
9002190c:	07db      	lsls	r3, r3, #31
9002190e:	d40b      	bmi.n	90021928 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
90021910:	4620      	mov	r0, r4
90021912:	f008 f9ad 	bl	90029c70 <__cxa_guard_acquire>
90021916:	b138      	cbz	r0, 90021928 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
90021918:	4620      	mov	r0, r4
9002191a:	f008 f9b5 	bl	90029c88 <__cxa_guard_release>
9002191e:	4a06      	ldr	r2, [pc, #24]	@ (90021938 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
90021920:	4909      	ldr	r1, [pc, #36]	@ (90021948 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
90021922:	480a      	ldr	r0, [pc, #40]	@ (9002194c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
90021924:	f008 f99d 	bl	90029c62 <__aeabi_atexit>
90021928:	4b05      	ldr	r3, [pc, #20]	@ (90021940 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
9002192a:	65eb      	str	r3, [r5, #92]	@ 0x5c
9002192c:	4b07      	ldr	r3, [pc, #28]	@ (9002194c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
9002192e:	662b      	str	r3, [r5, #96]	@ 0x60
90021930:	bd38      	pop	{r3, r4, r5, pc}
90021932:	bf00      	nop
90021934:	24021918 	.word	0x24021918
90021938:	24000000 	.word	0x24000000
9002193c:	9001d44d 	.word	0x9001d44d
90021940:	240000a4 	.word	0x240000a4
90021944:	2402191c 	.word	0x2402191c
90021948:	9001d44b 	.word	0x9001d44b
9002194c:	240000a8 	.word	0x240000a8

90021950 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
90021950:	b510      	push	{r4, lr}
90021952:	4604      	mov	r4, r0
90021954:	f7ff ff88 	bl	90021868 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
90021958:	4620      	mov	r0, r4
9002195a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002195e:	f7ff bfbd 	b.w	900218dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

90021964 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
90021964:	b538      	push	{r3, r4, r5, lr}
90021966:	4c15      	ldr	r4, [pc, #84]	@ (900219bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
90021968:	4605      	mov	r5, r0
9002196a:	7823      	ldrb	r3, [r4, #0]
9002196c:	f3bf 8f5b 	dmb	ish
90021970:	07da      	lsls	r2, r3, #31
90021972:	d40b      	bmi.n	9002198c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
90021974:	4620      	mov	r0, r4
90021976:	f008 f97b 	bl	90029c70 <__cxa_guard_acquire>
9002197a:	b138      	cbz	r0, 9002198c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
9002197c:	4620      	mov	r0, r4
9002197e:	f008 f983 	bl	90029c88 <__cxa_guard_release>
90021982:	4a0f      	ldr	r2, [pc, #60]	@ (900219c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
90021984:	490f      	ldr	r1, [pc, #60]	@ (900219c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
90021986:	4810      	ldr	r0, [pc, #64]	@ (900219c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
90021988:	f008 f96b 	bl	90029c62 <__aeabi_atexit>
9002198c:	4c0f      	ldr	r4, [pc, #60]	@ (900219cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
9002198e:	7823      	ldrb	r3, [r4, #0]
90021990:	f3bf 8f5b 	dmb	ish
90021994:	07db      	lsls	r3, r3, #31
90021996:	d40b      	bmi.n	900219b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
90021998:	4620      	mov	r0, r4
9002199a:	f008 f969 	bl	90029c70 <__cxa_guard_acquire>
9002199e:	b138      	cbz	r0, 900219b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
900219a0:	4620      	mov	r0, r4
900219a2:	f008 f971 	bl	90029c88 <__cxa_guard_release>
900219a6:	4a06      	ldr	r2, [pc, #24]	@ (900219c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
900219a8:	4909      	ldr	r1, [pc, #36]	@ (900219d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
900219aa:	480a      	ldr	r0, [pc, #40]	@ (900219d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
900219ac:	f008 f959 	bl	90029c62 <__aeabi_atexit>
900219b0:	4b05      	ldr	r3, [pc, #20]	@ (900219c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
900219b2:	676b      	str	r3, [r5, #116]	@ 0x74
900219b4:	4b07      	ldr	r3, [pc, #28]	@ (900219d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
900219b6:	67ab      	str	r3, [r5, #120]	@ 0x78
900219b8:	bd38      	pop	{r3, r4, r5, pc}
900219ba:	bf00      	nop
900219bc:	24021910 	.word	0x24021910
900219c0:	24000000 	.word	0x24000000
900219c4:	9001d441 	.word	0x9001d441
900219c8:	2400009c 	.word	0x2400009c
900219cc:	24021914 	.word	0x24021914
900219d0:	9001d43f 	.word	0x9001d43f
900219d4:	240000a0 	.word	0x240000a0

900219d8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
900219d8:	b538      	push	{r3, r4, r5, lr}
900219da:	4c15      	ldr	r4, [pc, #84]	@ (90021a30 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
900219dc:	4605      	mov	r5, r0
900219de:	7823      	ldrb	r3, [r4, #0]
900219e0:	f3bf 8f5b 	dmb	ish
900219e4:	07da      	lsls	r2, r3, #31
900219e6:	d40b      	bmi.n	90021a00 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
900219e8:	4620      	mov	r0, r4
900219ea:	f008 f941 	bl	90029c70 <__cxa_guard_acquire>
900219ee:	b138      	cbz	r0, 90021a00 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
900219f0:	4620      	mov	r0, r4
900219f2:	f008 f949 	bl	90029c88 <__cxa_guard_release>
900219f6:	4a0f      	ldr	r2, [pc, #60]	@ (90021a34 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
900219f8:	490f      	ldr	r1, [pc, #60]	@ (90021a38 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
900219fa:	4810      	ldr	r0, [pc, #64]	@ (90021a3c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
900219fc:	f008 f931 	bl	90029c62 <__aeabi_atexit>
90021a00:	4c0f      	ldr	r4, [pc, #60]	@ (90021a40 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
90021a02:	7823      	ldrb	r3, [r4, #0]
90021a04:	f3bf 8f5b 	dmb	ish
90021a08:	07db      	lsls	r3, r3, #31
90021a0a:	d40b      	bmi.n	90021a24 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
90021a0c:	4620      	mov	r0, r4
90021a0e:	f008 f92f 	bl	90029c70 <__cxa_guard_acquire>
90021a12:	b138      	cbz	r0, 90021a24 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
90021a14:	4620      	mov	r0, r4
90021a16:	f008 f937 	bl	90029c88 <__cxa_guard_release>
90021a1a:	4a06      	ldr	r2, [pc, #24]	@ (90021a34 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
90021a1c:	4909      	ldr	r1, [pc, #36]	@ (90021a44 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
90021a1e:	480a      	ldr	r0, [pc, #40]	@ (90021a48 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
90021a20:	f008 f91f 	bl	90029c62 <__aeabi_atexit>
90021a24:	4b05      	ldr	r3, [pc, #20]	@ (90021a3c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
90021a26:	66eb      	str	r3, [r5, #108]	@ 0x6c
90021a28:	4b07      	ldr	r3, [pc, #28]	@ (90021a48 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
90021a2a:	672b      	str	r3, [r5, #112]	@ 0x70
90021a2c:	bd38      	pop	{r3, r4, r5, pc}
90021a2e:	bf00      	nop
90021a30:	24021908 	.word	0x24021908
90021a34:	24000000 	.word	0x24000000
90021a38:	9001d445 	.word	0x9001d445
90021a3c:	24000094 	.word	0x24000094
90021a40:	2402190c 	.word	0x2402190c
90021a44:	9001d443 	.word	0x9001d443
90021a48:	24000098 	.word	0x24000098

90021a4c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
90021a4c:	b510      	push	{r4, lr}
90021a4e:	4604      	mov	r4, r0
90021a50:	f7ff ff88 	bl	90021964 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
90021a54:	4620      	mov	r0, r4
90021a56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021a5a:	f7ff bfbd 	b.w	900219d8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

90021a5e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
90021a5e:	b510      	push	{r4, lr}
90021a60:	4604      	mov	r4, r0
90021a62:	f7ff fff3 	bl	90021a4c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
90021a66:	4620      	mov	r0, r4
90021a68:	f7ff ff72 	bl	90021950 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
90021a6c:	4620      	mov	r0, r4
90021a6e:	f7ff fdf9 	bl	90021664 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
90021a72:	4620      	mov	r0, r4
90021a74:	f7ff fcfa 	bl	9002146c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
90021a78:	4620      	mov	r0, r4
90021a7a:	f7ff fd75 	bl	90021568 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
90021a7e:	4620      	mov	r0, r4
90021a80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021a84:	f7ff bee0 	b.w	90021848 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

90021a88 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
90021a88:	b538      	push	{r3, r4, r5, lr}
90021a8a:	4c0b      	ldr	r4, [pc, #44]	@ (90021ab8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
90021a8c:	4605      	mov	r5, r0
90021a8e:	7823      	ldrb	r3, [r4, #0]
90021a90:	f3bf 8f5b 	dmb	ish
90021a94:	07db      	lsls	r3, r3, #31
90021a96:	d40b      	bmi.n	90021ab0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
90021a98:	4620      	mov	r0, r4
90021a9a:	f008 f8e9 	bl	90029c70 <__cxa_guard_acquire>
90021a9e:	b138      	cbz	r0, 90021ab0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
90021aa0:	4620      	mov	r0, r4
90021aa2:	f008 f8f1 	bl	90029c88 <__cxa_guard_release>
90021aa6:	4a05      	ldr	r2, [pc, #20]	@ (90021abc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
90021aa8:	4905      	ldr	r1, [pc, #20]	@ (90021ac0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
90021aaa:	4806      	ldr	r0, [pc, #24]	@ (90021ac4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
90021aac:	f008 f8d9 	bl	90029c62 <__aeabi_atexit>
90021ab0:	4b04      	ldr	r3, [pc, #16]	@ (90021ac4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
90021ab2:	67eb      	str	r3, [r5, #124]	@ 0x7c
90021ab4:	bd38      	pop	{r3, r4, r5, pc}
90021ab6:	bf00      	nop
90021ab8:	240218fc 	.word	0x240218fc
90021abc:	24000000 	.word	0x24000000
90021ac0:	9001d43d 	.word	0x9001d43d
90021ac4:	2400008c 	.word	0x2400008c

90021ac8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
90021ac8:	b538      	push	{r3, r4, r5, lr}
90021aca:	4c0b      	ldr	r4, [pc, #44]	@ (90021af8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
90021acc:	4605      	mov	r5, r0
90021ace:	7823      	ldrb	r3, [r4, #0]
90021ad0:	f3bf 8f5b 	dmb	ish
90021ad4:	07db      	lsls	r3, r3, #31
90021ad6:	d40b      	bmi.n	90021af0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
90021ad8:	4620      	mov	r0, r4
90021ada:	f008 f8c9 	bl	90029c70 <__cxa_guard_acquire>
90021ade:	b138      	cbz	r0, 90021af0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
90021ae0:	4620      	mov	r0, r4
90021ae2:	f008 f8d1 	bl	90029c88 <__cxa_guard_release>
90021ae6:	4a05      	ldr	r2, [pc, #20]	@ (90021afc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
90021ae8:	4905      	ldr	r1, [pc, #20]	@ (90021b00 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
90021aea:	4806      	ldr	r0, [pc, #24]	@ (90021b04 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
90021aec:	f008 f8b9 	bl	90029c62 <__aeabi_atexit>
90021af0:	4b04      	ldr	r3, [pc, #16]	@ (90021b04 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
90021af2:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
90021af6:	bd38      	pop	{r3, r4, r5, pc}
90021af8:	24021900 	.word	0x24021900
90021afc:	24000000 	.word	0x24000000
90021b00:	9001d43b 	.word	0x9001d43b
90021b04:	24000090 	.word	0x24000090

90021b08 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
90021b08:	b570      	push	{r4, r5, r6, lr}
90021b0a:	4d0d      	ldr	r5, [pc, #52]	@ (90021b40 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
90021b0c:	4606      	mov	r6, r0
90021b0e:	4c0d      	ldr	r4, [pc, #52]	@ (90021b44 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
90021b10:	782b      	ldrb	r3, [r5, #0]
90021b12:	f3bf 8f5b 	dmb	ish
90021b16:	f013 0f01 	tst.w	r3, #1
90021b1a:	d10d      	bne.n	90021b38 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
90021b1c:	4628      	mov	r0, r5
90021b1e:	f008 f8a7 	bl	90029c70 <__cxa_guard_acquire>
90021b22:	b148      	cbz	r0, 90021b38 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
90021b24:	4b08      	ldr	r3, [pc, #32]	@ (90021b48 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
90021b26:	4628      	mov	r0, r5
90021b28:	6023      	str	r3, [r4, #0]
90021b2a:	f008 f8ad 	bl	90029c88 <__cxa_guard_release>
90021b2e:	4a07      	ldr	r2, [pc, #28]	@ (90021b4c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
90021b30:	4620      	mov	r0, r4
90021b32:	4907      	ldr	r1, [pc, #28]	@ (90021b50 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
90021b34:	f008 f895 	bl	90029c62 <__aeabi_atexit>
90021b38:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
90021b3c:	bd70      	pop	{r4, r5, r6, pc}
90021b3e:	bf00      	nop
90021b40:	24021904 	.word	0x24021904
90021b44:	24021a7c 	.word	0x24021a7c
90021b48:	9002e3f4 	.word	0x9002e3f4
90021b4c:	24000000 	.word	0x24000000
90021b50:	9001d439 	.word	0x9001d439

90021b54 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
90021b54:	b510      	push	{r4, lr}
90021b56:	4604      	mov	r4, r0
90021b58:	f7ff ff96 	bl	90021a88 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
90021b5c:	4620      	mov	r0, r4
90021b5e:	f7ff ffb3 	bl	90021ac8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
90021b62:	4620      	mov	r0, r4
90021b64:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021b68:	f7ff bfce 	b.w	90021b08 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

90021b6c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
90021b6c:	b570      	push	{r4, r5, r6, lr}
90021b6e:	4d0d      	ldr	r5, [pc, #52]	@ (90021ba4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
90021b70:	4606      	mov	r6, r0
90021b72:	4c0d      	ldr	r4, [pc, #52]	@ (90021ba8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
90021b74:	782b      	ldrb	r3, [r5, #0]
90021b76:	f3bf 8f5b 	dmb	ish
90021b7a:	f013 0f01 	tst.w	r3, #1
90021b7e:	d10d      	bne.n	90021b9c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
90021b80:	4628      	mov	r0, r5
90021b82:	f008 f875 	bl	90029c70 <__cxa_guard_acquire>
90021b86:	b148      	cbz	r0, 90021b9c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
90021b88:	4b08      	ldr	r3, [pc, #32]	@ (90021bac <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
90021b8a:	4628      	mov	r0, r5
90021b8c:	6023      	str	r3, [r4, #0]
90021b8e:	f008 f87b 	bl	90029c88 <__cxa_guard_release>
90021b92:	4a07      	ldr	r2, [pc, #28]	@ (90021bb0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
90021b94:	4620      	mov	r0, r4
90021b96:	4907      	ldr	r1, [pc, #28]	@ (90021bb4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
90021b98:	f008 f863 	bl	90029c62 <__aeabi_atexit>
90021b9c:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
90021ba0:	bd70      	pop	{r4, r5, r6, pc}
90021ba2:	bf00      	nop
90021ba4:	240218f8 	.word	0x240218f8
90021ba8:	24021978 	.word	0x24021978
90021bac:	9002e410 	.word	0x9002e410
90021bb0:	24000000 	.word	0x24000000
90021bb4:	9001d437 	.word	0x9001d437

90021bb8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
90021bb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021bbc:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
90021bc0:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
90021bc4:	2d00      	cmp	r5, #0
90021bc6:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
90021bca:	fb05 4c0e 	mla	ip, r5, lr, r4
90021bce:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
90021bd2:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
90021bd6:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
90021bda:	eb02 0a0c 	add.w	sl, r2, ip
90021bde:	8808      	ldrh	r0, [r1, #0]
90021be0:	f2c0 80b0 	blt.w	90021d44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
90021be4:	45ab      	cmp	fp, r5
90021be6:	f340 80ad 	ble.w	90021d44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
90021bea:	2c00      	cmp	r4, #0
90021bec:	f2c0 80a8 	blt.w	90021d40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
90021bf0:	45a6      	cmp	lr, r4
90021bf2:	f340 80a5 	ble.w	90021d40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
90021bf6:	f812 200c 	ldrb.w	r2, [r2, ip]
90021bfa:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
90021bfe:	1c62      	adds	r2, r4, #1
90021c00:	f100 80a3 	bmi.w	90021d4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90021c04:	4596      	cmp	lr, r2
90021c06:	f340 80a0 	ble.w	90021d4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90021c0a:	f1b9 0f00 	cmp.w	r9, #0
90021c0e:	f000 809c 	beq.w	90021d4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90021c12:	f89a 2001 	ldrb.w	r2, [sl, #1]
90021c16:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
90021c1a:	3501      	adds	r5, #1
90021c1c:	f100 8099 	bmi.w	90021d52 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90021c20:	45ab      	cmp	fp, r5
90021c22:	f340 8096 	ble.w	90021d52 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90021c26:	2f00      	cmp	r7, #0
90021c28:	f000 8093 	beq.w	90021d52 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90021c2c:	2c00      	cmp	r4, #0
90021c2e:	f2c0 808e 	blt.w	90021d4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
90021c32:	45a6      	cmp	lr, r4
90021c34:	f340 808b 	ble.w	90021d4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
90021c38:	f81a 200e 	ldrb.w	r2, [sl, lr]
90021c3c:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
90021c40:	3401      	adds	r4, #1
90021c42:	f100 8089 	bmi.w	90021d58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90021c46:	45a6      	cmp	lr, r4
90021c48:	f340 8086 	ble.w	90021d58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90021c4c:	f1b9 0f00 	cmp.w	r9, #0
90021c50:	f000 8082 	beq.w	90021d58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90021c54:	44d6      	add	lr, sl
90021c56:	f89e 2001 	ldrb.w	r2, [lr, #1]
90021c5a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
90021c5e:	ea4f 4408 	mov.w	r4, r8, lsl #16
90021c62:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
90021c66:	fb19 fe07 	smulbb	lr, r9, r7
90021c6a:	f1c7 0210 	rsb	r2, r7, #16
90021c6e:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90021c72:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
90021c76:	eba2 0209 	sub.w	r2, r2, r9
90021c7a:	ea44 0808 	orr.w	r8, r4, r8
90021c7e:	ea4f 440c 	mov.w	r4, ip, lsl #16
90021c82:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90021c86:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
90021c8a:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90021c8e:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90021c92:	ea44 0c0c 	orr.w	ip, r4, ip
90021c96:	ebce 0449 	rsb	r4, lr, r9, lsl #1
90021c9a:	fb04 f40c 	mul.w	r4, r4, ip
90021c9e:	fb02 4808 	mla	r8, r2, r8, r4
90021ca2:	041a      	lsls	r2, r3, #16
90021ca4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90021ca8:	b2b4      	uxth	r4, r6
90021caa:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90021cae:	43f6      	mvns	r6, r6
90021cb0:	4313      	orrs	r3, r2
90021cb2:	042a      	lsls	r2, r5, #16
90021cb4:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90021cb8:	b2f6      	uxtb	r6, r6
90021cba:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90021cbe:	fb0e 8303 	mla	r3, lr, r3, r8
90021cc2:	432a      	orrs	r2, r5
90021cc4:	fb07 3202 	mla	r2, r7, r2, r3
90021cc8:	10c7      	asrs	r7, r0, #3
90021cca:	0d53      	lsrs	r3, r2, #21
90021ccc:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90021cd0:	0952      	lsrs	r2, r2, #5
90021cd2:	fb17 f706 	smulbb	r7, r7, r6
90021cd6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90021cda:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90021cde:	431a      	orrs	r2, r3
90021ce0:	b293      	uxth	r3, r2
90021ce2:	1202      	asrs	r2, r0, #8
90021ce4:	121d      	asrs	r5, r3, #8
90021ce6:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90021cea:	00c0      	lsls	r0, r0, #3
90021cec:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90021cf0:	fb12 f206 	smulbb	r2, r2, r6
90021cf4:	b2c0      	uxtb	r0, r0
90021cf6:	fb05 2504 	mla	r5, r5, r4, r2
90021cfa:	10da      	asrs	r2, r3, #3
90021cfc:	fb10 f006 	smulbb	r0, r0, r6
90021d00:	00db      	lsls	r3, r3, #3
90021d02:	b2ad      	uxth	r5, r5
90021d04:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90021d08:	b2db      	uxtb	r3, r3
90021d0a:	fb02 7204 	mla	r2, r2, r4, r7
90021d0e:	fb03 0004 	mla	r0, r3, r4, r0
90021d12:	1c6b      	adds	r3, r5, #1
90021d14:	b292      	uxth	r2, r2
90021d16:	b280      	uxth	r0, r0
90021d18:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90021d1c:	1c43      	adds	r3, r0, #1
90021d1e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90021d22:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90021d26:	1c50      	adds	r0, r2, #1
90021d28:	eb00 2212 	add.w	r2, r0, r2, lsr #8
90021d2c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90021d30:	0952      	lsrs	r2, r2, #5
90021d32:	432b      	orrs	r3, r5
90021d34:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90021d38:	4313      	orrs	r3, r2
90021d3a:	800b      	strh	r3, [r1, #0]
90021d3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021d40:	4680      	mov	r8, r0
90021d42:	e75c      	b.n	90021bfe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
90021d44:	4684      	mov	ip, r0
90021d46:	4680      	mov	r8, r0
90021d48:	e767      	b.n	90021c1a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
90021d4a:	4684      	mov	ip, r0
90021d4c:	e765      	b.n	90021c1a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
90021d4e:	4605      	mov	r5, r0
90021d50:	e776      	b.n	90021c40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
90021d52:	4603      	mov	r3, r0
90021d54:	4605      	mov	r5, r0
90021d56:	e782      	b.n	90021c5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
90021d58:	4603      	mov	r3, r0
90021d5a:	e780      	b.n	90021c5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

90021d5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90021d5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021d60:	b099      	sub	sp, #100	@ 0x64
90021d62:	9215      	str	r2, [sp, #84]	@ 0x54
90021d64:	9309      	str	r3, [sp, #36]	@ 0x24
90021d66:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
90021d68:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
90021d6c:	9016      	str	r0, [sp, #88]	@ 0x58
90021d6e:	930d      	str	r3, [sp, #52]	@ 0x34
90021d70:	6850      	ldr	r0, [r2, #4]
90021d72:	910c      	str	r1, [sp, #48]	@ 0x30
90021d74:	6812      	ldr	r2, [r2, #0]
90021d76:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
90021d7a:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
90021d7e:	fb00 1303 	mla	r3, r0, r3, r1
90021d82:	eb02 0843 	add.w	r8, r2, r3, lsl #1
90021d86:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90021d88:	681b      	ldr	r3, [r3, #0]
90021d8a:	930b      	str	r3, [sp, #44]	@ 0x2c
90021d8c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90021d8e:	685e      	ldr	r6, [r3, #4]
90021d90:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90021d92:	3604      	adds	r6, #4
90021d94:	43db      	mvns	r3, r3
90021d96:	b2db      	uxtb	r3, r3
90021d98:	930a      	str	r3, [sp, #40]	@ 0x28
90021d9a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90021d9c:	2b00      	cmp	r3, #0
90021d9e:	dc03      	bgt.n	90021da8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90021da0:	9b15      	ldr	r3, [sp, #84]	@ 0x54
90021da2:	2b00      	cmp	r3, #0
90021da4:	f340 8225 	ble.w	900221f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
90021da8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90021daa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021dae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90021db2:	1e48      	subs	r0, r1, #1
90021db4:	1e57      	subs	r7, r2, #1
90021db6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021db8:	2b00      	cmp	r3, #0
90021dba:	f340 80e3 	ble.w	90021f84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
90021dbe:	ea5f 4c2a 	movs.w	ip, sl, asr #16
90021dc2:	ea4f 4325 	mov.w	r3, r5, asr #16
90021dc6:	d406      	bmi.n	90021dd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90021dc8:	4584      	cmp	ip, r0
90021dca:	da04      	bge.n	90021dd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90021dcc:	2b00      	cmp	r3, #0
90021dce:	db02      	blt.n	90021dd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90021dd0:	42bb      	cmp	r3, r7
90021dd2:	f2c0 80d8 	blt.w	90021f86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
90021dd6:	f11c 0c01 	adds.w	ip, ip, #1
90021dda:	f100 80c9 	bmi.w	90021f70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90021dde:	4561      	cmp	r1, ip
90021de0:	f2c0 80c6 	blt.w	90021f70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90021de4:	3301      	adds	r3, #1
90021de6:	f100 80c3 	bmi.w	90021f70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90021dea:	429a      	cmp	r2, r3
90021dec:	f2c0 80c0 	blt.w	90021f70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90021df0:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
90021df4:	4647      	mov	r7, r8
90021df6:	f1bb 0f00 	cmp.w	fp, #0
90021dfa:	f340 80e3 	ble.w	90021fc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
90021dfe:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
90021e00:	ea4f 4c25 	mov.w	ip, r5, asr #16
90021e04:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90021e06:	f3ca 3003 	ubfx	r0, sl, #12, #4
90021e0a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90021e0e:	ea5f 422a 	movs.w	r2, sl, asr #16
90021e12:	f3c5 3103 	ubfx	r1, r5, #12, #4
90021e16:	689b      	ldr	r3, [r3, #8]
90021e18:	f100 8121 	bmi.w	9002205e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90021e1c:	f103 39ff 	add.w	r9, r3, #4294967295
90021e20:	454a      	cmp	r2, r9
90021e22:	f280 811c 	bge.w	9002205e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90021e26:	f1bc 0f00 	cmp.w	ip, #0
90021e2a:	f2c0 8118 	blt.w	9002205e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90021e2e:	f10e 39ff 	add.w	r9, lr, #4294967295
90021e32:	45cc      	cmp	ip, r9
90021e34:	f280 8113 	bge.w	9002205e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90021e38:	b21b      	sxth	r3, r3
90021e3a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90021e3c:	fb0c 2203 	mla	r2, ip, r3, r2
90021e40:	eb04 0902 	add.w	r9, r4, r2
90021e44:	5ca2      	ldrb	r2, [r4, r2]
90021e46:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
90021e4a:	2800      	cmp	r0, #0
90021e4c:	f000 80fe 	beq.w	9002204c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
90021e50:	f899 2001 	ldrb.w	r2, [r9, #1]
90021e54:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
90021e58:	9211      	str	r2, [sp, #68]	@ 0x44
90021e5a:	b151      	cbz	r1, 90021e72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90021e5c:	eb09 0203 	add.w	r2, r9, r3
90021e60:	f819 3003 	ldrb.w	r3, [r9, r3]
90021e64:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90021e68:	930f      	str	r3, [sp, #60]	@ 0x3c
90021e6a:	7853      	ldrb	r3, [r2, #1]
90021e6c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90021e70:	9312      	str	r3, [sp, #72]	@ 0x48
90021e72:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90021e74:	fb10 f201 	smulbb	r2, r0, r1
90021e78:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90021e7a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90021e7e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90021e82:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
90021e86:	10d2      	asrs	r2, r2, #3
90021e88:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90021e8c:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
90021e90:	ea4c 0c03 	orr.w	ip, ip, r3
90021e94:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90021e96:	041b      	lsls	r3, r3, #16
90021e98:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90021e9c:	4323      	orrs	r3, r4
90021e9e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90021ea0:	4353      	muls	r3, r2
90021ea2:	fb09 330c 	mla	r3, r9, ip, r3
90021ea6:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
90021eaa:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90021eae:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90021eb2:	ea4c 0e0e 	orr.w	lr, ip, lr
90021eb6:	f1c1 0c10 	rsb	ip, r1, #16
90021eba:	ebac 0c00 	sub.w	ip, ip, r0
90021ebe:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90021ec2:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
90021ec6:	fb0c 3c0e 	mla	ip, ip, lr, r3
90021eca:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90021ecc:	0418      	lsls	r0, r3, #16
90021ece:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90021ed2:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90021ed6:	4318      	orrs	r0, r3
90021ed8:	fb02 c200 	mla	r2, r2, r0, ip
90021edc:	8838      	ldrh	r0, [r7, #0]
90021ede:	0d53      	lsrs	r3, r2, #21
90021ee0:	0952      	lsrs	r2, r2, #5
90021ee2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90021ee6:	1201      	asrs	r1, r0, #8
90021ee8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90021eec:	ea4f 0ee0 	mov.w	lr, r0, asr #3
90021ef0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90021ef4:	00c0      	lsls	r0, r0, #3
90021ef6:	431a      	orrs	r2, r3
90021ef8:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
90021efc:	fb11 f104 	smulbb	r1, r1, r4
90021f00:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
90021f04:	b292      	uxth	r2, r2
90021f06:	fb1e fe04 	smulbb	lr, lr, r4
90021f0a:	b2c0      	uxtb	r0, r0
90021f0c:	ea4f 2c22 	mov.w	ip, r2, asr #8
90021f10:	fb10 f004 	smulbb	r0, r0, r4
90021f14:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90021f18:	fb0c 1c03 	mla	ip, ip, r3, r1
90021f1c:	10d1      	asrs	r1, r2, #3
90021f1e:	00d2      	lsls	r2, r2, #3
90021f20:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90021f24:	fa1f fc8c 	uxth.w	ip, ip
90021f28:	b2d2      	uxtb	r2, r2
90021f2a:	fb01 e103 	mla	r1, r1, r3, lr
90021f2e:	fb02 0303 	mla	r3, r2, r3, r0
90021f32:	b289      	uxth	r1, r1
90021f34:	b29a      	uxth	r2, r3
90021f36:	f10c 0301 	add.w	r3, ip, #1
90021f3a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90021f3e:	1c53      	adds	r3, r2, #1
90021f40:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90021f44:	1c4a      	adds	r2, r1, #1
90021f46:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90021f4a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90021f4e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90021f52:	0949      	lsrs	r1, r1, #5
90021f54:	ea43 030c 	orr.w	r3, r3, ip
90021f58:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90021f5c:	430b      	orrs	r3, r1
90021f5e:	803b      	strh	r3, [r7, #0]
90021f60:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90021f62:	3702      	adds	r7, #2
90021f64:	f10b 3bff 	add.w	fp, fp, #4294967295
90021f68:	449a      	add	sl, r3
90021f6a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90021f6c:	441d      	add	r5, r3
90021f6e:	e742      	b.n	90021df6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90021f70:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90021f72:	f108 0802 	add.w	r8, r8, #2
90021f76:	449a      	add	sl, r3
90021f78:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90021f7a:	441d      	add	r5, r3
90021f7c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021f7e:	3b01      	subs	r3, #1
90021f80:	9309      	str	r3, [sp, #36]	@ 0x24
90021f82:	e718      	b.n	90021db6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
90021f84:	d023      	beq.n	90021fce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90021f86:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021f88:	9825      	ldr	r0, [sp, #148]	@ 0x94
90021f8a:	3b01      	subs	r3, #1
90021f8c:	fb00 a003 	mla	r0, r0, r3, sl
90021f90:	1400      	asrs	r0, r0, #16
90021f92:	f53f af2d 	bmi.w	90021df0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90021f96:	3901      	subs	r1, #1
90021f98:	4288      	cmp	r0, r1
90021f9a:	f6bf af29 	bge.w	90021df0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90021f9e:	9926      	ldr	r1, [sp, #152]	@ 0x98
90021fa0:	fb01 5303 	mla	r3, r1, r3, r5
90021fa4:	141b      	asrs	r3, r3, #16
90021fa6:	f53f af23 	bmi.w	90021df0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90021faa:	3a01      	subs	r2, #1
90021fac:	4293      	cmp	r3, r2
90021fae:	f6bf af1f 	bge.w	90021df0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90021fb2:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
90021fb6:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
90021fba:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
90021fbe:	f1be 0f00 	cmp.w	lr, #0
90021fc2:	dc6c      	bgt.n	9002209e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90021fc4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021fc6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90021fca:	eb08 0844 	add.w	r8, r8, r4, lsl #1
90021fce:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90021fd0:	2b00      	cmp	r3, #0
90021fd2:	f340 810e 	ble.w	900221f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
90021fd6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90021fda:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90021fdc:	ee30 0a04 	vadd.f32	s0, s0, s8
90021fe0:	ee70 0aa4 	vadd.f32	s1, s1, s9
90021fe4:	eef0 6a62 	vmov.f32	s13, s5
90021fe8:	eec7 7a00 	vdiv.f32	s15, s14, s0
90021fec:	ee31 1a05 	vadd.f32	s2, s2, s10
90021ff0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021ff4:	ee16 aa90 	vmov	sl, s13
90021ff8:	eef0 6a43 	vmov.f32	s13, s6
90021ffc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022000:	ee16 5a90 	vmov	r5, s13
90022004:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022008:	ee61 7a27 	vmul.f32	s15, s2, s15
9002200c:	ee77 2a62 	vsub.f32	s5, s14, s5
90022010:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022014:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022018:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002201c:	ee12 2a90 	vmov	r2, s5
90022020:	eef0 2a47 	vmov.f32	s5, s14
90022024:	fb92 f3f3 	sdiv	r3, r2, r3
90022028:	ee13 2a10 	vmov	r2, s6
9002202c:	9325      	str	r3, [sp, #148]	@ 0x94
9002202e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90022030:	eeb0 3a67 	vmov.f32	s6, s15
90022034:	fb92 f3f3 	sdiv	r3, r2, r3
90022038:	9326      	str	r3, [sp, #152]	@ 0x98
9002203a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002203c:	9a15      	ldr	r2, [sp, #84]	@ 0x54
9002203e:	3b01      	subs	r3, #1
90022040:	930c      	str	r3, [sp, #48]	@ 0x30
90022042:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90022044:	bf08      	it	eq
90022046:	4613      	moveq	r3, r2
90022048:	9309      	str	r3, [sp, #36]	@ 0x24
9002204a:	e6a6      	b.n	90021d9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9002204c:	2900      	cmp	r1, #0
9002204e:	f43f af10 	beq.w	90021e72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90022052:	f819 3003 	ldrb.w	r3, [r9, r3]
90022056:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002205a:	930f      	str	r3, [sp, #60]	@ 0x3c
9002205c:	e709      	b.n	90021e72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9002205e:	f112 0901 	adds.w	r9, r2, #1
90022062:	f53f af7d 	bmi.w	90021f60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90022066:	454b      	cmp	r3, r9
90022068:	f6ff af7a 	blt.w	90021f60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9002206c:	f11c 0901 	adds.w	r9, ip, #1
90022070:	f53f af76 	bmi.w	90021f60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90022074:	45ce      	cmp	lr, r9
90022076:	f6ff af73 	blt.w	90021f60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9002207a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
9002207c:	b21b      	sxth	r3, r3
9002207e:	9202      	str	r2, [sp, #8]
90022080:	fa0f f28e 	sxth.w	r2, lr
90022084:	9300      	str	r3, [sp, #0]
90022086:	4633      	mov	r3, r6
90022088:	9201      	str	r2, [sp, #4]
9002208a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9002208c:	e9cd 1405 	strd	r1, r4, [sp, #20]
90022090:	e9cd c003 	strd	ip, r0, [sp, #12]
90022094:	4639      	mov	r1, r7
90022096:	9816      	ldr	r0, [sp, #88]	@ 0x58
90022098:	f7ff fd8e 	bl	90021bb8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
9002209c:	e760      	b.n	90021f60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9002209e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900220a0:	ea4f 422a 	mov.w	r2, sl, asr #16
900220a4:	1429      	asrs	r1, r5, #16
900220a6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900220a8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
900220ac:	f3ca 3c03 	ubfx	ip, sl, #12, #4
900220b0:	f3c5 3003 	ubfx	r0, r5, #12, #4
900220b4:	fb03 2101 	mla	r1, r3, r1, r2
900220b8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900220ba:	440a      	add	r2, r1
900220bc:	5c61      	ldrb	r1, [r4, r1]
900220be:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
900220c2:	f1bc 0f00 	cmp.w	ip, #0
900220c6:	f000 808c 	beq.w	900221e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
900220ca:	7857      	ldrb	r7, [r2, #1]
900220cc:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
900220d0:	9413      	str	r4, [sp, #76]	@ 0x4c
900220d2:	b140      	cbz	r0, 900220e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900220d4:	18d7      	adds	r7, r2, r3
900220d6:	5cd3      	ldrb	r3, [r2, r3]
900220d8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900220dc:	9310      	str	r3, [sp, #64]	@ 0x40
900220de:	787b      	ldrb	r3, [r7, #1]
900220e0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900220e4:	9314      	str	r3, [sp, #80]	@ 0x50
900220e6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
900220e8:	fb1c f200 	smulbb	r2, ip, r0
900220ec:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900220ee:	f10e 3eff 	add.w	lr, lr, #4294967295
900220f2:	041f      	lsls	r7, r3, #16
900220f4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900220f8:	10d2      	asrs	r2, r2, #3
900220fa:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
900220fe:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
90022102:	431f      	orrs	r7, r3
90022104:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
90022108:	9317      	str	r3, [sp, #92]	@ 0x5c
9002210a:	9b14      	ldr	r3, [sp, #80]	@ 0x50
9002210c:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
9002210e:	041b      	lsls	r3, r3, #16
90022110:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90022114:	ea43 030b 	orr.w	r3, r3, fp
90022118:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9002211c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90022120:	4353      	muls	r3, r2
90022122:	fb04 3707 	mla	r7, r4, r7, r3
90022126:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
9002212a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
9002212c:	ea43 0b01 	orr.w	fp, r3, r1
90022130:	f1c0 0110 	rsb	r1, r0, #16
90022134:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90022136:	eba1 0c0c 	sub.w	ip, r1, ip
9002213a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9002213e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90022142:	fb0c 770b 	mla	r7, ip, fp, r7
90022146:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9002214a:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
9002214e:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90022152:	ea4c 0c0b 	orr.w	ip, ip, fp
90022156:	fb02 770c 	mla	r7, r2, ip, r7
9002215a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9002215c:	0d79      	lsrs	r1, r7, #21
9002215e:	8812      	ldrh	r2, [r2, #0]
90022160:	097f      	lsrs	r7, r7, #5
90022162:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90022166:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
9002216a:	430f      	orrs	r7, r1
9002216c:	1211      	asrs	r1, r2, #8
9002216e:	b2bb      	uxth	r3, r7
90022170:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90022174:	10d7      	asrs	r7, r2, #3
90022176:	fb11 f104 	smulbb	r1, r1, r4
9002217a:	1218      	asrs	r0, r3, #8
9002217c:	00d2      	lsls	r2, r2, #3
9002217e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90022182:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90022186:	fb17 f704 	smulbb	r7, r7, r4
9002218a:	b2d2      	uxtb	r2, r2
9002218c:	fb00 1009 	mla	r0, r0, r9, r1
90022190:	10d9      	asrs	r1, r3, #3
90022192:	fb12 f204 	smulbb	r2, r2, r4
90022196:	00db      	lsls	r3, r3, #3
90022198:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9002219c:	b280      	uxth	r0, r0
9002219e:	b2db      	uxtb	r3, r3
900221a0:	fb01 7109 	mla	r1, r1, r9, r7
900221a4:	fb03 2309 	mla	r3, r3, r9, r2
900221a8:	1c42      	adds	r2, r0, #1
900221aa:	b289      	uxth	r1, r1
900221ac:	b29b      	uxth	r3, r3
900221ae:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900221b2:	1c4f      	adds	r7, r1, #1
900221b4:	1c5a      	adds	r2, r3, #1
900221b6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
900221ba:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
900221be:	eb02 2213 	add.w	r2, r2, r3, lsr #8
900221c2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900221c4:	0949      	lsrs	r1, r1, #5
900221c6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900221ca:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900221ce:	4310      	orrs	r0, r2
900221d0:	4308      	orrs	r0, r1
900221d2:	f823 0b02 	strh.w	r0, [r3], #2
900221d6:	930e      	str	r3, [sp, #56]	@ 0x38
900221d8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
900221da:	449a      	add	sl, r3
900221dc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900221de:	441d      	add	r5, r3
900221e0:	e6ed      	b.n	90021fbe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
900221e2:	2800      	cmp	r0, #0
900221e4:	f43f af7f 	beq.w	900220e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900221e8:	5cd3      	ldrb	r3, [r2, r3]
900221ea:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900221ee:	9310      	str	r3, [sp, #64]	@ 0x40
900221f0:	e779      	b.n	900220e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900221f2:	b019      	add	sp, #100	@ 0x64
900221f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900221f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
900221f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900221fc:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
90022200:	f9bd e020 	ldrsh.w	lr, [sp, #32]
90022204:	f1b8 0f00 	cmp.w	r8, #0
90022208:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
9002220c:	fb08 470e 	mla	r7, r8, lr, r4
90022210:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
90022214:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
90022218:	eb02 0907 	add.w	r9, r2, r7
9002221c:	8808      	ldrh	r0, [r1, #0]
9002221e:	db67      	blt.n	900222f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90022220:	45c2      	cmp	sl, r8
90022222:	dd65      	ble.n	900222f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90022224:	2c00      	cmp	r4, #0
90022226:	db61      	blt.n	900222ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
90022228:	45a6      	cmp	lr, r4
9002222a:	dd5f      	ble.n	900222ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
9002222c:	5dd2      	ldrb	r2, [r2, r7]
9002222e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
90022232:	1c62      	adds	r2, r4, #1
90022234:	d45f      	bmi.n	900222f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90022236:	4596      	cmp	lr, r2
90022238:	dd5d      	ble.n	900222f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9002223a:	2d00      	cmp	r5, #0
9002223c:	d05b      	beq.n	900222f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9002223e:	f899 2001 	ldrb.w	r2, [r9, #1]
90022242:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
90022246:	f118 0801 	adds.w	r8, r8, #1
9002224a:	d458      	bmi.n	900222fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
9002224c:	45c2      	cmp	sl, r8
9002224e:	dd56      	ble.n	900222fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90022250:	2e00      	cmp	r6, #0
90022252:	d054      	beq.n	900222fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90022254:	2c00      	cmp	r4, #0
90022256:	db50      	blt.n	900222fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
90022258:	45a6      	cmp	lr, r4
9002225a:	dd4e      	ble.n	900222fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
9002225c:	f819 200e 	ldrb.w	r2, [r9, lr]
90022260:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
90022264:	3401      	adds	r4, #1
90022266:	d407      	bmi.n	90022278 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90022268:	45a6      	cmp	lr, r4
9002226a:	dd05      	ble.n	90022278 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9002226c:	b125      	cbz	r5, 90022278 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9002226e:	44ce      	add	lr, r9
90022270:	f89e 0001 	ldrb.w	r0, [lr, #1]
90022274:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90022278:	fb15 f406 	smulbb	r4, r5, r6
9002227c:	ea4f 430c 	mov.w	r3, ip, lsl #16
90022280:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90022284:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90022288:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9002228c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90022290:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90022294:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90022298:	ea43 0c0c 	orr.w	ip, r3, ip
9002229c:	f1c6 0310 	rsb	r3, r6, #16
900222a0:	ea4e 0707 	orr.w	r7, lr, r7
900222a4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
900222a8:	1b5b      	subs	r3, r3, r5
900222aa:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
900222ae:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900222b2:	437d      	muls	r5, r7
900222b4:	fb03 5c0c 	mla	ip, r3, ip, r5
900222b8:	0403      	lsls	r3, r0, #16
900222ba:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900222be:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900222c2:	4318      	orrs	r0, r3
900222c4:	0413      	lsls	r3, r2, #16
900222c6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900222ca:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900222ce:	fb04 c000 	mla	r0, r4, r0, ip
900222d2:	4313      	orrs	r3, r2
900222d4:	fb06 0003 	mla	r0, r6, r3, r0
900222d8:	0d43      	lsrs	r3, r0, #21
900222da:	0940      	lsrs	r0, r0, #5
900222dc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900222e0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900222e4:	4318      	orrs	r0, r3
900222e6:	8008      	strh	r0, [r1, #0]
900222e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900222ec:	4684      	mov	ip, r0
900222ee:	e7a0      	b.n	90022232 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
900222f0:	4607      	mov	r7, r0
900222f2:	4684      	mov	ip, r0
900222f4:	e7a7      	b.n	90022246 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
900222f6:	4607      	mov	r7, r0
900222f8:	e7a5      	b.n	90022246 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
900222fa:	4602      	mov	r2, r0
900222fc:	e7b2      	b.n	90022264 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
900222fe:	4602      	mov	r2, r0
90022300:	e7ba      	b.n	90022278 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

90022302 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022302:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022306:	b093      	sub	sp, #76	@ 0x4c
90022308:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9002230c:	920f      	str	r2, [sp, #60]	@ 0x3c
9002230e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90022310:	9010      	str	r0, [sp, #64]	@ 0x40
90022312:	9108      	str	r1, [sp, #32]
90022314:	6850      	ldr	r0, [r2, #4]
90022316:	9306      	str	r3, [sp, #24]
90022318:	6812      	ldr	r2, [r2, #0]
9002231a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
9002231e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90022322:	fb00 1303 	mla	r3, r0, r3, r1
90022326:	eb02 0943 	add.w	r9, r2, r3, lsl #1
9002232a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002232c:	681b      	ldr	r3, [r3, #0]
9002232e:	9307      	str	r3, [sp, #28]
90022330:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90022332:	685f      	ldr	r7, [r3, #4]
90022334:	3704      	adds	r7, #4
90022336:	9b08      	ldr	r3, [sp, #32]
90022338:	2b00      	cmp	r3, #0
9002233a:	dc03      	bgt.n	90022344 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
9002233c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9002233e:	2b00      	cmp	r3, #0
90022340:	f340 81b2 	ble.w	900226a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
90022344:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90022346:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002234a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002234e:	1e48      	subs	r0, r1, #1
90022350:	f102 3cff 	add.w	ip, r2, #4294967295
90022354:	9b06      	ldr	r3, [sp, #24]
90022356:	2b00      	cmp	r3, #0
90022358:	f340 80a9 	ble.w	900224ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9002235c:	ea5f 4e24 	movs.w	lr, r4, asr #16
90022360:	ea4f 4326 	mov.w	r3, r6, asr #16
90022364:	d406      	bmi.n	90022374 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90022366:	4586      	cmp	lr, r0
90022368:	da04      	bge.n	90022374 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9002236a:	2b00      	cmp	r3, #0
9002236c:	db02      	blt.n	90022374 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9002236e:	4563      	cmp	r3, ip
90022370:	f2c0 809e 	blt.w	900224b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
90022374:	f11e 0e01 	adds.w	lr, lr, #1
90022378:	f100 808f 	bmi.w	9002249a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9002237c:	4571      	cmp	r1, lr
9002237e:	f2c0 808c 	blt.w	9002249a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90022382:	3301      	adds	r3, #1
90022384:	f100 8089 	bmi.w	9002249a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90022388:	429a      	cmp	r2, r3
9002238a:	f2c0 8086 	blt.w	9002249a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9002238e:	f8dd b018 	ldr.w	fp, [sp, #24]
90022392:	46c8      	mov	r8, r9
90022394:	f1bb 0f00 	cmp.w	fp, #0
90022398:	f340 80a6 	ble.w	900224e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
9002239c:	9a24      	ldr	r2, [sp, #144]	@ 0x90
9002239e:	ea4f 4c26 	mov.w	ip, r6, asr #16
900223a2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900223a4:	f3c4 3003 	ubfx	r0, r4, #12, #4
900223a8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
900223ac:	1422      	asrs	r2, r4, #16
900223ae:	f3c6 3103 	ubfx	r1, r6, #12, #4
900223b2:	689b      	ldr	r3, [r3, #8]
900223b4:	f100 80e3 	bmi.w	9002257e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900223b8:	f103 3aff 	add.w	sl, r3, #4294967295
900223bc:	4552      	cmp	r2, sl
900223be:	f280 80de 	bge.w	9002257e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900223c2:	f1bc 0f00 	cmp.w	ip, #0
900223c6:	f2c0 80da 	blt.w	9002257e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900223ca:	f10e 3aff 	add.w	sl, lr, #4294967295
900223ce:	45d4      	cmp	ip, sl
900223d0:	f280 80d5 	bge.w	9002257e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900223d4:	b21b      	sxth	r3, r3
900223d6:	9d07      	ldr	r5, [sp, #28]
900223d8:	fb0c 2203 	mla	r2, ip, r3, r2
900223dc:	eb05 0a02 	add.w	sl, r5, r2
900223e0:	5caa      	ldrb	r2, [r5, r2]
900223e2:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
900223e6:	2800      	cmp	r0, #0
900223e8:	f000 80c0 	beq.w	9002256c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
900223ec:	f89a 2001 	ldrb.w	r2, [sl, #1]
900223f0:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
900223f4:	920b      	str	r2, [sp, #44]	@ 0x2c
900223f6:	b151      	cbz	r1, 9002240e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
900223f8:	eb0a 0203 	add.w	r2, sl, r3
900223fc:	f81a 3003 	ldrb.w	r3, [sl, r3]
90022400:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90022404:	9309      	str	r3, [sp, #36]	@ 0x24
90022406:	7853      	ldrb	r3, [r2, #1]
90022408:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9002240c:	930c      	str	r3, [sp, #48]	@ 0x30
9002240e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022410:	fb10 f201 	smulbb	r2, r0, r1
90022414:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90022416:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9002241a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9002241e:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90022422:	10d2      	asrs	r2, r2, #3
90022424:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90022428:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
9002242c:	ea4c 0c03 	orr.w	ip, ip, r3
90022430:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90022432:	041b      	lsls	r3, r3, #16
90022434:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90022438:	432b      	orrs	r3, r5
9002243a:	4353      	muls	r3, r2
9002243c:	fb0a 330c 	mla	r3, sl, ip, r3
90022440:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
90022444:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90022448:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
9002244c:	ea4c 0e0e 	orr.w	lr, ip, lr
90022450:	f1c1 0c10 	rsb	ip, r1, #16
90022454:	ebac 0c00 	sub.w	ip, ip, r0
90022458:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9002245c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
90022460:	fb0c 3c0e 	mla	ip, ip, lr, r3
90022464:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022466:	0418      	lsls	r0, r3, #16
90022468:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9002246c:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90022470:	4318      	orrs	r0, r3
90022472:	fb02 c200 	mla	r2, r2, r0, ip
90022476:	0d53      	lsrs	r3, r2, #21
90022478:	0952      	lsrs	r2, r2, #5
9002247a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002247e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90022482:	431a      	orrs	r2, r3
90022484:	f8a8 2000 	strh.w	r2, [r8]
90022488:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002248a:	f108 0802 	add.w	r8, r8, #2
9002248e:	f10b 3bff 	add.w	fp, fp, #4294967295
90022492:	441c      	add	r4, r3
90022494:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022496:	441e      	add	r6, r3
90022498:	e77c      	b.n	90022394 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002249a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002249c:	f109 0902 	add.w	r9, r9, #2
900224a0:	441c      	add	r4, r3
900224a2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900224a4:	441e      	add	r6, r3
900224a6:	9b06      	ldr	r3, [sp, #24]
900224a8:	3b01      	subs	r3, #1
900224aa:	9306      	str	r3, [sp, #24]
900224ac:	e752      	b.n	90022354 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
900224ae:	d020      	beq.n	900224f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
900224b0:	9b06      	ldr	r3, [sp, #24]
900224b2:	981f      	ldr	r0, [sp, #124]	@ 0x7c
900224b4:	3b01      	subs	r3, #1
900224b6:	fb00 4003 	mla	r0, r0, r3, r4
900224ba:	1400      	asrs	r0, r0, #16
900224bc:	f53f af67 	bmi.w	9002238e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900224c0:	3901      	subs	r1, #1
900224c2:	4288      	cmp	r0, r1
900224c4:	f6bf af63 	bge.w	9002238e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900224c8:	9920      	ldr	r1, [sp, #128]	@ 0x80
900224ca:	fb01 6303 	mla	r3, r1, r3, r6
900224ce:	141b      	asrs	r3, r3, #16
900224d0:	f53f af5d 	bmi.w	9002238e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900224d4:	3a01      	subs	r2, #1
900224d6:	4293      	cmp	r3, r2
900224d8:	f6bf af59 	bge.w	9002238e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900224dc:	f8dd 8018 	ldr.w	r8, [sp, #24]
900224e0:	46ca      	mov	sl, r9
900224e2:	f1b8 0f00 	cmp.w	r8, #0
900224e6:	dc67      	bgt.n	900225b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
900224e8:	9b06      	ldr	r3, [sp, #24]
900224ea:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
900224ee:	eb09 0945 	add.w	r9, r9, r5, lsl #1
900224f2:	9b08      	ldr	r3, [sp, #32]
900224f4:	2b00      	cmp	r3, #0
900224f6:	f340 80d7 	ble.w	900226a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
900224fa:	ee30 0a04 	vadd.f32	s0, s0, s8
900224fe:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90022500:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022504:	eeb0 6a62 	vmov.f32	s12, s5
90022508:	eec6 7a80 	vdiv.f32	s15, s13, s0
9002250c:	ee31 1a05 	vadd.f32	s2, s2, s10
90022510:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90022514:	ee16 4a10 	vmov	r4, s12
90022518:	eeb0 6a43 	vmov.f32	s12, s6
9002251c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90022520:	ee16 6a10 	vmov	r6, s12
90022524:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022528:	ee61 7a27 	vmul.f32	s15, s2, s15
9002252c:	ee77 2a62 	vsub.f32	s5, s14, s5
90022530:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022534:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022538:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002253c:	ee12 2a90 	vmov	r2, s5
90022540:	eef0 2a47 	vmov.f32	s5, s14
90022544:	fb92 f3f3 	sdiv	r3, r2, r3
90022548:	ee13 2a10 	vmov	r2, s6
9002254c:	931f      	str	r3, [sp, #124]	@ 0x7c
9002254e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90022550:	eeb0 3a67 	vmov.f32	s6, s15
90022554:	fb92 f3f3 	sdiv	r3, r2, r3
90022558:	9320      	str	r3, [sp, #128]	@ 0x80
9002255a:	9b08      	ldr	r3, [sp, #32]
9002255c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9002255e:	3b01      	subs	r3, #1
90022560:	9308      	str	r3, [sp, #32]
90022562:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90022564:	bf08      	it	eq
90022566:	4613      	moveq	r3, r2
90022568:	9306      	str	r3, [sp, #24]
9002256a:	e6e4      	b.n	90022336 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
9002256c:	2900      	cmp	r1, #0
9002256e:	f43f af4e 	beq.w	9002240e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
90022572:	f81a 3003 	ldrb.w	r3, [sl, r3]
90022576:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9002257a:	9309      	str	r3, [sp, #36]	@ 0x24
9002257c:	e747      	b.n	9002240e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9002257e:	f112 0a01 	adds.w	sl, r2, #1
90022582:	d481      	bmi.n	90022488 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90022584:	4553      	cmp	r3, sl
90022586:	f6ff af7f 	blt.w	90022488 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9002258a:	f11c 0a01 	adds.w	sl, ip, #1
9002258e:	f53f af7b 	bmi.w	90022488 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90022592:	45d6      	cmp	lr, sl
90022594:	f6ff af78 	blt.w	90022488 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90022598:	b21b      	sxth	r3, r3
9002259a:	e9cd 2c02 	strd	r2, ip, [sp, #8]
9002259e:	fa0f f28e 	sxth.w	r2, lr
900225a2:	9300      	str	r3, [sp, #0]
900225a4:	463b      	mov	r3, r7
900225a6:	9201      	str	r2, [sp, #4]
900225a8:	9a07      	ldr	r2, [sp, #28]
900225aa:	e9cd 0104 	strd	r0, r1, [sp, #16]
900225ae:	4641      	mov	r1, r8
900225b0:	9810      	ldr	r0, [sp, #64]	@ 0x40
900225b2:	f7ff fe21 	bl	900221f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
900225b6:	e767      	b.n	90022488 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900225b8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900225ba:	1422      	asrs	r2, r4, #16
900225bc:	1431      	asrs	r1, r6, #16
900225be:	9d07      	ldr	r5, [sp, #28]
900225c0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
900225c4:	f3c4 3e03 	ubfx	lr, r4, #12, #4
900225c8:	f3c6 3003 	ubfx	r0, r6, #12, #4
900225cc:	fb03 2101 	mla	r1, r3, r1, r2
900225d0:	9a07      	ldr	r2, [sp, #28]
900225d2:	440a      	add	r2, r1
900225d4:	5c69      	ldrb	r1, [r5, r1]
900225d6:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
900225da:	f1be 0f00 	cmp.w	lr, #0
900225de:	d05c      	beq.n	9002269a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
900225e0:	f892 c001 	ldrb.w	ip, [r2, #1]
900225e4:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
900225e8:	950d      	str	r5, [sp, #52]	@ 0x34
900225ea:	b150      	cbz	r0, 90022602 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
900225ec:	eb02 0c03 	add.w	ip, r2, r3
900225f0:	5cd3      	ldrb	r3, [r2, r3]
900225f2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900225f6:	930a      	str	r3, [sp, #40]	@ 0x28
900225f8:	f89c 3001 	ldrb.w	r3, [ip, #1]
900225fc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90022600:	930e      	str	r3, [sp, #56]	@ 0x38
90022602:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90022604:	fb1e f200 	smulbb	r2, lr, r0
90022608:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
9002260a:	f108 38ff 	add.w	r8, r8, #4294967295
9002260e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90022612:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90022616:	10d2      	asrs	r2, r2, #3
90022618:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
9002261c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90022620:	ea4c 0c03 	orr.w	ip, ip, r3
90022624:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
90022628:	9311      	str	r3, [sp, #68]	@ 0x44
9002262a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9002262c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9002262e:	041b      	lsls	r3, r3, #16
90022630:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90022634:	ea43 030b 	orr.w	r3, r3, fp
90022638:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9002263c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90022640:	4353      	muls	r3, r2
90022642:	fb05 3c0c 	mla	ip, r5, ip, r3
90022646:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
9002264a:	ea43 0b01 	orr.w	fp, r3, r1
9002264e:	f1c0 0110 	rsb	r1, r0, #16
90022652:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022654:	eba1 0e0e 	sub.w	lr, r1, lr
90022658:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
9002265c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90022660:	fb0e cc0b 	mla	ip, lr, fp, ip
90022664:	ea4f 4b03 	mov.w	fp, r3, lsl #16
90022668:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
9002266c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90022670:	ea4b 0e0e 	orr.w	lr, fp, lr
90022674:	fb02 cc0e 	mla	ip, r2, lr, ip
90022678:	ea4f 535c 	mov.w	r3, ip, lsr #21
9002267c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90022680:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90022684:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90022688:	ea43 0c0c 	orr.w	ip, r3, ip
9002268c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002268e:	441c      	add	r4, r3
90022690:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022692:	f82a cb02 	strh.w	ip, [sl], #2
90022696:	441e      	add	r6, r3
90022698:	e723      	b.n	900224e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9002269a:	2800      	cmp	r0, #0
9002269c:	d0b1      	beq.n	90022602 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
9002269e:	5cd3      	ldrb	r3, [r2, r3]
900226a0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900226a4:	930a      	str	r3, [sp, #40]	@ 0x28
900226a6:	e7ac      	b.n	90022602 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
900226a8:	b013      	add	sp, #76	@ 0x4c
900226aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900226ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
900226ae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900226b2:	880d      	ldrh	r5, [r1, #0]
900226b4:	b087      	sub	sp, #28
900226b6:	10ef      	asrs	r7, r5, #3
900226b8:	9103      	str	r1, [sp, #12]
900226ba:	ea4f 2a25 	mov.w	sl, r5, asr #8
900226be:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
900226c2:	00ed      	lsls	r5, r5, #3
900226c4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
900226c8:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
900226cc:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
900226d0:	b2ed      	uxtb	r5, r5
900226d2:	9701      	str	r7, [sp, #4]
900226d4:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
900226d8:	9502      	str	r5, [sp, #8]
900226da:	9d01      	ldr	r5, [sp, #4]
900226dc:	9902      	ldr	r1, [sp, #8]
900226de:	022d      	lsls	r5, r5, #8
900226e0:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
900226e4:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
900226e8:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
900226ec:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
900226f0:	430d      	orrs	r5, r1
900226f2:	fb06 0709 	mla	r7, r6, r9, r0
900226f6:	2e00      	cmp	r6, #0
900226f8:	9505      	str	r5, [sp, #20]
900226fa:	eb02 0c07 	add.w	ip, r2, r7
900226fe:	f2c0 80b6 	blt.w	9002286e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
90022702:	45b3      	cmp	fp, r6
90022704:	f340 80b3 	ble.w	9002286e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
90022708:	2800      	cmp	r0, #0
9002270a:	f2c0 80ae 	blt.w	9002286a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
9002270e:	4581      	cmp	r9, r0
90022710:	f340 80ab 	ble.w	9002286a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
90022714:	5dd7      	ldrb	r7, [r2, r7]
90022716:	eb07 0747 	add.w	r7, r7, r7, lsl #1
9002271a:	441f      	add	r7, r3
9002271c:	1c42      	adds	r2, r0, #1
9002271e:	f100 80a9 	bmi.w	90022874 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90022722:	4591      	cmp	r9, r2
90022724:	f340 80a6 	ble.w	90022874 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90022728:	2c00      	cmp	r4, #0
9002272a:	f000 80a3 	beq.w	90022874 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
9002272e:	f89c 5001 	ldrb.w	r5, [ip, #1]
90022732:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90022736:	441d      	add	r5, r3
90022738:	3601      	adds	r6, #1
9002273a:	f100 809f 	bmi.w	9002287c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
9002273e:	45b3      	cmp	fp, r6
90022740:	f340 809c 	ble.w	9002287c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90022744:	f1be 0f00 	cmp.w	lr, #0
90022748:	f000 8098 	beq.w	9002287c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
9002274c:	2800      	cmp	r0, #0
9002274e:	f2c0 8093 	blt.w	90022878 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
90022752:	4581      	cmp	r9, r0
90022754:	f340 8090 	ble.w	90022878 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
90022758:	f81c 6009 	ldrb.w	r6, [ip, r9]
9002275c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90022760:	441e      	add	r6, r3
90022762:	3001      	adds	r0, #1
90022764:	f100 808d 	bmi.w	90022882 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90022768:	4581      	cmp	r9, r0
9002276a:	f340 808a 	ble.w	90022882 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
9002276e:	2c00      	cmp	r4, #0
90022770:	f000 8087 	beq.w	90022882 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90022774:	44e1      	add	r9, ip
90022776:	f899 2001 	ldrb.w	r2, [r9, #1]
9002277a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002277e:	4413      	add	r3, r2
90022780:	b2a4      	uxth	r4, r4
90022782:	f897 c002 	ldrb.w	ip, [r7, #2]
90022786:	fa1f fe8e 	uxth.w	lr, lr
9002278a:	9901      	ldr	r1, [sp, #4]
9002278c:	fb04 fb0e 	mul.w	fp, r4, lr
90022790:	0124      	lsls	r4, r4, #4
90022792:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
90022796:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
9002279a:	eba4 040b 	sub.w	r4, r4, fp
9002279e:	fa1f f08e 	uxth.w	r0, lr
900227a2:	b2a2      	uxth	r2, r4
900227a4:	78ac      	ldrb	r4, [r5, #2]
900227a6:	eba9 0900 	sub.w	r9, r9, r0
900227aa:	fa1f fe88 	uxth.w	lr, r8
900227ae:	4354      	muls	r4, r2
900227b0:	ea6f 0808 	mvn.w	r8, r8
900227b4:	fa1f f989 	uxth.w	r9, r9
900227b8:	fa5f f888 	uxtb.w	r8, r8
900227bc:	fb09 440c 	mla	r4, r9, ip, r4
900227c0:	f896 c002 	ldrb.w	ip, [r6, #2]
900227c4:	fb1a fa08 	smulbb	sl, sl, r8
900227c8:	fb00 440c 	mla	r4, r0, ip, r4
900227cc:	f893 c002 	ldrb.w	ip, [r3, #2]
900227d0:	fb0b 4c0c 	mla	ip, fp, ip, r4
900227d4:	787c      	ldrb	r4, [r7, #1]
900227d6:	783f      	ldrb	r7, [r7, #0]
900227d8:	f3cc 2c07 	ubfx	ip, ip, #8, #8
900227dc:	fb0c ac0e 	mla	ip, ip, lr, sl
900227e0:	f895 a001 	ldrb.w	sl, [r5, #1]
900227e4:	782d      	ldrb	r5, [r5, #0]
900227e6:	fb02 fa0a 	mul.w	sl, r2, sl
900227ea:	fa1f fc8c 	uxth.w	ip, ip
900227ee:	436a      	muls	r2, r5
900227f0:	7835      	ldrb	r5, [r6, #0]
900227f2:	fb09 aa04 	mla	sl, r9, r4, sl
900227f6:	7874      	ldrb	r4, [r6, #1]
900227f8:	fb09 2207 	mla	r2, r9, r7, r2
900227fc:	fb00 aa04 	mla	sl, r0, r4, sl
90022800:	785c      	ldrb	r4, [r3, #1]
90022802:	fb00 2005 	mla	r0, r0, r5, r2
90022806:	781b      	ldrb	r3, [r3, #0]
90022808:	fb0b a404 	mla	r4, fp, r4, sl
9002280c:	fb11 fa08 	smulbb	sl, r1, r8
90022810:	fb0b 0b03 	mla	fp, fp, r3, r0
90022814:	9b02      	ldr	r3, [sp, #8]
90022816:	f3c4 2407 	ubfx	r4, r4, #8, #8
9002281a:	fb13 f808 	smulbb	r8, r3, r8
9002281e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
90022822:	fb04 a40e 	mla	r4, r4, lr, sl
90022826:	f10c 0301 	add.w	r3, ip, #1
9002282a:	fb0b 8e0e 	mla	lr, fp, lr, r8
9002282e:	b2a4      	uxth	r4, r4
90022830:	fa1f fe8e 	uxth.w	lr, lr
90022834:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90022838:	f104 0a01 	add.w	sl, r4, #1
9002283c:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
90022840:	f10e 0c01 	add.w	ip, lr, #1
90022844:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
90022848:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
9002284c:	0964      	lsrs	r4, r4, #5
9002284e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90022852:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90022856:	ea4c 0c03 	orr.w	ip, ip, r3
9002285a:	9b03      	ldr	r3, [sp, #12]
9002285c:	ea4c 0c04 	orr.w	ip, ip, r4
90022860:	f8a3 c000 	strh.w	ip, [r3]
90022864:	b007      	add	sp, #28
90022866:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002286a:	af05      	add	r7, sp, #20
9002286c:	e756      	b.n	9002271c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
9002286e:	ad05      	add	r5, sp, #20
90022870:	462f      	mov	r7, r5
90022872:	e761      	b.n	90022738 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90022874:	ad05      	add	r5, sp, #20
90022876:	e75f      	b.n	90022738 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90022878:	ae05      	add	r6, sp, #20
9002287a:	e772      	b.n	90022762 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
9002287c:	ab05      	add	r3, sp, #20
9002287e:	461e      	mov	r6, r3
90022880:	e77e      	b.n	90022780 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
90022882:	ab05      	add	r3, sp, #20
90022884:	e77c      	b.n	90022780 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

90022886 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022886:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002288a:	b095      	sub	sp, #84	@ 0x54
9002288c:	9212      	str	r2, [sp, #72]	@ 0x48
9002288e:	9309      	str	r3, [sp, #36]	@ 0x24
90022890:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
90022892:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
90022896:	9013      	str	r0, [sp, #76]	@ 0x4c
90022898:	930f      	str	r3, [sp, #60]	@ 0x3c
9002289a:	6850      	ldr	r0, [r2, #4]
9002289c:	910e      	str	r1, [sp, #56]	@ 0x38
9002289e:	6812      	ldr	r2, [r2, #0]
900228a0:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
900228a4:	fb00 1303 	mla	r3, r0, r3, r1
900228a8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900228ac:	930a      	str	r3, [sp, #40]	@ 0x28
900228ae:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900228b0:	681b      	ldr	r3, [r3, #0]
900228b2:	930d      	str	r3, [sp, #52]	@ 0x34
900228b4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900228b6:	685c      	ldr	r4, [r3, #4]
900228b8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900228ba:	3404      	adds	r4, #4
900228bc:	43db      	mvns	r3, r3
900228be:	b2db      	uxtb	r3, r3
900228c0:	930b      	str	r3, [sp, #44]	@ 0x2c
900228c2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900228c4:	2b00      	cmp	r3, #0
900228c6:	dc03      	bgt.n	900228d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
900228c8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
900228ca:	2b00      	cmp	r3, #0
900228cc:	f340 8255 	ble.w	90022d7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
900228d0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900228d2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900228d6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900228da:	1e48      	subs	r0, r1, #1
900228dc:	1e55      	subs	r5, r2, #1
900228de:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900228e0:	2b00      	cmp	r3, #0
900228e2:	f340 80f9 	ble.w	90022ad8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
900228e6:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
900228e8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900228ea:	1436      	asrs	r6, r6, #16
900228ec:	ea4f 4323 	mov.w	r3, r3, asr #16
900228f0:	d406      	bmi.n	90022900 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900228f2:	4286      	cmp	r6, r0
900228f4:	da04      	bge.n	90022900 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900228f6:	2b00      	cmp	r3, #0
900228f8:	db02      	blt.n	90022900 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900228fa:	42ab      	cmp	r3, r5
900228fc:	f2c0 80ed 	blt.w	90022ada <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
90022900:	3601      	adds	r6, #1
90022902:	f100 80da 	bmi.w	90022aba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90022906:	42b1      	cmp	r1, r6
90022908:	f2c0 80d7 	blt.w	90022aba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9002290c:	3301      	adds	r3, #1
9002290e:	f100 80d4 	bmi.w	90022aba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90022912:	429a      	cmp	r2, r3
90022914:	f2c0 80d1 	blt.w	90022aba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90022918:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002291a:	9311      	str	r3, [sp, #68]	@ 0x44
9002291c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002291e:	930c      	str	r3, [sp, #48]	@ 0x30
90022920:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90022922:	2b00      	cmp	r3, #0
90022924:	f340 80fa 	ble.w	90022b1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
90022928:	9826      	ldr	r0, [sp, #152]	@ 0x98
9002292a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002292c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
9002292e:	68c6      	ldr	r6, [r0, #12]
90022930:	141d      	asrs	r5, r3, #16
90022932:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90022934:	f3c2 3103 	ubfx	r1, r2, #12, #4
90022938:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002293a:	9a26      	ldr	r2, [sp, #152]	@ 0x98
9002293c:	1400      	asrs	r0, r0, #16
9002293e:	f3c3 3303 	ubfx	r3, r3, #12, #4
90022942:	6892      	ldr	r2, [r2, #8]
90022944:	f100 813e 	bmi.w	90022bc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90022948:	1e57      	subs	r7, r2, #1
9002294a:	42b8      	cmp	r0, r7
9002294c:	f280 813a 	bge.w	90022bc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90022950:	2d00      	cmp	r5, #0
90022952:	f2c0 8137 	blt.w	90022bc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90022956:	1e77      	subs	r7, r6, #1
90022958:	42bd      	cmp	r5, r7
9002295a:	f280 8133 	bge.w	90022bc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9002295e:	b212      	sxth	r2, r2
90022960:	fb05 0002 	mla	r0, r5, r2, r0
90022964:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90022966:	f815 a000 	ldrb.w	sl, [r5, r0]
9002296a:	182e      	adds	r6, r5, r0
9002296c:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
90022970:	eb04 050a 	add.w	r5, r4, sl
90022974:	2b00      	cmp	r3, #0
90022976:	f000 8117 	beq.w	90022ba8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
9002297a:	f896 c001 	ldrb.w	ip, [r6, #1]
9002297e:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
90022982:	44a4      	add	ip, r4
90022984:	2900      	cmp	r1, #0
90022986:	f000 8117 	beq.w	90022bb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
9002298a:	18b0      	adds	r0, r6, r2
9002298c:	5cb2      	ldrb	r2, [r6, r2]
9002298e:	7840      	ldrb	r0, [r0, #1]
90022990:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022994:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90022998:	4422      	add	r2, r4
9002299a:	4420      	add	r0, r4
9002299c:	b29b      	uxth	r3, r3
9002299e:	f89c 7002 	ldrb.w	r7, [ip, #2]
900229a2:	b289      	uxth	r1, r1
900229a4:	f895 b002 	ldrb.w	fp, [r5, #2]
900229a8:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
900229aa:	fb03 f901 	mul.w	r9, r3, r1
900229ae:	011b      	lsls	r3, r3, #4
900229b0:	f8b6 e000 	ldrh.w	lr, [r6]
900229b4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900229b8:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
900229bc:	eba3 0309 	sub.w	r3, r3, r9
900229c0:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
900229c4:	b289      	uxth	r1, r1
900229c6:	f814 a00a 	ldrb.w	sl, [r4, sl]
900229ca:	b29b      	uxth	r3, r3
900229cc:	eba8 0801 	sub.w	r8, r8, r1
900229d0:	435f      	muls	r7, r3
900229d2:	fa1f f888 	uxth.w	r8, r8
900229d6:	9310      	str	r3, [sp, #64]	@ 0x40
900229d8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900229da:	fb08 770b 	mla	r7, r8, fp, r7
900229de:	f892 b002 	ldrb.w	fp, [r2, #2]
900229e2:	fb01 770b 	mla	r7, r1, fp, r7
900229e6:	f890 b002 	ldrb.w	fp, [r0, #2]
900229ea:	fb09 770b 	mla	r7, r9, fp, r7
900229ee:	ea4f 2b2e 	mov.w	fp, lr, asr #8
900229f2:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
900229f6:	f3c7 2707 	ubfx	r7, r7, #8, #8
900229fa:	fb1b fb03 	smulbb	fp, fp, r3
900229fe:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90022a00:	fb07 b706 	mla	r7, r7, r6, fp
90022a04:	f895 b001 	ldrb.w	fp, [r5, #1]
90022a08:	f89c 5001 	ldrb.w	r5, [ip, #1]
90022a0c:	f89c c000 	ldrb.w	ip, [ip]
90022a10:	b2bf      	uxth	r7, r7
90022a12:	435d      	muls	r5, r3
90022a14:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022a16:	fb08 550b 	mla	r5, r8, fp, r5
90022a1a:	f892 b001 	ldrb.w	fp, [r2, #1]
90022a1e:	fb01 550b 	mla	r5, r1, fp, r5
90022a22:	f890 b001 	ldrb.w	fp, [r0, #1]
90022a26:	fb09 550b 	mla	r5, r9, fp, r5
90022a2a:	ea4f 0bee 	mov.w	fp, lr, asr #3
90022a2e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90022a32:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
90022a36:	f3c5 2507 	ubfx	r5, r5, #8, #8
90022a3a:	fa5f fe8e 	uxtb.w	lr, lr
90022a3e:	fb1b fb03 	smulbb	fp, fp, r3
90022a42:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90022a44:	fb03 f30c 	mul.w	r3, r3, ip
90022a48:	f892 c000 	ldrb.w	ip, [r2]
90022a4c:	fb05 b506 	mla	r5, r5, r6, fp
90022a50:	fb08 330a 	mla	r3, r8, sl, r3
90022a54:	b2ad      	uxth	r5, r5
90022a56:	fb01 330c 	mla	r3, r1, ip, r3
90022a5a:	f890 c000 	ldrb.w	ip, [r0]
90022a5e:	f105 0b01 	add.w	fp, r5, #1
90022a62:	fb09 3c0c 	mla	ip, r9, ip, r3
90022a66:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022a68:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90022a6c:	fb1e fe03 	smulbb	lr, lr, r3
90022a70:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90022a74:	1c7b      	adds	r3, r7, #1
90022a76:	096d      	lsrs	r5, r5, #5
90022a78:	fb0c e606 	mla	r6, ip, r6, lr
90022a7c:	eb03 2717 	add.w	r7, r3, r7, lsr #8
90022a80:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90022a84:	b2b6      	uxth	r6, r6
90022a86:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
90022a8a:	1c77      	adds	r7, r6, #1
90022a8c:	eb07 2716 	add.w	r7, r7, r6, lsr #8
90022a90:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90022a94:	431f      	orrs	r7, r3
90022a96:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90022a98:	433d      	orrs	r5, r7
90022a9a:	801d      	strh	r5, [r3, #0]
90022a9c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90022a9e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90022aa0:	3302      	adds	r3, #2
90022aa2:	930c      	str	r3, [sp, #48]	@ 0x30
90022aa4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90022aa6:	4413      	add	r3, r2
90022aa8:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90022aaa:	931f      	str	r3, [sp, #124]	@ 0x7c
90022aac:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022aae:	4413      	add	r3, r2
90022ab0:	9320      	str	r3, [sp, #128]	@ 0x80
90022ab2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90022ab4:	3b01      	subs	r3, #1
90022ab6:	9311      	str	r3, [sp, #68]	@ 0x44
90022ab8:	e732      	b.n	90022920 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90022aba:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90022abc:	9e21      	ldr	r6, [sp, #132]	@ 0x84
90022abe:	4433      	add	r3, r6
90022ac0:	9e22      	ldr	r6, [sp, #136]	@ 0x88
90022ac2:	931f      	str	r3, [sp, #124]	@ 0x7c
90022ac4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022ac6:	4433      	add	r3, r6
90022ac8:	9320      	str	r3, [sp, #128]	@ 0x80
90022aca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022acc:	3b01      	subs	r3, #1
90022ace:	9309      	str	r3, [sp, #36]	@ 0x24
90022ad0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022ad2:	3302      	adds	r3, #2
90022ad4:	930a      	str	r3, [sp, #40]	@ 0x28
90022ad6:	e702      	b.n	900228de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90022ad8:	d027      	beq.n	90022b2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
90022ada:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022adc:	9821      	ldr	r0, [sp, #132]	@ 0x84
90022ade:	3b01      	subs	r3, #1
90022ae0:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
90022ae2:	fb00 5003 	mla	r0, r0, r3, r5
90022ae6:	1400      	asrs	r0, r0, #16
90022ae8:	f53f af16 	bmi.w	90022918 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022aec:	3901      	subs	r1, #1
90022aee:	4288      	cmp	r0, r1
90022af0:	f6bf af12 	bge.w	90022918 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022af4:	9922      	ldr	r1, [sp, #136]	@ 0x88
90022af6:	9820      	ldr	r0, [sp, #128]	@ 0x80
90022af8:	fb01 0303 	mla	r3, r1, r3, r0
90022afc:	141b      	asrs	r3, r3, #16
90022afe:	f53f af0b 	bmi.w	90022918 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022b02:	3a01      	subs	r2, #1
90022b04:	4293      	cmp	r3, r2
90022b06:	f6bf af07 	bge.w	90022918 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022b0a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022b0c:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
90022b10:	9311      	str	r3, [sp, #68]	@ 0x44
90022b12:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022b14:	930c      	str	r3, [sp, #48]	@ 0x30
90022b16:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90022b18:	2b00      	cmp	r3, #0
90022b1a:	dc70      	bgt.n	90022bfe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90022b1c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022b1e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90022b20:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90022b24:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90022b28:	930a      	str	r3, [sp, #40]	@ 0x28
90022b2a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90022b2c:	2b00      	cmp	r3, #0
90022b2e:	f340 8124 	ble.w	90022d7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90022b32:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90022b36:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90022b38:	ee30 0a04 	vadd.f32	s0, s0, s8
90022b3c:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022b40:	eef0 6a62 	vmov.f32	s13, s5
90022b44:	eec7 7a00 	vdiv.f32	s15, s14, s0
90022b48:	ee31 1a05 	vadd.f32	s2, s2, s10
90022b4c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022b50:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
90022b54:	eef0 6a43 	vmov.f32	s13, s6
90022b58:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022b5c:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
90022b60:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022b64:	ee61 7a27 	vmul.f32	s15, s2, s15
90022b68:	ee77 2a62 	vsub.f32	s5, s14, s5
90022b6c:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022b70:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022b74:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90022b78:	ee12 2a90 	vmov	r2, s5
90022b7c:	eef0 2a47 	vmov.f32	s5, s14
90022b80:	fb92 f3f3 	sdiv	r3, r2, r3
90022b84:	ee13 2a10 	vmov	r2, s6
90022b88:	9321      	str	r3, [sp, #132]	@ 0x84
90022b8a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90022b8c:	eeb0 3a67 	vmov.f32	s6, s15
90022b90:	fb92 f3f3 	sdiv	r3, r2, r3
90022b94:	9322      	str	r3, [sp, #136]	@ 0x88
90022b96:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90022b98:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90022b9a:	3b01      	subs	r3, #1
90022b9c:	930e      	str	r3, [sp, #56]	@ 0x38
90022b9e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90022ba0:	bf08      	it	eq
90022ba2:	4613      	moveq	r3, r2
90022ba4:	9309      	str	r3, [sp, #36]	@ 0x24
90022ba6:	e68c      	b.n	900228c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90022ba8:	b149      	cbz	r1, 90022bbe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
90022baa:	5cb2      	ldrb	r2, [r6, r2]
90022bac:	4628      	mov	r0, r5
90022bae:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022bb2:	4422      	add	r2, r4
90022bb4:	46ac      	mov	ip, r5
90022bb6:	e6f1      	b.n	9002299c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90022bb8:	4628      	mov	r0, r5
90022bba:	462a      	mov	r2, r5
90022bbc:	e6ee      	b.n	9002299c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90022bbe:	4628      	mov	r0, r5
90022bc0:	462a      	mov	r2, r5
90022bc2:	e7f7      	b.n	90022bb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
90022bc4:	1c47      	adds	r7, r0, #1
90022bc6:	f53f af69 	bmi.w	90022a9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90022bca:	42ba      	cmp	r2, r7
90022bcc:	f6ff af66 	blt.w	90022a9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90022bd0:	1c6f      	adds	r7, r5, #1
90022bd2:	f53f af63 	bmi.w	90022a9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90022bd6:	42be      	cmp	r6, r7
90022bd8:	f6ff af60 	blt.w	90022a9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90022bdc:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
90022bde:	b236      	sxth	r6, r6
90022be0:	b212      	sxth	r2, r2
90022be2:	9002      	str	r0, [sp, #8]
90022be4:	9601      	str	r6, [sp, #4]
90022be6:	9200      	str	r2, [sp, #0]
90022be8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90022bea:	e9cd 1705 	strd	r1, r7, [sp, #20]
90022bee:	e9cd 5303 	strd	r5, r3, [sp, #12]
90022bf2:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
90022bf6:	4623      	mov	r3, r4
90022bf8:	f7ff fd59 	bl	900226ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
90022bfc:	e74e      	b.n	90022a9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90022bfe:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90022c00:	9820      	ldr	r0, [sp, #128]	@ 0x80
90022c02:	f3c2 3103 	ubfx	r1, r2, #12, #4
90022c06:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
90022c08:	9a26      	ldr	r2, [sp, #152]	@ 0x98
90022c0a:	1400      	asrs	r0, r0, #16
90022c0c:	142d      	asrs	r5, r5, #16
90022c0e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90022c10:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90022c14:	f3c3 3303 	ubfx	r3, r3, #12, #4
90022c18:	fb02 5000 	mla	r0, r2, r0, r5
90022c1c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90022c1e:	f815 9000 	ldrb.w	r9, [r5, r0]
90022c22:	182e      	adds	r6, r5, r0
90022c24:	eb09 0949 	add.w	r9, r9, r9, lsl #1
90022c28:	eb04 0509 	add.w	r5, r4, r9
90022c2c:	2b00      	cmp	r3, #0
90022c2e:	f000 8096 	beq.w	90022d5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
90022c32:	7877      	ldrb	r7, [r6, #1]
90022c34:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90022c38:	4427      	add	r7, r4
90022c3a:	2900      	cmp	r1, #0
90022c3c:	f000 8097 	beq.w	90022d6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
90022c40:	18b0      	adds	r0, r6, r2
90022c42:	5cb2      	ldrb	r2, [r6, r2]
90022c44:	7840      	ldrb	r0, [r0, #1]
90022c46:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022c4a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90022c4e:	4422      	add	r2, r4
90022c50:	4420      	add	r0, r4
90022c52:	b29b      	uxth	r3, r3
90022c54:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
90022c56:	b289      	uxth	r1, r1
90022c58:	f895 b002 	ldrb.w	fp, [r5, #2]
90022c5c:	f8b6 c000 	ldrh.w	ip, [r6]
90022c60:	fb03 f801 	mul.w	r8, r3, r1
90022c64:	011b      	lsls	r3, r3, #4
90022c66:	78be      	ldrb	r6, [r7, #2]
90022c68:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
90022c6c:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
90022c70:	eba3 0308 	sub.w	r3, r3, r8
90022c74:	f814 9009 	ldrb.w	r9, [r4, r9]
90022c78:	b289      	uxth	r1, r1
90022c7a:	b29b      	uxth	r3, r3
90022c7c:	ebae 0e01 	sub.w	lr, lr, r1
90022c80:	435e      	muls	r6, r3
90022c82:	fa1f fe8e 	uxth.w	lr, lr
90022c86:	9310      	str	r3, [sp, #64]	@ 0x40
90022c88:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022c8a:	fb0e 660b 	mla	r6, lr, fp, r6
90022c8e:	f892 b002 	ldrb.w	fp, [r2, #2]
90022c92:	fb01 660b 	mla	r6, r1, fp, r6
90022c96:	f890 b002 	ldrb.w	fp, [r0, #2]
90022c9a:	fb08 660b 	mla	r6, r8, fp, r6
90022c9e:	ea4f 2b2c 	mov.w	fp, ip, asr #8
90022ca2:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
90022ca6:	f3c6 2607 	ubfx	r6, r6, #8, #8
90022caa:	fb1b fb03 	smulbb	fp, fp, r3
90022cae:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90022cb0:	fb06 b60a 	mla	r6, r6, sl, fp
90022cb4:	f895 b001 	ldrb.w	fp, [r5, #1]
90022cb8:	787d      	ldrb	r5, [r7, #1]
90022cba:	783f      	ldrb	r7, [r7, #0]
90022cbc:	b2b6      	uxth	r6, r6
90022cbe:	435d      	muls	r5, r3
90022cc0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022cc2:	fb0e 550b 	mla	r5, lr, fp, r5
90022cc6:	f892 b001 	ldrb.w	fp, [r2, #1]
90022cca:	fb01 550b 	mla	r5, r1, fp, r5
90022cce:	f890 b001 	ldrb.w	fp, [r0, #1]
90022cd2:	fb08 550b 	mla	r5, r8, fp, r5
90022cd6:	ea4f 0bec 	mov.w	fp, ip, asr #3
90022cda:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90022cde:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
90022ce2:	f3c5 2507 	ubfx	r5, r5, #8, #8
90022ce6:	fa5f fc8c 	uxtb.w	ip, ip
90022cea:	fb1b fb03 	smulbb	fp, fp, r3
90022cee:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90022cf0:	437b      	muls	r3, r7
90022cf2:	7817      	ldrb	r7, [r2, #0]
90022cf4:	fb05 b50a 	mla	r5, r5, sl, fp
90022cf8:	fb0e 3309 	mla	r3, lr, r9, r3
90022cfc:	b2ad      	uxth	r5, r5
90022cfe:	fb01 3307 	mla	r3, r1, r7, r3
90022d02:	7807      	ldrb	r7, [r0, #0]
90022d04:	f105 0b01 	add.w	fp, r5, #1
90022d08:	fb08 3707 	mla	r7, r8, r7, r3
90022d0c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022d0e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90022d12:	fb1c fc03 	smulbb	ip, ip, r3
90022d16:	f3c7 2707 	ubfx	r7, r7, #8, #8
90022d1a:	1c73      	adds	r3, r6, #1
90022d1c:	096d      	lsrs	r5, r5, #5
90022d1e:	fb07 c70a 	mla	r7, r7, sl, ip
90022d22:	eb03 2616 	add.w	r6, r3, r6, lsr #8
90022d26:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90022d2a:	b2bf      	uxth	r7, r7
90022d2c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90022d2e:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
90022d32:	1c7a      	adds	r2, r7, #1
90022d34:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90022d38:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90022d3c:	4316      	orrs	r6, r2
90022d3e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90022d40:	432e      	orrs	r6, r5
90022d42:	f823 6b02 	strh.w	r6, [r3], #2
90022d46:	930c      	str	r3, [sp, #48]	@ 0x30
90022d48:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90022d4a:	4413      	add	r3, r2
90022d4c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90022d4e:	931f      	str	r3, [sp, #124]	@ 0x7c
90022d50:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022d52:	4413      	add	r3, r2
90022d54:	9320      	str	r3, [sp, #128]	@ 0x80
90022d56:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90022d58:	3b01      	subs	r3, #1
90022d5a:	9311      	str	r3, [sp, #68]	@ 0x44
90022d5c:	e6db      	b.n	90022b16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
90022d5e:	b149      	cbz	r1, 90022d74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
90022d60:	5cb2      	ldrb	r2, [r6, r2]
90022d62:	4628      	mov	r0, r5
90022d64:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022d68:	4422      	add	r2, r4
90022d6a:	462f      	mov	r7, r5
90022d6c:	e771      	b.n	90022c52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
90022d6e:	4628      	mov	r0, r5
90022d70:	462a      	mov	r2, r5
90022d72:	e76e      	b.n	90022c52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
90022d74:	4628      	mov	r0, r5
90022d76:	462a      	mov	r2, r5
90022d78:	e7f7      	b.n	90022d6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90022d7a:	b015      	add	sp, #84	@ 0x54
90022d7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90022d80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
90022d80:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022d84:	880f      	ldrh	r7, [r1, #0]
90022d86:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
90022d8a:	023c      	lsls	r4, r7, #8
90022d8c:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
90022d90:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
90022d94:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
90022d98:	017c      	lsls	r4, r7, #5
90022d9a:	00ff      	lsls	r7, r7, #3
90022d9c:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
90022da0:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
90022da4:	b2ff      	uxtb	r7, r7
90022da6:	ea4b 0404 	orr.w	r4, fp, r4
90022daa:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
90022dae:	4327      	orrs	r7, r4
90022db0:	fb05 ca0e 	mla	sl, r5, lr, ip
90022db4:	2d00      	cmp	r5, #0
90022db6:	9701      	str	r7, [sp, #4]
90022db8:	eb02 080a 	add.w	r8, r2, sl
90022dbc:	db7e      	blt.n	90022ebc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90022dbe:	45a9      	cmp	r9, r5
90022dc0:	dd7c      	ble.n	90022ebc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90022dc2:	f1bc 0f00 	cmp.w	ip, #0
90022dc6:	db77      	blt.n	90022eb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
90022dc8:	45e6      	cmp	lr, ip
90022dca:	dd75      	ble.n	90022eb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
90022dcc:	f812 700a 	ldrb.w	r7, [r2, sl]
90022dd0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90022dd4:	441f      	add	r7, r3
90022dd6:	f11c 0201 	adds.w	r2, ip, #1
90022dda:	d472      	bmi.n	90022ec2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90022ddc:	4596      	cmp	lr, r2
90022dde:	dd70      	ble.n	90022ec2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90022de0:	2800      	cmp	r0, #0
90022de2:	d06e      	beq.n	90022ec2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90022de4:	f898 4001 	ldrb.w	r4, [r8, #1]
90022de8:	eb04 0444 	add.w	r4, r4, r4, lsl #1
90022dec:	441c      	add	r4, r3
90022dee:	3501      	adds	r5, #1
90022df0:	d46b      	bmi.n	90022eca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90022df2:	45a9      	cmp	r9, r5
90022df4:	dd69      	ble.n	90022eca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90022df6:	2e00      	cmp	r6, #0
90022df8:	d067      	beq.n	90022eca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90022dfa:	f1bc 0f00 	cmp.w	ip, #0
90022dfe:	db62      	blt.n	90022ec6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90022e00:	45e6      	cmp	lr, ip
90022e02:	dd60      	ble.n	90022ec6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90022e04:	f818 500e 	ldrb.w	r5, [r8, lr]
90022e08:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90022e0c:	441d      	add	r5, r3
90022e0e:	f11c 0201 	adds.w	r2, ip, #1
90022e12:	d45d      	bmi.n	90022ed0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90022e14:	4596      	cmp	lr, r2
90022e16:	dd5b      	ble.n	90022ed0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90022e18:	2800      	cmp	r0, #0
90022e1a:	d059      	beq.n	90022ed0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90022e1c:	44c6      	add	lr, r8
90022e1e:	f89e 2001 	ldrb.w	r2, [lr, #1]
90022e22:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022e26:	4413      	add	r3, r2
90022e28:	b280      	uxth	r0, r0
90022e2a:	f897 e002 	ldrb.w	lr, [r7, #2]
90022e2e:	b2b2      	uxth	r2, r6
90022e30:	f897 9000 	ldrb.w	r9, [r7]
90022e34:	787f      	ldrb	r7, [r7, #1]
90022e36:	fb00 f602 	mul.w	r6, r0, r2
90022e3a:	0100      	lsls	r0, r0, #4
90022e3c:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
90022e40:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
90022e44:	1b80      	subs	r0, r0, r6
90022e46:	fa1f fc82 	uxth.w	ip, r2
90022e4a:	b282      	uxth	r2, r0
90022e4c:	78a0      	ldrb	r0, [r4, #2]
90022e4e:	eba8 080c 	sub.w	r8, r8, ip
90022e52:	4350      	muls	r0, r2
90022e54:	fa1f f888 	uxth.w	r8, r8
90022e58:	fb08 0e0e 	mla	lr, r8, lr, r0
90022e5c:	78a8      	ldrb	r0, [r5, #2]
90022e5e:	fb0c e000 	mla	r0, ip, r0, lr
90022e62:	f893 e002 	ldrb.w	lr, [r3, #2]
90022e66:	fb06 0e0e 	mla	lr, r6, lr, r0
90022e6a:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
90022e6e:	f894 e000 	ldrb.w	lr, [r4]
90022e72:	fb02 fe0e 	mul.w	lr, r2, lr
90022e76:	fb08 e909 	mla	r9, r8, r9, lr
90022e7a:	f895 e000 	ldrb.w	lr, [r5]
90022e7e:	fb0c 990e 	mla	r9, ip, lr, r9
90022e82:	f893 e000 	ldrb.w	lr, [r3]
90022e86:	785b      	ldrb	r3, [r3, #1]
90022e88:	fb06 9e0e 	mla	lr, r6, lr, r9
90022e8c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
90022e90:	ea4e 0e00 	orr.w	lr, lr, r0
90022e94:	7860      	ldrb	r0, [r4, #1]
90022e96:	4350      	muls	r0, r2
90022e98:	786a      	ldrb	r2, [r5, #1]
90022e9a:	fb08 0007 	mla	r0, r8, r7, r0
90022e9e:	fb0c 0202 	mla	r2, ip, r2, r0
90022ea2:	fb06 2303 	mla	r3, r6, r3, r2
90022ea6:	095b      	lsrs	r3, r3, #5
90022ea8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90022eac:	ea4e 0303 	orr.w	r3, lr, r3
90022eb0:	800b      	strh	r3, [r1, #0]
90022eb2:	b003      	add	sp, #12
90022eb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022eb8:	af01      	add	r7, sp, #4
90022eba:	e78c      	b.n	90022dd6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
90022ebc:	ac01      	add	r4, sp, #4
90022ebe:	4627      	mov	r7, r4
90022ec0:	e795      	b.n	90022dee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
90022ec2:	ac01      	add	r4, sp, #4
90022ec4:	e793      	b.n	90022dee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
90022ec6:	ad01      	add	r5, sp, #4
90022ec8:	e7a1      	b.n	90022e0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
90022eca:	ab01      	add	r3, sp, #4
90022ecc:	461d      	mov	r5, r3
90022ece:	e7ab      	b.n	90022e28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
90022ed0:	ab01      	add	r3, sp, #4
90022ed2:	e7a9      	b.n	90022e28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

90022ed4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022ed4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022ed8:	b08f      	sub	sp, #60	@ 0x3c
90022eda:	920c      	str	r2, [sp, #48]	@ 0x30
90022edc:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
90022ede:	900d      	str	r0, [sp, #52]	@ 0x34
90022ee0:	910a      	str	r1, [sp, #40]	@ 0x28
90022ee2:	6850      	ldr	r0, [r2, #4]
90022ee4:	9306      	str	r3, [sp, #24]
90022ee6:	6812      	ldr	r2, [r2, #0]
90022ee8:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
90022eec:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
90022ef0:	fb00 1303 	mla	r3, r0, r3, r1
90022ef4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90022ef8:	9307      	str	r3, [sp, #28]
90022efa:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022efc:	681b      	ldr	r3, [r3, #0]
90022efe:	9308      	str	r3, [sp, #32]
90022f00:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022f02:	685c      	ldr	r4, [r3, #4]
90022f04:	3404      	adds	r4, #4
90022f06:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022f08:	2b00      	cmp	r3, #0
90022f0a:	dc03      	bgt.n	90022f14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
90022f0c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90022f0e:	2b00      	cmp	r3, #0
90022f10:	f340 81d5 	ble.w	900232be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
90022f14:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022f16:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022f1a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90022f1e:	1e48      	subs	r0, r1, #1
90022f20:	1e56      	subs	r6, r2, #1
90022f22:	9b06      	ldr	r3, [sp, #24]
90022f24:	2b00      	cmp	r3, #0
90022f26:	f340 80b6 	ble.w	90023096 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90022f2a:	ea5f 472b 	movs.w	r7, fp, asr #16
90022f2e:	ea4f 4325 	mov.w	r3, r5, asr #16
90022f32:	d406      	bmi.n	90022f42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90022f34:	4287      	cmp	r7, r0
90022f36:	da04      	bge.n	90022f42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90022f38:	2b00      	cmp	r3, #0
90022f3a:	db02      	blt.n	90022f42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90022f3c:	42b3      	cmp	r3, r6
90022f3e:	f2c0 80ab 	blt.w	90023098 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
90022f42:	3701      	adds	r7, #1
90022f44:	f100 809c 	bmi.w	90023080 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90022f48:	42b9      	cmp	r1, r7
90022f4a:	f2c0 8099 	blt.w	90023080 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90022f4e:	3301      	adds	r3, #1
90022f50:	f100 8096 	bmi.w	90023080 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90022f54:	429a      	cmp	r2, r3
90022f56:	f2c0 8093 	blt.w	90023080 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90022f5a:	9b06      	ldr	r3, [sp, #24]
90022f5c:	930b      	str	r3, [sp, #44]	@ 0x2c
90022f5e:	9b07      	ldr	r3, [sp, #28]
90022f60:	9309      	str	r3, [sp, #36]	@ 0x24
90022f62:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022f64:	2b00      	cmp	r3, #0
90022f66:	f340 80b4 	ble.w	900230d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
90022f6a:	9820      	ldr	r0, [sp, #128]	@ 0x80
90022f6c:	142e      	asrs	r6, r5, #16
90022f6e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90022f70:	f3cb 3303 	ubfx	r3, fp, #12, #4
90022f74:	68c7      	ldr	r7, [r0, #12]
90022f76:	ea5f 402b 	movs.w	r0, fp, asr #16
90022f7a:	f3c5 3103 	ubfx	r1, r5, #12, #4
90022f7e:	6892      	ldr	r2, [r2, #8]
90022f80:	f100 80fb 	bmi.w	9002317a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90022f84:	f102 3cff 	add.w	ip, r2, #4294967295
90022f88:	4560      	cmp	r0, ip
90022f8a:	f280 80f6 	bge.w	9002317a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90022f8e:	2e00      	cmp	r6, #0
90022f90:	f2c0 80f3 	blt.w	9002317a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90022f94:	f107 3cff 	add.w	ip, r7, #4294967295
90022f98:	4566      	cmp	r6, ip
90022f9a:	f280 80ee 	bge.w	9002317a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90022f9e:	b212      	sxth	r2, r2
90022fa0:	fb06 0002 	mla	r0, r6, r2, r0
90022fa4:	9e08      	ldr	r6, [sp, #32]
90022fa6:	1837      	adds	r7, r6, r0
90022fa8:	5c30      	ldrb	r0, [r6, r0]
90022faa:	eb00 0840 	add.w	r8, r0, r0, lsl #1
90022fae:	eb04 0c08 	add.w	ip, r4, r8
90022fb2:	2b00      	cmp	r3, #0
90022fb4:	f000 80d3 	beq.w	9002315e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
90022fb8:	787e      	ldrb	r6, [r7, #1]
90022fba:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90022fbe:	4426      	add	r6, r4
90022fc0:	2900      	cmp	r1, #0
90022fc2:	f000 80d4 	beq.w	9002316e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
90022fc6:	18b8      	adds	r0, r7, r2
90022fc8:	5cba      	ldrb	r2, [r7, r2]
90022fca:	7840      	ldrb	r0, [r0, #1]
90022fcc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022fd0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90022fd4:	4422      	add	r2, r4
90022fd6:	4420      	add	r0, r4
90022fd8:	b29b      	uxth	r3, r3
90022fda:	78b7      	ldrb	r7, [r6, #2]
90022fdc:	b289      	uxth	r1, r1
90022fde:	f89c a002 	ldrb.w	sl, [ip, #2]
90022fe2:	f89c c001 	ldrb.w	ip, [ip, #1]
90022fe6:	fb03 f901 	mul.w	r9, r3, r1
90022fea:	011b      	lsls	r3, r3, #4
90022fec:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90022ff0:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
90022ff4:	eba3 0309 	sub.w	r3, r3, r9
90022ff8:	b289      	uxth	r1, r1
90022ffa:	b29b      	uxth	r3, r3
90022ffc:	ebae 0e01 	sub.w	lr, lr, r1
90023000:	435f      	muls	r7, r3
90023002:	fa1f fe8e 	uxth.w	lr, lr
90023006:	fb0e 770a 	mla	r7, lr, sl, r7
9002300a:	f892 a002 	ldrb.w	sl, [r2, #2]
9002300e:	fb01 770a 	mla	r7, r1, sl, r7
90023012:	f890 a002 	ldrb.w	sl, [r0, #2]
90023016:	fb09 7a0a 	mla	sl, r9, sl, r7
9002301a:	f814 7008 	ldrb.w	r7, [r4, r8]
9002301e:	f896 8000 	ldrb.w	r8, [r6]
90023022:	7876      	ldrb	r6, [r6, #1]
90023024:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
90023028:	fb03 f808 	mul.w	r8, r3, r8
9002302c:	4373      	muls	r3, r6
9002302e:	fb0e 8807 	mla	r8, lr, r7, r8
90023032:	7817      	ldrb	r7, [r2, #0]
90023034:	fb0e 330c 	mla	r3, lr, ip, r3
90023038:	fb01 8807 	mla	r8, r1, r7, r8
9002303c:	7807      	ldrb	r7, [r0, #0]
9002303e:	fb09 8707 	mla	r7, r9, r7, r8
90023042:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90023046:	ea47 070a 	orr.w	r7, r7, sl
9002304a:	f892 a001 	ldrb.w	sl, [r2, #1]
9002304e:	fb01 310a 	mla	r1, r1, sl, r3
90023052:	f890 a001 	ldrb.w	sl, [r0, #1]
90023056:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023058:	fb09 1a0a 	mla	sl, r9, sl, r1
9002305c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90023060:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90023064:	ea47 070a 	orr.w	r7, r7, sl
90023068:	801f      	strh	r7, [r3, #0]
9002306a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002306c:	3302      	adds	r3, #2
9002306e:	9309      	str	r3, [sp, #36]	@ 0x24
90023070:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90023072:	449b      	add	fp, r3
90023074:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90023076:	441d      	add	r5, r3
90023078:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002307a:	3b01      	subs	r3, #1
9002307c:	930b      	str	r3, [sp, #44]	@ 0x2c
9002307e:	e770      	b.n	90022f62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90023080:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90023082:	449b      	add	fp, r3
90023084:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90023086:	441d      	add	r5, r3
90023088:	9b06      	ldr	r3, [sp, #24]
9002308a:	3b01      	subs	r3, #1
9002308c:	9306      	str	r3, [sp, #24]
9002308e:	9b07      	ldr	r3, [sp, #28]
90023090:	3302      	adds	r3, #2
90023092:	9307      	str	r3, [sp, #28]
90023094:	e745      	b.n	90022f22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
90023096:	d023      	beq.n	900230e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90023098:	9b06      	ldr	r3, [sp, #24]
9002309a:	981b      	ldr	r0, [sp, #108]	@ 0x6c
9002309c:	3b01      	subs	r3, #1
9002309e:	fb00 b003 	mla	r0, r0, r3, fp
900230a2:	1400      	asrs	r0, r0, #16
900230a4:	f53f af59 	bmi.w	90022f5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900230a8:	3901      	subs	r1, #1
900230aa:	4288      	cmp	r0, r1
900230ac:	f6bf af55 	bge.w	90022f5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900230b0:	991c      	ldr	r1, [sp, #112]	@ 0x70
900230b2:	fb01 5303 	mla	r3, r1, r3, r5
900230b6:	141b      	asrs	r3, r3, #16
900230b8:	f53f af4f 	bmi.w	90022f5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900230bc:	3a01      	subs	r2, #1
900230be:	4293      	cmp	r3, r2
900230c0:	f6bf af4b 	bge.w	90022f5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900230c4:	9b06      	ldr	r3, [sp, #24]
900230c6:	9309      	str	r3, [sp, #36]	@ 0x24
900230c8:	9b07      	ldr	r3, [sp, #28]
900230ca:	930b      	str	r3, [sp, #44]	@ 0x2c
900230cc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900230ce:	2b00      	cmp	r3, #0
900230d0:	dc70      	bgt.n	900231b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
900230d2:	9b06      	ldr	r3, [sp, #24]
900230d4:	9a07      	ldr	r2, [sp, #28]
900230d6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900230da:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900230de:	9307      	str	r3, [sp, #28]
900230e0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900230e2:	2b00      	cmp	r3, #0
900230e4:	f340 80eb 	ble.w	900232be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
900230e8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900230ec:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900230ee:	ee30 0a04 	vadd.f32	s0, s0, s8
900230f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
900230f6:	eef0 6a62 	vmov.f32	s13, s5
900230fa:	eec7 7a00 	vdiv.f32	s15, s14, s0
900230fe:	ee31 1a05 	vadd.f32	s2, s2, s10
90023102:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023106:	ee16 ba90 	vmov	fp, s13
9002310a:	eef0 6a43 	vmov.f32	s13, s6
9002310e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023112:	ee16 5a90 	vmov	r5, s13
90023116:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002311a:	ee61 7a27 	vmul.f32	s15, s2, s15
9002311e:	ee77 2a62 	vsub.f32	s5, s14, s5
90023122:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023126:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002312a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002312e:	ee12 2a90 	vmov	r2, s5
90023132:	eef0 2a47 	vmov.f32	s5, s14
90023136:	fb92 f3f3 	sdiv	r3, r2, r3
9002313a:	ee13 2a10 	vmov	r2, s6
9002313e:	931b      	str	r3, [sp, #108]	@ 0x6c
90023140:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90023142:	eeb0 3a67 	vmov.f32	s6, s15
90023146:	fb92 f3f3 	sdiv	r3, r2, r3
9002314a:	931c      	str	r3, [sp, #112]	@ 0x70
9002314c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002314e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90023150:	3b01      	subs	r3, #1
90023152:	930a      	str	r3, [sp, #40]	@ 0x28
90023154:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90023156:	bf08      	it	eq
90023158:	4613      	moveq	r3, r2
9002315a:	9306      	str	r3, [sp, #24]
9002315c:	e6d3      	b.n	90022f06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9002315e:	b149      	cbz	r1, 90023174 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
90023160:	5cba      	ldrb	r2, [r7, r2]
90023162:	4660      	mov	r0, ip
90023164:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90023168:	4422      	add	r2, r4
9002316a:	4666      	mov	r6, ip
9002316c:	e734      	b.n	90022fd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
9002316e:	4660      	mov	r0, ip
90023170:	4662      	mov	r2, ip
90023172:	e731      	b.n	90022fd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
90023174:	4660      	mov	r0, ip
90023176:	4662      	mov	r2, ip
90023178:	e7f7      	b.n	9002316a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
9002317a:	f110 0c01 	adds.w	ip, r0, #1
9002317e:	f53f af74 	bmi.w	9002306a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90023182:	4562      	cmp	r2, ip
90023184:	f6ff af71 	blt.w	9002306a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90023188:	f116 0c01 	adds.w	ip, r6, #1
9002318c:	f53f af6d 	bmi.w	9002306a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90023190:	4567      	cmp	r7, ip
90023192:	f6ff af6a 	blt.w	9002306a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90023196:	b23f      	sxth	r7, r7
90023198:	b212      	sxth	r2, r2
9002319a:	9701      	str	r7, [sp, #4]
9002319c:	9200      	str	r2, [sp, #0]
9002319e:	e9cd 3104 	strd	r3, r1, [sp, #16]
900231a2:	e9cd 0602 	strd	r0, r6, [sp, #8]
900231a6:	4623      	mov	r3, r4
900231a8:	980d      	ldr	r0, [sp, #52]	@ 0x34
900231aa:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
900231ae:	f7ff fde7 	bl	90022d80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
900231b2:	e75a      	b.n	9002306a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900231b4:	9a20      	ldr	r2, [sp, #128]	@ 0x80
900231b6:	ea4f 462b 	mov.w	r6, fp, asr #16
900231ba:	1428      	asrs	r0, r5, #16
900231bc:	f3cb 3303 	ubfx	r3, fp, #12, #4
900231c0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
900231c4:	f3c5 3103 	ubfx	r1, r5, #12, #4
900231c8:	fb02 6000 	mla	r0, r2, r0, r6
900231cc:	9e08      	ldr	r6, [sp, #32]
900231ce:	f816 8000 	ldrb.w	r8, [r6, r0]
900231d2:	1837      	adds	r7, r6, r0
900231d4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
900231d8:	eb04 0c08 	add.w	ip, r4, r8
900231dc:	2b00      	cmp	r3, #0
900231de:	d060      	beq.n	900232a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
900231e0:	787e      	ldrb	r6, [r7, #1]
900231e2:	eb06 0646 	add.w	r6, r6, r6, lsl #1
900231e6:	4426      	add	r6, r4
900231e8:	2900      	cmp	r1, #0
900231ea:	d062      	beq.n	900232b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
900231ec:	18b8      	adds	r0, r7, r2
900231ee:	5cba      	ldrb	r2, [r7, r2]
900231f0:	7840      	ldrb	r0, [r0, #1]
900231f2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900231f6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900231fa:	4422      	add	r2, r4
900231fc:	4420      	add	r0, r4
900231fe:	b29b      	uxth	r3, r3
90023200:	78b7      	ldrb	r7, [r6, #2]
90023202:	b289      	uxth	r1, r1
90023204:	f89c a002 	ldrb.w	sl, [ip, #2]
90023208:	f89c c001 	ldrb.w	ip, [ip, #1]
9002320c:	fb03 f901 	mul.w	r9, r3, r1
90023210:	011b      	lsls	r3, r3, #4
90023212:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90023216:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
9002321a:	eba3 0309 	sub.w	r3, r3, r9
9002321e:	b289      	uxth	r1, r1
90023220:	b29b      	uxth	r3, r3
90023222:	ebae 0e01 	sub.w	lr, lr, r1
90023226:	435f      	muls	r7, r3
90023228:	fa1f fe8e 	uxth.w	lr, lr
9002322c:	fb0e 770a 	mla	r7, lr, sl, r7
90023230:	f892 a002 	ldrb.w	sl, [r2, #2]
90023234:	fb01 770a 	mla	r7, r1, sl, r7
90023238:	f890 a002 	ldrb.w	sl, [r0, #2]
9002323c:	fb09 7a0a 	mla	sl, r9, sl, r7
90023240:	f814 7008 	ldrb.w	r7, [r4, r8]
90023244:	f896 8000 	ldrb.w	r8, [r6]
90023248:	7876      	ldrb	r6, [r6, #1]
9002324a:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
9002324e:	fb03 f808 	mul.w	r8, r3, r8
90023252:	4373      	muls	r3, r6
90023254:	7856      	ldrb	r6, [r2, #1]
90023256:	fb0e 8807 	mla	r8, lr, r7, r8
9002325a:	7817      	ldrb	r7, [r2, #0]
9002325c:	fb0e 330c 	mla	r3, lr, ip, r3
90023260:	fb01 8807 	mla	r8, r1, r7, r8
90023264:	7807      	ldrb	r7, [r0, #0]
90023266:	fb01 3306 	mla	r3, r1, r6, r3
9002326a:	fb09 8707 	mla	r7, r9, r7, r8
9002326e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90023272:	ea47 070a 	orr.w	r7, r7, sl
90023276:	f890 a001 	ldrb.w	sl, [r0, #1]
9002327a:	fb09 3a0a 	mla	sl, r9, sl, r3
9002327e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90023280:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90023284:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90023288:	ea47 070a 	orr.w	r7, r7, sl
9002328c:	f823 7b02 	strh.w	r7, [r3], #2
90023290:	930b      	str	r3, [sp, #44]	@ 0x2c
90023292:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90023294:	449b      	add	fp, r3
90023296:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90023298:	441d      	add	r5, r3
9002329a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002329c:	3b01      	subs	r3, #1
9002329e:	9309      	str	r3, [sp, #36]	@ 0x24
900232a0:	e714      	b.n	900230cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
900232a2:	b149      	cbz	r1, 900232b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
900232a4:	5cba      	ldrb	r2, [r7, r2]
900232a6:	4660      	mov	r0, ip
900232a8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900232ac:	4422      	add	r2, r4
900232ae:	4666      	mov	r6, ip
900232b0:	e7a5      	b.n	900231fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
900232b2:	4660      	mov	r0, ip
900232b4:	4662      	mov	r2, ip
900232b6:	e7a2      	b.n	900231fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
900232b8:	4660      	mov	r0, ip
900232ba:	4662      	mov	r2, ip
900232bc:	e7f7      	b.n	900232ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
900232be:	b00f      	add	sp, #60	@ 0x3c
900232c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900232c4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
900232c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900232c8:	b085      	sub	sp, #20
900232ca:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
900232ce:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
900232d2:	9102      	str	r1, [sp, #8]
900232d4:	2c00      	cmp	r4, #0
900232d6:	fb04 710c 	mla	r1, r4, ip, r7
900232da:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
900232de:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
900232e2:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
900232e6:	eb02 0e01 	add.w	lr, r2, r1
900232ea:	f2c0 8122 	blt.w	90023532 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
900232ee:	45a0      	cmp	r8, r4
900232f0:	f340 811f 	ble.w	90023532 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
900232f4:	2f00      	cmp	r7, #0
900232f6:	f2c0 811a 	blt.w	9002352e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
900232fa:	45bc      	cmp	ip, r7
900232fc:	f340 8117 	ble.w	9002352e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
90023300:	5c52      	ldrb	r2, [r2, r1]
90023302:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90023306:	1c7a      	adds	r2, r7, #1
90023308:	f100 8116 	bmi.w	90023538 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
9002330c:	4594      	cmp	ip, r2
9002330e:	f340 8113 	ble.w	90023538 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
90023312:	2e00      	cmp	r6, #0
90023314:	f000 8112 	beq.w	9002353c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
90023318:	f89e 2001 	ldrb.w	r2, [lr, #1]
9002331c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90023320:	3401      	adds	r4, #1
90023322:	f100 810f 	bmi.w	90023544 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
90023326:	45a0      	cmp	r8, r4
90023328:	f340 810c 	ble.w	90023544 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
9002332c:	2800      	cmp	r0, #0
9002332e:	f000 810c 	beq.w	9002354a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
90023332:	2f00      	cmp	r7, #0
90023334:	f2c0 8104 	blt.w	90023540 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
90023338:	45bc      	cmp	ip, r7
9002333a:	f340 8101 	ble.w	90023540 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
9002333e:	f81e 200c 	ldrb.w	r2, [lr, ip]
90023342:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
90023346:	3701      	adds	r7, #1
90023348:	f100 8102 	bmi.w	90023550 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
9002334c:	45bc      	cmp	ip, r7
9002334e:	f340 80ff 	ble.w	90023550 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90023352:	2e00      	cmp	r6, #0
90023354:	f000 80fe 	beq.w	90023554 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
90023358:	44f4      	add	ip, lr
9002335a:	f89c 2001 	ldrb.w	r2, [ip, #1]
9002335e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
90023362:	b2b6      	uxth	r6, r6
90023364:	b280      	uxth	r0, r0
90023366:	ea4f 6a11 	mov.w	sl, r1, lsr #24
9002336a:	fb00 fe06 	mul.w	lr, r0, r6
9002336e:	0136      	lsls	r6, r6, #4
90023370:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90023374:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90023378:	eba6 070e 	sub.w	r7, r6, lr
9002337c:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
90023380:	ea4f 6914 	mov.w	r9, r4, lsr #24
90023384:	b280      	uxth	r0, r0
90023386:	b2bf      	uxth	r7, r7
90023388:	1a1b      	subs	r3, r3, r0
9002338a:	ea4f 6812 	mov.w	r8, r2, lsr #24
9002338e:	fb0a f607 	mul.w	r6, sl, r7
90023392:	b29b      	uxth	r3, r3
90023394:	fb0b 6603 	mla	r6, fp, r3, r6
90023398:	fb00 6609 	mla	r6, r0, r9, r6
9002339c:	fb0e 6608 	mla	r6, lr, r8, r6
900233a0:	f3c6 2607 	ubfx	r6, r6, #8, #8
900233a4:	9600      	str	r6, [sp, #0]
900233a6:	2e00      	cmp	r6, #0
900233a8:	f000 80be 	beq.w	90023528 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
900233ac:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900233b0:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
900233b4:	9e02      	ldr	r6, [sp, #8]
900233b6:	fb0b fc0c 	mul.w	ip, fp, ip
900233ba:	fb0b f505 	mul.w	r5, fp, r5
900233be:	8836      	ldrh	r6, [r6, #0]
900233c0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
900233c4:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900233c8:	9501      	str	r5, [sp, #4]
900233ca:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
900233ce:	44dc      	add	ip, fp
900233d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900233d4:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
900233d8:	9503      	str	r5, [sp, #12]
900233da:	9d01      	ldr	r5, [sp, #4]
900233dc:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
900233e0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900233e4:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
900233e8:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900233ec:	fb0a fc0c 	mul.w	ip, sl, ip
900233f0:	ea4f 2b15 	mov.w	fp, r5, lsr #8
900233f4:	fb0a fa01 	mul.w	sl, sl, r1
900233f8:	ea4f 251c 	mov.w	r5, ip, lsr #8
900233fc:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90023400:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
90023404:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90023408:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
9002340c:	4465      	add	r5, ip
9002340e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90023412:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90023416:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002341a:	fb09 fc0c 	mul.w	ip, r9, ip
9002341e:	0a2d      	lsrs	r5, r5, #8
90023420:	fb09 f904 	mul.w	r9, r9, r4
90023424:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023428:	ea4f 211c 	mov.w	r1, ip, lsr #8
9002342c:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90023430:	f509 7480 	add.w	r4, r9, #256	@ 0x100
90023434:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90023438:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
9002343c:	437d      	muls	r5, r7
9002343e:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90023442:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90023446:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
9002344a:	4461      	add	r1, ip
9002344c:	fb08 f404 	mul.w	r4, r8, r4
90023450:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023454:	fb08 f802 	mul.w	r8, r8, r2
90023458:	0a09      	lsrs	r1, r1, #8
9002345a:	0a22      	lsrs	r2, r4, #8
9002345c:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
90023460:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90023464:	fb07 f70a 	mul.w	r7, r7, sl
90023468:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
9002346c:	4414      	add	r4, r2
9002346e:	f508 7280 	add.w	r2, r8, #256	@ 0x100
90023472:	0a24      	lsrs	r4, r4, #8
90023474:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90023478:	9a03      	ldr	r2, [sp, #12]
9002347a:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
9002347e:	fb02 5503 	mla	r5, r2, r3, r5
90023482:	ea4f 2818 	mov.w	r8, r8, lsr #8
90023486:	9a00      	ldr	r2, [sp, #0]
90023488:	fb04 540e 	mla	r4, r4, lr, r5
9002348c:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
90023490:	1235      	asrs	r5, r6, #8
90023492:	fb01 4100 	mla	r1, r1, r0, r4
90023496:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9002349a:	0a09      	lsrs	r1, r1, #8
9002349c:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
900234a0:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
900234a4:	fb03 7101 	mla	r1, r3, r1, r7
900234a8:	fb0e 1e08 	mla	lr, lr, r8, r1
900234ac:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
900234b0:	fb00 e101 	mla	r1, r0, r1, lr
900234b4:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
900234b8:	b287      	uxth	r7, r0
900234ba:	0a09      	lsrs	r1, r1, #8
900234bc:	437a      	muls	r2, r7
900234be:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900234c2:	1c53      	adds	r3, r2, #1
900234c4:	4321      	orrs	r1, r4
900234c6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900234ca:	0c0a      	lsrs	r2, r1, #16
900234cc:	f3c1 2407 	ubfx	r4, r1, #8, #8
900234d0:	ea6f 2313 	mvn.w	r3, r3, lsr #8
900234d4:	b2c8      	uxtb	r0, r1
900234d6:	fb12 f207 	smulbb	r2, r2, r7
900234da:	fb14 f407 	smulbb	r4, r4, r7
900234de:	b2db      	uxtb	r3, r3
900234e0:	fb10 f007 	smulbb	r0, r0, r7
900234e4:	fb05 2503 	mla	r5, r5, r3, r2
900234e8:	10f2      	asrs	r2, r6, #3
900234ea:	00f6      	lsls	r6, r6, #3
900234ec:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
900234f0:	b2ad      	uxth	r5, r5
900234f2:	b2f6      	uxtb	r6, r6
900234f4:	fb02 4203 	mla	r2, r2, r3, r4
900234f8:	fb06 0303 	mla	r3, r6, r3, r0
900234fc:	b294      	uxth	r4, r2
900234fe:	b299      	uxth	r1, r3
90023500:	1c6b      	adds	r3, r5, #1
90023502:	1c62      	adds	r2, r4, #1
90023504:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90023508:	1c4b      	adds	r3, r1, #1
9002350a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
9002350e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90023512:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90023516:	0952      	lsrs	r2, r2, #5
90023518:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002351c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90023520:	432b      	orrs	r3, r5
90023522:	4313      	orrs	r3, r2
90023524:	9a02      	ldr	r2, [sp, #8]
90023526:	8013      	strh	r3, [r2, #0]
90023528:	b005      	add	sp, #20
9002352a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002352e:	2500      	movs	r5, #0
90023530:	e6e9      	b.n	90023306 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
90023532:	2100      	movs	r1, #0
90023534:	460d      	mov	r5, r1
90023536:	e6f3      	b.n	90023320 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90023538:	2100      	movs	r1, #0
9002353a:	e6f1      	b.n	90023320 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
9002353c:	4631      	mov	r1, r6
9002353e:	e6ef      	b.n	90023320 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90023540:	2400      	movs	r4, #0
90023542:	e700      	b.n	90023346 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
90023544:	2200      	movs	r2, #0
90023546:	4614      	mov	r4, r2
90023548:	e70b      	b.n	90023362 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
9002354a:	4602      	mov	r2, r0
9002354c:	4604      	mov	r4, r0
9002354e:	e708      	b.n	90023362 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90023550:	2200      	movs	r2, #0
90023552:	e706      	b.n	90023362 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90023554:	4632      	mov	r2, r6
90023556:	e704      	b.n	90023362 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

90023558 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023558:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002355c:	b09f      	sub	sp, #124	@ 0x7c
9002355e:	921b      	str	r2, [sp, #108]	@ 0x6c
90023560:	9309      	str	r3, [sp, #36]	@ 0x24
90023562:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
90023564:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
90023568:	901d      	str	r0, [sp, #116]	@ 0x74
9002356a:	931c      	str	r3, [sp, #112]	@ 0x70
9002356c:	6850      	ldr	r0, [r2, #4]
9002356e:	9119      	str	r1, [sp, #100]	@ 0x64
90023570:	6812      	ldr	r2, [r2, #0]
90023572:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
90023574:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
90023578:	fb00 1303 	mla	r3, r0, r3, r1
9002357c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90023580:	930c      	str	r3, [sp, #48]	@ 0x30
90023582:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90023584:	681b      	ldr	r3, [r3, #0]
90023586:	9312      	str	r3, [sp, #72]	@ 0x48
90023588:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
9002358a:	685e      	ldr	r6, [r3, #4]
9002358c:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
90023590:	3604      	adds	r6, #4
90023592:	930d      	str	r3, [sp, #52]	@ 0x34
90023594:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90023596:	2b00      	cmp	r3, #0
90023598:	dc03      	bgt.n	900235a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9002359a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
9002359c:	2b00      	cmp	r3, #0
9002359e:	f340 8387 	ble.w	90023cb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
900235a2:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
900235a4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900235a8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900235ac:	1e48      	subs	r0, r1, #1
900235ae:	1e57      	subs	r7, r2, #1
900235b0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900235b2:	2b00      	cmp	r3, #0
900235b4:	f340 8194 	ble.w	900238e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
900235b8:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
900235ba:	142b      	asrs	r3, r5, #16
900235bc:	ea5f 4c24 	movs.w	ip, r4, asr #16
900235c0:	d406      	bmi.n	900235d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900235c2:	4584      	cmp	ip, r0
900235c4:	da04      	bge.n	900235d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900235c6:	2b00      	cmp	r3, #0
900235c8:	db02      	blt.n	900235d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900235ca:	42bb      	cmp	r3, r7
900235cc:	f2c0 8189 	blt.w	900238e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900235d0:	f11c 0c01 	adds.w	ip, ip, #1
900235d4:	f100 8177 	bmi.w	900238c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900235d8:	4561      	cmp	r1, ip
900235da:	f2c0 8174 	blt.w	900238c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900235de:	3301      	adds	r3, #1
900235e0:	f100 8171 	bmi.w	900238c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900235e4:	429a      	cmp	r2, r3
900235e6:	f2c0 816e 	blt.w	900238c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900235ea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900235ec:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
900235ee:	931a      	str	r3, [sp, #104]	@ 0x68
900235f0:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
900235f2:	2b00      	cmp	r3, #0
900235f4:	f340 8193 	ble.w	9002391e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
900235f8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900235fa:	ea4f 4c25 	mov.w	ip, r5, asr #16
900235fe:	f3c5 3103 	ubfx	r1, r5, #12, #4
90023602:	f3c3 3203 	ubfx	r2, r3, #12, #4
90023606:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90023608:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
9002360c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
9002360e:	141b      	asrs	r3, r3, #16
90023610:	f100 81d6 	bmi.w	900239c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90023614:	f100 38ff 	add.w	r8, r0, #4294967295
90023618:	4543      	cmp	r3, r8
9002361a:	f280 81d1 	bge.w	900239c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9002361e:	f1bc 0f00 	cmp.w	ip, #0
90023622:	f2c0 81cd 	blt.w	900239c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90023626:	f10e 38ff 	add.w	r8, lr, #4294967295
9002362a:	45c4      	cmp	ip, r8
9002362c:	f280 81c8 	bge.w	900239c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90023630:	b200      	sxth	r0, r0
90023632:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90023634:	fb0c 3300 	mla	r3, ip, r0, r3
90023638:	eb04 0803 	add.w	r8, r4, r3
9002363c:	5ce3      	ldrb	r3, [r4, r3]
9002363e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90023642:	ea4f 6e13 	mov.w	lr, r3, lsr #24
90023646:	2a00      	cmp	r2, #0
90023648:	f000 81af 	beq.w	900239aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002364c:	f898 c001 	ldrb.w	ip, [r8, #1]
90023650:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90023654:	940e      	str	r4, [sp, #56]	@ 0x38
90023656:	0e24      	lsrs	r4, r4, #24
90023658:	9415      	str	r4, [sp, #84]	@ 0x54
9002365a:	b179      	cbz	r1, 9002367c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
9002365c:	eb08 0c00 	add.w	ip, r8, r0
90023660:	f818 0000 	ldrb.w	r0, [r8, r0]
90023664:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90023668:	900a      	str	r0, [sp, #40]	@ 0x28
9002366a:	0e00      	lsrs	r0, r0, #24
9002366c:	9013      	str	r0, [sp, #76]	@ 0x4c
9002366e:	f89c 0001 	ldrb.w	r0, [ip, #1]
90023672:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90023676:	900f      	str	r0, [sp, #60]	@ 0x3c
90023678:	0e00      	lsrs	r0, r0, #24
9002367a:	9016      	str	r0, [sp, #88]	@ 0x58
9002367c:	b292      	uxth	r2, r2
9002367e:	9815      	ldr	r0, [sp, #84]	@ 0x54
90023680:	b289      	uxth	r1, r1
90023682:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90023684:	fb02 f901 	mul.w	r9, r2, r1
90023688:	0112      	lsls	r2, r2, #4
9002368a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9002368e:	eba2 0809 	sub.w	r8, r2, r9
90023692:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90023696:	b289      	uxth	r1, r1
90023698:	fa1f f888 	uxth.w	r8, r8
9002369c:	1a52      	subs	r2, r2, r1
9002369e:	fb08 f000 	mul.w	r0, r8, r0
900236a2:	b292      	uxth	r2, r2
900236a4:	fb02 000e 	mla	r0, r2, lr, r0
900236a8:	fb01 0004 	mla	r0, r1, r4, r0
900236ac:	9c16      	ldr	r4, [sp, #88]	@ 0x58
900236ae:	fb09 0004 	mla	r0, r9, r4, r0
900236b2:	f3c0 2007 	ubfx	r0, r0, #8, #8
900236b6:	2800      	cmp	r0, #0
900236b8:	f000 80fa 	beq.w	900238b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900236bc:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
900236c0:	d01b      	beq.n	900236fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900236c2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
900236c6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900236ca:	fb0e fa0a 	mul.w	sl, lr, sl
900236ce:	fb0e fe03 	mul.w	lr, lr, r3
900236d2:	ea4f 231a 	mov.w	r3, sl, lsr #8
900236d6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900236da:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
900236de:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900236e2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900236e6:	4453      	add	r3, sl
900236e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900236ec:	0a1b      	lsrs	r3, r3, #8
900236ee:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900236f2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900236f6:	ea43 030c 	orr.w	r3, r3, ip
900236fa:	9c15      	ldr	r4, [sp, #84]	@ 0x54
900236fc:	2cff      	cmp	r4, #255	@ 0xff
900236fe:	d021      	beq.n	90023744 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90023700:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90023702:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90023706:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90023708:	fb04 fb0b 	mul.w	fp, r4, fp
9002370c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
9002370e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023712:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90023714:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023718:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
9002371c:	fb04 fa0a 	mul.w	sl, r4, sl
90023720:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023724:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90023728:	44de      	add	lr, fp
9002372a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002372e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023732:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023736:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002373a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002373e:	ea4e 040a 	orr.w	r4, lr, sl
90023742:	940e      	str	r4, [sp, #56]	@ 0x38
90023744:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90023746:	2cff      	cmp	r4, #255	@ 0xff
90023748:	d021      	beq.n	9002378e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9002374a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
9002374c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90023750:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90023752:	fb04 fb0b 	mul.w	fp, r4, fp
90023756:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90023758:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
9002375c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9002375e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023762:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90023766:	fb04 fa0a 	mul.w	sl, r4, sl
9002376a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002376e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90023772:	44de      	add	lr, fp
90023774:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023778:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002377c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023780:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023784:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023788:	ea4e 040a 	orr.w	r4, lr, sl
9002378c:	940a      	str	r4, [sp, #40]	@ 0x28
9002378e:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90023790:	2cff      	cmp	r4, #255	@ 0xff
90023792:	d021      	beq.n	900237d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
90023794:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90023796:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
9002379a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
9002379c:	fb04 fb0b 	mul.w	fp, r4, fp
900237a0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
900237a2:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900237a6:	9c16      	ldr	r4, [sp, #88]	@ 0x58
900237a8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900237ac:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900237b0:	fb04 fa0a 	mul.w	sl, r4, sl
900237b4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900237b8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900237bc:	44de      	add	lr, fp
900237be:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900237c2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900237c6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900237ca:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900237ce:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900237d2:	ea4e 040a 	orr.w	r4, lr, sl
900237d6:	940f      	str	r4, [sp, #60]	@ 0x3c
900237d8:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900237da:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
900237de:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900237e2:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900237e6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
900237e8:	fb08 fc0c 	mul.w	ip, r8, ip
900237ec:	fb02 cc0e 	mla	ip, r2, lr, ip
900237f0:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
900237f4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
900237f6:	fb01 cc0e 	mla	ip, r1, lr, ip
900237fa:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
900237fe:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90023800:	fb09 cc0e 	mla	ip, r9, lr, ip
90023804:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
90023808:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
9002380a:	fb08 f80e 	mul.w	r8, r8, lr
9002380e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023812:	fb02 8303 	mla	r3, r2, r3, r8
90023816:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90023818:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002381c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90023820:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90023822:	fb01 330a 	mla	r3, r1, sl, r3
90023826:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
9002382a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9002382c:	fb09 3901 	mla	r9, r9, r1, r3
90023830:	883b      	ldrh	r3, [r7, #0]
90023832:	4342      	muls	r2, r0
90023834:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023838:	1c50      	adds	r0, r2, #1
9002383a:	1219      	asrs	r1, r3, #8
9002383c:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90023840:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90023844:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90023848:	ea4c 0c09 	orr.w	ip, ip, r9
9002384c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90023850:	ea4f 421c 	mov.w	r2, ip, lsr #16
90023854:	f3cc 2e07 	ubfx	lr, ip, #8, #8
90023858:	b2c0      	uxtb	r0, r0
9002385a:	fb12 f204 	smulbb	r2, r2, r4
9002385e:	fa5f fc8c 	uxtb.w	ip, ip
90023862:	fb1e fe04 	smulbb	lr, lr, r4
90023866:	fb01 2100 	mla	r1, r1, r0, r2
9002386a:	10da      	asrs	r2, r3, #3
9002386c:	fb1c fc04 	smulbb	ip, ip, r4
90023870:	00db      	lsls	r3, r3, #3
90023872:	b289      	uxth	r1, r1
90023874:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90023878:	b2db      	uxtb	r3, r3
9002387a:	fb02 e200 	mla	r2, r2, r0, lr
9002387e:	fb03 c300 	mla	r3, r3, r0, ip
90023882:	b292      	uxth	r2, r2
90023884:	fa1f fc83 	uxth.w	ip, r3
90023888:	1c4b      	adds	r3, r1, #1
9002388a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9002388e:	f10c 0301 	add.w	r3, ip, #1
90023892:	eb03 231c 	add.w	r3, r3, ip, lsr #8
90023896:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
9002389a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002389e:	430b      	orrs	r3, r1
900238a0:	1c51      	adds	r1, r2, #1
900238a2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
900238a6:	0952      	lsrs	r2, r2, #5
900238a8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900238ac:	4313      	orrs	r3, r2
900238ae:	803b      	strh	r3, [r7, #0]
900238b0:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
900238b2:	3702      	adds	r7, #2
900238b4:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
900238b6:	441a      	add	r2, r3
900238b8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900238ba:	441d      	add	r5, r3
900238bc:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
900238be:	9229      	str	r2, [sp, #164]	@ 0xa4
900238c0:	3b01      	subs	r3, #1
900238c2:	931a      	str	r3, [sp, #104]	@ 0x68
900238c4:	e694      	b.n	900235f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
900238c6:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
900238c8:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
900238ca:	441c      	add	r4, r3
900238cc:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900238ce:	441d      	add	r5, r3
900238d0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900238d2:	9429      	str	r4, [sp, #164]	@ 0xa4
900238d4:	3b01      	subs	r3, #1
900238d6:	9309      	str	r3, [sp, #36]	@ 0x24
900238d8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900238da:	3302      	adds	r3, #2
900238dc:	930c      	str	r3, [sp, #48]	@ 0x30
900238de:	e667      	b.n	900235b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
900238e0:	d024      	beq.n	9002392c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
900238e2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900238e4:	982b      	ldr	r0, [sp, #172]	@ 0xac
900238e6:	3b01      	subs	r3, #1
900238e8:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
900238ea:	fb00 4003 	mla	r0, r0, r3, r4
900238ee:	1400      	asrs	r0, r0, #16
900238f0:	f53f ae7b 	bmi.w	900235ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900238f4:	3901      	subs	r1, #1
900238f6:	4288      	cmp	r0, r1
900238f8:	f6bf ae77 	bge.w	900235ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900238fc:	992c      	ldr	r1, [sp, #176]	@ 0xb0
900238fe:	fb01 5303 	mla	r3, r1, r3, r5
90023902:	141b      	asrs	r3, r3, #16
90023904:	f53f ae71 	bmi.w	900235ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023908:	3a01      	subs	r2, #1
9002390a:	4293      	cmp	r3, r2
9002390c:	f6bf ae6d 	bge.w	900235ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023910:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
90023914:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
90023918:	f1bb 0f00 	cmp.w	fp, #0
9002391c:	dc70      	bgt.n	90023a00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
9002391e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023920:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90023924:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90023926:	eb03 0344 	add.w	r3, r3, r4, lsl #1
9002392a:	930c      	str	r3, [sp, #48]	@ 0x30
9002392c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
9002392e:	2b00      	cmp	r3, #0
90023930:	f340 81be 	ble.w	90023cb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
90023934:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90023938:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002393a:	ee30 0a04 	vadd.f32	s0, s0, s8
9002393e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023942:	eef0 6a62 	vmov.f32	s13, s5
90023946:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002394a:	ee31 1a05 	vadd.f32	s2, s2, s10
9002394e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023952:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
90023956:	eef0 6a43 	vmov.f32	s13, s6
9002395a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002395e:	ee16 5a90 	vmov	r5, s13
90023962:	ee20 7aa7 	vmul.f32	s14, s1, s15
90023966:	ee61 7a27 	vmul.f32	s15, s2, s15
9002396a:	ee77 2a62 	vsub.f32	s5, s14, s5
9002396e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023972:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90023976:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002397a:	ee12 2a90 	vmov	r2, s5
9002397e:	eef0 2a47 	vmov.f32	s5, s14
90023982:	fb92 f3f3 	sdiv	r3, r2, r3
90023986:	ee13 2a10 	vmov	r2, s6
9002398a:	932b      	str	r3, [sp, #172]	@ 0xac
9002398c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002398e:	eeb0 3a67 	vmov.f32	s6, s15
90023992:	fb92 f3f3 	sdiv	r3, r2, r3
90023996:	932c      	str	r3, [sp, #176]	@ 0xb0
90023998:	9b19      	ldr	r3, [sp, #100]	@ 0x64
9002399a:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
9002399c:	3b01      	subs	r3, #1
9002399e:	9319      	str	r3, [sp, #100]	@ 0x64
900239a0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900239a2:	bf08      	it	eq
900239a4:	4613      	moveq	r3, r2
900239a6:	9309      	str	r3, [sp, #36]	@ 0x24
900239a8:	e5f4      	b.n	90023594 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
900239aa:	2900      	cmp	r1, #0
900239ac:	f43f ae66 	beq.w	9002367c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
900239b0:	f818 0000 	ldrb.w	r0, [r8, r0]
900239b4:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
900239b8:	900a      	str	r0, [sp, #40]	@ 0x28
900239ba:	0e00      	lsrs	r0, r0, #24
900239bc:	9013      	str	r0, [sp, #76]	@ 0x4c
900239be:	e65d      	b.n	9002367c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
900239c0:	f113 0801 	adds.w	r8, r3, #1
900239c4:	f53f af74 	bmi.w	900238b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900239c8:	4540      	cmp	r0, r8
900239ca:	f6ff af71 	blt.w	900238b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900239ce:	f11c 0801 	adds.w	r8, ip, #1
900239d2:	f53f af6d 	bmi.w	900238b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900239d6:	45c6      	cmp	lr, r8
900239d8:	f6ff af6a 	blt.w	900238b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900239dc:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
900239de:	b200      	sxth	r0, r0
900239e0:	9302      	str	r3, [sp, #8]
900239e2:	fa0f f38e 	sxth.w	r3, lr
900239e6:	9000      	str	r0, [sp, #0]
900239e8:	9301      	str	r3, [sp, #4]
900239ea:	4633      	mov	r3, r6
900239ec:	981d      	ldr	r0, [sp, #116]	@ 0x74
900239ee:	e9cd 1405 	strd	r1, r4, [sp, #20]
900239f2:	e9cd c203 	strd	ip, r2, [sp, #12]
900239f6:	4639      	mov	r1, r7
900239f8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
900239fa:	f7ff fc63 	bl	900232c4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
900239fe:	e757      	b.n	900238b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023a00:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90023a02:	f3c5 3003 	ubfx	r0, r5, #12, #4
90023a06:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90023a08:	f3c3 3203 	ubfx	r2, r3, #12, #4
90023a0c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90023a0e:	1427      	asrs	r7, r4, #16
90023a10:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90023a12:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023a16:	142b      	asrs	r3, r5, #16
90023a18:	fb01 7303 	mla	r3, r1, r3, r7
90023a1c:	18e7      	adds	r7, r4, r3
90023a1e:	5ce3      	ldrb	r3, [r4, r3]
90023a20:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90023a24:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90023a28:	2a00      	cmp	r2, #0
90023a2a:	f000 8137 	beq.w	90023c9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
90023a2e:	f897 e001 	ldrb.w	lr, [r7, #1]
90023a32:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
90023a36:	9410      	str	r4, [sp, #64]	@ 0x40
90023a38:	0e24      	lsrs	r4, r4, #24
90023a3a:	9417      	str	r4, [sp, #92]	@ 0x5c
90023a3c:	b170      	cbz	r0, 90023a5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90023a3e:	eb07 0e01 	add.w	lr, r7, r1
90023a42:	5c79      	ldrb	r1, [r7, r1]
90023a44:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023a48:	910b      	str	r1, [sp, #44]	@ 0x2c
90023a4a:	0e09      	lsrs	r1, r1, #24
90023a4c:	9114      	str	r1, [sp, #80]	@ 0x50
90023a4e:	f89e 1001 	ldrb.w	r1, [lr, #1]
90023a52:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023a56:	9111      	str	r1, [sp, #68]	@ 0x44
90023a58:	0e09      	lsrs	r1, r1, #24
90023a5a:	9118      	str	r1, [sp, #96]	@ 0x60
90023a5c:	b292      	uxth	r2, r2
90023a5e:	9917      	ldr	r1, [sp, #92]	@ 0x5c
90023a60:	b280      	uxth	r0, r0
90023a62:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90023a64:	fb02 f800 	mul.w	r8, r2, r0
90023a68:	0112      	lsls	r2, r2, #4
90023a6a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90023a6e:	eba2 0e08 	sub.w	lr, r2, r8
90023a72:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90023a76:	b280      	uxth	r0, r0
90023a78:	fa1f fe8e 	uxth.w	lr, lr
90023a7c:	1a12      	subs	r2, r2, r0
90023a7e:	fb0e f101 	mul.w	r1, lr, r1
90023a82:	b292      	uxth	r2, r2
90023a84:	fb02 110c 	mla	r1, r2, ip, r1
90023a88:	fb00 1104 	mla	r1, r0, r4, r1
90023a8c:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90023a8e:	fb08 1104 	mla	r1, r8, r4, r1
90023a92:	f3c1 2107 	ubfx	r1, r1, #8, #8
90023a96:	2900      	cmp	r1, #0
90023a98:	f000 80f5 	beq.w	90023c86 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
90023a9c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90023aa0:	d019      	beq.n	90023ad6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
90023aa2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90023aa6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90023aaa:	fb0c fa0a 	mul.w	sl, ip, sl
90023aae:	fb0c fc03 	mul.w	ip, ip, r3
90023ab2:	ea4f 231a 	mov.w	r3, sl, lsr #8
90023ab6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90023aba:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90023abe:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90023ac2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90023ac6:	4453      	add	r3, sl
90023ac8:	0a3f      	lsrs	r7, r7, #8
90023aca:	0a1b      	lsrs	r3, r3, #8
90023acc:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90023ad0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90023ad4:	433b      	orrs	r3, r7
90023ad6:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90023ad8:	2cff      	cmp	r4, #255	@ 0xff
90023ada:	d020      	beq.n	90023b1e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
90023adc:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90023ade:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90023ae2:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90023ae4:	4367      	muls	r7, r4
90023ae6:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90023ae8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023aec:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023af0:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90023af2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90023af6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023afa:	fb04 fa0a 	mul.w	sl, r4, sl
90023afe:	44bc      	add	ip, r7
90023b00:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90023b04:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023b08:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023b0c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023b10:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023b14:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023b18:	ea4c 040a 	orr.w	r4, ip, sl
90023b1c:	9410      	str	r4, [sp, #64]	@ 0x40
90023b1e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90023b20:	2cff      	cmp	r4, #255	@ 0xff
90023b22:	d020      	beq.n	90023b66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
90023b24:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90023b26:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90023b2a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90023b2c:	4367      	muls	r7, r4
90023b2e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90023b30:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023b34:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023b38:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90023b3a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90023b3e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023b42:	fb04 fa0a 	mul.w	sl, r4, sl
90023b46:	44bc      	add	ip, r7
90023b48:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90023b4c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023b50:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023b54:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023b58:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023b5c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023b60:	ea4c 040a 	orr.w	r4, ip, sl
90023b64:	940b      	str	r4, [sp, #44]	@ 0x2c
90023b66:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90023b68:	2cff      	cmp	r4, #255	@ 0xff
90023b6a:	d020      	beq.n	90023bae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
90023b6c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90023b6e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90023b72:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90023b74:	4367      	muls	r7, r4
90023b76:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90023b78:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023b7c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023b80:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90023b82:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90023b86:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023b8a:	fb04 fa0a 	mul.w	sl, r4, sl
90023b8e:	44bc      	add	ip, r7
90023b90:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90023b94:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023b98:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023b9c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023ba0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023ba4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023ba8:	ea4c 040a 	orr.w	r4, ip, sl
90023bac:	9411      	str	r4, [sp, #68]	@ 0x44
90023bae:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90023bb0:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90023bb4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90023bb8:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90023bbc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90023bbe:	fb0e f707 	mul.w	r7, lr, r7
90023bc2:	fb02 770c 	mla	r7, r2, ip, r7
90023bc6:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90023bca:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90023bcc:	fb00 770c 	mla	r7, r0, ip, r7
90023bd0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90023bd4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90023bd6:	fb08 770c 	mla	r7, r8, ip, r7
90023bda:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
90023bde:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90023be0:	fb0e fe0c 	mul.w	lr, lr, ip
90023be4:	0a3f      	lsrs	r7, r7, #8
90023be6:	fb02 e303 	mla	r3, r2, r3, lr
90023bea:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90023bec:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90023bf0:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90023bf4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90023bf6:	fb00 330a 	mla	r3, r0, sl, r3
90023bfa:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
90023bfe:	f8b9 0000 	ldrh.w	r0, [r9]
90023c02:	fb08 3c0c 	mla	ip, r8, ip, r3
90023c06:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90023c08:	1202      	asrs	r2, r0, #8
90023c0a:	434b      	muls	r3, r1
90023c0c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023c10:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90023c14:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90023c18:	1c59      	adds	r1, r3, #1
90023c1a:	ea47 070c 	orr.w	r7, r7, ip
90023c1e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90023c22:	0c3b      	lsrs	r3, r7, #16
90023c24:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90023c28:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90023c2c:	b2ff      	uxtb	r7, r7
90023c2e:	fb13 f304 	smulbb	r3, r3, r4
90023c32:	b2c9      	uxtb	r1, r1
90023c34:	fb1c fc04 	smulbb	ip, ip, r4
90023c38:	fb02 3201 	mla	r2, r2, r1, r3
90023c3c:	10c3      	asrs	r3, r0, #3
90023c3e:	fb17 f704 	smulbb	r7, r7, r4
90023c42:	00c0      	lsls	r0, r0, #3
90023c44:	b292      	uxth	r2, r2
90023c46:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90023c4a:	b2c0      	uxtb	r0, r0
90023c4c:	fb03 c301 	mla	r3, r3, r1, ip
90023c50:	f102 0c01 	add.w	ip, r2, #1
90023c54:	fb00 7001 	mla	r0, r0, r1, r7
90023c58:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
90023c5c:	b280      	uxth	r0, r0
90023c5e:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
90023c62:	b29b      	uxth	r3, r3
90023c64:	1c42      	adds	r2, r0, #1
90023c66:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90023c6a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90023c6e:	ea42 020c 	orr.w	r2, r2, ip
90023c72:	f103 0c01 	add.w	ip, r3, #1
90023c76:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90023c7a:	095b      	lsrs	r3, r3, #5
90023c7c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90023c80:	431a      	orrs	r2, r3
90023c82:	f8a9 2000 	strh.w	r2, [r9]
90023c86:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
90023c88:	f109 0902 	add.w	r9, r9, #2
90023c8c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90023c8e:	f10b 3bff 	add.w	fp, fp, #4294967295
90023c92:	441a      	add	r2, r3
90023c94:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90023c96:	9229      	str	r2, [sp, #164]	@ 0xa4
90023c98:	441d      	add	r5, r3
90023c9a:	e63d      	b.n	90023918 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
90023c9c:	2800      	cmp	r0, #0
90023c9e:	f43f aedd 	beq.w	90023a5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90023ca2:	5c79      	ldrb	r1, [r7, r1]
90023ca4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023ca8:	910b      	str	r1, [sp, #44]	@ 0x2c
90023caa:	0e09      	lsrs	r1, r1, #24
90023cac:	9114      	str	r1, [sp, #80]	@ 0x50
90023cae:	e6d5      	b.n	90023a5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90023cb0:	b01f      	add	sp, #124	@ 0x7c
90023cb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90023cb6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
90023cb6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023cba:	b089      	sub	sp, #36	@ 0x24
90023cbc:	9101      	str	r1, [sp, #4]
90023cbe:	9801      	ldr	r0, [sp, #4]
90023cc0:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
90023cc4:	8800      	ldrh	r0, [r0, #0]
90023cc6:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
90023cca:	1206      	asrs	r6, r0, #8
90023ccc:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
90023cd0:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
90023cd4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
90023cd8:	9602      	str	r6, [sp, #8]
90023cda:	10c6      	asrs	r6, r0, #3
90023cdc:	00c0      	lsls	r0, r0, #3
90023cde:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90023ce2:	b2c0      	uxtb	r0, r0
90023ce4:	9603      	str	r6, [sp, #12]
90023ce6:	9004      	str	r0, [sp, #16]
90023ce8:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
90023cec:	fb07 100c 	mla	r0, r7, ip, r1
90023cf0:	2f00      	cmp	r7, #0
90023cf2:	eb02 0e00 	add.w	lr, r2, r0
90023cf6:	f2c0 810a 	blt.w	90023f0e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90023cfa:	45b8      	cmp	r8, r7
90023cfc:	f340 8107 	ble.w	90023f0e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90023d00:	2900      	cmp	r1, #0
90023d02:	f2c0 8102 	blt.w	90023f0a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90023d06:	458c      	cmp	ip, r1
90023d08:	f340 80ff 	ble.w	90023f0a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90023d0c:	5c12      	ldrb	r2, [r2, r0]
90023d0e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90023d12:	1c4a      	adds	r2, r1, #1
90023d14:	f100 80fe 	bmi.w	90023f14 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90023d18:	4594      	cmp	ip, r2
90023d1a:	f340 80fb 	ble.w	90023f14 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90023d1e:	2d00      	cmp	r5, #0
90023d20:	f000 80fa 	beq.w	90023f18 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
90023d24:	f89e 2001 	ldrb.w	r2, [lr, #1]
90023d28:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90023d2c:	3701      	adds	r7, #1
90023d2e:	f100 80f7 	bmi.w	90023f20 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90023d32:	45b8      	cmp	r8, r7
90023d34:	f340 80f4 	ble.w	90023f20 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90023d38:	2c00      	cmp	r4, #0
90023d3a:	f000 80f4 	beq.w	90023f26 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
90023d3e:	2900      	cmp	r1, #0
90023d40:	eb0e 020c 	add.w	r2, lr, ip
90023d44:	f2c0 80ea 	blt.w	90023f1c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90023d48:	458c      	cmp	ip, r1
90023d4a:	f340 80e7 	ble.w	90023f1c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90023d4e:	f81e 700c 	ldrb.w	r7, [lr, ip]
90023d52:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
90023d56:	3101      	adds	r1, #1
90023d58:	f100 80e8 	bmi.w	90023f2c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90023d5c:	458c      	cmp	ip, r1
90023d5e:	f340 80e5 	ble.w	90023f2c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90023d62:	2d00      	cmp	r5, #0
90023d64:	f000 80e4 	beq.w	90023f30 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
90023d68:	7852      	ldrb	r2, [r2, #1]
90023d6a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90023d6e:	0e0b      	lsrs	r3, r1, #24
90023d70:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
90023d74:	ea4f 6a10 	mov.w	sl, r0, lsr #24
90023d78:	9300      	str	r3, [sp, #0]
90023d7a:	b2a4      	uxth	r4, r4
90023d7c:	b2ab      	uxth	r3, r5
90023d7e:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
90023d82:	ea4f 6b16 	mov.w	fp, r6, lsr #24
90023d86:	fb03 f904 	mul.w	r9, r3, r4
90023d8a:	011b      	lsls	r3, r3, #4
90023d8c:	fb0a f505 	mul.w	r5, sl, r5
90023d90:	ea4f 6817 	mov.w	r8, r7, lsr #24
90023d94:	eba3 0e09 	sub.w	lr, r3, r9
90023d98:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
90023d9c:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
90023da0:	0a28      	lsrs	r0, r5, #8
90023da2:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
90023da6:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90023daa:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
90023dae:	fb0a f303 	mul.w	r3, sl, r3
90023db2:	fb08 f707 	mul.w	r7, r8, r7
90023db6:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
90023dba:	4405      	add	r5, r0
90023dbc:	fb08 fc0c 	mul.w	ip, r8, ip
90023dc0:	b2a4      	uxth	r4, r4
90023dc2:	0a2d      	lsrs	r5, r5, #8
90023dc4:	fa1f fe8e 	uxth.w	lr, lr
90023dc8:	1b12      	subs	r2, r2, r4
90023dca:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
90023dce:	b292      	uxth	r2, r2
90023dd0:	9005      	str	r0, [sp, #20]
90023dd2:	f503 7080 	add.w	r0, r3, #256	@ 0x100
90023dd6:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90023dda:	ea4f 201c 	mov.w	r0, ip, lsr #8
90023dde:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90023de2:	0a1b      	lsrs	r3, r3, #8
90023de4:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
90023de8:	9306      	str	r3, [sp, #24]
90023dea:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
90023dee:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
90023df2:	4460      	add	r0, ip
90023df4:	fb0b f303 	mul.w	r3, fp, r3
90023df8:	fb0b f606 	mul.w	r6, fp, r6
90023dfc:	0a00      	lsrs	r0, r0, #8
90023dfe:	0a1d      	lsrs	r5, r3, #8
90023e00:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
90023e04:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
90023e08:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90023e0c:	441d      	add	r5, r3
90023e0e:	f506 7380 	add.w	r3, r6, #256	@ 0x100
90023e12:	eb03 2616 	add.w	r6, r3, r6, lsr #8
90023e16:	f507 7380 	add.w	r3, r7, #256	@ 0x100
90023e1a:	0a2d      	lsrs	r5, r5, #8
90023e1c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
90023e20:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
90023e24:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90023e28:	0a36      	lsrs	r6, r6, #8
90023e2a:	0a1b      	lsrs	r3, r3, #8
90023e2c:	fb05 f50e 	mul.w	r5, r5, lr
90023e30:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
90023e34:	9307      	str	r3, [sp, #28]
90023e36:	0e0b      	lsrs	r3, r1, #24
90023e38:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90023e3c:	fb0e f606 	mul.w	r6, lr, r6
90023e40:	435f      	muls	r7, r3
90023e42:	4359      	muls	r1, r3
90023e44:	9b05      	ldr	r3, [sp, #20]
90023e46:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023e4a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90023e4e:	fb03 5502 	mla	r5, r3, r2, r5
90023e52:	9b06      	ldr	r3, [sp, #24]
90023e54:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023e58:	fb0e fe0b 	mul.w	lr, lr, fp
90023e5c:	44bc      	add	ip, r7
90023e5e:	f501 7780 	add.w	r7, r1, #256	@ 0x100
90023e62:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023e66:	eb07 2111 	add.w	r1, r7, r1, lsr #8
90023e6a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023e6e:	0a09      	lsrs	r1, r1, #8
90023e70:	fb0c 5509 	mla	r5, ip, r9, r5
90023e74:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90023e78:	fb00 5504 	mla	r5, r0, r4, r5
90023e7c:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
90023e80:	9b07      	ldr	r3, [sp, #28]
90023e82:	fb02 6000 	mla	r0, r2, r0, r6
90023e86:	0a2d      	lsrs	r5, r5, #8
90023e88:	fb02 e20a 	mla	r2, r2, sl, lr
90023e8c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90023e90:	fb09 0001 	mla	r0, r9, r1, r0
90023e94:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90023e98:	fb04 0003 	mla	r0, r4, r3, r0
90023e9c:	9b00      	ldr	r3, [sp, #0]
90023e9e:	fb04 2408 	mla	r4, r4, r8, r2
90023ea2:	9a04      	ldr	r2, [sp, #16]
90023ea4:	0a00      	lsrs	r0, r0, #8
90023ea6:	fb09 4903 	mla	r9, r9, r3, r4
90023eaa:	9b02      	ldr	r3, [sp, #8]
90023eac:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
90023eb0:	ea6f 2929 	mvn.w	r9, r9, asr #8
90023eb4:	4305      	orrs	r5, r0
90023eb6:	fa5f f989 	uxtb.w	r9, r9
90023eba:	fb03 f109 	mul.w	r1, r3, r9
90023ebe:	9b03      	ldr	r3, [sp, #12]
90023ec0:	fb03 f309 	mul.w	r3, r3, r9
90023ec4:	fb02 f909 	mul.w	r9, r2, r9
90023ec8:	1c4a      	adds	r2, r1, #1
90023eca:	1c58      	adds	r0, r3, #1
90023ecc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90023ed0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90023ed4:	0c2a      	lsrs	r2, r5, #16
90023ed6:	0a2b      	lsrs	r3, r5, #8
90023ed8:	eb02 2211 	add.w	r2, r2, r1, lsr #8
90023edc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90023ee0:	0212      	lsls	r2, r2, #8
90023ee2:	00db      	lsls	r3, r3, #3
90023ee4:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
90023ee8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90023eec:	4313      	orrs	r3, r2
90023eee:	f109 0201 	add.w	r2, r9, #1
90023ef2:	eb02 2919 	add.w	r9, r2, r9, lsr #8
90023ef6:	eb05 2519 	add.w	r5, r5, r9, lsr #8
90023efa:	f3c5 05c4 	ubfx	r5, r5, #3, #5
90023efe:	431d      	orrs	r5, r3
90023f00:	9b01      	ldr	r3, [sp, #4]
90023f02:	801d      	strh	r5, [r3, #0]
90023f04:	b009      	add	sp, #36	@ 0x24
90023f06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023f0a:	2000      	movs	r0, #0
90023f0c:	e701      	b.n	90023d12 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
90023f0e:	2600      	movs	r6, #0
90023f10:	4630      	mov	r0, r6
90023f12:	e70b      	b.n	90023d2c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90023f14:	2600      	movs	r6, #0
90023f16:	e709      	b.n	90023d2c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90023f18:	462e      	mov	r6, r5
90023f1a:	e707      	b.n	90023d2c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90023f1c:	2700      	movs	r7, #0
90023f1e:	e71a      	b.n	90023d56 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
90023f20:	2100      	movs	r1, #0
90023f22:	460f      	mov	r7, r1
90023f24:	e723      	b.n	90023d6e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90023f26:	4621      	mov	r1, r4
90023f28:	4627      	mov	r7, r4
90023f2a:	e720      	b.n	90023d6e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90023f2c:	2100      	movs	r1, #0
90023f2e:	e71e      	b.n	90023d6e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90023f30:	4629      	mov	r1, r5
90023f32:	e71c      	b.n	90023d6e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

90023f34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023f34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023f38:	b09b      	sub	sp, #108	@ 0x6c
90023f3a:	9218      	str	r2, [sp, #96]	@ 0x60
90023f3c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90023f3e:	9019      	str	r0, [sp, #100]	@ 0x64
90023f40:	9116      	str	r1, [sp, #88]	@ 0x58
90023f42:	6850      	ldr	r0, [r2, #4]
90023f44:	9307      	str	r3, [sp, #28]
90023f46:	6812      	ldr	r2, [r2, #0]
90023f48:	9d26      	ldr	r5, [sp, #152]	@ 0x98
90023f4a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
90023f4e:	fb00 1303 	mla	r3, r0, r3, r1
90023f52:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90023f56:	930a      	str	r3, [sp, #40]	@ 0x28
90023f58:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90023f5a:	681b      	ldr	r3, [r3, #0]
90023f5c:	930f      	str	r3, [sp, #60]	@ 0x3c
90023f5e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90023f60:	685e      	ldr	r6, [r3, #4]
90023f62:	3604      	adds	r6, #4
90023f64:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90023f66:	2b00      	cmp	r3, #0
90023f68:	dc03      	bgt.n	90023f72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90023f6a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90023f6c:	2b00      	cmp	r3, #0
90023f6e:	f340 8373 	ble.w	90024658 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90023f72:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90023f74:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023f78:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023f7c:	1e48      	subs	r0, r1, #1
90023f7e:	1e57      	subs	r7, r2, #1
90023f80:	9b07      	ldr	r3, [sp, #28]
90023f82:	2b00      	cmp	r3, #0
90023f84:	f340 818f 	ble.w	900242a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
90023f88:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90023f8a:	142b      	asrs	r3, r5, #16
90023f8c:	ea5f 4c24 	movs.w	ip, r4, asr #16
90023f90:	d406      	bmi.n	90023fa0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90023f92:	4584      	cmp	ip, r0
90023f94:	da04      	bge.n	90023fa0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90023f96:	2b00      	cmp	r3, #0
90023f98:	db02      	blt.n	90023fa0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90023f9a:	42bb      	cmp	r3, r7
90023f9c:	f2c0 8184 	blt.w	900242a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
90023fa0:	f11c 0c01 	adds.w	ip, ip, #1
90023fa4:	f100 8172 	bmi.w	9002428c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023fa8:	4561      	cmp	r1, ip
90023faa:	f2c0 816f 	blt.w	9002428c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023fae:	3301      	adds	r3, #1
90023fb0:	f100 816c 	bmi.w	9002428c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023fb4:	429a      	cmp	r2, r3
90023fb6:	f2c0 8169 	blt.w	9002428c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023fba:	9b07      	ldr	r3, [sp, #28]
90023fbc:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90023fbe:	9317      	str	r3, [sp, #92]	@ 0x5c
90023fc0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90023fc2:	2b00      	cmp	r3, #0
90023fc4:	f340 818e 	ble.w	900242e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
90023fc8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90023fca:	ea4f 4c25 	mov.w	ip, r5, asr #16
90023fce:	f3c5 3003 	ubfx	r0, r5, #12, #4
90023fd2:	f3c3 3203 	ubfx	r2, r3, #12, #4
90023fd6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90023fd8:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
90023fdc:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90023fde:	141b      	asrs	r3, r3, #16
90023fe0:	f100 81d1 	bmi.w	90024386 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023fe4:	f101 38ff 	add.w	r8, r1, #4294967295
90023fe8:	4543      	cmp	r3, r8
90023fea:	f280 81cc 	bge.w	90024386 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023fee:	f1bc 0f00 	cmp.w	ip, #0
90023ff2:	f2c0 81c8 	blt.w	90024386 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023ff6:	f10e 38ff 	add.w	r8, lr, #4294967295
90023ffa:	45c4      	cmp	ip, r8
90023ffc:	f280 81c3 	bge.w	90024386 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90024000:	b209      	sxth	r1, r1
90024002:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90024004:	fb0c 3301 	mla	r3, ip, r1, r3
90024008:	eb04 0803 	add.w	r8, r4, r3
9002400c:	5ce3      	ldrb	r3, [r4, r3]
9002400e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90024012:	ea4f 6e13 	mov.w	lr, r3, lsr #24
90024016:	2a00      	cmp	r2, #0
90024018:	f000 81aa 	beq.w	90024370 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
9002401c:	f898 c001 	ldrb.w	ip, [r8, #1]
90024020:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90024024:	940b      	str	r4, [sp, #44]	@ 0x2c
90024026:	0e24      	lsrs	r4, r4, #24
90024028:	9412      	str	r4, [sp, #72]	@ 0x48
9002402a:	b178      	cbz	r0, 9002404c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
9002402c:	eb08 0c01 	add.w	ip, r8, r1
90024030:	f818 1001 	ldrb.w	r1, [r8, r1]
90024034:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90024038:	9108      	str	r1, [sp, #32]
9002403a:	0e09      	lsrs	r1, r1, #24
9002403c:	9110      	str	r1, [sp, #64]	@ 0x40
9002403e:	f89c 1001 	ldrb.w	r1, [ip, #1]
90024042:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90024046:	910c      	str	r1, [sp, #48]	@ 0x30
90024048:	0e09      	lsrs	r1, r1, #24
9002404a:	9113      	str	r1, [sp, #76]	@ 0x4c
9002404c:	b292      	uxth	r2, r2
9002404e:	9912      	ldr	r1, [sp, #72]	@ 0x48
90024050:	b280      	uxth	r0, r0
90024052:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90024054:	fb02 f900 	mul.w	r9, r2, r0
90024058:	0112      	lsls	r2, r2, #4
9002405a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
9002405e:	eba2 0809 	sub.w	r8, r2, r9
90024062:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90024066:	b280      	uxth	r0, r0
90024068:	fa1f f888 	uxth.w	r8, r8
9002406c:	1a12      	subs	r2, r2, r0
9002406e:	fb08 f101 	mul.w	r1, r8, r1
90024072:	b292      	uxth	r2, r2
90024074:	fb02 110e 	mla	r1, r2, lr, r1
90024078:	fb00 1104 	mla	r1, r0, r4, r1
9002407c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9002407e:	fb09 1104 	mla	r1, r9, r4, r1
90024082:	f3c1 2107 	ubfx	r1, r1, #8, #8
90024086:	2900      	cmp	r1, #0
90024088:	f000 80f5 	beq.w	90024276 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9002408c:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90024090:	d01b      	beq.n	900240ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90024092:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90024096:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002409a:	fb0e fa0a 	mul.w	sl, lr, sl
9002409e:	fb0e fe03 	mul.w	lr, lr, r3
900240a2:	ea4f 231a 	mov.w	r3, sl, lsr #8
900240a6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900240aa:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
900240ae:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900240b2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900240b6:	4453      	add	r3, sl
900240b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900240bc:	0a1b      	lsrs	r3, r3, #8
900240be:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900240c2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900240c6:	ea43 030c 	orr.w	r3, r3, ip
900240ca:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900240cc:	2cff      	cmp	r4, #255	@ 0xff
900240ce:	d021      	beq.n	90024114 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
900240d0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900240d2:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
900240d6:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900240d8:	fb04 fb0b 	mul.w	fp, r4, fp
900240dc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900240de:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900240e2:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900240e4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900240e8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900240ec:	fb04 fa0a 	mul.w	sl, r4, sl
900240f0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900240f4:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900240f8:	44de      	add	lr, fp
900240fa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900240fe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024102:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024106:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002410a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002410e:	ea4e 040a 	orr.w	r4, lr, sl
90024112:	940b      	str	r4, [sp, #44]	@ 0x2c
90024114:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90024116:	2cff      	cmp	r4, #255	@ 0xff
90024118:	d021      	beq.n	9002415e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9002411a:	9c08      	ldr	r4, [sp, #32]
9002411c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90024120:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90024122:	fb04 fb0b 	mul.w	fp, r4, fp
90024126:	9c08      	ldr	r4, [sp, #32]
90024128:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
9002412c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
9002412e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90024132:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90024136:	fb04 fa0a 	mul.w	sl, r4, sl
9002413a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002413e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90024142:	44de      	add	lr, fp
90024144:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90024148:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002414c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024150:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024154:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024158:	ea4e 040a 	orr.w	r4, lr, sl
9002415c:	9408      	str	r4, [sp, #32]
9002415e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90024160:	2cff      	cmp	r4, #255	@ 0xff
90024162:	d021      	beq.n	900241a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
90024164:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90024166:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
9002416a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9002416c:	fb04 fb0b 	mul.w	fp, r4, fp
90024170:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90024172:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90024176:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90024178:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002417c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90024180:	fb04 fa0a 	mul.w	sl, r4, sl
90024184:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024188:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
9002418c:	44de      	add	lr, fp
9002418e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90024192:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024196:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002419a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002419e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900241a2:	ea4e 040a 	orr.w	r4, lr, sl
900241a6:	940c      	str	r4, [sp, #48]	@ 0x30
900241a8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900241aa:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
900241ae:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900241b2:	43c9      	mvns	r1, r1
900241b4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900241b8:	9c08      	ldr	r4, [sp, #32]
900241ba:	fb08 fc0c 	mul.w	ip, r8, ip
900241be:	fb02 cc0e 	mla	ip, r2, lr, ip
900241c2:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
900241c6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
900241c8:	fb00 cc0e 	mla	ip, r0, lr, ip
900241cc:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
900241d0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900241d2:	fb09 cc0e 	mla	ip, r9, lr, ip
900241d6:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
900241da:	fb08 f80e 	mul.w	r8, r8, lr
900241de:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900241e2:	fa5f fe81 	uxtb.w	lr, r1
900241e6:	fb02 8303 	mla	r3, r2, r3, r8
900241ea:	9a08      	ldr	r2, [sp, #32]
900241ec:	f8b7 8000 	ldrh.w	r8, [r7]
900241f0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900241f4:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
900241f8:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
900241fa:	ea4f 01c8 	mov.w	r1, r8, lsl #3
900241fe:	fb00 330a 	mla	r3, r0, sl, r3
90024202:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
90024206:	ea4f 2228 	mov.w	r2, r8, asr #8
9002420a:	fb09 3900 	mla	r9, r9, r0, r3
9002420e:	ea4f 00e8 	mov.w	r0, r8, asr #3
90024212:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90024216:	b2c9      	uxtb	r1, r1
90024218:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002421c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90024220:	fb02 f20e 	mul.w	r2, r2, lr
90024224:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90024228:	fb00 f00e 	mul.w	r0, r0, lr
9002422c:	1c53      	adds	r3, r2, #1
9002422e:	fb01 f10e 	mul.w	r1, r1, lr
90024232:	ea4c 0c09 	orr.w	ip, ip, r9
90024236:	eb03 2212 	add.w	r2, r3, r2, lsr #8
9002423a:	ea4f 431c 	mov.w	r3, ip, lsr #16
9002423e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90024242:	4a60      	ldr	r2, [pc, #384]	@ (900243c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
90024244:	b2db      	uxtb	r3, r3
90024246:	ea02 2203 	and.w	r2, r2, r3, lsl #8
9002424a:	1c43      	adds	r3, r0, #1
9002424c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90024250:	ea4f 231c 	mov.w	r3, ip, lsr #8
90024254:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90024258:	00db      	lsls	r3, r3, #3
9002425a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002425e:	4313      	orrs	r3, r2
90024260:	1c4a      	adds	r2, r1, #1
90024262:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90024266:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
9002426a:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
9002426e:	ea4c 0c03 	orr.w	ip, ip, r3
90024272:	f8a7 c000 	strh.w	ip, [r7]
90024276:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90024278:	3702      	adds	r7, #2
9002427a:	9a25      	ldr	r2, [sp, #148]	@ 0x94
9002427c:	441a      	add	r2, r3
9002427e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024280:	441d      	add	r5, r3
90024282:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90024284:	9225      	str	r2, [sp, #148]	@ 0x94
90024286:	3b01      	subs	r3, #1
90024288:	9317      	str	r3, [sp, #92]	@ 0x5c
9002428a:	e699      	b.n	90023fc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9002428c:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
9002428e:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90024290:	441c      	add	r4, r3
90024292:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024294:	441d      	add	r5, r3
90024296:	9b07      	ldr	r3, [sp, #28]
90024298:	9425      	str	r4, [sp, #148]	@ 0x94
9002429a:	3b01      	subs	r3, #1
9002429c:	9307      	str	r3, [sp, #28]
9002429e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900242a0:	3302      	adds	r3, #2
900242a2:	930a      	str	r3, [sp, #40]	@ 0x28
900242a4:	e66c      	b.n	90023f80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
900242a6:	d024      	beq.n	900242f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
900242a8:	9b07      	ldr	r3, [sp, #28]
900242aa:	9827      	ldr	r0, [sp, #156]	@ 0x9c
900242ac:	3b01      	subs	r3, #1
900242ae:	9c25      	ldr	r4, [sp, #148]	@ 0x94
900242b0:	fb00 4003 	mla	r0, r0, r3, r4
900242b4:	1400      	asrs	r0, r0, #16
900242b6:	f53f ae80 	bmi.w	90023fba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900242ba:	3901      	subs	r1, #1
900242bc:	4288      	cmp	r0, r1
900242be:	f6bf ae7c 	bge.w	90023fba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900242c2:	9928      	ldr	r1, [sp, #160]	@ 0xa0
900242c4:	fb01 5303 	mla	r3, r1, r3, r5
900242c8:	141b      	asrs	r3, r3, #16
900242ca:	f53f ae76 	bmi.w	90023fba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900242ce:	3a01      	subs	r2, #1
900242d0:	4293      	cmp	r3, r2
900242d2:	f6bf ae72 	bge.w	90023fba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900242d6:	f8dd b01c 	ldr.w	fp, [sp, #28]
900242da:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
900242de:	f1bb 0f00 	cmp.w	fp, #0
900242e2:	dc71      	bgt.n	900243c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900242e4:	9b07      	ldr	r3, [sp, #28]
900242e6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900242ea:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900242ec:	eb03 0344 	add.w	r3, r3, r4, lsl #1
900242f0:	930a      	str	r3, [sp, #40]	@ 0x28
900242f2:	9b16      	ldr	r3, [sp, #88]	@ 0x58
900242f4:	2b00      	cmp	r3, #0
900242f6:	f340 81af 	ble.w	90024658 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
900242fa:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900242fe:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024300:	ee30 0a04 	vadd.f32	s0, s0, s8
90024304:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024308:	eef0 6a62 	vmov.f32	s13, s5
9002430c:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024310:	ee31 1a05 	vadd.f32	s2, s2, s10
90024314:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024318:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
9002431c:	eef0 6a43 	vmov.f32	s13, s6
90024320:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024324:	ee16 5a90 	vmov	r5, s13
90024328:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002432c:	ee61 7a27 	vmul.f32	s15, s2, s15
90024330:	ee77 2a62 	vsub.f32	s5, s14, s5
90024334:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024338:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002433c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024340:	ee12 2a90 	vmov	r2, s5
90024344:	eef0 2a47 	vmov.f32	s5, s14
90024348:	fb92 f3f3 	sdiv	r3, r2, r3
9002434c:	ee13 2a10 	vmov	r2, s6
90024350:	9327      	str	r3, [sp, #156]	@ 0x9c
90024352:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024354:	eeb0 3a67 	vmov.f32	s6, s15
90024358:	fb92 f3f3 	sdiv	r3, r2, r3
9002435c:	9328      	str	r3, [sp, #160]	@ 0xa0
9002435e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90024360:	9a18      	ldr	r2, [sp, #96]	@ 0x60
90024362:	3b01      	subs	r3, #1
90024364:	9316      	str	r3, [sp, #88]	@ 0x58
90024366:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024368:	bf08      	it	eq
9002436a:	4613      	moveq	r3, r2
9002436c:	9307      	str	r3, [sp, #28]
9002436e:	e5f9      	b.n	90023f64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90024370:	2800      	cmp	r0, #0
90024372:	f43f ae6b 	beq.w	9002404c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90024376:	f818 1001 	ldrb.w	r1, [r8, r1]
9002437a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002437e:	9108      	str	r1, [sp, #32]
90024380:	0e09      	lsrs	r1, r1, #24
90024382:	9110      	str	r1, [sp, #64]	@ 0x40
90024384:	e662      	b.n	9002404c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90024386:	f113 0801 	adds.w	r8, r3, #1
9002438a:	f53f af74 	bmi.w	90024276 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9002438e:	4541      	cmp	r1, r8
90024390:	f6ff af71 	blt.w	90024276 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90024394:	f11c 0801 	adds.w	r8, ip, #1
90024398:	f53f af6d 	bmi.w	90024276 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9002439c:	45c6      	cmp	lr, r8
9002439e:	f6ff af6a 	blt.w	90024276 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900243a2:	b209      	sxth	r1, r1
900243a4:	e9cd 3c02 	strd	r3, ip, [sp, #8]
900243a8:	fa0f f38e 	sxth.w	r3, lr
900243ac:	9100      	str	r1, [sp, #0]
900243ae:	4639      	mov	r1, r7
900243b0:	9301      	str	r3, [sp, #4]
900243b2:	4633      	mov	r3, r6
900243b4:	e9cd 2004 	strd	r2, r0, [sp, #16]
900243b8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900243ba:	9819      	ldr	r0, [sp, #100]	@ 0x64
900243bc:	f7ff fc7b 	bl	90023cb6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
900243c0:	e759      	b.n	90024276 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900243c2:	bf00      	nop
900243c4:	fffff800 	.word	0xfffff800
900243c8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
900243ca:	f3c5 3003 	ubfx	r0, r5, #12, #4
900243ce:	9c25      	ldr	r4, [sp, #148]	@ 0x94
900243d0:	f3c3 3203 	ubfx	r2, r3, #12, #4
900243d4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900243d6:	1427      	asrs	r7, r4, #16
900243d8:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
900243da:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900243de:	142b      	asrs	r3, r5, #16
900243e0:	fb01 7303 	mla	r3, r1, r3, r7
900243e4:	18e7      	adds	r7, r4, r3
900243e6:	5ce3      	ldrb	r3, [r4, r3]
900243e8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
900243ec:	ea4f 6c13 	mov.w	ip, r3, lsr #24
900243f0:	2a00      	cmp	r2, #0
900243f2:	f000 8127 	beq.w	90024644 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
900243f6:	f897 e001 	ldrb.w	lr, [r7, #1]
900243fa:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
900243fe:	940d      	str	r4, [sp, #52]	@ 0x34
90024400:	0e24      	lsrs	r4, r4, #24
90024402:	9414      	str	r4, [sp, #80]	@ 0x50
90024404:	b170      	cbz	r0, 90024424 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90024406:	eb07 0e01 	add.w	lr, r7, r1
9002440a:	5c79      	ldrb	r1, [r7, r1]
9002440c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90024410:	9109      	str	r1, [sp, #36]	@ 0x24
90024412:	0e09      	lsrs	r1, r1, #24
90024414:	9111      	str	r1, [sp, #68]	@ 0x44
90024416:	f89e 1001 	ldrb.w	r1, [lr, #1]
9002441a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002441e:	910e      	str	r1, [sp, #56]	@ 0x38
90024420:	0e09      	lsrs	r1, r1, #24
90024422:	9115      	str	r1, [sp, #84]	@ 0x54
90024424:	b292      	uxth	r2, r2
90024426:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90024428:	b280      	uxth	r0, r0
9002442a:	fb02 f800 	mul.w	r8, r2, r0
9002442e:	0112      	lsls	r2, r2, #4
90024430:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90024434:	eba2 0e08 	sub.w	lr, r2, r8
90024438:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
9002443c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9002443e:	b280      	uxth	r0, r0
90024440:	fa1f fe8e 	uxth.w	lr, lr
90024444:	1a09      	subs	r1, r1, r0
90024446:	fb0e f202 	mul.w	r2, lr, r2
9002444a:	b289      	uxth	r1, r1
9002444c:	fb01 220c 	mla	r2, r1, ip, r2
90024450:	fb00 2204 	mla	r2, r0, r4, r2
90024454:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90024456:	fb08 2204 	mla	r2, r8, r4, r2
9002445a:	f3c2 2207 	ubfx	r2, r2, #8, #8
9002445e:	2a00      	cmp	r2, #0
90024460:	f000 80e5 	beq.w	9002462e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
90024464:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90024468:	d019      	beq.n	9002449e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
9002446a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
9002446e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90024472:	fb0c fa0a 	mul.w	sl, ip, sl
90024476:	fb0c fc03 	mul.w	ip, ip, r3
9002447a:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002447e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90024482:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90024486:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
9002448a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9002448e:	4453      	add	r3, sl
90024490:	0a3f      	lsrs	r7, r7, #8
90024492:	0a1b      	lsrs	r3, r3, #8
90024494:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90024498:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
9002449c:	433b      	orrs	r3, r7
9002449e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900244a0:	2cff      	cmp	r4, #255	@ 0xff
900244a2:	d020      	beq.n	900244e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
900244a4:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900244a6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
900244aa:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900244ac:	4367      	muls	r7, r4
900244ae:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900244b0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900244b4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900244b8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900244ba:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900244be:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900244c2:	fb04 fa0a 	mul.w	sl, r4, sl
900244c6:	44bc      	add	ip, r7
900244c8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900244cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900244d0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900244d4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900244d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900244dc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900244e0:	ea4c 040a 	orr.w	r4, ip, sl
900244e4:	940d      	str	r4, [sp, #52]	@ 0x34
900244e6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
900244e8:	2cff      	cmp	r4, #255	@ 0xff
900244ea:	d020      	beq.n	9002452e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
900244ec:	9c09      	ldr	r4, [sp, #36]	@ 0x24
900244ee:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
900244f2:	9c11      	ldr	r4, [sp, #68]	@ 0x44
900244f4:	4367      	muls	r7, r4
900244f6:	9c09      	ldr	r4, [sp, #36]	@ 0x24
900244f8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900244fc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90024500:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90024502:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90024506:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002450a:	fb04 fa0a 	mul.w	sl, r4, sl
9002450e:	44bc      	add	ip, r7
90024510:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90024514:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024518:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9002451c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024520:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024524:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024528:	ea4c 040a 	orr.w	r4, ip, sl
9002452c:	9409      	str	r4, [sp, #36]	@ 0x24
9002452e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90024530:	2cff      	cmp	r4, #255	@ 0xff
90024532:	d020      	beq.n	90024576 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
90024534:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90024536:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
9002453a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9002453c:	4367      	muls	r7, r4
9002453e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90024540:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024544:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90024548:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9002454a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002454e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024552:	fb04 fa0a 	mul.w	sl, r4, sl
90024556:	44bc      	add	ip, r7
90024558:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
9002455c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024560:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90024564:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024568:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002456c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024570:	ea4c 040a 	orr.w	r4, ip, sl
90024574:	940e      	str	r4, [sp, #56]	@ 0x38
90024576:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90024578:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
9002457c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90024580:	43d2      	mvns	r2, r2
90024582:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90024586:	9c09      	ldr	r4, [sp, #36]	@ 0x24
90024588:	b2d2      	uxtb	r2, r2
9002458a:	fb0e f707 	mul.w	r7, lr, r7
9002458e:	fb01 770c 	mla	r7, r1, ip, r7
90024592:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90024596:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90024598:	fb00 770c 	mla	r7, r0, ip, r7
9002459c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900245a0:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900245a2:	fb08 770c 	mla	r7, r8, ip, r7
900245a6:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
900245aa:	fb0e fe0c 	mul.w	lr, lr, ip
900245ae:	0a3f      	lsrs	r7, r7, #8
900245b0:	fb01 e303 	mla	r3, r1, r3, lr
900245b4:	9909      	ldr	r1, [sp, #36]	@ 0x24
900245b6:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
900245ba:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
900245be:	990e      	ldr	r1, [sp, #56]	@ 0x38
900245c0:	fb00 330a 	mla	r3, r0, sl, r3
900245c4:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
900245c8:	fb08 3c0c 	mla	ip, r8, ip, r3
900245cc:	f8b9 3000 	ldrh.w	r3, [r9]
900245d0:	1218      	asrs	r0, r3, #8
900245d2:	10d9      	asrs	r1, r3, #3
900245d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900245d8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
900245dc:	00db      	lsls	r3, r3, #3
900245de:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
900245e2:	4350      	muls	r0, r2
900245e4:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900245e8:	b2db      	uxtb	r3, r3
900245ea:	4351      	muls	r1, r2
900245ec:	ea47 070c 	orr.w	r7, r7, ip
900245f0:	4353      	muls	r3, r2
900245f2:	1c42      	adds	r2, r0, #1
900245f4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900245f8:	0c3a      	lsrs	r2, r7, #16
900245fa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900245fe:	4a18      	ldr	r2, [pc, #96]	@ (90024660 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
90024600:	b2c0      	uxtb	r0, r0
90024602:	ea02 2000 	and.w	r0, r2, r0, lsl #8
90024606:	1c4a      	adds	r2, r1, #1
90024608:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9002460c:	0a3a      	lsrs	r2, r7, #8
9002460e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90024612:	00c9      	lsls	r1, r1, #3
90024614:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90024618:	4301      	orrs	r1, r0
9002461a:	1c58      	adds	r0, r3, #1
9002461c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90024620:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90024624:	f3c7 00c4 	ubfx	r0, r7, #3, #5
90024628:	4308      	orrs	r0, r1
9002462a:	f8a9 0000 	strh.w	r0, [r9]
9002462e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90024630:	f109 0902 	add.w	r9, r9, #2
90024634:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90024636:	f10b 3bff 	add.w	fp, fp, #4294967295
9002463a:	441a      	add	r2, r3
9002463c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002463e:	9225      	str	r2, [sp, #148]	@ 0x94
90024640:	441d      	add	r5, r3
90024642:	e64c      	b.n	900242de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90024644:	2800      	cmp	r0, #0
90024646:	f43f aeed 	beq.w	90024424 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
9002464a:	5c79      	ldrb	r1, [r7, r1]
9002464c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90024650:	9109      	str	r1, [sp, #36]	@ 0x24
90024652:	0e09      	lsrs	r1, r1, #24
90024654:	9111      	str	r1, [sp, #68]	@ 0x44
90024656:	e6e5      	b.n	90024424 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90024658:	b01b      	add	sp, #108	@ 0x6c
9002465a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002465e:	bf00      	nop
90024660:	fffff800 	.word	0xfffff800

90024664 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
90024664:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024668:	b085      	sub	sp, #20
9002466a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
9002466e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
90024672:	2800      	cmp	r0, #0
90024674:	9103      	str	r1, [sp, #12]
90024676:	fb00 7406 	mla	r4, r0, r6, r7
9002467a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
9002467e:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
90024682:	eb02 0544 	add.w	r5, r2, r4, lsl #1
90024686:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
9002468a:	eb03 0904 	add.w	r9, r3, r4
9002468e:	9501      	str	r5, [sp, #4]
90024690:	f2c0 8150 	blt.w	90024934 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90024694:	4583      	cmp	fp, r0
90024696:	f340 814d 	ble.w	90024934 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
9002469a:	2f00      	cmp	r7, #0
9002469c:	f2c0 8146 	blt.w	9002492c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
900246a0:	42be      	cmp	r6, r7
900246a2:	f340 8143 	ble.w	9002492c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
900246a6:	f813 c004 	ldrb.w	ip, [r3, r4]
900246aa:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
900246ae:	f64f 041f 	movw	r4, #63519	@ 0xf81f
900246b2:	ea4f 02ec 	mov.w	r2, ip, asr #3
900246b6:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
900246ba:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900246be:	4355      	muls	r5, r2
900246c0:	fb0c f203 	mul.w	r2, ip, r3
900246c4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
900246c8:	f605 0501 	addw	r5, r5, #2049	@ 0x801
900246cc:	441d      	add	r5, r3
900246ce:	f102 0320 	add.w	r3, r2, #32
900246d2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900246d6:	ea04 1455 	and.w	r4, r4, r5, lsr #5
900246da:	0a1b      	lsrs	r3, r3, #8
900246dc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900246e0:	431c      	orrs	r4, r3
900246e2:	1c7b      	adds	r3, r7, #1
900246e4:	f100 812b 	bmi.w	9002493e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
900246e8:	429e      	cmp	r6, r3
900246ea:	f340 8128 	ble.w	9002493e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
900246ee:	2900      	cmp	r1, #0
900246f0:	f000 8128 	beq.w	90024944 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
900246f4:	9a01      	ldr	r2, [sp, #4]
900246f6:	f899 3001 	ldrb.w	r3, [r9, #1]
900246fa:	8855      	ldrh	r5, [r2, #2]
900246fc:	ea4f 08e3 	mov.w	r8, r3, asr #3
90024700:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
90024704:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90024708:	fb08 f802 	mul.w	r8, r8, r2
9002470c:	f64f 021f 	movw	r2, #63519	@ 0xf81f
90024710:	435d      	muls	r5, r3
90024712:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90024716:	f608 0801 	addw	r8, r8, #2049	@ 0x801
9002471a:	44d0      	add	r8, sl
9002471c:	f105 0a20 	add.w	sl, r5, #32
90024720:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90024724:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90024728:	0a2d      	lsrs	r5, r5, #8
9002472a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9002472e:	432a      	orrs	r2, r5
90024730:	3001      	adds	r0, #1
90024732:	f100 810d 	bmi.w	90024950 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90024736:	4583      	cmp	fp, r0
90024738:	f340 810a 	ble.w	90024950 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
9002473c:	f1be 0f00 	cmp.w	lr, #0
90024740:	f000 810b 	beq.w	9002495a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
90024744:	2f00      	cmp	r7, #0
90024746:	f2c0 8100 	blt.w	9002494a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
9002474a:	42be      	cmp	r6, r7
9002474c:	f340 80fd 	ble.w	9002494a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90024750:	9801      	ldr	r0, [sp, #4]
90024752:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
90024756:	f819 5006 	ldrb.w	r5, [r9, r6]
9002475a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
9002475e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90024762:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
90024766:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9002476a:	fb0a fa00 	mul.w	sl, sl, r0
9002476e:	fb05 f808 	mul.w	r8, r5, r8
90024772:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90024776:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
9002477a:	4482      	add	sl, r0
9002477c:	f108 0020 	add.w	r0, r8, #32
90024780:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90024784:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90024788:	0a00      	lsrs	r0, r0, #8
9002478a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002478e:	ea4b 0b00 	orr.w	fp, fp, r0
90024792:	3701      	adds	r7, #1
90024794:	f100 80e6 	bmi.w	90024964 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90024798:	42be      	cmp	r6, r7
9002479a:	f340 80e3 	ble.w	90024964 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
9002479e:	2900      	cmp	r1, #0
900247a0:	f000 80e3 	beq.w	9002496a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
900247a4:	3601      	adds	r6, #1
900247a6:	9801      	ldr	r0, [sp, #4]
900247a8:	f819 7006 	ldrb.w	r7, [r9, r6]
900247ac:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
900247b0:	ea4f 09e7 	mov.w	r9, r7, asr #3
900247b4:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
900247b8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900247bc:	fb09 f906 	mul.w	r9, r9, r6
900247c0:	fb07 f800 	mul.w	r8, r7, r0
900247c4:	f64f 001f 	movw	r0, #63519	@ 0xf81f
900247c8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
900247cc:	f609 0901 	addw	r9, r9, #2049	@ 0x801
900247d0:	44d1      	add	r9, sl
900247d2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
900247d6:	f108 0020 	add.w	r0, r8, #32
900247da:	eb00 2018 	add.w	r0, r0, r8, lsr #8
900247de:	0a00      	lsrs	r0, r0, #8
900247e0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900247e4:	4330      	orrs	r0, r6
900247e6:	b28e      	uxth	r6, r1
900247e8:	fa1f f98e 	uxth.w	r9, lr
900247ec:	ea4f 4a04 	mov.w	sl, r4, lsl #16
900247f0:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
900247f4:	fb06 f809 	mul.w	r8, r6, r9
900247f8:	0136      	lsls	r6, r6, #4
900247fa:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900247fe:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
90024802:	9601      	str	r6, [sp, #4]
90024804:	ea4a 0404 	orr.w	r4, sl, r4
90024808:	ea4f 4a02 	mov.w	sl, r2, lsl #16
9002480c:	fa1f f689 	uxth.w	r6, r9
90024810:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90024814:	fb11 f90e 	smulbb	r9, r1, lr
90024818:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002481c:	9602      	str	r6, [sp, #8]
9002481e:	4626      	mov	r6, r4
90024820:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90024824:	f1ce 0410 	rsb	r4, lr, #16
90024828:	ea4a 0202 	orr.w	r2, sl, r2
9002482c:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90024830:	1a64      	subs	r4, r4, r1
90024832:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90024836:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002483a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9002483e:	434a      	muls	r2, r1
90024840:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90024844:	ea4a 0000 	orr.w	r0, sl, r0
90024848:	9903      	ldr	r1, [sp, #12]
9002484a:	fb04 2406 	mla	r4, r4, r6, r2
9002484e:	9e02      	ldr	r6, [sp, #8]
90024850:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90024854:	fb09 4200 	mla	r2, r9, r0, r4
90024858:	ea4f 440b 	mov.w	r4, fp, lsl #16
9002485c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90024860:	8808      	ldrh	r0, [r1, #0]
90024862:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90024866:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
9002486a:	ea44 0b0b 	orr.w	fp, r4, fp
9002486e:	9c01      	ldr	r4, [sp, #4]
90024870:	b289      	uxth	r1, r1
90024872:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
90024876:	fb0e 2e0b 	mla	lr, lr, fp, r2
9002487a:	1ba4      	subs	r4, r4, r6
9002487c:	9e01      	ldr	r6, [sp, #4]
9002487e:	ea4f 525e 	mov.w	r2, lr, lsr #21
90024882:	eba6 0608 	sub.w	r6, r6, r8
90024886:	b2a4      	uxth	r4, r4
90024888:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9002488c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024890:	b2b6      	uxth	r6, r6
90024892:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90024896:	4373      	muls	r3, r6
90024898:	ea42 0e0e 	orr.w	lr, r2, lr
9002489c:	fb0c 3304 	mla	r3, ip, r4, r3
900248a0:	9c02      	ldr	r4, [sp, #8]
900248a2:	fa1f f28e 	uxth.w	r2, lr
900248a6:	fb04 3505 	mla	r5, r4, r5, r3
900248aa:	10d4      	asrs	r4, r2, #3
900248ac:	fb08 5707 	mla	r7, r8, r7, r5
900248b0:	1215      	asrs	r5, r2, #8
900248b2:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
900248b6:	00d2      	lsls	r2, r2, #3
900248b8:	f3c7 2707 	ubfx	r7, r7, #8, #8
900248bc:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900248c0:	b2d2      	uxtb	r2, r2
900248c2:	434f      	muls	r7, r1
900248c4:	1c7b      	adds	r3, r7, #1
900248c6:	eb03 2717 	add.w	r7, r3, r7, lsr #8
900248ca:	1203      	asrs	r3, r0, #8
900248cc:	ea6f 2717 	mvn.w	r7, r7, lsr #8
900248d0:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
900248d4:	b2ff      	uxtb	r7, r7
900248d6:	fb13 f307 	smulbb	r3, r3, r7
900248da:	fb05 3501 	mla	r5, r5, r1, r3
900248de:	10c3      	asrs	r3, r0, #3
900248e0:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
900248e4:	b2ad      	uxth	r5, r5
900248e6:	fb13 f307 	smulbb	r3, r3, r7
900248ea:	fb04 3401 	mla	r4, r4, r1, r3
900248ee:	00c3      	lsls	r3, r0, #3
900248f0:	b2db      	uxtb	r3, r3
900248f2:	b2a4      	uxth	r4, r4
900248f4:	fb13 f307 	smulbb	r3, r3, r7
900248f8:	fb02 3101 	mla	r1, r2, r1, r3
900248fc:	1c6b      	adds	r3, r5, #1
900248fe:	1c62      	adds	r2, r4, #1
90024900:	b289      	uxth	r1, r1
90024902:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90024906:	1c4b      	adds	r3, r1, #1
90024908:	eb02 2414 	add.w	r4, r2, r4, lsr #8
9002490c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90024910:	9a03      	ldr	r2, [sp, #12]
90024912:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90024916:	0964      	lsrs	r4, r4, #5
90024918:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002491c:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90024920:	432b      	orrs	r3, r5
90024922:	4323      	orrs	r3, r4
90024924:	8013      	strh	r3, [r2, #0]
90024926:	b005      	add	sp, #20
90024928:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002492c:	f04f 0c00 	mov.w	ip, #0
90024930:	4664      	mov	r4, ip
90024932:	e6d6      	b.n	900246e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
90024934:	2300      	movs	r3, #0
90024936:	469c      	mov	ip, r3
90024938:	461a      	mov	r2, r3
9002493a:	461c      	mov	r4, r3
9002493c:	e6f8      	b.n	90024730 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
9002493e:	2300      	movs	r3, #0
90024940:	461a      	mov	r2, r3
90024942:	e6f5      	b.n	90024730 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90024944:	460b      	mov	r3, r1
90024946:	460a      	mov	r2, r1
90024948:	e6f2      	b.n	90024730 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
9002494a:	2500      	movs	r5, #0
9002494c:	46ab      	mov	fp, r5
9002494e:	e720      	b.n	90024792 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
90024950:	2700      	movs	r7, #0
90024952:	463d      	mov	r5, r7
90024954:	4638      	mov	r0, r7
90024956:	46bb      	mov	fp, r7
90024958:	e745      	b.n	900247e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
9002495a:	4677      	mov	r7, lr
9002495c:	4675      	mov	r5, lr
9002495e:	4670      	mov	r0, lr
90024960:	46f3      	mov	fp, lr
90024962:	e740      	b.n	900247e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90024964:	2700      	movs	r7, #0
90024966:	4638      	mov	r0, r7
90024968:	e73d      	b.n	900247e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
9002496a:	460f      	mov	r7, r1
9002496c:	4608      	mov	r0, r1
9002496e:	e73a      	b.n	900247e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

90024970 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024970:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024974:	b097      	sub	sp, #92	@ 0x5c
90024976:	9214      	str	r2, [sp, #80]	@ 0x50
90024978:	9308      	str	r3, [sp, #32]
9002497a:	9a25      	ldr	r2, [sp, #148]	@ 0x94
9002497c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
90024980:	9015      	str	r0, [sp, #84]	@ 0x54
90024982:	9312      	str	r3, [sp, #72]	@ 0x48
90024984:	6850      	ldr	r0, [r2, #4]
90024986:	9111      	str	r1, [sp, #68]	@ 0x44
90024988:	6812      	ldr	r2, [r2, #0]
9002498a:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
9002498e:	fb00 1303 	mla	r3, r0, r3, r1
90024992:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90024996:	9309      	str	r3, [sp, #36]	@ 0x24
90024998:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002499a:	681b      	ldr	r3, [r3, #0]
9002499c:	930b      	str	r3, [sp, #44]	@ 0x2c
9002499e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900249a0:	685b      	ldr	r3, [r3, #4]
900249a2:	930c      	str	r3, [sp, #48]	@ 0x30
900249a4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
900249a8:	930a      	str	r3, [sp, #40]	@ 0x28
900249aa:	9b11      	ldr	r3, [sp, #68]	@ 0x44
900249ac:	2b00      	cmp	r3, #0
900249ae:	dc03      	bgt.n	900249b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900249b0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
900249b2:	2b00      	cmp	r3, #0
900249b4:	f340 83cd 	ble.w	90025152 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
900249b8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900249ba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900249be:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900249c2:	1e48      	subs	r0, r1, #1
900249c4:	1e55      	subs	r5, r2, #1
900249c6:	9b08      	ldr	r3, [sp, #32]
900249c8:	2b00      	cmp	r3, #0
900249ca:	f340 81a5 	ble.w	90024d18 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
900249ce:	9e21      	ldr	r6, [sp, #132]	@ 0x84
900249d0:	9b22      	ldr	r3, [sp, #136]	@ 0x88
900249d2:	1436      	asrs	r6, r6, #16
900249d4:	ea4f 4323 	mov.w	r3, r3, asr #16
900249d8:	d406      	bmi.n	900249e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900249da:	4286      	cmp	r6, r0
900249dc:	da04      	bge.n	900249e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900249de:	2b00      	cmp	r3, #0
900249e0:	db02      	blt.n	900249e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900249e2:	42ab      	cmp	r3, r5
900249e4:	f2c0 8199 	blt.w	90024d1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
900249e8:	3601      	adds	r6, #1
900249ea:	f100 8186 	bmi.w	90024cfa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900249ee:	42b1      	cmp	r1, r6
900249f0:	f2c0 8183 	blt.w	90024cfa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900249f4:	3301      	adds	r3, #1
900249f6:	f100 8180 	bmi.w	90024cfa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900249fa:	429a      	cmp	r2, r3
900249fc:	f2c0 817d 	blt.w	90024cfa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90024a00:	9b08      	ldr	r3, [sp, #32]
90024a02:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90024a06:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90024a08:	9313      	str	r3, [sp, #76]	@ 0x4c
90024a0a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90024a0c:	2b00      	cmp	r3, #0
90024a0e:	f340 81a6 	ble.w	90024d5e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90024a12:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90024a14:	9d21      	ldr	r5, [sp, #132]	@ 0x84
90024a16:	1418      	asrs	r0, r3, #16
90024a18:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90024a1a:	142d      	asrs	r5, r5, #16
90024a1c:	f3c3 3103 	ubfx	r1, r3, #12, #4
90024a20:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90024a22:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90024a26:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024a28:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90024a2c:	f100 81fa 	bmi.w	90024e24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90024a30:	f102 3eff 	add.w	lr, r2, #4294967295
90024a34:	4575      	cmp	r5, lr
90024a36:	f280 81f5 	bge.w	90024e24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90024a3a:	2800      	cmp	r0, #0
90024a3c:	f2c0 81f2 	blt.w	90024e24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90024a40:	f103 3eff 	add.w	lr, r3, #4294967295
90024a44:	4570      	cmp	r0, lr
90024a46:	f280 81ed 	bge.w	90024e24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90024a4a:	b212      	sxth	r2, r2
90024a4c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90024a4e:	fa1f fe81 	uxth.w	lr, r1
90024a52:	fb00 5002 	mla	r0, r0, r2, r5
90024a56:	ea4f 150e 	mov.w	r5, lr, lsl #4
90024a5a:	eb03 0a00 	add.w	sl, r3, r0
90024a5e:	f813 9000 	ldrb.w	r9, [r3, r0]
90024a62:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
90024a66:	f89a 8001 	ldrb.w	r8, [sl, #1]
90024a6a:	b29b      	uxth	r3, r3
90024a6c:	f1bc 0f00 	cmp.w	ip, #0
90024a70:	f000 81bb 	beq.w	90024dea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
90024a74:	f81a 4002 	ldrb.w	r4, [sl, r2]
90024a78:	eb0a 0b02 	add.w	fp, sl, r2
90024a7c:	fa1f fa8c 	uxth.w	sl, ip
90024a80:	940d      	str	r4, [sp, #52]	@ 0x34
90024a82:	fb0a fe0e 	mul.w	lr, sl, lr
90024a86:	f89b 4001 	ldrb.w	r4, [fp, #1]
90024a8a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90024a8e:	eba5 050e 	sub.w	r5, r5, lr
90024a92:	940e      	str	r4, [sp, #56]	@ 0x38
90024a94:	fa1f fa8a 	uxth.w	sl, sl
90024a98:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90024a9a:	b2ad      	uxth	r5, r5
90024a9c:	eba3 030a 	sub.w	r3, r3, sl
90024aa0:	fb08 f505 	mul.w	r5, r8, r5
90024aa4:	b29b      	uxth	r3, r3
90024aa6:	fb09 5303 	mla	r3, r9, r3, r5
90024aaa:	fb0a 3304 	mla	r3, sl, r4, r3
90024aae:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90024ab0:	fb0e 3304 	mla	r3, lr, r4, r3
90024ab4:	f3c3 2307 	ubfx	r3, r3, #8, #8
90024ab8:	2b00      	cmp	r3, #0
90024aba:	f000 8111 	beq.w	90024ce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024abe:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90024ac0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90024ac4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90024ac8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90024acc:	f000 8192 	beq.w	90024df4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
90024ad0:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90024ad4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90024ad8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024adc:	fb0a fe0e 	mul.w	lr, sl, lr
90024ae0:	fb09 f000 	mul.w	r0, r9, r0
90024ae4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90024ae8:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90024aec:	f100 0b20 	add.w	fp, r0, #32
90024af0:	44ce      	add	lr, r9
90024af2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
90024af6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90024afa:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024afe:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90024b02:	ea4e 0909 	orr.w	r9, lr, r9
90024b06:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90024b0a:	8868      	ldrh	r0, [r5, #2]
90024b0c:	d019      	beq.n	90024b42 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
90024b0e:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90024b12:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90024b16:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024b1a:	fb0a fe0e 	mul.w	lr, sl, lr
90024b1e:	fb08 f800 	mul.w	r8, r8, r0
90024b22:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90024b26:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90024b2a:	f108 0b20 	add.w	fp, r8, #32
90024b2e:	4486      	add	lr, r0
90024b30:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90024b34:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90024b38:	0a00      	lsrs	r0, r0, #8
90024b3a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024b3e:	ea4e 0000 	orr.w	r0, lr, r0
90024b42:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90024b46:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90024b4a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90024b4e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90024b52:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90024b56:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024b5a:	ea4e 0909 	orr.w	r9, lr, r9
90024b5e:	ea4a 0000 	orr.w	r0, sl, r0
90024b62:	f1bc 0f00 	cmp.w	ip, #0
90024b66:	f000 8147 	beq.w	90024df8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
90024b6a:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
90024b6e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90024b70:	3a01      	subs	r2, #1
90024b72:	2cff      	cmp	r4, #255	@ 0xff
90024b74:	ea4f 0242 	mov.w	r2, r2, lsl #1
90024b78:	f102 0202 	add.w	r2, r2, #2
90024b7c:	eb05 0e02 	add.w	lr, r5, r2
90024b80:	5aaa      	ldrh	r2, [r5, r2]
90024b82:	d018      	beq.n	90024bb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
90024b84:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
90024b88:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024b8c:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024b90:	fb04 fa02 	mul.w	sl, r4, r2
90024b94:	fb08 f805 	mul.w	r8, r8, r5
90024b98:	f10a 0520 	add.w	r5, sl, #32
90024b9c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90024ba0:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90024ba4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90024ba8:	4442      	add	r2, r8
90024baa:	0a2d      	lsrs	r5, r5, #8
90024bac:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90024bb0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90024bb4:	432a      	orrs	r2, r5
90024bb6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90024bb8:	f8be 5002 	ldrh.w	r5, [lr, #2]
90024bbc:	2cff      	cmp	r4, #255	@ 0xff
90024bbe:	d01a      	beq.n	90024bf6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
90024bc0:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
90024bc4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90024bc8:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024bcc:	fb04 fa05 	mul.w	sl, r4, r5
90024bd0:	fb08 f80e 	mul.w	r8, r8, lr
90024bd4:	f10a 0e20 	add.w	lr, sl, #32
90024bd8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90024bdc:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90024be0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
90024be4:	4445      	add	r5, r8
90024be6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024bea:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90024bee:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
90024bf2:	ea45 050e 	orr.w	r5, r5, lr
90024bf6:	fb1c fe01 	smulbb	lr, ip, r1
90024bfa:	f1cc 0810 	rsb	r8, ip, #16
90024bfe:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90024c02:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90024c06:	ea4f 0eee 	mov.w	lr, lr, asr #3
90024c0a:	eba8 0801 	sub.w	r8, r8, r1
90024c0e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90024c12:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024c16:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90024c1a:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90024c1e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90024c22:	ea4a 0202 	orr.w	r2, sl, r2
90024c26:	4341      	muls	r1, r0
90024c28:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90024c2c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90024c30:	fb09 1108 	mla	r1, r9, r8, r1
90024c34:	ea4b 0505 	orr.w	r5, fp, r5
90024c38:	fb0c 1102 	mla	r1, ip, r2, r1
90024c3c:	fb0e 1e05 	mla	lr, lr, r5, r1
90024c40:	ea4f 525e 	mov.w	r2, lr, lsr #21
90024c44:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90024c48:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024c4c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90024c50:	ea42 0e0e 	orr.w	lr, r2, lr
90024c54:	fa1f f28e 	uxth.w	r2, lr
90024c58:	2bff      	cmp	r3, #255	@ 0xff
90024c5a:	d103      	bne.n	90024c64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90024c5c:	9912      	ldr	r1, [sp, #72]	@ 0x48
90024c5e:	29ff      	cmp	r1, #255	@ 0xff
90024c60:	f000 80de 	beq.w	90024e20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
90024c64:	990a      	ldr	r1, [sp, #40]	@ 0x28
90024c66:	1215      	asrs	r5, r2, #8
90024c68:	8838      	ldrh	r0, [r7, #0]
90024c6a:	434b      	muls	r3, r1
90024c6c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90024c70:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90024c72:	f103 0c01 	add.w	ip, r3, #1
90024c76:	eb0c 2323 	add.w	r3, ip, r3, asr #8
90024c7a:	ea6f 2323 	mvn.w	r3, r3, asr #8
90024c7e:	fa5f fc83 	uxtb.w	ip, r3
90024c82:	1203      	asrs	r3, r0, #8
90024c84:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90024c88:	fb13 f30c 	smulbb	r3, r3, ip
90024c8c:	fb05 3501 	mla	r5, r5, r1, r3
90024c90:	10c3      	asrs	r3, r0, #3
90024c92:	10d1      	asrs	r1, r2, #3
90024c94:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90024c98:	00d2      	lsls	r2, r2, #3
90024c9a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90024c9e:	b2ad      	uxth	r5, r5
90024ca0:	fb13 f30c 	smulbb	r3, r3, ip
90024ca4:	b2d2      	uxtb	r2, r2
90024ca6:	fb01 3104 	mla	r1, r1, r4, r3
90024caa:	00c3      	lsls	r3, r0, #3
90024cac:	b2db      	uxtb	r3, r3
90024cae:	b289      	uxth	r1, r1
90024cb0:	fb13 f30c 	smulbb	r3, r3, ip
90024cb4:	fb02 3304 	mla	r3, r2, r4, r3
90024cb8:	b29a      	uxth	r2, r3
90024cba:	1c6b      	adds	r3, r5, #1
90024cbc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90024cc0:	1c53      	adds	r3, r2, #1
90024cc2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90024cc6:	1c4a      	adds	r2, r1, #1
90024cc8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90024ccc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90024cd0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024cd4:	0949      	lsrs	r1, r1, #5
90024cd6:	432b      	orrs	r3, r5
90024cd8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90024cdc:	430b      	orrs	r3, r1
90024cde:	803b      	strh	r3, [r7, #0]
90024ce0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90024ce2:	3702      	adds	r7, #2
90024ce4:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
90024ce6:	4413      	add	r3, r2
90024ce8:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90024cea:	9321      	str	r3, [sp, #132]	@ 0x84
90024cec:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024cee:	441a      	add	r2, r3
90024cf0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90024cf2:	3b01      	subs	r3, #1
90024cf4:	9222      	str	r2, [sp, #136]	@ 0x88
90024cf6:	9313      	str	r3, [sp, #76]	@ 0x4c
90024cf8:	e687      	b.n	90024a0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90024cfa:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90024cfc:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
90024cfe:	9c22      	ldr	r4, [sp, #136]	@ 0x88
90024d00:	4433      	add	r3, r6
90024d02:	9321      	str	r3, [sp, #132]	@ 0x84
90024d04:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024d06:	441c      	add	r4, r3
90024d08:	9b08      	ldr	r3, [sp, #32]
90024d0a:	3b01      	subs	r3, #1
90024d0c:	9422      	str	r4, [sp, #136]	@ 0x88
90024d0e:	9308      	str	r3, [sp, #32]
90024d10:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024d12:	3302      	adds	r3, #2
90024d14:	9309      	str	r3, [sp, #36]	@ 0x24
90024d16:	e656      	b.n	900249c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
90024d18:	d028      	beq.n	90024d6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
90024d1a:	9b08      	ldr	r3, [sp, #32]
90024d1c:	9823      	ldr	r0, [sp, #140]	@ 0x8c
90024d1e:	3b01      	subs	r3, #1
90024d20:	9d21      	ldr	r5, [sp, #132]	@ 0x84
90024d22:	fb00 5003 	mla	r0, r0, r3, r5
90024d26:	1400      	asrs	r0, r0, #16
90024d28:	f53f ae6a 	bmi.w	90024a00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90024d2c:	3901      	subs	r1, #1
90024d2e:	4288      	cmp	r0, r1
90024d30:	f6bf ae66 	bge.w	90024a00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90024d34:	9924      	ldr	r1, [sp, #144]	@ 0x90
90024d36:	9822      	ldr	r0, [sp, #136]	@ 0x88
90024d38:	fb01 0303 	mla	r3, r1, r3, r0
90024d3c:	141b      	asrs	r3, r3, #16
90024d3e:	f53f ae5f 	bmi.w	90024a00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90024d42:	3a01      	subs	r2, #1
90024d44:	4293      	cmp	r3, r2
90024d46:	f6bf ae5b 	bge.w	90024a00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90024d4a:	9b08      	ldr	r3, [sp, #32]
90024d4c:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90024d50:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
90024d54:	9313      	str	r3, [sp, #76]	@ 0x4c
90024d56:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90024d58:	2b00      	cmp	r3, #0
90024d5a:	f300 8082 	bgt.w	90024e62 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
90024d5e:	9b08      	ldr	r3, [sp, #32]
90024d60:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90024d64:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024d66:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90024d6a:	9309      	str	r3, [sp, #36]	@ 0x24
90024d6c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90024d6e:	2b00      	cmp	r3, #0
90024d70:	f340 81ef 	ble.w	90025152 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90024d74:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90024d78:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024d7a:	ee30 0a04 	vadd.f32	s0, s0, s8
90024d7e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024d82:	eef0 6a62 	vmov.f32	s13, s5
90024d86:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024d8a:	ee31 1a05 	vadd.f32	s2, s2, s10
90024d8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024d92:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
90024d96:	eef0 6a43 	vmov.f32	s13, s6
90024d9a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024d9e:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
90024da2:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024da6:	ee61 7a27 	vmul.f32	s15, s2, s15
90024daa:	ee77 2a62 	vsub.f32	s5, s14, s5
90024dae:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024db2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024db6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024dba:	ee12 2a90 	vmov	r2, s5
90024dbe:	eef0 2a47 	vmov.f32	s5, s14
90024dc2:	fb92 f3f3 	sdiv	r3, r2, r3
90024dc6:	ee13 2a10 	vmov	r2, s6
90024dca:	9323      	str	r3, [sp, #140]	@ 0x8c
90024dcc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024dce:	eeb0 3a67 	vmov.f32	s6, s15
90024dd2:	fb92 f3f3 	sdiv	r3, r2, r3
90024dd6:	9324      	str	r3, [sp, #144]	@ 0x90
90024dd8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90024dda:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90024ddc:	3b01      	subs	r3, #1
90024dde:	9311      	str	r3, [sp, #68]	@ 0x44
90024de0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024de2:	bf08      	it	eq
90024de4:	4613      	moveq	r3, r2
90024de6:	9308      	str	r3, [sp, #32]
90024de8:	e5df      	b.n	900249aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90024dea:	fb08 f505 	mul.w	r5, r8, r5
90024dee:	fb09 5303 	mla	r3, r9, r3, r5
90024df2:	e65f      	b.n	90024ab4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
90024df4:	4681      	mov	r9, r0
90024df6:	e686      	b.n	90024b06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90024df8:	f1c1 0210 	rsb	r2, r1, #16
90024dfc:	4341      	muls	r1, r0
90024dfe:	fb09 1902 	mla	r9, r9, r2, r1
90024e02:	ea4f 0949 	mov.w	r9, r9, lsl #1
90024e06:	ea4f 5259 	mov.w	r2, r9, lsr #21
90024e0a:	ea4f 1959 	mov.w	r9, r9, lsr #5
90024e0e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024e12:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90024e16:	ea42 0909 	orr.w	r9, r2, r9
90024e1a:	fa1f f289 	uxth.w	r2, r9
90024e1e:	e71b      	b.n	90024c58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90024e20:	803a      	strh	r2, [r7, #0]
90024e22:	e75d      	b.n	90024ce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024e24:	f115 0e01 	adds.w	lr, r5, #1
90024e28:	f53f af5a 	bmi.w	90024ce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024e2c:	4572      	cmp	r2, lr
90024e2e:	f6ff af57 	blt.w	90024ce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024e32:	f110 0e01 	adds.w	lr, r0, #1
90024e36:	f53f af53 	bmi.w	90024ce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024e3a:	4573      	cmp	r3, lr
90024e3c:	f6ff af50 	blt.w	90024ce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024e40:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90024e42:	b21b      	sxth	r3, r3
90024e44:	b212      	sxth	r2, r2
90024e46:	9502      	str	r5, [sp, #8]
90024e48:	9301      	str	r3, [sp, #4]
90024e4a:	9200      	str	r2, [sp, #0]
90024e4c:	e9cd 0103 	strd	r0, r1, [sp, #12]
90024e50:	e9cd c405 	strd	ip, r4, [sp, #20]
90024e54:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
90024e58:	4639      	mov	r1, r7
90024e5a:	9815      	ldr	r0, [sp, #84]	@ 0x54
90024e5c:	f7ff fc02 	bl	90024664 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
90024e60:	e73e      	b.n	90024ce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024e62:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90024e64:	f3c3 3203 	ubfx	r2, r3, #12, #4
90024e68:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90024e6a:	f3c3 3503 	ubfx	r5, r3, #12, #4
90024e6e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024e70:	fa1f fc82 	uxth.w	ip, r2
90024e74:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024e78:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90024e7a:	ea4f 100c 	mov.w	r0, ip, lsl #4
90024e7e:	141f      	asrs	r7, r3, #16
90024e80:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90024e82:	141b      	asrs	r3, r3, #16
90024e84:	fb01 3707 	mla	r7, r1, r7, r3
90024e88:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90024e8a:	eb03 0a07 	add.w	sl, r3, r7
90024e8e:	f813 9007 	ldrb.w	r9, [r3, r7]
90024e92:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
90024e96:	f89a 8001 	ldrb.w	r8, [sl, #1]
90024e9a:	b29b      	uxth	r3, r3
90024e9c:	2d00      	cmp	r5, #0
90024e9e:	f000 813d 	beq.w	9002511c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
90024ea2:	f81a 4001 	ldrb.w	r4, [sl, r1]
90024ea6:	eb0a 0b01 	add.w	fp, sl, r1
90024eaa:	fa1f fa85 	uxth.w	sl, r5
90024eae:	940f      	str	r4, [sp, #60]	@ 0x3c
90024eb0:	fb0a fc0c 	mul.w	ip, sl, ip
90024eb4:	f89b 4001 	ldrb.w	r4, [fp, #1]
90024eb8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90024ebc:	eba0 000c 	sub.w	r0, r0, ip
90024ec0:	9410      	str	r4, [sp, #64]	@ 0x40
90024ec2:	fa1f fa8a 	uxth.w	sl, sl
90024ec6:	b280      	uxth	r0, r0
90024ec8:	eba3 030a 	sub.w	r3, r3, sl
90024ecc:	fb08 f000 	mul.w	r0, r8, r0
90024ed0:	b29b      	uxth	r3, r3
90024ed2:	fb09 0303 	mla	r3, r9, r3, r0
90024ed6:	980f      	ldr	r0, [sp, #60]	@ 0x3c
90024ed8:	fb0a 3300 	mla	r3, sl, r0, r3
90024edc:	fb0c 3304 	mla	r3, ip, r4, r3
90024ee0:	f3c3 2307 	ubfx	r3, r3, #8, #8
90024ee4:	2b00      	cmp	r3, #0
90024ee6:	f000 810b 	beq.w	90025100 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90024eea:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90024eec:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90024ef0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90024ef2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
90024ef6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90024efa:	f000 8114 	beq.w	90025126 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
90024efe:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90024f02:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90024f06:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90024f0a:	fb0a fc0c 	mul.w	ip, sl, ip
90024f0e:	fb09 f707 	mul.w	r7, r9, r7
90024f12:	ea06 195c 	and.w	r9, r6, ip, lsr #5
90024f16:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90024f1a:	f107 0b20 	add.w	fp, r7, #32
90024f1e:	44cc      	add	ip, r9
90024f20:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90024f24:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90024f28:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024f2c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90024f30:	ea4c 0909 	orr.w	r9, ip, r9
90024f34:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90024f38:	8847      	ldrh	r7, [r0, #2]
90024f3a:	d019      	beq.n	90024f70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
90024f3c:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90024f40:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90024f44:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90024f48:	fb0a fc0c 	mul.w	ip, sl, ip
90024f4c:	fb08 f807 	mul.w	r8, r8, r7
90024f50:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90024f54:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90024f58:	f108 0b20 	add.w	fp, r8, #32
90024f5c:	44bc      	add	ip, r7
90024f5e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90024f62:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90024f66:	0a3f      	lsrs	r7, r7, #8
90024f68:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90024f6c:	ea4c 0707 	orr.w	r7, ip, r7
90024f70:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90024f74:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90024f78:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90024f7c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90024f80:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90024f84:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024f88:	ea4c 0909 	orr.w	r9, ip, r9
90024f8c:	ea4a 0707 	orr.w	r7, sl, r7
90024f90:	2d00      	cmp	r5, #0
90024f92:	f000 80ca 	beq.w	9002512a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
90024f96:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
90024f9a:	3901      	subs	r1, #1
90024f9c:	0049      	lsls	r1, r1, #1
90024f9e:	3102      	adds	r1, #2
90024fa0:	eb00 0c01 	add.w	ip, r0, r1
90024fa4:	5a41      	ldrh	r1, [r0, r1]
90024fa6:	980f      	ldr	r0, [sp, #60]	@ 0x3c
90024fa8:	28ff      	cmp	r0, #255	@ 0xff
90024faa:	d019      	beq.n	90024fe0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
90024fac:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
90024fb0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90024fb2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90024fb6:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024fba:	fb04 fa01 	mul.w	sl, r4, r1
90024fbe:	fb08 f800 	mul.w	r8, r8, r0
90024fc2:	f10a 0020 	add.w	r0, sl, #32
90024fc6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90024fca:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90024fce:	eb00 201a 	add.w	r0, r0, sl, lsr #8
90024fd2:	4441      	add	r1, r8
90024fd4:	0a00      	lsrs	r0, r0, #8
90024fd6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90024fda:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024fde:	4301      	orrs	r1, r0
90024fe0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90024fe2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
90024fe6:	2cff      	cmp	r4, #255	@ 0xff
90024fe8:	d01a      	beq.n	90025020 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
90024fea:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
90024fee:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024ff2:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024ff6:	fb04 fa00 	mul.w	sl, r4, r0
90024ffa:	fb08 f80c 	mul.w	r8, r8, ip
90024ffe:	f10a 0c20 	add.w	ip, sl, #32
90025002:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90025006:	f608 0801 	addw	r8, r8, #2049	@ 0x801
9002500a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
9002500e:	4440      	add	r0, r8
90025010:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025014:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90025018:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
9002501c:	ea40 000c 	orr.w	r0, r0, ip
90025020:	fb15 fc02 	smulbb	ip, r5, r2
90025024:	f1c5 0810 	rsb	r8, r5, #16
90025028:	ea4f 4a01 	mov.w	sl, r1, lsl #16
9002502c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90025030:	ea4f 0cec 	mov.w	ip, ip, asr #3
90025034:	eba8 0802 	sub.w	r8, r8, r2
90025038:	ea4f 4b00 	mov.w	fp, r0, lsl #16
9002503c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025040:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90025044:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90025048:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
9002504c:	ea4a 0101 	orr.w	r1, sl, r1
90025050:	437a      	muls	r2, r7
90025052:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90025056:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
9002505a:	fb09 2208 	mla	r2, r9, r8, r2
9002505e:	ea4b 0000 	orr.w	r0, fp, r0
90025062:	fb05 2201 	mla	r2, r5, r1, r2
90025066:	fb0c 2200 	mla	r2, ip, r0, r2
9002506a:	0d57      	lsrs	r7, r2, #21
9002506c:	0952      	lsrs	r2, r2, #5
9002506e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90025072:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90025076:	433a      	orrs	r2, r7
90025078:	2bff      	cmp	r3, #255	@ 0xff
9002507a:	b292      	uxth	r2, r2
9002507c:	d102      	bne.n	90025084 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
9002507e:	9912      	ldr	r1, [sp, #72]	@ 0x48
90025080:	29ff      	cmp	r1, #255	@ 0xff
90025082:	d063      	beq.n	9002514c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
90025084:	980a      	ldr	r0, [sp, #40]	@ 0x28
90025086:	1215      	asrs	r5, r2, #8
90025088:	f8be 1000 	ldrh.w	r1, [lr]
9002508c:	4343      	muls	r3, r0
9002508e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90025090:	10cf      	asrs	r7, r1, #3
90025092:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90025096:	1c58      	adds	r0, r3, #1
90025098:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9002509c:	eb00 2323 	add.w	r3, r0, r3, asr #8
900250a0:	1208      	asrs	r0, r1, #8
900250a2:	ea6f 2323 	mvn.w	r3, r3, asr #8
900250a6:	00c9      	lsls	r1, r1, #3
900250a8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
900250ac:	b2db      	uxtb	r3, r3
900250ae:	b2c9      	uxtb	r1, r1
900250b0:	fb10 f003 	smulbb	r0, r0, r3
900250b4:	fb11 f103 	smulbb	r1, r1, r3
900250b8:	fb05 0504 	mla	r5, r5, r4, r0
900250bc:	10d0      	asrs	r0, r2, #3
900250be:	fb17 f703 	smulbb	r7, r7, r3
900250c2:	00d2      	lsls	r2, r2, #3
900250c4:	b2ad      	uxth	r5, r5
900250c6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900250ca:	b2d2      	uxtb	r2, r2
900250cc:	fb00 7004 	mla	r0, r0, r4, r7
900250d0:	1c6b      	adds	r3, r5, #1
900250d2:	fb02 1204 	mla	r2, r2, r4, r1
900250d6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900250da:	b292      	uxth	r2, r2
900250dc:	b280      	uxth	r0, r0
900250de:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900250e2:	1c57      	adds	r7, r2, #1
900250e4:	eb07 2712 	add.w	r7, r7, r2, lsr #8
900250e8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900250ec:	433d      	orrs	r5, r7
900250ee:	1c47      	adds	r7, r0, #1
900250f0:	eb07 2710 	add.w	r7, r7, r0, lsr #8
900250f4:	097f      	lsrs	r7, r7, #5
900250f6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900250fa:	433d      	orrs	r5, r7
900250fc:	f8ae 5000 	strh.w	r5, [lr]
90025100:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90025102:	f10e 0e02 	add.w	lr, lr, #2
90025106:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
90025108:	4413      	add	r3, r2
9002510a:	9a22      	ldr	r2, [sp, #136]	@ 0x88
9002510c:	9321      	str	r3, [sp, #132]	@ 0x84
9002510e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025110:	441a      	add	r2, r3
90025112:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90025114:	3b01      	subs	r3, #1
90025116:	9222      	str	r2, [sp, #136]	@ 0x88
90025118:	9313      	str	r3, [sp, #76]	@ 0x4c
9002511a:	e61c      	b.n	90024d56 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
9002511c:	fb08 f000 	mul.w	r0, r8, r0
90025120:	fb09 0303 	mla	r3, r9, r3, r0
90025124:	e6dc      	b.n	90024ee0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
90025126:	46b9      	mov	r9, r7
90025128:	e704      	b.n	90024f34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
9002512a:	f1c2 0110 	rsb	r1, r2, #16
9002512e:	437a      	muls	r2, r7
90025130:	fb09 2901 	mla	r9, r9, r1, r2
90025134:	ea4f 0949 	mov.w	r9, r9, lsl #1
90025138:	ea4f 5059 	mov.w	r0, r9, lsr #21
9002513c:	ea4f 1259 	mov.w	r2, r9, lsr #5
90025140:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025144:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90025148:	4302      	orrs	r2, r0
9002514a:	e795      	b.n	90025078 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
9002514c:	f8ae 2000 	strh.w	r2, [lr]
90025150:	e7d6      	b.n	90025100 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90025152:	b017      	add	sp, #92	@ 0x5c
90025154:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90025158 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
90025158:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002515c:	b085      	sub	sp, #20
9002515e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
90025162:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
90025166:	2800      	cmp	r0, #0
90025168:	9103      	str	r1, [sp, #12]
9002516a:	fb00 7406 	mla	r4, r0, r6, r7
9002516e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
90025172:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
90025176:	eb03 0544 	add.w	r5, r3, r4, lsl #1
9002517a:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
9002517e:	eb02 0904 	add.w	r9, r2, r4
90025182:	9501      	str	r5, [sp, #4]
90025184:	f2c0 8141 	blt.w	9002540a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90025188:	4583      	cmp	fp, r0
9002518a:	f340 813e 	ble.w	9002540a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
9002518e:	2f00      	cmp	r7, #0
90025190:	f2c0 8137 	blt.w	90025402 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90025194:	42be      	cmp	r6, r7
90025196:	f340 8134 	ble.w	90025402 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
9002519a:	f812 c004 	ldrb.w	ip, [r2, r4]
9002519e:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
900251a2:	f64f 041f 	movw	r4, #63519	@ 0xf81f
900251a6:	ea4f 02ec 	mov.w	r2, ip, asr #3
900251aa:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
900251ae:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900251b2:	4355      	muls	r5, r2
900251b4:	fb0c f203 	mul.w	r2, ip, r3
900251b8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
900251bc:	f605 0501 	addw	r5, r5, #2049	@ 0x801
900251c0:	441d      	add	r5, r3
900251c2:	f102 0320 	add.w	r3, r2, #32
900251c6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900251ca:	ea04 1455 	and.w	r4, r4, r5, lsr #5
900251ce:	0a1b      	lsrs	r3, r3, #8
900251d0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900251d4:	431c      	orrs	r4, r3
900251d6:	1c7b      	adds	r3, r7, #1
900251d8:	f100 811c 	bmi.w	90025414 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
900251dc:	429e      	cmp	r6, r3
900251de:	f340 8119 	ble.w	90025414 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
900251e2:	2900      	cmp	r1, #0
900251e4:	f000 8119 	beq.w	9002541a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
900251e8:	9a01      	ldr	r2, [sp, #4]
900251ea:	f899 3001 	ldrb.w	r3, [r9, #1]
900251ee:	8855      	ldrh	r5, [r2, #2]
900251f0:	ea4f 08e3 	mov.w	r8, r3, asr #3
900251f4:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
900251f8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900251fc:	fb08 f802 	mul.w	r8, r8, r2
90025200:	f64f 021f 	movw	r2, #63519	@ 0xf81f
90025204:	435d      	muls	r5, r3
90025206:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
9002520a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
9002520e:	44d0      	add	r8, sl
90025210:	f105 0a20 	add.w	sl, r5, #32
90025214:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90025218:	ea02 1258 	and.w	r2, r2, r8, lsr #5
9002521c:	0a2d      	lsrs	r5, r5, #8
9002521e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90025222:	432a      	orrs	r2, r5
90025224:	3001      	adds	r0, #1
90025226:	f100 80fe 	bmi.w	90025426 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
9002522a:	4583      	cmp	fp, r0
9002522c:	f340 80fb 	ble.w	90025426 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90025230:	f1be 0f00 	cmp.w	lr, #0
90025234:	f000 80fc 	beq.w	90025430 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
90025238:	2f00      	cmp	r7, #0
9002523a:	f2c0 80f1 	blt.w	90025420 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
9002523e:	42be      	cmp	r6, r7
90025240:	f340 80ee 	ble.w	90025420 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90025244:	9801      	ldr	r0, [sp, #4]
90025246:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
9002524a:	f819 5006 	ldrb.w	r5, [r9, r6]
9002524e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90025252:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90025256:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
9002525a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9002525e:	fb0a fa00 	mul.w	sl, sl, r0
90025262:	fb05 f808 	mul.w	r8, r5, r8
90025266:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
9002526a:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
9002526e:	4482      	add	sl, r0
90025270:	f108 0020 	add.w	r0, r8, #32
90025274:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90025278:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
9002527c:	0a00      	lsrs	r0, r0, #8
9002527e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025282:	ea4b 0b00 	orr.w	fp, fp, r0
90025286:	3701      	adds	r7, #1
90025288:	f100 80d7 	bmi.w	9002543a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
9002528c:	42be      	cmp	r6, r7
9002528e:	f340 80d4 	ble.w	9002543a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90025292:	2900      	cmp	r1, #0
90025294:	f000 80d4 	beq.w	90025440 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
90025298:	3601      	adds	r6, #1
9002529a:	9801      	ldr	r0, [sp, #4]
9002529c:	f819 7006 	ldrb.w	r7, [r9, r6]
900252a0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
900252a4:	ea4f 09e7 	mov.w	r9, r7, asr #3
900252a8:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
900252ac:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900252b0:	fb09 f906 	mul.w	r9, r9, r6
900252b4:	fb07 f800 	mul.w	r8, r7, r0
900252b8:	f64f 001f 	movw	r0, #63519	@ 0xf81f
900252bc:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
900252c0:	f609 0901 	addw	r9, r9, #2049	@ 0x801
900252c4:	44d1      	add	r9, sl
900252c6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
900252ca:	f108 0020 	add.w	r0, r8, #32
900252ce:	eb00 2018 	add.w	r0, r0, r8, lsr #8
900252d2:	0a00      	lsrs	r0, r0, #8
900252d4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900252d8:	4330      	orrs	r0, r6
900252da:	b28e      	uxth	r6, r1
900252dc:	fa1f f98e 	uxth.w	r9, lr
900252e0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
900252e4:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
900252e8:	fb06 f809 	mul.w	r8, r6, r9
900252ec:	0136      	lsls	r6, r6, #4
900252ee:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900252f2:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
900252f6:	9601      	str	r6, [sp, #4]
900252f8:	ea4a 0404 	orr.w	r4, sl, r4
900252fc:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90025300:	fa1f f689 	uxth.w	r6, r9
90025304:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90025308:	fb11 f90e 	smulbb	r9, r1, lr
9002530c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025310:	9602      	str	r6, [sp, #8]
90025312:	4626      	mov	r6, r4
90025314:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90025318:	f1ce 0410 	rsb	r4, lr, #16
9002531c:	ea4a 0202 	orr.w	r2, sl, r2
90025320:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90025324:	1a64      	subs	r4, r4, r1
90025326:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
9002532a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002532e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90025332:	434a      	muls	r2, r1
90025334:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90025338:	ea4a 0000 	orr.w	r0, sl, r0
9002533c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90025340:	fb04 2406 	mla	r4, r4, r6, r2
90025344:	9903      	ldr	r1, [sp, #12]
90025346:	fb09 4200 	mla	r2, r9, r0, r4
9002534a:	ea4f 440b 	mov.w	r4, fp, lsl #16
9002534e:	9801      	ldr	r0, [sp, #4]
90025350:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90025354:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90025358:	8809      	ldrh	r1, [r1, #0]
9002535a:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
9002535e:	ea44 0b0b 	orr.w	fp, r4, fp
90025362:	9c02      	ldr	r4, [sp, #8]
90025364:	1b00      	subs	r0, r0, r4
90025366:	9c01      	ldr	r4, [sp, #4]
90025368:	fb0e 2e0b 	mla	lr, lr, fp, r2
9002536c:	eba4 0608 	sub.w	r6, r4, r8
90025370:	b280      	uxth	r0, r0
90025372:	ea4f 525e 	mov.w	r2, lr, lsr #21
90025376:	b2b6      	uxth	r6, r6
90025378:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9002537c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025380:	4373      	muls	r3, r6
90025382:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90025386:	fb0c 3300 	mla	r3, ip, r0, r3
9002538a:	9802      	ldr	r0, [sp, #8]
9002538c:	ea42 0e0e 	orr.w	lr, r2, lr
90025390:	fb00 3505 	mla	r5, r0, r5, r3
90025394:	120b      	asrs	r3, r1, #8
90025396:	10c8      	asrs	r0, r1, #3
90025398:	fb08 5707 	mla	r7, r8, r7, r5
9002539c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
900253a0:	00c9      	lsls	r1, r1, #3
900253a2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900253a6:	ea6f 2727 	mvn.w	r7, r7, asr #8
900253aa:	fa1f f28e 	uxth.w	r2, lr
900253ae:	b2c9      	uxtb	r1, r1
900253b0:	b2ff      	uxtb	r7, r7
900253b2:	437b      	muls	r3, r7
900253b4:	4378      	muls	r0, r7
900253b6:	434f      	muls	r7, r1
900253b8:	1c59      	adds	r1, r3, #1
900253ba:	eb01 2113 	add.w	r1, r1, r3, lsr #8
900253be:	1213      	asrs	r3, r2, #8
900253c0:	f023 0307 	bic.w	r3, r3, #7
900253c4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
900253c8:	1c41      	adds	r1, r0, #1
900253ca:	eb01 2010 	add.w	r0, r1, r0, lsr #8
900253ce:	10d1      	asrs	r1, r2, #3
900253d0:	021b      	lsls	r3, r3, #8
900253d2:	f021 0103 	bic.w	r1, r1, #3
900253d6:	00d2      	lsls	r2, r2, #3
900253d8:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
900253dc:	eb01 2110 	add.w	r1, r1, r0, lsr #8
900253e0:	00c9      	lsls	r1, r1, #3
900253e2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900253e6:	430b      	orrs	r3, r1
900253e8:	1c79      	adds	r1, r7, #1
900253ea:	eb01 2717 	add.w	r7, r1, r7, lsr #8
900253ee:	eb02 2217 	add.w	r2, r2, r7, lsr #8
900253f2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900253f6:	431a      	orrs	r2, r3
900253f8:	9b03      	ldr	r3, [sp, #12]
900253fa:	801a      	strh	r2, [r3, #0]
900253fc:	b005      	add	sp, #20
900253fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90025402:	f04f 0c00 	mov.w	ip, #0
90025406:	4664      	mov	r4, ip
90025408:	e6e5      	b.n	900251d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
9002540a:	2300      	movs	r3, #0
9002540c:	469c      	mov	ip, r3
9002540e:	461a      	mov	r2, r3
90025410:	461c      	mov	r4, r3
90025412:	e707      	b.n	90025224 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90025414:	2300      	movs	r3, #0
90025416:	461a      	mov	r2, r3
90025418:	e704      	b.n	90025224 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
9002541a:	460b      	mov	r3, r1
9002541c:	460a      	mov	r2, r1
9002541e:	e701      	b.n	90025224 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90025420:	2500      	movs	r5, #0
90025422:	46ab      	mov	fp, r5
90025424:	e72f      	b.n	90025286 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
90025426:	2700      	movs	r7, #0
90025428:	463d      	mov	r5, r7
9002542a:	4638      	mov	r0, r7
9002542c:	46bb      	mov	fp, r7
9002542e:	e754      	b.n	900252da <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90025430:	4677      	mov	r7, lr
90025432:	4675      	mov	r5, lr
90025434:	4670      	mov	r0, lr
90025436:	46f3      	mov	fp, lr
90025438:	e74f      	b.n	900252da <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
9002543a:	2700      	movs	r7, #0
9002543c:	4638      	mov	r0, r7
9002543e:	e74c      	b.n	900252da <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90025440:	460f      	mov	r7, r1
90025442:	4608      	mov	r0, r1
90025444:	e749      	b.n	900252da <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

90025448 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025448:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002544c:	b093      	sub	sp, #76	@ 0x4c
9002544e:	9210      	str	r2, [sp, #64]	@ 0x40
90025450:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90025452:	9011      	str	r0, [sp, #68]	@ 0x44
90025454:	910e      	str	r1, [sp, #56]	@ 0x38
90025456:	6850      	ldr	r0, [r2, #4]
90025458:	9306      	str	r3, [sp, #24]
9002545a:	6812      	ldr	r2, [r2, #0]
9002545c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
90025460:	fb00 1303 	mla	r3, r0, r3, r1
90025464:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90025468:	9307      	str	r3, [sp, #28]
9002546a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002546c:	681b      	ldr	r3, [r3, #0]
9002546e:	9308      	str	r3, [sp, #32]
90025470:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025472:	685b      	ldr	r3, [r3, #4]
90025474:	9309      	str	r3, [sp, #36]	@ 0x24
90025476:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90025478:	2b00      	cmp	r3, #0
9002547a:	dc03      	bgt.n	90025484 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9002547c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9002547e:	2b00      	cmp	r3, #0
90025480:	f340 83b6 	ble.w	90025bf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90025484:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025486:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002548a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002548e:	1e48      	subs	r0, r1, #1
90025490:	1e55      	subs	r5, r2, #1
90025492:	9b06      	ldr	r3, [sp, #24]
90025494:	2b00      	cmp	r3, #0
90025496:	f340 8165 	ble.w	90025764 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
9002549a:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
9002549c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
9002549e:	1436      	asrs	r6, r6, #16
900254a0:	ea4f 4323 	mov.w	r3, r3, asr #16
900254a4:	d406      	bmi.n	900254b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900254a6:	4286      	cmp	r6, r0
900254a8:	da04      	bge.n	900254b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900254aa:	2b00      	cmp	r3, #0
900254ac:	db02      	blt.n	900254b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900254ae:	42ab      	cmp	r3, r5
900254b0:	f2c0 8159 	blt.w	90025766 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
900254b4:	3601      	adds	r6, #1
900254b6:	f100 8146 	bmi.w	90025746 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900254ba:	42b1      	cmp	r1, r6
900254bc:	f2c0 8143 	blt.w	90025746 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900254c0:	3301      	adds	r3, #1
900254c2:	f100 8140 	bmi.w	90025746 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900254c6:	429a      	cmp	r2, r3
900254c8:	f2c0 813d 	blt.w	90025746 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900254cc:	9b06      	ldr	r3, [sp, #24]
900254ce:	f64f 061f 	movw	r6, #63519	@ 0xf81f
900254d2:	9f07      	ldr	r7, [sp, #28]
900254d4:	930f      	str	r3, [sp, #60]	@ 0x3c
900254d6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900254d8:	2b00      	cmp	r3, #0
900254da:	f340 8166 	ble.w	900257aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900254de:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
900254e0:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
900254e2:	1418      	asrs	r0, r3, #16
900254e4:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
900254e6:	142d      	asrs	r5, r5, #16
900254e8:	f3c3 3103 	ubfx	r1, r3, #12, #4
900254ec:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
900254ee:	f3c3 3c03 	ubfx	ip, r3, #12, #4
900254f2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900254f4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
900254f8:	f100 81f0 	bmi.w	900258dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900254fc:	f102 3eff 	add.w	lr, r2, #4294967295
90025500:	4575      	cmp	r5, lr
90025502:	f280 81eb 	bge.w	900258dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90025506:	2800      	cmp	r0, #0
90025508:	f2c0 81e8 	blt.w	900258dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
9002550c:	f103 3eff 	add.w	lr, r3, #4294967295
90025510:	4570      	cmp	r0, lr
90025512:	f280 81e3 	bge.w	900258dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90025516:	b212      	sxth	r2, r2
90025518:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002551a:	fa1f fe81 	uxth.w	lr, r1
9002551e:	fb00 5002 	mla	r0, r0, r2, r5
90025522:	ea4f 150e 	mov.w	r5, lr, lsl #4
90025526:	eb03 0a00 	add.w	sl, r3, r0
9002552a:	f813 9000 	ldrb.w	r9, [r3, r0]
9002552e:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
90025532:	f89a 8001 	ldrb.w	r8, [sl, #1]
90025536:	b29b      	uxth	r3, r3
90025538:	f1bc 0f00 	cmp.w	ip, #0
9002553c:	f000 817b 	beq.w	90025836 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90025540:	f81a 4002 	ldrb.w	r4, [sl, r2]
90025544:	eb0a 0b02 	add.w	fp, sl, r2
90025548:	fa1f fa8c 	uxth.w	sl, ip
9002554c:	940a      	str	r4, [sp, #40]	@ 0x28
9002554e:	fb0a fe0e 	mul.w	lr, sl, lr
90025552:	f89b 4001 	ldrb.w	r4, [fp, #1]
90025556:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
9002555a:	eba5 050e 	sub.w	r5, r5, lr
9002555e:	940b      	str	r4, [sp, #44]	@ 0x2c
90025560:	fa1f fa8a 	uxth.w	sl, sl
90025564:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90025566:	b2ad      	uxth	r5, r5
90025568:	eba3 030a 	sub.w	r3, r3, sl
9002556c:	fb08 f505 	mul.w	r5, r8, r5
90025570:	b29b      	uxth	r3, r3
90025572:	fb09 5303 	mla	r3, r9, r3, r5
90025576:	fb0a 3304 	mla	r3, sl, r4, r3
9002557a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
9002557c:	fb0e 3304 	mla	r3, lr, r4, r3
90025580:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025584:	2b00      	cmp	r3, #0
90025586:	f000 80d1 	beq.w	9002572c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
9002558a:	9c08      	ldr	r4, [sp, #32]
9002558c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90025590:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90025594:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90025598:	f000 8152 	beq.w	90025840 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
9002559c:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
900255a0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
900255a4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900255a8:	fb0a fe0e 	mul.w	lr, sl, lr
900255ac:	fb09 f000 	mul.w	r0, r9, r0
900255b0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
900255b4:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
900255b8:	f100 0b20 	add.w	fp, r0, #32
900255bc:	44ce      	add	lr, r9
900255be:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
900255c2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900255c6:	ea4f 2919 	mov.w	r9, r9, lsr #8
900255ca:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
900255ce:	ea4e 0909 	orr.w	r9, lr, r9
900255d2:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
900255d6:	8868      	ldrh	r0, [r5, #2]
900255d8:	d019      	beq.n	9002560e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
900255da:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
900255de:	ea4f 0ae8 	mov.w	sl, r8, asr #3
900255e2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900255e6:	fb0a fe0e 	mul.w	lr, sl, lr
900255ea:	fb08 f800 	mul.w	r8, r8, r0
900255ee:	ea06 105e 	and.w	r0, r6, lr, lsr #5
900255f2:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
900255f6:	f108 0b20 	add.w	fp, r8, #32
900255fa:	4486      	add	lr, r0
900255fc:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90025600:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90025604:	0a00      	lsrs	r0, r0, #8
90025606:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002560a:	ea4e 0000 	orr.w	r0, lr, r0
9002560e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90025612:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90025616:	ea4f 4a00 	mov.w	sl, r0, lsl #16
9002561a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9002561e:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90025622:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025626:	ea4e 0909 	orr.w	r9, lr, r9
9002562a:	ea4a 0000 	orr.w	r0, sl, r0
9002562e:	f1bc 0f00 	cmp.w	ip, #0
90025632:	f000 8107 	beq.w	90025844 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
90025636:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
9002563a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
9002563c:	3a01      	subs	r2, #1
9002563e:	2cff      	cmp	r4, #255	@ 0xff
90025640:	ea4f 0242 	mov.w	r2, r2, lsl #1
90025644:	f102 0202 	add.w	r2, r2, #2
90025648:	eb05 0e02 	add.w	lr, r5, r2
9002564c:	5aaa      	ldrh	r2, [r5, r2]
9002564e:	d018      	beq.n	90025682 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
90025650:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
90025654:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025658:	ea4f 08e4 	mov.w	r8, r4, asr #3
9002565c:	fb04 fa02 	mul.w	sl, r4, r2
90025660:	fb08 f805 	mul.w	r8, r8, r5
90025664:	f10a 0520 	add.w	r5, sl, #32
90025668:	ea06 1258 	and.w	r2, r6, r8, lsr #5
9002566c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90025670:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90025674:	4442      	add	r2, r8
90025676:	0a2d      	lsrs	r5, r5, #8
90025678:	ea06 1252 	and.w	r2, r6, r2, lsr #5
9002567c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90025680:	432a      	orrs	r2, r5
90025682:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90025684:	f8be 5002 	ldrh.w	r5, [lr, #2]
90025688:	2cff      	cmp	r4, #255	@ 0xff
9002568a:	d01a      	beq.n	900256c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9002568c:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
90025690:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90025694:	ea4f 08e4 	mov.w	r8, r4, asr #3
90025698:	fb04 fa05 	mul.w	sl, r4, r5
9002569c:	fb08 f80e 	mul.w	r8, r8, lr
900256a0:	f10a 0e20 	add.w	lr, sl, #32
900256a4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
900256a8:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900256ac:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
900256b0:	4445      	add	r5, r8
900256b2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900256b6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
900256ba:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
900256be:	ea45 050e 	orr.w	r5, r5, lr
900256c2:	fb1c fe01 	smulbb	lr, ip, r1
900256c6:	f1cc 0810 	rsb	r8, ip, #16
900256ca:	ea4f 4a02 	mov.w	sl, r2, lsl #16
900256ce:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900256d2:	ea4f 0eee 	mov.w	lr, lr, asr #3
900256d6:	eba8 0801 	sub.w	r8, r8, r1
900256da:	ea4f 4b05 	mov.w	fp, r5, lsl #16
900256de:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900256e2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
900256e6:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
900256ea:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
900256ee:	ea4a 0202 	orr.w	r2, sl, r2
900256f2:	4341      	muls	r1, r0
900256f4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
900256f8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900256fc:	fb09 1108 	mla	r1, r9, r8, r1
90025700:	ea4b 0505 	orr.w	r5, fp, r5
90025704:	fb0c 1102 	mla	r1, ip, r2, r1
90025708:	fb0e 1e05 	mla	lr, lr, r5, r1
9002570c:	ea4f 525e 	mov.w	r2, lr, lsr #21
90025710:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90025714:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025718:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
9002571c:	ea42 0e0e 	orr.w	lr, r2, lr
90025720:	fa1f f28e 	uxth.w	r2, lr
90025724:	2bff      	cmp	r3, #255	@ 0xff
90025726:	f040 80a1 	bne.w	9002586c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
9002572a:	803a      	strh	r2, [r7, #0]
9002572c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
9002572e:	3702      	adds	r7, #2
90025730:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
90025732:	4413      	add	r3, r2
90025734:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
90025736:	931d      	str	r3, [sp, #116]	@ 0x74
90025738:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002573a:	441a      	add	r2, r3
9002573c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9002573e:	3b01      	subs	r3, #1
90025740:	921e      	str	r2, [sp, #120]	@ 0x78
90025742:	930f      	str	r3, [sp, #60]	@ 0x3c
90025744:	e6c7      	b.n	900254d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90025746:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90025748:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
9002574a:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
9002574c:	4433      	add	r3, r6
9002574e:	931d      	str	r3, [sp, #116]	@ 0x74
90025750:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025752:	441c      	add	r4, r3
90025754:	9b06      	ldr	r3, [sp, #24]
90025756:	3b01      	subs	r3, #1
90025758:	941e      	str	r4, [sp, #120]	@ 0x78
9002575a:	9306      	str	r3, [sp, #24]
9002575c:	9b07      	ldr	r3, [sp, #28]
9002575e:	3302      	adds	r3, #2
90025760:	9307      	str	r3, [sp, #28]
90025762:	e696      	b.n	90025492 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90025764:	d028      	beq.n	900257b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90025766:	9b06      	ldr	r3, [sp, #24]
90025768:	981f      	ldr	r0, [sp, #124]	@ 0x7c
9002576a:	3b01      	subs	r3, #1
9002576c:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
9002576e:	fb00 5003 	mla	r0, r0, r3, r5
90025772:	1400      	asrs	r0, r0, #16
90025774:	f53f aeaa 	bmi.w	900254cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90025778:	3901      	subs	r1, #1
9002577a:	4288      	cmp	r0, r1
9002577c:	f6bf aea6 	bge.w	900254cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90025780:	9920      	ldr	r1, [sp, #128]	@ 0x80
90025782:	981e      	ldr	r0, [sp, #120]	@ 0x78
90025784:	fb01 0303 	mla	r3, r1, r3, r0
90025788:	141b      	asrs	r3, r3, #16
9002578a:	f53f ae9f 	bmi.w	900254cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9002578e:	3a01      	subs	r2, #1
90025790:	4293      	cmp	r3, r2
90025792:	f6bf ae9b 	bge.w	900254cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90025796:	9b06      	ldr	r3, [sp, #24]
90025798:	f64f 061f 	movw	r6, #63519	@ 0xf81f
9002579c:	f8dd e01c 	ldr.w	lr, [sp, #28]
900257a0:	930f      	str	r3, [sp, #60]	@ 0x3c
900257a2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900257a4:	2b00      	cmp	r3, #0
900257a6:	f300 80b6 	bgt.w	90025916 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
900257aa:	9b06      	ldr	r3, [sp, #24]
900257ac:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900257b0:	9b07      	ldr	r3, [sp, #28]
900257b2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
900257b6:	9307      	str	r3, [sp, #28]
900257b8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900257ba:	2b00      	cmp	r3, #0
900257bc:	f340 8218 	ble.w	90025bf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
900257c0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900257c4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900257c6:	ee30 0a04 	vadd.f32	s0, s0, s8
900257ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
900257ce:	eef0 6a62 	vmov.f32	s13, s5
900257d2:	eec7 7a00 	vdiv.f32	s15, s14, s0
900257d6:	ee31 1a05 	vadd.f32	s2, s2, s10
900257da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900257de:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
900257e2:	eef0 6a43 	vmov.f32	s13, s6
900257e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900257ea:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
900257ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
900257f2:	ee61 7a27 	vmul.f32	s15, s2, s15
900257f6:	ee77 2a62 	vsub.f32	s5, s14, s5
900257fa:	ee37 3ac3 	vsub.f32	s6, s15, s6
900257fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90025802:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025806:	ee12 2a90 	vmov	r2, s5
9002580a:	eef0 2a47 	vmov.f32	s5, s14
9002580e:	fb92 f3f3 	sdiv	r3, r2, r3
90025812:	ee13 2a10 	vmov	r2, s6
90025816:	931f      	str	r3, [sp, #124]	@ 0x7c
90025818:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002581a:	eeb0 3a67 	vmov.f32	s6, s15
9002581e:	fb92 f3f3 	sdiv	r3, r2, r3
90025822:	9320      	str	r3, [sp, #128]	@ 0x80
90025824:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90025826:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90025828:	3b01      	subs	r3, #1
9002582a:	930e      	str	r3, [sp, #56]	@ 0x38
9002582c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002582e:	bf08      	it	eq
90025830:	4613      	moveq	r3, r2
90025832:	9306      	str	r3, [sp, #24]
90025834:	e61f      	b.n	90025476 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
90025836:	fb08 f505 	mul.w	r5, r8, r5
9002583a:	fb09 5303 	mla	r3, r9, r3, r5
9002583e:	e69f      	b.n	90025580 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
90025840:	4681      	mov	r9, r0
90025842:	e6c6      	b.n	900255d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
90025844:	f1c1 0210 	rsb	r2, r1, #16
90025848:	4341      	muls	r1, r0
9002584a:	fb09 1902 	mla	r9, r9, r2, r1
9002584e:	ea4f 0949 	mov.w	r9, r9, lsl #1
90025852:	ea4f 5259 	mov.w	r2, r9, lsr #21
90025856:	ea4f 1959 	mov.w	r9, r9, lsr #5
9002585a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002585e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90025862:	ea42 0909 	orr.w	r9, r2, r9
90025866:	fa1f f289 	uxth.w	r2, r9
9002586a:	e75b      	b.n	90025724 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
9002586c:	f8b7 c000 	ldrh.w	ip, [r7]
90025870:	43db      	mvns	r3, r3
90025872:	ea4f 202c 	mov.w	r0, ip, asr #8
90025876:	fa5f fe83 	uxtb.w	lr, r3
9002587a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9002587e:	ea4f 05ec 	mov.w	r5, ip, asr #3
90025882:	ea4f 03cc 	mov.w	r3, ip, lsl #3
90025886:	fb00 f00e 	mul.w	r0, r0, lr
9002588a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9002588e:	b2db      	uxtb	r3, r3
90025890:	1c41      	adds	r1, r0, #1
90025892:	fb05 f50e 	mul.w	r5, r5, lr
90025896:	fb03 f30e 	mul.w	r3, r3, lr
9002589a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
9002589e:	1211      	asrs	r1, r2, #8
900258a0:	f021 0107 	bic.w	r1, r1, #7
900258a4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
900258a8:	48d3      	ldr	r0, [pc, #844]	@ (90025bf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
900258aa:	b2c9      	uxtb	r1, r1
900258ac:	ea00 2001 	and.w	r0, r0, r1, lsl #8
900258b0:	1c69      	adds	r1, r5, #1
900258b2:	eb01 2515 	add.w	r5, r1, r5, lsr #8
900258b6:	10d1      	asrs	r1, r2, #3
900258b8:	00d2      	lsls	r2, r2, #3
900258ba:	f021 0103 	bic.w	r1, r1, #3
900258be:	eb01 2115 	add.w	r1, r1, r5, lsr #8
900258c2:	00c9      	lsls	r1, r1, #3
900258c4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900258c8:	4301      	orrs	r1, r0
900258ca:	1c58      	adds	r0, r3, #1
900258cc:	eb00 2313 	add.w	r3, r0, r3, lsr #8
900258d0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
900258d4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900258d8:	430a      	orrs	r2, r1
900258da:	e726      	b.n	9002572a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
900258dc:	f115 0e01 	adds.w	lr, r5, #1
900258e0:	f53f af24 	bmi.w	9002572c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900258e4:	4572      	cmp	r2, lr
900258e6:	f6ff af21 	blt.w	9002572c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900258ea:	f110 0e01 	adds.w	lr, r0, #1
900258ee:	f53f af1d 	bmi.w	9002572c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900258f2:	4573      	cmp	r3, lr
900258f4:	f6ff af1a 	blt.w	9002572c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900258f8:	b21b      	sxth	r3, r3
900258fa:	b212      	sxth	r2, r2
900258fc:	9301      	str	r3, [sp, #4]
900258fe:	9200      	str	r2, [sp, #0]
90025900:	e9cd 1c04 	strd	r1, ip, [sp, #16]
90025904:	e9cd 5002 	strd	r5, r0, [sp, #8]
90025908:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
9002590c:	4639      	mov	r1, r7
9002590e:	9811      	ldr	r0, [sp, #68]	@ 0x44
90025910:	f7ff fc22 	bl	90025158 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
90025914:	e70a      	b.n	9002572c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90025916:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90025918:	f3c3 3203 	ubfx	r2, r3, #12, #4
9002591c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
9002591e:	f3c3 3503 	ubfx	r5, r3, #12, #4
90025922:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025924:	fa1f fc82 	uxth.w	ip, r2
90025928:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002592c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
9002592e:	ea4f 100c 	mov.w	r0, ip, lsl #4
90025932:	141f      	asrs	r7, r3, #16
90025934:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90025936:	141b      	asrs	r3, r3, #16
90025938:	fb01 3707 	mla	r7, r1, r7, r3
9002593c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002593e:	eb03 0a07 	add.w	sl, r3, r7
90025942:	f813 9007 	ldrb.w	r9, [r3, r7]
90025946:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
9002594a:	f89a 8001 	ldrb.w	r8, [sl, #1]
9002594e:	b29b      	uxth	r3, r3
90025950:	2d00      	cmp	r5, #0
90025952:	f000 80fe 	beq.w	90025b52 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
90025956:	f81a 4001 	ldrb.w	r4, [sl, r1]
9002595a:	eb0a 0b01 	add.w	fp, sl, r1
9002595e:	fa1f fa85 	uxth.w	sl, r5
90025962:	940c      	str	r4, [sp, #48]	@ 0x30
90025964:	fb0a fc0c 	mul.w	ip, sl, ip
90025968:	f89b 4001 	ldrb.w	r4, [fp, #1]
9002596c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90025970:	eba0 000c 	sub.w	r0, r0, ip
90025974:	940d      	str	r4, [sp, #52]	@ 0x34
90025976:	fa1f fa8a 	uxth.w	sl, sl
9002597a:	b280      	uxth	r0, r0
9002597c:	eba3 030a 	sub.w	r3, r3, sl
90025980:	fb08 f000 	mul.w	r0, r8, r0
90025984:	b29b      	uxth	r3, r3
90025986:	fb09 0303 	mla	r3, r9, r3, r0
9002598a:	980c      	ldr	r0, [sp, #48]	@ 0x30
9002598c:	fb0a 3300 	mla	r3, sl, r0, r3
90025990:	fb0c 3304 	mla	r3, ip, r4, r3
90025994:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025998:	2b00      	cmp	r3, #0
9002599a:	f000 80cc 	beq.w	90025b36 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
9002599e:	9808      	ldr	r0, [sp, #32]
900259a0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
900259a4:	9c08      	ldr	r4, [sp, #32]
900259a6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
900259aa:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
900259ae:	f000 80d5 	beq.w	90025b5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
900259b2:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
900259b6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
900259ba:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900259be:	fb0a fc0c 	mul.w	ip, sl, ip
900259c2:	fb09 f707 	mul.w	r7, r9, r7
900259c6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
900259ca:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
900259ce:	f107 0b20 	add.w	fp, r7, #32
900259d2:	44cc      	add	ip, r9
900259d4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
900259d8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
900259dc:	ea4f 2919 	mov.w	r9, r9, lsr #8
900259e0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
900259e4:	ea4c 0909 	orr.w	r9, ip, r9
900259e8:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
900259ec:	8847      	ldrh	r7, [r0, #2]
900259ee:	d019      	beq.n	90025a24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
900259f0:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
900259f4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
900259f8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900259fc:	fb0a fc0c 	mul.w	ip, sl, ip
90025a00:	fb08 f807 	mul.w	r8, r8, r7
90025a04:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90025a08:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90025a0c:	f108 0b20 	add.w	fp, r8, #32
90025a10:	44bc      	add	ip, r7
90025a12:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90025a16:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90025a1a:	0a3f      	lsrs	r7, r7, #8
90025a1c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90025a20:	ea4c 0707 	orr.w	r7, ip, r7
90025a24:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90025a28:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90025a2c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90025a30:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90025a34:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90025a38:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025a3c:	ea4c 0909 	orr.w	r9, ip, r9
90025a40:	ea4a 0707 	orr.w	r7, sl, r7
90025a44:	2d00      	cmp	r5, #0
90025a46:	f000 808b 	beq.w	90025b60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
90025a4a:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
90025a4e:	3901      	subs	r1, #1
90025a50:	0049      	lsls	r1, r1, #1
90025a52:	3102      	adds	r1, #2
90025a54:	eb00 0c01 	add.w	ip, r0, r1
90025a58:	5a41      	ldrh	r1, [r0, r1]
90025a5a:	980c      	ldr	r0, [sp, #48]	@ 0x30
90025a5c:	28ff      	cmp	r0, #255	@ 0xff
90025a5e:	d019      	beq.n	90025a94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
90025a60:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
90025a64:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90025a66:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90025a6a:	ea4f 08e4 	mov.w	r8, r4, asr #3
90025a6e:	fb04 fa01 	mul.w	sl, r4, r1
90025a72:	fb08 f800 	mul.w	r8, r8, r0
90025a76:	f10a 0020 	add.w	r0, sl, #32
90025a7a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90025a7e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90025a82:	eb00 201a 	add.w	r0, r0, sl, lsr #8
90025a86:	4441      	add	r1, r8
90025a88:	0a00      	lsrs	r0, r0, #8
90025a8a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90025a8e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025a92:	4301      	orrs	r1, r0
90025a94:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90025a96:	f8bc 0002 	ldrh.w	r0, [ip, #2]
90025a9a:	2cff      	cmp	r4, #255	@ 0xff
90025a9c:	d01a      	beq.n	90025ad4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
90025a9e:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
90025aa2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025aa6:	ea4f 08e4 	mov.w	r8, r4, asr #3
90025aaa:	fb04 fa00 	mul.w	sl, r4, r0
90025aae:	fb08 f80c 	mul.w	r8, r8, ip
90025ab2:	f10a 0c20 	add.w	ip, sl, #32
90025ab6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90025aba:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90025abe:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90025ac2:	4440      	add	r0, r8
90025ac4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025ac8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90025acc:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90025ad0:	ea40 000c 	orr.w	r0, r0, ip
90025ad4:	fb15 fc02 	smulbb	ip, r5, r2
90025ad8:	f1c5 0810 	rsb	r8, r5, #16
90025adc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90025ae0:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90025ae4:	ea4f 0cec 	mov.w	ip, ip, asr #3
90025ae8:	eba8 0802 	sub.w	r8, r8, r2
90025aec:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90025af0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025af4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90025af8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90025afc:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90025b00:	ea4a 0101 	orr.w	r1, sl, r1
90025b04:	437a      	muls	r2, r7
90025b06:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90025b0a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90025b0e:	fb09 2208 	mla	r2, r9, r8, r2
90025b12:	ea4b 0000 	orr.w	r0, fp, r0
90025b16:	fb05 2201 	mla	r2, r5, r1, r2
90025b1a:	fb0c 2200 	mla	r2, ip, r0, r2
90025b1e:	0d57      	lsrs	r7, r2, #21
90025b20:	0952      	lsrs	r2, r2, #5
90025b22:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90025b26:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90025b2a:	433a      	orrs	r2, r7
90025b2c:	2bff      	cmp	r3, #255	@ 0xff
90025b2e:	b292      	uxth	r2, r2
90025b30:	d127      	bne.n	90025b82 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
90025b32:	f8ae 2000 	strh.w	r2, [lr]
90025b36:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90025b38:	f10e 0e02 	add.w	lr, lr, #2
90025b3c:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
90025b3e:	4413      	add	r3, r2
90025b40:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
90025b42:	931d      	str	r3, [sp, #116]	@ 0x74
90025b44:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025b46:	441a      	add	r2, r3
90025b48:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90025b4a:	3b01      	subs	r3, #1
90025b4c:	921e      	str	r2, [sp, #120]	@ 0x78
90025b4e:	930f      	str	r3, [sp, #60]	@ 0x3c
90025b50:	e627      	b.n	900257a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90025b52:	fb08 f000 	mul.w	r0, r8, r0
90025b56:	fb09 0303 	mla	r3, r9, r3, r0
90025b5a:	e71b      	b.n	90025994 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
90025b5c:	46b9      	mov	r9, r7
90025b5e:	e743      	b.n	900259e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
90025b60:	f1c2 0110 	rsb	r1, r2, #16
90025b64:	437a      	muls	r2, r7
90025b66:	fb09 2901 	mla	r9, r9, r1, r2
90025b6a:	ea4f 0949 	mov.w	r9, r9, lsl #1
90025b6e:	ea4f 5059 	mov.w	r0, r9, lsr #21
90025b72:	ea4f 1259 	mov.w	r2, r9, lsr #5
90025b76:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025b7a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90025b7e:	4302      	orrs	r2, r0
90025b80:	e7d4      	b.n	90025b2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
90025b82:	f8be 7000 	ldrh.w	r7, [lr]
90025b86:	43db      	mvns	r3, r3
90025b88:	4c1b      	ldr	r4, [pc, #108]	@ (90025bf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90025b8a:	1238      	asrs	r0, r7, #8
90025b8c:	fa5f fc83 	uxtb.w	ip, r3
90025b90:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90025b94:	10fd      	asrs	r5, r7, #3
90025b96:	00fb      	lsls	r3, r7, #3
90025b98:	fb00 f00c 	mul.w	r0, r0, ip
90025b9c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90025ba0:	b2db      	uxtb	r3, r3
90025ba2:	fb05 f10c 	mul.w	r1, r5, ip
90025ba6:	1c45      	adds	r5, r0, #1
90025ba8:	fb03 f30c 	mul.w	r3, r3, ip
90025bac:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90025bb0:	1215      	asrs	r5, r2, #8
90025bb2:	f025 0507 	bic.w	r5, r5, #7
90025bb6:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90025bba:	1c4d      	adds	r5, r1, #1
90025bbc:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90025bc0:	10d1      	asrs	r1, r2, #3
90025bc2:	b2c0      	uxtb	r0, r0
90025bc4:	f021 0103 	bic.w	r1, r1, #3
90025bc8:	00d2      	lsls	r2, r2, #3
90025bca:	ea04 2000 	and.w	r0, r4, r0, lsl #8
90025bce:	eb01 2115 	add.w	r1, r1, r5, lsr #8
90025bd2:	00c9      	lsls	r1, r1, #3
90025bd4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90025bd8:	4308      	orrs	r0, r1
90025bda:	1c59      	adds	r1, r3, #1
90025bdc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90025be0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90025be4:	f3c3 03c4 	ubfx	r3, r3, #3, #5
90025be8:	4318      	orrs	r0, r3
90025bea:	f8ae 0000 	strh.w	r0, [lr]
90025bee:	e7a2      	b.n	90025b36 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90025bf0:	b013      	add	sp, #76	@ 0x4c
90025bf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90025bf6:	bf00      	nop
90025bf8:	fffff800 	.word	0xfffff800

90025bfc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
90025bfc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90025c00:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
90025c04:	f9bd a020 	ldrsh.w	sl, [sp, #32]
90025c08:	fb05 4c03 	mla	ip, r5, r3, r4
90025c0c:	2d00      	cmp	r5, #0
90025c0e:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
90025c12:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
90025c16:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
90025c1a:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
90025c1e:	8808      	ldrh	r0, [r1, #0]
90025c20:	f2c0 80a7 	blt.w	90025d72 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90025c24:	45aa      	cmp	sl, r5
90025c26:	f340 80a4 	ble.w	90025d72 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90025c2a:	2c00      	cmp	r4, #0
90025c2c:	f2c0 809f 	blt.w	90025d6e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90025c30:	42a3      	cmp	r3, r4
90025c32:	f340 809c 	ble.w	90025d6e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90025c36:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
90025c3a:	1c62      	adds	r2, r4, #1
90025c3c:	f100 809c 	bmi.w	90025d78 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90025c40:	4293      	cmp	r3, r2
90025c42:	f340 8099 	ble.w	90025d78 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90025c46:	f1b9 0f00 	cmp.w	r9, #0
90025c4a:	f000 8095 	beq.w	90025d78 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90025c4e:	f8be c002 	ldrh.w	ip, [lr, #2]
90025c52:	3501      	adds	r5, #1
90025c54:	f100 8094 	bmi.w	90025d80 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90025c58:	45aa      	cmp	sl, r5
90025c5a:	f340 8091 	ble.w	90025d80 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90025c5e:	2f00      	cmp	r7, #0
90025c60:	f000 808e 	beq.w	90025d80 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90025c64:	2c00      	cmp	r4, #0
90025c66:	f2c0 8089 	blt.w	90025d7c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90025c6a:	42a3      	cmp	r3, r4
90025c6c:	f340 8086 	ble.w	90025d7c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90025c70:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
90025c74:	3401      	adds	r4, #1
90025c76:	f100 8086 	bmi.w	90025d86 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90025c7a:	42a3      	cmp	r3, r4
90025c7c:	f340 8083 	ble.w	90025d86 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90025c80:	f1b9 0f00 	cmp.w	r9, #0
90025c84:	d07f      	beq.n	90025d86 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90025c86:	3301      	adds	r3, #1
90025c88:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
90025c8c:	ea4f 4408 	mov.w	r4, r8, lsl #16
90025c90:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
90025c94:	fb19 fe07 	smulbb	lr, r9, r7
90025c98:	f1c7 0210 	rsb	r2, r7, #16
90025c9c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90025ca0:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
90025ca4:	eba2 0209 	sub.w	r2, r2, r9
90025ca8:	ea44 0808 	orr.w	r8, r4, r8
90025cac:	ea4f 440c 	mov.w	r4, ip, lsl #16
90025cb0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90025cb4:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
90025cb8:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90025cbc:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90025cc0:	ea44 0c0c 	orr.w	ip, r4, ip
90025cc4:	ebce 0449 	rsb	r4, lr, r9, lsl #1
90025cc8:	fb04 f40c 	mul.w	r4, r4, ip
90025ccc:	fb02 4808 	mla	r8, r2, r8, r4
90025cd0:	041a      	lsls	r2, r3, #16
90025cd2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90025cd6:	b2b4      	uxth	r4, r6
90025cd8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90025cdc:	43f6      	mvns	r6, r6
90025cde:	4313      	orrs	r3, r2
90025ce0:	042a      	lsls	r2, r5, #16
90025ce2:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90025ce6:	b2f6      	uxtb	r6, r6
90025ce8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90025cec:	fb0e 8303 	mla	r3, lr, r3, r8
90025cf0:	432a      	orrs	r2, r5
90025cf2:	fb07 3202 	mla	r2, r7, r2, r3
90025cf6:	10c7      	asrs	r7, r0, #3
90025cf8:	0d53      	lsrs	r3, r2, #21
90025cfa:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90025cfe:	0952      	lsrs	r2, r2, #5
90025d00:	fb17 f706 	smulbb	r7, r7, r6
90025d04:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90025d08:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90025d0c:	431a      	orrs	r2, r3
90025d0e:	b293      	uxth	r3, r2
90025d10:	1202      	asrs	r2, r0, #8
90025d12:	121d      	asrs	r5, r3, #8
90025d14:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90025d18:	00c0      	lsls	r0, r0, #3
90025d1a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90025d1e:	fb12 f206 	smulbb	r2, r2, r6
90025d22:	b2c0      	uxtb	r0, r0
90025d24:	fb05 2504 	mla	r5, r5, r4, r2
90025d28:	10da      	asrs	r2, r3, #3
90025d2a:	fb10 f006 	smulbb	r0, r0, r6
90025d2e:	00db      	lsls	r3, r3, #3
90025d30:	b2ad      	uxth	r5, r5
90025d32:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90025d36:	b2db      	uxtb	r3, r3
90025d38:	fb02 7204 	mla	r2, r2, r4, r7
90025d3c:	fb03 0004 	mla	r0, r3, r4, r0
90025d40:	1c6b      	adds	r3, r5, #1
90025d42:	b292      	uxth	r2, r2
90025d44:	b280      	uxth	r0, r0
90025d46:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90025d4a:	1c43      	adds	r3, r0, #1
90025d4c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90025d50:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90025d54:	1c50      	adds	r0, r2, #1
90025d56:	eb00 2212 	add.w	r2, r0, r2, lsr #8
90025d5a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90025d5e:	0952      	lsrs	r2, r2, #5
90025d60:	432b      	orrs	r3, r5
90025d62:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025d66:	4313      	orrs	r3, r2
90025d68:	800b      	strh	r3, [r1, #0]
90025d6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90025d6e:	4680      	mov	r8, r0
90025d70:	e763      	b.n	90025c3a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
90025d72:	4684      	mov	ip, r0
90025d74:	4680      	mov	r8, r0
90025d76:	e76c      	b.n	90025c52 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90025d78:	4684      	mov	ip, r0
90025d7a:	e76a      	b.n	90025c52 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90025d7c:	4605      	mov	r5, r0
90025d7e:	e779      	b.n	90025c74 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
90025d80:	4603      	mov	r3, r0
90025d82:	4605      	mov	r5, r0
90025d84:	e782      	b.n	90025c8c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
90025d86:	4603      	mov	r3, r0
90025d88:	e780      	b.n	90025c8c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

90025d8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025d8a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025d8e:	b093      	sub	sp, #76	@ 0x4c
90025d90:	461d      	mov	r5, r3
90025d92:	9210      	str	r2, [sp, #64]	@ 0x40
90025d94:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90025d96:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
90025d9a:	910a      	str	r1, [sp, #40]	@ 0x28
90025d9c:	920b      	str	r2, [sp, #44]	@ 0x2c
90025d9e:	6859      	ldr	r1, [r3, #4]
90025da0:	681b      	ldr	r3, [r3, #0]
90025da2:	9011      	str	r0, [sp, #68]	@ 0x44
90025da4:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
90025da8:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90025dac:	fb01 2707 	mla	r7, r1, r7, r2
90025db0:	eb03 0347 	add.w	r3, r3, r7, lsl #1
90025db4:	9307      	str	r3, [sp, #28]
90025db6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025db8:	681b      	ldr	r3, [r3, #0]
90025dba:	9309      	str	r3, [sp, #36]	@ 0x24
90025dbc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90025dbe:	43db      	mvns	r3, r3
90025dc0:	b2db      	uxtb	r3, r3
90025dc2:	9308      	str	r3, [sp, #32]
90025dc4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90025dc6:	2b00      	cmp	r3, #0
90025dc8:	dc03      	bgt.n	90025dd2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90025dca:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90025dcc:	2b00      	cmp	r3, #0
90025dce:	f340 8205 	ble.w	900261dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90025dd2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025dd4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025dd8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90025ddc:	1e48      	subs	r0, r1, #1
90025dde:	f102 3cff 	add.w	ip, r2, #4294967295
90025de2:	2d00      	cmp	r5, #0
90025de4:	f340 80da 	ble.w	90025f9c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
90025de8:	ea5f 4e24 	movs.w	lr, r4, asr #16
90025dec:	ea4f 4326 	mov.w	r3, r6, asr #16
90025df0:	d406      	bmi.n	90025e00 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90025df2:	4586      	cmp	lr, r0
90025df4:	da04      	bge.n	90025e00 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90025df6:	2b00      	cmp	r3, #0
90025df8:	db02      	blt.n	90025e00 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90025dfa:	4563      	cmp	r3, ip
90025dfc:	f2c0 80cf 	blt.w	90025f9e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90025e00:	f11e 0e01 	adds.w	lr, lr, #1
90025e04:	f100 80c1 	bmi.w	90025f8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90025e08:	4571      	cmp	r1, lr
90025e0a:	f2c0 80be 	blt.w	90025f8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90025e0e:	3301      	adds	r3, #1
90025e10:	f100 80bb 	bmi.w	90025f8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90025e14:	429a      	cmp	r2, r3
90025e16:	f2c0 80b8 	blt.w	90025f8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90025e1a:	46a9      	mov	r9, r5
90025e1c:	f8dd 801c 	ldr.w	r8, [sp, #28]
90025e20:	f1b9 0f00 	cmp.w	r9, #0
90025e24:	f340 80d8 	ble.w	90025fd8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
90025e28:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025e2a:	1421      	asrs	r1, r4, #16
90025e2c:	ea4f 4026 	mov.w	r0, r6, asr #16
90025e30:	f3c4 3203 	ubfx	r2, r4, #12, #4
90025e34:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90025e38:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90025e3c:	f100 8112 	bmi.w	90026064 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90025e40:	f10e 3aff 	add.w	sl, lr, #4294967295
90025e44:	4551      	cmp	r1, sl
90025e46:	f280 810d 	bge.w	90026064 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90025e4a:	2800      	cmp	r0, #0
90025e4c:	f2c0 810a 	blt.w	90026064 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90025e50:	f103 3aff 	add.w	sl, r3, #4294967295
90025e54:	4550      	cmp	r0, sl
90025e56:	f280 8105 	bge.w	90026064 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90025e5a:	fa0f f38e 	sxth.w	r3, lr
90025e5e:	fb00 1103 	mla	r1, r0, r3, r1
90025e62:	9809      	ldr	r0, [sp, #36]	@ 0x24
90025e64:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
90025e68:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
90025e6c:	f8ba 1002 	ldrh.w	r1, [sl, #2]
90025e70:	f1bc 0f00 	cmp.w	ip, #0
90025e74:	d007      	beq.n	90025e86 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
90025e76:	005b      	lsls	r3, r3, #1
90025e78:	eb0a 0003 	add.w	r0, sl, r3
90025e7c:	f83a 3003 	ldrh.w	r3, [sl, r3]
90025e80:	930c      	str	r3, [sp, #48]	@ 0x30
90025e82:	8843      	ldrh	r3, [r0, #2]
90025e84:	930d      	str	r3, [sp, #52]	@ 0x34
90025e86:	ea4f 400e 	mov.w	r0, lr, lsl #16
90025e8a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90025e8e:	fb12 f30c 	smulbb	r3, r2, ip
90025e92:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90025e96:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90025e9a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90025e9e:	10db      	asrs	r3, r3, #3
90025ea0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025ea4:	ea40 000e 	orr.w	r0, r0, lr
90025ea8:	f1cc 0e10 	rsb	lr, ip, #16
90025eac:	ea4a 0101 	orr.w	r1, sl, r1
90025eb0:	9f08      	ldr	r7, [sp, #32]
90025eb2:	ebae 0e02 	sub.w	lr, lr, r2
90025eb6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90025eba:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90025ebe:	4351      	muls	r1, r2
90025ec0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90025ec2:	fb0e 1e00 	mla	lr, lr, r0, r1
90025ec6:	990c      	ldr	r1, [sp, #48]	@ 0x30
90025ec8:	0410      	lsls	r0, r2, #16
90025eca:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90025ece:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90025ed2:	4310      	orrs	r0, r2
90025ed4:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90025ed6:	0412      	lsls	r2, r2, #16
90025ed8:	fb03 e000 	mla	r0, r3, r0, lr
90025edc:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
90025ee0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90025ee4:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90025ee8:	ea42 020e 	orr.w	r2, r2, lr
90025eec:	fb03 0302 	mla	r3, r3, r2, r0
90025ef0:	f8b8 0000 	ldrh.w	r0, [r8]
90025ef4:	0d5a      	lsrs	r2, r3, #21
90025ef6:	095b      	lsrs	r3, r3, #5
90025ef8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025efc:	1201      	asrs	r1, r0, #8
90025efe:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90025f02:	ea4f 0ee0 	mov.w	lr, r0, asr #3
90025f06:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90025f0a:	00c0      	lsls	r0, r0, #3
90025f0c:	4313      	orrs	r3, r2
90025f0e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
90025f12:	fb11 f107 	smulbb	r1, r1, r7
90025f16:	b2c0      	uxtb	r0, r0
90025f18:	b29b      	uxth	r3, r3
90025f1a:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
90025f1e:	fb10 f007 	smulbb	r0, r0, r7
90025f22:	fb1e fe07 	smulbb	lr, lr, r7
90025f26:	ea4f 2c23 	mov.w	ip, r3, asr #8
90025f2a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90025f2e:	fb0c 1c02 	mla	ip, ip, r2, r1
90025f32:	10d9      	asrs	r1, r3, #3
90025f34:	00db      	lsls	r3, r3, #3
90025f36:	fa1f fc8c 	uxth.w	ip, ip
90025f3a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90025f3e:	b2db      	uxtb	r3, r3
90025f40:	fb01 e102 	mla	r1, r1, r2, lr
90025f44:	fb03 0302 	mla	r3, r3, r2, r0
90025f48:	b289      	uxth	r1, r1
90025f4a:	b29a      	uxth	r2, r3
90025f4c:	f10c 0301 	add.w	r3, ip, #1
90025f50:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90025f54:	1c53      	adds	r3, r2, #1
90025f56:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90025f5a:	1c4a      	adds	r2, r1, #1
90025f5c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90025f60:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90025f64:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90025f68:	0949      	lsrs	r1, r1, #5
90025f6a:	ea43 030c 	orr.w	r3, r3, ip
90025f6e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90025f72:	430b      	orrs	r3, r1
90025f74:	f8a8 3000 	strh.w	r3, [r8]
90025f78:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90025f7a:	f108 0802 	add.w	r8, r8, #2
90025f7e:	f109 39ff 	add.w	r9, r9, #4294967295
90025f82:	441c      	add	r4, r3
90025f84:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025f86:	441e      	add	r6, r3
90025f88:	e74a      	b.n	90025e20 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90025f8a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90025f8c:	3d01      	subs	r5, #1
90025f8e:	441c      	add	r4, r3
90025f90:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025f92:	441e      	add	r6, r3
90025f94:	9b07      	ldr	r3, [sp, #28]
90025f96:	3302      	adds	r3, #2
90025f98:	9307      	str	r3, [sp, #28]
90025f9a:	e722      	b.n	90025de2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90025f9c:	d022      	beq.n	90025fe4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
90025f9e:	1e6b      	subs	r3, r5, #1
90025fa0:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90025fa2:	fb00 4003 	mla	r0, r0, r3, r4
90025fa6:	1400      	asrs	r0, r0, #16
90025fa8:	f53f af37 	bmi.w	90025e1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025fac:	3901      	subs	r1, #1
90025fae:	4288      	cmp	r0, r1
90025fb0:	f6bf af33 	bge.w	90025e1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025fb4:	9920      	ldr	r1, [sp, #128]	@ 0x80
90025fb6:	fb01 6303 	mla	r3, r1, r3, r6
90025fba:	141b      	asrs	r3, r3, #16
90025fbc:	f53f af2d 	bmi.w	90025e1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025fc0:	3a01      	subs	r2, #1
90025fc2:	4293      	cmp	r3, r2
90025fc4:	f6bf af29 	bge.w	90025e1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025fc8:	46a8      	mov	r8, r5
90025fca:	f8dd 901c 	ldr.w	r9, [sp, #28]
90025fce:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
90025fd2:	f1b8 0f00 	cmp.w	r8, #0
90025fd6:	dc60      	bgt.n	9002609a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
90025fd8:	9b07      	ldr	r3, [sp, #28]
90025fda:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90025fde:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90025fe2:	9307      	str	r3, [sp, #28]
90025fe4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90025fe6:	2b00      	cmp	r3, #0
90025fe8:	f340 80f8 	ble.w	900261dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90025fec:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90025ff0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90025ff2:	ee30 0a04 	vadd.f32	s0, s0, s8
90025ff6:	ee70 0aa4 	vadd.f32	s1, s1, s9
90025ffa:	eef0 6a62 	vmov.f32	s13, s5
90025ffe:	eec7 7a00 	vdiv.f32	s15, s14, s0
90026002:	ee31 1a05 	vadd.f32	s2, s2, s10
90026006:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002600a:	ee16 4a90 	vmov	r4, s13
9002600e:	eef0 6a43 	vmov.f32	s13, s6
90026012:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026016:	ee16 6a90 	vmov	r6, s13
9002601a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002601e:	ee61 7a27 	vmul.f32	s15, s2, s15
90026022:	ee77 2a62 	vsub.f32	s5, s14, s5
90026026:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002602a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002602e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90026032:	ee12 2a90 	vmov	r2, s5
90026036:	eef0 2a47 	vmov.f32	s5, s14
9002603a:	fb92 f3f3 	sdiv	r3, r2, r3
9002603e:	ee13 2a10 	vmov	r2, s6
90026042:	931f      	str	r3, [sp, #124]	@ 0x7c
90026044:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90026046:	eeb0 3a67 	vmov.f32	s6, s15
9002604a:	fb92 f3f3 	sdiv	r3, r2, r3
9002604e:	9320      	str	r3, [sp, #128]	@ 0x80
90026050:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90026052:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90026054:	3b01      	subs	r3, #1
90026056:	930a      	str	r3, [sp, #40]	@ 0x28
90026058:	bf08      	it	eq
9002605a:	4615      	moveq	r5, r2
9002605c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002605e:	bf18      	it	ne
90026060:	461d      	movne	r5, r3
90026062:	e6af      	b.n	90025dc4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90026064:	f111 0a01 	adds.w	sl, r1, #1
90026068:	d486      	bmi.n	90025f78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002606a:	45d6      	cmp	lr, sl
9002606c:	db84      	blt.n	90025f78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002606e:	f110 0a01 	adds.w	sl, r0, #1
90026072:	d481      	bmi.n	90025f78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90026074:	4553      	cmp	r3, sl
90026076:	f6ff af7f 	blt.w	90025f78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002607a:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
9002607c:	b21b      	sxth	r3, r3
9002607e:	9101      	str	r1, [sp, #4]
90026080:	4641      	mov	r1, r8
90026082:	9300      	str	r3, [sp, #0]
90026084:	fa0f f38e 	sxth.w	r3, lr
90026088:	e9cd 0202 	strd	r0, r2, [sp, #8]
9002608c:	e9cd c704 	strd	ip, r7, [sp, #16]
90026090:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90026092:	9811      	ldr	r0, [sp, #68]	@ 0x44
90026094:	f7ff fdb2 	bl	90025bfc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
90026098:	e76e      	b.n	90025f78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002609a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002609c:	1430      	asrs	r0, r6, #16
9002609e:	9f09      	ldr	r7, [sp, #36]	@ 0x24
900260a0:	f3c6 3e03 	ubfx	lr, r6, #12, #4
900260a4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900260a8:	1423      	asrs	r3, r4, #16
900260aa:	f3c4 3203 	ubfx	r2, r4, #12, #4
900260ae:	fb01 3000 	mla	r0, r1, r0, r3
900260b2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900260b4:	eb03 0340 	add.w	r3, r3, r0, lsl #1
900260b8:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
900260bc:	8858      	ldrh	r0, [r3, #2]
900260be:	f1be 0f00 	cmp.w	lr, #0
900260c2:	d00b      	beq.n	900260dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
900260c4:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
900260c8:	3901      	subs	r1, #1
900260ca:	0049      	lsls	r1, r1, #1
900260cc:	3102      	adds	r1, #2
900260ce:	eb03 0b01 	add.w	fp, r3, r1
900260d2:	5a5b      	ldrh	r3, [r3, r1]
900260d4:	930e      	str	r3, [sp, #56]	@ 0x38
900260d6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
900260da:	930f      	str	r3, [sp, #60]	@ 0x3c
900260dc:	ea4f 410c 	mov.w	r1, ip, lsl #16
900260e0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
900260e4:	fb12 f30e 	smulbb	r3, r2, lr
900260e8:	ea4f 4b00 	mov.w	fp, r0, lsl #16
900260ec:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
900260f0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900260f4:	10db      	asrs	r3, r3, #3
900260f6:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900260fa:	ea41 010c 	orr.w	r1, r1, ip
900260fe:	f1ce 0c10 	rsb	ip, lr, #16
90026102:	ea4b 0000 	orr.w	r0, fp, r0
90026106:	9f08      	ldr	r7, [sp, #32]
90026108:	ebac 0c02 	sub.w	ip, ip, r2
9002610c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90026110:	f108 38ff 	add.w	r8, r8, #4294967295
90026114:	4350      	muls	r0, r2
90026116:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
9002611a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9002611c:	fb0c 0c01 	mla	ip, ip, r1, r0
90026120:	980e      	ldr	r0, [sp, #56]	@ 0x38
90026122:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90026126:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
9002612a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9002612c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90026130:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90026134:	0412      	lsls	r2, r2, #16
90026136:	ea4b 0101 	orr.w	r1, fp, r1
9002613a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
9002613e:	fb03 c101 	mla	r1, r3, r1, ip
90026142:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90026146:	4302      	orrs	r2, r0
90026148:	fb03 1202 	mla	r2, r3, r2, r1
9002614c:	ea4f 5b52 	mov.w	fp, r2, lsr #21
90026150:	0952      	lsrs	r2, r2, #5
90026152:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
90026156:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
9002615a:	f8b9 2000 	ldrh.w	r2, [r9]
9002615e:	ea4b 0303 	orr.w	r3, fp, r3
90026162:	1211      	asrs	r1, r2, #8
90026164:	ea4f 0ce2 	mov.w	ip, r2, asr #3
90026168:	b29b      	uxth	r3, r3
9002616a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9002616e:	00d2      	lsls	r2, r2, #3
90026170:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
90026174:	fb11 f107 	smulbb	r1, r1, r7
90026178:	1218      	asrs	r0, r3, #8
9002617a:	fb1c fc07 	smulbb	ip, ip, r7
9002617e:	b2d2      	uxtb	r2, r2
90026180:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90026184:	fb12 f207 	smulbb	r2, r2, r7
90026188:	fb00 100a 	mla	r0, r0, sl, r1
9002618c:	10d9      	asrs	r1, r3, #3
9002618e:	00db      	lsls	r3, r3, #3
90026190:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90026194:	b280      	uxth	r0, r0
90026196:	b2db      	uxtb	r3, r3
90026198:	fb01 c10a 	mla	r1, r1, sl, ip
9002619c:	fb03 230a 	mla	r3, r3, sl, r2
900261a0:	1c42      	adds	r2, r0, #1
900261a2:	b289      	uxth	r1, r1
900261a4:	b29b      	uxth	r3, r3
900261a6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900261aa:	f101 0c01 	add.w	ip, r1, #1
900261ae:	1c5a      	adds	r2, r3, #1
900261b0:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
900261b4:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
900261b8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
900261bc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900261be:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900261c2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900261c6:	441c      	add	r4, r3
900261c8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
900261cc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900261ce:	4310      	orrs	r0, r2
900261d0:	441e      	add	r6, r3
900261d2:	ea40 000c 	orr.w	r0, r0, ip
900261d6:	f829 0b02 	strh.w	r0, [r9], #2
900261da:	e6fa      	b.n	90025fd2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
900261dc:	b013      	add	sp, #76	@ 0x4c
900261de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900261e2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
900261e2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900261e6:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
900261ea:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
900261ee:	fb0e 4703 	mla	r7, lr, r3, r4
900261f2:	f1be 0f00 	cmp.w	lr, #0
900261f6:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
900261fa:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
900261fe:	eb02 0847 	add.w	r8, r2, r7, lsl #1
90026202:	8808      	ldrh	r0, [r1, #0]
90026204:	db60      	blt.n	900262c8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90026206:	45f1      	cmp	r9, lr
90026208:	dd5e      	ble.n	900262c8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
9002620a:	2c00      	cmp	r4, #0
9002620c:	db5a      	blt.n	900262c4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
9002620e:	42a3      	cmp	r3, r4
90026210:	dd58      	ble.n	900262c4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90026212:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
90026216:	1c62      	adds	r2, r4, #1
90026218:	d459      	bmi.n	900262ce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
9002621a:	4293      	cmp	r3, r2
9002621c:	dd57      	ble.n	900262ce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
9002621e:	2d00      	cmp	r5, #0
90026220:	d055      	beq.n	900262ce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90026222:	f8b8 7002 	ldrh.w	r7, [r8, #2]
90026226:	f11e 0e01 	adds.w	lr, lr, #1
9002622a:	d454      	bmi.n	900262d6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
9002622c:	45f1      	cmp	r9, lr
9002622e:	dd52      	ble.n	900262d6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90026230:	2e00      	cmp	r6, #0
90026232:	d050      	beq.n	900262d6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90026234:	2c00      	cmp	r4, #0
90026236:	db4c      	blt.n	900262d2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90026238:	42a3      	cmp	r3, r4
9002623a:	dd4a      	ble.n	900262d2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
9002623c:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
90026240:	3401      	adds	r4, #1
90026242:	d405      	bmi.n	90026250 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90026244:	42a3      	cmp	r3, r4
90026246:	dd03      	ble.n	90026250 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90026248:	b115      	cbz	r5, 90026250 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
9002624a:	3301      	adds	r3, #1
9002624c:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
90026250:	fb15 f406 	smulbb	r4, r5, r6
90026254:	ea4f 430c 	mov.w	r3, ip, lsl #16
90026258:	ea4f 4e07 	mov.w	lr, r7, lsl #16
9002625c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90026260:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90026264:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90026268:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
9002626c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90026270:	ea43 0c0c 	orr.w	ip, r3, ip
90026274:	f1c6 0310 	rsb	r3, r6, #16
90026278:	ea4e 0707 	orr.w	r7, lr, r7
9002627c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90026280:	1b5b      	subs	r3, r3, r5
90026282:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
90026286:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9002628a:	437d      	muls	r5, r7
9002628c:	fb03 5c0c 	mla	ip, r3, ip, r5
90026290:	0403      	lsls	r3, r0, #16
90026292:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90026296:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9002629a:	4318      	orrs	r0, r3
9002629c:	0413      	lsls	r3, r2, #16
9002629e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900262a2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900262a6:	fb04 c000 	mla	r0, r4, r0, ip
900262aa:	4313      	orrs	r3, r2
900262ac:	fb06 0003 	mla	r0, r6, r3, r0
900262b0:	0d43      	lsrs	r3, r0, #21
900262b2:	0940      	lsrs	r0, r0, #5
900262b4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900262b8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900262bc:	4318      	orrs	r0, r3
900262be:	8008      	strh	r0, [r1, #0]
900262c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900262c4:	4684      	mov	ip, r0
900262c6:	e7a6      	b.n	90026216 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
900262c8:	4607      	mov	r7, r0
900262ca:	4684      	mov	ip, r0
900262cc:	e7ab      	b.n	90026226 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
900262ce:	4607      	mov	r7, r0
900262d0:	e7a9      	b.n	90026226 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
900262d2:	4602      	mov	r2, r0
900262d4:	e7b4      	b.n	90026240 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
900262d6:	4602      	mov	r2, r0
900262d8:	e7ba      	b.n	90026250 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

900262da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900262da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900262de:	b08f      	sub	sp, #60	@ 0x3c
900262e0:	461d      	mov	r5, r3
900262e2:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
900262e4:	9107      	str	r1, [sp, #28]
900262e6:	920c      	str	r2, [sp, #48]	@ 0x30
900262e8:	6859      	ldr	r1, [r3, #4]
900262ea:	681b      	ldr	r3, [r3, #0]
900262ec:	900d      	str	r0, [sp, #52]	@ 0x34
900262ee:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
900262f2:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
900262f6:	fb01 2707 	mla	r7, r1, r7, r2
900262fa:	eb03 0747 	add.w	r7, r3, r7, lsl #1
900262fe:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90026300:	f8d3 8000 	ldr.w	r8, [r3]
90026304:	9b07      	ldr	r3, [sp, #28]
90026306:	2b00      	cmp	r3, #0
90026308:	dc03      	bgt.n	90026312 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9002630a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002630c:	2b00      	cmp	r3, #0
9002630e:	f340 8182 	ble.w	90026616 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90026312:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90026314:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026318:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002631c:	1e48      	subs	r0, r1, #1
9002631e:	f102 3cff 	add.w	ip, r2, #4294967295
90026322:	2d00      	cmp	r5, #0
90026324:	f340 809b 	ble.w	9002645e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
90026328:	ea5f 4e24 	movs.w	lr, r4, asr #16
9002632c:	ea4f 4326 	mov.w	r3, r6, asr #16
90026330:	d406      	bmi.n	90026340 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90026332:	4586      	cmp	lr, r0
90026334:	da04      	bge.n	90026340 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90026336:	2b00      	cmp	r3, #0
90026338:	db02      	blt.n	90026340 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9002633a:	4563      	cmp	r3, ip
9002633c:	f2c0 8090 	blt.w	90026460 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90026340:	f11e 0e01 	adds.w	lr, lr, #1
90026344:	f100 8084 	bmi.w	90026450 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90026348:	4571      	cmp	r1, lr
9002634a:	f2c0 8081 	blt.w	90026450 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
9002634e:	3301      	adds	r3, #1
90026350:	d47e      	bmi.n	90026450 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90026352:	429a      	cmp	r2, r3
90026354:	db7c      	blt.n	90026450 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90026356:	46aa      	mov	sl, r5
90026358:	46b9      	mov	r9, r7
9002635a:	f1ba 0f00 	cmp.w	sl, #0
9002635e:	f340 8099 	ble.w	90026494 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
90026362:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90026364:	1421      	asrs	r1, r4, #16
90026366:	ea4f 4026 	mov.w	r0, r6, asr #16
9002636a:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002636e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90026372:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90026376:	f100 80d1 	bmi.w	9002651c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9002637a:	f10e 3bff 	add.w	fp, lr, #4294967295
9002637e:	4559      	cmp	r1, fp
90026380:	f280 80cc 	bge.w	9002651c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90026384:	2800      	cmp	r0, #0
90026386:	f2c0 80c9 	blt.w	9002651c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9002638a:	f103 3bff 	add.w	fp, r3, #4294967295
9002638e:	4558      	cmp	r0, fp
90026390:	f280 80c4 	bge.w	9002651c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90026394:	fa0f fe8e 	sxth.w	lr, lr
90026398:	fb00 110e 	mla	r1, r0, lr, r1
9002639c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
900263a0:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
900263a4:	8841      	ldrh	r1, [r0, #2]
900263a6:	f1bc 0f00 	cmp.w	ip, #0
900263aa:	d00b      	beq.n	900263c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
900263ac:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
900263b0:	3b01      	subs	r3, #1
900263b2:	005b      	lsls	r3, r3, #1
900263b4:	3302      	adds	r3, #2
900263b6:	eb00 0e03 	add.w	lr, r0, r3
900263ba:	5ac3      	ldrh	r3, [r0, r3]
900263bc:	9308      	str	r3, [sp, #32]
900263be:	f8be 3002 	ldrh.w	r3, [lr, #2]
900263c2:	9309      	str	r3, [sp, #36]	@ 0x24
900263c4:	ea4f 400b 	mov.w	r0, fp, lsl #16
900263c8:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
900263cc:	fb12 f30c 	smulbb	r3, r2, ip
900263d0:	f1cc 0e10 	rsb	lr, ip, #16
900263d4:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900263d8:	10db      	asrs	r3, r3, #3
900263da:	ebae 0e02 	sub.w	lr, lr, r2
900263de:	ea40 000b 	orr.w	r0, r0, fp
900263e2:	ea4f 4b01 	mov.w	fp, r1, lsl #16
900263e6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
900263ea:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900263ee:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900263f2:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
900263f6:	ea4b 0101 	orr.w	r1, fp, r1
900263fa:	4351      	muls	r1, r2
900263fc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900263fe:	fb0e 1e00 	mla	lr, lr, r0, r1
90026402:	0410      	lsls	r0, r2, #16
90026404:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90026408:	9908      	ldr	r1, [sp, #32]
9002640a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
9002640e:	4310      	orrs	r0, r2
90026410:	9a08      	ldr	r2, [sp, #32]
90026412:	0412      	lsls	r2, r2, #16
90026414:	fb03 e000 	mla	r0, r3, r0, lr
90026418:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
9002641c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90026420:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90026424:	ea42 020e 	orr.w	r2, r2, lr
90026428:	fb03 0302 	mla	r3, r3, r2, r0
9002642c:	0d5a      	lsrs	r2, r3, #21
9002642e:	095b      	lsrs	r3, r3, #5
90026430:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026434:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90026438:	4313      	orrs	r3, r2
9002643a:	f8a9 3000 	strh.w	r3, [r9]
9002643e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90026440:	f109 0902 	add.w	r9, r9, #2
90026444:	f10a 3aff 	add.w	sl, sl, #4294967295
90026448:	441c      	add	r4, r3
9002644a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002644c:	441e      	add	r6, r3
9002644e:	e784      	b.n	9002635a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
90026450:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90026452:	3d01      	subs	r5, #1
90026454:	3702      	adds	r7, #2
90026456:	441c      	add	r4, r3
90026458:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002645a:	441e      	add	r6, r3
9002645c:	e761      	b.n	90026322 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9002645e:	d01d      	beq.n	9002649c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90026460:	1e6b      	subs	r3, r5, #1
90026462:	981b      	ldr	r0, [sp, #108]	@ 0x6c
90026464:	fb00 4003 	mla	r0, r0, r3, r4
90026468:	1400      	asrs	r0, r0, #16
9002646a:	f53f af74 	bmi.w	90026356 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9002646e:	3901      	subs	r1, #1
90026470:	4288      	cmp	r0, r1
90026472:	f6bf af70 	bge.w	90026356 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90026476:	991c      	ldr	r1, [sp, #112]	@ 0x70
90026478:	fb01 6303 	mla	r3, r1, r3, r6
9002647c:	141b      	asrs	r3, r3, #16
9002647e:	f53f af6a 	bmi.w	90026356 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90026482:	3a01      	subs	r2, #1
90026484:	4293      	cmp	r3, r2
90026486:	f6bf af66 	bge.w	90026356 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9002648a:	46a9      	mov	r9, r5
9002648c:	46ba      	mov	sl, r7
9002648e:	f1b9 0f00 	cmp.w	r9, #0
90026492:	dc5b      	bgt.n	9002654c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90026494:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90026498:	eb07 0745 	add.w	r7, r7, r5, lsl #1
9002649c:	9b07      	ldr	r3, [sp, #28]
9002649e:	2b00      	cmp	r3, #0
900264a0:	f340 80b9 	ble.w	90026616 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
900264a4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900264a8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900264aa:	ee30 0a04 	vadd.f32	s0, s0, s8
900264ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
900264b2:	eef0 6a62 	vmov.f32	s13, s5
900264b6:	eec7 7a00 	vdiv.f32	s15, s14, s0
900264ba:	ee31 1a05 	vadd.f32	s2, s2, s10
900264be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900264c2:	ee16 4a90 	vmov	r4, s13
900264c6:	eef0 6a43 	vmov.f32	s13, s6
900264ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900264ce:	ee16 6a90 	vmov	r6, s13
900264d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
900264d6:	ee61 7a27 	vmul.f32	s15, s2, s15
900264da:	ee77 2a62 	vsub.f32	s5, s14, s5
900264de:	ee37 3ac3 	vsub.f32	s6, s15, s6
900264e2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900264e6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900264ea:	ee12 2a90 	vmov	r2, s5
900264ee:	eef0 2a47 	vmov.f32	s5, s14
900264f2:	fb92 f3f3 	sdiv	r3, r2, r3
900264f6:	ee13 2a10 	vmov	r2, s6
900264fa:	931b      	str	r3, [sp, #108]	@ 0x6c
900264fc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900264fe:	eeb0 3a67 	vmov.f32	s6, s15
90026502:	fb92 f3f3 	sdiv	r3, r2, r3
90026506:	931c      	str	r3, [sp, #112]	@ 0x70
90026508:	9b07      	ldr	r3, [sp, #28]
9002650a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9002650c:	3b01      	subs	r3, #1
9002650e:	9307      	str	r3, [sp, #28]
90026510:	bf08      	it	eq
90026512:	4615      	moveq	r5, r2
90026514:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90026516:	bf18      	it	ne
90026518:	461d      	movne	r5, r3
9002651a:	e6f3      	b.n	90026304 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9002651c:	f111 0b01 	adds.w	fp, r1, #1
90026520:	d48d      	bmi.n	9002643e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90026522:	45de      	cmp	lr, fp
90026524:	db8b      	blt.n	9002643e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90026526:	f110 0b01 	adds.w	fp, r0, #1
9002652a:	d488      	bmi.n	9002643e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9002652c:	455b      	cmp	r3, fp
9002652e:	db86      	blt.n	9002643e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90026530:	b21b      	sxth	r3, r3
90026532:	e9cd 1001 	strd	r1, r0, [sp, #4]
90026536:	e9cd 2c03 	strd	r2, ip, [sp, #12]
9002653a:	9300      	str	r3, [sp, #0]
9002653c:	4642      	mov	r2, r8
9002653e:	fa0f f38e 	sxth.w	r3, lr
90026542:	4649      	mov	r1, r9
90026544:	980d      	ldr	r0, [sp, #52]	@ 0x34
90026546:	f7ff fe4c 	bl	900261e2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
9002654a:	e778      	b.n	9002643e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9002654c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002654e:	1420      	asrs	r0, r4, #16
90026550:	1431      	asrs	r1, r6, #16
90026552:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90026556:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
9002655a:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002655e:	fb03 0101 	mla	r1, r3, r1, r0
90026562:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90026566:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
9002656a:	8841      	ldrh	r1, [r0, #2]
9002656c:	f1be 0f00 	cmp.w	lr, #0
90026570:	d00b      	beq.n	9002658a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
90026572:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
90026576:	3b01      	subs	r3, #1
90026578:	005b      	lsls	r3, r3, #1
9002657a:	3302      	adds	r3, #2
9002657c:	eb00 0b03 	add.w	fp, r0, r3
90026580:	5ac3      	ldrh	r3, [r0, r3]
90026582:	930a      	str	r3, [sp, #40]	@ 0x28
90026584:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90026588:	930b      	str	r3, [sp, #44]	@ 0x2c
9002658a:	ea4f 400c 	mov.w	r0, ip, lsl #16
9002658e:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90026592:	fb12 f30e 	smulbb	r3, r2, lr
90026596:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9002659a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
9002659e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
900265a2:	10db      	asrs	r3, r3, #3
900265a4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900265a8:	ea40 000c 	orr.w	r0, r0, ip
900265ac:	f1ce 0c10 	rsb	ip, lr, #16
900265b0:	ea4b 0101 	orr.w	r1, fp, r1
900265b4:	f109 39ff 	add.w	r9, r9, #4294967295
900265b8:	ebac 0c02 	sub.w	ip, ip, r2
900265bc:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900265c0:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
900265c4:	4351      	muls	r1, r2
900265c6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900265c8:	fb0c 1c00 	mla	ip, ip, r0, r1
900265cc:	990a      	ldr	r1, [sp, #40]	@ 0x28
900265ce:	ea4f 4b02 	mov.w	fp, r2, lsl #16
900265d2:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
900265d6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900265d8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900265dc:	0412      	lsls	r2, r2, #16
900265de:	ea4b 0000 	orr.w	r0, fp, r0
900265e2:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
900265e6:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900265ea:	fb03 c000 	mla	r0, r3, r0, ip
900265ee:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
900265f2:	ea42 0b0b 	orr.w	fp, r2, fp
900265f6:	fb03 000b 	mla	r0, r3, fp, r0
900265fa:	0d43      	lsrs	r3, r0, #21
900265fc:	0940      	lsrs	r0, r0, #5
900265fe:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90026602:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90026606:	4318      	orrs	r0, r3
90026608:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
9002660a:	441c      	add	r4, r3
9002660c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002660e:	f82a 0b02 	strh.w	r0, [sl], #2
90026612:	441e      	add	r6, r3
90026614:	e73b      	b.n	9002648e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
90026616:	b00f      	add	sp, #60	@ 0x3c
90026618:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002661c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
9002661c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026620:	b085      	sub	sp, #20
90026622:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
90026626:	9102      	str	r1, [sp, #8]
90026628:	2c00      	cmp	r4, #0
9002662a:	fb04 7103 	mla	r1, r4, r3, r7
9002662e:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
90026632:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
90026636:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
9002663a:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
9002663e:	f2c0 811b 	blt.w	90026878 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90026642:	45a6      	cmp	lr, r4
90026644:	f340 8118 	ble.w	90026878 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90026648:	2f00      	cmp	r7, #0
9002664a:	f2c0 8113 	blt.w	90026874 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
9002664e:	42bb      	cmp	r3, r7
90026650:	f340 8110 	ble.w	90026874 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90026654:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90026658:	1c7a      	adds	r2, r7, #1
9002665a:	f100 8110 	bmi.w	9002687e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
9002665e:	4293      	cmp	r3, r2
90026660:	f340 810d 	ble.w	9002687e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90026664:	2e00      	cmp	r6, #0
90026666:	f000 810c 	beq.w	90026882 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
9002666a:	f8dc 1004 	ldr.w	r1, [ip, #4]
9002666e:	3401      	adds	r4, #1
90026670:	f100 810b 	bmi.w	9002688a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90026674:	45a6      	cmp	lr, r4
90026676:	f340 8108 	ble.w	9002688a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
9002667a:	2800      	cmp	r0, #0
9002667c:	f000 8108 	beq.w	90026890 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
90026680:	2f00      	cmp	r7, #0
90026682:	f2c0 8100 	blt.w	90026886 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90026686:	42bb      	cmp	r3, r7
90026688:	f340 80fd 	ble.w	90026886 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
9002668c:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90026690:	3701      	adds	r7, #1
90026692:	f100 8100 	bmi.w	90026896 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90026696:	42bb      	cmp	r3, r7
90026698:	f340 80fd 	ble.w	90026896 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
9002669c:	2e00      	cmp	r6, #0
9002669e:	f000 80fc 	beq.w	9002689a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
900266a2:	3301      	adds	r3, #1
900266a4:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
900266a8:	b2b6      	uxth	r6, r6
900266aa:	b280      	uxth	r0, r0
900266ac:	ea4f 6a11 	mov.w	sl, r1, lsr #24
900266b0:	fb00 fe06 	mul.w	lr, r0, r6
900266b4:	0136      	lsls	r6, r6, #4
900266b6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
900266ba:	ebce 1000 	rsb	r0, lr, r0, lsl #4
900266be:	eba6 070e 	sub.w	r7, r6, lr
900266c2:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
900266c6:	ea4f 6914 	mov.w	r9, r4, lsr #24
900266ca:	b280      	uxth	r0, r0
900266cc:	b2bf      	uxth	r7, r7
900266ce:	1a1b      	subs	r3, r3, r0
900266d0:	ea4f 6812 	mov.w	r8, r2, lsr #24
900266d4:	fb0a f607 	mul.w	r6, sl, r7
900266d8:	b29b      	uxth	r3, r3
900266da:	fb0b 6603 	mla	r6, fp, r3, r6
900266de:	fb00 6609 	mla	r6, r0, r9, r6
900266e2:	fb0e 6608 	mla	r6, lr, r8, r6
900266e6:	f3c6 2607 	ubfx	r6, r6, #8, #8
900266ea:	9600      	str	r6, [sp, #0]
900266ec:	2e00      	cmp	r6, #0
900266ee:	f000 80be 	beq.w	9002686e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
900266f2:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900266f6:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
900266fa:	9e02      	ldr	r6, [sp, #8]
900266fc:	fb0b fc0c 	mul.w	ip, fp, ip
90026700:	fb0b f505 	mul.w	r5, fp, r5
90026704:	8836      	ldrh	r6, [r6, #0]
90026706:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
9002670a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
9002670e:	9501      	str	r5, [sp, #4]
90026710:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
90026714:	44dc      	add	ip, fp
90026716:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002671a:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
9002671e:	9503      	str	r5, [sp, #12]
90026720:	9d01      	ldr	r5, [sp, #4]
90026722:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
90026726:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9002672a:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
9002672e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90026732:	fb0a fc0c 	mul.w	ip, sl, ip
90026736:	ea4f 2b15 	mov.w	fp, r5, lsr #8
9002673a:	fb0a fa01 	mul.w	sl, sl, r1
9002673e:	ea4f 251c 	mov.w	r5, ip, lsr #8
90026742:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90026746:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
9002674a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
9002674e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90026752:	4465      	add	r5, ip
90026754:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90026758:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
9002675c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026760:	fb09 fc0c 	mul.w	ip, r9, ip
90026764:	0a2d      	lsrs	r5, r5, #8
90026766:	fb09 f904 	mul.w	r9, r9, r4
9002676a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002676e:	ea4f 211c 	mov.w	r1, ip, lsr #8
90026772:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90026776:	f509 7480 	add.w	r4, r9, #256	@ 0x100
9002677a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
9002677e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90026782:	437d      	muls	r5, r7
90026784:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90026788:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
9002678c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90026790:	4461      	add	r1, ip
90026792:	fb08 f404 	mul.w	r4, r8, r4
90026796:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002679a:	fb08 f802 	mul.w	r8, r8, r2
9002679e:	0a09      	lsrs	r1, r1, #8
900267a0:	0a22      	lsrs	r2, r4, #8
900267a2:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
900267a6:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
900267aa:	fb07 f70a 	mul.w	r7, r7, sl
900267ae:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
900267b2:	4414      	add	r4, r2
900267b4:	f508 7280 	add.w	r2, r8, #256	@ 0x100
900267b8:	0a24      	lsrs	r4, r4, #8
900267ba:	eb02 2818 	add.w	r8, r2, r8, lsr #8
900267be:	9a03      	ldr	r2, [sp, #12]
900267c0:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
900267c4:	fb02 5503 	mla	r5, r2, r3, r5
900267c8:	ea4f 2818 	mov.w	r8, r8, lsr #8
900267cc:	9a00      	ldr	r2, [sp, #0]
900267ce:	fb04 540e 	mla	r4, r4, lr, r5
900267d2:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
900267d6:	1235      	asrs	r5, r6, #8
900267d8:	fb01 4100 	mla	r1, r1, r0, r4
900267dc:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900267e0:	0a09      	lsrs	r1, r1, #8
900267e2:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
900267e6:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
900267ea:	fb03 7101 	mla	r1, r3, r1, r7
900267ee:	fb0e 1e08 	mla	lr, lr, r8, r1
900267f2:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
900267f6:	fb00 e101 	mla	r1, r0, r1, lr
900267fa:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
900267fe:	b287      	uxth	r7, r0
90026800:	0a09      	lsrs	r1, r1, #8
90026802:	437a      	muls	r2, r7
90026804:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90026808:	1c53      	adds	r3, r2, #1
9002680a:	4321      	orrs	r1, r4
9002680c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90026810:	0c0a      	lsrs	r2, r1, #16
90026812:	f3c1 2407 	ubfx	r4, r1, #8, #8
90026816:	ea6f 2313 	mvn.w	r3, r3, lsr #8
9002681a:	b2c8      	uxtb	r0, r1
9002681c:	fb12 f207 	smulbb	r2, r2, r7
90026820:	fb14 f407 	smulbb	r4, r4, r7
90026824:	b2db      	uxtb	r3, r3
90026826:	fb10 f007 	smulbb	r0, r0, r7
9002682a:	fb05 2503 	mla	r5, r5, r3, r2
9002682e:	10f2      	asrs	r2, r6, #3
90026830:	00f6      	lsls	r6, r6, #3
90026832:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90026836:	b2ad      	uxth	r5, r5
90026838:	b2f6      	uxtb	r6, r6
9002683a:	fb02 4203 	mla	r2, r2, r3, r4
9002683e:	fb06 0303 	mla	r3, r6, r3, r0
90026842:	b294      	uxth	r4, r2
90026844:	b299      	uxth	r1, r3
90026846:	1c6b      	adds	r3, r5, #1
90026848:	1c62      	adds	r2, r4, #1
9002684a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002684e:	1c4b      	adds	r3, r1, #1
90026850:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90026854:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90026858:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9002685c:	0952      	lsrs	r2, r2, #5
9002685e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90026862:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026866:	432b      	orrs	r3, r5
90026868:	4313      	orrs	r3, r2
9002686a:	9a02      	ldr	r2, [sp, #8]
9002686c:	8013      	strh	r3, [r2, #0]
9002686e:	b005      	add	sp, #20
90026870:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026874:	2500      	movs	r5, #0
90026876:	e6ef      	b.n	90026658 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
90026878:	2100      	movs	r1, #0
9002687a:	460d      	mov	r5, r1
9002687c:	e6f7      	b.n	9002666e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
9002687e:	2100      	movs	r1, #0
90026880:	e6f5      	b.n	9002666e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90026882:	4631      	mov	r1, r6
90026884:	e6f3      	b.n	9002666e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90026886:	2400      	movs	r4, #0
90026888:	e702      	b.n	90026690 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
9002688a:	2200      	movs	r2, #0
9002688c:	4614      	mov	r4, r2
9002688e:	e70b      	b.n	900266a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90026890:	4602      	mov	r2, r0
90026892:	4604      	mov	r4, r0
90026894:	e708      	b.n	900266a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90026896:	2200      	movs	r2, #0
90026898:	e706      	b.n	900266a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
9002689a:	4632      	mov	r2, r6
9002689c:	e704      	b.n	900266a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

9002689e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002689e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900268a2:	b09d      	sub	sp, #116	@ 0x74
900268a4:	9219      	str	r2, [sp, #100]	@ 0x64
900268a6:	9307      	str	r3, [sp, #28]
900268a8:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
900268aa:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
900268ae:	901b      	str	r0, [sp, #108]	@ 0x6c
900268b0:	931a      	str	r3, [sp, #104]	@ 0x68
900268b2:	6850      	ldr	r0, [r2, #4]
900268b4:	9117      	str	r1, [sp, #92]	@ 0x5c
900268b6:	6812      	ldr	r2, [r2, #0]
900268b8:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
900268bc:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
900268c0:	fb00 1303 	mla	r3, r0, r3, r1
900268c4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900268c8:	930a      	str	r3, [sp, #40]	@ 0x28
900268ca:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
900268cc:	681b      	ldr	r3, [r3, #0]
900268ce:	9310      	str	r3, [sp, #64]	@ 0x40
900268d0:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
900268d4:	930b      	str	r3, [sp, #44]	@ 0x2c
900268d6:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
900268d8:	2b00      	cmp	r3, #0
900268da:	dc03      	bgt.n	900268e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
900268dc:	9b19      	ldr	r3, [sp, #100]	@ 0x64
900268de:	2b00      	cmp	r3, #0
900268e0:	f340 8375 	ble.w	90026fce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
900268e4:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
900268e6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900268ea:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900268ee:	1e48      	subs	r0, r1, #1
900268f0:	1e57      	subs	r7, r2, #1
900268f2:	9b07      	ldr	r3, [sp, #28]
900268f4:	2b00      	cmp	r3, #0
900268f6:	f340 818e 	ble.w	90026c16 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
900268fa:	ea5f 4c24 	movs.w	ip, r4, asr #16
900268fe:	ea4f 4326 	mov.w	r3, r6, asr #16
90026902:	d406      	bmi.n	90026912 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90026904:	4584      	cmp	ip, r0
90026906:	da04      	bge.n	90026912 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90026908:	2b00      	cmp	r3, #0
9002690a:	db02      	blt.n	90026912 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9002690c:	42bb      	cmp	r3, r7
9002690e:	f2c0 8183 	blt.w	90026c18 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
90026912:	f11c 0c01 	adds.w	ip, ip, #1
90026916:	f100 8173 	bmi.w	90026c00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
9002691a:	4561      	cmp	r1, ip
9002691c:	f2c0 8170 	blt.w	90026c00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90026920:	3301      	adds	r3, #1
90026922:	f100 816d 	bmi.w	90026c00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90026926:	429a      	cmp	r2, r3
90026928:	f2c0 816a 	blt.w	90026c00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
9002692c:	9b07      	ldr	r3, [sp, #28]
9002692e:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90026930:	9318      	str	r3, [sp, #96]	@ 0x60
90026932:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90026934:	2b00      	cmp	r3, #0
90026936:	f340 818c 	ble.w	90026c52 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
9002693a:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
9002693c:	ea4f 4c26 	mov.w	ip, r6, asr #16
90026940:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90026942:	f3c4 3003 	ubfx	r0, r4, #12, #4
90026946:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9002694a:	1422      	asrs	r2, r4, #16
9002694c:	f3c6 3103 	ubfx	r1, r6, #12, #4
90026950:	689b      	ldr	r3, [r3, #8]
90026952:	f100 81cd 	bmi.w	90026cf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90026956:	f103 38ff 	add.w	r8, r3, #4294967295
9002695a:	4542      	cmp	r2, r8
9002695c:	f280 81c8 	bge.w	90026cf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90026960:	f1bc 0f00 	cmp.w	ip, #0
90026964:	f2c0 81c4 	blt.w	90026cf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90026968:	f10e 38ff 	add.w	r8, lr, #4294967295
9002696c:	45c4      	cmp	ip, r8
9002696e:	f280 81bf 	bge.w	90026cf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90026972:	b21b      	sxth	r3, r3
90026974:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90026976:	fb0c 2203 	mla	r2, ip, r3, r2
9002697a:	eb05 0882 	add.w	r8, r5, r2, lsl #2
9002697e:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90026982:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90026986:	2800      	cmp	r0, #0
90026988:	f000 81a9 	beq.w	90026cde <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
9002698c:	f8d8 5004 	ldr.w	r5, [r8, #4]
90026990:	950c      	str	r5, [sp, #48]	@ 0x30
90026992:	0e2d      	lsrs	r5, r5, #24
90026994:	9513      	str	r5, [sp, #76]	@ 0x4c
90026996:	b181      	cbz	r1, 900269ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90026998:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
9002699c:	3b01      	subs	r3, #1
9002699e:	009b      	lsls	r3, r3, #2
900269a0:	3304      	adds	r3, #4
900269a2:	eb08 0c03 	add.w	ip, r8, r3
900269a6:	f858 3003 	ldr.w	r3, [r8, r3]
900269aa:	9308      	str	r3, [sp, #32]
900269ac:	0e1b      	lsrs	r3, r3, #24
900269ae:	9311      	str	r3, [sp, #68]	@ 0x44
900269b0:	f8dc 3004 	ldr.w	r3, [ip, #4]
900269b4:	930d      	str	r3, [sp, #52]	@ 0x34
900269b6:	0e1b      	lsrs	r3, r3, #24
900269b8:	9314      	str	r3, [sp, #80]	@ 0x50
900269ba:	b280      	uxth	r0, r0
900269bc:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900269be:	b289      	uxth	r1, r1
900269c0:	fb00 f901 	mul.w	r9, r0, r1
900269c4:	0100      	lsls	r0, r0, #4
900269c6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900269ca:	eba0 0809 	sub.w	r8, r0, r9
900269ce:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
900269d2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
900269d4:	b289      	uxth	r1, r1
900269d6:	fa1f f888 	uxth.w	r8, r8
900269da:	1a5b      	subs	r3, r3, r1
900269dc:	fb08 f000 	mul.w	r0, r8, r0
900269e0:	b29b      	uxth	r3, r3
900269e2:	fb03 000e 	mla	r0, r3, lr, r0
900269e6:	fb01 0005 	mla	r0, r1, r5, r0
900269ea:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900269ec:	fb09 0005 	mla	r0, r9, r5, r0
900269f0:	f3c0 2007 	ubfx	r0, r0, #8, #8
900269f4:	2800      	cmp	r0, #0
900269f6:	f000 80fa 	beq.w	90026bee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900269fa:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
900269fe:	d01b      	beq.n	90026a38 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
90026a00:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
90026a04:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90026a08:	fb0e fa0a 	mul.w	sl, lr, sl
90026a0c:	fb0e fe02 	mul.w	lr, lr, r2
90026a10:	ea4f 221a 	mov.w	r2, sl, lsr #8
90026a14:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90026a18:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
90026a1c:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90026a20:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90026a24:	4452      	add	r2, sl
90026a26:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026a2a:	0a12      	lsrs	r2, r2, #8
90026a2c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90026a30:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90026a34:	ea42 020c 	orr.w	r2, r2, ip
90026a38:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90026a3a:	2dff      	cmp	r5, #255	@ 0xff
90026a3c:	d021      	beq.n	90026a82 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
90026a3e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90026a40:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90026a44:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90026a46:	fb05 fb0b 	mul.w	fp, r5, fp
90026a4a:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90026a4c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026a50:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90026a52:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026a56:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90026a5a:	fb05 fa0a 	mul.w	sl, r5, sl
90026a5e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026a62:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90026a66:	44de      	add	lr, fp
90026a68:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90026a6c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026a70:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026a74:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026a78:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026a7c:	ea4e 050a 	orr.w	r5, lr, sl
90026a80:	950c      	str	r5, [sp, #48]	@ 0x30
90026a82:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90026a84:	2dff      	cmp	r5, #255	@ 0xff
90026a86:	d021      	beq.n	90026acc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
90026a88:	9d08      	ldr	r5, [sp, #32]
90026a8a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90026a8e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90026a90:	fb05 fb0b 	mul.w	fp, r5, fp
90026a94:	9d08      	ldr	r5, [sp, #32]
90026a96:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026a9a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90026a9c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026aa0:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90026aa4:	fb05 fa0a 	mul.w	sl, r5, sl
90026aa8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026aac:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90026ab0:	44de      	add	lr, fp
90026ab2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90026ab6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026aba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026abe:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026ac2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026ac6:	ea4e 050a 	orr.w	r5, lr, sl
90026aca:	9508      	str	r5, [sp, #32]
90026acc:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90026ace:	2dff      	cmp	r5, #255	@ 0xff
90026ad0:	d021      	beq.n	90026b16 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
90026ad2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90026ad4:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90026ad8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90026ada:	fb05 fb0b 	mul.w	fp, r5, fp
90026ade:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90026ae0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026ae4:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90026ae6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026aea:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90026aee:	fb05 fa0a 	mul.w	sl, r5, sl
90026af2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026af6:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90026afa:	44de      	add	lr, fp
90026afc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90026b00:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026b04:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026b08:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026b0c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026b10:	ea4e 050a 	orr.w	r5, lr, sl
90026b14:	950d      	str	r5, [sp, #52]	@ 0x34
90026b16:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90026b18:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
90026b1c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90026b20:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90026b24:	9d08      	ldr	r5, [sp, #32]
90026b26:	fb08 fc0c 	mul.w	ip, r8, ip
90026b2a:	fb03 cc0e 	mla	ip, r3, lr, ip
90026b2e:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90026b32:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90026b34:	fb01 cc0e 	mla	ip, r1, lr, ip
90026b38:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90026b3c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90026b3e:	fb09 cc0e 	mla	ip, r9, lr, ip
90026b42:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90026b46:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90026b48:	fb08 f80e 	mul.w	r8, r8, lr
90026b4c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026b50:	fb03 8202 	mla	r2, r3, r2, r8
90026b54:	9b08      	ldr	r3, [sp, #32]
90026b56:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026b5a:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
90026b5e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90026b60:	fb01 220a 	mla	r2, r1, sl, r2
90026b64:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
90026b68:	883b      	ldrh	r3, [r7, #0]
90026b6a:	fb09 2901 	mla	r9, r9, r1, r2
90026b6e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90026b70:	1219      	asrs	r1, r3, #8
90026b72:	4342      	muls	r2, r0
90026b74:	ea4f 2919 	mov.w	r9, r9, lsr #8
90026b78:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90026b7c:	1c50      	adds	r0, r2, #1
90026b7e:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90026b82:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90026b86:	ea4c 0c09 	orr.w	ip, ip, r9
90026b8a:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90026b8e:	ea4f 421c 	mov.w	r2, ip, lsr #16
90026b92:	f3cc 2e07 	ubfx	lr, ip, #8, #8
90026b96:	fa5f fc8c 	uxtb.w	ip, ip
90026b9a:	fb12 f205 	smulbb	r2, r2, r5
90026b9e:	b2c0      	uxtb	r0, r0
90026ba0:	fb1c fc05 	smulbb	ip, ip, r5
90026ba4:	fb01 2100 	mla	r1, r1, r0, r2
90026ba8:	10da      	asrs	r2, r3, #3
90026baa:	fb1e fe05 	smulbb	lr, lr, r5
90026bae:	00db      	lsls	r3, r3, #3
90026bb0:	b289      	uxth	r1, r1
90026bb2:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90026bb6:	b2db      	uxtb	r3, r3
90026bb8:	fb02 e200 	mla	r2, r2, r0, lr
90026bbc:	fb03 c300 	mla	r3, r3, r0, ip
90026bc0:	b292      	uxth	r2, r2
90026bc2:	fa1f fc83 	uxth.w	ip, r3
90026bc6:	1c4b      	adds	r3, r1, #1
90026bc8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90026bcc:	f10c 0301 	add.w	r3, ip, #1
90026bd0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
90026bd4:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90026bd8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90026bdc:	430b      	orrs	r3, r1
90026bde:	1c51      	adds	r1, r2, #1
90026be0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90026be4:	0952      	lsrs	r2, r2, #5
90026be6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026bea:	4313      	orrs	r3, r2
90026bec:	803b      	strh	r3, [r7, #0]
90026bee:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90026bf0:	3702      	adds	r7, #2
90026bf2:	441c      	add	r4, r3
90026bf4:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90026bf6:	441e      	add	r6, r3
90026bf8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90026bfa:	3b01      	subs	r3, #1
90026bfc:	9318      	str	r3, [sp, #96]	@ 0x60
90026bfe:	e698      	b.n	90026932 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90026c00:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90026c02:	441c      	add	r4, r3
90026c04:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90026c06:	441e      	add	r6, r3
90026c08:	9b07      	ldr	r3, [sp, #28]
90026c0a:	3b01      	subs	r3, #1
90026c0c:	9307      	str	r3, [sp, #28]
90026c0e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90026c10:	3302      	adds	r3, #2
90026c12:	930a      	str	r3, [sp, #40]	@ 0x28
90026c14:	e66d      	b.n	900268f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
90026c16:	d023      	beq.n	90026c60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
90026c18:	9b07      	ldr	r3, [sp, #28]
90026c1a:	9829      	ldr	r0, [sp, #164]	@ 0xa4
90026c1c:	3b01      	subs	r3, #1
90026c1e:	fb00 4003 	mla	r0, r0, r3, r4
90026c22:	1400      	asrs	r0, r0, #16
90026c24:	f53f ae82 	bmi.w	9002692c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90026c28:	3901      	subs	r1, #1
90026c2a:	4288      	cmp	r0, r1
90026c2c:	f6bf ae7e 	bge.w	9002692c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90026c30:	992a      	ldr	r1, [sp, #168]	@ 0xa8
90026c32:	fb01 6303 	mla	r3, r1, r3, r6
90026c36:	141b      	asrs	r3, r3, #16
90026c38:	f53f ae78 	bmi.w	9002692c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90026c3c:	3a01      	subs	r2, #1
90026c3e:	4293      	cmp	r3, r2
90026c40:	f6bf ae74 	bge.w	9002692c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90026c44:	f8dd b01c 	ldr.w	fp, [sp, #28]
90026c48:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
90026c4c:	f1bb 0f00 	cmp.w	fp, #0
90026c50:	dc6c      	bgt.n	90026d2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90026c52:	9b07      	ldr	r3, [sp, #28]
90026c54:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90026c58:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90026c5a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90026c5e:	930a      	str	r3, [sp, #40]	@ 0x28
90026c60:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90026c62:	2b00      	cmp	r3, #0
90026c64:	f340 81b3 	ble.w	90026fce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90026c68:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90026c6c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90026c6e:	ee30 0a04 	vadd.f32	s0, s0, s8
90026c72:	ee70 0aa4 	vadd.f32	s1, s1, s9
90026c76:	eef0 6a62 	vmov.f32	s13, s5
90026c7a:	eec7 7a00 	vdiv.f32	s15, s14, s0
90026c7e:	ee31 1a05 	vadd.f32	s2, s2, s10
90026c82:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026c86:	ee16 4a90 	vmov	r4, s13
90026c8a:	eef0 6a43 	vmov.f32	s13, s6
90026c8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026c92:	ee16 6a90 	vmov	r6, s13
90026c96:	ee20 7aa7 	vmul.f32	s14, s1, s15
90026c9a:	ee61 7a27 	vmul.f32	s15, s2, s15
90026c9e:	ee77 2a62 	vsub.f32	s5, s14, s5
90026ca2:	ee37 3ac3 	vsub.f32	s6, s15, s6
90026ca6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90026caa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90026cae:	ee12 2a90 	vmov	r2, s5
90026cb2:	eef0 2a47 	vmov.f32	s5, s14
90026cb6:	fb92 f3f3 	sdiv	r3, r2, r3
90026cba:	ee13 2a10 	vmov	r2, s6
90026cbe:	9329      	str	r3, [sp, #164]	@ 0xa4
90026cc0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90026cc2:	eeb0 3a67 	vmov.f32	s6, s15
90026cc6:	fb92 f3f3 	sdiv	r3, r2, r3
90026cca:	932a      	str	r3, [sp, #168]	@ 0xa8
90026ccc:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90026cce:	9a19      	ldr	r2, [sp, #100]	@ 0x64
90026cd0:	3b01      	subs	r3, #1
90026cd2:	9317      	str	r3, [sp, #92]	@ 0x5c
90026cd4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90026cd6:	bf08      	it	eq
90026cd8:	4613      	moveq	r3, r2
90026cda:	9307      	str	r3, [sp, #28]
90026cdc:	e5fb      	b.n	900268d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90026cde:	2900      	cmp	r1, #0
90026ce0:	f43f ae6b 	beq.w	900269ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90026ce4:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90026ce8:	9308      	str	r3, [sp, #32]
90026cea:	0e1b      	lsrs	r3, r3, #24
90026cec:	9311      	str	r3, [sp, #68]	@ 0x44
90026cee:	e664      	b.n	900269ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90026cf0:	f112 0801 	adds.w	r8, r2, #1
90026cf4:	f53f af7b 	bmi.w	90026bee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90026cf8:	4543      	cmp	r3, r8
90026cfa:	f6ff af78 	blt.w	90026bee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90026cfe:	f11c 0801 	adds.w	r8, ip, #1
90026d02:	f53f af74 	bmi.w	90026bee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90026d06:	45c6      	cmp	lr, r8
90026d08:	f6ff af71 	blt.w	90026bee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90026d0c:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
90026d0e:	b21b      	sxth	r3, r3
90026d10:	9201      	str	r2, [sp, #4]
90026d12:	fa0f f28e 	sxth.w	r2, lr
90026d16:	e9cd 1504 	strd	r1, r5, [sp, #16]
90026d1a:	e9cd c002 	strd	ip, r0, [sp, #8]
90026d1e:	9200      	str	r2, [sp, #0]
90026d20:	4639      	mov	r1, r7
90026d22:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90026d24:	981b      	ldr	r0, [sp, #108]	@ 0x6c
90026d26:	f7ff fc79 	bl	9002661c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
90026d2a:	e760      	b.n	90026bee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90026d2c:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90026d2e:	1427      	asrs	r7, r4, #16
90026d30:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90026d32:	f3c4 3203 	ubfx	r2, r4, #12, #4
90026d36:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026d3a:	1433      	asrs	r3, r6, #16
90026d3c:	f3c6 3003 	ubfx	r0, r6, #12, #4
90026d40:	fb01 7303 	mla	r3, r1, r3, r7
90026d44:	eb05 0783 	add.w	r7, r5, r3, lsl #2
90026d48:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90026d4c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90026d50:	2a00      	cmp	r2, #0
90026d52:	f000 8133 	beq.w	90026fbc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
90026d56:	687d      	ldr	r5, [r7, #4]
90026d58:	950e      	str	r5, [sp, #56]	@ 0x38
90026d5a:	0e2d      	lsrs	r5, r5, #24
90026d5c:	9515      	str	r5, [sp, #84]	@ 0x54
90026d5e:	b178      	cbz	r0, 90026d80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90026d60:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
90026d64:	3901      	subs	r1, #1
90026d66:	0089      	lsls	r1, r1, #2
90026d68:	3104      	adds	r1, #4
90026d6a:	eb07 0e01 	add.w	lr, r7, r1
90026d6e:	5879      	ldr	r1, [r7, r1]
90026d70:	9109      	str	r1, [sp, #36]	@ 0x24
90026d72:	0e09      	lsrs	r1, r1, #24
90026d74:	9112      	str	r1, [sp, #72]	@ 0x48
90026d76:	f8de 1004 	ldr.w	r1, [lr, #4]
90026d7a:	910f      	str	r1, [sp, #60]	@ 0x3c
90026d7c:	0e09      	lsrs	r1, r1, #24
90026d7e:	9116      	str	r1, [sp, #88]	@ 0x58
90026d80:	b292      	uxth	r2, r2
90026d82:	9915      	ldr	r1, [sp, #84]	@ 0x54
90026d84:	b280      	uxth	r0, r0
90026d86:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90026d88:	fb02 f800 	mul.w	r8, r2, r0
90026d8c:	0112      	lsls	r2, r2, #4
90026d8e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90026d92:	eba2 0e08 	sub.w	lr, r2, r8
90026d96:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90026d9a:	b280      	uxth	r0, r0
90026d9c:	fa1f fe8e 	uxth.w	lr, lr
90026da0:	1a12      	subs	r2, r2, r0
90026da2:	fb0e f101 	mul.w	r1, lr, r1
90026da6:	b292      	uxth	r2, r2
90026da8:	fb02 110c 	mla	r1, r2, ip, r1
90026dac:	fb00 1105 	mla	r1, r0, r5, r1
90026db0:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90026db2:	fb08 1105 	mla	r1, r8, r5, r1
90026db6:	f3c1 2107 	ubfx	r1, r1, #8, #8
90026dba:	2900      	cmp	r1, #0
90026dbc:	f000 80f5 	beq.w	90026faa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
90026dc0:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90026dc4:	d019      	beq.n	90026dfa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
90026dc6:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90026dca:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90026dce:	fb0c fa0a 	mul.w	sl, ip, sl
90026dd2:	fb0c fc03 	mul.w	ip, ip, r3
90026dd6:	ea4f 231a 	mov.w	r3, sl, lsr #8
90026dda:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90026dde:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90026de2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90026de6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90026dea:	4453      	add	r3, sl
90026dec:	0a3f      	lsrs	r7, r7, #8
90026dee:	0a1b      	lsrs	r3, r3, #8
90026df0:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90026df4:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90026df8:	433b      	orrs	r3, r7
90026dfa:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90026dfc:	2dff      	cmp	r5, #255	@ 0xff
90026dfe:	d020      	beq.n	90026e42 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
90026e00:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90026e02:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90026e06:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90026e08:	436f      	muls	r7, r5
90026e0a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90026e0c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026e10:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026e14:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90026e16:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90026e1a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026e1e:	fb05 fa0a 	mul.w	sl, r5, sl
90026e22:	44bc      	add	ip, r7
90026e24:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90026e28:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026e2c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90026e30:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026e34:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026e38:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026e3c:	ea4c 050a 	orr.w	r5, ip, sl
90026e40:	950e      	str	r5, [sp, #56]	@ 0x38
90026e42:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90026e44:	2dff      	cmp	r5, #255	@ 0xff
90026e46:	d020      	beq.n	90026e8a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
90026e48:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90026e4a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90026e4e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90026e50:	436f      	muls	r7, r5
90026e52:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90026e54:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026e58:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026e5c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90026e5e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90026e62:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026e66:	fb05 fa0a 	mul.w	sl, r5, sl
90026e6a:	44bc      	add	ip, r7
90026e6c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90026e70:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026e74:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90026e78:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026e7c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026e80:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026e84:	ea4c 050a 	orr.w	r5, ip, sl
90026e88:	9509      	str	r5, [sp, #36]	@ 0x24
90026e8a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90026e8c:	2dff      	cmp	r5, #255	@ 0xff
90026e8e:	d020      	beq.n	90026ed2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
90026e90:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90026e92:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90026e96:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90026e98:	436f      	muls	r7, r5
90026e9a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90026e9c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026ea0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026ea4:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90026ea6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90026eaa:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026eae:	fb05 fa0a 	mul.w	sl, r5, sl
90026eb2:	44bc      	add	ip, r7
90026eb4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90026eb8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026ebc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90026ec0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026ec4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026ec8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026ecc:	ea4c 050a 	orr.w	r5, ip, sl
90026ed0:	950f      	str	r5, [sp, #60]	@ 0x3c
90026ed2:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90026ed4:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90026ed8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90026edc:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90026ee0:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90026ee2:	fb0e f707 	mul.w	r7, lr, r7
90026ee6:	fb02 770c 	mla	r7, r2, ip, r7
90026eea:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90026eee:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90026ef0:	fb00 770c 	mla	r7, r0, ip, r7
90026ef4:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90026ef8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90026efa:	fb08 770c 	mla	r7, r8, ip, r7
90026efe:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
90026f02:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90026f04:	fb0e fe0c 	mul.w	lr, lr, ip
90026f08:	0a3f      	lsrs	r7, r7, #8
90026f0a:	fb02 e303 	mla	r3, r2, r3, lr
90026f0e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90026f10:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90026f14:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90026f18:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90026f1a:	fb00 330a 	mla	r3, r0, sl, r3
90026f1e:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
90026f22:	f8b9 0000 	ldrh.w	r0, [r9]
90026f26:	fb08 3c0c 	mla	ip, r8, ip, r3
90026f2a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90026f2c:	1202      	asrs	r2, r0, #8
90026f2e:	4359      	muls	r1, r3
90026f30:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026f34:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90026f38:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90026f3c:	1c4b      	adds	r3, r1, #1
90026f3e:	ea47 070c 	orr.w	r7, r7, ip
90026f42:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90026f46:	0c3b      	lsrs	r3, r7, #16
90026f48:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90026f4c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90026f50:	b2ff      	uxtb	r7, r7
90026f52:	fb13 f305 	smulbb	r3, r3, r5
90026f56:	b2c9      	uxtb	r1, r1
90026f58:	fb17 f705 	smulbb	r7, r7, r5
90026f5c:	fb02 3201 	mla	r2, r2, r1, r3
90026f60:	10c3      	asrs	r3, r0, #3
90026f62:	fb1c fc05 	smulbb	ip, ip, r5
90026f66:	00c0      	lsls	r0, r0, #3
90026f68:	b292      	uxth	r2, r2
90026f6a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90026f6e:	b2c0      	uxtb	r0, r0
90026f70:	fb03 c301 	mla	r3, r3, r1, ip
90026f74:	fb00 7001 	mla	r0, r0, r1, r7
90026f78:	1c51      	adds	r1, r2, #1
90026f7a:	b29b      	uxth	r3, r3
90026f7c:	b280      	uxth	r0, r0
90026f7e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90026f82:	f100 0c01 	add.w	ip, r0, #1
90026f86:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
90026f8a:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
90026f8e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90026f92:	ea4c 0202 	orr.w	r2, ip, r2
90026f96:	f103 0c01 	add.w	ip, r3, #1
90026f9a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90026f9e:	095b      	lsrs	r3, r3, #5
90026fa0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90026fa4:	431a      	orrs	r2, r3
90026fa6:	f8a9 2000 	strh.w	r2, [r9]
90026faa:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90026fac:	f109 0902 	add.w	r9, r9, #2
90026fb0:	f10b 3bff 	add.w	fp, fp, #4294967295
90026fb4:	441c      	add	r4, r3
90026fb6:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90026fb8:	441e      	add	r6, r3
90026fba:	e647      	b.n	90026c4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
90026fbc:	2800      	cmp	r0, #0
90026fbe:	f43f aedf 	beq.w	90026d80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90026fc2:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
90026fc6:	9109      	str	r1, [sp, #36]	@ 0x24
90026fc8:	0e09      	lsrs	r1, r1, #24
90026fca:	9112      	str	r1, [sp, #72]	@ 0x48
90026fcc:	e6d8      	b.n	90026d80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90026fce:	b01d      	add	sp, #116	@ 0x74
90026fd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90026fd4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
90026fd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026fd8:	b085      	sub	sp, #20
90026fda:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
90026fde:	9102      	str	r1, [sp, #8]
90026fe0:	2c00      	cmp	r4, #0
90026fe2:	fb04 7103 	mla	r1, r4, r3, r7
90026fe6:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
90026fea:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
90026fee:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
90026ff2:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
90026ff6:	f2c0 810c 	blt.w	90027212 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90026ffa:	45a6      	cmp	lr, r4
90026ffc:	f340 8109 	ble.w	90027212 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90027000:	2f00      	cmp	r7, #0
90027002:	f2c0 8104 	blt.w	9002720e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90027006:	42bb      	cmp	r3, r7
90027008:	f340 8101 	ble.w	9002720e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
9002700c:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90027010:	1c7a      	adds	r2, r7, #1
90027012:	f100 8101 	bmi.w	90027218 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90027016:	4293      	cmp	r3, r2
90027018:	f340 80fe 	ble.w	90027218 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
9002701c:	2e00      	cmp	r6, #0
9002701e:	f000 80fd 	beq.w	9002721c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
90027022:	f8dc 1004 	ldr.w	r1, [ip, #4]
90027026:	3401      	adds	r4, #1
90027028:	f100 80fc 	bmi.w	90027224 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
9002702c:	45a6      	cmp	lr, r4
9002702e:	f340 80f9 	ble.w	90027224 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90027032:	2800      	cmp	r0, #0
90027034:	f000 80f9 	beq.w	9002722a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
90027038:	2f00      	cmp	r7, #0
9002703a:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
9002703e:	f2c0 80ef 	blt.w	90027220 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90027042:	42bb      	cmp	r3, r7
90027044:	f340 80ec 	ble.w	90027220 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90027048:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
9002704c:	3701      	adds	r7, #1
9002704e:	f100 80ef 	bmi.w	90027230 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90027052:	42bb      	cmp	r3, r7
90027054:	f340 80ec 	ble.w	90027230 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90027058:	2e00      	cmp	r6, #0
9002705a:	f000 80eb 	beq.w	90027234 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
9002705e:	6852      	ldr	r2, [r2, #4]
90027060:	b2b6      	uxth	r6, r6
90027062:	b280      	uxth	r0, r0
90027064:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90027068:	fb00 fe06 	mul.w	lr, r0, r6
9002706c:	0136      	lsls	r6, r6, #4
9002706e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90027072:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90027076:	eba6 070e 	sub.w	r7, r6, lr
9002707a:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
9002707e:	ea4f 6914 	mov.w	r9, r4, lsr #24
90027082:	b280      	uxth	r0, r0
90027084:	b2bf      	uxth	r7, r7
90027086:	1a1b      	subs	r3, r3, r0
90027088:	ea4f 6812 	mov.w	r8, r2, lsr #24
9002708c:	fb07 f60a 	mul.w	r6, r7, sl
90027090:	b29b      	uxth	r3, r3
90027092:	fb0b 6603 	mla	r6, fp, r3, r6
90027096:	fb00 6609 	mla	r6, r0, r9, r6
9002709a:	fb0e 6608 	mla	r6, lr, r8, r6
9002709e:	f3c6 2607 	ubfx	r6, r6, #8, #8
900270a2:	9600      	str	r6, [sp, #0]
900270a4:	2e00      	cmp	r6, #0
900270a6:	f000 80af 	beq.w	90027208 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
900270aa:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900270ae:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
900270b2:	9e02      	ldr	r6, [sp, #8]
900270b4:	fb0b fc0c 	mul.w	ip, fp, ip
900270b8:	fb0b f505 	mul.w	r5, fp, r5
900270bc:	8836      	ldrh	r6, [r6, #0]
900270be:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
900270c2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900270c6:	9501      	str	r5, [sp, #4]
900270c8:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
900270cc:	44dc      	add	ip, fp
900270ce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900270d2:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
900270d6:	9503      	str	r5, [sp, #12]
900270d8:	9d01      	ldr	r5, [sp, #4]
900270da:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
900270de:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900270e2:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
900270e6:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900270ea:	fb0a fc0c 	mul.w	ip, sl, ip
900270ee:	ea4f 2b15 	mov.w	fp, r5, lsr #8
900270f2:	fb0a fa01 	mul.w	sl, sl, r1
900270f6:	ea4f 251c 	mov.w	r5, ip, lsr #8
900270fa:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900270fe:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
90027102:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90027106:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
9002710a:	4465      	add	r5, ip
9002710c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90027110:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90027114:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027118:	fb09 fc0c 	mul.w	ip, r9, ip
9002711c:	0a2d      	lsrs	r5, r5, #8
9002711e:	fb09 f904 	mul.w	r9, r9, r4
90027122:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90027126:	ea4f 211c 	mov.w	r1, ip, lsr #8
9002712a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
9002712e:	f509 7480 	add.w	r4, r9, #256	@ 0x100
90027132:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90027136:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
9002713a:	437d      	muls	r5, r7
9002713c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90027140:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90027144:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90027148:	4461      	add	r1, ip
9002714a:	fb08 f404 	mul.w	r4, r8, r4
9002714e:	ea4f 2919 	mov.w	r9, r9, lsr #8
90027152:	fb08 f802 	mul.w	r8, r8, r2
90027156:	0a09      	lsrs	r1, r1, #8
90027158:	0a22      	lsrs	r2, r4, #8
9002715a:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
9002715e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90027162:	fb07 f70a 	mul.w	r7, r7, sl
90027166:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
9002716a:	4414      	add	r4, r2
9002716c:	f508 7280 	add.w	r2, r8, #256	@ 0x100
90027170:	0a24      	lsrs	r4, r4, #8
90027172:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90027176:	9a03      	ldr	r2, [sp, #12]
90027178:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
9002717c:	fb02 5503 	mla	r5, r2, r3, r5
90027180:	ea4f 2818 	mov.w	r8, r8, lsr #8
90027184:	fb04 540e 	mla	r4, r4, lr, r5
90027188:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
9002718c:	fb01 4100 	mla	r1, r1, r0, r4
90027190:	0a09      	lsrs	r1, r1, #8
90027192:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
90027196:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
9002719a:	fb03 7101 	mla	r1, r3, r1, r7
9002719e:	9b00      	ldr	r3, [sp, #0]
900271a0:	fb0e 1e08 	mla	lr, lr, r8, r1
900271a4:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
900271a8:	43da      	mvns	r2, r3
900271aa:	1233      	asrs	r3, r6, #8
900271ac:	fb00 e101 	mla	r1, r0, r1, lr
900271b0:	10f0      	asrs	r0, r6, #3
900271b2:	b2d2      	uxtb	r2, r2
900271b4:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
900271b8:	0a09      	lsrs	r1, r1, #8
900271ba:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900271be:	00f6      	lsls	r6, r6, #3
900271c0:	4353      	muls	r3, r2
900271c2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900271c6:	4350      	muls	r0, r2
900271c8:	b2f6      	uxtb	r6, r6
900271ca:	4321      	orrs	r1, r4
900271cc:	4356      	muls	r6, r2
900271ce:	1c5a      	adds	r2, r3, #1
900271d0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
900271d4:	0c0b      	lsrs	r3, r1, #16
900271d6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900271da:	1c42      	adds	r2, r0, #1
900271dc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900271e0:	0a0a      	lsrs	r2, r1, #8
900271e2:	021b      	lsls	r3, r3, #8
900271e4:	eb02 2210 	add.w	r2, r2, r0, lsr #8
900271e8:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
900271ec:	00d2      	lsls	r2, r2, #3
900271ee:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900271f2:	4313      	orrs	r3, r2
900271f4:	1c72      	adds	r2, r6, #1
900271f6:	eb02 2616 	add.w	r6, r2, r6, lsr #8
900271fa:	eb01 2116 	add.w	r1, r1, r6, lsr #8
900271fe:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90027202:	4319      	orrs	r1, r3
90027204:	9b02      	ldr	r3, [sp, #8]
90027206:	8019      	strh	r1, [r3, #0]
90027208:	b005      	add	sp, #20
9002720a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002720e:	2500      	movs	r5, #0
90027210:	e6fe      	b.n	90027010 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
90027212:	2100      	movs	r1, #0
90027214:	460d      	mov	r5, r1
90027216:	e706      	b.n	90027026 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90027218:	2100      	movs	r1, #0
9002721a:	e704      	b.n	90027026 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
9002721c:	4631      	mov	r1, r6
9002721e:	e702      	b.n	90027026 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90027220:	2400      	movs	r4, #0
90027222:	e713      	b.n	9002704c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
90027224:	2200      	movs	r2, #0
90027226:	4614      	mov	r4, r2
90027228:	e71a      	b.n	90027060 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
9002722a:	4602      	mov	r2, r0
9002722c:	4604      	mov	r4, r0
9002722e:	e717      	b.n	90027060 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90027230:	2200      	movs	r2, #0
90027232:	e715      	b.n	90027060 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90027234:	4632      	mov	r2, r6
90027236:	e713      	b.n	90027060 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

90027238 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90027238:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002723c:	b09b      	sub	sp, #108	@ 0x6c
9002723e:	9218      	str	r2, [sp, #96]	@ 0x60
90027240:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90027242:	9019      	str	r0, [sp, #100]	@ 0x64
90027244:	9116      	str	r1, [sp, #88]	@ 0x58
90027246:	6850      	ldr	r0, [r2, #4]
90027248:	9307      	str	r3, [sp, #28]
9002724a:	6812      	ldr	r2, [r2, #0]
9002724c:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
90027250:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
90027254:	fb00 1303 	mla	r3, r0, r3, r1
90027258:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002725c:	930a      	str	r3, [sp, #40]	@ 0x28
9002725e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90027260:	681b      	ldr	r3, [r3, #0]
90027262:	930f      	str	r3, [sp, #60]	@ 0x3c
90027264:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90027266:	2b00      	cmp	r3, #0
90027268:	dc03      	bgt.n	90027272 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9002726a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002726c:	2b00      	cmp	r3, #0
9002726e:	f340 8387 	ble.w	90027980 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90027272:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90027274:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90027278:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002727c:	1e48      	subs	r0, r1, #1
9002727e:	1e57      	subs	r7, r2, #1
90027280:	9b07      	ldr	r3, [sp, #28]
90027282:	2b00      	cmp	r3, #0
90027284:	f340 8166 	ble.w	90027554 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90027288:	ea5f 4c24 	movs.w	ip, r4, asr #16
9002728c:	ea4f 4326 	mov.w	r3, r6, asr #16
90027290:	d406      	bmi.n	900272a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90027292:	4584      	cmp	ip, r0
90027294:	da04      	bge.n	900272a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90027296:	2b00      	cmp	r3, #0
90027298:	db02      	blt.n	900272a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9002729a:	42bb      	cmp	r3, r7
9002729c:	f2c0 815b 	blt.w	90027556 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
900272a0:	f11c 0c01 	adds.w	ip, ip, #1
900272a4:	f100 814b 	bmi.w	9002753e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900272a8:	4561      	cmp	r1, ip
900272aa:	f2c0 8148 	blt.w	9002753e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900272ae:	3301      	adds	r3, #1
900272b0:	f100 8145 	bmi.w	9002753e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900272b4:	429a      	cmp	r2, r3
900272b6:	f2c0 8142 	blt.w	9002753e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900272ba:	9b07      	ldr	r3, [sp, #28]
900272bc:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
900272be:	9317      	str	r3, [sp, #92]	@ 0x5c
900272c0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
900272c2:	2b00      	cmp	r3, #0
900272c4:	f340 8165 	ble.w	90027592 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
900272c8:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
900272ca:	ea4f 4c26 	mov.w	ip, r6, asr #16
900272ce:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900272d0:	f3c4 3103 	ubfx	r1, r4, #12, #4
900272d4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
900272d8:	1422      	asrs	r2, r4, #16
900272da:	f3c6 3003 	ubfx	r0, r6, #12, #4
900272de:	689b      	ldr	r3, [r3, #8]
900272e0:	f100 81d5 	bmi.w	9002768e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900272e4:	f103 38ff 	add.w	r8, r3, #4294967295
900272e8:	4542      	cmp	r2, r8
900272ea:	f280 81d0 	bge.w	9002768e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900272ee:	f1bc 0f00 	cmp.w	ip, #0
900272f2:	f2c0 81cc 	blt.w	9002768e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900272f6:	f10e 38ff 	add.w	r8, lr, #4294967295
900272fa:	45c4      	cmp	ip, r8
900272fc:	f280 81c7 	bge.w	9002768e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90027300:	b21b      	sxth	r3, r3
90027302:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90027304:	fb0c 2203 	mla	r2, ip, r3, r2
90027308:	eb05 0882 	add.w	r8, r5, r2, lsl #2
9002730c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90027310:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90027314:	2900      	cmp	r1, #0
90027316:	f000 8182 	beq.w	9002761e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
9002731a:	f8d8 5004 	ldr.w	r5, [r8, #4]
9002731e:	950b      	str	r5, [sp, #44]	@ 0x2c
90027320:	0e2d      	lsrs	r5, r5, #24
90027322:	9512      	str	r5, [sp, #72]	@ 0x48
90027324:	b180      	cbz	r0, 90027348 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90027326:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
9002732a:	3b01      	subs	r3, #1
9002732c:	009b      	lsls	r3, r3, #2
9002732e:	3304      	adds	r3, #4
90027330:	eb08 0c03 	add.w	ip, r8, r3
90027334:	f858 3003 	ldr.w	r3, [r8, r3]
90027338:	9308      	str	r3, [sp, #32]
9002733a:	0e1b      	lsrs	r3, r3, #24
9002733c:	9310      	str	r3, [sp, #64]	@ 0x40
9002733e:	f8dc 3004 	ldr.w	r3, [ip, #4]
90027342:	930c      	str	r3, [sp, #48]	@ 0x30
90027344:	0e1b      	lsrs	r3, r3, #24
90027346:	9313      	str	r3, [sp, #76]	@ 0x4c
90027348:	b289      	uxth	r1, r1
9002734a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
9002734c:	b280      	uxth	r0, r0
9002734e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90027350:	fb01 f900 	mul.w	r9, r1, r0
90027354:	0109      	lsls	r1, r1, #4
90027356:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
9002735a:	eba1 0809 	sub.w	r8, r1, r9
9002735e:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
90027362:	b280      	uxth	r0, r0
90027364:	fa1f f888 	uxth.w	r8, r8
90027368:	1a09      	subs	r1, r1, r0
9002736a:	fb08 f303 	mul.w	r3, r8, r3
9002736e:	b289      	uxth	r1, r1
90027370:	fb01 330e 	mla	r3, r1, lr, r3
90027374:	fb00 3305 	mla	r3, r0, r5, r3
90027378:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9002737a:	fb09 3305 	mla	r3, r9, r5, r3
9002737e:	f3c3 2307 	ubfx	r3, r3, #8, #8
90027382:	2b00      	cmp	r3, #0
90027384:	f000 80d2 	beq.w	9002752c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90027388:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
9002738c:	d01b      	beq.n	900273c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
9002738e:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
90027392:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90027396:	fb0e fa0a 	mul.w	sl, lr, sl
9002739a:	fb0e fe02 	mul.w	lr, lr, r2
9002739e:	ea4f 221a 	mov.w	r2, sl, lsr #8
900273a2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900273a6:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
900273aa:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
900273ae:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900273b2:	4452      	add	r2, sl
900273b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900273b8:	0a12      	lsrs	r2, r2, #8
900273ba:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900273be:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
900273c2:	ea42 020c 	orr.w	r2, r2, ip
900273c6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
900273c8:	2dff      	cmp	r5, #255	@ 0xff
900273ca:	d021      	beq.n	90027410 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
900273cc:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900273ce:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
900273d2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
900273d4:	fb05 fb0b 	mul.w	fp, r5, fp
900273d8:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900273da:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900273de:	9d12      	ldr	r5, [sp, #72]	@ 0x48
900273e0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900273e4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900273e8:	fb05 fa0a 	mul.w	sl, r5, sl
900273ec:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900273f0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900273f4:	44de      	add	lr, fp
900273f6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900273fa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900273fe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027402:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90027406:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002740a:	ea4e 050a 	orr.w	r5, lr, sl
9002740e:	950b      	str	r5, [sp, #44]	@ 0x2c
90027410:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90027412:	2dff      	cmp	r5, #255	@ 0xff
90027414:	d021      	beq.n	9002745a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
90027416:	9d08      	ldr	r5, [sp, #32]
90027418:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
9002741c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9002741e:	fb05 fb0b 	mul.w	fp, r5, fp
90027422:	9d08      	ldr	r5, [sp, #32]
90027424:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90027428:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9002742a:	fb05 fa0e 	mul.w	sl, r5, lr
9002742e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90027432:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90027436:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002743a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
9002743e:	44de      	add	lr, fp
90027440:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90027444:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90027448:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002744c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90027450:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90027454:	ea4e 050a 	orr.w	r5, lr, sl
90027458:	9508      	str	r5, [sp, #32]
9002745a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9002745c:	2dff      	cmp	r5, #255	@ 0xff
9002745e:	d021      	beq.n	900274a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
90027460:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90027462:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90027466:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90027468:	fb05 fb0b 	mul.w	fp, r5, fp
9002746c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
9002746e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90027472:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90027474:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90027478:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
9002747c:	fb05 fa0a 	mul.w	sl, r5, sl
90027480:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90027484:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90027488:	44de      	add	lr, fp
9002748a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002748e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90027492:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027496:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002749a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002749e:	ea4e 050a 	orr.w	r5, lr, sl
900274a2:	950c      	str	r5, [sp, #48]	@ 0x30
900274a4:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900274a6:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
900274aa:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
900274ae:	2bff      	cmp	r3, #255	@ 0xff
900274b0:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900274b4:	9d08      	ldr	r5, [sp, #32]
900274b6:	fb08 fc0c 	mul.w	ip, r8, ip
900274ba:	fb01 cc0e 	mla	ip, r1, lr, ip
900274be:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
900274c2:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
900274c4:	fb00 cc0e 	mla	ip, r0, lr, ip
900274c8:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
900274cc:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900274ce:	fb09 cc0e 	mla	ip, r9, lr, ip
900274d2:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
900274d6:	fb08 f80e 	mul.w	r8, r8, lr
900274da:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900274de:	fb01 8202 	mla	r2, r1, r2, r8
900274e2:	9908      	ldr	r1, [sp, #32]
900274e4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900274e8:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
900274ec:	990c      	ldr	r1, [sp, #48]	@ 0x30
900274ee:	fb00 220a 	mla	r2, r0, sl, r2
900274f2:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
900274f6:	fb09 2900 	mla	r9, r9, r0, r2
900274fa:	ea4f 2919 	mov.w	r9, r9, lsr #8
900274fe:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90027502:	ea4c 0c09 	orr.w	ip, ip, r9
90027506:	ea4f 221c 	mov.w	r2, ip, lsr #8
9002750a:	f040 8091 	bne.w	90027630 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
9002750e:	ea4f 135c 	mov.w	r3, ip, lsr #5
90027512:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
90027516:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002751a:	f022 0207 	bic.w	r2, r2, #7
9002751e:	431a      	orrs	r2, r3
90027520:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90027524:	ea4c 0c02 	orr.w	ip, ip, r2
90027528:	f8a7 c000 	strh.w	ip, [r7]
9002752c:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
9002752e:	3702      	adds	r7, #2
90027530:	441c      	add	r4, r3
90027532:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90027534:	441e      	add	r6, r3
90027536:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90027538:	3b01      	subs	r3, #1
9002753a:	9317      	str	r3, [sp, #92]	@ 0x5c
9002753c:	e6c0      	b.n	900272c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
9002753e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90027540:	441c      	add	r4, r3
90027542:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90027544:	441e      	add	r6, r3
90027546:	9b07      	ldr	r3, [sp, #28]
90027548:	3b01      	subs	r3, #1
9002754a:	9307      	str	r3, [sp, #28]
9002754c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002754e:	3302      	adds	r3, #2
90027550:	930a      	str	r3, [sp, #40]	@ 0x28
90027552:	e695      	b.n	90027280 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90027554:	d024      	beq.n	900275a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
90027556:	9b07      	ldr	r3, [sp, #28]
90027558:	9827      	ldr	r0, [sp, #156]	@ 0x9c
9002755a:	3b01      	subs	r3, #1
9002755c:	fb00 4003 	mla	r0, r0, r3, r4
90027560:	1400      	asrs	r0, r0, #16
90027562:	f53f aeaa 	bmi.w	900272ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90027566:	3901      	subs	r1, #1
90027568:	4288      	cmp	r0, r1
9002756a:	f6bf aea6 	bge.w	900272ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9002756e:	9928      	ldr	r1, [sp, #160]	@ 0xa0
90027570:	fb01 6303 	mla	r3, r1, r3, r6
90027574:	141b      	asrs	r3, r3, #16
90027576:	f53f aea0 	bmi.w	900272ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9002757a:	3a01      	subs	r2, #1
9002757c:	4293      	cmp	r3, r2
9002757e:	f6bf ae9c 	bge.w	900272ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90027582:	f8dd b01c 	ldr.w	fp, [sp, #28]
90027586:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
9002758a:	f1bb 0f00 	cmp.w	fp, #0
9002758e:	f300 809a 	bgt.w	900276c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90027592:	9b07      	ldr	r3, [sp, #28]
90027594:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90027598:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002759a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
9002759e:	930a      	str	r3, [sp, #40]	@ 0x28
900275a0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
900275a2:	2b00      	cmp	r3, #0
900275a4:	f340 81ec 	ble.w	90027980 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
900275a8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900275ac:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900275ae:	ee30 0a04 	vadd.f32	s0, s0, s8
900275b2:	ee70 0aa4 	vadd.f32	s1, s1, s9
900275b6:	eef0 6a62 	vmov.f32	s13, s5
900275ba:	eec7 7a00 	vdiv.f32	s15, s14, s0
900275be:	ee31 1a05 	vadd.f32	s2, s2, s10
900275c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900275c6:	ee16 4a90 	vmov	r4, s13
900275ca:	eef0 6a43 	vmov.f32	s13, s6
900275ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900275d2:	ee16 6a90 	vmov	r6, s13
900275d6:	ee20 7aa7 	vmul.f32	s14, s1, s15
900275da:	ee61 7a27 	vmul.f32	s15, s2, s15
900275de:	ee77 2a62 	vsub.f32	s5, s14, s5
900275e2:	ee37 3ac3 	vsub.f32	s6, s15, s6
900275e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900275ea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900275ee:	ee12 2a90 	vmov	r2, s5
900275f2:	eef0 2a47 	vmov.f32	s5, s14
900275f6:	fb92 f3f3 	sdiv	r3, r2, r3
900275fa:	ee13 2a10 	vmov	r2, s6
900275fe:	9327      	str	r3, [sp, #156]	@ 0x9c
90027600:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027602:	eeb0 3a67 	vmov.f32	s6, s15
90027606:	fb92 f3f3 	sdiv	r3, r2, r3
9002760a:	9328      	str	r3, [sp, #160]	@ 0xa0
9002760c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
9002760e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
90027610:	3b01      	subs	r3, #1
90027612:	9316      	str	r3, [sp, #88]	@ 0x58
90027614:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027616:	bf08      	it	eq
90027618:	4613      	moveq	r3, r2
9002761a:	9307      	str	r3, [sp, #28]
9002761c:	e622      	b.n	90027264 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
9002761e:	2800      	cmp	r0, #0
90027620:	f43f ae92 	beq.w	90027348 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90027624:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90027628:	9308      	str	r3, [sp, #32]
9002762a:	0e1b      	lsrs	r3, r3, #24
9002762c:	9310      	str	r3, [sp, #64]	@ 0x40
9002762e:	e68b      	b.n	90027348 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90027630:	8839      	ldrh	r1, [r7, #0]
90027632:	43db      	mvns	r3, r3
90027634:	4dd4      	ldr	r5, [pc, #848]	@ (90027988 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90027636:	ea4f 2e21 	mov.w	lr, r1, asr #8
9002763a:	fa5f f883 	uxtb.w	r8, r3
9002763e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
90027642:	10c8      	asrs	r0, r1, #3
90027644:	00cb      	lsls	r3, r1, #3
90027646:	fb0e fe08 	mul.w	lr, lr, r8
9002764a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9002764e:	b2db      	uxtb	r3, r3
90027650:	f10e 0101 	add.w	r1, lr, #1
90027654:	fb00 f008 	mul.w	r0, r0, r8
90027658:	fb03 f308 	mul.w	r3, r3, r8
9002765c:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
90027660:	ea4f 411c 	mov.w	r1, ip, lsr #16
90027664:	eb01 211e 	add.w	r1, r1, lr, lsr #8
90027668:	f100 0e01 	add.w	lr, r0, #1
9002766c:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
90027670:	b2c9      	uxtb	r1, r1
90027672:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90027676:	ea05 2101 	and.w	r1, r5, r1, lsl #8
9002767a:	00d2      	lsls	r2, r2, #3
9002767c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90027680:	430a      	orrs	r2, r1
90027682:	1c59      	adds	r1, r3, #1
90027684:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90027688:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9002768c:	e748      	b.n	90027520 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
9002768e:	f112 0801 	adds.w	r8, r2, #1
90027692:	f53f af4b 	bmi.w	9002752c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90027696:	4543      	cmp	r3, r8
90027698:	f6ff af48 	blt.w	9002752c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
9002769c:	f11c 0801 	adds.w	r8, ip, #1
900276a0:	f53f af44 	bmi.w	9002752c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900276a4:	45c6      	cmp	lr, r8
900276a6:	f6ff af41 	blt.w	9002752c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900276aa:	b21b      	sxth	r3, r3
900276ac:	e9cd 2c01 	strd	r2, ip, [sp, #4]
900276b0:	fa0f f28e 	sxth.w	r2, lr
900276b4:	e9cd 1003 	strd	r1, r0, [sp, #12]
900276b8:	9200      	str	r2, [sp, #0]
900276ba:	4639      	mov	r1, r7
900276bc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900276be:	9819      	ldr	r0, [sp, #100]	@ 0x64
900276c0:	f7ff fc88 	bl	90026fd4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
900276c4:	e732      	b.n	9002752c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900276c6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900276c8:	1421      	asrs	r1, r4, #16
900276ca:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900276cc:	f3c4 3203 	ubfx	r2, r4, #12, #4
900276d0:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
900276d4:	1433      	asrs	r3, r6, #16
900276d6:	f3c6 3003 	ubfx	r0, r6, #12, #4
900276da:	fb07 1303 	mla	r3, r7, r3, r1
900276de:	990f      	ldr	r1, [sp, #60]	@ 0x3c
900276e0:	eb01 0183 	add.w	r1, r1, r3, lsl #2
900276e4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
900276e8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
900276ec:	2a00      	cmp	r2, #0
900276ee:	f000 8108 	beq.w	90027902 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
900276f2:	684d      	ldr	r5, [r1, #4]
900276f4:	950d      	str	r5, [sp, #52]	@ 0x34
900276f6:	0e2d      	lsrs	r5, r5, #24
900276f8:	9514      	str	r5, [sp, #80]	@ 0x50
900276fa:	b178      	cbz	r0, 9002771c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
900276fc:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
90027700:	3f01      	subs	r7, #1
90027702:	00bf      	lsls	r7, r7, #2
90027704:	3704      	adds	r7, #4
90027706:	eb01 0e07 	add.w	lr, r1, r7
9002770a:	59c9      	ldr	r1, [r1, r7]
9002770c:	9109      	str	r1, [sp, #36]	@ 0x24
9002770e:	0e09      	lsrs	r1, r1, #24
90027710:	9111      	str	r1, [sp, #68]	@ 0x44
90027712:	f8de 1004 	ldr.w	r1, [lr, #4]
90027716:	910e      	str	r1, [sp, #56]	@ 0x38
90027718:	0e09      	lsrs	r1, r1, #24
9002771a:	9115      	str	r1, [sp, #84]	@ 0x54
9002771c:	b292      	uxth	r2, r2
9002771e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90027720:	b280      	uxth	r0, r0
90027722:	fb02 f900 	mul.w	r9, r2, r0
90027726:	0112      	lsls	r2, r2, #4
90027728:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
9002772c:	eba2 0e09 	sub.w	lr, r2, r9
90027730:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
90027734:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90027736:	b280      	uxth	r0, r0
90027738:	fa1f fe8e 	uxth.w	lr, lr
9002773c:	1a09      	subs	r1, r1, r0
9002773e:	fb0e f202 	mul.w	r2, lr, r2
90027742:	b289      	uxth	r1, r1
90027744:	fb01 220c 	mla	r2, r1, ip, r2
90027748:	fb00 2205 	mla	r2, r0, r5, r2
9002774c:	9d15      	ldr	r5, [sp, #84]	@ 0x54
9002774e:	fb09 2205 	mla	r2, r9, r5, r2
90027752:	f3c2 2207 	ubfx	r2, r2, #8, #8
90027756:	2a00      	cmp	r2, #0
90027758:	f000 80ca 	beq.w	900278f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
9002775c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90027760:	d019      	beq.n	90027796 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
90027762:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90027766:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002776a:	fb0c fa0a 	mul.w	sl, ip, sl
9002776e:	fb0c fc03 	mul.w	ip, ip, r3
90027772:	ea4f 231a 	mov.w	r3, sl, lsr #8
90027776:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
9002777a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
9002777e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90027782:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90027786:	4453      	add	r3, sl
90027788:	0a3f      	lsrs	r7, r7, #8
9002778a:	0a1b      	lsrs	r3, r3, #8
9002778c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90027790:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90027794:	433b      	orrs	r3, r7
90027796:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90027798:	2dff      	cmp	r5, #255	@ 0xff
9002779a:	d020      	beq.n	900277de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
9002779c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
9002779e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900277a2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900277a4:	436f      	muls	r7, r5
900277a6:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900277a8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900277ac:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900277b0:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900277b2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900277b6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900277ba:	fb05 fa0a 	mul.w	sl, r5, sl
900277be:	44bc      	add	ip, r7
900277c0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900277c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900277c8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900277cc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900277d0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900277d4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900277d8:	ea4c 050a 	orr.w	r5, ip, sl
900277dc:	950d      	str	r5, [sp, #52]	@ 0x34
900277de:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900277e0:	2dff      	cmp	r5, #255	@ 0xff
900277e2:	d020      	beq.n	90027826 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
900277e4:	9d09      	ldr	r5, [sp, #36]	@ 0x24
900277e6:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900277ea:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900277ec:	436f      	muls	r7, r5
900277ee:	9d09      	ldr	r5, [sp, #36]	@ 0x24
900277f0:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
900277f4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900277f6:	fb05 fa0c 	mul.w	sl, r5, ip
900277fa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900277fe:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90027802:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90027806:	44bc      	add	ip, r7
90027808:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
9002780c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90027810:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027814:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027818:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002781c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90027820:	ea4c 050a 	orr.w	r5, ip, sl
90027824:	9509      	str	r5, [sp, #36]	@ 0x24
90027826:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90027828:	2dff      	cmp	r5, #255	@ 0xff
9002782a:	d020      	beq.n	9002786e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
9002782c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
9002782e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90027832:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90027834:	436f      	muls	r7, r5
90027836:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90027838:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002783c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90027840:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90027842:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90027846:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002784a:	fb05 fa0a 	mul.w	sl, r5, sl
9002784e:	44bc      	add	ip, r7
90027850:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90027854:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027858:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9002785c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90027860:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027864:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90027868:	ea4c 050a 	orr.w	r5, ip, sl
9002786c:	950e      	str	r5, [sp, #56]	@ 0x38
9002786e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90027870:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90027874:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90027878:	2aff      	cmp	r2, #255	@ 0xff
9002787a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
9002787e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90027880:	fb0e f707 	mul.w	r7, lr, r7
90027884:	fb01 770c 	mla	r7, r1, ip, r7
90027888:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
9002788c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
9002788e:	fb00 770c 	mla	r7, r0, ip, r7
90027892:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90027896:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90027898:	fb09 770c 	mla	r7, r9, ip, r7
9002789c:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
900278a0:	fb0e fe0c 	mul.w	lr, lr, ip
900278a4:	ea4f 2717 	mov.w	r7, r7, lsr #8
900278a8:	fb01 e303 	mla	r3, r1, r3, lr
900278ac:	9909      	ldr	r1, [sp, #36]	@ 0x24
900278ae:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
900278b2:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
900278b6:	990e      	ldr	r1, [sp, #56]	@ 0x38
900278b8:	fb00 330a 	mla	r3, r0, sl, r3
900278bc:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
900278c0:	fb09 3c0c 	mla	ip, r9, ip, r3
900278c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900278c8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900278cc:	ea47 070c 	orr.w	r7, r7, ip
900278d0:	ea4f 2317 	mov.w	r3, r7, lsr #8
900278d4:	d11e      	bne.n	90027914 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
900278d6:	097a      	lsrs	r2, r7, #5
900278d8:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
900278dc:	f3c7 07c4 	ubfx	r7, r7, #3, #5
900278e0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900278e4:	f023 0307 	bic.w	r3, r3, #7
900278e8:	4313      	orrs	r3, r2
900278ea:	431f      	orrs	r7, r3
900278ec:	f8a8 7000 	strh.w	r7, [r8]
900278f0:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
900278f2:	f108 0802 	add.w	r8, r8, #2
900278f6:	f10b 3bff 	add.w	fp, fp, #4294967295
900278fa:	441c      	add	r4, r3
900278fc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900278fe:	441e      	add	r6, r3
90027900:	e643      	b.n	9002758a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90027902:	2800      	cmp	r0, #0
90027904:	f43f af0a 	beq.w	9002771c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90027908:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
9002790c:	9109      	str	r1, [sp, #36]	@ 0x24
9002790e:	0e09      	lsrs	r1, r1, #24
90027910:	9111      	str	r1, [sp, #68]	@ 0x44
90027912:	e703      	b.n	9002771c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90027914:	f8b8 1000 	ldrh.w	r1, [r8]
90027918:	43d2      	mvns	r2, r2
9002791a:	ea4f 2c21 	mov.w	ip, r1, asr #8
9002791e:	fa5f fe82 	uxtb.w	lr, r2
90027922:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90027926:	10c8      	asrs	r0, r1, #3
90027928:	00ca      	lsls	r2, r1, #3
9002792a:	fb0c fc0e 	mul.w	ip, ip, lr
9002792e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90027932:	b2d2      	uxtb	r2, r2
90027934:	f10c 0101 	add.w	r1, ip, #1
90027938:	fb00 f00e 	mul.w	r0, r0, lr
9002793c:	fb02 f20e 	mul.w	r2, r2, lr
90027940:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90027944:	0c39      	lsrs	r1, r7, #16
90027946:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
9002794a:	490f      	ldr	r1, [pc, #60]	@ (90027988 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
9002794c:	fa5f fc8c 	uxtb.w	ip, ip
90027950:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
90027954:	1c41      	adds	r1, r0, #1
90027956:	eb01 2010 	add.w	r0, r1, r0, lsr #8
9002795a:	1c51      	adds	r1, r2, #1
9002795c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90027960:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90027964:	00c0      	lsls	r0, r0, #3
90027966:	eb07 2712 	add.w	r7, r7, r2, lsr #8
9002796a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002796e:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90027972:	ea4c 0c00 	orr.w	ip, ip, r0
90027976:	ea47 0c0c 	orr.w	ip, r7, ip
9002797a:	f8a8 c000 	strh.w	ip, [r8]
9002797e:	e7b7      	b.n	900278f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90027980:	b01b      	add	sp, #108	@ 0x6c
90027982:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027986:	bf00      	nop
90027988:	fffff800 	.word	0xfffff800

9002798c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
9002798c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90027990:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
90027994:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90027998:	2d00      	cmp	r5, #0
9002799a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
9002799e:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
900279a2:	fb05 0e03 	mla	lr, r5, r3, r0
900279a6:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
900279aa:	f2c0 808c 	blt.w	90027ac6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
900279ae:	45a9      	cmp	r9, r5
900279b0:	f340 8089 	ble.w	90027ac6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
900279b4:	2800      	cmp	r0, #0
900279b6:	f2c0 8084 	blt.w	90027ac2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
900279ba:	4580      	cmp	r8, r0
900279bc:	f340 8081 	ble.w	90027ac2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
900279c0:	ea4f 045e 	mov.w	r4, lr, lsr #1
900279c4:	f01e 0f01 	tst.w	lr, #1
900279c8:	5d16      	ldrb	r6, [r2, r4]
900279ca:	bf0c      	ite	eq
900279cc:	f006 060f 	andeq.w	r6, r6, #15
900279d0:	1136      	asrne	r6, r6, #4
900279d2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
900279d6:	b2f6      	uxtb	r6, r6
900279d8:	1c44      	adds	r4, r0, #1
900279da:	d477      	bmi.n	90027acc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
900279dc:	45a0      	cmp	r8, r4
900279de:	dd75      	ble.n	90027acc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
900279e0:	2f00      	cmp	r7, #0
900279e2:	d075      	beq.n	90027ad0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
900279e4:	f10e 0a01 	add.w	sl, lr, #1
900279e8:	ea4f 045a 	mov.w	r4, sl, lsr #1
900279ec:	f01a 0f01 	tst.w	sl, #1
900279f0:	5d14      	ldrb	r4, [r2, r4]
900279f2:	bf0c      	ite	eq
900279f4:	f004 040f 	andeq.w	r4, r4, #15
900279f8:	1124      	asrne	r4, r4, #4
900279fa:	eb04 1404 	add.w	r4, r4, r4, lsl #4
900279fe:	b2e4      	uxtb	r4, r4
90027a00:	3501      	adds	r5, #1
90027a02:	d469      	bmi.n	90027ad8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90027a04:	45a9      	cmp	r9, r5
90027a06:	dd67      	ble.n	90027ad8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90027a08:	f1bc 0f00 	cmp.w	ip, #0
90027a0c:	d067      	beq.n	90027ade <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
90027a0e:	2800      	cmp	r0, #0
90027a10:	db60      	blt.n	90027ad4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
90027a12:	4580      	cmp	r8, r0
90027a14:	dd5e      	ble.n	90027ad4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
90027a16:	eb03 090e 	add.w	r9, r3, lr
90027a1a:	ea4f 0559 	mov.w	r5, r9, lsr #1
90027a1e:	f019 0f01 	tst.w	r9, #1
90027a22:	5d55      	ldrb	r5, [r2, r5]
90027a24:	bf0c      	ite	eq
90027a26:	f005 050f 	andeq.w	r5, r5, #15
90027a2a:	112d      	asrne	r5, r5, #4
90027a2c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90027a30:	b2ed      	uxtb	r5, r5
90027a32:	3001      	adds	r0, #1
90027a34:	d456      	bmi.n	90027ae4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
90027a36:	4580      	cmp	r8, r0
90027a38:	dd54      	ble.n	90027ae4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
90027a3a:	2f00      	cmp	r7, #0
90027a3c:	d054      	beq.n	90027ae8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
90027a3e:	3301      	adds	r3, #1
90027a40:	449e      	add	lr, r3
90027a42:	ea4f 035e 	mov.w	r3, lr, lsr #1
90027a46:	f01e 0f01 	tst.w	lr, #1
90027a4a:	5cd0      	ldrb	r0, [r2, r3]
90027a4c:	bf0c      	ite	eq
90027a4e:	f000 000f 	andeq.w	r0, r0, #15
90027a52:	1100      	asrne	r0, r0, #4
90027a54:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90027a58:	b2c3      	uxtb	r3, r0
90027a5a:	b2ba      	uxth	r2, r7
90027a5c:	fa1f fc8c 	uxth.w	ip, ip
90027a60:	fb02 f00c 	mul.w	r0, r2, ip
90027a64:	0112      	lsls	r2, r2, #4
90027a66:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
90027a6a:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
90027a6e:	1a12      	subs	r2, r2, r0
90027a70:	fa1f fc8c 	uxth.w	ip, ip
90027a74:	b292      	uxth	r2, r2
90027a76:	eba7 070c 	sub.w	r7, r7, ip
90027a7a:	4362      	muls	r2, r4
90027a7c:	b2bf      	uxth	r7, r7
90027a7e:	fb06 2207 	mla	r2, r6, r7, r2
90027a82:	fb0c 2505 	mla	r5, ip, r5, r2
90027a86:	fb00 5303 	mla	r3, r0, r3, r5
90027a8a:	f3c3 2307 	ubfx	r3, r3, #8, #8
90027a8e:	b1b3      	cbz	r3, 90027abe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90027a90:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
90027a94:	435a      	muls	r2, r3
90027a96:	1c53      	adds	r3, r2, #1
90027a98:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90027a9c:	4a2d      	ldr	r2, [pc, #180]	@ (90027b54 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
90027a9e:	121b      	asrs	r3, r3, #8
90027aa0:	6812      	ldr	r2, [r2, #0]
90027aa2:	2bff      	cmp	r3, #255	@ 0xff
90027aa4:	ea4f 2612 	mov.w	r6, r2, lsr #8
90027aa8:	d120      	bne.n	90027aec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
90027aaa:	0950      	lsrs	r0, r2, #5
90027aac:	4b2a      	ldr	r3, [pc, #168]	@ (90027b58 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
90027aae:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90027ab2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90027ab6:	4033      	ands	r3, r6
90027ab8:	4318      	orrs	r0, r3
90027aba:	4302      	orrs	r2, r0
90027abc:	800a      	strh	r2, [r1, #0]
90027abe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90027ac2:	2600      	movs	r6, #0
90027ac4:	e788      	b.n	900279d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
90027ac6:	2400      	movs	r4, #0
90027ac8:	4626      	mov	r6, r4
90027aca:	e799      	b.n	90027a00 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90027acc:	2400      	movs	r4, #0
90027ace:	e797      	b.n	90027a00 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90027ad0:	463c      	mov	r4, r7
90027ad2:	e795      	b.n	90027a00 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90027ad4:	2500      	movs	r5, #0
90027ad6:	e7ac      	b.n	90027a32 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
90027ad8:	2300      	movs	r3, #0
90027ada:	461d      	mov	r5, r3
90027adc:	e7bd      	b.n	90027a5a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90027ade:	4663      	mov	r3, ip
90027ae0:	4665      	mov	r5, ip
90027ae2:	e7ba      	b.n	90027a5a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90027ae4:	2300      	movs	r3, #0
90027ae6:	e7b8      	b.n	90027a5a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90027ae8:	463b      	mov	r3, r7
90027aea:	e7b6      	b.n	90027a5a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90027aec:	880d      	ldrh	r5, [r1, #0]
90027aee:	b29f      	uxth	r7, r3
90027af0:	f3c2 4007 	ubfx	r0, r2, #16, #8
90027af4:	43db      	mvns	r3, r3
90027af6:	122c      	asrs	r4, r5, #8
90027af8:	fb10 f007 	smulbb	r0, r0, r7
90027afc:	b2db      	uxtb	r3, r3
90027afe:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90027b02:	b2f6      	uxtb	r6, r6
90027b04:	b2d2      	uxtb	r2, r2
90027b06:	fb04 0403 	mla	r4, r4, r3, r0
90027b0a:	10e8      	asrs	r0, r5, #3
90027b0c:	fb12 f207 	smulbb	r2, r2, r7
90027b10:	00ed      	lsls	r5, r5, #3
90027b12:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90027b16:	b2a4      	uxth	r4, r4
90027b18:	fb16 f607 	smulbb	r6, r6, r7
90027b1c:	b2ed      	uxtb	r5, r5
90027b1e:	fb00 6603 	mla	r6, r0, r3, r6
90027b22:	fb05 2303 	mla	r3, r5, r3, r2
90027b26:	b2b0      	uxth	r0, r6
90027b28:	b29a      	uxth	r2, r3
90027b2a:	1c63      	adds	r3, r4, #1
90027b2c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90027b30:	1c53      	adds	r3, r2, #1
90027b32:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90027b36:	1c42      	adds	r2, r0, #1
90027b38:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90027b3c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90027b40:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90027b44:	0940      	lsrs	r0, r0, #5
90027b46:	4323      	orrs	r3, r4
90027b48:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90027b4c:	4303      	orrs	r3, r0
90027b4e:	800b      	strh	r3, [r1, #0]
90027b50:	e7b5      	b.n	90027abe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90027b52:	bf00      	nop
90027b54:	24021874 	.word	0x24021874
90027b58:	00fff800 	.word	0x00fff800

90027b5c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90027b5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027b60:	b097      	sub	sp, #92	@ 0x5c
90027b62:	9214      	str	r2, [sp, #80]	@ 0x50
90027b64:	9309      	str	r3, [sp, #36]	@ 0x24
90027b66:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90027b68:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
90027b6c:	9015      	str	r0, [sp, #84]	@ 0x54
90027b6e:	910d      	str	r1, [sp, #52]	@ 0x34
90027b70:	6850      	ldr	r0, [r2, #4]
90027b72:	930f      	str	r3, [sp, #60]	@ 0x3c
90027b74:	6812      	ldr	r2, [r2, #0]
90027b76:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
90027b7a:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
90027b7e:	fb00 1303 	mla	r3, r0, r3, r1
90027b82:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90027b86:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90027b88:	689b      	ldr	r3, [r3, #8]
90027b8a:	3301      	adds	r3, #1
90027b8c:	f023 0301 	bic.w	r3, r3, #1
90027b90:	930a      	str	r3, [sp, #40]	@ 0x28
90027b92:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90027b94:	681f      	ldr	r7, [r3, #0]
90027b96:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90027b98:	2b00      	cmp	r3, #0
90027b9a:	dc03      	bgt.n	90027ba4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90027b9c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
90027b9e:	2b00      	cmp	r3, #0
90027ba0:	f340 8289 	ble.w	900280b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
90027ba4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90027ba6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90027baa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90027bae:	1e48      	subs	r0, r1, #1
90027bb0:	f102 3cff 	add.w	ip, r2, #4294967295
90027bb4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90027bb6:	2b00      	cmp	r3, #0
90027bb8:	f340 80c5 	ble.w	90027d46 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
90027bbc:	ea5f 4e24 	movs.w	lr, r4, asr #16
90027bc0:	ea4f 4326 	mov.w	r3, r6, asr #16
90027bc4:	d406      	bmi.n	90027bd4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90027bc6:	4586      	cmp	lr, r0
90027bc8:	da04      	bge.n	90027bd4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90027bca:	2b00      	cmp	r3, #0
90027bcc:	db02      	blt.n	90027bd4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90027bce:	4563      	cmp	r3, ip
90027bd0:	f2c0 80ba 	blt.w	90027d48 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90027bd4:	f11e 0e01 	adds.w	lr, lr, #1
90027bd8:	f100 80ab 	bmi.w	90027d32 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90027bdc:	4571      	cmp	r1, lr
90027bde:	f2c0 80a8 	blt.w	90027d32 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90027be2:	3301      	adds	r3, #1
90027be4:	f100 80a5 	bmi.w	90027d32 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90027be8:	429a      	cmp	r2, r3
90027bea:	f2c0 80a2 	blt.w	90027d32 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90027bee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90027bf0:	46c8      	mov	r8, r9
90027bf2:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
90027bf6:	930e      	str	r3, [sp, #56]	@ 0x38
90027bf8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90027bfa:	2b00      	cmp	r3, #0
90027bfc:	f340 80c4 	ble.w	90027d88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
90027c00:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90027c02:	1430      	asrs	r0, r6, #16
90027c04:	f3c4 3203 	ubfx	r2, r4, #12, #4
90027c08:	f3c6 3103 	ubfx	r1, r6, #12, #4
90027c0c:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90027c10:	1423      	asrs	r3, r4, #16
90027c12:	f100 814f 	bmi.w	90027eb4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90027c16:	f10c 3bff 	add.w	fp, ip, #4294967295
90027c1a:	455b      	cmp	r3, fp
90027c1c:	f280 814a 	bge.w	90027eb4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90027c20:	2800      	cmp	r0, #0
90027c22:	f2c0 8147 	blt.w	90027eb4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90027c26:	f10e 3bff 	add.w	fp, lr, #4294967295
90027c2a:	4558      	cmp	r0, fp
90027c2c:	f280 8142 	bge.w	90027eb4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90027c30:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
90027c32:	fb00 3305 	mla	r3, r0, r5, r3
90027c36:	0858      	lsrs	r0, r3, #1
90027c38:	07dd      	lsls	r5, r3, #31
90027c3a:	f817 c000 	ldrb.w	ip, [r7, r0]
90027c3e:	bf54      	ite	pl
90027c40:	f00c 0c0f 	andpl.w	ip, ip, #15
90027c44:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90027c48:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027c4c:	fa5f fc8c 	uxtb.w	ip, ip
90027c50:	2a00      	cmp	r2, #0
90027c52:	f000 80dd 	beq.w	90027e10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
90027c56:	1c58      	adds	r0, r3, #1
90027c58:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90027c5c:	07c0      	lsls	r0, r0, #31
90027c5e:	f817 e00e 	ldrb.w	lr, [r7, lr]
90027c62:	bf54      	ite	pl
90027c64:	f00e 0e0f 	andpl.w	lr, lr, #15
90027c68:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90027c6c:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90027c70:	fa5f f08e 	uxtb.w	r0, lr
90027c74:	9010      	str	r0, [sp, #64]	@ 0x40
90027c76:	b1d9      	cbz	r1, 90027cb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90027c78:	4453      	add	r3, sl
90027c7a:	0858      	lsrs	r0, r3, #1
90027c7c:	07dd      	lsls	r5, r3, #31
90027c7e:	f103 0301 	add.w	r3, r3, #1
90027c82:	5c38      	ldrb	r0, [r7, r0]
90027c84:	bf54      	ite	pl
90027c86:	f000 000f 	andpl.w	r0, r0, #15
90027c8a:	1100      	asrmi	r0, r0, #4
90027c8c:	07dd      	lsls	r5, r3, #31
90027c8e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90027c92:	b2c0      	uxtb	r0, r0
90027c94:	900b      	str	r0, [sp, #44]	@ 0x2c
90027c96:	ea4f 0053 	mov.w	r0, r3, lsr #1
90027c9a:	f817 e000 	ldrb.w	lr, [r7, r0]
90027c9e:	bf54      	ite	pl
90027ca0:	f00e 030f 	andpl.w	r3, lr, #15
90027ca4:	ea4f 132e 	movmi.w	r3, lr, asr #4
90027ca8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90027cac:	b2db      	uxtb	r3, r3
90027cae:	9311      	str	r3, [sp, #68]	@ 0x44
90027cb0:	b292      	uxth	r2, r2
90027cb2:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90027cb4:	b289      	uxth	r1, r1
90027cb6:	fb02 f301 	mul.w	r3, r2, r1
90027cba:	0112      	lsls	r2, r2, #4
90027cbc:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90027cc0:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
90027cc4:	1ad2      	subs	r2, r2, r3
90027cc6:	b289      	uxth	r1, r1
90027cc8:	b292      	uxth	r2, r2
90027cca:	1a40      	subs	r0, r0, r1
90027ccc:	436a      	muls	r2, r5
90027cce:	b280      	uxth	r0, r0
90027cd0:	fb0c 2c00 	mla	ip, ip, r0, r2
90027cd4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90027cd6:	fb01 c102 	mla	r1, r1, r2, ip
90027cda:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90027cdc:	fb03 1302 	mla	r3, r3, r2, r1
90027ce0:	f3c3 2307 	ubfx	r3, r3, #8, #8
90027ce4:	b1db      	cbz	r3, 90027d1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027ce6:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90027ce8:	4353      	muls	r3, r2
90027cea:	1c5a      	adds	r2, r3, #1
90027cec:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90027cf0:	4ac6      	ldr	r2, [pc, #792]	@ (9002800c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90027cf2:	121b      	asrs	r3, r3, #8
90027cf4:	6812      	ldr	r2, [r2, #0]
90027cf6:	2bff      	cmp	r3, #255	@ 0xff
90027cf8:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90027cfc:	f040 8099 	bne.w	90027e32 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
90027d00:	0953      	lsrs	r3, r2, #5
90027d02:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
90027d06:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90027d0a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90027d0e:	f02c 0c07 	bic.w	ip, ip, #7
90027d12:	ea43 0c0c 	orr.w	ip, r3, ip
90027d16:	ea4c 0202 	orr.w	r2, ip, r2
90027d1a:	f8a8 2000 	strh.w	r2, [r8]
90027d1e:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90027d20:	f108 0802 	add.w	r8, r8, #2
90027d24:	441c      	add	r4, r3
90027d26:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027d28:	441e      	add	r6, r3
90027d2a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90027d2c:	3b01      	subs	r3, #1
90027d2e:	930e      	str	r3, [sp, #56]	@ 0x38
90027d30:	e762      	b.n	90027bf8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90027d32:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90027d34:	f109 0902 	add.w	r9, r9, #2
90027d38:	441c      	add	r4, r3
90027d3a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027d3c:	441e      	add	r6, r3
90027d3e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90027d40:	3b01      	subs	r3, #1
90027d42:	9309      	str	r3, [sp, #36]	@ 0x24
90027d44:	e736      	b.n	90027bb4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90027d46:	d024      	beq.n	90027d92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90027d48:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90027d4a:	9823      	ldr	r0, [sp, #140]	@ 0x8c
90027d4c:	3b01      	subs	r3, #1
90027d4e:	fb00 4003 	mla	r0, r0, r3, r4
90027d52:	1400      	asrs	r0, r0, #16
90027d54:	f53f af4b 	bmi.w	90027bee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90027d58:	3901      	subs	r1, #1
90027d5a:	4288      	cmp	r0, r1
90027d5c:	f6bf af47 	bge.w	90027bee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90027d60:	9924      	ldr	r1, [sp, #144]	@ 0x90
90027d62:	fb01 6303 	mla	r3, r1, r3, r6
90027d66:	141b      	asrs	r3, r3, #16
90027d68:	f53f af41 	bmi.w	90027bee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90027d6c:	3a01      	subs	r2, #1
90027d6e:	4293      	cmp	r3, r2
90027d70:	f6bf af3d 	bge.w	90027bee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90027d74:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
90027d78:	46c8      	mov	r8, r9
90027d7a:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
90027d7e:	930e      	str	r3, [sp, #56]	@ 0x38
90027d80:	f1bb 0f00 	cmp.w	fp, #0
90027d84:	f300 80b7 	bgt.w	90027ef6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
90027d88:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90027d8a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90027d8e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90027d92:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90027d94:	2b00      	cmp	r3, #0
90027d96:	f340 818e 	ble.w	900280b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
90027d9a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90027d9e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027da0:	ee30 0a04 	vadd.f32	s0, s0, s8
90027da4:	ee70 0aa4 	vadd.f32	s1, s1, s9
90027da8:	eef0 6a62 	vmov.f32	s13, s5
90027dac:	eec7 7a00 	vdiv.f32	s15, s14, s0
90027db0:	ee31 1a05 	vadd.f32	s2, s2, s10
90027db4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027db8:	ee16 4a90 	vmov	r4, s13
90027dbc:	eef0 6a43 	vmov.f32	s13, s6
90027dc0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027dc4:	ee16 6a90 	vmov	r6, s13
90027dc8:	ee20 7aa7 	vmul.f32	s14, s1, s15
90027dcc:	ee61 7a27 	vmul.f32	s15, s2, s15
90027dd0:	ee77 2a62 	vsub.f32	s5, s14, s5
90027dd4:	ee37 3ac3 	vsub.f32	s6, s15, s6
90027dd8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90027ddc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90027de0:	ee12 2a90 	vmov	r2, s5
90027de4:	eef0 2a47 	vmov.f32	s5, s14
90027de8:	fb92 f3f3 	sdiv	r3, r2, r3
90027dec:	ee13 2a10 	vmov	r2, s6
90027df0:	9323      	str	r3, [sp, #140]	@ 0x8c
90027df2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027df4:	eeb0 3a67 	vmov.f32	s6, s15
90027df8:	fb92 f3f3 	sdiv	r3, r2, r3
90027dfc:	9324      	str	r3, [sp, #144]	@ 0x90
90027dfe:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90027e00:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90027e02:	3b01      	subs	r3, #1
90027e04:	930d      	str	r3, [sp, #52]	@ 0x34
90027e06:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027e08:	bf08      	it	eq
90027e0a:	4613      	moveq	r3, r2
90027e0c:	9309      	str	r3, [sp, #36]	@ 0x24
90027e0e:	e6c2      	b.n	90027b96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90027e10:	2900      	cmp	r1, #0
90027e12:	f43f af4d 	beq.w	90027cb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90027e16:	eb0a 0003 	add.w	r0, sl, r3
90027e1a:	0843      	lsrs	r3, r0, #1
90027e1c:	07c0      	lsls	r0, r0, #31
90027e1e:	5cfb      	ldrb	r3, [r7, r3]
90027e20:	bf54      	ite	pl
90027e22:	f003 030f 	andpl.w	r3, r3, #15
90027e26:	111b      	asrmi	r3, r3, #4
90027e28:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90027e2c:	b2db      	uxtb	r3, r3
90027e2e:	930b      	str	r3, [sp, #44]	@ 0x2c
90027e30:	e73e      	b.n	90027cb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90027e32:	f8b8 e000 	ldrh.w	lr, [r8]
90027e36:	fa1f fb83 	uxth.w	fp, r3
90027e3a:	f3c2 4107 	ubfx	r1, r2, #16, #8
90027e3e:	43db      	mvns	r3, r3
90027e40:	ea4f 202e 	mov.w	r0, lr, asr #8
90027e44:	fb11 f10b 	smulbb	r1, r1, fp
90027e48:	b2db      	uxtb	r3, r3
90027e4a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90027e4e:	fa5f fc8c 	uxtb.w	ip, ip
90027e52:	b2d2      	uxtb	r2, r2
90027e54:	fb00 1003 	mla	r0, r0, r3, r1
90027e58:	ea4f 01ee 	mov.w	r1, lr, asr #3
90027e5c:	fb1c fc0b 	smulbb	ip, ip, fp
90027e60:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90027e64:	b280      	uxth	r0, r0
90027e66:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90027e6a:	fb12 fb0b 	smulbb	fp, r2, fp
90027e6e:	fa5f fe8e 	uxtb.w	lr, lr
90027e72:	fb01 cc03 	mla	ip, r1, r3, ip
90027e76:	fb0e bb03 	mla	fp, lr, r3, fp
90027e7a:	1c43      	adds	r3, r0, #1
90027e7c:	fa1f fc8c 	uxth.w	ip, ip
90027e80:	fa1f fb8b 	uxth.w	fp, fp
90027e84:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90027e88:	f10c 0101 	add.w	r1, ip, #1
90027e8c:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
90027e90:	f10b 0001 	add.w	r0, fp, #1
90027e94:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90027e98:	eb00 201b 	add.w	r0, r0, fp, lsr #8
90027e9c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90027ea0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90027ea4:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90027ea8:	4318      	orrs	r0, r3
90027eaa:	ea40 000c 	orr.w	r0, r0, ip
90027eae:	f8a8 0000 	strh.w	r0, [r8]
90027eb2:	e734      	b.n	90027d1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027eb4:	f113 0b01 	adds.w	fp, r3, #1
90027eb8:	f53f af31 	bmi.w	90027d1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027ebc:	45dc      	cmp	ip, fp
90027ebe:	f6ff af2e 	blt.w	90027d1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027ec2:	f110 0b01 	adds.w	fp, r0, #1
90027ec6:	f53f af2a 	bmi.w	90027d1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027eca:	45de      	cmp	lr, fp
90027ecc:	f6ff af27 	blt.w	90027d1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027ed0:	9302      	str	r3, [sp, #8]
90027ed2:	fa0f f38e 	sxth.w	r3, lr
90027ed6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90027ed8:	9301      	str	r3, [sp, #4]
90027eda:	fa0f f38c 	sxth.w	r3, ip
90027ede:	e9cd 0203 	strd	r0, r2, [sp, #12]
90027ee2:	e9cd 1505 	strd	r1, r5, [sp, #20]
90027ee6:	9300      	str	r3, [sp, #0]
90027ee8:	463a      	mov	r2, r7
90027eea:	4653      	mov	r3, sl
90027eec:	4641      	mov	r1, r8
90027eee:	9815      	ldr	r0, [sp, #84]	@ 0x54
90027ef0:	f7ff fd4c 	bl	9002798c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
90027ef4:	e713      	b.n	90027d1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027ef6:	1422      	asrs	r2, r4, #16
90027ef8:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
90027efa:	1433      	asrs	r3, r6, #16
90027efc:	f3c4 3103 	ubfx	r1, r4, #12, #4
90027f00:	f3c6 3003 	ubfx	r0, r6, #12, #4
90027f04:	fb05 2303 	mla	r3, r5, r3, r2
90027f08:	085a      	lsrs	r2, r3, #1
90027f0a:	07dd      	lsls	r5, r3, #31
90027f0c:	5cba      	ldrb	r2, [r7, r2]
90027f0e:	bf54      	ite	pl
90027f10:	f002 020f 	andpl.w	r2, r2, #15
90027f14:	1112      	asrmi	r2, r2, #4
90027f16:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90027f1a:	b2d2      	uxtb	r2, r2
90027f1c:	2900      	cmp	r1, #0
90027f1e:	d077      	beq.n	90028010 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90027f20:	f103 0e01 	add.w	lr, r3, #1
90027f24:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
90027f28:	f01e 0f01 	tst.w	lr, #1
90027f2c:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027f30:	bf0c      	ite	eq
90027f32:	f00c 0c0f 	andeq.w	ip, ip, #15
90027f36:	ea4f 1c2c 	movne.w	ip, ip, asr #4
90027f3a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027f3e:	fa5f f58c 	uxtb.w	r5, ip
90027f42:	9512      	str	r5, [sp, #72]	@ 0x48
90027f44:	b308      	cbz	r0, 90027f8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90027f46:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90027f48:	442b      	add	r3, r5
90027f4a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90027f4e:	07dd      	lsls	r5, r3, #31
90027f50:	f103 0301 	add.w	r3, r3, #1
90027f54:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027f58:	bf54      	ite	pl
90027f5a:	f00c 0c0f 	andpl.w	ip, ip, #15
90027f5e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90027f62:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027f66:	fa5f f58c 	uxtb.w	r5, ip
90027f6a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90027f6e:	950c      	str	r5, [sp, #48]	@ 0x30
90027f70:	07dd      	lsls	r5, r3, #31
90027f72:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027f76:	bf54      	ite	pl
90027f78:	f00c 0c0f 	andpl.w	ip, ip, #15
90027f7c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90027f80:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027f84:	fa5f f38c 	uxtb.w	r3, ip
90027f88:	9313      	str	r3, [sp, #76]	@ 0x4c
90027f8a:	b289      	uxth	r1, r1
90027f8c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90027f8e:	b280      	uxth	r0, r0
90027f90:	fb01 f300 	mul.w	r3, r1, r0
90027f94:	0109      	lsls	r1, r1, #4
90027f96:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
90027f9a:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
90027f9e:	1ac9      	subs	r1, r1, r3
90027fa0:	b280      	uxth	r0, r0
90027fa2:	b289      	uxth	r1, r1
90027fa4:	ebac 0c00 	sub.w	ip, ip, r0
90027fa8:	4369      	muls	r1, r5
90027faa:	fa1f fc8c 	uxth.w	ip, ip
90027fae:	fb02 120c 	mla	r2, r2, ip, r1
90027fb2:	990c      	ldr	r1, [sp, #48]	@ 0x30
90027fb4:	fb00 2001 	mla	r0, r0, r1, r2
90027fb8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
90027fba:	fb03 0302 	mla	r3, r3, r2, r0
90027fbe:	f3c3 2307 	ubfx	r3, r3, #8, #8
90027fc2:	b1d3      	cbz	r3, 90027ffa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
90027fc4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90027fc6:	4353      	muls	r3, r2
90027fc8:	1c5a      	adds	r2, r3, #1
90027fca:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90027fce:	4a0f      	ldr	r2, [pc, #60]	@ (9002800c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90027fd0:	121b      	asrs	r3, r3, #8
90027fd2:	6812      	ldr	r2, [r2, #0]
90027fd4:	2bff      	cmp	r3, #255	@ 0xff
90027fd6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90027fda:	d12d      	bne.n	90028038 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
90027fdc:	0953      	lsrs	r3, r2, #5
90027fde:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
90027fe2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90027fe6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90027fea:	f02c 0c07 	bic.w	ip, ip, #7
90027fee:	ea43 0c0c 	orr.w	ip, r3, ip
90027ff2:	ea4c 0202 	orr.w	r2, ip, r2
90027ff6:	f8a8 2000 	strh.w	r2, [r8]
90027ffa:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90027ffc:	f108 0802 	add.w	r8, r8, #2
90028000:	f10b 3bff 	add.w	fp, fp, #4294967295
90028004:	441c      	add	r4, r3
90028006:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90028008:	441e      	add	r6, r3
9002800a:	e6b9      	b.n	90027d80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
9002800c:	24021874 	.word	0x24021874
90028010:	2800      	cmp	r0, #0
90028012:	d0ba      	beq.n	90027f8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90028014:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90028016:	442b      	add	r3, r5
90028018:	ea4f 0c53 	mov.w	ip, r3, lsr #1
9002801c:	07db      	lsls	r3, r3, #31
9002801e:	f817 c00c 	ldrb.w	ip, [r7, ip]
90028022:	bf54      	ite	pl
90028024:	f00c 0c0f 	andpl.w	ip, ip, #15
90028028:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
9002802c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90028030:	fa5f f38c 	uxtb.w	r3, ip
90028034:	930c      	str	r3, [sp, #48]	@ 0x30
90028036:	e7a8      	b.n	90027f8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90028038:	f8b8 e000 	ldrh.w	lr, [r8]
9002803c:	fa1f fa83 	uxth.w	sl, r3
90028040:	f3c2 4107 	ubfx	r1, r2, #16, #8
90028044:	43db      	mvns	r3, r3
90028046:	ea4f 202e 	mov.w	r0, lr, asr #8
9002804a:	fb11 f10a 	smulbb	r1, r1, sl
9002804e:	b2db      	uxtb	r3, r3
90028050:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90028054:	b2d2      	uxtb	r2, r2
90028056:	fa5f fc8c 	uxtb.w	ip, ip
9002805a:	fb00 1003 	mla	r0, r0, r3, r1
9002805e:	ea4f 01ee 	mov.w	r1, lr, asr #3
90028062:	fb12 f20a 	smulbb	r2, r2, sl
90028066:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9002806a:	b280      	uxth	r0, r0
9002806c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90028070:	fb1c fc0a 	smulbb	ip, ip, sl
90028074:	fa5f fe8e 	uxtb.w	lr, lr
90028078:	fb0e 2203 	mla	r2, lr, r3, r2
9002807c:	fb01 cc03 	mla	ip, r1, r3, ip
90028080:	1c43      	adds	r3, r0, #1
90028082:	b292      	uxth	r2, r2
90028084:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90028088:	1c51      	adds	r1, r2, #1
9002808a:	fa1f fc8c 	uxth.w	ip, ip
9002808e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90028092:	eb01 2112 	add.w	r1, r1, r2, lsr #8
90028096:	f3c1 21c4 	ubfx	r1, r1, #11, #5
9002809a:	4308      	orrs	r0, r1
9002809c:	f10c 0101 	add.w	r1, ip, #1
900280a0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
900280a4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900280a8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
900280ac:	ea40 000c 	orr.w	r0, r0, ip
900280b0:	f8a8 0000 	strh.w	r0, [r8]
900280b4:	e7a1      	b.n	90027ffa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
900280b6:	b017      	add	sp, #92	@ 0x5c
900280b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900280bc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
900280bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900280c0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
900280c4:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
900280c8:	2d00      	cmp	r5, #0
900280ca:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
900280ce:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
900280d2:	fb05 0e03 	mla	lr, r5, r3, r0
900280d6:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
900280da:	f2c0 80b0 	blt.w	9002823e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
900280de:	45a9      	cmp	r9, r5
900280e0:	f340 80ad 	ble.w	9002823e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
900280e4:	2800      	cmp	r0, #0
900280e6:	f2c0 80a8 	blt.w	9002823a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
900280ea:	4580      	cmp	r8, r0
900280ec:	f340 80a5 	ble.w	9002823a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
900280f0:	ea4f 045e 	mov.w	r4, lr, lsr #1
900280f4:	f01e 0f01 	tst.w	lr, #1
900280f8:	5d16      	ldrb	r6, [r2, r4]
900280fa:	bf0c      	ite	eq
900280fc:	f006 060f 	andeq.w	r6, r6, #15
90028100:	1136      	asrne	r6, r6, #4
90028102:	eb06 1606 	add.w	r6, r6, r6, lsl #4
90028106:	b2f6      	uxtb	r6, r6
90028108:	1c44      	adds	r4, r0, #1
9002810a:	f100 809b 	bmi.w	90028244 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
9002810e:	45a0      	cmp	r8, r4
90028110:	f340 8098 	ble.w	90028244 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90028114:	2f00      	cmp	r7, #0
90028116:	f000 8097 	beq.w	90028248 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
9002811a:	f10e 0a01 	add.w	sl, lr, #1
9002811e:	ea4f 045a 	mov.w	r4, sl, lsr #1
90028122:	f01a 0f01 	tst.w	sl, #1
90028126:	5d14      	ldrb	r4, [r2, r4]
90028128:	bf0c      	ite	eq
9002812a:	f004 040f 	andeq.w	r4, r4, #15
9002812e:	1124      	asrne	r4, r4, #4
90028130:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90028134:	b2e4      	uxtb	r4, r4
90028136:	3501      	adds	r5, #1
90028138:	f100 808a 	bmi.w	90028250 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
9002813c:	45a9      	cmp	r9, r5
9002813e:	f340 8087 	ble.w	90028250 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90028142:	f1bc 0f00 	cmp.w	ip, #0
90028146:	f000 8086 	beq.w	90028256 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
9002814a:	2800      	cmp	r0, #0
9002814c:	db7e      	blt.n	9002824c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
9002814e:	4580      	cmp	r8, r0
90028150:	dd7c      	ble.n	9002824c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90028152:	eb03 090e 	add.w	r9, r3, lr
90028156:	ea4f 0559 	mov.w	r5, r9, lsr #1
9002815a:	f019 0f01 	tst.w	r9, #1
9002815e:	5d55      	ldrb	r5, [r2, r5]
90028160:	bf0c      	ite	eq
90028162:	f005 050f 	andeq.w	r5, r5, #15
90028166:	112d      	asrne	r5, r5, #4
90028168:	eb05 1505 	add.w	r5, r5, r5, lsl #4
9002816c:	b2ed      	uxtb	r5, r5
9002816e:	3001      	adds	r0, #1
90028170:	d474      	bmi.n	9002825c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90028172:	4580      	cmp	r8, r0
90028174:	dd72      	ble.n	9002825c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90028176:	2f00      	cmp	r7, #0
90028178:	d072      	beq.n	90028260 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
9002817a:	3301      	adds	r3, #1
9002817c:	449e      	add	lr, r3
9002817e:	ea4f 035e 	mov.w	r3, lr, lsr #1
90028182:	f01e 0f01 	tst.w	lr, #1
90028186:	5cd0      	ldrb	r0, [r2, r3]
90028188:	bf0c      	ite	eq
9002818a:	f000 000f 	andeq.w	r0, r0, #15
9002818e:	1100      	asrne	r0, r0, #4
90028190:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90028194:	b2c3      	uxtb	r3, r0
90028196:	b2ba      	uxth	r2, r7
90028198:	fa1f fc8c 	uxth.w	ip, ip
9002819c:	fb02 f00c 	mul.w	r0, r2, ip
900281a0:	0112      	lsls	r2, r2, #4
900281a2:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
900281a6:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
900281aa:	1a12      	subs	r2, r2, r0
900281ac:	fa1f fc8c 	uxth.w	ip, ip
900281b0:	b292      	uxth	r2, r2
900281b2:	eba7 070c 	sub.w	r7, r7, ip
900281b6:	4362      	muls	r2, r4
900281b8:	b2bf      	uxth	r7, r7
900281ba:	fb06 2207 	mla	r2, r6, r7, r2
900281be:	fb0c 2505 	mla	r5, ip, r5, r2
900281c2:	fb00 5303 	mla	r3, r0, r3, r5
900281c6:	f3c3 2307 	ubfx	r3, r3, #8, #8
900281ca:	b3a3      	cbz	r3, 90028236 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
900281cc:	4a25      	ldr	r2, [pc, #148]	@ (90028264 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
900281ce:	880e      	ldrh	r6, [r1, #0]
900281d0:	6815      	ldr	r5, [r2, #0]
900281d2:	b29a      	uxth	r2, r3
900281d4:	1234      	asrs	r4, r6, #8
900281d6:	43db      	mvns	r3, r3
900281d8:	f3c5 4007 	ubfx	r0, r5, #16, #8
900281dc:	f3c5 2707 	ubfx	r7, r5, #8, #8
900281e0:	b2db      	uxtb	r3, r3
900281e2:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
900281e6:	fb10 f002 	smulbb	r0, r0, r2
900281ea:	b2ed      	uxtb	r5, r5
900281ec:	fb17 f702 	smulbb	r7, r7, r2
900281f0:	fb04 0403 	mla	r4, r4, r3, r0
900281f4:	10f0      	asrs	r0, r6, #3
900281f6:	fb15 f202 	smulbb	r2, r5, r2
900281fa:	00f6      	lsls	r6, r6, #3
900281fc:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90028200:	b2a4      	uxth	r4, r4
90028202:	b2f6      	uxtb	r6, r6
90028204:	fb00 7003 	mla	r0, r0, r3, r7
90028208:	fb06 2303 	mla	r3, r6, r3, r2
9002820c:	b280      	uxth	r0, r0
9002820e:	b29a      	uxth	r2, r3
90028210:	1c63      	adds	r3, r4, #1
90028212:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90028216:	1c53      	adds	r3, r2, #1
90028218:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002821c:	1c42      	adds	r2, r0, #1
9002821e:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90028222:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90028226:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002822a:	0940      	lsrs	r0, r0, #5
9002822c:	4323      	orrs	r3, r4
9002822e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90028232:	4303      	orrs	r3, r0
90028234:	800b      	strh	r3, [r1, #0]
90028236:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002823a:	2600      	movs	r6, #0
9002823c:	e764      	b.n	90028108 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
9002823e:	2400      	movs	r4, #0
90028240:	4626      	mov	r6, r4
90028242:	e778      	b.n	90028136 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90028244:	2400      	movs	r4, #0
90028246:	e776      	b.n	90028136 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90028248:	463c      	mov	r4, r7
9002824a:	e774      	b.n	90028136 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
9002824c:	2500      	movs	r5, #0
9002824e:	e78e      	b.n	9002816e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
90028250:	2300      	movs	r3, #0
90028252:	461d      	mov	r5, r3
90028254:	e79f      	b.n	90028196 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90028256:	4663      	mov	r3, ip
90028258:	4665      	mov	r5, ip
9002825a:	e79c      	b.n	90028196 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
9002825c:	2300      	movs	r3, #0
9002825e:	e79a      	b.n	90028196 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90028260:	463b      	mov	r3, r7
90028262:	e798      	b.n	90028196 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90028264:	24021874 	.word	0x24021874

90028268 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90028268:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002826c:	b093      	sub	sp, #76	@ 0x4c
9002826e:	461d      	mov	r5, r3
90028270:	920c      	str	r2, [sp, #48]	@ 0x30
90028272:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90028274:	9011      	str	r0, [sp, #68]	@ 0x44
90028276:	9107      	str	r1, [sp, #28]
90028278:	6850      	ldr	r0, [r2, #4]
9002827a:	6812      	ldr	r2, [r2, #0]
9002827c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
90028280:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90028284:	fb00 1303 	mla	r3, r0, r3, r1
90028288:	eb02 0943 	add.w	r9, r2, r3, lsl #1
9002828c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002828e:	689b      	ldr	r3, [r3, #8]
90028290:	3301      	adds	r3, #1
90028292:	f023 0301 	bic.w	r3, r3, #1
90028296:	9306      	str	r3, [sp, #24]
90028298:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002829a:	681f      	ldr	r7, [r3, #0]
9002829c:	9b07      	ldr	r3, [sp, #28]
9002829e:	2b00      	cmp	r3, #0
900282a0:	dc03      	bgt.n	900282aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
900282a2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900282a4:	2b00      	cmp	r3, #0
900282a6:	f340 8267 	ble.w	90028778 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
900282aa:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900282ac:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900282b0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900282b4:	1e48      	subs	r0, r1, #1
900282b6:	f102 3cff 	add.w	ip, r2, #4294967295
900282ba:	2d00      	cmp	r5, #0
900282bc:	f340 80b7 	ble.w	9002842e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
900282c0:	ea5f 4e24 	movs.w	lr, r4, asr #16
900282c4:	ea4f 4326 	mov.w	r3, r6, asr #16
900282c8:	d406      	bmi.n	900282d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900282ca:	4586      	cmp	lr, r0
900282cc:	da04      	bge.n	900282d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900282ce:	2b00      	cmp	r3, #0
900282d0:	db02      	blt.n	900282d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900282d2:	4563      	cmp	r3, ip
900282d4:	f2c0 80ac 	blt.w	90028430 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
900282d8:	f11e 0e01 	adds.w	lr, lr, #1
900282dc:	f100 809f 	bmi.w	9002841e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900282e0:	4571      	cmp	r1, lr
900282e2:	f2c0 809c 	blt.w	9002841e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900282e6:	3301      	adds	r3, #1
900282e8:	f100 8099 	bmi.w	9002841e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900282ec:	429a      	cmp	r2, r3
900282ee:	f2c0 8096 	blt.w	9002841e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900282f2:	46c8      	mov	r8, r9
900282f4:	f9bd a018 	ldrsh.w	sl, [sp, #24]
900282f8:	9509      	str	r5, [sp, #36]	@ 0x24
900282fa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900282fc:	2b00      	cmp	r3, #0
900282fe:	f340 80b5 	ble.w	9002846c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90028302:	f3c4 3303 	ubfx	r3, r4, #12, #4
90028306:	1430      	asrs	r0, r6, #16
90028308:	f3c6 3103 	ubfx	r1, r6, #12, #4
9002830c:	9308      	str	r3, [sp, #32]
9002830e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90028310:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90028314:	1423      	asrs	r3, r4, #16
90028316:	f100 813f 	bmi.w	90028598 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
9002831a:	f10c 3bff 	add.w	fp, ip, #4294967295
9002831e:	455b      	cmp	r3, fp
90028320:	f280 813a 	bge.w	90028598 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90028324:	2800      	cmp	r0, #0
90028326:	f2c0 8137 	blt.w	90028598 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
9002832a:	f10e 3bff 	add.w	fp, lr, #4294967295
9002832e:	4558      	cmp	r0, fp
90028330:	f280 8132 	bge.w	90028598 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90028334:	9a06      	ldr	r2, [sp, #24]
90028336:	fb00 3302 	mla	r3, r0, r2, r3
9002833a:	0858      	lsrs	r0, r3, #1
9002833c:	07da      	lsls	r2, r3, #31
9002833e:	9a08      	ldr	r2, [sp, #32]
90028340:	f817 c000 	ldrb.w	ip, [r7, r0]
90028344:	bf54      	ite	pl
90028346:	f00c 0c0f 	andpl.w	ip, ip, #15
9002834a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
9002834e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90028352:	fa5f fc8c 	uxtb.w	ip, ip
90028356:	2a00      	cmp	r2, #0
90028358:	f000 80cc 	beq.w	900284f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9002835c:	1c58      	adds	r0, r3, #1
9002835e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90028362:	07c0      	lsls	r0, r0, #31
90028364:	f817 e00e 	ldrb.w	lr, [r7, lr]
90028368:	bf54      	ite	pl
9002836a:	f00e 0e0f 	andpl.w	lr, lr, #15
9002836e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90028372:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90028376:	fa5f fe8e 	uxtb.w	lr, lr
9002837a:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
9002837e:	b1b9      	cbz	r1, 900283b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90028380:	4453      	add	r3, sl
90028382:	0858      	lsrs	r0, r3, #1
90028384:	07da      	lsls	r2, r3, #31
90028386:	5c38      	ldrb	r0, [r7, r0]
90028388:	bf54      	ite	pl
9002838a:	f000 000f 	andpl.w	r0, r0, #15
9002838e:	1100      	asrmi	r0, r0, #4
90028390:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90028394:	b2c0      	uxtb	r0, r0
90028396:	900a      	str	r0, [sp, #40]	@ 0x28
90028398:	1c58      	adds	r0, r3, #1
9002839a:	0843      	lsrs	r3, r0, #1
9002839c:	07c2      	lsls	r2, r0, #31
9002839e:	5cfb      	ldrb	r3, [r7, r3]
900283a0:	bf54      	ite	pl
900283a2:	f003 030f 	andpl.w	r3, r3, #15
900283a6:	111b      	asrmi	r3, r3, #4
900283a8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
900283ac:	b2db      	uxtb	r3, r3
900283ae:	930e      	str	r3, [sp, #56]	@ 0x38
900283b0:	f8bd 2020 	ldrh.w	r2, [sp, #32]
900283b4:	b289      	uxth	r1, r1
900283b6:	fb02 f301 	mul.w	r3, r2, r1
900283ba:	0112      	lsls	r2, r2, #4
900283bc:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
900283c0:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
900283c4:	1ad2      	subs	r2, r2, r3
900283c6:	b289      	uxth	r1, r1
900283c8:	b292      	uxth	r2, r2
900283ca:	1a40      	subs	r0, r0, r1
900283cc:	fa1f fe80 	uxth.w	lr, r0
900283d0:	980d      	ldr	r0, [sp, #52]	@ 0x34
900283d2:	4342      	muls	r2, r0
900283d4:	fb0c 2c0e 	mla	ip, ip, lr, r2
900283d8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900283da:	fb01 c102 	mla	r1, r1, r2, ip
900283de:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
900283e0:	fb03 1302 	mla	r3, r3, r2, r1
900283e4:	f3c3 2307 	ubfx	r3, r3, #8, #8
900283e8:	2bff      	cmp	r3, #255	@ 0xff
900283ea:	f040 8094 	bne.w	90028516 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
900283ee:	4bbf      	ldr	r3, [pc, #764]	@ (900286ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
900283f0:	681a      	ldr	r2, [r3, #0]
900283f2:	4bbf      	ldr	r3, [pc, #764]	@ (900286f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
900283f4:	0951      	lsrs	r1, r2, #5
900283f6:	ea03 2312 	and.w	r3, r3, r2, lsr #8
900283fa:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900283fe:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90028402:	430b      	orrs	r3, r1
90028404:	4313      	orrs	r3, r2
90028406:	f8a8 3000 	strh.w	r3, [r8]
9002840a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002840c:	f108 0802 	add.w	r8, r8, #2
90028410:	441c      	add	r4, r3
90028412:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90028414:	441e      	add	r6, r3
90028416:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90028418:	3b01      	subs	r3, #1
9002841a:	9309      	str	r3, [sp, #36]	@ 0x24
9002841c:	e76d      	b.n	900282fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002841e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90028420:	3d01      	subs	r5, #1
90028422:	f109 0902 	add.w	r9, r9, #2
90028426:	441c      	add	r4, r3
90028428:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002842a:	441e      	add	r6, r3
9002842c:	e745      	b.n	900282ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9002842e:	d021      	beq.n	90028474 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90028430:	1e6b      	subs	r3, r5, #1
90028432:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90028434:	fb00 4003 	mla	r0, r0, r3, r4
90028438:	1400      	asrs	r0, r0, #16
9002843a:	f53f af5a 	bmi.w	900282f2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002843e:	3901      	subs	r1, #1
90028440:	4288      	cmp	r0, r1
90028442:	f6bf af56 	bge.w	900282f2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90028446:	9920      	ldr	r1, [sp, #128]	@ 0x80
90028448:	fb01 6303 	mla	r3, r1, r3, r6
9002844c:	141b      	asrs	r3, r3, #16
9002844e:	f53f af50 	bmi.w	900282f2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90028452:	3a01      	subs	r2, #1
90028454:	4293      	cmp	r3, r2
90028456:	f6bf af4c 	bge.w	900282f2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002845a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
9002845e:	46a8      	mov	r8, r5
90028460:	46ce      	mov	lr, r9
90028462:	9308      	str	r3, [sp, #32]
90028464:	f1b8 0f00 	cmp.w	r8, #0
90028468:	f300 80b6 	bgt.w	900285d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002846c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90028470:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90028474:	9b07      	ldr	r3, [sp, #28]
90028476:	2b00      	cmp	r3, #0
90028478:	f340 817e 	ble.w	90028778 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
9002847c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90028480:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90028482:	ee30 0a04 	vadd.f32	s0, s0, s8
90028486:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002848a:	eef0 6a62 	vmov.f32	s13, s5
9002848e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90028492:	ee31 1a05 	vadd.f32	s2, s2, s10
90028496:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002849a:	ee16 4a90 	vmov	r4, s13
9002849e:	eef0 6a43 	vmov.f32	s13, s6
900284a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900284a6:	ee16 6a90 	vmov	r6, s13
900284aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
900284ae:	ee61 7a27 	vmul.f32	s15, s2, s15
900284b2:	ee77 2a62 	vsub.f32	s5, s14, s5
900284b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
900284ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900284be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900284c2:	ee12 2a90 	vmov	r2, s5
900284c6:	eef0 2a47 	vmov.f32	s5, s14
900284ca:	fb92 f3f3 	sdiv	r3, r2, r3
900284ce:	ee13 2a10 	vmov	r2, s6
900284d2:	931f      	str	r3, [sp, #124]	@ 0x7c
900284d4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900284d6:	eeb0 3a67 	vmov.f32	s6, s15
900284da:	fb92 f3f3 	sdiv	r3, r2, r3
900284de:	9320      	str	r3, [sp, #128]	@ 0x80
900284e0:	9b07      	ldr	r3, [sp, #28]
900284e2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
900284e4:	3b01      	subs	r3, #1
900284e6:	9307      	str	r3, [sp, #28]
900284e8:	bf08      	it	eq
900284ea:	4615      	moveq	r5, r2
900284ec:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900284ee:	bf18      	it	ne
900284f0:	461d      	movne	r5, r3
900284f2:	e6d3      	b.n	9002829c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
900284f4:	2900      	cmp	r1, #0
900284f6:	f43f af5b 	beq.w	900283b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
900284fa:	eb0a 0003 	add.w	r0, sl, r3
900284fe:	0843      	lsrs	r3, r0, #1
90028500:	07c0      	lsls	r0, r0, #31
90028502:	5cfb      	ldrb	r3, [r7, r3]
90028504:	bf54      	ite	pl
90028506:	f003 030f 	andpl.w	r3, r3, #15
9002850a:	111b      	asrmi	r3, r3, #4
9002850c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90028510:	b2db      	uxtb	r3, r3
90028512:	930a      	str	r3, [sp, #40]	@ 0x28
90028514:	e74c      	b.n	900283b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90028516:	2b00      	cmp	r3, #0
90028518:	f43f af77 	beq.w	9002840a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002851c:	4a73      	ldr	r2, [pc, #460]	@ (900286ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
9002851e:	fa1f fe83 	uxth.w	lr, r3
90028522:	f8b8 c000 	ldrh.w	ip, [r8]
90028526:	43db      	mvns	r3, r3
90028528:	6810      	ldr	r0, [r2, #0]
9002852a:	ea4f 212c 	mov.w	r1, ip, asr #8
9002852e:	f3c0 4207 	ubfx	r2, r0, #16, #8
90028532:	b2db      	uxtb	r3, r3
90028534:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90028538:	f3c0 2b07 	ubfx	fp, r0, #8, #8
9002853c:	fb12 f20e 	smulbb	r2, r2, lr
90028540:	b2c0      	uxtb	r0, r0
90028542:	fb1b fb0e 	smulbb	fp, fp, lr
90028546:	fb01 2103 	mla	r1, r1, r3, r2
9002854a:	ea4f 02ec 	mov.w	r2, ip, asr #3
9002854e:	fb10 fe0e 	smulbb	lr, r0, lr
90028552:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90028556:	b289      	uxth	r1, r1
90028558:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
9002855c:	fa5f fc8c 	uxtb.w	ip, ip
90028560:	fb02 b203 	mla	r2, r2, r3, fp
90028564:	1c48      	adds	r0, r1, #1
90028566:	fb0c e303 	mla	r3, ip, r3, lr
9002856a:	b292      	uxth	r2, r2
9002856c:	b29b      	uxth	r3, r3
9002856e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
90028572:	f102 0b01 	add.w	fp, r2, #1
90028576:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
9002857a:	1c59      	adds	r1, r3, #1
9002857c:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
90028580:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90028584:	0952      	lsrs	r2, r2, #5
90028586:	f3c1 21c4 	ubfx	r1, r1, #11, #5
9002858a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002858e:	4301      	orrs	r1, r0
90028590:	4311      	orrs	r1, r2
90028592:	f8a8 1000 	strh.w	r1, [r8]
90028596:	e738      	b.n	9002840a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90028598:	f113 0b01 	adds.w	fp, r3, #1
9002859c:	f53f af35 	bmi.w	9002840a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900285a0:	45dc      	cmp	ip, fp
900285a2:	f6ff af32 	blt.w	9002840a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900285a6:	f110 0b01 	adds.w	fp, r0, #1
900285aa:	f53f af2e 	bmi.w	9002840a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900285ae:	45de      	cmp	lr, fp
900285b0:	f6ff af2b 	blt.w	9002840a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900285b4:	9302      	str	r3, [sp, #8]
900285b6:	fa0f f38e 	sxth.w	r3, lr
900285ba:	9a08      	ldr	r2, [sp, #32]
900285bc:	9301      	str	r3, [sp, #4]
900285be:	fa0f f38c 	sxth.w	r3, ip
900285c2:	9105      	str	r1, [sp, #20]
900285c4:	4641      	mov	r1, r8
900285c6:	9300      	str	r3, [sp, #0]
900285c8:	4653      	mov	r3, sl
900285ca:	e9cd 0203 	strd	r0, r2, [sp, #12]
900285ce:	463a      	mov	r2, r7
900285d0:	9811      	ldr	r0, [sp, #68]	@ 0x44
900285d2:	f7ff fd73 	bl	900280bc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
900285d6:	e718      	b.n	9002840a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900285d8:	1422      	asrs	r2, r4, #16
900285da:	9906      	ldr	r1, [sp, #24]
900285dc:	1433      	asrs	r3, r6, #16
900285de:	f3c4 3003 	ubfx	r0, r4, #12, #4
900285e2:	f3c6 3c03 	ubfx	ip, r6, #12, #4
900285e6:	fb01 2303 	mla	r3, r1, r3, r2
900285ea:	085a      	lsrs	r2, r3, #1
900285ec:	07d9      	lsls	r1, r3, #31
900285ee:	5cba      	ldrb	r2, [r7, r2]
900285f0:	bf54      	ite	pl
900285f2:	f002 020f 	andpl.w	r2, r2, #15
900285f6:	1112      	asrmi	r2, r2, #4
900285f8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
900285fc:	b2d2      	uxtb	r2, r2
900285fe:	2800      	cmp	r0, #0
90028600:	d063      	beq.n	900286ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
90028602:	f103 0a01 	add.w	sl, r3, #1
90028606:	ea4f 015a 	mov.w	r1, sl, lsr #1
9002860a:	f01a 0f01 	tst.w	sl, #1
9002860e:	5c79      	ldrb	r1, [r7, r1]
90028610:	bf0c      	ite	eq
90028612:	f001 010f 	andeq.w	r1, r1, #15
90028616:	1109      	asrne	r1, r1, #4
90028618:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9002861c:	b2c9      	uxtb	r1, r1
9002861e:	910f      	str	r1, [sp, #60]	@ 0x3c
90028620:	f1bc 0f00 	cmp.w	ip, #0
90028624:	d01a      	beq.n	9002865c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90028626:	9908      	ldr	r1, [sp, #32]
90028628:	440b      	add	r3, r1
9002862a:	0859      	lsrs	r1, r3, #1
9002862c:	f013 0f01 	tst.w	r3, #1
90028630:	f103 0301 	add.w	r3, r3, #1
90028634:	5c79      	ldrb	r1, [r7, r1]
90028636:	bf0c      	ite	eq
90028638:	f001 010f 	andeq.w	r1, r1, #15
9002863c:	1109      	asrne	r1, r1, #4
9002863e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90028642:	b2c9      	uxtb	r1, r1
90028644:	910b      	str	r1, [sp, #44]	@ 0x2c
90028646:	0859      	lsrs	r1, r3, #1
90028648:	07db      	lsls	r3, r3, #31
9002864a:	5c79      	ldrb	r1, [r7, r1]
9002864c:	bf54      	ite	pl
9002864e:	f001 010f 	andpl.w	r1, r1, #15
90028652:	1109      	asrmi	r1, r1, #4
90028654:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90028658:	b2c9      	uxtb	r1, r1
9002865a:	9110      	str	r1, [sp, #64]	@ 0x40
9002865c:	b280      	uxth	r0, r0
9002865e:	fa1f fc8c 	uxth.w	ip, ip
90028662:	fb00 f30c 	mul.w	r3, r0, ip
90028666:	0100      	lsls	r0, r0, #4
90028668:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
9002866c:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
90028670:	1ac0      	subs	r0, r0, r3
90028672:	fa1f fc8c 	uxth.w	ip, ip
90028676:	b280      	uxth	r0, r0
90028678:	eba1 010c 	sub.w	r1, r1, ip
9002867c:	fa1f fa81 	uxth.w	sl, r1
90028680:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90028682:	4348      	muls	r0, r1
90028684:	990b      	ldr	r1, [sp, #44]	@ 0x2c
90028686:	fb02 020a 	mla	r2, r2, sl, r0
9002868a:	fb0c 2c01 	mla	ip, ip, r1, r2
9002868e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90028690:	fb03 c302 	mla	r3, r3, r2, ip
90028694:	f3c3 2307 	ubfx	r3, r3, #8, #8
90028698:	2bff      	cmp	r3, #255	@ 0xff
9002869a:	d12b      	bne.n	900286f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
9002869c:	4b13      	ldr	r3, [pc, #76]	@ (900286ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
9002869e:	681a      	ldr	r2, [r3, #0]
900286a0:	4b13      	ldr	r3, [pc, #76]	@ (900286f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
900286a2:	0951      	lsrs	r1, r2, #5
900286a4:	ea03 2312 	and.w	r3, r3, r2, lsr #8
900286a8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900286ac:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900286b0:	430b      	orrs	r3, r1
900286b2:	4313      	orrs	r3, r2
900286b4:	f8ae 3000 	strh.w	r3, [lr]
900286b8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900286ba:	f10e 0e02 	add.w	lr, lr, #2
900286be:	f108 38ff 	add.w	r8, r8, #4294967295
900286c2:	441c      	add	r4, r3
900286c4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900286c6:	441e      	add	r6, r3
900286c8:	e6cc      	b.n	90028464 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
900286ca:	f1bc 0f00 	cmp.w	ip, #0
900286ce:	d0c5      	beq.n	9002865c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
900286d0:	9908      	ldr	r1, [sp, #32]
900286d2:	440b      	add	r3, r1
900286d4:	0859      	lsrs	r1, r3, #1
900286d6:	07db      	lsls	r3, r3, #31
900286d8:	5c79      	ldrb	r1, [r7, r1]
900286da:	bf54      	ite	pl
900286dc:	f001 010f 	andpl.w	r1, r1, #15
900286e0:	1109      	asrmi	r1, r1, #4
900286e2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
900286e6:	b2c9      	uxtb	r1, r1
900286e8:	910b      	str	r1, [sp, #44]	@ 0x2c
900286ea:	e7b7      	b.n	9002865c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
900286ec:	24021874 	.word	0x24021874
900286f0:	fffff800 	.word	0xfffff800
900286f4:	2b00      	cmp	r3, #0
900286f6:	d0df      	beq.n	900286b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
900286f8:	4a21      	ldr	r2, [pc, #132]	@ (90028780 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
900286fa:	fa1f fa83 	uxth.w	sl, r3
900286fe:	f8be c000 	ldrh.w	ip, [lr]
90028702:	43db      	mvns	r3, r3
90028704:	6810      	ldr	r0, [r2, #0]
90028706:	ea4f 212c 	mov.w	r1, ip, asr #8
9002870a:	f3c0 4207 	ubfx	r2, r0, #16, #8
9002870e:	b2db      	uxtb	r3, r3
90028710:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90028714:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90028718:	fb12 f20a 	smulbb	r2, r2, sl
9002871c:	b2c0      	uxtb	r0, r0
9002871e:	fb1b fb0a 	smulbb	fp, fp, sl
90028722:	fb01 2103 	mla	r1, r1, r3, r2
90028726:	ea4f 02ec 	mov.w	r2, ip, asr #3
9002872a:	fb10 f00a 	smulbb	r0, r0, sl
9002872e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90028732:	b289      	uxth	r1, r1
90028734:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90028738:	fa5f fc8c 	uxtb.w	ip, ip
9002873c:	fb02 b203 	mla	r2, r2, r3, fp
90028740:	fb0c 0003 	mla	r0, ip, r3, r0
90028744:	1c4b      	adds	r3, r1, #1
90028746:	b292      	uxth	r2, r2
90028748:	b280      	uxth	r0, r0
9002874a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9002874e:	f100 0b01 	add.w	fp, r0, #1
90028752:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90028756:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
9002875a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
9002875e:	ea4b 0101 	orr.w	r1, fp, r1
90028762:	f102 0b01 	add.w	fp, r2, #1
90028766:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
9002876a:	0952      	lsrs	r2, r2, #5
9002876c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90028770:	4311      	orrs	r1, r2
90028772:	f8ae 1000 	strh.w	r1, [lr]
90028776:	e79f      	b.n	900286b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90028778:	b013      	add	sp, #76	@ 0x4c
9002877a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002877e:	bf00      	nop
90028780:	24021874 	.word	0x24021874

90028784 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
90028784:	b570      	push	{r4, r5, r6, lr}
90028786:	1208      	asrs	r0, r1, #8
90028788:	f8bd 5010 	ldrh.w	r5, [sp, #16]
9002878c:	b29e      	uxth	r6, r3
9002878e:	1213      	asrs	r3, r2, #8
90028790:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90028794:	10cc      	asrs	r4, r1, #3
90028796:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
9002879a:	00c9      	lsls	r1, r1, #3
9002879c:	fb10 f006 	smulbb	r0, r0, r6
900287a0:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
900287a4:	fb13 f305 	smulbb	r3, r3, r5
900287a8:	fb14 f406 	smulbb	r4, r4, r6
900287ac:	4418      	add	r0, r3
900287ae:	10d3      	asrs	r3, r2, #3
900287b0:	00d2      	lsls	r2, r2, #3
900287b2:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
900287b6:	b280      	uxth	r0, r0
900287b8:	b2d2      	uxtb	r2, r2
900287ba:	fb13 f305 	smulbb	r3, r3, r5
900287be:	fb12 f205 	smulbb	r2, r2, r5
900287c2:	441c      	add	r4, r3
900287c4:	b2cb      	uxtb	r3, r1
900287c6:	fb13 f306 	smulbb	r3, r3, r6
900287ca:	b2a4      	uxth	r4, r4
900287cc:	4413      	add	r3, r2
900287ce:	1c42      	adds	r2, r0, #1
900287d0:	b29b      	uxth	r3, r3
900287d2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900287d6:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
900287da:	1c58      	adds	r0, r3, #1
900287dc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
900287e0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
900287e4:	4310      	orrs	r0, r2
900287e6:	1c62      	adds	r2, r4, #1
900287e8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
900287ec:	0964      	lsrs	r4, r4, #5
900287ee:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
900287f2:	4320      	orrs	r0, r4
900287f4:	bd70      	pop	{r4, r5, r6, pc}
	...

900287f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
900287f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900287fc:	b08f      	sub	sp, #60	@ 0x3c
900287fe:	461c      	mov	r4, r3
90028800:	460d      	mov	r5, r1
90028802:	4616      	mov	r6, r2
90028804:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
90028808:	9004      	str	r0, [sp, #16]
9002880a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002880c:	2f00      	cmp	r7, #0
9002880e:	f000 80f6 	beq.w	900289fe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
90028812:	6820      	ldr	r0, [r4, #0]
90028814:	aa0a      	add	r2, sp, #40	@ 0x28
90028816:	6861      	ldr	r1, [r4, #4]
90028818:	f04f 0802 	mov.w	r8, #2
9002881c:	3604      	adds	r6, #4
9002881e:	c203      	stmia	r2!, {r0, r1}
90028820:	6818      	ldr	r0, [r3, #0]
90028822:	aa0c      	add	r2, sp, #48	@ 0x30
90028824:	6859      	ldr	r1, [r3, #4]
90028826:	c203      	stmia	r2!, {r0, r1}
90028828:	a80a      	add	r0, sp, #40	@ 0x28
9002882a:	f7ee fa39 	bl	90016ca0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002882e:	4621      	mov	r1, r4
90028830:	a80c      	add	r0, sp, #48	@ 0x30
90028832:	f7ee fa79 	bl	90016d28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90028836:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9002883a:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
9002883e:	f002 0301 	and.w	r3, r2, #1
90028842:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
90028846:	9306      	str	r3, [sp, #24]
90028848:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9002884c:	f003 0101 	and.w	r1, r3, #1
90028850:	9105      	str	r1, [sp, #20]
90028852:	9805      	ldr	r0, [sp, #20]
90028854:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
90028858:	4403      	add	r3, r0
9002885a:	fb01 2303 	mla	r3, r1, r3, r2
9002885e:	fb93 f3f8 	sdiv	r3, r3, r8
90028862:	441d      	add	r5, r3
90028864:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90028868:	441a      	add	r2, r3
9002886a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9002886e:	4419      	add	r1, r3
90028870:	4b64      	ldr	r3, [pc, #400]	@ (90028a04 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
90028872:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
90028876:	6818      	ldr	r0, [r3, #0]
90028878:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
9002887c:	6803      	ldr	r3, [r0, #0]
9002887e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90028880:	4798      	blx	r3
90028882:	4a61      	ldr	r2, [pc, #388]	@ (90028a08 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
90028884:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
90028888:	2fff      	cmp	r7, #255	@ 0xff
9002888a:	8813      	ldrh	r3, [r2, #0]
9002888c:	4611      	mov	r1, r2
9002888e:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
90028892:	fb03 fb0b 	mul.w	fp, r3, fp
90028896:	fb03 a404 	mla	r4, r3, r4, sl
9002889a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9002889e:	d06b      	beq.n	90028978 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
900288a0:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
900288a4:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
900288a8:	9303      	str	r3, [sp, #12]
900288aa:	eb04 034b 	add.w	r3, r4, fp, lsl #1
900288ae:	e9cd 3207 	strd	r3, r2, [sp, #28]
900288b2:	9b07      	ldr	r3, [sp, #28]
900288b4:	42a3      	cmp	r3, r4
900288b6:	f240 809d 	bls.w	900289f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
900288ba:	9b06      	ldr	r3, [sp, #24]
900288bc:	2b00      	cmp	r3, #0
900288be:	d039      	beq.n	90028934 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
900288c0:	782b      	ldrb	r3, [r5, #0]
900288c2:	f105 0801 	add.w	r8, r5, #1
900288c6:	f109 3bff 	add.w	fp, r9, #4294967295
900288ca:	8822      	ldrh	r2, [r4, #0]
900288cc:	f003 030f 	and.w	r3, r3, #15
900288d0:	9804      	ldr	r0, [sp, #16]
900288d2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
900288d6:	9b03      	ldr	r3, [sp, #12]
900288d8:	9300      	str	r3, [sp, #0]
900288da:	463b      	mov	r3, r7
900288dc:	f7ff ff52 	bl	90028784 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
900288e0:	f824 0b02 	strh.w	r0, [r4], #2
900288e4:	f1bb 0f01 	cmp.w	fp, #1
900288e8:	46a2      	mov	sl, r4
900288ea:	f104 0404 	add.w	r4, r4, #4
900288ee:	dd24      	ble.n	9002893a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
900288f0:	f898 3000 	ldrb.w	r3, [r8]
900288f4:	f1ab 0b02 	sub.w	fp, fp, #2
900288f8:	f834 2c04 	ldrh.w	r2, [r4, #-4]
900288fc:	091b      	lsrs	r3, r3, #4
900288fe:	9804      	ldr	r0, [sp, #16]
90028900:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90028904:	9b03      	ldr	r3, [sp, #12]
90028906:	9300      	str	r3, [sp, #0]
90028908:	463b      	mov	r3, r7
9002890a:	f7ff ff3b 	bl	90028784 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
9002890e:	f824 0c04 	strh.w	r0, [r4, #-4]
90028912:	f818 3b01 	ldrb.w	r3, [r8], #1
90028916:	f834 2c02 	ldrh.w	r2, [r4, #-2]
9002891a:	f003 030f 	and.w	r3, r3, #15
9002891e:	9804      	ldr	r0, [sp, #16]
90028920:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90028924:	9b03      	ldr	r3, [sp, #12]
90028926:	9300      	str	r3, [sp, #0]
90028928:	463b      	mov	r3, r7
9002892a:	f7ff ff2b 	bl	90028784 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
9002892e:	f824 0c02 	strh.w	r0, [r4, #-2]
90028932:	e7d7      	b.n	900288e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
90028934:	46a8      	mov	r8, r5
90028936:	46cb      	mov	fp, r9
90028938:	e7d4      	b.n	900288e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
9002893a:	d10e      	bne.n	9002895a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
9002893c:	f898 3000 	ldrb.w	r3, [r8]
90028940:	f8ba 2000 	ldrh.w	r2, [sl]
90028944:	091b      	lsrs	r3, r3, #4
90028946:	9804      	ldr	r0, [sp, #16]
90028948:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
9002894c:	9b03      	ldr	r3, [sp, #12]
9002894e:	9300      	str	r3, [sp, #0]
90028950:	463b      	mov	r3, r7
90028952:	f7ff ff17 	bl	90028784 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90028956:	f82a 0b02 	strh.w	r0, [sl], #2
9002895a:	9b08      	ldr	r3, [sp, #32]
9002895c:	9a05      	ldr	r2, [sp, #20]
9002895e:	881c      	ldrh	r4, [r3, #0]
90028960:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90028964:	eba4 0409 	sub.w	r4, r4, r9
90028968:	4413      	add	r3, r2
9002896a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002896c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
90028970:	fb93 f3f2 	sdiv	r3, r3, r2
90028974:	441d      	add	r5, r3
90028976:	e79c      	b.n	900288b2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
90028978:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
9002897c:	45a3      	cmp	fp, r4
9002897e:	d939      	bls.n	900289f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
90028980:	9b06      	ldr	r3, [sp, #24]
90028982:	b1fb      	cbz	r3, 900289c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
90028984:	782b      	ldrb	r3, [r5, #0]
90028986:	1c6a      	adds	r2, r5, #1
90028988:	f109 30ff 	add.w	r0, r9, #4294967295
9002898c:	3402      	adds	r4, #2
9002898e:	f003 030f 	and.w	r3, r3, #15
90028992:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90028996:	f824 3c02 	strh.w	r3, [r4, #-2]
9002899a:	2801      	cmp	r0, #1
9002899c:	4623      	mov	r3, r4
9002899e:	f104 0404 	add.w	r4, r4, #4
900289a2:	dd12      	ble.n	900289ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
900289a4:	7813      	ldrb	r3, [r2, #0]
900289a6:	3802      	subs	r0, #2
900289a8:	091b      	lsrs	r3, r3, #4
900289aa:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900289ae:	f824 3c04 	strh.w	r3, [r4, #-4]
900289b2:	f812 3b01 	ldrb.w	r3, [r2], #1
900289b6:	f003 030f 	and.w	r3, r3, #15
900289ba:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900289be:	f824 3c02 	strh.w	r3, [r4, #-2]
900289c2:	e7ea      	b.n	9002899a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
900289c4:	462a      	mov	r2, r5
900289c6:	4648      	mov	r0, r9
900289c8:	e7e7      	b.n	9002899a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
900289ca:	d106      	bne.n	900289da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
900289cc:	7812      	ldrb	r2, [r2, #0]
900289ce:	3302      	adds	r3, #2
900289d0:	0912      	lsrs	r2, r2, #4
900289d2:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
900289d6:	f823 2c02 	strh.w	r2, [r3, #-2]
900289da:	880c      	ldrh	r4, [r1, #0]
900289dc:	9a05      	ldr	r2, [sp, #20]
900289de:	eba4 0409 	sub.w	r4, r4, r9
900289e2:	eb03 0444 	add.w	r4, r3, r4, lsl #1
900289e6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
900289ea:	4413      	add	r3, r2
900289ec:	fb93 f3f8 	sdiv	r3, r3, r8
900289f0:	441d      	add	r5, r3
900289f2:	e7c3      	b.n	9002897c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
900289f4:	4b03      	ldr	r3, [pc, #12]	@ (90028a04 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
900289f6:	6818      	ldr	r0, [r3, #0]
900289f8:	6803      	ldr	r3, [r0, #0]
900289fa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900289fc:	4798      	blx	r3
900289fe:	b00f      	add	sp, #60	@ 0x3c
90028a00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028a04:	24021864 	.word	0x24021864
90028a08:	2402185e 	.word	0x2402185e

90028a0c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
90028a0c:	b5f0      	push	{r4, r5, r6, r7, lr}
90028a0e:	f89d 5014 	ldrb.w	r5, [sp, #20]
90028a12:	0a0f      	lsrs	r7, r1, #8
90028a14:	2dff      	cmp	r5, #255	@ 0xff
90028a16:	d10c      	bne.n	90028a32 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90028a18:	2bff      	cmp	r3, #255	@ 0xff
90028a1a:	d10a      	bne.n	90028a32 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90028a1c:	0948      	lsrs	r0, r1, #5
90028a1e:	4b25      	ldr	r3, [pc, #148]	@ (90028ab4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
90028a20:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90028a24:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90028a28:	403b      	ands	r3, r7
90028a2a:	4318      	orrs	r0, r3
90028a2c:	4308      	orrs	r0, r1
90028a2e:	b280      	uxth	r0, r0
90028a30:	bdf0      	pop	{r4, r5, r6, r7, pc}
90028a32:	fb15 f503 	smulbb	r5, r5, r3
90028a36:	1214      	asrs	r4, r2, #8
90028a38:	10d6      	asrs	r6, r2, #3
90028a3a:	b2ab      	uxth	r3, r5
90028a3c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90028a40:	00d0      	lsls	r0, r2, #3
90028a42:	f3c1 4207 	ubfx	r2, r1, #16, #8
90028a46:	1c5d      	adds	r5, r3, #1
90028a48:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90028a4c:	b2c0      	uxtb	r0, r0
90028a4e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90028a52:	eb05 2513 	add.w	r5, r5, r3, lsr #8
90028a56:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
90028a5a:	f3c5 2507 	ubfx	r5, r5, #8, #8
90028a5e:	fa1f fc85 	uxth.w	ip, r5
90028a62:	43ed      	mvns	r5, r5
90028a64:	fb12 f20c 	smulbb	r2, r2, ip
90028a68:	b2eb      	uxtb	r3, r5
90028a6a:	b2fd      	uxtb	r5, r7
90028a6c:	fb04 2403 	mla	r4, r4, r3, r2
90028a70:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
90028a74:	fb15 f50c 	smulbb	r5, r5, ip
90028a78:	b2c8      	uxtb	r0, r1
90028a7a:	b2a4      	uxth	r4, r4
90028a7c:	fb10 f00c 	smulbb	r0, r0, ip
90028a80:	fb06 5503 	mla	r5, r6, r3, r5
90028a84:	fb02 0003 	mla	r0, r2, r3, r0
90028a88:	b2ad      	uxth	r5, r5
90028a8a:	b283      	uxth	r3, r0
90028a8c:	1c60      	adds	r0, r4, #1
90028a8e:	eb00 2414 	add.w	r4, r0, r4, lsr #8
90028a92:	1c58      	adds	r0, r3, #1
90028a94:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90028a98:	1c6b      	adds	r3, r5, #1
90028a9a:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90028a9e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90028aa2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90028aa6:	096d      	lsrs	r5, r5, #5
90028aa8:	4320      	orrs	r0, r4
90028aaa:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90028aae:	4328      	orrs	r0, r5
90028ab0:	e7be      	b.n	90028a30 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
90028ab2:	bf00      	nop
90028ab4:	00fff800 	.word	0x00fff800

90028ab8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
90028ab8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028abc:	461c      	mov	r4, r3
90028abe:	b08d      	sub	sp, #52	@ 0x34
90028ac0:	460d      	mov	r5, r1
90028ac2:	4616      	mov	r6, r2
90028ac4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90028ac6:	4680      	mov	r8, r0
90028ac8:	6861      	ldr	r1, [r4, #4]
90028aca:	aa08      	add	r2, sp, #32
90028acc:	6820      	ldr	r0, [r4, #0]
90028ace:	f04f 0a02 	mov.w	sl, #2
90028ad2:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
90028ad6:	3604      	adds	r6, #4
90028ad8:	c203      	stmia	r2!, {r0, r1}
90028ada:	6818      	ldr	r0, [r3, #0]
90028adc:	aa0a      	add	r2, sp, #40	@ 0x28
90028ade:	6859      	ldr	r1, [r3, #4]
90028ae0:	c203      	stmia	r2!, {r0, r1}
90028ae2:	a808      	add	r0, sp, #32
90028ae4:	f7ee f8dc 	bl	90016ca0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90028ae8:	4621      	mov	r1, r4
90028aea:	a80a      	add	r0, sp, #40	@ 0x28
90028aec:	f7ee f91c 	bl	90016d28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90028af0:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
90028af4:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
90028af8:	f002 0301 	and.w	r3, r2, #1
90028afc:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
90028b00:	9303      	str	r3, [sp, #12]
90028b02:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
90028b06:	f003 0101 	and.w	r1, r3, #1
90028b0a:	9102      	str	r1, [sp, #8]
90028b0c:	9802      	ldr	r0, [sp, #8]
90028b0e:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
90028b12:	4403      	add	r3, r0
90028b14:	fb01 2303 	mla	r3, r1, r3, r2
90028b18:	fb93 f3fa 	sdiv	r3, r3, sl
90028b1c:	441d      	add	r5, r3
90028b1e:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90028b22:	441a      	add	r2, r3
90028b24:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
90028b28:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90028b2c:	4419      	add	r1, r3
90028b2e:	4a3e      	ldr	r2, [pc, #248]	@ (90028c28 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
90028b30:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
90028b34:	6810      	ldr	r0, [r2, #0]
90028b36:	9205      	str	r2, [sp, #20]
90028b38:	6803      	ldr	r3, [r0, #0]
90028b3a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90028b3c:	4798      	blx	r3
90028b3e:	4b3b      	ldr	r3, [pc, #236]	@ (90028c2c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
90028b40:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
90028b44:	8819      	ldrh	r1, [r3, #0]
90028b46:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
90028b4a:	434f      	muls	r7, r1
90028b4c:	fb01 c404 	mla	r4, r1, r4, ip
90028b50:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90028b54:	eb04 0247 	add.w	r2, r4, r7, lsl #1
90028b58:	e9cd 3a06 	strd	r3, sl, [sp, #24]
90028b5c:	9204      	str	r2, [sp, #16]
90028b5e:	9b04      	ldr	r3, [sp, #16]
90028b60:	429c      	cmp	r4, r3
90028b62:	d258      	bcs.n	90028c16 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
90028b64:	9b03      	ldr	r3, [sp, #12]
90028b66:	2b00      	cmp	r3, #0
90028b68:	d034      	beq.n	90028bd4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
90028b6a:	782b      	ldrb	r3, [r5, #0]
90028b6c:	1c6f      	adds	r7, r5, #1
90028b6e:	f003 030f 	and.w	r3, r3, #15
90028b72:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90028b76:	0e0b      	lsrs	r3, r1, #24
90028b78:	d006      	beq.n	90028b88 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
90028b7a:	8822      	ldrh	r2, [r4, #0]
90028b7c:	4640      	mov	r0, r8
90028b7e:	9300      	str	r3, [sp, #0]
90028b80:	464b      	mov	r3, r9
90028b82:	f7ff ff43 	bl	90028a0c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90028b86:	8020      	strh	r0, [r4, #0]
90028b88:	3402      	adds	r4, #2
90028b8a:	f10b 3aff 	add.w	sl, fp, #4294967295
90028b8e:	f1ba 0f01 	cmp.w	sl, #1
90028b92:	dd22      	ble.n	90028bda <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
90028b94:	783b      	ldrb	r3, [r7, #0]
90028b96:	091b      	lsrs	r3, r3, #4
90028b98:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90028b9c:	0e0b      	lsrs	r3, r1, #24
90028b9e:	d006      	beq.n	90028bae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
90028ba0:	8822      	ldrh	r2, [r4, #0]
90028ba2:	4640      	mov	r0, r8
90028ba4:	9300      	str	r3, [sp, #0]
90028ba6:	464b      	mov	r3, r9
90028ba8:	f7ff ff30 	bl	90028a0c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90028bac:	8020      	strh	r0, [r4, #0]
90028bae:	f817 3b01 	ldrb.w	r3, [r7], #1
90028bb2:	f003 030f 	and.w	r3, r3, #15
90028bb6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90028bba:	0e0b      	lsrs	r3, r1, #24
90028bbc:	d006      	beq.n	90028bcc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
90028bbe:	8862      	ldrh	r2, [r4, #2]
90028bc0:	4640      	mov	r0, r8
90028bc2:	9300      	str	r3, [sp, #0]
90028bc4:	464b      	mov	r3, r9
90028bc6:	f7ff ff21 	bl	90028a0c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90028bca:	8060      	strh	r0, [r4, #2]
90028bcc:	3404      	adds	r4, #4
90028bce:	f1aa 0a02 	sub.w	sl, sl, #2
90028bd2:	e7dc      	b.n	90028b8e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
90028bd4:	462f      	mov	r7, r5
90028bd6:	46da      	mov	sl, fp
90028bd8:	e7d9      	b.n	90028b8e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
90028bda:	d10d      	bne.n	90028bf8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
90028bdc:	783b      	ldrb	r3, [r7, #0]
90028bde:	091b      	lsrs	r3, r3, #4
90028be0:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90028be4:	0e0b      	lsrs	r3, r1, #24
90028be6:	d006      	beq.n	90028bf6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
90028be8:	8822      	ldrh	r2, [r4, #0]
90028bea:	4640      	mov	r0, r8
90028bec:	9300      	str	r3, [sp, #0]
90028bee:	464b      	mov	r3, r9
90028bf0:	f7ff ff0c 	bl	90028a0c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90028bf4:	8020      	strh	r0, [r4, #0]
90028bf6:	3402      	adds	r4, #2
90028bf8:	9b06      	ldr	r3, [sp, #24]
90028bfa:	9a02      	ldr	r2, [sp, #8]
90028bfc:	881b      	ldrh	r3, [r3, #0]
90028bfe:	eba3 030b 	sub.w	r3, r3, fp
90028c02:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90028c06:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
90028c0a:	4413      	add	r3, r2
90028c0c:	9a07      	ldr	r2, [sp, #28]
90028c0e:	fb93 f3f2 	sdiv	r3, r3, r2
90028c12:	441d      	add	r5, r3
90028c14:	e7a3      	b.n	90028b5e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
90028c16:	9b05      	ldr	r3, [sp, #20]
90028c18:	6818      	ldr	r0, [r3, #0]
90028c1a:	6803      	ldr	r3, [r0, #0]
90028c1c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90028c1e:	4798      	blx	r3
90028c20:	b00d      	add	sp, #52	@ 0x34
90028c22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028c26:	bf00      	nop
90028c28:	24021864 	.word	0x24021864
90028c2c:	2402185e 	.word	0x2402185e

90028c30 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
90028c30:	b570      	push	{r4, r5, r6, lr}
90028c32:	1214      	asrs	r4, r2, #8
90028c34:	788d      	ldrb	r5, [r1, #2]
90028c36:	f89d 6010 	ldrb.w	r6, [sp, #16]
90028c3a:	10d0      	asrs	r0, r2, #3
90028c3c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90028c40:	00d2      	lsls	r2, r2, #3
90028c42:	fb15 f503 	smulbb	r5, r5, r3
90028c46:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90028c4a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90028c4e:	b2d2      	uxtb	r2, r2
90028c50:	fb04 5506 	mla	r5, r4, r6, r5
90028c54:	784c      	ldrb	r4, [r1, #1]
90028c56:	7809      	ldrb	r1, [r1, #0]
90028c58:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
90028c5c:	fb14 f403 	smulbb	r4, r4, r3
90028c60:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90028c64:	fb11 f303 	smulbb	r3, r1, r3
90028c68:	b2ad      	uxth	r5, r5
90028c6a:	fb00 4406 	mla	r4, r0, r6, r4
90028c6e:	fb02 3306 	mla	r3, r2, r6, r3
90028c72:	1c68      	adds	r0, r5, #1
90028c74:	b2a4      	uxth	r4, r4
90028c76:	b29b      	uxth	r3, r3
90028c78:	eb00 2515 	add.w	r5, r0, r5, lsr #8
90028c7c:	1c62      	adds	r2, r4, #1
90028c7e:	1c58      	adds	r0, r3, #1
90028c80:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90028c84:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90028c88:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90028c8c:	0964      	lsrs	r4, r4, #5
90028c8e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90028c92:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90028c96:	4328      	orrs	r0, r5
90028c98:	4320      	orrs	r0, r4
90028c9a:	bd70      	pop	{r4, r5, r6, pc}

90028c9c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
90028c9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028ca0:	b08f      	sub	sp, #60	@ 0x3c
90028ca2:	461c      	mov	r4, r3
90028ca4:	4682      	mov	sl, r0
90028ca6:	460e      	mov	r6, r1
90028ca8:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
90028cac:	4615      	mov	r5, r2
90028cae:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90028cb0:	2f00      	cmp	r7, #0
90028cb2:	f000 8141 	beq.w	90028f38 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
90028cb6:	6820      	ldr	r0, [r4, #0]
90028cb8:	aa0a      	add	r2, sp, #40	@ 0x28
90028cba:	6861      	ldr	r1, [r4, #4]
90028cbc:	f04f 0802 	mov.w	r8, #2
90028cc0:	3504      	adds	r5, #4
90028cc2:	c203      	stmia	r2!, {r0, r1}
90028cc4:	6818      	ldr	r0, [r3, #0]
90028cc6:	aa0c      	add	r2, sp, #48	@ 0x30
90028cc8:	6859      	ldr	r1, [r3, #4]
90028cca:	c203      	stmia	r2!, {r0, r1}
90028ccc:	a80a      	add	r0, sp, #40	@ 0x28
90028cce:	f7ed ffe7 	bl	90016ca0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90028cd2:	4621      	mov	r1, r4
90028cd4:	a80c      	add	r0, sp, #48	@ 0x30
90028cd6:	f7ee f827 	bl	90016d28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90028cda:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
90028cde:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
90028ce2:	f002 0301 	and.w	r3, r2, #1
90028ce6:	9306      	str	r3, [sp, #24]
90028ce8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90028cec:	f003 0101 	and.w	r1, r3, #1
90028cf0:	9105      	str	r1, [sp, #20]
90028cf2:	9805      	ldr	r0, [sp, #20]
90028cf4:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
90028cf8:	4403      	add	r3, r0
90028cfa:	fb01 2303 	mla	r3, r1, r3, r2
90028cfe:	fb93 f3f8 	sdiv	r3, r3, r8
90028d02:	441e      	add	r6, r3
90028d04:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90028d08:	441a      	add	r2, r3
90028d0a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
90028d0e:	4419      	add	r1, r3
90028d10:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
90028d14:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
90028d18:	9303      	str	r3, [sp, #12]
90028d1a:	4b89      	ldr	r3, [pc, #548]	@ (90028f40 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90028d1c:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
90028d20:	6818      	ldr	r0, [r3, #0]
90028d22:	6803      	ldr	r3, [r0, #0]
90028d24:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90028d26:	4798      	blx	r3
90028d28:	4a86      	ldr	r2, [pc, #536]	@ (90028f44 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
90028d2a:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
90028d2e:	2fff      	cmp	r7, #255	@ 0xff
90028d30:	8813      	ldrh	r3, [r2, #0]
90028d32:	4694      	mov	ip, r2
90028d34:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
90028d38:	fb03 9404 	mla	r4, r3, r4, r9
90028d3c:	fb03 f30b 	mul.w	r3, r3, fp
90028d40:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90028d44:	d071      	beq.n	90028e2a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
90028d46:	43f9      	mvns	r1, r7
90028d48:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90028d4c:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
90028d50:	b2c9      	uxtb	r1, r1
90028d52:	e9cd 3207 	strd	r3, r2, [sp, #28]
90028d56:	9104      	str	r1, [sp, #16]
90028d58:	9b07      	ldr	r3, [sp, #28]
90028d5a:	42a3      	cmp	r3, r4
90028d5c:	f240 80e7 	bls.w	90028f2e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
90028d60:	9b06      	ldr	r3, [sp, #24]
90028d62:	2b00      	cmp	r3, #0
90028d64:	d03d      	beq.n	90028de2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
90028d66:	7831      	ldrb	r1, [r6, #0]
90028d68:	4650      	mov	r0, sl
90028d6a:	9b04      	ldr	r3, [sp, #16]
90028d6c:	f106 0801 	add.w	r8, r6, #1
90028d70:	f001 010f 	and.w	r1, r1, #15
90028d74:	8822      	ldrh	r2, [r4, #0]
90028d76:	9300      	str	r3, [sp, #0]
90028d78:	463b      	mov	r3, r7
90028d7a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90028d7e:	4429      	add	r1, r5
90028d80:	f7ff ff56 	bl	90028c30 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90028d84:	9b03      	ldr	r3, [sp, #12]
90028d86:	f824 0b02 	strh.w	r0, [r4], #2
90028d8a:	f103 3bff 	add.w	fp, r3, #4294967295
90028d8e:	f1bb 0f01 	cmp.w	fp, #1
90028d92:	46a1      	mov	r9, r4
90028d94:	f104 0404 	add.w	r4, r4, #4
90028d98:	dd27      	ble.n	90028dea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
90028d9a:	f898 1000 	ldrb.w	r1, [r8]
90028d9e:	4650      	mov	r0, sl
90028da0:	9b04      	ldr	r3, [sp, #16]
90028da2:	f1ab 0b02 	sub.w	fp, fp, #2
90028da6:	0909      	lsrs	r1, r1, #4
90028da8:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90028dac:	9300      	str	r3, [sp, #0]
90028dae:	463b      	mov	r3, r7
90028db0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90028db4:	4429      	add	r1, r5
90028db6:	f7ff ff3b 	bl	90028c30 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90028dba:	f824 0c04 	strh.w	r0, [r4, #-4]
90028dbe:	f818 1b01 	ldrb.w	r1, [r8], #1
90028dc2:	4650      	mov	r0, sl
90028dc4:	9b04      	ldr	r3, [sp, #16]
90028dc6:	f001 010f 	and.w	r1, r1, #15
90028dca:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90028dce:	9300      	str	r3, [sp, #0]
90028dd0:	463b      	mov	r3, r7
90028dd2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90028dd6:	4429      	add	r1, r5
90028dd8:	f7ff ff2a 	bl	90028c30 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90028ddc:	f824 0c02 	strh.w	r0, [r4, #-2]
90028de0:	e7d5      	b.n	90028d8e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
90028de2:	46b0      	mov	r8, r6
90028de4:	f8dd b00c 	ldr.w	fp, [sp, #12]
90028de8:	e7d1      	b.n	90028d8e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
90028dea:	d10f      	bne.n	90028e0c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
90028dec:	f898 1000 	ldrb.w	r1, [r8]
90028df0:	4650      	mov	r0, sl
90028df2:	9b04      	ldr	r3, [sp, #16]
90028df4:	0909      	lsrs	r1, r1, #4
90028df6:	f8b9 2000 	ldrh.w	r2, [r9]
90028dfa:	9300      	str	r3, [sp, #0]
90028dfc:	463b      	mov	r3, r7
90028dfe:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90028e02:	4429      	add	r1, r5
90028e04:	f7ff ff14 	bl	90028c30 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90028e08:	f829 0b02 	strh.w	r0, [r9], #2
90028e0c:	9b08      	ldr	r3, [sp, #32]
90028e0e:	9a05      	ldr	r2, [sp, #20]
90028e10:	881c      	ldrh	r4, [r3, #0]
90028e12:	9b03      	ldr	r3, [sp, #12]
90028e14:	1ae4      	subs	r4, r4, r3
90028e16:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90028e1a:	4413      	add	r3, r2
90028e1c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90028e1e:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90028e22:	fb93 f3f2 	sdiv	r3, r3, r2
90028e26:	441e      	add	r6, r3
90028e28:	e796      	b.n	90028d58 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
90028e2a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90028e2e:	4f46      	ldr	r7, [pc, #280]	@ (90028f48 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
90028e30:	42a3      	cmp	r3, r4
90028e32:	d97c      	bls.n	90028f2e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
90028e34:	9a06      	ldr	r2, [sp, #24]
90028e36:	2a00      	cmp	r2, #0
90028e38:	d054      	beq.n	90028ee4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
90028e3a:	7830      	ldrb	r0, [r6, #0]
90028e3c:	1c71      	adds	r1, r6, #1
90028e3e:	f000 000f 	and.w	r0, r0, #15
90028e42:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90028e46:	eb05 0e00 	add.w	lr, r5, r0
90028e4a:	5c28      	ldrb	r0, [r5, r0]
90028e4c:	f89e 2002 	ldrb.w	r2, [lr, #2]
90028e50:	f89e e001 	ldrb.w	lr, [lr, #1]
90028e54:	ea07 2202 	and.w	r2, r7, r2, lsl #8
90028e58:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90028e5c:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
90028e60:	ea42 020e 	orr.w	r2, r2, lr
90028e64:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
90028e68:	f824 2b02 	strh.w	r2, [r4], #2
90028e6c:	9a03      	ldr	r2, [sp, #12]
90028e6e:	f102 3eff 	add.w	lr, r2, #4294967295
90028e72:	f1be 0f01 	cmp.w	lr, #1
90028e76:	4620      	mov	r0, r4
90028e78:	f104 0404 	add.w	r4, r4, #4
90028e7c:	dd36      	ble.n	90028eec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
90028e7e:	7808      	ldrb	r0, [r1, #0]
90028e80:	f1ae 0e02 	sub.w	lr, lr, #2
90028e84:	0900      	lsrs	r0, r0, #4
90028e86:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90028e8a:	eb05 0a00 	add.w	sl, r5, r0
90028e8e:	f89a 2001 	ldrb.w	r2, [sl, #1]
90028e92:	f89a 9002 	ldrb.w	r9, [sl, #2]
90028e96:	00d2      	lsls	r2, r2, #3
90028e98:	ea07 2909 	and.w	r9, r7, r9, lsl #8
90028e9c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90028ea0:	ea49 0202 	orr.w	r2, r9, r2
90028ea4:	f815 9000 	ldrb.w	r9, [r5, r0]
90028ea8:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
90028eac:	f824 2c04 	strh.w	r2, [r4, #-4]
90028eb0:	f811 0b01 	ldrb.w	r0, [r1], #1
90028eb4:	f000 000f 	and.w	r0, r0, #15
90028eb8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90028ebc:	eb05 0a00 	add.w	sl, r5, r0
90028ec0:	f89a 2001 	ldrb.w	r2, [sl, #1]
90028ec4:	f89a 9002 	ldrb.w	r9, [sl, #2]
90028ec8:	00d2      	lsls	r2, r2, #3
90028eca:	ea07 2909 	and.w	r9, r7, r9, lsl #8
90028ece:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90028ed2:	ea49 0202 	orr.w	r2, r9, r2
90028ed6:	f815 9000 	ldrb.w	r9, [r5, r0]
90028eda:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
90028ede:	f824 2c02 	strh.w	r2, [r4, #-2]
90028ee2:	e7c6      	b.n	90028e72 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
90028ee4:	4631      	mov	r1, r6
90028ee6:	f8dd e00c 	ldr.w	lr, [sp, #12]
90028eea:	e7c2      	b.n	90028e72 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
90028eec:	d111      	bne.n	90028f12 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
90028eee:	7809      	ldrb	r1, [r1, #0]
90028ef0:	0909      	lsrs	r1, r1, #4
90028ef2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90028ef6:	186c      	adds	r4, r5, r1
90028ef8:	5c69      	ldrb	r1, [r5, r1]
90028efa:	78a2      	ldrb	r2, [r4, #2]
90028efc:	7864      	ldrb	r4, [r4, #1]
90028efe:	ea07 2202 	and.w	r2, r7, r2, lsl #8
90028f02:	00e4      	lsls	r4, r4, #3
90028f04:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90028f08:	4322      	orrs	r2, r4
90028f0a:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
90028f0e:	f820 2b02 	strh.w	r2, [r0], #2
90028f12:	9a03      	ldr	r2, [sp, #12]
90028f14:	f8bc 4000 	ldrh.w	r4, [ip]
90028f18:	9905      	ldr	r1, [sp, #20]
90028f1a:	1aa4      	subs	r4, r4, r2
90028f1c:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
90028f20:	440a      	add	r2, r1
90028f22:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90028f26:	fb92 f2f8 	sdiv	r2, r2, r8
90028f2a:	4416      	add	r6, r2
90028f2c:	e780      	b.n	90028e30 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
90028f2e:	4b04      	ldr	r3, [pc, #16]	@ (90028f40 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90028f30:	6818      	ldr	r0, [r3, #0]
90028f32:	6803      	ldr	r3, [r0, #0]
90028f34:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90028f36:	4798      	blx	r3
90028f38:	b00f      	add	sp, #60	@ 0x3c
90028f3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028f3e:	bf00      	nop
90028f40:	24021864 	.word	0x24021864
90028f44:	2402185e 	.word	0x2402185e
90028f48:	fffff800 	.word	0xfffff800

90028f4c <CRC_Lock>:
90028f4c:	4a2d      	ldr	r2, [pc, #180]	@ (90029004 <CRC_Lock+0xb8>)
90028f4e:	b530      	push	{r4, r5, lr}
90028f50:	6813      	ldr	r3, [r2, #0]
90028f52:	f24c 2540 	movw	r5, #49728	@ 0xc240
90028f56:	f023 0301 	bic.w	r3, r3, #1
90028f5a:	6013      	str	r3, [r2, #0]
90028f5c:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
90028f60:	4b29      	ldr	r3, [pc, #164]	@ (90029008 <CRC_Lock+0xbc>)
90028f62:	681c      	ldr	r4, [r3, #0]
90028f64:	4014      	ands	r4, r2
90028f66:	42ac      	cmp	r4, r5
90028f68:	d005      	beq.n	90028f76 <CRC_Lock+0x2a>
90028f6a:	681c      	ldr	r4, [r3, #0]
90028f6c:	f24c 2570 	movw	r5, #49776	@ 0xc270
90028f70:	4014      	ands	r4, r2
90028f72:	42ac      	cmp	r4, r5
90028f74:	d125      	bne.n	90028fc2 <CRC_Lock+0x76>
90028f76:	4b25      	ldr	r3, [pc, #148]	@ (9002900c <CRC_Lock+0xc0>)
90028f78:	681b      	ldr	r3, [r3, #0]
90028f7a:	2b00      	cmp	r3, #0
90028f7c:	d139      	bne.n	90028ff2 <CRC_Lock+0xa6>
90028f7e:	4b24      	ldr	r3, [pc, #144]	@ (90029010 <CRC_Lock+0xc4>)
90028f80:	681a      	ldr	r2, [r3, #0]
90028f82:	f3c2 020b 	ubfx	r2, r2, #0, #12
90028f86:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
90028f8a:	d00d      	beq.n	90028fa8 <CRC_Lock+0x5c>
90028f8c:	681a      	ldr	r2, [r3, #0]
90028f8e:	f240 4483 	movw	r4, #1155	@ 0x483
90028f92:	f3c2 020b 	ubfx	r2, r2, #0, #12
90028f96:	42a2      	cmp	r2, r4
90028f98:	d006      	beq.n	90028fa8 <CRC_Lock+0x5c>
90028f9a:	681b      	ldr	r3, [r3, #0]
90028f9c:	f240 4285 	movw	r2, #1157	@ 0x485
90028fa0:	f3c3 030b 	ubfx	r3, r3, #0, #12
90028fa4:	4293      	cmp	r3, r2
90028fa6:	d124      	bne.n	90028ff2 <CRC_Lock+0xa6>
90028fa8:	4b1a      	ldr	r3, [pc, #104]	@ (90029014 <CRC_Lock+0xc8>)
90028faa:	2201      	movs	r2, #1
90028fac:	601a      	str	r2, [r3, #0]
90028fae:	681a      	ldr	r2, [r3, #0]
90028fb0:	2a00      	cmp	r2, #0
90028fb2:	d1fc      	bne.n	90028fae <CRC_Lock+0x62>
90028fb4:	4b18      	ldr	r3, [pc, #96]	@ (90029018 <CRC_Lock+0xcc>)
90028fb6:	6018      	str	r0, [r3, #0]
90028fb8:	6818      	ldr	r0, [r3, #0]
90028fba:	1a43      	subs	r3, r0, r1
90028fbc:	4258      	negs	r0, r3
90028fbe:	4158      	adcs	r0, r3
90028fc0:	e00e      	b.n	90028fe0 <CRC_Lock+0x94>
90028fc2:	681b      	ldr	r3, [r3, #0]
90028fc4:	4013      	ands	r3, r2
90028fc6:	f24d 2220 	movw	r2, #53792	@ 0xd220
90028fca:	4293      	cmp	r3, r2
90028fcc:	d111      	bne.n	90028ff2 <CRC_Lock+0xa6>
90028fce:	4b13      	ldr	r3, [pc, #76]	@ (9002901c <CRC_Lock+0xd0>)
90028fd0:	f240 4286 	movw	r2, #1158	@ 0x486
90028fd4:	681b      	ldr	r3, [r3, #0]
90028fd6:	f3c3 030b 	ubfx	r3, r3, #0, #12
90028fda:	4293      	cmp	r3, r2
90028fdc:	d001      	beq.n	90028fe2 <CRC_Lock+0x96>
90028fde:	2000      	movs	r0, #0
90028fe0:	bd30      	pop	{r4, r5, pc}
90028fe2:	4b0f      	ldr	r3, [pc, #60]	@ (90029020 <CRC_Lock+0xd4>)
90028fe4:	2201      	movs	r2, #1
90028fe6:	601a      	str	r2, [r3, #0]
90028fe8:	681a      	ldr	r2, [r3, #0]
90028fea:	2a00      	cmp	r2, #0
90028fec:	d1fc      	bne.n	90028fe8 <CRC_Lock+0x9c>
90028fee:	4b0d      	ldr	r3, [pc, #52]	@ (90029024 <CRC_Lock+0xd8>)
90028ff0:	e7e1      	b.n	90028fb6 <CRC_Lock+0x6a>
90028ff2:	4b0d      	ldr	r3, [pc, #52]	@ (90029028 <CRC_Lock+0xdc>)
90028ff4:	2201      	movs	r2, #1
90028ff6:	601a      	str	r2, [r3, #0]
90028ff8:	681a      	ldr	r2, [r3, #0]
90028ffa:	2a00      	cmp	r2, #0
90028ffc:	d1fc      	bne.n	90028ff8 <CRC_Lock+0xac>
90028ffe:	4b0b      	ldr	r3, [pc, #44]	@ (9002902c <CRC_Lock+0xe0>)
90029000:	e7d9      	b.n	90028fb6 <CRC_Lock+0x6a>
90029002:	bf00      	nop
90029004:	e0002000 	.word	0xe0002000
90029008:	e000ed00 	.word	0xe000ed00
9002900c:	e0042000 	.word	0xe0042000
90029010:	5c001000 	.word	0x5c001000
90029014:	58024c08 	.word	0x58024c08
90029018:	58024c00 	.word	0x58024c00
9002901c:	46008ff0 	.word	0x46008ff0
90029020:	46024c08 	.word	0x46024c08
90029024:	46024c00 	.word	0x46024c00
90029028:	40023008 	.word	0x40023008
9002902c:	40023000 	.word	0x40023000

90029030 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
90029030:	6101      	str	r1, [r0, #16]
90029032:	4770      	bx	lr

90029034 <_ZN8touchgfx8Gestures4tickEv>:
90029034:	7b83      	ldrb	r3, [r0, #14]
90029036:	b14b      	cbz	r3, 9002904c <_ZN8touchgfx8Gestures4tickEv+0x18>
90029038:	8903      	ldrh	r3, [r0, #8]
9002903a:	3301      	adds	r3, #1
9002903c:	b29b      	uxth	r3, r3
9002903e:	2b07      	cmp	r3, #7
90029040:	8103      	strh	r3, [r0, #8]
90029042:	bf81      	itttt	hi
90029044:	2300      	movhi	r3, #0
90029046:	8143      	strhhi	r3, [r0, #10]
90029048:	8183      	strhhi	r3, [r0, #12]
9002904a:	7383      	strbhi	r3, [r0, #14]
9002904c:	4770      	bx	lr
	...

90029050 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
90029050:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90029054:	4698      	mov	r8, r3
90029056:	8883      	ldrh	r3, [r0, #4]
90029058:	4604      	mov	r4, r0
9002905a:	4617      	mov	r7, r2
9002905c:	f8ad 3006 	strh.w	r3, [sp, #6]
90029060:	eba8 0303 	sub.w	r3, r8, r3
90029064:	4a19      	ldr	r2, [pc, #100]	@ (900290cc <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
90029066:	460e      	mov	r6, r1
90029068:	b21b      	sxth	r3, r3
9002906a:	88c1      	ldrh	r1, [r0, #6]
9002906c:	9200      	str	r2, [sp, #0]
9002906e:	2000      	movs	r0, #0
90029070:	2b00      	cmp	r3, #0
90029072:	8aa2      	ldrh	r2, [r4, #20]
90029074:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
90029078:	bfb8      	it	lt
9002907a:	425b      	neglt	r3, r3
9002907c:	f88d 0004 	strb.w	r0, [sp, #4]
90029080:	f8ad 1008 	strh.w	r1, [sp, #8]
90029084:	b21b      	sxth	r3, r3
90029086:	f8ad 800a 	strh.w	r8, [sp, #10]
9002908a:	f8ad 500c 	strh.w	r5, [sp, #12]
9002908e:	4293      	cmp	r3, r2
90029090:	dc07      	bgt.n	900290a2 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
90029092:	1a69      	subs	r1, r5, r1
90029094:	b209      	sxth	r1, r1
90029096:	2900      	cmp	r1, #0
90029098:	bfb8      	it	lt
9002909a:	4249      	neglt	r1, r1
9002909c:	b209      	sxth	r1, r1
9002909e:	428a      	cmp	r2, r1
900290a0:	da10      	bge.n	900290c4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
900290a2:	6920      	ldr	r0, [r4, #16]
900290a4:	4669      	mov	r1, sp
900290a6:	eba8 0606 	sub.w	r6, r8, r6
900290aa:	1bef      	subs	r7, r5, r7
900290ac:	6803      	ldr	r3, [r0, #0]
900290ae:	685b      	ldr	r3, [r3, #4]
900290b0:	4798      	blx	r3
900290b2:	2300      	movs	r3, #0
900290b4:	2001      	movs	r0, #1
900290b6:	8166      	strh	r6, [r4, #10]
900290b8:	8123      	strh	r3, [r4, #8]
900290ba:	81a7      	strh	r7, [r4, #12]
900290bc:	f8a4 8004 	strh.w	r8, [r4, #4]
900290c0:	80e5      	strh	r5, [r4, #6]
900290c2:	73a0      	strb	r0, [r4, #14]
900290c4:	b004      	add	sp, #16
900290c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900290ca:	bf00      	nop
900290cc:	9002e360 	.word	0x9002e360

900290d0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
900290d0:	b5f0      	push	{r4, r5, r6, r7, lr}
900290d2:	461e      	mov	r6, r3
900290d4:	1e4b      	subs	r3, r1, #1
900290d6:	b085      	sub	sp, #20
900290d8:	4604      	mov	r4, r0
900290da:	2b01      	cmp	r3, #1
900290dc:	460d      	mov	r5, r1
900290de:	4617      	mov	r7, r2
900290e0:	d84b      	bhi.n	9002917a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
900290e2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900290e6:	1cd3      	adds	r3, r2, #3
900290e8:	b29b      	uxth	r3, r3
900290ea:	2b06      	cmp	r3, #6
900290ec:	d916      	bls.n	9002911c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
900290ee:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 90029190 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
900290f2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
900290f6:	f8cd c004 	str.w	ip, [sp, #4]
900290fa:	f04f 0c00 	mov.w	ip, #0
900290fe:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90029102:	6900      	ldr	r0, [r0, #16]
90029104:	f8ad 100c 	strh.w	r1, [sp, #12]
90029108:	a901      	add	r1, sp, #4
9002910a:	f88d c008 	strb.w	ip, [sp, #8]
9002910e:	f8ad 200a 	strh.w	r2, [sp, #10]
90029112:	f8ad 300e 	strh.w	r3, [sp, #14]
90029116:	6803      	ldr	r3, [r0, #0]
90029118:	689b      	ldr	r3, [r3, #8]
9002911a:	4798      	blx	r3
9002911c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90029120:	1cd3      	adds	r3, r2, #3
90029122:	b29b      	uxth	r3, r3
90029124:	2b06      	cmp	r3, #6
90029126:	d916      	bls.n	90029156 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90029128:	f8df c064 	ldr.w	ip, [pc, #100]	@ 90029190 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
9002912c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90029130:	f8cd c004 	str.w	ip, [sp, #4]
90029134:	f04f 0c01 	mov.w	ip, #1
90029138:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9002913c:	6920      	ldr	r0, [r4, #16]
9002913e:	f8ad 100c 	strh.w	r1, [sp, #12]
90029142:	a901      	add	r1, sp, #4
90029144:	f88d c008 	strb.w	ip, [sp, #8]
90029148:	f8ad 200a 	strh.w	r2, [sp, #10]
9002914c:	f8ad 300e 	strh.w	r3, [sp, #14]
90029150:	6803      	ldr	r3, [r0, #0]
90029152:	689b      	ldr	r3, [r3, #8]
90029154:	4798      	blx	r3
90029156:	4b0d      	ldr	r3, [pc, #52]	@ (9002918c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
90029158:	a901      	add	r1, sp, #4
9002915a:	6920      	ldr	r0, [r4, #16]
9002915c:	9301      	str	r3, [sp, #4]
9002915e:	2300      	movs	r3, #0
90029160:	f88d 5008 	strb.w	r5, [sp, #8]
90029164:	f8ad 700a 	strh.w	r7, [sp, #10]
90029168:	f8ad 600c 	strh.w	r6, [sp, #12]
9002916c:	f8ad 300e 	strh.w	r3, [sp, #14]
90029170:	6803      	ldr	r3, [r0, #0]
90029172:	681b      	ldr	r3, [r3, #0]
90029174:	4798      	blx	r3
90029176:	b005      	add	sp, #20
90029178:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002917a:	2900      	cmp	r1, #0
9002917c:	d1eb      	bne.n	90029156 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9002917e:	80a2      	strh	r2, [r4, #4]
90029180:	80c6      	strh	r6, [r0, #6]
90029182:	60a1      	str	r1, [r4, #8]
90029184:	81a1      	strh	r1, [r4, #12]
90029186:	73a1      	strb	r1, [r4, #14]
90029188:	e7e5      	b.n	90029156 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9002918a:	bf00      	nop
9002918c:	9002e34c 	.word	0x9002e34c
90029190:	9002e374 	.word	0x9002e374

90029194 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
90029194:	10c9      	asrs	r1, r1, #3
90029196:	2900      	cmp	r1, #0
90029198:	bfb8      	it	lt
9002919a:	4249      	neglt	r1, r1
9002919c:	2801      	cmp	r0, #1
9002919e:	d108      	bne.n	900291b2 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
900291a0:	f3c1 0008 	ubfx	r0, r1, #0, #9
900291a4:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
900291a8:	4601      	mov	r1, r0
900291aa:	dd02      	ble.n	900291b2 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
900291ac:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
900291b0:	4770      	bx	lr
900291b2:	29ff      	cmp	r1, #255	@ 0xff
900291b4:	bfa8      	it	ge
900291b6:	21ff      	movge	r1, #255	@ 0xff
900291b8:	4608      	mov	r0, r1
900291ba:	4770      	bx	lr

900291bc <_ZN8touchgfx10Rasterizer6lineToEii>:
900291bc:	b410      	push	{r4}
900291be:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
900291c2:	429c      	cmp	r4, r3
900291c4:	d803      	bhi.n	900291ce <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
900291c6:	f85d 4b04 	ldr.w	r4, [sp], #4
900291ca:	f7ec b873 	b.w	900152b4 <_ZN8touchgfx7Outline6lineToEii>
900291ce:	f85d 4b04 	ldr.w	r4, [sp], #4
900291d2:	4770      	bx	lr

900291d4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
900291d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900291d8:	b08b      	sub	sp, #44	@ 0x2c
900291da:	4606      	mov	r6, r0
900291dc:	468a      	mov	sl, r1
900291de:	e9cd 2306 	strd	r2, r3, [sp, #24]
900291e2:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
900291e6:	9308      	str	r3, [sp, #32]
900291e8:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
900291ec:	9309      	str	r3, [sp, #36]	@ 0x24
900291ee:	f7ec f9cc 	bl	9001558a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
900291f2:	68b5      	ldr	r5, [r6, #8]
900291f4:	4604      	mov	r4, r0
900291f6:	2d00      	cmp	r5, #0
900291f8:	d044      	beq.n	90029284 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
900291fa:	6873      	ldr	r3, [r6, #4]
900291fc:	42ab      	cmp	r3, r5
900291fe:	d33d      	bcc.n	9002927c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
90029200:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90029204:	f04f 0800 	mov.w	r8, #0
90029208:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
9002920c:	eb02 0b03 	add.w	fp, r2, r3
90029210:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
90029214:	fb02 1203 	mla	r2, r2, r3, r1
90029218:	9205      	str	r2, [sp, #20]
9002921a:	1e6a      	subs	r2, r5, #1
9002921c:	9204      	str	r2, [sp, #16]
9002921e:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
90029222:	f9b4 7000 	ldrsh.w	r7, [r4]
90029226:	454b      	cmp	r3, r9
90029228:	463a      	mov	r2, r7
9002922a:	d008      	beq.n	9002923e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
9002922c:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
90029230:	eb03 0b09 	add.w	fp, r3, r9
90029234:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
90029238:	fb03 1309 	mla	r3, r3, r9, r1
9002923c:	9305      	str	r3, [sp, #20]
9002923e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90029242:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
90029246:	4498      	add	r8, r3
90029248:	9b04      	ldr	r3, [sp, #16]
9002924a:	3b01      	subs	r3, #1
9002924c:	9304      	str	r3, [sp, #16]
9002924e:	9b04      	ldr	r3, [sp, #16]
90029250:	3301      	adds	r3, #1
90029252:	d015      	beq.n	90029280 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
90029254:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
90029258:	42bb      	cmp	r3, r7
9002925a:	d117      	bne.n	9002928c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
9002925c:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
90029260:	9b04      	ldr	r3, [sp, #16]
90029262:	4548      	cmp	r0, r9
90029264:	f103 33ff 	add.w	r3, r3, #4294967295
90029268:	d17d      	bne.n	90029366 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
9002926a:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
9002926e:	4401      	add	r1, r0
90029270:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90029274:	4480      	add	r8, r0
90029276:	e7e9      	b.n	9002924c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
90029278:	461f      	mov	r7, r3
9002927a:	e042      	b.n	90029302 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
9002927c:	2000      	movs	r0, #0
9002927e:	e002      	b.n	90029286 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
90029280:	2900      	cmp	r1, #0
90029282:	d16d      	bne.n	90029360 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
90029284:	2001      	movs	r0, #1
90029286:	b00b      	add	sp, #44	@ 0x2c
90029288:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002928c:	b379      	cbz	r1, 900292ee <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
9002928e:	2f00      	cmp	r7, #0
90029290:	db29      	blt.n	900292e6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90029292:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
90029296:	42bb      	cmp	r3, r7
90029298:	dd25      	ble.n	900292e6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
9002929a:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
9002929e:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
900292a2:	f7ff ff77 	bl	90029194 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
900292a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900292a8:	fb10 f003 	smulbb	r0, r0, r3
900292ac:	b280      	uxth	r0, r0
900292ae:	1c41      	adds	r1, r0, #1
900292b0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
900292b4:	1209      	asrs	r1, r1, #8
900292b6:	f011 0fff 	tst.w	r1, #255	@ 0xff
900292ba:	d014      	beq.n	900292e6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
900292bc:	b2c9      	uxtb	r1, r1
900292be:	9808      	ldr	r0, [sp, #32]
900292c0:	b2ba      	uxth	r2, r7
900292c2:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
900292c4:	9102      	str	r1, [sp, #8]
900292c6:	2101      	movs	r1, #1
900292c8:	4413      	add	r3, r2
900292ca:	4402      	add	r2, r0
900292cc:	9101      	str	r1, [sp, #4]
900292ce:	fa0f f18b 	sxth.w	r1, fp
900292d2:	f8da 0000 	ldr.w	r0, [sl]
900292d6:	b21b      	sxth	r3, r3
900292d8:	9100      	str	r1, [sp, #0]
900292da:	b212      	sxth	r2, r2
900292dc:	6941      	ldr	r1, [r0, #20]
900292de:	4650      	mov	r0, sl
900292e0:	460d      	mov	r5, r1
900292e2:	9905      	ldr	r1, [sp, #20]
900292e4:	47a8      	blx	r5
900292e6:	9b04      	ldr	r3, [sp, #16]
900292e8:	1c7a      	adds	r2, r7, #1
900292ea:	3301      	adds	r3, #1
900292ec:	d0ca      	beq.n	90029284 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
900292ee:	f9b4 7000 	ldrsh.w	r7, [r4]
900292f2:	1abb      	subs	r3, r7, r2
900292f4:	2b00      	cmp	r3, #0
900292f6:	dd31      	ble.n	9002935c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
900292f8:	2a00      	cmp	r2, #0
900292fa:	dabd      	bge.n	90029278 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
900292fc:	2f00      	cmp	r7, #0
900292fe:	dd2d      	ble.n	9002935c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90029300:	2200      	movs	r2, #0
90029302:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
90029306:	19d1      	adds	r1, r2, r7
90029308:	4299      	cmp	r1, r3
9002930a:	db02      	blt.n	90029312 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
9002930c:	1a9f      	subs	r7, r3, r2
9002930e:	2f00      	cmp	r7, #0
90029310:	dd24      	ble.n	9002935c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90029312:	ea4f 1188 	mov.w	r1, r8, lsl #6
90029316:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
9002931a:	f7ff ff3b 	bl	90029194 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
9002931e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90029320:	fb10 f003 	smulbb	r0, r0, r3
90029324:	b280      	uxth	r0, r0
90029326:	1c41      	adds	r1, r0, #1
90029328:	eb01 2110 	add.w	r1, r1, r0, lsr #8
9002932c:	1209      	asrs	r1, r1, #8
9002932e:	f011 0fff 	tst.w	r1, #255	@ 0xff
90029332:	d013      	beq.n	9002935c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90029334:	b292      	uxth	r2, r2
90029336:	9808      	ldr	r0, [sp, #32]
90029338:	b2c9      	uxtb	r1, r1
9002933a:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
9002933c:	b23f      	sxth	r7, r7
9002933e:	4413      	add	r3, r2
90029340:	9102      	str	r1, [sp, #8]
90029342:	4402      	add	r2, r0
90029344:	fa0f f18b 	sxth.w	r1, fp
90029348:	f8da 0000 	ldr.w	r0, [sl]
9002934c:	b21b      	sxth	r3, r3
9002934e:	9100      	str	r1, [sp, #0]
90029350:	b212      	sxth	r2, r2
90029352:	9701      	str	r7, [sp, #4]
90029354:	9905      	ldr	r1, [sp, #20]
90029356:	6947      	ldr	r7, [r0, #20]
90029358:	4650      	mov	r0, sl
9002935a:	47b8      	blx	r7
9002935c:	464b      	mov	r3, r9
9002935e:	e75e      	b.n	9002921e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
90029360:	2f00      	cmp	r7, #0
90029362:	da96      	bge.n	90029292 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
90029364:	e78e      	b.n	90029284 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90029366:	2900      	cmp	r1, #0
90029368:	d0f8      	beq.n	9002935c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002936a:	e790      	b.n	9002928e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

9002936c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
9002936c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90029370:	461e      	mov	r6, r3
90029372:	4b36      	ldr	r3, [pc, #216]	@ (9002944c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
90029374:	2500      	movs	r5, #0
90029376:	f100 0814 	add.w	r8, r0, #20
9002937a:	4604      	mov	r4, r0
9002937c:	4617      	mov	r7, r2
9002937e:	e9c0 3100 	strd	r3, r1, [r0]
90029382:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
90029386:	8185      	strh	r5, [r0, #12]
90029388:	8103      	strh	r3, [r0, #8]
9002938a:	f89d 3020 	ldrb.w	r3, [sp, #32]
9002938e:	81c5      	strh	r5, [r0, #14]
90029390:	7283      	strb	r3, [r0, #10]
90029392:	8205      	strh	r5, [r0, #16]
90029394:	8245      	strh	r5, [r0, #18]
90029396:	4640      	mov	r0, r8
90029398:	f7eb fad2 	bl	90014940 <_ZN8touchgfx7OutlineC1Ev>
9002939c:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
900293a0:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
900293a4:	466b      	mov	r3, sp
900293a6:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
900293aa:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
900293ae:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
900293b2:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
900293b6:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
900293ba:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
900293be:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
900293c2:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
900293c6:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
900293ca:	6830      	ldr	r0, [r6, #0]
900293cc:	6871      	ldr	r1, [r6, #4]
900293ce:	8872      	ldrh	r2, [r6, #2]
900293d0:	8835      	ldrh	r5, [r6, #0]
900293d2:	c303      	stmia	r3!, {r0, r1}
900293d4:	887b      	ldrh	r3, [r7, #2]
900293d6:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
900293da:	4413      	add	r3, r2
900293dc:	883a      	ldrh	r2, [r7, #0]
900293de:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
900293e2:	442a      	add	r2, r5
900293e4:	81e3      	strh	r3, [r4, #14]
900293e6:	8220      	strh	r0, [r4, #16]
900293e8:	4668      	mov	r0, sp
900293ea:	81a2      	strh	r2, [r4, #12]
900293ec:	8261      	strh	r1, [r4, #18]
900293ee:	4639      	mov	r1, r7
900293f0:	f7ed fc9a 	bl	90016d28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900293f4:	f104 000c 	add.w	r0, r4, #12
900293f8:	f7ed fc52 	bl	90016ca0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900293fc:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90029400:	f8bd 2000 	ldrh.w	r2, [sp]
90029404:	4640      	mov	r0, r8
90029406:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
9002940a:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
9002940e:	f7eb fa7b 	bl	90014908 <_ZN8touchgfx7Outline5resetEv>
90029412:	f9bd 3000 	ldrsh.w	r3, [sp]
90029416:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
9002941a:	4620      	mov	r0, r4
9002941c:	015b      	lsls	r3, r3, #5
9002941e:	64e3      	str	r3, [r4, #76]	@ 0x4c
90029420:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90029424:	015b      	lsls	r3, r3, #5
90029426:	6523      	str	r3, [r4, #80]	@ 0x50
90029428:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9002942c:	015b      	lsls	r3, r3, #5
9002942e:	6563      	str	r3, [r4, #84]	@ 0x54
90029430:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90029434:	015b      	lsls	r3, r3, #5
90029436:	65a3      	str	r3, [r4, #88]	@ 0x58
90029438:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
9002943c:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
90029440:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
90029444:	b002      	add	sp, #8
90029446:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002944a:	bf00      	nop
9002944c:	9002e6b0 	.word	0x9002e6b0

90029450 <_ZN8touchgfx6Canvas5closeEv>:
90029450:	b538      	push	{r3, r4, r5, lr}
90029452:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
90029456:	4604      	mov	r4, r0
90029458:	b193      	cbz	r3, 90029480 <_ZN8touchgfx6Canvas5closeEv+0x30>
9002945a:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
9002945e:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
90029462:	4213      	tst	r3, r2
90029464:	d10c      	bne.n	90029480 <_ZN8touchgfx6Canvas5closeEv+0x30>
90029466:	f100 0514 	add.w	r5, r0, #20
9002946a:	b123      	cbz	r3, 90029476 <_ZN8touchgfx6Canvas5closeEv+0x26>
9002946c:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
90029470:	4628      	mov	r0, r5
90029472:	f7ff fea3 	bl	900291bc <_ZN8touchgfx10Rasterizer6lineToEii>
90029476:	4628      	mov	r0, r5
90029478:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
9002947c:	f7ff fe9e 	bl	900291bc <_ZN8touchgfx10Rasterizer6lineToEii>
90029480:	2300      	movs	r3, #0
90029482:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
90029486:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
9002948a:	4298      	cmp	r0, r3
9002948c:	bf34      	ite	cc
9002948e:	2000      	movcc	r0, #0
90029490:	2001      	movcs	r0, #1
90029492:	bd38      	pop	{r3, r4, r5, pc}

90029494 <_ZN8touchgfx6Canvas6renderEh>:
90029494:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90029498:	7a85      	ldrb	r5, [r0, #10]
9002949a:	4604      	mov	r4, r0
9002949c:	4369      	muls	r1, r5
9002949e:	1c4d      	adds	r5, r1, #1
900294a0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
900294a4:	122d      	asrs	r5, r5, #8
900294a6:	f000 8098 	beq.w	900295da <_ZN8touchgfx6Canvas6renderEh+0x146>
900294aa:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
900294ae:	2b00      	cmp	r3, #0
900294b0:	f000 8093 	beq.w	900295da <_ZN8touchgfx6Canvas6renderEh+0x146>
900294b4:	f7ff ffcc 	bl	90029450 <_ZN8touchgfx6Canvas5closeEv>
900294b8:	4607      	mov	r7, r0
900294ba:	2800      	cmp	r0, #0
900294bc:	d045      	beq.n	9002954a <_ZN8touchgfx6Canvas6renderEh+0xb6>
900294be:	6860      	ldr	r0, [r4, #4]
900294c0:	4e47      	ldr	r6, [pc, #284]	@ (900295e0 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
900294c2:	6803      	ldr	r3, [r0, #0]
900294c4:	6837      	ldr	r7, [r6, #0]
900294c6:	689b      	ldr	r3, [r3, #8]
900294c8:	4798      	blx	r3
900294ca:	4601      	mov	r1, r0
900294cc:	4638      	mov	r0, r7
900294ce:	f7e8 fe2d 	bl	9001212c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
900294d2:	4607      	mov	r7, r0
900294d4:	f7e8 f9c0 	bl	90011858 <_ZN8touchgfx3HAL3lcdEv>
900294d8:	6803      	ldr	r3, [r0, #0]
900294da:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900294dc:	4798      	blx	r3
900294de:	4680      	mov	r8, r0
900294e0:	f7e8 f9ba 	bl	90011858 <_ZN8touchgfx3HAL3lcdEv>
900294e4:	6803      	ldr	r3, [r0, #0]
900294e6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900294e8:	4798      	blx	r3
900294ea:	280b      	cmp	r0, #11
900294ec:	d85a      	bhi.n	900295a4 <_ZN8touchgfx6Canvas6renderEh+0x110>
900294ee:	e8df f000 	tbb	[pc, r0]
900294f2:	5b50      	.short	0x5b50
900294f4:	3059066b 	.word	0x3059066b
900294f8:	64646440 	.word	0x64646440
900294fc:	6464      	.short	0x6464
900294fe:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90029502:	2208      	movs	r2, #8
90029504:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90029508:	fb91 f2f2 	sdiv	r2, r1, r2
9002950c:	fb08 2303 	mla	r3, r8, r3, r2
90029510:	441f      	add	r7, r3
90029512:	424b      	negs	r3, r1
90029514:	f001 0107 	and.w	r1, r1, #7
90029518:	f003 0307 	and.w	r3, r3, #7
9002951c:	bf58      	it	pl
9002951e:	4259      	negpl	r1, r3
90029520:	b2c9      	uxtb	r1, r1
90029522:	b2ed      	uxtb	r5, r5
90029524:	463a      	mov	r2, r7
90029526:	fa0f f388 	sxth.w	r3, r8
9002952a:	f104 0014 	add.w	r0, r4, #20
9002952e:	e9cd 1500 	strd	r1, r5, [sp]
90029532:	6861      	ldr	r1, [r4, #4]
90029534:	f7ff fe4e 	bl	900291d4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
90029538:	4607      	mov	r7, r0
9002953a:	6860      	ldr	r0, [r4, #4]
9002953c:	6803      	ldr	r3, [r0, #0]
9002953e:	691b      	ldr	r3, [r3, #16]
90029540:	4798      	blx	r3
90029542:	6830      	ldr	r0, [r6, #0]
90029544:	6803      	ldr	r3, [r0, #0]
90029546:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90029548:	4798      	blx	r3
9002954a:	4638      	mov	r0, r7
9002954c:	b002      	add	sp, #8
9002954e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90029552:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90029556:	2204      	movs	r2, #4
90029558:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002955c:	fb91 f2f2 	sdiv	r2, r1, r2
90029560:	fb08 2303 	mla	r3, r8, r3, r2
90029564:	441f      	add	r7, r3
90029566:	424b      	negs	r3, r1
90029568:	f001 0103 	and.w	r1, r1, #3
9002956c:	f003 0303 	and.w	r3, r3, #3
90029570:	e7d4      	b.n	9002951c <_ZN8touchgfx6Canvas6renderEh+0x88>
90029572:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90029576:	2202      	movs	r2, #2
90029578:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002957c:	2900      	cmp	r1, #0
9002957e:	fb91 f2f2 	sdiv	r2, r1, r2
90029582:	f001 0101 	and.w	r1, r1, #1
90029586:	fb08 2303 	mla	r3, r8, r3, r2
9002958a:	bfb8      	it	lt
9002958c:	4249      	neglt	r1, r1
9002958e:	441f      	add	r7, r3
90029590:	e7c6      	b.n	90029520 <_ZN8touchgfx6Canvas6renderEh+0x8c>
90029592:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90029596:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002959a:	fb08 f303 	mul.w	r3, r8, r3
9002959e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
900295a2:	441f      	add	r7, r3
900295a4:	2100      	movs	r1, #0
900295a6:	e7bc      	b.n	90029522 <_ZN8touchgfx6Canvas6renderEh+0x8e>
900295a8:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
900295ac:	2103      	movs	r1, #3
900295ae:	fb08 f203 	mul.w	r2, r8, r3
900295b2:	89a3      	ldrh	r3, [r4, #12]
900295b4:	fb13 2301 	smlabb	r3, r3, r1, r2
900295b8:	e7f3      	b.n	900295a2 <_ZN8touchgfx6Canvas6renderEh+0x10e>
900295ba:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
900295be:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
900295c2:	fb08 2303 	mla	r3, r8, r3, r2
900295c6:	e7ec      	b.n	900295a2 <_ZN8touchgfx6Canvas6renderEh+0x10e>
900295c8:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
900295cc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
900295d0:	fb08 f303 	mul.w	r3, r8, r3
900295d4:	eb03 0382 	add.w	r3, r3, r2, lsl #2
900295d8:	e7e3      	b.n	900295a2 <_ZN8touchgfx6Canvas6renderEh+0x10e>
900295da:	2701      	movs	r7, #1
900295dc:	e7b5      	b.n	9002954a <_ZN8touchgfx6Canvas6renderEh+0xb6>
900295de:	bf00      	nop
900295e0:	24021864 	.word	0x24021864

900295e4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
900295e4:	4b06      	ldr	r3, [pc, #24]	@ (90029600 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
900295e6:	b510      	push	{r4, lr}
900295e8:	781b      	ldrb	r3, [r3, #0]
900295ea:	2b01      	cmp	r3, #1
900295ec:	d107      	bne.n	900295fe <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
900295ee:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
900295f2:	680b      	ldr	r3, [r1, #0]
900295f4:	6814      	ldr	r4, [r2, #0]
900295f6:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
900295fa:	6013      	str	r3, [r2, #0]
900295fc:	600c      	str	r4, [r1, #0]
900295fe:	bd10      	pop	{r4, pc}
90029600:	2402185c 	.word	0x2402185c

90029604 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
90029604:	b513      	push	{r0, r1, r4, lr}
90029606:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
9002960a:	4604      	mov	r4, r0
9002960c:	e9cd 2100 	strd	r2, r1, [sp]
90029610:	b9a3      	cbnz	r3, 9002963c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
90029612:	466a      	mov	r2, sp
90029614:	a901      	add	r1, sp, #4
90029616:	4620      	mov	r0, r4
90029618:	f7ff ffe4 	bl	900295e4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
9002961c:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
9002961e:	9901      	ldr	r1, [sp, #4]
90029620:	9a00      	ldr	r2, [sp, #0]
90029622:	1ac9      	subs	r1, r1, r3
90029624:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90029626:	1ad2      	subs	r2, r2, r3
90029628:	9101      	str	r1, [sp, #4]
9002962a:	2a00      	cmp	r2, #0
9002962c:	9200      	str	r2, [sp, #0]
9002962e:	da0b      	bge.n	90029648 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
90029630:	2301      	movs	r3, #1
90029632:	2900      	cmp	r1, #0
90029634:	da0e      	bge.n	90029654 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
90029636:	f043 0304 	orr.w	r3, r3, #4
9002963a:	e013      	b.n	90029664 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
9002963c:	f7ff ff08 	bl	90029450 <_ZN8touchgfx6Canvas5closeEv>
90029640:	2800      	cmp	r0, #0
90029642:	d1e6      	bne.n	90029612 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
90029644:	b002      	add	sp, #8
90029646:	bd10      	pop	{r4, pc}
90029648:	6da3      	ldr	r3, [r4, #88]	@ 0x58
9002964a:	429a      	cmp	r2, r3
9002964c:	bfac      	ite	ge
9002964e:	2302      	movge	r3, #2
90029650:	2300      	movlt	r3, #0
90029652:	e7ee      	b.n	90029632 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
90029654:	6d60      	ldr	r0, [r4, #84]	@ 0x54
90029656:	4281      	cmp	r1, r0
90029658:	bfac      	ite	ge
9002965a:	2008      	movge	r0, #8
9002965c:	2000      	movlt	r0, #0
9002965e:	4318      	orrs	r0, r3
90029660:	b2c3      	uxtb	r3, r0
90029662:	b158      	cbz	r0, 9002967c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
90029664:	2200      	movs	r2, #0
90029666:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
9002966a:	9901      	ldr	r1, [sp, #4]
9002966c:	9a00      	ldr	r2, [sp, #0]
9002966e:	66e1      	str	r1, [r4, #108]	@ 0x6c
90029670:	6722      	str	r2, [r4, #112]	@ 0x70
90029672:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
90029676:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
9002967a:	e7e3      	b.n	90029644 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
9002967c:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
90029680:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
90029684:	4298      	cmp	r0, r3
90029686:	d803      	bhi.n	90029690 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
90029688:	f104 0014 	add.w	r0, r4, #20
9002968c:	f7eb fe2c 	bl	900152e8 <_ZN8touchgfx7Outline6moveToEii>
90029690:	2301      	movs	r3, #1
90029692:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
90029696:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
9002969a:	2300      	movs	r3, #0
9002969c:	e7e5      	b.n	9002966a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

9002969e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
9002969e:	b573      	push	{r0, r1, r4, r5, r6, lr}
900296a0:	ab02      	add	r3, sp, #8
900296a2:	4604      	mov	r4, r0
900296a4:	9101      	str	r1, [sp, #4]
900296a6:	a901      	add	r1, sp, #4
900296a8:	f843 2d08 	str.w	r2, [r3, #-8]!
900296ac:	461a      	mov	r2, r3
900296ae:	f7ff ff99 	bl	900295e4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
900296b2:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
900296b4:	9901      	ldr	r1, [sp, #4]
900296b6:	9a00      	ldr	r2, [sp, #0]
900296b8:	1ac9      	subs	r1, r1, r3
900296ba:	6d23      	ldr	r3, [r4, #80]	@ 0x50
900296bc:	1ad2      	subs	r2, r2, r3
900296be:	9101      	str	r1, [sp, #4]
900296c0:	2a00      	cmp	r2, #0
900296c2:	9200      	str	r2, [sp, #0]
900296c4:	db1c      	blt.n	90029700 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
900296c6:	6da3      	ldr	r3, [r4, #88]	@ 0x58
900296c8:	429a      	cmp	r2, r3
900296ca:	bfac      	ite	ge
900296cc:	2002      	movge	r0, #2
900296ce:	2000      	movlt	r0, #0
900296d0:	2900      	cmp	r1, #0
900296d2:	db17      	blt.n	90029704 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
900296d4:	6d63      	ldr	r3, [r4, #84]	@ 0x54
900296d6:	4299      	cmp	r1, r3
900296d8:	bfac      	ite	ge
900296da:	2308      	movge	r3, #8
900296dc:	2300      	movlt	r3, #0
900296de:	4303      	orrs	r3, r0
900296e0:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
900296e4:	b2dd      	uxtb	r5, r3
900296e6:	b978      	cbnz	r0, 90029708 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
900296e8:	f104 0014 	add.w	r0, r4, #20
900296ec:	f7ff fd66 	bl	900291bc <_ZN8touchgfx10Rasterizer6lineToEii>
900296f0:	9b01      	ldr	r3, [sp, #4]
900296f2:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
900296f6:	6623      	str	r3, [r4, #96]	@ 0x60
900296f8:	9b00      	ldr	r3, [sp, #0]
900296fa:	6663      	str	r3, [r4, #100]	@ 0x64
900296fc:	b002      	add	sp, #8
900296fe:	bd70      	pop	{r4, r5, r6, pc}
90029700:	2001      	movs	r0, #1
90029702:	e7e5      	b.n	900296d0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
90029704:	2304      	movs	r3, #4
90029706:	e7ea      	b.n	900296de <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
90029708:	b113      	cbz	r3, 90029710 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
9002970a:	ea10 0305 	ands.w	r3, r0, r5
9002970e:	d11c      	bne.n	9002974a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
90029710:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
90029714:	f104 0614 	add.w	r6, r4, #20
90029718:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
9002971c:	b98b      	cbnz	r3, 90029742 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
9002971e:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
90029722:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
90029726:	4298      	cmp	r0, r3
90029728:	d802      	bhi.n	90029730 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
9002972a:	4630      	mov	r0, r6
9002972c:	f7eb fddc 	bl	900152e8 <_ZN8touchgfx7Outline6moveToEii>
90029730:	2301      	movs	r3, #1
90029732:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
90029736:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
9002973a:	4630      	mov	r0, r6
9002973c:	e9dd 2100 	ldrd	r2, r1, [sp]
90029740:	e7d4      	b.n	900296ec <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
90029742:	4630      	mov	r0, r6
90029744:	f7ff fd3a 	bl	900291bc <_ZN8touchgfx10Rasterizer6lineToEii>
90029748:	e7f7      	b.n	9002973a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
9002974a:	461d      	mov	r5, r3
9002974c:	e7d0      	b.n	900296f0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

90029750 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
90029750:	b538      	push	{r3, r4, r5, lr}
90029752:	ed2d 8b10 	vpush	{d8-d15}
90029756:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
9002975a:	4605      	mov	r5, r0
9002975c:	eeb0 ca40 	vmov.f32	s24, s0
90029760:	460c      	mov	r4, r1
90029762:	eef0 ca60 	vmov.f32	s25, s1
90029766:	ed9f ba57 	vldr	s22, [pc, #348]	@ 900298c4 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
9002976a:	eeb0 da41 	vmov.f32	s26, s2
9002976e:	eef0 da61 	vmov.f32	s27, s3
90029772:	eeb0 ea42 	vmov.f32	s28, s4
90029776:	eef0 ea62 	vmov.f32	s29, s5
9002977a:	eef0 aa6b 	vmov.f32	s21, s23
9002977e:	2c08      	cmp	r4, #8
90029780:	d86e      	bhi.n	90029860 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
90029782:	ee7e 6a4c 	vsub.f32	s13, s28, s24
90029786:	ee7d 7aee 	vsub.f32	s15, s27, s29
9002978a:	ee3d 6a4e 	vsub.f32	s12, s26, s28
9002978e:	ee3e 7aec 	vsub.f32	s14, s29, s25
90029792:	ee66 7ae7 	vnmul.f32	s15, s13, s15
90029796:	ee3c fa0d 	vadd.f32	s30, s24, s26
9002979a:	ee7c faad 	vadd.f32	s31, s25, s27
9002979e:	eee6 7a07 	vfma.f32	s15, s12, s14
900297a2:	ee7d 9a0e 	vadd.f32	s19, s26, s28
900297a6:	ee3d aaae 	vadd.f32	s20, s27, s29
900297aa:	ee2f fa2b 	vmul.f32	s30, s30, s23
900297ae:	ee6f faab 	vmul.f32	s31, s31, s23
900297b2:	ee69 9aab 	vmul.f32	s19, s19, s23
900297b6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
900297ba:	ee2a aa2b 	vmul.f32	s20, s20, s23
900297be:	ee7f 8a29 	vadd.f32	s17, s30, s19
900297c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900297c6:	ee3f 9a8a 	vadd.f32	s18, s31, s20
900297ca:	ee68 8aab 	vmul.f32	s17, s17, s23
900297ce:	bf48      	it	mi
900297d0:	eef1 7a67 	vnegmi.f32	s15, s15
900297d4:	ee29 9a2b 	vmul.f32	s18, s18, s23
900297d8:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
900297dc:	eef4 7acb 	vcmpe.f32	s15, s22
900297e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900297e4:	dd3f      	ble.n	90029866 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
900297e6:	ee27 7a07 	vmul.f32	s14, s14, s14
900297ea:	ee67 7aa7 	vmul.f32	s15, s15, s15
900297ee:	eea6 7aa6 	vfma.f32	s14, s13, s13
900297f2:	ee27 7a06 	vmul.f32	s14, s14, s12
900297f6:	eef4 7ac7 	vcmpe.f32	s15, s14
900297fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900297fe:	d847      	bhi.n	90029890 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
90029800:	ee7e 0a4d 	vsub.f32	s1, s28, s26
90029804:	ee3e 0aed 	vsub.f32	s0, s29, s27
90029808:	f000 fa57 	bl	90029cba <atan2f>
9002980c:	eeb0 8a40 	vmov.f32	s16, s0
90029810:	ee7d 0a4c 	vsub.f32	s1, s26, s24
90029814:	ee3d 0aec 	vsub.f32	s0, s27, s25
90029818:	f000 fa4f 	bl	90029cba <atan2f>
9002981c:	ee38 0a40 	vsub.f32	s0, s16, s0
90029820:	eddf 7a29 	vldr	s15, [pc, #164]	@ 900298c8 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
90029824:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90029828:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002982c:	bf48      	it	mi
9002982e:	eeb1 0a40 	vnegmi.f32	s0, s0
90029832:	eeb4 0ae7 	vcmpe.f32	s0, s15
90029836:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002983a:	bfa4      	itt	ge
9002983c:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 900298cc <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
90029840:	ee37 0ac0 	vsubge.f32	s0, s15, s0
90029844:	eddf 7a22 	vldr	s15, [pc, #136]	@ 900298d0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
90029848:	eeb4 0ae7 	vcmpe.f32	s0, s15
9002984c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029850:	d51e      	bpl.n	90029890 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
90029852:	eef0 0a49 	vmov.f32	s1, s18
90029856:	4628      	mov	r0, r5
90029858:	eeb0 0a68 	vmov.f32	s0, s17
9002985c:	f7e9 fe60 	bl	90013520 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90029860:	ecbd 8b10 	vpop	{d8-d15}
90029864:	bd38      	pop	{r3, r4, r5, pc}
90029866:	ee7c 7a0e 	vadd.f32	s15, s24, s28
9002986a:	eeb0 7a68 	vmov.f32	s14, s17
9002986e:	eef0 6a49 	vmov.f32	s13, s18
90029872:	eea7 7aea 	vfms.f32	s14, s15, s21
90029876:	ee7c 7aae 	vadd.f32	s15, s25, s29
9002987a:	eee7 6aea 	vfms.f32	s13, s15, s21
9002987e:	ee66 7aa6 	vmul.f32	s15, s13, s13
90029882:	eee7 7a07 	vfma.f32	s15, s14, s14
90029886:	eef4 7ac6 	vcmpe.f32	s15, s12
9002988a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002988e:	d9e0      	bls.n	90029852 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
90029890:	3401      	adds	r4, #1
90029892:	eef0 0a6c 	vmov.f32	s1, s25
90029896:	eeb0 0a4c 	vmov.f32	s0, s24
9002989a:	4628      	mov	r0, r5
9002989c:	4621      	mov	r1, r4
9002989e:	eef0 2a49 	vmov.f32	s5, s18
900298a2:	eeb0 2a68 	vmov.f32	s4, s17
900298a6:	eef0 1a6f 	vmov.f32	s3, s31
900298aa:	eeb0 1a4f 	vmov.f32	s2, s30
900298ae:	f7ff ff4f 	bl	90029750 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
900298b2:	eef0 da4a 	vmov.f32	s27, s20
900298b6:	eeb0 da69 	vmov.f32	s26, s19
900298ba:	eef0 ca49 	vmov.f32	s25, s18
900298be:	eeb0 ca68 	vmov.f32	s24, s17
900298c2:	e75c      	b.n	9002977e <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
900298c4:	2edbe6ff 	.word	0x2edbe6ff
900298c8:	40490fdb 	.word	0x40490fdb
900298cc:	40c90fdb 	.word	0x40c90fdb
900298d0:	3dcccccd 	.word	0x3dcccccd

900298d4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
900298d4:	b530      	push	{r4, r5, lr}
900298d6:	ed2d 8b10 	vpush	{d8-d15}
900298da:	eef0 8a40 	vmov.f32	s17, s0
900298de:	b085      	sub	sp, #20
900298e0:	eef0 9a60 	vmov.f32	s19, s1
900298e4:	4604      	mov	r4, r0
900298e6:	eef0 fa41 	vmov.f32	s31, s2
900298ea:	460d      	mov	r5, r1
900298ec:	eeb0 fa61 	vmov.f32	s30, s3
900298f0:	eef0 ba42 	vmov.f32	s23, s4
900298f4:	eeb0 ca62 	vmov.f32	s24, s5
900298f8:	eef0 aa43 	vmov.f32	s21, s6
900298fc:	eeb0 ba63 	vmov.f32	s22, s7
90029900:	2d08      	cmp	r5, #8
90029902:	f200 8113 	bhi.w	90029b2c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x258>
90029906:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
9002990a:	ee3b 6aaa 	vadd.f32	s12, s23, s21
9002990e:	ee7f 6aab 	vadd.f32	s13, s31, s23
90029912:	ee38 daaf 	vadd.f32	s26, s17, s31
90029916:	ee26 6a27 	vmul.f32	s12, s12, s15
9002991a:	ee7c ca0b 	vadd.f32	s25, s24, s22
9002991e:	ee2d da27 	vmul.f32	s26, s26, s15
90029922:	ed8d 6a01 	vstr	s12, [sp, #4]
90029926:	eea6 6aa7 	vfma.f32	s12, s13, s15
9002992a:	ee6c caa7 	vmul.f32	s25, s25, s15
9002992e:	eeb0 ea4d 	vmov.f32	s28, s26
90029932:	ee79 da8f 	vadd.f32	s27, s19, s30
90029936:	ee3f 7a0c 	vadd.f32	s14, s30, s24
9002993a:	eea6 eaa7 	vfma.f32	s28, s13, s15
9002993e:	ee66 6a27 	vmul.f32	s13, s12, s15
90029942:	ee6d daa7 	vmul.f32	s27, s27, s15
90029946:	edcd 6a03 	vstr	s13, [sp, #12]
9002994a:	eef0 6a6c 	vmov.f32	s13, s25
9002994e:	eef0 ea6d 	vmov.f32	s29, s27
90029952:	ee2e ea27 	vmul.f32	s28, s28, s15
90029956:	eee7 6a27 	vfma.f32	s13, s14, s15
9002995a:	eee7 ea27 	vfma.f32	s29, s14, s15
9002995e:	ee26 7aa7 	vmul.f32	s14, s13, s15
90029962:	ee6e eaa7 	vmul.f32	s29, s29, s15
90029966:	eef0 6a67 	vmov.f32	s13, s15
9002996a:	ed8d 7a02 	vstr	s14, [sp, #8]
9002996e:	ed9d 7a03 	vldr	s14, [sp, #12]
90029972:	ee3e 9a07 	vadd.f32	s18, s28, s14
90029976:	ed9d 7a02 	vldr	s14, [sp, #8]
9002997a:	ee3e aa87 	vadd.f32	s20, s29, s14
9002997e:	ee29 9a27 	vmul.f32	s18, s18, s15
90029982:	ee2a aa27 	vmul.f32	s20, s20, s15
90029986:	2d00      	cmp	r5, #0
90029988:	f000 810b 	beq.w	90029ba2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002998c:	ee7a 5ae8 	vsub.f32	s11, s21, s17
90029990:	eddf 4a95 	vldr	s9, [pc, #596]	@ 90029be8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x314>
90029994:	ee3f 7a4b 	vsub.f32	s14, s30, s22
90029998:	ee7b 7a69 	vsub.f32	s15, s22, s19
9002999c:	ee3f 6aea 	vsub.f32	s12, s31, s21
900299a0:	ee25 7ac7 	vnmul.f32	s14, s11, s14
900299a4:	ee3b 5aea 	vsub.f32	s10, s23, s21
900299a8:	eea6 7a27 	vfma.f32	s14, s12, s15
900299ac:	ee3c 6a4b 	vsub.f32	s12, s24, s22
900299b0:	ee25 6ac6 	vnmul.f32	s12, s11, s12
900299b4:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
900299b8:	eea5 6a27 	vfma.f32	s12, s10, s15
900299bc:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
900299c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900299c4:	bf48      	it	mi
900299c6:	eeb1 7a47 	vnegmi.f32	s14, s14
900299ca:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
900299ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900299d2:	eeb4 7ae4 	vcmpe.f32	s14, s9
900299d6:	bf48      	it	mi
900299d8:	eeb1 6a46 	vnegmi.f32	s12, s12
900299dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900299e0:	f340 80a8 	ble.w	90029b34 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x260>
900299e4:	eeb4 6ae4 	vcmpe.f32	s12, s9
900299e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900299ec:	dd5a      	ble.n	90029aa4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d0>
900299ee:	ee65 5aa5 	vmul.f32	s11, s11, s11
900299f2:	ee37 7a06 	vadd.f32	s14, s14, s12
900299f6:	eee7 5aa7 	vfma.f32	s11, s15, s15
900299fa:	ee27 7a07 	vmul.f32	s14, s14, s14
900299fe:	ee65 7a85 	vmul.f32	s15, s11, s10
90029a02:	eeb4 7ae7 	vcmpe.f32	s14, s15
90029a06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029a0a:	f200 80ca 	bhi.w	90029ba2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90029a0e:	ee7b 0aef 	vsub.f32	s1, s23, s31
90029a12:	ee3c 0a4f 	vsub.f32	s0, s24, s30
90029a16:	f000 f950 	bl	90029cba <atan2f>
90029a1a:	eeb0 8a40 	vmov.f32	s16, s0
90029a1e:	ee7f 0ae8 	vsub.f32	s1, s31, s17
90029a22:	ee3f 0a69 	vsub.f32	s0, s30, s19
90029a26:	f000 f948 	bl	90029cba <atan2f>
90029a2a:	ee38 fa40 	vsub.f32	s30, s16, s0
90029a2e:	ee7a 0aeb 	vsub.f32	s1, s21, s23
90029a32:	ee3b 0a4c 	vsub.f32	s0, s22, s24
90029a36:	eeb5 fac0 	vcmpe.f32	s30, #0.0
90029a3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029a3e:	bf48      	it	mi
90029a40:	eeb1 fa4f 	vnegmi.f32	s30, s30
90029a44:	f000 f939 	bl	90029cba <atan2f>
90029a48:	ee30 0a48 	vsub.f32	s0, s0, s16
90029a4c:	eddf 7a67 	vldr	s15, [pc, #412]	@ 90029bec <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
90029a50:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90029a54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029a58:	eeb4 fae7 	vcmpe.f32	s30, s15
90029a5c:	eddf 7a63 	vldr	s15, [pc, #396]	@ 90029bec <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
90029a60:	bf48      	it	mi
90029a62:	eeb1 0a40 	vnegmi.f32	s0, s0
90029a66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029a6a:	eeb4 0ae7 	vcmpe.f32	s0, s15
90029a6e:	eddf 7a60 	vldr	s15, [pc, #384]	@ 90029bf0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
90029a72:	bfa4      	itt	ge
90029a74:	ed9f 7a5f 	vldrge	s14, [pc, #380]	@ 90029bf4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
90029a78:	ee37 fa4f 	vsubge.f32	s30, s14, s30
90029a7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029a80:	bfa4      	itt	ge
90029a82:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 90029bf4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
90029a86:	ee37 0a40 	vsubge.f32	s0, s14, s0
90029a8a:	ee3f 0a00 	vadd.f32	s0, s30, s0
90029a8e:	eeb4 0ae7 	vcmpe.f32	s0, s15
90029a92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029a96:	f140 8084 	bpl.w	90029ba2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90029a9a:	eef0 0a4a 	vmov.f32	s1, s20
90029a9e:	eeb0 0a49 	vmov.f32	s0, s18
90029aa2:	e040      	b.n	90029b26 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x252>
90029aa4:	ee67 7aa7 	vmul.f32	s15, s15, s15
90029aa8:	ee27 7a07 	vmul.f32	s14, s14, s14
90029aac:	eee5 7aa5 	vfma.f32	s15, s11, s11
90029ab0:	ee67 7a85 	vmul.f32	s15, s15, s10
90029ab4:	eeb4 7ae7 	vcmpe.f32	s14, s15
90029ab8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029abc:	d871      	bhi.n	90029ba2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90029abe:	ee7b 0aef 	vsub.f32	s1, s23, s31
90029ac2:	ee3c 0a4f 	vsub.f32	s0, s24, s30
90029ac6:	f000 f8f8 	bl	90029cba <atan2f>
90029aca:	ee7f 0ae8 	vsub.f32	s1, s31, s17
90029ace:	eeb0 8a40 	vmov.f32	s16, s0
90029ad2:	ee3f 0a69 	vsub.f32	s0, s30, s19
90029ad6:	f000 f8f0 	bl	90029cba <atan2f>
90029ada:	ee38 0a40 	vsub.f32	s0, s16, s0
90029ade:	eddf 7a43 	vldr	s15, [pc, #268]	@ 90029bec <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
90029ae2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90029ae6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029aea:	bf48      	it	mi
90029aec:	eeb1 0a40 	vnegmi.f32	s0, s0
90029af0:	eeb4 0ae7 	vcmpe.f32	s0, s15
90029af4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029af8:	bfa4      	itt	ge
90029afa:	eddf 7a3e 	vldrge	s15, [pc, #248]	@ 90029bf4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
90029afe:	ee37 0ac0 	vsubge.f32	s0, s15, s0
90029b02:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 90029bf0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
90029b06:	eeb4 0ae7 	vcmpe.f32	s0, s15
90029b0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029b0e:	d548      	bpl.n	90029ba2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90029b10:	eef0 0a4f 	vmov.f32	s1, s30
90029b14:	4620      	mov	r0, r4
90029b16:	eeb0 0a6f 	vmov.f32	s0, s31
90029b1a:	f7e9 fd01 	bl	90013520 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90029b1e:	eef0 0a4c 	vmov.f32	s1, s24
90029b22:	eeb0 0a6b 	vmov.f32	s0, s23
90029b26:	4620      	mov	r0, r4
90029b28:	f7e9 fcfa 	bl	90013520 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90029b2c:	b005      	add	sp, #20
90029b2e:	ecbd 8b10 	vpop	{d8-d15}
90029b32:	bd30      	pop	{r4, r5, pc}
90029b34:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 90029be8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x314>
90029b38:	eeb4 6ac7 	vcmpe.f32	s12, s14
90029b3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029b40:	dd19      	ble.n	90029b76 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a2>
90029b42:	ee67 7aa7 	vmul.f32	s15, s15, s15
90029b46:	ee26 7a06 	vmul.f32	s14, s12, s12
90029b4a:	eee5 7aa5 	vfma.f32	s15, s11, s11
90029b4e:	ee67 7a85 	vmul.f32	s15, s15, s10
90029b52:	eeb4 7ae7 	vcmpe.f32	s14, s15
90029b56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029b5a:	d822      	bhi.n	90029ba2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90029b5c:	ee7a 0aeb 	vsub.f32	s1, s21, s23
90029b60:	ee3b 0a4c 	vsub.f32	s0, s22, s24
90029b64:	f000 f8a9 	bl	90029cba <atan2f>
90029b68:	ee7b 0aef 	vsub.f32	s1, s23, s31
90029b6c:	eeb0 8a40 	vmov.f32	s16, s0
90029b70:	ee3c 0a4f 	vsub.f32	s0, s24, s30
90029b74:	e7af      	b.n	90029ad6 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x202>
90029b76:	ee78 7aaa 	vadd.f32	s15, s17, s21
90029b7a:	eeb0 7a49 	vmov.f32	s14, s18
90029b7e:	eeb0 6a4a 	vmov.f32	s12, s20
90029b82:	eea7 7ae6 	vfms.f32	s14, s15, s13
90029b86:	ee79 7a8b 	vadd.f32	s15, s19, s22
90029b8a:	eea7 6ae6 	vfms.f32	s12, s15, s13
90029b8e:	ee66 7a06 	vmul.f32	s15, s12, s12
90029b92:	eee7 7a07 	vfma.f32	s15, s14, s14
90029b96:	eef4 7ac5 	vcmpe.f32	s15, s10
90029b9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029b9e:	f67f af7c 	bls.w	90029a9a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1c6>
90029ba2:	3501      	adds	r5, #1
90029ba4:	eef0 0a69 	vmov.f32	s1, s19
90029ba8:	eeb0 0a68 	vmov.f32	s0, s17
90029bac:	4620      	mov	r0, r4
90029bae:	4629      	mov	r1, r5
90029bb0:	eef0 3a4a 	vmov.f32	s7, s20
90029bb4:	eeb0 3a49 	vmov.f32	s6, s18
90029bb8:	eef0 2a6e 	vmov.f32	s5, s29
90029bbc:	eeb0 2a4e 	vmov.f32	s4, s28
90029bc0:	eef0 1a6d 	vmov.f32	s3, s27
90029bc4:	eeb0 1a4d 	vmov.f32	s2, s26
90029bc8:	f7ff fe84 	bl	900298d4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
90029bcc:	eeb0 ca6c 	vmov.f32	s24, s25
90029bd0:	eddd ba01 	vldr	s23, [sp, #4]
90029bd4:	eef0 9a4a 	vmov.f32	s19, s20
90029bd8:	ed9d fa02 	vldr	s30, [sp, #8]
90029bdc:	eef0 8a49 	vmov.f32	s17, s18
90029be0:	eddd fa03 	vldr	s31, [sp, #12]
90029be4:	e68c      	b.n	90029900 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
90029be6:	bf00      	nop
90029be8:	2edbe6ff 	.word	0x2edbe6ff
90029bec:	40490fdb 	.word	0x40490fdb
90029bf0:	3dcccccd 	.word	0x3dcccccd
90029bf4:	40c90fdb 	.word	0x40c90fdb

90029bf8 <_ZN8touchgfx6CanvasD1Ev>:
90029bf8:	4b04      	ldr	r3, [pc, #16]	@ (90029c0c <_ZN8touchgfx6CanvasD1Ev+0x14>)
90029bfa:	b510      	push	{r4, lr}
90029bfc:	4604      	mov	r4, r0
90029bfe:	f840 3b14 	str.w	r3, [r0], #20
90029c02:	f7ea fe79 	bl	900148f8 <_ZN8touchgfx7OutlineD1Ev>
90029c06:	4620      	mov	r0, r4
90029c08:	bd10      	pop	{r4, pc}
90029c0a:	bf00      	nop
90029c0c:	9002e6b0 	.word	0x9002e6b0

90029c10 <_ZN8touchgfx6CanvasD0Ev>:
90029c10:	b510      	push	{r4, lr}
90029c12:	4604      	mov	r4, r0
90029c14:	f7ff fff0 	bl	90029bf8 <_ZN8touchgfx6CanvasD1Ev>
90029c18:	2174      	movs	r1, #116	@ 0x74
90029c1a:	4620      	mov	r0, r4
90029c1c:	f000 f826 	bl	90029c6c <_ZdlPvj>
90029c20:	4620      	mov	r0, r4
90029c22:	bd10      	pop	{r4, pc}

90029c24 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
90029c24:	790b      	ldrb	r3, [r1, #4]
90029c26:	2b00      	cmp	r3, #0
90029c28:	bf0c      	ite	eq
90029c2a:	2301      	moveq	r3, #1
90029c2c:	2300      	movne	r3, #0
90029c2e:	b570      	push	{r4, r5, r6, lr}
90029c30:	4604      	mov	r4, r0
90029c32:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
90029c36:	460e      	mov	r6, r1
90029c38:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
90029c3c:	d109      	bne.n	90029c52 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
90029c3e:	b14d      	cbz	r5, 90029c54 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
90029c40:	7933      	ldrb	r3, [r6, #4]
90029c42:	2b01      	cmp	r3, #1
90029c44:	d10c      	bne.n	90029c60 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
90029c46:	6823      	ldr	r3, [r4, #0]
90029c48:	4620      	mov	r0, r4
90029c4a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
90029c4c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90029c50:	4718      	bx	r3
90029c52:	b12d      	cbz	r5, 90029c60 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
90029c54:	6823      	ldr	r3, [r4, #0]
90029c56:	4620      	mov	r0, r4
90029c58:	695b      	ldr	r3, [r3, #20]
90029c5a:	4798      	blx	r3
90029c5c:	2d00      	cmp	r5, #0
90029c5e:	d1ef      	bne.n	90029c40 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
90029c60:	bd70      	pop	{r4, r5, r6, pc}

90029c62 <__aeabi_atexit>:
90029c62:	460b      	mov	r3, r1
90029c64:	4601      	mov	r1, r0
90029c66:	4618      	mov	r0, r3
90029c68:	f000 bc58 	b.w	9002a51c <__cxa_atexit>

90029c6c <_ZdlPvj>:
90029c6c:	f000 b812 	b.w	90029c94 <_ZdlPv>

90029c70 <__cxa_guard_acquire>:
90029c70:	6802      	ldr	r2, [r0, #0]
90029c72:	07d2      	lsls	r2, r2, #31
90029c74:	4603      	mov	r3, r0
90029c76:	d405      	bmi.n	90029c84 <__cxa_guard_acquire+0x14>
90029c78:	7842      	ldrb	r2, [r0, #1]
90029c7a:	b102      	cbz	r2, 90029c7e <__cxa_guard_acquire+0xe>
90029c7c:	deff      	udf	#255	@ 0xff
90029c7e:	2001      	movs	r0, #1
90029c80:	7058      	strb	r0, [r3, #1]
90029c82:	4770      	bx	lr
90029c84:	2000      	movs	r0, #0
90029c86:	4770      	bx	lr

90029c88 <__cxa_guard_release>:
90029c88:	2301      	movs	r3, #1
90029c8a:	6003      	str	r3, [r0, #0]
90029c8c:	4770      	bx	lr

90029c8e <__cxa_pure_virtual>:
90029c8e:	b508      	push	{r3, lr}
90029c90:	f000 f80e 	bl	90029cb0 <_ZSt9terminatev>

90029c94 <_ZdlPv>:
90029c94:	f000 bb8c 	b.w	9002a3b0 <free>

90029c98 <_ZN10__cxxabiv111__terminateEPFvvE>:
90029c98:	b508      	push	{r3, lr}
90029c9a:	4780      	blx	r0
90029c9c:	f000 fb55 	bl	9002a34a <abort>

90029ca0 <_ZSt13get_terminatev>:
90029ca0:	4b02      	ldr	r3, [pc, #8]	@ (90029cac <_ZSt13get_terminatev+0xc>)
90029ca2:	6818      	ldr	r0, [r3, #0]
90029ca4:	f3bf 8f5b 	dmb	ish
90029ca8:	4770      	bx	lr
90029caa:	bf00      	nop
90029cac:	24000104 	.word	0x24000104

90029cb0 <_ZSt9terminatev>:
90029cb0:	b508      	push	{r3, lr}
90029cb2:	f7ff fff5 	bl	90029ca0 <_ZSt13get_terminatev>
90029cb6:	f7ff ffef 	bl	90029c98 <_ZN10__cxxabiv111__terminateEPFvvE>

90029cba <atan2f>:
90029cba:	f000 b9cd 	b.w	9002a058 <__ieee754_atan2f>
	...

90029cc0 <sqrtf>:
90029cc0:	b508      	push	{r3, lr}
90029cc2:	ed2d 8b02 	vpush	{d8}
90029cc6:	eeb0 8a40 	vmov.f32	s16, s0
90029cca:	f000 f9c2 	bl	9002a052 <__ieee754_sqrtf>
90029cce:	eeb4 8a48 	vcmp.f32	s16, s16
90029cd2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029cd6:	d60c      	bvs.n	90029cf2 <sqrtf+0x32>
90029cd8:	eddf 8a07 	vldr	s17, [pc, #28]	@ 90029cf8 <sqrtf+0x38>
90029cdc:	eeb4 8ae8 	vcmpe.f32	s16, s17
90029ce0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029ce4:	d505      	bpl.n	90029cf2 <sqrtf+0x32>
90029ce6:	f000 fee5 	bl	9002aab4 <__errno>
90029cea:	ee88 0aa8 	vdiv.f32	s0, s17, s17
90029cee:	2321      	movs	r3, #33	@ 0x21
90029cf0:	6003      	str	r3, [r0, #0]
90029cf2:	ecbd 8b02 	vpop	{d8}
90029cf6:	bd08      	pop	{r3, pc}
90029cf8:	00000000 	.word	0x00000000

90029cfc <sinf_poly>:
90029cfc:	07cb      	lsls	r3, r1, #31
90029cfe:	d412      	bmi.n	90029d26 <sinf_poly+0x2a>
90029d00:	ee21 5b00 	vmul.f64	d5, d1, d0
90029d04:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
90029d08:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
90029d0c:	eea6 7b01 	vfma.f64	d7, d6, d1
90029d10:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
90029d14:	ee21 1b05 	vmul.f64	d1, d1, d5
90029d18:	eea6 0b05 	vfma.f64	d0, d6, d5
90029d1c:	eea7 0b01 	vfma.f64	d0, d7, d1
90029d20:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
90029d24:	4770      	bx	lr
90029d26:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
90029d2a:	ee21 5b01 	vmul.f64	d5, d1, d1
90029d2e:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
90029d32:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
90029d36:	eea1 7b06 	vfma.f64	d7, d1, d6
90029d3a:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
90029d3e:	eea1 0b06 	vfma.f64	d0, d1, d6
90029d42:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
90029d46:	ee21 1b05 	vmul.f64	d1, d1, d5
90029d4a:	eea5 0b06 	vfma.f64	d0, d5, d6
90029d4e:	e7e5      	b.n	90029d1c <sinf_poly+0x20>

90029d50 <sinf>:
90029d50:	b537      	push	{r0, r1, r2, r4, r5, lr}
90029d52:	ee10 4a10 	vmov	r4, s0
90029d56:	f3c4 530a 	ubfx	r3, r4, #20, #11
90029d5a:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
90029d5e:	eeb7 6ac0 	vcvt.f64.f32	d6, s0
90029d62:	eef0 7a40 	vmov.f32	s15, s0
90029d66:	d218      	bcs.n	90029d9a <sinf+0x4a>
90029d68:	ee26 1b06 	vmul.f64	d1, d6, d6
90029d6c:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
90029d70:	d20a      	bcs.n	90029d88 <sinf+0x38>
90029d72:	f014 4fff 	tst.w	r4, #2139095040	@ 0x7f800000
90029d76:	d103      	bne.n	90029d80 <sinf+0x30>
90029d78:	eeb7 1bc1 	vcvt.f32.f64	s2, d1
90029d7c:	ed8d 1a01 	vstr	s2, [sp, #4]
90029d80:	eeb0 0a67 	vmov.f32	s0, s15
90029d84:	b003      	add	sp, #12
90029d86:	bd30      	pop	{r4, r5, pc}
90029d88:	483b      	ldr	r0, [pc, #236]	@ (90029e78 <sinf+0x128>)
90029d8a:	eeb0 0b46 	vmov.f64	d0, d6
90029d8e:	2100      	movs	r1, #0
90029d90:	b003      	add	sp, #12
90029d92:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
90029d96:	f7ff bfb1 	b.w	90029cfc <sinf_poly>
90029d9a:	f240 422e 	movw	r2, #1070	@ 0x42e
90029d9e:	4293      	cmp	r3, r2
90029da0:	d824      	bhi.n	90029dec <sinf+0x9c>
90029da2:	4b35      	ldr	r3, [pc, #212]	@ (90029e78 <sinf+0x128>)
90029da4:	ed93 7b08 	vldr	d7, [r3, #32]
90029da8:	ee26 7b07 	vmul.f64	d7, d6, d7
90029dac:	eefd 7bc7 	vcvt.s32.f64	s15, d7
90029db0:	f103 0070 	add.w	r0, r3, #112	@ 0x70
90029db4:	ee17 1a90 	vmov	r1, s15
90029db8:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
90029dbc:	1609      	asrs	r1, r1, #24
90029dbe:	ee07 1a90 	vmov	s15, r1
90029dc2:	f001 0203 	and.w	r2, r1, #3
90029dc6:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
90029dca:	eeb8 5be7 	vcvt.f64.s32	d5, s15
90029dce:	ed92 0b00 	vldr	d0, [r2]
90029dd2:	ed93 7b0a 	vldr	d7, [r3, #40]	@ 0x28
90029dd6:	f011 0f02 	tst.w	r1, #2
90029dda:	eea5 6b47 	vfms.f64	d6, d5, d7
90029dde:	bf08      	it	eq
90029de0:	4618      	moveq	r0, r3
90029de2:	ee26 1b06 	vmul.f64	d1, d6, d6
90029de6:	ee20 0b06 	vmul.f64	d0, d0, d6
90029dea:	e7d1      	b.n	90029d90 <sinf+0x40>
90029dec:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
90029df0:	d237      	bcs.n	90029e62 <sinf+0x112>
90029df2:	4922      	ldr	r1, [pc, #136]	@ (90029e7c <sinf+0x12c>)
90029df4:	f3c4 6083 	ubfx	r0, r4, #26, #4
90029df8:	eb01 0280 	add.w	r2, r1, r0, lsl #2
90029dfc:	f3c4 0316 	ubfx	r3, r4, #0, #23
90029e00:	f3c4 55c2 	ubfx	r5, r4, #23, #3
90029e04:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
90029e08:	6a10      	ldr	r0, [r2, #32]
90029e0a:	6912      	ldr	r2, [r2, #16]
90029e0c:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
90029e10:	40ab      	lsls	r3, r5
90029e12:	fba0 5003 	umull	r5, r0, r0, r3
90029e16:	4359      	muls	r1, r3
90029e18:	fbe3 0102 	umlal	r0, r1, r3, r2
90029e1c:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
90029e20:	0f9d      	lsrs	r5, r3, #30
90029e22:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
90029e26:	1ac9      	subs	r1, r1, r3
90029e28:	f7d6 fc38 	bl	9000069c <__aeabi_l2d>
90029e2c:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
90029e30:	4b11      	ldr	r3, [pc, #68]	@ (90029e78 <sinf+0x128>)
90029e32:	f004 0203 	and.w	r2, r4, #3
90029e36:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
90029e3a:	ed9f 6b0d 	vldr	d6, [pc, #52]	@ 90029e70 <sinf+0x120>
90029e3e:	ed92 0b00 	vldr	d0, [r2]
90029e42:	ec41 0b17 	vmov	d7, r0, r1
90029e46:	f014 0f02 	tst.w	r4, #2
90029e4a:	ee27 7b06 	vmul.f64	d7, d7, d6
90029e4e:	f103 0070 	add.w	r0, r3, #112	@ 0x70
90029e52:	4629      	mov	r1, r5
90029e54:	bf08      	it	eq
90029e56:	4618      	moveq	r0, r3
90029e58:	ee27 1b07 	vmul.f64	d1, d7, d7
90029e5c:	ee20 0b07 	vmul.f64	d0, d0, d7
90029e60:	e796      	b.n	90029d90 <sinf+0x40>
90029e62:	b003      	add	sp, #12
90029e64:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
90029e68:	f000 b8e4 	b.w	9002a034 <__math_invalidf>
90029e6c:	f3af 8000 	nop.w
90029e70:	54442d18 	.word	0x54442d18
90029e74:	3c1921fb 	.word	0x3c1921fb
90029e78:	9002e720 	.word	0x9002e720
90029e7c:	9002e6bc 	.word	0x9002e6bc

90029e80 <sinf_poly>:
90029e80:	07cb      	lsls	r3, r1, #31
90029e82:	d412      	bmi.n	90029eaa <sinf_poly+0x2a>
90029e84:	ee21 5b00 	vmul.f64	d5, d1, d0
90029e88:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
90029e8c:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
90029e90:	eea6 7b01 	vfma.f64	d7, d6, d1
90029e94:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
90029e98:	ee21 1b05 	vmul.f64	d1, d1, d5
90029e9c:	eea6 0b05 	vfma.f64	d0, d6, d5
90029ea0:	eea7 0b01 	vfma.f64	d0, d7, d1
90029ea4:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
90029ea8:	4770      	bx	lr
90029eaa:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
90029eae:	ee21 5b01 	vmul.f64	d5, d1, d1
90029eb2:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
90029eb6:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
90029eba:	eea1 7b06 	vfma.f64	d7, d1, d6
90029ebe:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
90029ec2:	eea1 0b06 	vfma.f64	d0, d1, d6
90029ec6:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
90029eca:	ee21 1b05 	vmul.f64	d1, d1, d5
90029ece:	eea5 0b06 	vfma.f64	d0, d5, d6
90029ed2:	e7e5      	b.n	90029ea0 <sinf_poly+0x20>
90029ed4:	0000      	movs	r0, r0
	...

90029ed8 <cosf>:
90029ed8:	b538      	push	{r3, r4, r5, lr}
90029eda:	ee10 4a10 	vmov	r4, s0
90029ede:	f3c4 530a 	ubfx	r3, r4, #20, #11
90029ee2:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
90029ee6:	eeb7 7ac0 	vcvt.f64.f32	d7, s0
90029eea:	d21f      	bcs.n	90029f2c <cosf+0x54>
90029eec:	ee27 7b07 	vmul.f64	d7, d7, d7
90029ef0:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
90029ef4:	f0c0 8082 	bcc.w	90029ffc <cosf+0x124>
90029ef8:	ee27 4b07 	vmul.f64	d4, d7, d7
90029efc:	4b44      	ldr	r3, [pc, #272]	@ (9002a010 <cosf+0x138>)
90029efe:	ed93 5b14 	vldr	d5, [r3, #80]	@ 0x50
90029f02:	ed93 6b12 	vldr	d6, [r3, #72]	@ 0x48
90029f06:	ed93 0b0c 	vldr	d0, [r3, #48]	@ 0x30
90029f0a:	eea7 6b05 	vfma.f64	d6, d7, d5
90029f0e:	ed93 5b0e 	vldr	d5, [r3, #56]	@ 0x38
90029f12:	eea7 0b05 	vfma.f64	d0, d7, d5
90029f16:	ed93 5b10 	vldr	d5, [r3, #64]	@ 0x40
90029f1a:	ee27 7b04 	vmul.f64	d7, d7, d4
90029f1e:	eea4 0b05 	vfma.f64	d0, d4, d5
90029f22:	eea6 0b07 	vfma.f64	d0, d6, d7
90029f26:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
90029f2a:	bd38      	pop	{r3, r4, r5, pc}
90029f2c:	f240 422e 	movw	r2, #1070	@ 0x42e
90029f30:	4293      	cmp	r3, r2
90029f32:	d829      	bhi.n	90029f88 <cosf+0xb0>
90029f34:	4b36      	ldr	r3, [pc, #216]	@ (9002a010 <cosf+0x138>)
90029f36:	ed93 6b08 	vldr	d6, [r3, #32]
90029f3a:	ee27 6b06 	vmul.f64	d6, d7, d6
90029f3e:	eefd 6bc6 	vcvt.s32.f64	s13, d6
90029f42:	f103 0070 	add.w	r0, r3, #112	@ 0x70
90029f46:	ee16 1a90 	vmov	r1, s13
90029f4a:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
90029f4e:	1609      	asrs	r1, r1, #24
90029f50:	ee06 1a90 	vmov	s13, r1
90029f54:	f001 0203 	and.w	r2, r1, #3
90029f58:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
90029f5c:	eeb8 5be6 	vcvt.f64.s32	d5, s13
90029f60:	ed92 0b00 	vldr	d0, [r2]
90029f64:	ed93 6b0a 	vldr	d6, [r3, #40]	@ 0x28
90029f68:	f011 0f02 	tst.w	r1, #2
90029f6c:	f081 0101 	eor.w	r1, r1, #1
90029f70:	eea5 7b46 	vfms.f64	d7, d5, d6
90029f74:	bf08      	it	eq
90029f76:	4618      	moveq	r0, r3
90029f78:	ee27 1b07 	vmul.f64	d1, d7, d7
90029f7c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90029f80:	ee20 0b07 	vmul.f64	d0, d0, d7
90029f84:	f7ff bf7c 	b.w	90029e80 <sinf_poly>
90029f88:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
90029f8c:	d232      	bcs.n	90029ff4 <cosf+0x11c>
90029f8e:	4921      	ldr	r1, [pc, #132]	@ (9002a014 <cosf+0x13c>)
90029f90:	f3c4 6083 	ubfx	r0, r4, #26, #4
90029f94:	eb01 0280 	add.w	r2, r1, r0, lsl #2
90029f98:	f3c4 0316 	ubfx	r3, r4, #0, #23
90029f9c:	f3c4 55c2 	ubfx	r5, r4, #23, #3
90029fa0:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
90029fa4:	6a10      	ldr	r0, [r2, #32]
90029fa6:	6912      	ldr	r2, [r2, #16]
90029fa8:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
90029fac:	40ab      	lsls	r3, r5
90029fae:	fba0 5003 	umull	r5, r0, r0, r3
90029fb2:	4359      	muls	r1, r3
90029fb4:	fbe3 0102 	umlal	r0, r1, r3, r2
90029fb8:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
90029fbc:	0f9d      	lsrs	r5, r3, #30
90029fbe:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
90029fc2:	1ac9      	subs	r1, r1, r3
90029fc4:	f7d6 fb6a 	bl	9000069c <__aeabi_l2d>
90029fc8:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
90029fcc:	4b10      	ldr	r3, [pc, #64]	@ (9002a010 <cosf+0x138>)
90029fce:	ed9f 6b0e 	vldr	d6, [pc, #56]	@ 9002a008 <cosf+0x130>
90029fd2:	ec41 0b17 	vmov	d7, r0, r1
90029fd6:	f004 0203 	and.w	r2, r4, #3
90029fda:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
90029fde:	ed92 0b00 	vldr	d0, [r2]
90029fe2:	ee27 7b06 	vmul.f64	d7, d7, d6
90029fe6:	f103 0070 	add.w	r0, r3, #112	@ 0x70
90029fea:	f014 0f02 	tst.w	r4, #2
90029fee:	f085 0101 	eor.w	r1, r5, #1
90029ff2:	e7bf      	b.n	90029f74 <cosf+0x9c>
90029ff4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90029ff8:	f000 b81c 	b.w	9002a034 <__math_invalidf>
90029ffc:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
9002a000:	e793      	b.n	90029f2a <cosf+0x52>
9002a002:	bf00      	nop
9002a004:	f3af 8000 	nop.w
9002a008:	54442d18 	.word	0x54442d18
9002a00c:	3c1921fb 	.word	0x3c1921fb
9002a010:	9002e720 	.word	0x9002e720
9002a014:	9002e6bc 	.word	0x9002e6bc

9002a018 <with_errnof>:
9002a018:	b510      	push	{r4, lr}
9002a01a:	ed2d 8b02 	vpush	{d8}
9002a01e:	eeb0 8a40 	vmov.f32	s16, s0
9002a022:	4604      	mov	r4, r0
9002a024:	f000 fd46 	bl	9002aab4 <__errno>
9002a028:	eeb0 0a48 	vmov.f32	s0, s16
9002a02c:	ecbd 8b02 	vpop	{d8}
9002a030:	6004      	str	r4, [r0, #0]
9002a032:	bd10      	pop	{r4, pc}

9002a034 <__math_invalidf>:
9002a034:	eef0 7a40 	vmov.f32	s15, s0
9002a038:	ee30 7a40 	vsub.f32	s14, s0, s0
9002a03c:	eef4 7a67 	vcmp.f32	s15, s15
9002a040:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002a044:	ee87 0a07 	vdiv.f32	s0, s14, s14
9002a048:	d602      	bvs.n	9002a050 <__math_invalidf+0x1c>
9002a04a:	2021      	movs	r0, #33	@ 0x21
9002a04c:	f7ff bfe4 	b.w	9002a018 <with_errnof>
9002a050:	4770      	bx	lr

9002a052 <__ieee754_sqrtf>:
9002a052:	eeb1 0ac0 	vsqrt.f32	s0, s0
9002a056:	4770      	bx	lr

9002a058 <__ieee754_atan2f>:
9002a058:	ee10 2a90 	vmov	r2, s1
9002a05c:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
9002a060:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
9002a064:	b510      	push	{r4, lr}
9002a066:	eef0 7a40 	vmov.f32	s15, s0
9002a06a:	d806      	bhi.n	9002a07a <__ieee754_atan2f+0x22>
9002a06c:	ee10 0a10 	vmov	r0, s0
9002a070:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
9002a074:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
9002a078:	d904      	bls.n	9002a084 <__ieee754_atan2f+0x2c>
9002a07a:	ee77 7aa0 	vadd.f32	s15, s15, s1
9002a07e:	eeb0 0a67 	vmov.f32	s0, s15
9002a082:	bd10      	pop	{r4, pc}
9002a084:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
9002a088:	d103      	bne.n	9002a092 <__ieee754_atan2f+0x3a>
9002a08a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002a08e:	f000 b881 	b.w	9002a194 <atanf>
9002a092:	1794      	asrs	r4, r2, #30
9002a094:	f004 0402 	and.w	r4, r4, #2
9002a098:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
9002a09c:	b93b      	cbnz	r3, 9002a0ae <__ieee754_atan2f+0x56>
9002a09e:	2c02      	cmp	r4, #2
9002a0a0:	d05c      	beq.n	9002a15c <__ieee754_atan2f+0x104>
9002a0a2:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 9002a170 <__ieee754_atan2f+0x118>
9002a0a6:	2c03      	cmp	r4, #3
9002a0a8:	fe47 7a00 	vseleq.f32	s15, s14, s0
9002a0ac:	e7e7      	b.n	9002a07e <__ieee754_atan2f+0x26>
9002a0ae:	b939      	cbnz	r1, 9002a0c0 <__ieee754_atan2f+0x68>
9002a0b0:	eddf 7a30 	vldr	s15, [pc, #192]	@ 9002a174 <__ieee754_atan2f+0x11c>
9002a0b4:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 9002a178 <__ieee754_atan2f+0x120>
9002a0b8:	2800      	cmp	r0, #0
9002a0ba:	fe67 7a27 	vselge.f32	s15, s14, s15
9002a0be:	e7de      	b.n	9002a07e <__ieee754_atan2f+0x26>
9002a0c0:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
9002a0c4:	d110      	bne.n	9002a0e8 <__ieee754_atan2f+0x90>
9002a0c6:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
9002a0ca:	f104 34ff 	add.w	r4, r4, #4294967295
9002a0ce:	d107      	bne.n	9002a0e0 <__ieee754_atan2f+0x88>
9002a0d0:	2c02      	cmp	r4, #2
9002a0d2:	d846      	bhi.n	9002a162 <__ieee754_atan2f+0x10a>
9002a0d4:	4b29      	ldr	r3, [pc, #164]	@ (9002a17c <__ieee754_atan2f+0x124>)
9002a0d6:	eb03 0384 	add.w	r3, r3, r4, lsl #2
9002a0da:	edd3 7a00 	vldr	s15, [r3]
9002a0de:	e7ce      	b.n	9002a07e <__ieee754_atan2f+0x26>
9002a0e0:	2c02      	cmp	r4, #2
9002a0e2:	d841      	bhi.n	9002a168 <__ieee754_atan2f+0x110>
9002a0e4:	4b26      	ldr	r3, [pc, #152]	@ (9002a180 <__ieee754_atan2f+0x128>)
9002a0e6:	e7f6      	b.n	9002a0d6 <__ieee754_atan2f+0x7e>
9002a0e8:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
9002a0ec:	d0e0      	beq.n	9002a0b0 <__ieee754_atan2f+0x58>
9002a0ee:	1a5b      	subs	r3, r3, r1
9002a0f0:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
9002a0f4:	ea4f 51e3 	mov.w	r1, r3, asr #23
9002a0f8:	da1a      	bge.n	9002a130 <__ieee754_atan2f+0xd8>
9002a0fa:	2a00      	cmp	r2, #0
9002a0fc:	da01      	bge.n	9002a102 <__ieee754_atan2f+0xaa>
9002a0fe:	313c      	adds	r1, #60	@ 0x3c
9002a100:	db19      	blt.n	9002a136 <__ieee754_atan2f+0xde>
9002a102:	ee87 0aa0 	vdiv.f32	s0, s15, s1
9002a106:	f000 f919 	bl	9002a33c <fabsf>
9002a10a:	f000 f843 	bl	9002a194 <atanf>
9002a10e:	eef0 7a40 	vmov.f32	s15, s0
9002a112:	2c01      	cmp	r4, #1
9002a114:	d012      	beq.n	9002a13c <__ieee754_atan2f+0xe4>
9002a116:	2c02      	cmp	r4, #2
9002a118:	d017      	beq.n	9002a14a <__ieee754_atan2f+0xf2>
9002a11a:	2c00      	cmp	r4, #0
9002a11c:	d0af      	beq.n	9002a07e <__ieee754_atan2f+0x26>
9002a11e:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 9002a184 <__ieee754_atan2f+0x12c>
9002a122:	ee77 7a87 	vadd.f32	s15, s15, s14
9002a126:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 9002a188 <__ieee754_atan2f+0x130>
9002a12a:	ee77 7ac7 	vsub.f32	s15, s15, s14
9002a12e:	e7a6      	b.n	9002a07e <__ieee754_atan2f+0x26>
9002a130:	eddf 7a11 	vldr	s15, [pc, #68]	@ 9002a178 <__ieee754_atan2f+0x120>
9002a134:	e7ed      	b.n	9002a112 <__ieee754_atan2f+0xba>
9002a136:	eddf 7a15 	vldr	s15, [pc, #84]	@ 9002a18c <__ieee754_atan2f+0x134>
9002a13a:	e7ea      	b.n	9002a112 <__ieee754_atan2f+0xba>
9002a13c:	ee17 3a90 	vmov	r3, s15
9002a140:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
9002a144:	ee07 3a90 	vmov	s15, r3
9002a148:	e799      	b.n	9002a07e <__ieee754_atan2f+0x26>
9002a14a:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 9002a184 <__ieee754_atan2f+0x12c>
9002a14e:	ee77 7a87 	vadd.f32	s15, s15, s14
9002a152:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 9002a188 <__ieee754_atan2f+0x130>
9002a156:	ee77 7a67 	vsub.f32	s15, s14, s15
9002a15a:	e790      	b.n	9002a07e <__ieee754_atan2f+0x26>
9002a15c:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 9002a188 <__ieee754_atan2f+0x130>
9002a160:	e78d      	b.n	9002a07e <__ieee754_atan2f+0x26>
9002a162:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 9002a190 <__ieee754_atan2f+0x138>
9002a166:	e78a      	b.n	9002a07e <__ieee754_atan2f+0x26>
9002a168:	eddf 7a08 	vldr	s15, [pc, #32]	@ 9002a18c <__ieee754_atan2f+0x134>
9002a16c:	e787      	b.n	9002a07e <__ieee754_atan2f+0x26>
9002a16e:	bf00      	nop
9002a170:	c0490fdb 	.word	0xc0490fdb
9002a174:	bfc90fdb 	.word	0xbfc90fdb
9002a178:	3fc90fdb 	.word	0x3fc90fdb
9002a17c:	9002e80c 	.word	0x9002e80c
9002a180:	9002e800 	.word	0x9002e800
9002a184:	33bbbd2e 	.word	0x33bbbd2e
9002a188:	40490fdb 	.word	0x40490fdb
9002a18c:	00000000 	.word	0x00000000
9002a190:	3f490fdb 	.word	0x3f490fdb

9002a194 <atanf>:
9002a194:	b538      	push	{r3, r4, r5, lr}
9002a196:	ee10 5a10 	vmov	r5, s0
9002a19a:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
9002a19e:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
9002a1a2:	eef0 7a40 	vmov.f32	s15, s0
9002a1a6:	d30f      	bcc.n	9002a1c8 <atanf+0x34>
9002a1a8:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
9002a1ac:	d904      	bls.n	9002a1b8 <atanf+0x24>
9002a1ae:	ee70 7a00 	vadd.f32	s15, s0, s0
9002a1b2:	eeb0 0a67 	vmov.f32	s0, s15
9002a1b6:	bd38      	pop	{r3, r4, r5, pc}
9002a1b8:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 9002a2f0 <atanf+0x15c>
9002a1bc:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 9002a2f4 <atanf+0x160>
9002a1c0:	2d00      	cmp	r5, #0
9002a1c2:	fe77 7a27 	vselgt.f32	s15, s14, s15
9002a1c6:	e7f4      	b.n	9002a1b2 <atanf+0x1e>
9002a1c8:	4b4b      	ldr	r3, [pc, #300]	@ (9002a2f8 <atanf+0x164>)
9002a1ca:	429c      	cmp	r4, r3
9002a1cc:	d810      	bhi.n	9002a1f0 <atanf+0x5c>
9002a1ce:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
9002a1d2:	d20a      	bcs.n	9002a1ea <atanf+0x56>
9002a1d4:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 9002a2fc <atanf+0x168>
9002a1d8:	ee30 7a07 	vadd.f32	s14, s0, s14
9002a1dc:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9002a1e0:	eeb4 7ae6 	vcmpe.f32	s14, s13
9002a1e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002a1e8:	dce3      	bgt.n	9002a1b2 <atanf+0x1e>
9002a1ea:	f04f 33ff 	mov.w	r3, #4294967295
9002a1ee:	e013      	b.n	9002a218 <atanf+0x84>
9002a1f0:	f000 f8a4 	bl	9002a33c <fabsf>
9002a1f4:	4b42      	ldr	r3, [pc, #264]	@ (9002a300 <atanf+0x16c>)
9002a1f6:	429c      	cmp	r4, r3
9002a1f8:	d84f      	bhi.n	9002a29a <atanf+0x106>
9002a1fa:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
9002a1fe:	429c      	cmp	r4, r3
9002a200:	d841      	bhi.n	9002a286 <atanf+0xf2>
9002a202:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
9002a206:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
9002a20a:	eea0 7a27 	vfma.f32	s14, s0, s15
9002a20e:	2300      	movs	r3, #0
9002a210:	ee30 0a27 	vadd.f32	s0, s0, s15
9002a214:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002a218:	1c5a      	adds	r2, r3, #1
9002a21a:	ee27 6aa7 	vmul.f32	s12, s15, s15
9002a21e:	ed9f 7a39 	vldr	s14, [pc, #228]	@ 9002a304 <atanf+0x170>
9002a222:	eddf 5a39 	vldr	s11, [pc, #228]	@ 9002a308 <atanf+0x174>
9002a226:	ed9f 5a39 	vldr	s10, [pc, #228]	@ 9002a30c <atanf+0x178>
9002a22a:	ee66 6a06 	vmul.f32	s13, s12, s12
9002a22e:	eee6 5a87 	vfma.f32	s11, s13, s14
9002a232:	ed9f 7a37 	vldr	s14, [pc, #220]	@ 9002a310 <atanf+0x17c>
9002a236:	eea5 7aa6 	vfma.f32	s14, s11, s13
9002a23a:	eddf 5a36 	vldr	s11, [pc, #216]	@ 9002a314 <atanf+0x180>
9002a23e:	eee7 5a26 	vfma.f32	s11, s14, s13
9002a242:	ed9f 7a35 	vldr	s14, [pc, #212]	@ 9002a318 <atanf+0x184>
9002a246:	eea5 7aa6 	vfma.f32	s14, s11, s13
9002a24a:	eddf 5a34 	vldr	s11, [pc, #208]	@ 9002a31c <atanf+0x188>
9002a24e:	eee7 5a26 	vfma.f32	s11, s14, s13
9002a252:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 9002a320 <atanf+0x18c>
9002a256:	eea6 5a87 	vfma.f32	s10, s13, s14
9002a25a:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 9002a324 <atanf+0x190>
9002a25e:	eea5 7a26 	vfma.f32	s14, s10, s13
9002a262:	ed9f 5a31 	vldr	s10, [pc, #196]	@ 9002a328 <atanf+0x194>
9002a266:	eea7 5a26 	vfma.f32	s10, s14, s13
9002a26a:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 9002a32c <atanf+0x198>
9002a26e:	eea5 7a26 	vfma.f32	s14, s10, s13
9002a272:	ee27 7a26 	vmul.f32	s14, s14, s13
9002a276:	eea5 7a86 	vfma.f32	s14, s11, s12
9002a27a:	ee27 7a87 	vmul.f32	s14, s15, s14
9002a27e:	d121      	bne.n	9002a2c4 <atanf+0x130>
9002a280:	ee77 7ac7 	vsub.f32	s15, s15, s14
9002a284:	e795      	b.n	9002a1b2 <atanf+0x1e>
9002a286:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
9002a28a:	ee30 7a67 	vsub.f32	s14, s0, s15
9002a28e:	ee30 0a27 	vadd.f32	s0, s0, s15
9002a292:	2301      	movs	r3, #1
9002a294:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002a298:	e7be      	b.n	9002a218 <atanf+0x84>
9002a29a:	4b25      	ldr	r3, [pc, #148]	@ (9002a330 <atanf+0x19c>)
9002a29c:	429c      	cmp	r4, r3
9002a29e:	d80b      	bhi.n	9002a2b8 <atanf+0x124>
9002a2a0:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
9002a2a4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002a2a8:	eea0 7a27 	vfma.f32	s14, s0, s15
9002a2ac:	2302      	movs	r3, #2
9002a2ae:	ee70 6a67 	vsub.f32	s13, s0, s15
9002a2b2:	eec6 7a87 	vdiv.f32	s15, s13, s14
9002a2b6:	e7af      	b.n	9002a218 <atanf+0x84>
9002a2b8:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
9002a2bc:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002a2c0:	2303      	movs	r3, #3
9002a2c2:	e7a9      	b.n	9002a218 <atanf+0x84>
9002a2c4:	4a1b      	ldr	r2, [pc, #108]	@ (9002a334 <atanf+0x1a0>)
9002a2c6:	491c      	ldr	r1, [pc, #112]	@ (9002a338 <atanf+0x1a4>)
9002a2c8:	eb02 0283 	add.w	r2, r2, r3, lsl #2
9002a2cc:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9002a2d0:	edd3 6a00 	vldr	s13, [r3]
9002a2d4:	ee37 7a66 	vsub.f32	s14, s14, s13
9002a2d8:	2d00      	cmp	r5, #0
9002a2da:	ee37 7a67 	vsub.f32	s14, s14, s15
9002a2de:	edd2 7a00 	vldr	s15, [r2]
9002a2e2:	ee77 7ac7 	vsub.f32	s15, s15, s14
9002a2e6:	bfb8      	it	lt
9002a2e8:	eef1 7a67 	vneglt.f32	s15, s15
9002a2ec:	e761      	b.n	9002a1b2 <atanf+0x1e>
9002a2ee:	bf00      	nop
9002a2f0:	bfc90fdb 	.word	0xbfc90fdb
9002a2f4:	3fc90fdb 	.word	0x3fc90fdb
9002a2f8:	3edfffff 	.word	0x3edfffff
9002a2fc:	7149f2ca 	.word	0x7149f2ca
9002a300:	3f97ffff 	.word	0x3f97ffff
9002a304:	3c8569d7 	.word	0x3c8569d7
9002a308:	3d4bda59 	.word	0x3d4bda59
9002a30c:	bd6ef16b 	.word	0xbd6ef16b
9002a310:	3d886b35 	.word	0x3d886b35
9002a314:	3dba2e6e 	.word	0x3dba2e6e
9002a318:	3e124925 	.word	0x3e124925
9002a31c:	3eaaaaab 	.word	0x3eaaaaab
9002a320:	bd15a221 	.word	0xbd15a221
9002a324:	bd9d8795 	.word	0xbd9d8795
9002a328:	bde38e38 	.word	0xbde38e38
9002a32c:	be4ccccd 	.word	0xbe4ccccd
9002a330:	401bffff 	.word	0x401bffff
9002a334:	9002e828 	.word	0x9002e828
9002a338:	9002e818 	.word	0x9002e818

9002a33c <fabsf>:
9002a33c:	ee10 3a10 	vmov	r3, s0
9002a340:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
9002a344:	ee00 3a10 	vmov	s0, r3
9002a348:	4770      	bx	lr

9002a34a <abort>:
9002a34a:	b508      	push	{r3, lr}
9002a34c:	2006      	movs	r0, #6
9002a34e:	f000 fae1 	bl	9002a914 <raise>
9002a352:	2001      	movs	r0, #1
9002a354:	f7da f9e4 	bl	90004720 <_exit>

9002a358 <__assert_func>:
9002a358:	b51f      	push	{r0, r1, r2, r3, r4, lr}
9002a35a:	4614      	mov	r4, r2
9002a35c:	461a      	mov	r2, r3
9002a35e:	4b09      	ldr	r3, [pc, #36]	@ (9002a384 <__assert_func+0x2c>)
9002a360:	681b      	ldr	r3, [r3, #0]
9002a362:	4605      	mov	r5, r0
9002a364:	68d8      	ldr	r0, [r3, #12]
9002a366:	b14c      	cbz	r4, 9002a37c <__assert_func+0x24>
9002a368:	4b07      	ldr	r3, [pc, #28]	@ (9002a388 <__assert_func+0x30>)
9002a36a:	9100      	str	r1, [sp, #0]
9002a36c:	e9cd 3401 	strd	r3, r4, [sp, #4]
9002a370:	4906      	ldr	r1, [pc, #24]	@ (9002a38c <__assert_func+0x34>)
9002a372:	462b      	mov	r3, r5
9002a374:	f000 f984 	bl	9002a680 <fiprintf>
9002a378:	f7ff ffe7 	bl	9002a34a <abort>
9002a37c:	4b04      	ldr	r3, [pc, #16]	@ (9002a390 <__assert_func+0x38>)
9002a37e:	461c      	mov	r4, r3
9002a380:	e7f3      	b.n	9002a36a <__assert_func+0x12>
9002a382:	bf00      	nop
9002a384:	24000114 	.word	0x24000114
9002a388:	9002e838 	.word	0x9002e838
9002a38c:	9002e845 	.word	0x9002e845
9002a390:	9002e873 	.word	0x9002e873

9002a394 <atexit>:
9002a394:	2300      	movs	r3, #0
9002a396:	4601      	mov	r1, r0
9002a398:	461a      	mov	r2, r3
9002a39a:	4618      	mov	r0, r3
9002a39c:	f000 bbc6 	b.w	9002ab2c <__register_exitproc>

9002a3a0 <malloc>:
9002a3a0:	4b02      	ldr	r3, [pc, #8]	@ (9002a3ac <malloc+0xc>)
9002a3a2:	4601      	mov	r1, r0
9002a3a4:	6818      	ldr	r0, [r3, #0]
9002a3a6:	f000 b82d 	b.w	9002a404 <_malloc_r>
9002a3aa:	bf00      	nop
9002a3ac:	24000114 	.word	0x24000114

9002a3b0 <free>:
9002a3b0:	4b02      	ldr	r3, [pc, #8]	@ (9002a3bc <free+0xc>)
9002a3b2:	4601      	mov	r1, r0
9002a3b4:	6818      	ldr	r0, [r3, #0]
9002a3b6:	f000 bc15 	b.w	9002abe4 <_free_r>
9002a3ba:	bf00      	nop
9002a3bc:	24000114 	.word	0x24000114

9002a3c0 <sbrk_aligned>:
9002a3c0:	b570      	push	{r4, r5, r6, lr}
9002a3c2:	4e0f      	ldr	r6, [pc, #60]	@ (9002a400 <sbrk_aligned+0x40>)
9002a3c4:	460c      	mov	r4, r1
9002a3c6:	6831      	ldr	r1, [r6, #0]
9002a3c8:	4605      	mov	r5, r0
9002a3ca:	b911      	cbnz	r1, 9002a3d2 <sbrk_aligned+0x12>
9002a3cc:	f000 fb50 	bl	9002aa70 <_sbrk_r>
9002a3d0:	6030      	str	r0, [r6, #0]
9002a3d2:	4621      	mov	r1, r4
9002a3d4:	4628      	mov	r0, r5
9002a3d6:	f000 fb4b 	bl	9002aa70 <_sbrk_r>
9002a3da:	1c43      	adds	r3, r0, #1
9002a3dc:	d103      	bne.n	9002a3e6 <sbrk_aligned+0x26>
9002a3de:	f04f 34ff 	mov.w	r4, #4294967295
9002a3e2:	4620      	mov	r0, r4
9002a3e4:	bd70      	pop	{r4, r5, r6, pc}
9002a3e6:	1cc4      	adds	r4, r0, #3
9002a3e8:	f024 0403 	bic.w	r4, r4, #3
9002a3ec:	42a0      	cmp	r0, r4
9002a3ee:	d0f8      	beq.n	9002a3e2 <sbrk_aligned+0x22>
9002a3f0:	1a21      	subs	r1, r4, r0
9002a3f2:	4628      	mov	r0, r5
9002a3f4:	f000 fb3c 	bl	9002aa70 <_sbrk_r>
9002a3f8:	3001      	adds	r0, #1
9002a3fa:	d1f2      	bne.n	9002a3e2 <sbrk_aligned+0x22>
9002a3fc:	e7ef      	b.n	9002a3de <sbrk_aligned+0x1e>
9002a3fe:	bf00      	nop
9002a400:	240222c0 	.word	0x240222c0

9002a404 <_malloc_r>:
9002a404:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002a408:	1ccd      	adds	r5, r1, #3
9002a40a:	f025 0503 	bic.w	r5, r5, #3
9002a40e:	3508      	adds	r5, #8
9002a410:	2d0c      	cmp	r5, #12
9002a412:	bf38      	it	cc
9002a414:	250c      	movcc	r5, #12
9002a416:	2d00      	cmp	r5, #0
9002a418:	4606      	mov	r6, r0
9002a41a:	db01      	blt.n	9002a420 <_malloc_r+0x1c>
9002a41c:	42a9      	cmp	r1, r5
9002a41e:	d904      	bls.n	9002a42a <_malloc_r+0x26>
9002a420:	230c      	movs	r3, #12
9002a422:	6033      	str	r3, [r6, #0]
9002a424:	2000      	movs	r0, #0
9002a426:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002a42a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 9002a500 <_malloc_r+0xfc>
9002a42e:	f000 f869 	bl	9002a504 <__malloc_lock>
9002a432:	f8d8 3000 	ldr.w	r3, [r8]
9002a436:	461c      	mov	r4, r3
9002a438:	bb44      	cbnz	r4, 9002a48c <_malloc_r+0x88>
9002a43a:	4629      	mov	r1, r5
9002a43c:	4630      	mov	r0, r6
9002a43e:	f7ff ffbf 	bl	9002a3c0 <sbrk_aligned>
9002a442:	1c43      	adds	r3, r0, #1
9002a444:	4604      	mov	r4, r0
9002a446:	d158      	bne.n	9002a4fa <_malloc_r+0xf6>
9002a448:	f8d8 4000 	ldr.w	r4, [r8]
9002a44c:	4627      	mov	r7, r4
9002a44e:	2f00      	cmp	r7, #0
9002a450:	d143      	bne.n	9002a4da <_malloc_r+0xd6>
9002a452:	2c00      	cmp	r4, #0
9002a454:	d04b      	beq.n	9002a4ee <_malloc_r+0xea>
9002a456:	6823      	ldr	r3, [r4, #0]
9002a458:	4639      	mov	r1, r7
9002a45a:	4630      	mov	r0, r6
9002a45c:	eb04 0903 	add.w	r9, r4, r3
9002a460:	f000 fb06 	bl	9002aa70 <_sbrk_r>
9002a464:	4581      	cmp	r9, r0
9002a466:	d142      	bne.n	9002a4ee <_malloc_r+0xea>
9002a468:	6821      	ldr	r1, [r4, #0]
9002a46a:	1a6d      	subs	r5, r5, r1
9002a46c:	4629      	mov	r1, r5
9002a46e:	4630      	mov	r0, r6
9002a470:	f7ff ffa6 	bl	9002a3c0 <sbrk_aligned>
9002a474:	3001      	adds	r0, #1
9002a476:	d03a      	beq.n	9002a4ee <_malloc_r+0xea>
9002a478:	6823      	ldr	r3, [r4, #0]
9002a47a:	442b      	add	r3, r5
9002a47c:	6023      	str	r3, [r4, #0]
9002a47e:	f8d8 3000 	ldr.w	r3, [r8]
9002a482:	685a      	ldr	r2, [r3, #4]
9002a484:	bb62      	cbnz	r2, 9002a4e0 <_malloc_r+0xdc>
9002a486:	f8c8 7000 	str.w	r7, [r8]
9002a48a:	e00f      	b.n	9002a4ac <_malloc_r+0xa8>
9002a48c:	6822      	ldr	r2, [r4, #0]
9002a48e:	1b52      	subs	r2, r2, r5
9002a490:	d420      	bmi.n	9002a4d4 <_malloc_r+0xd0>
9002a492:	2a0b      	cmp	r2, #11
9002a494:	d917      	bls.n	9002a4c6 <_malloc_r+0xc2>
9002a496:	1961      	adds	r1, r4, r5
9002a498:	42a3      	cmp	r3, r4
9002a49a:	6025      	str	r5, [r4, #0]
9002a49c:	bf18      	it	ne
9002a49e:	6059      	strne	r1, [r3, #4]
9002a4a0:	6863      	ldr	r3, [r4, #4]
9002a4a2:	bf08      	it	eq
9002a4a4:	f8c8 1000 	streq.w	r1, [r8]
9002a4a8:	5162      	str	r2, [r4, r5]
9002a4aa:	604b      	str	r3, [r1, #4]
9002a4ac:	4630      	mov	r0, r6
9002a4ae:	f000 f82f 	bl	9002a510 <__malloc_unlock>
9002a4b2:	f104 000b 	add.w	r0, r4, #11
9002a4b6:	1d23      	adds	r3, r4, #4
9002a4b8:	f020 0007 	bic.w	r0, r0, #7
9002a4bc:	1ac2      	subs	r2, r0, r3
9002a4be:	bf1c      	itt	ne
9002a4c0:	1a1b      	subne	r3, r3, r0
9002a4c2:	50a3      	strne	r3, [r4, r2]
9002a4c4:	e7af      	b.n	9002a426 <_malloc_r+0x22>
9002a4c6:	6862      	ldr	r2, [r4, #4]
9002a4c8:	42a3      	cmp	r3, r4
9002a4ca:	bf0c      	ite	eq
9002a4cc:	f8c8 2000 	streq.w	r2, [r8]
9002a4d0:	605a      	strne	r2, [r3, #4]
9002a4d2:	e7eb      	b.n	9002a4ac <_malloc_r+0xa8>
9002a4d4:	4623      	mov	r3, r4
9002a4d6:	6864      	ldr	r4, [r4, #4]
9002a4d8:	e7ae      	b.n	9002a438 <_malloc_r+0x34>
9002a4da:	463c      	mov	r4, r7
9002a4dc:	687f      	ldr	r7, [r7, #4]
9002a4de:	e7b6      	b.n	9002a44e <_malloc_r+0x4a>
9002a4e0:	461a      	mov	r2, r3
9002a4e2:	685b      	ldr	r3, [r3, #4]
9002a4e4:	42a3      	cmp	r3, r4
9002a4e6:	d1fb      	bne.n	9002a4e0 <_malloc_r+0xdc>
9002a4e8:	2300      	movs	r3, #0
9002a4ea:	6053      	str	r3, [r2, #4]
9002a4ec:	e7de      	b.n	9002a4ac <_malloc_r+0xa8>
9002a4ee:	230c      	movs	r3, #12
9002a4f0:	6033      	str	r3, [r6, #0]
9002a4f2:	4630      	mov	r0, r6
9002a4f4:	f000 f80c 	bl	9002a510 <__malloc_unlock>
9002a4f8:	e794      	b.n	9002a424 <_malloc_r+0x20>
9002a4fa:	6005      	str	r5, [r0, #0]
9002a4fc:	e7d6      	b.n	9002a4ac <_malloc_r+0xa8>
9002a4fe:	bf00      	nop
9002a500:	240222c4 	.word	0x240222c4

9002a504 <__malloc_lock>:
9002a504:	4801      	ldr	r0, [pc, #4]	@ (9002a50c <__malloc_lock+0x8>)
9002a506:	f000 bb00 	b.w	9002ab0a <__retarget_lock_acquire_recursive>
9002a50a:	bf00      	nop
9002a50c:	24022408 	.word	0x24022408

9002a510 <__malloc_unlock>:
9002a510:	4801      	ldr	r0, [pc, #4]	@ (9002a518 <__malloc_unlock+0x8>)
9002a512:	f000 bafb 	b.w	9002ab0c <__retarget_lock_release_recursive>
9002a516:	bf00      	nop
9002a518:	24022408 	.word	0x24022408

9002a51c <__cxa_atexit>:
9002a51c:	b510      	push	{r4, lr}
9002a51e:	4604      	mov	r4, r0
9002a520:	4804      	ldr	r0, [pc, #16]	@ (9002a534 <__cxa_atexit+0x18>)
9002a522:	4613      	mov	r3, r2
9002a524:	b120      	cbz	r0, 9002a530 <__cxa_atexit+0x14>
9002a526:	460a      	mov	r2, r1
9002a528:	2002      	movs	r0, #2
9002a52a:	4621      	mov	r1, r4
9002a52c:	f000 fafe 	bl	9002ab2c <__register_exitproc>
9002a530:	bd10      	pop	{r4, pc}
9002a532:	bf00      	nop
9002a534:	9002ab2d 	.word	0x9002ab2d

9002a538 <std>:
9002a538:	2300      	movs	r3, #0
9002a53a:	b510      	push	{r4, lr}
9002a53c:	4604      	mov	r4, r0
9002a53e:	e9c0 3300 	strd	r3, r3, [r0]
9002a542:	e9c0 3304 	strd	r3, r3, [r0, #16]
9002a546:	6083      	str	r3, [r0, #8]
9002a548:	8181      	strh	r1, [r0, #12]
9002a54a:	6643      	str	r3, [r0, #100]	@ 0x64
9002a54c:	81c2      	strh	r2, [r0, #14]
9002a54e:	6183      	str	r3, [r0, #24]
9002a550:	4619      	mov	r1, r3
9002a552:	2208      	movs	r2, #8
9002a554:	305c      	adds	r0, #92	@ 0x5c
9002a556:	f000 f99b 	bl	9002a890 <memset>
9002a55a:	4b0d      	ldr	r3, [pc, #52]	@ (9002a590 <std+0x58>)
9002a55c:	6263      	str	r3, [r4, #36]	@ 0x24
9002a55e:	4b0d      	ldr	r3, [pc, #52]	@ (9002a594 <std+0x5c>)
9002a560:	62a3      	str	r3, [r4, #40]	@ 0x28
9002a562:	4b0d      	ldr	r3, [pc, #52]	@ (9002a598 <std+0x60>)
9002a564:	62e3      	str	r3, [r4, #44]	@ 0x2c
9002a566:	4b0d      	ldr	r3, [pc, #52]	@ (9002a59c <std+0x64>)
9002a568:	6323      	str	r3, [r4, #48]	@ 0x30
9002a56a:	4b0d      	ldr	r3, [pc, #52]	@ (9002a5a0 <std+0x68>)
9002a56c:	6224      	str	r4, [r4, #32]
9002a56e:	429c      	cmp	r4, r3
9002a570:	d006      	beq.n	9002a580 <std+0x48>
9002a572:	f103 0268 	add.w	r2, r3, #104	@ 0x68
9002a576:	4294      	cmp	r4, r2
9002a578:	d002      	beq.n	9002a580 <std+0x48>
9002a57a:	33d0      	adds	r3, #208	@ 0xd0
9002a57c:	429c      	cmp	r4, r3
9002a57e:	d105      	bne.n	9002a58c <std+0x54>
9002a580:	f104 0058 	add.w	r0, r4, #88	@ 0x58
9002a584:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002a588:	f000 babe 	b.w	9002ab08 <__retarget_lock_init_recursive>
9002a58c:	bd10      	pop	{r4, pc}
9002a58e:	bf00      	nop
9002a590:	9002a6e1 	.word	0x9002a6e1
9002a594:	9002a703 	.word	0x9002a703
9002a598:	9002a73b 	.word	0x9002a73b
9002a59c:	9002a75f 	.word	0x9002a75f
9002a5a0:	240222c8 	.word	0x240222c8

9002a5a4 <stdio_exit_handler>:
9002a5a4:	4a02      	ldr	r2, [pc, #8]	@ (9002a5b0 <stdio_exit_handler+0xc>)
9002a5a6:	4903      	ldr	r1, [pc, #12]	@ (9002a5b4 <stdio_exit_handler+0x10>)
9002a5a8:	4803      	ldr	r0, [pc, #12]	@ (9002a5b8 <stdio_exit_handler+0x14>)
9002a5aa:	f000 b87b 	b.w	9002a6a4 <_fwalk_sglue>
9002a5ae:	bf00      	nop
9002a5b0:	24000108 	.word	0x24000108
9002a5b4:	9002b31d 	.word	0x9002b31d
9002a5b8:	24000118 	.word	0x24000118

9002a5bc <cleanup_stdio>:
9002a5bc:	6841      	ldr	r1, [r0, #4]
9002a5be:	4b0c      	ldr	r3, [pc, #48]	@ (9002a5f0 <cleanup_stdio+0x34>)
9002a5c0:	4299      	cmp	r1, r3
9002a5c2:	b510      	push	{r4, lr}
9002a5c4:	4604      	mov	r4, r0
9002a5c6:	d001      	beq.n	9002a5cc <cleanup_stdio+0x10>
9002a5c8:	f000 fea8 	bl	9002b31c <_fflush_r>
9002a5cc:	68a1      	ldr	r1, [r4, #8]
9002a5ce:	4b09      	ldr	r3, [pc, #36]	@ (9002a5f4 <cleanup_stdio+0x38>)
9002a5d0:	4299      	cmp	r1, r3
9002a5d2:	d002      	beq.n	9002a5da <cleanup_stdio+0x1e>
9002a5d4:	4620      	mov	r0, r4
9002a5d6:	f000 fea1 	bl	9002b31c <_fflush_r>
9002a5da:	68e1      	ldr	r1, [r4, #12]
9002a5dc:	4b06      	ldr	r3, [pc, #24]	@ (9002a5f8 <cleanup_stdio+0x3c>)
9002a5de:	4299      	cmp	r1, r3
9002a5e0:	d004      	beq.n	9002a5ec <cleanup_stdio+0x30>
9002a5e2:	4620      	mov	r0, r4
9002a5e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002a5e8:	f000 be98 	b.w	9002b31c <_fflush_r>
9002a5ec:	bd10      	pop	{r4, pc}
9002a5ee:	bf00      	nop
9002a5f0:	240222c8 	.word	0x240222c8
9002a5f4:	24022330 	.word	0x24022330
9002a5f8:	24022398 	.word	0x24022398

9002a5fc <global_stdio_init.part.0>:
9002a5fc:	b510      	push	{r4, lr}
9002a5fe:	4b0b      	ldr	r3, [pc, #44]	@ (9002a62c <global_stdio_init.part.0+0x30>)
9002a600:	4c0b      	ldr	r4, [pc, #44]	@ (9002a630 <global_stdio_init.part.0+0x34>)
9002a602:	4a0c      	ldr	r2, [pc, #48]	@ (9002a634 <global_stdio_init.part.0+0x38>)
9002a604:	601a      	str	r2, [r3, #0]
9002a606:	4620      	mov	r0, r4
9002a608:	2200      	movs	r2, #0
9002a60a:	2104      	movs	r1, #4
9002a60c:	f7ff ff94 	bl	9002a538 <std>
9002a610:	f104 0068 	add.w	r0, r4, #104	@ 0x68
9002a614:	2201      	movs	r2, #1
9002a616:	2109      	movs	r1, #9
9002a618:	f7ff ff8e 	bl	9002a538 <std>
9002a61c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
9002a620:	2202      	movs	r2, #2
9002a622:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002a626:	2112      	movs	r1, #18
9002a628:	f7ff bf86 	b.w	9002a538 <std>
9002a62c:	24022400 	.word	0x24022400
9002a630:	240222c8 	.word	0x240222c8
9002a634:	9002a5a5 	.word	0x9002a5a5

9002a638 <__sfp_lock_acquire>:
9002a638:	4801      	ldr	r0, [pc, #4]	@ (9002a640 <__sfp_lock_acquire+0x8>)
9002a63a:	f000 ba66 	b.w	9002ab0a <__retarget_lock_acquire_recursive>
9002a63e:	bf00      	nop
9002a640:	2402240a 	.word	0x2402240a

9002a644 <__sfp_lock_release>:
9002a644:	4801      	ldr	r0, [pc, #4]	@ (9002a64c <__sfp_lock_release+0x8>)
9002a646:	f000 ba61 	b.w	9002ab0c <__retarget_lock_release_recursive>
9002a64a:	bf00      	nop
9002a64c:	2402240a 	.word	0x2402240a

9002a650 <__sinit>:
9002a650:	b510      	push	{r4, lr}
9002a652:	4604      	mov	r4, r0
9002a654:	f7ff fff0 	bl	9002a638 <__sfp_lock_acquire>
9002a658:	6a23      	ldr	r3, [r4, #32]
9002a65a:	b11b      	cbz	r3, 9002a664 <__sinit+0x14>
9002a65c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002a660:	f7ff bff0 	b.w	9002a644 <__sfp_lock_release>
9002a664:	4b04      	ldr	r3, [pc, #16]	@ (9002a678 <__sinit+0x28>)
9002a666:	6223      	str	r3, [r4, #32]
9002a668:	4b04      	ldr	r3, [pc, #16]	@ (9002a67c <__sinit+0x2c>)
9002a66a:	681b      	ldr	r3, [r3, #0]
9002a66c:	2b00      	cmp	r3, #0
9002a66e:	d1f5      	bne.n	9002a65c <__sinit+0xc>
9002a670:	f7ff ffc4 	bl	9002a5fc <global_stdio_init.part.0>
9002a674:	e7f2      	b.n	9002a65c <__sinit+0xc>
9002a676:	bf00      	nop
9002a678:	9002a5bd 	.word	0x9002a5bd
9002a67c:	24022400 	.word	0x24022400

9002a680 <fiprintf>:
9002a680:	b40e      	push	{r1, r2, r3}
9002a682:	b503      	push	{r0, r1, lr}
9002a684:	4601      	mov	r1, r0
9002a686:	ab03      	add	r3, sp, #12
9002a688:	4805      	ldr	r0, [pc, #20]	@ (9002a6a0 <fiprintf+0x20>)
9002a68a:	f853 2b04 	ldr.w	r2, [r3], #4
9002a68e:	6800      	ldr	r0, [r0, #0]
9002a690:	9301      	str	r3, [sp, #4]
9002a692:	f000 fb1b 	bl	9002accc <_vfiprintf_r>
9002a696:	b002      	add	sp, #8
9002a698:	f85d eb04 	ldr.w	lr, [sp], #4
9002a69c:	b003      	add	sp, #12
9002a69e:	4770      	bx	lr
9002a6a0:	24000114 	.word	0x24000114

9002a6a4 <_fwalk_sglue>:
9002a6a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002a6a8:	4607      	mov	r7, r0
9002a6aa:	4688      	mov	r8, r1
9002a6ac:	4614      	mov	r4, r2
9002a6ae:	2600      	movs	r6, #0
9002a6b0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
9002a6b4:	f1b9 0901 	subs.w	r9, r9, #1
9002a6b8:	d505      	bpl.n	9002a6c6 <_fwalk_sglue+0x22>
9002a6ba:	6824      	ldr	r4, [r4, #0]
9002a6bc:	2c00      	cmp	r4, #0
9002a6be:	d1f7      	bne.n	9002a6b0 <_fwalk_sglue+0xc>
9002a6c0:	4630      	mov	r0, r6
9002a6c2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002a6c6:	89ab      	ldrh	r3, [r5, #12]
9002a6c8:	2b01      	cmp	r3, #1
9002a6ca:	d907      	bls.n	9002a6dc <_fwalk_sglue+0x38>
9002a6cc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
9002a6d0:	3301      	adds	r3, #1
9002a6d2:	d003      	beq.n	9002a6dc <_fwalk_sglue+0x38>
9002a6d4:	4629      	mov	r1, r5
9002a6d6:	4638      	mov	r0, r7
9002a6d8:	47c0      	blx	r8
9002a6da:	4306      	orrs	r6, r0
9002a6dc:	3568      	adds	r5, #104	@ 0x68
9002a6de:	e7e9      	b.n	9002a6b4 <_fwalk_sglue+0x10>

9002a6e0 <__sread>:
9002a6e0:	b510      	push	{r4, lr}
9002a6e2:	460c      	mov	r4, r1
9002a6e4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002a6e8:	f000 f99c 	bl	9002aa24 <_read_r>
9002a6ec:	2800      	cmp	r0, #0
9002a6ee:	bfab      	itete	ge
9002a6f0:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
9002a6f2:	89a3      	ldrhlt	r3, [r4, #12]
9002a6f4:	181b      	addge	r3, r3, r0
9002a6f6:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
9002a6fa:	bfac      	ite	ge
9002a6fc:	6563      	strge	r3, [r4, #84]	@ 0x54
9002a6fe:	81a3      	strhlt	r3, [r4, #12]
9002a700:	bd10      	pop	{r4, pc}

9002a702 <__swrite>:
9002a702:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002a706:	461f      	mov	r7, r3
9002a708:	898b      	ldrh	r3, [r1, #12]
9002a70a:	05db      	lsls	r3, r3, #23
9002a70c:	4605      	mov	r5, r0
9002a70e:	460c      	mov	r4, r1
9002a710:	4616      	mov	r6, r2
9002a712:	d505      	bpl.n	9002a720 <__swrite+0x1e>
9002a714:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002a718:	2302      	movs	r3, #2
9002a71a:	2200      	movs	r2, #0
9002a71c:	f000 f970 	bl	9002aa00 <_lseek_r>
9002a720:	89a3      	ldrh	r3, [r4, #12]
9002a722:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002a726:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9002a72a:	81a3      	strh	r3, [r4, #12]
9002a72c:	4632      	mov	r2, r6
9002a72e:	463b      	mov	r3, r7
9002a730:	4628      	mov	r0, r5
9002a732:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
9002a736:	f000 b9ab 	b.w	9002aa90 <_write_r>

9002a73a <__sseek>:
9002a73a:	b510      	push	{r4, lr}
9002a73c:	460c      	mov	r4, r1
9002a73e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002a742:	f000 f95d 	bl	9002aa00 <_lseek_r>
9002a746:	1c43      	adds	r3, r0, #1
9002a748:	89a3      	ldrh	r3, [r4, #12]
9002a74a:	bf15      	itete	ne
9002a74c:	6560      	strne	r0, [r4, #84]	@ 0x54
9002a74e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
9002a752:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
9002a756:	81a3      	strheq	r3, [r4, #12]
9002a758:	bf18      	it	ne
9002a75a:	81a3      	strhne	r3, [r4, #12]
9002a75c:	bd10      	pop	{r4, pc}

9002a75e <__sclose>:
9002a75e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002a762:	f000 b8df 	b.w	9002a924 <_close_r>

9002a766 <__swbuf_r>:
9002a766:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002a768:	460e      	mov	r6, r1
9002a76a:	4614      	mov	r4, r2
9002a76c:	4605      	mov	r5, r0
9002a76e:	b118      	cbz	r0, 9002a778 <__swbuf_r+0x12>
9002a770:	6a03      	ldr	r3, [r0, #32]
9002a772:	b90b      	cbnz	r3, 9002a778 <__swbuf_r+0x12>
9002a774:	f7ff ff6c 	bl	9002a650 <__sinit>
9002a778:	69a3      	ldr	r3, [r4, #24]
9002a77a:	60a3      	str	r3, [r4, #8]
9002a77c:	89a3      	ldrh	r3, [r4, #12]
9002a77e:	071a      	lsls	r2, r3, #28
9002a780:	d501      	bpl.n	9002a786 <__swbuf_r+0x20>
9002a782:	6923      	ldr	r3, [r4, #16]
9002a784:	b943      	cbnz	r3, 9002a798 <__swbuf_r+0x32>
9002a786:	4621      	mov	r1, r4
9002a788:	4628      	mov	r0, r5
9002a78a:	f000 f82b 	bl	9002a7e4 <__swsetup_r>
9002a78e:	b118      	cbz	r0, 9002a798 <__swbuf_r+0x32>
9002a790:	f04f 37ff 	mov.w	r7, #4294967295
9002a794:	4638      	mov	r0, r7
9002a796:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9002a798:	6823      	ldr	r3, [r4, #0]
9002a79a:	6922      	ldr	r2, [r4, #16]
9002a79c:	1a98      	subs	r0, r3, r2
9002a79e:	6963      	ldr	r3, [r4, #20]
9002a7a0:	b2f6      	uxtb	r6, r6
9002a7a2:	4283      	cmp	r3, r0
9002a7a4:	4637      	mov	r7, r6
9002a7a6:	dc05      	bgt.n	9002a7b4 <__swbuf_r+0x4e>
9002a7a8:	4621      	mov	r1, r4
9002a7aa:	4628      	mov	r0, r5
9002a7ac:	f000 fdb6 	bl	9002b31c <_fflush_r>
9002a7b0:	2800      	cmp	r0, #0
9002a7b2:	d1ed      	bne.n	9002a790 <__swbuf_r+0x2a>
9002a7b4:	68a3      	ldr	r3, [r4, #8]
9002a7b6:	3b01      	subs	r3, #1
9002a7b8:	60a3      	str	r3, [r4, #8]
9002a7ba:	6823      	ldr	r3, [r4, #0]
9002a7bc:	1c5a      	adds	r2, r3, #1
9002a7be:	6022      	str	r2, [r4, #0]
9002a7c0:	701e      	strb	r6, [r3, #0]
9002a7c2:	6962      	ldr	r2, [r4, #20]
9002a7c4:	1c43      	adds	r3, r0, #1
9002a7c6:	429a      	cmp	r2, r3
9002a7c8:	d004      	beq.n	9002a7d4 <__swbuf_r+0x6e>
9002a7ca:	89a3      	ldrh	r3, [r4, #12]
9002a7cc:	07db      	lsls	r3, r3, #31
9002a7ce:	d5e1      	bpl.n	9002a794 <__swbuf_r+0x2e>
9002a7d0:	2e0a      	cmp	r6, #10
9002a7d2:	d1df      	bne.n	9002a794 <__swbuf_r+0x2e>
9002a7d4:	4621      	mov	r1, r4
9002a7d6:	4628      	mov	r0, r5
9002a7d8:	f000 fda0 	bl	9002b31c <_fflush_r>
9002a7dc:	2800      	cmp	r0, #0
9002a7de:	d0d9      	beq.n	9002a794 <__swbuf_r+0x2e>
9002a7e0:	e7d6      	b.n	9002a790 <__swbuf_r+0x2a>
	...

9002a7e4 <__swsetup_r>:
9002a7e4:	b538      	push	{r3, r4, r5, lr}
9002a7e6:	4b29      	ldr	r3, [pc, #164]	@ (9002a88c <__swsetup_r+0xa8>)
9002a7e8:	4605      	mov	r5, r0
9002a7ea:	6818      	ldr	r0, [r3, #0]
9002a7ec:	460c      	mov	r4, r1
9002a7ee:	b118      	cbz	r0, 9002a7f8 <__swsetup_r+0x14>
9002a7f0:	6a03      	ldr	r3, [r0, #32]
9002a7f2:	b90b      	cbnz	r3, 9002a7f8 <__swsetup_r+0x14>
9002a7f4:	f7ff ff2c 	bl	9002a650 <__sinit>
9002a7f8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002a7fc:	0719      	lsls	r1, r3, #28
9002a7fe:	d422      	bmi.n	9002a846 <__swsetup_r+0x62>
9002a800:	06da      	lsls	r2, r3, #27
9002a802:	d407      	bmi.n	9002a814 <__swsetup_r+0x30>
9002a804:	2209      	movs	r2, #9
9002a806:	602a      	str	r2, [r5, #0]
9002a808:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002a80c:	81a3      	strh	r3, [r4, #12]
9002a80e:	f04f 30ff 	mov.w	r0, #4294967295
9002a812:	e033      	b.n	9002a87c <__swsetup_r+0x98>
9002a814:	0758      	lsls	r0, r3, #29
9002a816:	d512      	bpl.n	9002a83e <__swsetup_r+0x5a>
9002a818:	6b61      	ldr	r1, [r4, #52]	@ 0x34
9002a81a:	b141      	cbz	r1, 9002a82e <__swsetup_r+0x4a>
9002a81c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
9002a820:	4299      	cmp	r1, r3
9002a822:	d002      	beq.n	9002a82a <__swsetup_r+0x46>
9002a824:	4628      	mov	r0, r5
9002a826:	f000 f9dd 	bl	9002abe4 <_free_r>
9002a82a:	2300      	movs	r3, #0
9002a82c:	6363      	str	r3, [r4, #52]	@ 0x34
9002a82e:	89a3      	ldrh	r3, [r4, #12]
9002a830:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
9002a834:	81a3      	strh	r3, [r4, #12]
9002a836:	2300      	movs	r3, #0
9002a838:	6063      	str	r3, [r4, #4]
9002a83a:	6923      	ldr	r3, [r4, #16]
9002a83c:	6023      	str	r3, [r4, #0]
9002a83e:	89a3      	ldrh	r3, [r4, #12]
9002a840:	f043 0308 	orr.w	r3, r3, #8
9002a844:	81a3      	strh	r3, [r4, #12]
9002a846:	6923      	ldr	r3, [r4, #16]
9002a848:	b94b      	cbnz	r3, 9002a85e <__swsetup_r+0x7a>
9002a84a:	89a3      	ldrh	r3, [r4, #12]
9002a84c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
9002a850:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
9002a854:	d003      	beq.n	9002a85e <__swsetup_r+0x7a>
9002a856:	4621      	mov	r1, r4
9002a858:	4628      	mov	r0, r5
9002a85a:	f000 fdad 	bl	9002b3b8 <__smakebuf_r>
9002a85e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002a862:	f013 0201 	ands.w	r2, r3, #1
9002a866:	d00a      	beq.n	9002a87e <__swsetup_r+0x9a>
9002a868:	2200      	movs	r2, #0
9002a86a:	60a2      	str	r2, [r4, #8]
9002a86c:	6962      	ldr	r2, [r4, #20]
9002a86e:	4252      	negs	r2, r2
9002a870:	61a2      	str	r2, [r4, #24]
9002a872:	6922      	ldr	r2, [r4, #16]
9002a874:	b942      	cbnz	r2, 9002a888 <__swsetup_r+0xa4>
9002a876:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
9002a87a:	d1c5      	bne.n	9002a808 <__swsetup_r+0x24>
9002a87c:	bd38      	pop	{r3, r4, r5, pc}
9002a87e:	0799      	lsls	r1, r3, #30
9002a880:	bf58      	it	pl
9002a882:	6962      	ldrpl	r2, [r4, #20]
9002a884:	60a2      	str	r2, [r4, #8]
9002a886:	e7f4      	b.n	9002a872 <__swsetup_r+0x8e>
9002a888:	2000      	movs	r0, #0
9002a88a:	e7f7      	b.n	9002a87c <__swsetup_r+0x98>
9002a88c:	24000114 	.word	0x24000114

9002a890 <memset>:
9002a890:	4402      	add	r2, r0
9002a892:	4603      	mov	r3, r0
9002a894:	4293      	cmp	r3, r2
9002a896:	d100      	bne.n	9002a89a <memset+0xa>
9002a898:	4770      	bx	lr
9002a89a:	f803 1b01 	strb.w	r1, [r3], #1
9002a89e:	e7f9      	b.n	9002a894 <memset+0x4>

9002a8a0 <strncmp>:
9002a8a0:	b510      	push	{r4, lr}
9002a8a2:	b16a      	cbz	r2, 9002a8c0 <strncmp+0x20>
9002a8a4:	3901      	subs	r1, #1
9002a8a6:	1884      	adds	r4, r0, r2
9002a8a8:	f810 2b01 	ldrb.w	r2, [r0], #1
9002a8ac:	f811 3f01 	ldrb.w	r3, [r1, #1]!
9002a8b0:	429a      	cmp	r2, r3
9002a8b2:	d103      	bne.n	9002a8bc <strncmp+0x1c>
9002a8b4:	42a0      	cmp	r0, r4
9002a8b6:	d001      	beq.n	9002a8bc <strncmp+0x1c>
9002a8b8:	2a00      	cmp	r2, #0
9002a8ba:	d1f5      	bne.n	9002a8a8 <strncmp+0x8>
9002a8bc:	1ad0      	subs	r0, r2, r3
9002a8be:	bd10      	pop	{r4, pc}
9002a8c0:	4610      	mov	r0, r2
9002a8c2:	e7fc      	b.n	9002a8be <strncmp+0x1e>

9002a8c4 <_raise_r>:
9002a8c4:	291f      	cmp	r1, #31
9002a8c6:	b538      	push	{r3, r4, r5, lr}
9002a8c8:	4605      	mov	r5, r0
9002a8ca:	460c      	mov	r4, r1
9002a8cc:	d904      	bls.n	9002a8d8 <_raise_r+0x14>
9002a8ce:	2316      	movs	r3, #22
9002a8d0:	6003      	str	r3, [r0, #0]
9002a8d2:	f04f 30ff 	mov.w	r0, #4294967295
9002a8d6:	bd38      	pop	{r3, r4, r5, pc}
9002a8d8:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
9002a8da:	b112      	cbz	r2, 9002a8e2 <_raise_r+0x1e>
9002a8dc:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
9002a8e0:	b94b      	cbnz	r3, 9002a8f6 <_raise_r+0x32>
9002a8e2:	4628      	mov	r0, r5
9002a8e4:	f000 f8c2 	bl	9002aa6c <_getpid_r>
9002a8e8:	4622      	mov	r2, r4
9002a8ea:	4601      	mov	r1, r0
9002a8ec:	4628      	mov	r0, r5
9002a8ee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002a8f2:	f000 b8a9 	b.w	9002aa48 <_kill_r>
9002a8f6:	2b01      	cmp	r3, #1
9002a8f8:	d00a      	beq.n	9002a910 <_raise_r+0x4c>
9002a8fa:	1c59      	adds	r1, r3, #1
9002a8fc:	d103      	bne.n	9002a906 <_raise_r+0x42>
9002a8fe:	2316      	movs	r3, #22
9002a900:	6003      	str	r3, [r0, #0]
9002a902:	2001      	movs	r0, #1
9002a904:	e7e7      	b.n	9002a8d6 <_raise_r+0x12>
9002a906:	2100      	movs	r1, #0
9002a908:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
9002a90c:	4620      	mov	r0, r4
9002a90e:	4798      	blx	r3
9002a910:	2000      	movs	r0, #0
9002a912:	e7e0      	b.n	9002a8d6 <_raise_r+0x12>

9002a914 <raise>:
9002a914:	4b02      	ldr	r3, [pc, #8]	@ (9002a920 <raise+0xc>)
9002a916:	4601      	mov	r1, r0
9002a918:	6818      	ldr	r0, [r3, #0]
9002a91a:	f7ff bfd3 	b.w	9002a8c4 <_raise_r>
9002a91e:	bf00      	nop
9002a920:	24000114 	.word	0x24000114

9002a924 <_close_r>:
9002a924:	b538      	push	{r3, r4, r5, lr}
9002a926:	4d06      	ldr	r5, [pc, #24]	@ (9002a940 <_close_r+0x1c>)
9002a928:	2300      	movs	r3, #0
9002a92a:	4604      	mov	r4, r0
9002a92c:	4608      	mov	r0, r1
9002a92e:	602b      	str	r3, [r5, #0]
9002a930:	f7d9 ff18 	bl	90004764 <_close>
9002a934:	1c43      	adds	r3, r0, #1
9002a936:	d102      	bne.n	9002a93e <_close_r+0x1a>
9002a938:	682b      	ldr	r3, [r5, #0]
9002a93a:	b103      	cbz	r3, 9002a93e <_close_r+0x1a>
9002a93c:	6023      	str	r3, [r4, #0]
9002a93e:	bd38      	pop	{r3, r4, r5, pc}
9002a940:	24022404 	.word	0x24022404

9002a944 <_reclaim_reent>:
9002a944:	4b2d      	ldr	r3, [pc, #180]	@ (9002a9fc <_reclaim_reent+0xb8>)
9002a946:	681b      	ldr	r3, [r3, #0]
9002a948:	4283      	cmp	r3, r0
9002a94a:	b570      	push	{r4, r5, r6, lr}
9002a94c:	4604      	mov	r4, r0
9002a94e:	d053      	beq.n	9002a9f8 <_reclaim_reent+0xb4>
9002a950:	69c3      	ldr	r3, [r0, #28]
9002a952:	b31b      	cbz	r3, 9002a99c <_reclaim_reent+0x58>
9002a954:	68db      	ldr	r3, [r3, #12]
9002a956:	b163      	cbz	r3, 9002a972 <_reclaim_reent+0x2e>
9002a958:	2500      	movs	r5, #0
9002a95a:	69e3      	ldr	r3, [r4, #28]
9002a95c:	68db      	ldr	r3, [r3, #12]
9002a95e:	5959      	ldr	r1, [r3, r5]
9002a960:	b9b1      	cbnz	r1, 9002a990 <_reclaim_reent+0x4c>
9002a962:	3504      	adds	r5, #4
9002a964:	2d80      	cmp	r5, #128	@ 0x80
9002a966:	d1f8      	bne.n	9002a95a <_reclaim_reent+0x16>
9002a968:	69e3      	ldr	r3, [r4, #28]
9002a96a:	4620      	mov	r0, r4
9002a96c:	68d9      	ldr	r1, [r3, #12]
9002a96e:	f000 f939 	bl	9002abe4 <_free_r>
9002a972:	69e3      	ldr	r3, [r4, #28]
9002a974:	6819      	ldr	r1, [r3, #0]
9002a976:	b111      	cbz	r1, 9002a97e <_reclaim_reent+0x3a>
9002a978:	4620      	mov	r0, r4
9002a97a:	f000 f933 	bl	9002abe4 <_free_r>
9002a97e:	69e3      	ldr	r3, [r4, #28]
9002a980:	689d      	ldr	r5, [r3, #8]
9002a982:	b15d      	cbz	r5, 9002a99c <_reclaim_reent+0x58>
9002a984:	4629      	mov	r1, r5
9002a986:	4620      	mov	r0, r4
9002a988:	682d      	ldr	r5, [r5, #0]
9002a98a:	f000 f92b 	bl	9002abe4 <_free_r>
9002a98e:	e7f8      	b.n	9002a982 <_reclaim_reent+0x3e>
9002a990:	680e      	ldr	r6, [r1, #0]
9002a992:	4620      	mov	r0, r4
9002a994:	f000 f926 	bl	9002abe4 <_free_r>
9002a998:	4631      	mov	r1, r6
9002a99a:	e7e1      	b.n	9002a960 <_reclaim_reent+0x1c>
9002a99c:	6961      	ldr	r1, [r4, #20]
9002a99e:	b111      	cbz	r1, 9002a9a6 <_reclaim_reent+0x62>
9002a9a0:	4620      	mov	r0, r4
9002a9a2:	f000 f91f 	bl	9002abe4 <_free_r>
9002a9a6:	69e1      	ldr	r1, [r4, #28]
9002a9a8:	b111      	cbz	r1, 9002a9b0 <_reclaim_reent+0x6c>
9002a9aa:	4620      	mov	r0, r4
9002a9ac:	f000 f91a 	bl	9002abe4 <_free_r>
9002a9b0:	6b21      	ldr	r1, [r4, #48]	@ 0x30
9002a9b2:	b111      	cbz	r1, 9002a9ba <_reclaim_reent+0x76>
9002a9b4:	4620      	mov	r0, r4
9002a9b6:	f000 f915 	bl	9002abe4 <_free_r>
9002a9ba:	6b61      	ldr	r1, [r4, #52]	@ 0x34
9002a9bc:	b111      	cbz	r1, 9002a9c4 <_reclaim_reent+0x80>
9002a9be:	4620      	mov	r0, r4
9002a9c0:	f000 f910 	bl	9002abe4 <_free_r>
9002a9c4:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
9002a9c6:	b111      	cbz	r1, 9002a9ce <_reclaim_reent+0x8a>
9002a9c8:	4620      	mov	r0, r4
9002a9ca:	f000 f90b 	bl	9002abe4 <_free_r>
9002a9ce:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9002a9d0:	b111      	cbz	r1, 9002a9d8 <_reclaim_reent+0x94>
9002a9d2:	4620      	mov	r0, r4
9002a9d4:	f000 f906 	bl	9002abe4 <_free_r>
9002a9d8:	6c61      	ldr	r1, [r4, #68]	@ 0x44
9002a9da:	b111      	cbz	r1, 9002a9e2 <_reclaim_reent+0x9e>
9002a9dc:	4620      	mov	r0, r4
9002a9de:	f000 f901 	bl	9002abe4 <_free_r>
9002a9e2:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
9002a9e4:	b111      	cbz	r1, 9002a9ec <_reclaim_reent+0xa8>
9002a9e6:	4620      	mov	r0, r4
9002a9e8:	f000 f8fc 	bl	9002abe4 <_free_r>
9002a9ec:	6a23      	ldr	r3, [r4, #32]
9002a9ee:	b11b      	cbz	r3, 9002a9f8 <_reclaim_reent+0xb4>
9002a9f0:	4620      	mov	r0, r4
9002a9f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9002a9f6:	4718      	bx	r3
9002a9f8:	bd70      	pop	{r4, r5, r6, pc}
9002a9fa:	bf00      	nop
9002a9fc:	24000114 	.word	0x24000114

9002aa00 <_lseek_r>:
9002aa00:	b538      	push	{r3, r4, r5, lr}
9002aa02:	4d07      	ldr	r5, [pc, #28]	@ (9002aa20 <_lseek_r+0x20>)
9002aa04:	4604      	mov	r4, r0
9002aa06:	4608      	mov	r0, r1
9002aa08:	4611      	mov	r1, r2
9002aa0a:	2200      	movs	r2, #0
9002aa0c:	602a      	str	r2, [r5, #0]
9002aa0e:	461a      	mov	r2, r3
9002aa10:	f7d9 feb4 	bl	9000477c <_lseek>
9002aa14:	1c43      	adds	r3, r0, #1
9002aa16:	d102      	bne.n	9002aa1e <_lseek_r+0x1e>
9002aa18:	682b      	ldr	r3, [r5, #0]
9002aa1a:	b103      	cbz	r3, 9002aa1e <_lseek_r+0x1e>
9002aa1c:	6023      	str	r3, [r4, #0]
9002aa1e:	bd38      	pop	{r3, r4, r5, pc}
9002aa20:	24022404 	.word	0x24022404

9002aa24 <_read_r>:
9002aa24:	b538      	push	{r3, r4, r5, lr}
9002aa26:	4d07      	ldr	r5, [pc, #28]	@ (9002aa44 <_read_r+0x20>)
9002aa28:	4604      	mov	r4, r0
9002aa2a:	4608      	mov	r0, r1
9002aa2c:	4611      	mov	r1, r2
9002aa2e:	2200      	movs	r2, #0
9002aa30:	602a      	str	r2, [r5, #0]
9002aa32:	461a      	mov	r2, r3
9002aa34:	f7d9 fe7a 	bl	9000472c <_read>
9002aa38:	1c43      	adds	r3, r0, #1
9002aa3a:	d102      	bne.n	9002aa42 <_read_r+0x1e>
9002aa3c:	682b      	ldr	r3, [r5, #0]
9002aa3e:	b103      	cbz	r3, 9002aa42 <_read_r+0x1e>
9002aa40:	6023      	str	r3, [r4, #0]
9002aa42:	bd38      	pop	{r3, r4, r5, pc}
9002aa44:	24022404 	.word	0x24022404

9002aa48 <_kill_r>:
9002aa48:	b538      	push	{r3, r4, r5, lr}
9002aa4a:	4d07      	ldr	r5, [pc, #28]	@ (9002aa68 <_kill_r+0x20>)
9002aa4c:	2300      	movs	r3, #0
9002aa4e:	4604      	mov	r4, r0
9002aa50:	4608      	mov	r0, r1
9002aa52:	4611      	mov	r1, r2
9002aa54:	602b      	str	r3, [r5, #0]
9002aa56:	f7d9 fe59 	bl	9000470c <_kill>
9002aa5a:	1c43      	adds	r3, r0, #1
9002aa5c:	d102      	bne.n	9002aa64 <_kill_r+0x1c>
9002aa5e:	682b      	ldr	r3, [r5, #0]
9002aa60:	b103      	cbz	r3, 9002aa64 <_kill_r+0x1c>
9002aa62:	6023      	str	r3, [r4, #0]
9002aa64:	bd38      	pop	{r3, r4, r5, pc}
9002aa66:	bf00      	nop
9002aa68:	24022404 	.word	0x24022404

9002aa6c <_getpid_r>:
9002aa6c:	f7d9 be4c 	b.w	90004708 <_getpid>

9002aa70 <_sbrk_r>:
9002aa70:	b538      	push	{r3, r4, r5, lr}
9002aa72:	4d06      	ldr	r5, [pc, #24]	@ (9002aa8c <_sbrk_r+0x1c>)
9002aa74:	2300      	movs	r3, #0
9002aa76:	4604      	mov	r4, r0
9002aa78:	4608      	mov	r0, r1
9002aa7a:	602b      	str	r3, [r5, #0]
9002aa7c:	f7d9 fe80 	bl	90004780 <_sbrk>
9002aa80:	1c43      	adds	r3, r0, #1
9002aa82:	d102      	bne.n	9002aa8a <_sbrk_r+0x1a>
9002aa84:	682b      	ldr	r3, [r5, #0]
9002aa86:	b103      	cbz	r3, 9002aa8a <_sbrk_r+0x1a>
9002aa88:	6023      	str	r3, [r4, #0]
9002aa8a:	bd38      	pop	{r3, r4, r5, pc}
9002aa8c:	24022404 	.word	0x24022404

9002aa90 <_write_r>:
9002aa90:	b538      	push	{r3, r4, r5, lr}
9002aa92:	4d07      	ldr	r5, [pc, #28]	@ (9002aab0 <_write_r+0x20>)
9002aa94:	4604      	mov	r4, r0
9002aa96:	4608      	mov	r0, r1
9002aa98:	4611      	mov	r1, r2
9002aa9a:	2200      	movs	r2, #0
9002aa9c:	602a      	str	r2, [r5, #0]
9002aa9e:	461a      	mov	r2, r3
9002aaa0:	f7d9 fe52 	bl	90004748 <_write>
9002aaa4:	1c43      	adds	r3, r0, #1
9002aaa6:	d102      	bne.n	9002aaae <_write_r+0x1e>
9002aaa8:	682b      	ldr	r3, [r5, #0]
9002aaaa:	b103      	cbz	r3, 9002aaae <_write_r+0x1e>
9002aaac:	6023      	str	r3, [r4, #0]
9002aaae:	bd38      	pop	{r3, r4, r5, pc}
9002aab0:	24022404 	.word	0x24022404

9002aab4 <__errno>:
9002aab4:	4b01      	ldr	r3, [pc, #4]	@ (9002aabc <__errno+0x8>)
9002aab6:	6818      	ldr	r0, [r3, #0]
9002aab8:	4770      	bx	lr
9002aaba:	bf00      	nop
9002aabc:	24000114 	.word	0x24000114

9002aac0 <__libc_init_array>:
9002aac0:	b570      	push	{r4, r5, r6, lr}
9002aac2:	4d0d      	ldr	r5, [pc, #52]	@ (9002aaf8 <__libc_init_array+0x38>)
9002aac4:	4c0d      	ldr	r4, [pc, #52]	@ (9002aafc <__libc_init_array+0x3c>)
9002aac6:	1b64      	subs	r4, r4, r5
9002aac8:	10a4      	asrs	r4, r4, #2
9002aaca:	2600      	movs	r6, #0
9002aacc:	42a6      	cmp	r6, r4
9002aace:	d109      	bne.n	9002aae4 <__libc_init_array+0x24>
9002aad0:	4d0b      	ldr	r5, [pc, #44]	@ (9002ab00 <__libc_init_array+0x40>)
9002aad2:	4c0c      	ldr	r4, [pc, #48]	@ (9002ab04 <__libc_init_array+0x44>)
9002aad4:	f000 fcce 	bl	9002b474 <_init>
9002aad8:	1b64      	subs	r4, r4, r5
9002aada:	10a4      	asrs	r4, r4, #2
9002aadc:	2600      	movs	r6, #0
9002aade:	42a6      	cmp	r6, r4
9002aae0:	d105      	bne.n	9002aaee <__libc_init_array+0x2e>
9002aae2:	bd70      	pop	{r4, r5, r6, pc}
9002aae4:	f855 3b04 	ldr.w	r3, [r5], #4
9002aae8:	4798      	blx	r3
9002aaea:	3601      	adds	r6, #1
9002aaec:	e7ee      	b.n	9002aacc <__libc_init_array+0xc>
9002aaee:	f855 3b04 	ldr.w	r3, [r5], #4
9002aaf2:	4798      	blx	r3
9002aaf4:	3601      	adds	r6, #1
9002aaf6:	e7f2      	b.n	9002aade <__libc_init_array+0x1e>
9002aaf8:	9002e904 	.word	0x9002e904
9002aafc:	9002e904 	.word	0x9002e904
9002ab00:	9002e904 	.word	0x9002e904
9002ab04:	9002e91c 	.word	0x9002e91c

9002ab08 <__retarget_lock_init_recursive>:
9002ab08:	4770      	bx	lr

9002ab0a <__retarget_lock_acquire_recursive>:
9002ab0a:	4770      	bx	lr

9002ab0c <__retarget_lock_release_recursive>:
9002ab0c:	4770      	bx	lr

9002ab0e <memcpy>:
9002ab0e:	440a      	add	r2, r1
9002ab10:	4291      	cmp	r1, r2
9002ab12:	f100 33ff 	add.w	r3, r0, #4294967295
9002ab16:	d100      	bne.n	9002ab1a <memcpy+0xc>
9002ab18:	4770      	bx	lr
9002ab1a:	b510      	push	{r4, lr}
9002ab1c:	f811 4b01 	ldrb.w	r4, [r1], #1
9002ab20:	f803 4f01 	strb.w	r4, [r3, #1]!
9002ab24:	4291      	cmp	r1, r2
9002ab26:	d1f9      	bne.n	9002ab1c <memcpy+0xe>
9002ab28:	bd10      	pop	{r4, pc}
	...

9002ab2c <__register_exitproc>:
9002ab2c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002ab30:	4d27      	ldr	r5, [pc, #156]	@ (9002abd0 <__register_exitproc+0xa4>)
9002ab32:	4607      	mov	r7, r0
9002ab34:	6828      	ldr	r0, [r5, #0]
9002ab36:	4691      	mov	r9, r2
9002ab38:	460e      	mov	r6, r1
9002ab3a:	4698      	mov	r8, r3
9002ab3c:	f7ff ffe5 	bl	9002ab0a <__retarget_lock_acquire_recursive>
9002ab40:	4a24      	ldr	r2, [pc, #144]	@ (9002abd4 <__register_exitproc+0xa8>)
9002ab42:	6814      	ldr	r4, [r2, #0]
9002ab44:	b93c      	cbnz	r4, 9002ab56 <__register_exitproc+0x2a>
9002ab46:	4b24      	ldr	r3, [pc, #144]	@ (9002abd8 <__register_exitproc+0xac>)
9002ab48:	6013      	str	r3, [r2, #0]
9002ab4a:	4a24      	ldr	r2, [pc, #144]	@ (9002abdc <__register_exitproc+0xb0>)
9002ab4c:	b112      	cbz	r2, 9002ab54 <__register_exitproc+0x28>
9002ab4e:	6812      	ldr	r2, [r2, #0]
9002ab50:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
9002ab54:	4c20      	ldr	r4, [pc, #128]	@ (9002abd8 <__register_exitproc+0xac>)
9002ab56:	6863      	ldr	r3, [r4, #4]
9002ab58:	2b1f      	cmp	r3, #31
9002ab5a:	dd06      	ble.n	9002ab6a <__register_exitproc+0x3e>
9002ab5c:	6828      	ldr	r0, [r5, #0]
9002ab5e:	f7ff ffd5 	bl	9002ab0c <__retarget_lock_release_recursive>
9002ab62:	f04f 30ff 	mov.w	r0, #4294967295
9002ab66:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002ab6a:	b32f      	cbz	r7, 9002abb8 <__register_exitproc+0x8c>
9002ab6c:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
9002ab70:	b968      	cbnz	r0, 9002ab8e <__register_exitproc+0x62>
9002ab72:	4b1b      	ldr	r3, [pc, #108]	@ (9002abe0 <__register_exitproc+0xb4>)
9002ab74:	2b00      	cmp	r3, #0
9002ab76:	d0f1      	beq.n	9002ab5c <__register_exitproc+0x30>
9002ab78:	f44f 7084 	mov.w	r0, #264	@ 0x108
9002ab7c:	f7ff fc10 	bl	9002a3a0 <malloc>
9002ab80:	2800      	cmp	r0, #0
9002ab82:	d0eb      	beq.n	9002ab5c <__register_exitproc+0x30>
9002ab84:	2300      	movs	r3, #0
9002ab86:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
9002ab8a:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
9002ab8e:	6863      	ldr	r3, [r4, #4]
9002ab90:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
9002ab94:	2201      	movs	r2, #1
9002ab96:	409a      	lsls	r2, r3
9002ab98:	eb00 0183 	add.w	r1, r0, r3, lsl #2
9002ab9c:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
9002aba0:	4313      	orrs	r3, r2
9002aba2:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
9002aba6:	2f02      	cmp	r7, #2
9002aba8:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
9002abac:	bf02      	ittt	eq
9002abae:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
9002abb2:	4313      	orreq	r3, r2
9002abb4:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
9002abb8:	6863      	ldr	r3, [r4, #4]
9002abba:	6828      	ldr	r0, [r5, #0]
9002abbc:	1c5a      	adds	r2, r3, #1
9002abbe:	3302      	adds	r3, #2
9002abc0:	6062      	str	r2, [r4, #4]
9002abc2:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
9002abc6:	f7ff ffa1 	bl	9002ab0c <__retarget_lock_release_recursive>
9002abca:	2000      	movs	r0, #0
9002abcc:	e7cb      	b.n	9002ab66 <__register_exitproc+0x3a>
9002abce:	bf00      	nop
9002abd0:	24000164 	.word	0x24000164
9002abd4:	24022498 	.word	0x24022498
9002abd8:	2402240c 	.word	0x2402240c
9002abdc:	9002e8a8 	.word	0x9002e8a8
9002abe0:	9002a3a1 	.word	0x9002a3a1

9002abe4 <_free_r>:
9002abe4:	b538      	push	{r3, r4, r5, lr}
9002abe6:	4605      	mov	r5, r0
9002abe8:	2900      	cmp	r1, #0
9002abea:	d041      	beq.n	9002ac70 <_free_r+0x8c>
9002abec:	f851 3c04 	ldr.w	r3, [r1, #-4]
9002abf0:	1f0c      	subs	r4, r1, #4
9002abf2:	2b00      	cmp	r3, #0
9002abf4:	bfb8      	it	lt
9002abf6:	18e4      	addlt	r4, r4, r3
9002abf8:	f7ff fc84 	bl	9002a504 <__malloc_lock>
9002abfc:	4a1d      	ldr	r2, [pc, #116]	@ (9002ac74 <_free_r+0x90>)
9002abfe:	6813      	ldr	r3, [r2, #0]
9002ac00:	b933      	cbnz	r3, 9002ac10 <_free_r+0x2c>
9002ac02:	6063      	str	r3, [r4, #4]
9002ac04:	6014      	str	r4, [r2, #0]
9002ac06:	4628      	mov	r0, r5
9002ac08:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002ac0c:	f7ff bc80 	b.w	9002a510 <__malloc_unlock>
9002ac10:	42a3      	cmp	r3, r4
9002ac12:	d908      	bls.n	9002ac26 <_free_r+0x42>
9002ac14:	6820      	ldr	r0, [r4, #0]
9002ac16:	1821      	adds	r1, r4, r0
9002ac18:	428b      	cmp	r3, r1
9002ac1a:	bf01      	itttt	eq
9002ac1c:	6819      	ldreq	r1, [r3, #0]
9002ac1e:	685b      	ldreq	r3, [r3, #4]
9002ac20:	1809      	addeq	r1, r1, r0
9002ac22:	6021      	streq	r1, [r4, #0]
9002ac24:	e7ed      	b.n	9002ac02 <_free_r+0x1e>
9002ac26:	461a      	mov	r2, r3
9002ac28:	685b      	ldr	r3, [r3, #4]
9002ac2a:	b10b      	cbz	r3, 9002ac30 <_free_r+0x4c>
9002ac2c:	42a3      	cmp	r3, r4
9002ac2e:	d9fa      	bls.n	9002ac26 <_free_r+0x42>
9002ac30:	6811      	ldr	r1, [r2, #0]
9002ac32:	1850      	adds	r0, r2, r1
9002ac34:	42a0      	cmp	r0, r4
9002ac36:	d10b      	bne.n	9002ac50 <_free_r+0x6c>
9002ac38:	6820      	ldr	r0, [r4, #0]
9002ac3a:	4401      	add	r1, r0
9002ac3c:	1850      	adds	r0, r2, r1
9002ac3e:	4283      	cmp	r3, r0
9002ac40:	6011      	str	r1, [r2, #0]
9002ac42:	d1e0      	bne.n	9002ac06 <_free_r+0x22>
9002ac44:	6818      	ldr	r0, [r3, #0]
9002ac46:	685b      	ldr	r3, [r3, #4]
9002ac48:	6053      	str	r3, [r2, #4]
9002ac4a:	4408      	add	r0, r1
9002ac4c:	6010      	str	r0, [r2, #0]
9002ac4e:	e7da      	b.n	9002ac06 <_free_r+0x22>
9002ac50:	d902      	bls.n	9002ac58 <_free_r+0x74>
9002ac52:	230c      	movs	r3, #12
9002ac54:	602b      	str	r3, [r5, #0]
9002ac56:	e7d6      	b.n	9002ac06 <_free_r+0x22>
9002ac58:	6820      	ldr	r0, [r4, #0]
9002ac5a:	1821      	adds	r1, r4, r0
9002ac5c:	428b      	cmp	r3, r1
9002ac5e:	bf04      	itt	eq
9002ac60:	6819      	ldreq	r1, [r3, #0]
9002ac62:	685b      	ldreq	r3, [r3, #4]
9002ac64:	6063      	str	r3, [r4, #4]
9002ac66:	bf04      	itt	eq
9002ac68:	1809      	addeq	r1, r1, r0
9002ac6a:	6021      	streq	r1, [r4, #0]
9002ac6c:	6054      	str	r4, [r2, #4]
9002ac6e:	e7ca      	b.n	9002ac06 <_free_r+0x22>
9002ac70:	bd38      	pop	{r3, r4, r5, pc}
9002ac72:	bf00      	nop
9002ac74:	240222c4 	.word	0x240222c4

9002ac78 <__sfputc_r>:
9002ac78:	6893      	ldr	r3, [r2, #8]
9002ac7a:	3b01      	subs	r3, #1
9002ac7c:	2b00      	cmp	r3, #0
9002ac7e:	b410      	push	{r4}
9002ac80:	6093      	str	r3, [r2, #8]
9002ac82:	da08      	bge.n	9002ac96 <__sfputc_r+0x1e>
9002ac84:	6994      	ldr	r4, [r2, #24]
9002ac86:	42a3      	cmp	r3, r4
9002ac88:	db01      	blt.n	9002ac8e <__sfputc_r+0x16>
9002ac8a:	290a      	cmp	r1, #10
9002ac8c:	d103      	bne.n	9002ac96 <__sfputc_r+0x1e>
9002ac8e:	f85d 4b04 	ldr.w	r4, [sp], #4
9002ac92:	f7ff bd68 	b.w	9002a766 <__swbuf_r>
9002ac96:	6813      	ldr	r3, [r2, #0]
9002ac98:	1c58      	adds	r0, r3, #1
9002ac9a:	6010      	str	r0, [r2, #0]
9002ac9c:	7019      	strb	r1, [r3, #0]
9002ac9e:	4608      	mov	r0, r1
9002aca0:	f85d 4b04 	ldr.w	r4, [sp], #4
9002aca4:	4770      	bx	lr

9002aca6 <__sfputs_r>:
9002aca6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002aca8:	4606      	mov	r6, r0
9002acaa:	460f      	mov	r7, r1
9002acac:	4614      	mov	r4, r2
9002acae:	18d5      	adds	r5, r2, r3
9002acb0:	42ac      	cmp	r4, r5
9002acb2:	d101      	bne.n	9002acb8 <__sfputs_r+0x12>
9002acb4:	2000      	movs	r0, #0
9002acb6:	e007      	b.n	9002acc8 <__sfputs_r+0x22>
9002acb8:	f814 1b01 	ldrb.w	r1, [r4], #1
9002acbc:	463a      	mov	r2, r7
9002acbe:	4630      	mov	r0, r6
9002acc0:	f7ff ffda 	bl	9002ac78 <__sfputc_r>
9002acc4:	1c43      	adds	r3, r0, #1
9002acc6:	d1f3      	bne.n	9002acb0 <__sfputs_r+0xa>
9002acc8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

9002accc <_vfiprintf_r>:
9002accc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002acd0:	460d      	mov	r5, r1
9002acd2:	b09d      	sub	sp, #116	@ 0x74
9002acd4:	4614      	mov	r4, r2
9002acd6:	4698      	mov	r8, r3
9002acd8:	4606      	mov	r6, r0
9002acda:	b118      	cbz	r0, 9002ace4 <_vfiprintf_r+0x18>
9002acdc:	6a03      	ldr	r3, [r0, #32]
9002acde:	b90b      	cbnz	r3, 9002ace4 <_vfiprintf_r+0x18>
9002ace0:	f7ff fcb6 	bl	9002a650 <__sinit>
9002ace4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002ace6:	07d9      	lsls	r1, r3, #31
9002ace8:	d405      	bmi.n	9002acf6 <_vfiprintf_r+0x2a>
9002acea:	89ab      	ldrh	r3, [r5, #12]
9002acec:	059a      	lsls	r2, r3, #22
9002acee:	d402      	bmi.n	9002acf6 <_vfiprintf_r+0x2a>
9002acf0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002acf2:	f7ff ff0a 	bl	9002ab0a <__retarget_lock_acquire_recursive>
9002acf6:	89ab      	ldrh	r3, [r5, #12]
9002acf8:	071b      	lsls	r3, r3, #28
9002acfa:	d501      	bpl.n	9002ad00 <_vfiprintf_r+0x34>
9002acfc:	692b      	ldr	r3, [r5, #16]
9002acfe:	b99b      	cbnz	r3, 9002ad28 <_vfiprintf_r+0x5c>
9002ad00:	4629      	mov	r1, r5
9002ad02:	4630      	mov	r0, r6
9002ad04:	f7ff fd6e 	bl	9002a7e4 <__swsetup_r>
9002ad08:	b170      	cbz	r0, 9002ad28 <_vfiprintf_r+0x5c>
9002ad0a:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002ad0c:	07dc      	lsls	r4, r3, #31
9002ad0e:	d504      	bpl.n	9002ad1a <_vfiprintf_r+0x4e>
9002ad10:	f04f 30ff 	mov.w	r0, #4294967295
9002ad14:	b01d      	add	sp, #116	@ 0x74
9002ad16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002ad1a:	89ab      	ldrh	r3, [r5, #12]
9002ad1c:	0598      	lsls	r0, r3, #22
9002ad1e:	d4f7      	bmi.n	9002ad10 <_vfiprintf_r+0x44>
9002ad20:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002ad22:	f7ff fef3 	bl	9002ab0c <__retarget_lock_release_recursive>
9002ad26:	e7f3      	b.n	9002ad10 <_vfiprintf_r+0x44>
9002ad28:	2300      	movs	r3, #0
9002ad2a:	9309      	str	r3, [sp, #36]	@ 0x24
9002ad2c:	2320      	movs	r3, #32
9002ad2e:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
9002ad32:	f8cd 800c 	str.w	r8, [sp, #12]
9002ad36:	2330      	movs	r3, #48	@ 0x30
9002ad38:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 9002aee8 <_vfiprintf_r+0x21c>
9002ad3c:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
9002ad40:	f04f 0901 	mov.w	r9, #1
9002ad44:	4623      	mov	r3, r4
9002ad46:	469a      	mov	sl, r3
9002ad48:	f813 2b01 	ldrb.w	r2, [r3], #1
9002ad4c:	b10a      	cbz	r2, 9002ad52 <_vfiprintf_r+0x86>
9002ad4e:	2a25      	cmp	r2, #37	@ 0x25
9002ad50:	d1f9      	bne.n	9002ad46 <_vfiprintf_r+0x7a>
9002ad52:	ebba 0b04 	subs.w	fp, sl, r4
9002ad56:	d00b      	beq.n	9002ad70 <_vfiprintf_r+0xa4>
9002ad58:	465b      	mov	r3, fp
9002ad5a:	4622      	mov	r2, r4
9002ad5c:	4629      	mov	r1, r5
9002ad5e:	4630      	mov	r0, r6
9002ad60:	f7ff ffa1 	bl	9002aca6 <__sfputs_r>
9002ad64:	3001      	adds	r0, #1
9002ad66:	f000 80a7 	beq.w	9002aeb8 <_vfiprintf_r+0x1ec>
9002ad6a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002ad6c:	445a      	add	r2, fp
9002ad6e:	9209      	str	r2, [sp, #36]	@ 0x24
9002ad70:	f89a 3000 	ldrb.w	r3, [sl]
9002ad74:	2b00      	cmp	r3, #0
9002ad76:	f000 809f 	beq.w	9002aeb8 <_vfiprintf_r+0x1ec>
9002ad7a:	2300      	movs	r3, #0
9002ad7c:	f04f 32ff 	mov.w	r2, #4294967295
9002ad80:	e9cd 2305 	strd	r2, r3, [sp, #20]
9002ad84:	f10a 0a01 	add.w	sl, sl, #1
9002ad88:	9304      	str	r3, [sp, #16]
9002ad8a:	9307      	str	r3, [sp, #28]
9002ad8c:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
9002ad90:	931a      	str	r3, [sp, #104]	@ 0x68
9002ad92:	4654      	mov	r4, sl
9002ad94:	2205      	movs	r2, #5
9002ad96:	f814 1b01 	ldrb.w	r1, [r4], #1
9002ad9a:	4853      	ldr	r0, [pc, #332]	@ (9002aee8 <_vfiprintf_r+0x21c>)
9002ad9c:	f7d5 faa0 	bl	900002e0 <memchr>
9002ada0:	9a04      	ldr	r2, [sp, #16]
9002ada2:	b9d8      	cbnz	r0, 9002addc <_vfiprintf_r+0x110>
9002ada4:	06d1      	lsls	r1, r2, #27
9002ada6:	bf44      	itt	mi
9002ada8:	2320      	movmi	r3, #32
9002adaa:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
9002adae:	0713      	lsls	r3, r2, #28
9002adb0:	bf44      	itt	mi
9002adb2:	232b      	movmi	r3, #43	@ 0x2b
9002adb4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
9002adb8:	f89a 3000 	ldrb.w	r3, [sl]
9002adbc:	2b2a      	cmp	r3, #42	@ 0x2a
9002adbe:	d015      	beq.n	9002adec <_vfiprintf_r+0x120>
9002adc0:	9a07      	ldr	r2, [sp, #28]
9002adc2:	4654      	mov	r4, sl
9002adc4:	2000      	movs	r0, #0
9002adc6:	f04f 0c0a 	mov.w	ip, #10
9002adca:	4621      	mov	r1, r4
9002adcc:	f811 3b01 	ldrb.w	r3, [r1], #1
9002add0:	3b30      	subs	r3, #48	@ 0x30
9002add2:	2b09      	cmp	r3, #9
9002add4:	d94b      	bls.n	9002ae6e <_vfiprintf_r+0x1a2>
9002add6:	b1b0      	cbz	r0, 9002ae06 <_vfiprintf_r+0x13a>
9002add8:	9207      	str	r2, [sp, #28]
9002adda:	e014      	b.n	9002ae06 <_vfiprintf_r+0x13a>
9002addc:	eba0 0308 	sub.w	r3, r0, r8
9002ade0:	fa09 f303 	lsl.w	r3, r9, r3
9002ade4:	4313      	orrs	r3, r2
9002ade6:	9304      	str	r3, [sp, #16]
9002ade8:	46a2      	mov	sl, r4
9002adea:	e7d2      	b.n	9002ad92 <_vfiprintf_r+0xc6>
9002adec:	9b03      	ldr	r3, [sp, #12]
9002adee:	1d19      	adds	r1, r3, #4
9002adf0:	681b      	ldr	r3, [r3, #0]
9002adf2:	9103      	str	r1, [sp, #12]
9002adf4:	2b00      	cmp	r3, #0
9002adf6:	bfbb      	ittet	lt
9002adf8:	425b      	neglt	r3, r3
9002adfa:	f042 0202 	orrlt.w	r2, r2, #2
9002adfe:	9307      	strge	r3, [sp, #28]
9002ae00:	9307      	strlt	r3, [sp, #28]
9002ae02:	bfb8      	it	lt
9002ae04:	9204      	strlt	r2, [sp, #16]
9002ae06:	7823      	ldrb	r3, [r4, #0]
9002ae08:	2b2e      	cmp	r3, #46	@ 0x2e
9002ae0a:	d10a      	bne.n	9002ae22 <_vfiprintf_r+0x156>
9002ae0c:	7863      	ldrb	r3, [r4, #1]
9002ae0e:	2b2a      	cmp	r3, #42	@ 0x2a
9002ae10:	d132      	bne.n	9002ae78 <_vfiprintf_r+0x1ac>
9002ae12:	9b03      	ldr	r3, [sp, #12]
9002ae14:	1d1a      	adds	r2, r3, #4
9002ae16:	681b      	ldr	r3, [r3, #0]
9002ae18:	9203      	str	r2, [sp, #12]
9002ae1a:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
9002ae1e:	3402      	adds	r4, #2
9002ae20:	9305      	str	r3, [sp, #20]
9002ae22:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 9002aef8 <_vfiprintf_r+0x22c>
9002ae26:	7821      	ldrb	r1, [r4, #0]
9002ae28:	2203      	movs	r2, #3
9002ae2a:	4650      	mov	r0, sl
9002ae2c:	f7d5 fa58 	bl	900002e0 <memchr>
9002ae30:	b138      	cbz	r0, 9002ae42 <_vfiprintf_r+0x176>
9002ae32:	9b04      	ldr	r3, [sp, #16]
9002ae34:	eba0 000a 	sub.w	r0, r0, sl
9002ae38:	2240      	movs	r2, #64	@ 0x40
9002ae3a:	4082      	lsls	r2, r0
9002ae3c:	4313      	orrs	r3, r2
9002ae3e:	3401      	adds	r4, #1
9002ae40:	9304      	str	r3, [sp, #16]
9002ae42:	f814 1b01 	ldrb.w	r1, [r4], #1
9002ae46:	4829      	ldr	r0, [pc, #164]	@ (9002aeec <_vfiprintf_r+0x220>)
9002ae48:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
9002ae4c:	2206      	movs	r2, #6
9002ae4e:	f7d5 fa47 	bl	900002e0 <memchr>
9002ae52:	2800      	cmp	r0, #0
9002ae54:	d03f      	beq.n	9002aed6 <_vfiprintf_r+0x20a>
9002ae56:	4b26      	ldr	r3, [pc, #152]	@ (9002aef0 <_vfiprintf_r+0x224>)
9002ae58:	bb1b      	cbnz	r3, 9002aea2 <_vfiprintf_r+0x1d6>
9002ae5a:	9b03      	ldr	r3, [sp, #12]
9002ae5c:	3307      	adds	r3, #7
9002ae5e:	f023 0307 	bic.w	r3, r3, #7
9002ae62:	3308      	adds	r3, #8
9002ae64:	9303      	str	r3, [sp, #12]
9002ae66:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002ae68:	443b      	add	r3, r7
9002ae6a:	9309      	str	r3, [sp, #36]	@ 0x24
9002ae6c:	e76a      	b.n	9002ad44 <_vfiprintf_r+0x78>
9002ae6e:	fb0c 3202 	mla	r2, ip, r2, r3
9002ae72:	460c      	mov	r4, r1
9002ae74:	2001      	movs	r0, #1
9002ae76:	e7a8      	b.n	9002adca <_vfiprintf_r+0xfe>
9002ae78:	2300      	movs	r3, #0
9002ae7a:	3401      	adds	r4, #1
9002ae7c:	9305      	str	r3, [sp, #20]
9002ae7e:	4619      	mov	r1, r3
9002ae80:	f04f 0c0a 	mov.w	ip, #10
9002ae84:	4620      	mov	r0, r4
9002ae86:	f810 2b01 	ldrb.w	r2, [r0], #1
9002ae8a:	3a30      	subs	r2, #48	@ 0x30
9002ae8c:	2a09      	cmp	r2, #9
9002ae8e:	d903      	bls.n	9002ae98 <_vfiprintf_r+0x1cc>
9002ae90:	2b00      	cmp	r3, #0
9002ae92:	d0c6      	beq.n	9002ae22 <_vfiprintf_r+0x156>
9002ae94:	9105      	str	r1, [sp, #20]
9002ae96:	e7c4      	b.n	9002ae22 <_vfiprintf_r+0x156>
9002ae98:	fb0c 2101 	mla	r1, ip, r1, r2
9002ae9c:	4604      	mov	r4, r0
9002ae9e:	2301      	movs	r3, #1
9002aea0:	e7f0      	b.n	9002ae84 <_vfiprintf_r+0x1b8>
9002aea2:	ab03      	add	r3, sp, #12
9002aea4:	9300      	str	r3, [sp, #0]
9002aea6:	462a      	mov	r2, r5
9002aea8:	4b12      	ldr	r3, [pc, #72]	@ (9002aef4 <_vfiprintf_r+0x228>)
9002aeaa:	a904      	add	r1, sp, #16
9002aeac:	4630      	mov	r0, r6
9002aeae:	f3af 8000 	nop.w
9002aeb2:	4607      	mov	r7, r0
9002aeb4:	1c78      	adds	r0, r7, #1
9002aeb6:	d1d6      	bne.n	9002ae66 <_vfiprintf_r+0x19a>
9002aeb8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002aeba:	07d9      	lsls	r1, r3, #31
9002aebc:	d405      	bmi.n	9002aeca <_vfiprintf_r+0x1fe>
9002aebe:	89ab      	ldrh	r3, [r5, #12]
9002aec0:	059a      	lsls	r2, r3, #22
9002aec2:	d402      	bmi.n	9002aeca <_vfiprintf_r+0x1fe>
9002aec4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002aec6:	f7ff fe21 	bl	9002ab0c <__retarget_lock_release_recursive>
9002aeca:	89ab      	ldrh	r3, [r5, #12]
9002aecc:	065b      	lsls	r3, r3, #25
9002aece:	f53f af1f 	bmi.w	9002ad10 <_vfiprintf_r+0x44>
9002aed2:	9809      	ldr	r0, [sp, #36]	@ 0x24
9002aed4:	e71e      	b.n	9002ad14 <_vfiprintf_r+0x48>
9002aed6:	ab03      	add	r3, sp, #12
9002aed8:	9300      	str	r3, [sp, #0]
9002aeda:	462a      	mov	r2, r5
9002aedc:	4b05      	ldr	r3, [pc, #20]	@ (9002aef4 <_vfiprintf_r+0x228>)
9002aede:	a904      	add	r1, sp, #16
9002aee0:	4630      	mov	r0, r6
9002aee2:	f000 f879 	bl	9002afd8 <_printf_i>
9002aee6:	e7e4      	b.n	9002aeb2 <_vfiprintf_r+0x1e6>
9002aee8:	9002e874 	.word	0x9002e874
9002aeec:	9002e87e 	.word	0x9002e87e
9002aef0:	00000000 	.word	0x00000000
9002aef4:	9002aca7 	.word	0x9002aca7
9002aef8:	9002e87a 	.word	0x9002e87a

9002aefc <_printf_common>:
9002aefc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002af00:	4616      	mov	r6, r2
9002af02:	4698      	mov	r8, r3
9002af04:	688a      	ldr	r2, [r1, #8]
9002af06:	690b      	ldr	r3, [r1, #16]
9002af08:	f8dd 9020 	ldr.w	r9, [sp, #32]
9002af0c:	4293      	cmp	r3, r2
9002af0e:	bfb8      	it	lt
9002af10:	4613      	movlt	r3, r2
9002af12:	6033      	str	r3, [r6, #0]
9002af14:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
9002af18:	4607      	mov	r7, r0
9002af1a:	460c      	mov	r4, r1
9002af1c:	b10a      	cbz	r2, 9002af22 <_printf_common+0x26>
9002af1e:	3301      	adds	r3, #1
9002af20:	6033      	str	r3, [r6, #0]
9002af22:	6823      	ldr	r3, [r4, #0]
9002af24:	0699      	lsls	r1, r3, #26
9002af26:	bf42      	ittt	mi
9002af28:	6833      	ldrmi	r3, [r6, #0]
9002af2a:	3302      	addmi	r3, #2
9002af2c:	6033      	strmi	r3, [r6, #0]
9002af2e:	6825      	ldr	r5, [r4, #0]
9002af30:	f015 0506 	ands.w	r5, r5, #6
9002af34:	d106      	bne.n	9002af44 <_printf_common+0x48>
9002af36:	f104 0a19 	add.w	sl, r4, #25
9002af3a:	68e3      	ldr	r3, [r4, #12]
9002af3c:	6832      	ldr	r2, [r6, #0]
9002af3e:	1a9b      	subs	r3, r3, r2
9002af40:	42ab      	cmp	r3, r5
9002af42:	dc26      	bgt.n	9002af92 <_printf_common+0x96>
9002af44:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
9002af48:	6822      	ldr	r2, [r4, #0]
9002af4a:	3b00      	subs	r3, #0
9002af4c:	bf18      	it	ne
9002af4e:	2301      	movne	r3, #1
9002af50:	0692      	lsls	r2, r2, #26
9002af52:	d42b      	bmi.n	9002afac <_printf_common+0xb0>
9002af54:	f104 0243 	add.w	r2, r4, #67	@ 0x43
9002af58:	4641      	mov	r1, r8
9002af5a:	4638      	mov	r0, r7
9002af5c:	47c8      	blx	r9
9002af5e:	3001      	adds	r0, #1
9002af60:	d01e      	beq.n	9002afa0 <_printf_common+0xa4>
9002af62:	6823      	ldr	r3, [r4, #0]
9002af64:	6922      	ldr	r2, [r4, #16]
9002af66:	f003 0306 	and.w	r3, r3, #6
9002af6a:	2b04      	cmp	r3, #4
9002af6c:	bf02      	ittt	eq
9002af6e:	68e5      	ldreq	r5, [r4, #12]
9002af70:	6833      	ldreq	r3, [r6, #0]
9002af72:	1aed      	subeq	r5, r5, r3
9002af74:	68a3      	ldr	r3, [r4, #8]
9002af76:	bf0c      	ite	eq
9002af78:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
9002af7c:	2500      	movne	r5, #0
9002af7e:	4293      	cmp	r3, r2
9002af80:	bfc4      	itt	gt
9002af82:	1a9b      	subgt	r3, r3, r2
9002af84:	18ed      	addgt	r5, r5, r3
9002af86:	2600      	movs	r6, #0
9002af88:	341a      	adds	r4, #26
9002af8a:	42b5      	cmp	r5, r6
9002af8c:	d11a      	bne.n	9002afc4 <_printf_common+0xc8>
9002af8e:	2000      	movs	r0, #0
9002af90:	e008      	b.n	9002afa4 <_printf_common+0xa8>
9002af92:	2301      	movs	r3, #1
9002af94:	4652      	mov	r2, sl
9002af96:	4641      	mov	r1, r8
9002af98:	4638      	mov	r0, r7
9002af9a:	47c8      	blx	r9
9002af9c:	3001      	adds	r0, #1
9002af9e:	d103      	bne.n	9002afa8 <_printf_common+0xac>
9002afa0:	f04f 30ff 	mov.w	r0, #4294967295
9002afa4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002afa8:	3501      	adds	r5, #1
9002afaa:	e7c6      	b.n	9002af3a <_printf_common+0x3e>
9002afac:	18e1      	adds	r1, r4, r3
9002afae:	1c5a      	adds	r2, r3, #1
9002afb0:	2030      	movs	r0, #48	@ 0x30
9002afb2:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
9002afb6:	4422      	add	r2, r4
9002afb8:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
9002afbc:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
9002afc0:	3302      	adds	r3, #2
9002afc2:	e7c7      	b.n	9002af54 <_printf_common+0x58>
9002afc4:	2301      	movs	r3, #1
9002afc6:	4622      	mov	r2, r4
9002afc8:	4641      	mov	r1, r8
9002afca:	4638      	mov	r0, r7
9002afcc:	47c8      	blx	r9
9002afce:	3001      	adds	r0, #1
9002afd0:	d0e6      	beq.n	9002afa0 <_printf_common+0xa4>
9002afd2:	3601      	adds	r6, #1
9002afd4:	e7d9      	b.n	9002af8a <_printf_common+0x8e>
	...

9002afd8 <_printf_i>:
9002afd8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9002afdc:	7e0f      	ldrb	r7, [r1, #24]
9002afde:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9002afe0:	2f78      	cmp	r7, #120	@ 0x78
9002afe2:	4691      	mov	r9, r2
9002afe4:	4680      	mov	r8, r0
9002afe6:	460c      	mov	r4, r1
9002afe8:	469a      	mov	sl, r3
9002afea:	f101 0243 	add.w	r2, r1, #67	@ 0x43
9002afee:	d807      	bhi.n	9002b000 <_printf_i+0x28>
9002aff0:	2f62      	cmp	r7, #98	@ 0x62
9002aff2:	d80a      	bhi.n	9002b00a <_printf_i+0x32>
9002aff4:	2f00      	cmp	r7, #0
9002aff6:	f000 80d1 	beq.w	9002b19c <_printf_i+0x1c4>
9002affa:	2f58      	cmp	r7, #88	@ 0x58
9002affc:	f000 80b8 	beq.w	9002b170 <_printf_i+0x198>
9002b000:	f104 0642 	add.w	r6, r4, #66	@ 0x42
9002b004:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
9002b008:	e03a      	b.n	9002b080 <_printf_i+0xa8>
9002b00a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
9002b00e:	2b15      	cmp	r3, #21
9002b010:	d8f6      	bhi.n	9002b000 <_printf_i+0x28>
9002b012:	a101      	add	r1, pc, #4	@ (adr r1, 9002b018 <_printf_i+0x40>)
9002b014:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
9002b018:	9002b071 	.word	0x9002b071
9002b01c:	9002b085 	.word	0x9002b085
9002b020:	9002b001 	.word	0x9002b001
9002b024:	9002b001 	.word	0x9002b001
9002b028:	9002b001 	.word	0x9002b001
9002b02c:	9002b001 	.word	0x9002b001
9002b030:	9002b085 	.word	0x9002b085
9002b034:	9002b001 	.word	0x9002b001
9002b038:	9002b001 	.word	0x9002b001
9002b03c:	9002b001 	.word	0x9002b001
9002b040:	9002b001 	.word	0x9002b001
9002b044:	9002b183 	.word	0x9002b183
9002b048:	9002b0af 	.word	0x9002b0af
9002b04c:	9002b13d 	.word	0x9002b13d
9002b050:	9002b001 	.word	0x9002b001
9002b054:	9002b001 	.word	0x9002b001
9002b058:	9002b1a5 	.word	0x9002b1a5
9002b05c:	9002b001 	.word	0x9002b001
9002b060:	9002b0af 	.word	0x9002b0af
9002b064:	9002b001 	.word	0x9002b001
9002b068:	9002b001 	.word	0x9002b001
9002b06c:	9002b145 	.word	0x9002b145
9002b070:	6833      	ldr	r3, [r6, #0]
9002b072:	1d1a      	adds	r2, r3, #4
9002b074:	681b      	ldr	r3, [r3, #0]
9002b076:	6032      	str	r2, [r6, #0]
9002b078:	f104 0642 	add.w	r6, r4, #66	@ 0x42
9002b07c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
9002b080:	2301      	movs	r3, #1
9002b082:	e09c      	b.n	9002b1be <_printf_i+0x1e6>
9002b084:	6833      	ldr	r3, [r6, #0]
9002b086:	6820      	ldr	r0, [r4, #0]
9002b088:	1d19      	adds	r1, r3, #4
9002b08a:	6031      	str	r1, [r6, #0]
9002b08c:	0606      	lsls	r6, r0, #24
9002b08e:	d501      	bpl.n	9002b094 <_printf_i+0xbc>
9002b090:	681d      	ldr	r5, [r3, #0]
9002b092:	e003      	b.n	9002b09c <_printf_i+0xc4>
9002b094:	0645      	lsls	r5, r0, #25
9002b096:	d5fb      	bpl.n	9002b090 <_printf_i+0xb8>
9002b098:	f9b3 5000 	ldrsh.w	r5, [r3]
9002b09c:	2d00      	cmp	r5, #0
9002b09e:	da03      	bge.n	9002b0a8 <_printf_i+0xd0>
9002b0a0:	232d      	movs	r3, #45	@ 0x2d
9002b0a2:	426d      	negs	r5, r5
9002b0a4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
9002b0a8:	4858      	ldr	r0, [pc, #352]	@ (9002b20c <_printf_i+0x234>)
9002b0aa:	230a      	movs	r3, #10
9002b0ac:	e011      	b.n	9002b0d2 <_printf_i+0xfa>
9002b0ae:	6821      	ldr	r1, [r4, #0]
9002b0b0:	6833      	ldr	r3, [r6, #0]
9002b0b2:	0608      	lsls	r0, r1, #24
9002b0b4:	f853 5b04 	ldr.w	r5, [r3], #4
9002b0b8:	d402      	bmi.n	9002b0c0 <_printf_i+0xe8>
9002b0ba:	0649      	lsls	r1, r1, #25
9002b0bc:	bf48      	it	mi
9002b0be:	b2ad      	uxthmi	r5, r5
9002b0c0:	2f6f      	cmp	r7, #111	@ 0x6f
9002b0c2:	4852      	ldr	r0, [pc, #328]	@ (9002b20c <_printf_i+0x234>)
9002b0c4:	6033      	str	r3, [r6, #0]
9002b0c6:	bf14      	ite	ne
9002b0c8:	230a      	movne	r3, #10
9002b0ca:	2308      	moveq	r3, #8
9002b0cc:	2100      	movs	r1, #0
9002b0ce:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
9002b0d2:	6866      	ldr	r6, [r4, #4]
9002b0d4:	60a6      	str	r6, [r4, #8]
9002b0d6:	2e00      	cmp	r6, #0
9002b0d8:	db05      	blt.n	9002b0e6 <_printf_i+0x10e>
9002b0da:	6821      	ldr	r1, [r4, #0]
9002b0dc:	432e      	orrs	r6, r5
9002b0de:	f021 0104 	bic.w	r1, r1, #4
9002b0e2:	6021      	str	r1, [r4, #0]
9002b0e4:	d04b      	beq.n	9002b17e <_printf_i+0x1a6>
9002b0e6:	4616      	mov	r6, r2
9002b0e8:	fbb5 f1f3 	udiv	r1, r5, r3
9002b0ec:	fb03 5711 	mls	r7, r3, r1, r5
9002b0f0:	5dc7      	ldrb	r7, [r0, r7]
9002b0f2:	f806 7d01 	strb.w	r7, [r6, #-1]!
9002b0f6:	462f      	mov	r7, r5
9002b0f8:	42bb      	cmp	r3, r7
9002b0fa:	460d      	mov	r5, r1
9002b0fc:	d9f4      	bls.n	9002b0e8 <_printf_i+0x110>
9002b0fe:	2b08      	cmp	r3, #8
9002b100:	d10b      	bne.n	9002b11a <_printf_i+0x142>
9002b102:	6823      	ldr	r3, [r4, #0]
9002b104:	07df      	lsls	r7, r3, #31
9002b106:	d508      	bpl.n	9002b11a <_printf_i+0x142>
9002b108:	6923      	ldr	r3, [r4, #16]
9002b10a:	6861      	ldr	r1, [r4, #4]
9002b10c:	4299      	cmp	r1, r3
9002b10e:	bfde      	ittt	le
9002b110:	2330      	movle	r3, #48	@ 0x30
9002b112:	f806 3c01 	strble.w	r3, [r6, #-1]
9002b116:	f106 36ff 	addle.w	r6, r6, #4294967295
9002b11a:	1b92      	subs	r2, r2, r6
9002b11c:	6122      	str	r2, [r4, #16]
9002b11e:	f8cd a000 	str.w	sl, [sp]
9002b122:	464b      	mov	r3, r9
9002b124:	aa03      	add	r2, sp, #12
9002b126:	4621      	mov	r1, r4
9002b128:	4640      	mov	r0, r8
9002b12a:	f7ff fee7 	bl	9002aefc <_printf_common>
9002b12e:	3001      	adds	r0, #1
9002b130:	d14a      	bne.n	9002b1c8 <_printf_i+0x1f0>
9002b132:	f04f 30ff 	mov.w	r0, #4294967295
9002b136:	b004      	add	sp, #16
9002b138:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002b13c:	6823      	ldr	r3, [r4, #0]
9002b13e:	f043 0320 	orr.w	r3, r3, #32
9002b142:	6023      	str	r3, [r4, #0]
9002b144:	4832      	ldr	r0, [pc, #200]	@ (9002b210 <_printf_i+0x238>)
9002b146:	2778      	movs	r7, #120	@ 0x78
9002b148:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
9002b14c:	6823      	ldr	r3, [r4, #0]
9002b14e:	6831      	ldr	r1, [r6, #0]
9002b150:	061f      	lsls	r7, r3, #24
9002b152:	f851 5b04 	ldr.w	r5, [r1], #4
9002b156:	d402      	bmi.n	9002b15e <_printf_i+0x186>
9002b158:	065f      	lsls	r7, r3, #25
9002b15a:	bf48      	it	mi
9002b15c:	b2ad      	uxthmi	r5, r5
9002b15e:	6031      	str	r1, [r6, #0]
9002b160:	07d9      	lsls	r1, r3, #31
9002b162:	bf44      	itt	mi
9002b164:	f043 0320 	orrmi.w	r3, r3, #32
9002b168:	6023      	strmi	r3, [r4, #0]
9002b16a:	b11d      	cbz	r5, 9002b174 <_printf_i+0x19c>
9002b16c:	2310      	movs	r3, #16
9002b16e:	e7ad      	b.n	9002b0cc <_printf_i+0xf4>
9002b170:	4826      	ldr	r0, [pc, #152]	@ (9002b20c <_printf_i+0x234>)
9002b172:	e7e9      	b.n	9002b148 <_printf_i+0x170>
9002b174:	6823      	ldr	r3, [r4, #0]
9002b176:	f023 0320 	bic.w	r3, r3, #32
9002b17a:	6023      	str	r3, [r4, #0]
9002b17c:	e7f6      	b.n	9002b16c <_printf_i+0x194>
9002b17e:	4616      	mov	r6, r2
9002b180:	e7bd      	b.n	9002b0fe <_printf_i+0x126>
9002b182:	6833      	ldr	r3, [r6, #0]
9002b184:	6825      	ldr	r5, [r4, #0]
9002b186:	6961      	ldr	r1, [r4, #20]
9002b188:	1d18      	adds	r0, r3, #4
9002b18a:	6030      	str	r0, [r6, #0]
9002b18c:	062e      	lsls	r6, r5, #24
9002b18e:	681b      	ldr	r3, [r3, #0]
9002b190:	d501      	bpl.n	9002b196 <_printf_i+0x1be>
9002b192:	6019      	str	r1, [r3, #0]
9002b194:	e002      	b.n	9002b19c <_printf_i+0x1c4>
9002b196:	0668      	lsls	r0, r5, #25
9002b198:	d5fb      	bpl.n	9002b192 <_printf_i+0x1ba>
9002b19a:	8019      	strh	r1, [r3, #0]
9002b19c:	2300      	movs	r3, #0
9002b19e:	6123      	str	r3, [r4, #16]
9002b1a0:	4616      	mov	r6, r2
9002b1a2:	e7bc      	b.n	9002b11e <_printf_i+0x146>
9002b1a4:	6833      	ldr	r3, [r6, #0]
9002b1a6:	1d1a      	adds	r2, r3, #4
9002b1a8:	6032      	str	r2, [r6, #0]
9002b1aa:	681e      	ldr	r6, [r3, #0]
9002b1ac:	6862      	ldr	r2, [r4, #4]
9002b1ae:	2100      	movs	r1, #0
9002b1b0:	4630      	mov	r0, r6
9002b1b2:	f7d5 f895 	bl	900002e0 <memchr>
9002b1b6:	b108      	cbz	r0, 9002b1bc <_printf_i+0x1e4>
9002b1b8:	1b80      	subs	r0, r0, r6
9002b1ba:	6060      	str	r0, [r4, #4]
9002b1bc:	6863      	ldr	r3, [r4, #4]
9002b1be:	6123      	str	r3, [r4, #16]
9002b1c0:	2300      	movs	r3, #0
9002b1c2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
9002b1c6:	e7aa      	b.n	9002b11e <_printf_i+0x146>
9002b1c8:	6923      	ldr	r3, [r4, #16]
9002b1ca:	4632      	mov	r2, r6
9002b1cc:	4649      	mov	r1, r9
9002b1ce:	4640      	mov	r0, r8
9002b1d0:	47d0      	blx	sl
9002b1d2:	3001      	adds	r0, #1
9002b1d4:	d0ad      	beq.n	9002b132 <_printf_i+0x15a>
9002b1d6:	6823      	ldr	r3, [r4, #0]
9002b1d8:	079b      	lsls	r3, r3, #30
9002b1da:	d413      	bmi.n	9002b204 <_printf_i+0x22c>
9002b1dc:	68e0      	ldr	r0, [r4, #12]
9002b1de:	9b03      	ldr	r3, [sp, #12]
9002b1e0:	4298      	cmp	r0, r3
9002b1e2:	bfb8      	it	lt
9002b1e4:	4618      	movlt	r0, r3
9002b1e6:	e7a6      	b.n	9002b136 <_printf_i+0x15e>
9002b1e8:	2301      	movs	r3, #1
9002b1ea:	4632      	mov	r2, r6
9002b1ec:	4649      	mov	r1, r9
9002b1ee:	4640      	mov	r0, r8
9002b1f0:	47d0      	blx	sl
9002b1f2:	3001      	adds	r0, #1
9002b1f4:	d09d      	beq.n	9002b132 <_printf_i+0x15a>
9002b1f6:	3501      	adds	r5, #1
9002b1f8:	68e3      	ldr	r3, [r4, #12]
9002b1fa:	9903      	ldr	r1, [sp, #12]
9002b1fc:	1a5b      	subs	r3, r3, r1
9002b1fe:	42ab      	cmp	r3, r5
9002b200:	dcf2      	bgt.n	9002b1e8 <_printf_i+0x210>
9002b202:	e7eb      	b.n	9002b1dc <_printf_i+0x204>
9002b204:	2500      	movs	r5, #0
9002b206:	f104 0619 	add.w	r6, r4, #25
9002b20a:	e7f5      	b.n	9002b1f8 <_printf_i+0x220>
9002b20c:	9002e885 	.word	0x9002e885
9002b210:	9002e896 	.word	0x9002e896

9002b214 <__sflush_r>:
9002b214:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
9002b218:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002b21c:	0716      	lsls	r6, r2, #28
9002b21e:	4605      	mov	r5, r0
9002b220:	460c      	mov	r4, r1
9002b222:	d454      	bmi.n	9002b2ce <__sflush_r+0xba>
9002b224:	684b      	ldr	r3, [r1, #4]
9002b226:	2b00      	cmp	r3, #0
9002b228:	dc02      	bgt.n	9002b230 <__sflush_r+0x1c>
9002b22a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
9002b22c:	2b00      	cmp	r3, #0
9002b22e:	dd48      	ble.n	9002b2c2 <__sflush_r+0xae>
9002b230:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9002b232:	2e00      	cmp	r6, #0
9002b234:	d045      	beq.n	9002b2c2 <__sflush_r+0xae>
9002b236:	2300      	movs	r3, #0
9002b238:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
9002b23c:	682f      	ldr	r7, [r5, #0]
9002b23e:	6a21      	ldr	r1, [r4, #32]
9002b240:	602b      	str	r3, [r5, #0]
9002b242:	d030      	beq.n	9002b2a6 <__sflush_r+0x92>
9002b244:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9002b246:	89a3      	ldrh	r3, [r4, #12]
9002b248:	0759      	lsls	r1, r3, #29
9002b24a:	d505      	bpl.n	9002b258 <__sflush_r+0x44>
9002b24c:	6863      	ldr	r3, [r4, #4]
9002b24e:	1ad2      	subs	r2, r2, r3
9002b250:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9002b252:	b10b      	cbz	r3, 9002b258 <__sflush_r+0x44>
9002b254:	6c23      	ldr	r3, [r4, #64]	@ 0x40
9002b256:	1ad2      	subs	r2, r2, r3
9002b258:	2300      	movs	r3, #0
9002b25a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9002b25c:	6a21      	ldr	r1, [r4, #32]
9002b25e:	4628      	mov	r0, r5
9002b260:	47b0      	blx	r6
9002b262:	1c43      	adds	r3, r0, #1
9002b264:	89a3      	ldrh	r3, [r4, #12]
9002b266:	d106      	bne.n	9002b276 <__sflush_r+0x62>
9002b268:	6829      	ldr	r1, [r5, #0]
9002b26a:	291d      	cmp	r1, #29
9002b26c:	d82b      	bhi.n	9002b2c6 <__sflush_r+0xb2>
9002b26e:	4a2a      	ldr	r2, [pc, #168]	@ (9002b318 <__sflush_r+0x104>)
9002b270:	40ca      	lsrs	r2, r1
9002b272:	07d6      	lsls	r6, r2, #31
9002b274:	d527      	bpl.n	9002b2c6 <__sflush_r+0xb2>
9002b276:	2200      	movs	r2, #0
9002b278:	6062      	str	r2, [r4, #4]
9002b27a:	04d9      	lsls	r1, r3, #19
9002b27c:	6922      	ldr	r2, [r4, #16]
9002b27e:	6022      	str	r2, [r4, #0]
9002b280:	d504      	bpl.n	9002b28c <__sflush_r+0x78>
9002b282:	1c42      	adds	r2, r0, #1
9002b284:	d101      	bne.n	9002b28a <__sflush_r+0x76>
9002b286:	682b      	ldr	r3, [r5, #0]
9002b288:	b903      	cbnz	r3, 9002b28c <__sflush_r+0x78>
9002b28a:	6560      	str	r0, [r4, #84]	@ 0x54
9002b28c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
9002b28e:	602f      	str	r7, [r5, #0]
9002b290:	b1b9      	cbz	r1, 9002b2c2 <__sflush_r+0xae>
9002b292:	f104 0344 	add.w	r3, r4, #68	@ 0x44
9002b296:	4299      	cmp	r1, r3
9002b298:	d002      	beq.n	9002b2a0 <__sflush_r+0x8c>
9002b29a:	4628      	mov	r0, r5
9002b29c:	f7ff fca2 	bl	9002abe4 <_free_r>
9002b2a0:	2300      	movs	r3, #0
9002b2a2:	6363      	str	r3, [r4, #52]	@ 0x34
9002b2a4:	e00d      	b.n	9002b2c2 <__sflush_r+0xae>
9002b2a6:	2301      	movs	r3, #1
9002b2a8:	4628      	mov	r0, r5
9002b2aa:	47b0      	blx	r6
9002b2ac:	4602      	mov	r2, r0
9002b2ae:	1c50      	adds	r0, r2, #1
9002b2b0:	d1c9      	bne.n	9002b246 <__sflush_r+0x32>
9002b2b2:	682b      	ldr	r3, [r5, #0]
9002b2b4:	2b00      	cmp	r3, #0
9002b2b6:	d0c6      	beq.n	9002b246 <__sflush_r+0x32>
9002b2b8:	2b1d      	cmp	r3, #29
9002b2ba:	d001      	beq.n	9002b2c0 <__sflush_r+0xac>
9002b2bc:	2b16      	cmp	r3, #22
9002b2be:	d11e      	bne.n	9002b2fe <__sflush_r+0xea>
9002b2c0:	602f      	str	r7, [r5, #0]
9002b2c2:	2000      	movs	r0, #0
9002b2c4:	e022      	b.n	9002b30c <__sflush_r+0xf8>
9002b2c6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002b2ca:	b21b      	sxth	r3, r3
9002b2cc:	e01b      	b.n	9002b306 <__sflush_r+0xf2>
9002b2ce:	690f      	ldr	r7, [r1, #16]
9002b2d0:	2f00      	cmp	r7, #0
9002b2d2:	d0f6      	beq.n	9002b2c2 <__sflush_r+0xae>
9002b2d4:	0793      	lsls	r3, r2, #30
9002b2d6:	680e      	ldr	r6, [r1, #0]
9002b2d8:	bf08      	it	eq
9002b2da:	694b      	ldreq	r3, [r1, #20]
9002b2dc:	600f      	str	r7, [r1, #0]
9002b2de:	bf18      	it	ne
9002b2e0:	2300      	movne	r3, #0
9002b2e2:	eba6 0807 	sub.w	r8, r6, r7
9002b2e6:	608b      	str	r3, [r1, #8]
9002b2e8:	f1b8 0f00 	cmp.w	r8, #0
9002b2ec:	dde9      	ble.n	9002b2c2 <__sflush_r+0xae>
9002b2ee:	6a21      	ldr	r1, [r4, #32]
9002b2f0:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
9002b2f2:	4643      	mov	r3, r8
9002b2f4:	463a      	mov	r2, r7
9002b2f6:	4628      	mov	r0, r5
9002b2f8:	47b0      	blx	r6
9002b2fa:	2800      	cmp	r0, #0
9002b2fc:	dc08      	bgt.n	9002b310 <__sflush_r+0xfc>
9002b2fe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002b302:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002b306:	81a3      	strh	r3, [r4, #12]
9002b308:	f04f 30ff 	mov.w	r0, #4294967295
9002b30c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002b310:	4407      	add	r7, r0
9002b312:	eba8 0800 	sub.w	r8, r8, r0
9002b316:	e7e7      	b.n	9002b2e8 <__sflush_r+0xd4>
9002b318:	20400001 	.word	0x20400001

9002b31c <_fflush_r>:
9002b31c:	b538      	push	{r3, r4, r5, lr}
9002b31e:	690b      	ldr	r3, [r1, #16]
9002b320:	4605      	mov	r5, r0
9002b322:	460c      	mov	r4, r1
9002b324:	b913      	cbnz	r3, 9002b32c <_fflush_r+0x10>
9002b326:	2500      	movs	r5, #0
9002b328:	4628      	mov	r0, r5
9002b32a:	bd38      	pop	{r3, r4, r5, pc}
9002b32c:	b118      	cbz	r0, 9002b336 <_fflush_r+0x1a>
9002b32e:	6a03      	ldr	r3, [r0, #32]
9002b330:	b90b      	cbnz	r3, 9002b336 <_fflush_r+0x1a>
9002b332:	f7ff f98d 	bl	9002a650 <__sinit>
9002b336:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002b33a:	2b00      	cmp	r3, #0
9002b33c:	d0f3      	beq.n	9002b326 <_fflush_r+0xa>
9002b33e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
9002b340:	07d0      	lsls	r0, r2, #31
9002b342:	d404      	bmi.n	9002b34e <_fflush_r+0x32>
9002b344:	0599      	lsls	r1, r3, #22
9002b346:	d402      	bmi.n	9002b34e <_fflush_r+0x32>
9002b348:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9002b34a:	f7ff fbde 	bl	9002ab0a <__retarget_lock_acquire_recursive>
9002b34e:	4628      	mov	r0, r5
9002b350:	4621      	mov	r1, r4
9002b352:	f7ff ff5f 	bl	9002b214 <__sflush_r>
9002b356:	6e63      	ldr	r3, [r4, #100]	@ 0x64
9002b358:	07da      	lsls	r2, r3, #31
9002b35a:	4605      	mov	r5, r0
9002b35c:	d4e4      	bmi.n	9002b328 <_fflush_r+0xc>
9002b35e:	89a3      	ldrh	r3, [r4, #12]
9002b360:	059b      	lsls	r3, r3, #22
9002b362:	d4e1      	bmi.n	9002b328 <_fflush_r+0xc>
9002b364:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9002b366:	f7ff fbd1 	bl	9002ab0c <__retarget_lock_release_recursive>
9002b36a:	e7dd      	b.n	9002b328 <_fflush_r+0xc>

9002b36c <__swhatbuf_r>:
9002b36c:	b570      	push	{r4, r5, r6, lr}
9002b36e:	460c      	mov	r4, r1
9002b370:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002b374:	2900      	cmp	r1, #0
9002b376:	b096      	sub	sp, #88	@ 0x58
9002b378:	4615      	mov	r5, r2
9002b37a:	461e      	mov	r6, r3
9002b37c:	da0d      	bge.n	9002b39a <__swhatbuf_r+0x2e>
9002b37e:	89a3      	ldrh	r3, [r4, #12]
9002b380:	f013 0f80 	tst.w	r3, #128	@ 0x80
9002b384:	f04f 0100 	mov.w	r1, #0
9002b388:	bf14      	ite	ne
9002b38a:	2340      	movne	r3, #64	@ 0x40
9002b38c:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
9002b390:	2000      	movs	r0, #0
9002b392:	6031      	str	r1, [r6, #0]
9002b394:	602b      	str	r3, [r5, #0]
9002b396:	b016      	add	sp, #88	@ 0x58
9002b398:	bd70      	pop	{r4, r5, r6, pc}
9002b39a:	466a      	mov	r2, sp
9002b39c:	f000 f848 	bl	9002b430 <_fstat_r>
9002b3a0:	2800      	cmp	r0, #0
9002b3a2:	dbec      	blt.n	9002b37e <__swhatbuf_r+0x12>
9002b3a4:	9901      	ldr	r1, [sp, #4]
9002b3a6:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
9002b3aa:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
9002b3ae:	4259      	negs	r1, r3
9002b3b0:	4159      	adcs	r1, r3
9002b3b2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
9002b3b6:	e7eb      	b.n	9002b390 <__swhatbuf_r+0x24>

9002b3b8 <__smakebuf_r>:
9002b3b8:	898b      	ldrh	r3, [r1, #12]
9002b3ba:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9002b3bc:	079d      	lsls	r5, r3, #30
9002b3be:	4606      	mov	r6, r0
9002b3c0:	460c      	mov	r4, r1
9002b3c2:	d507      	bpl.n	9002b3d4 <__smakebuf_r+0x1c>
9002b3c4:	f104 0347 	add.w	r3, r4, #71	@ 0x47
9002b3c8:	6023      	str	r3, [r4, #0]
9002b3ca:	6123      	str	r3, [r4, #16]
9002b3cc:	2301      	movs	r3, #1
9002b3ce:	6163      	str	r3, [r4, #20]
9002b3d0:	b003      	add	sp, #12
9002b3d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002b3d4:	ab01      	add	r3, sp, #4
9002b3d6:	466a      	mov	r2, sp
9002b3d8:	f7ff ffc8 	bl	9002b36c <__swhatbuf_r>
9002b3dc:	9f00      	ldr	r7, [sp, #0]
9002b3de:	4605      	mov	r5, r0
9002b3e0:	4639      	mov	r1, r7
9002b3e2:	4630      	mov	r0, r6
9002b3e4:	f7ff f80e 	bl	9002a404 <_malloc_r>
9002b3e8:	b948      	cbnz	r0, 9002b3fe <__smakebuf_r+0x46>
9002b3ea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002b3ee:	059a      	lsls	r2, r3, #22
9002b3f0:	d4ee      	bmi.n	9002b3d0 <__smakebuf_r+0x18>
9002b3f2:	f023 0303 	bic.w	r3, r3, #3
9002b3f6:	f043 0302 	orr.w	r3, r3, #2
9002b3fa:	81a3      	strh	r3, [r4, #12]
9002b3fc:	e7e2      	b.n	9002b3c4 <__smakebuf_r+0xc>
9002b3fe:	89a3      	ldrh	r3, [r4, #12]
9002b400:	6020      	str	r0, [r4, #0]
9002b402:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9002b406:	81a3      	strh	r3, [r4, #12]
9002b408:	9b01      	ldr	r3, [sp, #4]
9002b40a:	e9c4 0704 	strd	r0, r7, [r4, #16]
9002b40e:	b15b      	cbz	r3, 9002b428 <__smakebuf_r+0x70>
9002b410:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002b414:	4630      	mov	r0, r6
9002b416:	f000 f81d 	bl	9002b454 <_isatty_r>
9002b41a:	b128      	cbz	r0, 9002b428 <__smakebuf_r+0x70>
9002b41c:	89a3      	ldrh	r3, [r4, #12]
9002b41e:	f023 0303 	bic.w	r3, r3, #3
9002b422:	f043 0301 	orr.w	r3, r3, #1
9002b426:	81a3      	strh	r3, [r4, #12]
9002b428:	89a3      	ldrh	r3, [r4, #12]
9002b42a:	431d      	orrs	r5, r3
9002b42c:	81a5      	strh	r5, [r4, #12]
9002b42e:	e7cf      	b.n	9002b3d0 <__smakebuf_r+0x18>

9002b430 <_fstat_r>:
9002b430:	b538      	push	{r3, r4, r5, lr}
9002b432:	4d07      	ldr	r5, [pc, #28]	@ (9002b450 <_fstat_r+0x20>)
9002b434:	2300      	movs	r3, #0
9002b436:	4604      	mov	r4, r0
9002b438:	4608      	mov	r0, r1
9002b43a:	4611      	mov	r1, r2
9002b43c:	602b      	str	r3, [r5, #0]
9002b43e:	f7d9 f995 	bl	9000476c <_fstat>
9002b442:	1c43      	adds	r3, r0, #1
9002b444:	d102      	bne.n	9002b44c <_fstat_r+0x1c>
9002b446:	682b      	ldr	r3, [r5, #0]
9002b448:	b103      	cbz	r3, 9002b44c <_fstat_r+0x1c>
9002b44a:	6023      	str	r3, [r4, #0]
9002b44c:	bd38      	pop	{r3, r4, r5, pc}
9002b44e:	bf00      	nop
9002b450:	24022404 	.word	0x24022404

9002b454 <_isatty_r>:
9002b454:	b538      	push	{r3, r4, r5, lr}
9002b456:	4d06      	ldr	r5, [pc, #24]	@ (9002b470 <_isatty_r+0x1c>)
9002b458:	2300      	movs	r3, #0
9002b45a:	4604      	mov	r4, r0
9002b45c:	4608      	mov	r0, r1
9002b45e:	602b      	str	r3, [r5, #0]
9002b460:	f7d9 f98a 	bl	90004778 <_isatty>
9002b464:	1c43      	adds	r3, r0, #1
9002b466:	d102      	bne.n	9002b46e <_isatty_r+0x1a>
9002b468:	682b      	ldr	r3, [r5, #0]
9002b46a:	b103      	cbz	r3, 9002b46e <_isatty_r+0x1a>
9002b46c:	6023      	str	r3, [r4, #0]
9002b46e:	bd38      	pop	{r3, r4, r5, pc}
9002b470:	24022404 	.word	0x24022404

9002b474 <_init>:
9002b474:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002b476:	bf00      	nop
9002b478:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002b47a:	bc08      	pop	{r3}
9002b47c:	469e      	mov	lr, r3
9002b47e:	4770      	bx	lr

9002b480 <_fini>:
9002b480:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002b482:	bf00      	nop
9002b484:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002b486:	bc08      	pop	{r3}
9002b488:	469e      	mov	lr, r3
9002b48a:	4770      	bx	lr
